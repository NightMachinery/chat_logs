[00:05:38] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[00:05:58] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[00:06:21] *** Quits: phf-1 (~Pierre-He@2a01:cb19:837f:9b00:95fd:897f:e43c:f90a) (Ping timeout: 252 seconds)
[00:21:48] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[00:24:23] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[00:25:41] *** Joins: phf-1 (~Pierre-He@2a01:cb19:837f:9b00:95fd:897f:e43c:f90a)
[00:29:43] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[00:31:00] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[00:31:17] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[00:31:33] *** Joins: rgherdt (~rgherdt@port-92-195-125-72.dynamic.as20676.net)
[00:42:42] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[00:51:23] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:56:20] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[00:56:37] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[00:58:02] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[01:10:09] *** Quits: phf-1 (~Pierre-He@2a01:cb19:837f:9b00:95fd:897f:e43c:f90a) (Ping timeout: 252 seconds)
[01:12:32] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 272 seconds)
[01:20:11] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[01:21:40] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[01:21:57] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[01:43:42] *** Joins: badkins (~badkins@136.56.92.199)
[01:47:48] *** Quits: zwr (~zwr@2804:d45:b966:fb00:e8a7:8c67:601:f50b) (Ping timeout: 240 seconds)
[01:48:12] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[01:48:41] *** Joins: zwr (~zwr@2804:d45:b966:fb00:f2b3:3aeb:5464:99ac)
[02:12:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:15:25] *** Joins: badkins (~badkins@136.56.92.199)
[02:19:54] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:28:59] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[02:38:20] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 260 seconds)
[02:43:29] *** Joins: hashfunc1880 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[02:52:00] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[02:52:18] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[03:09:30] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[03:11:26] *** Joins: aeth (~aeth@user/aeth)
[03:19:04] *** Joins: seninha (~seninha@user/seninha)
[03:20:41] *** Joins: hhh92 (~hhhh92@2804:14d:78b1:54b6::1000)
[03:21:45] *** Joins: cromyr (~user@1.128.107.34)
[03:26:50] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[03:27:53] *** Quits: hhh92 (~hhhh92@2804:14d:78b1:54b6::1000) (Quit: Leaving)
[03:28:05] *** Joins: hhh92 (~hhhh92@2804:14d:78b1:54b6::1000)
[03:29:09] *** Quits: hhh92 (~hhhh92@2804:14d:78b1:54b6::1000) (Client Quit)
[03:36:57] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:39:28] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 272 seconds)
[03:40:30] *** Joins: hhhh92 (~Srain@187.3.223.220)
[03:50:56] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:52:21] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[03:52:38] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[04:00:34] *** Joins: biluga_felpucia (~hhhh92@2804:14d:78b1:54b6::1000)
[04:02:33] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 250 seconds)
[04:13:42] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[04:17:25] *** Quits: biluga_felpucia (~hhhh92@2804:14d:78b1:54b6::1000) (Quit: Leaving)
[04:17:42] *** Joins: biluga_felpucia (~hhhh92@2804:14d:78b1:54b6::1000)
[04:17:46] *** Quits: hhhh92 (~Srain@187.3.223.220) (Remote host closed the connection)
[04:25:28] *** Quits: daviid (~user@179.210.58.162) (Remote host closed the connection)
[04:25:47] *** Quits: biluga_felpucia (~hhhh92@2804:14d:78b1:54b6::1000) (Quit: Leaving)
[04:25:59] *** Joins: hhhh92 (~hhhh92@2804:14d:78b1:54b6::1000)
[04:32:23] *** Joins: daviid (~user@179.210.58.162)
[04:56:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[04:56:36] <seninha> The Scheme Programming Language, 4th edition is on R6RS. Isn't it?
[04:57:03] <seninha> Is there a newer edition on R7RS? If there isn't, what's the latest edition on R5RS?
[04:57:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:04:02] <edgar-rft> MIT says it uses R6RS -> https://mitpress.mit.edu/books/scheme-programming-language-fourth-edition
[05:10:34] *** Quits: cedb (~ced@user/ouestbillie) (Quit: WeeChat 3.4.1)
[05:15:02] *** Joins: cedb (~ced@user/ouestbillie)
[05:19:29] <seninha> I just found the third edition. It seems to use R5RS.
[05:20:03] *** Joins: zacque (~zacque@1.32.90.32)
[05:25:01] *** Joins: badkins (~badkins@136.56.92.199)
[05:26:00] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[05:26:08] *** Joins: badkins (~badkins@136.56.92.199)
[05:31:19] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:37:15] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[05:48:26] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[05:49:25] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[05:50:34] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 272 seconds)
[05:56:46] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:57:27] <Zipheir> I'd be very surprised if Dybvig ever wrote an R7RS version of TSPL.  Unless it is a future R7RS reconciled with R6...
[05:57:42] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[05:57:58] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[06:03:55] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[06:05:25] *** Joins: aeth (~aeth@user/aeth)
[06:08:01] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[06:08:18] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[06:20:11] <mdhughes> An R7RS-small version would be less capable, multiple chapters wouldn't be possible, so that's very unlikely. R7RS-large is years from done.
[06:37:24] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[06:42:33] <nytpu> isn't r7rs-small is a superset of r5rs (i.e. it's bigger), and the third edition sticks to r5rs just fine doesn't it?
[06:43:15] <nytpu> it'd be better to wait for r7rs-large before re-writing a full book anyways but it'll be a while at the current rate...
[06:48:40] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[06:51:25] *** Joins: irontom (~user@69.174.103.168)
[06:53:58] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Quit: jrincayc)
[06:59:33] <mdhughes> R7RS-small is bigger than R5RS, but it's much less than R6RS, and lost a lot of important functionality like records beyond a bare minimum, error handling, I/O, advanced macros, etc.
[07:11:24] *** Quits: daviid (~user@179.210.58.162) (Ping timeout: 240 seconds)
[07:19:02] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[07:31:54] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 272 seconds)
[07:34:54] *** Joins: daviid (~user@2804:18:5828:ffb1:e58d:dbce:f4f4:344f)
[07:38:01] *** Joins: badkins (~badkins@136.56.92.199)
[07:40:49] *** Quits: m1dnight (~christoph@78-22-9-5.access.telenet.be) (Ping timeout: 256 seconds)
[07:41:40] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[07:42:37] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[07:53:22] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[07:53:39] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[07:55:49] *** Joins: phf-1 (~Pierre-He@2a01:cb19:837f:9b00:95fd:897f:e43c:f90a)
[08:03:25] *** Quits: hashfunc1880 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[08:04:19] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[08:09:48] *** Joins: m455 (~m455@user/m455)
[08:11:10] *** Quits: irontom (~user@69.174.103.168) (Ping timeout: 272 seconds)
[08:13:42] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[08:14:03] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[08:15:57] <Zipheir> With some minor incompatibilities, R6 mostly fits within R7.  But lots of Scheme implementations provided and still provide sophisticated records, exceptions, etc..  It's not like anything was "lost".
[08:19:15] <Zipheir> My view is coming around to: there are language implementations without standards, and language specifications without running interpreters.  They're all valid ways to think about computation.
[08:22:41] *** Quits: hhhh92 (~hhhh92@2804:14d:78b1:54b6::1000) (Quit: Leaving)
[08:28:11] *** Joins: gproto23 (~gproto23@user/gproto23)
[08:28:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[08:29:59] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:31:14] <mdhughes> Other way around, R7 is a subset of R6, with some incompatible bits. So you'd have to teach R7's limited, repetitive records, and then "But if you have a more useful impl, here's a whole extra chapter on how that works".
[08:32:24] <mdhughes> Obviously you don't have to have a spec, if you only have one impl. And no-spec systems like Python can be imitated by IronPython, etc. to have most of the same features, bug-compatible.
[08:33:03] <mdhughes> But it's so much easier if you have a good spec, everyone implements as much of it as they can plus some unique features, so you have a reason to use each one.
[08:34:04] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[08:34:23] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[08:36:18] <mdhughes> Writing something useful on top of R6RS is pretty easy. You need to "cheat" (use non-spec features) for some command-line processing and FFI, but that's it. Doing that in R7RS-small is impossible. Adding a bunch of libraries may eventually get you there, but it's much uglier.
[08:57:32] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Remote host closed the connection)
[08:58:47] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[09:05:45] *** Quits: wingo (~wingo@li270-233.members.linode.com) (*.net *.split)
[09:05:45] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[09:05:48] *** Quits: epony (epony@user/epony) (*.net *.split)
[09:05:49] *** Quits: croc (quassel@2600:3c00::f03c:91ff:fe18:29d6) (*.net *.split)
[09:05:49] *** Quits: sudden (~cat@user/sudden) (*.net *.split)
[09:05:49] *** Quits: renormalist (~ss5@renormalist.net) (*.net *.split)
[09:05:49] *** Quits: koluacik (~koluacik@165.227.171.188) (*.net *.split)
[09:05:56] *** Joins: renormalist (~ss5@renormalist.net)
[09:06:01] *** Joins: croc (quassel@2600:3c00::f03c:91ff:fe18:29d6)
[09:06:09] *** Joins: sudden (~cat@user/sudden)
[09:06:14] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[09:08:45] *** Joins: koluacik (~koluacik@165.227.171.188)
[09:09:46] *** Joins: Guest6037 (epony@lz2.eu)
[09:09:57] *** Joins: wingo (~wingo@li270-233.members.linode.com)
[09:16:37] *** Joins: karlosz (~karlosz@47.151.136.69)
[09:17:54] <Zipheir> Well, as xkcd has it, there are a lot of good Scheme specs to choose from.
[09:20:48] <Zipheir> Languages with only an implementation and no spec. aside from that bit of practical operational semantics are really hard for anyone to make sense of.  But a language family without a formally-adopted, standardized spec. still makes sense to me.  But, anyway.
[09:22:42] <Zipheir> In any case, I hope all that bookkeeping doesn't distract us from the fun of computing.
[09:27:18] *** Quits: cromyr (~user@1.128.107.34) (Remote host closed the connection)
[09:38:47] *** Quits: daviid (~user@2804:18:5828:ffb1:e58d:dbce:f4f4:344f) (Ping timeout: 260 seconds)
[09:44:14] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[09:44:26] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[09:44:33] <sonny> what would I do to find out about avoiding the gc in scheme?
[09:44:43] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[09:45:26] <Zipheir> Profiling, probably.
[09:46:06] <Zipheir> Some implementations (CHICKEN, for one) give information about how many GC cycles occur during execution.
[09:47:09] <sonny> ok, I'm interested in what causes them. Is it usually very opaque?
[09:47:21] <sham1> The whole idea of the garbage collection system is that you don't need to worry about it
[09:47:51] <sonny> yeah, I know. I have some systems programming ideas related to scheme
[09:48:02] <sonny> so I just started thinking about this stuff
[09:48:33] <Zipheir> It's very tricky to reason about, unfortunately.
[09:49:25] <Zipheir> sonny: Yeah, "opaque" is a pretty good term for the details of GC operations.
[09:49:45] <sonny> understandable
[09:50:55] <Zipheir> It's funny, Sussman says in one of the SICP lectures that "a garbage collector has to be such a simple program that you can look at it and know it's correct, because nobody can debug a GC."  But I've never found a GC remotely that simple...
[09:53:42] <sonny> yeah
[09:53:55] <sonny> guess I will be looking at garbage collectors in scheme then
[09:54:09] <Zipheir> An old rule of thumb for generational GC performance is "don't make old objects point to new ones".
[09:55:00] <Zipheir> I don't know how accurate that is these days.
[09:57:53] <sham1> Well that is certainly a rule, since you'd then have to somehow know during the new generation collection that "this old thing also references this"
[09:59:54] <Zipheir> I mean, GCs obviously handle that situation correctly.  But it cuts against the generational optimization.
[10:00:26] <sham1> mmhm
[10:00:29] <Zipheir> Usually it arises through mutation, hence e.g. the argument against reverse! in Olin's comments on SRFI 1.
[10:01:19] <Zipheir> But maybe GC designs are different than they were in those days?  idk.
[10:03:04] <sonny> oh til Lisp 1.5 didn't allow cycles
[10:05:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[10:07:21] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:10:57] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[10:21:27] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Quit: WeeChat 3.0)
[10:23:48] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[10:27:47] *** Quits: phf-1 (~Pierre-He@2a01:cb19:837f:9b00:95fd:897f:e43c:f90a) (Ping timeout: 260 seconds)
[10:59:46] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[11:00:07] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[11:17:15] *** Joins: mdhughes_ (~mdhughes@user/mdhughes)
[11:20:08] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[11:20:13] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Ping timeout: 240 seconds)
[11:20:29] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[11:34:38] <amazigh> sonny: Chez allows to disable the gc temporarly
[11:34:44] <amazigh> if that is a problem
[11:35:10] <amazigh> it also display the number of time in ran inside (time exp ...)
[11:35:31] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[11:35:51] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[11:40:12] *** Joins: badkins (~badkins@136.56.92.199)
[11:43:41] *** Joins: civodul (~user@guix/contributor/civodul)
[11:44:47] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[11:46:27] <sonny> amazigh thanks for the tip
[11:46:44] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[11:49:46] *** Quits: DeeEff_ (~deeeff@user/deeeff) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Quit: Bridge terminating on SIGTERM)
[11:49:50] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Quit: Bridge terminating on SIGTERM)
[11:49:50] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Quit: Bridge terminating on SIGTERM)
[11:49:52] *** Quits: haugh[m] (~haugh@2001:470:69fc:105::1:805) (Quit: Bridge terminating on SIGTERM)
[11:49:53] *** Quits: Mrtn[m] (~mrtnm]@2001:470:69fc:105::1f44) (Quit: Bridge terminating on SIGTERM)
[11:53:23] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[11:56:53] *** Joins: Mrtn[m] (~mrtnm]@2001:470:69fc:105::1f44)
[11:56:53] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[11:56:53] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[11:56:53] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[11:56:53] *** Joins: haugh[m] (~haugh@2001:470:69fc:105::1:805)
[11:57:05] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[11:57:07] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[11:59:15] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:21e4:2d73:d9be:bf5c)
[12:19:29] *** mdhughes_ is now known as mdhughes
[12:25:52] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[12:26:08] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[12:36:11] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[12:36:31] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[13:10:06] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[13:11:31] *** Joins: aeth (~aeth@user/aeth)
[13:33:23] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:37:15] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 256 seconds)
[13:47:13] *** Joins: deltab (~deltab@user/deltab)
[14:06:53] *** Joins: daviid (~user@179.210.58.162)
[14:30:56] *** Quits: Guest6037 (epony@lz2.eu) (Quit: QUIT)
[14:36:32] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[14:36:46] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Quit: Returning to Simulacron-1)
[14:36:49] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[14:42:14] *** Joins: schulze (~schulze@dynamic-077-008-153-067.77.8.pool.telefonica.de)
[14:45:04] *** Joins: epony (epony@user/epony)
[14:49:15] *** Quits: epony (epony@user/epony) (Max SendQ exceeded)
[14:50:26] *** Joins: epony (epony@user/epony)
[14:51:52] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[14:52:10] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[14:59:13] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[15:01:14] *** Joins: X-Scale` (~ARM@140.218.137.78.rev.vodafone.pt)
[15:02:12] *** Quits: X-Scale (~ARM@80.199.137.78.rev.vodafone.pt) (Ping timeout: 272 seconds)
[15:02:13] *** X-Scale` is now known as X-Scale
[15:02:13] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[15:02:31] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[15:13:23] *** Joins: seninha (~seninha@user/seninha)
[15:15:16] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:21e4:2d73:d9be:bf5c) (Ping timeout: 250 seconds)
[15:16:43] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[15:22:31] *** Joins: lisper29 (~vibs29``@84-105-244-73.cable.dynamic.v4.ziggo.nl)
[15:30:27] *** Quits: m1dnight (~christoph@78-22-9-5.access.telenet.be) (Quit: WeeChat 3.4.1)
[15:30:48] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[15:34:52] *** Quits: lisper29 (~vibs29``@84-105-244-73.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[15:35:01] *** Quits: Mrtn[m] (~mrtnm]@2001:470:69fc:105::1f44) (Quit: User was banned)
[15:35:01] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: User was banned)
[15:35:03] *** Quits: DeeEff_ (~deeeff@user/deeeff) (Quit: User was banned)
[15:35:25] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: User was banned)
[15:35:28] *** Quits: haugh[m] (~haugh@2001:470:69fc:105::1:805) (Quit: User was banned)
[15:35:46] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Quit: User was banned)
[15:35:49] <amazigh> that is something.
[15:35:58] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Quit: User was banned)
[15:35:58] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Quit: User was banned)
[15:35:58] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[15:36:04] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[15:36:19] *** Joins: Mrtn[m] (~mrtnm]@2001:470:69fc:105::1f44)
[15:36:32] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:36:49] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[15:37:01] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[15:37:17] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[15:37:32] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[15:37:46] *** Joins: haugh[m] (~haugh@2001:470:69fc:105::1:805)
[15:37:49] *** Quits: DeeEff_ (~deeeff@user/deeeff) (Client Quit)
[15:37:49] *** Quits: Mrtn[m] (~mrtnm]@2001:470:69fc:105::1f44) (Client Quit)
[15:37:49] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Client Quit)
[15:37:49] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Client Quit)
[15:37:49] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Client Quit)
[15:37:49] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Client Quit)
[15:37:49] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Client Quit)
[15:37:49] *** Quits: haugh[m] (~haugh@2001:470:69fc:105::1:805) (Client Quit)
[15:42:04] *** Joins: badkins (~badkins@136.56.92.199)
[15:42:34] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[15:42:51] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[15:46:12] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[15:49:08] *** Joins: epony (epony@user/epony)
[15:50:44] *** Quits: webshinra_ (~shinra@lfbn-idf3-1-429-113.w83-114.abo.wanadoo.fr) (Remote host closed the connection)
[15:53:44] *** Joins: webshinra (~shinra@2a01cb080779fc00b3436da62fafc69e.ipv6.abo.wanadoo.fr)
[15:53:53] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Remote host closed the connection)
[15:54:17] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[16:04:53] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:07:06] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[16:37:55] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 246 seconds)
[16:39:11] *** Quits: zacque (~zacque@1.32.90.32) (Quit: Goodbye :D)
[16:39:59] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:40:26] *** Joins: badkins (~badkins@136.56.92.199)
[16:44:34] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 246 seconds)
[16:56:08] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 260 seconds)
[16:56:38] *** Joins: seninha (~seninha@user/seninha)
[16:59:54] *** Joins: badkins (~badkins@136.56.92.199)
[17:02:54] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[17:03:15] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[17:04:27] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[17:18:38] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[17:21:24] *** Quits: X-Scale (~ARM@140.218.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[17:22:13] *** Joins: X-Scale` (~ARM@89.214.146.40)
[17:22:21] *** Joins: Mrtn[m] (~mrtnm]@2001:470:69fc:105::1f44)
[17:22:21] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[17:22:21] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[17:22:21] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[17:22:21] *** Joins: haugh[m] (~haugh@2001:470:69fc:105::1:805)
[17:22:35] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[17:22:35] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[17:22:55] *** X-Scale` is now known as X-Scale
[17:50:22] *** Joins: s-liao (~s-liao@101.86.164.158)
[17:56:28] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 250 seconds)
[18:13:16] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[18:13:32] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[18:19:23] *** Quits: rx80 (~quassel@user/rx80) ()
[18:21:34] *** Joins: rx80 (~quassel@user/rx80)
[18:22:46] *** Joins: s-liao (~s-liao@101.86.164.158)
[18:29:01] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[18:33:35] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[18:33:52] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[18:46:21] *** Quits: madage (~madage@user/madage) (Quit: leaving)
[18:50:14] *** Joins: madage (~madage@user/madage)
[19:01:15] *** Joins: badkins (~badkins@136.56.92.199)
[19:08:55] <Franciman> is there any active scheme implementation targetting the jvm?
[19:10:20] <dpk> Kawa
[19:15:16] <tokie> Franciman: https://lololo.lol/3n
[19:21:51] *** Joins: Darkcoal (~user@user/Darkcoal)
[19:30:12] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[19:32:36] *** Joins: Darkcoal (~user@user/Darkcoal)
[19:41:30] <tokie> i ended up having to implement readline in typescript
[19:46:21] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[20:15:44] *** Joins: lazr (~lazr@45.76.248.123)
[20:18:58] *** Joins: mnieper (~user@ipbcc1ad82.dynamic.kabel-deutschland.de)
[20:26:07] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:38:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[20:40:13] <amazigh> clojure
[20:40:36] <amazigh> }:o)
[20:40:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:45:14] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[20:48:55] *** Quits: madsy (~madsy@223.239.164.82.customer.cdi.no) (Quit: madsy)
[20:49:15] *** Joins: madsy (~madsy@223.239.164.82.customer.cdi.no)
[20:49:24] <Franciman> tokie: HI!
[20:49:26] <Franciman> so nice
[20:49:34] <Franciman> lol you implemented readline! kudos
[20:50:00] <Franciman> tokie: this game is rad
[20:51:06] <Franciman> wow you also implemented call/cc
[20:51:09] <Franciman> impressive
[20:52:29] <tokie> call/cc ended up being very simple
[20:52:36] <tokie> way more simple than syntax-rules ...
[20:52:44] <Franciman> that one is pure violence
[20:55:14] <Franciman> now that i finished my exams, I'm pondering whether to continue my scheme
[20:55:19] <Franciman> or my standard ml
[20:55:25] <Franciman> i don't know really x.x
[20:56:51] *** Joins: karlosz (~karlosz@47.151.136.69)
[20:57:04] <tokie> scheme is probably way easier, lol
[20:57:22] <tokie> my SO ended up getting a job so he stopped working on his ml/rust-like-language 
[20:58:38] *** Joins: karlosz_ (~karlosz@47.151.136.69)
[20:58:49] <tokie> i'm trying to work on an optimization where i don't allocate a lexical environment if a procedure doesn't have any free variables, but it also requires scanning for set! 
[20:59:07] <tokie> or i have to allow set! to modify an argument on the stack 
[21:02:17] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 260 seconds)
[21:02:18] *** karlosz_ is now known as karlosz
[21:02:51] *** Quits: karlosz (~karlosz@47.151.136.69) (Client Quit)
[21:10:45] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:13:41] *** Quits: karlosz (~karlosz@47.151.136.69) (Client Quit)
[21:18:22] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:19:21] <theseb> is this wrong?  i always viewed scheme..or at least a 'minimal scheme'...as essentially the intermediate code a compiler generates from a program....I view it was what you get when you strip all the syntactic sugar from a program and just have the bare bones essence
[21:21:30] <Zipheir> Scheme is definitely a language, not an abstract representation of one.
[21:22:03] <Zipheir> theseb: Maybe you're thinking of the story of how S-expressions were originally an internal representation?
[21:23:57] <Franciman> tokie: oh you're signing up for escape analysis 
[21:24:03] <Franciman> embrace hell!
[21:24:32] <Zipheir> tokie: You may want to look at Olin Shivers's dissertation, Taming Lambda.
[21:25:41] <Zipheir> https://arxiv.org/pdf/1311.4733
[21:26:47] <Zipheir> Oops, that's not the paper.  https://dl.acm.org/doi/10.5555/124950  I can't seem to find a $0 PDF, unfortunately.
[21:35:11] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:39:50] <sham1> That's odd
[21:41:47] <sham1> Seems to not be digital at all. I can't download it even through university vpn
[21:42:18] <Franciman> i'm trying to learn about filinski control operators
[21:42:23] <Franciman> i enjoy his work
[21:43:00] <nytpu> literally the first result on google: http://www.ccs.neu.edu/home/shivers/papers/diss.pdf
[21:43:28] <sham1> Hum
[21:43:32] <theseb> Zipheir: let me try it this way...do you agree lisps make good "abstract syntax tree languages"?
[21:43:43] <sham1> What does that even mean
[21:44:36] <Zipheir> nytpu: Google magic, I guess.
[21:45:01] <Zipheir> theseb: Yeah, I don't understand that.
[21:45:15] <sham1> Didn't even think about googling it. I usually look at other sources first
[21:45:28] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b8d6:aaba:d42d:fbd1)
[21:45:28] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b8d6:aaba:d42d:fbd1) (Changing host)
[21:45:28] *** Joins: skapata (~Skapata@user/skapata)
[21:45:28] <theseb> Zipheir: when you compile, say python, to an AST....i'm guessing you'll convert it to a bunch of s-exprs?  That's all I mean
[21:45:52] <Zipheir> theseb: "Abstract" to me means more abstract than s-exprs.
[21:46:12] <theseb> Zipheir: can you elaborate?
[21:46:20] <theseb> Zipheir: maybe my def of AST is wrong
[21:46:54] <Zipheir> theseb: I think AST is a little too vague.  Think of the abstract representation of a language as a type, or data structure.
[21:47:25] <Zipheir> So e.g. the program "2 + 3" might have the abstract repr. (add-expr (const-expr 2) (const-expr 3))
[21:47:59] <Zipheir> (That's not a literal list, but a Scheme value.)
[21:48:12] <theseb> Zipheir: does AST = what you call 'abstract representation' ?
[21:48:14] <nytpu> theseb: typically AST's are tokenized and aren't string-based at all. for instance: https://craftinginterpreters.com/scanning.html
[21:48:23] <Zipheir> theseb: Yes.
[21:48:44] <Zipheir> theseb: I think the "Syntax" part of "Abstract Syntax Tree" may be misleading...
[21:49:27] <Zipheir> theseb: But abstract representations of a language can really be anything.  They're usually values in the implementation language of the interpreter/translator because those are the easiest things to program with.
[21:50:08] <Zipheir> theseb: I recommend Friedman & Wand's Essentials of Programming Languages, BTW.  They explain this better than I do.
[21:50:38] <Zipheir> (Or Wadler's plfa.github.io, if you're ready for the deep end.)
[21:53:01] <Zipheir> theseb: One more attempt: An abstract tree of a program is a structure-preserving model of that program that can be easily manipulated by a program, probably an interpreter or translator.
[21:54:39] <nytpu> Zipheir: so it would be correct to say that both lisp source text and an abstract tree share the property of being easily manipulated programatically, but lisp source != an abstract tree in itself
[21:54:43] <Zipheir> theseb: Could that be an S-exp?  Sure, but now your interpreter/compiler needs to understand S-exps to manipulate it, so you need another interpreter....  The value representation is just the simplest one.
[21:55:00] <nytpu> s/it would/would it/
[21:56:37] <Zipheir> nytpu: I think so.  As I said, the *value* representation, the abstract tree structure, is just the most natural thing to manipulate, because programs manipulate values.
[21:57:30] <theseb> Zipheir: let me come clean...for a side project...i wanted to write a compiler for a subset of Python...here's what i did ..1. Convert Python subset to Lisp code, 2. Write a Lisp interpreter in assembly.....that seems like a legit way to write a compiler for my little mini-Python language? please say yes
[21:57:32] <theseb> ;)
[21:57:47] <Zipheir> But sure, you could use '(add-expr (const-expr 2) (const-expr 3)) as the internal representation; then you'd be recursing on syntax, as opposed to datatypes.
[21:57:47] <ChoHag> It's not an abstract tree, it's a real tree of abstract syntactic "thingies" (as opposed to the concrete source).
[21:58:55] <Zipheir> theseb: Sounds like a lot of work, but fun. :)
[21:59:25] <Zipheir> theseb: I really recommend you check out Essentials of Programming Languages or a similar book before embarking on it.
[22:00:21] <theseb> Zipheir: i'm almost done ;).....please excuse my ignorance but i never took a compiler class and it was the only way i could see to do a compiler
[22:00:29] <Zipheir> ChoHag: We end up dealing with a lot of different levels of "abstractness"...
[22:00:32] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:00:54] <theseb> Zipheir: i could have read compiler books but i already loved lisp to death so my (crazy?) way seems attractive
[22:01:14] <Zipheir> theseb: Great, I'm not trying to discourage you :)
[22:01:17] <theseb> Zipheir: plus i avoided needed to read the "right way" to do it but made my own trail
[22:01:35] <mdhughes> Now you can just throw out the Python parts and code in Scheme, and have one less step.
[22:01:36] <nytpu> i liked crafting interpreters (that i linked earlier) but it doesn't go as in-depth as it could (sticks to interpreting and doesn't go into compiling, for instance)
[22:01:38] <theseb> Zipheir: i'm just insecure because i'm already i did something dumb since i lack the formal training
[22:01:54] <Zipheir> Maybe finish the project, read a programming languages book, then revise it, I dunno.
[22:02:05] <ChoHag> I tried reading the compiler books but I didn't find them particularly helpful.
[22:02:10] <Zipheir> nytpu: They're different things.
[22:02:38] <sham1> Well compiling isn't all that different from interpreting. It's just that you output some kind of a representation of the program (usually of a lower abstraction level) as opposed to running the program there and then
[22:02:39] <theseb> Zipheir: that's not a bad idea...no one says you can't create a ver2.0 after you release ver1.0
[22:02:53] <sham1> Both are depth-first tree traversals, at least when you do ASTs
[22:02:54] <Zipheir> nytpu: An interpreter is an operational semantics for a language; a compiler is a denotational semantics.  (Riastradh's view in a nutshell)
[22:03:05] <theseb> Zipheir: ver1 "It Works!"...ver2 "It works Right!"
[22:03:17] <sham1> ver3 "It works Right and Fast!"
[22:03:24] <ChoHag> ver3 "NOW it works right! ... I think."
[22:03:24] <Zipheir> theseb: Sure!
[22:03:41] <theseb> sham1: i hear you but optimization is so .....practical.....and painful to worry about
[22:03:58] <theseb> sham1: plus the prophet Knuth said "premature optimization is the root of all evil"
[22:04:00] <Zipheir> Optimization is the *last* thing to worry about, IMHO.
[22:04:15] <Zipheir> theseb: I continue to learn the truth of those words...
[22:04:24] <sham1> theseb: that quote is quoted too much
[22:04:58] <Zipheir> Multi-level quoting.
[22:05:00] <sham1> And often without the surrounding context
[22:05:09] <sham1> Zipheir: quosiquote
[22:05:27] <ChoHag> Remember that Knuth didn't say that in regard to the computers that are being built today but those of his own time.
[22:05:34] <ChoHag> ie. Already, then, they were fast enough.
[22:05:55] <Zipheir> `(nested quasiquote is the root of all ,noun)
[22:06:32] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[22:06:34] <Zipheir> ChoHag: Yes.
[22:07:52] <Zipheir> It's more like there's a cult of performance among programmers, and sometimes *everything* gets sacrificed to it.
[22:08:16] <sham1> Speaking of quasiquotation, when was <qq template 0> production added to R7RS-small spec
[22:08:21] <sham1> I don't recall it being there
[22:09:18] <sham1> Like, it's good that the semantic is properly specified even though it's implicitly obvious what one is supposed to do when D = 0, but still, that's good
[22:09:41] <ChoHag> Performance is right.
[22:09:58] <Zipheir> sham1: Interesting.
[22:10:16] <sham1> Maybe I was just blind the last time I looked at it, because it apparently is also in the R5RS spec
[22:11:00] <theseb> ChoHag: i doubt anyone here will disagree with you and say making your program fast is "wrong"
[22:11:51] <sham1> Doing it at all cost is wrong
[22:12:02] <sham1> Unless your situation is very, very specific
[22:12:47] <Zipheir> "Correctness is clearly the prime quality.  If a system does not do what it's supposed to, than little else about it matters."
[22:13:22] <Zipheir> Programmers pay lip service to that Bertrand Meyer line, but I suspect they're secretly laughing...
[22:13:25] <sham1> A program can always be optimised by a sufficiently smart compiler™
[22:13:53] *** Joins: badkins (~badkins@136.56.92.199)
[22:18:12] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[22:31:02] *** Quits: atka (~atka@static-198-54-131-84.cust.tzulo.com) (Quit: WeeChat 3.4)
[22:33:53] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[22:34:11] *** Joins: atka (~atka@static-198-54-131-84.cust.tzulo.com)
[22:35:13] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[22:42:38] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[22:44:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:46:15] *** Quits: f8l (~f8l@37.228.213.3) (Quit: update)
[22:52:23] *** Joins: f8l (~f8l@37.228.213.3)
[23:23:07] <tokie> Zipheir: thanks! i'll see if i can find a copy of the paper
[23:24:34] <Zipheir> tokie: No problem, nytpu just posted a link to it http://www.ccs.neu.edu/home/shivers/papers/diss.pdf
[23:41:44] *** Quits: mala (~mala@user/malaclyps) (Quit: ZNC 1.6.1 - http://znc.in)
[23:42:29] *** Joins: mala (~mala@user/malaclyps)
[23:45:58] *** Quits: schulze (~schulze@dynamic-077-008-153-067.77.8.pool.telefonica.de) (Ping timeout: 272 seconds)
