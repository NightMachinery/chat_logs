[00:01:24] *** Quits: Gamara (~Gamara@2607:fea8:1e5f:8df0:b4e2:c222:f377:3041) (Quit: Client closed)
[00:01:27] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b) (Ping timeout: 268 seconds)
[00:06:51] *** Quits: guidoc (~guido@host-79-37-45-116.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[00:16:11] *** Quits: Junxter (~Junxter@222.95.222.185) (Ping timeout: 265 seconds)
[00:17:04] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[00:32:41] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:b867:12ff:ff2a:b25f)
[00:37:10] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 240 seconds)
[00:41:22] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 260 seconds)
[00:42:01] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Read error: Connection reset by peer)
[00:42:34] *** Joins: impliednude (~impliednu@172.56.42.130)
[00:42:59] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[00:43:48] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[00:47:14] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[00:50:20] <impliednude> I have two array's as variables. one is $allowed = ['a', 'b', 'c'] the other is $all = ['r' => 1, 'b' => 2, 'y' => 3, 'g' => 4]; how do I check $all to see if a value from $allowed is present? I tried array_intersect but its coming back 0
[00:50:55] *** LxGHTNxNG is now known as xLightningx
[00:51:48] <impliednude> I basically just need when I var_dump to get all values that are present in both
[00:55:10] <Sammitch> is $allowed a list of allowed _keys_?
[00:55:47] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[00:56:59] <impliednude> yep
[00:57:19] <impliednude> erm index's.
[00:57:38] *** Quits: magla (~gelignite@55d43f3e.access.ecotel.net) (Quit: Stay safe!)
[00:58:04] <impliednude> but yes
[00:58:36] <Sammitch> https://3v4l.org/P4o9S
[01:00:59] *** Joins: junktext (~junktext@77.247.181.215)
[01:08:31] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[01:09:33] *** Joins: mysteryhunter (~Mysteryhu@2001:4bb8:2ea:f49a:98d7:161d:674f:3162)
[01:09:37] *** Parts: mysteryhunter (~Mysteryhu@2001:4bb8:2ea:f49a:98d7:161d:674f:3162) (Leaving)
[01:10:29] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:b867:12ff:ff2a:b25f) (Read error: Connection reset by peer)
[01:18:32] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b)
[01:23:19] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b) (Ping timeout: 252 seconds)
[01:31:47] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:39:30] *** Joins: brentaarnold_ (~brentaarn@24.112.61.90)
[01:40:20] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 268 seconds)
[01:40:20] *** brentaarnold_ is now known as brentaarnold
[01:49:02] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 260 seconds)
[01:54:42] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[02:05:47] *** Joins: Gamara (~Gamara@2607:fea8:1e5f:8df0:b4e2:c222:f377:3041)
[02:07:23] <Gamara> Hey can anyone help me I am having problems  I want to start a php-cli docker image to run a server, and a php-apache server to run the front end using docker-compose but I cant get it to run the server code https://imgur.com/a/lZAKZsm
[02:07:44] *** Quits: lall- (~alek@2001:44c8:44c2:d82c:4045:15bb:939a:38b0) (Quit: 42)
[02:08:33] <Gamara> well run the docker file for the php-cli
[02:20:10] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[02:27:37] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[02:31:24] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[02:32:44] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[02:32:46] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[02:34:42] *** Quits: Pricey (~pricey@libera/staff/pricey) (Ping timeout: 600 seconds)
[02:38:37] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[02:39:04] <Blondie101010> Gamara:  nothing you said involves PHP...  what error are you getting?
[02:51:11] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[02:52:16] *** Quits: brentaarnold (~brentaarn@24.112.61.90) (Ping timeout: 268 seconds)
[02:52:49] <Byteflux> I assume php-cli is for a development server of the backend, but php-apache for the frontend makes no sense to me. Your frontend would presumably just be JavaScript/HTML/CSS, for which you only need a static file server
[02:55:39] <Byteflux> But also "can't run the server code" is vague. We can see that the PHP process that tries to run server.php is exiting with a non-failure status code. So the answer probably depends on what `server.php` contains.
[02:56:31] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2.1)
[02:57:42] <Blondie101010> they're not giving an error message, so we're stuck assuming
[02:58:01] <Blondie101010> based on that fact, my first assumption is that the container has issues
[02:58:45] <Blondie101010> but if the problem is with the code, troubleshoot it without docker
[02:59:12] <Byteflux> The php-cli container is starting PHP as an interactive shell, which is probably not intentional
[02:59:49] <Byteflux> server.php is likely either a router script (meant for `php -S`) or an actual application server (like ReactPHP, Swoole, or something)
[03:01:50] <Blondie101010> sure, so a docker issue not calling the right thing
[03:02:27] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[03:02:49] <Blondie101010> I expect a websockets server or similar
[03:03:02] <Blondie101010> not sure why they'd need *another* web server though
[03:04:13] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[03:04:23] *** Quits: junktext (~junktext@77.247.181.215) (Ping timeout: 265 seconds)
[03:05:09] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[03:09:37] *** Joins: semeion (~semeion@user/semeion)
[03:14:26] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Read error: Connection reset by peer)
[03:14:51] *** Joins: brentaarnold (~brentaarn@24.112.61.90)
[03:19:19] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Remote host closed the connection)
[03:20:53] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:40:48] <Sammitch> either ./server isn't what you think it is, or do what you think it does, or it's an issue with your docker config
[03:41:44] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[03:41:58] <NCS_One> hi
[03:42:55] <NCS_One> with PHPUnit is there a way to stop it from showing the compared strings on assertStringContainsString()?
[03:43:28] <__adrian> all of the assertion emthods have a final argument $message
[03:43:32] <__adrian> *methods
[03:45:40] <NCS_One> __adrian: yes, but it still shows `Failed asserting that 'foo' contains "bar".`
[03:47:09] <NCS_One> for me it is a problem because it is a large string
[03:48:40] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:50:02] <Cheez> can your fixtures not use a smaller string for that test?
[03:54:53] * __adrian shrugs
[03:55:09] <__adrian> unexpected. ask on a phpunit forum/channel
[04:00:26] <NCS_One> Cheez: no
[04:02:53] <NCS_One> ok, seems the only way is to do the assert in a try catch block
[04:10:24] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:18:05] *** Joins: ferdna (~ferdna@user/ferdna)
[04:22:09] <__adrian> at that point you might as well just throw your own exception
[04:31:09] *** Joins: undefined_bob1 (~undefined@user/undefined-bob/x-5411918)
[04:32:31] *** Quits: brentaarnold (~brentaarn@24.112.61.90) (Ping timeout: 252 seconds)
[04:34:39] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Ping timeout: 276 seconds)
[04:38:36] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[04:46:37] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b)
[04:51:54] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b) (Ping timeout: 268 seconds)
[05:00:06] *** Joins: brentaarnold (~brentaarn@24.112.61.90)
[05:02:43] *** Quits: pmercado (~pmercado@186.107.55.118) (Ping timeout: 252 seconds)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:09] *** Joins: Hiccup (cHoy@2404:8000:1003:14fe::510)
[05:31:56] *** Joins: Poboy (~Poboy@user/poboy)
[05:35:15] *** Joins: vlm (~vlm@user/vlm)
[05:40:09] *** Quits: Gamara (~Gamara@2607:fea8:1e5f:8df0:b4e2:c222:f377:3041) (Ping timeout: 256 seconds)
[05:57:12] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[06:30:17] *** Quits: brentaarnold (~brentaarn@24.112.61.90) (Ping timeout: 265 seconds)
[06:34:17] *** Joins: junktext (~junktext@109.201.152.175)
[06:42:19] *** Joins: Rockwood (~Rocky@user/rocky)
[06:45:17] *** Joins: Junxter (~Junxter@222.95.222.185)
[06:46:46] *** Quits: junktext (~junktext@109.201.152.175) (Ping timeout: 260 seconds)
[06:50:42] *** Joins: gamara (~gamara@2607:fea8:1e5f:8df0:3ccf:964b:9350:5fcd)
[07:03:36] *** Joins: Poboy (~Poboy@user/poboy)
[07:03:36] *** Joins: Gamara25 (~Gamara@2607:fea8:1e5f:8df0:3ccf:964b:9350:5fcd)
[07:10:34] *** Parts: Gamara25 (~Gamara@2607:fea8:1e5f:8df0:3ccf:964b:9350:5fcd) ()
[07:10:53] *** Joins: Gamara25 (~Gamara@2607:fea8:1e5f:8df0:3ccf:964b:9350:5fcd)
[07:11:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[07:12:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:13:02] <Gamara25> Hey so I have a php front end running on apache what is the best way to integrate javascript or typescript with ES6 modules and packages etc
[07:16:17] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[07:22:44] <Rockwood> php front <-- are you sure about this comment?
[07:23:02] <Rockwood> php is backend's
[07:35:07] <gamara> I mean its server side rendered
[07:35:18] <gamara> I know php is backend
[07:35:41] <Rockwood> by script tag you can use JS stuff
[07:36:09] <gamara> yeah I figured but how would I integrate webpack just use it to bundle then just import it into the html like normal
[07:37:57] <gamara> i guess I am just overthinking it I probably just need to npm init then just package everything with a bundler then just load it
[07:38:02] <gamara> where I need it in the different routes
[07:38:07] <gamara> right?
[07:38:25] <gamara> I just wanted to know if there was a standard practice really
[07:38:36] <Rockwood> https://stackoverflow.com/questions/43436754/using-webpack-with-an-existing-php-and-js-project
[07:39:57] <Rockwood> first of you have install stuff
[07:40:03] <Rockwood> first of you 2 have install stuff
[07:40:12] <Rockwood> like node
[07:40:28] <gamara> thanks so much for the help rockwood
[07:40:30] <gamara> you are awesome
[07:40:38] <Rockwood> np
[07:40:43] <Rockwood> me too noob :D
[07:40:48] <gamara> but that makes sense I might just use gulp and make individual js files for each route
[07:40:52] <gamara> or do you think that sounds dumb
[07:41:16] <Rockwood> or ..
[07:41:30] <Rockwood> you can make route in both
[07:41:39] <Rockwood> in PHP and in JS too
[07:45:43] <Rockwood> http://www.php-js.com/ i got something
[07:47:44] <Rockwood> any reason behind use PHP?
[07:48:15] <Rockwood> its for learning purpose or for client requirement
[07:51:11] <gamara> Its part of the hackathonI am doing
[07:51:19] <gamara> they ask for it to be built in php
[07:55:09] <Rockwood> ok
[07:55:14] <Rockwood> PHP also good
[07:55:48] <Gamara25> Idk I just started learning it yesterday
[07:55:50] <Gamara25> seems weird
[07:56:08] <Gamara25> but also interesting
[07:56:32] <Rockwood> PHP is good enough
[08:05:30] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[08:18:42] <Gamara25> I suppose that is a good endorsement as any
[08:18:49] <Gamara25> have a nice night rockwood and thanks again
[08:18:53] *** Quits: Gamara25 (~Gamara@2607:fea8:1e5f:8df0:3ccf:964b:9350:5fcd) (Quit: Client closed)
[08:19:06] *** Joins: pmercado (~pmercado@186.107.55.118)
[08:19:07] <Rockwood> here just morning started
[08:19:09] <Rockwood> np
[08:19:12] <Rockwood> enjoy
[08:20:24] <gamara> well when it becomes night lol enjoy it I guess
[08:20:34] *** Quits: gamara (~gamara@2607:fea8:1e5f:8df0:3ccf:964b:9350:5fcd) (Quit: Client closed)
[08:20:48] <Rockwood> \o
[08:29:07] *** Joins: guidoc (~guido@host-79-13-252-27.retail.telecomitalia.it)
[08:48:18] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b)
[08:53:14] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b) (Ping timeout: 268 seconds)
[09:02:00] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[09:03:46] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:07:30] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:20:26] *** Joins: funhouse (~funhouse@user/funhouse)
[09:31:05] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:31:20] *** Joins: semeion (~semeion@user/semeion)
[09:35:53] *** Quits: funhouse (~funhouse@user/funhouse) (Ping timeout: 256 seconds)
[09:42:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[09:51:36] *** Joins: sagax (~sagax_nb@user/sagax)
[09:55:29] *** Quits: guidoc (~guido@host-79-13-252-27.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[09:56:17] *** Joins: guidoc (~guido@host-79-13-252-27.retail.telecomitalia.it)
[10:00:12] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:17:38] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[10:35:29] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b)
[10:35:41] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b) (Remote host closed the connection)
[10:36:10] *** undefined_bob1 is now known as undefined_bob
[10:40:25] *** Quits: guidoc (~guido@host-79-13-252-27.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[10:44:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:51:14] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b)
[10:55:52] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b952:c829:152c:239b) (Ping timeout: 252 seconds)
[11:05:50] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:09:01] *** Quits: pmercado (~pmercado@186.107.55.118) (Ping timeout: 252 seconds)
[11:11:10] *** Joins: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:15:40] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[11:22:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:51:03] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[11:57:11] *** Quits: mr_gant (~mr_gant@144.48.37.132) (Remote host closed the connection)
[11:58:26] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[11:58:41] <ash_worksi> okay so I officially don't get this: https://www.php.net/manual/en/pdo.errorinfo
[11:59:10] <ash_worksi> example #1 says: Displaying errorInfo() fields for a PDO_ODBC connection to a DB2 database
[11:59:24] *** Joins: mr_gant (~mr_gant@144.48.37.132)
[11:59:48] <ash_worksi> I would think that a PDO_ODBC connection uses PDO; and the example itself says `$dbh->prepare(...)`
[12:00:15] <ash_worksi> the info above that says: If you create a PDOStatement object through PDO::prepare() or PDO::query() and invoke an error on the statement handle, PDO::errorInfo() will not reflect the error from the statement handle.
[12:00:33] <ash_worksi> so.... what the heck is $dbh then?
[12:00:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:00:55] <Naktibalda> instance of PDO
[12:01:23] <ash_worksi> okay, so... I am confused. What exactly is the above saying?
[12:01:51] <ash_worksi> I mean, if $dbh is an instance of PDO, then isn't $stmt an instance of PDOStatement?
[12:02:04] <Naktibalda> yes, that's right
[12:02:15] <Naktibalda> it is saying to you "You must call PDOStatement::errorInfo() to return the error information for an operation performed on a particular statement handle. "
[12:02:47] <AllenJB> I believe the example works because the error occurs at the ->prepare() stage, and no Statement handle is produced. If the error occurred at the ->execute() stage then errorInfo() on $dbh would not return the error, you would have to call it on the statement handle ($stmt)
[12:03:15] <ash_worksi> AllenJB: I would think that too, except it conflicts with my local results as well as the info above
[12:03:31] <ash_worksi> er wait
[12:03:53] <Naktibalda> if you have no Statement, you can't call errorInfo() of statement
[12:03:53] <ash_worksi> I guess it doesn't if "invoke an error on the statement handle" means what AllenJB just said
[12:04:11] <ash_worksi> Naktibalda: yes, well, the example has a statment
[12:04:18] <ash_worksi> statement*
[12:04:33] <Naktibalda> no, in example #1 $stmt is FALSE
[12:05:31] <ash_worksi> hmm
[12:05:49] <Naktibalda> set PDO::ERROR_MODE to EXCEPTION to avoid that
[12:06:14] <ash_worksi> oh?
[12:06:33] <Naktibalda> https://phpdelusions.net/pdo#errors
[12:06:38] <ash_worksi> I was going to lookup ATTR_EMULATE_PREPARES but I suppose ERROR_MODE is better
[12:07:49] <ash_worksi> Naktibalda: thanks
[12:10:39] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[12:13:05] <ash_worksi> I don't really fully comprehend the concept of EMULATE_PREPARES
[12:13:29] *** Parts: Bushdog (~Goondog@user/bushmaster) (Leaving)
[12:14:51] <grawity> that's finally the default in 8.0, isn't it
[12:15:27] *** Joins: brentaarnold (~brentaarn@24.112.61.90)
[12:22:13] <Naktibalda> ash_worksi: emulation doesn't use native prepared statements, it creates SQL from the string you gave and parameters. It was meant to be used for compatibility with RDBMes that don't have prepared statements
[12:22:41] <AllenJB> PDO's default error mode in 8.0+ is exceptions, yes
[12:24:27] <ash_worksi> Naktibalda: so, one should only ever really set that to true if their database doesn't support prepared statements.... which is... nothing now-a-days?
[12:25:11] <TinoDidriksen> You should always set it to false. It will fall back to true if needed.
[12:25:46] <ash_worksi> TinoDidriksen: why was this ever an option if it should always be false?
[12:26:08] <ash_worksi> TinoDidriksen: because once upon a time, there was such a need?
[12:26:29] <TinoDidriksen> Once upon a time, yeah. Ages ago.
[12:28:37] <AllenJB> There's a performance argument too, due to only needing 1 instruction instead of 2 to the DB server - but that's premature optimization in like 99% of cases and comes at the cost of relying on PHP to perform query parsing & escaping
[12:29:30] <TinoDidriksen> And that performance argument is easily outweighted by the safety argument. Prepared statements have much better type safety.
[12:32:50] <AllenJB> Most developers would get a far better performance boost from fixing their queries / indexes / schema in my experience
[12:45:25] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Quit: Konversation terminated!)
[12:45:41] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[12:45:58] <ash_worksi> so... I am actually finding it handy that despite `$pdo->prepare('bogus sql');` the syntax error shows up in $stmt after $stmt->execute(); -- handy in that I only have to write 1 check for logging the error... (1) am I missing something that'll creep up on me where $stmt will be false given that ERRMODE is silent (apparently) and (2) I'm just rewritting old code that uses pg_connect(); and logs errors
[12:46:04] <ash_worksi> using Logger::error(E_USER_ERROR, <description of error>); given that I don't want to integrate a proper logger right now, should I be setting ERRMODE to exception and wrapping in try {} or is if (!$result) { ... } good enough for now?
[12:46:41] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[12:47:15] <Naktibalda> exceptions elimate need to think about errorInfo :)
[12:49:08] <ash_worksi> yes, I suppose I should wrap it in a try block
[12:51:38] <biberu> ash_worksi: why don't you want a logger? adding it later might be more work
[12:54:38] <ash_worksi> biberu: my feeling is that it'll be a lot of work right now; generally, aiui, the best place for a logger is middleware, which the current system doesn't support. There is no single entrypoint, nothing is injected and there are static calls all over the place.
[12:55:36] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Quit: Konversation terminated!)
[12:55:51] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[12:56:29] <biberu> ash_worksi: are you only logging errors?
[12:57:14] <biberu> even only exceptions that go unhandled until then?
[12:57:42] <ash_worksi> (1) honestly, I don't really know. (2) I didn't understand your second statement
[12:58:16] <ash_worksi> (1 follow-up) but we have the capacity with this Logger to log whatever we want
[12:58:55] <biberu> ash_worksi: 2) suppose that you've got a try block somewhere further down, away from the middleware, and it catches an exception but recovers, how would you log that?
[13:00:54] <ash_worksi> biberu: firstly, there is no middleware, but I get what you're saying regardless; secondly, with the current system probably something like ... catch ($e) { Logger::log(LOGT_NOTICE, $e->message()); }
[13:01:42] <biberu> right, so it's a global logger, but at least you have the option
[13:01:54] <biberu> that would drop the stack trace btw, but i guess it's just an example
[13:02:25] <ash_worksi> yes, I am actually thinking about how to go about that as we speak
[13:02:46] *** Quits: brentaarnold (~brentaarn@24.112.61.90) (Ping timeout: 268 seconds)
[13:03:09] <ash_worksi> I am actually quite tired of looking at incomprehensible, unparsible dump logs
[13:03:15] *** Joins: brentaarnold (~brentaarn@24.112.61.90)
[13:03:31] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[13:03:53] <ash_worksi> I think I wrote in a little thing to json_encode objects instead of dumping them in the Logger
[13:04:42] <biberu> the main concern should be to get all the data you need to identify an issue, not whether the log file is hard to read manually, that can be made easier with log parsers later :)
[13:04:46] *** Quits: elycin_ (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[13:04:46] *** Joins: elycin (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com)
[13:05:46] *** Joins: kenoba7 (~kenoba@user/kenoba)
[13:05:47] *** Quits: kenoba (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[13:05:47] *** kenoba7 is now known as kenoba
[13:06:45] <ash_worksi> biberu: you mistake this for a real logger; parsing var_dump() is non-trivial for me and I'll go about integrating a log parser when I can integrate monolog
[13:07:36] <biberu> parsing var_dump?
[13:07:42] <ash_worksi> and by integrating a log parser I mean "I'd rather use a log parser with monolog than attempt to configure a log parser to understand the crap our logger logs"
[13:07:52] *** Quits: Miles8of9 (~obrien@93-34-146-123.ip50.fastwebnet.it) (Ping timeout: 256 seconds)
[13:08:02] <ash_worksi> biberu: yes, like `var_dump($someObj);`
[13:08:24] <biberu> careful with pii and secrets if you dump entire objects to your log
[13:08:39] <ash_worksi> pii ?
[13:08:51] <biberu> https://en.wikipedia.org/wiki/Personal_data
[13:09:26] <ash_worksi> ah [p]ersonally [i]dentifying [i]nformation
[13:09:43] <biberu> yeah, you may not even be allowed to log that
[13:14:54] *** Joins: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net)
[13:15:38] *** Quits: Stanley (~stanley@d162-156-50-3.bchsia.telus.net) (Ping timeout: 252 seconds)
[13:20:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[13:26:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:27:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[13:28:32] <ash_worksi> biberu: I am aware
[13:29:02] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 260 seconds)
[13:29:30] *** Joins: kenoba (~kenoba@user/kenoba)
[13:30:07] <biberu> ash_worksi: cool, just mentioning it because i've seen those who want to indiscriminately log everything :)
[13:31:43] <ash_worksi> 👍
[13:43:20] *** Quits: brentaarnold (~brentaarn@24.112.61.90) (Read error: Connection reset by peer)
[13:43:46] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[13:43:55] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Read error: Connection reset by peer)
[13:44:52] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[13:45:40] <arash> Hello, can i use max function in array index? I want to have max in preg_match result, I mean if $match[0][5] is the highest array value in preg_match result I want to find it. how can i do that?
[13:46:32] <Naktibalda> if max can't do it, use a loop
[13:52:30] <biberu> or reduce
[13:53:34] <arash> I did it with count. $here = count($match); var_dump($match[$here - 1]);
[13:54:59] *** Joins: Miles8of9 (~obrien@93-34-146-123.ip50.fastwebnet.it)
[13:55:08] <biberu> oh, misunderstood
[13:57:04] <Naktibalda> $last = end($match); or array_pop($match);
[14:10:01] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[14:10:17] *** Joins: ArchNoob (~maotora@user/archnoob)
[14:13:03] *** Parts: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Konversation terminated!)
[14:21:48] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3f1)
[14:22:42] *** Quits: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2)
[14:28:59] *** Joins: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[14:29:38] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:33:43] <ash_worksi> is FETCH_CLASS bad?
[14:36:12] <AllenJB> ash_worksi: Why do you think it might be bad?
[14:37:10] <ash_worksi> well, I haven't tried it, but it would seem it can set private properties rather magically without the use of setter methods
[14:37:40] *** Joins: keypusher (keypusher@user/keypusher)
[14:38:45] *** Quits: Hiccup (cHoy@2404:8000:1003:14fe::510) (Remote host closed the connection)
[14:39:05] <AllenJB> While it does use some "magic", that doesn't make it inherently bad.
[14:41:03] <ash_worksi> AllenJB: that's essentially why I'm asking
[14:42:01] <ash_worksi> rather, it sounds like the answer is, "no"; in which case, is it popular? (or unpopular of any reason?)
[14:42:11] <AllenJB> Personally I prefer manual hydration, but that's more due to (ensuring all developers on a project are aware of) issues with the constructor (when it's called), and type translation (eg. date/time values should be represented by DateTime(Immutable), not a string in PHP code)
[14:42:42] <ash_worksi> I see
[14:43:25] *** Quits: ekl (~ekl@user/ekl) (Read error: Connection reset by peer)
[14:44:05] *** Joins: ekl (~ekl@user/ekl)
[14:44:07] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[14:45:01] *** Quits: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2)
[14:45:05] <biberu> +1 for type mapping, and if you're using the same class in the rest of your application you may end up leaking database concerns
[14:45:56] *** Joins: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[15:03:59] *** Joins: MrTrick (uid181961@id-181961.uxbridge.irccloud.com)
[15:18:09] *** Joins: keypusher (~keypusher@user/keypusher)
[15:42:25] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:56:46] *** Quits: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2)
[16:02:19] *** Joins: Heraes (~Heraes@user/romarain)
[16:02:27] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[16:07:13] <ash_worksi> if you're just going to use PDO, is whitelisting still the standard for ORDER BY ?
[16:09:38] <TinoDidriksen> That's the only possibility. You can't parameterize column names, so you must whitelist them.
[16:29:00] <CoJaBo> I'm currently working with an app that handles all date/time values as unixtime represented as a string :/
[16:30:59] *** Joins: pmercado (~pmercado@186.107.55.118)
[16:31:55] <__adrian> dynamic typing yo
[16:32:02] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 268 seconds)
[16:32:26] <CoJaBo> It is often he'll
[16:35:07] <__adrian> https://3v4l.org/hhIMJ
[16:35:24] *** Joins: keypusher (keypusher@user/keypusher)
[16:36:21] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[16:41:35] *** Joins: guidoc (~guido@host-79-43-248-222.retail.telecomitalia.it)
[16:59:07] *** Joins: Poboy (~Poboy@user/poboy)
[17:22:41] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[17:35:50] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[17:37:26] <znf> weird question, but -- is there a way to "speed up" the fetching of the data from mysql in order to free up the connection?
[17:37:29] <znf> longer explanation:
[17:37:44] <znf> I have a query that fetches around about 80.000 rows, worth of around ~200MB of data
[17:37:46] <__adrian> unless you changed some settings, the entire query is fetched upfront
[17:38:04] <znf> The query itself runs in about 8 seconds (when using the mysql cli client)
[17:38:07] <__adrian> entire *result
[17:38:26] <Naktibalda> it makes sense to use unbuffered query in this case
[17:38:38] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[17:39:19] <__adrian> well... i don't disagree, but that wouldn't "free up the connection" sooner
[17:39:20] <znf> But when I do it in PHP, while it talks the rows and I do the stuff I need to do with the data, the data seems to be very slow to be fetched from the server, looking at the server process, it's spending 40+ seconds in "Writing..." the query result
[17:39:29] <znf> s/talks/walks*
[17:39:59] <znf> this might not be PHP - as I do have proxysql in front of the mysql server (altough that result should bypass it's buffer)
[17:40:05] <znf> just looking for some insight
[17:40:22] <__adrian> how are you connecting?
[17:40:26] <Naktibalda> “Writing to net” – usually, not writing to net (client has blocked) – actual writing to net is usually nearly non-blocking operation, as long as client doesn’t sleep.
[17:40:39] <znf> php > proxysql (socket) > mysql (socket)
[17:41:02] <__adrian> i don't have experience with proxysql, unfortunately
[17:41:09] <__adrian> have you compared to a direct connection?
[17:41:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:42:00] <znf> yeah, it only adds like ~1s
[17:42:15] <znf> MySQL client connected to the ProxySQL socket: 83460 rows in set (9.624 sec)
[17:42:27] <Naktibalda> what's the problem with "holding up connection"?
[17:42:42] <znf> MySQL client connected to the MySQL socket directly: 83460 rows in set (0.171 sec)
[17:42:46] <znf> well, I guess it adds more
[17:43:10] <znf> Naktibalda, basically polluting my slow_log from mysql
[17:43:15] <__adrian> sounds... significant
[17:43:51] <__adrian> but given the number of rows and result size, i'd agree with "use unbuffered query"
[17:44:18] <__adrian> would probably help you start working sooner, even if overall time is the same
[17:44:22] <znf> kind of hard to use the slow_log in a meaningful way when I get that query repeated every minute (I'm working on that tough, to run the query only when the table contents have changed)
[17:44:44] <znf> I'll look into that, thanks
[17:45:07] *** Joins: otisolsen70 (~otisolsen@212.97.248.141)
[17:47:24] <znf> I should also try to figure out why ProxySQL is being much slower on such a big result
[17:47:46] <__adrian> maybe it's buffering  :)
[17:48:30] <znf> the manual says it shouldn't
[17:49:01] <znf> Or at least that's what I understand from:
[17:49:05] <znf> >If a resultset returned by a backend server is bigger than this, ProxySQL will start sending the result to the MySQL client that was requesting the result in order to limit its memory footprint.
[17:49:42] <ash_worksi> for SplTempFileObject(0) -- If the temporary file exceeds this size, it will be moved to a file in the system's temp directory. --  I don't ever see a file in my temp dir when I do this
[17:52:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:54:48] <ash_worksi> so... what gives?
[18:03:38] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Read error: Connection reset by peer)
[18:04:16] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[18:09:28] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Ping timeout: 268 seconds)
[18:20:28] *** Joins: Anticom (~Anticom@87.190.49.75)
[18:23:46] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[18:25:52] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[18:27:46] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[18:28:17] *** Joins: magla (~gelignite@55d458e1.access.ecotel.net)
[18:31:49] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[18:34:13] <ash_worksi> why is 'c' mode better than 'w' when using flock()?
[18:34:25] <ash_worksi> erm, for locking a process that is
[18:35:55] <ash_worksi> oh wait, I get it
[18:37:15] <ash_worksi> I was going to say, it doesn't matter if you were going to truncate the file anyway, but then I realized, "well, if you want create a file with w and flock it, then run the process again, the file will get truncated before the flock check, so it'll be possibly unintentionally re-emptied before the last process finsihes
[18:44:24] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[18:45:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:53:55] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Ping timeout: 252 seconds)
[18:58:20] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:02:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[19:08:30] *** Quits: jess (~jess@libera/staff/jess) ()
[19:08:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:12:26] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:23:10] <TML> flock() is generally not a great idea in a web-app
[19:23:29] *** Quits: otisolsen70 (~otisolsen@212.97.248.141) (Read error: Connection reset by peer)
[19:24:06] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728)
[19:24:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[19:25:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:28:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[19:29:10] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[19:29:45] <TML> ash_worksi: as for your SplTempFileObject(0) question, my guess would be that your tempfile isn't where you think it is
[19:30:26] <ash_worksi> TML: I ended up finding it, I Just moved everything out and it showed up; I guess it was too quick or I didn't flush or whatever before
[19:30:45] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:30:52] <ash_worksi> TML: and the flock is for cron jobs
[19:33:22] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Ping timeout: 252 seconds)
[19:39:42] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:01:26] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[20:05:59] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[20:06:09] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Ping timeout: 265 seconds)
[20:08:34] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[20:11:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:20:10] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 265 seconds)
[20:21:15] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3f1) (Remote host closed the connection)
[20:23:18] <ash_worksi> so, I'm readdressing my 'c' statement... isn't the main function of flock to prevent another application from changing a file while the lock is in place?
[20:24:06] <ash_worksi> why then can a file I supposedly flock()ed be emptied by a new process opening the file with 'w' ?
[20:24:12] <ash_worksi> shouldn't that fail?
[20:27:50] <TinoDidriksen> File-level locking is advisory only. Other processes can ignore the lock. If you want portable atomic locking, use a lock file.
[20:29:13] <ash_worksi> TinoDidriksen: ie create a file in php? or do you mean in the calling process?
[20:30:28] <TinoDidriksen> Create a parallel file and check that the file exists and contains this process' nonce doing destructive actions.
[20:32:23] <TinoDidriksen> Something like $nonce = random_bytes(32); file_put_contents("$file.lock", $nonce); if (file_get_contents("$file.lock") !== $nonce) { return "other process holds the lock"; } ...actual work...; unlink("$file.lock");
[20:32:36] *** Joins: Rockwood (~Rocky@user/rocky)
[20:32:51] <Rockwood> o/
[20:36:54] *** Quits: dbal (~dbal@2603:300c:b04:b100:5918:dcb1:febb:ee4a) (Quit: Leaving...)
[20:36:55] <ash_worksi> TinoDidriksen: erm... suppose actual work is just `sleep(10);`... wouldn't running the script twice in two different processes be successful because the second process would just overwrite the file contents with the `file_put_contents` call?
[20:38:05] <TinoDidriksen> Indeed, check file before and after writing.
[20:38:57] <TinoDidriksen> clearstatcache(); if (file_exists("$file.lock")) { return "not mine"; }
[20:39:43] <ash_worksi> but then the check is not atomic?
[20:40:12] <TinoDidriksen> It is. The race condition that could happen is between put and get.
[20:40:53] <TinoDidriksen> Hence don't just create a lock file - write and check that it contains what you wrote. If another process managed to write before your read, you must back off.
[20:43:00] <ash_worksi> so file_exists() should come before the put?
[20:45:52] <TinoDidriksen> It should be the first thing to happen, yes.
[20:51:42] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728) (Remote host closed the connection)
[20:54:37] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728)
[20:55:04] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:55:15] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:57:58] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 260 seconds)
[20:58:05] *** Rockwood_ is now known as Rockwood
[20:59:30] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728) (Ping timeout: 260 seconds)
[21:16:11] <ash_worksi> TinoDidriksen: cant you have a race condition like this? https://gist.githubusercontent.com/ash-m/3d8113fd566d9f55e387ae3caec02983/raw/c4a3282e929f4135ddfdfefc5876ddc59f84b7cd/race.txt
[21:18:16] *** Joins: Rockwood_ (~Rocky@user/rocky)
[21:21:19] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[21:22:34] <ash_worksi> basically for any processes that make it past the exist check together for any process whose `put` comes after another processes `get` will run the same process in parallel
[21:24:21] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Make it idiot proof and someone will make a better idiot.)
[21:26:15] <Sammitch> not sure what exactly you're trying to illustrate, but the answer is probably locks
[21:26:53] *** Rockwood_ is now known as Rockwood
[21:26:55] <ash_worksi> Sammitch: I'm discussing locks
[21:28:13] <ash_worksi> Sammitch: TinoDidriksen was suggesting that to create the lock file, you should (1) check it does not exist (2) put an identifier in it (3) check the identifier is what you put in
[21:28:38] <Sammitch> nvm I clearly need coffee and more time to actually wake up
[21:29:12] <ash_worksi> actually, symlink() will fail if the file already exists.... I wonder if that's a better form of a lock file?
[21:33:10] *** Joins: goddard (~goddard@user/goddard)
[21:59:12] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728)
[22:03:29] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728) (Remote host closed the connection)
[22:03:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728)
[22:04:02] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728) (Remote host closed the connection)
[22:05:23] *** Joins: semeion (~semeion@user/semeion)
[22:05:39] *** Joins: pmercado_ (~pmercado@186.107.63.213)
[22:06:16] *** Quits: pmercado (~pmercado@186.107.55.118) (Ping timeout: 252 seconds)
[22:11:36] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[22:12:12] *** Joins: Poboy (~Poboy@user/poboy)
[22:12:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:13:06] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[22:17:48] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728)
[22:19:26] <ash_worksi> does anyone see anything tremendously wrong with this? https://gist.github.com/ash-m/7999519b971a02155a24591977c57f00
[22:20:40] <Albright> ash_worksi: use curly braces when doing string interpolation: `$this->procesFile = "{$lock}.pid";` - much less ambiguous for man and machine alike.
[22:21:09] <ash_worksi> Albright: I mean in terms of like race conditions or... failure to lock
[22:21:21] <ash_worksi> Albright: (but I'll change that)
[22:21:38] <Albright> Also, `function() or otherFunction()` is like PHP 3 stuff. Use a proper if block
[22:21:42] <Sammitch> isn't the entire point of a lock file to acquire an actual _lock_ on the file?
[22:22:49] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728) (Ping timeout: 252 seconds)
[22:22:54] <Sammitch> if your process dies before removing its magic lock files there's no way to know if it's safe to continue
[22:22:57] <Albright> Yeah, code aside, I don't quite follow what the intended use case is here
[22:23:52] <Sammitch> you could put the pid in the file named ".pid", but you still can't guarantee that the PID hasn't been re-used
[22:24:41] <ash_worksi> erm
[22:25:46] <ash_worksi> when you say "actual lock" ... what do you have in mind? my thought was just to prevent two processes from doing the same thing at the same time
[22:25:57] <Sammitch> flock
[22:26:03] <ash_worksi> erm
[22:26:33] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:26:55] <ash_worksi> so my problem with flock is that it doesn't actually lock the file
[22:27:04] <ash_worksi> like, other things can chang eit
[22:27:11] <ash_worksi> not like that's not possible here
[22:27:18] <Albright> PHP seems to have a basic semaphore implementation but I haven't used it before and I'm not sure where it "stores" the semaphore data. https://re-cycledair.com/php-dark-arts-semaphores
[22:27:44] <Sammitch> it you intentionally write code to disregard the lock, sure. but maybe just uh... don't do that?
[22:27:50] <ash_worksi> Albright: yes, it's a bit confusing (re semaphore)
[22:28:28] <ash_worksi> Sammitch: what do you mean exactly? I mean, it blocks a second process from attempting to execute while one is in progress
[22:28:57] <Sammitch> so long as the second process is also trying to acquire a lock
[22:29:35] <ash_worksi> so... what's the pitfall I'm missing
[22:29:59] <Sammitch> if your second process doesn't do your weird avoiding-flock-while-attempting-to-reimplement-flock it's the same issue, but implemented much more clunkily
[22:30:12] <ash_worksi> hmm
[22:30:19] <ash_worksi> Sammitch: I'll have to pester you later
[22:31:31] <Sammitch> if you want to prevent simultaneous access to a file, the flock() is canonically the answer. IIRC semaphores are virtually the same thing, but intended for shared memory
[22:32:06] <Sammitch> trying to use semaphores for files would again be a roundabout reimplementation of what flock already does
[22:35:01] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[22:35:24] *** Quits: Anticom (~Anticom@87.190.49.75) (Quit: Leaving)
[22:37:17] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[22:43:02] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[23:03:00] *** Quits: Cheez (~Cheez@user/cheez) (Quit: bye.)
[23:07:38] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728)
[23:08:57] *** Quits: Junxter (~Junxter@222.95.222.185) (Ping timeout: 268 seconds)
[23:12:39] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c53e:fa76:3047:f728) (Ping timeout: 268 seconds)
[23:13:55] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[23:27:24] *** Joins: semeion (~semeion@user/semeion)
[23:48:15] *** Joins: Poboy (~Poboy@user/poboy)
[23:52:58] * Sammitch constantly stubbing his toe on the fact that `cat foo | while read bar; do ... done` spawns a subshell and `while read bar; do ... done < <(cat foo)` does not =_=
[23:53:06] <Sammitch> mt, but yes
[23:54:43] <omegatron> a pipeline is a list of commands, therefore ...  while the latter is not a pipeline ..
[23:55:13] <omegatron> https://www.gnu.org/software/bash/manual/bash.html#Pipelines
[23:55:40] <Sammitch> the main issue is that if you try to modify variables inside of the while loop it does not persist in the first, but does in the second.
[23:56:13] <biberu> Sammitch: powershell ;)
[23:56:15] <omegatron> well, yes, that's how it works
[23:57:44] <Sammitch> biberu: how about no.
[23:57:45] <omegatron> in the first sample, the while ... stuff is considered a complete separate command from the 'cat foo'   the second sample is, in its whole, only one command
