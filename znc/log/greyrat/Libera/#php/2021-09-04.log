[00:00:46] *** Parts: judah (~judah@rrcs-74-87-190-155.west.biz.rr.com) ()
[00:00:55] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[00:05:52] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 244 seconds)
[00:13:06] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[00:13:37] *** Joins: semeion (~semeion@user/semeion)
[00:14:30] *** Joins: Poboy35 (~Poboy@user/poboy)
[00:14:34] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:16:39] *** Quits: Poboy (~Poboy@user/poboy) (Ping timeout: 256 seconds)
[00:19:29] *** Quits: Poboy35 (~Poboy@user/poboy) (Ping timeout: 256 seconds)
[00:31:37] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[00:32:45] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:37:54] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 244 seconds)
[00:39:42] *** Quits: Stanley (~stanley@d162-156-50-3.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[00:40:09] *** Joins: Stanley (~stanley@d162-156-50-3.bchsia.telus.net)
[00:42:43] *** Joins: Poboy (~Poboy@user/poboy)
[00:43:16] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[00:57:07] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[00:58:07] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[00:58:21] <harpia> What is the note "This feature is available as of PHP 7.4.0." referring to? (https://www.php.net/manual/en/language.oop5.magic.php#object.serialize)
[00:58:36] <harpia> __serialize() only 7.4 and up?
[00:59:57] <__adrian>  yes
[01:09:38] *** Quits: retrograde_ (retrograde@gateway/vpn/protonvpn/retrograde) (Quit: Leaving)
[01:10:04] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[01:15:04] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[01:21:59] <Sammitch> hrmmm json_serialize() really should hook onto __serialize() [it doesn't seem to currently]
[01:23:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[01:25:50] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[01:30:03] <harpia> Sammitch: you mean json_encode()?
[01:30:32] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[01:31:00] <harpia> this is what I ended up using to json_encode a value object: https://www.php.net/manual/en/class.jsonserializable.php
[01:32:18] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[01:33:07] <harpia> it's brilliant that you can add that to all related VOs, and they can all be encoded together in json
[01:34:43] <Sammitch> wow my last statement was almost entirely mistakes and omissions. yes all of that is what I meant to say. :P
[01:38:20] *** Joins: christianPHP (~christian@190.232.168.110)
[01:41:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[01:42:47] <Stanley> On Ubuntu 21.04 running php8 how do I go about installing imagemagick? do I ahve to apt-install imagemagick as well as php8.0-imagemagick ?
[01:43:46] <Sammitch> php8.0-imagemagick should pull in any dependencies that it needs
[01:46:52] <Stanley> it would probably help if that was a real package
[01:48:53] <Sammitch> most likely, yes
[01:49:34] <Stanley> i guess I have to install from pecl? i've never done any of this before, but trying to get docker running and it requires a bit more understand
[01:49:37] <Stanley> understanding*
[01:51:25] <Sammitch> the php docker images have a couple helpful commands, docker-php-ext-configure and docker-php-ext-install that will help
[01:52:27] <Sammitch> you'll likely need to install some prereqs, likely imagick-dev or somesuch, but you don't have to futz around with pecl directly at least
[01:52:52] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[01:55:03] <Stanley> https://kopy.io/kZdO0#lwMfxG9cMfg1PU
[01:55:10] <Stanley> that's the dockerfile that sail generated
[01:55:20] <Stanley> I have to actually run, need to take my kid to her haircut bu i'll be back later
[01:58:04] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[02:00:23] <Sammitch> well that's... uhh, nightmarish.
[02:01:46] <Sammitch> you might want to ask laravel people how to make that contraption install imagick
[02:18:32] *** Quits: junktext (~junktext@77.247.181.218) (Ping timeout: 256 seconds)
[02:22:54] <Byteflux> Stanley: If you're on Ubuntu, you should be using Ondrej Sury's PPA for PHP.
[02:23:54] <Byteflux> If you are, then php8.0-imagick is definitely a real package.
[02:24:40] <Byteflux> Unless you're using Docker, if you did not install PHP 8 from https://launchpad.net/~ondrej/+archive/ubuntu/php then I'd recommend uninstalling/undoing whatever PHP you have and reinstalling from that link.
[02:24:50] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[02:25:05] <Byteflux> Ah I missed the part you are using Sail.
[02:25:38] <Byteflux> Yeah Sail should be using Ondrej's PPA, so all you have to do is tinker with the Dockerfile and add php8.0-imagick to that list of packages (note it's 'imagick' and not 'imagemagick')
[02:26:21] <Byteflux> Sammitch: That looks like a pretty typical Dockerfile :P
[02:26:27] <Byteflux> Actually, one of the more pleasant ones.
[02:27:24] <Byteflux> Some of them can get... pretty crazy. Many projects are auto-generating their Dockerfiles from templates at this point
[02:27:25] <Sammitch> there's some kitchen sink in there, but if it's solely to stand up a local dev env I'll hold my tongue
[02:27:59] <Byteflux> Yeah Sail is intended to be a dev env and not an actual production environment clone or anything like that.
[02:28:13] <Byteflux> It's probably not a very proper use of Docker
[02:28:58] <Byteflux> I don't know how I feel about monolithic containers for local dev environments.
[02:29:52] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[02:29:56] <Sammitch> if they can automate generation of a dockerfile, they can automate generation of a docker-compose file :P
[02:30:11] <Byteflux> I guess this technically isn't a monolithic container, they do actually have a docker-compose.yml that's autogenerated which has all the other bits
[02:30:23] <Byteflux> Such as mysql/postgresql/redis/elasticsearch etc
[02:31:22] <Byteflux> But it's not designed mimic a production environment as you might want to if using Docker for development.
[02:31:52] *** Quits: Alex8532 (Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[02:33:11] <Blondie101010> having a different dev environment is no big deal if you have a suitable test environment which you can freely use
[02:36:13] <Byteflux> Generally, yeah. I just like having everything as closely identical as possible with all the same bits and pieces. This is especially important when you're working with multiple custom Docker images that operate independently to create your whole stack.
[02:38:13] <Byteflux> Pretty sure this is why some companies don't even have local development. All their development is on remotely hosted containers because of the complexity of a properly duplicated dev environment. For example: https://github.com/features/codespaces
[02:43:14] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[02:43:14] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[02:48:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[02:56:09] *** Joins: junktext (~junktext@77.247.181.212)
[02:59:42] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[03:04:38] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 244 seconds)
[03:05:34] *** Quits: magla (~gelignite@55d44ca3.access.ecotel.net) (Quit: Stay safe!)
[03:07:20] *** Joins: Alex8532 (Alex8532@user/alex8532)
[03:07:41] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:12:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 240 seconds)
[03:13:38] *** Quits: Miles8of9 (~obrien@93-34-146-123.ip50.fastwebnet.it) (Read error: Connection reset by peer)
[03:15:52] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:17:48] *** Quits: pmercado (~pmercado@186.107.39.248) (Quit: Konversation terminated!)
[03:20:52] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[03:34:10] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[03:38:44] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 244 seconds)
[03:49:43] *** Quits: christianPHP (~christian@190.232.168.110) (Ping timeout: 256 seconds)
[03:56:22] *** Quits: junktext (~junktext@77.247.181.212) (Ping timeout: 245 seconds)
[04:08:36] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[04:09:03] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:13:27] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[04:26:17] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[04:26:50] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[04:30:03] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[04:30:03] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (*.net *.split)
[04:30:03] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[04:30:03] *** Quits: newbie|2 (~Warped@user/warped) (*.net *.split)
[04:30:03] *** Quits: bodiccea (~bodiccea@user/bodiccea) (*.net *.split)
[04:30:03] *** Quits: alien_lappy (~alien@user/alien) (*.net *.split)
[04:30:03] *** Quits: genom (~g@37.214.34.36) (*.net *.split)
[04:30:03] *** Quits: tccki (~tccki@box.webslate.co.nz) (*.net *.split)
[04:30:03] *** Quits: travisghansen (~travisgha@192.74.130.86) (*.net *.split)
[04:30:03] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (*.net *.split)
[04:30:03] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[04:30:03] *** Quits: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de) (*.net *.split)
[04:30:03] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[04:30:03] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (*.net *.split)
[04:30:03] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (*.net *.split)
[04:30:04] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[04:30:04] *** Quits: \mSg (~mSg@user/msg/x-0285936) (*.net *.split)
[04:30:04] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (*.net *.split)
[04:30:04] *** Quits: anomander (~anomander@vps-e9abfd3d.vps.ovh.net) (*.net *.split)
[04:30:04] *** Quits: novns (~novns@user/novns) (*.net *.split)
[04:30:04] *** Quits: Phil-Work (~phil@62.3.100.20) (*.net *.split)
[04:30:16] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:30:19] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[04:31:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[04:32:14] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[04:32:14] <Sammitch> Byteflux: this dicussion caused me to have existential revelations and anxieties about our dev/build/test/deploy infrastructure, which was incredibly poorly timed since I was then pulled into a meeting about our devops priorities. @_@;
[04:32:18] *** Joins: Warped (~Warped@user/warped)
[04:32:21] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[04:32:23] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[04:33:31] *** Joins: keypusher (keypusher@user/keypusher)
[04:33:41] <Sammitch> it's not impossible to address, but it's definitely not trivial either. especially if you're in our position where your pipelines have grown organically and need a lot of adjustment
[04:33:45] <Blondie101010> even when there's a suitable deployment solution in place and everything goes through QA, there are always cracks
[04:33:51] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[04:34:16] <Blondie101010> devs usually don't even wonder about good deployment methods
[04:34:22] <Sammitch> yarp, but I'd rather those cracks be bugs in the code itself as opposed to bugs/inconsistencies in the pipeline
[04:34:27] <Blondie101010> they just think it's done, so put it in prod
[04:35:25] <Blondie101010> of course some systems are hard to test out because they depend on many loose parts, but I've had my share with such a project this week
[04:35:45] <Sammitch> FWIW we've already got defined processes and automations, I'm currently concerned with unifying the local dev environment/methods with those in the CI pipeline
[04:37:46] <Sammitch> local dev/test [largely manual] > push > jenkins > automated tests > test env > automated tests > QA > merge > more test > deploy
[04:37:48] <Blondie101010> well I certainly would like to do the same for this project, but I'm limited on many aspects, including the fact that this can not get updated without a maintenance notice and there's a single dev and only CSRs for minimal QA
[04:38:15] <Byteflux> IMO, ideally devs are blissfully unaware of the infrastructure and only have to worry about spinning up an environment and writing code. And ideally your devops guys don't have to worry about your code being incompatible with production.
[04:39:00] <Byteflux> There may be cases where you need to introduce a new piece to your infrastructure that
[04:39:02] <Blondie101010> for a web app/site, 100%
[04:39:03] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[04:39:06] <Byteflux> that's beyond a simple code change
[04:39:10] <Blondie101010> in other cases, it might be justified
[04:39:41] *** Joins: LSD (~LSD@2.lsd.systems)
[04:39:48] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[04:39:54] <Byteflux> But in those cases, it's the devops engineer's job to be involved in the development lifecycle of the proposed system ensure those pieces are there
[04:40:20] <Sammitch> at the least I've given them a "local dev services" docker-compose manifest that spins up versions of postgres/redis/etc that match prod
[04:40:21] <Byteflux> Software engineers should only have to focus on writing code IMO
[04:40:25] <Blondie101010> what if the dev is not devops?
[04:40:27] <Blondie101010> :)
[04:40:42] <Blondie101010> he can make it work, but would never be able to maintain systems
[04:41:01] <Byteflux> Sammitch: Are you the devops guy?
[04:41:05] <Sammitch> I is
[04:41:19] <Blondie101010> "devops" is a very loose term
[04:41:24] <Sammitch> it is.
[04:41:31] <Byteflux> Right, so that's basically in your job description. It's on you to ensure the software engineers have a development environment that is compatible with production.
[04:41:46] <Sammitch> which is why I'm worrying about it. :P
[04:42:07] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[04:42:09] <Sammitch> "do what I say or I'll make you all run minikube!"
[04:42:10] <Byteflux> And non-devops engineers shouldn't be introducing new services to your infrastructure without coordinating it through you.
[04:42:55] <Blondie101010> my main concern right now is another thing....  we have a big microfocus application server that needs to be updated, but the update just doesn't work, and microfocus support just don't understand it
[04:42:57] <Blondie101010> grrr
[04:44:26] <Sammitch> lol good ol "Capital-E Enterprise" :P
[04:46:47] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[04:54:05] *** Quits: refactor_ring (~refactor_@142.93.146.100) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:55:41] *** Joins: refactor_ring (~refactor_@142.93.146.100)
[04:58:52] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[05:04:00] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[05:07:01] *** Quits: Alex8532 (Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[05:09:13] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[05:15:02] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[05:16:43] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[05:21:34] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[05:34:46] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[05:39:11] *** Quits: MrTrick (uid181961@id-181961.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[05:39:42] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[05:45:32] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[05:46:28] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[05:51:55] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[05:53:21] *** Joins: sagax (~sagax_nb@user/sagax)
[05:56:50] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[06:04:06] *** Joins: keypusher (keypusher@user/keypusher)
[06:08:20] *** Joins: guy_frm_yogaland (~guy_frm_y@157.41.79.188)
[06:08:58] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[06:13:53] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[06:18:48] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[06:23:47] <guy_frm_yogaland> hello everyone
[06:23:54] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[06:24:48] <guy_frm_yogaland> how to save multiple values in a string which is in json format?
[06:25:09] <s17> wut
[06:25:09] <__adrian> how do you mean?
[06:25:20] <guy_frm_yogaland> https://gist.github.com/hardRockWorld/9a30b5997be6b52366172eddfdc894dd
[06:26:29] <guy_frm_yogaland> from L33 to L62, the code block save multiple authors, but when I try to do it, then it saves only the last input data
[06:26:53] <__adrian> https://gist.github.com/hardRockWorld/9a30b5997be6b52366172eddfdc894dd#file-my_code-php-L57
[06:26:58] <__adrian> you're overwriting it every time.
[06:27:11] <__adrian> "how to save multiple values in a string"  // DO NOT.
[06:27:21] <guy_frm_yogaland> ok
[06:27:21] <__adrian> multiple values = list (an array).
[06:27:38] <guy_frm_yogaland> json is in string format right?
[06:27:49] <s17> it can do arrays
[06:27:54] <guy_frm_yogaland> ok
[06:28:09] <__adrian> what you have at this point isn't json. it's an array. later, you're going to encode it as json, yes, but that's not relevant at this point.
[06:28:24] <guy_frm_yogaland> so I should use $jsonFile["authors][] ?]
[06:28:28] <__adrian> $jsonFile is an array
[06:28:43] <__adrian> "so I should use $jsonFile["authors][] ?"  who said that?
[06:29:03] <__adrian> that's not what you're doing right now. you're assigning to  $jsonFile["authors]
[06:29:09] <guy_frm_yogaland> "authors" is the key in the associative array
[06:29:10] <__adrian> a string. not an array.
[06:29:20] <__adrian> https://gist.github.com/hardRockWorld/9a30b5997be6b52366172eddfdc894dd#file-my_code-php-L14
[06:29:42] <__adrian> if you want multiple values, this should not eb a string. it should be an array.  "authors" => []
[06:29:52] <guy_frm_yogaland> oh ok
[06:29:58] <guy_frm_yogaland> understood now
[06:30:06] <__adrian> then later, assign one or more strings (author name(s)) to that array.
[06:30:06] <guy_frm_yogaland> let me change that
[06:30:39] <guy_frm_yogaland> ok
[06:31:08] <guy_frm_yogaland> and it can be done to other keys as well? like for the multiple dependencies?
[06:31:45] <__adrian> to start, i would not name $jsonFile "json file." it's not json and it's not a file.
[06:32:13] <guy_frm_yogaland> ok, you mean I need to change the name of the variable?
[06:32:14] <__adrian> it's an array with config values. i'd name it $config or $settings or something. this might help confuse you less.
[06:32:21] <guy_frm_yogaland> aah ok
[06:32:24] <guy_frm_yogaland> got it
[06:32:30] <__adrian> you don't NEED to change the name, but it might help you think about it more clearly.
[06:32:30] <guy_frm_yogaland> easy to understand
[06:32:40] <guy_frm_yogaland> yeah
[06:32:53] <__adrian> and yes, any of those values could be an array (and should be, if that's what you need).
[06:33:27] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 240 seconds)
[06:34:50] <guy_frm_yogaland> yeah, I want to make the composer.json file, like mimic it
[06:35:41] *** Joins: celphi (sid97751@user/celphi)
[06:35:47] <__adrian> yes but that's what your _eventual_ goal is. it's not what you're doing "right now."
[06:35:56] <guy_frm_yogaland> I know that the original composer feature is having complicated class object operations for their config file creation, so I am trying something simple for my fundamentals
[06:36:03] <__adrian> right now, you're collecting the settings, values, etc. and building the data structure.
[06:36:13] <__adrian> all in php and php data structures.
[06:36:24] <guy_frm_yogaland> yes
[06:36:27] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[06:36:32] <__adrian> later, basically at the end, you'll json_encode that data.
[06:36:49] <guy_frm_yogaland> yes, json_encode the data
[06:36:50] <__adrian> until then there's no need to think about "json" or "files" at all.
[06:37:00] <__adrian> not till the last step.
[06:37:02] <guy_frm_yogaland> ok
[06:37:38] <guy_frm_yogaland> I am not well versed with programming skills
[06:38:04] <__adrian> that's ok
[06:38:08] <__adrian> the most important programming skill is planning
[06:38:15] <guy_frm_yogaland> so just unable to debug sometimes, why the error is happening, there is lot of concepts in the background
[06:38:29] <Stanley> Byteflux ah yeah I was trying imagemagick not imagick, thanks!
[06:39:09] <__adrian> like if you were writing an essay or report for school. it's harder if you try to write it start to end. it's good in some places, bad in others, and not necessarily cohesive because you have no plan.
[06:39:17] <Stanley> I'm just dipping my toes in here; is the whole concept here that I could go to a totally different computer (I'm on MacOS, I could install docker on a windows or linux desktop) and spin up the same development environment because of the dockerfile?
[06:39:20] <__adrian> so instead, you write an _outline_ first.
[06:40:01] <__adrian> Stanley: same computer, even  :)
[06:40:03] <Byteflux> Stanley: Yes, that is the purpose of Sail. To provide an easily reproducible development environment for your application.
[06:40:22] <__adrian> Stanley: the important parts are that it's *isolated* and *reproducible*.
[06:40:38] <__adrian> here's how you judge your dev env:
[06:40:42] <__adrian> break it on purpose.
[06:40:52] <__adrian> break it so bad that it's completely unrecoverable.
[06:40:55] <Byteflux> In the past Laravel has had a few different platform-specific guides to developing apps, but nowadays they are pushing Sail on all platforms
[06:41:21] <__adrian> then delete it and rebuild it. it should be completely functional, completely identical, and quick to get running again.
[06:41:24] <Stanley> Yeah, I've been using valet since it came out and it's great, but as we discovered yesterday trying to switch versions of different stuff can be a bad time
[06:41:28] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[06:41:38] <guy_frm_yogaland> yeah, I kind of break down this program into small portions so that I could understand how to write it
[06:42:03] <Stanley> __adrian I guess similar to testing database backups, haha
[06:42:04] <Byteflux> Docker is pretty great about that whole isolation part of what __adrian was mentioning. You won't have to worry about conflicts.
[06:42:05] <__adrian> guy_frm_yogaland: in programming, you make your "outline" with // comments.
[06:42:45] <__adrian> just write down the process (in words, not in code) that should happen. when that mnakes sense, you can start writing specific parts.
[06:43:12] <Byteflux> Stanley: You will want to make sure that when you're changing the Dockerfile, you are doing it in your own application's copy of it and not the one in vendor/laravel/sail or whatever.
[06:43:28] <Byteflux> Because you will want to commit this to your repo.
[06:43:54] <Stanley> yeah when you run sail:install it generates a docker-compose.yml in your root dir
[06:44:11] <Stanley> and when you run sail:publish it generates a /docker directory with the actual dockerfile
[06:44:28] <guy_frm_yogaland> @__adrian: I will make sure to comment everytime, I start a new program and then I write code for those commented sections
[06:45:13] <Stanley> Only downside (which is actually an upside I guesss) is that you need more knowledge of how to run a server if you want to modify the dockerfile I guess (like how to get imagemagick installed in my case)
[06:45:26] <Byteflux> Building all the images from scratch from the Sail docker-compose.yml can take quite a bit of time, so if you end up finding yourself switching dev environments often where you do have to build the image from scratch, you push the built image to a private container registry and pull from there instead.
[06:45:33] <Stanley> I've been pretty spoiled staying way from it by using Valet and deploying using Forge but I guess it's for the best
[06:46:21] <Stanley> Byteflux I was thinking about grabbing a copy of https://serversforhackers.com/shipping-docker
[06:47:19] <guy_frm_yogaland> I also have small doubt
[06:50:00] <Byteflux> I don't know, I personally wouldn't. But I haven't ever taken a programming course or technology course online. I've never really felt that Docker is lacking in online documentation.
[06:50:33] <Byteflux> But I suppose if CI/CD is also foreign to you, it could be a bit of effort before you're up to speed so a course that glues Docker, CI and CD together could be good...
[06:50:40] <__adrian> learning to read documentation is a very critical skill
[06:51:22] <__adrian> if tutorials or courses help you, that's great, but it can't replace research+learning skills. you can't take a course because you don't want to read docs.
[06:51:36] <Byteflux> Yeah if you just want to focus on learning Docker first, then I would say their docs are pretty simple and easy. The Dockerfile and docker-compose formats are well documented, as are the commands.
[06:52:05] <__adrian> ^ look at docs first, so you can know what the course is talking about
[06:52:16] <__adrian> (also so it's easier to tell if the course you chose is BS)
[06:53:18] <Stanley> oh no i love reading through docs but i pretty much always start with a course first
[06:53:54] <Stanley> well, i shouldn't say I love reading docs, that makes it sound like it's how I spend my leisure time
[06:54:02] <Byteflux> This course looks more along the lines of teaching you to fully utilize Docker from development to production deployment, including creating distributed infrastructure and deploying to cloud providers.
[06:54:31] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[06:54:55] <Stanley> but anyways, I always tend to go through a course which just helps me see how it works and gives me a good starting point to dive into the docs
[06:55:02] <Byteflux> If you find that you learn better by introducing yourself to courses first, go for it. There could be worse courses. If this material is by Taylor, it's gotta be pretty decent.
[06:55:14] <Stanley> nah some other dude
[06:55:32] <Byteflux> Ah, well endorsed by Taylor, then :P
[06:55:35] <Stanley> haha yeah
[06:55:47] <Stanley> most the courses the community puts out are pretty solid
[06:56:13] <Stanley> or at least ones that get the endorsement
[06:56:16] <Stanley> https://eloquent-course.reinink.ca/ was fantastic
[06:58:09] <guy_frm_yogaland> @__adrian: if I have defined the array in $config and then the user does not enter any values like keep it blank then I get error Array to string conversion
[06:58:47] <__adrian> i don't follow
[06:58:57] <__adrian> if they don't enter any values, then just leave the array empty
[06:59:15] <__adrian> what line is causing the error?
[06:59:32] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[07:00:49] <guy_frm_yogaland> https://gist.github.com/hardRockWorld/9a30b5997be6b52366172eddfdc894dd
[07:01:07] <guy_frm_yogaland> L89 when echo key and value for the array
[07:01:28] <__adrian> k. so, don't do that
[07:02:01] <__adrian> when you  echo  something, you have to turn it into a string. arrays can't be turned into strings.
[07:02:15] <guy_frm_yogaland> ok
[07:02:26] <__adrian> if you want to  echo  _all the strings in the array_, that's what you do
[07:02:33] <guy_frm_yogaland> yes
[07:02:48] <__adrian> iterate the array and echo the strings
[07:03:03] <__adrian> BUT in your case... why are you trying to echo all the strings anyway?
[07:03:10] <__adrian> this ^ is what you have to answer
[07:03:43] <guy_frm_yogaland> this is for my own understanding that I am echoing, goal is to save the congif to a json file at the end
[07:04:05] <__adrian> so what is it that you want to understand?  (not a trick question, serious)
[07:06:06] <guy_frm_yogaland> like in the foreach loop we are iterating through the loop and echo the key and values, i did not understand which is an array and which is a string in that
[07:06:23] <__adrian> so below, you use var_dump()
[07:06:27] <guy_frm_yogaland> yes
[07:06:40] <__adrian> this is the correct approach. because it shows you the structure, the values, and info about their types.
[07:06:48] <__adrian> echo ← does not
[07:07:16] <guy_frm_yogaland> ok, so instead of echo, I should use var_dump?
[07:07:46] <__adrian> if "what do you want to do?" is "i want to know what the php data structure is" then yes
[07:07:58] <__adrian> that's what it's for
[07:08:04] <guy_frm_yogaland> ok
[07:08:13] <guy_frm_yogaland> let me try it
[07:11:12] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[07:11:45] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[07:15:57] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 245 seconds)
[07:16:22] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[07:18:57] *** Joins: mr_gant (~mr_gant@144.48.37.132)
[07:19:05] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 250 seconds)
[07:23:29] *** Joins: Rockwood (~Rocky@user/rocky)
[07:24:14] *** Joins: sebbu (~sebbu@user/sebbu)
[07:25:18] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[07:27:43] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[07:28:26] *** Quits: hmmhesays (~hmmhesays@167.88.62.87) (Remote host closed the connection)
[07:32:28] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[07:45:32] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[07:50:07] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[08:03:48] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[08:08:27] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[08:20:26] *** Joins: guidoc (~guido@host-79-27-251-55.retail.telecomitalia.it)
[08:20:55] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[08:25:44] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[08:26:41] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[08:32:58] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[08:43:30] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[08:45:13] *** Joins: Poboy (~Poboy@user/poboy)
[08:48:22] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[08:52:39] *** Joins: devbydylan (~devbydyla@c-73-148-236-39.hsd1.fl.comcast.net)
[08:54:07] <devbydylan> Hi all. Can someone please tell me how to properly apply parenthesis to this line of code since nested ternary operators without explicit parenthesis was depreciated in 7.4 and throws an error in 8.0?
[08:54:16] <devbydylan> $risk = ($year == 1) ? 60 : ($year == 2) ? 75 : ($year == 3) ? 90 : null;
[08:54:18] <__adrian> it's like math
[08:54:25] <__adrian> the innermost parens are what happen first
[08:54:43] <__adrian> BUT - strongly recommend you don't nest ternaries anyway. take two steps. it's clearer.
[08:55:06] <devbydylan> you mean resort to if thens?
[08:55:32] <__adrian> no. and also, a ternary IS NOT an alernative form of if..then
[08:55:57] <__adrian> if you're doing logic/flow control, if..then
[08:56:09] <__adrian> if you want a value, use  a ternary
[08:56:25] <devbydylan> Sorry how would you recommend rewriting that logic?
[08:57:05] <Blondie101010> the interpreter gave you that error because your intention is not clear
[08:57:09] <Blondie101010> we can't guess it
[08:57:23] <Blondie101010> put parentheses to define the operations
[08:57:32] <devbydylan> I come from a JS background and it's not an issue
[08:57:41] <__adrian> $risk = match ($year) { 1 => 60, 2 => 75, 3 => 90, default => null };
[08:58:49] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[08:58:57] <Blondie101010> though it is a good solution, it doesn't answer the question
[08:58:58] <__adrian> re: ternaries: js ternaries are "backwards" compared to php ternaries.
[08:59:13] <__adrian> i was answering the question, "how would you ..."  ;)
[08:59:44] <Blondie101010> devbydylan:  do you understand the use of parentheses in Math?
[09:00:16] <devbydylan> yep
[09:00:36] <Blondie101010> so the idea is to use those to tell the interpreter what to do first
[09:01:16] <Blondie101010> those you already have are useless in this context
[09:01:46] <Blondie101010> there is no other imaginable way to interpret the operations
[09:01:56] <devbydylan> in php
[09:02:00] <Blondie101010> that said, being explicit is always preferable
[09:02:05] <Blondie101010> sure, this is #php
[09:02:19] <devbydylan> yes just saying, it's not illogical
[09:02:44] <__adrian> note, with parens, it doesn't matter if you're talking about js or php
[09:02:49] <Blondie101010> that you insist so much is
[09:03:11] <__adrian> well, if you use them to actually control order of operations
[09:03:35] <__adrian> putting them around the comparison is unnecessary
[09:03:44] <Blondie101010> I've seen extremely limited scripting languages which don't handle ANY logical order of operations, including 1+1*2 => 4
[09:03:47] <devbydylan> right but in js it never hurts to evaluate an expression within a parenthesis in js
[09:03:57] <Blondie101010> but that is not the case in evolved languages
[09:04:06] <Blondie101010> php neither
[09:04:09] <__adrian> so there is one thing to note about my match{} example, and that is that it's slightly different. match{} compares strictly.
[09:04:43] <__adrian> i'm not saying the parenthesis hurt anything. i'm saying they don't accomplish anything. the comparison was going to happen first anyway.
[09:04:47] *** Quits: guy_frm_yogaland (~guy_frm_y@157.41.79.188) (Ping timeout: 256 seconds)
[09:05:02] *** Joins: guy_frm_yogaland (~guy_frm_y@2409:4062:4e92:11c5:1d35:e2a3:f4dd:1c3a)
[09:05:05] <__adrian> between the ? and the : is all one expression _anyway_.
[09:05:36] <Blondie101010> that same scripting language I just mentioned didn't prioritize Math over logical operands, causing that problem that your parentheses would solve in this limited language
[09:05:56] <Blondie101010> so it resulted in code with a LOT of parentheses
[09:06:05] <Blondie101010> too much is not better
[09:06:05] <devbydylan> __adrianthere I know it is just more readable in my experience and is commonplace in many JS repos. For some reason your match ran but threw a syntax error
[09:06:15] <devbydylan> unexpected t_double_arrow
[09:06:58] <Blondie101010> yeah he gave a too modern example
[09:07:02] <__adrian> you mentioned php 8 so i assumed that was on the table
[09:07:29] <devbydylan> let's shoot for 7.4 just for backwards compatibility
[09:07:43] <Blondie101010> so you don't know the version you'll put on your server?
[09:07:49] <Rockwood> https://www.php.net/manual/en/functions.arrow.php looks JS stuff :)
[09:08:00] <Blondie101010> backward compatibility is for existing code!
[09:08:14] <devbydylan> yes but migrations happen with different hosts, the same versions is not always available
[09:08:22] <__adrian> if you do have existing code, you can always do  $risk = fn () => switch ($year) { case 1: return 60; case 2: return 75; case 3: return 90; default: return null; };
[09:08:39] <__adrian> devbydylan: you should not use any host that doesn't at least _offer_ php 8.
[09:09:07] <Blondie101010> yeah that'd be a red flag today
[09:09:26] <__adrian> but, new code = active supported version.
[09:09:38] <__adrian> https://php.net/supported-versions
[09:09:56] <__adrian> 7.4 drops into security support in 2 months.
[09:10:01] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:10:29] <Blondie101010> guess I'll start testing my code on 8 soon :)
[09:11:47] <Rockwood> bye cya
[09:12:53] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[09:13:00] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:14:03] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[09:17:29] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[09:19:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[09:21:12] *** Quits: devbydylan (~devbydyla@c-73-148-236-39.hsd1.fl.comcast.net) (Quit: Client closed)
[09:26:47] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[09:30:45] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[09:39:31] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[09:43:47] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[09:54:56] *** __adrian changes topic to 'Stable PHP versions: 8.0.10, 7.4.23, 7.3.30 · /msg php-bot guidelines · Be respectful at all times & keep your language clean · Use a paste site for code · http://hashphp.org has some useful links · caffinated, one of the original members of freenode/##PHP, died in June 2017. RIP, Ben.'
[09:55:03] *** Joins: Akimb (~Akimb@86.100.13.100)
[09:58:27] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[10:08:04] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[10:13:02] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[10:19:56] *** Joins: Warped (~Warped@user/warped)
[10:25:56] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[10:32:40] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[10:38:37] *** Quits: guy_frm_yogaland (~guy_frm_y@2409:4062:4e92:11c5:1d35:e2a3:f4dd:1c3a) (Quit: Ping timeout (120 seconds))
[10:39:51] *** Joins: jmpp (~jmpp@pool-71-105-225-118.nycmny.fios.verizon.net)
[10:39:59] <jmpp> Hi everyone!
[10:41:04] <jmpp> I'm using laravel in my application, and I'm inclding a trait it defines in one of my classes, the latter having a subscribed() method
[10:42:03] <jmpp> but the trait I'm importing, Billable, it's just a proxy that imports a number of other traits, one of which has its own subscribed() method. So, naturally, the two methods are conflicting
[10:42:49] <jmpp> I've tried aliasing the subscribed method brought in by the trait, i.e. Billable::subscribed as cashierSubscribed;, but it doesn't seem to be making a difference
[10:43:20] <jmpp> and I can only guess it's because the imported subscribed() method is not defined directly on the Billable trait
[10:43:33] <jmpp> so, all in all, is there a way to alias a method defined in a trait of a trait?
[10:46:18] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[10:53:04] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[10:59:18] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[11:08:56] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[11:13:39] <Blondie101010> jmpp:  your description of this trait, "proxy that imports a number of other traits" was already a major red flag before really considering the problem you're asking about
[11:14:43] <jmpp> why a red flag?
[11:14:44] <Blondie101010> and the bottom line is that if you put conflicting Traits, PHP will give a fatal error justifiedly
[11:14:54] <jmpp> right, that I understand
[11:15:08] <Blondie101010> traits are super neat, when used in moderation
[11:15:16] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[11:15:19] <jmpp> but I don't have control over the trait, it's provided by the laravel/cashier package, and I'm just trying to use it
[11:15:26] <Blondie101010> also, read on composition over inheritance
[11:15:45] <jmpp> the trait in question, Billable, simply imports other traits, without defining any methods itself
[11:15:46] <Blondie101010> though you're not directly inheriting, the concept still applies
[11:16:05] <Blondie101010> and those are conflicting
[11:16:14] <jmpp> like I said, I'm not designing any of this, I'm just importing a trait provided by a composer package
[11:16:31] <Blondie101010> you didn't write Billable?
[11:16:37] <jmpp> no
[11:16:48] <jmpp> I know inheritance, composition
[11:16:53] <Blondie101010> hold on
[11:16:59] <jmpp> but I'm not discussing any of that
[11:17:27] <Blondie101010> no I'm trying to clarify your problem
[11:17:37] <jmpp> I'm just asking if I can alias a method that's defined in trait B, imported by trat A, which I import into my class
[11:18:30] <Blondie101010> aliasing can't do what you're thinking
[11:18:56] <jmpp> so method aliasing is just a one-level thing, right?
[11:20:11] <Blondie101010> your code fails at parsing
[11:20:39] <Blondie101010> well not exactly parsing but close
[11:20:43] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[11:20:50] <jmpp> no, it does not
[11:20:52] <jmpp> not parsing
[11:21:03] <Blondie101010> it does not run
[11:21:07] <Blondie101010> not 1 line
[11:21:12] <jmpp> does not run, correct
[11:21:25] <Blondie101010> in the precompilation phase
[11:21:40] <jmpp> a simple alternative is to rename my method, but I was hoping for a different solution
[11:22:01] <Blondie101010> it does not make sense to use 2 traits with the same method name
[11:22:08] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[11:22:10] <Blondie101010> no one will ever tell you different
[11:22:15] <jmpp> but if can't alias B::subscribed from my class, which imports A, not B directly, then I don't think I have a choice
[11:22:28] <Blondie101010> thank god!
[11:22:35] <jmpp> not two traits with the same method name
[11:22:41] <jmpp> my class has a subscribed() method
[11:22:45] <jmpp> my class imports trait A
[11:22:55] <jmpp> trait A imports Trait B, which has a subscribed() method
[11:23:14] <Blondie101010> exactly, so 2 traits with the same method
[11:23:28] <jmpp> well, OK, yeah
[11:23:36] <jmpp> even though one is directly on my class
[11:23:38] <jmpp> but yeah
[11:23:47] <Blondie101010> either name your methods better or use fewer traits
[11:24:02] <jmpp> my class has long had the subscribed() method, and now I want to use this trait, Billable, from the laravel/cashier package
[11:24:26] <Blondie101010> you don't really have much choice
[11:24:37] <Blondie101010> so rename yours
[11:25:04] <jmpp> sigh
[11:25:13] <jmpp> OK, thanks
[11:25:18] <Blondie101010> np
[11:26:47] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[11:39:37] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[11:44:38] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[11:46:08] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[11:50:40] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[11:53:25] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[12:00:41] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[12:02:45] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[12:09:07] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[12:12:59] *** Joins: Phil-Work (~phil@62.3.100.20)
[12:12:59] *** Quits: Phil-Work (~phil@62.3.100.20) (Remote host closed the connection)
[12:21:11] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[12:31:44] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[12:43:33] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[12:43:52] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[12:45:51] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Read error: Connection reset by peer)
[12:48:40] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[12:57:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[13:00:43] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[13:00:59] *** Joins: Junxter (~Junxter@114.221.66.47)
[13:02:38] *** Joins: magla (~gelignite@55d416bb.access.ecotel.net)
[13:05:46] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[13:06:19] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[13:08:11] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[13:12:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[13:13:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:25:35] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[13:30:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[13:31:44] *** Quits: Northwoods (~Northwood@202.14.122.173) (Ping timeout: 256 seconds)
[13:33:51] *** Joins: alien_lappy (~alien@user/alien)
[13:43:51] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[13:46:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:51:34] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[14:03:01] *** Joins: Miles8of9 (~obrien@93-34-146-123.ip50.fastwebnet.it)
[14:07:21] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[14:14:17] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[14:17:22] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[14:22:02] *** Joins: andy268 (~andy268@123203050146.ctinets.com)
[14:22:41] *** Quits: andy268 (~andy268@123203050146.ctinets.com) (Client Quit)
[14:24:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[14:24:10] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[14:28:52] *** Joins: Rockwood (~Rocky@user/rocky)
[14:30:23] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[14:51:26] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[15:01:54] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[15:02:57] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[15:03:28] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[15:08:29] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[15:11:28] *** Quits: brentaarnold (~brentaarn@24.112.41.183) (Ping timeout: 256 seconds)
[15:11:29] *** Quits: magla (~gelignite@55d416bb.access.ecotel.net) (Quit: Stay safe!)
[15:12:22] *** Joins: keypusher (keypusher@user/keypusher)
[15:17:37] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[15:43:02] *** Joins: christianPHP (~christian@190.232.168.7)
[15:54:11] *** Quits: christianPHP (~christian@190.232.168.7) (Quit: Client closed)
[15:56:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:01:16] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[16:12:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[16:22:58] *** Joins: Northwoods (~Northwood@202.14.122.173)
[16:23:07] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 240 seconds)
[16:25:14] *** Joins: wyre (~wyre@user/wyre)
[16:25:33] *** Quits: Northwoods (~Northwood@202.14.122.173) (Client Quit)
[16:31:08] *** Quits: wyre (~wyre@user/wyre) (Read error: Connection reset by peer)
[16:34:12] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:42:51] *** Joins: Cyberg33k (~Cybergeek@80.161.188.186)
[16:45:40] *** Joins: wyre (~wyre@user/wyre)
[16:46:37] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[16:47:45] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[16:48:51] *** Quits: wyre (~wyre@user/wyre) (Client Quit)
[16:49:01] *** Joins: christianPHP (~christian@190.232.168.7)
[16:49:47] *** Joins: wyre (~wyre@user/wyre)
[16:54:17] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 245 seconds)
[17:01:34] *** Joins: wyre (~wyre@user/wyre)
[17:03:40] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[17:07:06] *** Joins: guy_frm_yogaland (~guy_frm_y@117.228.62.158)
[17:07:21] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[17:07:42] <guy_frm_yogaland> hi guys, I am facing an error in the code that I tried it few hours back
[17:08:03] <guy_frm_yogaland> error is: Array to string conversion
[17:08:36] <guy_frm_yogaland> here is the code: https://gist.github.com/hardRockWorld/cd8e19324b086dacdb23a5e373492395
[17:12:10] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[17:12:22] <da_wunder> sharing that actual line where that error is coming would help
[17:12:56] *** Joins: hmmhesays (~hmmhesays@167.88.62.87)
[17:12:58] <guy_frm_yogaland> L124
[17:14:05] <da_wunder> so debug that $config - that error is telling that that actual value in that array is also an array
[17:14:27] <s17> $config["require-dev"][$devDependency]
[17:14:33] *** Quits: guy_frm_yogaland (~guy_frm_y@117.228.62.158) (Quit: Client closed)
[17:15:07] <da_wunder> and if you look eg. line 17 on that gist - you're defining an array as a value to that variable
[17:15:20] <da_wunder> s/line 17/line 16
[17:15:35] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[17:16:55] *** Joins: guy_frm_yogaland (~guy_frm_y@117.228.62.158)
[17:17:11] <guy_frm_yogaland> sorry, got disconnected
[17:17:17] <guy_frm_yogaland> back now
[17:17:30] <guy_frm_yogaland> did I miss?
[17:18:05] <da_wunder> guy_frm_yogaland: on that line 124 you could do something like - echo $key . "=>" . is_array($value) ? implode(', ', $value) : $value . "\n";
[17:18:52] <da_wunder> guy_frm_yogaland: your config variable values can be an array eg. look lines 16, 18, 19 and 20
[17:21:36] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[17:22:43] <guy_frm_yogaland> do you mean I should change the definition of config as "" instead of []?
[17:23:06] <da_wunder> then your implementation also needs changes
[17:23:47] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[17:24:15] *** Joins: WishBoy (~WishBoy@user/wishboy)
[17:24:54] <da_wunder> you're using those as an array in that code, look lines 47:60 - but also you're using that as not an array look like 44 - which makes things harder to developers to understand - in one case some parameter is an array and in other case it's a string
[17:25:55] <s17> if (is_array($v)) { /* more loop */ }
[17:27:15] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[17:29:00] <da_wunder> also please use === instead of ==
[17:29:16] <da_wunder> I hope that you know the difference of those
[17:32:15] <guy_frm_yogaland> yes
[17:35:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:36:58] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[17:41:14] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 250 seconds)
[17:43:33] *** Quits: christianPHP (~christian@190.232.168.7) (Quit: Client closed)
[17:55:57] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:10:29] *** Quits: guy_frm_yogaland (~guy_frm_y@117.228.62.158) (Ping timeout: 256 seconds)
[19:03:27] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[19:07:12] *** Quits: simius (~simius@user/simius) (Ping timeout: 245 seconds)
[19:10:13] *** Joins: simius (~simius@user/simius)
[19:29:16] *** Joins: toretto (~ryan@user/toretto)
[20:04:53] <__adrian> jmpp: just saw your question. yes, you can  use..as/insteadof
[20:05:00] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[20:05:37] <__adrian> still sounds like something you should just name differently, but it's possible. if it's several `use` statements deep, then you might need to import that traits directly and then resolve all at once
[20:22:00] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[20:30:04] *** Joins: junktext (~junktext@109.201.152.161)
[20:33:52] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[20:36:43] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[20:37:58] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:41:45] *** Quits: guidoc (~guido@host-79-27-251-55.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[20:42:33] *** Joins: guidoc (~guido@host-79-27-251-55.retail.telecomitalia.it)
[20:46:38] *** Joins: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch)
[21:15:01] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-a5f3-370f-2c5a-80de.res6.spectrum.com)
[21:40:44] *** Joins: Alex8532 (Alex8532@user/alex8532)
[21:47:22] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[21:50:44] *** Joins: keypusher (~keypusher@user/keypusher)
[22:06:13] *** Joins: keypushe- (keypusher@user/keypusher)
[22:07:10] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 240 seconds)
[22:09:28] *** keypushe- is now known as keypusher
[22:13:57] *** Joins: Rockwood (~Rocky@user/rocky)
[22:17:25] <Stanley> Just remembering someone the other day who posted in discord saying that "$var == 'admin'" wasn't working as a conditinal, it kept failing, and nobody replied and he said "nevermind, fixed it by changing it to $var = 'admin'
[22:18:19] <Byteflux> Nice, bugs disguising themselves as solutions!
[22:19:28] <Rockwood> o/
[22:23:48] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-a5f3-370f-2c5a-80de.res6.spectrum.com) (Quit: Leaving)
[22:24:58] <da_wunder> huoh, sometimes I just wonder what people are thinking when they're doing some coding...
[22:25:34] *** Quits: Cyberg33k (~Cybergeek@80.161.188.186) (Quit: This computer has gone to sleep)
[22:26:13] *** Quits: impliednude (~impliednu@172.56.42.65) (Ping timeout: 252 seconds)
[22:28:04] *** Quits: Junxter (~Junxter@114.221.66.47) (Read error: Connection reset by peer)
[22:35:33] <Rockwood> da_wunder, i love without coding :D
[22:36:05] <Rockwood> life is harder
[22:47:40] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[22:51:45] *** LSD is now known as acidsys
[22:56:39] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[23:00:05] *** Joins: duidvd (~axe@178.238.173.195)
[23:01:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[23:04:48] *** Joins: Rockwood (~Rocky@user/rocky)
[23:09:51] <Rockwood> hi
[23:10:07] <duidvd> hi
[23:10:19] <Rockwood> h r u?
[23:10:39] <Rockwood> i am happy someone is alive here
[23:11:47] <Robdgreat> duidvd: Rockwood keeps forgetting this isn't #phpc
[23:18:40] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[23:19:09] *** Joins: Rockwood (~Rocky@user/rocky)
[23:22:18] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: It's a dud! It's a dud! It's a du...)
[23:23:53] *** Joins: magla (~gelignite@55d416bb.access.ecotel.net)
[23:24:16] *** Joins: paule32 (~paule32@user/paule32)
[23:24:20] <paule32> hello
[23:25:08] <paule32> i have a string: "100px", and a value: 20, how can i convert the string "100px" to "120px" ?
[23:25:41] <__adrian> the unit (px) should not be part of the same string as the value (100)
[23:25:42] <paule32> also in principle a addition 100 + 20
[23:25:47] <__adrian> keep them separate
[23:29:34] <__adrian> e.g., $px = 100; $px += 20; echo "{$px}px";
[23:34:00] <Byteflux> You should probably be using SASS
[23:34:12] <Byteflux> If this is for CSS
[23:35:22] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-0ec9-68f3-b8b9-8bd4.res6.spectrum.com)
[23:43:15] <__adrian> true; but worth answering in the general sense
[23:45:40] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[23:46:55] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:48:21] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[23:48:45] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:51:17] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[23:51:46] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:53:07] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[23:55:51] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:59:45] *** Quits: Akimb (~Akimb@86.100.13.100) (Quit: Leaving)
