[00:03:43] *** Quits: japhb (~geoff@mugs/japhb) (Quit: leaving)
[00:14:45] *** Joins: Guest70 (~Guest70@89.151.178.153)
[00:15:03] *** Quits: Guest70 (~Guest70@89.151.178.153) (Client Quit)
[00:15:16] *** Joins: Guest70 (~Guest70@89.151.178.153)
[00:15:19] *** Parts: Guest70 (~Guest70@89.151.178.153) ()
[00:16:32] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (Ping timeout: 252 seconds)
[00:24:35] *** Quits: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr) (Quit: leaving)
[00:29:34] *** Joins: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr)
[00:39:13] *** Quits: MasterDuke (~MasterDuk@94.0.188.131) (Quit: Connection closed)
[00:40:52] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[00:46:14] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (Ping timeout: 252 seconds)
[00:46:23] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[00:51:05] *** Joins: MasterDuke (~MasterDuk@94.0.188.131)
[00:51:12] *** Quits: jgaz (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201) (Quit: Leaving)
[00:51:26] *** Quits: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8) (Ping timeout: 260 seconds)
[00:52:00] <lizmat> tonyo: so "fez org list" shows up empty, which means I would have to create an org from scratch, right ?
[01:00:42] <tonyo> yea lizmat 
[01:01:12] <lizmat> any limitations as to the org name ?
[01:02:25] <tonyo> as long as there is no user or group with that name existing
[01:04:11] <lizmat> ok
[01:08:32] <lizmat> tonyo should I get a mail after creating an org?
[01:08:43] <tonyo> nope, just on invites
[01:09:04] *** Quits: mcmillhj (~mcmillhj@c-va-bf0f2b8e02-14356-1.tingfiber.com) (Quit: Connection closed)
[01:09:10] <lizmat> and I guess the auth of a module should then be zef:org-name right ?
[01:09:48] <tonyo> yea
[01:10:02] <lizmat> ok, lemme take one then as a test case  :-)
[01:10:31] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[01:16:04] *** Joins: dg (~dgl@dg.wtf)
[01:19:19] <tonyo> which one you uploading?
[01:19:31] <lizmat> well, I am looking at Die
[01:19:38] <lizmat> simple, straightforward :-)
[01:34:23] *** Joins: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8)
[01:36:22] <lizmat> tonyo: hmmm.. it appears that mi6 will need some tweaking before this gets straigtforward
[01:44:42] <lizmat> yeah, will need some work on App::Mi6
[01:45:55] <lizmat> auth 'zef:raku-community-modules' in META6.json does not match auth 'zef:lizmat' in ~/.fez-config.json  
[01:56:13] *** Quits: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net) (Quit: guifa)
[02:16:14] *** Quits: patrickb (~quassel@55d4db19.access.ecotel.net) (Quit: Quit.)
[02:23:58] <lizmat> tonyo: Die:auth<zef:community-modules> should now be a thing
[02:24:10] <lizmat> tonyo: Die:auth<zef:raku-community-modules> 
[02:24:13] <lizmat> rather
[02:24:27] <Xliff> I'm trying to put a custom trait on a class definition. Which trait mod can I use for that?
[02:24:42] <Xliff> trait_mod:<is> will not work for classes, since it is used for inheritance.
[02:24:55] <lizmat> sub trait_mod:<is> probably?
[02:25:10] <lizmat> make sure the name of the trait is a *required* named argument
[02:25:50] <lizmat> sub trait_mod:<is>(Any:U $class, :$foo!) { dd }; class A is foo { }
[02:25:54] <lizmat> m: sub trait_mod:<is>(Any:U $class, :$foo!) { dd }; class A is foo { }
[02:25:54] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Type check failed in binding to parameter '$class'; expected Any but got A (A)‚ê§at <tmp>:1‚ê§¬ª
[02:26:39] <lizmat> m: sub trait_mod:<is>(Mu:U $class, :$foo!) { dd }; class A is foo { }
[02:26:39] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´sub trait_mod:<is>(Mu:U $class, :$foo!)‚ê§¬ª
[02:26:53] <lizmat> Xliff ^
[02:27:58] <Xliff> Ooh! Let me try.
[02:30:12] <Xliff> And I take it roles cannot be punned on to type objects?
[02:30:52] <gfldex> m: multi sub trait_mod:<is>(Mu:U $c, :$foo) { say $c.^mro; }; class C is Any is foo<42> { }
[02:30:53] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´((C) (Any) (Mu))‚ê§¬ª
[02:31:11] <gfldex> Looky like you need to add Any by hand in this case.
[02:40:48] *** Quits: getimiskon (~getimisko@2a02:587:a024:7200:32d1:6bff:fe91:3cc9) (Quit: WeeChat 3.3)
[02:41:32] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (Ping timeout: 240 seconds)
[02:42:35] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[03:03:10] <Xliff> Hum...
[03:03:35] <Xliff> m: use NativeCall; class A is repr<CStruct> { has uint32 $.a }; A.REPR.say
[03:03:36] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´CStruct‚ê§¬ª
[03:03:47] <Xliff> m: use NativeCall; class A is repr<CStruct> { has uint32 $.a }; A.REPR.say; ::("A").REPR.say
[03:03:47] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´CStruct‚ê§CStruct‚ê§¬ª
[03:06:34] <tonyo> lizmat: looks good
[03:06:46] <tonyo> the first RCM module in fez
[03:07:11] <Xliff> Hum.
[03:07:14] <Xliff> I think we haz problem.
[03:07:32] <Xliff> If i use a module with a struct, I get the right .REPR value
[03:07:49] <Xliff> However if I late-load AND late-bind, said .REPR is now P6opaque
[03:08:14] <Xliff> ./p6gtkexec -e 'require ::("GDA::Raw::Structs"); ::("GdaTimestamp").REPR.say' # P6opaque
[03:08:30] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[03:08:50] <Xliff> ./p6gtkexec -e 'use GDA::Raw::Structs; GdaTimestamp.REPR.say' # CStruct
[03:08:58] <lizmat> Xliff: is repr() needs to be done on the very first mention of a class, even if it is a stub
[03:09:06] <lizmat> that's a known issue afaik
[03:09:20] <Xliff> lizmat: This did not happen prior to new-disp.
[03:09:37] <Xliff> Even late bound references returned the right REPR
[03:09:53] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:09:54] <Xliff> And this is not about "is repr" on first mention. I know this.
[03:09:58] <lizmat> hmmm... well, then please make an issue and make sure jnthn is pinged on it
[03:10:04] <Xliff> This is about retrieving the REPR at run-time
[03:10:17] <Xliff> lizmat: OK. Will do.
[03:12:10] <Geth> ¬¶ ecosystem: fe27c24133 | (Elizabeth Mattijsen)++ | META.list
[03:12:10] <Geth> ¬¶ ecosystem: Die now lives in the zef ecosystem
[03:12:10] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/fe27c24133
[03:18:17] *** Quits: xinming (~xinming@115.219.33.162) (Ping timeout: 240 seconds)
[03:37:06] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:37:43] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:24:53] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[04:40:45] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:43:22] *** Joins: jgaz (~jgaz@2600:8805:d980:7620::9e0)
[04:43:39] *** Quits: jgaz (~jgaz@2600:8805:d980:7620::9e0) (Client Quit)
[04:43:44] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[04:43:59] *** Joins: jgaz (~jgaz@2600:8805:d980:7620::9e0)
[05:16:17] *** Quits: [Coke] (~coke@172.58.235.197) (Ping timeout: 240 seconds)
[05:24:41] *** Joins: [Coke] (~coke@172.58.239.48)
[05:25:05] *** Quits: jgaz (~jgaz@2600:8805:d980:7620::9e0) (Quit: Leaving)
[06:25:05] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:25:05] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:25:05] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:25:05] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:25:05] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:25:05] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:25:05] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:25:05] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:25:29] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[06:26:51] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[06:27:02] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[06:27:04] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[06:27:04] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[06:27:05] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[06:27:19] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[06:27:39] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[06:27:46] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[06:28:16] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[06:31:22] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[06:44:48] *** Joins: xinming (~xinming@115.219.37.5)
[07:25:34] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[07:26:27] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[08:25:53] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[08:25:59] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[08:26:25] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:26:38] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[08:27:12] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[08:27:46] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[09:27:47] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:47] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:47] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:27:47] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:27:47] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:27:47] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:27:47] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:27:47] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:27:47] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:27:47] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:47] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:47] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:47] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:47] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:47] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:47] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:27:47] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:27:47] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:28:13] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[09:30:00] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:30:18] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:30:51] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[09:30:51] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[09:38:45] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:28:08] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[10:28:23] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[10:29:16] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[10:29:43] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[10:30:06] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[10:30:12] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[10:34:05] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[10:50:52] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:51:37] *** Joins: seednode (~seednode@user/seednode)
[10:57:28] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[10:57:28] *** Quits: atroxaper (~atroxaper@178.49.194.113) (Read error: Connection reset by peer)
[10:57:45] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[11:28:37] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[11:28:54] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[11:29:33] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[11:30:19] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[11:45:46] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[11:47:43] <atroxaper> What if I need version higher then 1.5 but not 2. I thought that 1.5+ is what I need, but...
[11:47:52] <atroxaper> m: v2.0.0 ~~ v1.5+
[11:47:53] <camelia> rakudo-moar b5fb3628b: ( no output )
[11:48:08] <atroxaper> m: say v2.0.0 ~~ v1.5+
[11:48:08] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´True‚ê§¬ª
[11:49:09] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:51:20] *** Joins: casaca (~casaca@user/casaca)
[12:05:10] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[12:05:39] *** Joins: seednode (~seednode@user/seednode)
[12:16:46] <atroxaper> As I see in version.t, such logic was not provided at all.
[12:28:58] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[12:29:21] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[12:30:13] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[12:34:55] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[12:36:24] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Remote host closed the connection)
[12:36:48] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[12:39:40] *** Quits: atroxaper (~atroxaper@178.49.194.113) (Remote host closed the connection)
[12:41:00] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 240 seconds)
[12:41:36] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[13:20:26] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Read error: Connection reset by peer)
[13:21:19] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[13:28:32] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[13:31:10] <lizmat> atroxaper: I think :api was more foreseen for these types of situations?
[13:31:12] <tellable6> lizmat, I'll pass your message to atroxaper
[13:37:19] * lizmat clickbaits https://rakudoweekly.blog/2021/12/20/2021-51-transiting/
[13:38:48] <discord-raku-bot> <Anton Antonov#7232> @lizmat I find your update of `Acme::Text::UnsideDown` instructive. (The CLI part.)
[13:39:13] <lizmat> nice  :-)
[13:39:51] <lizmat> I was thinking of adding üôÉ , but am unsure of what the counterpart should be
[13:42:32] <lizmat> I guess üôÇ
[13:45:00] <discord-raku-bot> <Anton Antonov#7232> @lizmat Right! I was thinking about non-English / non-Latin characters too.
[13:47:04] <discord-raku-bot> <Anton Antonov#7232> @lizmat BTW, I am intensively working on the "Raku for Data Wrangling" article. There are just lots of little things to clear-up. (E.g. program and completely understand...)
[13:47:39] <lizmat> do you intend that as an Advent blog post ?
[13:49:08] <discord-raku-bot> <Anton Antonov#7232> Yes. I will put a draft in GitHub within 2 hours.
[13:49:09] <discord-raku-bot> <Anton Antonov#7232> As far as I know I missed the deadline for FOSDEM22
[13:49:42] <moritz_> wasn't that extended to 2021-12-31?
[13:50:06] <lizmat> indeed, extended to 31-12!
[13:51:12] <discord-raku-bot> <Anton Antonov#7232> <@171354420292878346>tz_ and @lizmat Great then!
[13:58:29] <CIAvash> m: say v2.0.0 ~~ v1.5 ..^ v2
[13:58:29] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´False‚ê§¬ª
[13:59:54] <moon-child> hmm, now I am thinking
[13:59:58] <moon-child> there should be range junctions
[14:00:31] <CIAvash> atroxaper: maybe `v2.0.0 ~~ v1.5 ..^ v2`
[14:00:33] <tellable6> CIAvash, I'll pass your message to atroxaper
[14:01:46] <moon-child> hmm, no, that wouldn't work
[14:02:02] <moon-child> junctions need to be discrete for dispatch
[14:02:06] <moon-child> :/
[14:04:09] <lizmat> Anton Antonov: PRs accepted  :-)
[14:28:32] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:28:32] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[14:30:07] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:38:01] <ugexe> v1.*
[14:38:56] <ugexe> Yeah guess that isn‚Äôt quite it either
[14:41:16] <ugexe> I‚Äôd just treat it like two expressions 
[15:03:57] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[15:05:34] <atroxaper> lizmat: yes. I've already figured that out. I prepare a post about versioning at all and in Raku in particular.
[15:05:36] <tellable6> 2021-12-21T10:01:12Z #raku <lizmat> atroxaper: I think :api was more foreseen for these types of situations?
[15:05:36] <tellable6> 2021-12-21T10:30:33Z #raku <CIAvash> atroxaper: maybe `v2.0.0 ~~ v1.5 ..^ v2`
[15:11:06] <atroxaper> tellable6: I think I cannot write Module:ver<1.5 .. ^2> ^^
[15:11:07] <tellable6> atroxaper, I haven't seen I around, did you mean I`?
[15:11:24] <atroxaper> CIAvash: I think I cannot write Module:ver<1.5 .. ^2> ^^
[15:12:25] <lizmat> atroxaper: indeed, one cannot atm, but I don't see why that syntax couldn't be supported in a use statement
[15:12:44] <lizmat> I assume you'd still want the highest version number in that range, right ?
[15:13:17] <atroxaper> lizmat: yes.
[15:13:43] <lizmat> that *should* be doable, I guess...  :-)
[15:16:30] <atroxaper> lizmat: In languages without API option in versioning the first digit is an api version, you know that. Usecase:  I 'know' that some functionality is appears in version 1.5. But I want to be safe and do not use v2 automatically. 
[15:17:02] <lizmat> understood
[15:29:14] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:37:35] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:40:37] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[15:40:59] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 268 seconds)
[15:53:35] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[15:54:37] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[15:56:07] <xinming> releasable6: status
[15:56:09] <releasable6> xinming, Next release will happen when it's ready. 3 blockers. 0 out of 188 commits logged (‚ö† 18 warnings)
[15:56:10] <releasable6> xinming, Details: https://gist.github.com/8cfbcaab16868cffa1c3339a3e4f4cea
[15:56:21] <xinming> Waiting for the xmas release. :-)
[15:57:59] <lizmat> jdv is still on it afaik  :-)
[16:00:52] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 256 seconds)
[16:02:08] <Geth> ¬¶ ecosystem: abeff82834 | (Elizabeth Mattijsen)++ | META.list
[16:02:08] <Geth> ¬¶ ecosystem: Slang::Roman now lives in the zef ecosystem
[16:02:08] <Geth> ¬¶ ecosystem: 
[16:02:08] <Geth> ¬¶ ecosystem: https://raku.land/zef:raku-community-modules/Slang::Roman
[16:02:08] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/abeff82834
[16:05:45] <MasterDuke> ¬†i don't know why https://github.com/rakudo/rakudo/issues/4314 is marked as a blocker, and i think https://github.com/rakudo/rakudo/issues/4593 can be closed
[16:06:32] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[16:07:42] <lizmat> MasterDuke: unmarked and closed
[16:21:37] *** Joins: TheAthlete (~TheAthlet@176.96.230.99)
[16:28:49] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[16:31:00] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[16:36:17] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 240 seconds)
[16:41:20] *** Joins: jgaz (~jgaz@2600:8805:d980:7620::9e0)
[16:49:08] *** Joins: tejr_ (~tejr@user/tejr)
[16:50:05] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[16:52:08] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[17:22:35] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:23:02] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[17:42:17] *** Quits: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[17:47:55] <atroxaper> lizmat: one more thing about range in :ver<>. We will need something appropriate in META6->depends then.
[17:53:16] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 245 seconds)
[17:53:37] *** Joins: getimiskon (~getimisko@2a02:587:a024:7200:32d1:6bff:fe91:3cc9)
[18:05:31] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[18:09:49] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 240 seconds)
[18:10:58] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[18:15:44] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 256 seconds)
[18:16:56] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[18:21:24] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 256 seconds)
[18:22:40] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[18:26:31] <[Coke]> https://raku-advent.blog/2021/12/21/day-21-santa-claus-is-rakuing-along/ - code formatting looks a little odd.
[18:27:30] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 268 seconds)
[18:28:25] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[18:32:37] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 240 seconds)
[18:32:37] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[18:34:25] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[18:52:35] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:52:53] *** Joins: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr)
[18:56:55] <ugexe> versions are already ranges
[18:57:02] <ugexe> 1.* is a range. 1.5+ is a range
[18:57:56] <ugexe> which is to say syntax like v1 ~~ vX .. vZ wouldnt really work
[18:58:55] <ugexe> we have api, perhaps we should just use that
[18:59:05] <ugexe> you have your api range, and your version range
[18:59:59] <ugexe> Foo:api<1>:ver<0.5+>
[19:02:07] <ugexe> version literals also complicate things
[19:02:09] <ugexe> m: say v1.1..^1
[19:02:10] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´v1.1..^1‚ê§¬ª
[19:03:36] <ugexe> so im not sure trying to cram semver semantics into our existing version semantics has been given sufficient forethought 
[19:09:07] <ugexe> to be clear im not against it, just pointing out the problems
[19:38:37] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 240 seconds)
[19:44:35] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[19:54:04] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (Quit: WeeChat 3.2)
[19:54:11] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[20:33:05] <atroxaper> ugexe: I was just surprised that 2.0~~1.5+ is true. Not all authors observe cleanliness in versioning. I would like to be able to depend on such projects more flexibly. If I could write something like 2.0!~~1.5? is true, it would be great.
[20:33:09] <atroxaper> In any case, there is a need to tell people how, in what cases and why to use versions in the projects. I plan to write an article about it.
[20:33:14] <atroxaper> Python and Java, for example, have closed project environment (venv and jar). Raku has a shared place for all libraries. And in our case, the attention to versioning (both on the part of the authors and on the part of the users) should be high. I think.
[20:33:34] <ugexe> you just need to check api and version separately
[20:34:20] <ugexe> $dist.meta<api> ~~ 1.* && $dist.meta<ver> ~~ 0.5+
[20:35:51] <ugexe> that relies on the author versioning their stuff in the idiomatic raku way, but that would be the case regardless of what versioning semantics were used
[20:38:46] <atroxaper> ugexe: I completely agree with the last sentence. 
[20:40:15] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[20:40:32] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[20:44:34] <atroxaper> ugexe: I didn't find in the documentation some simple recipe for "do this, but don't do that." For example, it was a finding for me (although obvious) that writing a version in META6 depends section is not enough - you also need to write a version in use. In addition, I still cannot understand what usage can be found for specifying the version and authorship over a specific class in the code (class A: version<1> {... }) - because the use op
[20:44:34] <atroxaper> erates with the concept of compunit, but not package.
[20:45:10] <ugexe> then again the synopsis said that 6.2.3+ should match 6.2.*
[20:46:35] <ugexe> well you could set your in-code version/authorship with the data from the meta6.json
[20:46:59] <atroxaper> verstion.t disagree :)
[20:47:25] <ugexe> sure, the synopsis were written like 20 years ago and aren't the spec
[20:47:36] <atroxaper> yes.
[20:49:45] <ugexe> class Foo:ver($?DISTRIBUTION.meta<ver>) { }
[20:49:45] <evalable6> ugexe, rakudo-moar efbf8ea4f: OUTPUT: ¬´Use of Nil in string context‚ê§‚ê§¬ª
[20:49:46] <atroxaper> ugexe: but for what I would need to set in-code (not in use statement) version/authorship at all?
[20:50:02] <ugexe> i dunno, you tell me
[20:50:34] <atroxaper> WOW! Cool! I didn't know about $?DISTRIBUTION.meta<ver>.
[20:50:57] <ugexe> yep, and you can `use Module::In::My::Dist:ver($?DISTRIBUTION.meta<ver>);` as well
[20:52:50] <atroxaper> http://localhost:3000/language/typesystem#Versioning,_authorship,_and_API_version. I can set version for class. But... I don't know why. And nobody do not know. Until I started to deal with versioning through experiments, this possibility confused me.
[20:53:45] <ugexe> i dont think its really used by anything
[20:53:56] <atroxaper> bad link https://docs.raku.org/language/typesystem#Versioning,_authorship,_and_API_version.
[20:55:25] <ugexe> i'd probably just mention that at all
[20:55:34] <ugexe> not mention^
[20:55:38] <atroxaper> ugexe: yes! And it confused me. For example, I think "the smart guy FCO write this. For what?!' https://github.com/FCO/Red/blob/master/lib/Red.pm6#L25
[20:56:39] <atroxaper> 'Should I write that too?...'
[21:03:05] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[21:18:57] *** Quits: holyghost (~holyghost@2a02:a03f:64c8:9200:7d56:46d3:2b1d:99cb) (Quit: This computer has gone to sleep)
[21:21:07] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[21:24:51] *** Quits: atroxaper (~atroxaper@178.49.194.113) ()
[21:29:25] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[21:38:00] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:38:23] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:51:39] *** Joins: casaca (~casaca@user/casaca)
[21:53:08] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[22:28:36] *** Quits: TheAthlete (~TheAthlet@176.96.230.99) (Quit: Client closed)
[23:18:05] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[23:25:20] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 268 seconds)
[23:38:32] <kybr> do we have argmin? or the like? 
[23:41:24] *** vrurg_ is now known as vrurg
[23:48:06] <lizmat> kybrL what does argmin do?
[23:48:55] <lizmat> kybr: what does argmin do?
[23:57:12] <kybr> m: sub argmin(@list) { my $min-i = -1; my $min = Inf; for @list.kv -> \k, \v { if v < $min { $min =     v; $min-i = k; } } $min-i, $min }
[23:57:12] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> 3v < $min { $min =     v; $min-i = k; } }7‚èè5 $min-i, $min }‚ê§¬ª
[23:57:49] <kybr> darn. sorry. return the index of the element with the lowest value
[23:58:23] <kybr> a common function in MATLAB-y environments. R, numpy, etc.
[23:58:48] <lizmat> kybr: is that the first lowest value, or all lowest values?
[23:59:20] *** Quits: jgaz (~jgaz@2600:8805:d980:7620::9e0) (Quit: Leaving)
[23:59:25] <kybr> hmmm. first will do, but i could see a argument for all.
[23:59:37] <gfldex> kybr: We hardly ever work with indexes, because they can be a little brittle. You can get the smallest element with `[min] @list`.
[23:59:56] <kybr> i thought there might be a more rakuvian way to do it
