[00:10:06] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[00:21:57] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[00:22:47] *** Quits: tomsmeding (~tomsmedin@2a01:4f8:c0c:5e5e::2) (Quit: ZNC 1.8.2 - https://znc.in)
[00:23:26] *** Joins: tomsmeding (~tomsmedin@2a01:4f8:c0c:5e5e::2)
[00:25:05] *** Quits: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[00:31:46] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[00:33:11] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[00:34:20] *** Joins: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[01:04:21] *** Joins: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[01:06:48] *** Quits: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[01:22:39] *** Joins: ski (~ski@remote12.chalmers.se)
[01:54:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:16:52] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[02:17:00] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[02:24:34] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[02:24:55] *** Joins: hololeap (~hololeap@user/hololeap)
[02:28:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[02:40:24] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[02:46:16] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[02:50:28] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:50:47] *** Quits: iteratee (~kyle@162.218.222.107) (Read error: Connection reset by peer)
[02:50:57] *** Joins: iteratee (~kyle@162.218.222.107)
[03:17:06] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::45ee)
[03:40:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[03:43:00] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:57:14] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[04:25:11] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:59:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[05:08:36] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::45ee) (Ping timeout: 240 seconds)
[06:16:04] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[06:55:43] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:14:47] *** Quits: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[07:20:25] *** Joins: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[07:29:37] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[07:38:08] *** Joins: srk- (~sorki@user/srk)
[07:41:54] *** Quits: srk (~sorki@user/srk) (Ping timeout: 272 seconds)
[07:41:55] *** srk- is now known as srk
[08:06:02] *** Quits: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[08:25:00] *** Joins: coot (~coot@213.134.190.95)
[09:26:26] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:00:51] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[10:19:44] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Ping timeout: 250 seconds)
[10:34:54] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[10:53:32] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[11:01:17] *** Joins: arjun (~arjun@user/arjun)
[11:05:43] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[11:38:18] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[11:50:33] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:17:15] *** Joins: fendor (~fendor@91.141.73.245.wireless.dyn.drei.com)
[12:38:54] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[12:43:01] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[12:45:20] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[13:04:55] *** Joins: __monty__ (~toonn@user/toonn)
[13:07:25] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[13:15:32] *** Joins: kritzefitz (~kritzefit@debian/kritzefitz)
[13:47:50] *** Quits: ph88 (~ph88@89-220-184-245.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[14:04:39] *** Joins: coot (~coot@213.134.190.95)
[14:13:26] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[14:18:57] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[14:27:47] *** Joins: Midjak (~Midjak@82.66.147.146)
[14:29:31] *** Joins: __monty__ (~toonn@user/toonn)
[14:32:51] *** Joins: ph88 (~ph88@89-220-184-245.cable.dynamic.v4.ziggo.nl)
[14:41:16] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[14:45:06] *** Joins: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[14:45:32] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[14:49:32] *** Quits: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[15:01:43] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:01:54] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:11:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:13:48] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:15:02] *** Joins: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[16:42:48] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[16:47:17] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[17:12:24] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[17:37:26] <kuribas> I wonder if clojure has a foldmap...
[17:37:36] <kuribas> or fold...
[17:39:25] <kuribas> for hashmaps (apply merge-with into ...) should work.
[17:39:36] <kuribas> actually fold for haskell Maps isn't very useful.
[17:40:02] <kuribas> I'd have prefered (Monoid v, Ord k) => Monoid (Map k v)	 
[17:40:35] <kuribas> mappend'ing maps can throw away elements, why doesn't feel very monoid-like.
[17:40:39] <tomsmeding> kuribas: merijn has ranted in the past about Map's Semigroup instance already
[17:40:42] <merijn> kuribas: Yes!
[17:40:45] <merijn> Join me
[17:40:53] <kuribas> where do I sign :)
[17:41:18] <merijn> I have ranted *repeatedly* about it in the past. But some people claim the current version is better. These people, are, of course, absolutely wrong
[17:41:44] <tomsmeding> issue is that it's hard to change now after the facr
[17:41:47] <tomsmeding> *fact
[17:42:42] <kuribas> it may break existing code.  Or maybe fix existing broken code :)
[17:44:35] <tomsmeding> the fact that a breaking change might also fix certain broken code is usually not a good argument for making that breaking change :p
[17:45:40] <kuribas> some people think breaking changes code should never happen.
[17:45:56] <kuribas> Like the Eq typeclass
[17:46:51] <tomsmeding> those people should go program Go
[17:46:56] <tomsmeding> mostly /s
[17:47:23] <kuribas> if those changes don't break silently, it's fine IMO...
[17:48:14] <tomsmeding> there is value in avoiding unnecessary breakage, i.e. if you can achieve the same goals without breakage, do that instead
[17:49:18] <tomsmeding> but yes, I agree, a prime selling point of Haskell is the refactorability for stuff that the compiler can catch, so if the compiler can catch code that changes semantics after the breaking change and it's easy to fix, it's fine
[17:49:47] <kuribas> Having a pipeline fail because you upgraded the compiler or library is fine.
[17:50:16] <tomsmeding> though preferably the issue should then be easy to fix
[17:50:59] <tomsmeding> tangentially but along the same vein, I have never understood why some people #define NDEBUG in C in release mode (i.e. disable assertions) -- the assertions are there for a reason!
[17:51:29] <tomsmeding> I believe cmake even does that by default
[17:51:48] <[exa]> bEcAuSe SpEeD
[17:51:54] <[exa]> !!!11
[17:52:06] <tomsmeding> and because you are able to write code without bugs or something
[17:52:21] <tomsmeding> if I was confident the code had no bugs, I would have removed the assertions
[17:52:35] <geekosaur> yeh, the assumption is that assertions test things that cost extra time/memory
[17:53:16] <tomsmeding> I guess I've just been lucky that all (100%) of the assertions I've written in C in my life have been cheap ones?
[17:53:25] <tomsmeding> might have to do with the application domain
[17:54:03] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Ping timeout: 250 seconds)
[17:55:27] <geekosaur> maybe. the stuff I read in vol.2 unix programmers manual assumed you had cheapstuff that was always enabled and complex/time consuming stuff hidden behind NDEBUG
[17:56:09] <merijn> Also, assertions trigger core dumps which might not be desirable on user systems
[17:56:13] <tomsmeding> ah
[17:56:28] <merijn> assert causes SIGABRT whose default handler dumps core
[17:56:39] <tomsmeding> good point about core dumps I guess
[17:56:54] <merijn> Which is why you use them in debug builds (because you can inspect the core of the violation)
[18:09:43] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[18:23:10] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[18:34:38] <Zemyla> https://twitter.com/jckarter/status/1504210397712162816
[18:35:33] *** Joins: coot (~coot@213.134.190.95)
[18:37:19] <merijn> Zemyla: If you like that, I found a great paper recently
[18:37:46] <merijn> Zemyla: "A Simple, Possibly Correct LR Parser for C11"
[18:37:47] <merijn> https://hal.archives-ouvertes.fr/hal-01633123/document
[18:38:05] <merijn> Which has some **cursed** levels of C
[19:19:18] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[19:45:38] <tomsmeding> `extern void foo;` had me snorting
[19:45:41] <tomsmeding> what is that even supposed to mean
[19:47:03] <merijn> I like the "possibly correct" in the title :p
[19:47:53] <tomsmeding> merijn: are those not the compcert people
[19:48:05] *** Joins: arjun_ (~arjun@user/arjun)
[19:48:15] <tomsmeding> they're bound to assign a very precise meaning to the word "correct"
[19:48:34] <tomsmeding> oh, my 'extern void foo;' was from https://gist.github.com/fay59/5ccbe684e6e56a7df8815c3486568f01 by the way
[19:49:02] *** Quits: arjun_ (~arjun@user/arjun) (Client Quit)
[19:49:53] *** Quits: arjun (~arjun@user/arjun) (Ping timeout: 252 seconds)
[19:53:58] <merijn> Yeah, I just used to think the C grammar was easier than C++...and it is, but not by nearly as much as I thought :p
[19:54:27] <tomsmeding> it's not that hard to have an easier grammar than c++ :p
[20:21:00] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[20:33:36] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:38:40] *** Joins: coot (~coot@213.134.190.95)
[21:11:54] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[21:23:50] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Remote host closed the connection)
[21:31:33] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[21:37:39] *** Quits: ph88 (~ph88@89-220-184-245.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[21:47:37] <dminuoso> Is the C++ grammar itself that crazy?
[21:49:26] <parsnip> C++ has a grammar?
[21:53:43] <monochrom> I think it is not crazy, it just has accumulated a ton of qualifiers over the years, plus there has to be accomodation for its take on lambdas.
[21:55:10] <monochrom> Unless you mean, although each individual rule is understandable, the emergent behaviour is that one can write monsters. Then sure.
[21:55:34] <monochrom> But one can write monsters in Church's very original untyped lambda calculus, too.
[21:56:32] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[21:57:07] <monochrom> At least in C++ no one brags about "I can write the Y combinator" (I don't know whether it can be done, just saying no one brags about it).
[21:57:26] <monochrom> (Unlike people who teach lambda calculi.)
[21:57:35] <geekosaur> no, they at least used to brag about computing pi to N sigits at compile time
[21:57:43] <monochrom> Oh haha OK!
[21:58:15] <monochrom> IMO that's still less bad than bragging about reinventing natural numbers at all.
[22:00:57] <monochrom> I once went to a local FP meeting for practical developers. One time someone gave a talk on untyped vanilla lambda calculus. So much time and pain were spent on constructing the natural numbers. I don't know why someone thinks that a talk aimed at practical developers should inflict this.
[22:10:16] <monochrom> OK maybe I know. You can't make the talk last for 1 hour unless you spend 55 minutes on booleans, natural numbers, lists.
[22:11:50] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[22:33:59] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 250 seconds)
[22:55:14] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[22:56:50] *** Joins: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba)
[22:56:55] *** Joins: Lycurgus (~juan@98.4.112.204)
[23:11:21] *** Quits: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba) (Quit: coot)
[23:20:57] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:48:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:49:36] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[23:51:04] *** Joins: Lycurgus (~juan@98.4.112.204)
