[08:37:05] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[08:45:42] *** Quits: libertyprime (~libertypr@118.149.80.208) (Quit: leaving)
[08:55:37] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[08:58:28] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Read error: Connection reset by peer)
[09:01:10] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[09:02:12] *** Quits: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 258 seconds)
[09:14:46] *** Joins: struchu (~struchu@staticline-31-183-185-147.toya.net.pl)
[09:15:53] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Read error: Connection reset by peer)
[09:16:13] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[09:31:50] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[09:35:43] *** Quits: sobel (~matt@66.219.34.76) (Ping timeout: 265 seconds)
[09:42:41] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[09:42:46] *** Joins: sobel (~matt@66.219.34.76)
[09:43:41] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:56:49] *** Quits: struchu (~struchu@staticline-31-183-185-147.toya.net.pl) (Quit: WeeChat 3.2)
[09:59:31] *** Joins: struchu (~struchu@staticline-31-183-185-147.toya.net.pl)
[10:17:06] *** Joins: uncleyear (~ian@93.185.28.106)
[10:39:24] *** Joins: silasfox (~sbv@2001-4dd6-5b1d-0-67ea-637e-1274-9008.ipv6dyn.netcologne.de)
[10:42:23] *** Quits: mange (~user@110-175-91-30.tpgi.com.au) (Quit: Quittin' time!)
[10:55:56] *** Quits: sobel (~matt@66.219.34.76) (Ping timeout: 265 seconds)
[11:08:21] *** Joins: sobel (~matt@66.219.34.76)
[11:12:34] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[11:13:27] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[11:25:57] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Quit: Client closed)
[11:33:03] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[11:45:00] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[11:45:52] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[11:47:37] *** Joins: selimcan (~selimcan@217.23.186.18)
[11:48:16] <selimcan> please ignore this, testing the matrix bridge
[11:55:27] <selimcan> clojure:matrix.org channel used to be bridged with #clojure on freenode
[11:56:36] <selimcan> Are there any technical issues with Libera for not bridging this room to matrix ?
[11:57:05] <selimcan> The matrix room looks abandoned
[11:58:12] <selimcan> Maybe the topic of it at least could suggest better places to ask questions
[11:58:50] *** Quits: selimcan (~selimcan@217.23.186.18) (Quit: Leaving)
[11:59:18] *** Quits: sobel (~matt@66.219.34.76) (Ping timeout: 258 seconds)
[12:07:51] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[12:11:28] *** Joins: sobel (~matt@66.219.34.76)
[12:12:41] <ridcully> well here are [m] folks, so can we assume, that matrix is working?
[12:13:01] <ridcully> i know from other channels, that made the move
[12:14:40] *** Joins: selimcan (~selimcan@217.23.186.18)
[12:15:17] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[12:16:19] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[12:16:40] *** Quits: euandreh_ (~euandreh@2804:14c:33:9fe5:ee71:32ea:12e0:378c) (Ping timeout: 268 seconds)
[12:17:25] *** Joins: euandreh_ (~euandreh@2804:14c:33:9fe5:4732:d8b1:5f78:9a82)
[12:19:13] *** Quits: selimcan (~selimcan@217.23.186.18) (Client Quit)
[12:19:41] *** Joins: selimcan (~selimcan@217.23.186.18)
[12:29:39] *** Quits: selimcan (~selimcan@217.23.186.18) (Quit: Leaving)
[12:30:27] *** Joins: andreyorst_ (~u0_a177@176.59.57.1)
[12:32:03] *** Joins: sailorCa` (~user@p200300f6a70c9d2c20fcf90097a31de1.dip0.t-ipconnect.de)
[12:33:20] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[12:39:58] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:51:21] **[13:44:31] <even4void> wink: The Clojure CLI can be used with cider-nrepl, AFAICT. At least, this is one option to configure vim-fireplace (for non Emacs users).
[13:44:35] <ridcully> to generalize on the anon-fn there: extract what you can into functions with proper names (e.g. predicates end on a `?` in their name and return a bool)
[13:45:05] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[13:45:11] <ridcully> if there absolutely is no need for a dedicated function, then using an anon-fn like that is fine
[13:45:48] <noom> don't hesitate to write more functions, noted
[13:46:13] <noom> I was a bit reluctant first because the function probably wasn't going to be used elsewhere in the code
[13:47:53] <ridcully> noom: style critique: i'd not use a "global" board but would pass it in as argument (yes, this will make the code a little bit more complex), but you can write tests for pretty much each function without having to think to much
[13:48:08] <turlando> (also anon fns can be named and that improved readability (fn name [args] ...)
[13:48:14] <wink> even4void: yeah, I think I read that, was more about standalone usage
[13:48:17] <turlando> improves*
[13:48:28] <turlando> s/readability/debuggability/
[13:49:10] <ridcully> (also readability ;))
[13:49:44] <noom> yep, good remark ridcully. It was actually planned, I just reserved this for when I'll have at least one board working properly
[13:50:48] <even4void> wink: I sometimes use it for quick scripts or to test expressions on the fly. I don't do much stuff in Clojure these days, though. I used to use Emacs+Cider, so never worried about CLI tools.
[13:52:45] <wink> even4void: hehe, yeah that sounds like most people. thanks :)
[13:52:52] <even4void> wink: Example of use: https://github.com/even4void/euler/blob/master/040.clj
[13:55:51] <ridcully> noom: for checking for "greater zero" there is a predicate called `pos?` (but you can golf that even more).  for checking if there is at least one element in a sequence, there is `seq`.  so you could simplify your `if` to `(if (seq new-neighbours) ...)`
[13:57:12] <noom> ah that's definitely a lot cleaner!
[14:01:55] <noom> I just realized, I can't really externalize the whole filter function right?
[14:02:22] <noom> because it needs `group` as an argument and filter will call it with `[x y]`
[14:03:32] <noom> what I can see as of now is making a function that accepts `[group x y]` and call that function inside of the anonymous function I'm giving to `filter`
[14:05:28] <ridcully> noom: if you have fixed arguments you can use partial.  e.g. have a (defn pred? [board group [x y] ...) and then use (filter (partial pred? board group) input)
[14:06:28] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[14:07:03] <noom> ok I'll read about partial then
[14:07:28] <noom> I just thought of something
[14:07:41] <noom> as I understood there are lazy evaluated sequences
[14:08:36] <noom> does it mean that I can externalize the input I'm passing to filter as a lazy evaluated vector?
[14:08:54] <noom> so that when it's evaluated, it'll use the local x and y
[14:08:59] <noom> does that make sense?
[14:13:57] <ridcully> i don't follow.  but right now it "captures" group and stone (it's a closure).   and it gets x and y passed as arguments (which "shadows" your x/y from group-at)
[14:17:17] <noom> I'm was talking about this vector `[[(- x 1) y] [(+ x 1) y] [x (- y 1)] [x (+ y 1)]])]`
[14:17:41] <noom> is it possible to define it elsewhere and evaluate it only when needed?
[14:25:56] *** Joins: unyu (~pyon@user/pyon)
[14:28:56] <ridcully> sure.  you could have a (def directions [[-1 0] [1 0] ...) (defn move [[x y] [s t]] [(+ x s) (+ y t)]) and then (map (partial move [x y]) directions) or something like this
[14:31:08] <ridcully> (the move there could also be written with map, but that's for bonus points)
[14:40:29] *** Quits: andreyorst_ (~u0_a177@2.92.125.229) (Remote host closed the connection)
[15:51:00] *** Joins: op2 (~op@user/op2)
[16:00:24] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 