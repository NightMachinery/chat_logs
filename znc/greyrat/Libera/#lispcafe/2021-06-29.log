[00:13:52] *** Quits: rixard (~rixard@h-158-174-122-239.A357.priv.bahnhof.se) (Read error: Connection reset by peer)
[00:26:40] *** Quits: humasect (~humasect@d24-235-145-145.home1.cgocable.net) (Remote host closed the connection)
[00:29:20] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 272 seconds)
[00:31:03] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1074)
[00:49:57] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[01:06:34] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[01:10:21] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[01:11:43] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1074) (Remote host closed the connection)
[01:21:19] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:27:15] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1074)
[01:31:56] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1074) (Ping timeout: 268 seconds)
[01:40:02] *** Joins: lad (~lad@user/lad)
[01:51:37] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[01:59:10] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1074)
[02:03:42] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1074) (Ping timeout: 250 seconds)
[02:09:53] *** Quits: brainfunnel (~quassel@187.142.208.46.dyn.plus.net) (Quit: thanks, bye!)
[02:15:50] *** Joins: derelict (~derelict@user/derelict)
[02:20:57] *** Joins: selwyn (~selwyn@user/selwyn)
[02:28:43] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[02:29:08] <dave0> maw
[02:31:12] <selwyn> hi
[02:31:25] <dave0> maw selwyn 
[02:34:24] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 258 seconds)
[02:36:08] *** Joins: aeth (~aeth@user/aeth)
[03:06:49] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:18:32] *** Joins: selwyn (~selwyn@user/selwyn)
[03:29:33] <hayley> "In addition, you may be aware of compilation and execution issues with your group’s project. The project cannot be executed (In either Java v15 to v16) using the software and tools that are taught and supported within the scope of the course. Are you able to provide instructions on how your group’s project should be successfully setup and run?"
[03:29:34] * hayley sighs
[03:31:21] <hayley> I'd appreciate, you know, an error message or what happens instead of it running, rather than waiting for a video call tomorrow afternoon to sort it out.
[03:48:58] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[03:51:17] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:edf7:146a:8396:f657) (Remote host closed the connection)
[04:02:40] <hayley> https://theanarchistlibrary.org/library/l-a-onda-hostis-nice-shit-for-everybody
[04:02:41] -ixelp- Nice Shit for Everybody | The Anarchist Library
[04:09:05] *** Quits: lad (~lad@user/lad) (Ping timeout: 258 seconds)
[04:24:36] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[04:27:16] *** Quits: xantoz (~tewi_inab@c-e0bfe255.013-124-73746f25.bbcust.telenor.se) (Ping timeout: 244 seconds)
[04:27:47] *** Quits: ck_ (~ck@plskthx.org) (Ping timeout: 244 seconds)
[04:28:48] *** Joins: xantoz (~tewi_inab@c-e0bfe255.013-124-73746f25.bbcust.telenor.se)
[04:37:36] *** Quits: random-nick (~random-ni@87.116.183.60) (Ping timeout: 272 seconds)
[04:44:50] *** Quits: wheelsucker (~user@2600:8801:8c11:4c00::707) (Quit: ERC (IRC client for Emacs 27.2))
[04:57:02] *** Joins: wheelsucker (~user@2600:8801:8c11:4c00::707)
[05:09:10] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[05:26:53] *** Joins: derelict (~derelict@user/derelict)
[05:35:19] *** Quits: wheelsucker (~user@2600:8801:8c11:4c00::707) (Quit: ERC (IRC client for Emacs 27.2))
[05:36:22] <hayley> https://backend.orbit.dtu.dk/ws/portalfiles/portal/96940711/embcacao.pdf Smalltalk^WJava on a RISC^WMicrocontroller
[05:47:18] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[06:13:39] *** Joins: sm2n_ (~sm2n@user/sm2n)
[06:16:16] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 252 seconds)
[06:25:59] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1074)
[06:30:05] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1074) (Client Quit)
[06:34:14] *** Joins: wheelsucker (~user@2600:8801:8c11:4c00::707)
[06:50:38] <aeth> cond: test?
[06:50:39] <cond> aeth: I agree!
[06:51:35] <aeth> cond: I'm sorry, you're out of date and need to restart
[06:51:35] <cond> aeth: ofc
[06:51:56] <aeth> wow, cond sounds reluctant
[06:52:55] *** Quits: cond (~example@user/aeth/bot/cond) (Quit: Restarting...)
[06:54:59] *** Joins: cond (~example@user/aeth/bot/cond)
[06:55:15] <aeth> cond: test?
[06:55:16] <cond> aeth: I'd buy an NFT of that line!
[06:55:27] <aeth> ofc
[06:55:49] <aeth> Almost everything is human readable now. File logging comes next.
[06:56:21] <aeth> So many little edge cases and esoteric parts of the standard.
[06:58:01] <aeth> I logged almost everything that you'd typically see at 594 lines and now I log a ton more with 866 lines. 50% more code for things like, say, the reply to /list or viewing the banlist.
[07:31:34] *** Joins: lucf117 (~lucf117@user/lucf117)
[07:57:01] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[07:57:26] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:58:20] <cond> test
[07:58:26] <aeth> cond: test?
[07:58:26] <cond> aeth: You should run for president!
[07:58:33] <aeth> definitely upgraded
[07:58:49] <aeth> If y'all could see my SLIME you'd notice the great upgrades that nobody else can see
[08:02:43] <aeth> oh, wait, there's one visible upgrade
[08:03:16] * cond can do /me now... well, actually (me ...)
[08:13:34] <gilberth> CL-IRC is awful code.
[08:13:42] <aeth> yes
[08:14:31] <aeth> I've read https://gitlab.common-lisp.net/charmon/cl-irc/-/blob/master/parse-message.lisp
[08:14:32] -ixelp- parse-message.lisp · master · Cyrus Harmon / cl-irc · GitLab
[08:14:46] <aeth> that is not at all how I'd parse IRC
[08:14:57] <aeth> and I wouldn't be surprised if it fails on some of my (few) test cases
[08:16:09] <gilberth> It doesn't even trust hash tables. See: <https://termbin.com/2c2h>
[08:16:31] <aeth> hah
[08:16:38] <gilberth> aeth: Aren't CTCP command supposed to be case insensitive?
[08:16:39] <aeth> I was typing: "and, wait, what? what's with the CTCP message type code?"
[08:16:48] <aeth> so that stood out to me, too
[08:17:00] <gilberth> aeth: But it happily conses a 1024 byte buffer for each message received.
[08:17:10] <aeth> gilberth: afaik, no, CTCP commands aren't case insensitive, however, you have to assume that they are, because you have to assume that someone, somewhere wrote bad IRC code
[08:17:38] <aeth> I probably do string= but it wouldn't take too much for me to move that into a string-equal
[08:17:50] <aeth> easier for me to fix that than to look at that code
[08:18:11] <aeth> heh, they do use string-equal, however they dispatch on that CASE
[08:18:15] <gilberth> aeth: https://tools.ietf.org/id/draft-oakley-irc-ctcp-02.html says so. So what is the definite guide to CTCP?
[08:18:16] -ixelp- Internet Relay Chat: Client-to-Client Protocol (CTCP)
[08:18:23] <aeth> so Ping or PiNG would work, but not ping or pING
[08:18:25] <aeth> I think
[08:18:46] <aeth> gilberth: interesting that they say that it's insensitive
[08:18:55] <gilberth> Oh, you say the first letter has to be uppercase?
[08:18:59] <aeth> in cl-irc
[08:19:10] <aeth> not in the spec draft
[08:20:02] <aeth> at least in practice, CTCP commands seem like (1) you should accept them case insensitively but (2) you should turn them into upper case when sending from your library/client since that is likely what is meant and not everyone will be able to handle lower/mixed case
[08:20:31] <gilberth> In CL-IRC? Yes.
[08:20:49] <aeth> every step along the way, actually.
[08:20:51] <aeth> hmm
[08:21:04] <gilberth> aeth: OK. So, I should accept them caseinsentive.
[08:21:11] <aeth> I just sent a CTCP version and received a CTCP VERSION and replied to it because libera's ircd capitalizes it
[08:22:03] <aeth> ah, I see what's going on
[08:22:42] <aeth> both unrealircd (testing it on localhost) and whatever ircd libera.chat uses (not unreal) specifically look at "version" and turn it into "VERSION" in case a client/bot/whatever can't handle "version" because it's a known CTCP
[08:23:07] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:23:14] <hayley> cond: can I have CLOSOS money
[08:23:14] <aeth> However, for unknown CTCPs (e.g. "test"), both ircd's send it verbatim, in case some client/bot actually cares about case (although they shouldn't)
[08:23:14] <cond> hayley: nope
[08:23:45] <aeth> however, at lesat with my client, any CTCP is automatically capitalized at the client side, I think
[08:23:59] <dave0> maw
[08:24:20] <aeth> hmm, yes, that's how it works, `/ctcp cond test` is sent as TEST and recieved by cond as TEST
[08:24:36] <aeth> even though the ircd would preserve it as test when, say, cond sends it
[08:25:37] <aeth> gilberth: so empirically, it should be accepted case insensitive, but should be sent in upper case, at least if it behaves like "normal"
[08:26:02] <aeth> and ircd's will take some (but not all) and upper case them, to fix some potentially broken behavior (turning version into VERSION, but leaving test alone)
[08:26:47] * gilberth_ somehow crashed cl-irc.
[08:28:23] <gilberth_> hayley: You don't need any money for CLOSOS.
[08:33:25] *** Quits: gilberth (~gilberth@p54bfef57.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:36:02] <gilberth_> See. Stuck.
[08:36:50] <hayley> cond: ok but can I have CLOSOS money
[08:36:50] <cond> hayley: Seconded!
[08:37:21] *** Joins: gilberth (~gilberth@p54bfef57.dip0.t-ipconnect.de)
[08:37:21] *** ChanServ sets mode: +o gilberth
[08:39:10] *** Quits: lucf117 (~lucf117@user/lucf117) (Remote host closed the connection)
[08:40:43] <hayley> 🍝
[08:44:19] <White_Flame> sell a CLOSOS NFT for CLOSOS money
[08:46:59] <hayley> https://lgbt.io/@yuki/106490607403568847 What kind of execution model is this where a thread is out of order with itself?
[08:46:59] -ixelp- Cyber Yuki 🏳️‍⚧️ 🇲🇽: "Programming joke" - LGBT.io
[08:47:26] <hayley> Perhaps the output buffer doesn't have fences and the CPU ran out of order to piss me off still.
[08:49:05] <hayley> Assuming two threads run { 1: write "Thread support!"; 2: write "Now!" } then both threads have run #2 before #1.
[08:49:55] <hayley> In a real IO system then one thread would flush buffers and so at least one would appear synchronised. But I guess if another thread handled actually writing then this execution could occur.
[08:50:53] <hayley> At least the reply image makes sense, because no bogus data appeared out of nowhere.
[08:56:13] <hayley> At least a bot shares my appreciation of memory models.
[09:03:31] <hayley> Hey, I'm not that desparate.
[09:08:06] <aeth> hayley: I'm going to interpret cond's statement as cond (1) not giving you CLOSOS money ("nope") and (2) "Seconding" the request for money (also wanting CLOSOS money)
[09:08:18] <aeth> since there are no contradictions in cond's replies
[09:08:50] <dave0> hayley: https://www.youtube.com/watch?v=UfZWp-hGCdA
[09:08:51] -ixelp- RIKKI DON'T LOSE THAT NUMBER (1974) by Steely Dan - YouTube
[09:12:56] <hayley> https://www.youtube.com/watch?v=Wn1xbqOGxhY
[09:12:57] -ixelp- Gary Numan - Bombers (Live 79) - YouTube
[09:14:24] <gilberth> I believe I am in business again.
[09:16:36] <aeth> Are you using cl-irc as your main client?
[09:16:48] <cond> That's brave.
[09:17:10] <gilberth> aeth: Yes. With my own UI.
[09:17:12] <cond> I guess I could use this, at least for one channel, since it's just outputting straight to SLIME. It would get confusing if I was in more than one active channel with this.
[09:17:44] <gilberth> I don't use it raw.
[09:24:58] <aeth> I mean, you could use IRC very raw (via telnet) except it's inconvenient to have the incoming messages on top of the message you're currently typing, and it's hard to keep up with the PINGs that you have to reply to.
[09:25:08] <aeth> But it doesn't take much to have a minimal, usable wrapper over IRC
[09:30:30] <gilberth> aeth: No, it doesn't. A pity that UNIX is so primitive and doesn't know about reading a line. Otherwise it could be normal that background output to the same tty would scroll above your currently edited line. And: Why is the tty editor still so incredible primitive?
[09:31:47] <gilberth> I believe my CLIM could do that, but I am not so sure right now.
[09:32:59] <gilberth> But yes, you only would need to format incoming messages in a nice way.
[09:33:31] <aeth> I like in-terminal IRC clients, I've used irssi for 15 years
[09:33:56] <aeth> however, the lack of improvements in terminals (besides a few things like more colors, emoji, and handling clicks) is disappointing and apparently it's not very fun to program
[09:34:18] <aeth> so I'm probably just going to make a pseudoterminal, not too unlike how Emacs behaves when run outside of the terminal
[09:34:21] <aeth> and then run IRC in that
[09:34:34] <gilberth> Mine is not that different, only that it uses HTTP/HTML/CSS/JS. Nicer formating, fonts, links, colour. And spell checking for free.
[09:34:57] <aeth> The main disadvantage is that I wouldn't be able to persist it in tmux (or screen) on some other machine. So I'll have to write/user an IRC bouncer instead of just using ssh to use a local client
[09:35:27] <aeth> gilberth: I don't really use spell checking because when I need to spell check I just switch over to emacs and type in the word I don't know how to spell
[09:35:43] <aeth> But I could probably implement "free" spell checking the same way emacs does: by running an external program in a separate process
[09:36:08] <aeth> I notice that emacs actually puts https://en.wikipedia.org/wiki/Hunspell as a separate process
[09:36:58] <aeth> It's actually the only child process other than sbcl in my currently running emacs on this machine
[09:38:08] <gilberth> And when typing a very long line, the text editor below would automatically wrap the lines and show me all.
[09:39:21] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[09:39:26] <gilberth> http://bauhh.de/birch.mov
[09:40:45] <gilberth> Otherwise I stick to the usual "/" prefix for commands. And it runs at my house that wants to kill me, so when the internet is away for a minute or so, I won't lose anything.
[09:41:38] <gilberth> Local internet is flaky, the internet at "home" is rock solid. I plan to move that to our real server.
[09:45:35] <gilberth> Anyhow I don't use any of the advanced features of CL-IRC, so I kind of regret that I have not written my own lib.
[09:50:31] <aeth> ah, yeah, I think I remember IMs in the '00s doing that
[09:55:34] <gilberth> aeth: I am _old_!
[09:57:40] <gilberth> My client is still lacking a lot of features.
[09:57:52] * aeth wonders if /me works
[09:58:20] <aeth> I don't even have other CTCP printed properly, but I made sure to do CTCP ACTION because a lot of people forget CTCP ACTION even though it's a fairly common message type
[09:58:28] <aeth> And surprisingly universal in how it's logged.
[09:59:05] <aeth> you can have "<aeth>" or "aeth:" or even "(aeth)" in your IRC logs, but if there's a CTCP ACTION it's displayed as "* aeth "
[09:59:18] <aeth> (I mean, I'm sure someone does it differently)
[09:59:54] <aeth> I wonder how the clients that align everything and make messages look like "     aeth | " or whatever would render it.
[10:01:44] <gilberth> I can also /me in /msg or /query.
[10:02:27] <hayley> dave0: https://www.youtube.com/watch?v=r0UOlF8vXy8
[10:02:27] -ixelp- Melody Nightwatch - YouTube
[10:02:57] <gilberth> Reminds me, that ixelp should also read ACTION messages.
[10:03:47] <dave0> hayley: it looks like 80's graphics!
[10:05:03] <gilberth> dave0: Because of CGA colours?
[10:05:58] <dave0> yeah and the outlines
[10:06:15] <dave0> looks like a zx spectrum
[10:07:04] <gilberth> Did it have colour?
[10:07:35] <dave0> i think so
[10:08:09] <dave0> i didn't actually have a zx, but i read they were popular in europe, while the commodore 64 was popular in america
[10:08:34] <gilberth> The C64 was damn popular here.
[10:08:49] <aeth> "zed x" if you've only seen it written
[10:09:05] <aeth> British English word for "z"
[10:09:08] <gilberth> Everyone had one, but me, I had a CP/80 box.
[10:09:23] <gilberth> CP/M even
[10:10:00] *** Joins: derelict (~derelict@user/derelict)
[10:10:15] <gilberth> 128KB RAM, two 360KB floppy disks, 640x400 8-colour graphics, two screens. Nice machine.
[10:10:42] <gilberth> Two Z80 CPUs.
[10:11:18] <gilberth> No games.
[10:12:22] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[10:18:34] <hayley> 80s?
[10:19:37] <hayley> "performed in Paris 22 March 1974" Some ZX Spectrum.
[10:41:33] <gilberth> hayley: One day after the day I was born. Hearsay though.
[10:43:03] *** Joins: shka (~herr@109.231.62.239)
[11:07:30] * hayley tries to find the Telekon Live album and types Telekons from muscle memory
[11:08:30] <hayley> Oh shit, the meeting is mostly about the design tests my partner never did.
[11:09:04] <gilberth> Then enjoy his presentation.
[11:11:20] <hayley> This will be fun. And I don't know if I mean "fun" in the "actually, no, this is awful" sense or if I would legitimately enjoy the discussion tomorrow.
[11:14:10] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:15:09] <gilberth> hayley: Make sure that the instructor knows, it's not really your fault.
[11:16:11] <gilberth> hayley: You could be bold: "$name_of_partner, you did the design tests, please present them!" :-)
[11:16:56] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[11:17:48] <gilberth> BTW, do you plan to have a sed-like s/blah/blup/ stream editor? That would be mildly useful.
[11:18:54] <hayley> https://www.youtube.com/watch?v=INEXNs0nzgI
[11:18:54] -ixelp- Gary Numan / Tubeway Army - Bombers (Remastered) - YouTube
[11:19:09] <gilberth> Again?
[11:19:53] <hayley> Time is a flat circle: I am now wondering if SICL register locations (which are global) should track using and defining instructions, because they pose a memory leak and slow down a lot when updating. Pretty sure they shouldn't.
[11:20:35] <gilberth> Are you concerned about those leaks?
[11:25:31] <gilberth> Anyhow, I still seek a good way to markup fonts in IRC messages. I can't use "*" for bold because of *READ-EVAL*.
[11:27:49] <hayley> I already did that at the real presentation, and it does significantly slow down the compiler after a while.
[11:28:19] <hayley> Guess which "that" and "it" are referencing.
[11:31:14] <gilberth> ok. Then I didn't get what exactly leaks. I was thinking you refered to registers out of use not cleared in the generated code.
[11:33:26] *** Quits: terpri (~terpri@user/terpri) (Remote host closed the connection)
[11:33:40] *** Joins: terpri (~terpri@user/terpri)
[11:34:08] * hayley uploaded an image: (706KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/pzPYiPSHoMWGioVFTFWmCvsF/quantifying-nothing-at-all.jpg >
[11:40:15] <gilberth> You read papers on the phone?
[11:44:44] *** Joins: treflip (~user@95.79.32.99)
[11:44:54] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[11:45:25] <hayley> Rather the objects which represent registers in IR, which are datum which track used and defining instructions.
[11:46:29] <hayley> But these are global and so a. they track every function which is stupid and b. they keep pretty much all IR live so everything is a memory leak.
[11:46:55] <gilberth> I see.
[11:51:43] <hayley> Sometimes.
[11:52:01] <hayley> But that is still the meme format.
[12:00:32] <hayley> https://www.youtube.com/watch?v=YWDm7BECANo
[12:00:32] -ixelp- The Barbarian (2012 Remastered Version) - YouTube
[12:02:42] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[12:03:11] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[12:09:57] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[12:13:02] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[12:39:15] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Quit: Bridge terminating on SIGTERM)
[12:39:16] *** Quits: hayley (~theemacss@user/hayley) (Quit: Bridge terminating on SIGTERM)
[12:56:28] *** Joins: selwyn (~selwyn@user/selwyn)
[12:59:22] <gilberth> What also is bad about CL-IRC is that it has no code to ensure that commands sent obey to the syntax.
[13:00:37] <gilberth> I would expect a library to do that for me.
[13:01:52] <pjb> It's free software, add the option to validate.
[13:03:14] <gilberth> pjb: I seriously consider to ditch it altogether, since when I am finished, I would face a more or less complete rewrite.
[13:04:25] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[13:04:40] <gilberth> It's exactly the parsing and unparsing parts that are weak. And besides, I never really liked the API.
[13:09:36] <pjb> It is always nice to get a better library to do something.
[13:11:49] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[13:13:51] <gilberth> And look at the CTCP-MESSAGE-TYPE function in <https://termbin.com/2c2h>, it is hilarious. (1) It doesn't trust a FIND-SYMBOL (2) It gets case-insensitivity wrong (3) There later is a FIND-CTCP-MESSAGE-CLASS or something, so when adding a new message type, I would need to update the code at two spots => Bad design.
[13:16:11] <gilberth> And (4) Why this (IF <bad> NIL <more-to-do>) instead of an (AND <cond-1> ... <cond-n> <more-to-do>).
[13:22:55] <gilberth> CL-IRC at places makes no distinction between an empty argument and no argument.
[13:23:27] <gilberth> Nah, I would wind up rewriting all of it.
[13:24:55] * gilberth takes his pain killers and calls it a night.
[13:29:25] <gilberth> RFC 2812 (Internet Relay Chat: Client Protocol) also is in error, the ABNF only allows for channels, whose name is exactly one character long after the prefix.
[13:31:45] <gilberth> So we need to rename #lispcafe to #l
[13:34:33] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:3926:1fd0:955c:64c4)
[13:35:39] *** Joins: ck_ (~ck@plskthx.org)
[14:35:45] <gilberth> And I don't like the "CL-" prefix for systems, as it claims to be some "official" CL system, at least that could be seen that way.
[14:36:13] <gilberth> Further: Why does CL-IRC reveal the CPU I use?
[14:39:02] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[14:39:03] <pjb> INdeed.
[14:39:12] <dave0> nite all
[14:39:17] <pjb> I prefer com.informatimago
[14:39:47] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[14:40:26] <gilberth> I use a de.bauhh prefix for my systems/packages.
[14:41:14] <pjb> logical.
[14:41:43] <gilberth> Yes, hh = HH = Hansestadt Hamburg.
[14:41:48] *** Quits: xantoz (~tewi_inab@c-e0bfe255.013-124-73746f25.bbcust.telenor.se) (Ping timeout: 272 seconds)
[14:42:40] <gilberth> If everyone would stick to their domain name, there won't be any conflicts.
[14:45:11] <gilberth> And as we almost have relative nicknames for packages, that won't be painful to use.
[14:46:13] <gilberth> Or: Does FOO:BAR:BAZ work now?
[14:55:10] <pjb> it does not.
[14:55:29] <gilberth> A pity.
[15:11:02] *** gilberth_ is now known as {gilberth}
[15:13:51] <gilberth> This really works, I could /msg [gilberth]. Does someone really still use Swedish-SCII? What ever that is called.
[15:17:00] <pjb> I doublt it. Unicode and utf-8 won.
[15:26:41] <gilberth> pjb: No it works. RFC2812 says nicknames are case insensitive and {}|^ (lower case) should be considered equal to []\~ (upper case). Refering to a Scandinavian origin. Would work for ancient 7-bit German too. Try it yourself.
[15:28:10] <gilberth> Those characters are where the umlauts where. Thus digraphs.
[15:28:22] <gilberth> * were
[15:29:16] <gilberth> Strange.
[15:31:45] <gilberth> And nicknames are 7-bit, no 8-bit, no UTF-8.
[15:33:14] <gilberth> Channel names however could use 8-bit. More strange.
[15:41:20] *** {gilberth} is now known as {`_`}
[15:44:15] *** Joins: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se)
[15:48:12] *** Joins: selwyn (~selwyn@user/selwyn)
[16:01:31] *** Joins: random-nick (~random-ni@87.116.165.220)
[16:12:58] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[16:13:22] *** Joins: selwyn (~selwyn@user/selwyn)
[16:40:24] *** Joins: derelict (~derelict@user/derelict)
[16:55:08] *** Joins: makomo (~makomo@user/makomo)
[18:04:33] <shka> heh, say what you will about the unix, there are good lessons that can be learned from it
[18:05:43] <shka> like, for instance: ability to combine programs makes each program useful
[18:06:04] <shka> i just bridged go process and sbcl with pipes
[18:06:52] <selwyn> to do what
[18:08:33] <shka> selwyn: go reads csgo demo, pipes out the data, lisp uses postmodern to connect to the database, loads data as the go process munches on the demos
[18:09:48] <selwyn> cool
[18:09:58] <shka> nothing special
[18:10:05] <selwyn> i have to do a lot of piping to gnuplot to plot things
[18:10:28] <selwyn> web plotting is not really an option for me like it is for you
[18:10:30] <selwyn> it
[18:10:36] <shka> but since i am using lisp which people think is outdated, and go which is actually corporate C, it is only fair to party like it is 1978
[18:10:44] <selwyn> lol
[18:11:03] <selwyn> i find it hard to cover up the inelegance of piping with macrology though
[18:11:12] <selwyn> eazy-gnuplot makes a decent attempt
[18:11:21] <shka> hmmm, shouldn't be that hard
[18:11:34] <shka> i wonder if plotly can produce png files
[18:11:58] <shka> oh, look it can https://plotly.com/python/static-image-export/
[18:11:59] -ixelp- Static Image Export | Python | Plotly
[18:12:21] <selwyn> hm ok
[18:15:00] <shka> https://i.imgur.com/p8kMz4A.png
[18:15:24] <shka> lisp alien and gopher being friends
[19:28:37] *** Joins: brainfunnel (~quassel@36.141.90.146.dyn.plus.net)
[20:15:37] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:19:23] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:42:39] <shka> https://www.youtube.com/watch?v=IG3kTib73iA
[20:42:39] -ixelp- Aerotha Franklin - "Rock Emotion" - YouTube
[20:57:33] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[20:57:57] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:26:37] *** Joins: sm2n (~sm2n@user/sm2n)
[21:27:09] *** Quits: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net) (Ping timeout: 272 seconds)
[21:28:53] *** Quits: sm2n_ (~sm2n@user/sm2n) (Ping timeout: 268 seconds)
[21:39:21] *** Joins: lad (~lad@user/lad)
[21:49:26] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[21:53:06] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[22:26:01] *** Joins: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net)
[22:26:59] *** Joins: selwyn (~selwyn@user/selwyn)
[22:49:30] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[22:52:18] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[22:54:10] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:16:28] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[23:16:28] *** Joins: lucf117 (~lucf117@user/lucf117)
[23:19:37] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 256 seconds)
