[00:00:10] <dav1d> furrykef, and with re.sub you dont have the context?
[00:00:17] <nedbat> furrykef: fwiw, re.sub can take a function that determines what the replacement should be.
[00:00:35] <furrykef> Hmmm
[00:00:44] <dav1d> still sounds to me like re.sub is the tool to use
[00:00:47] <furrykef> I'll look into that. Thanks.
[00:00:49] *** Parts: teut (~teut@106.214.16.139) ()
[00:01:18] *** Quits: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net) (Quit: Going offline, see ya!)
[00:01:22] <dav1d> https://docs.python.org/3/library/re.html#re.sub the docs have a good example
[00:01:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[00:02:05] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:02:36] *** Joins: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8)
[00:04:07] <rigid> is there a sane way to change the output of "d = datetime.datetime() ; print(d)"?
[00:04:10] *** Parts: heip1ahd (~heip1ahd@2a05:f480:1400:8d1:5400:3ff:fe68:465c) (WeeChat 3.1)
[00:04:25] <rigid> i guess it's not possible to monkeypatch __repr__ of builtins...
[00:04:55] <ChrisWarrick> rigid: why would you do that?
[00:05:30] <shan> are scoped imports more or less efficient than global ones
[00:05:47] <shan> space-wise
[00:06:04] <rigid> ChrisWarrick: i print() or rather click.echo() various types without formatting them. everything is nice just datetime objects give that "datetime.datetime(2020, 11, 17, 0, 0)" representation
[00:06:05] <ChrisWarrick> shan: what do you mean by scoped imports?
[00:06:12] <nedbat> shan: modules are only imported once, no matter how you import them
[00:06:18] <nedbat> shan: import them at the top of the file.
[00:06:20] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[00:06:20] <shan> ChrisWarrick: an import local to a scope :0
[00:06:22] <shan> nedbat: got it
[00:06:27] <ChrisWarrick> rigid: you should just format your dates the way you want
[00:06:32] <shan> i thought where i was importing them mattered
[00:06:36] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:07:13] <rigid> ChrisWarrick: yeah. i wonder about a way where I don't have to explicitly handle datetime objects
[00:07:32] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[00:07:38] <rigid> i guess using a wrapper class could be considered clean
[00:09:42] *** Joins: stoneware (~stoneware@user/stoneware)
[00:09:47] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 255 seconds)
[00:09:47] <Byteflux> rigid: what's wrong with just doing print(f'{datetime.datetime(2020, 11, 17):%Y-%m-%d %H:%M}') ?
[00:09:58] *** Quits: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at) (Read error: Connection reset by peer)
[00:10:29] *** Joins: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at)
[00:10:42] <rigid> Byteflux: if you're doing "print(anyobject)", maybe at multiple places, that can get quite cumbersome
[00:11:20] *** Joins: ntdll (~ntdll@user/ntdll)
[00:11:24] *** Joins: trashbird (~trashbird@user/trashbird)
[00:11:33] <rigid> at least i won't know a good way other that checking for type/strftime method
[00:11:38] <rigid> *than
[00:11:56] <furrykef> I'm not sure re.sub is what I want, because I really only want the substitution to occur on the last syllable of its input
[00:12:17] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:12:39] <rigid> Byteflux: whats wrong with "class MyDate(datetime.datetime): def __repr__(self): return self.isoformat()" and then monkeypatching "datetime.datetime = MyDate" ?
[00:12:59] <rigid> i think that's what __repr__() was built for
[00:13:04] <rigid> (?)
[00:13:05] <nedbat> rigid: can you avoid the monkeypatch? What's making them?
[00:13:10] <nedbat> (the datetimes)
[00:13:33] <rigid> nedbat: various sources
[00:14:05] <nedbat> rigid: I would rather change the print function
[00:14:18] <rigid> nedbat: ...like "datetime.datetime.today()" calls or datetime.datetime.strptime() or dateutil.parser.parse()
[00:14:27] <rigid> hm
[00:14:47] <Byteflux> yeah, make a better function that formats datetimes how you want
[00:14:49] *** Quits: greedom (~greedom@2001:16b8:2e0c:3800:805f:f707:b9c6:43e8) (Ping timeout: 246 seconds)
[00:14:52] <rigid> right, that would have less possible side effects
[00:15:24] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:15:38] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 255 seconds)
[00:17:55] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[00:22:16] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[00:22:55] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:25:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[00:32:41] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[00:33:18] <BrenBarn> datetime's `.isoformat()` method is pretty concise and gives a decent representation
[00:33:30] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:34:32] *** Parts: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Leaving)
[00:35:11] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[00:37:01] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[00:37:22] *** Joins: NanoCoaster (~michi@p200300e1273bf000dddd9376bbc694ed.dip0.t-ipconnect.de)
[00:37:41] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 255 seconds)
[00:38:08] *** Quits: y1n (~y1n@84-115-65-39.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[00:38:16] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:38:19] *** Joins: y1n (~y1n@84-115-65-139.wifi.dynamic.surfer.at)
[00:38:30] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[00:39:02] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[00:39:59] *** Joins: greedom (~greedom@2001:16b8:3284:ab00:2630:54c9:8c2a:fb70)
[00:40:34] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[00:40:41] *** Quits: Xano (~Xano@2a00:23c4:420c:d700:ab35:4886:494c:7369) (Ping timeout: 252 seconds)
[00:41:56] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:41:59] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[00:44:07] <WhyNotHugo> Does `virtualenv` have plans to drop Python2?
[00:45:43] *** Quits: yitz (~nick@exercism/yitz) (Quit: Reconnecting)
[00:45:52] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:45:56] *** Joins: yitz (~nick@exercism/yitz)
[00:46:22] <supakeen> Not that they have documented, but its dependencies no longer support Python 2.
[00:46:56] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 272 seconds)
[00:46:59] <sudomann_> without the no-cache-dir option, where is the cache located?
[00:47:01] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:47:18] <sudomann_> Is it within each package's path, or are they collected somewhere in a different directory
[00:48:08] *** Quits: yitz (~nick@exercism/yitz) (Client Quit)
[00:48:17] <supakeen> Is that a pip option?>
[00:48:28] *** Joins: yitz (~nick@exercism/yitz)
[00:49:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[00:49:19] *** Quits: yitz (~nick@exercism/yitz) (Client Quit)
[00:49:45] *** Joins: yitz (~nick@exercism/yitz)
[00:50:22] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[00:50:49] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: what)
[00:51:01] *** Joins: inom (~inom@176.59.102.225)
[00:51:10] *** Parts: inom (~inom@176.59.102.225) (WeeChat 3.1)
[00:51:19] *** Joins: inom (~inom@176.59.102.225)
[00:51:34] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 246 seconds)
[00:51:43] *** Quits: Doffi (~doffi@91.132.197.188) (Read error: Connection reset by peer)
[00:51:55] *** Joins: Doffi (~doffi@91.132.197.188)
[00:52:38] *** Quits: y1n (~y1n@84-115-65-139.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[00:54:49] <Evolver> supakeen: yes
[00:55:02] *** Joins: dingir_ (~dingir@user/dingir/x-9303082)
[00:55:06] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:55:07] <dingir_> hi
[00:55:30] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[00:55:51] <dingir_> i have a simple python file that grabs value from an api, how would i make it write tona file instead of output to terminal?
[00:55:54] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[00:56:12] *** Joins: aslicedbanjo (~aslicedba@host86-134-28-54.range86-134.btcentralplus.com)
[00:56:26] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[00:56:26] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:56:42] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[00:57:00] <Evolver> dingir_: There are many ways. `pathlib.Path('/my/path.txt').write_text('text to write')` is one of them. See https://docs.python.org/3/library/pathlib.html#pathlib.Path.write_text
[00:57:12] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[00:57:22] <dingir_> thanks
[00:58:14] *** Quits: NanoCoaster (~michi@p200300e1273bf000dddd9376bbc694ed.dip0.t-ipconnect.de) (Quit: WeeChat 3.2)
[00:58:27] *** Joins: trashbird (~trashbird@user/trashbird)
[00:58:50] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:59:02] *** Joins: northernsage_ (northernsa@gateway/vpn/protonvpn/northernsage)
[00:59:22] <dingir_> i would replace print by that?
[00:59:44] *** Joins: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com)
[01:00:16] *** northernsage_ is now known as northernsage
[01:00:30] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Client Quit)
[01:01:33] *** Quits: pete443_ (~pete@user/pete443) (Quit: Bye.)
[01:01:46] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[01:01:48] *** Joins: pete443 (~pete@user/pete443)
[01:03:24] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[01:03:30] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[01:03:39] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:04:53] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[01:06:02] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:06:35] <Evolver> dingir_: you can. it's one way to do it.
[01:06:51] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[01:06:56] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 255 seconds)
[01:08:59] *** Quits: Deneb (~johnch@58.111.189.80.dyn.plus.net) (Quit: Leaving)
[01:09:23] *** Quits: Doffi (~doffi@91.132.197.188) (Read error: Connection reset by peer)
[01:09:44] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[01:09:59] *** Joins: Doffi (~doffi@91.132.197.188)
[01:10:25] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: what)
[01:10:42] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:11:43] *** Joins: akaWolf (~akaWolf@akawolf.org)
[01:14:21] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:15:22] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:16:49] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[01:17:07] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:18:04] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[01:18:21] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[01:18:48] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Ping timeout: 252 seconds)
[01:19:46] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:20:30] *** Quits: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com) (Ping timeout: 272 seconds)
[01:22:05] *** Quits: greedom (~greedom@2001:16b8:3284:ab00:2630:54c9:8c2a:fb70) (Remote host closed the connection)
[01:22:55] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:22:55] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[01:23:40] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[01:23:41] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[01:23:45] *** Joins: parzival (~parzival@user/parzival)
[01:23:46] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:23:55] *** Quits: xhor (~xhor@79.112.4.198) (Quit: Leaving)
[01:25:02] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[01:25:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 246 seconds)
[01:26:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[01:26:45] *** Lando-HoloNet is now known as Lando-SpacePimp
[01:27:28] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[01:28:09] *** Joins: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[01:28:22] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:28:31] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[01:29:12] *** Joins: ItsNotGoodName (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[01:30:33] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[01:30:43] *** o is now known as niko
[01:30:45] *** Parts: ItsNotGoodName (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (The Lounge - https://thelounge.chat)
[01:30:55] *** Joins: trashbird (~trashbird@user/trashbird)
[01:31:54] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[01:33:32] *** Joins: akaWolf (~akaWolf@akawolf.org)
[01:33:33] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:35:01] *** Quits: trashbird (~trashbird@user/trashbird) (Remote host closed the connection)
[01:35:38] <dingir_> ok thanks
[01:42:05] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[01:42:59] *** Joins: trashbird (~trashbird@user/trashbird)
[01:43:59] *** Joins: Crassus (~Crassus@user/crassus)
[01:44:04] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:44:05] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.0.1)
[01:44:27] *** Joins: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net)
[01:45:44] *** Quits: trashbird (~trashbird@user/trashbird) (Write error: Connection reset by peer)
[01:45:58] *** Quits: armin (~armin@unix.porn) (Ping timeout: 250 seconds)
[01:46:54] *** Quits: aslicedbanjo (~aslicedba@host86-134-28-54.range86-134.btcentralplus.com) (Quit: Leaving.)
[01:46:55] *** Joins: trashbird (~trashbird@user/trashbird)
[01:47:06] *** Quits: trashbird (~trashbird@user/trashbird) (Client Quit)
[01:47:41] *** Joins: armin (~armin@unix.porn)
[01:47:42] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[01:49:05] *** Joins: driib (~driib@185.195.233.163)
[01:51:29] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[01:52:31] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:52:35] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:54:10] *** __jmcantrell__ is now known as jmcantrell
[01:56:35] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[01:58:05] *** Joins: i0e (~is0ke3@user/is0ke3)
[01:59:06] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[02:00:13] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[02:00:28] *** Quits: therealjumbo2 (~zignegoj@mail.hedonline.com) (Read error: Connection reset by peer)
[02:00:32] *** Joins: therealjumbo (~zignegoj@mail.hedonline.com)
[02:00:46] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:05:06] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:07:52] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 246 seconds)
[02:09:35] *** Quits: MrC (Ben@mrbenc.net) (Quit: Reboot, Updating ZNC, or Switching servers.)
[02:11:00] *** Joins: MrC (Ben@mrbenc.net)
[02:11:50] *** Quits: fructose (~fructose@user/fructose) (Quit: fructose)
[02:12:46] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 246 seconds)
[02:14:22] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[02:15:55] *** Quits: reset (~reset@user/reset) (Quit: reset)
[02:17:09] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[02:18:06] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:18:59] *** Joins: fructose (~fructose@user/fructose)
[02:20:25] *** Joins: terribtelef (~ethan@cpe-96-28-161-215.kya.res.rr.com)
[02:21:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:23:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[02:25:04] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:25:46] *** Quits: p-i- (~Ohmu@node-nem.pool-1-0.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:26:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[02:26:39] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:26:58] *** Quits: inom (~inom@176.59.102.225) (Ping timeout: 240 seconds)
[02:27:00] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[02:27:30] *** Joins: c10l (~c10l@89.34.167.207)
[02:27:42] *** Joins: p-i- (~Ohmu@node-onb.pool-118-173.dynamic.totinternet.net)
[02:29:32] *** Parts: terribtelef (~ethan@cpe-96-28-161-215.kya.res.rr.com) (WeeChat 2.3)
[02:29:33] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:30:11] *** Quits: heco (~redrum@user/redrum88) (Ping timeout: 255 seconds)
[02:35:42] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[02:36:42] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[02:37:06] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:38:28] *** Joins: percY- (~percY@138.68.239.19)
[02:39:38] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Remote host closed the connection)
[02:40:34] *** Quits: Cienisty (Cienisty@user/cienisty) (Remote host closed the connection)
[02:41:00] *** Joins: Cienisty (Cienisty@user/cienisty)
[02:43:34] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 246 seconds)
[02:45:16] *** Joins: pnoud (~pnoud@user/pnoud)
[02:47:47] *** Joins: reset (~reset@user/reset)
[02:47:57] <AhmedAmerican> I've a client running `Python 3.6.12` where the logging filer handler = `logging.FileHandler('Thiago.log', 'w', encoding='utf-8')`  . the logging works well without error ? how that happens if the document says https://docs.python.org/3/howto/logging.html#logging-to-a-file  `Changed in version 3.9: The encoding argument was added.`
[02:47:57] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[02:48:38] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[02:48:52] <AhmedAmerican> I expected it to raise `TypeError: __init__() got an unexpected keyword argument 'encoding'`
[02:49:28] <nedbat> AhmedAmerican: the note you're talking about is for the basicConfig() function, not FileHandler()
[02:50:04] <AhmedAmerican> nedbat: Ops ,my mistake. got it.
[02:50:05] <nedbat> AhmedAmerican: FileHandler had an encoding argument in 2.7: https://docs.python.org/2.7/library/logging.handlers.html#logging.FileHandler
[02:50:13] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[02:50:17] <AhmedAmerican> nedbat: Thank you
[02:50:42] <AhmedAmerican> it happens two times with me before. now i understood the difference :D
[02:52:06] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:52:16] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[02:52:58] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 240 seconds)
[02:54:36] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:55:01] *** Joins: chaosite (~chaosite@user/chaosite)
[02:55:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[02:59:44] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:59:56] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[03:01:43] *** Joins: driib3 (~driib@185.195.233.170)
[03:02:09] *** Quits: Akuli (~Akuli@82-203-165-49.bb.dnainternet.fi) (Quit: Leaving)
[03:02:27] *** Joins: srhm (~ascii@user/srhm)
[03:05:20] *** Quits: driib (~driib@185.195.233.163) (Ping timeout: 252 seconds)
[03:05:20] *** driib3 is now known as driib
[03:07:57] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[03:09:20] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 255 seconds)
[03:09:20] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 255 seconds)
[03:11:24] *** Joins: Nact (~l@host-85-27-127-131.dynamic.voo.be)
[03:12:22] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:11] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 255 seconds)
[03:18:20] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 255 seconds)
[03:18:34] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Ping timeout: 246 seconds)
[03:21:10] *** Joins: thiras (~thiras@user/thiras)
[03:23:44] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 255 seconds)
[03:28:48] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::29)
[03:28:52] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Quit: WeeChat 3.2)
[03:30:54] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[03:32:17] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[03:33:42] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:35:26] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[03:35:48] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:36:19] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:36:34] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:36:34] *** Wulf4 is now known as Wulf
[03:37:12] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[03:37:26] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:39:26] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[03:39:51] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 258 seconds)
[03:41:17] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Ping timeout: 255 seconds)
[03:42:06] *** Quits: Bardon (~Bardon@user/Bardon) (Quit: ZNC - https://znc.in)
[03:44:03] *** Joins: POGtastic (~mike@2601:1c0:6000:fe1:2b6f:5c59:94f6:fb2f)
[03:44:47] *** Quits: nac0 (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[03:45:10] *** Joins: Bardon (~Bardon@user/Bardon)
[03:45:26] *** Joins: nac0 (~nac@user/nac)
[03:45:47] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 255 seconds)
[03:45:55] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[03:46:02] <POGtastic> Hi, got a Python packaging question. Say that I have a package `foo` that I'm writing. Inside `foo` is a `resources` dir that contains some PNGs. I also have a script `foo.py` that will be loading those PNGs. How do I specify the path of the PNG relative to the module's path (which could be anywhere)?
[03:46:23] <POGtastic> basically, I'm curious how I can create a .whl that contains PNGs and have my script load them.
[03:47:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:47:46] <nedbat> POGtastic: something in here: https://docs.python.org/3/library/importlib.html#module-importlib.resources
[03:48:05] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:48:18] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:48:27] <POGtastic> nedbat: Thanks, this looks perfect.
[03:48:35] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[03:50:17] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[03:51:22] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[03:51:56] *** Quits: chance (~chance@user/chance) (Quit: Client closed)
[03:53:05] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[03:54:38] *** Joins: sydbarret (~anton@static-186-121-195-235.acelerate.net)
[03:56:23] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[03:57:58] *** Quits: attackthemoon (~attackthe@2600:6c40:1d00:560c:b8dc:6c57:c55a:bc6c) (Quit: Leaving)
[03:58:06] *** Quits: cedric (~cedric@2a01:cb11:867:c200:65e3:5b08:7001:96d4) (Quit: Konversation terminated!)
[04:00:45] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[04:01:13] *** Quits: someguy123 (~someguy@user/someguy123) (Read error: Connection reset by peer)
[04:01:32] *** Joins: someguy123 (~someguy@user/someguy123)
[04:02:37] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[04:03:19] *** Joins: ano (~weechat@user/ano)
[04:03:25] <nedbat> hmm, i want lru_cache, but not as a decorator, just as a data structure
[04:05:38] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[04:07:10] <Evolver> nedbat: like this class? https://cachetools.readthedocs.io/en/stable/#cachetools.LRUCache
[04:07:55] *** Joins: infobob (~infobob@python/bot/infobob)
[04:08:05] <habnabit_> https://pastebin.com/9BLN1xab
[04:08:11] <habnabit_> hmm
[04:12:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:13:49] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[04:14:14] <nedbat> Evolver: thanks. it's odd that the structure in the stdlib is buried in a function decorator
[04:16:49] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[04:16:50] *** Jacktar_ is now known as jacktar
[04:18:40] *** Quits: jess (~jess@libera/staff/jess) ()
[04:19:57] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[04:26:20] *** Joins: imp (~imp@186.205.11.214)
[04:26:31] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::29) (Quit: WeeChat 3.0.1)
[04:26:49] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 246 seconds)
[04:27:58] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[04:30:20] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 255 seconds)
[04:32:32] *** Quits: waxfire23 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:32:43] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[04:32:46] *** Joins: waxfire23 (~waxfire@65.119.2.240)
[04:32:59] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:33:52] <SnoopJ> lru_cache is kinda strange all-around
[04:34:26] <SnoopJ> the fallback Python implementation, that is; dunno much about the C impl
[04:36:42] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[04:37:21] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 258 seconds)
[04:39:24] *** Joins: CodePoint (~jonathan@2600:1700:3070:3790::29)
[04:40:04] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[04:42:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 272 seconds)
[04:42:49] *** Quits: CodePoint (~jonathan@2600:1700:3070:3790::29) (Quit: Leaving.)
[04:46:05] *** Joins: pnoud (~pnoud@user/pnoud)
[04:50:01] <fluter> hi
[04:50:11] <mefistofeles> hey
[04:50:17] <fluter> is there an sample extension module that can build for both 2 and 3?
[04:50:33] <fluter> the sample in the doc is only for 3, it doesn't compile for 2
[04:50:58] <BtbN> I mean, technically an empty file is one :D
[04:51:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[04:51:33] <BtbN> Though normally you just shouldn't care about Python 2 anymore. It's long dead.
[04:52:02] <vdamewood> Python 2 is dead, nothing to see here.
[04:52:05] <fluter> BtbN: can empty file compile? xD
[04:52:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:52:13] <vdamewood> fluter: Yep
[04:52:15] <nedbat> fluter: this is an extensions that compiles for both 2 and 3: https://github.com/nedbat/coveragepy/blob/coverage-5.5/coverage/ctracer/tracer.c
[04:52:18] <fluter> i mean, to a .so
[04:52:29] <fluter> ah thanks nedbat
[04:52:32] <nedbat> fluter: are you working with a legacy codebase? Why Python 2?
[04:52:55] <fluter> nedbat: yeah it's company code that have both 2 and 3 users
[04:53:10] <fluter> if i drop 2 those guys will suddently stop working
[04:53:17] <nedbat> fluter: i understand
[04:53:32] <nedbat> fluter: is this a new extension you are writing?
[04:54:47] <fluter> nah i would not start any new extensions, xD,  i'm converting modules from 2 to 3,
[04:54:52] <fluter> but i need keep it working for 2
[04:55:12] <nedbat> fluter: ok, so at least it's trending in the right direction :)
[04:55:24] <fluter> also i wanna use the same file, not create two copies of file for each version
[04:55:32] <nedbat> good plan
[04:56:20] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:59:12] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:fdf6:260a:bc2c:db50)
[05:00:01] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[05:01:23] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 255 seconds)
[05:01:27] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:04:04] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:06:30] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 268 seconds)
[05:07:08] *** Joins: wyclif (~wyclif@user/wyclif)
[05:07:59] <[itchyjunk]> Are there low hanging fruit to learn some artificial neuron stuff? I am thinking i have function that take in 2 inputs and returns one value. and then have 2 global variables as weights that i dot product with the two inputs?
[05:10:18] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[05:10:34] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 240 seconds)
[05:16:58] *** Joins: y1n (~y1n@84-115-65-68.wifi.dynamic.surfer.at)
[05:17:01] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[05:19:09] *** Joins: noobly (~user@50.38.126.25)
[05:19:25] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[05:21:34] <jessicara> [itchyjunk]: artificial neuron in literal sense goes a lot farther and awkward, but as for artificial neural networks they tend to be more an approximation of these
[05:21:42] *** Joins: audiocat (~audio@2603-8081-1800-00ad-0cb4-6e2c-d49d-e8f1.res6.spectrum.com)
[05:21:52] * jessicara isn't sure actual neuron behaviour is well mapped currently either
[05:22:00] <jessicara> in order to simulate them accurately ^
[05:22:17] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Read error: Connection reset by peer)
[05:22:29] <[itchyjunk]> artificial neurons as used in neural networks i meant. not one that tries to literally simulate natural ones
[05:22:34] <jessicara> oh
[05:22:35] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:22:45] <[itchyjunk]> i thought you would want some function that does this dot product and somehow chanin them?
[05:22:48] <[itchyjunk]> chain*
[05:23:14] <jessicara> not sure a dot product is what are looking for with these
[05:23:22] <jessicara> more an activation function post-summing
[05:23:25] <grym> jessicara: it super isn't, but there are many models depending on what you want to care about
[05:23:49] <jessicara> like sum all the inputs multiplied by weights, feed to activation function which transforms it in some non-linear way
[05:23:50] <[itchyjunk]> you dot the input and the weights are vectors though
[05:24:06] <[itchyjunk]> and you just dot the vectors to get a scalar out no?
[05:24:29] <jessicara> at least in some cases this is like some extremely large vector
[05:24:41] <[itchyjunk]> (a,b).(c,d) = ac + bd
[05:24:52] <[itchyjunk]> where a and c are incomming values and b and d are the associated weights
[05:25:30] <mefistofeles> wrong channel?
[05:25:37] <jessicara> yeah probably wrong channel
[05:25:42] <jessicara> if one for this even exists
[05:26:03] <jessicara> not sure dot product is the right direction here, that returns something different..
[05:26:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:26:08] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[05:26:39] <[itchyjunk]> https://stats.stackexchange.com/questions/291680/can-any-one-explain-why-dot-product-is-used-in-neural-network-and-what-is-the-in
[05:28:06] <sydbarret> I have a button that set customer.active field to True and then start crawling a bunch of urls. I need to run a code after all urls were crawled and only the first time the customer was activated. Im using scrapy. How can I implement this?
[05:28:32] <jessicara> maybe i'm reading that wrong, but it doesn't sound like a dot product?
[05:28:42] <jessicara> my math sucks though
[05:28:53] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[05:29:02] <[itchyjunk]> that's one way to define dot products
[05:29:09] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[05:29:17] <jessicara> usually i think two vectors and it tends to describe a relationship in direction
[05:29:18] <[itchyjunk]> take two vector, multiple component wise then add
[05:29:28] <jessicara> (normalized)
[05:29:34] <jessicara> oh
[05:29:49] <jessicara> yeah sounds like what are describing
[05:30:30] <[itchyjunk]> geometric interpretation of it gives a.b = ||a||||b|| cos (theta)
[05:30:34] <jessicara> ^
[05:30:36] <[itchyjunk]> But that's not useful for NN's i don't think
[05:30:46] <jessicara> yeah will be the geometric one i know of..
[05:31:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:43] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[05:32:04] <jessicara> the two keys seem to be the activation function and the gradient descent
[05:32:21] <jessicara> at least to getting a sort of working one
[05:32:36] <jessicara> seems like elu and it's variants are getting reasonable results
[05:32:44] <jessicara> and training still takes months
[05:33:20] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 255 seconds)
[05:35:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[05:35:40] *** Joins: YoungPotato (~user@c-67-186-254-165.hsd1.ut.comcast.net)
[05:36:17] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[05:36:40] <grym> not really
[05:37:30] <[itchyjunk]> well, i'm not trying to do anything fancy
[05:37:32] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 258 seconds)
[05:37:42] <[itchyjunk]> just want the low hanging fruits, bare basics and such
[05:38:45] <grym> [itchyjunk]: https://cs231n.github.io/  is the usual fundamentals high level link
[05:38:52] <grym> (that isn't absolute trash)
[05:39:15] *** Joins: srhm (~srhm@user/srhm)
[05:39:30] *** Quits: unary (~unary@ternary.ca) (Ping timeout: 252 seconds)
[05:39:34] <[itchyjunk]> Oh hmm. not sure if i have the pre req to follow a class but i'll try to skim around thanks!
[05:40:10] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 272 seconds)
[05:40:26] *** Joins: northernsage_ (northernsa@gateway/vpn/protonvpn/northernsage)
[05:40:42] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:40:51] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: Client closed)
[05:41:22] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Ping timeout: 246 seconds)
[05:43:38] *** Joins: pete443_ (~pete@user/pete443)
[05:44:53] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:45:15] *** Quits: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[05:45:56] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 252 seconds)
[05:46:38] *** Joins: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[05:47:12] *** Quits: Xavierdarkness (~xavierdar@user/xavierdarkness) (Quit: ZNC - http://znc.in)
[05:52:46] <AhmedAmerican> `filt.append(filt['price'].sum(), ignore_index=True)` giving  `TypeError: cannot concatenate object of type '<class 'numpy.float64'>'; only Series and DataFrame objs are valid`
[05:53:01] <AhmedAmerican> what should i do if am dealing with floats here?
[05:53:14] *** Joins: heco (~redrum@user/redrum88)
[05:54:16] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[05:54:32] *** Joins: Enitin (~enitin@181.214.206.141)
[05:55:11] *** Joins: phlixi_ (~phlixi@aftr-62-216-205-120.dynamic.mnet-online.de)
[05:55:22] *** Quits: KindOne (kindone@user/kindone) (Ping timeout: 246 seconds)
[05:55:43] *** Quits: phlixi (~phlixi@aftr-62-216-205-24.dynamic.mnet-online.de) (Ping timeout: 246 seconds)
[06:00:04] *** Joins: KindOne (kindone@user/kindone)
[06:00:04] <SnoopJ> [itchyjunk], the only prerequisite I'd enumerate is an understanding of what a derivative is and how to interpret it. It's a good course, the companion lecture videos are very good.
[06:00:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2f4b) (Quit: Konversation terminated!)
[06:00:49] <[itchyjunk]> Hm, i think i understand the basics of derivative.
[06:00:51] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:01:20] <[itchyjunk]> Using a stick to approximate a curve but the formalization means as lim h->0 we get infinitely accurate solution
[06:02:06] *** Joins: vicfred (~vicfred@user/vicfred)
[06:02:23] <hodapp> that's one way to look at it
[06:02:40] <SnoopJ> The knowledge you need is even less technical: "How does changing [this input thingy] make [that output thingy] change?" Training is largely adjusting how the thingies are connected so that the inputs produce the desired inputs.
[06:02:46] <SnoopJ> desired outputs*
[06:02:48] *** Joins: candyman (~candyman@user/candyman)
[06:03:12] <SnoopJ> (i.e. the system as a whole makes correct inferences about the inputs)
[06:03:21] <[itchyjunk]> I thin i understand that we're using calculus to minimize an error function
[06:03:35] <[itchyjunk]> find a set of value that gives the least amount of erro or somesuch
[06:03:52] <SnoopJ> The rest of the information becomes clear in the course of that...erm, course.
[06:04:08] <SnoopJ> The exercises are quite good and the main attraction of the course, so don't pass them over.
[06:06:29] *** Quits: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:07:50] *** Joins: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[06:08:35] *** Joins: brabrax- (~brabrax@user/brabrax)
[06:09:22] *** Quits: brabrax_ (~brabrax@user/brabrax) (Ping timeout: 246 seconds)
[06:10:07] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[06:10:19] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[06:13:56] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[06:14:17] *** Joins: foozle (~foozle@2001-b011-c001-52e7-516b-1d97-31a7-6d4d.dynamic-ip6.hinet.net)
[06:14:28] *** Joins: dez (uid92154@user/dez)
[06:16:19] *** Quits: infobob (~infobob@python/bot/infobob) (Quit: ZNC 1.7.2 - https://znc.in)
[06:16:49] *** Joins: infobob (~infobob@python/bot/infobob)
[06:18:43] <grym> kangaroos in the himalayas
[06:18:49] *** Joins: MercilessDeth (~brad@136.49.61.2)
[06:19:56] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[06:21:20] *** Quits: y1n (~y1n@84-115-65-68.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[06:21:53] *** Joins: y1n (~y1n@84-115-64-90.wifi.dynamic.surfer.at)
[06:25:10] *** ChanServ sets mode: +o infobob
[06:25:10] *** infobob sets mode: -b $a:dsf777b
[06:25:26] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[06:25:52] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[06:25:59] *** Joins: spithash (~spithash@user/spithash)
[06:28:41] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[06:30:06] *** Joins: vimart (~vimart@85.255.237.65)
[06:30:10] *** infobob sets mode: -o infobob
[06:30:11] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[06:30:12] *** Joins: Sophon96 (~brandon@user/sophon96)
[06:31:43] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[06:32:17] <sydbarret> I have a button that set customer.active field to True and then start crawling a bunch of urls. I need to run a code after all urls were crawled and only the first time the customer was activated. Im using scrapy. How can I implement this?
[06:32:46] <sydbarret> my spider look like this https://bpa.st/JKDQ
[06:34:34] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 246 seconds)
[06:34:58] *** Joins: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com)
[06:40:40] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[06:42:07] <Sophon96> I'm trying to statically compile Python 3.6. I've managed to compile Python, but running make altinstall errors during the ensurepip phase with this traceback https://bpa.st/Y5XA. How can I fix this?
[06:43:06] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[06:44:20] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[06:44:31] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[06:44:32] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:45:24] *** Quits: noobly (~user@50.38.126.25) (Remote host closed the connection)
[06:45:47] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[06:46:35] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[06:46:47] <econdudeawesome> Hi all. Long live Libera! :) First time here from freenode.
[06:46:55] *** Joins: pnoud (~pnoud@user/pnoud)
[06:46:59] <mefistofeles> econdudeawesome: welcome
[06:47:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:47:44] <econdudeawesome> Question for folks -- I'm looking to learn more about preventing sql injection using sqlalchemy and/or common python libs (cx_oracle, psycodb2, pyodbc). Does anyone have some resources they could suggest for me to understand better?
[06:51:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:51:05] *** FinnElija is now known as Guest1783
[06:51:05] *** finn_elija is now known as FinnElija
[06:51:56] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[06:52:05] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[06:52:34] *** Quits: y04nn (~y04nn@89.45.7.186) (Ping timeout: 240 seconds)
[06:54:07] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: leaving)
[06:54:10] *** Quits: Guest1783 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 246 seconds)
[06:56:53] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[06:57:22] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 240 seconds)
[07:00:01] *** Quits: therealjumbo (~zignegoj@mail.hedonline.com) (Read error: Connection reset by peer)
[07:00:07] *** Joins: therealjumbo2 (~zignegoj@mail.hedonline.com)
[07:00:17] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[07:00:30] <Byteflux> econdudeawesome: You might be looking for the Python channel at #python
[07:00:36] <Byteflux> oh whoops
[07:00:42] <Byteflux> This is python lul, thought it was another channel, My bad :)
[07:00:49] <econdudeawesome> all good Byteflux  :)
[07:01:04] <Byteflux> This is what happens when you have 4 networks and 50 channels :)
[07:01:08] <econdudeawesome> I lost connection a bit there (or... accidentally hit /exit instead of /leave :D)
[07:02:13] <Byteflux> Re: your question though, you want bound parameters, basically.
[07:02:44] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[07:02:53] <econdudeawesome> what does that mean? (My background is more on the data science side). Strip control characters like ";" from strings?
[07:05:24] <econdudeawesome> i.e. validation?
[07:05:41] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:05:43] <Byteflux> If you use SQLAlchemy ORM this is mostly done for you automatically
[07:07:39] <Byteflux> econdudeawesome: https://docs.sqlalchemy.org/en/14/core/tutorial.html
[07:07:45] <Byteflux> that's for sqlalchemy core
[07:07:49] <econdudeawesome> thank you!
[07:07:50] <Byteflux> it goes over parameter binding
[07:08:17] <econdudeawesome> I think I'm getting it now. https://bobby-tables.com/python
[07:09:45] <econdudeawesome> oh this is great
[07:10:05] <Byteflux> Yeah that's good info too. You want to avoid building the query from input, instead you bind parameters/arguments and pass those through the client which handles mapping those placeholders to your inputs.
[07:10:17] <Byteflux> In doing so you avoid the possibility of SQL injections
[07:10:37] <econdudeawesome> got it. This is much simpler than I was thinking. I was wracking my brain trying to think of clever regex approaches for fail validation checks. This is much simpler!
[07:11:34] <Byteflux> Yeah it's gotten much simpler and fool-proof over the years that SQL injections are almost unheard of these days.
[07:11:54] <econdudeawesome> Sure hope so -- I don't want to be the cause of it, certainly! :)
[07:12:00] <econdudeawesome> Thanks for the input Byteflux
[07:12:16] <Byteflux> No prob, glad to help.
[07:12:36] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[07:14:05] <Byteflux> Keep in mind you still need to validate your inputs to make sure they conform to whatever requirements before storing them. This just prevents someone from manipulating the structure of your query with an SQL injection.
[07:15:26] *** Joins: frost (~frost@59.71.241.179)
[07:18:58] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[07:20:29] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:20:34] *** Joins: pwnd_sfw3 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:20:54] *** Quits: y1n (~y1n@84-115-64-90.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[07:21:50] *** Joins: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at)
[07:22:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:29:06] *** Quits: pwnd_sfw3 (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[07:29:57] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:30:05] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[07:30:37] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 258 seconds)
[07:33:34] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Remote host closed the connection)
[07:37:45] *** Quits: clawh (~clawh@78.10.204.217) (Remote host closed the connection)
[07:39:35] *** Quits: nyah (~nyah@90.221.186.180) (Quit: leaving)
[07:44:40] *** Joins: parzival (~parzival@user/parzival)
[07:46:05] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[07:47:17] *** Quits: Celelibi (celelibi@user/celelibi) (Quit: Quitte)
[07:47:37] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[07:49:17] *** Joins: diamondbond (~diamondbo@175.157.224.213)
[07:49:46] *** Joins: Celelibi (celelibi@user/celelibi)
[07:52:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[07:52:25] *** Joins: minip (minip@user/minip)
[07:52:25] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:54:36] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:55:03] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[07:56:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[07:57:41] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[07:59:40] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:04:18] *** Quits: vimart (~vimart@85.255.237.65) (Quit: WeeChat 2.8)
[08:04:20] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[08:04:57] *** Joins: rio (~rio@2601:345:4203:41c0:9a93:b9de:7342:f9d7)
[08:06:32] *** PJBoy is now known as Guest3891
[08:06:41] *** Joins: PJBoy (~PJBoy@user/pjboy)
[08:07:37] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[08:08:35] *** Quits: Guest3891 (~PJBoy@user/pjboy) (Ping timeout: 255 seconds)
[08:11:02] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[08:13:32] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 255 seconds)
[08:18:25] *** __jmcantrell__ is now known as jmcantrell
[08:18:28] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[08:20:40] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:21:02] *** Quits: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[08:21:27] *** Joins: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at)
[08:22:18] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 272 seconds)
[08:25:50] *** Quits: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.2)
[08:27:06] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 252 seconds)
[08:27:18] *** Quits: Paul (~Paul@user/paul) (Quit: Leaving)
[08:27:48] *** Quits: Fingel (fingel@user/fingel) (Quit: Later!)
[08:28:20] *** Leonarbro_ is now known as Leonarbro
[08:28:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[08:30:07] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (Remote host closed the connection)
[08:30:10] *** Joins: Fingel (fingel@user/fingel)
[08:30:27] *** Joins: quesker (~idnet@mail.89vx.net)
[08:34:36] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-09dd-4ce8-9138-5b64.res6.spectrum.com) (Read error: Connection reset by peer)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:07] *** Quits: Reinhilde (ellenor@vice-chairwoman.of.freenode.management) (Quit: Bye Open Projects!)
[08:37:42] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[08:38:46] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[08:39:51] *** Joins: Ellenor (ellenor@vice-chairwoman.of.freenode.management)
[08:39:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:40:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:46:08] *** Quits: diamondbond (~diamondbo@175.157.224.213) (Ping timeout: 258 seconds)
[08:46:55] *** Quits: northernsage_ (northernsa@gateway/vpn/protonvpn/northernsage) (Quit: Leaving)
[08:47:22] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[08:47:45] *** Joins: pnoud (~pnoud@user/pnoud)
[08:48:00] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[08:48:25] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Quit: Leaving...)
[08:48:44] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[08:53:20] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[08:53:56] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[08:57:38] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 255 seconds)
[09:02:24] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:07:05] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[09:07:17] <AhmedAmerican> how to convert this to css selector `soup.findAll("div", class_="blabla", text=True)` , I'm aware of `soup.select("div[class='blabla']")` but how to say has text?
[09:08:33] *** Ellenor is now known as Reinhilde
[09:09:07] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[09:10:15] *** Joins: Ninkentio (~Ninkentio@117.237.252.73)
[09:12:27] *** Quits: Ninkentio (~Ninkentio@117.237.252.73) (Quit: Quit)
[09:12:40] <BrenBarn> don't think you can do that directly with CSS
[09:12:58] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[09:13:28] <BrenBarn> even if you could it often wouldn't be useful since it would also catch elements that contain only whitespace for instance
[09:14:10] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[09:14:30] <AhmedAmerican> Isee
[09:14:34] <AhmedAmerican> i see*
[09:14:52] *** Quits: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com) (Read error: Connection reset by peer)
[09:15:08] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:16:46] *** Quits: darklambda (~whateverg@111.65.56.40) (Ping timeout: 272 seconds)
[09:16:51] *** Joins: euouae (~euouae@user/euouae)
[09:16:58] <euouae> Hello
[09:16:59] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[09:17:18] <euouae> Can I write a program utilizing gpu on a supercomputer in python?
[09:17:32] <euouae> I think that if the bulk of the computation resides in the gpu it should be fine right?
[09:20:04] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[09:21:12] *** Quits: y1n (~y1n@84-115-64-47.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[09:21:56] *** Quits: {HD} (~{HD}@102.165.16.102) (Ping timeout: 255 seconds)
[09:22:08] *** Joins: y1n (~y1n@84-115-64-174.wifi.dynamic.surfer.at)
[09:24:08] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:25:06] <mefistofeles> euouae: that part should be commonly implemented in C/C++, but there are some libraries and wrappers for that, depending on your needs those might be enough
[09:25:08] *** Quits: sydbarret (~anton@static-186-121-195-235.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[09:25:13] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[09:28:19] *** Joins: {HD} (~{HD}@102.165.16.92)
[09:28:55] <euouae> mefistofeles: which part?
[09:29:06] <euouae> You mean the distribution of work into the gpu
[09:29:34] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[09:30:19] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (*.net *.split)
[09:30:19] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (*.net *.split)
[09:30:19] *** Quits: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94) (*.net *.split)
[09:30:19] *** Quits: _janus (~janus@blotter.ld-linux.so) (*.net *.split)
[09:30:19] *** Quits: gbristol (gbristol@hermes.gbristol.net) (*.net *.split)
[09:30:19] *** Quits: bwe (~bwe@2a01:4f8:1c1c:4878::2) (*.net *.split)
[09:30:19] *** Quits: tumbleweed (~stefanor@ubuntu/member/tumbleweed) (*.net *.split)
[09:30:19] *** Quits: elcaro (~anonymous@45.32.191.75) (*.net *.split)
[09:30:19] *** Quits: AB49K (~AB49K@user/ab49k) (*.net *.split)
[09:30:19] *** Quits: DarkaMaul (~dm@2001:bc8:24f6:400::42) (*.net *.split)
[09:30:19] *** Quits: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) (*.net *.split)
[09:30:19] *** Quits: blackop (~ocloud@user/blackop) (*.net *.split)
[09:30:19] *** Quits: vapour (vapour@eris.noname-ev.de) (*.net *.split)
[09:30:19] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[09:30:19] *** Quits: meridion (~meridion@punt.hetgrotebos.org) (*.net *.split)
[09:30:19] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[09:30:19] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[09:30:19] *** Quits: ulif_ (~nick@user/ulif) (*.net *.split)
[09:30:19] *** Quits: fredrikh1 (~fhl@myrsnipa.uio.no) (*.net *.split)
[09:30:19] *** Quits: stevenix (~stevenix@mab.sdf.org) (*.net *.split)
[09:30:19] *** Quits: tudor_ (~tudor@tomka.hu) (*.net *.split)
[09:30:19] *** Quits: jpaa_ (~jpaa@87.118.126.66) (*.net *.split)
[09:30:19] *** Quits: kstar (~kstar@user/kstar) (*.net *.split)
[09:30:19] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[09:30:19] *** Quits: fxrs_ (~fxrs@192.227.212.130) (*.net *.split)
[09:30:19] *** Quits: NoImNotNineVolt (~ninevolt@c-73-248-207-98.hsd1.nj.comcast.net) (*.net *.split)
[09:30:19] *** Quits: dftrace (~dftrace@hopper.lethalbit.com) (*.net *.split)
[09:30:19] *** Quits: Quietus (quasselcor@larch.ratcliffefamily.uk) (*.net *.split)
[09:30:19] *** Quits: flay (~flay@user/flay) (*.net *.split)
[09:30:19] *** Quits: greyblue9 (uid500829@id-500829.charlton.irccloud.com) (*.net *.split)
[09:30:19] *** Quits: ario_ (~ario@159.65.220.102) (*.net *.split)
[09:30:19] *** Quits: introom (introom@2600:3c01::f03c:92ff:fe95:9f0f) (*.net *.split)
[09:30:19] *** Quits: syntaxman (~wade@li227-215.members.linode.com) (*.net *.split)
[09:30:19] *** Quits: mboehn (mathias@hh1.nuxis.org) (*.net *.split)
[09:30:19] *** Quits: cole (~cole@user/cole) (*.net *.split)
[09:30:19] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[09:30:25] *** Joins: tumbleweed_ (~stefanor@ubuntu/member/tumbleweed)
[09:30:25] *** Joins: ario (~ario@159.65.220.102)
[09:30:27] *** Joins: tudor (~tudor@tomka.hu)
[09:30:28] *** Joins: foo_ (~foo@user/foo/x-8763512)
[09:30:29] *** Joins: kristjansson_ (sid126207@id-126207.tinside.irccloud.com)
[09:30:40] *** Joins: greyblue9 (sid500829@id-500829.charlton.irccloud.com)
[09:30:41] *** Joins: blackop (~ocloud@user/blackop)
[09:30:45] *** Joins: jpaa (~jpaa@87.118.126.66)
[09:30:47] *** Joins: kstar (~kstar@user/kstar)
[09:30:49] *** Joins: Mathisen_ (mathisen@about/windows/staff/mathisen)
[09:30:50] *** Joins: Quietus (~quietus@larch.ratcliffefamily.uk)
[09:30:52] *** Joins: fxrs (~fxrs@192.227.212.130)
[09:30:52] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[09:30:56] *** Joins: PanamaCity3003_ (~PanamaCit@skylab/user/panamacity3003)
[09:31:01] *** Joins: dodo (~dodo@user/dodo)
[09:31:10] *** Joins: cole (~cole@user/cole)
[09:31:10] *** Joins: dftrace (~dftrace@hopper.lethalbit.com)
[09:31:12] *** Joins: flay (~flay@user/flay)
[09:31:25] <mefistofeles> euouae: yes
[09:31:27] *** Joins: mboehn (mathias@hh1.nuxis.org)
[09:33:01] *** Joins: _janus (~janus@blotter.ld-linux.so)
[09:35:07] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:35:26] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 255 seconds)
[09:37:22] *** Joins: rajkosto (~rajkosto@93-86-133-203.dynamic.isp.telekom.rs)
[09:37:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[09:39:34] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:40:06] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[09:40:22] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[09:42:35] *** Quits: d1b (~db@user/d1b) (Quit: the cake is a lie!)
[09:43:55] *** Quits: nac0 (~nac@user/nac) (Ping timeout: 246 seconds)
[09:47:44] *** Joins: jimm (~jim@about/linux/staff/jim)
[09:49:12] *** Joins: wyclif (~wyclif@user/wyclif)
[09:51:34] *** Quits: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net) (Remote host closed the connection)
[09:52:19] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:53:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:56:54] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[10:01:18] *** Joins: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net)
[10:01:34] *** Quits: jimm (~jim@about/linux/staff/jim) (Quit: Leaving)
[10:02:34] *** Joins: WarpedAI (~Warped@user/warped)
[10:03:38] *** Quits: LiftLeft (~LiftLeft@154.21.114.114) (Ping timeout: 272 seconds)
[10:03:38] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[10:03:46] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[10:03:53] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[10:04:04] *** Quits: Nact (~l@host-85-27-127-131.dynamic.voo.be) (Quit: Konversation terminated!)
[10:05:49] *** Joins: nac0 (~nac@user/nac)
[10:06:02] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 255 seconds)
[10:06:37] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[10:08:18] *** Quits: jim (~jim@about/linux/staff/jim) (Read error: Connection reset by peer)
[10:08:57] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[10:09:07] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[10:09:22] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[10:10:52] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[10:13:46] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[10:16:44] *** Joins: jim (~jim@about/linux/staff/jim)
[10:19:21] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[10:19:36] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[10:20:08] <n00b101> guys
[10:20:32] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[10:20:53] *** Quits: y1n (~y1n@84-115-64-174.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[10:21:19] *** Joins: y1n (~y1n@84-115-65-11.wifi.dynamic.surfer.at)
[10:21:33] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:22:41] <euouae> Hey
[10:23:55] <n00b101> i have `date_of_booking = models.DateTimeField()` in my models.py, where it stores date from from frontend. while printing it, it shows  `Date : July 13, 2021, midnight`
[10:24:06] <n00b101> what is this `midnight` ?
[10:24:56] <euouae> the time
[10:25:48] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 258 seconds)
[10:26:34] <Repiphany> https://en.wikipedia.org/wiki/12-hour_clock#Confusion_at_noon_and_midnight
[10:27:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[10:28:47] *** nac0 is now known as nac
[10:28:47] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[10:32:25] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:34:22] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[10:35:40] *** Joins: black_13 (~jjosb@136.36.125.233)
[10:35:49] <black_13> hey kids
[10:37:12] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[10:40:16] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 246 seconds)
[10:41:11] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[10:42:27] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[10:42:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:46:45] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:48] *** Joins: upsala (~zcb@185.213.155.160)
[10:46:55] *** Joins: a6a45081-2b83 (~aditya@223.226.232.244)
[10:47:27] *** Joins: seednode (~seednode@user/seednode)
[10:48:36] *** Joins: pnoud (~pnoud@user/pnoud)
[10:50:04] *** Quits: y1n (~y1n@84-115-65-11.wifi.dynamic.surfer.at) (Ping timeout: 246 seconds)
[10:50:30] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[10:51:17] *** Joins: LiftLeft (~LiftLeft@154.21.114.237)
[10:52:58] *** Joins: rememberYou (~someone@user/rememberyou)
[10:53:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[10:53:56] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[10:55:25] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[10:55:41] *** Joins: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il)
[10:57:56] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[10:58:22] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 246 seconds)
[10:59:43] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[11:00:10] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[11:02:24] *** Joins: f33f046c-a02e (~aditya@171.76.227.35)
[11:03:06] *** Joins: manti7 (~manti7@176.10.104.94)
[11:03:33] *** Quits: a6a45081-2b83 (~aditya@223.226.232.244) (Ping timeout: 268 seconds)
[11:03:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[11:05:22] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 246 seconds)
[11:06:58] *** Quits: lastmikoi (~lastmikoi@vm-01.lastmikoi.net) (Ping timeout: 272 seconds)
[11:11:01] *** Joins: lastmikoi (~lastmikoi@vm-01.lastmikoi.net)
[11:13:31] *** Quits: solrize (~solrize@user/solrize) (Ping timeout: 246 seconds)
[11:14:23] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:15:11] <nubonix> how can i add the addirs directory to my pycharm project, when the project itself is located in another directory?
[11:15:20] <nubonix> appdirs* not addirs
[11:17:15] <euouae> What do you mean?
[11:19:47] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 252 seconds)
[11:19:49] *** Joins: rendar (~rendar@user/rendar)
[11:20:14] <nubonix> what i said :D :D :D
[11:20:26] *** Quits: euouae (~euouae@user/euouae) (Read error: Connection reset by peer)
[11:20:31] *** loki_val is now known as crabbedhaloablut
[11:20:35] <nubonix> so i have my project directory in /home/nubonix/PycharmProjects/NBM2
[11:21:12] <nubonix> and i have my appdirs location [mainly for my data folder, but i might add more, idk yet] in /home/nubonix/.local/share/NBM/
[11:21:22] <nubonix> but pycharm doesnt see /home/nubonix/.local/share/NBM/ within the project
[11:22:22] <nubonix> NBM2 will eventually be renamed to NBM
[11:23:55] <nubonix> oh... lols nvm figured it out
[11:24:01] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[11:24:06] <nubonix> was too scared to hit ok/apply when adding a new root directory
[11:24:16] <nubonix> solved!
[11:29:16] *** Joins: node1 (~node1@user/node1)
[11:29:31] *** Joins: d1b (~db@user/d1b)
[11:29:35] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[11:30:54] *** Joins: wyclif (~wyclif@user/wyclif)
[11:32:52] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[11:34:18] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[11:35:11] *** Quits: computeiro (~Wender@189.37.69.4) (Ping timeout: 252 seconds)
[11:35:37] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[11:35:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[11:37:28] *** Quits: black_13 (~jjosb@136.36.125.233) (Ping timeout: 268 seconds)
[11:39:14] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[11:39:33] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:42:11] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[11:46:03] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[11:47:07] *** Joins: wyclif (~wyclif@user/wyclif)
[11:48:49] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[11:49:46] *** Quits: f33f046c-a02e (~aditya@171.76.227.35) (Read error: Connection reset by peer)
[11:51:38] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:52:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[11:52:57] *** Joins: f33f046c-a02e (~aditya@106.212.68.200)
[11:53:56] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[11:58:38] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[12:02:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:05:15] *** Joins: entuland (~entuland@user/entuland)
[12:05:20] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 252 seconds)
[12:06:13] *** Quits: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il) (Read error: Connection reset by peer)
[12:06:14] *** Joins: wyclif (~wyclif@user/wyclif)
[12:06:44] *** Joins: ntdll (~ntdll@user/ntdll)
[12:07:09] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[12:07:22] *** Joins: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il)
[12:08:13] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[12:08:38] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Ping timeout: 252 seconds)
[12:08:45] *** Joins: slav0nic (slav0nic@python.su)
[12:09:12] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[12:10:24] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[12:10:34] *** Quits: audiocat (~audio@2603-8081-1800-00ad-0cb4-6e2c-d49d-e8f1.res6.spectrum.com) (Ping timeout: 246 seconds)
[12:11:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[12:12:50] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 272 seconds)
[12:12:59] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[12:14:29] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[12:14:38] <Payam> Hi guys, I want to make a scrum poker app. So the user needs to create a "room" with a ID. and people join that room and start voting with numbers. I know python and Flask (kinda okey) . What more do I need?
[12:16:29] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Quit: leaving)
[12:16:46] *** Joins: Lope (~lope@user/lope)
[12:18:18] *** Quits: Lope (~lope@user/lope) (Read error: Connection reset by peer)
[12:18:30] *** Joins: Lope (~lope@user/lope)
[12:18:51] <Lope> Ah, lost my connection to the IRC server, not sure if my messages went through.
[12:19:04] <Lope> Sorry for the dumb question. Is the venv one only for use when you're inside a venv?
[12:19:52] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[12:20:26] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 272 seconds)
[12:21:49] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[12:23:05] *** Joins: Pickchea (~private@user/pickchea)
[12:24:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:24:28] *** Joins: wyclif (~wyclif@user/wyclif)
[12:26:34] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 246 seconds)
[12:26:34] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[12:27:12] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[12:27:14] <voldial> How do I calculate how long a process has been awake? If I suspend, my statistics for throughput are off because the process remembers when it started and how long has elapsed IRL, but I suspended it for an arb long time...
[12:27:30] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[12:27:38] *** Joins: palasso (~palasso@user/palasso)
[12:29:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[12:33:06] <voldial> the process needs to poll time() and remember at some granularity... right?
[12:33:11] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[12:33:26] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[12:34:52] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[12:35:02] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[12:35:23] *** Quits: f33f046c-a02e (~aditya@106.212.68.200) (Remote host closed the connection)
[12:36:34] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:42] <voldial> seems not possible, without a parent process doing the monitoring and assuming it itsself has not been suspended
[12:37:40] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[12:39:32] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:35] *** Joins: han-solo (~hanish@user/han-solo)
[12:40:40] *** Joins: wyclif (~wyclif@user/wyclif)
[12:42:59] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[12:43:25] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 258 seconds)
[12:43:32] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[12:43:36] <Payam> I have hard time undrestanding awaitables. I herd that a async function should always contain keyword "await". is that true?
[12:43:46] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[12:44:20] <dav1d> it doesnt have to
[12:44:21] <Payam> and should I alway await a async function that awaits something else?
[12:44:50] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[12:45:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:45:40] <dav1d> if you call an async function, you get an immediate response with the gurantuee you'll get the result later, at some point, when it's ready. Now to wait until the result is ready, you can use `await`
[12:46:02] <Payam> and will it be done concurrently?
[12:46:15] <dav1d> if you call an async function that does not wait on anything else and immediately has a result ready, it just means the await doesnt have to wait long
[12:46:30] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[12:46:31] <dav1d> depends on your definition of concurrency, but yeah you could say that
[12:46:48] <dav1d> e.g. you can also await multiple results at once
[12:48:05] <dav1d> https://docs.python.org/3/library/asyncio-task.html#asyncio.gather e.g.
[12:49:25] *** Joins: pnoud (~pnoud@user/pnoud)
[12:49:45] <dav1d> Lope, I dont understand your question
[12:49:54] <dav1d> Lope, yes you have to "activate" a venv first
[12:53:23] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:54:38] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[12:55:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[12:55:41] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: bgardner[m] (~bgardner@2001:470:69fc:105::8a8) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: jwon (~jwon@user/jwon) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: P403n1x87 (~p403n1x87@2001:470:69fc:105::689) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Bridge terminating on SIGTERM)
[12:55:44] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Quit: Bridge terminating on SIGTERM)
[12:55:45] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Bridge terminating on SIGTERM)
[12:55:45] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[12:55:46] *** Quits: binarymutt[m] (~binarymut@2001:470:69fc:105::2b3f) (Quit: Bridge terminating on SIGTERM)
[12:55:47] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Quit: Bridge terminating on SIGTERM)
[12:55:52] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Bridge terminating on SIGTERM)
[12:55:53] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Quit: Bridge terminating on SIGTERM)
[12:55:56] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[12:56:01] *** Lord_of_Life_ is now known as Lord_of_Life
[12:56:04] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 246 seconds)
[12:57:00] *** Joins: wyclif (~wyclif@user/wyclif)
[12:57:02] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[12:57:48] *** Quits: LiftLeft (~LiftLeft@154.21.114.237) (Ping timeout: 272 seconds)
[12:57:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[12:58:10] *** Joins: iflema (~ian@user/iflema)
[12:58:42] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[12:59:51] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:00:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:00:38] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 255 seconds)
[13:01:26] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[13:01:47] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[13:02:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:04:46] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 272 seconds)
[13:05:05] *** Quits: rajkosto (~rajkosto@93-86-133-203.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[13:07:09] *** Joins: bgardner[m] (~bgardner@2001:470:69fc:105::8a8)
[13:07:09] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[13:07:09] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[13:07:09] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[13:07:09] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[13:07:09] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[13:07:10] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[13:07:10] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[13:07:10] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[13:07:10] *** Joins: jwon (~jwon@user/jwon)
[13:07:10] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[13:07:10] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[13:07:10] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[13:07:10] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[13:07:10] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[13:07:10] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[13:07:10] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[13:07:10] *** Joins: binarymutt[m] (~binarymut@2001:470:69fc:105::2b3f)
[13:07:10] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[13:07:23] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[13:07:24] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[13:07:36] <jim> the matrix invades!
[13:09:34] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[13:09:37] <Lope> dav1d, thanks
[13:10:46] *** Quits: jtck (~jtck@222.164.13.173) (Read error: Connection reset by peer)
[13:11:04] *** Joins: gggp (~gggp@60.10.194.47)
[13:12:05] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:14:04] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[13:14:56] *** Joins: wyclif (~wyclif@user/wyclif)
[13:16:20] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:17:13] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[13:17:28] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[13:17:34] *** Joins: Fluxx (~Fluxx@user/fluxx)
[13:18:52] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 268 seconds)
[13:20:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[13:21:40] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[13:25:55] *** Quits: yogoyo (~patrick@user/yogoyo) (Quit: WeeChat 3.0.1)
[13:31:00] *** Joins: meridion (~meridion@punt.hetgrotebos.org)
[13:31:29] *** Quits: foozle (~foozle@2001-b011-c001-52e7-516b-1d97-31a7-6d4d.dynamic-ip6.hinet.net) (Quit: Leaving)
[13:33:25] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[13:34:02] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[13:37:04] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[13:37:18] *** Joins: cheater (~Username@user/cheater)
[13:41:22] *** Joins: wyclif (~wyclif@user/wyclif)
[13:42:10] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 246 seconds)
[13:42:46] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[13:43:52] *** Joins: cedric (~cedric@2a01:cb11:867:c200:fc29:fa39:adc4:4d1a)
[13:44:51] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[13:47:50] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 272 seconds)
[13:49:05] *** Joins: thiras (~thiras@user/thiras)
[13:50:03] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 268 seconds)
[13:51:04] *** Joins: dvx (~dvx@185.63.97.64)
[13:51:47] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:54:17] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[13:57:07] *** Joins: frost (~frost@59.71.241.179)
[13:59:57] *** Joins: Auron (Auron956@user/auron)
[14:00:56] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[14:06:27] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[14:08:07] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[14:10:48] *** Joins: azazello (~azazello@109.75.158.195)
[14:11:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:11:18] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[14:12:11] *** Joins: ice9 (~ice9@user/ice9)
[14:12:32] *** Quits: gyim (~user@51B6A4CF.unconfigured.pool.telekom.hu) (Ping timeout: 272 seconds)
[14:15:54] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[14:18:28] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[14:19:52] *** Joins: mickey (~user@user/mickey)
[14:20:52] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[14:21:08] *** Joins: mickey (~user@user/mickey)
[14:23:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:24:20] <Jonno_FTW> anyone familiar with cv2?
[14:24:50] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:26:41] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[14:26:41] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[14:27:06] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 272 seconds)
[14:27:12] *** Joins: c10l (~c10l@89.34.167.207)
[14:27:28] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[14:30:41] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[14:33:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:33:43] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:35:12] <Wulf> Jonno_FTW: Nope. But please ask your question.
[14:35:33] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[14:39:01] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[14:39:14] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:39:19] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[14:42:45] *** Joins: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net)
[14:43:47] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 258 seconds)
[14:46:55] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 246 seconds)
[14:47:22] <Jonno_FTW> I already solved it
[14:48:31] *** Joins: node1 (~node1@user/node1)
[14:49:21] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:49:50] *** Joins: euouae (~euouae@user/euouae)
[14:49:56] <Jonno_FTW> what mime types are supported by cv2?
[14:50:15] *** Joins: pnoud (~pnoud@user/pnoud)
[14:51:17] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[14:53:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[14:54:11] <Jonno_FTW> actually scrap that
[14:54:30] *** Joins: wyclif (~wyclif@user/wyclif)
[14:54:38] *** Joins: y04nn (~y04nn@89.45.7.186)
[14:55:17] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[14:56:36] <ApostleInTriumph> Hello. I have a tensor A of shape (B, N) which is int and another tensor B of shape (B, N, 3). How do i select the indices specified in tensor A from tensor B?
[14:56:48] <ApostleInTriumph> *in Pytorch
[14:57:23] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[14:57:30] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[14:58:55] <euouae> you're using B too many times
[14:59:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[14:59:34] <euouae> so you have 2 tensors of shape (B, N) and by that you mean two indices ij over (1,1)...(B,N)?
[15:01:57] *** Joins: dhanesh (~Dhanesh@117.223.140.103)
[15:05:43] <euouae> Or rather, (B,N) and (B,N,3). Are these the dimensions of the tensors?
[15:06:06] *** Joins: Naan (~naan@user/naan)
[15:07:12] *** Quits: y04nn (~y04nn@89.45.7.186) (Remote host closed the connection)
[15:07:24] *** Joins: y04nn (~y04nn@89.45.7.186)
[15:09:14] *** Joins: jtck (~jtck@222.164.13.173)
[15:10:13] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[15:10:24] *** Quits: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net) (Ping timeout: 252 seconds)
[15:11:13] *** Joins: wyclif (~wyclif@user/wyclif)
[15:11:33] *** Joins: node1 (~node1@user/node1)
[15:11:57] *** Joins: Pickchea (~private@user/pickchea)
[15:13:26] *** Joins: LittleHillMYR (~Lil@user/littlehillmyr)
[15:14:32] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[15:14:33] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:14:36] *** Quits: y04nn (~y04nn@89.45.7.186) (Ping timeout: 272 seconds)
[15:15:14] <fluter> hi, for format and style of assignment, a = val or a=val ? which one is better?
[15:15:42] <ChrisWarrick> fluter: with spaces
[15:15:52] <ChrisWarrick> fluter: you might want to read PEP8, or just use black
[15:16:05] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:16:07] <fluter> black?
[15:16:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:16:35] <ChrisWarrick> fluter: https://github.com/psf/black#readme
[15:17:08] <fluter> oh, it'a fomatting tool,
[15:17:15] * fluter checking it out
[15:17:29] <fluter> thanks!
[15:17:58] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[15:19:24] <fluter> for the classifiers in setup.py: https://packaging.python.org/guides/distributing-packages-using-setuptools/#classifiers
[15:19:38] <fluter> if my code will only support 3.8 and onwards,
[15:19:51] <fluter> should i add this line: 'Programming Language :: Python :: 3',
[15:20:00] <fluter> i already have 'Programming Language :: Python :: 3.8'
[15:20:03] <ChrisWarrick> classifiers don’t matter as much these days
[15:20:12] <ChrisWarrick> although some legacy tools might still use them
[15:20:16] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[15:20:21] <ApostleInTriumph> euouae sorry got disconnected
[15:20:27] <euouae> ApostleInTriumph: did you get my messages?
[15:20:38] <ApostleInTriumph> yes, until you said I had too many Bs
[15:20:43] <ChrisWarrick> fluter: I’d add 3, 3.8, 3.9 — and then set python_requires='>=3.8'
[15:20:47] <ApostleInTriumph> I'll rephrase my question
[15:20:59] <ApostleInTriumph> I have a tensor A of shape (B, N) which is int and another tensor C of shape (B, N, 3). How do i select the indices specified in tensor A from tensor C?
[15:21:01] <fluter> ChrisWarrick: ok, that makes good sense
[15:21:44] <euouae> ApostleInTriumph: A_ij is an int. How does it specify positions in C?A
[15:22:52] <ApostleInTriumph> euouae if you consider batchsize=1, it's same as squeeze() and index like C.squeeze()[A.squeeze()]
[15:23:20] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[15:23:35] <euouae> I'm not following
[15:23:59] <euouae> squeeze has to do with removing dimensions of size 1
[15:24:32] <ApostleInTriumph> yes, okay i guess i didn't explicitly say, but the 'B' in the shape was batchsize,
[15:25:22] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[15:25:38] <ApostleInTriumph> basically, I can solve with a for loop, for each b in B. however, I was looking if there is a more elegant solution
[15:25:47] <euouae> For each b in B, do what?
[15:25:51] <bjs> ApostleInTriumph: can you give an example with like a small 2x2 array/tensor
[15:26:02] <bjs> or something
[15:26:16] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[15:26:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[15:28:32] *** Joins: wyclif (~wyclif@user/wyclif)
[15:28:51] <ApostleInTriumph> bjs yes in a few min
[15:30:06] *** Quits: LittleHillMYR (~Lil@user/littlehillmyr) (Read error: Connection reset by peer)
[15:30:12] *** Joins: LittleHi1 (~Lil@user/littlehillmyr)
[15:32:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:33:09] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[15:33:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:33:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:37:30] *** Quits: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il) (Quit: Konversation terminated!)
[15:38:02] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 272 seconds)
[15:38:26] <ApostleInTriumph> bjs https://bpa.st/5TWA
[15:38:36] <ApostleInTriumph> this is what I'd like to do in torch. but without the loop
[15:39:17] *** Joins: manti7 (~manti7@176.10.104.94)
[15:39:58] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[15:43:21] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Remote host closed the connection)
[15:44:42] <euouae> What does this do?
[15:45:12] *** Joins: wyclif (~wyclif@user/wyclif)
[15:45:32] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[15:45:56] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:46:18] *** Joins: y1n (~y1n@84-115-64-71.wifi.dynamic.surfer.at)
[15:48:30] *** Joins: mantiX (~manti7@176.10.104.94)
[15:48:36] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[15:48:48] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[15:48:51] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Client Quit)
[15:50:12] <euouae> so you have a 3D array X and a 1D array Y of 2D indices and you're trying to collect X[i, Y[i]] ?
[15:50:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:51:13] <ApostleInTriumph> yes
[15:51:19] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 246 seconds)
[15:51:27] <ApostleInTriumph> exactly, but i is set from loop, right. that's what i want to do in a "more clever" way
[15:52:32] <euouae> So you're hoping that the operation can be encoded in the tensor calculus
[15:52:36] <euouae> Why do you want that?
[15:52:55] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[15:53:43] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[15:55:21] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:56:14] <euouae> you want the tensor ijk -> delta_k(A_ij) multiplied by B as far as I can tell. The values of A_ij are between 1 and 3, right?
[15:57:29] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[15:57:40] *** Quits: LittleHi1 (~Lil@user/littlehillmyr) (Read error: Connection reset by peer)
[15:58:38] <ApostleInTriumph> what do you mean by values?
[15:59:20] <ApostleInTriumph> i think values can be anything in tensor C and in tensor A, it can only be the maximum of 'N', where (B, N, 3) is the shape of tensor C
[15:59:35] <ApostleInTriumph> maximum=N-1,
[16:00:09] *** Joins: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net)
[16:01:14] <euouae> You can think of tensors as arrays
[16:01:27] <euouae> So A is a 2D array of integers. How do you want to index C?
[16:01:33] *** Joins: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[16:01:44] <euouae> C is 3D, needs 3 numbers to be indexed
[16:02:12] *** Quits: dober (~dober@sourcehut/user/dober) (Quit: Bye...)
[16:02:15] <euouae> I thought you did C[i,j,k] where k = A[i,j]
[16:02:56] *** Joins: wyclif (~wyclif@user/wyclif)
[16:04:16] *** Joins: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il)
[16:04:45] *** Quits: weedmic (~weedmic@109-186-197-174.bb.netvision.net.il) (Client Quit)
[16:06:33] *** Joins: frost (~frost@59.71.241.179)
[16:07:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:09:43] <ApostleInTriumph> euouae to simplify more to my exact usecase, C is (8, 6890, 3), A is (8, 2500)
[16:09:47] <fluter> ChrisWarrick: when black format code, it use spaces around assignment, but no in the keywords argument, is this expected?
[16:09:50] <ApostleInTriumph> shape of C and A^
[16:10:05] <fluter> a=33 -> a = 33; func(a=33) stays the same
[16:10:22] <ChrisWarrick> fluter: yes, just trust black, it will do the right thing (although you might want to set a more reasonable line length limit)
[16:10:27] <euouae> ApostleInTriumph: How do you want to index C?
[16:11:19] <fluter> ChrisWarrick: ok :P
[16:11:28] <ApostleInTriumph> euouae let me say the expected output should be of shape (8, 2500, 3)
[16:11:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[16:12:00] <euouae> ApostleInTriumph: ok, I can't imagine how
[16:12:16] <euouae> What happened to 6890?
[16:13:01] <euouae> It's also unclear why these numbers are involved, you can just say A is (2,3) and C is (2, 5, 7)
[16:14:27] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[16:19:05] *** Joins: wyclif (~wyclif@user/wyclif)
[16:19:31] *** Joins: rsx (~dummy@ppp-188-174-157-224.dynamic.mnet-online.de)
[16:21:09] *** Joins: magla (~gelignite@55d42871.access.ecotel.net)
[16:24:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:24:49] <ApostleInTriumph> yes, then the output is (2, 3, 7)
[16:24:54] <ApostleInTriumph> are you able to get me now euouae
[16:27:02] <euouae> No you're not clarifying how to obtain that
[16:29:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:29:13] *** Joins: cdown (~cdown@89.32.122.5)
[16:30:05] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[16:32:03] <ApostleInTriumph> that's my question :)
[16:32:11] <euouae> Why do you want that?
[16:33:34] *** Joins: jdmark (~jdmark@67.8.137.130)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:58] *** Joins: wyclif (~wyclif@user/wyclif)
[16:38:53] *** Joins: KevinX_ (~KevinX@94.140.11.96)
[16:38:55] *** Joins: thurs9 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[16:39:01] *** Quits: KevinX (~KevinX@94.140.11.98) (Ping timeout: 246 seconds)
[16:39:53] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:fdf6:260a:bc2c:db50) (Ping timeout: 252 seconds)
[16:39:55] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[16:39:55] *** thurs9 is now known as thurs
[16:39:55] *** Quits: spirit (~spirit@user/spirit) (Quit: Leaving)
[16:39:56] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 258 seconds)
[16:40:02] *** Quits: kadobanana (~mud@user/kadoban) (Remote host closed the connection)
[16:40:10] *** Quits: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net) (Ping timeout: 240 seconds)
[16:40:27] *** Joins: kadobanana (~mud@user/kadoban)
[16:40:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 256 seconds)
[16:41:58] *** Joins: BUSY (~BUSY@user/busy)
[16:42:18] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[16:46:20] *** Joins: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de)
[16:46:22] *** Parts: kiwikiwik (~kiwikiwik@p4fd1c492.dip0.t-ipconnect.de) ()
[16:47:04] *** Quits: reset (~reset@user/reset) (Quit: reset)
[16:47:48] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:48:14] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[16:49:49] *** Joins: gggp_ (~gggp@60.10.23.164)
[16:50:04] <gggp_> how to delete element from deque
[16:50:07] *** Quits: y1n (~y1n@84-115-64-71.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[16:51:05] *** Joins: pnoud (~pnoud@user/pnoud)
[16:51:16] *** Joins: y1n (~y1n@84-115-64-17.wifi.dynamic.surfer.at)
[16:52:43] *** Joins: frost (~frost@59.71.241.179)
[16:54:35] *** Joins: reset (~reset@user/reset)
[16:54:41] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[16:55:02] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:56:17] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[16:56:54] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:58:02] *** Quits: tims1 (~tims@61.69.132.167) (Quit: WeeChat 3.2)
[16:58:48] *** Quits: canton7 (~canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[16:58:48] *** Joins: Warped (~Warped@user/warped)
[16:59:44] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[17:00:09] <euouae> gggp_: like pop()?
[17:00:28] *** Joins: pycurious (~Adium@user/pycurious)
[17:01:13] *** Joins: canton7 (~canton7@about/csharp/canton7)
[17:01:24] <graingert> gggp_: https://docs.python.org/3/library/collections.html#collections.deque.remove
[17:01:31] <graingert> is a very common item with deques
[17:01:38] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[17:01:43] <graingert> used a lot on asyncio for deques of fut waiters
[17:02:27] *** Quits: gggp_ (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[17:02:27] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:02:51] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:02:55] *** Joins: anandprabhu_ (~anandprab@94.202.243.198)
[17:03:01] *** Joins: dreamon (~dreamon@pd95038fb.dip0.t-ipconnect.de)
[17:03:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[17:04:15] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[17:08:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[17:08:58] *** Joins: exilepilot (~exilepilo@2a00:23c4:ba88:fc01:68fe:19eb:6dd5:3e3e)
[17:14:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:14:44] *** Joins: xkuru (~xkuru@user/xkuru)
[17:15:24] <dreamon> hello. is it possible to set 1 and 2 on "?" position? a="test1=?,test2=?;",(1,2); print(a) → result ('test1=?,test2=?;', (1, 2)) → want output ('test1=1,test2=2;')
[17:15:50] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:16:22] <deniska> dreamon: does it have to be '?'? There's strings have .format() method, but it exepects '{}' for the placeholder
[17:17:22] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:8859:2efb:1ac:ad5d)
[17:17:34] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[17:17:52] <dreamon> deniska, found this "?" in a sql execute example and could not run.  so thought I make somethin wrong.
[17:18:06] <dreamon> deniska, pse a little example.
[17:19:32] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[17:21:27] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[17:23:16] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[17:25:19] <ChrisWarrick> dreamon: '?' is valid for sqlite, other DBs/drivers may require different placeholder characters
[17:25:23] <ChrisWarrick> dreamon: pastebin your code
[17:25:30] <ChrisWarrick> (the database code)
[17:25:42] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 272 seconds)
[17:26:30] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 268 seconds)
[17:27:40] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[17:27:45] *** Joins: gitly (~gitly@185.69.145.226)
[17:27:52] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[17:27:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:28:56] *** Joins: jmft2 (~Adium@81.149.115.87.dyn.plus.net)
[17:29:43] <dreamon> ChrisWarrick, your right I tried to use it on sqlite. But found out it may be better to make execute string seperate. so I did "exstring="DELETE FROM Proben WHERE LfNr="+position+" AND Datum='"+datum+"' AND ...  thats very ugly to read.
[17:30:06] <ChrisWarrick> dreamon: it’s not ugly, it’s a sql injection vulnerability
[17:30:12] <ChrisWarrick> not just ugly*
[17:30:23] <dreamon> OH.. ok..
[17:30:53] <ChrisWarrick> using ? is required to avoid sql injections
[17:30:57] <dreamon> sqlzeiger.execute("DELETE FROM Proben WHERE LfNr=?, Begleit=?", ( position,begleit ))
[17:31:44] <dreamon> But this dont work.. it tells me somethin like "sqlite3.OperationalError: near ","
[17:32:12] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:32:33] <dreamon> using only on parameter works. but using 2 parameters it fails.
[17:33:04] <dreamon> Full Error "sqlite3.OperationalError: near ",": syntax error
[17:33:32] *** Joins: baloona (~baloona@mail.baloona.de)
[17:34:53] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:36:02] <dreamon> on=one
[17:38:25] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:38:31] <deniska> dreamon: you have a mistake in your sql code, you probably wanted: "DELETE FROM Proben WHERE LfNr=? AND Begleit=?"
[17:40:58] <dreamon> deniska, YEAH.. your Right. I used a Example and there was this "," instead von AND.. MY FAULT.
[17:41:20] <dreamon> thank you all. now it works.. \o/
[17:43:29] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[17:43:41] *** Joins: wyclif (~wyclif@user/wyclif)
[17:44:09] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:44:27] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[17:45:56] <dreamon> https://www.python-lernen.de/sqlite-delete-from-datensatz-loeschen.htm → This guy is using it wrong in its example → zeiger.execute("DELETE FROM personen WHERE nachname=?, geburtstag=?", ('Goethe', '28.8.1749'))
[17:47:08] *** Quits: euouae (~euouae@user/euouae) (Quit: euouae)
[17:47:28] <deniska> dreamon: sometimes tutorials have mistakes in them
[17:49:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:50:18] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:8859:2efb:1ac:ad5d) (Ping timeout: 240 seconds)
[17:50:24] *** Quits: y1n (~y1n@84-115-64-17.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[17:50:51] *** Quits: anandprabhu_ (~anandprab@94.202.243.198) (Quit: Leaving)
[17:51:26] *** Joins: y1n (~y1n@84-115-65-240.wifi.dynamic.surfer.at)
[17:52:48] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Killed (NickServ (GHOST command used by xavie!~xavie@abayonne-654-1-273-90.w92-146.abo.wanadoo.fr)))
[17:53:24] *** Joins: xcombelle (~xavie@abayonne-654-1-273-90.w92-146.abo.wanadoo.fr)
[17:54:49] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:55:48] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.0.1)
[17:57:19] *** Quits: jmft2 (~Adium@81.149.115.87.dyn.plus.net) (Read error: Connection reset by peer)
[17:57:20] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:57:35] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[17:57:52] *** Joins: heco (~redrum@user/redrum88)
[17:58:22] *** Joins: Pickchea (~private@user/pickchea)
[17:58:38] *** Joins: zaquest (~notzaques@5.128.210.178)
[18:01:08] <fluter> hi, i have python_requires=">=3.8" in setup.py, but when i install it it failed
[18:01:28] <fluter> requires a different Python: 3.8.11 not in '>=3.8'
[18:01:38] <fluter> is 3.8.11 not >= 3.8?
[18:02:20] *** Joins: wyclif (~wyclif@user/wyclif)
[18:02:50] *** Joins: jmft2 (~Adium@81.149.115.87.dyn.plus.net)
[18:07:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:08:58] *** Quits: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net) (Ping timeout: 252 seconds)
[18:10:04] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[18:10:21] *** Joins: darklambda (~whateverg@122.11.240.98)
[18:10:40] *** Quits: drincruz_ (~drincruz@cpe-69-203-74-164.hvc.res.rr.com) (Ping timeout: 272 seconds)
[18:14:07] <BtbN> Can anyone make sense of this TypeError coming from within pandas? https://github.com/OGGM/OGGM-Docker/runs/3038616102?check_suite_focus=true#step:7:819
[18:14:41] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:15:00] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 258 seconds)
[18:15:29] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[18:15:44] <BtbN> It's originating from this line: https://github.com/pandas-dev/pandas/blob/v1.3.0/pandas/core/indexes/base.py#L5798 it's calling https://github.com/pandas-dev/pandas/blob/v1.3.0/pandas/core/indexes/base.py#L5722 which even declares the 'kind' arg as deprecated?!
[18:20:01] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[18:20:35] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 255 seconds)
[18:20:41] <Payam> Hi, I am on Asyncio on python3.7 . asyncio doesn't have an attribute called to_tread?
[18:20:45] <Payam> thread*
[18:20:48] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[18:23:26] *** Joins: nyah (~nyah@90.221.186.180)
[18:23:42] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:24:43] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[18:25:28] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:25:30] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[18:26:06] *** Joins: stoneware (~stoneware@user/stoneware)
[18:26:44] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e1e5-ccd0-fb20-cec6.res6.spectrum.com)
[18:29:02] *** Quits: darklambda (~whateverg@122.11.240.98) (Ping timeout: 272 seconds)
[18:32:42] *** Joins: Guddu (~Guddu@106.214.41.45)
[18:33:21] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[18:33:42] *** Joins: ano (~weechat@user/ano)
[18:37:25] *** Quits: jmft2 (~Adium@81.149.115.87.dyn.plus.net) (Ping timeout: 268 seconds)
[18:37:38] <oprypin> Payam, https://imgur.com/JIwhQVl.png
[18:38:53] *** Joins: wyclif (~wyclif@user/wyclif)
[18:39:02] *** Joins: tims (~tims@61.69.132.167)
[18:43:48] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[18:44:14] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Ping timeout: 272 seconds)
[18:44:38] *** Joins: Crassus (~Crassus@user/crassus)
[18:46:28] *** Joins: Akuli (~Akuli@87-94-111-20.bb.dnainternet.fi)
[18:46:34] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[18:49:25] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[18:49:30] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:49:52] *** Joins: skapata (~Skapata@user/skapata)
[18:50:34] *** Quits: y1n (~y1n@84-115-65-240.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[18:51:27] *** Joins: y1n (~y1n@84-115-64-27.wifi.dynamic.surfer.at)
[18:51:36] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:51:45] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:51:49] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[18:51:55] *** Joins: pnoud (~pnoud@user/pnoud)
[18:52:04] *** Joins: spithash (~spithash@user/spithash)
[18:52:19] *** Joins: han-solo (~hanish@user/han-solo)
[18:54:04] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[18:55:02] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[18:55:36] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[18:57:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[18:59:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:00:38] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 255 seconds)
[19:04:13] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[19:04:43] *** Joins: Pickchea (~private@user/pickchea)
[19:05:23] *** Quits: reset (~reset@user/reset) (Quit: reset)
[19:05:37] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[19:06:31] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[19:07:03] *** Quits: dhanesh (~Dhanesh@117.223.140.103) (Ping timeout: 265 seconds)
[19:07:41] *** Joins: node1 (~node1@user/node1)
[19:08:14] *** Isthmusi is now known as Zal
[19:08:52] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 268 seconds)
[19:09:29] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 268 seconds)
[19:10:09] *** Quits: Notgnoshi (~nots@2001-48F8-8-40-3080-B2E0-C715-A48E-dynamic.midco.net) (Remote host closed the connection)
[19:10:32] *** Joins: Crassus (~Crassus@user/crassus)
[19:12:37] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:14:23] *** Joins: goldfish (~goldfish@user/goldfish)
[19:15:08] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: Lost terminal)
[19:15:59] *** Joins: yogoyo (~patrick@user/yogoyo)
[19:16:11] *** Joins: VBreton (~Guest86@82-65-166-34.subs.proxad.net)
[19:22:41] *** Joins: Guest44 (~Guest44@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[19:26:45] <Guest44> Hi, quick question about testing. I saw several approches regarding how to test (with/without mocks and so on), let's say this case: https://bpa.st/HB6A , I want to check MyClass, should I use Mock(spec=MyState) and check it's being called or should I use th real MyState and check a property of it?
[19:27:48] *** Quits: exilepilot (~exilepilo@2a00:23c4:ba88:fc01:68fe:19eb:6dd5:3e3e) (Quit: Leaving)
[19:27:49] *** Joins: zebrag (~chris@user/zebrag)
[19:28:47] <nedbat> Guest44: ideally, avoid mocks
[19:29:12] <Guest44> Why?
[19:29:18] *** Joins: dhanesh (~Dhanesh@117.223.140.103)
[19:29:22] <nedbat> Guest44: the best is to be able to observe the behavior of the class through its public interface, and write tests against that.
[19:29:33] <nedbat> Guest44: because using mocks encourages you to test internal details
[19:29:44] <han-solo> that seems like, `d = {}; obj = MyClass(d); obj.add_data(data); assert d['secret'] == data` should do ? :)
[19:30:03] <Guest44> Let's take the simple example I sent (if it's not good please tell), would you use Mock of MyState or real class?
[19:30:17] <nedbat> Guest44: tell me what behavior you need from MyClass
[19:30:19] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[19:30:28] <Guest44> "observe... public interface" - you mean the tested class, no?
[19:30:40] <nedbat> Guest44: after a user of MyClass calls add_data, then what can they expect?
[19:30:49] <nedbat> Guest44: yes, the interface of the tested class
[19:31:00] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:31:27] <nedbat> Guest44: and in this case, MyState seems to just be a dict? There's no need to mock a dict.
[19:31:40] <Guest44> Just for the example.. Let me edit it
[19:31:46] *** Joins: jess (~jess@libera/staff/jess)
[19:33:17] <Guest44> https://bpa.st/MZ4A
[19:33:44] <Guest44> A class that gets a state with DI, I want to test MyClass - Why mock would be bad in here?
[19:34:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[19:34:20] <nedbat> Guest44: if MyState isn't complicated, it's better to just use a real MyState
[19:34:27] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[19:34:29] <Guest44> Why?
[19:34:43] <Guest44> UT not supposed to test only 1 item at a time?
[19:34:58] <Guest44> If I have good ut's for MyState I should assume it's working, no?
[19:35:28] <nedbat> Guest44: it just doesn't add any value to use a mock there.
[19:35:30] <Payam> oprypin, I didn't see that. I was doing the tutorials on that page and didn't see it.
[19:35:42] <nedbat> Guest44: mocks should be for replacing components that are unpredictable, or expensive
[19:35:44] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[19:35:55] <nedbat> Guest44: so what if your MyClass tests also test MyState?
[19:35:55] <Payam> nedbat, do you have a .vimrc for python? :P
[19:36:13] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[19:36:28] *** Joins: Guest441 (~Guest44@77.124.108.113)
[19:36:31] <Guest441> Sry disconnected
[19:36:32] <nedbat> Payam: https://github.com/nedbat/dot/tree/master/.vim though I can't claim it will be good for anyone else
[19:36:35] <dav1d> a mock mostly makes sense when you don't have an easy way to construct a situation you cannot easily setup in a test
[19:37:31] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[19:37:49] <Guest441> Missed some commets maybe, anyway to look at the channel log?
[19:38:15] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:38:16] <Guest441> david- why the default would be not using mocks?
[19:38:25] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:38:30] <Guest441> The desired state is not to have a test - test only 1 item?
[19:38:47] <nedbat> Guest44: using mocks adds complexity, and doesn't make the tests better.
[19:39:03] <nedbat> Guest44: your MyState class is not complicated.
[19:39:09] <dav1d> it's a lot of effort and it doesn't hurt if you test other implementation as well
[19:39:12] <Guest441> Bug in MyState won't effect the test (of MyClass)
[19:39:14] <nedbat> Guest441: mocks should be for replacing components that are unpredictable, or expensive
[19:39:31] *** Quits: Guest44 (~Guest44@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Ping timeout: 246 seconds)
[19:39:34] <nedbat> Guest441: "test just one thing" is a good principle, but it can be taken too far.
[19:40:05] <Guest441> Why it's a lot of effort actually?
[19:40:16] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[19:40:18] <Guest441> What will be the downsides of using mocks for "simple" classes?
[19:40:59] <Guest441> One advantage of it: bug in MyState implementation wont fail the MyClass test
[19:41:05] <dav1d> Guest441, you'd never use a mock for something "simple", like a data class, too much effort, no gain. Where mocks shine is when simulating complex dependencies
[19:41:26] <dav1d> Guest441, sure, it doesn't, but is it a bad thing that it is failing?
[19:41:29] <nedbat> Guest441: let's say you have a bug in MyState.  Why would it be bad for the MyClass tests to fail also?
[19:41:43] *** Joins: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net)
[19:41:48] <nedbat> Guest441: maybe you don't even need separate tests for MyState. Just test it as part of MyClass. is it used anywhere else?
[19:42:05] <Guest441> Because MyState is an interface (in a real code)
[19:42:11] <Guest441> And might have several implementations
[19:42:46] <Guest441> If the state that uses local filesystem has bug, the relevant test should fail and not for the ones uses it
[19:43:30] <dav1d> Guest441, as we said, it depends on the complexity of the object. Generally there is no harm if that fails *also*
[19:43:47] *** Quits: dhanesh (~Dhanesh@117.223.140.103) (Quit: Leaving)
[19:44:25] <Guest441> The harm is that we get indication of failed test when the code is working
[19:44:54] <Guest441> Not too critical sometimes, but not an ideal indication. The main concern as you said is the complexity of creating the mocks?
[19:45:19] <dav1d> Guest441, then you have your answer, if you cannot absolutely live with that behaviour, you have to use a mock
[19:45:34] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Read error: Connection reset by peer)
[19:45:51] <Payam> is there anything wrong with this code? I get `AttributeError: __aexit__` https://bpa.st/YVVA
[19:46:11] <pycurious> is there a simple program somewhere that lets me click polygon vertices and save it into a file?
[19:46:18] <dav1d> Guest441, there is also an inbetween, you can create your own implementation of MyState just for the test, might be simpler than a mock, might not be
[19:46:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[19:46:40] <Guest441> Mostly, mock is simple as Mock(spec=type(..)), no?
[19:46:57] *** Joins: supakeen (~user@python/site-packages/supakeen)
[19:47:09] <dav1d> Guest441, you also have to give your mock behaviour
[19:47:10] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[19:47:34] <nedbat> Guest441: better than a mock is a verified fake
[19:48:13] <nedbat> Guest441: and if you have a few implementations of MyState, then one of them may be the verified fake you need
[19:48:49] <Guest441> Why it's better than mocking? (verified fake)
[19:49:03] <Guest441> If I'm testing MyClass I want to test this class only is acting as expected
[19:49:30] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[19:49:32] <nedbat> Guest441: because a mock can return values that will just do anything, rather than ensuring they are the values you want.
[19:49:49] <nedbat> Guest441: do you have a simple in-memory implementation of MyState?
[19:50:06] *** Quits: y1n (~y1n@84-115-64-27.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[19:50:31] *** Joins: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at)
[19:50:44] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:50:57] <Guest441> In our example we have a simple case that does not need to return anything, would you go for fake in this example as well?
[19:51:18] <nedbat> Guest441: where is that in the example?
[19:51:32] <Guest441> https://bpa.st/MZ4A
[19:51:48] <Payam> is there anything wrong with this code? I get `AttributeError: __aexit__` https://bpa.st/YVVA
[19:51:57] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:52:24] <nedbat> Guest441: i would split add_secret into two functions: one opens a file, and passes the open file object to the function that writes the serialized values.
[19:52:34] <nedbat> Guest441: then you can test the serialization with a StringIO
[19:52:51] <nedbat> Guest441: and I would use a simple implementation of MyState instead of a mock
[19:53:07] <Guest441> But why? there are no return values in here
[19:53:20] <nedbat> Guest441: self.state.serialize is returning a value
[19:53:42] <nedbat> Guest441: and the result of add_secret is a serialized file, you want to check its contents, right?
[19:54:18] <nedbat> Guest441: the downside of mocks, is you eventually write tests that just say, "the real code has a statement like this, then it has a statement like that" rather than testing the user-visible result of the work.
[19:54:47] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[19:55:44] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:56:22] <nedbat> Guest441: then if you refactor the implementation, your tests break
[19:57:17] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:57:30] <nedbat> Guest441: or, your code changes, but you don't change your tests, but they are so over-mocked, that they still pass
[19:57:42] <nedbat> Guest441: https://nedbatchelder.com/blog/201206/tldw_stop_mocking_start_testing.html
[19:58:17] *** Joins: ice9 (~ice9@user/ice9)
[19:58:23] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[19:59:06] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[19:59:07] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:59:21] <Guest441> I'll check it out ty, intuitive I'm for not using mocks but talked with a friend and could not make him support that, so wanted to check myself. I'll try to search for a real world example that over mocked test will miss some functionality
[19:59:23] *** Joins: skapata (~Skapata@user/skapata)
[19:59:52] <Guest441> How would you implemented fake? just as "regular code" (inherit from the obj itself)
[20:00:14] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[20:00:27] <nedbat> Guest441: it could be an entirely new object. but again, this is for complex things, not simple things.
[20:02:38] *** Quits: KevinX_ (~KevinX@94.140.11.96) (Ping timeout: 265 seconds)
[20:03:20] *** Joins: LiftLeft (~LiftLeft@154.21.23.6)
[20:03:24] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 272 seconds)
[20:03:38] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 255 seconds)
[20:03:54] <Guest441> Are you familiar maybe with some good examples regarding the over mocking or any other disadvantage of mocking?
[20:04:01] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[20:04:03] <han-solo> Payam: can we see the tracback too ?
[20:05:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[20:06:25] <Payam> han-solo, I forgot the paranteses
[20:07:55] *** Joins: KevinX (~KevinX@94.140.11.96)
[20:08:41] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[20:08:51] *** Quits: tims (~tims@61.69.132.167) (Ping timeout: 258 seconds)
[20:09:01] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:12:47] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[20:13:01] <dav1d> Guest441, go the way of least resistance for your tests, otherwise tests will break, get commented out, not maintaned at some point people stop writing them at all
[20:13:04] *** Joins: nef (~nef@user/nef)
[20:13:57] <dav1d> Guest441, and mocking tends to involve a lot of additional code and annoynces, especially noticable when refactoring code, suddenly all the mocks stop working (but behaviour of your class under test didnt)
[20:14:04] <dav1d> *didnt change
[20:15:25] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[20:15:34] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[20:20:23] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[20:21:51] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: leaving)
[20:23:40] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[20:23:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:23:44] *** Joins: gggp (~gggp@123.113.191.251)
[20:24:10] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Client Quit)
[20:24:38] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[20:24:51] *** Joins: Pixi (~Pixi@user/pixi)
[20:25:05] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[20:26:49] *** Joins: finsternis (~X@23.226.237.192)
[20:27:05] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:27:53] *** Quits: Guest441 (~Guest44@77.124.108.113) (Quit: Client closed)
[20:30:50] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:30:54] *** Joins: upsala (~zcb@185.213.155.160)
[20:31:10] *** Joins: Pickchea (~private@user/pickchea)
[20:31:54] *** Quits: yogoyo (~patrick@user/yogoyo) (Quit: WeeChat 3.0.1)
[20:32:29] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[20:33:23] *** Quits: gggp (~gggp@123.113.191.251) (Ping timeout: 258 seconds)
[20:33:54] *** foo_ is now known as foo
[20:34:16] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[20:35:42] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[20:35:57] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[20:36:20] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[20:36:32] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[20:37:52] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:49:17] *** Joins: duracrisis (~kkh@user/duracrisis)
[20:49:52] *** Quits: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[20:50:42] *** Joins: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at)
[20:52:37] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[20:52:44] *** Joins: pnoud (~pnoud@user/pnoud)
[20:53:04] *** Quits: tWqaq (~tWqaq@101.93.138.206) (Quit: Leaving)
[20:56:12] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:57:16] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[20:57:23] *** Quits: CobaltCam (uid507125@id-507125.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:57:38] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[20:59:08] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:41] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Remote host closed the connection)
[21:02:47] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[21:03:56] *** Quits: Mikaela (~Mikaela@user/mikaela) (Quit: Mikaela)
[21:04:19] *** Joins: Mikaela (~sid12355@user/mikaela)
[21:07:18] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:07:34] *** Joins: drogas (~drogas@jump2.jet.uk)
[21:07:37] <drogas> IndexError: index 5390974 is out of bounds for axis 0 with size 5390974
[21:07:40] <drogas> what does that mean
[21:08:12] <drogas> I'm guessing there is an array and axis 0 is the first position of the array?
[21:08:55] <grym> drogas: python is 0-indexed, right
[21:09:03] <grym> so you're asking for an index that doesn't exist
[21:09:04] *** Quits: dhellmann_ (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:10:04] <drogas> `for i in range( len(rJ) ): B = -rB[i]`  is the code. both rJ and rB should be same size arrays
[21:10:13] <grym> guess not!
[21:11:12] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 252 seconds)
[21:11:34] <grym> drogas: in general,  `for i in range(len(...` is a smell, anyway
[21:12:44] <grym> drogas: i'd write that as `B=[-x for x in rB]`
[21:13:09] <drogas> well... there are bunch of other things inside that for loop
[21:13:11] <grym> and then do whatever you want with all the elements of B
[21:13:24] <drogas> but that is the part that gives me the error
[21:13:40] <drogas> so I will now check the sizes and then come back to you grym 😬
[21:13:57] <grym> drogas: in general don't expect to loop over foo and index into bar safely
[21:14:04] <grym> with foos' indexes.
[21:14:16] <grym> drogas: you might also find zip and itertools.zip_longest to be helpful, not sure
[21:14:24] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[21:14:43] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[21:18:01] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Client Quit)
[21:19:36] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Ping timeout: 268 seconds)
[21:19:59] *** Joins: han-solo (~hanish@user/han-solo)
[21:20:05] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:20:14] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[21:20:50] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[21:20:59] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[21:21:50] *** Joins: Rogach (uid6398@id-6398.brockwell.irccloud.com)
[21:22:50] <Rogach> Hi! I'm debugging an issue in an open-source Python project. Is there a way to run project files without installing them?
[21:23:02] <Rogach> Currently imports resolve to the package already installed on my system.
[21:23:09] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[21:23:57] <Rogach> To be specific, the package is "rofimoji", it's currently both installed globally on my system, and locally in the git clone from the project repo.
[21:24:39] <Rogach> And it seems that when imports like "from picker.typer import Typer" resolve, they pick up system-wide version instead of the repository-local one.
[21:24:55] <han-solo> use a `venv` ?
[21:24:57] <Rogach> I can hack around it by editing sys.path, but maybe there's a simpler way?
[21:25:25] *** Joins: KombuchaKip (~kip@192.252.230.5)
[21:25:28] <Rogach> @han-solo So I simply create a new venv in that directory, and that should be enough?
[21:25:40] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[21:25:52] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[21:26:03] <han-solo> create a venv, install the requirements in that venv, and `pip install -e .` and hack away ?
[21:27:18] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Client Quit)
[21:28:25] <Rogach> @han-solo Yes, that works. Thank you!
[21:28:29] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (WeeChat 3.1)
[21:28:39] *** Quits: rsx (~dummy@ppp-188-174-157-224.dynamic.mnet-online.de) (Quit: rsx)
[21:28:49] <han-solo> 👍
[21:28:51] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[21:28:56] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[21:30:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:30:32] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[21:30:35] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[21:30:48] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[21:33:44] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: bbl)
[21:38:24] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:40:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[21:40:25] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:41:44] *** Joins: noobly (~noobly@50.38.126.25)
[21:42:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[21:43:45] *** Joins: hyiltiz (~quassel@31.220.5.250)
[21:44:48] *** Joins: gggp__offline (~gggp@221.219.77.87)
[21:45:13] *** Joins: Betal (~Beta@user/betal)
[21:45:20] *** Parts: ksynwa (~ksynwa@v2202009129512127397.nicesrv.de) (WeeChat 2.8)
[21:46:43] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[21:46:48] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:47:45] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 258 seconds)
[21:49:56] *** Quits: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[21:50:09] *** Joins: node1 (~node1@user/node1)
[21:50:13] *** Joins: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at)
[21:50:25] *** Quits: Lope (~lope@user/lope) (Ping timeout: 265 seconds)
[21:51:32] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[21:53:34] *** Quits: VBreton (~Guest86@82-65-166-34.subs.proxad.net) (Ping timeout: 246 seconds)
[21:53:36] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[21:55:51] *** Joins: Xavierdarkness (~xavierdar@user/xavierdarkness)
[21:58:26] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[21:59:41] *** Joins: darksun (~darksun@user/darksun)
[22:00:15] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[22:01:11] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:02:32] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[22:03:16] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[22:06:02] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[22:06:35] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[22:06:46] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[22:06:55] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[22:10:10] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:10:45] *** Quits: gggp__offline (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[22:11:23] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2f4b) (Quit: Konversation terminated!)
[22:12:04] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[22:12:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[22:12:32] *** Joins: cheater (~Username@user/cheater)
[22:14:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:14:27] *** az_ is now known as _az
[22:14:31] *** Quits: noobly (~noobly@50.38.126.25) (Quit: Client closed)
[22:14:36] *** _az is now known as az_
[22:14:42] *** Quits: nef (~nef@user/nef) (Ping timeout: 240 seconds)
[22:15:03] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[22:18:20] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[22:18:57] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[22:19:09] *** Joins: ice9 (~ice9@user/ice9)
[22:20:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[22:23:21] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[22:31:08] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[22:31:18] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:31:36] *** Joins: vlm (~vlm@user/vlm)
[22:32:51] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[22:35:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[22:35:54] *** Joins: KevinX_ (~KevinX@94.140.11.99)
[22:36:37] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:36:50] *** Quits: kmh (~kmh@p200300df5f30ad00c00521c3c33cf4ab.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:37:47] *** Quits: KevinX (~KevinX@94.140.11.96) (Ping timeout: 265 seconds)
[22:40:22] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[22:40:40] *** Quits: KevinX_ (~KevinX@94.140.11.99) (Ping timeout: 252 seconds)
[22:40:43] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[22:40:52] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[22:43:17] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[22:43:19] *** Joins: seednode (~seednode@user/seednode)
[22:43:51] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[22:43:55] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[22:45:26] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 252 seconds)
[22:45:53] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:46:03] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[22:46:43] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:49:51] *** Quits: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[22:50:17] *** Joins: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at)
[22:50:44] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[22:50:52] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:51:01] *** __jmcantrell__ is now known as jmcantrell
[22:51:06] <no_gravity> Is there a shorter way to set a module variable than "global xyz ... xyz = 123"?
[22:52:58] *** Joins: niv (~niv@limbo.cypherpunks.io)
[22:53:07] *** Joins: swn (~swn@c-73-253-42-20.hsd1.ct.comcast.net)
[22:53:07] <sco1> You don't need the global keyword at the module level, only in a scope that intends to change it
[22:53:26] <no_gravity> sco1: I mean in a function of the module.
[22:53:34] *** Joins: pnoud (~pnoud@user/pnoud)
[22:53:40] <sco1> No
[22:54:09] *** Joins: sazawal (~sazawal@182.69.77.127)
[22:54:25] <no_gravity> sco1: Not sure what you mean. I think we have a misunderstanding.
[22:54:33] <sco1> The answer to your question is no
[22:54:44] <swn> Is there something special about using a property called "name" on a class? I'm trying to use a '''@property def name(self):''' to return self._name.capitalize() and it does not come back capitalized and I am confused. I don't set self.name anywhere but I get it back in lowercase.
[22:55:20] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[22:56:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:56:07] <grawity> works for me https://paste.rs/jaE
[22:56:14] <sco1> No, nothing special, can you show an example?
[22:56:35] <no_gravity> sco1: The answer is definitely not an unconditional no.
[22:56:55] *** Quits: Guddu (~Guddu@106.214.41.45) (Quit: Leaving)
[22:57:15] <dav1d> but there isn't, except "don't use globals"
[22:57:28] <sco1> Unless you're going to consider doing something wild and hacky that takes more effort than typing "global" then the answer is definitely an unconditional no.
[22:57:44] *** Joins: KevinX (~KevinX@94.140.11.16)
[22:57:45] *** Joins: entuland (~entuland@user/entuland)
[22:58:07] <no_gravity> For example if the variable name is long enough, then this is shorter: globals()['variablenamegoeshere'] = 123
[22:58:20] <no_gravity> The question is if that is the shortest solution.
[22:58:30] *** Quits: noctavian_ (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 244 seconds)
[22:58:53] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[22:58:57] <grawity> oh yes, this is the "shorter means more maintainable, even if it's a mess of punctuation that only a perl programmer understands" thing?
[22:59:07] <sco1> g = globals, then you can do g()['variable_name'] = 123
[22:59:10] <sco1> I stand corrected I guess
[22:59:37] <no_gravity> sco1: Well, we would have to take the "g = globals" into account when comparing the length, so that is longer.
[22:59:55] <sco1> Ok
[22:59:56] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[23:00:35] *** Quits: xcombelle (~xavie@abayonne-654-1-273-90.w92-146.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[23:03:10] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[23:03:26] *** Joins: inom (~inom@176.59.102.225)
[23:04:09] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:04:56] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[23:07:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:07:29] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:07:58] *** Joins: inom__ (~inom@176.59.102.225)
[23:08:55] *** Quits: swn (~swn@c-73-253-42-20.hsd1.ct.comcast.net) (Quit: Client closed)
[23:10:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[23:10:44] *** Quits: inom (~inom@176.59.102.225) (Ping timeout: 252 seconds)
[23:10:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:10:59] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[23:12:35] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:12:45] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[23:12:46] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[23:15:13] *** Joins: swn (~sweeney@c-73-253-42-20.hsd1.ct.comcast.net)
[23:16:28] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[23:17:08] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 255 seconds)
[23:17:18] *** Quits: sazawal (~sazawal@182.69.77.127) (Quit: Leaving)
[23:17:59] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Quit: ZNC - https://znc.in)
[23:18:37] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[23:18:43] *** Joins: twobitsprite (~twobitspr@66.115.175.41)
[23:18:54] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[23:19:31] *** Quits: rendar (~rendar@user/rendar) ()
[23:19:34] *** Joins: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com)
[23:21:38] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 272 seconds)
[23:21:39] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:22:30] *** Joins: audiocat (~audio@2603-8081-1800-00ad-e450-fa91-465b-f753.res6.spectrum.com)
[23:26:45] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[23:27:25] *** Joins: nac (~nac@user/nac)
[23:28:21] *** Joins: Pickchea (~private@user/pickchea)
[23:28:32] *** Quits: boxelephant (~boxelepha@cpe-174-96-211-68.columbus.res.rr.com) (Ping timeout: 265 seconds)
[23:28:53] *** __jmcantrell__ is now known as jmcantrell
[23:28:55] *** Joins: akk (~akk@174-28-112-132.albq.qwest.net)
[23:29:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[23:33:29] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[23:33:33] *** Quits: et (~et@user/et) (Ping timeout: 258 seconds)
[23:35:10] *** Joins: upsala1 (~zcb@94.198.43.60)
[23:36:45] *** Joins: et (~et@user/et)
[23:38:09] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 258 seconds)
[23:39:13] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[23:39:37] *** Joins: parzival (~parzival@user/parzival)
[23:41:06] *** Quits: mexen (uid495612@user/mexen) ()
[23:41:26] *** Quits: Sophon96 (~brandon@user/sophon96) (Ping timeout: 255 seconds)
[23:42:05] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:43:17] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[23:43:31] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 265 seconds)
[23:43:39] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[23:44:06] *** Quits: parzival (~parzival@user/parzival) (Ping timeout: 252 seconds)
[23:44:17] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:45:16] *** Joins: pnoud (~pnoud@user/pnoud)
[23:46:07] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[23:46:40] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[23:47:13] *** Joins: clawh (~clawh@78.10.204.200)
[23:47:21] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Read error: Connection reset by peer)
[23:47:47] *** Joins: Deep6 (~Deep6@fixed-187-190-193-184.totalplay.net)
[23:50:07] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[23:50:17] *** Quits: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[23:51:04] *** Joins: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at)
[23:52:07] <raek> is readthedocs python specific or just popular in the python community?
[23:52:43] <meejah> raek: more like the latter
[23:52:44] <Wulf> raek: the latter
[23:52:47] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[23:52:58] <raek> okay!
[23:54:22] *** Joins: Sophon96 (~brandon@user/sophon96)
[23:54:59] <Wulf> raek: one could argue that sphinx is usually (always?) used and sphinx is written in python.
[23:55:24] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[23:55:50] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 255 seconds)
[23:56:32] <nedbat> raek: readthedocs can do rst or markdown these days
[23:56:35] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[23:58:39] *** autopsy is now known as coroner
[23:58:44] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
