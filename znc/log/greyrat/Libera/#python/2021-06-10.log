[00:01:02] *** Joins: adder` (~adder@user/adder)
[00:03:47] *** Quits: frostschutz (~frostschu@2a01:c23:7c67:7e00:25:9d6a:f99d:5668) (Quit: Leaving)
[00:05:23] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[00:05:47] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[00:06:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:08:09] *** Quits: dkmueller (~dkmueller@dynamic-095-115-042-075.95.115.pool.telefonica.de) (Ping timeout: 268 seconds)
[00:08:14] *** Quits: cliluw (~cliluw@47.147.80.149) (Remote host closed the connection)
[00:08:36] *** Joins: cliluw (~cliluw@47.147.80.149)
[00:09:02] *** Joins: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4)
[00:10:07] <Gustavo6046> How can I experiment with new ideas or libraries, without having to worry too much about writing it down, or re-pasting stuff in the REPL, etc?
[00:10:46] *** Quits: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4) (Client Quit)
[00:12:15] *** Joins: Gleo_ (~Gleo_@2406:3003:2005:3a48:54b7:3a25:f879:532a)
[00:12:58] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Read error: Connection reset by peer)
[00:13:05] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[00:13:26] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[00:13:44] <InPhase> Gustavo6046: Small test files?
[00:14:04] * SnoopJ makes a lot of whatever_sandbox.py files
[00:14:29] <InPhase> Gustavo6046: Tiny files are almost free.  You'll burn more calories on snacks.
[00:14:50] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[00:14:57] <Gustavo6046> Well, yeah, so each file is a snippet of something I want to try out in the library?
[00:15:10] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Quit: Going offline, see ya! (www.adiirc.com))
[00:15:25] <Gustavo6046> By the quickstart I can see the smaller basic units coming together to form the bigger concepts. Is it really helpful to experiment with those basic units in their own sandbox files before moving on to the bigger concepts?
[00:15:31] <Gustavo6046> In this case litenn
[00:15:40] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:15:41] <SnoopJ> it's really helpful to do one thing at a time
[00:15:45] <InPhase> Gustavo6046: Think of it like reverse unit testing.  Pre-validate code in testcases, and store those testcases in case you need to go back and update things.
[00:16:13] *** Quits: jimpop (~jimpop@user/jimpop) (Remote host closed the connection)
[00:16:30] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 264 seconds)
[00:18:21] *** Joins: dicajo (~dicajo@072-186-122-186.res.spectrum.com)
[00:18:23] *** Joins: jimpop (~jimpop@user/jimpop)
[00:19:19] *** Joins: greentree (~greentree@pool-108-41-42-58.nycmny.fios.verizon.net)
[00:20:00] <Gustavo6046> Hmm.
[00:20:37] <greentree> what are some ways to implement a bidirectional map lookup
[00:20:43] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[00:20:49] <greentree> if i had say: {key: [val1, val2, valN]}
[00:21:21] <greentree> i looked at the bidict library but can't make that a "bidict" since list is unhashable, i guess i could do: for key, value in dct.items(): for v in value: new_dct[v] = key
[00:21:28] <bjs> greentree: with another dict, {val1: key, val2: key, val3: key}
[00:23:00] <bjs> greentree: you can always wrap this up in a class which always updates both dicts at the same time
[00:23:08] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Ping timeout: 264 seconds)
[00:23:32] <Gustavo6046> bjs: I'm sure there is already something that does that. If not in collections, ten
[00:23:37] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[00:23:43] <Gustavo6046> s/ten/then in some package somewhere in the PyPI
[00:23:48] <nedbat> greentree: do you want to use the list as the key, or the individual elements of the list?
[00:24:07] <beeza> where in your projects do you keep swagger/protobuff files?
[00:24:42] *** Joins: goldfish (~goldfish@user/goldfish)
[00:24:46] <SnoopJ> beeza, tell us more about what the files are being used for
[00:25:11] *** Joins: SebastianM (~seba@user/sebastianm)
[00:25:20] <beeza> I would like to generate python types from them
[00:25:27] <beeza> for server
[00:26:21] <grym> supakeen: oh no bpa.st guru meditation ?
[00:26:30] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[00:26:46] <supakeen> grym, https://twitter.com/supakeen/status/1402697296907800581
[00:26:49] <SnoopJ> grym, issa whole thing
[00:27:12] <grym> SnoopJ: i thought fastly was happy again
[00:27:20] <grym> supakeen: oh :(
[00:27:38] <supakeen> DigitalOcean has had downtime(s) for the past like 8-10 hours.
[00:27:53] <supakeen> With no ETA.
[00:27:58] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (Quit: leaving)
[00:28:09] <SnoopJ> beeza, hmm, I've done that from an OpenAPI specification before, I think I stored openpai.yaml in e.g. api/v1/
[00:28:14] <grym> supakeen: yuck :(
[00:28:19] <puadxtub> ugh, another big us ico down
[00:28:27] <puadxtub> something is going on
[00:28:42] <grym> initial coin offering
[00:29:55] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[00:30:11] <Gustavo6046> so it's not public?
[00:30:13] <puadxtub> grym: in what sense? supporting digital coin payments or releasing a new digital coin?
[00:30:15] <Gustavo6046> wrt ico
[00:30:23] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[00:30:26] <Gustavo6046> ico, ipo, I got it
[00:30:49] <puadxtub> sorry, I contracted ico as internet company
[00:31:12] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[00:31:28] <Gustavo6046> imagine corporate private services being of quality
[00:31:42] <AhmedAmerican> https://bpa.st/+python is down ?
[00:31:55] <grym> AhmedAmerican: yup
[00:32:06] <grym> (i just asked too)
[00:32:11] <AhmedAmerican> group1 = [x for x in new if x not in old]
[00:32:11] <AhmedAmerican> group2 = list(set(new) & set(old))
[00:32:11] <AhmedAmerican> goal = pd.DataFrame([group1, group2]).T
[00:32:11] <AhmedAmerican> d = goal.sort_values(by=list(goal.columns))
[00:32:11] <AhmedAmerican> print(d)
[00:32:18] <grym> AhmedAmerican: ... wrong alternative
[00:32:20] <grym> :P
[00:32:28] <bjs> i'm sure we'll make do this one time
[00:32:32] <AhmedAmerican> group1 = [x for x in new if x not in old]
[00:32:32] <AhmedAmerican> group2 = list(set(new) & set(old))
[00:32:32] <AhmedAmerican> goal = pd.DataFrame([group1, group2]).T
[00:32:32] <AhmedAmerican> d = goal.sort_values(by=list(goal.columns))
[00:32:32] <bjs> :P
[00:32:32] <AhmedAmerican> print(d)
[00:32:36] <AhmedAmerican> ops
[00:32:37] <AhmedAmerican> :S
[00:32:40] <bjs> AhmedAmerican: ...
[00:32:47] <bjs> i said one
[00:32:51] <grym> so close, and yet, so far
[00:33:32] <AhmedAmerican> :D:D SHIFT + ENTER issue with irccloud :)
[00:33:39] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[00:33:56] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[00:34:22] *** Joins: Auron (~Auron956@user/auron)
[00:34:26] <greentree> i want to use the individual elements of the list as individual keys nedbat
[00:34:31] <AhmedAmerican> How to sort the second column as well ? https://www.irccloud.com/pastebin/tY8B4eHH/
[00:34:58] <nedbat> greentree: then use bjs' suggestion: with another dict, {val1: key, val2: key, val3: key}
[00:35:33] *** Joins: WesTomer (~WesTomer@165.225.220.185)
[00:35:36] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[00:36:06] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Quit: Konversation terminated!)
[00:36:31] *** Joins: nathanjell (~Nathan@d162-157-36-152.abhsia.telus.net)
[00:37:18] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[00:37:32] <WesTomer> Does anyone have experience with Open AI? I'd like to link openAI gym with a board game I created using Tkinter.
[00:38:12] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Quit: Leaving)
[00:38:18] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 244 seconds)
[00:38:22] *** Joins: srhm (~ascii@user/srhm)
[00:39:02] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[00:39:06] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[00:39:19] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[00:39:20] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:39:57] *** Joins: Naan (~Naan@user/naan)
[00:40:22] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[00:40:24] *** WesTomer is now known as GreenLight
[00:40:36] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[00:40:41] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[00:41:03] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[00:41:57] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[00:42:11] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[00:42:19] <SnoopJ> GreenLight, let's assume the answer is yes, ask the next question :)
[00:42:35] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[00:43:12] *** Joins: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4)
[00:44:03] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[00:44:09] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Quit: WeeChat 2.8)
[00:44:27] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[00:44:32] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[00:44:38] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[00:44:57] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 252 seconds)
[00:45:06] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[00:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:40] *** Joins: Naan (~Naan@user/naan)
[00:45:50] <GreenLight> SnoopJ is there a way to paste code in here? I see the note at the top "Don't paste, use https://bpa.st/+python" and I clicked on the link but it took me to "Error 503 Backend fetch failed"
[00:45:51] *** Joins: seachdamh (~seachdamh@user/seachdamh)
[00:46:25] <waynew> bpaste... but 503 is interesting
[00:46:48] <grym> there are other mildly reputable but inferior pastebins
[00:46:57] <waynew> (pastebin is kinda OK, and probably a decent workaround if bpaste is currently died)
[00:46:59] <grym> dpaste.org, e.g.
[00:47:04] <SnoopJ> GreenLight, yea, unfortunately bpaste is having a day. I like https://hastebin.com/ personally
[00:47:04] * waynew blames more CDNs
[00:47:06] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[00:47:12] <grym> oh yeah hastebin's ok
[00:47:24] <grym> i like 0x0.st but it has ix.io's problem(s)
[00:47:26] *** Joins: Haxxa (~Haxxa@103-21-0-35.ip4.superloop.com)
[00:47:30] <waynew> there's gist... I mean, just plenty of options :P
[00:47:40] *** Joins: Naan (~Naan@user/naan)
[00:47:44] <grym> gist, the ol' auto-doxx
[00:48:02] <AhmedAmerican> how to sort pandas columns from row index?
[00:48:05] <SnoopJ> anyway, some other site for the interim :)
[00:48:22] <GreenLight> Thanks! https://hastebin.com/mujenapula.go
[00:48:33] <AhmedAmerican> if my row like that `NCT04639219` and i would like to sort by `[3:]`
[00:50:09] <Gustavo6046> Has anything ever come of this? https://garethrees.org/2002/02/26/type-inference/
[00:50:34] <nedbat> Gustavo6046: sounds like mypy
[00:50:57] <SnoopJ> or pytype
[00:51:21] <GreenLight> Thanks SnoopJ  should I modify that code https://hastebin.com/mujenapula.go if I'm going to plug in a completely new "environment"? I mean, a new program that I've written that shares options "A, B, C" and also gives the observation "D, E, F" and reward function "-0.1" for instance.
[00:51:51] *** ChanServ sets mode: +o supakeen
[00:52:08] *** supakeen changes topic to 'Anything Python is on-topic. | Don't paste, use https://hastebin.com/ | Welcome to Libera, our new home. Questions about this channel? https://www.pound-python.org | CoC: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops: #python-ops'
[00:52:14] *** ChanServ sets mode: -o supakeen
[00:52:19] <SnoopJ> GreenLight, I would perhaps wrap L3-L12 in a function that takes the environment as a parameter. run_episode(env) maybe?
[00:52:23] <supakeen> I'll set it to a working pastebin until digitalocean fixes their shit.
[00:53:40] <AhmedAmerican> digitalocean CDN issue
[00:54:17] <supakeen> Their last update was 3+ hours ago: https://status.digitalocean.com/incidents/05f9vnj7jyxw
[00:54:26] <supakeen> Anyways, I'm already grrr enough :)
[00:54:36] <GreenLight> Thanks SnoopJ, I'll try to figure out how. That sounds good.
[00:55:51] <habnabit> does hastebin still require js?
[00:56:02] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[00:57:19] <SnoopJ> it does
[00:57:26] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[00:57:29] <SnoopJ> maybe I need to alter my second preference to dpaste >_>
[00:57:44] <grym> SnoopJ: that one gives you a delete button for free :)
[00:57:48] <grym>  >CLICKETY<
[00:58:17] <grym> "paste? what paste?"
[00:58:43] *** Joins: jinie_ (~jimmy@188.114.173.37)
[00:58:46] *** vinleod is now known as vdamewood
[00:59:03] *** jinie_ is now known as jinie
[00:59:06] <supakeen> I made an issue about that a long time ago but it's on purpose :)
[00:59:44] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 264 seconds)
[01:00:39] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[01:00:40] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[01:01:43] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[01:03:38] *** Joins: dyslexic1t (~dyslexica@ymir.whatbox.ca)
[01:03:52] <Gustavo6046> Hmm, litenn complains about OpenCL.
[01:04:19] *** Quits: dyslexic1t (~dyslexica@ymir.whatbox.ca) (Client Quit)
[01:04:44] *** niko is now known as o
[01:05:03] <Gustavo6046> My GPUs are not the newest (iGPU Intel HD Graphics 3000, aka Sandy Bridge, and dGPU NVidia GF540, aka Fermi class)
[01:05:17] <Gustavo6046> Maybe I just have to build it from llvm-project or...something?...
[01:05:53] <Gustavo6046> Oh god https://i.imgur.com/VtkH6Mu.png
[01:06:07] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 268 seconds)
[01:06:21] <grym> Gustavo6046: you'll want to check your CUDA compute levels https://developer.nvidia.com/cuda-gpus#compute
[01:06:26] <grym> Gustavo6046: if you don't have any, RIP
[01:06:32] <Gustavo6046> I have like
[01:06:35] <Gustavo6046> 3 or something
[01:06:39] <grym> yeah. RIP.
[01:06:47] <Gustavo6046> GeForce GT 540M 2.1
[01:06:50] <grym> no modern DL framework supports that now
[01:06:51] <Gustavo6046> 2.1 is the compute level
[01:07:01] <Gustavo6046> :/
[01:07:06] <Gustavo6046> it's just number crunching
[01:07:31] <grym> and we are but peons
[01:07:43] <grym> supplicants at the nvidia gae
[01:07:45] <grym> gate*
[01:07:52] <grym> and they said no, so, here we are
[01:08:02] <Gustavo6046> yeah.
[01:08:08] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Remote host closed the connection)
[01:08:11] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[01:08:13] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[01:08:37] <Gustavo6046> if machine learning is the future then I guess the third world is screwed
[01:08:54] *** Joins: greedom (~greedom@i577BC6B4.versanet.de)
[01:09:09] <SnoopJ> Gustavo6046, 2.1 was released in 2015, it's not ancient or anything
[01:09:23] <Gustavo6046> what? this laptop is from 2012
[01:09:29] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[01:09:32] <SnoopJ> So?
[01:09:36] * Gustavo6046 mentally notes down. "next big project - make CPUs reign supreme again"
[01:09:47] <Gustavo6046> SnoopJ: oh, yeah, the nvidia driver would be newer. good point
[01:10:03] *** Joins: Naan (~Naan@user/naan)
[01:10:04] <grym> Gustavo6046: CPU inference is booming, fwiw
[01:10:13] <SnoopJ> it has no choice!
[01:10:21] <Gustavo6046> type inference? lol
[01:10:30] <Gustavo6046> yeah, only a madman would port mypy to the GPU
[01:10:33] <Gustavo6046> unless...
[01:10:35] <grym> Gustavo6046: no, "here's a photo, you tell me what's in it"
[01:10:43] <grym> cram numbers through blob of weights
[01:10:46] <grym> get prediction
[01:10:56] <grym> _training_ those weights is and will forseeably be GPU
[01:11:14] <Gustavo6046> ahh okay
[01:11:21] *** Joins: Vonter (~Vonter@user/vonter)
[01:11:25] <SnoopJ> (this cramming is "inference")
[01:11:34] <Gustavo6046> i see
[01:11:35] <SnoopJ> given some input, infer a conclusion
[01:11:38] <Gustavo6046> so number crunching at its finest
[01:11:41] <Gustavo6046> :D
[01:11:44] <SnoopJ> possibly
[01:11:49] <grym> walk-the-tree-of-crunched-numbers
[01:11:59] <SnoopJ> some very good inference systems do less crunching than you might think
[01:12:08] <Gustavo6046> It's a pretty rough tree to walk on, and now my feet are bleeding.
[01:12:14] <SnoopJ> But neural networks get all the attention because people are easily impressed
[01:12:18] <grym> but also blurring the line between hardware bits is also a thing, especially with SoC things in smartphones
[01:12:18] <Gustavo6046> Ah, true
[01:12:38] <grym> my phone has ... 8? gpus
[01:12:43] <Gustavo6046> like Prolog? SnoopJ
[01:12:47] <Gustavo6046> oh wait nvm
[01:12:50] <SnoopJ> beg pardon?
[01:12:52] <Gustavo6046> grym: whoa, eight?
[01:13:01] <Gustavo6046> SnoopJ: nothing, different kind of inference
[01:13:07] *** Quits: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4) (Quit: WeeChat 3.1)
[01:13:08] <grym> Gustavo6046: uh, 4
[01:13:08] <grym> sorry
[01:13:10] <SnoopJ> Gustavo6046, Prolog is a programming language
[01:13:25] <Gustavo6046> yeah, about logical inference or something
[01:13:32] *** Joins: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4)
[01:13:32] *** Quits: mrgz (~mrgz@187.38.5.6) (Ping timeout: 264 seconds)
[01:13:48] <Gustavo6046> grym: still a lot for something that goes in your hand and most people would probably just use to hardware decode youtube videos to watch some random stuff.
[01:13:54] *** Quits: Naan (~Naan@user/naan) (Remote host closed the connection)
[01:14:16] <grym> Gustavo6046: like i said, SoC makes this all a bit fuzzy
[01:14:29] *** Joins: Naan (~Naan@user/naan)
[01:15:21] *** Joins: abyss (~robbins@user/robbins)
[01:15:35] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[01:16:38] <Gustavo6046> yeah.
[01:18:38] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Ping timeout: 250 seconds)
[01:18:42] <SnoopJ> "hey, you got your math co-processor in my central processing unit!"
[01:18:43] *** Joins: kosh_ (~kosh@user/kosh)
[01:19:03] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:19:08] *** Quits: KevinX (~KevinX@73.156.246.178) (Ping timeout: 252 seconds)
[01:19:23] <grym> "and there's one doing just wake-word detection? "
[01:20:32] *** Quits: magla (~gelignite@55d44a14.access.ecotel.net) (Quit: Stay safe!)
[01:20:59] *** Joins: Thanatos (~Thanatos@197.210.45.251)
[01:21:29] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:21:41] <Gustavo6046> "this other one is doing binary space partitioning and running hardware Doom or something"
[01:21:42] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[01:21:47] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[01:22:18] <SnoopJ> I have a relevant link to share for that last bit, but it belongs in #python-offtopic
[01:22:21] <Gustavo6046> no but a router which can act as a Doom netgame packet switcher from within the hardware itself could be fun
[01:22:27] <Gustavo6046> oh, okay
[01:22:39] <grym> https://machinelearning.apple.com/research/hey-siri
[01:23:15] <grym> on-device inference
[01:24:07] <grym> i _think_ it is still the case in most cases that you are then handed off to cloud inference, because it is legitimately faster to send the audio to a compute cluster somewhere than it is to try to do speech recognition on your phone
[01:25:14] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[01:25:59] *** Joins: MikZyth (~MikZyth@188.65.243.35)
[01:27:42] *** Quits: onmeac (~onmeac@2001:984:6b5b:1:c9c1:59fb:32b6:a7ef) (Ping timeout: 244 seconds)
[01:27:53] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[01:28:16] *** Joins: mrgz (~mrgz@187.38.5.6)
[01:31:10] *** digilink_ is now known as digilink
[01:32:30] *** Quits: greedom (~greedom@i577BC6B4.versanet.de) (Remote host closed the connection)
[01:32:37] *** Joins: RougeR (~RougeR@user/rouger)
[01:33:14] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[01:33:42] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[01:34:03] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[01:34:09] *** Joins: MoosieRachel (~Moosadee@136.32.155.193)
[01:34:28] *** Joins: hanaan (~naan@user/naan)
[01:34:31] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[01:35:02] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[01:35:08] *** Joins: audiocat (~audio@2603-8081-1800-00af-0668-f9f9-85b9-cd20.res6.spectrum.com)
[01:35:13] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[01:35:17] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[01:35:38] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[01:35:41] *** Joins: ExeciN (~ExeciN@user/nicexe)
[01:36:06] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[01:36:15] *** hanaan is now known as Naan
[01:36:55] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 272 seconds)
[01:37:03] *** Parts: py88 (~py88@50.21.149.170) (WeeChat 3.1)
[01:38:37] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[01:40:35] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[01:40:44] *** Quits: Gleo_ (~Gleo_@2406:3003:2005:3a48:54b7:3a25:f879:532a) (Quit: Client closed)
[01:41:01] *** Joins: xsperry (~as@user/xsperry)
[01:41:54] *** Joins: jazzy (~jaziz@2600:380:4547:d128:a1e2:2a56:7617:ad7e)
[01:42:01] *** Quits: kosh_ (~kosh@user/kosh) (Read error: Connection reset by peer)
[01:42:22] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[01:43:51] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[01:45:30] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[01:46:00] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[01:46:20] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:46:46] <AhmedAmerican> excuse me if that might be an off-topic question, is there a friendly tool to read HTTP log file requests ?
[01:47:30] <graingert> AhmedAmerican: like a HAR file?
[01:47:43] *** Joins: jazzy2 (~jaziz@2600:380:4547:d128:9497:ff4e:a49b:d10b)
[01:47:48] <graingert> https://toolbox.googleapps.com/apps/har_analyzer/
[01:48:24] *** Parts: fhemberger (~fhemberge@cgn-89-1-214-85.nc.de) ()
[01:48:49] *** Quits: jazzy (~jaziz@2600:380:4547:d128:a1e2:2a56:7617:ad7e) (Ping timeout: 245 seconds)
[01:50:42] *** Quits: Cata (~Cata@user/cata) (Quit: Leaving)
[01:51:16] *** Quits: GeniusMusing (~geniusmus@199.91.225.59) (Read error: Connection reset by peer)
[01:53:30] *** BytesAndCoffee|a is now known as BytesAndCoffee
[01:54:13] *** Quits: GreenLight (~WesTomer@165.225.220.185) (Quit: Client closed)
[01:56:00] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:56:16] <AhmedAmerican> @graingert just tried wireshark . thank you. lloks like har analyzer is simple enough to done the job
[01:56:34] <AhmedAmerican> looks*
[01:56:36] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[01:58:09] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[01:58:11] *** ChanServ sets mode: +o supakeen
[01:58:14] *** supakeen changes topic to 'Anything Python is on-topic. | Don't paste, use https://bpa.st/+python | Welcome to Libera, our new home. Questions about this channel? https://www.pound-python.org | CoC: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops: #python-ops'
[01:58:17] *** Joins: srilyk (~wayne@user/waynew)
[01:58:53] *** ChanServ sets mode: -o supakeen
[01:59:00] <supakeen> Things work again, apologies, etc.
[01:59:29] <grym> supakeen: https://www.youtube.com/watch?v=NmPhaG1ud38
[02:02:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:04:09] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[02:04:25] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:08:59] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[02:10:51] *** Quits: cellofellow (~user@166.70.50.58) (Read error: Connection reset by peer)
[02:11:35] *** Quits: dicajo (~dicajo@072-186-122-186.res.spectrum.com) (Quit: WeeChat 2.3)
[02:13:24] *** Quits: audiocat (~audio@2603-8081-1800-00af-0668-f9f9-85b9-cd20.res6.spectrum.com) (Ping timeout: 245 seconds)
[02:13:31] *** Joins: ExeciN (~ExeciN@user/nicexe)
[02:13:34] *** Joins: cellofellow (~user@166.70.50.58)
[02:13:57] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[02:15:04] *** Joins: drn (~drn@94.240.197.246)
[02:15:33] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[02:16:59] *** Quits: Crys (~Tiran@python/psf/tiran) (Ping timeout: 244 seconds)
[02:17:46] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[02:18:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[02:20:44] *** jazzy2 is now known as jazzy
[02:24:26] *** Joins: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net)
[02:24:32] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[02:24:51] *** Joins: rediah (~hrizvi@ip70-176-96-6.ph.ph.cox.net)
[02:25:10] <Samian> in VSCode, in launch.json I have "args": ["--arch-mlp-bot='1414-1750-1750-1750-1750-1750-1750-1750-1750-94'" ]
[02:25:23] <Samian> but parse args throws an exception
[02:25:28] <Samian> hmm, I'll make a mini program to debug this
[02:26:22] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[02:26:24] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[02:28:28] *** Joins: xkuru (~xkuru@user/xkuru)
[02:28:52] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 244 seconds)
[02:29:02] *** Joins: transhumanist (~hiken@2601:196:8800:35f0:e4d5:97c0:26b2:bbb8)
[02:29:14] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[02:29:25] <The-Compiler> Samian: why the single quotes?
[02:30:05] *** Quits: Figueiredo (~leonardo@2804:14c:8586:9233:8eda:ed94:c65a:581d) (Quit: Leaving.)
[02:30:09] <transhumanist> Hi anyone know any python gui modules that exist to parse cvs files to extract a few ouit of hundreds of "columns"
[02:30:25] *** Quits: jinsun (~quassel@182.77.87.72) (Ping timeout: 244 seconds)
[02:30:50] <transhumanist> I have hundreds of them to do
[02:30:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[02:31:40] <srilyk> csv files?
[02:31:52] <srilyk> try the csv module
[02:31:53] *** Quits: rediah (~hrizvi@ip70-176-96-6.ph.ph.cox.net) (Quit: Using Circe, the loveliest of all IRC clients)
[02:32:09] <srilyk> it's not *gui* but...
[02:32:14] <emerent> why gui?
[02:32:29] *** Quits: mrgz (~mrgz@187.38.5.6) (Ping timeout: 244 seconds)
[02:32:37] *** Quits: srilyk (~wayne@user/waynew) (Quit: WeeChat 2.9)
[02:32:44] *** Quits: MoosieRachel (~Moosadee@136.32.155.193) (Ping timeout: 264 seconds)
[02:33:14] <grym> transhumanist: https://github.com/simonw/csvs-to-sqlite  and https://github.com/simonw/datasette
[02:33:54] <nathanjell> transhumanist: I would expect that you as the developer need to work with the CSV data. You then, as developer, can choose to do what you want with the data - which might be presenting the data using your GUI framework of choice
[02:34:35] *** Joins: abraham (~abraham@173.239.198.148)
[02:35:06] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[02:35:53] <transhumanist> ok I just figured there might be something made already to do such things (preferably written in python. I will look at those projects, thanks
[02:35:58] *** Joins: adinfinitum (~user@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[02:36:13] *** Joins: KevinX (~KevinX@73.156.245.27)
[02:37:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:37:23] *** Joins: thebearbox (~thebrain1@2.28.225.196)
[02:38:26] <nomic> \.
[02:38:40] *** Joins: Fiji (~Fiji@user/fiji)
[02:38:53] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[02:40:19] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[02:41:05] *** Quits: cedric (~cedric@2a01:cb11:867:c200:88f1:2015:24fb:ba99) (Quit: Konversation terminated!)
[02:42:29] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[02:43:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[02:43:46] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[02:44:07] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:44:10] *** Quits: greentree (~greentree@pool-108-41-42-58.nycmny.fios.verizon.net) (Quit: greentree)
[02:44:30] *** Joins: heco (~redrum@user/redrum88)
[02:47:35] *** Joins: death916 (~death916@user/death916)
[02:48:19] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:48:25] <InPhase> transhumanist: What you want is called pandas
[02:48:30] *** Quits: adinfinitum (~user@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Ping timeout: 244 seconds)
[02:49:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[02:49:08] <InPhase> transhumanist: pandas is the go-to choice for data science python programs involving tabular data.
[02:49:10] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[02:49:14] <grym> pandas has a gui front-end?
[02:49:21] <grym> i mean. i guess a notebook counts ..
[02:49:27] <InPhase> Oh, gui?
[02:49:27] <SnoopJ> pandas itself is a not a GUI, but it's useful in a notebook, yea
[02:49:41] <InPhase> Why would we do this in a gui?  :)
[02:49:44] <grym> ¯\_(ツ)_/¯
[02:50:01] <SnoopJ> InPhase, roll 1d100 against the User Motivation table
[02:50:25] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Quit: Konversation terminated!)
[02:50:26] <InPhase> transhumanist: Well there's libreoffice's calc!  And then you can read the output back in with pandas...
[02:50:50] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[02:51:01] <InPhase> transhumanist: JupyterLab notebooks also give you an interactive interface people like to combine with examining tabular data with pandas.  The code though is still written in Python form.
[02:51:03] <SnoopJ> good point, a spreadsheet program like Calc (or Excel) can definitely do what you described
[02:52:24] <grym> what's that spreadsheet TUI ...
[02:52:31] <grym> visidata!
[02:52:39] <grym> https://www.visidata.org/
[02:52:52] <grym> visidata is absolutely wild
[02:53:10] <grym> transhumanist: ^
[02:53:42] *** Quits: thebearbox (~thebrain1@2.28.225.196) (Ping timeout: 264 seconds)
[02:54:18] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:58:01] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:58:11] *** Quits: nathanjell (~Nathan@d162-157-36-152.abhsia.telus.net) (Quit: Leaving)
[02:59:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:00:33] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[03:00:54] *** Joins: Fluxx (~Fluxx@user/fluxx)
[03:01:25] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[03:01:40] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Quit: Konversation terminated!)
[03:01:53] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:04:28] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[03:05:59] *** Joins: Vonter (~Vonter@user/vonter)
[03:07:24] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[03:09:18] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[03:09:25] *** Joins: salpynx (~salpynx@121.73.84.248)
[03:10:08] *** Joins: jinsun (~quassel@182.77.87.72)
[03:12:13] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[03:12:30] *** Joins: skyz (~skyz@ool-43538427.dyn.optonline.net)
[03:12:55] *** Joins: srhm (~ascii@user/srhm)
[03:12:55] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-19ba-31df-4e03-7c64.res6.spectrum.com)
[03:13:00] <evidlo> join #avr:libera.chat
[03:13:01] <evidlo> woops
[03:13:23] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:13:38] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[03:13:59] <humanBird> i have a list, [0,1,2,3,4,5]  and a parameter, x.  I want to get the element of the list where (x-element of the list) is closest to 0.  what's the pythonic way?
[03:14:17] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[03:14:42] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[03:15:08] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Client Quit)
[03:15:21] <habnabit> humanBird, is the list sorted?
[03:15:23] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[03:15:32] <humanBird> no
[03:15:33] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[03:15:50] <humanBird> i'm thinking about subtracting the element from the list.. but then i have to find the element closest to 0
[03:16:05] <habnabit> humanBird, then it's probably easiest to use min
[03:16:18] <Samian> I'm calling a python somescript.py using subprocess.run. Is there a way to see the control flow exited somescript.py using sys.exit() ?
[03:16:25] <habnabit> humanBird, min(yourlist, key=lambda i: abs(i - x))
[03:16:32] *** Joins: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553)
[03:16:35] *** Quits: skyz (~skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[03:16:37] <graingert> Samian: look at the returncode
[03:16:37] <Samian> to see *if the control flow
[03:16:41] <Samian> graingert,  I did
[03:16:45] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 252 seconds)
[03:16:52] <humanBird> hrm. large negative numbers vs small postiive numbers might make that strategy not useful
[03:16:52] <Samian> I get 1 for returncode
[03:17:00] <SnoopJ> habnabit, shouldn't that have an enumerate() in it for the index?
[03:17:11] <habnabit> SnoopJ, why would it need the index?
[03:17:20] <SnoopJ> habnabit, oh nevermind, I misread
[03:17:38] <SnoopJ> (I thought they asked for the index of the minimal val)
[03:18:08] <humanBird> oh. abs will fix that
[03:18:13] *** Quits: greedom (~greedom@2001:16b8:2e33:5500:6438:6337:b246:6553) (Remote host closed the connection)
[03:18:29] *** BytesAndCoffee is now known as rks
[03:18:29] <habnabit> humanBird, yes, that's why i said abs
[03:18:38] *** rks is now known as BytesAndCoffee
[03:18:49] *** JTL1 is now known as JTL
[03:19:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[03:19:29] <graingert> Samian: Right that means it exited with sys.exit(1) or similar
[03:20:06] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 264 seconds)
[03:21:03] *** Joins: audiocat (~audio@2603-8081-1800-00af-765d-cf77-c161-8f26.res6.spectrum.com)
[03:21:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[03:21:18] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 264 seconds)
[03:23:39] <adder`> habnabit, your color changed :(
[03:23:57] <habnabit> adder`, again?
[03:24:09] <adder`> you were purple with an underscore, now you're blue
[03:24:53] *** Quits: _0x5fc3 (~0x5fc3@static.203.75.21.65.clients.your-server.de) (Changing host)
[03:24:53] *** Joins: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152)
[03:25:36] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[03:25:47] <graingert> habnabit: this time it's an actual name change
[03:25:53] <graingert> But you're pink to me
[03:26:27] *** Joins: ssbr (~ssbr@2620:15c:10f:203:2e91:f07a:72be:31fc)
[03:30:23] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:30:50] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:30:54] *** Quits: ominionx (~ominionx@38.135.235.14) (Quit: Leaving)
[03:34:35] *** Joins: wyclif (~wyclif@user/wyclif)
[03:36:12] <Tashtari> Hey, this channel's user count finally passed that of the channel on leenode
[03:36:40] <nedbat> Tashtari: i noticed it did a few nights ago also.  this time of day is when it might happen.
[03:36:58] <Tashtari> Fair enough, I haven't been paying very close attention
[03:37:35] *** Quits: justm3 (~Username@86-91-250-105.opennet.kpn.net) (Ping timeout: 244 seconds)
[03:38:15] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:39:58] <nedbat> Tashtari: i'm glad to see it keep happening
[03:40:50] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[03:41:49] <Tashtari> Me too - though people do keep showing up there looking for python help, so probably we should keep redirecting until that at least tapers off some
[03:41:51] *** Quits: goldfish (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[03:41:57] *** Joins: goldfish_ (~goldfish@user/goldfish)
[03:42:20] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 264 seconds)
[03:42:59] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 245 seconds)
[03:43:39] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:44:04] *** Joins: Wulf (~Wulf@user/wulf)
[03:44:18] *** Joins: ZedHedTed (~ZedHedTed@pool-98-118-47-241.bstnma.fios.verizon.net)
[03:47:02] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.1)
[03:48:45] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 244 seconds)
[03:51:09] *** Joins: mrgz (~mrgz@189.62.148.186)
[03:51:23] *** Quits: Akuli (~Akuli@82-203-167-236.bb.dnainternet.fi) (Quit: Leaving)
[03:52:10] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[03:53:37] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[03:54:34] *** Joins: ExeciN (~ExeciN@user/nicexe)
[03:55:18] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.1)
[03:55:19] *** Joins: skyz (~skyz@ool-43538427.dyn.optonline.net)
[03:55:56] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[03:56:51] *** Quits: goldfish_ (~goldfish@user/goldfish) (Remote host closed the connection)
[03:57:43] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[03:58:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[04:02:14] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Quit: Going offline, see ya! (www.adiirc.com))
[04:03:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[04:04:35] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.2-dev)
[04:04:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[04:05:16] *** Quits: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4) (Quit: WeeChat 3.1)
[04:06:15] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[04:07:09] *** Joins: r3m (~launch@user/r3m)
[04:10:30] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[04:10:44] *** Quits: skyz (~skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[04:11:57] *** Joins: ExeciN (~ExeciN@user/nicexe)
[04:12:25] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:16:44] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[04:20:30] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:23:52] *** Joins: bigRoo (~user@131.236.54.84)
[04:25:38] *** Quits: ZedHedTed (~ZedHedTed@pool-98-118-47-241.bstnma.fios.verizon.net) (Ping timeout: 244 seconds)
[04:25:53] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[04:26:23] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Quit: WeeChat 2.8)
[04:27:56] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[04:29:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[04:30:38] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:31:20] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[04:31:57] <grym> nickcolor.pl seems to have died for me
[04:31:59] <grym> y'all are grey
[04:32:23] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:32:33] <mefistofeles> grym: grey is so much fun, congrats!
[04:33:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:34:37] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:35:06] <grym> i require more excitement in my life
[04:36:19] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:36:51] <grym> ... oh, because it just wasn't symlinked properly
[04:36:53] <grym> good job irssi
[04:37:03] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[04:38:06] *** Joins: fbiagent (~fbiagent@23-233-10-241.cpe.pppoe.ca)
[04:38:09] <dale> SnoopJ: I think pyright does less than pyls, but it has the advantage of not randomly seizing up every 5--10 minutes.
[04:38:10] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Remote host closed the connection)
[04:38:18] <dale> So far, so good.
[04:38:36] <dale> Now I want to extract pylance from the VSCode plug-in and see what I've been missing.
[04:38:52] *** Joins: dme86 (~dan@user/dan86)
[04:38:54] *** Quits: fbiagent (~fbiagent@23-233-10-241.cpe.pppoe.ca) (Changing host)
[04:38:54] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[04:39:17] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Client Quit)
[04:39:35] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[04:40:03] <Gustavo6046> bpaste wasn't down, fastly PoPs were. they're back now
[04:40:23] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[04:40:23] <grym> Gustavo6046: and DO, it seems
[04:40:28] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[04:40:40] *** Quits: qlixed (~qlixed@2800:810:471:2f8::1b7) (Quit: That's all folks!!)
[04:43:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[04:45:47] *** Joins: vsantana (~vsantana@fttx-177136148145.usr.predialnet.com.br)
[04:46:12] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[04:46:12] *** Quits: vsantana (~vsantana@fttx-177136148145.usr.predialnet.com.br) (Quit: Leaving)
[04:47:48] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:59] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:48:05] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:51:22] *** Quits: dcaro (~dcaro@user/dcaro) (Quit: ZNC 1.8.2 - https://znc.in)
[04:51:34] *** Joins: dcaro (~dcaro@user/dcaro)
[04:52:24] *** Joins: ExeciN (~ExeciN@user/nicexe)
[04:52:28] <Gustavo6046> ah?
[04:54:31] <grym> Gustavo6046: https://twitter.com/supakeen/status/1402697296907800581
[04:54:39] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:54:59] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[04:55:23] <grym> (back now though)
[04:56:56] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.2-dev)
[04:57:02] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[04:57:09] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 244 seconds)
[04:57:45] *** Joins: ttys000 (~ttys000@user/ttys000)
[04:57:45] *** Quits: jphaynes66 (~TerraFirm@31.171.154.68) (Quit: Bye y'all.)
[04:58:58] *** Joins: r3m (~launch@user/r3m)
[05:00:09] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[05:01:05] <CrtxReavr> bpaste was having cloud provider issues.
[05:02:19] *** Quits: RougeR (~RougeR@user/rouger) (Ping timeout: 244 seconds)
[05:02:36] *** Joins: i0e (~is0ke3@user/is0ke3)
[05:03:59] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.2-dev)
[05:04:20] *** Joins: asthasr (~asthasr@162.210.29.120)
[05:04:49] <CrtxReavr> https://twitter.com/Tylerjoelb/status/1402646586379878409
[05:05:31] *** Joins: r3m (~launch@user/r3m)
[05:06:56] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:07:26] *** Joins: jinsun_ (~jinsun_@182.77.87.72)
[05:08:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[05:09:35] *** kevr_ is now known as kevr
[05:17:04] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[05:18:49] *** Quits: Sofi (~Sofi@92.246.1.121) (Quit: Sofi)
[05:19:04] *** Joins: Midnite (~human@user/midnightlantern)
[05:20:35] <dnode> can u do string interpolation after reading in a file?
[05:20:44] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 264 seconds)
[05:22:24] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[05:23:16] <dnode> or would i need to use replace() for this?
[05:24:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[05:25:57] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:26:25] *** Joins: salparadise (~salparadi@129.146.17.140)
[05:27:38] <salparadise> Anyone seen this problem with mypy https://mypy-play.net/?mypy=latest&python=3.6&gist=6ceb2b9251b38f7a5e465b0be2880dde ? seems that when there is an alias to a property, it thinks the type is Callable
[05:28:40] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[05:29:10] *** Joins: paravida (~paravida@user/paravida)
[05:29:31] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[05:30:14] *** Joins: pwnd_sfw4 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[05:30:20] <habnabit> salparadise, looks like a bug
[05:30:55] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:02] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[05:32:03] *** pwnd_sfw4 is now known as pwnd_sfw
[05:32:03] *** Quits: Allegretto (~allegrett@84-236-53-138.pool.digikabel.hu) (Ping timeout: 252 seconds)
[05:33:53] *** Joins: Fiji (~Fiji@user/fiji)
[05:34:35] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[05:34:46] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.2-dev)
[05:37:00] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[05:38:29] *** Joins: r3m (~launch@user/r3m)
[05:39:12] *** Quits: Thanatos (~Thanatos@197.210.45.251) (Ping timeout: 252 seconds)
[05:40:27] <salparadise> habnabit: ok thanks, that is what I thought.
[05:40:52] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:d0f5:61cd:a702:9e08) (Read error: Connection reset by peer)
[05:42:35] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[05:43:20] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[05:43:43] *** Joins: ali1234 (~al@user/ali1234)
[05:47:16] *** Joins: atrigent (~atrigent@130.44.130.244)
[05:48:51] *** Joins: tree (sid500598@user/psb)
[05:48:59] <atrigent> why am I getting this error from mypy? a/module.py: error: Duplicate module named ‘module’ (also at './src/b/module.py’)
[05:49:18] *** Joins: Crassus (~Crassus@user/crassus)
[05:49:20] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 244 seconds)
[05:51:07] <atrigent> sorry, more accurate would be: a/module.py: error: Duplicate module named ‘module’ (also at './b/module.py’)
[05:52:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[05:52:35] *** Joins: Allegretto (~allegrett@84-236-53-138.pool.digikabel.hu)
[05:52:40] <habnabit> atrigent, are a/ and b/ both packages?
[05:54:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[05:54:23] <atrigent> package is defined as something with an __init__.py at the root, right?
[05:54:32] *** Joins: Superstars111 (~jared@li227-215.members.linode.com)
[05:55:32] *** Quits: emerent (~quassel@p200300cd5703bb7fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[05:55:47] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[05:55:55] *** Joins: emerent (~quassel@p200300cd5703bbdeba27ebfffed28a59.dip0.t-ipconnect.de)
[05:56:08] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 264 seconds)
[05:57:03] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[05:57:09] <habnabit> atrigent, yes
[05:57:17] <atrigent> then, they are in the same package
[05:57:39] <habnabit> atrigent, er.. how? did you make src a package?
[05:58:21] <atrigent> let's say the error was pkg/a/module.py: error: Duplicate module named ‘module’ (also at '.pkg/b/module.py’)
[05:58:32] <atrigent> ./pkg
[05:58:55] <habnabit> atrigent, it sounds like those aren't in a package at all. how are you running mypy?
[05:59:35] <atrigent> mypy .
[05:59:47] <habnabit> atrigent, ok, and what's the cwd?
[06:00:02] *** Quits: jinsun_ (~jinsun_@182.77.87.72) (Read error: Connection reset by peer)
[06:00:02] *** Joins: vlm (~vlm@user/vlm)
[06:00:53] *** Quits: the4oo4- (~the4oo4@shenzhou.whatbox.ca) (Quit: bye)
[06:00:56] <atrigent> ./ i.e. the parent of pkg
[06:01:01] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[06:02:08] *** Joins: supbo (~kenan@li227-215.members.linode.com)
[06:02:11] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[06:03:18] *** Joins: wyclif (~wyclif@user/wyclif)
[06:03:44] *** Joins: foozle (~foozle@2001-b011-c001-1b0a-4a4d-3185-eca5-bc84.dynamic-ip6.hinet.net)
[06:04:40] *** Joins: cqi (~cqi@2408:8207:2527:5f40:9cc5:6c87:132e:880d)
[06:04:48] *** Quits: cqi (~cqi@2408:8207:2527:5f40:9cc5:6c87:132e:880d) (Remote host closed the connection)
[06:05:05] *** Joins: cqi (~cqi@2408:8207:2527:5f40:9cc5:6c87:132e:880d)
[06:05:07] *** Joins: Vision (~Vision@047-034-097-066.res.spectrum.com)
[06:05:37] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:08:21] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 252 seconds)
[06:09:00] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8c0a-00e4-95e5-c567.res6.spectrum.com) (Read error: Connection reset by peer)
[06:10:43] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:10:50] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[06:11:06] *** Quits: CatKiller (~CatKiller@51.37.221.22) (Ping timeout: 252 seconds)
[06:12:23] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[06:12:26] *** Quits: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29) (Remote host closed the connection)
[06:12:28] *** Joins: jinsun_ (~jinsun_@182.77.87.72)
[06:13:49] <atrigent> habnabit any idea?
[06:14:14] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[06:16:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:17:42] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[06:18:43] *** Joins: jtanner (sid194399@brockwell.irccloud.com)
[06:20:40] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[06:20:42] *** Quits: ssbr (~ssbr@2620:15c:10f:203:2e91:f07a:72be:31fc) (Ping timeout: 264 seconds)
[06:24:56] *** Quits: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:25:32] *** Joins: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[06:26:17] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[06:26:27] <Samian> what does v in sys.argv stand for?
[06:26:34] <Samian> arg obviously means argument
[06:27:26] <habnabit> vector
[06:28:04] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[06:28:10] <mike18> hi
[06:28:15] <mike18> when i add http.client.HTTPConnection.debuglevel = 5 to my python app
[06:28:25] <mike18> how can i see the response from a http server?
[06:28:41] <mike18> i only see request header and other things
[06:28:43] <habnabit> mike18, do you need to use http.client? the 'requests' library is much easier to use
[06:28:52] <mike18> but i need response body
[06:29:14] <mike18> i use an lib which calls an api
[06:29:15] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[06:29:25] <mike18> i only want to see the response body
[06:29:35] <mike18> and request
[06:29:42] <habnabit> mike18, use mitmproxy
[06:29:50] <mike18> yeah thought about proxy
[06:29:56] <mike18> how does the proxy thing work?
[06:30:04] <habnabit> mike18, mitmproxy's docs are pretty good
[06:30:17] <mike18> can it work still with that lib i use?
[06:30:20] <habnabit> mike18, sure
[06:30:22] *** Joins: samhain (~samhain@samhain.io)
[06:30:48] <mike18> but thats not part of my python app?
[06:31:02] <mike18> also how can i see the response body if its https?
[06:31:16] <habnabit> mike18, mitmproxy works because you tell the library to connect through it
[06:31:19] *** Joins: Midnite (~human@user/midnightlantern)
[06:31:33] <habnabit> mike18, http.client should support http proxies
[06:31:36] <mike18> so i need to config that library?
[06:31:49] <mike18> or change source code in the lib itself?
[06:31:51] <habnabit> mike18, no, you just run `export http_proxy=..`
[06:31:57] <habnabit> mike18, this is all in the mitmproxy docs
[06:32:07] <mike18> that shoulds to easy
[06:32:13] *** Quits: MikZyth (~MikZyth@188.65.243.35) (Ping timeout: 244 seconds)
[06:32:18] <habnabit> mike18, ok
[06:32:21] <mike18> my goal is to see what that library returns back for each request
[06:32:30] <mike18> and than take the response and store it as a testcase
[06:32:59] <habnabit> mike18, it would've been useful if you'd said that from the beginning!!!! there's different libraries available for that
[06:32:59] <mike18> and than in unit test the test will mock the response as it was in prod
[06:33:28] <mike18> but still it want to use it to rerun my algo
[06:33:49] <mike18> my algo sends a couple request using that library to a server
[06:33:53] <mike18> calcluates somthing
[06:33:58] <mike18> and than outputs something
[06:34:35] <mike18> i would like to know what request were send and their responses to that server
[06:34:45] <mike18> so i can create something to re-run the algo
[06:34:51] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[06:34:55] <mike18> with that recorded data
[06:34:58] *** Quits: samhain (~samhain@samhain.io) (Quit: ZNC - https://znc.in)
[06:35:12] *** Joins: samhain (~samhain@samhain.io)
[06:35:13] <mike18> so its 2 cases: unit test and re-run the algo
[06:35:16] <mike18> @habnabit
[06:36:24] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 252 seconds)
[06:37:47] *** Quits: samhain (~samhain@samhain.io) (Client Quit)
[06:37:56] <mike18> for both cases just use mitmproxy?
[06:38:03] *** Joins: samhain (~samhain@samhain.io)
[06:39:08] *** Quits: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[06:39:12] *** Quits: samhain (~samhain@samhain.io) (Client Quit)
[06:39:28] *** Joins: samhain (~samhain@samhain.io)
[06:39:39] *** Joins: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[06:39:54] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 264 seconds)
[06:41:58] *** Quits: atrigent (~atrigent@130.44.130.244) (Quit: Connection closed)
[06:42:45] *** Quits: samhain (~samhain@samhain.io) (Client Quit)
[06:43:01] *** Joins: Fiji (~Fiji@user/fiji)
[06:43:02] *** Joins: samhain (~samhain@samhain.io)
[06:44:03] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 268 seconds)
[06:44:55] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:45:02] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:45:06] *** Quits: Maple (~Maple@user/maple) (Quit: WeeChat 3.1)
[06:45:21] *** Joins: Maple (~Maple@user/maple)
[06:46:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Client Quit)
[06:47:12] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:48:12] <audiocat> can anyone help?  https://stackoverflow.com/questions/67913719/determine-if-youtube-video-is-original-music
[06:49:48] *** Quits: val (~val@limnoria/val) (Excess Flood)
[06:50:57] *** Joins: val (~val@limnoria/val)
[06:53:21] <jtanner> audiocat: googling "python audio fingerprint" will give you many articles to get you started
[06:53:51] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:53:55] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 244 seconds)
[06:54:26] *** Joins: ssbr (~ssbr@c-174-61-145-225.hsd1.wa.comcast.net)
[06:55:04] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[06:56:17] <audiocat> jtanner, that'd be great if i already had mp3 of each song that i want, but i do not
[06:56:41] <jtanner> google "youtube-dl ffmpeg to mp3"
[06:58:26] *** Joins: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[06:58:32] <audiocat> jtanner, downloading is not the problem either, i just want to be able to know whether a video is a cover or original music or something else...and only download videos that are original music
[06:58:47] <jazzy> youtube-dl is da bes
[06:58:50] <audiocat> jtanner, the problem is that if you search for some song titles, other videos that are not original music pop up
[06:59:09] <jazzy> can download anything that isn't drm protected
[06:59:22] <jtanner> okay, in your mind ... how do you imagine the audio to be handed to python?
[06:59:59] <jtanner> or do you believe that parsing the titles and descriptions is the way to figure it out?
[07:04:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:04:28] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[07:05:02] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:05:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (mercury.libera.chat (Nickname regained by services)))
[07:05:02] *** finn_elija is now known as FinnElija
[07:06:27] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[07:06:30] *** Joins: ckpro (~ckpro@103.106.181.67)
[07:10:23] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[07:10:25] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[07:11:25] *** Joins: sudo (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[07:12:11] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Quit: padraigd)
[07:12:13] *** Quits: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[07:12:22] <sudo> how do you force the program to control + c after you are done running it?
[07:12:37] <sudo> in a python way
[07:13:38] *** Joins: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[07:14:35] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[07:14:39] <mefistofeles> sudo: sys.exit() maybe?
[07:14:59] *** Quits: Mrokii_ (mrokii@gateway/vpn/airvpn/mrokii) (Ping timeout: 252 seconds)
[07:15:27] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 252 seconds)
[07:16:04] <SnoopJ> sudo, ctrl-c typically sends SIGINT to a process. If you want to interrupt a process from Python and have a subprocess.Popen object, you can call .send_signal(signal.SIGINT) on it, otherwise you can use os.kill(pid, signal.SIGINT) to send it to that process
[07:16:43] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[07:16:43] <sudo> tried sys.exit did not work
[07:18:33] *** Joins: akoana (~ah@user/akoana)
[07:18:43] *** Quits: Samian (~sami@174.27.107.153) (Ping timeout: 244 seconds)
[07:20:28] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[07:21:20] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-19ba-31df-4e03-7c64.res6.spectrum.com) (Quit: Client closed)
[07:22:56] *** Joins: Fiji_ (~Fiji@user/fiji)
[07:23:33] *** Quits: Fiji_ (~Fiji@user/fiji) (Client Quit)
[07:23:42] *** Quits: audiocat (~audio@2603-8081-1800-00af-765d-cf77-c161-8f26.res6.spectrum.com) (Ping timeout: 264 seconds)
[07:26:28] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 244 seconds)
[07:26:36] *** Joins: Gleo_ (~Gleo_@2406:3003:2005:3a48:34e1:28ca:af19:ff34)
[07:27:40] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:28:10] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[07:28:11] *** Quits: akoana (~ah@user/akoana) (Ping timeout: 252 seconds)
[07:28:42] <dnode> sudo raise SystemExit(0) for successful completion or raise SystemExit(1) to indicate an error
[07:29:03] *** Joins: Mrokii_ (mrokii@gateway/vpn/airvpn/mrokii)
[07:30:17] *** Joins: akoana (~ah@user/akoana)
[07:31:59] <sudo> i am trying to quit out of cvlc when playing an mp3
[07:32:40] <sudo> it will run the things mentioned above after i manually control c it :(
[07:33:56] *** Quits: ssbr (~ssbr@c-174-61-145-225.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[07:34:16] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[07:35:35] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Quit: WeeChat 3.1)
[07:37:28] <sudo> i cannot figure it out. Anyone want to have a go? https://dpaste.org/fOeg
[07:37:45] <sudo> highlight text on your screen and it will be read to you when you run the program
[07:37:50] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 244 seconds)
[07:38:00] *** Joins: audio (~audio@2603-8081-1800-00af-f3ac-828a-d24d-25b4.res6.spectrum.com)
[07:38:06] *** audio is now known as audiocat
[07:38:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[07:38:54] <jtanner> sudo: import subprocess; subprocess.run("clvc ..", shell=True)
[07:40:13] <sudo> did not work
[07:40:26] <dnode> popen instances have a terminate() method
[07:41:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[07:41:21] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:42:09] <sudo> nvm used mpv and it worked
[07:42:21] <sudo> strange though how you couldn't get it with cvlc
[07:44:58] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[07:47:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:48:03] *** Quits: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[07:49:33] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[07:51:25] *** Joins: veek (~veek@117.192.20.122)
[07:52:26] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:56:26] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[07:56:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:57:25] *** Joins: wei2912 (~wei2912@112.199.250.21)
[07:59:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[07:59:44] *** Joins: P1RATEZ (piratez@cpe98524ab27125-cm98524ab27123.cpe.net.cable.rogers.com)
[08:00:21] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Client Quit)
[08:00:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[08:00:49] *** Lord_of_Life_ is now known as Lord_of_Life
[08:01:25] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:02:09] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[08:04:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: leaving)
[08:04:35] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:12:03] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[08:16:35] *** Quits: dtux (~dtux@2600:1700:22f0:37bf:4b09:8b56:3c1e:c2e6) (Quit: dtux)
[08:17:12] *** Quits: samhain (~samhain@samhain.io) (Quit: ZNC - https://znc.in)
[08:17:31] *** Joins: samhain (~samhain@78.46.128.136)
[08:19:11] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[08:19:53] *** Joins: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net)
[08:21:58] *** Quits: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net) (Client Quit)
[08:26:35] *** Joins: dodobrain__ (~dodobrain@user/dodobrain)
[08:28:30] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[08:28:36] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 252 seconds)
[08:30:32] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 244 seconds)
[08:32:45] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:33:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[08:35:03] *** Joins: jheblu (~user@116.68.98.40)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:39:09] *** Joins: dme86 (~dan@user/dan86)
[08:39:36] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[08:41:04] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:41:36] *** Quits: ckpro (~ckpro@103.106.181.67) (Remote host closed the connection)
[08:41:49] *** Joins: ckpro (~ckpro@103.106.181.67)
[08:43:27] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[08:44:32] *** Joins: nubonix (uid492751@id-492751.charlton.irccloud.com)
[08:44:37] <nubonix> was hoping someone could help me with a secure websocket [trying to create an auto-trader], not sure what you need to help me though
[08:44:45] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[08:44:55] *** Joins: wyclif (~wyclif@user/wyclif)
[08:45:54] *** Quits: mrgz (~mrgz@189.62.148.186) (Ping timeout: 245 seconds)
[08:46:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[08:46:36] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: Ping timeout (120 seconds))
[08:46:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[08:47:08] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[08:47:51] *** Joins: sco1_ (~sco1@charon.whatbox.ca)
[08:48:34] *** Joins: Samian (~Samian@2620:10d:c090:400::5:d737)
[08:48:36] *** Joins: tijuco (~tijuco@user/tijuco)
[08:49:02] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[08:49:07] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:49:14] *** Quits: sco1 (~sco1@charon.whatbox.ca) (Ping timeout: 268 seconds)
[08:49:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:50:07] <Samian> Hi is there a way to see what a python program running is doing? I have two terminal windows signed into my unix shell. One is running the python program. I want to use the other terminal window to see what the one running the python program is doing. I can't tell if it stalled or not or if it's in some infinite loop.
[08:50:36] *** Quits: Gleo_ (~Gleo_@2406:3003:2005:3a48:34e1:28ca:af19:ff34) (Ping timeout: 250 seconds)
[08:50:54] <mefistofeles> Samian: depends, but you can monitor the use of memory and use of cpu, at least... I guess
[08:51:58] <Samian> that's what I'm doing. I was hoping there's a way to see what lines of code it's running
[08:52:03] <ammar2> Samian: https://pypi.org/project/pystack-debugger/
[08:52:21] <nubonix> Samian could use websockets, or a restful api to send updates in a routine fashion, and if a message is not received within the timeframe, then it is most likely not working?
[08:54:42] <Samian> woohoo the program just finished
[08:54:54] <Samian> good thing I didn't kill it
[08:54:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[08:55:48] *** Joins: atrigent (~atrigent@130.44.130.244)
[08:56:40] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:56:46] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[08:58:57] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 244 seconds)
[09:00:23] *** Joins: reset (~reset@user/reset)
[09:02:38] *** Quits: plasticu1roject (~plasticup@user/plasticuproject) (Quit: leaving)
[09:03:50] *** Joins: jdmark (~jdmark@67.8.137.130)
[09:03:58] <jdmark> H E L L O
[09:04:18] <jdmark> im a beginner and want to learn python with no prior programming knowledge
[09:04:27] <jdmark> should i go with python crash course
[09:04:39] <jdmark> or the other python book
[09:04:50] <jdmark> i forget what it is called
[09:05:04] <jdmark> OS scripting or project scripting
[09:06:31] <nubonix> codecademy is where i learned
[09:06:56] <nubonix> sentdex on yt has some fairly good courses
[09:07:05] <nubonix> as codecademy is now paid
[09:09:48] <mdk> jdmark: among other resources you can try https://hackinscience.org
[09:10:36] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[09:13:24] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[09:15:38] <circuitbone> https://youtu.be/KOdfpbnWLVo?list=PLi01XoE8jYohWFPpC17Z-wWhPOSuh8Er-
[09:15:49] *** Parts: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152) (The Lounge - https://thelounge.chat)
[09:16:07] *** Joins: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152)
[09:16:43] <circuitbone> jdmark:  ^
[09:17:10] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[09:17:10] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[09:17:10] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Write error: Connection reset by peer)
[09:17:10] *** Quits: ali1234[m] (~ali1234@user/ali1234) (Write error: Connection reset by peer)
[09:17:11] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Write error: Connection reset by peer)
[09:17:11] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Write error: Connection reset by peer)
[09:17:11] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Write error: Connection reset by peer)
[09:17:11] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Read error: Connection reset by peer)
[09:17:11] *** Quits: codemouse92__ (~codemouse@user/codemouse92) (Read error: Connection reset by peer)
[09:17:11] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[09:17:11] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[09:17:11] *** allegary_ is now known as allegary
[09:17:13] *** Parts: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152) (The Lounge - https://thelounge.chat)
[09:17:23] *** Joins: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152)
[09:18:23] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[09:22:30] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[09:22:30] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[09:22:30] *** Joins: ali1234[m] (~ali1234@user/ali1234)
[09:22:30] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[09:22:30] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[09:22:30] *** Joins: codemouse92__ (~codemouse@user/codemouse92)
[09:22:30] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[09:22:30] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[09:22:30] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[09:22:44] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[09:23:09] *** Quits: Samian (~Samian@2620:10d:c090:400::5:d737) (Remote host closed the connection)
[09:28:45] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 272 seconds)
[09:31:22] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:31:36] *** Joins: stranac (~stranac@195.29.239.126)
[09:32:26] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:32:46] *** Joins: Flux (~Fluxx@user/fluxx)
[09:33:27] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Read error: Connection reset by peer)
[09:33:41] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[09:33:49] *** Joins: Thanatos (~Thanatos@197.210.44.237)
[09:33:56] *** Quits: KernelPanic (~KernelPan@user/kernelpanic) (Quit: ZNC - https://znc.in)
[09:34:09] *** Joins: KernelPanic (~KernelPan@user/kernelpanic)
[09:35:20] *** Joins: kmh (~kmh@p200300df5f2f6b00618497f9f416d927.dip0.t-ipconnect.de)
[09:35:22] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[09:35:29] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 268 seconds)
[09:35:29] *** Quits: TFKyle (~kyle@64.201.205.70) (Ping timeout: 268 seconds)
[09:35:47] <wyclif> jdmark: The first thing you should do IMHO is go to docs.python.org and do the tutorial there
[09:36:27] <wyclif> nubonix: Doesn't Codecademy still have a free tier, or is that only JavaScript not Python?
[09:36:29] <jdmark> and what do they teach?
[09:36:38] <jdmark> they have a free tier i think
[09:36:42] <jdmark> there are two books
[09:36:47] <jdmark> automate the boring stuff is the other
[09:36:55] <wyclif> I'd also highly recommend freeCodeCamp
[09:37:01] <jdmark> that one is around automating things for sys admins
[09:37:08] <jdmark> python crash course is project based
[09:37:11] <jdmark> both are for beginners
[09:37:17] <jdmark> i read that codeacademy teaches syntax
[09:38:57] <wyclif> jdmark: another course I can highly recommend as being very polished (and free) is Scrimba: https://scrimba.com/learn/python
[09:40:11] <wyclif> jdmark: There are a lot of books and they can definitely help you, you just have to be selective and look at what pro Python devs recommend because there are so many books now since Python got really hot
[09:40:54] *** Joins: TFKyle (~kyle@64.201.205.70)
[09:43:28] <wyclif> nubonix: Yeah, sentdex is good
[09:43:47] <jdmark> i think ill do all of their intros, including the books and gofrom there
[09:44:24] *** Joins: omen (~omen@user/omen)
[09:44:25] <wyclif> Also, I'd ask nedbat for recommendations, he definitely knows a lot about this
[09:44:42] <circuitbone> create a gitlab / github account etc so you can store and share jdmark
[09:44:51] <jdmark> i did about 8-9 years ago
[09:45:08] <circuitbone> ok so one repo for hello_python
[09:45:24] <jdmark> lets skip that
[09:45:25] <jdmark> whats next
[09:45:45] <jdmark> so you learn print first
[09:46:42] *** Quits: Vision (~Vision@047-034-097-066.res.spectrum.com) (Ping timeout: 252 seconds)
[09:48:36] *** Joins: Vision (~Vision@047-034-097-066.res.spectrum.com)
[09:49:05] <wyclif> Yeah, if you do the Scrimba course, sign in/up with GitHub, it will store your work so you can point to it as proof you did the course
[09:51:26] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) ()
[09:52:15] <wyclif> You should have a GitHub or GitLab account anyway if you plan to be doing any programming
[09:55:27] *** shan is now known as ^_^
[09:55:33] *** ^_^ is now known as shan
[09:55:37] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[09:55:57] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.1)
[09:57:27] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[09:59:53] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[10:00:56] *** Quits: Thanatos (~Thanatos@197.210.44.237) (Read error: Connection reset by peer)
[10:01:20] *** Joins: Thanatos (~Thanatos@197.210.44.237)
[10:05:05] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[10:10:30] *** Quits: Vision (~Vision@047-034-097-066.res.spectrum.com) (Ping timeout: 272 seconds)
[10:15:33] *** Quits: Xaldafax_ (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:16:07] *** Joins: Vivek (~vivek@user/vivek)
[10:16:40] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 265 seconds)
[10:18:55] *** Quits: Vivek (~vivek@user/vivek) (Quit: leaving)
[10:19:53] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[10:21:17] *** Quits: veek (~veek@117.192.20.122) (Remote host closed the connection)
[10:24:26] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:24:57] *** Joins: player1 (~player1@user/player1)
[10:30:42] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 252 seconds)
[10:33:26] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[10:33:51] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[10:33:56] *** Quits: Thanatos (~Thanatos@197.210.44.237) (Ping timeout: 272 seconds)
[10:38:09] *** Quits: player1 (~player1@user/player1) (Read error: Connection reset by peer)
[10:41:56] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[10:42:36] *** Joins: player1 (~player1@user/player1)
[10:43:38] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 244 seconds)
[10:43:43] *** Joins: pradhvan (~pradhvan@103.94.114.232)
[10:44:20] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[10:45:13] *** Joins: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net)
[10:46:29] *** Quits: P1RATEZ (piratez@cpe98524ab27125-cm98524ab27123.cpe.net.cable.rogers.com) (Changing host)
[10:46:29] *** Joins: P1RATEZ (piratez@user/p1ratez)
[10:47:01] *** Quits: sudo (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[10:47:19] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[10:49:31] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[10:49:45] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:50:36] *** Joins: seednode (~seednode@user/seednode)
[10:50:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:54:30] *** Joins: gusto (~Augustus@109.255.100.54)
[10:54:52] *** Joins: gambusia (~ggp@S01069050cacf7653.lb.shawcable.net)
[10:55:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[10:55:39] *** Joins: ZenixOwler (~zenix@118.69.128.37)
[10:55:52] <ZenixOwler> i am trying to do some proxy stuffs in its most basic form but still kinda fail, here is my example : https://hatebin.com/uznhdlyqpl but eventually it results in "requests.exceptions.InvalidURL: Proxy URL had no scheme, should start with http:// or https://"
[10:55:56] <ZenixOwler> anyone has any idea ?
[10:57:26] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[11:01:24] *** Joins: lash (~nolash@159.48.53.248)
[11:01:26] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:01:27] <lash> is there a stdlib method for parsing the comma-separated optional values in an http header?
[11:01:54] *** Joins: rendar (~rendar@user/rendar)
[11:02:05] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[11:02:10] *** Joins: Crys (~Tiran@python/psf/tiran)
[11:02:38] <lash> as in 'Foo: Bar inky="pinky",blinky="sue,clyde"'
[11:02:43] *** Joins: ionface (~ionface@user/ionface)
[11:03:43] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:04:40] *** Quits: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) (Quit: leaving)
[11:05:30] *** Joins: dkmueller (~dkmueller@2a01:c23:c05b:2f00:ec1d:4623:e64a:de1c)
[11:11:31] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[11:11:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[11:12:34] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[11:12:44] *** Joins: ionface_ (~ionface@user/ionface)
[11:15:25] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[11:19:00] *** Joins: ckpro (~ckpro@103.106.181.67)
[11:20:38] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:21:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:23:43] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:23:58] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 272 seconds)
[11:24:27] *** Quits: abraham (~abraham@173.239.198.148) (Quit: Textual IRC Client: www.textualapp.com)
[11:24:37] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:24:39] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[11:24:46] *** Joins: ckpro (~ckpro@103.106.181.67)
[11:25:19] *** Joins: slav0nic (slav0nic@python.su)
[11:27:09] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[11:29:58] *** Joins: Samian (~Samian@2620:10d:c090:400::5:d737)
[11:29:59] <Samian> hi
[11:30:18] <Samian> does running python scripts via subprocess.run force single threading?
[11:30:47] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:32:37] <deniska> a process you run through subprocess.run can do whatever processes can do, including starting threads
[11:33:28] *** Quits: gambusia (~ggp@S01069050cacf7653.lb.shawcable.net) (Quit: WeeChat 2.8)
[11:34:07] <Samian> does python do multithreading behind the scenes? does it have a way to detect what can be done in parallel?
[11:34:49] <deniska> no
[11:35:13] *** Joins: et_ (~et@user/et)
[11:35:18] <Samian> I'm running a python script. In top (linux terminal program), It's cpu usage is %16887
[11:35:49] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[11:36:19] *** Quits: et (~et@user/et) (Ping timeout: 264 seconds)
[11:36:19] *** et_ is now known as et
[11:36:23] <Samian> oh it's pytorch
[11:40:07] *** Joins: et_ (~et@user/et)
[11:40:54] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[11:41:18] *** Quits: Samian (~Samian@2620:10d:c090:400::5:d737) (Remote host closed the connection)
[11:41:57] *** Joins: Samian (~Samian@163.114.132.6)
[11:42:46] <Samian> could subprocess.run cause any leaks? any hanging processes?
[11:42:50] <Crys> Samian: it's complicated
[11:43:24] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[11:43:24] *** et_ is now known as et
[11:43:41] *** Joins: chele (~chele@user/chele)
[11:43:50] <Crys> Samian: Python uses your OS' native threading and can use multiple CPU cores. But Python code is limited to one thread due to the GIL. Only native code (e.g. C extensions) can use multiple cores in parallel.
[11:43:57] *** Joins: manti7 (~manti7@176.10.104.94)
[11:44:06] <Samian> I have subprocess.run in a loop. First time subprocess.run is executed, the python script runs multithreaded using all 256 cpus.  Second time subprocess.run is executed, it runs single threaded.
[11:45:10] <Samian> subprocess.run runs a python script. I basically have a python program that's calling another python program over and over again to make sure it works with every combination of arguments it's supposed to take
[11:45:23] <Samian> there are 16 combinations of arguments. So subprocess.run is called 16 times.
[11:46:22] <Samian> any idea why the second time, pytorch is single threaded?
[11:46:33] <graingert> Samian: show your code?
[11:46:41] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 252 seconds)
[11:46:42] <raek> how do you tell whether the python script runs multithreaded or single threaded?
[11:47:00] <Samian> I run the program "top" in a linux terminal
[11:47:14] <graingert> Check the temperature and fan speed
[11:48:31] <Samian> graingert:  well I have 3 ssh sessions now. One is on subprocess.run second iteration. In another terminal I ran the same program and subprocess.run is on the first iteration there. In the third terminal, I have top running to see cpu usage.
[11:49:01] <Samian> top shows the program on iteration 2 is single thread, but the program on iteration 1 is multithreaded.
[11:49:05] <Samian> I'll screenshot you
[11:49:08] <graingert> Samian: show your code, don't paraphrase it
[11:49:14] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 245 seconds)
[11:49:15] <graingert> Use a bpaste
[11:49:23] <raek> htop has a nice tree view of processes, btw
[11:49:29] <raek> and can display threads too
[11:49:54] *** Joins: ionface (~ionface@user/ionface)
[11:50:06] *** Joins: vladoski (~vladoski@2001:b07:add:d406:c3fc:de7c:e328:31cd)
[11:50:11] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Ping timeout: 272 seconds)
[11:50:18] <raek> Samian: do you know how pytorch determines how many threads it should use?
[11:50:27] <vladoski> Hi guys, what's the best way to do a update set in sqlalchemy with multiple rows?
[11:50:41] <Samian> imgur.com/a/KJKSsxZ
[11:51:27] <vladoski> is it possible to do something like update [...] .where(foo.c.id in <list>)?
[11:52:56] <supakeen> vladoski, `session.query(...).update(...)`.
[11:53:03] <supakeen> You can do the filters yourself in between :)
[11:53:06] <raek> Samian: is there a shared resource that only one instance of pytorch can use at a time? like the GPU?
[11:53:07] <Samian> here's the program: https://github.com/samiwilf/dlrm/blob/dlrm_benchmark/dlrm_s_pytorch.py
[11:53:24] <vladoski> supakeen, i have to use the "core" table funcionality not the orm
[11:53:33] <Samian> here's the program that loops through the one above: https://github.com/samiwilf/dlrm/blob/dlrm_benchmark/benchmark_dlrm.py
[11:54:25] <raek> Samian: if you start two pytorch processes manually, do you get the same problem as when the benchmark script starts the processes?
[11:55:08] <supakeen> vladoski, then `table.update().where(table.c.id.in_((..., ...))`
[11:55:22] <supakeen> Assuming the problem is the `in` :)
[11:56:04] <Samian> raek:  I don't
[11:56:56] <Samian> I'm waiting for the terminal instance that's on the first subprocess.run to finish and begin the second subprocess.run call.  If on the second call, it also becomes single threaded, then it's not just a weird one time random thing
[11:57:12] <raek> hmm, that's weird because using subprocess and starting programs manually use the same OS primitives in the end
[11:57:26] *** Joins: cjb (~cjb@user/cjb)
[11:57:57] <supakeen> We have no idea what pytorch does of course.
[11:58:09] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 252 seconds)
[11:58:10] <raek> why was both processes visible in the top output? shouldn't the first one had exited?
[11:58:12] <supakeen> Does the same happen if you run another program.
[11:59:08] <Samian> weird, i guess it was a one time thing. My second ssh terminal session hit the second subprocess.run and is still going hard at %8000
[11:59:13] *** Joins: iflema (~ian@user/iflema)
[11:59:42] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[11:59:48] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:00:19] *** Joins: biozz (~biozz@178.57.22.163)
[12:01:26] *** Joins: dvx (~dvx@185.63.97.64)
[12:02:24] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[12:02:53] *** Quits: cjb (~cjb@user/cjb) ()
[12:03:11] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[12:03:35] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[12:04:12] *** Quits: n0cto (~n0cto@70.39.116.228) (Ping timeout: 252 seconds)
[12:04:13] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:04:15] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[12:05:02] *** Joins: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au)
[12:05:08] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[12:05:36] *** Joins: cjb (~cjb@user/cjb)
[12:05:53] *** Joins: zaquest (~notzaques@5.128.210.178)
[12:06:02] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[12:06:29] *** vinleod is now known as vdamewood
[12:08:07] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:08:45] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[12:09:34] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[12:10:07] *** Joins: biozz (~biozz@178.57.22.163)
[12:10:55] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[12:11:44] *** Quits: player1 (~player1@user/player1) (Ping timeout: 245 seconds)
[12:12:20] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[12:12:24] *** Joins: et_ (~et@user/et)
[12:12:42] *** Quits: dodobrain__ (~dodobrain@user/dodobrain) (Ping timeout: 244 seconds)
[12:12:59] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 245 seconds)
[12:12:59] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[12:12:59] *** et_ is now known as et
[12:13:10] *** Joins: civillian (~nick@ppp118-208-178-29.cbr-trn-nor-bras39.tpg.internode.on.net)
[12:15:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:16:10] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[12:17:04] *** Joins: et_ (~et@user/et)
[12:17:34] *** Joins: ionface (~ionface@user/ionface)
[12:20:26] *** Quits: cjb (~cjb@user/cjb) ()
[12:20:58] *** Quits: et (~et@user/et) (Ping timeout: 272 seconds)
[12:20:58] *** et_ is now known as et
[12:21:33] *** Joins: Julian (~tos9@151.66.53.132)
[12:24:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[12:24:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:26:10] *** Quits: neibo (~neibo@143.red-88-5-146.dynamicip.rima-tde.net) (Quit: Lost terminal)
[12:26:19] *** Joins: K285 (~K285@2401:4900:30c2:bbc4:4580:b5:7048:fbe7)
[12:27:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[12:27:59] *** Joins: Azelphur (~Azelphur@2a01:4f8:141:3251::2)
[12:28:49] *** Joins: MikZyth (~MikZyth@188.65.243.35)
[12:30:14] *** Joins: ionface_ (~ionface@user/ionface)
[12:30:28] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[12:30:28] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[12:30:43] *** Joins: ponadm (pony@gateway/vpn/protonvpn/ponadm)
[12:32:28] <Azelphur> Hey folks, does anyone know how I'd use requests_mock to mock a request that uses stream=True? I'm passing r.raw into PIL.Image.open and it doesn't work without stream=True.
[12:33:20] *** Quits: pradhvan (~pradhvan@103.94.114.232) (Ping timeout: 250 seconds)
[12:34:54] *** Quits: MikZyth (~MikZyth@188.65.243.35) (Ping timeout: 272 seconds)
[12:35:45] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 244 seconds)
[12:36:21] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:37:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:02] *** Joins: mexen (uid495612@user/mexen)
[12:38:04] *** Quits: foozle (~foozle@2001-b011-c001-1b0a-4a4d-3185-eca5-bc84.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:39:08] *** Joins: acresearch (~acresearc@user/acresearch)
[12:39:09] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:39:12] <acresearch> people, is there a way to write two line of an if statement in a single line?   if x==1: print('a') print('b')
[12:39:26] <leduyquang753> Semicolon.
[12:39:27] *** Joins: dme86 (~dan@user/dan86)
[12:39:32] *** Joins: wyclif (~wyclif@user/wyclif)
[12:40:03] *** Joins: szymon (~ugh@staticline-31-183-131-3.toya.net.pl)
[12:40:08] <acresearch> leduyquang753:  if x==1: print('a'); print('b')   ?
[12:40:19] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:40:33] <leduyquang753> Try it.
[12:42:01] <acresearch> thanks
[12:43:52] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[12:44:24] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[12:45:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[12:45:11] *** Joins: ggherdov (sid11402@id-11402.brockwell.irccloud.com)
[12:45:48] *** Quits: ZenixOwler (~zenix@118.69.128.37) (Quit: Leaving)
[12:48:47] *** Quits: cqi (~cqi@2408:8207:2527:5f40:9cc5:6c87:132e:880d) (Read error: Connection reset by peer)
[12:50:48] *** Quits: janemba (~janemba@185.107.80.152) (Read error: Connection reset by peer)
[12:52:12] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[12:52:15] *** Joins: xkuru (~xkuru@user/xkuru)
[12:52:45] *** Joins: cqi (~cqi@2408:8207:2527:5f40:9cc5:6c87:132e:880d)
[12:53:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[12:54:00] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:54:51] *** Joins: wattux (~wattux@212.51.23.106)
[12:55:38] *** Joins: entuland (~entuland@user/entuland)
[12:55:53] <dcaro> print('a') if x==1 else print('b')  # also works
[12:57:16] <leduyquang753> I wouldn't recommend that though.
[12:57:20] <dcaro> and works as a right side in a statement (myvar = 'a' if x==1 else 'b')
[12:57:25] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[12:57:33] <leduyquang753> Wait that doesn't even do what the original code does.
[12:57:37] *** Joins: wyclif (~wyclif@user/wyclif)
[12:57:54] <dcaro> true, isred the line
[12:57:58] <dcaro> *misread
[13:00:03] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[13:00:06] *** Quits: gothicserpent (~gothicser@static-198-54-129-76.cust.tzulo.com) (Read error: Connection reset by peer)
[13:01:08] <dostoyevsky2> hmmmm one can't do: f''' lines of text {variable} ''' as f is not a valid prefix for multiline string literals...
[13:02:22] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-0064-95f0-809d-b2ed.res6.spectrum.com)
[13:02:29] *** Joins: Meteorhead (~Meteorhea@165.225.205.20)
[13:02:32] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[13:02:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:03:27] <duso> on a practice exam for my uni course I have the following questions: https://bpa.st/YMHA. I am able to nut out the inheritance etc for all questions except for 36, but my question is, is there a tip or technique for following inheritance to make it easier? Is there a procedure to follow? Any advice?
[13:04:22] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 244 seconds)
[13:04:40] *** Quits: Samian (~Samian@163.114.132.6) (Ping timeout: 272 seconds)
[13:05:20] <Wulf> duso: D defines m2, so that's what's used.
[13:05:39] <bjs> dostoyevsky2: why do you say you can't?
[13:05:59] <Crys> duso: Python classes have an __mro__ attribute
[13:06:28] <dostoyevsky2> bjs: No, it's python3.4 :-(  so it doesn't have f'' yet
[13:06:29] <duso> not sure, when I worked it through I thought the answer would be 5, but when I run it in python the correct answer is 7 and not sure where I went wrong.
[13:06:46] <bjs> dostoyevsky2: well that's different to what you were implying :)
[13:08:31] <bjs> duso: it's hard to say where you went wrong if you don't tell us how you got 5 :)
[13:08:44] <Wulf> duso: self._x + 2 + 2 where _x is 3.
[13:09:05] <duso> well now that I am thinking it through again, I think it should be 6
[13:09:34] <bjs> duso: D.m2 does super.m2(2)+2, which expands to (B.m2(2))+2 which is (self._x+2)+2 and self._x was 2+1
[13:09:56] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[13:10:20] <bjs> duso: you seem to have forgotten the `1` in `d = D(2, 1)`
[13:11:07] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[13:11:44] *** Quits: audiocat (~audio@2603-8081-1800-00af-f3ac-828a-d24d-25b4.res6.spectrum.com) (Ping timeout: 245 seconds)
[13:12:00] <duso> D inherits from B, so super.m2(x) should return self._x + y, which if I am thinking this through right should be 2 + 2, the self._x = 2 and y parameter being 2
[13:12:45] <duso> then when that returns to class D, the + x is (2) from question 36, so the answer should be 6?
[13:12:49] <Crys> duso: self._x += y
[13:13:02] <Crys> duso: self._x is 2+1
[13:13:15] <bjs> duso: yes you missed the `self._x += y` line in D's __init__
[13:13:28] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[13:13:44] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[13:13:48] <duso> ok, and then I get 7. the answer python spat out and assumed to be correct.
[13:14:07] <Crys> I would flag this code style in my code review.
[13:14:14] *** Joins: wyclif (~wyclif@user/wyclif)
[13:14:36] *** Quits: carlio (~carlio@p4fca2a65.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:14:47] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:14:53] <Crys> It's deliberately tricky. A better coding style would be super().__init__(x + y)
[13:15:10] <duso> so the original question still stands - in an exam where I am under pressure and limited in time, is there any tips or techniques to follow through to aid calculating the answer when you don't have access to python?
[13:15:12] <bjs> Yes it's clearly written to be a test and to try trip you up,  rather than be good practice
[13:15:41] <bjs> duso: be methodical and go through each step from the start?
[13:16:32] <bjs> duso: that's your only hope really,  read and write a lot of Python so you know how the language works, then in a situation like that you just have to be careful and methodical
[13:17:37] <duso> I can be careful and methodical, but not quick. guess I will just have to save questions like this until the end and hope I have time to nut them out
[13:17:54] <bjs> duso: that sounds reasonable.
[13:17:58] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 272 seconds)
[13:18:27] <bjs> These kind of questions sort of suck because they reward the students who spend time practicing the style of the question
[13:19:02] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:19:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[13:24:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[13:24:24] <duso> that has been my whole experience of uni so far, does not really sit right with me who has been self taught on the job my whole life.
[13:27:24] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[13:31:18] *** Joins: wyclif (~wyclif@user/wyclif)
[13:32:11] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[13:32:33] <bjs> duso: if it makes you feel better I'm sure I could pull out examples that'd mean even the person who wrote that question wouldn't be able to get the right answer :)
[13:33:10] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[13:36:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[13:38:20] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:38:23] *** Joins: iflema (~ian@user/iflema)
[13:40:56] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[13:41:24] *** Quits: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[13:41:36] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:42:32] *** Joins: duso (~duso@89.45.90.196)
[13:45:46] *** Joins: carlio (~carlio@p4fca2a65.dip0.t-ipconnect.de)
[13:45:50] *** Joins: pradhvan (~pradhvan@103.94.114.232)
[13:45:51] *** Joins: nichlas (nichlas@gateway/vpn/protonvpn/nichlas)
[13:47:31] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:48:01] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[13:48:16] *** Joins: wyclif (~wyclif@user/wyclif)
[13:48:24] *** Joins: VaniaPy (~VaniaPy@46.12.108.72.dsl.dyn.forthnet.gr)
[13:48:52] <VaniaPy> Hello, has anyoned ever fetched data from google fit api?
[13:49:39] *** Quits: duso (~duso@89.45.90.196) (Quit: leaving)
[13:50:54] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 272 seconds)
[13:52:52] <nedbat> VaniaPy: it works better here to ask your question directly. People don't often volunteer as experts, and sometimes non-experts can help.
[13:53:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[13:54:46] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:55:37] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[13:57:32] <VaniaPy> I need to overcome a 403 authentication problem
[13:58:25] <nedbat> VaniaPy: idk if i'll be able to help, but what's going on?
[13:58:42] *** Quits: carlio (~carlio@p4fca2a65.dip0.t-ipconnect.de) (Quit: leaving)
[13:59:34] <Knyght> I have a bunch of tuples representing datetime ranges and some extra data, a price for a particular range, basically. e.g. (<dt>, <dt>, 10). I can arrange this data however I want though. There are at a maximum going to be around some tens of thousands of ranges. What I'd like to do is for a given datetime get the price at that time, and there might be again tens of thousands of lookups to do at most.
[13:59:36] *** Joins: kosh (~kosh@user/kosh)
[13:59:37] <VaniaPy> nedbat i have some dummy data in my google fit app (on my phone) and i need to fetch them.
[13:59:53] <VaniaPy> it tried through https://developers.google.com/oauthplayground
[14:00:15] <VaniaPy> but the DataStreamId that i'm trying returns 403
[14:00:16] *** Joins: wyclif (~wyclif@user/wyclif)
[14:00:50] <Knyght> I'm wondering if there's an efficient structure for this - some kind of dict-like thing where I can find if something is in a range would be nice, but I don't know if anything remotely similar to that exists
[14:00:51] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:01:33] <nedbat> Knyght: i think i've seen packages on pypi that can do this
[14:02:33] <deniska> Knyght: put them in an sqlite database with an appropriate index :)
[14:03:14] <Knyght> I am pulling it out of a db in the first place but it's kinda complex to query. Maybe with enough CTEs it is possible :P
[14:04:12] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 272 seconds)
[14:04:22] <Knyght> main problem there is that sometimes the ranges need a bit of tweaking that I don't think I can do in sql
[14:04:35] <grawity> I'm not very good at data structures, but if your tuples are sorted, then a binary search could be fast
[14:05:33] *** Joins: betuxy (~betuxy@dynamic-046-114-034-057.46.114.pool.telefonica.de)
[14:05:37] <grawity> as in log2(n), which is tiny even for tens of thousands
[14:06:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:08:15] *** Joins: drogas (~drogas@jump2.jet.uk)
[14:08:24] <drogas> can you create a function inside another function?
[14:08:40] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 268 seconds)
[14:08:43] <drogas> how would that even work... I am trying to wrap my head around a code I am reading
[14:08:51] <grawity> pretty sure you can, yes
[14:09:19] *** Joins: cdown (~cdown@163.114.131.1)
[14:09:21] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:09:35] <drogas> and it would only be callable from inside that function I'm guessing
[14:10:26] <deniska> drogas: `def` statement does two things, creates a function object, and assigns it to a name
[14:10:30] <grawity> usually yeah, but you could store it somewhere or pass it to another function, like any other variable
[14:10:41] <deniska> drogas: both things are possible to do inside a function
[14:11:00] <deniska> drogas: it's rarely useful to nest functions besides making function decorators and stuff along these lines
[14:11:18] <bjs> drogas: a function is just an object like any other,  you can return it and call it elsewhere if you want
[14:11:20] <grawity> think of 'def foo' as a particular way to write 'foo = <function happens here>'
[14:11:21] *** Joins: ntome (~ntome@user/ntome)
[14:11:23] <ntome> hi
[14:11:24] <grawity> or in fact 'foo = lambda: ...'
[14:11:49] *** Joins: metanode (~metanode@user/metanode)
[14:11:49] <drogas> I see thanks deniska, and if you wanted to access it from outside the parent function, would you need to return the child function inside the parent? or how does it work?
[14:11:54] <Yhg1s> deniska: in other words, quite often useful :)
[14:12:05] <drogas> or can you do it like in classes `class.func()`
[14:12:09] <grawity> depends on situation
[14:12:16] <Yhg1s> drogas: no, local names in the function aren't accessible outside it.
[14:12:24] *** Parts: metanode (~metanode@user/metanode) ()
[14:12:25] <Yhg1s> drogas: so you would need to do something besides defining the function for it to be usable.
[14:12:36] <ntome> is there a way to communicate between sync code (like a long running thread) and async code? i was thinking of queue.Queue but it has no async support (and asyncio.Queue has no sync support)
[14:12:42] *** Joins: xkuru (~xkuru@user/xkuru)
[14:12:58] <grawity> you *could* do all kinds of things, same as with variables (making it global, etc) but more importantly why would you need to do that in your specific case
[14:13:00] <bjs> drogas: when you define a function, it creates an object and assigns it to a name.  The name is just like any other local variable.  Like what grawity says, `def foo(): ...` is like `foo = <some function obj>`
[14:13:08] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:13:19] <bjs> drogas: if you return the function object, or if you put it somewhere you can access it,  then you can call it
[14:13:46] <drogas> I see, okay I understand it now., understand `def` definitely helped. thank you all.
[14:14:20] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[14:14:25] *** Joins: bdulll4 (~bdulll4@185.206.172.213)
[14:15:00] <Yhg1s> ntome: you need to pass data or messages between threads and coroutines in a safe way, for example https://docs.python.org/3/library/asyncio-dev.html#concurrency-and-multithreading
[14:15:10] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[14:15:11] <pathos> Knyght: as mentioned, a binary search makes this really fast, you could use a sorted list, or a binary search tree, or a DB with appropriate index
[14:15:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:15:32] <beeza> is it fair to say python passes references to objects by value, and if so, is there something in python docs about this?
[14:15:58] <Yhg1s> beeza: you can say that, sure, but different people will interpret it differently.
[14:16:10] <Yhg1s> beeza: I prefer to say everything in Python is a reference, but assignment operates on names, not references.
[14:16:11] <bjs> beeza: I guess?  I think those "by value" and "by reference" and "reference by value" terms are not so helpful for Python, because those terms appear in the contexts of other languages that do things differently
[14:16:12] <habnabit> beeza, i've heard 'pass by object' before
[14:16:20] <Knyght> yeah I am looking at bisect, just not sure how I'd get to to work for ranges. But... I think I can work it out
[14:16:23] <habnabit> beeza, i think it makes the most sense
[14:16:25] <grawity> the page https://en.wikipedia.org/wiki/Evaluation_strategy uses the term "pass by object"
[14:16:25] <beeza> Is there some "canonical" way of saying it?
[14:16:26] <bjs> beeza: pass-by-Python-assignment  :)
[14:16:26] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:16:30] <bjs> beeza: not really
[14:16:34] <Yhg1s> beeza: bit.ly/pynames1 does a good job of explaining it.
[14:16:34] <grawity> which is different from "pass by reference"
[14:16:52] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 272 seconds)
[14:17:59] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 245 seconds)
[14:18:08] *** Quits: szymon (~ugh@staticline-31-183-131-3.toya.net.pl) (Ping timeout: 272 seconds)
[14:18:24] <beeza> thanks for the link grawity
[14:18:50] <bdulll4> Hello nedbat, I have joined the channel. I was asking about the unit test question.
[14:19:11] <bjs> bdulll4: what unit test question?
[14:19:20] <nedbat> bdulll4: glad you made it, i was worried
[14:19:45] <nedbat> bdulll4: you are seeing dots because each test run prints one dot.  The usual approach is that the dots are the only output
[14:19:53] <nedbat> bdulll4: what output are you also printing?
[14:20:01] *** Joins: wyclif (~wyclif@user/wyclif)
[14:20:14] *** Joins: szymon (~ugh@staticline-31-183-131-3.toya.net.pl)
[14:21:53] *** Joins: ckpro (~ckpro@103.106.181.67)
[14:25:05] <pathos> Knyght: I thought I remembered something like this from leetcode: https://leetcode.com/problems/my-calendar-i/discuss/ , it's for overlapping intervals, not finding the intervals that contain a certain point, but hopefully it's helpful? I think it relies on the fact that no two intervals intersect, so you'll need to make sure that is true
[14:25:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[14:28:26] *** Quits: agumonke` (~user@88.160.31.174) (Read error: Connection reset by peer)
[14:30:13] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[14:30:19] <ntome> Yhg1s: that's merely calling a function, i have no issue with this, even a simple thread.start() does the trick, what i'm trying to achieve is pushing data for the thread to process, and pulling processed data back
[14:30:51] <Yhg1s> ntome: that's also merely calling a function.
[14:31:48] *** Joins: agumonke` (~user@88.160.31.174)
[14:31:52] *** Quits: redgloboli_ (~redglobol@user/redgloboli) (Ping timeout: 265 seconds)
[14:32:20] <ntome> you would recommend to call sync_queue.get() in a dedicated thread with the mention function to "transform" it to async?
[14:33:32] <ntome> there'd be thread 1 which processes data from the queue and thread N that just does queue.get() and returns the data?
[14:33:48] <Yhg1s> it's very ahrd to give specific advice without seeing the actual code, but that's one way, sure. I would normally make the producing thread pass the data to an asyncio coroutine (by scheduling a call) instead of putting it in a queue.Queue.
[14:34:24] <Yhg1s> but if you have a reason to put it in the queue (like re-using code for other contexts), then a thread that transfers from the queue to coroutines makes sense.
[14:34:27] <betuxy> Hey i have a question, I have a funtion which  returns a list full of dictionarys, i now want to iterate through,  is there a better way to do this than:  for i in range(len(videos)) ?
[14:34:33] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[14:34:53] <Yhg1s> I dont' believe asyncio has a ready-made mechanism for this, but other event frameworks (like twisted) do. Maybe trio does? I'm not sure.
[14:35:00] <grawity> do you perhaps want `for item in videos` or `for i, item in enumerate(videos)`?
[14:35:04] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 245 seconds)
[14:35:08] <Crys> betuxy: for i, value in enumerate(videos)
[14:35:10] *** Joins: ponadm_ (~pony@097-082-235-090.res.spectrum.com)
[14:35:39] <nedbat> betuxy: why not just:   for vid in videos:   ?
[14:35:43] <bjs> betuxy: do you actually need the index?  You can just `for video in videos: ...` if you only need the dictionary.
[14:36:08] *** Quits: agumonke` (~user@88.160.31.174) (Remote host closed the connection)
[14:36:11] <ntome> Yhg1s: ok, i will consider whether i can replace the long lived thread and queue by shorter lived scheduled calls
[14:36:29] <betuxy> Crys: thanks with value it works
[14:36:54] <nedbat> betuxy: what will you do with i ?
[14:37:02] <Yhg1s> ntome: that wasn't what I was recommending, but that's also an option, yes.
[14:37:05] <betuxy> bjs:  list indices must be integers or slices, not tuple
[14:37:29] <Yhg1s> beeza: in 'for video in videos:', 'video' is the dict, not an index in the list.
[14:37:36] <Yhg1s> eh, betuxy ^
[14:37:38] <Yhg1s> beeza: sorry.
[14:37:43] *** Joins: wyclif (~wyclif@user/wyclif)
[14:37:45] <bjs> tuple?
[14:38:07] <betuxy> nedbat: I'm working on a script that retrieves the latest videos of certain youtube channels, generate an adaptive card and send it over to teams
[14:38:29] <grawity> okay but what does that have to do with your tuple comment
[14:39:19] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[14:39:40] *** Joins: dme86 (~dan@user/dan86)
[14:39:51] *** Quits: KevinX (~KevinX@73.156.245.27) (Ping timeout: 252 seconds)
[14:40:01] *** entuland is now known as dmstk`mc
[14:40:35] <betuxy> it worked without the index  for a list, thanks :)
[14:40:46] *** Quits: Meteorhead (~Meteorhea@165.225.205.20) (Quit: Client closed)
[14:41:13] <betuxy> sry the half message was cut off accidentally, it was part of an error message i got when executing the script
[14:42:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[14:42:35] <ntome> Yhg1s: oh i misunderstood your alternative suggestion then, what did you mean?
[14:43:53] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[14:44:02] *** Joins: flipp3rrr (~flipp3rr_@185.205.242.249)
[14:44:40] <Yhg1s> ntome: I mean instead of putting things in a queue, send the data to a coroutine by scheduling a call, for example with loop.call_soon_threadsafe().
[14:44:44] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 272 seconds)
[14:44:46] *** Joins: KevinX (~KevinX@73.156.245.3)
[14:44:48] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[14:45:35] <Yhg1s> ntome: it can just be a coroutine that puts it in an asyncio queue, of coruse.
[14:47:50] *** Joins: Adoi (~Adoi@user/adoi)
[14:49:50] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[14:50:19] *** Quits: flipp3rrr (~flipp3rr_@185.205.242.249) (Quit: Leaving...)
[14:50:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[14:52:30] *** gr33n7001 is now known as gr33n7007h
[14:52:53] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[14:53:11] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:53:12] *** dmstk`mc is now known as entuland
[14:53:31] <Adoi> hello all!
[14:53:43] <Adoi> I have a question concerning decorator functions
[14:53:45] *** Joins: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41)
[14:53:47] <Adoi> in this code; https://www.pastebin.cz/raw/K8msKFh
[14:54:03] <bjs> Adoi: what is the question?
[14:54:03] <Adoi> I wonder if I always have to add the line that I commented in the paste
[14:54:10] <habnabit> Adoi, yes
[14:54:20] <habnabit> Adoi, it can't be inferred, so
[14:54:21] <bjs> Adoi: well, that line is what actually calls the "divide" function
[14:54:29] <Adoi> yes
[14:54:30] <bjs> so if you want the divide function to be called, you need to call it somewhere.
[14:54:32] <Yhg1s> Adoi: if you leave out the line, func() isn't called.
[14:54:48] <mgedmin> Adoi: you'll also want to get into the habit of wrapping the 'def inner()' with @functools.wraps(func)
[14:55:00] *** Joins: wyclif (~wyclif@user/wyclif)
[14:55:02] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[14:55:13] * mgedmin likes https://pypi.org/project/decorator/
[14:55:19] <Adoi> and I suppose "return inner", too? (when the inner function is named "inner", of course)
[14:56:07] <Yhg1s> Adoi: if you don't, it's not returned.
[14:56:28] <bjs> Adoi: the thing smart_divide returns is what replaces the "divide" function, if you don't do `return inner` then the inner function doesn't get returned (and if you don't return at all, the divide function is replaced with nothing)
[14:56:53] <Yhg1s> more specifically, with None. Not just 'not replaced'.
[14:56:54] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Client closed)
[14:57:02] <bjs> yes sorry
[14:59:07] * Adoi processes the inputs :)
[14:59:33] *** Joins: MikZyth (~MikZyth@188.65.243.35)
[14:59:49] <bjs> Adoi: `@decorator def func(...): ...` is like `def func(...): ...;  func = decorator(func)`
[15:00:08] <bjs> Adoi: so the decorator function takes the function as input,  and then the function is replaced with whatever it returned.
[15:00:25] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 244 seconds)
[15:00:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:01:11] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[15:01:19] <bjs> Adoi: in your case, you replace it with another function ("inner"), so when you call func later you're really just calling inner
[15:01:19] *** Quits: cqi (~cqi@2408:8207:2527:5f40:9cc5:6c87:132e:880d) (Quit: Leaving)
[15:03:19] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[15:03:24] <Adoi> so the aggregate operation is divide(inner), to display it in a very broad way
[15:07:16] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:07:19] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[15:08:27] <betuxy> I'm getting a 400 Bad payload, when sending using request, is there a way to further investigate what the problem might be, or is the feedback information limited? https://bpa.st/O5UQ
[15:09:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:09:53] <mgedmin> if google won't tell you more info, then you can't get more info
[15:09:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 264 seconds)
[15:10:08] *** Joins: badsektor (~badsektor@user/badsektor)
[15:10:23] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[15:10:36] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:11:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:12:09] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 245 seconds)
[15:12:28] *** Joins: ckpro (~ckpro@103.106.181.67)
[15:12:36] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[15:12:49] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[15:13:14] <Adoi> quite the opposite of what I last wrote...it is rather inner(divide)...bjs already wrote; "the decorator function takes the function as input"
[15:13:39] <bjs> Adoi: it's neither.  in your example, it's smart_divide(divide) which returns inner
[15:13:46] <bjs> if you print(divide) after the decorator, it'll print inner
[15:13:53] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[15:15:33] *** Joins: wyclif (~wyclif@user/wyclif)
[15:15:45] *** Joins: Julian (~tos9@151.66.53.132)
[15:16:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:16:35] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[15:16:41] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Remote host closed the connection)
[15:16:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:18:25] <jinsun> betuxy: why are your / replaced with \/?
[15:18:49] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[15:20:03] *** Quits: betuxy (~betuxy@dynamic-046-114-034-057.46.114.pool.telefonica.de) (Ping timeout: 244 seconds)
[15:20:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:22:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:22:25] *** Joins: frostschutz (~frostschu@2a01:c22:d4cd:b600:c4d8:f383:81c0:a2f6)
[15:22:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:22:59] *** Joins: dme86 (~dan@user/dan86)
[15:23:21] *** Joins: lightdot (~weechat@user/lightdot)
[15:24:19] *** Joins: dhanesh (~Dhanesh@117.195.27.134)
[15:25:29] *** Quits: Quietus (quasselcor@larch.ratcliffefamily.uk) (Ping timeout: 245 seconds)
[15:25:44] *** Joins: Quietus (quasselcor@larch.ratcliffefamily.uk)
[15:25:56] *** Joins: Gleo_ (~Gleo_@2406:3003:2005:3a48:8d75:7aee:bd1e:3ddb)
[15:26:10] *** Joins: cth (~Cthulchu@195.66.198.226)
[15:27:02] <grawity> jinsun: that's common behavior among JSON encoders, possibly from the days where you'd literally embed JSON output inside <script> and did not want it to accidentally contain a </script>
[15:27:52] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[15:27:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:28:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:28:42] *** Joins: Deneb (~johnch@195.213.86.93)
[15:29:42] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 272 seconds)
[15:29:49] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[15:30:54] *** Quits: cth (~Cthulchu@195.66.198.226) (Ping timeout: 245 seconds)
[15:31:13] *** Joins: istevenmon (~istevenmo@234.151-64-87.adsl-dyn.isp.belgacom.be)
[15:31:19] <istevenmon> hi guys, is there a way to create a comprehension for python3.7 where the value is modified previous assignment? e.g. [val+=10 for x in y if x]
[15:32:00] <Adoi> thank you all for your replies
[15:32:07] <Adoi> bjs, thank you, great explanations
[15:32:14] *** Joins: wyclif (~wyclif@user/wyclif)
[15:32:15] <grawity> AFAIK no, and doesn't look like a thing that *should* be done in a comprehension
[15:32:19] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:32:25] <grawity> try val += sum([10 for x in y if x])
[15:32:33] <bjs> istevenmon: you mean you want to use the `val` outside the comprehension?
[15:32:51] <habnabit> istevenmon, no
[15:32:55] *** Joins: biozz (~biozz@178.57.22.163)
[15:33:01] <bjs> in that case no,  you cannot assign to things outside of the comprehension
[15:33:23] <mgedmin> does't the walrus operator allow that?  (did 3.7 have the walrus?)
[15:33:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:33:26] <istevenmon> I want to create a new list holding with val incremented 10 for each value where x is true
[15:33:29] <habnabit> mgedmin, 3.7 does not
[15:33:38] <bjs> istevenmon: what do you want the final list to look like?
[15:33:45] <habnabit> istevenmon, you could write a generator function and yield the values
[15:34:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:34:14] <istevenmon> y = [True, False, True, True, False] I want final list to be [10, 20, 30]
[15:34:49] <bjs> istevenmon: i think habnabit's solution of a generator function is going to read the easiest.
[15:35:02] *** Quits: Gleo_ (~Gleo_@2406:3003:2005:3a48:8d75:7aee:bd1e:3ddb) (Quit: Client closed)
[15:35:10] <bdulll4> nedbat i am using shortDescription method to print the test description in setUp method. but I don't want the leading dots to be printed along with the test description
[15:35:21] <grawity> several ways to do it in a one-liner, but all of them kinda ugly
[15:35:23] <habnabit> bdulll4, use py.test
[15:35:26] <istevenmon> I will look into the generator, thanks!
[15:35:49] <mgedmin> istevenmon: counter = itertools.count(10, 10); y = [next(counter) for x in y if x]
[15:36:11] <grawity> oh, itertools.count is a thing
[15:36:13] <habnabit> i.. guess
[15:36:39] *** Joins: sl4ck3r (sl4ck3r@amsterdam.pot-smokin.net)
[15:36:59] <grawity> but also I'm curious about where will the resulting list go? does it have to be a list
[15:37:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[15:37:06] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[15:37:48] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[15:37:56] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[15:38:25] *** Joins: agumonke` (~user@88.160.31.174)
[15:39:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:39:14] <bdulll4> habnabit I am using django to run the tests so i guess  it is a bit useless to use python's built-in test runner
[15:39:50] <mgedmin> pytest ftw
[15:39:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:40:05] *** Quits: dhanesh (~Dhanesh@117.195.27.134) (Quit: Leaving)
[15:42:33] *** Quits: KevinX (~KevinX@73.156.245.3) (Ping timeout: 252 seconds)
[15:43:39] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 252 seconds)
[15:43:41] *** Quits: pradhvan (~pradhvan@103.94.114.232) (Quit: Client closed)
[15:45:43] *** Joins: KevinX (~KevinX@73.156.245.3)
[15:46:22] *** Joins: negatron1 (~negatron@host-87-16-4-238.retail.telecomitalia.it)
[15:46:24] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 252 seconds)
[15:46:31] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[15:47:05] *** Parts: negatron1 (~negatron@host-87-16-4-238.retail.telecomitalia.it) ()
[15:47:29] *** Joins: soxfoxrox (~soxfoxrox@80.71.131.255)
[15:48:27] *** Joins: wyclif (~wyclif@user/wyclif)
[15:49:36] *** Joins: nomike (~nomike@vpn.vie.paysafecorp.net)
[15:50:47] <nomike> Hi
[15:51:21] <nomike> I'm trying to write a software dependency algorithm and I'm having issues with the order.
[15:51:45] <nomike> I've simplified the problem down to https://bpa.st/BISA
[15:51:58] *** Joins: manti7 (~manti7@176.10.104.94)
[15:52:15] <nomike> When I run it though, it does it in the order: engine, tire, car, wheel.
[15:52:34] <nomike> Any Idea what I might be doing wrong?
[15:53:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[15:53:37] <habnabit> nomike, what did you expect?
[15:54:09] *** Quits: lash (~nolash@159.48.53.248) (Ping timeout: 244 seconds)
[15:54:37] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[15:54:39] *** Joins: raxor2k (~raxor2k@158.39.193.127)
[15:55:17] *** Joins: sgn (~sgn@user/sgn)
[15:56:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[15:56:50] <nomike> Well, the car has a dependency on engine and wheel (lines 10 and 11) so I would expect the wheel to be done before the car.
[15:57:22] <nomike> Unfortunately my knowledge of graph theory doesn't seem to be good enough.
[15:57:38] <mgedmin> maybe you should be printing prereqs
[15:57:59] *** Joins: sgn (~sgn@user/sgn)
[15:58:08] <mgedmin> I believe software installers generally use DFS rather than BFS, but it shouldn't really matter
[15:58:43] <raxor2k> graingert: are you here
[15:58:53] <mgedmin> bfs_edges, why do you want edges?
[15:59:03] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 252 seconds)
[15:59:41] *** allegary is now known as gjm
[15:59:43] <graingert> raxor2k: I'm always here
[15:59:56] <graingert> bdulll4: pytest-django is pretty great tbh
[16:00:10] *** Joins: biozz (~biozz@178.57.22.163)
[16:00:33] *** Quits: K285 (~K285@2401:4900:30c2:bbc4:4580:b5:7048:fbe7) (Quit: Client closed)
[16:00:47] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:00:48] *** Joins: wyclif (~wyclif@user/wyclif)
[16:01:17] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:01:23] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:01:56] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[16:02:35] <raxor2k> my docker command makes my docker container refresh/update everytime i upload a python file to the server(works 100%), now the issue is that this also happens when i write to the CSV file which is in the same container. I need to add a new volume. How can i do that on the same docker command? : https://bpa.st/GKBA
[16:04:09] <graingert> you want another ` -v ~/fastapi_websocket:/fastapi_websocket` like this?
[16:04:15] <graingert> but for your csvs?
[16:04:53] <graingert> wait why are you uploading new py files to your server?
[16:05:01] <graingert> you should upload a new docker image with new files in
[16:05:06] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 252 seconds)
[16:05:35] *** Quits: Quietus (quasselcor@larch.ratcliffefamily.uk) (Quit: No Ping reply in 180 seconds.)
[16:05:57] <nomike> mgedmin,I just want to list all items in the correct order according to the dpendencies. I don't care about edges. Maybe I'm doing it wrong completely.
[16:06:27] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[16:06:33] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Client Quit)
[16:06:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:06:54] *** Joins: Quietus (quasselcor@larch.ratcliffefamily.uk)
[16:07:05] <soxfoxrox> I am creating a dictionary with some nested dictionaries in a for loop. Each item in the for loop may be higher, lower or the the same hierarchical level as the previous item. During my loop I need to keep track of the current location in the dictonary to add each new item in the right hierarchy of keys, e.g. content[heading][subheading][subsubheading]. What's a good method for this? If my
[16:07:05] <soxfoxrox> question doesn't make sense, let me know and I'll elaborate in a paste.
[16:07:06] <Yhg1s> nomike: you do care about the edges, because the edges determine the order.
[16:07:30] <mgedmin> nomike: I'm not familiar with networkx; is there a bfs() method that gives you nodes rather than edges?
[16:07:45] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[16:08:01] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[16:08:02] <graingert> soxfoxrox: show your code?
[16:08:30] <mgedmin> nomike: maybe there's a topological sort method?
[16:08:45] <mgedmin> nomike: https://networkx.org/documentation/stable/reference/algorithms/generated/networkx.algorithms.dag.topological_sort.html
[16:09:08] <soxfoxrox> graingert, just a moment.
[16:09:27] *** Joins: Gleo_ (~Gleo_@2406:3003:2005:3a48:8d75:7aee:bd1e:3ddb)
[16:09:45] <nomike> Unfortunately not. And I fond a stackoverflow post which recommends exactly what I'm doing. The weird thing is that the order of the output is depandand on the order of the lines 7-11. So if I define the edges in another order, the result is different. And that's weird. My understanding of graph theory might be limited, but at least this I thought shouldn't make a difference.
[16:10:10] <habnabit> nomike, edges aren't normally ordered
[16:10:13] *** Joins: nyah (~nyah@90.221.186.180)
[16:10:37] <habnabit> nomike, i mean, there's not really a way to break a tie if two edges are equally, uh, depended on
[16:10:41] <Yhg1s> nomike: dependencies only give you partial ordering.
[16:11:59] *** Joins: Julian (~tos9@151.66.53.132)
[16:12:14] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 244 seconds)
[16:12:51] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[16:14:26] <nomike> mgedmin, this was the right hint. topological_sort gives me exactly what I want.
[16:14:37] *** Quits: istevenmon (~istevenmo@234.151-64-87.adsl-dyn.isp.belgacom.be) (Quit: Client closed)
[16:15:04] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 245 seconds)
[16:15:20] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[16:16:24] *** Joins: gzano (~Anigozant@110.141.227.202)
[16:16:34] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 272 seconds)
[16:17:31] *** Joins: dhanesh (~Dhanesh@117.195.27.134)
[16:18:42] *** gzano is now known as gandalf
[16:18:49] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 245 seconds)
[16:19:23] <soxfoxrox> graingert, here is an attempt to illustrate the problem I'm trying to solve: https://bpa.st/6BWQ The for loop is very incomplete because I can't wrap my mind implementing a connection between the current depth of the hierarchy and the current location to save in the dictionary.
[16:21:48] *** Joins: wyclif (~wyclif@user/wyclif)
[16:23:51] *** Quits: omen (~omen@user/omen) (Quit: Leaving)
[16:24:12] <raxor2k> graingert: yes. I want to keep writing to the CSV WITHOUT the docker container refreshing. I want the docker container to refresh only when i upload new python files, not when i make changes to csv
[16:24:57] *** Joins: omen (~omen@user/omen)
[16:25:02] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[16:25:09] *** Quits: gandalf (~Anigozant@110.141.227.202) (Quit: Client closed)
[16:25:23] *** Joins: Julian (~tos9@151.66.53.132)
[16:25:24] <graingert> Crys: why doesn't https://docs.python.org/3.10/library/ssl.html#ssl.OP_NO_SSLv2 raise a deprecation warning?
[16:25:59] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[16:26:20] *** Joins: Paul (~Paul@user/paul)
[16:28:05] *** Joins: feriman (~feriman@188.163.113.127)
[16:28:58] *** Joins: zeden (~zeden@user/zeden)
[16:30:08] *** Joins: saku (~saku@2a01:4f8:c0c:7d0::2)
[16:31:02] <Crys> graingert: check the value of the constant
[16:31:28] <graingert> it's
[16:31:29] <graingert> uh
[16:31:30] <graingert> ssl.OP_NO_SSLv2
[16:31:41] <graingert> >>> ssl.OP_NO_SSLv2
[16:31:41] <graingert> ssl.OP_NO_SSLv2
[16:31:44] *** Quits: jazzy (~jaziz@2600:380:4547:d128:9497:ff4e:a49b:d10b) (Ping timeout: 245 seconds)
[16:31:54] <Crys> >>> int(ssl.OP_NO_SSLv2)
[16:31:54] <Crys> 0
[16:31:59] *** Quits: Julian (~tos9@151.66.53.132) (Quit: leaving)
[16:32:35] <graingert> can you do a __getattribute__ in the ssl.py for those?
[16:32:39] <Crys> bitwise OR with 0 does not modify the value
[16:33:21] <Crys> graingert: Not possible with IntEnum._convert_()
[16:34:12] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[16:34:27] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 244 seconds)
[16:34:31] <mgedmin> what about a module-level __getattr__()?
[16:35:20] <mgedmin> https://www.python.org/dev/peps/pep-0562/ even uses emitting deprecation warnings as the rationale
[16:35:26] *** Joins: feriman (~feriman@188.163.113.127)
[16:36:03] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[16:36:16] <Crys> mgedmin: also not (easily) possible with IntEnum._convert_()
[16:36:31] *** Quits: nomike (~nomike@vpn.vie.paysafecorp.net) (Ping timeout: 244 seconds)
[16:36:37] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:36:40] <Crys> mgedmin: IntEnum._convert_() populates the module dict with values, so __getattr__ does not trigger
[16:36:41] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[16:36:49] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:02] <graingert> del it
[16:37:17] <raxor2k> graingert: ?
[16:37:50] <graingert> _OP_NO_SSLv2 = OP_NO_SSLv2; del OP_NO_SSLv2
[16:37:50] <graingert> def __getattr__(...): if name == "OP_NO_SSLv2":
[16:38:47] <mgedmin> _deprecated_names = ['OP_NO_SSLv2', ...]; for _name in _deprecated_names: globals()[f'_deprecated_{_name}'] = globals().pop(_name); def __getattr__(name): ...
[16:39:43] <graingert> yeah you've got to surface this warning somehow
[16:39:53] *** Joins: biozz (~biozz@178.57.22.163)
[16:39:56] <graingert> Crys: maybe you could have an enum entry for DEPRECATED
[16:40:31] *** Joins: manti7 (~manti7@176.10.104.94)
[16:40:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[16:40:40] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:40:52] *** Joins: p-i- (~Ohmu@node-10tj.pool-118-173.dynamic.totinternet.net)
[16:40:57] *** Joins: thinkofher (uid503725@user/thinkofher)
[16:41:04] <raxor2k> graingert: can i use -v switch ?
[16:41:21] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:41:28] *** Quits: samhain (~samhain@78.46.128.136) (Quit: ZNC - https://znc.in)
[16:41:36] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[16:41:45] <Crys> graingert / mgedmin: it's not going to help if users use ssl.Options.OP_NO_SSLv3
[16:42:11] <graingert> Crys: yeah make it an alias to ssl.Options.DEPRECATED
[16:42:33] <Crys> There are certain limitations to deprecations
[16:42:39] *** Joins: samhain (~samhain@2a01:4f8:190:62ea::2)
[16:42:52] <graingert> Crys: where is ssl.Options defined?
[16:42:56] *** Quits: Gleo_ (~Gleo_@2406:3003:2005:3a48:8d75:7aee:bd1e:3ddb) (Ping timeout: 250 seconds)
[16:43:04] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Ping timeout: 252 seconds)
[16:43:34] <graingert> ah PyModule_AddIntConstant
[16:43:43] <Crys> graingert: nope
[16:43:45] <Crys> graingert: _IntFlag._convert_('Options', __name__, lambda name: name.startswith('OP_'), source=_ssl)
[16:43:57] <graingert> oh that makes an Options class
[16:44:08] <graingert> and swaps the int with the flag from the Options class
[16:44:16] <Crys> It creates an enum class, populates it, puts the class and members into the module space
[16:44:28] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[16:44:34] <Crys> graingert: almost, it creates both ssl.Options and ssl.OP_NO_SSLv3
[16:44:48] <graingert> ah >>> _ssl.OP_NO_SSLv3
[16:44:50] <graingert> ok
[16:45:03] <graingert> how does it get set to 0?
[16:45:18] <graingert> that's 33554432 to me
[16:45:27] <Crys> graingert: read the ticket comment :)
[16:45:37] <Crys> graingert: ctx.options |= ssl.OP_NO_SSLv2 and ctx.options |= ssl.OP_NO_SSLv3 are no-ops and don't modify the value of ctx.options. OP_NO_SSLv2 == 0 and OP_NO_SSLv3 is set by default:
[16:45:47] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[16:45:51] <Crys> >>> ctx.options
[16:45:51] <Crys> ssl.OP_NO_COMPRESSION|ssl.OP_ENABLE_MIDDLEBOX_COMPAT|ssl.OP_CIPHER_SERVER_PREFERENCE|ssl.OP_NO_SSLv3|0x80000054
[16:45:52] <graingert> which ticket?
[16:46:22] <Crys> bpo-44354
[16:47:03] *** Quits: VaniaPy (~VaniaPy@46.12.108.72.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[16:47:23] <Crys> Int flags are annoying. I can only issue deprecation warnings when somebody modifies the options with a deprecated value. But OP_NO_SSLv3 is set by default.
[16:47:25] <graingert> ah just got the mail for it
[16:47:37] <Crys> OP_NO_SSLv2 is also set by default, but that's 0
[16:48:00] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[16:48:21] <graingert> it's been deprecated since 3.6, should be AttributeError in 3.8+?
[16:48:48] <Crys> Nope
[16:48:54] <graingert> 3.12?
[16:49:14] <raxor2k> well i should ask on stack overflow then
[16:49:26] <graingert> oh >  It's fine to wait more than two releases.
[16:49:58] <Crys> graingert: yes, I was not able to remove this flag because it was still required for OpenSSL 1.0.2.
[16:50:13] <Crys> 3.10 is the first release I can issue a deprecation warning.
[16:50:15] <graingert> oh joy deprecated and required
[16:50:31] <Crys> It was required for 1.0.2 and deprecated in 1.1.0.
[16:51:20] <graingert> it was deprecated in 3.6: https://docs.python.org/3.6/library/ssl.html#ssl.OP_NO_SSLv2
[16:51:32] <graingert> and you're saying it was also required?
[16:52:18] <Crys> It was required for deprecated OpenSSL version.
[16:52:37] *** Joins: kenoba7 (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[16:53:09] *** Joins: wyclif (~wyclif@user/wyclif)
[16:53:36] *** Joins: adinfinitum (~user@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[16:53:59] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Ping timeout: 272 seconds)
[16:54:00] *** kenoba7 is now known as kenoba
[16:54:49] <Crys> SSL module deprecations follow OpenSSL API deprecations. OpenSSL 1.1.0 introduced a new API and deprecated the old API, so I did the same for Python's ssl module. It took a bit longer to get rid of deprecated OpenSSL version. PEP 644 finally landed in 3.10 and I could start to issue active deprecation warnings for old APIs.
[16:55:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:55:34] <merijn> So, what happens if two different packages install submodules (with different names) of the same module.foo.bar prefix? Does that break hopelessly?
[16:55:50] <Yhg1s> merijn: no, it should work just fine.
[16:56:14] <merijn> In that case: Anyone suggestions on appropriate ways to debug ModuleNotFoundErrors? ;)
[16:56:28] <bjs> merijn: explain the details here? :)
[16:56:49] <Yhg1s> merijn: look at the error, look at the module it was trying to import, find the pacakge it was supposed to be in, see if you can import that package, print it to make sure it's finding the directory/file you expected it to find.
[16:56:55] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d)
[16:57:09] <graingert> Crys: you've got to make it issue a Warning somehow
[16:57:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:58:32] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[16:58:37] *** Joins: Gerula_ (~Gerula@user/gerula)
[16:58:37] *** Gerula is now known as Guest9898
[16:58:37] *** Quits: Guest9898 (~Gerula@user/gerula) (Killed (tin.libera.chat (Nickname regained by services)))
[16:58:37] *** Gerula_ is now known as Gerula
[16:59:04] <kek_> hi
[16:59:26] <kek_> so apparently, numpy uses blas etc. in the background thus it should scale on a multi-core machine right?
[16:59:29] <merijn> bjs: The details involve: making the poor life choices leading to being involve with packaging >.> Basically, I have a parent package Foo, that has several "subpackages" that install their own modules inside the module hierarchy of foo. I'm (trying to) package these for another package manager. Ideally, I *don't* want the modules of "foo-sub1" ending up in the installation dir of "foo" itself, because
[16:59:35] <merijn> that'd make uninstalling "foo-sub1" nearly impossible
[17:00:15] <bjs> is this finally a case where namespace packages actually do something helpful
[17:00:26] <merijn> bjs: So I've been messing around to see if I can make the modules of "foo-sub1", "foo-sub2", etc. visible to the virtualenv that has "foo", without directly installing stuff inside the "foo" virtualenv
[17:00:29] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 245 seconds)
[17:01:30] <merijn> But, eh, the documentation on the exact details on how module resolution, virtualenv, etc. all fit together is...buried under 20 pages of blogposts "explaining" how to create a virtualenv >.>
[17:01:45] *** Quits: soxfoxrox (~soxfoxrox@80.71.131.255) ()
[17:02:11] <Crys> graingert: Did I miss any rule or requirement that forced me to do that?
[17:02:16] *** Quits: Gerula (~Gerula@user/gerula) (Client Quit)
[17:02:50] <merijn> I somewhat naively thought I could maybe make it work by strategic deployment of .pth files between virtualenvs, but while the right site-packages directories show in sys.path, I can't actually import the relevant modules
[17:02:51] <mgedmin> merijn: "namespace packages" is the keyword to google
[17:02:59] <graingert> Crys: PEP 387?
[17:03:07] <very_sneaky> merijn: i think it might be helpful if you gave code samples for how you're importing your submodules along with a directory structure?
[17:03:15] <mgedmin> different pip packages installing stuff (modules/subpackages) under the same python package
[17:03:24] *** Quits: Flux (~Fluxx@user/fluxx) (Ping timeout: 245 seconds)
[17:03:32] <merijn> mgedmin: Ah, that looks useful, but longer term
[17:03:48] *** Joins: kek_1 (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0036.v6.ethz.ch)
[17:03:50] <kek_1> sry dced
[17:03:54] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d) (Ping timeout: 244 seconds)
[17:04:13] <Crys> graingert: PEP 387 says that DeprecationWarning is a "should", not a "must".
[17:04:28] <mgedmin> there are two, I dunno, versions? of namespace packages -- the old one, provided by setuptools, where you have a tiny __init__.py in each pip package that does pkg_resources.declare_namespace(__name__)
[17:04:55] <mgedmin> and the new one (PEP 420), introduced in python 3.somethingearly, where no __init__.py can exist in the namespace package itself
[17:04:56] <merijn> mgedmin: Because that'd redoing the entire current packaging. Which is desperately needed, but I need to make time for that first :)
[17:05:23] <mgedmin> as for uninstallation, pip install records every installed file, and pip uninstall removes them
[17:05:38] <mgedmin> so you're fine, as long as no two of your pip packages try to ship the same file
[17:05:51] <mgedmin> (namespace package __init__.py is an exception to this rule)
[17:05:53] <merijn> mgedmin: Yes, but the package tool I am packaging for doesn't support calling something like pip when uninstalling
[17:06:29] *** Joins: JavaBean (~JavaBean@user/javabean)
[17:06:35] *** Joins: kenoba8 (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[17:07:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[17:07:51] <merijn> very_sneaky: Basically, I have a virtualenv where I install "foo". Then I create a separate virtualenv, drop a .pth pointing to the original virtualenv, then install "foo-sub1" without dependencies. This actually works when I activate the "foo-sub1" virtualenv
[17:08:21] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Ping timeout: 252 seconds)
[17:08:21] *** kenoba8 is now known as kenoba
[17:08:26] <mgedmin> oh my
[17:08:45] <graingert> Crys: ok you should make it warn somehow
[17:08:48] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[17:09:40] <graingert> Crys: when did IntEnum stop including the value in the repr?
[17:09:43] <graingert> >>> ssl.OP_NO_SSLv2
[17:09:43] <graingert> <Options.OP_NO_SSLv2: 0>
[17:09:45] <Crys> graingert: Python only warns when you use a deprecated API, not when you access a deprecated function object. getattr(module, "deprecated_function") typically does not warn.
[17:09:47] <merijn> very_sneaky: But in the ideal scenario I'd be able to load the original "foo" virtualenv and find "foo-sub1" through "foo-subN". But simply dropping a .pth for the others in the original virtualenv doesn't work, which is a shame, because nuking parts individually would be trivial like that
[17:10:19] <Crys> graingert: deprecation warnings are not perfect.
[17:10:38] <Crys> graingert: in 3.10
[17:10:41] <merijn> mgedmin: For the restriction of "don't install stuff in the same directory tree" it works surprisingly well :p
[17:10:42] <graingert> is ssl.OP_NO_SSLv2 always 0 on 3.6+ ?
[17:10:53] <Crys> graingert: no, it depends on your OpenSSL build
[17:11:11] *** Joins: Gerula (~Gerula@user/gerula)
[17:11:41] *** Joins: wyclif (~wyclif@user/wyclif)
[17:11:45] <graingert> but 3.10+ it's always 0
[17:11:54] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:12:10] *** Quits: Gerula (~Gerula@user/gerula) (Remote host closed the connection)
[17:12:11] <Crys> graingert: it really depends on your OpenSSL version and build.
[17:12:31] *** Joins: Gerula (~Gerula@user/gerula)
[17:12:40] <Crys> It's 0 for typical OpenSSL 1.1.0 builds.
[17:12:56] *** Parts: siege (~obriencj@bouncer.preoccupied.net) (Ping timeout: -1 seconds)
[17:13:03] <graingert> typical
[17:13:11] <Crys> Distros tend to do funky stuff with OpenSSL.
[17:13:24] <graingert> probably gonna patch out any AttributeErrors
[17:13:32] <graingert> if you add them on 3.12
[17:13:38] <Crys> I stopped support TLS 1.0 and 1.1 because Ubuntu's downstream patches were broken assumptions.
[17:13:56] <Crys> were breaking
[17:16:40] *** Quits: biozz (~biozz@178.57.22.163) (Read error: Connection reset by peer)
[17:17:02] *** Joins: biozz (~biozz@178.57.22.163)
[17:19:20] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[17:19:38] <graingert> :(
[17:19:49] *** Joins: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net)
[17:19:50] *** Joins: locsmif (~none@h31050.upc-h.chello.nl)
[17:21:10] <locsmif> After retrieving an URL with requests, which may or may not have been redirected, is there a method I can call to retrieve the current base url? If I try to parse the string myself with e.g. urllib.parse, I'd still miss any 302 redirects which may have changed the original url visited
[17:21:34] <Crys> The downstream patch broke stuff for a reason -- it was there approach to work around a DTLS policy bug that they kept to themselves. They knew that other vendors had an issue and didn't tell them.
[17:21:47] <Crys> s/there/their/
[17:22:03] *** Joins: redgloboli (~redglobol@user/redgloboli)
[17:22:10] <Crys> it's too warm for proper grammar today :(
[17:22:15] <habnabit> locsmif, it should be in response.history
[17:22:55] *** Joins: damoreno (~damoreno@redhat/damoreno)
[17:23:31] *** Quits: p-i- (~Ohmu@node-10tj.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[17:23:51] <locsmif> And the current url after all redirects have complete is request.url, right?
[17:23:56] <locsmif> completed*
[17:24:35] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:24:42] <damoreno> hey. I have this dataclass https://bpa.st/HQ5Q and I'm seeing a behaviour I don't understand. Every time I create an object, that object has a 'shape' field. I'm not even passing anything, just (). Where is that 'shape' coming from?
[17:25:06] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:25:08] <habnabit> damoreno, where do you see it?
[17:25:25] <locsmif> Is there a convenience function to get the base url to add the links on the currently downloaded HTML content to? So you can get: (base) http://some.url.com and (path) /some/where/something and concatenate the two?
[17:25:26] <Yhg1s> damoreno: your __getattr__ method means your object has every attribute but '_data'.
[17:25:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:25:43] <habnabit> locsmif, urllib.parse.urljoin
[17:25:48] <Yhg1s> (why would you have a dataclass with that kid of __getattr__?)
[17:25:50] <damoreno> habnabit: in the debugger
[17:25:56] <locsmif> habnabit: thank you
[17:26:57] <damoreno> Yhg1s: yep, I know. I want to generate fields that come in _data
[17:27:07] *** Quits: kek_1 (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0036.v6.ethz.ch) (Quit: Leaving)
[17:27:15] <habnabit> damoreno, so what's unexpected about 'shape'?
[17:27:36] <damoreno> habnabit: where is it coming from? I'm not setting it
[17:27:52] <habnabit> damoreno, presumably L16 or L21
[17:28:32] <Yhg1s> damoreno: I can only suggest you *don't* do this, but if you must, that you don't pretend it's a dataclass (because you're stacking so much on top of it), and if you insist on using __getattr__ for this instead of setting attributes based on what's in _data, that you properly raise AttributeError for things that shouldn't be attributes.
[17:29:45] <damoreno> Yhg1s: yeah, I should remove that dataclass. And yeah, I must have this code unfortunately
[17:30:36] <Yhg1s> well, _this_ code is a problem, because you're not doing the right thing in __getattr__. It's not clear that you actually need __getattr__. Why can't you just set attributes like normal?
[17:31:49] *** Joins: edocod (~edocod@user/edocod)
[17:31:53] <edocod> Hello!
[17:34:57] <damoreno> habnabit: those lines are never executed and I still get `shape`. I removed the dataclass annotation and it seems that it happens in line 32 when it's called to set a default value for _data
[17:35:03] *** Joins: viktorivan (~ivan@187.223.103.108)
[17:35:17] <Yhg1s> damoreno: as I said before, your __getattr__ means all attributes exist.
[17:36:10] <damoreno> Yhg1s: all attributes accesed, I know. But yeah, I could change it so you cannot set new attributes once created
[17:36:46] <edocod> I'm using python embeddable to create a portable app on Windows. However, there are some modules I'd need that need to be compiled (they are not fully python). Is there something that can create a portable virtualenv on Windows?
[17:37:09] <edocod> On Linux i usually use virtualenvs but AFAIK those are bound to the folder they reside in and will not like being moved around on another filesystem
[17:38:28] *** Joins: soxfoxrox (~soxfoxrox@80.71.131.255)
[17:38:37] *** Joins: wyclif (~wyclif@user/wyclif)
[17:39:07] <mgedmin> yes
[17:39:23] <mgedmin> is py2exe still a thing?
[17:40:08] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:42:06] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Quit: Leaving)
[17:42:36] <soxfoxrox> I am trying to create a list of dictionaries where each dictionary has a nested list in a for loop. I am possibly using the wrong method to add entries to the list, since the first list entry is updated when I am really trying to add new entries. Can anyone help me clear up what's going wrong? Working example of faulty code here: https://bpa.st/CDFA
[17:43:46] <SnoopJ> edocod, venvs aren't really portable, but you can vendor your dependencies along with the runtime and configure that runtime so that its search path includes those modules. Probably you want a pyvenv.cfg or python._pth (or pythonXY._pth where XY is the version of the .dll). Details here: https://docs.python.org/3/using/windows.html#finding-modules
[17:43:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:44:00] <graingert> Crys: the BPO and PR say that you do show deprecation warnings for ssl.OP_NO_SSLv2 etc https://bugs.python.org/issue43880 so I think it's a legit bug
[17:44:02] <edocod> mgedmin, it looks like py2exe still exists yeah, but what if i want to keep the original scripts to modify it later?
[17:44:39] <Crys> graingert: it's not fixable
[17:44:45] <mgedmin> edocod: build windows wheels of the things you want, then create the virtualenvs and pip install stuff from wheels?
[17:45:16] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:45:34] <edocod> mgedmin, that doesn't make it portable though, it would need an install script for every time i move it to a different computer (i guess?)
[17:45:43] *** Joins: hrtk (~hritik@223.226.188.53)
[17:45:45] <nedbat> soxfoxrox: change line 40 to this:  'location': list(hierarchy_location)
[17:45:49] <edocod> SnoopJ's suggestion looks nice
[17:45:52] <nedbat> soxfoxrox: change line 40 to this:  'location': list(hierarchy_location),
[17:46:15] <hrtk> is there a way in isort to make it *only* sort imports and not change the way they were written ?
[17:46:21] <nedbat> soxfoxrox: that's the entry that is going wrong, correct?
[17:46:38] <mgedmin> edocod: yes
[17:46:56] <hrtk> it is bringing inconsistent imports to entire project. Somewhere using multiline imports, somewhere using single line with commas.
[17:46:57] <soxfoxrox> nedbat, thanks, and yes. Can you explain why my solution was wrong? Why do I need to convert a list to a list?
[17:47:20] <edocod> Thanks ^^
[17:47:25] <nedbat> soxfoxrox: your line didn't make a new copy of the list, it just referred to the list, and then you continued changing the list.
[17:47:36] <soxfoxrox> nedbat, oh!
[17:47:39] <nedbat> soxfoxrox: my line makes a copy.  there are other ways to copy also.
[17:48:27] <soxfoxrox> nedbat, I get it now, I think. I thought once I added "chapter_data" to "chapter_list", 'location' wouldn't change anymore.
[17:48:49] *** Parts: Crys (~Tiran@python/psf/tiran) (Leaving)
[17:49:37] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:50:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[17:54:32] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[17:54:50] *** Joins: wyclif (~wyclif@user/wyclif)
[17:55:55] *** Joins: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net)
[17:56:56] *** Joins: timkofu (~timkofu@user/timkofu)
[17:57:02] *** Quits: edocod (~edocod@user/edocod) (Quit: Leaving)
[17:57:39] *** Quits: timkofu (~timkofu@user/timkofu) (Client Quit)
[17:58:39] *** Joins: PdimH (~pdimh@user/pdimh)
[17:59:54] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Read error: Connection reset by peer)
[17:59:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:00:14] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[18:01:03] *** Joins: dme86 (~dan@user/dan86)
[18:04:14] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 245 seconds)
[18:05:17] <graingert> hrtk: maybe you want https://github.com/asottile/reorder_python_imports
[18:05:54] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 245 seconds)
[18:06:21] *** Joins: timkofu (~timkofu@user/timkofu)
[18:06:27] *** Joins: txtsd (~txtsd@user/txtsd)
[18:06:46] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[18:06:49] <mgedmin> isort is very configurable, with the downside is that you have to configure it to get it to do what you want
[18:07:20] <mgedmin> (mostly; I still haven't managed to teach it to put the right number of blank lines after all the imports sections)
[18:08:10] *** Joins: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[18:09:12] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[18:09:18] *** Joins: ZedHedTed (~ZedHedTed@pool-98-118-47-241.bstnma.fios.verizon.net)
[18:09:23] *** Quits: soxfoxrox (~soxfoxrox@80.71.131.255) ()
[18:09:35] *** Quits: samhain (~samhain@2a01:4f8:190:62ea::2) (Quit: ZNC - https://znc.in)
[18:09:52] *** Joins: samhaingrim (~samhain@bleedangel.com)
[18:11:00] *** Joins: wyclif (~wyclif@user/wyclif)
[18:11:03] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 252 seconds)
[18:11:23] *** Joins: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[18:11:29] *** Joins: txtsd (~txtsd@user/txtsd)
[18:11:44] *** Joins: mrgz (~mrgz@187.38.4.190)
[18:13:23] <locsmif> Is pip not installed alongside Python 3 by default on the newest Debian/Ubuntu releases ?
[18:13:35] <locsmif> I just tried on a Hirsute release and it wasn't there :(
[18:13:49] <grym> locsmif: https://gist.github.com/tiran/2dec9e03c6f901814f6d1e8dad09528e
[18:13:52] <graingert> locsmif: yes, because you don't need it
[18:14:07] <graingert> locsmif: use python3 -m venv path/to/your/project/.venv
[18:14:21] <graingert> then `path/to/your/project/.venv/bin/python -m pip install whatever`
[18:14:26] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[18:14:37] <graingert> locsmif: you need `apt install python3-venv` to use venv of course
[18:14:43] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 268 seconds)
[18:15:19] <locsmif> The context is slightly different. I'm trying to use Ansible's pip module to automate the installation of my python script's prequisites on two remote VMs
[18:15:28] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[18:15:30] <locsmif> But since pip isn't there, it fails
[18:15:32] <graingert> locsmif: create a shiv
[18:15:39] <graingert> locsmif: and copy the shiv over
[18:15:39] <locsmif> grym: thanks, interesting
[18:15:51] <graingert> locsmif: https://shiv.readthedocs.io/en/latest/
[18:15:55] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[18:15:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:16:25] <graingert> locsmif: shiv turns a python package and collection of deps into a single file executable
[18:16:29] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[18:16:37] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:16:45] <beeza> don't use debian/ubuntu
[18:16:48] <beeza> simple
[18:16:56] <webknjaz> @locsmif: you could create a venv and point `pip_executable` there. Ansible Git module supports that. Or add a task that installs something like `python3-pip` before that (although, I wouldn't recommend mutating system-wide installs like that)
[18:17:05] <locsmif> graingert: hmm, I thought I'd seen them all by now ;-) (cx_freeze, zipapp, etc.)
[18:17:07] <graingert> don't run pip on your production environment
[18:17:11] <locsmif> graingert: thanks for the tip!
[18:17:16] <locsmif> I'll get on it
[18:17:23] <graingert> locsmif: shiv is a bit nicer as it's just a self extracting virtual environment
[18:17:37] <graingert> locsmif: even better is appimage/docker/linuxkit etc
[18:18:05] <graingert> your deployment process should just be to slap a flat file on a box and launch it
[18:18:13] <locsmif> graingert: it sorta has to work with Ansible's script module but I see I'm getting other tips above in that regard as well
[18:18:31] <graingert> you can just use ansible to copy the file to your server
[18:18:35] <graingert> then you `./` it
[18:18:58] <locsmif> Oh, the script module takes care of that, automatically :) shouldn't matter if it's a shiv, I think?
[18:19:25] <locsmif> Come to think of it, no, I probably shouldn't run pip on these remote VMs
[18:19:44] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[18:19:50] <graingert> they should not reach out to the internet at all if possible
[18:20:06] <graingert> if possible you should deploy by building and booting an iso
[18:20:13] <locsmif> Certainly not outside of a venv.. As for Docker.. etc. unfortunately I'm not that experienced with it yet. It's embarrassing, I know.
[18:20:46] *** Quits: dhanesh (~Dhanesh@117.195.27.134) (Quit: Leaving)
[18:21:05] <locsmif> graingert: at first we considered that, yes, but we got a bit stuck given the deprecation of PxE automated installations by Ubuntu
[18:21:20] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[18:21:55] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[18:22:06] *** Joins: dme86 (~dan@user/dan86)
[18:22:12] <locsmif> They have an alternative where you seed the ISO directly, true, but we haven't had time to look into that yet, so for now, we're using templates and I keep reverting snapshots to test if the playbooks run from scratch without a hitch. Still probably an inefficient workflow, but I'm learning as I go, essentially
[18:22:49] <locsmif> I think a shiv could be an elegant in-between solution for now
[18:24:07] *** Joins: Payam (~Payam@138.106.57.132)
[18:24:10] <Payam> hi
[18:24:14] <locsmif> I suppose requests and bs4 might be regarded as 'bloat' for default python installations, but it would certainly be nice if they were present by default. Can't say I blame a distributor for not going there though
[18:24:58] <Payam> how do I show that the typ of input to a function is of a certain type `def fun(listofObject: list<objectS>)`
[18:26:28] *** Quits: nichlas (nichlas@gateway/vpn/protonvpn/nichlas) (Quit: WeeChat 3.1)
[18:26:54] <supakeen> Payam: `def fun(listOfObject: list[object])` in python3.9+ and `from typing import List; def fun(listOfObject: List[object])` in < python3.9
[18:27:34] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Quit: Konversation terminated!)
[18:27:54] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[18:28:27] *** Joins: ckpro (~ckpro@103.106.181.67)
[18:28:38] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[18:28:39] *** Joins: wyclif (~wyclif@user/wyclif)
[18:29:00] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:29:33] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Client Quit)
[18:29:57] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[18:30:23] *** Quits: pgib (~textual@173.38.117.92) (Ping timeout: 244 seconds)
[18:30:23] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[18:30:49] <graingert> Payam: remember to run `mypy --strict .` in CI as these types won't be checked at runtime
[18:31:07] <graingert> supakeen: you can use list[object] in 3.7+ with `from __future__ import annotations`
[18:32:24] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:32:45] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:33:06] *** Quits: damoreno (~damoreno@redhat/damoreno) (Quit: leaving)
[18:33:17] *** Joins: p-i- (~Ohmu@node-10tj.pool-118-173.dynamic.totinternet.net)
[18:33:33] <locsmif> graingert: I keep getting: No entry point './get_mysql_repo_deb.py' found in console_scripts or the bin dir!
[18:33:42] <Payam> graingert if I have a async method I need to call it from an async method right? what if I want to call the asyns method that calls an other async method? do I need to go async all the time?
[18:33:52] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:33:56] <graingert> Payam: usually - show your code?
[18:34:13] <graingert> locsmif: you probably didn't pass an entry point it should.look.like:this
[18:34:23] <Payam> I don't have any code but I am about to start. just wondering if it is possible. but I can tell you my problem and the solution that I have in mind
[18:34:25] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[18:34:28] <graingert> locsmif: eg locsmif.cli:main
[18:35:08] <graingert> locsmif: https://github.com/twisted/twisted/blob/trunk/setup.cfg#L128-L130
[18:35:21] <graingert> Payam: ok
[18:36:27] *** Joins: cdown_ (~cdown@89.32.122.5)
[18:36:32] *** Joins: Schnouki (~schnouki@user/schnouki)
[18:36:39] <graingert> Payam: have a read of https://trio.readthedocs.io/en/stable/tutorial.html
[18:36:46] <graingert> it explains async functions very well
[18:37:47] <Payam> so I have 10 repos and in each repo I have to change a file and commit that file. but this should be done in order; the first 8 repos can be cloned simutanoulsy. After they are cloned then I have to modify that file in them. When this is done then I need to clone the remaining 2 in parallel and write to them as the first 8 repos and then commit the
[18:37:48] <Payam> files. so my idea is to first Clone the 8 one, as soon as each repo is cloned, without waiting for other ones to be cloned, go into the repo and change the file. repeat this until the first 8 repos are done and then do the same procedure for remaining 2
[18:38:01] <graingert> Payam: use all-repos
[18:38:13] <graingert> or just use one git repo
[18:38:34] <graingert> Payam: https://github.com/asottile/all-repos
[18:38:35] <Payam> they are repos on Gitlab .
[18:38:57] *** Asmodee[T] is now known as liberaTor
[18:39:00] <graingert> all-repos supports Gitlab
[18:39:34] <Payam> I try to be discrete and not leak information. but I will do it this time. so I need to branch each repo without cloning them on Gitlab. Change a file and commit changes.
[18:39:42] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[18:39:42] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 272 seconds)
[18:39:50] <Payam> What I want to know is how do I set up threads here
[18:39:58] <graingert> threads?
[18:40:20] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[18:40:23] <Payam> yes. I would like to do the branching in a thread and as soon that is done then change a file in an other thread
[18:41:01] <graingert> just use a monorepo
[18:41:08] <Payam> I was thinking of async
[18:41:15] <Payam> monorepo?
[18:41:52] <Payam> I use the gitlab api for branching and so on
[18:42:28] *** Joins: fofoni (~fofoni@user/fofoni)
[18:43:28] *** Quits: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:44:41] *** Quits: kmh (~kmh@p200300df5f2f6b00618497f9f416d927.dip0.t-ipconnect.de) (Quit: Leaving)
[18:45:57] <graingert> how does this relate to async functions Payam ?
[18:46:18] <Payam> asyncio I was thinking of
[18:46:19] *** Quits: lightdot (~weechat@user/lightdot) (Ping timeout: 245 seconds)
[18:46:33] <graingert> I'd highly recommend trio
[18:46:33] <locsmif> graingert: honestly, I erm.. while I sort of know what an entry point is from assembly programming, I don't really know what is meant here. Should I create a .cfg? My script is procedural and doesn't really have an entry point other than straight lines of code? It's too small to contain defs, or should I make them? And how does the dot notation apply to my script? Bit confused here
[18:46:55] <graingert> locsmif: the dots is the package name
[18:47:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[18:47:16] *** Joins: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[18:47:48] <graingert> locsmif: so you'd use `-e file_name:main`
[18:47:53] <graingert> and you'd make a `def main():`
[18:47:57] <graingert> and you put your code in there
[18:48:01] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[18:48:02] <graingert> and return an int returncode
[18:48:02] <locsmif> alright
[18:48:05] *** Joins: lightdot (~weechat@user/lightdot)
[18:48:18] <graingert> no `.py` in the module_name:main sorry
[18:48:37] <locsmif> Ok, going to try again :)
[18:48:55] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[18:49:40] *** Quits: ZedHedTed (~ZedHedTed@pool-98-118-47-241.bstnma.fios.verizon.net) (Quit: reboot)
[18:49:44] *** Joins: qlixed (~qlixed@2800:810:471:2f8::1b7)
[18:50:08] *** Quits: mrgz (~mrgz@187.38.4.190) (Ping timeout: 264 seconds)
[18:51:40] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[18:51:47] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[18:52:14] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[18:52:38] *** Joins: xkuru (~xkuru@user/xkuru)
[18:54:25] <locsmif> graingert: seems that this worked: shiv -e get_mysql_repo_deb:main -o get_mysql_repo_deb.pyz requests bs4
[18:54:33] *** Quits: doko (~doko@2a02:8106:1a:7600:6e96:c938:447f:c673) (Remote host closed the connection)
[18:54:46] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:55:36] *** Quits: lightdot (~weechat@user/lightdot) (Ping timeout: 252 seconds)
[18:56:44] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 264 seconds)
[18:56:45] <graingert> locsmif: you need to put your module into your dist
[18:57:01] *** Quits: jinsun_ (~jinsun_@182.77.87.72) (Quit: Quit)
[18:57:17] *** Joins: lightdot (~weechat@user/lightdot)
[18:57:41] <locsmif> graingert: in my dist?
[18:57:43] *** Quits: Schnouki (~schnouki@user/schnouki) (Remote host closed the connection)
[18:58:01] <graingert> yeah so make a dist directory and put your .py file in it
[18:58:05] <locsmif> Is the command not correct? I ran the .pyz and it worked? Problem is, Ansible balks and says it can't find a file
[18:58:08] *** Joins: Schnouki (~schnouki@user/schnouki)
[18:58:09] <graingert> then do `pipx run shiv --site-packages=dist -e get_mysql_repo_deb:main -o get_mysql_repo_deb.pyz requests bs4`
[18:58:32] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[18:58:35] <locsmif> oh
[18:58:36] <graingert> locsmif: presumably ModuleNotFoundError: No module named 'get_mysql_repo_deb'
[18:58:38] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[18:58:55] *** o is now known as niko
[18:58:55] *** Joins: wyclif (~wyclif@user/wyclif)
[18:59:01] <graingert> because you didn't make a package and put it on pypi.org you have to plonk it in your site-packages manually
[18:59:18] <locsmif> "stdout": "\r\n/bin/sh: 1: /home/xxxx/.ansible/tmp/ansible-tmp-1623335107.5589712-86136914025191/get_mysql_repo_deb.pyz: not found\r\n"
[18:59:31] <locsmif> modified only the xxxx bit
[18:59:36] <graingert> well that's a different ansible issue
[19:00:25] *** Joins: zebrag (~chris@user/zebrag)
[19:01:09] <locsmif> You put stuff in a files/ directory relative to the role's directory structure, and it is supposed to copy those. It might be that the extension matters. Namely: it did copy the .py before, however obviously it complained that dependencies were missing.
[19:01:18] <locsmif> Will try what you said and investigate further
[19:01:20] <Payam> graingert I was meaning asyncio
[19:01:41] <graingert> locsmif: you probably need `-p '/usr/bin/env python3.8'
[19:01:42] *** Quits: MikZyth (~MikZyth@188.65.243.35) (Ping timeout: 244 seconds)
[19:01:59] <graingert> Payam: I highly recommend trio
[19:02:00] *** Joins: mrgz (~mrgz@189.62.148.186)
[19:02:46] *** Quits: p-i- (~Ohmu@node-10tj.pool-118-173.dynamic.totinternet.net) (Quit: Leaving...)
[19:03:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:05:43] *** Joins: ^-^hi (~^-^hi@user/-hi/x-1729478)
[19:06:56] <^-^hi> i don't want python to care about invalid utf-8 of popen() output and just get the string. how can i do it?
[19:07:01] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[19:07:33] <grym> ^-^hi: decode the bytes properly
[19:07:50] <grym> there's no way around it
[19:08:32] *** Quits: bdulll4 (~bdulll4@185.206.172.213) (Ping timeout: 250 seconds)
[19:08:37] <^-^hi> how can I "decode the bytes properly"?
[19:08:53] <grym> stdout is bytes, right
[19:09:08] <grym> .decode('name-of-correct-encoding-here')
[19:09:54] *** Joins: cheater (~Username@user/cheater)
[19:10:16] <graingert> ^-^hi: you can use `text=False`
[19:10:40] <altendky> (and get bytes instead of a string)
[19:10:47] <graingert> ^-^hi: show your code?
[19:11:39] <graingert> ^-^hi: also if you just want the result you should not call Popen, use https://docs.python.org/3/library/subprocess.html#subprocess.run instead
[19:13:07] <^-^hi> https://termbin.com/p0h9
[19:14:07] <graingert> ^-^hi: yeah you want subprocess.run
[19:14:17] *** Joins: MikZyth (~MikZyth@188.65.243.35)
[19:16:25] *** Joins: wyclif (~wyclif@user/wyclif)
[19:16:32] *** Quits: mrgz (~mrgz@189.62.148.186) (Ping timeout: 264 seconds)
[19:17:31] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[19:17:43] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[19:19:40] <^-^hi> why don't they just support "rb" in popen
[19:20:56] <graingert> ^-^hi: try this? https://mypy-play.net/?mypy=latest&python=3.9&flags=strict&gist=0275572edbb8cf56dc3c8bc7457dd619
[19:21:20] *** Joins: ZedHedTed (~ZedHedTed@pool-98-118-47-241.bstnma.fios.verizon.net)
[19:21:26] <^-^hi> subprocess.run is what i call bad api. so many arguments and quite unclear in pydoc what i am supposed to put in stdin/stdout/whatever. impossible to find out unless you see some code snippet somewhere.
[19:21:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:21:33] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Leaving)
[19:21:48] <Payam> graingert but so you think that trio is a good solution for the thing that I want to do i?
[19:22:05] <graingert> Payam: trio is great for making concurrent http requests use `pip install httpx trio`
[19:22:31] <Payam> graingert okey thank you.
[19:22:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:23:07] <Payam> graingert I use the gitlab python api. and that in turn use http ofcourse. so trio would be a good solution you think?
[19:24:43] *** Parts: PdimH (~pdimh@user/pdimh) ()
[19:24:47] *** Joins: PdimH (~pdimh@user/pdimh)
[19:24:57] *** sco1_ is now known as sco1
[19:25:04] *** Joins: Meteorhead (~Meteorhea@165.225.205.20)
[19:25:19] <graingert> ^-^hi: probably better like this: https://mypy-play.net/?mypy=latest&python=3.9&flags=strict&gist=a5b0bf2d4ca7bdd6b6d2d56d1c3e1bad
[19:25:29] <graingert> ^-^hi: you shouldn't use `+` to make shell commands
[19:25:56] <locsmif> graingert: it worked, although I didn't need pipx run? Btw the environment I'm building this in is already a venv? I sort of see what pipx is for but was it required here?
[19:26:06] <graingert> locsmif: I use pipx to install shiv
[19:26:14] <locsmif> graingert: oh, right
[19:26:15] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 268 seconds)
[19:26:18] <^-^hi> graingert: why?
[19:26:29] <graingert> ^-^hi: easy to get the quoting wrong
[19:26:33] <graingert> using a list is better
[19:26:52] <locsmif> graingert: but then again, not even pipx is available on Ubuntu hirsute, so you even need to install that... :(
[19:27:03] <graingert> locsmif: yeah you have to install everything
[19:27:04] <locsmif> Anyways, it works, and I couldn't be happier, thank you!
[19:27:08] *** Quits: raxor2k (~raxor2k@158.39.193.127) ()
[19:27:10] <graingert> but you install pipx once and it works
[19:27:35] <graingert> ^-^hi: that's this bit: `[b"trans", b"-no-ansi", b"ru:en", w]`
[19:28:37] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[19:28:42] *** Joins: dcaro (~dcaro@user/dcaro)
[19:30:03] <ali1234> how do i check if i am at the end of a file without reading?
[19:30:15] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[19:30:25] <grym> what is the sound of one file handle clapping
[19:30:41] *** Joins: cheater (~Username@user/cheater)
[19:30:55] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[19:31:11] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Ping timeout: 268 seconds)
[19:31:34] *** Joins: biozz (~biozz@178.57.22.163)
[19:32:09] *** Joins: wyclif (~wyclif@user/wyclif)
[19:32:58] <graingert> ali1234: seek and tell
[19:33:07] <graingert> ali1234: uh no stat and tell?
[19:33:19] <graingert> ali1234: why would you want that though?
[19:33:26] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: leaving)
[19:33:56] <ali1234> because libflac requires me to implement a callback that returns it
[19:34:05] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[19:34:09] <graingert> ali1234: you can do https://docs.python.org/3/library/io.html#io.BufferedReader.peek
[19:34:17] <ali1234> https://xiph.org/flac/api/group__flac__stream__decoder.html#gacc214f6b3cdae1c0f98577267ce19bdd
[19:35:36] <ali1234> hmm actually i think i see how to do it. i just make the read callback set a flag if it hits the end of the file, and then return that flag
[19:36:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:36:07] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 268 seconds)
[19:36:10] <graingert> ali1234: that's how `feof(` works
[19:36:18] <ali1234> yeah
[19:36:23] <graingert> ali1234: https://mail.python.org/pipermail/python-dev/2001-January/011445.html
[19:36:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[19:36:48] <graingert> Note that stdio's feof() doesn't have this definition!  It is set when the last *read* (or getc(), etc.) stumbled upon an EOF condition.
[19:37:11] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Changing host)
[19:37:11] *** Joins: derelict (~winter@user/derelict)
[19:37:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:37:15] <ali1234> it's set before or after a call to read() returns exactly 0 bytes?
[19:37:40] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[19:38:02] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:38:16] <ali1234> hmm but then there's a seek callback too, and in that case i need to clear the flag
[19:39:32] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[19:39:59] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[19:40:10] <ali1234> there are also tell and length callbacks so i guess i can just return self.tell() == self.length()
[19:40:15] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[19:40:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[19:40:52] *** Quits: derelict (~winter@user/derelict) (Quit: WeeChat 3.1)
[19:41:11] *** Joins: derelict (~derelict@user/derelict)
[19:42:02] *** Joins: wattux (~wattux@2a02:810a:1140:4b6c::f428)
[19:43:09] <graingert> ali1234: after
[19:43:28] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[19:43:33] <graingert> ali1234: no I think the flag is the best way
[19:43:50] <graingert> ali1234: tell() == length() isn't correct
[19:43:56] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:44:06] <ali1234> why?
[19:44:14] <graingert> did you read the post I linked?
[19:44:18] <ali1234> yes
[19:45:54] *** Quits: lightdot (~weechat@user/lightdot) (Quit: Gone parachuting!)
[19:46:10] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.1)
[19:46:16] *** Joins: fizzizist (~Thunderbi@108.162.133.99)
[19:46:29] *** Joins: waynew (~wayne@user/waynew)
[19:46:33] <fizzizist> Does anybody know how to clear a pandas dataframe from memory?
[19:46:51] *** Joins: gothicserpent (~gothicser@static-198-54-129-78.cust.tzulo.com)
[19:46:55] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:46:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:48:34] <SnoopJ> fizzizist, DataFrames will be garbage collected when there are no remaining references to them, like any other Python object. If you have just one name referring to a DataFrame, `del df` should do the trick (although it might not be GC'd right away)
[19:48:50] *** Joins: wyclif (~wyclif@user/wyclif)
[19:49:11] <SnoopJ> You probably don't want `del` though, it's generally better to write your code so that the name goes away when the function/other scope it lives in does.
[19:50:20] <graingert> ali1234: it explains why
[19:50:37] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:50:59] <fizzizist> Snoopj: Yeah that is my issue. I have tried using `del df` and `gc.collect()` and then it doesn't get released
[19:51:25] <graingert> fizzizist: show your code?
[19:51:27] <SnoopJ> fizzizist, then there must be another reference
[19:51:38] *** Quits: andrewSC_ (~andrewSC@95.179.141.168) (Quit: WeeChat 3.1)
[19:51:42] <graingert> fizzizist: how are you determining if it's released?
[19:51:57] *** Joins: andrewSC (~andrewSC@95.179.141.168)
[19:52:22] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:52:51] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 244 seconds)
[19:53:09] *** Joins: ckpro (~ckpro@103.106.181.67)
[19:53:50] <fizzizist> I am declaring the first df in my script by using pd.concat and pd.read_csv to read a couple of files into a dataframe: `df = pd.concat(pd.read_csv(cmap, sep='\t', compression='gzip') for cmap in glob.glob(f'{download_path}/*.cmap.tsv.gz'))`
[19:53:56] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Remote host closed the connection)
[19:54:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[19:54:10] <SnoopJ> it would be really helpful to see the complete code, and also to know the answer to that question
[19:54:12] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[19:54:19] <Yhg1s> fizzizist: how do you know it doesn't get released, then?
[19:54:28] *** Joins: Thanatos (~Thanatos@197.210.64.30)
[19:54:30] *** Quits: ckpro (~ckpro@103.106.181.67) (Remote host closed the connection)
[19:55:11] <fizzizist> Because I tested it in python shell by running that df line, then del df gc.collect() then making the df again the exact same way and watching the RAM in htop while i do it
[19:55:38] <Yhg1s> fizzizist: and does it grow by the same amount each time you recreate the df?
[19:55:42] <fizzizist> yes
[19:55:49] <SnoopJ> the default delay in htop is pretty slow
[19:55:54] *** Joins: ckpro (~ckpro@103.106.181.67)
[19:55:54] <graingert> fizzizist: use pyobjgraph
[19:56:13] <graingert> fizzizist: https://mg.pov.lt/objgraph/
[19:56:20] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 272 seconds)
[19:56:43] <SnoopJ> looking at memory usage is fine imho
[19:57:08] <graingert> it will tell you what's still referring to it
[19:57:17] <SnoopJ> yea, if there's a lingering refernce pyobjgraph will catch it
[19:57:42] <fizzizist> nice, i will give that a try
[20:00:05] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 244 seconds)
[20:00:46] *** Quits: agumonke` (~user@88.160.31.174) (Ping timeout: 272 seconds)
[20:01:08] *** Joins: ckpro (~ckpro@103.106.181.67)
[20:01:11] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:01:24] *** Joins: Akuli (~Akuli@82-203-160-193.bb.dnainternet.fi)
[20:02:01] *** Quits: ckpro (~ckpro@103.106.181.67) (Read error: Connection reset by peer)
[20:02:14] *** Joins: dvx (~dvx@185.63.97.64)
[20:02:31] *** Joins: ckpro (~ckpro@103.106.181.67)
[20:03:11] *** Joins: dcaro_ (~dcaro@user/dcaro)
[20:03:31] *** Quits: ckpro (~ckpro@103.106.181.67) (Read error: Connection reset by peer)
[20:03:49] *** Joins: ckpro (~ckpro@103.106.181.67)
[20:04:07] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:04:32] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 264 seconds)
[20:05:10] *** Joins: wyclif (~wyclif@user/wyclif)
[20:05:48] *** Joins: dcaro (~dcaro@user/dcaro)
[20:05:49] *** Joins: p-i- (~Ohmu@node-10tj.pool-118-173.dynamic.totinternet.net)
[20:06:27] *** Joins: srhm (~ascii@user/srhm)
[20:07:34] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[20:07:34] *** Quits: cdown_ (~cdown@89.32.122.5) (Ping timeout: 268 seconds)
[20:09:00] *** Quits: dcaro_ (~dcaro@user/dcaro) (Ping timeout: 272 seconds)
[20:09:09] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[20:09:57] *** Joins: ThanatosJ (~Thanatos@197.210.64.30)
[20:10:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[20:12:11] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[20:13:09] *** Quits: Thanatos (~Thanatos@197.210.64.30) (Ping timeout: 252 seconds)
[20:14:28] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[20:14:49] *** Quits: seednode (~seednode@user/seednode) (Quit: Ping timeout (120 seconds))
[20:15:13] *** Joins: seednode (~seednode@user/seednode)
[20:15:16] *** Quits: drn (~drn@94.240.197.246) (Ping timeout: 244 seconds)
[20:16:53] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:17:55] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[20:20:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[20:20:52] *** Quits: Bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Read error: Connection reset by peer)
[20:23:36] *** Joins: wyclif (~wyclif@user/wyclif)
[20:24:36] *** Quits: wattux (~wattux@2a02:810a:1140:4b6c::f428) (Quit: Client closed)
[20:24:55] *** Joins: PJBoy (~PJBoy@user/pjboy)
[20:25:27] *** Joins: brownan (~brownan@136.56.137.143)
[20:25:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[20:27:41] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[20:28:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[20:28:44] *** Quits: PJBoy (~PJBoy@user/pjboy) (Client Quit)
[20:29:12] *** Joins: PJBoy (~PJBoy@user/pjboy)
[20:31:37] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[20:31:46] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[20:32:04] *** Quits: vladoski (~vladoski@2001:b07:add:d406:c3fc:de7c:e328:31cd) (Remote host closed the connection)
[20:33:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[20:34:04] *** Joins: dme86 (~dan@user/dan86)
[20:34:28] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:35:16] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[20:36:20] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:37:54] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 252 seconds)
[20:37:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[20:39:10] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:39:32] *** Joins: timkofu (~timkofu@user/timkofu)
[20:41:22] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection reset by peer)
[20:42:15] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[20:44:47] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:45:06] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[20:46:15] *** Joins: wyclif (~wyclif@user/wyclif)
[20:47:13] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[20:47:23] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:36] *** Joins: HaMsTeRs (~HaMsTeRs@210.3.201.132)
[20:47:38] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 272 seconds)
[20:48:39] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:51:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:54:34] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[20:54:52] *** Joins: Skyz78 (~Skyz@ool-43538427.dyn.optonline.net)
[20:55:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:55:53] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 244 seconds)
[20:56:00] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Ping timeout: 250 seconds)
[20:56:08] *** Quits: Skyz78 (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[20:59:40] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 272 seconds)
[20:59:56] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[20:59:59] *** Quits: dkmueller (~dkmueller@2a01:c23:c05b:2f00:ec1d:4623:e64a:de1c) (Quit: WeeChat 3.1)
[21:00:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:00:38] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[21:00:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:00:59] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[21:02:08] *** Joins: wyclif (~wyclif@user/wyclif)
[21:02:08] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[21:04:15] *** Joins: greedom (~greedom@2001:16b8:32e1:ca00:b0ec:132b:c35a:f2fa)
[21:04:35] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:04:52] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:6458:a5ba:9298:c581)
[21:07:15] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[21:07:21] *** Quits: HaMsTeRs (~HaMsTeRs@210.3.201.132) (Quit: Leaving)
[21:07:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:07:44] *** Quits: hrtk (~hritik@223.226.188.53) (Quit: Took the red pill)
[21:07:51] *** Joins: wakeup (~wakeup@user/wakeup)
[21:08:26] *** Joins: Intruder777 (~Intruder7@ppp-109-104-160-59.wildpark.net)
[21:08:36] *** Joins: dme86 (~dan@user/dan86)
[21:09:13] <wakeup> Is there a tool that detects clearly useless code in a function and also AUTOMATICALLY removes it?
[21:09:15] *** Joins: HaMsTeRs (~HaMsTeRs@210.3.201.132)
[21:09:26] <wakeup> clearly useless code is e.g. "if False: blah"
[21:09:32] <wakeup> that branch can be removed automatically
[21:09:40] <wakeup> or something like "if 3 < 2"
[21:09:51] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[21:10:06] <Intruder777> Is this channel "unlisted" on the libera server? Can't seem to find it in "channel list"
[21:10:30] <grawity> are you asking about /list or the alis service?
[21:11:20] <Intruder777> grawity: I believe my software does /list to bring up the channels list
[21:11:48] *** Joins: Quaking (~Quaking@167.89.254.27)
[21:12:07] <grawity> it *should* be there, although /list on libera currently has a problem that just makes the listing stop at a random point
[21:12:33] <Intruder777> wakeup: Pycharm IDE has such alerts
[21:12:51] <SnoopJ> alis is usually the best way to search for a channel
[21:13:24] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[21:13:24] <SnoopJ> not sure there's any way to see em all
[21:13:27] *** Quits: Meteorhead (~Meteorhea@165.225.205.20) (Quit: Client closed)
[21:13:37] <Intruder777> SnoopJ: what's alis and how do I use it?
[21:13:42] <grawity> yeah that would be /list if it weren't buggy
[21:13:57] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[21:14:06] <grawity> alis is a bot that works similar to nickserv etc, you use "/msg alis list python" and it finds channels with python in their name
[21:14:19] <grawity> or "/msg alis list * -topic python" for those that mention it in the topic
[21:14:31] *** Joins: seednode (~seednode@user/seednode)
[21:14:53] <grawity> maybe with "-min 20" etc to filter out the 1-person channels
[21:15:39] <SnoopJ> Intruder777, alis is a network service. /msg alis help for more information
[21:15:58] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[21:16:08] <SnoopJ> grawity, I don't know if it's a bug, it didn't work particularly well on freenode either
[21:16:42] <Intruder777> grawity: is there an 'order by' option with alis? I'd like to see channels with top online users
[21:16:57] <SnoopJ> https://libera.chat/guides/findingchannels has the same content as the help, if you'd prefer another format
[21:17:13] <grawity> hmm probably not, but just add -min 500
[21:17:17] <SnoopJ> I don't think it lets you sort the results
[21:17:32] <SnoopJ> (I'd probably yank the results into a text file and sort if I had a lot)
[21:17:39] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[21:17:44] <HaMsTeRs> Even though this is not really related, but...  I still wanna share... I ordered the wf-1000xm4 today!  It'll be arrive on June 26.  I can't wait any longer...
[21:19:23] <Intruder777> grawity: SnoopJ: I see, thanks
[21:19:51] *** Quits: greedom (~greedom@2001:16b8:32e1:ca00:b0ec:132b:c35a:f2fa) (Remote host closed the connection)
[21:20:49] *** Joins: wyclif (~wyclif@user/wyclif)
[21:20:52] *** Joins: greedom (~greedom@2001:16b8:32e1:ca00:b0ec:132b:c35a:f2fa)
[21:22:40] *** Quits: reset (~reset@user/reset) (Quit: reset)
[21:22:52] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Ping timeout: 250 seconds)
[21:23:00] *** Joins: ckpro (~ckpro@103.106.181.67)
[21:23:19] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[21:23:25] *** Quits: Akuli (~Akuli@82-203-160-193.bb.dnainternet.fi) (Quit: Leaving)
[21:23:45] *** Joins: SebastianM (~seba@user/sebastianm)
[21:24:22] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 272 seconds)
[21:25:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[21:26:41] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[21:27:50] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[21:28:07] *** Quits: jheblu (~user@116.68.98.40) (Quit: ERC (IRC client for Emacs 27.2))
[21:28:47] <mefistofeles> hmm, I'm getting this all wrong... so I have a method which is expected to be the "public" one that needs to pass keyword arguments to other methods, which also need to pass keyword arguments to other methods... so these kwargs are eventually used ONLY 3 levels down or so... what's the pattern to do this correctly? I was trying to use **kwargs and then passing the same to inner nested methods and
[21:28:53] <mefistofeles> such, but seems very ugly to me
[21:28:55] *** Joins: kubast2 (~kubast2@user/kubast2)
[21:29:31] <kubast2> Hey, what is a safe to use json parser for python 3(.9.5)?
[21:29:40] *** Joins: magla (~gelignite@55d4f5e7.access.ecotel.net)
[21:29:51] <SnoopJ> mefistofeles, **kwargs is the canonical way to send kwargs along, but maybe I'm not quite understanding what you don't like about it
[21:29:56] <SnoopJ> kubast2, the `json` module is safe
[21:30:20] <kubast2> oh okay, I once heard about some json modules that have some issue and cause code exeuction
[21:30:20] <mefistofeles> SnoopJ: yeah, I'll try writing an example
[21:30:42] <grawity> hmm does @functools.wraps help with this
[21:30:51] <grawity> kubast2: I think that was more about yaml, no?
[21:30:54] *** Quits: NoImNotNineVolt (~ninevolt@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 264 seconds)
[21:31:15] <grawity> (yaml has this feature where it can encode various "native" types, and reconstruct them on decode ... json doesn't)
[21:31:23] <SnoopJ> kubast2, the only attack on `json` I can think of would be a maliciously large document, which most processors would be stuck with. The module lets you define your own decoder, so you could pretty easily make one that has a maximum size.
[21:32:00] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[21:32:10] <SnoopJ> grawity, wraps() is a helper for update_wrapper() which just shuffles some dunders basically (i.e. __doc__)
[21:32:57] <kubast2> ah allright I don't expect a size exceeding a couple kilobytes for the data incoming from the api
[21:33:05] *** Quits: SebastianM (~seba@user/sebastianm) (Ping timeout: 244 seconds)
[21:33:07] <kubast2> and a max of a megabyte for a local storage database
[21:33:12] <grawity> my main dislike for **kwargs is that if you typo an arg's name, you don't get an exception for it until the wrapper is finished and about to call the real thing
[21:33:14] <SnoopJ> should be just fine with `json` then :)
[21:33:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:34:06] <InPhase> grawity: On the other hand, when you hardcode them you get extra bugs to fix when the upstream changes the API...
[21:34:08] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Ping timeout: 250 seconds)
[21:34:15] <grawity> yes
[21:34:23] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[21:34:44] <SnoopJ> grawity, I don't think he's talking about a wrapper? This sounds more like what e.g. matplotlib does where foo() will call bar(), but the user might want to send in some args that bar() knows about (which foo does _not_ explicitly know about)
[21:34:45] *** Joins: Akuli (~Akuli@82-203-160-193.bb.dnainternet.fi)
[21:36:47] *** Quits: kubast2 (~kubast2@user/kubast2) (Quit: Leaving)
[21:36:51] *** Joins: wyclif (~wyclif@user/wyclif)
[21:36:56] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[21:37:45] *** Joins: szymon_ (~ugh@staticline-31-183-131-3.toya.net.pl)
[21:37:45] *** Quits: szymon_ (~ugh@staticline-31-183-131-3.toya.net.pl) (Remote host closed the connection)
[21:38:01] *** Joins: viktorivan (~ivan@187.223.103.108)
[21:38:29] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[21:39:20] *** Joins: kosh (~kosh@user/kosh)
[21:39:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:40:04] *** Quits: szymon (~ugh@staticline-31-183-131-3.toya.net.pl) (Ping timeout: 245 seconds)
[21:40:04] *** Quits: ops (~ops@user/echelon) (Ping timeout: 245 seconds)
[21:40:07] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: leaving)
[21:40:25] *** Quits: ano (~weechat@user/ano) (Ping timeout: 252 seconds)
[21:40:37] *** Joins: ano (~weechat@user/ano)
[21:42:14] *** Quits: Intruder777 (~Intruder7@ppp-109-104-160-59.wildpark.net) (Quit: Leaving)
[21:43:06] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Ping timeout: 244 seconds)
[21:43:46] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[21:44:23] *** Quits: rendar (~rendar@user/rendar) ()
[21:44:57] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:45:26] *** Joins: derelict (~derelict@user/derelict)
[21:46:46] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:47:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[21:47:20] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[21:47:21] *** Joins: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net)
[21:47:51] <SuperLag> Is "vendoring" the right word to use, to describe when a 3rd-party software provider bundles all the needed libs/deps with their program code?
[21:47:56] <grym> yes
[21:48:03] *** Quits: librenaut (~librenaut@user/librenaut) (Ping timeout: 272 seconds)
[21:48:21] <grym> especially when it's "literally we just copied this into our source tree"
[21:48:37] <mefistofeles> SnoopJ: I decided to make them explicit, it is only a couple of kwargs that are being passed to the public method and all the inner private methdos
[21:48:41] <mefistofeles> *methods
[21:48:57] <SuperLag> grym: if you didn't install that app (and all the bundled stuff) yourself, how can you tell if something is "vendored" after the fact?
[21:49:13] <SnoopJ> mefistofeles, I'm curious, what feels ugly about **kwargs for passing everything along? Are you worried about collisions, maybe?
[21:49:23] <grym> SuperLag: you can go digging in site-packages
[21:49:27] <mefistofeles> SnoopJ: I don't want to loop items
[21:49:45] <SnoopJ> beg pardon?
[21:50:10] <grym> SuperLag: if foo vendors bar, then site-packages/foo/ will have bar in it.  if bar is merely a dependency, it'll be in site-packages/bar instead
[21:50:16] <mefistofeles> SnoopJ: I don't want to for key, value in kwargs.items()
[21:50:23] <SnoopJ> mefistofeles, why do you need to?
[21:51:58] <mefistofeles> SnoopJ: ok yeah, I guess I could use kwargs[key] directly, but I'd then have to do that in many of the inner methods
[21:51:58] <mefistofeles> that said, it does feel I have a bad design pattern
[21:52:14] <SnoopJ> mefistofeles, I would do kwargs.get(key, SENTINEL) instead
[21:52:24] <SnoopJ> or DEFAULT if one was applicable
[21:52:30] *** Joins: robot-ch_ (~robot-chi@user/robot-chicken)
[21:52:47] *** Joins: manti7 (~manti7@176.10.104.94)
[21:52:50] <SnoopJ> sometimes it also makes sense to do `DEFAULTS.update(kwargs)`
[21:53:54] <SuperLag> grym: thank you
[21:54:30] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:54:35] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-dd61-bd8d-802f-ce0e.res6.spectrum.com)
[21:54:53] <humanBird> [((2^n)*55)/10 for n in range(1,4)]   this does not yield [11,22,44] or anything like that.  why?
[21:55:30] <humanBird> 2^1 is 2.  2 * 55 is 110.  110/10 should be 11.
[21:56:00] <humanBird> i get [16.5, 0.0, 5.5] for that expression instead which is totally wrong
[21:56:04] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:56:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:56:41] <mefistofeles> SnoopJ: hmm, I see what you mean, thanks
[21:57:06] <SnoopJ> mefistofeles, all that said, being explicit can be nice :)
[21:57:38] <humanBird> hrm. apparently ^ operator isn't the power operator
[21:58:07] <adder`> it's bitwise xor. you want **
[21:58:30] *** Quits: Haxxa (~Haxxa@103-21-0-35.ip4.superloop.com) (Ping timeout: 264 seconds)
[21:59:40] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Quit: raek)
[22:00:05] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[22:00:23] *** Joins: xkuru (~xkuru@user/xkuru)
[22:01:07] <humanBird> also interesting.  110/10 is a float. not an int
[22:01:08] *** Joins: audiocat (~audio@2603-8081-1800-0062-0de3-088e-634e-cd26.res6.spectrum.com)
[22:03:02] <SnoopJ> // will give you integer division (i.e. 110//10)
[22:04:11] *** Quits: greedom (~greedom@2001:16b8:32e1:ca00:b0ec:132b:c35a:f2fa) (Remote host closed the connection)
[22:05:04] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 245 seconds)
[22:05:12] *** Quits: CowFrenn (~CowFrenn@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Quit: bbl)
[22:05:13] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[22:05:28] *** Joins: dme86 (~dan@user/dan86)
[22:06:26] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[22:07:00] *** Quits: atrigent (~atrigent@130.44.130.244) (Ping timeout: 252 seconds)
[22:07:04] <humanBird> heh. the mnemonics seem a little inconsistent there.  if ** is power, one would think // is log
[22:07:46] *** Joins: ninevolt (~ninevolt@c-73-248-207-98.hsd1.nj.comcast.net)
[22:08:00] <SnoopJ> it's a little inconsistent, sure; the names for the dunders are, too
[22:08:11] *** Joins: wyclif (~wyclif@user/wyclif)
[22:10:20] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:10:36] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 272 seconds)
[22:10:50] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-74ad-ad7c-8da2-b706.fixed6.kpn.net)
[22:11:02] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[22:11:02] <SnoopJ> although formally speaking the power operator is not in the same family as the "arithmetic operators" like //, /
[22:11:11] <SnoopJ> if you find ** hard to remember, there's also pow()
[22:11:27] *** Joins: dyslexic1t (~dyslexica@ymir.whatbox.ca)
[22:13:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:13:20] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:13:24] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 245 seconds)
[22:13:41] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[22:13:46] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 272 seconds)
[22:14:07] *** Joins: dme86 (~dan@user/dan86)
[22:14:55] *** Joins: anon9002 (~anon@2405:9800:b620:76e::8fa)
[22:15:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:15:37] *** ninevolt is now known as NoImNotNineVolt
[22:16:13] *** Joins: nattiestnate (~nate@36.70.194.182)
[22:16:23] <anon9002> Is there a way to reference the exception object in bare except clauses?
[22:16:59] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 252 seconds)
[22:17:06] <anon9002> Something like "except Exception as e:", but for bare excepts.
[22:17:34] <bjs> anon9002: does that not do what you want?
[22:19:05] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[22:19:54] <anon9002> I want to be able to handle objects that are not subclass of Exception, just in case.
[22:20:12] <InPhase> anon9002: So catch BaseException
[22:20:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:20:24] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:21:26] <InPhase> anon9002: And then as an exercise, try really hard to raise an exception that does not derive from BaseException.  :)
[22:21:37] <bjs> youll be trying quite hard
[22:22:51] <anon9002> InPhase: Thanks, that should work. I was under the impression that it was possible to throw any object in Python, but it looks like only subclasses of BaseException are allowed after all.
[22:23:03] *** Joins: Auron (~Auron956@user/auron)
[22:23:13] <anon9002> Oh, it's possible?
[22:23:46] <InPhase> I would speculate there's probably some shenanigans you can do with ctypes to break that hierarchy requirement.  But, it's a formal requirement.  You're breaking the language if you find a sneaky way to bypass it.
[22:24:59] *** Joins: wyclif (~wyclif@user/wyclif)
[22:27:00] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[22:29:14] *** Joins: emacspenguin (~emacspeng@45.77.216.45)
[22:30:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:31:59] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[22:35:57] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[22:38:04] *** Joins: rama (~rama@2601:641:400:423:5d75:c21c:91d3:b3a3)
[22:38:50] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[22:39:49] *** Joins: Crassus (~Crassus@user/crassus)
[22:40:25] *** Quits: ckpro (~ckpro@103.106.181.67) (Read error: Connection reset by peer)
[22:41:03] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[22:41:08] *** Quits: ^-^hi (~^-^hi@user/-hi/x-1729478) (Remote host closed the connection)
[22:41:30] *** Joins: wyclif (~wyclif@user/wyclif)
[22:41:53] *** Quits: emacspenguin (~emacspeng@45.77.216.45) (Quit: WeeChat 3.1)
[22:42:43] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[22:42:56] <dude-x>  how are finally blocks scoped in python 3.8+
[22:43:12] <dude-x> i am getting unbound local errors
[22:43:44] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[22:45:41] *** Quits: Quaking (~Quaking@167.89.254.27) (Quit: WeeChat 3.1)
[22:46:36] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[22:46:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:49:02] <rama> If i have some modules loaded, and i call `import json` being that the module is already imported from another file how does the module get resolved?
[22:49:07] <dude-x> nevermind i had an indentation error
[22:49:46] <rama> is there a loader that inspects the sys.modules for references to `json` and loads/references what was already available?
[22:50:01] <ChrisWarrick> rama: pretty much, yes
[22:50:28] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:50:40] *** Joins: dkmueller (~dkmueller@2a01:c23:c05b:2f00:473a:aec9:6d44:aa35)
[22:52:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:54:45] *** Quits: Deneb (~johnch@195.213.86.93) (Quit: Leaving)
[22:56:43] <acnebs> Anyone know how I would use type hints with 3.9's new `asyncio.to_thread` method?
[22:56:46] <rama> ChrisWarrick: i have a strange thing going by having a module called `src/proj/json.py` if i try to `import json` within `src/proj/__init__.py` i get runtime errors w/  `AttributeError: module 'proj.json' has no attribute 'loads'`, but within the __init__ file i never referenced proj.json, i actually dont even see it printed out within the sys.modules before or after the `import json`
[22:56:54] <grym> rama: oh yeah don't do that
[22:57:21] <grym> (don't name collide with stdlib modules with your module file names, that is)
[22:57:26] *** Quits: nattiestnate (~nate@36.70.194.182) (Quit: WeeChat 3.1)
[22:57:32] <rama> grym: just a naming thing? I was trying to look into PEP 420 to see if there was more details of why it collides
[22:57:39] <acnebs> i.e. asyncio.to_thread wants to return something generic but obvs I want to type it as the type that the sync method I'm wrapping is returning
[22:57:46] *** Joins: nattiestnate (~nate@36.70.194.182)
[22:58:18] *** Joins: wyclif (~wyclif@user/wyclif)
[22:58:30] <rama> grym: ah so rename the module file names, and carry on w/ life?
[22:58:36] <ChrisWarrick> rama: are you using dead python 2?
[22:58:48] <rama> ChrisWarrick: on 3.8
[22:58:53] <ChrisWarrick> rama: ah, hm
[22:58:59] <ChrisWarrick> rama: do rename the files though
[22:59:18] <grym> rama: yep
[22:59:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:00:47] *** Quits: nattiestnate (~nate@36.70.194.182) (Client Quit)
[23:02:23] *** Joins: dolor_avis (~wojciech@user-5-173-9-190.play-internet.pl)
[23:02:27] *** Joins: nattiestnate (~nate@36.70.194.182)
[23:02:31] *** Quits: nattiestnate (~nate@36.70.194.182) (Client Quit)
[23:02:57] *** Joins: nattiestnate (~nate@36.70.194.182)
[23:03:22] *** Quits: dkmueller (~dkmueller@2a01:c23:c05b:2f00:473a:aec9:6d44:aa35) (Quit: WeeChat 3.1)
[23:03:46] *** Joins: dkmueller (~dkmueller@2a01:c23:c05b:2f00:473a:aec9:6d44:aa35)
[23:03:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:04:36] *** Quits: dkmueller (~dkmueller@2a01:c23:c05b:2f00:473a:aec9:6d44:aa35) (Client Quit)
[23:04:56] *** Joins: dkmueller (~dkmueller@2a01:c23:c05b:2f00:473a:aec9:6d44:aa35)
[23:04:58] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[23:05:28] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[23:06:05] *** Quits: adinfinitum (~user@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Ping timeout: 244 seconds)
[23:06:28] *** Quits: nattiestnate (~nate@36.70.194.182) (Client Quit)
[23:06:49] *** Joins: nattiestnate (~nate@36.70.194.182)
[23:09:30] *** Joins: mrgz (~mrgz@187.38.4.190)
[23:11:42] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:12:55] *** Joins: negatron1 (~negatron@host-87-16-4-238.retail.telecomitalia.it)
[23:13:25] *** Parts: negatron1 (~negatron@host-87-16-4-238.retail.telecomitalia.it) ()
[23:15:42] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:15:44] *** Joins: wyclif (~wyclif@user/wyclif)
[23:16:56] <mcint> i have a poetry question, i didn't see a better place to ask
[23:17:07] <SnoopJ> it's topical here
[23:17:11] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[23:17:13] <grym> mcint: this is the place, yep
[23:17:44] *** Quits: ponadm_ (~pony@097-082-235-090.res.spectrum.com) (Ping timeout: 272 seconds)
[23:18:13] <mcint> (without warning me about deprecation, pip / pypi / poetry 1.2) i want to manage a py 2.7 project with poetry (py 3.9), and wondering if (and how) this might be possible
[23:18:50] *** Quits: dolor_avis (~wojciech@user-5-173-9-190.play-internet.pl) (Quit: Konversation terminated!)
[23:19:39] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Ping timeout: 245 seconds)
[23:20:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:20:56] <grym> mcint: poetry 1.2 dropped support for <3.6
[23:21:14] <mcint> I'm using 1.1.6
[23:21:32] *** Joins: agumonke` (~user@88.163.231.79)
[23:22:51] <grym> then i think you can, but i totally forget how :/
[23:22:54] *** Quits: agumonke` (~user@88.163.231.79) (Read error: Connection reset by peer)
[23:23:17] *** Quits: anon9002 (~anon@2405:9800:b620:76e::8fa) (Quit: leaving)
[23:23:19] *** Joins: agumonke` (~user@88.163.231.79)
[23:24:21] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[23:24:25] <mcint> ah, in the docs, https://python-poetry.org/docs/managing-environments/#switching-between-environments
[23:25:42] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[23:26:38] *** Quits: dkmueller (~dkmueller@2a01:c23:c05b:2f00:473a:aec9:6d44:aa35) (Quit: WeeChat 3.1)
[23:27:44] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[23:27:48] *** Joins: Betal (~Beta@user/betal)
[23:27:51] *** Quits: dyslexic1t (~dyslexica@ymir.whatbox.ca) (Ping timeout: 252 seconds)
[23:28:06] *** Joins: fofoni (~fofoni@user/fofoni)
[23:28:28] *** samhaingrim is now known as samhain
[23:29:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:29:16] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[23:29:59] <mike18> hi
[23:30:20] <mike18> how can i write the following cmd with pendulum lib? start = (local_date - timedelta(days=days)).strftime("%Y-%m-%d")
[23:30:28] <mike18> is there a replacement for timedelta?
[23:30:43] <mike18> oh i see pendulum.duration...
[23:31:21] *** Joins: thiras_ (~thiras@user/thiras)
[23:31:51] *** Joins: wyclif (~wyclif@user/wyclif)
[23:32:45] *** Joins: vicfred (~vicfred@user/vicfred)
[23:34:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:35:22] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[23:36:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[23:38:38] *** Joins: dme86 (~dan@user/dan86)
[23:40:32] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 272 seconds)
[23:40:37] <yitz> How do I get a logger object such that it logs INFO for my current module but not for other modules?
[23:41:17] <habnabit> yitz, set the root logger's level to WARN or whatever and set your logger to INFO
[23:42:59] *** Quits: audiocat (~audio@2603-8081-1800-0062-0de3-088e-634e-cd26.res6.spectrum.com) (Ping timeout: 245 seconds)
[23:43:12] *** Joins: ops (~ops@user/echelon)
[23:43:15] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[23:43:33] <yitz> I did:  l = logging.getLogger(__name__) ; l.setLevel(logging.INFO) ;  but l.info() doesn't print anything while l.warning() does
[23:44:09] <habnabit> yitz, you didn't do basicConfig or anything else to configure the system?
[23:44:17] <cluelessperson> yitz, you must enable logging globally
[23:44:19] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[23:44:31] <cluelessperson> yitz, the info is being filtered at the global warn default.
[23:44:43] <cluelessperson> uh
[23:44:49] <yitz> And setLevel() doesn't change that?
[23:44:59] <yitz> habnabit: just those 4 lines
[23:45:09] <yitz> import; getLogger; setLevel; l.info() l.warning()
[23:45:17] <habnabit> yitz, logging isn't configured to log anything but warnings by default
[23:45:36] <habnabit> yitz, if you want that, you have to configure the whole system by using basicConfig or similar
[23:45:46] <yitz> Oh...
[23:45:51] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[23:46:00] *** Quits: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net) (Ping timeout: 252 seconds)
[23:46:01] <yitz> Alright
[23:46:47] <cluelessperson> yitz, logging.basicConfig(level=logging.INFO)
[23:47:42] *** Joins: wyclif (~wyclif@user/wyclif)
[23:47:45] <yitz> But I want the root level=WARNING.   So logging.getLogger("root").setlevel(logging.WARNING)  ?
[23:47:50] <nova> I have a setup.cfg which seems to work. When I did . env/bin/activate inside a Makefile, I received complaints about a nonexistent setup.py. So, I added setuptools.setup() (w import) in setup.py, but now I get more errors: ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. What if ... crazy idea here ... python's setup was not a pain in
[23:47:52] <nova> the ass? that would be cool
[23:47:58] <cluelessperson> yitz, if you want to avoid touching all the loggers to adjust them,   you can create your own new root logger and set its stream.
[23:48:57] *** Parts: sm (~user@plaintextaccounting/sm) (ERC (IRC client for Emacs 27.0.50))
[23:49:08] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[23:49:34] <yitz> Hrm. Setting basicConfig(level=WARNING)  then l=logger.getLogger(__name__) with l.setLevel(INFO)  seems to work.
[23:49:36] <habnabit> yitz, use basicConfig. logging is extremely fiddly and easy to get wrong
[23:49:43] <yitz> Logging is complicated :)
[23:49:55] <habnabit> yitz, not if you use e.g. eliot or twisted.logger
[23:50:06] <habnabit> yitz, the stdlib 'logging' module is complicted
[23:50:17] <yitz> lol. Fair. Thank you
[23:50:58] *** Quits: nattiestnate (~nate@36.70.194.182) (Quit: WeeChat 3.1)
[23:51:52] <nova> ok. question. In setup.cfg, in section [options.extras_require], how can I add two strings .. dev = foo  works  but how about  dev = foo,bar ??
[23:52:25] <habnabit> nova, a newline i think
[23:52:30] <habnabit> nova, did you solve the earlier issue?
[23:52:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:52:38] <nova> I think it's relating to this
[23:52:58] <grym> it might be a list
[23:53:04] <grym> dev = [foo, bar]
[23:53:08] <nova> lol. newline works. I tried that grym
[23:53:15] <grym> i never remember
[23:53:16] <habnabit> grym, i don't think that's how you write lists in a .cfg file
[23:53:28] <habnabit> nova, did that solve both problems
[23:53:40] *** Quits: korros (korros@2600:3c03::f03c:92ff:febf:689a) (Quit: WeeChat 2.8)
[23:54:00] <nova> holy bananas. make clean; make works. that didn't take ... a ton of time ... but, my, oh my, that was frustrating
[23:54:09] <nova> thanks habnabit
[23:54:32] <habnabit> nova, fwiw you don't need to activate a venv to use it, and certainly doing that in a makefile is way more trouble than it's worth
[23:55:02] <habnabit> nova, instead of: `. whatever/bin/activate; pip ..` do `whatever/bin/pip ..`
[23:55:27] <nova> well, the venv is installing ipython via pip install -e '.[dev]' so that neovim can not throw errors for python dependencies every time I type a char in insert mode >:(
[23:55:50] <nova> and gotcha. noted
[23:55:53] <habnabit> nova, sure. i'm not saying don't use a venv
[23:56:02] <nova> I see now. thanks
[23:56:19] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:56:46] <nova> the venv just helps PATH and finding the environment's pip, so I could just use ./bin/.../pip instead is I believe what you were saying
[23:57:04] *** Joins: xkuru (~xkuru@user/xkuru)
[23:57:09] <habnabit> nova, yes. activate is an overly fancy shim to set $PATH
[23:57:20] <habnabit> nova, not necessary in many cases
[23:57:42] <nova> nonetheless, I got it :v .. wondering if you do `. make` if it can also setup the venv in the "parent" shell
[23:58:03] <nova> :O don't do that. nevermind. can't have cake and eat it too...
[23:58:34] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:58:39] *** Quits: HaMsTeRs (~HaMsTeRs@210.3.201.132) (Ping timeout: 252 seconds)
[23:58:44] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[23:58:47] <SnoopJ> note: you aren't "setting up the venv," you're setting up your shell environment to use the venv
[23:59:12] <SnoopJ> the distinction is subtle but it's meaningful to the point habnabit made about not *needing* to activate them
[23:59:40] *** Joins: canton7 (canton7@about/csharp/canton7)
