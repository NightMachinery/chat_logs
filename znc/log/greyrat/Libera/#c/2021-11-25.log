[00:00:32] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[00:02:05] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[00:04:02] *** Joins: noord (~noord@user/noord)
[00:06:44] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[00:07:33] *** Joins: soul-d (~uknown@user/soul-d)
[00:07:49] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:08:32] *** Quits: peve (~peve@ucb-np2-96.colorado.edu) (Ping timeout: 260 seconds)
[00:13:32] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[00:15:03] *** Joins: Zenton (~user@user/zenton)
[00:15:20] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[00:15:33] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[00:16:14] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[00:16:57] *** Joins: PortableDave (~portabled@203.221.7.107)
[00:20:11] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Quit: leaving)
[00:21:40] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[00:22:01] *** Hexmind_ is now known as Hexmind
[00:22:18] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Client Quit)
[00:23:33] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-a058-550b-9e44-5264.inf6.spectrum.com)
[00:25:03] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[00:26:11] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:a058:550b:9e44:5264) (Ping timeout: 245 seconds)
[00:27:32] *** Joins: csrf (~csrf@user/csrf)
[00:27:59] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:30:21] *** Joins: Inline (~Inline@2a02:908:1252:7a80:5266:49bb:7a4e:e331)
[00:31:00] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[00:31:11] *** Joins: rgrinberg (~textual@201.198.177.243)
[00:31:17] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[00:31:28] *** Joins: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net)
[00:31:45] *** Quits: Echoz_ (~chris@user/echoz) (Quit: WeeChat 3.3)
[00:31:52] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[00:33:20] *** Joins: pncl1 (~Hax0r@46.38.81.225)
[00:33:58] *** Joins: Echoz (~chris@user/echoz)
[00:34:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:34:48] *** Quits: Hax0r (~Hax0r@128.127.222.243) (Ping timeout: 268 seconds)
[00:37:54] *** Quits: terminalpusher (~terminalp@2a01:586:8c54:1:d213:ff6:6367:dec1) (Remote host closed the connection)
[00:38:58] *** Joins: peve (~peve@ucb-np2-96.colorado.edu)
[00:40:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[00:43:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:44:06] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:44:21] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[00:46:01] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[00:48:10] *** Quits: ozzz (~oz@46.49.41.80) (Remote host closed the connection)
[00:49:29] *** Joins: arinov (~arinov@213.194.126.155)
[00:49:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[00:49:59] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[00:51:44] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[00:52:18] *** Quits: kexec (~kexec@user/kexec) (Quit: Client closed)
[00:53:06] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com)
[00:54:10] *** Quits: gproto10 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:54:47] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[00:56:45] *** Joins: karakedi (~eAC53C340@user/karakedi)
[00:57:04] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[00:58:00] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[00:58:36] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-a058-550b-9e44-5264.inf6.spectrum.com)
[01:01:11] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[01:01:25] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-a058-550b-9e44-5264.inf6.spectrum.com) (Ping timeout: 250 seconds)
[01:03:13] *** Joins: ozzz (~oz@46.49.41.80)
[01:03:59] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:06:32] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[01:07:13] *** Joins: rgrinberg (~textual@201.198.177.243)
[01:10:40] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:10:40] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:10:40] *** Joins: wroathe (~wroathe@user/wroathe)
[01:11:29] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Remote host closed the connection)
[01:11:47] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:62c6:7ebc:dc2a:7c4e)
[01:12:15] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:13:43] *** Quits: i336 (~i336@121.217.0.227) (Ping timeout: 256 seconds)
[01:13:54] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 265 seconds)
[01:14:04] *** Joins: damxsa_ (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[01:14:14] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:14:25] *** Joins: i336 (~i336@121.216.194.155)
[01:16:12] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[01:17:02] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[01:17:51] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:62c6:7ebc:dc2a:7c4e) (Ping timeout: 245 seconds)
[01:18:50] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[01:20:48] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[01:21:16] *** Quits: damxsa_ (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Remote host closed the connection)
[01:21:31] *** Joins: damxsa_ (~damx@2001:16a2:cc46:e600:62c6:7ebc:dc2a:7c4e)
[01:23:26] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[01:26:43] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Client Quit)
[01:27:21] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Read error: Connection reset by peer)
[01:28:29] *** Quits: Jong (~Jong@2620:10d:c090:400::5:ddb6) (Quit: Textual IRC Client: www.textualapp.com)
[01:29:25] *** Quits: magla (~gelignite@55d4df7d.access.ecotel.net) (Quit: Stay safe!)
[01:30:16] *** Joins: mahmutov_ (~mahmutov@5.47.64.116)
[01:30:27] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[01:31:43] *** imm__ is now known as imm_
[01:32:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:32:34] *** Quits: peve (~peve@ucb-np2-96.colorado.edu) (Quit: Leaving)
[01:33:16] *** Quits: mahmutov (~mahmutov@5.176.55.167) (Ping timeout: 245 seconds)
[01:33:49] *** Quits: pncl1 (~Hax0r@46.38.81.225) (Quit: Leaving)
[01:34:04] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Quit: leaving)
[01:35:24] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[01:36:02] *** Quits: damxsa_ (~damx@2001:16a2:cc46:e600:62c6:7ebc:dc2a:7c4e) (Ping timeout: 240 seconds)
[01:36:29] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:36:49] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[01:37:12] *** Quits: i336 (~i336@121.216.194.155) (Ping timeout: 260 seconds)
[01:37:24] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:37:26] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Client Quit)
[01:37:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80:5266:49bb:7a4e:e331) (Ping timeout: 250 seconds)
[01:37:49] *** Joins: i336 (~i336@101.163.180.139)
[01:40:07] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:40:53] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[01:42:18] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[01:43:08] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[01:43:46] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[01:43:46] *** Joins: quartz (~quartz@user/quartz)
[01:45:29] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:46:20] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[01:47:53] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:48:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:48:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:48:54] *** Joins: wroathe (~wroathe@user/wroathe)
[01:49:20] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:49:57] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Quit: leaving)
[01:50:17] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:52:38] *** Joins: aqua (~sid742412@user/aqua)
[01:52:39] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[01:53:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[02:00:28] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com)
[02:00:35] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:05:03] *** aqua is now known as kish`
[02:05:45] *** Joins: brad_mssw (~bhouse@116.subnet-69-85-105.ellijay.com)
[02:06:00] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[02:07:01] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[02:07:01] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Client Quit)
[02:07:47] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[02:08:06] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Client Quit)
[02:08:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:08:42] *** Quits: brad_mssw (~bhouse@116.subnet-69-85-105.ellijay.com) (Client Quit)
[02:11:13] *** Quits: Akuli (~Akuli@82-203-163-65.bb.dnainternet.fi) (Quit: Akuli)
[02:13:08] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[02:13:12] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[02:13:47] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[02:13:51] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[02:15:50] *** Joins: arinov (~arinov@5.24.122.101)
[02:17:48] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[02:18:04] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[02:18:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:19:26] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[02:20:17] *** Quits: mahmutov_ (~mahmutov@5.47.64.116) (Ping timeout: 250 seconds)
[02:25:12] *** Joins: tinyweasel (~weasel@user/tinyweasel/x-0495158)
[02:25:16] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[02:25:35] *** tinyweasel is now known as ^tinyweasel^
[02:27:54] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[02:28:15] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:28:59] *** Joins: kexec (~kexec@user/kexec)
[02:29:02] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:29:14] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[02:30:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:31:04] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Quit: leaving)
[02:32:54] *** Quits: pizdets_ (~pizdets@183.182.111.40) (Ping timeout: 250 seconds)
[02:33:39] *** Quits: Dotz0cat (~Dotz0cat@h95.88.187.173.dynamic.ip.windstream.net) (Ping timeout: 265 seconds)
[02:34:09] *** Joins: pizdets (~pizdets@183.182.111.212)
[02:35:53] *** Joins: g0z (gauze@entropy.tmok.com)
[02:37:32] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:37:37] *** Joins: Dotz0cat (~Dotz0cat@h236.193.186.173.dynamic.ip.windstream.net)
[02:37:59] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[02:40:47] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[02:50:27] *** Joins: Klinda (~superleag@user/klinda)
[02:51:08] *** Quits: Klinda (~superleag@user/klinda) (Client Quit)
[02:55:34] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[02:59:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:00:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:02:07] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:08:24] *** Quits: arinov (~arinov@5.24.122.101) (Read error: Connection reset by peer)
[03:08:40] *** Quits: alch (~alch@151.82.135.89) (Ping timeout: 260 seconds)
[03:08:53] *** Joins: velgin (~velgin@2601:190:400:88c1::4c0b)
[03:10:15] *** Joins: alch (~alch@151.82.195.99)
[03:10:19] *** Joins: graywolf (~wolf@user/graywolf)
[03:11:38] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Remote host closed the connection)
[03:14:01] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[03:14:32] *** Joins: arinov (~arinov@213.194.126.155)
[03:16:11] *** Joins: Jong (~Jong@174.27.0.61)
[03:18:05] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[03:22:08] *** Quits: cousteau (~cousteau@user/cousteau) (Remote host closed the connection)
[03:25:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:25:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:25:07] *** Joins: wroathe (~wroathe@user/wroathe)
[03:25:22] *** Joins: Inline (~Inline@2a02:908:1252:7a80:43ab:5253:5a93:ac1b)
[03:25:29] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:4c2d:8074:ff8b:55dd) (Ping timeout: 250 seconds)
[03:29:18] *** Quits: Inline (~Inline@2a02:908:1252:7a80:43ab:5253:5a93:ac1b) (Client Quit)
[03:33:46] *** Joins: rgrinberg (~textual@201.198.177.243)
[03:34:41] *** Quits: Darkcoal (~user@143.92.183.8) (Quit: Darkcoal)
[03:35:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[03:36:57] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:37:21] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[03:37:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:39:37] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[03:40:45] *** Parts: phireh (~user@2.59.233.131) (ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[03:41:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c3a4:950f:3557:e668)
[03:45:32] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[03:47:58] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:48:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 268 seconds)
[03:49:34] *** lukedashjr is now known as luke-jr
[03:53:45] *** sm2n_ is now known as sm2n
[03:55:32] *** Joins: chenqisu1 (~03cia7d@183.217.201.124)
[03:56:46] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:58:14] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:c92e:99ce:dc6e:21c4)
[03:58:15] *** Joins: Feuermagier_ (~Feuermagi@213.178.26.41)
[04:00:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 245 seconds)
[04:04:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[04:05:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[04:05:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:06:30] *** Lord_of_Life_ is now known as Lord_of_Life
[04:06:36] *** Quits: velgin (~velgin@2601:190:400:88c1::4c0b) (Ping timeout: 245 seconds)
[04:06:54] *** Joins: Wulf (~Wulf@user/wulf)
[04:10:44] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[04:15:00] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[04:15:34] *** Joins: kish` (~sid742412@user/aqua)
[04:19:16] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Quit: WeeChat 3.3)
[04:20:31] *** Quits: VincentValentine (~VincentVa@95.84.5.33) (Ping timeout: 268 seconds)
[04:21:03] *** Joins: damxsa_ (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[04:21:44] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 268 seconds)
[04:23:54] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[04:24:07] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:24:13] *** Quits: damxsa_ (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Client Quit)
[04:24:45] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:25:04] *** Joins: abdullah (~damxsa@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[04:28:46] <abdullah> q
[04:28:47] *** Joins: rsarson (~rsarson@2607:fea8:29e1:b000::1c33)
[04:29:39] *** Quits: abdullah (~damxsa@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Client Quit)
[04:30:25] *** Joins: bruda (~bruda@172.58.60.77)
[04:36:18] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:37:31] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[04:38:12] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[04:39:50] *** Joins: cousteau (~cousteau@user/cousteau)
[04:40:50] *** Quits: cousteau (~cousteau@user/cousteau) (Client Quit)
[04:41:45] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Ping timeout: 250 seconds)
[04:43:41] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:43:58] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:46:19] *** Joins: ferdna (~ferdna@user/ferdna)
[04:46:33] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:46:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[04:49:01] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[04:49:01] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[04:49:02] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 240 seconds)
[04:50:34] *** Quits: AmR| (~AmREiSa@102.47.62.197) (Quit: Konversation terminated!)
[04:52:03] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:53:16] *** Quits: riposte (~finalripo@2403-5802-74-2--16c3.ip6.aussiebb.net) (Ping timeout: 245 seconds)
[04:53:38] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[04:57:56] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[05:01:51] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[05:02:37] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[05:06:35] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[05:06:45] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[05:07:40] *** Quits: kexec (~kexec@user/kexec) (Quit: Client closed)
[05:09:02] *** Quits: PortableDave (~portabled@203.221.7.107) (Ping timeout: 240 seconds)
[05:09:28] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:09:41] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[05:10:04] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:11:42] *** Joins: pnbeast (~pnbeast@24.102.186.191.res-cmts.snh.ptd.net)
[05:14:23] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:16:21] *** Joins: jbauer (~jbauer@146.71.11.98)
[05:18:11] *** Joins: PortableDave (~portabled@203.221.7.107)
[05:20:00] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:21:34] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[05:25:24] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Ping timeout: 260 seconds)
[05:31:27] *** Joins: Viewday11 (~Viewday@user/viewday)
[05:34:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:35:34] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Read error: Connection reset by peer)
[05:37:59] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Remote host closed the connection)
[05:38:16] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:39:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:40:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[05:45:48] *** Quits: bruda (~bruda@172.58.60.77) (Quit: Busy holiday tomorrow. Enjoy your thanksgiving!)
[05:46:21] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[05:48:12] *** Joins: simon323 (~simon323@2409:8a34:46c:5830:584f:96c4:d9ec:41d4)
[05:48:15] *** Joins: VincentValentine (~VincentVa@5.142.43.45)
[05:50:18] *** moose` is now known as moose
[05:51:01] <floatcomplex> my kid just intentionally wrote c for the first time
[05:51:16] <floatcomplex> he inserted a newline in a printf statement in a place he wanted a newline to be
[05:52:26] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[05:53:54] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[05:55:46] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[05:57:26] <pflanze> Hi. When writing macros that take 0 arguments, but have side effects, should I define them with or without the empty parens?
[05:57:51] *** Joins: constxd (~brad@142.134.38.68)
[05:58:16] <pflanze> I tend to think with; without parens looks like a constant, or access, or lvalue.
[05:59:29] <pflanze> Example: #define BREAK() raise(SIGTRAP)
[06:01:12] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:c92e:99ce:dc6e:21c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:01:57] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[06:04:41] *** Joins: kerala (~liberapoo@117.216.29.172)
[06:05:39] <kerala> I was reading through source code of make ..I came accross #include <sys/types.h> where can i read more about sys/types.h 
[06:05:58] <kerala> can you give me some resources to learn more about this
[06:06:09] <kerala> i am new to c programming
[06:06:41] *** Quits: random-nick (~random-ni@87.116.180.220) (Ping timeout: 256 seconds)
[06:07:48] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 268 seconds)
[06:08:51] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:09:55] <ns12> sys/types.h is in POSIX.
[06:10:21] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[06:10:25] <ns12> kerala: https://pubs.opengroup.org/onlinepubs/009696899/basedefs/sys/types.h.html
[06:11:34] <fizzie> Or a few revisions later on, https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/sys_types.h.html
[06:12:38] <kerala> @fizzie thanks .. where can i get small snippets that demonstrates the working of this codes
[06:12:50] <kerala> @ns12 thanks for helping me
[06:13:26] <ns12> These things are related to Unix programming. Perhaps a book on Unix programming would help you.
[06:13:26] <kerala> can you pls tell me small working examples which demonstrates the working of these codes
[06:13:46] <kerala> ns12 can you suggest some books
[06:13:51] <pflanze> kerala, you could look at the contents of the header file; e.g. https://github.com/openbsd/src/blob/master/sys/sys/types.h
[06:14:13] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:14:33] <pflanze> But, you include that file if some API says to use it.
[06:14:42] <fizzie> Stevens' Advanced Programming in the UNIX Environment would be the canonical book.
[06:14:56] <ns12> kerala: "Advanced Programming in the UNIX Environment" or "The Linux Programming Interface"
[06:14:58] *** Quits: moberg (~moberg@luke.millenniumfalcon.org) (Quit: quit)
[06:15:22] <kerala> wow you guys are really amazing thanks a lot guys
[06:15:31] *** Joins: moberg (~moberg@luke.millenniumfalcon.org)
[06:16:21] <danielcamiel> kerala, let us c by yashavant kanetkar
[06:17:51] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 245 seconds)
[06:20:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:20:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:20:52] *** Joins: wroathe (~wroathe@user/wroathe)
[06:23:48] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[06:27:03] *** Joins: riposte (~finalripo@2403-5802-74-2--16c3.ip6.aussiebb.net)
[06:28:26] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Remote host closed the connection)
[06:29:00] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[06:29:49] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:911:2f88:643:5520)
[06:33:05] *** Quits: banc- (banc@gateway/vpn/airvpn/banc) (Ping timeout: 268 seconds)
[06:33:28] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[06:35:14] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:36:45] *** Joins: constxd (~brad@142.134.38.68)
[06:37:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[06:39:08] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[06:39:42] *** Joins: Enitin (~Enitin@82.102.22.86)
[06:44:39] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[06:48:10] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[06:52:16] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:24] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[06:53:32] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[06:53:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:54:05] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[06:54:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:54:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:54:26] *** Joins: wroathe (~wroathe@user/wroathe)
[06:56:30] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:57:15] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Remote host closed the connection)
[06:57:38] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[06:59:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:02:03] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[07:05:35] *** Quits: alch (~alch@151.82.195.99) (Read error: Connection reset by peer)
[07:08:37] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:08:45] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[07:09:41] *** Joins: alch (~alch@bo-18-146-10.service.infuturo.it)
[07:11:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:13:14] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[07:15:32] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[07:15:34] *** Joins: dutch (~DutchIngr@user/dutch)
[07:24:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:25:06] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 265 seconds)
[07:26:10] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:30:11] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[07:30:56] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[07:32:20] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:32:21] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:32:21] *** Joins: wroathe (~wroathe@user/wroathe)
[07:33:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:11] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[07:39:27] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:39:51] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 250 seconds)
[07:41:02] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[07:43:12] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Read error: Connection reset by peer)
[07:43:46] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[07:46:38] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:48:16] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[07:51:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:52:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:56:57] *** Quits: Jong (~Jong@174.27.0.61) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:08:31] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:11:08] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[08:14:52] *** Joins: fstd (~fstd@xdsl-87-79-98-69.nc.de)
[08:14:56] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 245 seconds)
[08:15:02] *** Joins: constxd (~brad@142.134.38.68)
[08:17:47] *** Quits: fstd_ (~fstd@xdsl-78-35-74-116.nc.de) (Ping timeout: 250 seconds)
[08:25:32] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:27:43] *** coc0nut_ is now known as coc0nut
[08:28:25] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Quit: leaving)
[08:30:28] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Quit: Leaving)
[08:39:00] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[08:40:08] *** Quits: PortableDave (~portabled@203.221.7.107) (Ping timeout: 268 seconds)
[08:41:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:48:59] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[08:50:20] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[08:50:46] *** Quits: chenqisu1 (~03cia7d@183.217.201.124) (Ping timeout: 245 seconds)
[08:50:58] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[08:52:18] *** Joins: malloy (~jimery@116.30.222.115)
[08:53:44] <floatcomplex> dave0: https://godbolt.org/z/ro4rYqz9h
[08:54:23] <floatcomplex> the only non-syntax change from your thing is the removal of the fixed string sizes and the adjustment to the argument to malloc
[08:54:40] <dave0> oh cool
[08:54:50] <floatcomplex> and it went from having lots of warnigns to none, with just that change
[08:55:42] <floatcomplex> it was previously concerned about the possibility of copying 100 bytes into a 4 byte destination or something like that idk
[08:56:42] <dave0> hmm weird warnings
[08:57:44] *** Joins: diamondbond (~diamondbo@175.157.188.250)
[08:59:13] *** Quits: diamondbond (~diamondbo@175.157.188.250) (Client Quit)
[09:01:37] *** Quits: kajiryoji (~kajiryoji@180.160.59.123) (Ping timeout: 250 seconds)
[09:03:20] *** Joins: reumeth (~reumeth@user/reumeth)
[09:06:04] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[09:06:28] *** Joins: kdc (~kdc@196.211.197.159)
[09:09:06] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 245 seconds)
[09:09:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:10:42] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[09:12:38] *** Joins: malloy (~jimery@116.30.222.115)
[09:13:25] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[09:15:35] *** Joins: abraham (~abraham@143.244.185.86)
[09:16:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[09:22:45] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[09:25:35] *** Quits: charadon (~charadon@155.138.164.183) (Ping timeout: 256 seconds)
[09:25:56] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[09:27:13] *** Joins: CoderCharmander (~CoderChar@2A001110022743270000003A8580AC01.mobile.pool.telekom.hu)
[09:28:33] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:911:2f88:643:5520) (Quit: Leaving)
[09:28:55] *** Joins: mixfix41 (~homefame@user/mixfix41)
[09:28:56] *** Joins: serbest (~serbest@user/serbest)
[09:31:34] *** Quits: CoderCharmander (~CoderChar@2A001110022743270000003A8580AC01.mobile.pool.telekom.hu) (Read error: Connection reset by peer)
[09:32:05] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 250 seconds)
[09:32:38] *** Joins: CoderCharmander (~CoderChar@2A001110022743270000003A8580AC01.mobile.pool.telekom.hu)
[09:44:42] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[09:45:06] *** Joins: Enitin (~Enitin@82.102.22.85)
[09:45:27] *** Joins: zalt__ (~zalt@user/zalt)
[09:48:38] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[09:56:11] *** Quits: CoderCharmander (~CoderChar@2A001110022743270000003A8580AC01.mobile.pool.telekom.hu) (Ping timeout: 245 seconds)
[09:56:39] *** Joins: Satin (uid193953@id-193953.ilkley.irccloud.com)
[09:57:04] *** Joins: CoderCharmander (~CoderChar@2A00111002226815000000615AA81601.mobile.pool.telekom.hu)
[09:58:12] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Ping timeout: 276 seconds)
[10:00:09] *** Quits: serbest (~serbest@user/serbest) (Ping timeout: 256 seconds)
[10:03:27] *** Joins: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374)
[10:03:50] *** Quits: nowz_ (~nowz@194.136.126.35) (Ping timeout: 260 seconds)
[10:04:05] *** Joins: nowz (~nowz@194.136.126.35)
[10:04:05] *** Quits: nowz (~nowz@194.136.126.35) (Changing host)
[10:04:05] *** Joins: nowz (~nowz@user/nowz)
[10:11:31] *** Quits: i336 (~i336@101.163.180.139) (Ping timeout: 250 seconds)
[10:12:33] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[10:13:21] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:13:23] *** Joins: i336 (~i336@121.217.103.236)
[10:19:24] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[10:23:24] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c3a4:950f:3557:e668) (Quit: Leaving)
[10:24:08] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:24:48] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.203)
[10:25:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:27:29] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[10:28:06] *** Quits: i336 (~i336@121.217.103.236) (Ping timeout: 260 seconds)
[10:28:43] *** Joins: i336 (~i336@101.174.222.202)
[10:29:38] *** Quits: kerala (~liberapoo@117.216.29.172) (Ping timeout: 256 seconds)
[10:30:12] <ozzz> kerala: https://maxim.int.ru/bookshelf/OReilly__POSIX_Programmers_Guide.pdf
[10:35:18] *** Joins: NEYi (~NEYi@109.251.216.38)
[10:35:40] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:35:45] *** Joins: kerala (~liberapoo@117.216.29.172)
[10:38:19] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[10:40:04] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[10:40:37] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:42:51] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[10:42:51] *** Quits: VincentValentine (~VincentVa@5.142.43.45) (Ping timeout: 245 seconds)
[10:44:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[10:45:46] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 260 seconds)
[10:46:25] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:48:14] *** Joins: strajder (~strajder@user/strajder)
[10:49:15] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[10:51:28] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[10:53:56] *** Quits: zalt__ (~zalt@user/zalt) (Ping timeout: 260 seconds)
[10:55:25] *** Joins: serbest (~serbest@user/serbest)
[10:56:22] *** Quits: kapil_ (~kapil@2a01:4f9:c010:c9c3::1) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:56:52] *** Joins: kapil (~kapil@o-k.website)
[11:01:32] *** Joins: houze (~houze@user/houze)
[11:03:27] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:04:31] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[11:06:03] *** Quits: alch (~alch@bo-18-146-10.service.infuturo.it) (Read error: Connection reset by peer)
[11:09:21] *** Quits: i336 (~i336@101.174.222.202) (Ping timeout: 268 seconds)
[11:09:46] *** Joins: chenqisu1 (~03cia7d@183.217.201.124)
[11:10:03] *** Joins: alch (~alch@pa-18-175-22.service.infuturo.it)
[11:10:27] *** Joins: i336 (~i336@101.174.233.10)
[11:12:32] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Quit: WeeChat 3.3)
[11:13:18] *** Joins: bzng (~bzng4@91-115-29-1.adsl.highway.telekom.at)
[11:14:32] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:14:36] *** Quits: mixfix41 (~homefame@user/mixfix41) (Read error: Connection reset by peer)
[11:16:32] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[11:21:52] *** Joins: relight (~relight@user/relight)
[11:23:16] *** Quits: serbest (~serbest@user/serbest) (Remote host closed the connection)
[11:23:57] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[11:24:47] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[11:24:54] *** Joins: mrig (~AdiIRC@user/mrig)
[11:28:21] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:28:52] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[11:31:06] *** Quits: kerala (~liberapoo@117.216.29.172) (Ping timeout: 260 seconds)
[11:35:31] *** Quits: begriffs_ (~begriffs@user/begriffs) (Remote host closed the connection)
[11:35:33] *** Joins: jjido (~Denis@90.213.58.125)
[11:35:52] *** Joins: begriffs_ (~begriffs@user/begriffs)
[11:39:20] *** Joins: frost (~frost@user/frost)
[11:42:59] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Ping timeout: 264 seconds)
[11:46:33] *** Joins: kerala (~liberapoo@117.216.29.172)
[11:46:34] *** Joins: Rounin (~david@84.212.130.215)
[11:47:08] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 260 seconds)
[11:47:22] *** Quits: Pentode (~Pentode@mobile-166-171-57-43.mycingular.net) (Ping timeout: 260 seconds)
[11:50:11] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[11:55:52] *** Quits: pnbeast (~pnbeast@24.102.186.191.res-cmts.snh.ptd.net) (Quit: WeeChat 2.7.1)
[11:59:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:00:46] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[12:04:25] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:474b:65db:2f45:4351)
[12:04:40] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[12:05:39] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[12:05:40] *** Quits: roman_ (~roman@mob-194-230-147-119.cgn.sunrise.net) (Remote host closed the connection)
[12:06:03] *** Joins: roman_ (~roman@mob-194-230-147-119.cgn.sunrise.net)
[12:08:13] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[12:11:11] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[12:11:25] *** Joins: mrig (~AdiIRC@user/mrig)
[12:14:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:16:02] *** Joins: csh4dow (~csh4dow@122.161.51.234)
[12:16:21] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[12:16:23] <csh4dow> c based gui libraries except for gtk
[12:16:36] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[12:20:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[12:20:25] <dave0> csh4dow: maybe qt?
[12:21:01] <csh4dow> its cpp
[12:21:08] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:22:30] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[12:23:04] <dave0> yeah wikipedia says that too :-(
[12:25:08] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[12:25:22] *** Joins: mrig (~AdiIRC@user/mrig)
[12:28:38] *** Quits: kerala (~liberapoo@117.216.29.172) (Ping timeout: 256 seconds)
[12:30:22] *** Quits: i336 (~i336@101.174.233.10) (Ping timeout: 260 seconds)
[12:31:51] *** Joins: i336 (~i336@101.174.205.183)
[12:33:15] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:34:37] *** Quits: noose (~noose@user/noose) (Quit: Bye)
[12:34:57] *** Joins: noose (~noose@user/noose)
[12:41:13] <markand> there are no real good GUI library anyway
[12:41:19] <markand> even Qt isn't native 
[12:41:43] <markand> the best thing you can do is to write a generic core code and write a specific UI code for platforms you want to support
[12:42:27] <markand> not mentioning that most platforms do have their own weirdos that you can't really map with generic GUI toolkits (such has macOS's menubar, GTK headerbars, windows right click task switcher context, etc)
[12:43:44] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:43:51] *** Quits: CoderCharmander (~CoderChar@2A00111002226815000000615AA81601.mobile.pool.telekom.hu) (Ping timeout: 250 seconds)
[12:44:15] *** Joins: aradesh (~aradesh@user/aradesh)
[12:44:55] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:47:36] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:47:45] *** Joins: Jong (~Jong@174.27.0.61)
[12:47:54] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[12:48:52] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:54:50] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:56:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[12:56:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:58:07] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:59:14] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 260 seconds)
[13:05:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 268 seconds)
[13:06:19] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:07:02] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[13:09:03] *** Quits: avar (avar@vm.nix.is) (Quit: Lost terminal)
[13:09:35] *** Joins: avar (avar@vm.nix.is)
[13:10:12] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:474b:65db:2f45:4351) (Ping timeout: 260 seconds)
[13:11:42] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:11:43] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:e360:445b:3be4:7bac)
[13:12:01] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[13:12:01] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:13:49] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:14:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:16:02] *** Quits: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[13:16:44] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[13:16:56] *** Joins: plastico (~plastico@neomutt/plastico)
[13:17:00] <NRK[m]> csh4dow: i assume you mean cross-platform as well?
[13:17:26] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[13:20:21] <csh4dow> yes
[13:24:59] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[13:25:43] *** Joins: superdupond (~Kev@2a01cb0400149f007d49ad2adfbcada9.ipv6.abo.wanadoo.fr)
[13:25:59] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.203) (Quit: Leaving)
[13:26:39] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.203)
[13:27:02] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Quit: SureVoIP: http://www.surevoip.co.uk)
[13:30:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[13:31:08] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[13:31:20] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:31:46] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633)
[13:32:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[13:33:19] *** Quits: Jong (~Jong@174.27.0.61) (Quit: Textual IRC Client: www.textualapp.com)
[13:34:51] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:38:33] *** Joins: Sos (~Sos@d42-155.icpnet.pl)
[13:39:46] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:39:57] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[13:45:02] *** Quits: chenqisu1 (~03cia7d@183.217.201.124) (Remote host closed the connection)
[13:45:07] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:45:22] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:45:26] *** Joins: chenqisu1 (~03cia7d@183.217.201.124)
[13:47:11] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:52:05] *** Joins: arinov (~arinov@77.67.129.200)
[13:59:20] *** Joins: dulive (~dulive@193.137.92.124)
[14:01:00] <dulive> hello
[14:01:01] <dulive> in a struct declaration what does : mean?
[14:01:01] <dulive> it is used for example in the struct tcphdr and it's the first time I see this
[14:01:09] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[14:01:15] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:05:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:06:58] *** Quits: i336 (~i336@101.174.205.183) (Ping timeout: 260 seconds)
[14:08:31] *** Joins: i336 (~i336@101.174.210.220)
[14:09:10] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[14:10:30] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[14:10:56] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[14:13:41] *** Quits: i336 (~i336@101.174.210.220) (Ping timeout: 245 seconds)
[14:15:02] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.4-dev)
[14:15:41] *** Joins: i336 (~i336@101.175.207.18)
[14:16:01] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[14:17:34] *** Joins: Darkcoal (~user@2001:16a2:78ed:9900:47a:da4f:967f:2c19)
[14:18:10] <trenka> dulive: bit fields
[14:19:00] <roxlu> I've asked this in #archlinux too as I'm not sure where to ask. I'm reading up on condition variables and especially the case where you use one of the two cases to signal a thread: 1) lock/signal(cv)/unlock OR just 2) signal(cv). Where `cv` is a condition variable. I read that when a signaled thread wakes up it must block on the mutex. Is that right?
[14:19:03] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:23:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[14:24:14] *** Quits: i336 (~i336@101.175.207.18) (Ping timeout: 256 seconds)
[14:25:15] *** Joins: i336 (~i336@121.216.194.93)
[14:25:24] <trenka> roxlu: it atomically unlocks on call and locks the mutex on return
[14:25:54] <roxlu> trenka: hey! thanks.
[14:27:44] <roxlu> So in the thread that waits on the cv, it does: `while(1) {  lock(mut);   while (condition) { cond_wait: { unlock(mut) .. something? ...lock(mut) } } unlock(mut)    }`
[14:27:54] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[14:28:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:29:06] <roxlu> .. the important part there is: `cond_wait: { unlock(mut) .. something? ...lock(mut) }` which shows what the `cond_wait()` call is doing (pseudo code)
[14:29:56] <trenka> I'm lost in your pseudo code
[14:30:00] *** Quits: i336 (~i336@121.216.194.93) (Ping timeout: 260 seconds)
[14:30:06] <roxlu> haha sorry I can image
[14:30:10] <roxlu> I'll make a gist
[14:30:12] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[14:30:33] *** Joins: i336 (~i336@121.216.194.93)
[14:30:56] <trenka> lock(); while (!code) wait(); do_work(); unlock()
[14:31:06] <dave0> roxlu: it's    lock;   while(!event) {   unlock; wait_for_signal; lock;   }   ...code...   unlock;
[14:31:17] <trenka> while (!condition) I wanted to say
[14:31:32] <trenka> dave0: no
[14:31:40] <dave0> roxlu: and the thread that sets event does a signal
[14:32:08] <trenka> the thing that you should not unlock manually, it's done atomically by pthread_cond_wait()
[14:32:12] <dave0> roxlu: the other thread does     lock; event=1; broadcast; unlock;
[14:32:16] <trenka> otherwise you have race condition
[14:32:43] <dave0> oh right yeah,    unlock; wait_for_signal; lock;    is done by the OS and it is atomic
[14:32:51] *** Quits: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:36] *** Joins: csrf (~csrf@user/csrf)
[14:33:49] <dave0> real code just does   mutex_lock(&m); while(!event) cond_wait(&m, &c); ...something... mutex_unlock(&m);    and the other thread does    mutex_lock(&m); cond_broadcast(&c); event=1; mutex_unlock(&m);
[14:34:35] <roxlu> thanks dave0 and trenka 
[14:35:02] <roxlu> i was thinking about the signaling, but I wanted to dive into the condition/lock/unlock first. 
[14:35:10] <roxlu> I just wrote this: https://gist.github.com/roxlu/3cb4e8231606cfb3ce80855ee3ea32fb 
[14:35:11] <candide> Title of roxlu's link: threads.c · GitHub
[14:36:06] <roxlu> I was wondering if the `pthead_cond_wait()` that I wrote there represents what is happening (ofc. there is more to it, but at a high level)
[14:36:22] *** Quits: i336 (~i336@121.216.194.93) (Ping timeout: 260 seconds)
[14:36:29] *** Joins: shivesh (~shivesh@user/shivesh)
[14:36:58] *** Joins: i336 (~i336@121.216.194.93)
[14:37:10] <dave0> roxlu: yeah the    ... ? ...    would be wait for a signal from cond_broadcast
[14:37:34] <roxlu> dave0: and that part is implemented by the scheduler of the kernel?
[14:37:50] <dave0> uuhhh i think so
[14:37:58] <dave0> i'm not 100% sure it's done in the kernel
[14:38:09] <Maxdamantus> It probably uses `futex`
[14:38:10] <dave0> but it is guaranteed to be atomic
[14:38:44] <dave0> yeah it might be a library function that uses primitives in the kernel
[14:38:51] <roxlu> ok thanks good to know. then what I was trying to understand is when I should lock the mutex before signaling it and when not because both approaches can be used
[14:39:01] *** Quits: chenqisu1 (~03cia7d@183.217.201.124) (Ping timeout: 268 seconds)
[14:39:16] <Maxdamantus> (at least if you're on Linux---other OSes will have other blocking mechanisms that work similarly)
[14:39:30] <dave0> roxlu: yes you should lock, because probably you will be changing app->has_work
[14:39:49] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[14:40:09] *** Joins: kdc (~kdc@196.211.197.159)
[14:40:30] <roxlu> dave0: I should lock the write to `has_work`, that's what I understand, but it's not required to lock the condition variable
[14:40:36] <dave0> roxlu: your other thread would do somethig like    mutex_lock(); {...add something to a list or whatever...} app->has_work = TRUE; cond_broadcast(&app->cond); mutex_unlock();
[14:41:41] <roxlu> yeah ... or: lock();{ .. add some work ..} has_work = true; unlock();  signal(cv)
[14:42:03] <dave0> oh maybe that works, i have never done it that way
[14:42:27] <dave0> doesn't mean it's wrong though
[14:42:35] <roxlu> I was reading this: when a waiting thread awakens it must first lock the mutex. <- and that part confuses me; i.e. "where" should it lock the  mutex; is that the part in the `pthread_cond_wait()`  
[14:42:49] <roxlu> dave0: no, both cases can be used
[14:42:56] <roxlu> and they have different impact
[14:43:00] <dave0> roxlu: ok
[14:43:00] <roxlu> which I'm trying to understand
[14:43:33] <roxlu> so when you don't lock the mutex and signal, the awaking thread doesn't have to block on the mutex when it's not locked
[14:44:04] <roxlu> at least that's my understanding but ... I'm not sure what is meant with "when a waiting thread awakens it must first lock the mutex." exactly
[14:44:43] *** Joins: masterbuilder (~user@user/masterbuilder)
[14:45:58] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:46:08] <dave0> it's atomic so there's really no concept of "first" there
[14:47:03] <roxlu> ok, yeah, but that doesn't explain what that sentence really maens
[14:47:05] <roxlu> *means
[14:47:19] <dave0> when a waiting thread awakens, the mutex is locked
[14:47:37] <roxlu> ok when is the thread waiting, is that a kernel thing? 
[14:47:41] <dave0> yes
[14:47:49] <roxlu> or is that implicitly done in pthead_cond_wait()?
[14:48:38] <dave0> something in pthread_cond_wait will call the kernel to have the thread go to sleep
[14:49:19] <roxlu> yeah and then the kernel will most likely wake it up (i'm also curious how that work)
[14:49:25] <dave0> yep
[14:49:49] <dave0> it's in the nitty gritty of the implementation, and it's probably very hard to read :-)
[14:49:52] <roxlu> that means that before line 20, the call will put the thread to sleep ( https://gist.github.com/roxlu/3cb4e8231606cfb3ce80855ee3ea32fb#file-threads-c-L19 )
[14:50:09] <dave0> i believe you cannot implement posix threads without kernel support (90% sure of it)
[14:50:37] <roxlu> yeah I know .. maybe I'm diving to deep into this, but I hope that understanding this will make it clear when to actually lock the cond var
[14:50:50] <roxlu> yep
[14:52:03] <roxlu> if you look at my pseudo implementation of pthread_cond_wait(), then actually the sleep would be in the /* ... ? ... */ part. 
[14:52:31] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:53:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:56:00] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[14:58:41] *** Joins: kerala (~liberapoo@117.216.29.172)
[14:58:46] *** Joins: earnest (~earnest@user/earnestly)
[15:00:02] *** Quits: Darkcoal (~user@2001:16a2:78ed:9900:47a:da4f:967f:2c19) (Ping timeout: 240 seconds)
[15:01:35] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[15:02:01] *** Joins: Darkcoal (~user@143.92.183.8)
[15:02:28] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[15:03:04] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[15:03:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[15:05:08] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:06:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:08:23] *** Joins: NeoCron (~NeoCron@p200300c4cf1ab200146a93e8f94739c9.dip0.t-ipconnect.de)
[15:08:38] *** Quits: alch (~alch@pa-18-175-22.service.infuturo.it) (Ping timeout: 268 seconds)
[15:10:18] *** Joins: alch (~alch@ca-18-206-170.service.infuturo.it)
[15:11:34] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[15:13:38] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[15:16:49] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[15:18:07] *** Quits: i336 (~i336@121.216.194.93) (Ping timeout: 250 seconds)
[15:19:06] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:19:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:19:43] *** Joins: i336 (~i336@101.163.244.164)
[15:23:05] *** Joins: jjido (~Denis@90.213.58.125)
[15:23:41] *** Quits: kerala (~liberapoo@117.216.29.172) (Ping timeout: 245 seconds)
[15:23:56] *** Joins: seninha (~seninha@user/seninha)
[15:24:50] *** Quits: dulive (~dulive@193.137.92.124) (Ping timeout: 256 seconds)
[15:25:06] *** Joins: somlis (~somlis@user/somlis)
[15:30:52] *** Joins: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc)
[15:33:54] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 268 seconds)
[15:35:38] *** Quits: i336 (~i336@101.163.244.164) (Ping timeout: 260 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:04] *** Quits: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc) (Remote host closed the connection)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:04] *** Joins: i336 (~i336@101.175.220.184)
[15:43:13] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:43:41] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[15:45:31] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Read error: Connection reset by peer)
[15:45:53] *** Joins: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc)
[15:46:23] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[15:46:30] *** Quits: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc) (Read error: Connection reset by peer)
[15:46:33] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[15:46:43] *** Joins: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc)
[15:46:56] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[15:47:37] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:48:12] *** Joins: cruncher (~cruncher@90.68.118.49)
[15:49:13] *** Quits: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc) (Read error: Connection reset by peer)
[15:49:25] *** Joins: CoderCharmander (~CoderChar@195.199.248.88)
[15:50:44] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 260 seconds)
[15:52:43] <mort> I'm looking at the zlib example at https://zlib.net/zlib_how.html
[15:53:01] *** Quits: i336 (~i336@101.175.220.184) (Ping timeout: 268 seconds)
[15:53:03] <ns12> Hello, what is an example of an identifier that is declared to be anything other than an object or function?
[15:53:19] <mort> in the inflate code, I don't understand why it's looping 'while (strm.avail_out == 0)', I would've thought it would loop 'while (strm.avail_out != 0)'
[15:53:29] <ns12> In C99 section 6.2.2: "The following identifiers have no linkage: an identifier declared to be anything other than
[15:53:29] <ns12> an object or a function ...".
[15:54:16] *** Quits: CoderCharmander (~CoderChar@195.199.248.88) (Ping timeout: 268 seconds)
[15:54:25] *** Joins: i336 (~i336@101.175.41.93)
[15:54:30] <mort> oh wait I think I get it
[15:54:56] *** Joins: CoderCharmander (~CoderChar@2A001110020C93040000006659F51D01.mobile.pool.telekom.hu)
[15:54:58] <mort> ns12: the name of a type or struct or enum is also an identifier isn't it?
[15:55:14] *** Joins: random-nick (~random-ni@87.116.180.220)
[15:55:51] *** Joins: chomwitt (~chomwitt@94.69.34.153)
[15:55:58] <ns12> Strcuts and enums have no linkage?!
[15:56:05] <mort> no
[15:56:35] <mort> an object of type 'struct whatever' has linkage, but the struct itself doesn't, if I understand what "having linkage" means
[15:56:54] *** Joins: sunarch (uid526836@user/sunarch)
[15:58:21] <ns12> If structs have no linkage, how do multiple files share the same struct?
[15:58:41] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 245 seconds)
[15:58:43] <mort> not using the linker
[15:58:57] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:59:03] <mort> they share them using header files, which has nothing to do with the linker
[15:59:37] <mort> you have a mystruct.h, it contains 'struct mystruct { int blah; double whatever; }' and then you have a foo.c which starts with '#include "mystruct.h"' and a bar.c which starts with '#include "mystruct.h"'
[15:59:41] *** Quits: Chemical-X (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[15:59:58] <mort> that #include is basically just automatically copy/pasting the content of mystruct.h
[16:00:10] <ns12> Okay. Thank you. I think I'm starting to understand this.
[16:00:24] <mort> so it's as if both foo.c and bar.c starts with 'struct mystruct { int blah; double whatever; }'
[16:02:26] *** Quits: CoderCharmander (~CoderChar@2A001110020C93040000006659F51D01.mobile.pool.telekom.hu) (Read error: Connection reset by peer)
[16:02:58] *** Joins: kadavul (~vazha@117.207.47.46)
[16:03:51] *** Joins: CoderCharmander (~CoderChar@2A001110020C93040000006659F51D01.mobile.pool.telekom.hu)
[16:03:53] *** Joins: skipper (~whatsupbo@user/scobydoo)
[16:04:06] *** Joins: arinov (~arinov@77.67.129.200)
[16:04:06] *** Joins: ko (~i.am@user/marlboro)
[16:04:09] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:e360:445b:3be4:7bac) (Quit: Leaving)
[16:04:23] *** Quits: csh4dow (~csh4dow@122.161.51.234) (Quit: WeeChat 3.3)
[16:07:01] *** Quits: i336 (~i336@101.175.41.93) (Ping timeout: 245 seconds)
[16:07:43] *** Joins: eima (~eima@78-57-30-220.static.zebra.lt)
[16:08:18] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[16:08:33] *** Quits: eima (~eima@78-57-30-220.static.zebra.lt) (Client Quit)
[16:08:46] *** Joins: i336 (~i336@121.217.100.211)
[16:09:01] *** Joins: kuoi (~kuoi@109.175.166.41)
[16:11:15] *** Quits: nicholaus04 (~nicholaus@172.58.75.57) (Ping timeout: 264 seconds)
[16:11:58] *** Joins: nicholaus04 (~nicholaus@172.58.75.57)
[16:12:30] *** Quits: kadavul (~vazha@117.207.47.46) (Ping timeout: 260 seconds)
[16:14:35] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:15:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:15:20] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:15:51] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[16:16:21] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[16:17:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[16:17:03] *** Joins: luizfrds (~Luiz@152.250.243.147)
[16:18:10] <dave0> mort: i see in the inflate code
[16:18:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[16:18:47] <dave0> mort: strm.avail_out   counts down from the size of the buffer to 0
[16:18:58] <mort> yeah I got it
[16:19:00] <dave0> mort: so 0 means the output buffer was completely filled
[16:19:12] <mort> the last inflate will have space left
[16:19:17] <dave0> yep
[16:19:26] <mort> I just didn't understand it at first but then I thought more about it
[16:20:15] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:21:18] *** Quits: i336 (~i336@121.217.100.211) (Ping timeout: 260 seconds)
[16:23:03] *** Joins: i336 (~i336@121.216.195.191)
[16:23:05] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:25:55] *** Joins: AmR (~AmREiSa@102.47.62.197)
[16:26:12] *** Quits: CoderCharmander (~CoderChar@2A001110020C93040000006659F51D01.mobile.pool.telekom.hu) (Ping timeout: 260 seconds)
[16:26:40] *** Joins: CoderCharmander (~CoderChar@2A001110022E4DDD000000467A370901.mobile.pool.telekom.hu)
[16:27:29] *** Quits: CoderCharmander (~CoderChar@2A001110022E4DDD000000467A370901.mobile.pool.telekom.hu) (Remote host closed the connection)
[16:28:32] *** xSavitar_ is now known as xSavitar
[16:28:34] *** Quits: xSavitar (~xSavitar@kinserve.com) (Changing host)
[16:28:34] *** Joins: xSavitar (~xSavitar@user/xsavitar)
[16:30:49] *** Joins: kadavul (~vazha@117.207.47.46)
[16:30:52] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[16:34:11] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:35:25] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[16:35:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:36:10] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:37:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:37:38] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[16:41:57] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[16:42:41] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[16:43:42] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[16:44:14] *** Quits: synapse26__ (~synapse26@2001:ee0:4fcd:d00:707e:c533:f087:7dd3) (Remote host closed the connection)
[16:44:39] *** Joins: synapse26__ (~synapse26@2001:ee0:4fcd:d00:e5b6:fcd2:3dfe:944b)
[16:46:14] *** Quits: synapse26__ (~synapse26@2001:ee0:4fcd:d00:e5b6:fcd2:3dfe:944b) (Remote host closed the connection)
[16:46:39] *** Joins: synapse26__ (~synapse26@2001:ee0:4fcd:d00:e5b6:fcd2:3dfe:944b)
[16:48:14] *** Quits: synapse26__ (~synapse26@2001:ee0:4fcd:d00:e5b6:fcd2:3dfe:944b) (Remote host closed the connection)
[16:48:42] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[16:48:46] *** Joins: synapse26__ (~synapse26@2001:ee0:4fcd:d00:e5b6:fcd2:3dfe:944b)
[16:50:14] *** Quits: synapse26__ (~synapse26@2001:ee0:4fcd:d00:e5b6:fcd2:3dfe:944b) (Remote host closed the connection)
[16:50:16] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:51:17] *** Joins: synapse26 (~synapse26@2001:ee0:4fcd:d00:e5b6:fcd2:3dfe:944b)
[16:51:50] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:51:51] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:52:14] *** Quits: synapse26 (~synapse26@2001:ee0:4fcd:d00:e5b6:fcd2:3dfe:944b) (Remote host closed the connection)
[16:53:30] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[16:53:39] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Remote host closed the connection)
[16:55:23] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[16:58:01] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[16:58:38] *** Joins: xqt (~xqt@user/xqt)
[16:58:58] *** Joins: alip (~alip@exherbo/developer/alip)
[16:59:23] *** Joins: constxd (~brad@192.75.101.164)
[17:00:27] *** Quits: zwr (~zwr@2804:d45:b966:fb00:143e:d40:ce1d:b6a4) (Ping timeout: 264 seconds)
[17:04:00] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[17:05:29] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[17:06:07] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[17:07:51] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:08:16] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:c92e:99ce:dc6e:21c4)
[17:08:49] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi)
[17:10:27] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:13:13] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633)
[17:14:41] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[17:16:42] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:17:15] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:18:07] *** Quits: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 268 seconds)
[17:22:13] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:22:21] *** Quits: kadavul (~vazha@117.207.47.46) (Quit: Leaving)
[17:22:24] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[17:23:15] *** Joins: kerala (~liberapoo@117.216.16.117)
[17:24:39] *** Joins: nyah (~nyah@94.6.71.219)
[17:25:11] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[17:26:57] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[17:27:22] *** Joins: jjido (~Denis@90.213.58.125)
[17:31:49] *** Joins: pert (~pert@fsf/member/pert)
[17:34:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:34:57] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[17:40:43] *** Joins: reumeth (~reumeth@user/reumeth)
[17:44:32] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Ping timeout: 240 seconds)
[17:46:29] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[17:48:32] *** Joins: Guest17 (~Guest17@68.171.185.81.rev.sfr.net)
[17:49:01] *** Joins: noord (~noord@user/noord)
[17:49:02] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 260 seconds)
[17:52:06] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:53:04] *** Joins: sant (~sant@170.81.141.194)
[17:53:54] *** Quits: msk_ (~msk@185.124.240.174) (Ping timeout: 256 seconds)
[17:54:18] *** Joins: rewq (~pc@102.184.117.46)
[17:55:48] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[17:56:20] *** Parts: rewq (~pc@102.184.117.46) ()
[17:58:44] *** Joins: ferdna (~ferdna@user/ferdna)
[17:59:06] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Ping timeout: 245 seconds)
[18:00:49] *** Joins: Haxxa (~Haxxa@202-63-76-96.ip4.superloop.com)
[18:01:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:02:51] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[18:03:01] *** Quits: Guest17 (~Guest17@68.171.185.81.rev.sfr.net) (Quit: Client closed)
[18:04:55] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[18:06:04] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[18:06:25] *** Joins: Atlas667 (~Atlas667@193.27.12.10)
[18:08:38] *** Joins: user42 (~user42@62.210.33.120)
[18:09:46] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[18:11:28] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 256 seconds)
[18:13:52] *** Quits: sant (~sant@170.81.141.194) (Quit: sant)
[18:14:13] *** Quits: user42 (~user42@62.210.33.120) (Quit: Leaving)
[18:14:27] *** Joins: magla (~gelignite@55d4b9e2.access.ecotel.net)
[18:16:44] *** Joins: quartz (~quartz@user/quartz)
[18:19:07] *** Quits: cruncher (~cruncher@90.68.118.49) (Quit: Leaving)
[18:20:18] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:21:56] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2cda:53b0:117d:d312)
[18:22:36] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[18:25:55] *** Quits: jbauer (~jbauer@146.71.11.98) (Quit: Quitting)
[18:28:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:28:28] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[18:34:20] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[18:37:47] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:38:20] *** Quits: bzng (~bzng4@91-115-29-1.adsl.highway.telekom.at) (Quit: Leaving)
[18:39:41] *** Joins: phao (~phao@2804:d45:8e7a:de00:f592:d2fd:30d6:148d)
[18:41:21] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[18:41:32] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Remote host closed the connection)
[18:41:36] *** Quits: i336 (~i336@121.216.195.191) (Ping timeout: 245 seconds)
[18:42:45] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[18:43:23] *** Joins: i336 (~i336@101.163.247.143)
[18:44:44] *** Parts: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be) ()
[18:46:25] *** Joins: LaptopZombie (~LaptopZom@2001:1970:4884:2700::b9d6)
[18:48:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:48:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:48:26] *** Joins: wroathe (~wroathe@user/wroathe)
[18:48:30] *** Quits: simon323 (~simon323@2409:8a34:46c:5830:584f:96c4:d9ec:41d4) (Quit: simon323)
[18:50:16] *** Joins: AsenMx (~AsenMx@user/asenmx)
[18:50:27] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:51:47] *** Joins: meator (~meator@user/meator)
[18:52:39] *** Joins: cool6502 (~cool333@bzq-79-176-167-143.red.bezeqint.net)
[18:55:58] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[18:56:18] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:56:18] *** Quits: coolchrome (~cool333@bzq-79-176-167-143.red.bezeqint.net) (Ping timeout: 260 seconds)
[18:56:48] *** Quits: phao (~phao@2804:d45:8e7a:de00:f592:d2fd:30d6:148d) (Ping timeout: 268 seconds)
[18:58:53] *** Quits: i336 (~i336@101.163.247.143) (Ping timeout: 250 seconds)
[19:00:45] *** Joins: i336 (~i336@101.174.96.3)
[19:00:50] *** Joins: velgin (~velgin@2601:190:400:88c1::4c0b)
[19:03:29] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[19:04:38] *** Joins: Xatenev (~xatenev@ip4d14bcfc.dynamic.kabel-deutschland.de)
[19:04:39] *** Quits: Xatenev (~xatenev@ip4d14bcfc.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[19:08:42] *** Quits: alch (~alch@ca-18-206-170.service.infuturo.it) (Ping timeout: 256 seconds)
[19:10:39] *** Joins: alch (~alch@pd-18-113-155.service.infuturo.it)
[19:11:31] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6450:3e1f:fbe5:993b)
[19:14:32] *** Quits: Feuermagier_ (~Feuermagi@213.178.26.41) (Quit: Leaving)
[19:14:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[19:15:10] <Feuermagier> Is seccomp part of libc?
[19:16:42] <floatcomplex> no
[19:17:14] *** Quits: rsarson (~rsarson@2607:fea8:29e1:b000::1c33) (Ping timeout: 260 seconds)
[19:17:17] <Feuermagier> how do I find a seccomp version that will link with a specific libc?
[19:17:18] *** Joins: rgrinberg (~textual@201.198.177.243)
[19:19:43] <floatcomplex> not sure i follow. libc isn't allowed to know at compile time what kernel you're running
[19:20:00] <Feuermagier> floatcomplex, sry, I meant load
[19:20:23] <floatcomplex> what are you trying to load exactly
[19:20:42] <Feuermagier> floatcomplex, I'm talking about this in the context of a CTF - I'd like to patchelf so I have the same address loadout as on the target machine.
[19:21:31] <Feuermagier> wait, is seccomp statically linked?
[19:22:51] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:c92e:99ce:dc6e:21c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:24:23] *** Joins: Klinda (~superleag@user/klinda)
[19:25:53] <floatcomplex> seccomp is part of the kernel. you must be talking about libseccomp or something
[19:25:58] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:26:42] <floatcomplex> idk why it's named that, seems irresponsible
[19:28:40] *** Joins: rgrinberg (~textual@201.198.177.243)
[19:30:07] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[19:30:13] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Quit: You have been kicked for being idle)
[19:30:35] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[19:30:48] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[19:31:07] *** Joins: Betal (~Betal@user/betal)
[19:31:26] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[19:32:26] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[19:32:55] <Feuermagier> floatcomplex, yeah, libseccomp
[19:33:09] *** Joins: alioui (~medeva293@102.158.127.193)
[19:33:20] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[19:34:30] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[19:34:57] *** Quits: zaratustra (~zaratustr@user/zaratustra) (Changing host)
[19:34:57] *** Joins: zaratustra (~zaratustr@idlerpg/player/zaratustra)
[19:38:20] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[19:38:39] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[19:39:42] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 260 seconds)
[19:40:06] *** Quits: i336 (~i336@101.174.96.3) (Ping timeout: 260 seconds)
[19:40:53] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[19:41:29] *** Joins: i336 (~i336@101.163.226.175)
[19:42:08] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 256 seconds)
[19:42:27] <the_lanetly_052> hi folks, it could be off-top question but I wonder that can I use redis source code as a framework in any side/business project because it already has string, hash table etc libraries.
[19:42:45] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[19:43:12] *** Parts: alioui (~medeva293@102.158.127.193) ()
[19:43:22] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[19:43:28] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3190:4531:7023:e50c)
[19:43:28] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3190:4531:7023:e50c) (Changing host)
[19:43:29] *** Joins: skapata (~Skapata@user/skapata)
[19:45:45] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[19:46:03] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.0)
[19:46:44] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Ping timeout: 268 seconds)
[19:48:13] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[19:48:21] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[19:48:22] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.203) (Ping timeout: 256 seconds)
[19:49:26] *** Joins: ckdCreations (~ckdCreati@147.55.133.133)
[19:50:20] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[19:50:39] *** Joins: ntwk (~ntwk@user/ntwk)
[19:54:09] *** Quits: i336 (~i336@101.163.226.175) (Ping timeout: 250 seconds)
[19:54:31] *** Joins: arinov (~arinov@77.67.129.200)
[19:55:48] *** Joins: i336 (~i336@121.217.4.79)
[19:56:02] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[19:57:13] *** Joins: _kimchi (~kimchi@87.247.123.112)
[19:58:22] *** Quits: rahl (~rahl@102.114.152.12) (Ping timeout: 260 seconds)
[19:59:54] *** Joins: rahl (~rahl@102.114.132.80)
[20:01:04] <Feuermagier> can I somehow view my .c with all #DEFINE inserted into their respective positions?
[20:01:17] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[20:01:24] <Feuermagier> so a preprocessor run essentially
[20:01:24] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[20:02:27] <bsandro> gcc -E
[20:02:46] <Feuermagier> thx
[20:04:06] *** Quits: velgin (~velgin@2601:190:400:88c1::4c0b) (Ping timeout: 245 seconds)
[20:04:19] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[20:06:16] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[20:07:03] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:08:47] *** Joins: Betal (~Betal@user/betal)
[20:09:20] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[20:10:32] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[20:11:14] *** Joins: abip20 (~abdullah@user/abip20)
[20:11:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:12:10] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 256 seconds)
[20:12:38] *** Quits: i336 (~i336@121.217.4.79) (Ping timeout: 268 seconds)
[20:12:58] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[20:13:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[20:14:11] *** Joins: i336 (~i336@101.174.202.180)
[20:14:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:14:29] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 268 seconds)
[20:15:34] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 256 seconds)
[20:15:58] <_kimchi> any cool resources on C you might share?
[20:16:06] <_kimchi> projects, language itself, etc.
[20:16:22] <Feuermagier> _kimchi, check the channel description
[20:16:24] *** Joins: gdd (~gdd@129.199.146.230)
[20:16:25] *** Joins: Betal (~Betal@user/betal)
[20:17:09] <Feuermagier> _kimchi, other than that the C-infrequently-asked-questions: https://www.seebs.net/faqs/c-iaq.html
[20:17:10] <candide> Title of Feuermagier's link: Infrequently Asked Questions in comp.lang.c
[20:17:19] * Feuermagier pets candide 
[20:17:33] * candide smiles at F​euermagier
[20:18:08] <_kimchi> thank yuu
[20:18:36] * Feuermagier is pleased
[20:18:51] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[20:19:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:20:02] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 268 seconds)
[20:20:20] *** Joins: AsenMx (~AsenMx@user/asenmx)
[20:22:20] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 260 seconds)
[20:23:55] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[20:24:06] <_kimchi> cause I got accepted for practice in a company that develops with C, so now gathering info before I enter it, heh
[20:24:22] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[20:26:48] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:27:00] *** Joins: pnbeast (~pnbeast@24.102.186.191.res-cmts.snh.ptd.net)
[20:30:11] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:43] <_kimchi> hm, it's a common practice to declare global variables in header files?
[20:33:18] <_kimchi> or its a joke
[20:34:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[20:34:48] <Bou> 90% of that thing is a joke
[20:35:15] <omegatron> with or without extern?  =D
[20:35:31] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:35:31] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:35:31] *** Joins: wroathe (~wroathe@user/wroathe)
[20:35:42] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[20:36:16] *** Joins: reumeth (~reumeth@user/reumeth)
[20:36:55] <_kimchi> okay lol
[20:37:26] *** Quits: kuoi (~kuoi@109.175.166.41) (Read error: Connection reset by peer)
[20:38:33] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Ping timeout: 250 seconds)
[20:38:47] <_kimchi> omegatron: with;p -.-
[20:39:06] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[20:39:33] <omegatron> IMO, global variables are rarely a good idea to begin with - I prefer a clean API for access/modification of stuff that has "global" scope - those functions could be "inline" if someone wishes
[20:39:37] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[20:39:56] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[20:40:00] <omegatron> but that might be something of personal taste
[20:40:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[20:40:38] <cehteh> in embedded stuff rules good practices are often turned upside down, prefer globals, big non nested functions, etc (very platform dependant)
[20:40:51] <nomagno> Is the IAQ some in joke? It's bullshit after 1.7
[20:41:04] <nomagno> `In the old days, when Microsoft first invented C`
[20:41:14] <omegatron> of course - embedded changes many aspects
[20:41:18] <_kimchi> well, it is bS 
[20:41:48] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[20:41:54] <edk> of course it's a joke lol
[20:42:37] <pragma-> it's easier to recognize jokes when they're funny
[20:43:06] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:43:06] <_kimchi> ^ +++
[20:43:36] *** Quits: magla (~gelignite@55d4b9e2.access.ecotel.net) (Quit: Stay safe!)
[20:44:24] <edk> shrug, i liked it
[20:45:34] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[20:46:04] <SrPx> what is the best place to find someone very experienced with low-level C optimization to work improving the most possible a ~500 loc file I have?
[20:46:10] <floatcomplex> "If you restrict your allocation to allocating sizeof(void *) bytes at a time, you will find that you can use sizeof() to get the size of a block, in the obvious way.
[20:46:18] <floatcomplex> ok that's funny
[20:46:47] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi)
[20:47:02] <omegatron> SrPx : depends on what you are willing to pay ..
[20:49:56] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:50:33] <Bou> and how awful/interesting the code is I guess
[20:50:41] <SrPx> omegatron: can I have an idea of how much it would cost?
[20:50:41] <omegatron> of course
[20:51:32] <Bou> some idiot might do it for free
[20:51:37] <omegatron> SrPx: to be perfectly honest: I would have to see first the code in question, to give you the amount of my pain, expressed in Euro, to answer that
[20:52:20] <_kimchi> where do you even begin to learn low-level C optimization? is it done in assembly or C?
[20:52:30] <omegatron> (though a snippet would most likely do it - doesn't have to be the whole thing)
[20:53:09] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[20:53:44] <SrPx> it is a next-gen, parallel functional runtime using some theoretical breakthroughs. I wrote the it in C, and it consistently beats the fastest compiler (GHC) with multiple threads, but not single thread. this is actually quite impressive already, but my C is honestly lame, so I'm basically looking for someone really good at the low-level stuff so we could improve these numbers together
[20:53:46] <omegatron> low-level C optimization is some arbitrary stuff .. some people might include to do some stuff in assembler (but that requires knowledge wich machine is targeted and portability is often lost)
[20:53:52] <SrPx> this is the relevant code: https://github.com/Kindelia/CaseCrusher/blob/master/src/Crusher/Runtime.c 
[20:53:53] <koollman> SrPx: any internet forum-like thing (stackoverflow, reddit), post it and say you think it is optimal but want to change something in it
[20:54:09] <koollman> they will go right at proving you that it's not optimal
[20:54:10] <SrPx> I'm willing to pay well
[20:54:15] <SrPx> koollman: ha :p
[20:54:16] <koollman> thus, optimizing ;)
[20:55:34] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633)
[20:56:06] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi) (Quit: WeeChat 2.8)
[20:56:38] <omegatron> SrPx: have you a measurement in place to check if code modifications are actually making it better?  I guess you want optimization in code execution time?
[20:56:42] *** Quits: ko (~i.am@user/marlboro) (Ping timeout: 260 seconds)
[20:56:57] *** Joins: rgrinberg (~textual@201.198.177.243)
[20:57:07] *** Joins: ko (~i.am@187.59.153.242)
[20:57:07] *** Quits: ko (~i.am@187.59.153.242) (Changing host)
[20:57:07] *** Joins: ko (~i.am@user/marlboro)
[20:58:25] <SrPx> yep, I have some files in the benchmark directory which can be ran (typing `crush file.bolt`). once ran, it will output the result, the time, and the number of rewrites it took to reach the normal form
[20:58:43] <_kimchi> what does that program do?
[20:58:46] <omegatron> because if it's execution time you want to optimize, you might want to tune your compiler options for speed first (and maybe define some of your functions as inline, if that has no unwanted side effects for you)
[20:58:56] <SrPx> so, the main performance metric is rewrites per second. right now it is reaching 160m rwts/s single thread
[20:59:13] <caze> Get a profiler.
[20:59:21] <SrPx> omegatron: I've tried, but it seems to make no difference. I guess clang already inlines everything
[20:59:28] <omegatron> yeah, let the profiler find out, where bottlenecks are, if any
[20:59:29] <SrPx> _kimchi: it evaluates λ-calculus terms to normal form, essentially
[21:00:57] *** Joins: kexec (~kexec@user/kexec)
[21:01:08] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[21:01:24] <SrPx> anyway, the thing is, I now my C is not great, so there is more to do than just inlining functions. I'm talking about someone who can understand the runtime and think in better ways of doing things. i've mad many decisions that I'm not confident about (like packing a lot of data in 64-bit ints instead of using a larger struct)
[21:01:53] <SrPx> I'd definitely pay well in case anyone is interested or knows someone who might be. that should be a freelancing job for ~4 weeks
[21:02:08] <omegatron> ah I see, so that would involve to check the conceptual work done?
[21:02:39] <SrPx> yep! but it isn't overly complicated, I swear. it is basically just a tree with rewrite rules
[21:02:46] <nomagno> SrPx: Packing data reutilizing the bits of an integer is fine
[21:02:57] *** Joins: strajder_ (~strajder@user/strajder)
[21:03:09] <nomagno> Justake sure it is unsigned, and you know the endinaness of your system
[21:03:18] <nomagno> s/endinaness/endinaness/
[21:03:40] <nomagno> Definitely portable inside a single codebase if done properly
[21:04:08] <SrPx> I see :)
[21:04:09] <omegatron> .. yes, if your target machine is 64-bit then do everything in 64-bit (where possible), avoid smaller sizes and you might want to check out the compiler hints  "likely"  for branches
[21:04:11] *** Joins: nostar (~nostar@68.51.221.108)
[21:04:42] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[21:04:48] <SrPx> also it would be great to inspect the generated ASM and see if it isn't doing more than it should in the critical areas
[21:04:50] *** Quits: strajder_ (~strajder@user/strajder) (Client Quit)
[21:04:56] <omegatron> any avoided branch is good for speed
[21:05:02] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 260 seconds)
[21:05:06] *** Joins: strajder (~strajder@user/strajder)
[21:05:27] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[21:05:53] <floatcomplex> profile it to see if it matters on the relevant hardware
[21:06:52] *** Quits: LaptopZombie (~LaptopZom@2001:1970:4884:2700::b9d6) (Quit: Konversation terminated!)
[21:07:26] *** Quits: ko (~i.am@user/marlboro) (Ping timeout: 260 seconds)
[21:07:27] <SrPx> profile in what sense, though?
[21:07:32] <SrPx> it is basically just 1 function running on loop
[21:08:03] *** Joins: ko (~i.am@187.59.153.242)
[21:08:03] *** Quits: ko (~i.am@187.59.153.242) (Changing host)
[21:08:03] *** Joins: ko (~i.am@user/marlboro)
[21:08:06] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[21:08:13] <nomagno> Is there a way to have the preprocessor only include a piece of code if a specific header is included?
[21:08:26] <nomagno> so #ifinclude or something
[21:08:36] <floatcomplex> sure
[21:08:48] <omegatron> nomagno: you could check for the existence of a certain symbol
[21:09:06] <nomagno> I'm checking for stdio.h
[21:09:07] <omegatron> or other pre-processor constants
[21:09:21] <nomagno> Not sure I can do that portably
[21:09:38] <nomagno> Does stdio.h define any constants? Lemme check the standard
[21:10:25] <floatcomplex> SrPx: figure out what the bottleneck instruction is, and figure out how often on the target hardware you should be able to run it, and how often you're achieving; if they're close enough, stop trying to optimize. otherwise, figure out if you could be loading/storing memory more efficiently
[21:10:33] <floatcomplex> perf will help with all of this
[21:10:49] <SrPx> I see
[21:10:52] <nomagno> _IOFBF
[21:10:56] <nomagno> I can check for that
[21:12:27] <omegatron> or BUFSIZ
[21:12:39] <omegatron> maybe EOF is even better
[21:12:50] <nomagno> EOF, yes
[21:13:26] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.0) (Ping timeout: 260 seconds)
[21:14:03] <omegatron> or the guard definition  _STDIO_H   (unless you want to compile against real old sdks)
[21:14:34] *** Joins: arinov (~arinov@77.67.129.200)
[21:15:28] *** Joins: chr1 (~chr@mail.alfaorigo.dk)
[21:15:42] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:15:46] *** Quits: chr1 (~chr@mail.alfaorigo.dk) (Remote host closed the connection)
[21:16:35] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633)
[21:17:09] *** Joins: kdc_ (~kdc@196.211.197.159)
[21:17:15] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Quit: Ping timeout (120 seconds))
[21:17:25] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[21:17:41] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[21:17:54] *** Joins: masterbuilder (~user@user/masterbuilder)
[21:18:47] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[21:19:36] *** Quits: kdc (~kdc@196.211.197.159) (Ping timeout: 256 seconds)
[21:19:46] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633) (Client Quit)
[21:20:31] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633)
[21:20:53] <pragma-> ,c23
[21:20:53] <candide> C23 Charter: http://open-std.org/JTC1/SC22/WG14/www/docs/n2611.htm -- Working Draft: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2731.pdf
[21:21:04] * pragma- ctrl-Fs for _STDIO_H
[21:21:22] *** Joins: magla (~gelignite@55d4b9e2.access.ecotel.net)
[21:21:35] <pragma-> I wasn't sure if C23 may have introduced _STDIO_H. But as I suspected, there isn't a portable well-defined guard.
[21:21:47] <floatcomplex> why do you want to do this, though
[21:26:34] *** Joins: velgin (~velgin@2601:190:400:88c1::4c0b)
[21:27:18] *** Joins: Akuli (~Akuli@82-203-164-142.bb.dnainternet.fi)
[21:33:56] *** Joins: BSaboia (~bsaboia@177.184.132.202)
[21:34:20] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[21:36:10] *** Joins: cool2077 (~cool333@bzq-79-176-167-143.red.bezeqint.net)
[21:39:13] *** Quits: cool6502 (~cool333@bzq-79-176-167-143.red.bezeqint.net) (Ping timeout: 250 seconds)
[21:40:27] *** Joins: echoSMILE (uid504326@user/echosmile)
[21:41:17] *** Joins: mahmutov_ (~mahmutov@5.47.64.116)
[21:42:45] *** Quits: BSaboia (~bsaboia@177.184.132.202) (Quit: This computer has gone to sleep)
[21:45:12] *** Joins: BSaboia (~bsaboia@177.184.132.202)
[21:45:38] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[21:45:45] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[21:46:21] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[21:46:52] *** Joins: elforo (~elforo@host86-145-61-8.range86-145.btcentralplus.com)
[21:48:55] *** Joins: charadon (~charadon@155.138.164.183)
[21:48:58] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[21:49:50] *** Joins: mrig (~mrig@user/mrig)
[21:50:33] *** Joins: HolyFishPaste90 (HolyFishPa@gateway/vpn/protonvpn/holyfishpaste90)
[21:51:42] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:4041:2821:6ca2:7633) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:53:17] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:53:17] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:53:17] *** Joins: wroathe (~wroathe@user/wroathe)
[21:53:45] *** Quits: abip20 (~abdullah@user/abip20) (Quit: Konversation terminated!)
[21:56:09] *** Joins: Narrat (~omnius@p200300df5f0df16c06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:56:45] *** Quits: BSaboia (~bsaboia@177.184.132.202) (Quit: This computer has gone to sleep)
[21:57:35] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:a058:550b:9e44:5264)
[21:58:16] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[21:59:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:00:21] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-a058-550b-9e44-5264.inf6.spectrum.com) (Ping timeout: 245 seconds)
[22:00:32] *** Quits: velgin (~velgin@2601:190:400:88c1::4c0b) (Ping timeout: 240 seconds)
[22:01:37] *** Joins: BSaboia (~bsaboia@177.184.132.202)
[22:01:57] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:03:48] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:06:34] *** Quits: elforo (~elforo@host86-145-61-8.range86-145.btcentralplus.com) (Remote host closed the connection)
[22:07:00] *** Quits: begriffs_ (~begriffs@user/begriffs) (Remote host closed the connection)
[22:07:12] *** Quits: cool2077 (~cool333@bzq-79-176-167-143.red.bezeqint.net) (Ping timeout: 256 seconds)
[22:07:23] *** Joins: begriffs_ (~begriffs@user/begriffs)
[22:08:05] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:10:59] *** Joins: coolchrome (~cool333@bzq-79-176-139-177.red.bezeqint.net)
[22:11:10] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[22:13:28] *** Joins: riksu-raksu (riksteri@gateway/vpn/airvpn/riksteri)
[22:15:50] *** Joins: cool6502 (~cool333@bzq-79-176-139-177.red.bezeqint.net)
[22:16:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:16:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:16:08] *** Joins: wroathe (~wroathe@user/wroathe)
[22:16:36] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Ping timeout: 268 seconds)
[22:18:02] <SrPx> I'm looking to hire a C dev on Toptal, is it goo?
[22:18:04] <SrPx> good*
[22:18:19] *** Quits: BSaboia (~bsaboia@177.184.132.202) (Quit: This computer has gone to sleep)
[22:20:14] *** Quits: coolchrome (~cool333@bzq-79-176-139-177.red.bezeqint.net) (Ping timeout: 256 seconds)
[22:20:14] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) (Ping timeout: 256 seconds)
[22:20:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:20:54] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[22:21:38] *** Quits: i336 (~i336@101.174.202.180) (Ping timeout: 260 seconds)
[22:22:20] *** Joins: i336 (~i336@101.175.207.233)
[22:23:30] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.4-dev)
[22:24:12] *** Quits: begriffs_ (~begriffs@user/begriffs) (Ping timeout: 256 seconds)
[22:24:25] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[22:25:48] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[22:26:11] *** Quits: sunarch (uid526836@user/sunarch) (Quit: Connection closed for inactivity)
[22:28:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:28:19] *** Quits: X-Scale (~ARM@31.22.167.95) (Ping timeout: 268 seconds)
[22:29:26] *** X-Scale` is now known as X-Scale
[22:30:37] <tk> what
[22:31:42] <tk> SrPx: how are we supposed to know?
[22:32:19] <SrPx> this is a C channel, someone may have experience with the platform... ue
[22:33:39] *** Joins: Atque (~Atque@user/atque)
[22:37:13] <floatcomplex> that sounds more like the sort of thing people who DON'T know c would have experience with :)
[22:38:16] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[22:41:36] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:42:33] *** Joins: user51 (~user51@176.228.151.30)
[22:44:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[22:44:27] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 250 seconds)
[22:44:45] <constxd> SrPx: just hire me
[22:45:08] <SrPx> floatcomplex: :(
[22:45:15] <SrPx> where are the c wizards then
[22:45:20] <SrPx> constxd: lets go
[22:45:35] <SrPx> you have xp optimizing c?
[22:46:28] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:46:44] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:47:36] *** Joins: arinov (~arinov@213.194.126.155)
[22:48:29] <constxd> what kind of application?
[22:57:33] <_kimchi> a weird one xD
[22:57:34] *** Quits: HolyFishPaste90 (HolyFishPa@gateway/vpn/protonvpn/holyfishpaste90) (Ping timeout: 260 seconds)
[22:57:39] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[22:58:08] <_kimchi> talking for real here it is: https://github.com/Kindelia/CaseCrusher/blob/master/src/Crusher/Runtime.c
[22:58:11] <_kimchi> he already asked this before
[22:58:35] <_kimchi> "evaluates λ-calculus terms to normal form"
[22:59:16] <riv> _kimchi: ?
[22:59:38] <pragma-> pro-tip, your identifiers can be longer than 3 characters.
[23:00:08] <_kimchi> riv: I answered for SrPx to constxd
[23:00:38] <SrPx> _kimchi: ty
[23:01:34] <SrPx> _kimchi: not that weird though
[23:01:53] <_kimchi> srry it's weird for me, because I do not understand it :D
[23:02:02] <_kimchi> not weird for others probably tho
[23:02:17] <_kimchi> "don't understand it
[23:02:22] <_kimchi> 's usefuleness"
[23:02:27] <constxd> SrPx: you ported the VM from typescript to C and now you want it to be even faster?
[23:02:52] <SrPx> _kimchi: not that hard to understand though, functional languages (like haskell, scheme, etc.) need a runtime to run, which is responsible for keeping track of closures and things like that. that's pretty much it :p
[23:03:27] <SrPx> constxd: exactly! and it is actually really fast right now, even though my C is bad. so my hope is that an actual decent C developer can do a better job
[23:03:34] *** Joins: Betal (~Betal@user/betal)
[23:03:43] <floatcomplex> is it fast enough
[23:03:49] <constxd> these repos are giving me urbit vibes
[23:03:57] *** Joins: sysctl (~sysctl@88.215.77.255)
[23:04:26] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7)
[23:04:44] <SrPx> it reaches about 160m rewrites/second on the first version. if we reach 300m rewrites/second we get into the "wow we can actually render real time games and real tracers using pure functions" territory, and that is pretty cool. haskell/ghc can't do that, for example
[23:05:16] <SrPx> for a perspective, the first version had ~1m rewrites/s, and ~5 years after I was barely reaching 30m. it took a breakthrough in how nodes are represented to get to 160m
[23:05:26] *** Quits: sysctl (~sysctl@88.215.77.255) (Client Quit)
[23:05:29] <caze> SrPx: It's not like there's a direct correlation between the C code you write, and the output of the compiler.
[23:05:38] *** Quits: riksu-raksu (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksu-raksu)
[23:05:39] *** Joins: sysctl (~sysctl@88.215.77.255)
[23:05:44] <SrPx> and even better, it is embarrassingly parallelizable, so I get 600m rewrites/s with 4 threads
[23:05:55] <SrPx> ray tracers*
[23:06:14] <SrPx> caze: what do you mean?
[23:06:22] <caze> SrPx: So you're not really looking for a "c wizard".
[23:06:24] <floatcomplex> SrPx: is it fast enough, though, for your use case
[23:07:03] <SrPx> floatcomplex: it is never fast enough when it comes to compiler. Each % gain in performance affects everything. It affects the performance of every app built in our language, it affects the compiler speed, etc. etc.
[23:07:04] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:07:04] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:07:04] *** Joins: wroathe (~wroathe@user/wroathe)
[23:07:58] <constxd> the thing is
[23:08:00] <floatcomplex> then it sounds like you need to get good at c, now and in the future
[23:08:24] *** Quits: alch (~alch@pd-18-113-155.service.infuturo.it) (Ping timeout: 256 seconds)
[23:08:37] <floatcomplex> this isn't something that paying money one time will help with
[23:08:39] <caze> SrPx: ,cc char *str = "hello world"; for (char *p = str; *p != '\0'; p++) { printf("%cX", *p); }
[23:08:42] <candide> SrPx: hXeXlXlXoX XwXoXrXlXdX
[23:08:58] <caze> SrPx: ,cc printf("hXeXlXlXoX XwXoXrXlXdX");
[23:09:00] <candide> SrPx: Same output.
[23:09:01] *** Joins: Zenton (~user@user/zenton)
[23:09:12] <SrPx> floatcomplex: you think so?
[23:09:16] <pragma-> to ekk the edge you'd probably need to write platform-specific assembly for your most important platforms.
[23:09:19] <caze> SrPx: The compiler may emit identical code for both of those programs.
[23:09:29] <constxd> the best language lawyer in the world won't be able to make your program fast unless they understand the problem you're solving
[23:09:40] <constxd> you have the best idea of how to make it fast
[23:10:01] *** Joins: alch (~alch@151.36.101.4)
[23:10:10] <omegatron> floatcomplex: why? if he pays once for decent work and can then look at the new form of the code and learn from it, why shouldn't he do this?
[23:10:19] <SrPx> caze: so what you're saying is that the crappy code I wrote is the final performance and I can't really expect it to improve once carefully optimized by a low-level specialist?
[23:10:36] <caze> SrPx: A low level specialist would not be writing C.
[23:10:50] <SrPx> omegatron: exactly, there are lots of micro decisions that I took, that someone who is experienced in optimizations could have done differently
[23:10:58] <constxd> try using some profiling tools like cachegrind or perf and find out where the bottlenecks are
[23:11:02] <pragma-> er, eke.
[23:11:14] <SrPx> caze: I'm 100% open to targeting LLVM
[23:12:03] <caze> SrPx: That's not really the point.
[23:12:20] <floatcomplex> caze: not necessary true that specialized asm would be appreciably faster
[23:12:34] <rcf> floatcomplex: but it is low level, which standard C is not. 
[23:12:41] <SrPx> constxd: that is a good point, but the system is fairly simple to understand. I really believe I can teach it to someone who actually knows C in a few days
[23:12:47] <caze> floatcomplex: Yes, that's why he should measure.
[23:13:07] <floatcomplex> depends a lot on the target hardware. if it's x86_64 it's not worth trying to beat the compiler. if it's arm, probably is
[23:13:20] <pragma-> measure twice, assemble once.
[23:13:32] <floatcomplex> gotta perf it
[23:13:42] <caze> SrPx: The thing with C is that it is an abstraction, which means that what the C code translates to is not fixed. That's the point I'm trying to make.
[23:13:44] <SrPx> perhaps I could create an open bounty 
[23:13:46] <pragma-> have you tried turning it off and then on again?
[23:13:58] <SrPx> like $Xk usd for each 5% improvement in our benchmarks
[23:14:01] <SrPx> what do you think?
[23:14:13] <floatcomplex> heh
[23:14:14] *** Joins: cousteau (~cousteau@user/cousteau)
[23:14:26] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[23:14:37] <omegatron> SrPx: if you want to see how other (companies) do this:  https://github.com/flightaware/Tcl-bounties   (Tcl in this case, but... )
[23:14:39] <candide> Title of omegatron's link: GitHub - flightaware/Tcl-bounties: Bounty program for improvements to Tcl and certain Tcl packages
[23:14:42] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[23:14:43] <pragma-> reward should rise exponentially
[23:14:48] <floatcomplex> assuming a linear relationship could get you in a lot of trouble
[23:14:57] <SrPx> caze: yes I know, but even though that is true, different decisions would still lead to different results. the C compiler won't change the format you store pointers, for ex.
[23:15:14] *** Joins: begriffs_ (~begriffs@user/begriffs)
[23:15:19] <floatcomplex> SrPx: you shouldn't need to assume that
[23:15:45] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:15:51] <SrPx> omegatron: oh, really cool. Thank you. They even have a "$20,000 for Tcl to run 2X faster than Tcl 8.6 for a benchmark program TBD." - which is pretty in line with what I have in mind
[23:16:16] <omegatron> hmmmmmmmmmmmmmm ....  =D
[23:16:43] <floatcomplex> you are going to be paying someone to make your code less maintainable in order to game one metric
[23:16:52] <floatcomplex> consider whether this is wise
[23:16:55] * omegatron is thinking if I might shuffle my plans for the next six weeks around
[23:17:11] <SrPx> floatcomplex: that is not true and doesn't make any sense
[23:17:12] <rcf> omegatron: the 'TBD' is too sneaky for that to be worthwhile. 
[23:17:35] <SrPx> omegatron: yes (: 
[23:17:39] <caze> SrPx: Optimization makes maintainability harder.
[23:17:43] <caze> (oftentimes)
[23:17:48] <rcf> omegatron: that is, because they can specify the benchmark, they will do everything in their power to make one that disadvantages your proposal. 
[23:18:06] <SrPx> tbf probably not. I mean, I'm afraid someone will try and will not get any results. But I also find it extremely unlikely that I'm better than you folks at writing fast C code
[23:18:17] <omegatron> ... I'm talking about SrPx' offer ..   but unfortunately I have to really check his code first and download all the requirements first .. (might take some hours tonight)
[23:18:29] <SrPx> but thing is, I'd pay ~20k for a 2x increase in our runtime performance
[23:19:12] <constxd> tfw u spend 4 months optimizing Tcl and the benchmark program is 'sleep(500)'
[23:19:15] <cousteau> oh yeah I had seen the Tcl bounties thing
[23:19:36] <cousteau> most I've ever achieved was to speed up a Tcl program, but not Tcl itself
[23:19:46] <SrPx> but of course, these improvements have to make sense. like "change your pointer format to use a struct", "change the freelist representation in the allocator", etc. etc. 
[23:19:54] <cousteau> it was a poorly written program though; speeding up the thing running Tcl is a different matter
[23:20:17] <SrPx> so these will be long-term improvements, not just hacking a metric as floatcomplex suggests
[23:20:36] <SrPx> things that I could have done differently:
[23:20:40] <floatcomplex> then you can't cost it the way you've defined above
[23:20:46] <SrPx> - use 32 bit pointers instead of 64-bit
[23:20:48] <floatcomplex> you need in house c talent
[23:21:06] <SrPx> floatcomplex: not opposed to that though
[23:21:08] <cousteau> SrPx: if I make a lower increase, will you pay proportionally to the achievement?
[23:21:20] <cousteau> I can make your code 1x faster for $10k
[23:21:38] <constxd> your best bet might be to re-write it in rust -- rust is blazing fast (and SAFE!)
[23:22:07] * cousteau hopes SrPx doesn't notice by the time he receives the money
[23:22:53] <Bou> How is Rust any faster than the equivalent C?
[23:23:01] <SrPx> cousteau: yep, we can do it in a feature/improvement basis. just a random example: "I changed X to use a Queue instead of a Stack and it improves the performance by 15% because it avoids cache misses in a critical part". so that would grant 15% of the 20k
[23:23:25] <SrPx> cousteau: I love rust though but it isn't faster than C usually (?)
[23:23:39] <Bou> It does clever memory management but a for loop in Rust won't outperform one in C
[23:23:40] <cousteau> SrPx: (and I'm going off-topic here) I had some luck using a mostly self-made Tcl profiling lib that showed which functions were called most often and were spending most of the processing time
[23:24:18] <SrPx> cousteau: I don't think that will really help though, because there is literally just one function that is called over and over. (it does call other functions but these are inlined)
[23:24:19] <cousteau> also the one who mentioned Rust was constxd and not me
[23:24:47] <SrPx> but the program is basically a loop of: "pattern-match on a tree, alloc a few nodes, free a few nodes, repeat"
[23:25:13] <cousteau> SrPx: do you know about shimmering?  (anyway, off.topic; we can continue this in #tcl or #c-offtopic)
[23:25:17] <SrPx> cousteau: sorry, the auto-complete of "co" went to you
[23:25:36] <pragma-> main() is "literally one function" too
[23:25:58] <floatcomplex> SrPx: you need to use perf to figure out where your code is spending its time within that function
[23:26:09] <SrPx> cousteau: okay
[23:26:12] <cousteau> yeah just wanted to clarify it wasn't me, in case the nicks confused you (wasn't sure if it was an autocomplete fail or if you mixed both of us up, which can happen)
[23:26:24] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[23:26:52] <_kimchi> 20k for code optimization well that's lit
[23:27:40] <SrPx> (:
[23:28:31] <_kimchi> how will it make this investment worthwile?
[23:28:50] <Bou> it looks fairly clean, doubling the speed may not even be possible
[23:29:02] <omegatron> _kimichi: if that's code that runs a zillion times later in a datacenter ...
[23:29:02] <constxd> bro what
[23:29:05] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.3)
[23:29:20] <constxd> cleanliness does not = optimized
[23:30:20] <Bou> clean as in, doesn't do/repeat things unnecessarily
[23:30:58] <constxd> you can tell that by looking for just a few minutes?
[23:31:15] <constxd> hire this guy
[23:31:40] <omegatron> SrPx: if I would download and build/install all requirements, so I could check/test your code on a machine of mine to poke aruond and notice at least some speed up, should I conctact you via github?
[23:32:00] <SrPx> _kimchi: honestly just the time it would save compiling Kind-Lang programs would be worth it, right now it takes ~5 mins to check our RLP proof, for example
[23:32:19] <SrPx> but so many other cool things would be unlocked once we have that ~2x speed bump
[23:32:39] *** Joins: VincentValentine (~VincentVa@pppoe-88-147-182-198.san.ru)
[23:32:45] <SrPx> omegatron: can you reach me on Telegram or Discord? These are the places I check
[23:33:00] <SrPx> also let me know if you have any trouble installing (you probably will, I just installed it on my machine so far)
[23:33:08] <omegatron> hm, unfortunately I use neither of them 
[23:33:41] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7)
[23:33:46] <omegatron> otherwise here on libera.chat in another room ..
[23:35:03] <SrPx> Bou: yea, I'm afraid that might be the case. But again, there are many micro decisions I made that would surely change the results.
[23:35:41] *** Joins: rgrinberg (~textual@201.198.177.243)
[23:36:26] <_kimchi> is code optimization business a big market? ;D
[23:38:29] *** Joins: johnjay (~pi@192.142.100.50)
[23:38:54] <johnjay> so. if sizeof(int) is 4, does that mean 0x80000000 > -1 will always test false?
[23:38:55] <Bou> nah the biggest market is "write shitty code and run away before they notice the bugs"
[23:39:02] <omegatron> yep
[23:39:18] <omegatron> _kimchi: yes and no - depends on which sector
[23:39:22] <johnjay> e.g. printf("%d",0x80000000 > -1)
[23:39:23] <SrPx> I can point many things that could be attempted: change the pointer representation to structs, remove the hardcoded allocator and just use malloc or mimalloc, replace recursion by stacks on reduce(), inline the calls to subst()/link() and try to avoid repeated memory reads, change the seen buffer to the heap, or perhaps just use a bit of the pointer and avoid it altogether, investigate cache misses and group data to avoid these, ... idk 
[23:39:23] <SrPx> what else, but I know stuff can be done
[23:39:27] *** Quits: kdc_ (~kdc@196.211.197.159) (Quit: Leaving)
[23:39:56] <johnjay> SrPx: I don't know how to do most of those things so kudos.
[23:41:00] <SrPx> _kimchi: I think yes, I mean think of how much Google paid to build V8
[23:41:25] <SrPx> or how many engineer Apple have to optimize OSX and its apps?
[23:41:36] <SrPx> it just isn't the mass appeal kind of job, but certainly there is a market
[23:41:37] <_kimchi> SrPx: yeah but are there many companies like Google 
[23:41:48] <_kimchi> I see
[23:42:07] <SrPx> well certainly there are way less companies building general purpose javascript JIT compilers than companies building apps and websites :p
[23:42:26] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:42:31] <user51> i'm adding two unsigned bytes, and i want to check for overflow and set a carry bit if there was overflow. what are my options?
[23:42:39] <SrPx> but I think whoever does that really well must be making a buck, and won't ever be out of job
[23:42:58] *** Quits: begriffs_ (~begriffs@user/begriffs) (Ping timeout: 256 seconds)
[23:43:08] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[23:43:09] <johnjay> user51: i want to know the answer as well. lol
[23:43:17] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[23:43:18] <_kimchi> SrPx, neat
[23:43:28] *** Quits: VincentValentine (~VincentVa@pppoe-88-147-182-198.san.ru) (Ping timeout: 260 seconds)
[23:44:10] <johnjay> but yeah afaict the c standard stipulates hex literals are int, unsigned int, long, unsigned long, etc
[23:44:11] <constxd> unsigned types can't overflow in C
[23:44:28] <johnjay> whichever fits it first. so 0x80000000 is made a signed value hence it equals -1
[23:44:48] *** Parts: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) ()
[23:45:07] *** Joins: Pentode (~Pentode@mobile-166-171-57-43.mycingular.net)
[23:47:10] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[23:49:05] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[23:49:12] <_kimchi> when you optimize the code speed, do you use some automatic tools that you wrote yourself, or everything manually? or hybrid?
[23:51:01] <pnbeast> I just push the red botton the computer case.  So fast...
[23:53:12] *** Joins: Echoz (~chris@user/echoz)
[23:54:12] *** Joins: serbest (~serbest@user/serbest)
[23:55:19] *** Joins: remedan (~remedan@balak.me)
[23:55:42] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[23:56:14] *** Quits: remedan (~remedan@balak.me) (Client Quit)
[23:59:17] *** Joins: remedan (~remedan@balak.me)
[23:59:38] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
