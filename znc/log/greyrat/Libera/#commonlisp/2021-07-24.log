[00:17:11] *** Quits: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com) (Quit: WeeChat 2.2-dev)
[00:19:09] <dieggsy> is there a maphash equivalent that produces a list?
[00:19:18] <Bike> Produces?
[00:19:27] <Bike> Like what kind of input and output are you looking for?
[00:20:00] <dieggsy> Bike: if maphash accumulated results of the mapped function into a list like mapcar
[00:21:17] *** Quits: cage (~cage@dynamic-adsl-78-15-46-179.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:22:01] <Bike> There is no built in version of that. You could do (let (res) (maphash (lambda (k v) (push (funcall function k v) res)) hash-table) (nreverse res)) or (loop for k being each hash-key of table using (hash-value v) collect (funcall function k v))
[00:22:40] <Bike> Since hash tables aren't ordered and lists are it's a little bit of a mismatch I suppose
[00:24:42] <dieggsy> Bike: neat, thank you! that should work. i didn't know how to loop over a hash table like that, nifty.
[00:24:47] <dieggsy> the order doesn't matter for my use case
[00:24:56] <Bike> yeah i figured
[00:24:57] <Bike> there's also with-hash-table-iterator
[00:25:34] <Bike> which is probably good for less organized iteration, but i don't think i've ever used it myself
[00:32:28] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:37:32] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[00:37:55] *** Joins: amb007 (~a_bakic@246.146.204.77.rev.sfr.net)
[00:38:55] *** Quits: domovod (~domovod@89.113.140.58) (Quit: WeeChat 3.2)
[00:45:55] <pjb> random-nick: beware, string-upcase works on string designators!
[00:46:19] <pjb> (string-upcase '|hello world| :start 3 :end 8) #| --> "helLO WOrld" |#
[00:47:09] <pjb> Well, maphash to build a list would build a (unordered) set represented as a list.
[00:53:29] *** Joins: silasfox (~sbv@165.56.186.128)
[00:56:43] *** Quits: amb007 (~a_bakic@246.146.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[00:57:22] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[01:07:29] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:18:11] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 255 seconds)
[01:25:24] *** Joins: notzmv (~zmv@user/notzmv)
[01:27:14] *** Joins: hafat (~hafat@95.70.168.45)
[01:30:57] *** Quits: silasfox (~sbv@165.56.186.128) (Ping timeout: 265 seconds)
[01:34:59] *** Joins: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[01:42:00] *** Joins: zacts (~zacts@user/zacts)
[01:43:10] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[01:44:43] *** Joins: aeth_ (~aeth@user/aeth)
[01:44:48] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[01:45:00] *** Quits: engblom (~foo@62-121-47-42.static.lounea.fi) (Ping timeout: 252 seconds)
[01:45:08] *** Joins: engblom (~foo@62-121-47-42.static.lounea.fi)
[01:45:44] *** Quits: prxq_ (~quassel@x4dbd1318.dyn.telefonica.de) (Ping timeout: 252 seconds)
[01:45:51] *** Joins: prxq (~quassel@x4dbd1318.dyn.telefonica.de)
[01:47:34] *** Quits: andreyorst (~andreyors@2.92.126.232) (Ping timeout: 252 seconds)
[01:49:48] *** Joins: andreyorst (~andreyors@2.92.126.232)
[01:58:45] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[02:04:17] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[02:10:32] *** Joins: susam_ (~susam@user/susam)
[02:10:48] *** Joins: ecraven- (ecraven@user/nex)
[02:11:15] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:11:15] *** Quits: ecraven (~ecraven@user/nex) (Ping timeout: 265 seconds)
[02:14:11] *** Quits: pve (~pve@188-67-245-184.bb.dnainternet.fi) (Quit: leaving)
[02:15:48] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[02:22:23] *** Joins: yewscion (~yewscion@2601:547:a01:2900::a967)
[02:26:31] *** Joins: aeth (~aeth@user/aeth)
[02:26:49] *** Quits: susam_ (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:27:00] *** Joins: susam (~susam@user/susam)
[02:31:43] *** Quits: aeth_ (~aeth@user/aeth) (Quit: ...)
[02:32:05] *** Quits: frgo (~frgo@p200300deef181d00cdc713606c64200b.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:32:32] *** Joins: frgo (~frgo@p200300deef181d002d51292357f74dcf.dip0.t-ipconnect.de)
[02:37:52] *** Quits: yewscion (~yewscion@2601:547:a01:2900::a967) (Remote host closed the connection)
[02:47:50] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[02:50:34] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:6d1e:6d01:d0bd:9f11) (Remote host closed the connection)
[03:02:58] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 240 seconds)
[03:03:17] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[03:13:48] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[03:28:03] *** Quits: random-nick (~random-ni@87.116.182.181) (Ping timeout: 258 seconds)
[03:33:07] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[03:49:03] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:49:03] *** Quits: fpc (~fpc@user/fpc) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:49:03] *** Quits: gin (~gin@user/gin) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:49:14] *** Joins: fpc (~fpc@user/fpc)
[03:49:49] *** Joins: gin (~gin@user/gin)
[03:50:14] *** Joins: susam (~susam@user/susam)
[03:56:22] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[04:03:58] *** Joins: pjb (~pjb@user/pjb)
[04:09:23] *** Quits: taiju (~taiju@240b:253:ec40:2400:4582:f12e:efff:b6a0) (Ping timeout: 252 seconds)
[04:15:17] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[04:15:24] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[04:20:43] *** Joins: pjb (~pjb@user/pjb)
[04:25:47] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[04:30:57] *** Joins: pjb (~pjb@user/pjb)
[04:35:09] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[04:40:07] *** Joins: pjb (~pjb@user/pjb)
[04:44:25] *** Joins: ahc (~ahc@121.98.229.241)
[04:50:52] *** Joins: dj_ (uid509723@id-509723.brockwell.irccloud.com)
[04:53:39] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[04:57:40] *** Joins: pjb (~pjb@user/pjb)
[05:00:28] *** Joins: cjb (~cjb@user/cjb)
[05:17:48] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[05:41:36] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[05:59:21] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[06:21:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Remote host closed the connection)
[06:38:40] *** Quits: mister_m (~user@c-73-209-97-9.hsd1.il.comcast.net) (Remote host closed the connection)
[07:14:23] *** Joins: prxq_ (~quassel@x4db3f526.dyn.telefonica.de)
[07:18:02] *** Quits: prxq (~quassel@x4dbd1318.dyn.telefonica.de) (Ping timeout: 245 seconds)
[07:26:14] *** Quits: gaqwas (~john@dynamic-095-117-010-054.95.117.pool.telefonica.de) (Ping timeout: 272 seconds)
[07:26:33] *** Joins: gaqwas (~john@dynamic-095-118-078-069.95.118.pool.telefonica.de)
[07:31:50] *** Joins: Oladon (~olad@98.43.81.226)
[07:32:01] <beach> Good morning everyone!
[07:47:13] *** Joins: jmhimara (~jmhimara@170.39.139.5)
[07:58:25] *** Quits: hafat (~hafat@95.70.168.45) (Remote host closed the connection)
[08:31:54] *** Quits: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se) (Ping timeout: 240 seconds)
[08:33:57] *** Joins: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se)
[08:35:06] *** Quits: jmhimara (~jmhimara@170.39.139.5) (Quit: Client closed)
[08:48:08] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[08:51:47] *** Quits: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se) (Read error: Connection reset by peer)
[08:52:13] *** Joins: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se)
[09:03:15] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[09:04:18] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 240 seconds)
[09:08:52] *** Joins: pjb (~pjb@user/pjb)
[09:16:16] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 246 seconds)
[09:17:08] *** Joins: trufas (~trufas@177.240.218.218)
[09:24:18] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[09:25:59] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:31:37] *** Joins: pjb (~pjb@user/pjb)
[09:38:28] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[09:42:11] *** Joins: cjb (~cjb@user/cjb)
[09:48:04] *** Joins: pjb (~pjb@user/pjb)
[09:53:12] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[09:58:16] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[10:03:23] *** Joins: pjb (~pjb@user/pjb)
[10:11:12] *** ecraven- is now known as ecraven
[10:14:40] *** Joins: bpanthi977 (~Thunderbi@103.152.144.53)
[10:26:00] *** Quits: pjb (~pjb@user/pjb) (Read error: Connection reset by peer)
[10:31:57] *** Joins: pjb (~pjb@user/pjb)
[10:43:37] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:44:44] *** Joins: pve (~pve@87-93-254-155.bb.dnainternet.fi)
[10:46:14] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:46:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[10:47:28] *** Lord_of_Life_ is now known as Lord_of_Life
[10:55:44] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[11:02:24] *** Joins: pjb (~pjb@user/pjb)
[11:11:01] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[11:14:39] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[11:21:32] *** Joins: pjb (~pjb@user/pjb)
[11:23:49] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[11:34:08] *** Joins: pjb (~pjb@user/pjb)
[11:36:37] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[11:40:57] *** Joins: pjb (~pjb@user/pjb)
[11:45:53] *** Quits: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (Remote host closed the connection)
[11:45:55] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[11:50:17] *** Joins: pjb (~pjb@user/pjb)
[11:52:36] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[11:55:06] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 240 seconds)
[11:56:54] *** Joins: pjb (~pjb@user/pjb)
[11:59:14] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[12:04:11] *** Quits: gaqwas (~john@dynamic-095-118-078-069.95.118.pool.telefonica.de) (Remote host closed the connection)
[12:12:28] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[12:18:28] *** Quits: frgo (~frgo@p200300deef181d002d51292357f74dcf.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[12:18:34] *** Joins: frgo_ (~frgo@p200300deef181d002d51292357f74dcf.dip0.t-ipconnect.de)
[12:18:52] *** Quits: bpanthi977 (~Thunderbi@103.152.144.53) (Ping timeout: 245 seconds)
[12:19:22] *** Joins: pjb (~pjb@user/pjb)
[12:19:52] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[12:21:48] *** Joins: shka (~herr@109.231.62.239)
[12:24:43] *** Joins: pjb (~pjb@user/pjb)
[12:24:43] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[12:27:51] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[12:36:46] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:43:22] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[12:43:43] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[12:45:56] *** Joins: pjb (~pjb@user/pjb)
[12:57:27] *** Quits: frgo_ (~frgo@p200300deef181d002d51292357f74dcf.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[12:57:33] *** Joins: frgo (~frgo@p200300deef181d002d51292357f74dcf.dip0.t-ipconnect.de)
[12:57:35] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[13:05:32] *** Joins: pjb (~pjb@user/pjb)
[13:07:36] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[13:10:59] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 255 seconds)
[13:11:10] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[13:12:44] *** Joins: pjb (~pjb@user/pjb)
[13:24:40] *** Quits: frgo (~frgo@p200300deef181d002d51292357f74dcf.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[13:24:46] *** Joins: frgo_ (~frgo@p200300deef181d00cdc713606c64200b.dip0.t-ipconnect.de)
[13:43:21] *** Joins: bpanthi977 (~Thunderbi@103.152.144.53)
[14:09:48] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[14:31:09] *** Quits: frgo_ (~frgo@p200300deef181d00cdc713606c64200b.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:31:36] *** Joins: frgo (~frgo@p200300deef181d002d51292357f74dcf.dip0.t-ipconnect.de)
[14:43:05] *** Joins: cage (~cage@dynamic-adsl-78-15-46-179.clienti.tiscali.it)
[14:50:30] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (Remote host closed the connection)
[14:51:06] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[15:11:39] *** Quits: bpanthi977 (~Thunderbi@103.152.144.53) (Ping timeout: 265 seconds)
[15:15:12] *** Joins: random-nick (~random-ni@87.116.182.181)
[15:16:09] *** Joins: Xach (~xach@user/xach)
[15:16:10] *** ChanServ sets mode: +o Xach
[15:29:07] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:31:44] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:42:42] *** Joins: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net)
[15:51:38] <jmercouris> Good morning mr beach
[15:59:44] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 255 seconds)
[16:02:28] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[16:05:18] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[16:06:45] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[16:17:35] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[16:19:18] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[16:22:50] *** Joins: kpoeck (~kpoeck@87.140.194.0)
[16:33:41] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[16:34:06] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[16:39:23] *** Joins: makomo (~makomo@user/makomo)
[16:50:38] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[16:50:50] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[16:55:14] *** Quits: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net) ()
[16:56:32] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 265 seconds)
[16:56:41] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[17:02:18] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 276 seconds)
[17:03:00] *** Joins: amb007 (~a_bakic@222.145.204.77.rev.sfr.net)
[17:16:04] <gin> is there a data structure to push a key-value pair into an alist where each assoc's car is the key and the cdr is a list of values? if I do (addkv "f" "foo" alist) (addkv "f" "fox" alist) (addkv "b" "bar" alist), I should get alist to be '(("f" . ("foo "fox") ("b" . ("bar")) which is really the same thing as '(("f" "foo" "fox") ("b" "bar"))?
[17:16:35] <gin> And if I (addkv "f" "frog" alist) to it again, I should get alist to be '(("f" . ("foo "fox" "frog") ("b" . ("bar")). and so on.
[17:16:48] <beach> (push value (assoc key list))
[17:16:59] <beach> Er, sorry
[17:17:03] <jackdaniel> (cdr ...)
[17:17:07] <beach> Yes.
[17:17:12] <beach> (push value (cdr (assoc key list)))
[17:17:32] <jackdaniel> also alexandria has a function assoc-value with setf definitions (afair)
[17:17:41] <jackdaniel> (push value (alexandria:assoc-value ...))
[17:18:25] <pjb> gin: but you need to write your own accessor to deal with the case where the key is not in the alist
[17:18:35] <pjb> gin: see the paste I gave you a few days ago.
[17:19:16] <pjb> gin: https://ideone.com/9ZrfXW
[17:19:31] <gin> beach: but (cdr (assoc key list)) is going to be NIL when the key does not exist yet, so I need to check that and add an empty list to key before I push the value, right?
[17:19:46] <beach> Right, like pjb said.
[17:19:51] <gin> beach: so I think the idea is to just use an alist and build this little functionality myself.
[17:19:56] <gin> checking pjb's paste
[17:21:15] <gin> thanks beach, pjb
[17:24:38] <_death> if I choose to use an alist, very often I have it hold a list of values, even if the length of the list is 1.. this avoid annoying (a . b) syntax
[17:24:44] <_death> *avoids
[17:29:19] *** Joins: frgo_ (~frgo@p200300deef181d00891f43d622eb7326.dip0.t-ipconnect.de)
[17:31:02] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[17:32:56] *** Quits: frgo (~frgo@p200300deef181d002d51292357f74dcf.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[17:45:04] *** Joins: dsk (~dsk@user/dsk)
[17:45:07] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:52:31] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[17:56:13] *** Quits: frgo_ (~frgo@p200300deef181d00891f43d622eb7326.dip0.t-ipconnect.de) (Quit: Leaving...)
[18:01:00] *** Joins: gaqwas (~john@dynamic-095-118-078-069.95.118.pool.telefonica.de)
[18:08:49] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[18:09:02] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[18:10:20] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:10:48] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:14:21] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[18:14:35] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[18:15:25] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[18:15:40] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[18:28:17] *** Joins: bpanthi977 (~Thunderbi@103.152.144.53)
[18:40:00] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[18:43:38] *** Quits: bpanthi977 (~Thunderbi@103.152.144.53) (Ping timeout: 256 seconds)
[18:52:13] *** Quits: amb007 (~a_bakic@222.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[18:52:23] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[18:53:12] *** Joins: selwyn (~selwyn@user/selwyn)
[18:57:19] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[18:58:19] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[19:03:12] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 276 seconds)
[19:03:27] *** Joins: amb007 (~a_bakic@222.145.204.77.rev.sfr.net)
[19:16:03] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:16:17] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[19:21:51] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[19:32:01] *** Joins: silasfox (~sbv@165.56.186.128)
[19:38:25] *** Joins: McParen (~mcp@user/mcparen)
[19:44:48] *** Quits: amb007 (~a_bakic@222.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[19:45:36] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[19:47:38] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 265 seconds)
[19:49:47] <random-nick> hello, I'm trying to write bindings to gtk (and possibly other gnome libraries) by using the girepository library which loads .typelib files from disk (which are a compiled version of .gir files, which are generated by parsing gobject-based library source code and special annotations)
[19:51:07] <random-nick> so the girepository library has a function which lets you call the introspected functions directly through it
[19:51:29] <random-nick> it handles the dynamic loading, finding the symbol, etc.
[19:52:12] <random-nick> but it also gives enough information to be used to generate bindings which have no need for girepository during runtime
[19:53:05] <random-nick> I think generating cffi bindings is a better approach, but I am not sure how should these bindings get generated
[19:54:08] <random-nick> I could make it generate the bindings using a macro, which would then mean the finished bindings would be in a compiled fasl without having to load girepository, right?
[19:55:04] <random-nick> but a problem with that is that a system update could update gtk and render the bindings somehow outdated
[19:56:29] <random-nick> so should I make it generate the bindings during load time or during macro expansion time?
[19:59:40] *** Joins: bpanthi977 (~Thunderbi@103.152.144.53)
[20:05:24] <random-nick> there's also the option of loading girepository, asking it to load the library's typelib, querying the library's major, minor and patch version and then generating a .lisp file containing the bindings, or loading one if it already exists
[20:13:15] *** Joins: akoana (~ah@user/akoana)
[20:13:23] <beach> Why do you prefer gtk to McCLIM?
[20:13:30] <pjb> random-nick: libraries are versionned too.  So if you generate the bindings for libfoo.2.3.4.so, you won't take libfoo.2.4.1.so!
[20:14:09] <pjb> random-nick: in any case, when you generate a new cffi, you will have to modify your sources!
[20:14:39] *** Joins: srhm (~ascii@user/srhm)
[20:15:38] *** Quits: gaqwas (~john@dynamic-095-118-078-069.95.118.pool.telefonica.de) (Read error: Connection reset by peer)
[20:17:13] *** Quits: srhm (~ascii@user/srhm) (Client Quit)
[20:17:38] *** Joins: srhm (~ascii@user/srhm)
[20:17:51] <random-nick> pjb: gtk3's first soversion number has apparently stayed 0 across its lifetime, so the incompatibilities seem to be only in behaviour and new additions
[20:19:16] <random-nick> also, over the lifetime of one gtk version, there don't seem to be too many incompatibilities encountered by a single program, but I don't know if that might change with gtk4
[20:24:15] <random-nick> beach: well, I don't really prefer gtk, but there don't seem to be any gtk bindings which are up-to-date and generated with gobject-introspection and gtk is a "native" toolkit for a good chunk of gnu/linux environments
[20:24:47] *** Quits: silasfox (~sbv@165.56.186.128) (Ping timeout: 255 seconds)
[20:25:21] <beach> Why is it important to use a "native" toolkit for Common Lisp applications?
[20:26:00] <random-nick> I've also briefly looked into the possibility of a mcclim backend for gtk, but it doesn't seem to be feasible because gtk3 is not only not intended to be used by multiple threads at the same time, but it's also not intended to be used by threads other than the one running the main loop
[20:26:54] <beach> That doesn't sound so great.
[20:27:18] <beach> But my question was not about a gtk backend for McCLIM.
[20:29:21] <beach> And by "that doesn't sound so great", I mean that it would make it useless for many Common Lisp GUI applications.
[20:33:52] <beach> No?
[20:34:31] <random-nick> and I don't really have an answer to your question since I don't really intend to use these gtk bindings for any serious project, and I honestly forgot why was I even looking into the gtk binding situation since it was a year ago
[20:34:56] <beach> OK, no problem.  Just trying to understand.
[20:35:39] *** Joins: silasfox (~sbv@165.56.186.128)
[20:39:29] <random-nick> oh, also regarding threads, the intended usage of threading in C gtk applications is to do everything GUI-related in initialisation code and in event callbacks, while all other threads are worker threads and send events to the main loop using glib's apis for that (some of glib's apis are thread-safe)
[20:40:03] <random-nick> this doesn't work for CL since you then can't do GUI stuff from a REPL thread
[20:40:31] <beach> I see.
[20:41:06] <beach> So gtk imposes some heavy restrictions on how the application is organized.
[20:45:02] *** Joins: yewscion (~ming@2601:547:a00:7720::88e8)
[20:48:38] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[20:50:31] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[20:52:14] *** Quits: bpanthi977 (~Thunderbi@103.152.144.53) (Quit: bpanthi977)
[20:52:32] *** Parts: McParen (~mcp@user/mcparen) ()
[20:53:13] *** Joins: ming (~ming@2601:547:a00:7720::88e8)
[20:53:53] *** Quits: yewscion (~ming@2601:547:a00:7720::88e8) (Read error: Connection reset by peer)
[21:11:21] *** Joins: frgo (~frgo@p200300deef181d0041b2662f828e694c.dip0.t-ipconnect.de)
[21:12:19] *** Quits: frgo (~frgo@p200300deef181d0041b2662f828e694c.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:12:54] *** Joins: frgo (~frgo@dynamic-046-114-144-162.46.114.pool.telefonica.de)
[21:13:30] *** Quits: frgo (~frgo@dynamic-046-114-144-162.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[21:13:36] *** Joins: frgo_ (~frgo@p200300deef181d0041b2662f828e694c.dip0.t-ipconnect.de)
[21:18:52] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-EC96-dynamic.midco.net)
[21:20:06] *** Joins: merazi (~merazi@190.92.33.230)
[21:23:58] <jackdaniel> osx as a system has the same restriction
[21:24:52] <jackdaniel> it is possible to have the port run in main thread and core infrastructure will assure thread safety between frames and the pirt
[21:24:55] <jackdaniel> th
[21:25:19] <jackdaniel> there is a library with-main-threas I think
[21:26:08] <jackdaniel> that said all ports that require being run in the main tgread would need to cooperate
[21:32:08] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:52:23] *** Quits: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com) (Quit: WeeChat 2.2-dev)
[21:53:19] *** Quits: kpoeck (~kpoeck@87.140.194.0) (Ping timeout: 246 seconds)
[22:08:15] *** Quits: ^[ (~user@user//x-8473491) (Quit: ^[)
[22:08:30] *** Joins: gaqwas (~john@dynamic-095-118-078-069.95.118.pool.telefonica.de)
[22:15:07] *** Joins: jacek (~jacek@cpc94356-ward12-2-0-cust88.10-2.cable.virginm.net)
[22:17:03] *** Quits: jacek (~jacek@cpc94356-ward12-2-0-cust88.10-2.cable.virginm.net) (Quit: Leaving)
[22:20:48] *** Quits: merazi (~merazi@190.92.33.230) (Quit: merazi)
[22:24:07] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[22:24:19] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[22:36:24] *** Quits: silasfox (~sbv@165.56.186.128) (Ping timeout: 276 seconds)
[22:41:42] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[22:48:02] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[22:48:26] *** Joins: srhm (~ascii@user/srhm)
[22:48:38] <lisp123> I have been experimenting with org-mode, it is fantastic for lisp documentation
[22:49:37] <lisp123> Creates HTML docs very easily (IMO one of the best possible static site generators out there), using only emacs, and for lisp, it will ensure indenting and syntax highlighting transfer over to the html file
[22:49:41] *** Quits: srhm (~ascii@user/srhm) (Client Quit)
[22:49:58] *** Joins: srhm (~ascii@user/srhm)
[22:50:04] <lisp123> plus you get all the power of slime/paredit/any other tools you have when workign with code blocks with org
[22:50:09] *** Joins: ^[ (~user@user//x-8473491)
[22:51:37] *** Joins: lisp123_ (~lisp123@45.86.201.13)
[22:54:18] *** Quits: ming (~ming@2601:547:a00:7720::88e8) (Ping timeout: 240 seconds)
[22:55:10] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[22:58:23] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[22:58:42] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[22:58:49] *** Joins: srhm (~ascii@user/srhm)
[22:59:15] *** Parts: nij- (~jin@2001-48F8-9021-806-0-0-0-EC96-dynamic.midco.net) (#commonlisp)
[23:01:19] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-EC96-dynamic.midco.net)
[23:01:33] <nij-> Hello! Does anyone has experience with both CLX and rofi?
[23:01:57] <nij-> I'm trying to create a "rofi-like window" using CLX.
[23:02:20] <nij-> By a "rofi-like window", I mean an X window that always show up on top of all of the others.
[23:10:02] *** Joins: selwyn (~selwyn@user/selwyn)
[23:16:08] <_death> what happens when there are two of those
[23:19:45] <mfiano> Presumably the latter is on top
[23:20:04] <mfiano> Which is the case when rofi is spawned after my panel with the same windowing hint applied to it
[23:25:54] <_death> I was just reminded of a Raymond Chen post.. https://devblogs.microsoft.com/oldnewthing/20050607-00/?p=35413
[23:27:16] <jeosol> good morning
[23:27:51] <nij-> _death: Ran `rofi -show run` in one term and `sleep 3; rofi -show run` in another. The later receives an error:
[23:27:54] <mfiano> I suppose this is what that BSOD thing I hear about is for.
[23:29:09] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[23:29:09] <jeosol> I was writting a simple neural network (one layer, but eventually, deep ones).  I had to write a lot of the matrix vector operations from scratch (I mean they are simple operations with some broadcasting) . What is the recommended CL library for matrix computations and matrix-vector operations
[23:29:31] <nij-> bpaste is down... (process:24641): Helper-WARNING **: 13:57:08.368: Failed to set lock on pidfile: Rofi already running? (process:24641): Helper-WARNING **: 13:57:08.368: Got error: -1 Socket operation on non-socket
[23:30:36] <_death> remove the lock file
[23:31:09] <nij-> I don't want to mess around with its internals xD
[23:31:20] <nij-> I am curious how to make such a window from CLX or emacs..
[23:35:07] <_death> nij: I guess https://specifications.freedesktop.org/wm-spec/1.3/ar01s07.html#STACKINGORDER
[23:36:37] <nij-> This is what I got from #rofi -
[23:36:37] <nij-> "<qball> normal window, with state above set and override redirect  https://www.x.org/releases/X11R7.7/doc/man/man3/xcb_create_window.3.xhtml"
[23:36:59] <nij-> But this is in C, which I don't read.. hopefully someone knows how to do that with CLX.
[23:38:28] <MichaelRaskin> Maybe look how StumpWM does its message windows?
[23:39:22] <nij-> That's a great idea. Thanks MichaelRaskin :))
[23:39:36] <_death> the clx manual has a section about stacking order
[23:40:03] <jackdaniel> nij-: when you create a window, pass :override-redirect t
[23:40:16] <jackdaniel> :override-redirect :on
[23:40:17] <jackdaniel> not t
[23:40:47] <jackdaniel> that creates an unmanaged window (and I suppose that this is what you want)
[23:41:22] <_death> jeosol: have you looked at numcl? I played with it a bit recently
[23:41:29] <nij-> !
[23:41:38] <nij-> jackdaniel: Thanks! That's very specific :)
[23:42:53] <jackdaniel> I'd also check what :save-under option does (i.e in clx manual)
[23:46:05] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[23:53:29] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[23:57:56] *** Quits: cage (~cage@dynamic-adsl-78-15-46-179.clienti.tiscali.it) (Remote host closed the connection)
