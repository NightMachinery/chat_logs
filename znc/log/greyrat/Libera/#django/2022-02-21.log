[00:03:16] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:08:18] *** Quits: cowsay-moo (~cowsay-mo@2001:ac8:25:400:1016:44e2:837e:7026) (Remote host closed the connection)
[00:11:52] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[00:20:15] *** Quits: henbruas (~henbruas@ti0003a400-2412.bb.online.no) (Ping timeout: 252 seconds)
[00:22:00] *** Joins: henbruas (~henbruas@ti0003a400-2412.bb.online.no)
[00:24:24] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:40:04] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:44:46] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[01:07:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:10:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:12:49] *** Joins: audio (~audio@user/audio)
[01:20:30] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[01:36:37] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[01:36:55] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:37:24] *** audio is now known as audioburn
[01:38:17] *** audioburn is now known as audio
[01:38:29] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[01:41:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:41:38] <bayman> I have path('delete/<int:pk>/', item_delete, name='delete'), is it better to use path '<int:pk>/delete' or 'delete/<int:pk>'  ?
[01:43:18] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[01:48:29] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Remote host closed the connection)
[01:48:48] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[01:52:57] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 240 seconds)
[01:53:30] *** Joins: teut (~teut@122.161.83.81)
[02:12:44] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[02:26:37] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:27:38] *** Joins: schinckel (uid38120@user/schinckel)
[02:28:55] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[02:39:20] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:47:59] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[02:49:43] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[02:53:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:54:30] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 260 seconds)
[02:55:40] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[03:00:52] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[03:10:22] *** Joins: jim (~jim@about/linux/staff/jim)
[03:13:13] <jim> hi, is there a tutorial (or list thereof)?
[03:13:59] <GinFuyou> Yes, tutorial on the official docs site
[03:14:56] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:22:12] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 240 seconds)
[03:25:25] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 256 seconds)
[03:48:54] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:57:19] *** audio is now known as audiomouse
[03:57:21] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[03:59:44] *** Joins: yanchai (~yanchai@222.127.97.162)
[04:14:26] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 272 seconds)
[04:18:17] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[04:25:29] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:29:44] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[04:33:17] *** Joins: jcass (~cindy@50-0-146-31.dsl.dynamic.fusionbroadband.com)
[04:34:18] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[04:34:43] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[04:37:57] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:38:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[04:38:35] *** Quits: mattfoxxx (~mattfoxxx@200116b822f4490071cd60d41e462908.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[04:45:19] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:49:39] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[04:54:42] *** Quits: randombrain (~rbrain@user/randombrain) (Quit: ...)
[04:57:13] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:01:09] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:03:34] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[05:06:00] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:29:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:34:14] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Ping timeout: 272 seconds)
[05:40:12] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[05:43:43] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:05:53] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:07:20] *** Joins: justAstache (~justache@user/justache)
[06:13:52] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:19:50] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:24:54] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 272 seconds)
[06:25:01] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[06:36:08] *** Joins: yanchai (~yanchai@124.6.141.226)
[06:55:51] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[07:00:45] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 256 seconds)
[07:17:02] *** Joins: spacexdragon (~spacexdra@1.224.172.98)
[07:22:55] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[07:28:14] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 272 seconds)
[07:44:09] *** Quits: sreve (~quassel@p54a706a2.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:44:12] *** Joins: sreve_ (~quassel@p549d70f4.dip0.t-ipconnect.de)
[07:46:38] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:51:11] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:56:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:19:44] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[08:21:02] <mehwork> If I use a unit test library to make a request to a mocked api endpoint, that's considered an "integration test" right? But if I make a request to a real api endpoint, is that also an "integration test"? Both test mysite.com/api/foo
[08:21:17] <mehwork> but once does it fake and one does it for real
[08:21:21] <mehwork> *one
[08:21:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:22:25] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:25:12] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[08:29:15] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[08:30:00] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 256 seconds)
[08:32:50] *** Quits: rob4226 (~Thunderbi@45.131.195.118) (Ping timeout: 272 seconds)
[08:34:40] *** Joins: toastloop (~toastloop@user/toastloop)
[08:48:09] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:49:26] *** Joins: rob4226 (~Thunderbi@45.131.195.118)
[08:52:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:59:26] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 272 seconds)
[08:59:59] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[09:06:11] *** Joins: pepper (~pepper@user/pepper)
[09:16:09] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[09:21:51] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:24:22] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:25:23] <jim> hi,,, I'm looking at https://docs.djangoproject.com/en/4.0/intro/tutorial01/#write-your-first-view and I'm trying to understand the linkage to that view function, so I have questions...
[09:30:22] <jim> in the next code block, they say to make a urlpatterns var, a list with an item in it: path('', views.index, name='index')
[09:31:20] <jim> the first code block defines a function called index... is the name='index' related somehow?
[09:38:21] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[09:46:13] *** Joins: pepper (~pepper@user/pepper)
[09:54:51] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[09:55:56] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[09:58:36] *** Quits: yanchai (~yanchai@124.6.141.226) (Ping timeout: 240 seconds)
[10:02:00] <spacexdragon> is it mandatory to have a queryset when defining a manager?
[10:02:28] <spacexdragon> seems to me that managers and querysets have the same functionallity
[10:04:58] <jim> don look at me :) I can't even get the first view in the tutorial workin :)
[10:07:39] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[10:12:34] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[10:20:19] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[10:22:20] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[10:25:36] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:26:53] <dodo> spacexdragon: the queryset allows you to chain your methods, the manager just connects to the model
[10:28:05] *** Joins: yanchai (~yanchai@222.127.97.162)
[10:34:21] *** Joins: pepper (~pepper@user/pepper)
[10:39:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:58:32] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:00:18] *** Joins: kuter (~kuter@public-gprs526002.centertel.pl)
[11:01:52] <jim> ok, I figured my thing out... I was in the wrong dir
[11:02:14] <jim> got into the right dir, put the right files there, everything works
[11:02:54] <jim> thanks, and sorry for noise
[11:03:53] <jim> still, I'd like to see how the URLconf gets to the right function
[11:14:23] *** Joins: thiras (~thiras@user/thiras)
[11:21:56] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[11:22:42] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[11:35:35] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Ping timeout: 256 seconds)
[11:35:48] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[11:37:32] *** Joins: mrwick (~mrwick@user/mrwick)
[11:38:42] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5647:37e6:5350:44e8)
[11:41:28] *** Joins: carlorat1 (carloratm@tilde.club)
[11:41:52] <carlorat1> is there an admin demo online?
[11:42:16] *** Joins: djapo (~archangel@user/djapo)
[11:45:00] <jim> the admin "plugin" or whatever it's called, seems complete... when I visited admin/ on the test server, it prompted me to log in (of course, I didn't have the name/passwd yet)
[11:45:56] <jim> if you run the tutorial, you'll eventually get a working admin, for which you will have the name/passwd
[11:46:22] <carlorat1> I'd like a demo online without writing a single line, just to show that to a potential customer
[11:46:31] *** Joins: sandeepk (~sandeepk@223.130.30.23)
[11:47:11] <carlorat1> I'd love to avoid setting up one myself
[11:47:51] <jim> I dunno... it's -possible- there's a youtube video of it, but I can't say yes or no to that; I'm just guessing at a possibility
[11:48:18] <carlorat1> ah thank you, yt may be a possibility
[11:49:14] <jim> if I recall correctly, the admin was set up to be able to do things to the polls app, and that would mean the admin app would have knowledge of the data model of the polls app
[11:49:59] <jim> so, with some work, you can get it yourself, and can show it to your customer. I don't know for sure of any other way
[11:52:49] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[11:53:07] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[11:54:59] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[11:55:58] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[12:00:35] <jcass> jim, looks like you are making some progress.  I am just pulling up the docs.  I think I'll read about models, views, etc before starting the tutorial.
[12:03:38] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[12:04:21] <jcass> And I see there's a section called overview.  Looks like a good place to start.
[12:06:24] <jim> yep, I just got the very first view (which is just a hello world web page) to work
[12:06:57] <jim> the problem I was experiencing? I was in the wrong dir…
[12:08:07] <jim> carlorat1, most of the videos are demos of building an app, a couple of them, was about the tutorial
[12:18:57] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[12:19:19] *** Joins: toastloop (~toastloop@user/toastloop)
[12:20:12] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[12:26:05] *** Joins: slav0nic (slav0nic@python.su)
[12:26:41] *** Joins: mrwick (~mrwick@user/mrwick)
[12:27:10] *** Quits: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 272 seconds)
[12:30:10] *** Quits: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1) (Quit: You have been kicked for being idle)
[12:31:01] *** Joins: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl)
[12:33:11] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:36:40] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[12:37:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[12:37:30] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[12:40:12] *** Quits: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[12:47:26] *** Quits: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28) (Ping timeout: 245 seconds)
[12:47:26] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (Ping timeout: 245 seconds)
[12:48:15] *** Joins: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28)
[12:48:17] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (Ping timeout: 240 seconds)
[12:48:21] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[12:48:42] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 272 seconds)
[12:48:51] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[12:51:37] <jim> jcass, the first view is completely pushed; you could try it out, or continue with yours, whichever you want
[12:52:57] <jcass> Get to it later.  Checking out for now...
[13:07:06] *** Quits: kuter (~kuter@public-gprs526002.centertel.pl) (Ping timeout: 256 seconds)
[13:08:55] *** Parts: toastloop (~toastloop@user/toastloop) (Leaving)
[13:13:34] *** Quits: rvgate (~rvgate@user/rvgate) (Quit: Ping timeout (120 seconds))
[13:14:02] *** Joins: rvgate (~rvgate@user/rvgate)
[13:18:57] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:44:21] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[13:46:03] *** Joins: teut (~teut@122.161.83.81)
[13:48:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[13:50:01] *** Joins: lazzurs5 (~lazzurs@user/lazzurs)
[13:52:36] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[13:54:19] *** Joins: pepper (~pepper@user/pepper)
[13:55:08] *** Joins: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl)
[13:58:22] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[13:59:36] *** Joins: mrwick (~mrwick@user/mrwick)
[14:11:16] *** Quits: gitly (~gitly@185.69.144.241) (Quit: WeeChat 3.4)
[14:11:37] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[14:16:37] *** Quits: audiomouse (~audio@user/audio) (Ping timeout: 240 seconds)
[14:19:58] *** Joins: Throgkt (~Throgkt@user/throgkt)
[14:38:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[14:43:00] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[14:45:50] *** Joins: yanchai (~yanchai@115.147.34.99)
[14:51:14] *** Quits: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl) (Read error: Connection reset by peer)
[14:51:24] *** Joins: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl)
[15:05:24] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Ping timeout: 240 seconds)
[15:08:39] *** Quits: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[15:13:32] *** Joins: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl)
[15:20:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5647:37e6:5350:44e8) (Ping timeout: 250 seconds)
[15:22:30] *** Joins: timkofu (~timkofu@user/timkofu)
[15:22:32] <timkofu> Hi
[15:26:31] <timkofu> Does Django async have something like Starlette's background tasks?
[15:27:24] *** Joins: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br)
[15:32:05] *** Joins: Atque (~Atque@user/atque)
[15:34:37] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:37:53] *** Quits: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[15:39:32] *** Joins: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl)
[15:42:01] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:46:17] *** Parts: yanchai (~yanchai@115.147.34.99) ()
[15:51:53] *** Joins: martti (~martti@46-126-48-136.dynamic.hispeed.ch)
[15:52:31] <martti> hello. Am I imagining this or did django settings used to have a mechanism that deepcopied settings on being looked up?
[15:53:32] <moldy> martti: deep copy to where? and why?
[15:54:10] *** Joins: pycode (~pycode3@2001:b07:5d28:551:ea12:1261:d2ab:9138)
[15:54:31] <martti> ...deepcopy so that libraries / consumer code modifying it would always get the "original". I thought I've seen this somewhere, maybe it wasn't django settings.
[15:54:57] <serafeim> is there a simple way to make the help_text of a form field to be "safe" ?
[15:55:27] <moldy> martti: hmm, sounds weird, can you show some code example maybe?
[15:55:55] <moldy> serafeim: did you try wrapping it with mark_safe()?
[15:56:09] <moldy> it would probably be cleaner to customize the template, though
[15:56:54] <GinFuyou> django.conf.global_settings perhaps?
[15:57:06] <serafeim> thanks wrapping it with mark_safe on the field works
[15:57:26] <serafeim> i dont have access to the template and i don't want to override it
[16:10:15] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[16:12:34] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[16:14:43] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[16:15:03] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: help)
[16:18:53] *** Quits: pycode (~pycode3@2001:b07:5d28:551:ea12:1261:d2ab:9138) (Ping timeout: 252 seconds)
[16:21:20] <martti> moldy: no example, just a shady memory. technically one could build a wrapper class that uses deepcopy on non-callable attributes. I think I can do without deepcopy, though.
[16:22:40] <moldy> martti: i think i don't understand the use-case here
[16:23:49] <moldy> do you want the default setting instead of the current one? then global_settings should work
[16:26:31] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:41:47] *** Joins: pro_z (~pro_z@37.214.61.103)
[16:50:05] *** Quits: sandeepk (~sandeepk@223.130.30.23) (Remote host closed the connection)
[16:55:21] *** Joins: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[17:00:04] *** Quits: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[17:20:09] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:30:27] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[17:49:54] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[17:51:59] *** Joins: pepper (~pepper@user/pepper)
[17:52:50] *** Joins: pycode (~pycode3@2001:b07:5d28:551:b4f7:7e5f:2606:5f00)
[18:09:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:11:44] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[18:12:58] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[18:17:46] *** Joins: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net)
[18:21:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:27:48] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[18:29:36] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[18:33:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[18:35:51] *** Quits: Ergo^ (~ergo@91.238.59.144) (Read error: Connection reset by peer)
[18:36:40] <Harlin> django django ... good morning.
[18:37:16] <martti> moldy: the problem is with python3-saml. a pretty terrible library, likely written by people who don't know python very well. we store the saml settings as settings.SAML2_SETTINGS, and I had made assumptions about the state and presence/absence of keys in this checking framework we hook to our status api endpoint. anyway, turns out that library modifies the passed settings.SAML2_SETTINGS and fills in empty
[18:37:22] <martti> strings for values that I expected to be absent when unset. I solved that issue by being tolerant in the check, and also looking. It appears I've seen a descriptor mechanism duplicating input data... ah, was that for the testing framework?
[18:37:44] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[18:39:14] <martti> yes, the testing framework isolates the environment by trying to undo/recover whatever writes that are done on self/the TestCase instance
[18:40:41] <martti> as that's not practical in production, I resorted to passing a preliminary settings dictionary to the saml2 settings parser so the settings are screwed around with by the library already and need no longer to be changed.
[18:42:47] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[18:44:36] *** Joins: Ergo^ (~ergo@91.238.59.144)
[18:46:45] <martti> source, if you're interested: https://github.com/django/django/blob/main/django/test/testcases.py#L1373 and respectively https://github.com/django/django/blob/b626c5a9798b045b655d085d59efdd60b5d7a0e3/django/test/testcases.py#L1305
[18:47:06] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[18:47:58] <Harlin> terrible eh?
[18:56:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:01:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[19:04:23] *** Quits: martti (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 256 seconds)
[19:05:51] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[19:06:44] *** Joins: martti (~martti@46-126-48-136.dynamic.hispeed.ch)
[19:17:08] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[19:26:46] *** Joins: xkuru (~xkuru@user/xkuru)
[19:30:29] *** Joins: mrwick (~mrwick@user/mrwick)
[19:34:52] *** Quits: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) (Quit: Leaving.)
[19:41:50] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (Remote host closed the connection)
[19:41:50] *** Quits: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28) (Remote host closed the connection)
[19:41:51] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (Remote host closed the connection)
[19:42:17] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[19:42:41] *** Joins: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28)
[19:42:41] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[19:42:54] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[19:45:50] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[19:46:18] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[19:47:50] *** Parts: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com) ()
[19:55:48] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:58:55] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:59:24] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:12:16] *** Quits: rob4226 (~Thunderbi@45.131.195.118) (Quit: rob4226)
[20:13:21] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[20:13:32] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[20:21:14] *** LordKalma_ is now known as LordKalma
[20:26:07] *** Joins: barry_cader (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl)
[20:28:12] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (Remote host closed the connection)
[20:28:12] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (Remote host closed the connection)
[20:28:13] *** Quits: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28) (Remote host closed the connection)
[20:30:10] *** Joins: botanic (~botanic@143.131.13.165)
[20:31:02] *** Quits: sreve_ (~quassel@p549d70f4.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[20:31:16] *** Joins: sreve (~quassel@p549d70f4.dip0.t-ipconnect.de)
[20:31:39] <botanic> I am getting a 500 error in my code, however with debug mode on the traceback doesnt seem to go far enough for me to see where my code is breaking it. https://dpaste.org/z20G is the traceback i am getting if anyone has any sujestions
[20:34:31] *** Joins: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28)
[20:34:35] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[20:34:39] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[20:35:13] *** Joins: randombrain (~rbrain@user/randombrain)
[20:37:41] <moldy> botanic: you have a field declared as unique in one of your models
[20:38:01] <botanic> ya i just dunno where is hitting that is my issue
[20:38:05] <botanic> it should be unique :)
[20:38:08] <moldy> botanic: you're trying to write '10-188-2022' into that field, but there already is a row with that value, so the DB is giving you an error
[20:38:38] <moldy> i'd start debugging here:  File "/var/www/python-blogs/python-blogs/gsoc/models.py", line 927, in create_user
[20:46:24] *** Joins: teut (~teut@122.161.83.81)
[20:49:19] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[20:52:01] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[20:54:23] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:54:28] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[20:58:19] *** Joins: ali (~ali@62.4.128.194)
[20:59:54] <ali> hi, I have a model method that return a set of model instances. Is there a way to cache it's result for a defined amount of time (like 12h for instance) so that I don't have to recompute all over again?
[21:12:41] <GinFuyou> caching python objects is usually not the best idea, but you can always cache serialized data the way you like
[21:22:47] <ali> So I could use qs.value_list() I guess. If I do so, what should I write to cache it a specific amount of time?
[21:23:38] *** Joins: hang (~hang@185.41.131.164)
[21:24:34] <hang> Hello Guys, I'm somewhat indermediate Django user, living in Poland, I would love to talk with somebody about getting better in mostly Django, but also Python in general, because in my company I'm almost one man band
[21:26:39] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:36:17] *** Joins: andyewen (~andyewen@31.124.173.210)
[21:36:46] <GinFuyou> ali, well you first need a cache backend running, then it's just as simple as https://docs.djangoproject.com/en/4.0/topics/cache/#basic-usage
[21:38:17] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[21:41:03] *** Parts: botanic (~botanic@143.131.13.165) (Leaving)
[21:43:03] *** Quits: ali (~ali@62.4.128.194) (Ping timeout: 256 seconds)
[21:43:37] *** Joins: slav0nic (slav0nic@python.su)
[22:01:20] <pycode> hello, when i do models.ForeignKey('Project', on_delete=models.CASCADE) does django will try to find a model called 'Project' on the entire project or just in the app i put that foreignKey ?
[22:03:49] *** Joins: karx (karx@user/karx)
[22:03:57] *** Quits: ravish0007_ (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:04:07] *** Quits: karx (karx@user/karx) (Client Quit)
[22:07:48] *** Quits: andyewen (~andyewen@31.124.173.210) (Remote host closed the connection)
[22:10:54] <pycode> where do you usually put custom CBV ? in which files? util.py ?
[22:15:35] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[22:16:21] <dodo> views.py
[22:16:29] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[22:17:00] <pycode> dodo, same file where i will call it...hmm ok
[22:17:15] <pycode> my doubt is if that file get big
[22:17:48] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[22:20:37] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[22:24:02] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[22:26:25] *** Joins: F40PH (~david@d54C34DA5.access.telenet.be)
[22:27:14] <F40PH> Hello
[22:30:50] <GinFuyou> pycode, views are typically called from url dispatcher. If file is big it can be split as multi-file module
[22:31:36] <pycode> ok GinFuyou
[22:31:48] <pycode> GinFuyou, is there a way oto download a file from server? is there something built-in ?
[22:32:46] <GinFuyou> HTTP?
[22:32:54] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[22:35:06] <pycode> GinFuyou,  at the moment i do: response = HttpResponse(fh.read(), content_type='application/xml')
[22:35:17] <pycode> it is basically a feed but i would like to gzip it
[22:35:40] <pycode> so the user call file.xml and i would like to send the gzipped version of that file (inside MEDIA ROOT)
[22:36:08] <pycode> i know that it is a specific job for nginx (for example) but i need to track the calls)
[22:37:25] <GinFuyou> track the call and redirect job to nginx?
[22:38:43] <pycode> hmmm wise man
[22:38:57] <pycode> so basically a redirect?
[22:40:02] <pycode> no wait i cant sho the real file on the server
[22:40:08] <pycode> how can i do ?
[22:42:15] <pycode> if the user call feed/name.xml then i should retrun name.xml.gz but i should redirect the user to that file so the user's browser can do a new request again
[22:43:16] <GinFuyou> nginx can gzip on the fly perhaps as it does with pages?
[22:45:15] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:45:15] <pycode> GinFuyou, wait i do not follow... as i wrote my MEDIA files are provided by nginx...BUT in this case i need to log the request and then return the file
[22:45:29] <pycode> so view my should add a log in the database ....and? Redirect ?
[22:45:52] <GinFuyou> Yeah, sounds like an option
[22:45:55] <pycode> so the users browser will do two requests
[22:46:10] <pycode> one with feed/name and another to follow the redirect
[22:46:16] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Quit: Bye.)
[22:46:34] <pycode> but if he follows the redirect then....it will now the file on the server and it can call that file using the second path
[22:47:50] <pycode> GinFuyou, so i think i must return that file with an HttpResponse(....)
[22:48:28] *** Quits: pro_z (~pro_z@37.214.61.103) (Ping timeout: 272 seconds)
[22:52:38] <GinFuyou> not necessary, you can give special instructions to nginx, see x-sendfile
[22:56:32] *** Quits: pycode (~pycode3@2001:b07:5d28:551:b4f7:7e5f:2606:5f00) (Ping timeout: 252 seconds)
[23:04:56] *** Quits: hang (~hang@185.41.131.164) (Remote host closed the connection)
[23:10:42] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[23:11:07] *** Joins: thiras (~thiras@user/thiras)
[23:11:38] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[23:16:33] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:16:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[23:40:27] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[23:41:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[23:46:22] *** Joins: rob4226 (~Thunderbi@45.131.195.118)
[23:46:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
