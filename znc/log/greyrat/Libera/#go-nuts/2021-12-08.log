[00:00:39] <neiluj> hmm, that's weird: when I send packets to a server I can see them with tcdump
[00:00:57] <neiluj> however the program doesn't seem to receive the packet
[00:01:51] *** Joins: Techcable (~Techcable@168.235.93.147)
[00:03:42] <foobaz> could be a bug in the program, like it's not listening on the port, or the listener is blocked
[00:04:08] <foobaz> or there might be a firewall blocking the packet
[00:04:33] *** Joins: arinov (~arinov@176.89.29.127)
[00:07:12] *** Joins: lilgopher (~textual@2601:241:8000:38f0:3d5a:edb7:978a:5815)
[00:07:40] <neiluj> I bypassed this issue with a NAT traversal technique
[00:08:56] <neiluj> thanks, going to investigate that
[00:09:26] *** Quits: darkmuggle (darkmuggle@here.for-the.chat) (Quit: fBNC - https://bnc4free.com)
[00:09:41] <b0nn> netcat is a great tool here, you can configure it to listen on a port, and you can configure it to send data to a port
[00:10:25] <neiluj> by the way when one creates a net.UDPAddr struct for a UDP socket, how can you make it polymorphic?
[00:10:36] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[00:10:39] *** Joins: mdel (~mdel@user/mdel)
[00:10:50] <neiluj> I set its port to the 0.0.0.0 mask so that it listens to any addresses
[00:11:01] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[00:13:11] <b0nn> 0.0.0.0 is the network, not the port
[00:13:20] <b0nn> but nomenclature aside
[00:13:40] <b0nn> I'm not sure what you mean by polymorphic
[00:14:28] <neiluj> huh sorry
[00:14:47] <neiluj> a socket that listens to IPv4+IPv6
[00:15:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:17:57] *** Joins: fikran (~fikran@user/fikran)
[00:17:57] <rewt> use an ipv6 socket, and it should listen on ipv4 too (unless someone configured their system not to do so)
[00:19:17] <b0nn> https://pkg.go.dev/net#UDPAddr
[00:20:10] <b0nn> You need to make sure Zone is configured as well as IP address
[00:20:57] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[00:22:01] <neiluj> thanks!
[00:22:50] <neiluj> what's the format of the Zone?
[00:26:16] <b0nn> https://en.wikipedia.org/wiki/IPv6_address
[00:27:09] <xb0o2> Anyone that's been working with go for a while that has experience in .NET? Specifically for web stuff?
[00:27:23] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[00:27:28] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Quit: The Lounge - https://thelounge.chat)
[00:27:43] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[00:28:15] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[00:28:16] <neiluj> Thanks b0nn, but then to find the local ip you use something like net.Interfaces()?
[00:28:31] <neiluj> we have to choose the correct ip
[00:30:02] <rewt> if you want to accept both ipv6 and ipv4 connections on the same socket, the ip should be ::
[00:30:45] <seebs> what do you mean by "the" local IP?
[00:30:52] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[00:30:54] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Client Quit)
[00:31:28] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[00:32:26] <neiluj> oh
[00:32:32] *** Quits: Jad (~Nashmi@user/jad) (Remote host closed the connection)
[00:32:35] *** Joins: darkmuggle (darkmuggle@here.for-the.chat)
[00:32:42] <neiluj> okay, so it's the listening in ipv6
[00:32:47] <neiluj> listening port
[00:32:52] <neiluj> that makes sense
[00:32:55] <neiluj> thank you!
[00:33:17] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[00:34:42] *** Joins: cation21 (cation@user/cation)
[00:34:47] *** Joins: amoros (~irc@user/amoros)
[00:35:59] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[00:37:35] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com) (Remote host closed the connection)
[00:38:03] *** cation21 is now known as cation
[00:41:08] <b0nn> xb0o2: Your life will be a lot easier if you ask specific things
[00:41:47] <xb0o2> Fair enough. I was just wondering for those who're used to the standard project setup of a .NET web application, what's the go equivalent of setting up a container for DI?
[00:42:15] <xb0o2> Do y'all just instantiate your dependencies in code rather than configure the container?
[00:42:33] <b0nn> What do you mean by container?
[00:43:11] <seebs> what's DI?
[00:43:18] <b0nn> dependency injection
[00:43:24] <b0nn> I assume
[00:43:58] <seebs> i think at this point i can confidently say that, while there may be cases where i wouldn't need to understand the other problem domain to answer the question, this isn't one of them
[00:44:36] <xb0o2> So say you're implementing an API, in .NET you'll generally have your controllers depend on interfaces. Those interfaces are injected into the controller when the controller is instantiated by the framework. You configure which implementation to instantiate (and it's whole tree...) in the container that the framework then uses to instantiate the
[00:44:36] <xb0o2> controller.
[00:44:40] <xb0o2> Following, not following? :p
[00:44:50] <xb0o2> I appreciate it's a very different landscape.
[00:44:57] <xb0o2> And yes by DI I mean dependency injection.
[00:45:22] <b0nn> Ok, so "container" here looks to be what we would use a struct for
[00:45:25] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[00:45:57] <b0nn> Typically I instantiate the dependency and pass it to the instantiation of the struct that carries that information
[00:46:27] <b0nn> eg. I build a Database connection, then instantiate the "container" telling it that this is my DB connection
[00:47:06] <xb0o2> Mm, I'm not sure I've explained enough.
[00:47:35] <xb0o2> So as an example, I have a FoosController that is a class that handles the actual web requests to say, /api/foos.
[00:48:20] <xb0o2> FoosController only handles a HTTP GET and depends on an 'IFoosGetter' interface that'll get some of our tasty foos.
[00:48:53] <b0nn> Your business logic instantiation is passed an instance of the dependency
[00:48:56] <LambdaComplex> i have a type with a function that (currently) returns a rate, i.e. n / total. Is it better to return a rate (0-1) or a percentage (0-100)? Or does it really not matter?
[00:48:57] <xb0o2> So, strictly speaking .NET land here, it'll take an IFoosGetter in its constructor and use it later on in the get method.
[00:49:43] <xb0o2> In ASP.NET, you provide a container to the framework that'll be configured to say "when I'm asked for an IFoosGetter, return a SqlFoosGetter"
[00:50:18] <seebs> LC: Float if you don't care about precision, otherwise (n, total).
[00:50:25] <xb0o2> As far as I understand it, the equivalent code in Go would just instantiate a SqlFoosGetter manually and pass that to whatever code is destined to handle that web request?
[00:50:57] <foobaz> LambdaComplex: i would do 0-1 because the ratio is a natural unit, percentage is a human construction
[00:51:04] <ikke> xb0o2: nothing prevents you building DI container logic in golang which does the same
[00:51:22] <foobaz> multiply by 100 when you print, if necessary, but it shouldn't be percentage internally imo
[00:51:31] <xb0o2> ikke: I appreciate that, I'm more asking about typical Go that you'd experience in the wild
[00:51:55] <LambdaComplex> foobaz: works for me. and it's not like the caller _maybe_ having to multiply by 100 is the end of the world
[00:52:03] <ikke> I haven't seen a lot of web frameworks in go yet
[00:52:15] <xb0o2> i.e. the use of containers for DI is pretty idiomatic .NET but I don't think it is at all common in Go
[00:53:14] <xb0o2> And please don't think I'm being critical here, I'm just genuinely curious.
[00:53:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[00:55:25] *** Quits: Guest1969 (~kapu@user/egm) (Ping timeout: 240 seconds)
[00:55:52] <ikke> I think the tendency in go is to avoid too much abstraction
[00:56:21] <b0nn> The DI pattern in Go is common, and simple to implement
[00:56:34] <b0nn> The problem is xb0o2 doesn't understand what he's being told
[00:56:54] <ikke> They are asking about DI containers which instantiate objects with their dependencies injected
[00:57:04] <xb0o2> Err, that's a somewhat aggressive take on the situation.
[00:57:25] <ikke> / auto wiring
[00:59:32] <xb0o2> I understand that dependency injection itself is common in Go, I'm specifically talking about the use of DI containers in ASP.NET .
[00:59:38] <xb0o2> As ikke has highlighted.
[01:00:14] <ikke> In go, you do not really have defacto constructors
[01:01:02] <xb0o2> So you'd suggest that in idiomatic Go the DI container goes out the window and the dependencies are instantiated at the top level (i.e. when creating the handlers for the web requests)?
[01:01:08] <b0nn> Nobody does factories
[01:01:35] *** Joins: codebam (~codebam@user/codebam)
[01:01:40] <xb0o2> Err, unless you mean something different by factory than I understand, I'm not sure how that's relevant
[01:02:15] <b0nn> What's the point of your "container"
[01:02:34] <b0nn> is it 1) to be able to reuse it for multiple instances of each handler
[01:02:54] <b0nn> or is it to convey to the handler the dependecies it needs to know about
[01:02:54] <xb0o2> You see, this is why I was trying to ask this question specifically to people who'd understand the .NET terminology because it's a lot easier to ask them than try to translate concepts into a different language/ecosystem :)
[01:03:43] <xb0o2> Err, a DI container isn't really for either of those things but does give you the the power to do #1
[01:04:04] *** Quits: jpw_ (~jpw@user/jpw) (Remote host closed the connection)
[01:04:14] <bpalmer> xb0o2: I think the programmer explicitly instantiating the dependencies and explicitly passing them as parameters or as fields in a struct of dependencies is common in go.
[01:04:34] *** Quits: sillybooties (~sillyboot@207.251.78.34) (Quit: Client closed)
[01:04:35] <bpalmer> xb0o2: whether that's at the top level, or further down.
[01:04:41] <ikke> In frameworks, you do not always instantiate the objects yourself, but they get instantiated
[01:04:47] <xb0o2> bpalmer: I thought so, thanks.
[01:05:29] <xb0o2> So it would be common to see the manual instantion of a SqlFoosGetter provided to code that handles a web request such as GET /api/foos
[01:05:38] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[01:05:43] <xb0o2> Excuse the loose naming but I'm sure you all get the gist
[01:05:48] <ikke> But your code is simpler / easier to follow if you do not need to rely on DI containers
[01:06:05] <b0nn> I mean, this is what I said some time ago
[01:06:17] <ikke> https://blog.ploeh.dk/2011/07/28/CompositionRoot/
[01:07:56] <xb0o2> ikke: yeah, so in .NET your composition root is configured and instantiated super early on in application startup generally through the use of a DI container.
[01:15:17] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[01:15:58] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (Read error: No route to host)
[01:16:08] *** Joins: Thedarkb1-Work (~Thedarkb@62.232.253.82)
[01:16:57] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[01:17:58] *** Joins: sillybooties (~sillyboot@207.251.78.34)
[01:18:03] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[01:19:40] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[01:20:35] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:20:52] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[01:21:19] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[01:21:45] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[01:25:12] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:25:50] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[01:26:43] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:27:22] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[01:30:59] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 252 seconds)
[01:40:19] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:45:57] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[01:45:59] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[01:53:16] *** Joins: imandes0 (~imandes0@109.75.35.208)
[01:53:19] <neiluj> okay, something weird is going on: https://bpa.st/PXHA
[01:53:40] <neiluj> basically when I print the value of the buffer key the output is different from 0
[01:54:14] <neiluj> then I set an entry in a hash map with that key, later print the contents of the hash table and the key is equal to 0!
[01:54:57] <neiluj> I'm speechless
[01:55:11] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[01:55:59] <fizzie> What's `k.sessionKey` initialized to?
[01:56:10] <fizzie> Because if it's an empty slice, `copy(k.sessionKey[:], ...)` is just a no-op.
[01:56:32] <neiluj> oh
[01:56:40] <neiluj> it's indeed initialized to nothing
[01:56:40] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:56:59] <fizzie> Alternatively, if it's a map of structs (rather than pointers) and `sessionKey` is an array rather than a slice, then the problem would be that `k` is a copy of the value in the map, and modifying it won't do anything.
[01:57:09] <fizzie> (That would also be relevant for `k.ready = true`.)
[01:57:19] <fizzie> (But if it's a map of pointers, then that's not an issue.)
[01:57:57] <fizzie> Anyway, `copy(dst, src)` will copy the minimum of len(dst), len(src) elements, so if the destination is a zero-length slice, nothing gets copied.
[01:59:21] <neiluj> so sessionKey is indeed an array
[01:59:29] <neiluj> so k.sessionKey = key?
[02:00:13] <neiluj> k.ready is a boolean, I suppose k.ready = true just work, no?
[02:00:16] <fizzie> If it's an _array_, then the copy is fine, because `k.sessionKey[:]` will not be an empty slice.
[02:00:53] <fizzie> But what's the type of `k` there?
[02:01:01] <fizzie> Or rather, what's the type of `node.SessionKeys`.
[02:01:12] <neiluj> it's a struct
[02:01:23] <fizzie> Then `k` is a copy of the value in the map, and anything you change in the copy will not affect the map in any way.
[02:01:41] <neiluj> oh
[02:02:11] <neiluj> so node.SessionKey[p].sessionKey = key is the way to go?
[02:02:16] <fizzie> (Okay, that would be the case in any instance, but if it happened to be a *pointer* to a struct, then it wouldn't matter that it's a copy of the pointer, because you'd be changing the pointed-to object.)
[02:02:32] <fizzie> Yes, or you can add a `node.SessionKey[peer] = k` at the end of the block if you prefer.
[02:03:48] <neiluj> Thank you very much for the clarifications!
[02:08:44] <neiluj> yay! my Diffie Hellman works :-)
[02:12:59] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Quit: The Lounge - https://thelounge.chat)
[02:13:56] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[02:14:15] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:18:39] *** Quits: fhs (~fhs@pool-74-101-98-114.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[02:25:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[02:27:20] *** Joins: fikran (~fikran@user/fikran)
[02:27:41] *** Joins: jla (~jordi@64.225.79.195)
[02:30:27] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[02:30:43] *** Quits: Thedarkb1-Work (~Thedarkb@62.232.253.82) (Remote host closed the connection)
[02:30:47] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:30:50] <oliv3> what do y'all think of this https://levelup.gitconnected.com/generics-in-go-viva-la-revolution-e27898bf5495 ? just curious
[02:31:10] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:20] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[02:47:39] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:50:07] *** Joins: rcernin (~rcernin@101.189.144.104)
[02:51:06] *** Quits: lilgopher (~textual@2601:241:8000:38f0:3d5a:edb7:978a:5815) (Quit: Textual IRC Client: www.textualapp.com)
[02:57:36] <b0nn> brilliant use of.. https, lovely sub domain, brilliant title, ruined by some random key on the end
[02:57:49] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Ping timeout: 240 seconds)
[03:05:10] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[03:08:04] *** Joins: l0rd_hex (~jubjub@upperbound.ca)
[03:09:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:09:24] *** Joins: codebam (~codebam@user/codebam)
[03:11:25] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:11:47] <l0rd_hex> Hello Go-friends, I've been looking for a way to make LDAP calls to Active Directory (everything on Windows and domain joined) with the current user's credentials. I've been playing around with the sspi library from alexbrainman but I'm mentally missing a step between AcquireCurrentUserCredentials() and actually using the credential handle to pass off to ldap (go-ldap). Has anyone worked with this mix
[03:11:53] <l0rd_hex> before?
[03:12:08] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[03:12:11] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Quit: %bye mirc%)
[03:15:39] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[03:17:20] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[03:17:42] *** Joins: kapu (~kapu@user/egm)
[03:18:06] *** kapu is now known as Guest9073
[03:18:50] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[03:20:02] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[03:21:51] <l0rd_hex> hmm, looking at https://github.com/go-ldap/ldap/blob/master/bind.go it seem like Kerberos isn't supported for bind(), need to use NTLMSSP instead
[03:22:21] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:25:01] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:30:43] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 256 seconds)
[03:33:25] *** Quits: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:34:41] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[03:37:29] <mikoto-chan> can I have an anonymous slice in a function?
[03:39:19] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:7831:a51b:9e71:59f5) (Ping timeout: 265 seconds)
[03:39:25] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[03:40:18] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:847b:f819:29ed:f1c5)
[03:43:38] <NCS_One> mikoto-chan: ?
[03:45:33] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:847b:f819:29ed:f1c5) (Ping timeout: 252 seconds)
[03:48:30] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 265 seconds)
[03:48:57] *** Joins: neiluj (neiluj@gateway/vpn/protonvpn/neiluj)
[03:49:31] *** Joins: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de)
[03:50:29] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4c65-8a88-a069-13d6.res6.spectrum.com)
[03:51:47] *** Quits: Guest9073 (~kapu@user/egm) (Ping timeout: 252 seconds)
[03:52:50] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[03:52:59] *** Quits: neiluj (neiluj@gateway/vpn/protonvpn/neiluj) (Remote host closed the connection)
[03:55:49] *** Quits: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:58:59] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4c65-8a88-a069-13d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:59:59] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:03:33] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[04:09:14] *** Joins: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de)
[04:14:47] *** Quits: amigan (dramoray@dtvax.dynatron.me) (Quit: WeeChat 3.3)
[04:17:17] *** Quits: imandes0 (~imandes0@109.75.35.208) (Remote host closed the connection)
[04:22:47] *** Joins: Teckla (~Teckla@user/teckla)
[04:22:48] *** Quits: sillybooties (~sillyboot@207.251.78.34) (Ping timeout: 256 seconds)
[04:24:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:26:41] *** Quits: FoodMan (~glucose@user/foodman) (Ping timeout: 265 seconds)
[04:29:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:34:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:36:26] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4c65-8a88-a069-13d6.res6.spectrum.com)
[04:36:42] *** Joins: fikran (~fikran@user/fikran)
[04:42:09] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Ping timeout: 265 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:39] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:52:45] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[04:53:16] *** Joins: jasonwucj (uid13975@id-13975.ilkley.irccloud.com)
[04:57:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:58:49] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[05:00:25] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:00:50] *** Joins: cation21 (cation@user/cation)
[05:01:58] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[05:02:28] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Quit: Updating details, brb)
[05:02:41] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[05:04:10] *** cation21 is now known as cation
[05:04:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[05:06:09] *** Joins: jld_ (~jld@c-24-9-144-115.hsd1.co.comcast.net)
[05:06:37] *** Quits: jld_ (~jld@c-24-9-144-115.hsd1.co.comcast.net) (Client Quit)
[05:07:38] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[05:09:09] *** Quits: jld (~jld@c-24-9-144-115.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[05:09:17] *** Joins: kapu (~kapu@user/egm)
[05:09:40] *** kapu is now known as Guest9684
[05:16:11] *** Joins: cation21 (cation@user/cation)
[05:16:57] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:17:01] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[05:19:38] *** cation21 is now known as cation
[05:26:11] *** Joins: sillybooties (~sillyboot@207.251.78.34)
[05:31:22] *** Joins: shtirlic_ (~shtirlic@95-55-27-245.dynamic.avangarddsl.ru)
[05:33:18] *** Joins: codebam (~codebam@user/codebam)
[05:34:38] *** Quits: shtirlic (~shtirlic@178.70.141.25) (Ping timeout: 252 seconds)
[05:34:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4c65-8a88-a069-13d6.res6.spectrum.com) (Remote host closed the connection)
[05:43:01] *** Quits: Guest9684 (~kapu@user/egm) (Ping timeout: 240 seconds)
[05:47:04] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:5586:6d9d:9d8a:e38c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:47:19] *** Joins: cation21 (cation@user/cation)
[05:47:22] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:47:35] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[05:48:09] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:48:22] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[05:50:43] *** cation21 is now known as cation
[05:52:07] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[05:53:59] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[06:12:03] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 265 seconds)
[06:23:23] *** Joins: darkapex (~darkapex@user/darkapex)
[06:24:08] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 265 seconds)
[06:25:31] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:927:3ad3:6e0e:bb25)
[06:27:52] *** Joins: andlabs (~andlabs@2604:ca00:179:c013:cd8d:92bb:14b0:b808)
[06:31:01] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:31:48] *** Joins: rcernin_ (~rcernin@101.189.144.104)
[06:33:19] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:927:3ad3:6e0e:bb25) (Ping timeout: 265 seconds)
[06:39:43] *** Quits: andlabs (~andlabs@2604:ca00:179:c013:cd8d:92bb:14b0:b808) (Ping timeout: 252 seconds)
[06:44:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:44:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:44:23] *** Joins: andlabs (~andlabs@2604:ca00:17b:449a:c88e:4cbf:84e4:3cdf)
[06:44:55] *** Quits: cim (~cim@205.185.117.110) (Quit: Ping timeout (120 seconds))
[06:45:08] *** Joins: cim (~cim@205.185.117.110)
[06:45:08] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:45:10] *** Quits: brooks7 (~brooks@23.157.160.131) (Quit: Ping timeout (120 seconds))
[06:45:26] *** Joins: brooks7 (~brooks@23.157.160.131)
[06:46:05] *** Joins: fikran (~fikran@user/fikran)
[06:49:11] *** Joins: andlabs_ (~andlabs@2604:ca00:17b:449a:d9c5:3193:c786:9482)
[06:51:19] *** Quits: rcernin_ (~rcernin@101.189.144.104) (Ping timeout: 256 seconds)
[06:52:11] *** Quits: andlabs (~andlabs@2604:ca00:17b:449a:c88e:4cbf:84e4:3cdf) (Ping timeout: 252 seconds)
[06:53:45] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:55:22] *** Joins: andlabs (~andlabs@2604:ca00:17b:449a:9549:bca:3eed:71b3)
[06:58:40] *** Joins: rcernin_ (~rcernin@101.189.144.104)
[06:58:47] *** Quits: andlabs_ (~andlabs@2604:ca00:17b:449a:d9c5:3193:c786:9482) (Ping timeout: 252 seconds)
[07:02:49] *** Quits: andlabs (~andlabs@2604:ca00:17b:449a:9549:bca:3eed:71b3) (Ping timeout: 252 seconds)
[07:05:35] *** Joins: andlabs (~andlabs@2604:ca00:17b:449a:45db:4918:3872:c194)
[07:11:15] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[07:14:06] *** Joins: andlabs_ (~andlabs@2604:ca00:17b:449a:d5a7:ef27:7806:8a80)
[07:17:38] *** Quits: andlabs (~andlabs@2604:ca00:17b:449a:45db:4918:3872:c194) (Ping timeout: 268 seconds)
[07:29:01] *** Quits: andlabs_ (~andlabs@2604:ca00:17b:449a:d5a7:ef27:7806:8a80) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:29:25] *** Joins: andlabs (~andlabs@2604:ca00:17b:449a:d5a7:ef27:7806:8a80)
[07:29:51] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[07:31:25] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[07:43:36] *** Joins: andlabs_ (~andlabs@2604:ca00:17b:449a:1d4f:e457:854:d310)
[07:46:27] *** Quits: andlabs (~andlabs@2604:ca00:17b:449a:d5a7:ef27:7806:8a80) (Ping timeout: 252 seconds)
[07:51:04] *** Quits: andlabs_ (~andlabs@2604:ca00:17b:449a:1d4f:e457:854:d310) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:56:38] *** Joins: andlabs (~andlabs@2604:ca00:17b:449a:bc3e:e13b:7ff6:bc75)
[07:58:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:59:32] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:03:14] *** Joins: andlabs_ (~andlabs@2604:ca00:17b:449a:5154:eb66:c314:a44b)
[08:05:07] *** Quits: jasonwucj (uid13975@id-13975.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:06:37] *** Quits: andlabs (~andlabs@2604:ca00:17b:449a:bc3e:e13b:7ff6:bc75) (Ping timeout: 252 seconds)
[08:11:23] *** Quits: andlabs_ (~andlabs@2604:ca00:17b:449a:5154:eb66:c314:a44b) (Ping timeout: 252 seconds)
[08:22:33] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 250 seconds)
[08:24:12] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[08:32:13] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 240 seconds)
[08:32:13] *** Quits: pepee (~pepee@user/pepee) (Ping timeout: 265 seconds)
[08:32:55] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:42:42] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Read error: Connection reset by peer)
[08:53:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:55:28] *** Joins: fikran (~fikran@user/fikran)
[09:00:13] *** Quits: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:01:24] *** Quits: fikran (~fikran@user/fikran) (Quit: WeeChat 3.0.1)
[09:08:48] *** Quits: GJdan (~quassel@107-190-26-133.cpe.teksavvy.com) (Read error: No route to host)
[09:09:57] *** Joins: GJdan (~quassel@107-190-26-133.cpe.teksavvy.com)
[09:16:47] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[09:17:02] *** Joins: mickey8 (~user@user/mickey)
[09:17:28] *** Joins: andlabs (~andlabs@70.107.171.168)
[09:21:00] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:bdc3:4708:1067:d70f)
[09:22:33] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:35:16] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:bdc3:4708:1067:d70f) (Remote host closed the connection)
[09:35:29] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[09:39:07] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:47:25] *** Joins: Everything (~Everythin@37.115.210.35)
[09:48:48] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[09:56:23] *** Joins: snupples (~snupples@2603-8001-7e00-f84e-90ce-a0b9-fcf0-f903.res6.spectrum.com)
[09:56:35] *** Joins: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de)
[10:02:37] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[10:05:59] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Ping timeout: 265 seconds)
[10:14:53] *** Joins: juan42 (~juan@cpe-76-171-37-136.socal.res.rr.com)
[10:22:04] *** Quits: sillybooties (~sillyboot@207.251.78.34) (Ping timeout: 256 seconds)
[10:24:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:24:29] *** Quits: snupples (~snupples@2603-8001-7e00-f84e-90ce-a0b9-fcf0-f903.res6.spectrum.com) (Ping timeout: 252 seconds)
[10:25:39] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:29:54] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:30:38] *** Quits: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[10:31:49] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:32:19] *** Joins: EntropyInjection (~EntropyIn@161.97.252.41)
[10:42:54] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:43:06] *** Joins: whaley (~whaley@2603-6080-a301-33d1-9870-8e29-6957-c087.res6.spectrum.com)
[10:44:05] *** Joins: shka (~herr@109.231.0.226)
[10:45:33] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[10:49:27] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[10:49:30] *** Joins: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de)
[10:49:57] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:54:37] *** Quits: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:59:36] *** Joins: frost (~frost@user/frost)
[11:11:47] *** Joins: snupples (~snupples@2603-8001-7e00-f84e-90ce-a0b9-fcf0-f903.res6.spectrum.com)
[11:11:54] *** Joins: aLeSD_ (~aLeSD@139.47.114.114)
[11:14:13] *** Quits: aLeSD__ (~aLeSD@139.47.114.114) (Ping timeout: 240 seconds)
[11:21:38] *** Joins: jla (~jordi@64.225.79.195)
[11:29:34] *** Joins: arinov (~arinov@213.194.126.155)
[11:32:09] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:33:48] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) ()
[11:34:14] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[11:34:49] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[11:35:49] *** Quits: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw) (Ping timeout: 240 seconds)
[11:36:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:39:08] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) (Remote host closed the connection)
[11:39:26] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[11:40:14] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 265 seconds)
[11:46:48] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Quit: Leaving)
[11:49:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:49:49] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:50:23] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Ping timeout: 265 seconds)
[11:50:45] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:51:33] *** Joins: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de)
[11:53:21] *** Joins: mrig (~AdiIRC@user/mrig)
[11:54:13] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[11:54:36] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[11:55:49] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[11:59:40] *** Parts: jla (~jordi@64.225.79.195) ()
[12:02:41] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[12:08:13] *** Quits: rcernin_ (~rcernin@101.189.144.104) (Ping timeout: 240 seconds)
[12:11:21] *** Joins: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw)
[12:11:31] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:13:06] *** Joins: rvalue (~rvalue@user/rvalue)
[12:16:01] *** Quits: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw) (Ping timeout: 256 seconds)
[12:17:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:20:14] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[12:25:01] *** Quits: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:25:22] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[12:26:41] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:4995:2260:660a:e588)
[12:29:36] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:30:36] *** Joins: krux02 (~krux02@194.8.199.29)
[12:32:28] <oliv3> b0nn: more precisely ?
[12:35:18] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[12:36:24] *** Joins: jasonwucj (uid13975@id-13975.ilkley.irccloud.com)
[12:41:48] <sztanpet> it was a joke, about the url itself
[12:53:06] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[13:05:36] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:11:41] *** Joins: arinov (~arinov@176.89.29.127)
[13:14:59] *** Quits: kay (~kay@213.190.30.120) (Quit: ZNC 1.8.2 - https://znc.in)
[13:16:52] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[13:17:57] *** Joins: wolfshappen (~waff@irc.furworks.de)
[13:19:31] *** Joins: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de)
[13:22:29] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:24:12] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:24:26] *** Quits: snupples (~snupples@2603-8001-7e00-f84e-90ce-a0b9-fcf0-f903.res6.spectrum.com) (Quit: Leaving)
[13:28:35] <oliv3> haha
[13:30:11] *** Joins: Atque (~Atque@user/atque)
[13:34:37] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:4995:2260:660a:e588) (Ping timeout: 240 seconds)
[13:36:16] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[13:46:19] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:2476:1847:eba5:71c9)
[13:48:03] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[13:48:13] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:49:27] *** Joins: Atque (~Atque@user/atque)
[13:50:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:52:17] *** Quits: juan42 (~juan@cpe-76-171-37-136.socal.res.rr.com) (Ping timeout: 256 seconds)
[14:01:02] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:13:11] *** Joins: kapu (~kapu@user/egm)
[14:13:35] *** kapu is now known as Guest9607
[14:20:01] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfg)
[14:20:14] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[14:22:20] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:27:45] <dalan> How do I popular compare []rune{} and `var r []rune`? In the debugger, one has a nil value: `[]int32 len: 0, cap: 0, nil`, and the other looks like this: `[]int32 len: 0, cap: 0, []`
[14:28:13] <dalan> In my test, I'm just wanting to check if it's empty, but I think I'm going overboard using `.DeepEqual`
[14:28:19] *** Quits: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:30:10] <sztanpet> []rune{} is an empty slice, you initialized it, var r []rune is nil as per the zero value of the type
[14:30:30] <dalan> Is there a nil equivalent literal?
[14:30:51] <sztanpet> yes, but you already used it, var r []rune
[14:31:34] <sztanpet> note that all slice-functions work on nil just fine, so no reason to initialize an empty slice
[14:31:37] *** Joins: rcernin (~rcernin@101.189.144.104)
[14:32:09] <dalan> Yeah in my code, I used `var r [[rune`
[14:32:23] <dalan> but in my test, I have a struct of inputs and expected outputs
[14:32:37] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:2476:1847:eba5:71c9) (Ping timeout: 240 seconds)
[14:32:41] <dalan> And there isn't a way to create a nil []rune within that
[14:32:59] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[14:33:03] <sztanpet> not sure what to tell you, a nil and an empty slice are not the same
[14:33:08] <dalan> https://go.dev/play/p/ljk0H5znDFU
[14:33:13] <dalan> Maybe that helps illustrate
[14:33:59] <sztanpet> not really
[14:34:00] <dalan> I think I'm con-_struct_ing this incorrectly 😅
[14:34:01] *** Joins: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de)
[14:35:44] *** Joins: normen_ (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[14:36:15] <sztanpet> you can just type nil instead of your nilSlice thing, not sure if thats what you are asking?
[14:37:38] <dalan> Ahhhhhhh really?!
[14:37:54] <dalan> Derp
[14:38:08] <dalan> That's what I was after, thank you 🙏
[14:38:25] <dalan> I didn't realize `var r []rune == nil` or was even comparable
[14:38:47] <sztanpet> https://go.dev/ref/spec#The_zero_value
[14:39:05] <sztanpet> the spec isnt long, i can recommend it
[14:39:10] *** Quits: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[14:39:12] *** normen_ is now known as normen
[14:41:48] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[14:44:50] *** Joins: jjido (~Denis@90.213.58.125)
[14:45:33] *** Joins: monoxane (~monoxane@user/monoxane)
[14:56:50] *** Joins: noboruma (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp)
[14:59:25] *** Quits: zwr (~zwr@2804:d45:b966:fb00:c5d2:58a5:f5c6:cdea) (Ping timeout: 240 seconds)
[15:00:30] *** Joins: zwr (~zwr@2804:d45:b966:fb00:30:a6f4:bd2d:bb15)
[15:11:13] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 252 seconds)
[15:11:26] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:11:58] *** Joins: wolfshappen (~waff@irc.furworks.de)
[15:15:15] <chilversc> I can't figure out the correct require statement for this module, https://pkg.go.dev/cloud.google.com/go/secretmanager
[15:15:42] <chilversc> I thought it would be similar to the go get command? Thus require cloud.google.com/go/secretmanager v1.0.0
[15:17:44] *** Quits: Guest9607 (~kapu@user/egm) (Ping timeout: 265 seconds)
[15:18:37] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[15:19:04] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:49a2:b187:a83c:8b86)
[15:20:09] *** Quits: rcernin (~rcernin@101.189.144.104) (Ping timeout: 265 seconds)
[15:22:22] *** Joins: darkapex (~darkapex@user/darkapex)
[15:23:07] <chilversc> this is even stranger, if I run "go get cloud.google.com/go/secretmanager/apiv1" it adds "cloud.google.com/go/secretmanager v1.0.0 // indirect" to my go.mod file, but then running "go get" on its own complains "cloud.google.com/go/secretmanager: cannot find module providing package cloud.google.com/go/secretmanager"
[15:29:40] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:30:14] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[15:33:54] <shiroyasha> chilversc: I ran `go get 'cloud.google.com/go/secretmanager'` and it added a `require cloud.google.com/go/secretmanager v1.0.0 // indirect` line to my `go.mod` file, if that helps.
[15:46:14] *** Joins: jjido (~Denis@90.213.58.125)
[15:49:40] *** Joins: fhs (~fhs@pool-98-113-240-43.nycmny.fios.verizon.net)
[15:51:59] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[15:55:43] *** Quits: yolo (~xxiao@159.89.184.51) (Quit: Lost terminal)
[16:05:02] <chilversc> odd, it's stopped complaining now, so I'm not sure why it was complaining to begin with
[16:05:35] <chilversc> I did run "go mod download", I thought "go get" would have done something similar automatically to fetch the missing modules?
[16:09:01] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:49a2:b187:a83c:8b86) (Ping timeout: 240 seconds)
[16:12:56] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[16:20:43] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:23:55] *** Joins: aLeSD__ (~aLeSD@139.47.114.114)
[16:24:13] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:24:42] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:24:44] *** Joins: lechner (~lechner@debian/lechner)
[16:26:13] *** Quits: aLeSD_ (~aLeSD@139.47.114.114) (Ping timeout: 240 seconds)
[16:29:47] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[16:31:49] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 240 seconds)
[16:35:38] *** Quits: Icedream (~icedream@144.76.223.175) (Quit: A lol made me boom.)
[16:38:55] *** Quits: aLeSD__ (~aLeSD@139.47.114.114) (Quit: Leaving)
[16:39:14] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[16:40:38] *** Joins: Icedream (~icedream@144.76.223.175)
[16:47:45] *** Joins: mncheck (~mncheck@193.224.205.254)
[16:51:05] *** Joins: neverfindme (~hayden@158.123.160.43)
[16:52:10] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Remote host closed the connection)
[16:54:59] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[16:57:25] *** Joins: jla (~jordi@64.225.79.195)
[16:59:26] *** Joins: _nuke (~nuke@50-193-103-211-static.hfc.comcastbusiness.net)
[17:04:49] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:09:21] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[17:22:24] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[17:24:09] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:26:40] *** Quits: caubert (~caubert@136.244.111.235) (Quit: WeeChat 3.3)
[17:28:57] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:30:07] *** Joins: jjido (~Denis@90.213.58.125)
[17:30:52] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[17:34:03] *** Quits: paulgrmn (4935b8e2c8@user/paulgrmn) (Remote host closed the connection)
[17:34:03] *** Quits: filwisher (2e6936c793@2604:bf00:561:2000::170) (Remote host closed the connection)
[17:34:03] *** Quits: saksophony (5fd0e087b8@2604:bf00:561:2000::1ff) (Remote host closed the connection)
[17:34:03] *** Quits: amolith (d1421e166a@nixnet/founder/amolith) (Remote host closed the connection)
[17:34:04] *** Quits: ddevault (e7b4bb6755@sourcehut/staff/ddevault) (Remote host closed the connection)
[17:36:14] *** Quits: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d) (Remote host closed the connection)
[17:36:14] *** Quits: mendelmaleh (e58b23db5e@2604:bf00:561:2000::22b) (Remote host closed the connection)
[17:36:14] *** Quits: mrmanner (29a724a13e@user/mrmanner) (Remote host closed the connection)
[17:36:14] *** Quits: jhenson (4584610261@user/jhenson) (Remote host closed the connection)
[17:36:14] *** Quits: kiril (fd5cdbb697@2604:bf00:561:2000::22a) (Remote host closed the connection)
[17:36:14] *** Quits: tom5760 (73d4025b14@user/tom5760) (Remote host closed the connection)
[17:36:14] *** Quits: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17) (Remote host closed the connection)
[17:36:14] *** Quits: coder_kalyan (2c72974719@user/coderkalyan) (Remote host closed the connection)
[17:36:14] *** Quits: fmac (bf93f83905@2604:bf00:561:2000::26) (Remote host closed the connection)
[17:36:35] *** Joins: paulgrmn (4935b8e2c8@user/paulgrmn)
[17:36:35] *** Joins: fmac (bf93f83905@2604:bf00:561:2000::26)
[17:36:35] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17)
[17:36:35] *** Joins: filwisher (2e6936c793@2604:bf00:561:2000::170)
[17:36:43] *** Joins: tom5760 (73d4025b14@user/tom5760)
[17:36:43] *** Joins: ddevault (e7b4bb6755@sourcehut/staff/ddevault)
[17:36:45] *** Joins: jhenson (4584610261@user/jhenson)
[17:36:45] *** Joins: mrmanner (29a724a13e@user/mrmanner)
[17:36:49] *** Joins: coder_kalyan (2c72974719@user/coderkalyan)
[17:36:49] *** Joins: amolith (d1421e166a@nixnet/founder/amolith)
[17:36:50] *** Joins: mendelmaleh (e58b23db5e@2604:bf00:561:2000::22b)
[17:36:50] *** Joins: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d)
[17:36:51] *** Joins: saksophony (5fd0e087b8@2604:bf00:561:2000::1ff)
[17:37:54] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:42:19] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[17:44:09] *** Joins: caubert (~caubert@136.244.111.235)
[17:47:55] *** Joins: mickey88 (~user@user/mickey)
[17:49:05] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[17:50:06] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[17:50:43] *** Joins: bindu (~bindu@user/bindu)
[17:50:45] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[17:50:46] *** mickey88 is now known as mickey8
[17:51:09] <EntropyInjection> Anyone have any resources regarding interpreting/decoding the output from IoT sensors via GPIO pins?
[17:56:12] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:58:13] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 256 seconds)
[17:58:34] *** Joins: ztx (~ztx@user/ztx)
[18:04:26] <twaapo> whats the diff? delete(mymap, key) or mymap[key] = nil ?
[18:04:50] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Ping timeout: 252 seconds)
[18:05:08] <bpalmer> twaapo: do you want key to show up when you iterate over range mymap  or not?
[18:05:31] <twaapo> no?
[18:05:35] <twaapo> didnt think about it
[18:05:37] <bpalmer> delete means it doesn't; setting the value to be the zero value for the type means it will.
[18:05:38] <twaapo> but no is better
[18:05:41] <twaapo> ok cool
[18:06:04] <bpalmer> (similarly, differences will show up for things like len(mymap))
[18:06:42] <twaapo> ah ok, delete is definitely better
[18:07:23] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 265 seconds)
[18:07:48] <walkr> twaapo, also note that you cannot insert nil for every type. https://go.dev/play/p/gNCivxULY-G
[18:07:52] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[18:08:15] <walkr> I believe that is why bpalmer talks about ¨zero value¨instead of nil
[18:09:02] <twaapo> yeah that makes sense, i just got lost in thinking about gc
[18:12:57] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[18:21:23] *** Joins: _Asgaroth_ (~Asgaroth@93.107.191.92)
[18:23:38] *** Quits: BuddyTheElf (launchd@bitbot/launchd) (Ping timeout: 268 seconds)
[18:24:05] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Ping timeout: 252 seconds)
[18:26:30] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[18:31:54] *** Joins: launchd (launchd@bitbot/launchd)
[18:35:05] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 252 seconds)
[18:36:36] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[18:37:12] *** Joins: ugjka (~ugjka@ugjka.net)
[18:38:14] *** Joins: goldfish (~goldfish@user/goldfish)
[18:38:49] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[18:41:13] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[18:44:13] *** Joins: troseman_ (~blank]@c-73-61-76-75.hsd1.nh.comcast.net)
[18:44:51] *** Quits: troseman_ (~blank]@c-73-61-76-75.hsd1.nh.comcast.net) (Read error: Connection reset by peer)
[18:46:37] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[18:47:13] *** Quits: _Asgaroth_ (~Asgaroth@93.107.191.92) (Remote host closed the connection)
[18:48:28] *** Quits: Ergo^ (~ergo@91.238.59.144) (Ping timeout: 265 seconds)
[18:51:13] *** Quits: yelnah (~felix@2001:44b8:30f9:18c:6f0:21ff:fe3c:d4d7) (Ping timeout: 252 seconds)
[18:51:42] *** Joins: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7)
[18:53:15] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[19:01:30] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[19:02:00] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[19:02:12] *** Joins: pepee (~pepee@user/pepee)
[19:03:22] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[19:06:11] *** Quits: jasonwucj (uid13975@id-13975.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:06:27] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:06:54] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[19:07:35] *** Joins: jla (~jordi@64.225.79.195)
[19:09:02] *** Joins: haux (~null@yo.haux.haus)
[19:10:00] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[19:10:57] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[19:17:40] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[19:25:54] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Quit: Leaving)
[19:26:37] *** Quits: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:39:30] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[19:44:50] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:50:48] *** Quits: krux02 (~krux02@194.8.199.29) (Remote host closed the connection)
[19:51:28] *** Joins: lilgopher (~textual@2601:241:8000:38f0:1137:ba6a:e3f9:7a1c)
[19:54:02] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:55:01] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[19:55:51] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[19:57:04] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:07:31] *** Joins: Techcable (~Techcable@168.235.93.147)
[20:09:03] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[20:13:31] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[20:15:52] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[20:18:51] *** Joins: normen (~normen@p200300d717306100217b024fc2139431.dip0.t-ipconnect.de)
[20:19:22] *** Joins: Snyp (~Snyp@49.207.209.233)
[20:20:10] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:23:13] *** Joins: mrig (~mrig@user/mrig)
[20:24:50] *** Joins: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw)
[20:34:56] *** Quits: Snyp (~Snyp@49.207.209.233) (Quit: Textual IRC Client: www.textualapp.com)
[20:37:27] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 268 seconds)
[20:44:02] *** Joins: codebam (~codebam@user/codebam)
[20:44:34] *** Quits: pez (~pez@user/pez) (Quit: bye..)
[20:44:47] *** Joins: pez (~pez@user/pez)
[20:46:11] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:46:28] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:46:56] <sztanpet> delete literally deletes the entry, nil just sets the value at the given key, the key still exists
[20:49:03] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[20:49:33] *** Joins: novns (~novns@user/novns)
[20:51:08] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[20:51:29] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:51:48] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:56:27] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[20:56:44] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Client Quit)
[20:57:04] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[20:59:19] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[21:04:16] *** Joins: cyrus_mc (~cyrus_mc@c-98-232-162-73.hsd1.or.comcast.net)
[21:06:56] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Quit: WeeChat 3.3)
[21:06:59] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:19:01] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 240 seconds)
[21:20:08] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:20:25] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:20:29] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[21:22:07] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[21:22:13] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 240 seconds)
[21:31:25] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[21:32:18] *** zer0bitz_ is now known as zer0bitz
[21:32:58] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 268 seconds)
[21:35:55] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[21:36:58] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[21:39:34] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[21:47:55] *** Quits: cyrus_mc (~cyrus_mc@c-98-232-162-73.hsd1.or.comcast.net) (Quit: Connection closed)
[21:48:34] *** Quits: dalan (~dalan@194-193-164-106.tpgi.com.au) (Quit: Ping timeout (120 seconds))
[21:48:55] *** Joins: dalan (~dalan@194-193-164-106.tpgi.com.au)
[21:51:50] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[21:57:56] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Quit: Leaving)
[21:58:16] *** Quits: hjmcnew____ (sid86092@tinside.irccloud.com) (Ping timeout: 245 seconds)
[21:58:34] *** Joins: jjido (~Denis@90.213.58.125)
[21:59:33] *** Joins: hjmcnew____ (sid86092@id-86092.tinside.irccloud.com)
[22:02:24] *** Quits: faceonkeyboard (~faceonkey@anquietas.harting.hosting) (Quit: Bridge terminating on SIGTERM)
[22:04:21] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:06:42] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[22:09:02] *** Joins: faceonkeyboard (~faceonkey@anquietas.harting.hosting)
[22:09:10] <walkr> about the "internal" packages, there should be no issue if package /a/internal/b imports /a/internal/c, correct?
[22:09:51] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[22:09:51] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[22:09:51] *** Joins: tane (~tane@user/tane)
[22:11:59] <walkr> ok, tested and it works fine
[22:14:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[22:14:02] <foobaz> yea, the only catch is, now /a/internal/c can't import /a/internal/b or it will cause an import loop
[22:14:06] *** Quits: jsvcycling (sid369784@id-369784.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[22:14:10] *** Joins: bindu_ (~bindu@user/bindu)
[22:15:06] *** Quits: moto (~moto@user/moto) (Read error: Connection reset by peer)
[22:16:02] *** bindu_ is now known as bindu
[22:16:20] *** Joins: jsvcycling (sid369784@id-369784.uxbridge.irccloud.com)
[22:17:33] *** Joins: andlabs (~andlabs@70.107.171.168)
[22:20:20] *** Joins: edrocks (~Ed@user/edrocks)
[22:22:15] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:22:33] *** Joins: mickey8 (~user@user/mickey)
[22:24:26] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:24:43] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:30:25] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:31:10] *** Joins: moto (~moto@user/moto)
[22:33:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:43:32] *** Joins: arinov (~arinov@213.194.126.155)
[22:50:20] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:51:18] *** Joins: bindu (~bindu@user/bindu)
[22:52:45] *** Joins: jjido (~Denis@90.213.58.125)
[22:55:00] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:56:00] *** Joins: casionaut (~casionaut@user/casionaut)
[23:03:43] *** Joins: rusty (~rustyboy@2a02:2f0e:5610:ab00:b16b:f583:26df:4061)
[23:20:52] *** Joins: jla (~jordi@64.225.79.195)
[23:21:25] *** Joins: tesuji (~quassel@2a02:908:180:9500:9509:881b:6bdf:4d85)
[23:22:49] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[23:27:21] <b0nn> I saw on reddit someont say that http.Error(w, "error message" 400); the "error message" should be in json format
[23:27:38] <b0nn> can anyone confirm?
[23:28:23] <bpalmer> only if the content type has been set to be text/json already
[23:28:51] <bpalmer> or in  a specific context for a particular web request
[23:32:36] <b0nn> yeah - I've not heard of the practice before (though that doesn't mean a hang of a lot)
[23:33:10] <b0nn> I mean, if a 404 is generated.. a json error really doesn't make sense
[23:33:43] <b0nn> or a 405 for that matter
[23:34:58] *** Joins: walkr_ (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[23:35:46] *** Joins: gpeskens[w] (~gpeskens@94-208-100-217.cable.dynamic.v4.ziggo.nl)
[23:35:55] *** Joins: rogersm (~rogersm@90.166.177.48)
[23:36:03] *** Joins: troseman_ (~troseman@c-75-70-98-121.hsd1.co.comcast.net)
[23:36:23] *** Joins: shiroyas1 (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[23:36:34] *** Joins: hwm4rgs4 (~hwm4rgs@user/hwm4rgs)
[23:37:33] *** Joins: hayaliali (~alip@exherbo/developer/alip)
[23:38:02] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[23:38:36] *** Joins: fwalkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[23:38:57] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Ping timeout: 265 seconds)
[23:39:10] *** Joins: Piraty_ (~irc@user/piraty)
[23:39:40] *** Joins: jlaffaye_ (~jlaffaye@user/jlaffaye)
[23:39:52] *** Joins: alm_ (~alm@user/alm)
[23:39:57] *** Joins: Rudde_ (~rudde@netboot.io)
[23:40:20] *** Joins: amodo_ (~derf@naeon.org)
[23:40:31] *** Joins: wkalt_ (~wkalt@user/wkalt)
[23:40:38] *** Joins: psil` (~krwlisp@karatefylla.nu)
[23:42:21] *** Quits: walkr_ (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[23:44:30] *** Quits: gijs (~gpeskens@94-208-100-217.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[23:44:30] *** Quits: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net) (Remote host closed the connection)
[23:44:30] *** Quits: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[23:44:30] *** Quits: hwm4rgs (~hwm4rgs@user/hwm4rgs) (Quit: Ping timeout (120 seconds))
[23:44:30] *** Quits: demsh (ws14dshtt8@hermod.demsh.org) (Remote host closed the connection)
[23:44:30] *** Quits: alip (~alip@exherbo/developer/alip) (Remote host closed the connection)
[23:44:30] *** Quits: matthewcroughan_ (~quassel@static.211.38.12.49.clients.your-server.de) (Remote host closed the connection)
[23:44:30] *** Quits: Piraty (~irc@user/piraty) (Remote host closed the connection)
[23:44:30] *** Quits: Logiar (~logiar@nerdsluts.net) (Ping timeout: 260 seconds)
[23:44:30] *** Quits: jlaffaye (~jlaffaye@user/jlaffaye) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: alm (~alm@user/alm) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: Rudde (~rudde@netboot.io) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: wkalt (~wkalt@user/wkalt) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: psil (~krwlisp@karatefylla.nu) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: amodo (~derf@naeon.org) (Ping timeout: 260 seconds)
[23:44:31] *** hwm4rgs4 is now known as hwm4rgs
[23:47:33] *** alm_ is now known as alm
[23:51:00] *** Joins: Logiar (~logiar@nerdsluts.net)
[23:51:59] <seebs> i'm pretty sure that error messages for 4xx errors are not in a specific format. i guess if you specify a content-type, sure. usually i wouldn't expect that, though.
[23:52:44] <bpalmer> I like to deliver my error messages in video/mp4
[23:53:17] <bpalmer> the soothing sounds of burt bacharach can calm any irate visitor.
[23:54:56] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[23:56:53] <b0nn> It was feedback on a job application
[23:57:45] <b0nn> This is what underpins my "It's pure luck" - that individual/company has taken on a standard that, it's luck that you hit on or not
