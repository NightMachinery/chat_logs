[00:01:41] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[00:03:09] *** Quits: src_ (~src@user/src) (Ping timeout: 268 seconds)
[00:03:14] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3Fu9
[00:03:54] *** Joins: rockcavera (~rc@192.12.113.74)
[00:03:54] *** Quits: rockcavera (~rc@192.12.113.74) (Changing host)
[00:03:54] *** Joins: rockcavera (~rc@user/rockcavera)
[00:04:30] <FromDiscord> <enthus1ast> i mean, this function is so seldom used...
[00:04:34] <FromDiscord> <enthus1ast> why bother \:)
[00:04:43] <FromDiscord> <hmmm> ha! I had a plan for that, unicode was string.loweru 😎
[00:05:00] <FromDiscord> <Yardanico> why not call it `lu` then
[00:05:03] <FromDiscord> <Yardanico> if you want short name slike that
[00:05:05] <FromDiscord> <hmmm> perfect!
[00:05:06] <FromDiscord> <Yardanico> (edit) "name slike" => "names like"
[00:05:21] <FromDiscord> <IsaacPaul> In reply to @Yardanico "why not call it": D:
[00:06:51] <FromDiscord> <IsaacPaul> all 1-2 character variables can die in a fire unless you're `i`. If you ask me.
[00:07:22] <FromDiscord> <Yardanico> what about j and k ? :/
[00:07:29] <FromDiscord> <hmmm> also v
[00:07:32] <FromDiscord> <Yardanico> no
[00:07:41] <FromDiscord> <Yardanico> never used `v` as a single char variable name :)
[00:07:50] <FromDiscord> <Yardanico> `s` yes, for string or seq or some stuff
[00:07:51] <FromDiscord> <hmmm> for i,v!
[00:07:56] <FromDiscord> <enthus1ast> never use single char variables at all ;)
[00:07:58] <FromDiscord> <Yardanico> In reply to @hmmm "for i,v!": `e` for elem
[00:08:36] <FromDiscord> <IsaacPaul> I understand j and k .. but it's still a code smell to me
[00:10:01] <FromDiscord> <enthus1ast> single char var == hell lot of fun to grep for it, or replace it, or multicursor it; please don't
[00:10:16] <FromDiscord> <Yardanico> pfft
[00:10:22] <FromDiscord> <Yardanico> i can use single-letter unicode names
[00:10:25] <FromDiscord> <Yardanico> that's the peak programming!
[00:10:33] <FromDiscord> <enthus1ast> at least double it\:  ss, ii, ee
[00:10:34] <FromDiscord> <IsaacPaul> In reply to @enthus1ast "single char var ==": you should see the nim source code T.T
[00:10:37] <FromDiscord> <Yardanico> var а = 5; echo a
[00:10:38] <FromDiscord> <Yardanico> good luck
[00:13:44] <FromDiscord> <hmmm> oh python also has the beautiful int(thingy) and float(thingy)
[00:13:49] <FromDiscord> <hmmm> you cannot beat that
[00:17:24] <FromDiscord> <Yardanico> In reply to @hmmm "oh python also has": yeah, which is not really good
[00:17:32] <FromDiscord> <Yardanico> you just think that it's good because python uses it and is popular :)
[00:17:58] <FromDiscord> <hmmm> hmm
[00:19:30] <FromDiscord> <Yardanico> and maybe stop trolling and go do something serious for once ;)
[00:19:42] <FromDiscord> <Elegantbeef> Never do that
[00:19:58] <FromDiscord> <hmmm> 😅
[00:20:18] *** Quits: oz (~oz@crystal/user/oz) (Read error: Connection reset by peer)
[00:20:34] <FromDiscord> <IsaacPaul> I do like the constructor-like format for primitives. Swift uses it. It looks good to me. `var myFloat = Float(myInt)`↵I don't know what it is in python tho, Imma assume the same.
[00:20:49] <FromDiscord> <Yardanico> In reply to @IsaacPaul "I do like the": it's not that
[00:20:55] <FromDiscord> <Yardanico> in python it's multi-purpose
[00:21:04] <FromDiscord> <Yardanico> you can do `float('1.0')` and it'll convert a string to a float
[00:21:15] <FromDiscord> <IsaacPaul> oh..
[00:21:42] <FromDiscord> <Yardanico> in Nim it behaves as a normal type conversion, yes, you can do `int(5.9)` and it'll only keep the whole part (truncate)
[00:21:57] <FromDiscord> <Elegantbeef> It does the proper thing
[00:22:20] <FromDiscord> <Elegantbeef> `someType(anotherType)` is a type conversion in nim
[00:22:32] <FromDiscord> <Yardanico> yes
[00:22:37] <FromDiscord> <Elegantbeef> Which should be a cheap and even sometimes free operation
[00:23:14] <FromDiscord> <Yardanico> and contrast to simple float-to-int or int-to-float string parsing involves exceptions
[00:24:43] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[00:36:55] *** Joins: src (~src@user/src)
[00:46:03] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Quit: Leaving)
[00:46:33] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[00:48:48] <FromDiscord> <IsaacPaul> I was trying to get c2nim to support inline cpp constructors... _nevermind.._
[00:50:14] <FromDiscord> <evoalg> curious ... what exceptions would string parsing have to mean parseInt has to be used instead of making int do string-to-int ?
[00:50:40] <FromDiscord> <Yardanico> In reply to @evoalg "curious ... what exceptions": what if a string doesn't contain a number?
[00:50:46] <FromDiscord> <Elegantbeef> The string isnt an int
[00:53:26] <FromDiscord> <evoalg> just trying to understand "someType(anotherType) is a type conversion in nim" <-- so int(string) fit's that? ... if the string doesn't have an int then an exception is raised in python too?
[00:53:40] <FromDiscord> <Yardanico> In reply to @evoalg "just trying to understand": in python an exception in raised, in nim it won't work
[00:53:46] <FromDiscord> <Yardanico> because in nim it's just a type conversion, not parsing
[00:54:00] <FromDiscord> <evoalg> ahhh ok
[01:03:23] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[01:23:59] *** Quits: src (~src@user/src) (Quit: Leaving)
[01:24:29] *** Joins: src (~src@user/src)
[01:46:30] <FromDiscord> <tandy> https://github.com/nim-lang/RFCs/issues/437
[01:46:39] *** Quits: advesperacit (~advespera@2.58.46.228) (Quit: advesperacit)
[01:51:17] <FromDiscord> <deech> sent a long message, see http://ix.io/3Fuy
[01:52:14] <FromDiscord> <Elegantbeef> https://github.com/status-im/questionable#options probably what you want
[01:52:24] <FromDiscord> <Elegantbeef> Dont really need a macro for this as a macro will just work
[01:52:27] <FromDiscord> <Elegantbeef> as a template\
[01:53:36] <FromDiscord> <Elegantbeef> I'd say make type aliases since you probably should anyway but i dont generally like tuples so... probably biased
[01:53:47] <FromDiscord> <deech> I'm not sure how this makes it easier, the `none` case still requires me to specify the type in full.
[01:54:42] <FromDiscord> <Elegantbeef> If you type alias that mess of a type you'd safe yourself the headache 😛
[01:55:22] <FromDiscord> <deech> Yeah I know. 🙂 But sometimes you just need some type inference.
[01:56:02] <FromDiscord> <Elegantbeef> What do you mean?
[01:56:31] <FromDiscord> <𝙧𝙚𝙢> in that library instead of `?int` it should be `int?` like every other language
[01:56:34] <FromDiscord> <𝙧𝙚𝙢> looks weird af
[01:56:37] <FromDiscord> <deech> Like given the previous example I just want to do `p(none)`, not `p(none(seq[tuple[..]]])`
[01:56:50] <FromDiscord> <Elegantbeef> No postfix operators in nim
[01:56:56] <FromDiscord> <Elegantbeef> other than ``
[01:58:34] <FromDiscord> <enthus1ast> wondering if `auto` would work there
[02:03:20] <FromDiscord> <deech> Like just pass in `p(auto)`?
[02:03:47] <FromDiscord> <enthus1ast> mh does not work, just tried it
[02:07:45] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3FuB
[02:08:05] <FromDiscord> <Elegantbeef> Without explict calling of the converter it gives a nice error
[02:11:51] <FromDiscord> <Elegantbeef> Given the way overloading works and converters i dont imagine there is a way to do this automagically
[02:12:39] <FromDiscord> <Elegantbeef> Like a converter cannot go `X -> Generic[T]`
[02:13:22] <FromDiscord> <Elegantbeef> I do have to look at the issue i found above, seems simple to fix
[02:16:40] <FromDiscord> <Elegantbeef> The converter should work implicitly so hopefully i can fix that today
[02:30:34] *** Joins: anddam (~anddam@user/anddam)
[02:30:38] <anddam> howdy
[02:31:18] <FromDiscord> <Elegantbeef> Hello!
[03:29:38] *** Quits: averell (~averell@user/averell) (Quit: .)
[03:29:54] *** Joins: averell (~averell@user/averell)
[03:59:54] <FromDiscord> <Benjamin> Does the Nim forum support "spoiler tags"? I figure that could be a way to hide off-topic (parts of) posts, either by the users themselves or moderators.↵↵I really would have liked to skip huge parts if this thread\: https://forum.nim-lang.org/t/8629"
[04:08:13] <FromDiscord> <Benjamin> Does the Nim forum support "spoiler tags"? I figure that could be a way to hide off-topic (parts of) posts, either by the users themselves or moderators.↵↵I really would have liked to skip huge parts of this thread\: https://forum.nim-lang.org/t/8629
[04:24:30] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:35:35] <PMunch> That topic took an odd turn for sure
[04:54:06] <FromDiscord> <exelotl> i swear I've seen this exact thread take this exact turn before xD
[04:57:33] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[05:01:53] <FromDiscord> <huantian> huh yeah that is quite an interesting thread
[05:07:48] <FromDiscord> <Tom> In reply to @dom96 "oh hello <@!451370459250950144> ": Thanks much for the reply!
[05:16:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Fvc
[05:17:52] <FromDiscord> <that_dude> Does python concept of `with` exist in nim? Or is template/macro magic needed that I implement myself
[05:18:12] <FromDiscord> <Elegantbeef> there is `std/with` but yes template/macros would be needed
[05:18:18] <FromDiscord> <Elegantbeef> Nim implements a small language and expands it using metaprogramming
[05:20:30] <FromDiscord> <that_dude> hmm ok
[06:02:46] <FromDiscord> <ajusa> What's the state of pattern matching now? Coming back to some older code (written earlier this year) and doesn't seem to compile with the current version of fusion/matching. I saw hax's post on the forums as well, so is fusion no longer the source for his pattern matching library?
[06:10:58] <FromDiscord> <ajusa> I answered my own question; it was moved to https://github.com/haxscramper/hmisc
[06:30:50] <FromDiscord> <huantian> In reply to @Elegantbeef "there is `std/with` but": did you know googling "std/with" by itself does not give you what I'm searching for?
[06:31:31] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/with.html#with.m%2Ctyped%2Cvarargs%5Buntyped%5D going to the docs and searching with does though 😛
[06:31:49] <FromDiscord> <huantian> yeah I should bookmark the docs probably
[06:32:23] <FromDiscord> <Elegantbeef> Yea at one point I abused rofi to give me search of the docs 😀
[06:42:36] <FromDiscord> <huantian> wonder if it's possible to get vscode to show me errors in a strformat?↵or is that not possible
[06:42:48] <FromDiscord> <Elegantbeef> What do you mean?
[06:44:33] <FromDiscord> <huantian> like uh this https://media.discordapp.net/attachments/371759389889003532/911454438139519007/unknown.png
[06:45:23] <FromDiscord> <Elegantbeef> It shoudl be technically possible, but the macro would have to do it
[06:45:39] <nrds> <06Prestige99> pretty sure it's just an issue with the macro
[06:45:46] <FromDiscord> <Elegantbeef> So the answer is "No, not without changing strformat"
[06:46:15] <FromDiscord> <exelotl> macros can only report errors at a per-node level of granularity right?
[06:46:30] <FromDiscord> <exelotl> so it couldn't possibly tell you "this is the part in the string that's bad"
[06:47:17] <FromDiscord> <exelotl> well I guess I could say so in the error message, but not in a way that would be reported properly to vscode
[06:47:19] <FromDiscord> <Elegantbeef> It might be able to since you can access line info
[06:47:20] <nrds> <06Prestige99> I think it'd be able to
[06:47:26] <nrds> <06Prestige99> ^
[06:47:28] <FromDiscord> <exelotl> (edit) "I" => "it"
[06:47:53] <FromDiscord> <exelotl> ah, can you mutate the line info?
[06:48:41] <FromDiscord> <Elegantbeef> possibly, need to check something myself 😀
[06:51:33] <FromDiscord> <exelotl> also nim's `with` is not the same as python's, and sadly I find it to be so situational that it's never worth importing :(
[06:51:58] <FromDiscord> <Elegantbeef> How do they differ and does the `with` nimble package work better?
[06:53:13] <FromDiscord> <exelotl> python's with is something different - it's a block that obtains a resource, binds it to a variable name, and then closes the resource at the end of the block
[06:53:36] <FromDiscord> <exelotl> here's a similar Nim template that I use for files: https://github.com/exelotl/natu/blob/devel/natu/tools/common.nim#L3
[06:53:57] <FromDiscord> <Elegantbeef> So pretty much "Destructors are implemented for all types yet"
[06:54:00] <FromDiscord> <Elegantbeef> arent\
[06:54:09] <FromDiscord> <exelotl> yeah
[06:54:57] <FromDiscord> <exelotl> as for `std/with`, I suspect that the `with` nimble package is better indeed
[06:55:53] <FromDiscord> <exelotl> it's been a while since I've tried either though
[06:56:10] <FromDiscord> <Elegantbeef> So yea seems you cannot easily fudge the line info
[06:56:23] <FromDiscord> <Elegantbeef> Especially since the input is a static string
[06:59:02] <FromDiscord> <Elegantbeef> So i guess sorry there is nothing much the can be resolved
[06:59:24] <FromDiscord> <Elegantbeef> I guess without adding compiler functionality
[07:00:43] <nrds> <06Prestige99> In c, when there's a struct declared inside a struct, how should we convert that for a wrapper? E.g. https://i.imgur.com/pkOgSS8.png
[07:00:57] <nrds> <06Prestige99> I would assume I could just declare them as their own types
[07:01:12] <FromDiscord> <huantian> In reply to @Elegantbeef "I guess without adding": mm I see, well it's not too big of a deal anyways
[07:03:30] <FromDiscord> <Elegantbeef> I'd assume the same prestige
[07:04:23] <nrds> <06Prestige99> c is weird
[07:04:24] <FromDiscord> <Elegantbeef> Though how do you have to reference the struct? i dont recall if it does anything odd
[07:05:26] <FromDiscord> <Elegantbeef> Ya think?
[07:06:02] <nrds> <06Prestige99> hence why I use Nim :)
[07:07:47] <FromDiscord> <sharpcdf> sent a code paste, see https://play.nim-lang.org/#ix=3FvA
[07:08:30] <FromDiscord> <sharpcdf> ive used this same code on different websites and it works fine
[07:08:32] <FromDiscord> <sharpcdf> its just this
[07:08:40] <FromDiscord> <Elegantbeef> Still thinking about alternatives to the static string, presently my dumb idea would be `"Some String " myArgStuff " other sentence stuff"` 😀
[07:08:46] <FromDiscord> <sharpcdf> (i searched for different tags though)
[07:09:14] <FromDiscord> <Elegantbeef> Well what's the stack trace say
[07:09:36] <FromDiscord> <sharpcdf> sent a code paste, see https://play.nim-lang.org/#ix=3FvC
[07:10:05] <FromDiscord> <Elegantbeef> What does that site return?
[07:10:35] <FromDiscord> <Elegantbeef> `echo client.getContent(theUrl))`
[07:10:39] <FromDiscord> <sharpcdf> the html
[07:10:43] <FromDiscord> <sharpcdf> alright ill do that
[07:11:03] <FromDiscord> <Elegantbeef> My theory is that it's returning a single entry so it cannot be iterated over
[07:11:10] <FromDiscord> <sharpcdf> oh
[07:11:45] <FromDiscord> <sharpcdf> well i believe thats true but shouldnt it still be able to iterate?
[07:12:14] <FromDiscord> <Elegantbeef> IE `<someDiv> the entire site </div>` or something similar
[07:13:00] <FromDiscord> <sharpcdf> In reply to @Elegantbeef "`echo client.getContent(theUrl))`": oh
[07:13:01] <FromDiscord> <sharpcdf> uh
[07:13:07] <FromDiscord> <sharpcdf> the entire html is encoded
[07:13:09] <FromDiscord> <sharpcdf> thats why
[07:13:23] <FromDiscord> <sharpcdf>  https://media.discordapp.net/attachments/371759389889003532/911461696508416040/unknown.png
[07:13:35] <FromDiscord> <sharpcdf> kinda weird
[07:13:43] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:14:01] <FromDiscord> <Elegantbeef> Well that means the xml isnt parsing which is why it cannot iterate 😀
[07:14:11] <FromDiscord> <sharpcdf> how would i be able to fix it
[07:14:44] <FromDiscord> <Elegantbeef> Try `content-type:"html"` or whatever as a header
[07:14:48] <FromDiscord> <Elegantbeef> I dont know much about web dev
[07:14:55] <FromDiscord> <sharpcdf> again, it worked for every other link ive used
[07:14:57] <FromDiscord> <sharpcdf> alright
[07:15:21] <FromDiscord> <sharpcdf> well a header isnt a param in `getContent()` i believe
[07:15:26] <FromDiscord> <sharpcdf> i think it defaults to html
[07:15:28] <FromDiscord> <sharpcdf> weird
[07:15:32] <FromDiscord> <Elegantbeef> You set it on client
[07:15:40] <FromDiscord> <Elegantbeef> `client.httpHeaders` or w/e
[07:15:43] <FromDiscord> <sharpcdf> oh alright
[07:17:28] <FromDiscord> <Elegantbeef> Seems it's `Content-Type: text/html; charset=UTF-8`
[07:18:05] <FromDiscord> <sharpcdf> In reply to @Elegantbeef "Seems it's `Content-Type: text/html;": yea, looking at the mozilla dev docs for http requests, its either `Content-Type` or `Accept`
[07:18:07] <FromDiscord> <sharpcdf> ill try both
[07:22:37] <FromDiscord> <sharpcdf> also, need some clarification, can you specify a specific object field/process param specifically like `newObject(field="value")`?
[07:23:00] <FromDiscord> <Elegantbeef> Yes named paremeters exist
[07:23:05] <FromDiscord> <sharpcdf> alright nice
[07:23:20] <FromDiscord> <Elegantbeef> for object constructors the syntax is `ObjectType(fieldName: value)`
[07:23:52] <FromDiscord> <sharpcdf> ah alright
[07:26:32] *** Quits: src (~src@user/src) (Quit: Leaving)
[07:33:16] <FromDiscord> <sharpcdf> In reply to @Elegantbeef "Seems it's `Content-Type: text/html;": im trying to make a `HttpHeaders` object, how do I do it?
[07:33:43] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FvJ
[07:33:50] <FromDiscord> <sharpcdf> i imported `std/tables` and tried making a `TableRef["Content-Type": "text/html"]` but it doesnt work
[07:33:51] <FromDiscord> <Elegantbeef> `client.headers = newHttpHeaders({ "Content-Type": "application/json" })`
[07:33:55] <FromDiscord> <Rika> Table isn’t mutable
[07:33:57] <FromDiscord> <sharpcdf> oh bruh lol
[07:34:11] <FromDiscord> <sharpcdf> i didnt see that on the docs
[07:34:21] <FromDiscord> <Rika> In reply to @𝙧𝙚𝙢 "`   ": Is wm a var?
[07:34:23] <FromDiscord> <Elegantbeef> It's in the httppost example
[07:34:29] <FromDiscord> <𝙧𝙚𝙢> its a thing passed to the fn
[07:34:34] <FromDiscord> <Rika> Yes I know
[07:34:39] <FromDiscord> <Rika> Does it have var in the type
[07:34:42] <FromDiscord> <𝙧𝙚𝙢> no
[07:34:46] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FvK
[07:34:55] <FromDiscord> <Rika> Then put var in the type, var Whim
[07:35:07] <FromDiscord> <𝙧𝙚𝙢> ohhh
[07:35:09] <FromDiscord> <𝙧𝙚𝙢> ok thanks
[07:35:11] <FromDiscord> <Elegantbeef> Is this the same as yesterday issue lacking `import std/tables`?
[07:35:13] <FromDiscord> <𝙧𝙚𝙢> is it immutable by default
[07:35:14] <FromDiscord> <𝙧𝙚𝙢> no
[07:35:18] <FromDiscord> <Rika> Yes
[07:35:30] <FromDiscord> <Rika> Almost everything is immutable by default
[07:35:36] <FromDiscord> <Rika> Soon to be everything
[07:35:55] <FromDiscord> <𝙧𝙚𝙢> as long as it doesnt become haskell and acutally has fucking variables im fine w/ that lol
[07:35:56] <FromDiscord> <sharpcdf> In reply to @Elegantbeef "for object constructors the": also tried this, it just errors saying it needs an object type
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:13] <FromDiscord> <Elegantbeef> Uhh↵(@sharpcdf)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:32] <FromDiscord> <𝙧𝙚𝙢> (edit) 04removed "fucking"
[07:36:49] <FromDiscord> <Rika> In reply to @𝙧𝙚𝙢 "as long as it": Doubtful that will happen
[07:36:53] <FromDiscord> <𝙧𝙚𝙢> as much as i try to learn haskell that always trips me up lol
[07:36:57] <FromDiscord> <Elegantbeef> are you doing `newClient(headers = newHttpHeaders({"Content-Type": "text/html"}))`
[07:37:02] <FromDiscord> <Rika> Haskell does have “variables” using “let with” I believe
[07:37:06] <FromDiscord> <sharpcdf> In reply to @Elegantbeef "are you doing `newClient(headers": yes
[07:37:10] <FromDiscord> <sharpcdf> anddd https://media.discordapp.net/attachments/371759389889003532/911467682048659467/unknown.png
[07:37:28] <FromDiscord> <Elegantbeef> That's not what you said it was doing
[07:37:44] <FromDiscord> <Rika> In reply to @𝙧𝙚𝙢 "as long as it": https://wiki.haskell.org/Let_vs._Where
[07:38:01] <FromDiscord> <Elegantbeef> Yea i dont know about how to make this work, the issue is with the http headers afaict
[07:38:13] <FromDiscord> <Elegantbeef> I'm a big numpty when it comes to this stuff
[07:38:28] <FromDiscord> <sharpcdf> In reply to @Elegantbeef "That's not what you": new error
[07:38:29] <FromDiscord> <sharpcdf> yea
[07:38:33] <FromDiscord> <sharpcdf> hopefully i can resolve it
[08:22:12] <FromDiscord> <evoalg> I don't know why this doesn't work when I thought it would? https://play.nim-lang.org/#ix=3FvV
[08:29:09] <FromDiscord> <Elegantbeef> It doesnt know the type
[08:29:22] <FromDiscord> <evoalg> ahhhh
[08:30:29] <FromDiscord> <evoalg> makes sense now!
[08:31:24] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3Fw0
[08:31:30] <FromDiscord> <𝙧𝙚𝙢> i tried and but it complained about no boolean
[08:31:38] <FromDiscord> <Elegantbeef> `ev.state and  Button1Mask`
[08:31:47] <FromDiscord> <𝙧𝙚𝙢> tried that...
[08:31:48] <FromDiscord> <Elegantbeef> then == `Button1Mask`
[08:31:56] <FromDiscord> <𝙧𝙚𝙢> but its a bit flagh
[08:31:58] <FromDiscord> <𝙧𝙚𝙢> (edit) "flagh" => "flag?"
[08:32:03] <FromDiscord> <Elegantbeef> Nim's ints dont implicitly convert to bools
[08:32:15] <FromDiscord> <Elegantbeef> `ev.state and Button1Mask == Button1Mask`
[08:32:25] <FromDiscord> <𝙧𝙚𝙢> that looks stupid but if it works then it works
[08:32:39] <FromDiscord> <Elegantbeef> Well we have proper bitsets but that requires the C type to be not stupid
[08:32:53] <FromDiscord> <Elegantbeef> Normally you'd do `Button1Mask in ev.state` but thanks C
[08:33:39] <FromDiscord> <𝙧𝙚𝙢> i c
[08:33:56] <FromDiscord> <Elegantbeef> Nim uses wirth style bitsets instead of C style oring of its
[08:33:58] <FromDiscord> <Elegantbeef> of ints\
[08:34:06] <FromDiscord> <𝙧𝙚𝙢> wirth?
[08:34:11] <FromDiscord> <Elegantbeef> Pascal
[08:34:27] <FromDiscord> <𝙧𝙚𝙢> nim feels like python and pascal had some weird baby'
[08:41:34] <FromDiscord> <𝙧𝙚𝙢> not bad thing btw just its kinda weird
[08:57:27] <FromDiscord> <pyautogui> Wirth also influenced/created many other languages, including Modula, ALGOL, VHDL, Ada, and who knows what else. He was a big proponent of structured programming.Source: https://en.wikipedia.org/wiki/Niklaus_Wirth
[09:17:42] <FromDiscord> <sharpcdf> wheres the documentation on the `when defined(os)` statement
[09:17:48] <FromDiscord> <sharpcdf> i cant find it and it kind of confuses me
[09:18:34] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#statements-and-expressions-when-statement
[09:18:45] <FromDiscord> <Elegantbeef> `defined` is just `-d:someName`
[09:23:47] <FromDiscord> <sharpcdf> yea, but when is `windows` or etc. defined
[09:24:05] <FromDiscord> <Elegantbeef> From the Nimcfg i believe
[09:24:11] <FromDiscord> <sharpcdf> alright
[09:24:28] <FromDiscord> <sharpcdf> just dont see anything on those specific variables so i was a bit cnofused
[09:24:28] <FromDiscord> <sharpcdf> just dont see anything on those specific variables so i was a bit confused
[09:29:28] <FromDiscord> <sharpcdf> just realized i could also make a shell/batch file that could just manually define the os for each download
[09:30:51] <FromDiscord> <Elegantbeef> What do you mean?
[09:31:56] <FromDiscord> <sharpcdf> well you could do like `nim c -d:linux` in the shell files and vice versa
[09:32:02] <FromDiscord> <sharpcdf> wouldnt be very efficient but it works
[09:32:07] <FromDiscord> <sharpcdf> or you could just check the extension
[09:32:42] <FromDiscord> <sharpcdf> just my opinion
[09:32:45] <FromDiscord> <sharpcdf> ¯\\\_(ツ)\_/¯
[09:32:47] <FromDiscord> <Elegantbeef> For what though?
[09:33:09] <FromDiscord> <sharpcdf> im just saying as an alternative to the predefined os variables
[09:33:19] <FromDiscord> <sharpcdf> you could use it for making specific processes run or soemthing
[09:33:25] <FromDiscord> <sharpcdf> idk lol
[09:33:26] <FromDiscord> <sharpcdf> hypothetical
[09:33:34] <FromDiscord> <Elegantbeef> They arent variables though
[09:33:47] <FromDiscord> <sharpcdf> compiletime definitions
[09:34:52] <FromDiscord> <Elegantbeef> Yea i dont see what your suggestion is
[09:35:01] <FromDiscord> <sharpcdf> lol nevermind
[09:36:53] <FromDiscord> <sharpcdf> oh wait
[09:36:57] <FromDiscord> <sharpcdf> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\: https://github.com/nim-lang/Nim/wiki/Consts-defined-by-the-compiler
[09:36:59] <FromDiscord> <sharpcdf> found it
[10:34:52] <FromDiscord> <evoalg> In reply to @Elegantbeef "It doesnt know the": So to test to see if a variable contains `@[@[]]` is there a better way then this? https://play.nim-lang.org/#ix=3Fwr
[10:35:52] <FromDiscord> <Rika> Pattern matching?
[10:36:45] <FromDiscord> <evoalg> I don't know what pattern matching is, other than imagining that I could turn it into a string and then use a regex on it?
[10:37:28] <FromDiscord> <Rika> https://nim-lang.org/blog/2021/03/10/fusion-and-pattern-matching.html
[10:40:28] <FromDiscord> <evoalg> Thank you ... before I dive into that, I have another question about what I posted earlier: https://play.nim-lang.org/#ix=3FvV ... I can't do `assert dd == @[@[]]` because it can't infer the type, but why can I do `assert d == @[]` ... shouldn't it be the same problem?
[10:41:49] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Fwu
[10:42:26] <FromDiscord> <Elegantbeef> The issue is the inner sequence, since an array of an empty array isnt valid
[10:42:42] <FromDiscord> <Rika> Well why isn’t it?
[10:42:52] <FromDiscord> <Rika> Just stoking the fire
[10:43:09] <FromDiscord> <Elegantbeef> No deducable type
[10:43:46] <FromDiscord> <Elegantbeef> The issue is actually probably just an issue with the bracket expression
[10:44:22] <FromDiscord> <evoalg> `assert d == @[]` has no deducible type either?
[10:44:39] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Fwv
[10:44:46] <FromDiscord> <Elegantbeef> Nah it does since there is a single `==` proc for `seq[T]`
[10:45:11] <FromDiscord> <Elegantbeef> If you introduced a proc `==(a: seq[string]. b: seq[int])` it'd not work
[10:45:56] <FromDiscord> <Elegantbeef> Oh nvm i guess i'm wrong 😀
[10:46:01] <FromDiscord> <Elegantbeef> That's interesting
[10:46:20] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Fww
[10:46:24] <FromDiscord> <Elegantbeef> That works and does indeed call the above `==`
[10:46:40] <FromDiscord> <Elegantbeef> Ah right that's more specific
[10:47:01] <FromDiscord> <Rika> Lol
[10:47:16] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Fwx
[10:47:27] <FromDiscord> <Elegantbeef> Thats what we want
[10:47:38] <FromDiscord> <Rika> Basically reverse type deduction only goes one level of generics
[10:48:04] <FromDiscord> <Elegantbeef> I dont think that's the issue in the array issue
[10:48:17] <FromDiscord> <Elegantbeef> The issue is that i think the system only looks if the type is `empty` and not if any of the types are empty
[10:48:48] <FromDiscord> <Elegantbeef> if you look at the `var b = [[]]` error it reports `array[0..0,array[-1..0, empty]]`
[10:49:03] <FromDiscord> <Elegantbeef> Which makes me think it doesnt check intelligently to see "hey is this an array literal"
[10:49:40] <FromDiscord> <Elegantbeef> an empty array literal\
[10:50:03] <FromDiscord> <Rika> In reply to @Elegantbeef "if you look at": That’s correct isn’t it? Same issue with a no?
[10:50:28] <FromDiscord> <Elegantbeef> What?
[10:52:01] <FromDiscord> <Rika> I don’t know what you mean, [] is also of type array empty
[10:52:18] <FromDiscord> <Elegantbeef> I'm saying it doesnt check if the child is empty
[10:53:06] <FromDiscord> <Rika> So you’re meaning the same thing as I did?
[10:53:12] <FromDiscord> <Rika> Meant not did
[10:53:23] <FromDiscord> <Elegantbeef> Not a fucking clue
[10:54:34] <FromDiscord> <Rika> Lol I mean whatever lol
[10:55:14] <FromDiscord> <Rika> I assume this limitation is because of performance reasons
[10:55:29] <FromDiscord> <Rika> Or sudden possible generics ambiguity
[10:56:21] <FromDiscord> <Elegantbeef> I assume it's someone forgetting some AST existed
[10:56:36] <FromDiscord> <Elegantbeef> That's the #1 reason for "bugs" around stuff like this
[10:57:48] <FromDiscord> <Rika> No I feel like this limitation is still here for some reason since it’s so obvious
[10:59:26] <FromDiscord> <Elegantbeef> i dont follow
[11:00:13] <FromDiscord> <Elegantbeef> How often are you making 30 nested empty array/seq literals
[11:01:02] <FromDiscord> <Rika> That’s not the issue
[11:02:03] <FromDiscord> <Rika> Now T can be inferred as A, or A[B, …], or etc? Or am I worrying too much
[11:03:26] <FromDiscord> <Elegantbeef> I might be wrong looking at the error again
[11:21:37] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[11:44:27] *** Joins: Colt (~Colt@user/colt)
[11:58:58] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[12:15:23] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:07:25] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 250 seconds)
[13:37:49] <FromDiscord> <haxscramper> I will move it to some separate library so you won't have to drag in whole `hmisc` bullshit pile that you most likely don't need in your code↵(@ajusa)
[13:44:06] <FromDiscord> <haxscramper> Funny how fusion was not even mentioned in the roadmap
[14:17:01] <FromDiscord> <dabmlfz> Is there any package that implements ADTs with a macro? I could write my own but would rather reuse one if it exists
[14:19:24] <FromDiscord> <dabmlfz> nvm, there seems to be Patty and others.. google really fails here
[14:25:29] <FromDiscord> <Yardanico> In reply to @dabmlfz "Is there any package": Object variants are already ADTs, perhaps what you want is safe access to object branches?
[14:25:39] <FromDiscord> <Yardanico> Then you can use patty or fusion/matching
[14:26:02] <FromDiscord> <Yardanico> There are more alternatives sure, but those are the ones I can quickly remember :)
[14:27:05] <FromDiscord> <dabmlfz> Yeah I was looking for sugar constructs to help with the boilerplate, thanks!
[14:27:25] <FromDiscord> <enthus1ast> uff zmq is terrible to use... it looks nice at first but it has so many strange quirks...
[14:28:16] <FromDiscord> <dabmlfz> can you mention one?
[14:29:38] <FromDiscord> <enthus1ast> req / rep breaks when one side crashes and can not recover, pub / sub sends queues to many msgs and cannot realy congest control, dealer / router needs dummy msg ? and seems to need to know the partitipants beforehand
[14:30:09] <FromDiscord> <enthus1ast> so yeah i better use something else
[14:31:42] <FromDiscord> <enthus1ast> ah not pub / sub , i meant push / pull  sorry
[14:33:44] <FromDiscord> <dabmlfz> oof your first point means you wouldn't want to use it on a public cluster ig
[14:34:14] <FromDiscord> <enthus1ast> i want to be able to spawn and remove producers and consumers at will
[14:34:29] <FromDiscord> <enthus1ast> because i don't know yet how many i need for each task
[14:34:49] <FromDiscord> <enthus1ast> and they will crash and when they do, i do not want to restart the whole system
[14:36:04] <FromDiscord> <enthus1ast> i do not need high throughput, but the messaging / queueing must be reliable
[14:39:27] *** Joins: neurocyte0132889 (~neurocyte@94.46.77.154)
[14:39:27] *** Quits: neurocyte0132889 (~neurocyte@94.46.77.154) (Changing host)
[14:39:27] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[14:41:36] <FromDiscord> <dabmlfz> in that case zeromq isn't suitable as it's targeted more towards resource constrained systems
[14:42:08] <FromDiscord> <enthus1ast> I'm actually wondering for what task zmq IS actually suitable ;)
[14:42:33] <FromDiscord> <enthus1ast> can not imagine building something with it
[14:45:47] <FromDiscord> <dabmlfz> probably for something where every node agrees on the semantics and where you don't want reliability at the expense of resources I'd say
[14:48:51] <FromDiscord> <Rika> Sounds pretty rare
[14:49:08] <FromDiscord> <Rika> I guess multi computer computing like in research laboratories?
[15:03:35] *** Joins: terminalpusher (~terminalp@2a01:586:12e7:1:ecac:12bf:39fa:2ed)
[15:05:48] *** Quits: elph (uid286227@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:46:10] *** Joins: elph (uid286227@lymington.irccloud.com)
[15:50:41] *** Joins: Guest41 (~Guest41@45.91.23.63)
[15:50:57] *** Quits: Guest41 (~Guest41@45.91.23.63) (Client Quit)
[16:10:27] *** Joins: src (~src@user/src)
[16:42:19] *** Joins: sagax (~sagax_nb@user/sagax)
[17:12:57] <FromDiscord> <Tom> Is it possible to make exception groups or tag groups for effect annotations, so I can say: `{.tags: [IOEffect].}` rather than `{.tags: [ReadIOEffect, WriteIOEffect].}` for example? Again, same question for `raises` and exception groups.
[17:29:29] *** Joins: arkurious (~arkurious@user/arkurious)
[17:52:11] <FromDiscord> <dabmlfz> \
[17:57:12] <FromDiscord> <Rika> Christ your avatar is so high res it lags my phone when I open your profile
[18:18:52] <FromDiscord> <ajusa> How do I cross compile a Windows exe with SSL support? I've added all the missing DLLs and cacert.pem but it still complains about certificates not found
[18:19:25] <FromDiscord> <ajusa> Specifically, "No SSL/TLS CA certificates found."
[18:19:39] <FromDiscord> <ajusa> (edit) "How do I cross compile a Windows exe with SSL support? I've added all the missing DLLs and cacert.pem ... but" 03added "to the same folder as the exe"
[19:22:32] <NimEventer> New thread by 12398890: How to profiling GC in Nim like golang's gctrace=1, see https://forum.nim-lang.org/t/8643
[19:29:46] <FromDiscord> <deech> Does the `dynlib` pragma work for static archives as well?
[19:35:47] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 264 seconds)
[19:59:00] *** Joins: src_ (~src@user/src)
[20:00:18] <FromDiscord> <leorize> no↵(@deech)
[20:02:18] *** Quits: src (~src@user/src) (Ping timeout: 260 seconds)
[20:34:13] *** Joins: lumo_e (~enrico@151.29.48.90)
[21:37:13] *** Quits: terminalpusher (~terminalp@2a01:586:12e7:1:ecac:12bf:39fa:2ed) (Remote host closed the connection)
[21:44:28] *** Joins: terminalpusher (~terminalp@2a01:586:12e7:1:ecac:12bf:39fa:2ed)
[22:24:23] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 264 seconds)
[22:45:00] *** Joins: lumo_e (~enrico@151.29.48.90)
[23:03:59] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 264 seconds)
[23:10:05] <FromDiscord> <jfmonty2> finally trying my hand at macros for the first time, is there any way to separate a variable declaration from its body? I.e. I want to have `let` or `var` in the main body of my code, but use a macro to generate the rest of the assignment
[23:10:38] <FromDiscord> <jfmonty2> sent a code paste, see https://play.nim-lang.org/#ix=3FAe
[23:11:17] <FromDiscord> <jfmonty2> but it keeps giving me syntax errors saying it expected either `:` or `=`, so I guess `let arbitrary_stmt` isn't valid syntax and therefore it can't be done this way?
[23:12:23] <FromDiscord> <jfmonty2> (edit) "`=`," => "`=` after the `let`,"
[23:17:59] *** Joins: lumo_e (~enrico@151.29.48.90)
[23:20:03] <FromDiscord> <Rika> Yes
[23:30:43] <FromDiscord> <michaelb> why isn't there a git tag (on github) for v1.2.14?
[23:39:29] *** Quits: lumo_e (~enrico@151.29.48.90) (Remote host closed the connection)
[23:41:09] <FromDiscord> <𝙧𝙚𝙢> so im writing a shitty wm and i want to know when i run `DISPLAY=:1 xeyes` it works fine from a seperate terminal but spawning it using `discard execCmd(cmd.args.join)` doesnt work?
[23:41:22] <FromDiscord> <𝙧𝙚𝙢> it doesnt show up at all in the Xephyr window
[23:41:59] <FromDiscord> <𝙧𝙚𝙢> its being invoked on a keypress like `shell(@["xeyes"])`
[23:42:47] <FromDiscord> <𝙧𝙚𝙢> any help w this?
[23:44:03] <FromDiscord> <Yardanico> the `DISPLAY=:1 xeyes` is shell syntax, it won't work if you are launching a command
[23:44:14] <FromDiscord> <Yardanico> you need to use something that allows you to pass the environment, for example execCmdEx from osproc
[23:44:17] <FromDiscord> <Yardanico> `env` argument there
[23:44:39] <FromDiscord> <𝙧𝙚𝙢> it shouldnt require it anyways since its launching inside the second x server
[23:44:55] *** Joins: lumo_e (~enrico@151.29.48.90)
[23:44:56] <FromDiscord> <Yardanico> how do you determine that it's launched "inside"?
[23:45:16] <FromDiscord> <𝙧𝙚𝙢> because im running a Xephyr and running that program (the wm) inside a second X server
[23:45:29] <FromDiscord> <𝙧𝙚𝙢> theres no way it wouldnt be running inside it
[23:45:53] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FCb
[23:46:15] <FromDiscord> <𝙧𝙚𝙢> its just that i cant figure out how to spawn the process from inside the wm
[23:47:22] <FromDiscord> <michaelb> sent a code paste, see https://play.nim-lang.org/#ix=3FCg
[23:48:28] <FromDiscord> <𝙧𝙚𝙢> `echo $DISPLAY` gives `:1`
[23:48:31] <FromDiscord> <𝙧𝙚𝙢> from inside the Xephyr
[23:48:42] <FromDiscord> <Yardanico> In reply to @brainproxy "across multiple platforms and": what csources are you using? v1 ones, right?
[23:48:48] <FromDiscord> <𝙧𝙚𝙢> yet it only works if i do `DISPLAY=:1 xeyes` before?
[23:49:30] <FromDiscord> <𝙧𝙚𝙢> nvm
[23:49:37] <FromDiscord> <𝙧𝙚𝙢> it magically fixed after i put `xeyes &`
[23:49:43] <FromDiscord> <𝙧𝙚𝙢> maybe it wasnt forking i guess?
[23:50:05] <FromDiscord> <michaelb> In reply to @Yardanico "what csources are you": not sure, checking now, I didn't write the `ci.yml`, here it is:↵https://github.com/michaelsbradleyjr/nim-dagger/blob/localstore/.github/workflows/ci.yml
[23:50:19] <FromDiscord> <Yardanico> yes it uses the old csources repo
[23:50:32] <FromDiscord> <Yardanico> it has c sources for nim 0.20
[23:50:44] <FromDiscord> <Yardanico> csources_v1 has nim 1.0
[23:50:52] <FromDiscord> <Yardanico> and current nim versions are only tested to bootstrap with nim 1
[23:51:10] *** Joins: weirdweirdhuh (~weirdweir@212.252.142.249)
[23:51:10] <FromDiscord> <Yardanico> https://github.com/nim-lang/csources_v1
[23:53:52] *** Quits: weirdweirdhuh (~weirdweir@212.252.142.249) (Client Quit)
