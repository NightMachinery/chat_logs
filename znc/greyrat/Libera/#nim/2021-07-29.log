[00:08:50] <FromDiscord> <planetis> could it be you are using seq.add and it creates bigger seqs than necessary‚Üµ(@jfmonty2)
[00:09:19] <FromDiscord> <jfmonty2> It's only one seq though, so at the very most it would be what, 2x the required size? Not 10x
[00:09:54] <FromDiscord> <jfmonty2> Although I guess a string is basically a seq, and maybe `splitLines` uses `add` internally on them
[00:10:26] <FromDiscord> <jfmonty2> I don't know the resizing logic for strings/seqs, how much bigger than necessary can they be?
[00:18:23] <FromDiscord> <planetis> see lib/system/seqsv2 strsv2.nim
[00:18:53] <FromDiscord> <planetis> len plus 2/3 for seqs if i remember
[00:20:09] <FromDiscord> <planetis> take a look at the generated c you will figure it out
[00:20:53] <FromDiscord> <arnetheduck> In reply to @codic "i'm curious, why do": for the wrappers we write, we strive to avoid unnecessary noise like this - `header` is a bit of an anti-feature when you have an accurate ABI description of the type
[00:26:29] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:26:53] *** Joins: supakeen (~user@python/site-packages/supakeen)
[00:37:51] *** Joins: Trustable (~Trustable@dslb-002-202-118-069.002.202.pools.vodafone-ip.de)
[00:38:05] *** Quits: Trustable (~Trustable@dslb-002-202-118-069.002.202.pools.vodafone-ip.de) (Client Quit)
[00:50:05] <FromDiscord> <codic> üëç
[00:59:37] <fn> <11ForumUpdaterBot99> New thread by Tsojtsoj: Nimscript produces slower executable, see https://forum.nim-lang.org/t/8281
[01:37:47] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[01:38:11] *** Joins: thunder (~thunder@user/thunder)
[02:01:15] <FromDiscord> <RattleyCooper> I have a `proc regRpc(s: string, p: proc())` procedure that updates a `Table[string, proc()]`.  How might I turn that into a pragma so I can add to my proc declarations ie `proc some_proc() {.regRpc("some_string").} =`?
[02:01:51] <FromDiscord> <RattleyCooper> (edit) "I have a `proc regRpc(s: string, p: proc())` procedure that updates a `Table[string, proc()]`.  How might I turn that into a pragma so I can add to my proc declarations ie `proc some_proc() {.regRpc("some_string").} =`? ... " 03added " I feel like that would be cleaner than listing out a bunch of `regRpc` procedure calls."
[02:02:19] *** Quits: max22- (~maxime@2a01cb088335980065a24f30b6c4d982.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[02:02:33] <FromDiscord> <RattleyCooper> I looked at the docs about custom pragmas but I'm having trouble applying the docs to my scenario
[02:02:36] *** Joins: max22- (~maxime@2a01cb0883359800ab0e6942225de0c8.ipv6.abo.wanadoo.fr)
[02:31:07] <FromDiscord> <@bracketmaster-5a708063d73408ce4> has anyone ever compared nim vs swift?
[02:31:12] <FromDiscord> <@bracketmaster-5a708063d73408ce4> swift can do DSL too apparently
[02:31:21] <FromDiscord> <@bracketmaster-5a708063d73408ce4> and Swift also has ARC
[02:49:14] <FromDiscord> <Hi02Hi> In reply to @@bracketmaster-5a708063d73408ce4 "and Swift also has": different to nim's arc
[02:49:24] <FromDiscord> <Hi02Hi> (edit) "to" => "from"
[02:54:47] <FromDiscord> <treeform> Nearly every language can do DSL, its just "how well" can it do it.
[02:56:39] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Swift seems to have been designed with DSLs in mind
[02:56:58] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 240 seconds)
[03:02:37] *** Joins: thunder (~thunder@user/thunder)
[03:03:48] *** Quits: rockcavera (~rc@user/rockcavera) (Ping timeout: 268 seconds)
[03:05:11] *** Joins: rockcavera (~rc@192.12.115.195)
[03:05:11] *** Quits: rockcavera (~rc@192.12.115.195) (Changing host)
[03:05:11] *** Joins: rockcavera (~rc@user/rockcavera)
[03:15:52] *** Quits: max22- (~maxime@2a01cb0883359800ab0e6942225de0c8.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:23:03] <FromDiscord> <SirJosh> yo i was looking at that blog post - does anyone have the haskell example on hand? i'm amazed that haskell can seemingly get that fast <https://nim-lang.org/blog/2021/07/28/Nim-Efficient-Expressive-Elegant-Benchmarking.html>
[03:23:09] <FromDiscord> <SirJosh> (edit) "that" => "the most recent"
[04:47:52] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:06:46] <FromDiscord> <Rika> I don‚Äôt see how it is amazing
[05:06:55] <FromDiscord> <Rika> As Haskell is compiled as well
[05:34:13] *** Quits: thunder (~thunder@user/thunder) (Killed (NickServ (GHOST command used by metasintactic)))
[05:34:15] *** Joins: thunder (~thunder@user/thunder)
[06:56:29] <fn> <11ForumUpdaterBot99> New thread by Phpostrich: NestedVM & Nim to make android apps?, see https://forum.nim-lang.org/t/8282
[07:40:01] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> Anyone seen this error with postgresql on Mac OS? `Error: cannot 'importc' variable at compile time; pqsetdbLogin`
[07:40:11] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> This is with nim installed from Homebrew
[07:44:49] <FromDiscord> <Elegantbeef> Are you trying to use `pqsetdblogin` in a static block or anywhere at compile time?
[07:47:57] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> Nope I'm just calling `open` on db_postgres
[07:48:28] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> `result.conn = db_postgres.open(uri, "", "", "")` that plus `import db_postgres` are the only things I'm using atm
[07:50:49] <FromDiscord> <Elegantbeef> `nim -v`?
[07:50:51] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> I've set the c include/lib paths too: `nim c --cincludes:/opt/homebrew/Cellar/postgresql/13.3/include --clib:lbpq --clibdir:/opt/homebrew/Cellar/postgresql/13.3/lib -d:ssl -r --outdir:build src/cryptotest.nim`
[07:51:07] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> Nim Compiler Version 1.4.8 [MacOSX: arm64]
[07:53:30] <FromDiscord> <Elegantbeef> More code = more better
[07:55:00] <FromDiscord> <Elegantbeef> Not running mac, but those two lines work here so can only imagine you either left a detail out üòÄ
[07:58:03] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> no problem, I just didn't want to paste the file if it was a stupid problem I missed üôÇ
[07:58:23] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> sent a long message, see http://ix.io/3umJ
[07:58:54] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> `  const db = newPgConnection("test", "test", "test")` is called from another file, but that's the extent of the calls
[07:59:37] <FromDiscord> <ElegantBeef> https://play.nim-lang.org/ saves eyeballs
[08:00:16] <FromDiscord> <Elegantbeef> Hey i asked if you were using it at compile time and you said no
[08:00:40] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> https://play.nim-lang.org/#ix=3umL
[08:00:40] <FromDiscord> <Elegantbeef> `const` is compile time, change that to let and it wont error
[08:01:04] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> ... ü§¶ goddammit I'm sorry
[08:01:15] <FromDiscord> <ùìëùìÆùì∑ùìæùì∂ùì´ùìÆùì≠> I haven't written Nim in over a year and forgot const is compile time only
[08:01:32] <FromDiscord> <Elegantbeef> It's fine i dont blame you, well enough that it matters anyway
[08:05:51] <FromDiscord> <Rika> I blame beef
[08:06:04] <FromDiscord> <Elegantbeef> Indeed he's useless
[08:16:57] *** Quits: ozzz (~oz@46.49.41.80) (Quit: Bye)
[08:17:17] *** Joins: ozzz (~oz@46.49.41.80)
[08:19:09] <FromDiscord> <generic linux user> what
[08:25:22] <FromDiscord> <Elegantbeef> Like said blame beef
[08:26:16] <FromDiscord> <Elegantbeef> statistically speaking he causes more issues than he destroys
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:53:03] <FromDiscord> <generic linux user> that is really technical
[09:05:06] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:29:23] <FromDiscord> <treeform> Does any one know if there is a way to convert a symbol into a string in a template? Some thing that can make this work: https://play.nim-lang.org/#ix=3un7
[10:30:54] <FromDiscord> <Elegantbeef> `astToStr`?
[10:31:38] <FromDiscord> <treeform> astToStr is exactly what I was looking for, thanks!
[10:49:48] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 258 seconds)
[11:05:31] *** Joins: max22- (~maxime@2a01cb0883359800a6b44bfebdf50f1f.ipv6.abo.wanadoo.fr)
[11:16:24] *** Quits: max22- (~maxime@2a01cb0883359800a6b44bfebdf50f1f.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[11:17:13] *** Joins: max22- (~maxime@2a01cb0883359800a6b44bfebdf50f1f.ipv6.abo.wanadoo.fr)
[11:21:51] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:55:08] *** Quits: max22- (~maxime@2a01cb0883359800a6b44bfebdf50f1f.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[11:56:33] <FromDiscord> <impbox [ftsf]> it's handy and i always forget it
[11:56:48] <FromDiscord> <impbox [ftsf]> i can never remember the macro/template stuff
[12:01:32] *** Joins: max22- (~maxime@2a01cb0883359800ef77ac555b69c4cd.ipv6.abo.wanadoo.fr)
[12:02:05] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[12:33:51] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:37:43] *** Quits: max22- (~maxime@2a01cb0883359800ef77ac555b69c4cd.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[12:38:00] *** Joins: max22- (~maxime@2a01cb0883359800a23155864aee84e4.ipv6.abo.wanadoo.fr)
[12:58:16] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Excess Flood)
[12:58:36] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[12:59:31] <arkanoid> I still kinda struggle to bend my daily nim programming into metaprogramming
[13:04:53] <FromDiscord> <haxscramper> you don't need to bend to metaprogramming
[13:05:17] <FromDiscord> <haxscramper> And honestly I'm writing a lot less macros now than I did earlier
[13:05:21] <FromDiscord> <haxscramper> s/writing/using in regular code/
[13:39:25] <FromDiscord> <zidsal> who are you and what have you done with the real haxscramper
[13:59:36] *** Quits: Vladar (~Vladar@46.162.2.53) (Read error: Connection reset by peer)
[14:04:21] <arkanoid> :D
[14:16:05] <mst> metaprogramming is fun but it's very easy to overdo
[14:30:36] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[14:31:26] *** Joins: xet7 (~xet7@user/xet7)
[14:35:04] *** Joins: [R] (~rs@genoce.org)
[14:43:55] <Mister_Magister> how can i check if port is in use?
[15:06:41] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: Helios (~dwaglemat@2001:470:69fc:105::5f8) (Quit: Bridge terminating on SIGTERM)
[15:08:25] <FromDiscord> <impbox [ftsf]> try binding to it and see if it fails?
[15:08:47] <Mister_Magister> thats what i thought
[15:09:00] <Mister_Magister> but its hard to deduce from docs
[15:09:08] <Mister_Magister> asking for example is pretty shit but ugh
[15:10:02] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[15:10:16] <FromDiscord> <impbox [ftsf]> https://man7.org/linux/man-pages/man2/bind.2.html
[15:10:17] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[15:10:31] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[15:10:38] <FromDiscord> <impbox [ftsf]> EADDRINUSE
[15:11:07] <FromDiscord> <impbox [ftsf]> which network library are you using?
[15:15:59] <Mister_Magister> none
[15:16:04] <Mister_Magister> i jsut have empty nim file
[15:16:43] <FromDiscord> <impbox [ftsf]> well, easy way to test, bind to a port, then run your app twice
[15:17:07] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/net.html
[15:17:11] <Mister_Magister> i mean i have app running already
[15:17:17] <Mister_Magister> just want to check if its runing in nim 
[15:20:41] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3uo3
[15:21:02] <FromDiscord> <impbox [ftsf]> if you try to bind to the same port you'll get that exception
[15:21:07] <FromDiscord> <impbox [ftsf]> so you can detect that
[15:22:36] <Mister_Magister> yeah i get that
[15:22:40] <FromDiscord> <enthus1ast> not always, (at least linux) also supports multiple processes bind to the same port, then it makes round robin
[15:22:42] <Mister_Magister> i just don't get how to do that
[15:22:44] <Mister_Magister> xd
[15:24:31] <FromDiscord> <generic linux user> guys , suppose i installed vlc on a windows pc, how will i call it from cmd using startprocess?
[15:24:35] <FromDiscord> <impbox [ftsf]> something like that maybe
[15:24:38] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3uo5
[15:24:42] <FromDiscord> <generic linux user> (edit) "startprocess?" => "startprocess?‚Üµvlc or vlc.exe?"
[15:24:57] <FromDiscord> <generic linux user> (edit) "pc," => "pc by choco,"
[15:24:58] <Mister_Magister> idk how to handle osError
[15:25:17] <Mister_Magister> But that handles all exceptions
[15:25:20] <Mister_Magister> not just one
[15:25:27] <FromDiscord> <impbox [ftsf]> you can make it more specific if you like
[15:25:31] <FromDiscord> <enthus1ast> if on linux and (i think the first one) has used the sockopt SO\_REUSEPORT then this binding will succeed
[15:25:31] <Mister_Magister> and i cant see any meaningful definition of osError
[15:25:36] <Mister_Magister> in documentation its just int
[15:25:52] <Mister_Magister> it doesn't have reuseport
[15:26:13] <FromDiscord> <enthus1ast> k
[15:26:44] <Mister_Magister> i just idk how to handle osError
[15:27:15] <Mister_Magister> yeah i just tried running it and the message says permission denied
[15:27:22] <Mister_Magister> doesn't look like port in use
[15:27:38] <Mister_Magister> only if i run it as root
[15:27:47] <Mister_Magister> but then again how do you handle osError
[15:28:01] <Mister_Magister> OSErrorCode = distinct int32 its just int in docs
[15:34:43] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:36:37] <FromDiscord> <impbox [ftsf]> 10048 is the code for address in use
[15:36:41] <FromDiscord> <impbox [ftsf]> so you can check for that
[15:36:54] <FromDiscord> <impbox [ftsf]> though I suspect OSError is platform specific
[15:37:02] <Mister_Magister> are there constants for os error codes?
[15:37:23] <FromDiscord> <impbox [ftsf]> probably not in nim since they're from the OS
[15:37:28] <Mister_Magister> 98 is code i'm looking for
[15:37:35] <FromDiscord> <enthus1ast> you must be root to bind to ports lower than 1024‚Üµ(<@709044657232936960_=4dister_=4dagister=5b=49=52=43=5d>)
[15:38:09] <Mister_Magister> oh ye ye
[15:39:22] <Mister_Magister> if i do except OSError: how do i get error code? getCurrentException() gets exception but its not of the type OSError
[15:39:25] <FromDiscord> <impbox [ftsf]> you can get the string with osErrorMsg
[15:39:43] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://paste.rs/gW0
[15:39:43] <Mister_Magister> i don't need string
[15:39:48] <Mister_Magister> i want int
[15:39:59] <FromDiscord> <impbox [ftsf]> err.int
[15:41:42] <Mister_Magister> hmm i want to compare OSErrorCode (which is int really) to number but it shows type mistmatch
[15:42:33] <FromDiscord> <impbox [ftsf]> if err.int == number:
[15:42:54] <Mister_Magister> no, not that
[15:43:09] <Mister_Magister> code == OSErrorCode(98) that works
[15:43:25] <FromDiscord> <impbox [ftsf]> yes you can do that too
[15:43:39] <FromDiscord> <impbox [ftsf]> you're converting 98 to OSErrorCode
[15:43:42] <Mister_Magister> yes
[15:43:48] <Mister_Magister> because nim cannot compare int to int
[15:43:51] <FromDiscord> <impbox [ftsf]> or converting an OSErrorCode to int is the same
[15:43:55] <FromDiscord> <impbox [ftsf]> nim can indeed compare int to int
[15:44:02] <Mister_Magister> OSErrorCode is int
[15:44:07] <FromDiscord> <impbox [ftsf]> it's a distinct int
[15:44:12] <Mister_Magister> whats the diff
[15:44:29] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/manual.html#types-distinct-type
[15:46:11] <Mister_Magister> huh
[15:49:44] <FromDiscord> <impbox [ftsf]> they don't compare to each other, unless you explicitly convert them
[15:50:04] <FromDiscord> <impbox [ftsf]> and distinct types don't use the operators from the base type
[15:50:08] <FromDiscord> <impbox [ftsf]> unless they borrow them
[16:28:18] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Remote host closed the connection)
[16:28:37] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[17:13:20] *** Joins: rockcavera (~rc@192.12.115.195)
[17:13:20] *** Quits: rockcavera (~rc@192.12.115.195) (Changing host)
[17:13:20] *** Joins: rockcavera (~rc@user/rockcavera)
[17:22:07] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[17:24:14] *** Joins: Vladar (~Vladar@46.162.2.53)
[17:38:11] <fn> <11ForumUpdaterBot99> New question by bumbread: Nim infinite loop, see https://stackoverflow.com/questions/68464490/nim-infinite-loop
[17:52:58] *** Quits: max22- (~maxime@2a01cb0883359800a23155864aee84e4.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:24:08] *** Quits: beshr (~beshr@user/beshr) (Remote host closed the connection)
[18:30:52] *** Joins: beshr (~beshr@user/beshr)
[18:34:05] <FromDiscord> <ynfle (ynfle)> You can covert to int by `int()`
[18:37:14] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[18:43:00] <arkanoid> what's the best way to use nimble properly to fix dependency versions and enforcing them in such a way that other project are free to use whatever other version the need?
[18:43:54] <FromDiscord> <Rika> wdym?
[18:43:55] <arkanoid> I still have enverything in ~/.nimble, and I've moved stuff where I do need reproducibility in a nix-shell, so I've a grey area in the middle
[18:44:11] <FromDiscord> <Rika> if your lib and another dep share a dep (transient) then no cant be done i believe
[18:45:21] <arkanoid> ok I'll keep using nix-shell. Not really the easiest solution
[18:45:50] <arkanoid> I'd be much more happy if .nimble would handle a local folder in project with enforced dependency versions according to nimble file
[18:52:42] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[18:54:20] <arkanoid> for a new io bound project, would you go threadpool, async, or something else?
[19:11:51] *** Joins: max22- (~maxime@2a01cb0883359800ee56317cc4be81d5.ipv6.abo.wanadoo.fr)
[19:13:22] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:29:51] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 268 seconds)
[20:14:59] <FromDiscord> <creonico> Hey, I have a for loop that uses `pairs()` to iterate over a sequence, `for i, content in contents.pairs():`. But when I give the address of the item returned by pairs(), `content.addr` to a pointer of that type. I get `expression has no address; maybe use 'unsafeAddr'` why?
[20:26:46] <fn> <11ForumUpdaterBot99> New thread by Veksha: [0..min(10,^1)], see https://forum.nim-lang.org/t/8283
[20:28:58] *** Joins: arkurious (~arkurious@user/arkurious)
[20:29:51] <FromDiscord> <haxscramper> In reply to @creonico "Hey, I have a": regular `items` returns immutable variables, just like `let`
[20:30:12] <FromDiscord> <haxscramper> You might want to use `mpairs` to take address of the elements
[20:30:23] <FromDiscord> <haxscramper> `for i, content in mpairs(contents):`
[20:44:48] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[21:02:03] *** Quits: max22- (~maxime@2a01cb0883359800ee56317cc4be81d5.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:08:50] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[21:12:49] <FromDiscord> <generic linux user> how to use case keyword for 2 variables
[21:13:02] <FromDiscord> <generic linux user> like:‚Üµ  of 'a' or 'A'
[21:14:12] <FromDiscord> <leorize> `of 'a', 'A'`
[21:15:37] <FromDiscord> <generic linux user> i seached evrywhere, i couldnt find ‚Ä¢_‚Ä¢
[21:15:43] <arkanoid> what makes me want to switch to another language is the impossibility to handle errors properly. You can wrap you main with a catch-all exception block, but your program will crash anyway
[21:16:10] <arkanoid> I have to wrap nim programs with bash restart loops (actually docker restart loops)
[21:22:35] <FromDiscord> <Rika> `but your program will crash anyway`?
[21:22:42] <FromDiscord> <haxscramper> declaring main and wrapping it in the try-all does not work?
[21:22:54] <FromDiscord> <haxscramper> and not putting any executable code at toplevel
[21:23:17] <arkanoid> no, it crash anyway
[21:23:30] <FromDiscord> <haxscramper> by crash you mean?
[21:23:33] <FromDiscord> <haxscramper> exception or what
[21:24:04] <FromDiscord> <Rika> can you explain
[21:24:06] <FromDiscord> <haxscramper> and how language with mandatory `main()` is different for that
[21:40:34] <FromDiscord> <@bracketmaster-5a708063d73408ce4> beyond vlang and nim, are there other languages that bootstrap from c-sources?
[21:43:41] <arkanoid> also the error messages with async are terrible
[21:43:53] *** Joins: rockcavera (~rc@192.12.114.221)
[21:43:53] *** Quits: rockcavera (~rc@192.12.114.221) (Changing host)
[21:43:53] *** Joins: rockcavera (~rc@user/rockcavera)
[21:44:27] <fn> <06Prestige99> Which ones?
[21:44:56] <fn> <11ForumUpdaterBot99> New thread by Alexeypetrushin: Data Notebook in Nim | PL0T, see https://forum.nim-lang.org/t/8284
[21:45:06] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 240 seconds)
[21:46:35] <arkanoid> something like: Async traceback: Exception message: index -3 not in 0 .. 5 and the nearest point in my source to traceback the error is ... main trampoline
[21:47:48] <fn> <11ForumUpdaterBot99> New post on r/nim by h234sd: Data Notebook in Nim | PL0T, see https://reddit.com/r/nim/comments/ou1su3/data_notebook_in_nim_pl0t/
[21:51:14] <FromDiscord> <exelotl> In reply to @@bracketmaster-5a708063d73408ce4 "beyond vlang and nim,": I came from ooc-lang which also did the whole 'sexy modern language that compiles to C' thing
[21:51:46] <FromDiscord> <exelotl> But it sadly hasn't been maintained since 2015 or so
[21:51:47] <FromDiscord> <Rika> not to be confused with ookla xddd
[21:52:27] <FromDiscord> <exelotl> Ook! Ook. Ook? Ook.
[21:52:43] <FromDiscord> <@bracketmaster-5a708063d73408ce4> hmm...
[21:52:48] <fn> <06Prestige99> @arkanoid file an issue, maybe. Sounds annoying
[21:53:04] <FromDiscord> <@bracketmaster-5a708063d73408ce4> why compile to C instead of LLVM? what are the design factors in such a decision
[21:54:50] <FromDiscord> <Rika> c interop
[21:56:20] *** Joins: thunder (~thunder@user/thunder)
[21:58:22] <FromDiscord> <@bracketmaster-5a708063d73408ce4> do you mean emitting C makes it easier to link against C libraries?
[21:58:45] <arkanoid> this is the kind of traceback you get when you do the wise choice to pick nim async/await. I wish I started with thread instead https://termbin.com/oum9
[21:59:01] <FromDiscord> <haxscramper> Emitting C makes it easier to use C structures and libraries
[21:59:16] <FromDiscord> <haxscramper> It does not necessarily make it easier
[21:59:31] <fn> <06Prestige99> @arkanoid was the issue not at gpsserver.nim(171) ?
[21:59:31] <FromDiscord> <leorize> llvm didn't exist
[21:59:47] <FromDiscord> <haxscramper> Also emitting C is less complex, 12 years ago LLVM was not a really an option from what I can undesrsta
[21:59:47] <FromDiscord> <haxscramper> ye
[21:59:48] <FromDiscord> <haxscramper> Also C++ interop
[21:59:50] <arkanoid> Prestige, that's the main
[22:00:29] <arkanoid> Prestice, it's the runForever()
[22:00:56] <fn> <06Prestige99> can you show a minimal example and create an issue? would be good to clean up, if possible
[22:03:12] <arkanoid> not sure I want to do so. I'm failing to fix a bug in production due to this, I will probably have to kick nim outside production due to this and I'm now happy
[22:03:19] <arkanoid> *now/not
[22:04:48] <fn> <06Prestige99> Because of this one error? I wouldn't think it would be very difficult to find where it's happening
[22:05:08] <FromDiscord> <Rika> let me read it
[22:05:48] <FromDiscord> <Rika> eh it's just something in `uploadToTos`
[22:06:21] <FromDiscord> <Rika> arkanoid ^
[22:09:01] <arkanoid> there's no list manipulation in that function, and what Exception message: index -3 not in 0 .. 5 does even mean
[22:09:20] <arkanoid> sorry I'm not angry just very nervous. I'm sorry
[22:09:55] <FromDiscord> <Rika> dont worry
[22:09:57] <FromDiscord> <Rika> its fine
[22:10:06] <FromDiscord> <Rika> this is a shitty error message yes
[22:10:35] <FromDiscord> <Rika> okay something you're `await`ing is fucking up, is what is likely
[22:14:20] <arkanoid> sure, thing, it's somewhere here, but that's really far far away from the indication of the traceback https://termbin.com/pcis
[22:14:42] <arkanoid> the async trampoline is like 20 aways calls away in the tree
[22:15:08] <FromDiscord> <Rika> christ
[22:16:03] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Ping timeout: 250 seconds)
[22:18:01] <arkanoid> so what you get in error while working with async: where the trampoline is (hell yeah I know) and a partial mangled mane of the last {.async.} called. Then you're in the dark no matter how deep the call tree is within that last async
[22:18:44] <arkanoid> I'd suggest: play stay away from async, it works until something dont and you are on your own
[22:18:58] <FromDiscord> <Rika> it should give the whole trace really
[22:19:17] <FromDiscord> <Rika> should have given
[22:19:22] <arkanoid> I'm using nim 1.4.8 stable
[22:23:04] <FromDiscord> <Rika> prolly something to do with d:release i assume? i do not know
[22:23:06] <FromDiscord> <Rika> i have to go
[22:23:12] <FromDiscord> <Rika> it is, like, 3am
[22:25:56] <arkanoid> no, that's a debug stacktrace
[22:26:09] <arkanoid> Rika, thanks for the feedback. Much appreciated
[22:35:04] <arkanoid> what does "Exception message: index -3 not in 0 .. 5" mean?
[22:36:34] *** Joins: SebastianM (~seba@user/sebastianm)
[22:37:04] <fn> <06Prestige99> There's a range 0 to 5 - a number between 0 to 5 is expected, but -3 is provided
[22:37:24] <fn> <06Prestige99> could be an array length 6 maybe
[22:45:33] *** Quits: SebastianM (~seba@user/sebastianm) (Ping timeout: 276 seconds)
[22:47:29] <FromDiscord> <dankrad> sent a code paste, see https://paste.rs/hRQ
[22:48:22] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3uqb
[22:48:27] <FromDiscord> <haxscramper> you can error https://nim-lang.org/docs/macros.html#error%2Cstring%2CNimNode if pragma parameters are not valid
[22:49:07] <FromDiscord> <haxscramper> `> This macro should only be used on attributes with object as base type.` you need to check whether ast passed to pragma is correct or not
[22:49:35] <FromDiscord> <haxscramper> You can't really express this with types, at least when you place attributes for type declarations
[22:49:43] <FromDiscord> <dankrad> Means, I need to iterate over custom pragmas, to see if there's any other pragma which don't belong there?
[22:49:49] <FromDiscord> <dankrad> in a macro\
[22:51:27] <FromDiscord> <haxscramper> `> is there a macro (I didn't see) to iterate over custom pragmas?` get type inst returns structure of the object as declared in code with all pragma parameters https://nim-lang.org/docs/macros.html#getTypeInst%2CNimNode
[22:51:27] <FromDiscord> <haxscramper> about doing this while you are in pragma itsef ...
[22:53:19] <FromDiscord> <haxscramper> I suppose this is doable, but you probably would need to accept `typed` argument for a pragma, then get back to the typeInst
[22:53:47] <FromDiscord> <dankrad> Well, currently I'm using templates as custom pragma. This means I should create a macro which is aborting compilation with getTypeInst?
[22:53:51] <FromDiscord> <haxscramper> `> I want to prevent to put macros to attributes with other types and abort compilation.` - it would probably solve this as well
[22:54:19] <FromDiscord> <haxscramper> I misunderstood the question at first - you only want to put for fields that are `object`?
[22:54:33] <FromDiscord> <dankrad> yep
[22:55:03] <FromDiscord> <haxscramper> So `{.Format: "".}: seq[int]` is incorrect
[22:55:11] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3uqd
[22:55:11] <FromDiscord> <dankrad> this shouldn't be possible, because it's of type float
[22:55:18] <FromDiscord> <dankrad> exactly
[22:55:43] <FromDiscord> <haxscramper> Then you certainly need to accept `typed` argument as a pragma parameter, then `getTypeInst` to retrieve original type declaration
[22:55:50] <FromDiscord> <haxscramper> So something like
[22:56:34] <FromDiscord> <dankrad> but this then doesn't work with custom pragmas declared with templates I assume. Then i need to create the custom pragma with a macro, right?
[22:57:02] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3uqg
[22:59:25] <FromDiscord> <haxscramper> If I remember correctly you can't just use macros as custom pragma, so you need to get a little more involved setup for thsi
[22:59:52] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3uqi
[22:59:54] <FromDiscord> <haxscramper> Formatted can itself be a macro pragma
[23:00:07] <FromDiscord> <haxscramper> You want to generate code based on that, or?
[23:00:24] <FromDiscord> <dankrad> I want to parse a string into an object in this case
[23:00:38] <FromDiscord> <dankrad> oops
[23:00:46] <FromDiscord> <dankrad> yeah I also want to generate code based on those pragmas
[23:00:53] <FromDiscord> <haxscramper> There are several solutions, but if you want to generate any additional code, or just record some data
[23:01:33] <FromDiscord> <haxscramper> okay, then you are -~~fucked~~-
[23:01:40] <FromDiscord> <haxscramper> 1. Accept `typed` parameter for pragma‚Üµ2. Collect all fields in the flag list. Name+type‚Üµ3. `getTypeInst` to get the original `{.Format` pragma
[23:01:51] <FromDiscord> <haxscramper> So I did the same thing and it started with this
[23:02:07] <FromDiscord> <haxscramper> You can't generate code in the same type section, so you need to move it somewhere else
[23:02:18] <FromDiscord> <haxscramper> Specifically I made `genCode(TypeName)` that generated everything
[23:02:43] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/qAk
[23:03:11] <FromDiscord> <haxscramper> `genCode` can have access to the original pragma implementation using typedesc as an argument, then `getTypeInst` on it
[23:03:12] <FromDiscord> <dankrad> Maybe I was incorrect or didn't get it correctly (language barier)
[23:04:13] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3uqk
[23:04:59] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3uqm
[23:05:19] <FromDiscord> <haxscramper> But you need to generate something that would parse things, right?
[23:06:42] <FromDiscord> <dankrad> I don't get it. The parser to parse into object's is already written. Currently I just want to define that this pragma isn't allowed on any other type then object.
[23:07:40] <FromDiscord> <haxscramper> you can't do it with field annotation
[23:07:48] <FromDiscord> <haxscramper> you need either object-level annotation with `typed` argument
[23:07:52] <FromDiscord> <haxscramper> Or a separate macro call
[23:09:40] <FromDiscord> <haxscramper> And if you don't need to generate code at all, then you can just use object-level annotation
[23:09:45] <FromDiscord> <haxscramper> Though what is the point of the annotation in that case
[23:10:05] <FromDiscord> <haxscramper> Type-level annotation is this
[23:17:44] <FromDiscord> <dankrad> But then I need to iterate over pragmas with a macro and check if there's a macro set which I don't want. Right?
[23:18:12] <FromDiscord> <dankrad> Sorry, I'm not that familiar with macros and pragmas. It's my first try.
[23:21:01] <FromDiscord> <haxscramper> yes, that is correct. Recursively iterate over `getTypeInst()` in order to get list of fields that were annotated, then recurse again, but now on `getTypeImpl()` (which returns typed body), and check whether any of the fields were wrongly annotated
[23:21:30] <FromDiscord> <dankrad> alright
[23:22:14] *** Joins: SebastianM (~seba@user/sebastianm)
[23:22:14] <FromDiscord> <dankrad> could you be also so kind and give me an example of an object-level annotation? I don't know the difference between type and object level annotation.
[23:22:38] <FromDiscord> <haxscramper> .
[23:23:59] <FromDiscord> <dankrad> And what's an object level annotation?
[23:25:10] <FromDiscord> <haxscramper> the same as object
[23:25:12] <FromDiscord> <haxscramper> object is a type
[23:25:30] <FromDiscord> <haxscramper> anyway, sorry if I confused you, I just mess up terms sometimes
[23:25:56] <FromDiscord> <haxscramper> But I mean `Object {.MyPragmaHere.} = object`
[23:25:58] <FromDiscord> <dankrad> ah, got it
[23:26:01] <FromDiscord> <dankrad> thank you
[23:29:03] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3uqr
[23:31:25] *** Joins: vicfred (~vicfred@user/vicfred)
[23:31:51] <FromDiscord> <haxscramper> In reply to @haxscramper "https://wandbox.org/permlink/Q7ZIDj4rIs3l2YYB Is th": or maybe not
[23:31:53] <FromDiscord> <dankrad> ah, ok. Now I really got what you wanted to tell me. I'll play around with this approach. But it looks more cleaner then my approach.
[23:32:24] <FromDiscord> <dankrad> \current
[23:32:28] <FromDiscord> <haxscramper> anyway, this is somewhat high-level macro, especially since you are in `typed` territory
[23:38:24] <FromDiscord> <haxscramper> yes
[23:38:28] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/Jcd
[23:38:58] <FromDiscord> <haxscramper> Maybe there is another random combination of `getTypeInst()`, `getImpl()` that does what is necessary
[23:40:45] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3uqA
[23:41:40] <FromDiscord> <haxscramper> I forgot `getImpl()` returns semchecked AST as well, so you just need to traverse it, for each `nnkIdentDefs` you find, check if it has pragma in the fist argument
[23:43:33] <FromDiscord> <haxscramper> But you still need to call `FormatCheck(MyObj)` separately, because it seems you can't have `typed` pragma on object itself
[23:43:44] <FromDiscord> <haxscramper> I hope I'm wrong with this one, and there is a way to do this
[23:55:30] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:55:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
