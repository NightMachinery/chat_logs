[00:01:36] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[00:03:39] *** Quits: isekaijin (~isekaijin@user/isekaijin) (Quit: WeeChat 3.4)
[00:06:23] <riv> Pollion: I can revise it
[00:06:44] *** Quits: Pollion (bombar@zamok.crans.org) (Ping timeout: 252 seconds)
[00:10:56] *** Joins: PollionH (~pollion@crans/pollion)
[00:11:19] <PollionH> riv: Sorry network issues. I didn't see if you replied.
[00:11:33] <riv> I can refresh ramification, I don't really know it
[00:12:11] <PollionH> Ok, let p be a prime dividing the discriminant of K \cap L. It means that p ramifies in this intersection.
[00:12:18] <PollionH> Then p ramifies also in K and in L
[00:12:31] <PollionH> ie p divides both discriminants
[00:12:41] <PollionH> which are relatively prime.
[00:12:45] <riv> Ah thank you
[00:13:00] <PollionH> Therefore p can't ramify in the intersection
[00:13:26] <PollionH> The intersection is then unramified everywhere, which can only happen if it is Q.
[00:14:09] <riv> That's really useful
[00:14:42] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[00:15:16] <PollionH> For cyclotomics the intersection is also known (see theorem 3.4 https://kconrad.math.uconn.edu/blurbs/galoistheory/cyclotomic.pdf)
[00:19:26] *** Joins: stanrifkin (~stanrifki@p200300dbcf167700bafc34e52f0bf804.dip0.t-ipconnect.de)
[00:19:44] *** Quits: andreasbuhr (~quassel@p549db547.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:20:10] *** Quits: bonky (~bonky@2603-7080-a33c-53d2-1a26-49ff-fe3d-bfe9.res6.spectrum.com) (Remote host closed the connection)
[00:22:35] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 268 seconds)
[00:23:47] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[00:24:16] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[00:24:56] *** Quits: edun (~qbt@user/edun) (Quit: Leaving.)
[00:25:15] *** Joins: llh (~llh@user/llh)
[00:27:08] *** Quits: aliosablack (~chomwitt@ppp-94-67-1-27.home.otenet.gr) (Quit: Leaving)
[00:27:21] <tusko> how do I compute something like LCM(pi/2, pi/5)? Is it like LCM(5pi/10, 2pi/10) ... ?
[00:27:31] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[00:27:47] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[00:28:35] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:29:38] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[00:30:17] <Z-module> LCM in what ring?
[00:32:13] <tusko> Q i think
[00:32:31] <tusko> maybe the reals
[00:32:58] <[itchyjunk]> I intuitively understand commutative to mean ab = ba. But what is the formal definition for it? :x
[00:33:17] *** Quits: wisam (~wisam@5.32.40.122) (Ping timeout: 240 seconds)
[00:33:51] <argento> [itchyjunk]: that's mostly it
[00:34:04] <[itchyjunk]> https://i.imgur.com/LsxnnAE.png
[00:34:20] <[itchyjunk]> so i am wondering why if g o f = h, we call it commutative in this context
[00:35:07] *** Joins: pavonia (~user@user/siracusa)
[00:35:15] *** Joins: learner36_ (~learner36@cpef81d0fa12c13-cmf81d0fa12c10.cpe.net.cable.rogers.com)
[00:35:23] *** Joins: Hawker_ (~pi@user/hawker)
[00:35:45] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[00:36:05] *** Quits: Hawker_ (~pi@user/hawker) (Client Quit)
[00:36:49] *** Joins: CombatVet (~c4@user/combatvet)
[00:36:52] *** Joins: lok91 (~lok91@D4709A7F.rev.sefiber.dk)
[00:36:55] <PollionH> It means that you can exchange both path, they are exactly the same, same as you can exchange a and b in the product ab it gives the same result.
[00:36:58] *** Quits: xff0x (~xff0x@2001:1a81:52b8:8500:6c95:ecd6:fb54:75ad) (Ping timeout: 250 seconds)
[00:37:03] <PollionH> But this is just basically a definition here.
[00:37:08] <argento> On the topic of category theory (i'm not an expert, blahh..) it means that you can commute (like in interchage) h for (g o f)
[00:37:14] <lok91> Hi. Can anyone explain why 2 cos(x/2) sin(x/2) = sin(x)? Some trig identities, I guess, but I don't see which...
[00:37:34] *** Joins: MatSharrow (~matthew@169.99.9.51.dyn.plus.net)
[00:38:00] *** Joins: xff0x (~xff0x@2001:1a81:52b8:8500:732c:1822:8f35:ae7)
[00:38:08] <[itchyjunk]> oh being able to interchange is the meaning there, i see
[00:38:42] *** Quits: learner36 (~learner36@2607:fea8:129f:c220:18d6:6470:ca0d:47b5) (Ping timeout: 250 seconds)
[00:38:50] *** learner36_ is now known as learner36
[00:41:29] <dude12312414> lok91: do you know the double-angle formula for sin? or perhaps the addition formula?
[00:41:54] *** Joins: DoYouKnow (~michael@75-28-180-206.lightspeed.bnsvil.sbcglobal.net)
[00:42:32] <stanrifkin> lok91: try sin(2x) with euler formular maybe.
[00:42:37] <[itchyjunk]> sin(2x) = 2 sin(x) cos(x)
[00:42:46] <PollionH> lok91: Or you can prove it using complex notation by noting e^(ix)^2 = e^(2ix)
[00:43:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[00:43:04] <PollionH> with e^(ix) = cos(x) + i*sin(x)
[00:43:15] <lok91> Oh, that makes a lot of sense :D
[00:43:28] <lok91> Complex notation even? :P
[00:44:47] <[itchyjunk]> oh i see
[00:44:58] <lok91> (sin x) / 2 = 1/2 sin(2(x/2)) = 2(1/2) sin(x/2) cos(x/2) = sin(x/2) cos(x/2)
[00:45:14] <lok91> And then it follows that sin x = 2 sin(x/2) cos(x/2)
[00:45:17] <lok91> Seems to work :D
[00:45:18] <lok91> Thanks!
[00:45:38] <[itchyjunk]> so e^(i 2x) = cos(2x) + i sin(2x) and (e^(ix))^2 = cos^2(x)-sin^2(x) + i 2 cos(x) sin(x)
[00:45:52] <[itchyjunk]> and so i equate the imaginary part and get that?
[00:46:33] <dude12312414> and if you Re you get the cos(2x) identity for free :P
[00:46:54] <[itchyjunk]> oh nice, i had missed that
[00:47:05] <[itchyjunk]> so the non complex way was to use sin(A+B) thing right?
[00:47:23] <[itchyjunk]> it was something like sin(A)sin(B) + cos(A)cos(B) ?
[00:47:43] <dude12312414> no that's cos(A-B)
[00:47:46] <[itchyjunk]> so sin(x+x) = sin^2(x) + cos^2(x) ? :O
[00:47:47] <[itchyjunk]> ah
[00:47:51] <[itchyjunk]> oops
[00:48:03] <[itchyjunk]> sin(x)cos(x) + cos(x)sin(x)
[00:48:04] <[itchyjunk]> ahh
[00:48:09] <[itchyjunk]> 2sin(x)cos(x)
[00:48:11] <lok91> But how did you get from e^(i 2x) = cos(2x) + i sin(2x) and (e^(ix))^2 = cos^2(x)-sin^2(x) + i 2 cos(x) sin(x) to the result?
[00:48:28] <[itchyjunk]> anything with i in front is the imaginary part
[00:48:33] <[itchyjunk]> and anything without it is the real part
[00:48:40] <lok91> Yes
[00:48:40] <[itchyjunk]> imaginary parts are equal
[00:48:42] <[itchyjunk]> since lhs is the same
[00:48:49] <[itchyjunk]> so you compare the 2 imaginary parts
[00:49:03] <[itchyjunk]> sin(2x) = 2 sin(x) cos(x)
[00:49:11] <[itchyjunk]> maybe i am not wording it properly
[00:49:17] <Z-module> why bother? They're just imaginary so they don't count, right?
[00:49:21] <[itchyjunk]> z = x + iy and z = a + ib then b = y
[00:49:54] <[itchyjunk]> Z-module, you say that as a joke but people use that seriously in the programming channel too often for me to find it funny :<
[00:49:57] * [itchyjunk] traumatized
[00:50:17] <lok91> :D
[00:50:22] <[itchyjunk]> lok91, andd dude12312414 pointed out x = a
[00:50:38] <[itchyjunk]> which gaves us cos(2x) = cos^2(x) - sin^2(x) as well
[00:50:52] <lok91> So we can just ignore the imaginary parts? :D
[00:51:05] <[itchyjunk]> we are not ignoring them
[00:51:09] <[itchyjunk]> we are setting thme equal
[00:51:16] <[itchyjunk]> if you like iy = ib
[00:51:18] <[itchyjunk]> cancle out the i
[00:51:20] <[itchyjunk]> then y = b
[00:51:30] <lok91> Oh, but Z-module said we could ignore them? :P
[00:51:46] <lok91> "why bother? They're just imaginary so they don't count, right?"
[00:52:12] *** Quits: dsrt^ (~dsrt@207.182.73.202) (Ping timeout: 256 seconds)
[00:52:14] <[itchyjunk]> well the numbers don't do the counting
[00:52:21] <[itchyjunk]> people do the counting
[00:52:50] <PollionH> [itchyjunk]: Beware, from a+ib = x+iy you can't tell ib = iy. You can tell x=a and y=b, but the real thing behind is that (1, i) is free.
[00:53:53] <dude12312414> well you can also say ib = iy, it's just that you need to know that a, b, x, y are all real
[00:54:08] <argento> but y=b => iy = ib (right?)
[00:54:37] <PollionH> of course, but the argument was the other way around
[00:54:42] <[itchyjunk]> PollionH, i don't understand
[00:55:38] *** Joins: hexenbane (~hecto@2806:2f0:91a1:73a8:590d:5eb3:49f7:5f2f)
[00:56:23] *** Joins: algebwarf (~dw4rfc4t@78.167.65.212)
[00:56:46] <PollionH> [itchyjunk]: a+ib = x+iy you can only tell x-a = i(b-y) but it is very strong thing of complex numbers (or vector space if you wan't, or algebraic extensions or whatever). From that you cannot deduce iy=ib directly. You can equate imaginary parts, but that's it.
[00:57:26] <PollionH> It's detail, I know, but still :)
[00:58:12] <[itchyjunk]> is there any example where y = b but iy != ib?
[00:58:15] *** Quits: gb73d (gb73d@host-92-7-42-10.as13285.net) (Remote host closed the connection)
[00:58:17] <PollionH> No
[00:58:22] <PollionH> Of course no
[00:58:34] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:58:40] <ski> ⌜i⌝ is invertible
[00:58:47] *** Joins: src (~src@user/src)
[00:58:49] <PollionH> [itchyjunk] | if you like iy = ib
[00:58:51] <PollionH> [itchyjunk] | cancle out the i
[00:59:40] <PollionH> [itchyjunk]:everything you said is true, but there is just a minor flaw in the logic when you directly tell a+ib = x+iy ==> ib = iy ==> b=y.
[00:59:58] <algebwarf> does anyone know how I can sketch a torus in LaTeX? preferably without the help of an external graphics program and as a vector image
[01:00:31] <PollionH> Actually what you prove is a+ib = x+iy ==> b=y ==> ib = iy ==> b=y, and you see the last implications are useless.
[01:01:27] <PollionH> It is something really strong of complex numbers (or more general structures if you want). That's just what I wanted to point out.
[01:01:37] <lok91> algebwarf Some ideas: https://tex.stackexchange.com/questions/348/how-to-draw-a-torus
[01:01:38] <[itchyjunk]> hmmm
[01:01:38] <PollionH> Because (1, i) is a basis of your space
[01:01:49] <PollionH> Or at least it is free
[01:04:31] *** Joins: manjaro-user (~manjaro-u@199-7-158-233.eng.wind.ca)
[01:08:09] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:08:31] *** Quits: manjaro-user (~manjaro-u@199-7-158-233.eng.wind.ca) (Remote host closed the connection)
[01:08:58] *** Joins: manjaro-user (~manjaro-u@199-7-158-233.eng.wind.ca)
[01:12:31] *** Joins: seninha (~seninha@user/seninha)
[01:14:35] *** Joins: wisam (~wisam@5.32.40.122)
[01:20:12] <tusko> How on earth do I find the lcm of pi/5 and pi/2 lol
[01:20:56] <somiaj> pi?
[01:21:08] <CloudEvil>  /
[01:21:30] <somiaj> 5*(pi/5) = pi and 2*(pi/2) = pi, and should be clear that is least (where you are talking about integer multiples)
[01:23:23] <tusko> oh yeah I guess that does seem pretty clear
[01:23:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:24:03] *** Quits: PJBoy (~PJBoy@user/pjboy) (Client Quit)
[01:28:01] *** Quits: algebwarf (~dw4rfc4t@78.167.65.212) (Remote host closed the connection)
[01:28:22] *** Joins: algebwarf (~dw4rfc4t@78.167.65.212)
[01:28:42] *** Quits: algebwarf (~dw4rfc4t@78.167.65.212) (Remote host closed the connection)
[01:28:58] *** Joins: algebwarf (~dw4rfc4t@78.167.65.212)
[01:31:06] *** Quits: algebwarf (~dw4rfc4t@78.167.65.212) (Client Quit)
[01:33:44] *** Quits: maxzor (~maxzor@2a01cb04054faa00d026b44b733dceee.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[01:36:15] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:36:58] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[01:39:37] *** Quits: src (~src@user/src) (Quit: Leaving)
[01:40:37] *** Quits: manjaro-user (~manjaro-u@199-7-158-233.eng.wind.ca) (Ping timeout: 240 seconds)
[01:40:45] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[01:44:19] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[01:44:41] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[01:45:28] *** Joins: smile (uid510004@user/smi)
[01:46:18] <stanrifkin> i don't understand lcm in non integer context either.
[01:46:31] <stanrifkin> how is it defined?
[01:48:16] <stanrifkin> found on wikipedia a generalization of lcm in a commutative ring
[01:51:31] <tusko> Honestly the problem is this, I think I've finally figured it out.
[01:53:03] <tusko> Let x(t), y(t) be periodic functions with fundamental period T_1 and T_2 respectively. Their sum z(t) = x(t) + y(t) is periodic whenever the ration T_1/T_2 is rational, and the fundamental period of the new function z(t) is lcm(T_1,T_2).
[01:54:21] <tusko> Which actually may be irrational. In fact, its kind of odd but x(t) and y(t) could have irrational periods, each of them, and the ratio of their period is rational and their sum is periodic with an irrational period.
[01:55:02] <tusko> take x(t) = 10cos(10t+1) and y(t) = sin(4t-1)
[01:55:26] <tusko> T_1 = 2pi/10 = pi/5 and T_2 = 2pi/4 = pi/2
[01:55:37] *** Quits: lilgopher (~textual@2601:241:8000:38f0:8c06:33d6:d16:e831) (Quit: Textual IRC Client: www.textualapp.com)
[01:55:44] <tusko> pi/5/pi/2 = 2/5 a rational number, so their sum is periodic.
[01:56:01] <tusko> 5*pi/5 = 2*pi/2 => pi is their lcm
[01:56:22] <tusko> Pi is the fundamental period of the sum z(t) = x(t) + y(t)
[01:56:33] <tusko> I had doubts about this but now I've become convinced of it
[01:56:43] *** Joins: lilgopher (~textual@2601:241:8000:38f0:95e4:f87c:8b0e:fa8c)
[02:04:22] *** Quits: lilgopher (~textual@2601:241:8000:38f0:95e4:f87c:8b0e:fa8c) (Quit: Textual IRC Client: www.textualapp.com)
[02:13:27] <tusko> But I don't know how lcm works outside of integers.
[02:15:18] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[02:16:33] <[itchyjunk]> "In each an object is a structured set, a set furnished, or
[02:16:33] <[itchyjunk]> equipped, with some extra gadgetry, the furnishings of the object."
[02:16:48] <[itchyjunk]> so equipped set is like a topological space or a measure space
[02:16:50] <[itchyjunk]> that i get
[02:16:59] <[itchyjunk]> but what is structured set or furnished set?
[02:18:09] *** Quits: wisam (~wisam@5.32.40.122) (Ping timeout: 256 seconds)
[02:21:16] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[02:23:07] *** Quits: magla (~gelignite@55d4db0b.access.ecotel.net) (Quit: Stay safe!)
[02:26:21] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[02:26:30] *** Joins: Arcorann (~A@user/arcorann)
[02:27:20] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[02:30:48] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[02:31:48] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Remote host closed the connection)
[02:31:52] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:34:20] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7d3b:74db:e078:11f9)
[02:35:55] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[02:37:00] *** Joins: src (~src@user/src)
[02:37:56] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Remote host closed the connection)
[02:39:42] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[02:39:54] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[02:43:05] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:43:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:47:29] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[02:47:51] *** Joins: son0p (~ff@181.136.122.143)
[02:50:11] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[02:50:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:50:55] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[02:57:20] *** Quits: loadedanvils (uid128751@id-128751.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:59:31] *** Quits: NllPtr (~NllPtr@186-78-230-137.baf.movistar.cl) (Quit: WeeChat 3.4)
[03:00:32] *** Joins: bosspotato_ (~bosspotat@lnsm3-montreal02-142-118-86-202.internet.virginmobile.ca)
[03:00:32] *** Quits: bosspotato_ (~bosspotat@lnsm3-montreal02-142-118-86-202.internet.virginmobile.ca) (Changing host)
[03:00:32] *** Joins: bosspotato_ (~bosspotat@user/bosspotato)
[03:00:45] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:01:32] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[03:02:00] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Killed (NickServ (GHOST command used by bosspotato_)))
[03:02:04] *** bosspotato_ is now known as bosspotato
[03:03:34] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[03:04:39] *** Joins: NllPtr (~NllPtr@186-78-230-137.baf.movistar.cl)
[03:05:54] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[03:07:12] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[03:08:57] *** Joins: clemenza (clemenza@gateway/vpn/protonvpn/clemenza)
[03:09:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:12:35] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[03:13:47] *** Joins: lispy (~lispy3@84.69.59.93)
[03:14:31] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:00] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Ping timeout: 256 seconds)
[03:15:10] *** Quits: Maturion (~Maturion@p200300ede70deb00e34c133d0d5a0012.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:16:25] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[03:19:17] *** Joins: pgp (~pgp@a213-22-199-96.cpe.netcabo.pt)
[03:19:37] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[03:21:39] *** Quits: clemenza (clemenza@gateway/vpn/protonvpn/clemenza) (Quit: Gonna go either nap or eat.)
[03:24:02] *** Joins: UPXTcgv7 (~KTC2gV3Y@74.5.131.75)
[03:24:57] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:25:27] *** Quits: pgp (~pgp@a213-22-199-96.cpe.netcabo.pt) (Read error: Connection reset by peer)
[03:26:30] *** Joins: pgp (~pgp@a213-22-199-96.cpe.netcabo.pt)
[03:29:00] *** Joins: kish` (~aqua@user/aqua)
[03:29:15] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[03:29:17] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[03:29:19] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[03:29:41] *** Joins: kish` (~aqua@user/aqua)
[03:30:42] *** Quits: stanrifkin (~stanrifki@p200300dbcf167700bafc34e52f0bf804.dip0.t-ipconnect.de) (Quit: Leaving)
[03:30:43] *** Quits: DoYouKnow (~michael@75-28-180-206.lightspeed.bnsvil.sbcglobal.net) (Quit: Lost terminal)
[03:30:47] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[03:32:16] *** Joins: maxzor (~maxzor@2a01cb04054faa00d026b44b733dceee.ipv6.abo.wanadoo.fr)
[03:34:40] *** Joins: ferdna (~ferdna@user/ferdna)
[03:35:45] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:37:31] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[03:40:34] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[03:42:06] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[03:42:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:42:30] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[03:44:37] *** Quits: UPXTcgv7 (~KTC2gV3Y@74.5.131.75) (Quit: Quitting)
[03:47:39] *** Quits: pgp (~pgp@a213-22-199-96.cpe.netcabo.pt) (Quit: Leaving)
[03:48:17] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[03:53:57] *** Quits: MatSharrow (~matthew@169.99.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[03:55:04] *** Quits: hexenbane (~hecto@2806:2f0:91a1:73a8:590d:5eb3:49f7:5f2f) (Quit: Leaving)
[03:55:35] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[03:57:53] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[03:57:53] *** Quits: lok91 (~lok91@D4709A7F.rev.sefiber.dk) (Ping timeout: 256 seconds)
[03:59:04] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-65df-a0f5-02cd-1378.res6.spectrum.com)
[03:59:13] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:00:02] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[04:01:49] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 240 seconds)
[04:02:25] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 256 seconds)
[04:03:48] *** Joins: ouestbillie (~gallup@185.195.233.158)
[04:03:58] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:07:32] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[04:07:57] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[04:08:09] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[04:09:20] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[04:09:51] *** Quits: defn- (~n0b0dy@user/defn) (Quit: ZNC 1.8.2 - https://znc.in)
[04:09:59] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Remote host closed the connection)
[04:10:21] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[04:10:45] *** Joins: defn (~n0b0dy@user/defn)
[04:10:58] *** Joins: steam (~steam@user/steam)
[04:11:37] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[04:11:54] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[04:12:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[04:14:53] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[04:16:17] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[04:17:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:18:10] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:21:53] <[itchyjunk]> i think i've seen group acting on a set, but what else can act on a set?
[04:22:01] <[itchyjunk]> can you study set acting on a set?
[04:33:41] <somiaj> well how do you define acting on a set? What sort of properities do you want
[04:34:00] <somiaj> you could have say f: S -> S as any function from a set to itself, and the function would act on that set
[04:34:02] *** Joins: DoYouKnow (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net)
[04:35:17] <somiaj> Or you could be a bit more general, but group action is just defining a function into the set with certain properities
[04:35:56] <somiaj> Group action is just a case of f: <some other set> -> S, where <some other set> happens to be GxX
[04:36:36] *** Quits: emerent (~quassel@p200300cd5704433bba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:37:02] *** Joins: emerent (~quassel@p200300cd5704431fba27ebfffed28a59.dip0.t-ipconnect.de)
[04:43:00] <[itchyjunk]> do you need some function though?
[04:43:28] <[itchyjunk]> i guess you do need take something , apply it to the element of the set and get something else back right?
[04:43:33] <[itchyjunk]> hmmmm
[04:44:07] <biberao> hi who can help me with angles in circumferences?
[04:44:09] <biberao> https://imgur.com/9tQnpmM
[04:44:40] <[itchyjunk]> hmmmmmmmm
[04:44:53] <[itchyjunk]> i'll refresh group action i guess, can't remember it
[04:45:26] <biberao> transform C in B through  rotation of center O
[04:51:07] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:52:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:52:08] <biberao> :
[04:52:09] <biberao> \
[04:58:56] <Z-module> a group G acting on a set S is nothing other than a group homomorphism  G -> Sym(S)  where that last is the group of all self-bijections on S
[04:59:52] <[itchyjunk]> hmm, so there is group G and a group Sym(S) and the homomorphism between then is what we call group action in this case?
[04:59:58] <[itchyjunk]> any homomorphism between them?
[05:00:20] <buster> biberao, what's the question?
[05:01:15] <biberao> ok here it goes
[05:01:31] <biberao> transform C in B through  rotation of center A
[05:01:37] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[05:01:48] <biberao> im not grasping this angle stuff and arc properly
[05:02:48] <Z-module> [itchyjunk]: yes. The actual definition of an action G acting on S is a map '.' G x S -> S  sending each (g,s) to some element g.s of S, such that: for all g, h in G and all s in S,   g.(h.s) = (gh).s    where gh is the product in G, and if e is the identity of G, then  e.s = s  for all s.
[05:03:10] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7d3b:74db:e078:11f9) (Ping timeout: 268 seconds)
[05:03:20] <buster> biberao: i didn't discern a question
[05:03:45] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[05:04:19] <biberao> buster: i need to do a rotation of the angle with center as A
[05:04:24] <buster> for the "center A" version, if the rotation exists (i.e., if AB=AC) then it's a rotation through 96 degrees
[05:04:43] <[itchyjunk]> oh i see
[05:04:44] <buster> the previous version with "center O" might be more interesting
[05:05:00] <biberao> buster: that will be next
[05:05:07] <biberao> care to explain why is it 96degrees?
[05:05:08] <[itchyjunk]> g.(h.s) = (gh).s and e.s = s, so the homomorphism property is kinda burned into the definition
[05:05:17] <biberao> and im asking because ill show you
[05:05:23] <buster> it's marked in the picture
[05:05:37] *** Joins: vysn (~vysn@user/vysn)
[05:05:38] <[itchyjunk]> and since its just a remap of elements of S to S, ites the set of permutaitons of S
[05:06:14] <biberao> buster: i know
[05:06:18] <biberao> but thats not what i meant
[05:06:20] <Z-module> [itchyjunk]: And then you can easily check that for each g in G, map psi_g = [the self-map on S sending s to g.s]   is in fact a bijection on S, and that   g |-> psi_g    (each g in G) does give a group homomorphism G -> Sym(S).
[05:06:28] <biberao> buster: https://imgur.com/mcn5Pma angle AOB why is it 100
[05:06:29] <biberao> ?
[05:06:54] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[05:07:41] <biberao> ok maybe the other one because
[05:07:47] <biberao> it doesnt go through O right
[05:07:54] <biberao> so its the inscribed angle?
[05:11:22] <buster> it's not an inscribed polygon
[05:14:12] <buster> but it is an n-gon, so its internal angles sum to 2π(n-2)/n.
[05:14:43] *** Joins: newpy (~newpy@206.168.231.90)
[05:15:08] <biberao> ok
[05:17:39] <buster> want to fix that for me?
[05:18:35] <biberao> fix what?
[05:18:47] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[05:18:54] <buster> isn't it π(n-2)/n?
[05:19:31] <biberao> ah
[05:19:33] <buster> the exterior angles α sum to 2π, that's easy, Σᵢαᵢ=2π. and each interior angle βᵢ is equal to π-αᵢ. so Σᵢβᵢ=Σᵢ(π-αᵢ)=nπ-Σᵢαᵢ=nπ-2π=(n-2)π
[05:19:36] <biberao> it is
[05:19:38] <buster> or whatever
[05:19:48] <biberao> i wasnt attention to that part
[05:19:54] <biberao> :X
[05:19:56] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:20:06] <[itchyjunk]> so let G = ({0,1},+) be group with mod addition and S = {a,b}. alpha(0,s) = s forall s in S and alpha(0,a) = b, alpha(0,b) = a. then alpha(1,alpha(0,a)) = alpha(1,a) = b and alpha(1+0,a) = alpha(1,a) = b
[05:20:36] <[itchyjunk]> so i need to check that alpha here is a bijection? :x
[05:20:56] <Z-module> you mean alpha(1,a) = b,  alpha(1,b) = a   surely
[05:21:23] <Z-module> as you already said,  s |-> alpha(0,s) is the identity map
[05:21:35] <biberao> buster: i got you
[05:21:38] <[itchyjunk]> oh oops yeah
[05:21:46] <[itchyjunk]> i need 1's there not 0's
[05:22:42] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[05:22:54] <Z-module> Not much to check: the map on any 2-elmeent set that swaps the two elements is clearly a bijection
[05:23:33] <buster> biberao, the "/n" is for each angle of a regular n-gon. sorry, ignore it. so, the sum of the interior angles is (n-2)π. does that get us anywhere?
[05:23:58] <biberao> buster: i know that how it works
[05:24:04] <biberao> i cant figure out when the center changes :D
[05:24:18] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[05:24:18] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[05:24:46] <[itchyjunk]> right :x
[05:24:55] <buster> i know nothing, i always start from scratch
[05:25:29] <Z-module> [itchyjunk]: oh, no, it's not that alpha *itself* (the action map  G x S -> S ) is a bijection, that doesn't even make sense. It's that for each single g in G,  the map  alpha(g,-) : S -> S  is a bijection on S.
[05:25:32] *** Joins: eck (~root@user/eck)
[05:27:41] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[05:28:15] <buster> biberao: the center is fixed. there's a 'D', is it important?
[05:28:47] <biberao> which one?
[05:29:05] <buster> https://imgur.com/mcn5Pma
[05:29:31] <biberao> yes it is
[05:29:45] *** Joins: src_ (~src@user/src)
[05:29:48] <biberao> theres a rotation of center A where B transforms to D
[05:30:09] *** Joins: lilgopher (~textual@2601:241:8000:38f0:9852:2818:9ff9:c2aa)
[05:31:13] <buster> aka AB=AD
[05:32:29] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:33:37] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[05:33:50] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[05:35:50] <buster> biberao, it's confusing, i'm not confident i know what the question is. can you double-check for typos and come back with a single question?
[05:37:15] <biberao> buster: i dont know i cant ask better questions
[05:37:15] <[itchyjunk]> welp
[05:37:25] <biberao> maybe ill sleep on it thanks
[05:37:49] <[itchyjunk]> i al staring at alpha_g:S->S and wondering how i get injective and surjective for this
[05:38:20] <[itchyjunk]> oh wait
[05:38:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:39:00] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Ping timeout: 250 seconds)
[05:39:11] <buster> me too biberao, good night
[05:39:28] <biberao> gn
[05:41:09] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[05:42:22] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:43:27] *** Joins: isekaijin (~isekaijin@user/isekaijin)
[05:44:24] *** Joins: MsFoxyEmilySmith (~MsFoxyEmi@S01069050ca4e3573.cg.shawcable.net)
[05:45:06] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 268 seconds)
[05:45:24] *** Quits: Panther (Lord@2601:18a:c000:5290:7894:e256:8d73:48d6) (Remote host closed the connection)
[05:45:48] <[itchyjunk]> does this make sense?
[05:45:50] *** Joins: Panther (Lord@2601:18a:c000:5290:7894:e256:8d73:48d6)
[05:45:52] <[itchyjunk]> no it doesn't
[05:46:00] <[itchyjunk]> but i might be on to something
[05:46:05] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:47:08] <Z-module> [itchyjunk]: a hint is that for any g in any group G,  g g^-1 = g^-1 g = e
[05:47:27] <Z-module> and you need all of that
[05:49:09] <[itchyjunk]> oh
[05:49:32] <[itchyjunk]> i was applying random h, but if i do g^-1 i have
[05:50:42] <[itchyjunk]> Assume alpha_g(a) = alpha_g(b). Apply alpha_g^-1 to both sides. (g+g^-1).a = (g+g^-1).b => e.a = e.b => a = b by definition of alpha_e
[05:50:49] <[itchyjunk]> so i got injection
[05:51:22] <Z-module> yes though G is not assumed abelian in all of this, so '+' is not a great notation
[05:51:33] <[itchyjunk]> oh oops
[05:51:48] *** Joins: PJBoy (~PJBoy@user/pjboy)
[05:51:51] *** Quits: smile (uid510004@user/smi) (Quit: Connection closed for inactivity)
[05:51:53] <[itchyjunk]> (G,*) and replace + by *
[05:54:27] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[05:54:31] <tusko> is least common multiple defined for real numbers?
[05:56:20] *** Quits: xff0x (~xff0x@2001:1a81:52b8:8500:732c:1822:8f35:ae7) (Ping timeout: 250 seconds)
[05:56:44] *** Quits: NllPtr (~NllPtr@186-78-230-137.baf.movistar.cl) (Quit: WeeChat 3.4)
[05:57:11] <MsFoxyEmilySmith> no because there is no least common multiple for real numbers since for r =/= , there exists infinite numbers r' such that r' is a multiple of r (exists some epsilon >0 such that r' = epsilon*r) and r' is arbitrarily close to r
[05:58:14] <[itchyjunk]> maybe i should be using contradiction for the surjective part
[05:58:21] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:8413:5c77:eacd:b6f4)
[05:59:38] *** Joins: NllPtr (~NllPtr@186-78-230-137.baf.movistar.cl)
[05:59:56] <[itchyjunk]> assume there does not exist a \in S s.t alpha_g(a) = b => there does not exist a s.t a = alpha_g^-1 (b) ?
[06:00:04] <[itchyjunk]> :D that doesn't even make sense to me
[06:00:48] <[itchyjunk]> oh wait. once i get the inverse it's e.a = alpha_g^-1(b)
[06:01:00] <[itchyjunk]> but e.a maps a to a
[06:01:26] <[itchyjunk]> still confused
[06:03:21] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[06:13:19] *** Quits: ouestbillie (~gallup@185.195.233.158) (Ping timeout: 256 seconds)
[06:15:08] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[06:19:44] <rex_victor> Hi all, are all Z-modules noetherian?
[06:22:06] *** Quits: giusb (~giusb@user/giusb) (Quit: WeeChat 3.3)
[06:23:23] <caveman> is there any amount of money that's not representable as a rational number?
[06:23:48] <rex_victor> caveman: how do you define money?
[06:23:53] <caveman> e.g. would anyone send ``pi'' number of USD?  i guess not.
[06:24:41] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:24:41] <caveman> generally, currencies/coins/etc.
[06:25:07] *** Joins: gevreeen (~gevreeen@14.155.115.163)
[06:25:46] <rex_victor> caveman: that's more of a legal question, but I mean you can make contracts however you want; but one actual transaction is confined to the rules of your economy legislation
[06:26:16] <[itchyjunk]> there is some minimum value of the lowest currency after which its not accounted for
[06:26:41] <[itchyjunk]> so maybe 0.0001 penny makes sense but 0.0000000000000000001 won't. so probably no irraional money
[06:27:03] <rex_victor> So I'd say you can make a contract like "you get thing x for pi dollars a month, payable for every full penny"
[06:27:08] <caveman> with btc, it's satoshi.  but i wonder if we can do better:  use rational numbers.
[06:27:37] <[itchyjunk]> i think i forgot how proof by contradiction works
[06:27:54] <[itchyjunk]> you assume the opposite of what you want and get to a contradiction
[06:28:31] <rex_victor> [itchyjunk]: who told that joke? step 1: assume the opposite. step 2: proof without using step 1. step 3: you reached a contradiction :)
[06:29:16] <rex_victor> [itchyjunk]: what you wrote is accurate
[06:29:25] <[itchyjunk]> eh, that does sound like a contradiction but not what i need
[06:29:49] <gevreeen> can someone recomment a mutual exclusion algorithm that doesn't require fixed index storage? all mutual exclusion algorithms I found thus far require the entity trying to enter the critical section to associate itself with an fixed index, or a fixed variable. say thread1 and thread2 in that case would have to have n[2] and t, with thread1 assigning itself n[0] and thread n[2], while I would like the algorithm to work where neither thread is certain
[06:29:49] <gevreeen> whether they should use n[0] or n[1]
[06:29:59] <[itchyjunk]> well i want for all b \in S, exists a in S such that alpha_g(a) = b
[06:30:28] *** Joins: mbuf (~Shakthi@122.174.198.26)
[06:30:40] <[itchyjunk]> so for contradiction, i assume exists a b in S such that for all a in S, alpha_g(a) != b right?
[06:30:55] <rex_victor> yes
[06:33:46] <rex_victor> I wanna show that Q is an injective Z-module. I have shown that if M' < M is a submodule and f is any homomorphism from M' to Q then for every a in M
[06:34:00] <rex_victor> \ M' i can continue f onto (M', a)
[06:34:01] <[itchyjunk]> hmm in that case, e.b = b by definition
[06:34:04] <[itchyjunk]> so contradiction.
[06:34:24] <[itchyjunk]> interesting, i dont quite mentally grasp it but managed to mathematically derive the contradiction ? :O
[06:34:30] <rex_victor> what's e.b ?
[06:35:02] <[itchyjunk]> al so i have a group (G,*), a set S
[06:35:18] <[itchyjunk]> and i am trying to show alpha_g : S -> S is a bijection
[06:35:25] <[itchyjunk]> alpha_g is group action
[06:35:38] <[itchyjunk]> so e.b is short hand for alpha_e(b)
[06:35:47] <[itchyjunk]> oh wait..
[06:36:12] <[itchyjunk]> so my proof doesn't work.
[06:36:17] <[itchyjunk]> no wonder it doesn't make sense
[06:36:49] <rex_victor> alpha_g is the left translation with g?
[06:37:39] <[itchyjunk]> alpha_g is g \in G applied to S, so guess that's called left translation with g ? :x not sure on terminologies
[06:38:11] <rex_victor> ok you know more about G and S?
[06:38:32] <[itchyjunk]> No, (G,*) is some abstract group and S is some set
[06:39:10] <rex_victor> and then α_g is supposed to be bijective?
[06:39:24] <[itchyjunk]> want to prove it is
[06:39:27] <rex_victor> yes it is
[06:39:38] <[itchyjunk]> i have shown it's injective, need to show surjective
[06:40:34] <rex_victor> you want the solution?
[06:40:58] <rex_victor> it's not hard
[06:40:59] <[itchyjunk]> no, just want to know if using contradiction is the right direction
[06:41:05] <[itchyjunk]> or if it's easier to try directly
[06:41:09] <[itchyjunk]> i don't mind sleeping on it
[06:41:26] <rex_victor> it's a one liner
[06:41:31] <[itchyjunk]> ah
[06:41:35] <[itchyjunk]> i'll think about it some more then
[06:41:36] <rex_victor> you just need to find the right element
[06:41:41] <[itchyjunk]> ah
[06:42:34] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[06:42:59] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[06:43:20] <rex_victor> so let s in S. you need to find a x with α_g(x) = s
[06:47:34] <[itchyjunk]> yes b is the element in S that nothing gets mapped to, by assumption. take b in S then alpha_g(b) = x for some x in S. then e.b = alpha_g^-1(x)
[06:47:38] <[itchyjunk]> oh not quite :D
[06:48:20] <rex_victor> I wouldn't use contradiction here
[06:48:26] <[itchyjunk]> ah
[06:48:39] *** Joins: Everything (~Everythin@37.115.210.35)
[06:48:46] <rex_victor> usually you wanna use contradiction to "have something in your hand to work with"
[06:50:26] <rex_victor> "nothing gets mapped to" doesn't give you something to work with
[06:51:37] *** Quits: gevreeen (~gevreeen@14.155.115.163) (Ping timeout: 240 seconds)
[06:53:45] <rex_victor> to my Q is Z-injective problem: By succesively adding elements of the difference set I can get an ascending chain of submodules
[06:54:10] <rex_victor> If M is noetherian that chian becomes stationary and by construction must be the full set
[06:55:37] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[06:55:54] <rex_victor> However if M is not noetherian I can take the union from 1 to infinity and get a submodule which is at least countable in size.
[06:56:31] <rex_victor> By repeating from here can't I get the whole module sooner or later by using ordinal numbers?
[06:56:52] <rex_victor> But then wouldn't every module be noetherian?
[06:59:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:00:14] <rex_victor> [itchyjunk]: you got it? you had some of the right ideas there
[07:01:06] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:04:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:05:28] *** Quits: MsFoxyEmilySmith (~MsFoxyEmi@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[07:05:42] *** Joins: MsFoxyEmilySmith (~MsFoxyEmi@S01069050ca4e3573.cg.shawcable.net)
[07:08:02] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:37:11] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[07:46:53] *** Joins: vicfred (~vicfred@user/vicfred)
[07:51:17] *** Quits: GomJabbar_ (gomjabbar@2607:f8f8:790:5::1:1) (Quit: ZNC 1.8.2 - https://znc.in)
[08:00:16] *** Quits: nonfxnl (~Thunderbi@user/nonfxnl) (Ping timeout: 250 seconds)
[08:00:53] *** Joins: frost (~frost@user/frost)
[08:02:49] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6445-a70e-e260-03f3.res6.spectrum.com) (Read error: Connection reset by peer)
[08:04:55] *** Quits: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net) (Quit: Reconnecting)
[08:05:07] *** Joins: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net)
[08:05:21] *** Joins: GomJabbar (~dgdf@2607:f8f8:790:5::1:1)
[08:07:19] *** Joins: nonfxnl (~Thunderbi@user/nonfxnl)
[08:07:32] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:09:17] *** Joins: HellCat (Lord@2601:18a:c000:5290:1583:5d4d:b145:313a)
[08:12:17] *** Quits: Panther (Lord@2601:18a:c000:5290:7894:e256:8d73:48d6) (Ping timeout: 240 seconds)
[08:17:49] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:21:01] *** Parts: nonfxnl (~Thunderbi@user/nonfxnl) ()
[08:21:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[08:22:23] *** Quits: kmh_ (~kmh@2a00:6020:5004:6800:c888:576e:95d3:5aca) (Quit: Leaving)
[08:23:19] *** Quits: GomJabbar (~dgdf@2607:f8f8:790:5::1:1) (Quit: ZNC 1.8.2 - https://znc.in)
[08:23:49] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:24:25] *** Joins: kmh (~kmh@2a00:6020:5004:6800:3db0:2ab3:b04b:3605)
[08:27:12] *** Joins: wisam (~wisam@5.32.40.122)
[08:31:12] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 256 seconds)
[08:37:53] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[08:45:56] *** Quits: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:47:55] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[08:49:29] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:55:50] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:56:16] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[09:01:41] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[09:02:37] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[09:03:37] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:07:49] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:13:37] *** Quits: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net) (Ping timeout: 240 seconds)
[09:13:56] *** Joins: src (~src@user/src)
[09:17:41] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[09:19:16] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:21:43] *** Joins: GomJabbar (gomjabbar@2607:f8f8:790:5::1:1)
[09:23:59] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[09:26:15] *** Quits: GomJabbar (gomjabbar@2607:f8f8:790:5::1:1) (Client Quit)
[09:28:43] *** Joins: GomJabbar (~dgdf@2607:f8f8:790:5::1:1)
[09:29:47] *** Quits: src (~src@user/src) (Quit: Leaving)
[09:31:03] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Remote host closed the connection)
[09:33:15] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[09:33:15] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[09:33:37] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 240 seconds)
[09:39:36] *** Joins: ferdna (~ferdna@user/ferdna)
[09:42:32] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[09:57:19] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:59:02] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[09:59:47] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:08:11] *** Joins: alexhandy (~AndChat62@91.66.151.109)
[10:08:11] *** Quits: alexhandy (~AndChat62@91.66.151.109) (Read error: Connection reset by peer)
[10:12:11] <greenbagels> ok riv you have motivated me once again to try learning DG
[10:14:35] *** Quits: maxzor (~maxzor@2a01cb04054faa00d026b44b733dceee.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[10:16:05] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:21:00] *** Joins: chomwitt (~chomwitt@ppp-94-67-1-27.home.otenet.gr)
[10:25:49] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:30:22] <ESphynx> hi all I'm running into some confusion with an edge case intersecting a line with a plane in R^3. Line is (89.35378, -10.63906, -289.16196) + t(7.31798, 25.19594, 14.54691), Plane is 0.96979 x + -0.21125 y + -0.121966 z + -124.170107 -- (A,B,C) is normalized. Now the proper intersection should be at (91.87 , -1.96 , -284.15 ) with t around 0.34426
[10:33:02] <ESphynx> My intersection calculator is first computing "distance" from the line to the plane with D + (A,B,C) dot LineStart. Then "dot" as LineDelta dot (A,B,C). And computing 't' = -distance / dot . This usually works perfectly. But I'm getting distance = -0.0000234727829351 , and dot = 1.0874280927275493e-05, and -distance / dot = 2.15856 -- what's going on here :P
[10:34:20] <int-e> the line is nearly parallel to the plane
[10:34:33] <ESphynx> yes, it's an edge case
[10:34:47] <ESphynx> but e.g. http://www.ambrsoft.com/TrigoCalc/Plan3D/PlaneLineIntersection_.htm has no problem calculating the proper intersection
[10:35:09] <ESphynx> (also running the same code in two separate instances, in one program I was getting proper result, and in the other this wacky result)
[10:35:18] <greenbagels> do you even need to take inner products to solve for this intersection
[10:36:08] <greenbagels> like all you need to do is substitute the parameterization of the line into the equation for the plane
[10:36:21] <greenbagels> and then solve for t, and back-substitute into the parameterized line equation
[10:36:22] <int-e> greenbagels: yes; even if you substitute and solve for t that will involve an inner product of the direction vector with the plan normal
[10:36:25] <ESphynx> greenbagels: isn't that what I"m doing basically?
[10:36:32] <int-e> you may fail to recognize it as such
[10:36:51] <greenbagels> int-e: ah yeah
[10:36:55] <greenbagels> of course lol
[10:36:59] <int-e> plan -> plane
[10:37:30] <greenbagels> yeah since the equation of the plane is just (a, b, c) . (x, y, z) = d
[10:37:32] <greenbagels> it's all coming back now
[10:37:37] <ESphynx> I don't understand why I get t = 2.15856 instead of 0.34426, even using double precision
[10:42:26] <int-e> I'm getting t = 13782772/1653707 ~ 8.33447 with those exact decimal values
[10:43:09] <ESphynx> I get (91.87 , -1.96 , -284.15 ) @ http://www.ambrsoft.com/TrigoCalc/Plan3D/PlaneLineIntersection_.htm
[10:43:23] <ESphynx> well I 'll try with those exact decimal
[10:43:53] <ESphynx> I think I know what to do though, look for small 'dot' and use my other approach to calculate x,y,z separately, then derive t from that
[10:45:29] <ESphynx> OK, I get (150.35 , 199.36 , -167.92 ) instead with those exact values... didn't realize how much precision was needed there, sorry
[10:47:58] *** Quits: specing (~specing@user/specing) (Ping timeout: 250 seconds)
[10:48:23] *** Joins: edun (~qbt@user/edun)
[10:48:56] *** Joins: specing (~specing@user/specing)
[10:48:57] <greenbagels>  150.345  199.356  -167.921
[10:49:00] <greenbagels> thats what i get
[10:49:21] <ESphynx> yeah I had a lot more decimals that I thought would not impact things, but they obviously do
[10:49:35] <greenbagels> i just used what you originally said
[10:49:42] <ESphynx> Cool, I think I fixed it.
[10:49:58] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[10:50:20] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[10:50:21] <ESphynx> basically -distance / dot is not accurate :S
[10:50:42] <greenbagels> i think if you write the vector equation out and solve it for the general case on paper it might be easier
[10:50:43] <int-e> not when you're dividing by almost 0
[10:51:11] <ESphynx> wondering if I should always stick to how I've been doing it, and just compute t out of that
[10:51:15] <ESphynx> problem is you don't get t with that
[10:51:38] <ESphynx> https://github.com/ecere/ecere-sdk/blob/latest/ecere/src/gfx/3D/Plane.ec#L91 -- this is how we've always done it
[10:51:50] <int-e> you really have a classical case of rounding errors and numerical instability
[10:51:53] <ESphynx> and that seems a lot more numerically stable
[10:52:41] <greenbagels> https://p.sicp.me/arNm3.jl
[10:53:17] <greenbagels> this one is still probably unstable since you're dividing by the dot product, but it ended up working, probably from julia being smarter than me or something
[10:53:54] <greenbagels> (unless the values you found were the wrong ones, at which point im making your mistake too :) )
[10:57:49] *** Joins: notzmv (~zmv@user/notzmv)
[10:59:17] <ESphynx> This is my new version that works: https://gist.github.com/jerstlouis/13b8cca334a76d9ffc1e6a5a3f1639ff
[11:00:44] <int-e> hat code in Plane.ec *also* divides by the dot product
[11:01:11] <greenbagels> not to mention the typical way to calculate dot products in R^3 is prone to catastrophic cancellation, no?
[11:01:57] <greenbagels> consider (a, b, c) * (d, e, f), where ad = -cf, and |be| < |ad| ?
[11:01:58] <ESphynx> int-e: yes but it does so separately for x, y and z
[11:04:03] *** Joins: UPXTcgv7 (~KTC2gV3Y@74.5.131.75)
[11:04:08] <ESphynx> This solves my edge case, so happy now :)
[11:04:41] <ESphynx> that's for the tetrahedron - triangle intersection to determine if a polygon obscures another ( https://ecere.com/tmp/translucency2.jpg )
[11:04:49] <ESphynx> thanks guys
[11:06:56] <int-e> ESphynx: I have a hard time believing that the original is more stable, but it will round differently of course.
[11:07:18] <ESphynx> int-e: the one in Plane.c is more stable for the result of the intersection, definitely
[11:07:28] *** Joins: nullcone (uid11626@id-11626.helmsley.irccloud.com)
[11:07:51] <greenbagels> ESphynx: there is an easy way to empirically test this
[11:07:55] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:08:41] <greenbagels> randomly sample vectors and compute the arbitrary precision and fixed precision answers
[11:08:43] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:09:01] <ESphynx> greenbagels: yeah, that would be interesting
[11:09:58] <greenbagels> you can even pick specific distributions you expect to be problematic
[11:10:12] <ESphynx> Good idea. late for movie night here, might try that later ;) if you do find out please let me know :) I think we'll watch The Man who Knew Infinity :P
[11:10:47] <greenbagels> dunno if i will, ill probably work on some mathb.in fork ideas, but have fun with your movie
[11:11:03] <ESphynx> Cheers!
[11:11:10] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[11:11:27] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[11:12:00] *** Joins: rg (~r-g@51.159.55.86)
[11:12:39] <ESphynx> greenbagels: honestly don't see why the original approach could possibly be more stable ;)
[11:12:46] <ESphynx> I would bet a lot on this :P
[11:13:37] <ESphynx> t gets wacky value as soon as the dot products start producing too big or too small result for any of the 3 axes, and the result is computed based on t
[11:18:58] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[11:19:13] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[11:21:59] <greenbagels> ESphynx: if you want a guarantee, you can do a floating point error analysis
[11:22:13] <greenbagels> math libraries can typically guarantee error bounds on algorithms
[11:22:16] *** Quits: NllPtr (~NllPtr@186-78-230-137.baf.movistar.cl) (Quit: WeeChat 3.4)
[11:22:42] <greenbagels> graphics libraries im not sure of; they aren't always constrained to needing to be absolutely correct
[11:23:06] <greenbagels> but rounding / approximation errors can greatly magnify if you aren't careful, and become more than just slightly wrong
[11:23:42] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[11:23:51] <ESphynx> greenbagels: that was definitely an example of this, that small difference was very sizable chunk of a cube ending up the wrong color :)
[11:32:47] *** Joins: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7)
[11:34:41] <riv> greenbagels: I know the definition of tangent bundle, sort of :)
[11:34:47] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[11:34:54] <riv> if you ever feel like explaining it to me that would help me refresh it
[11:42:36] *** Joins: NllPtr (~NllPtr@186-78-230-137.baf.movistar.cl)
[11:42:44] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[11:47:50] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[11:48:17] *** Joins: blackk (~J@2a02:8389:2301:8980:19be:1fa9:19ad:cac0)
[11:49:21] *** Quits: Decker (~d3x0r@user/d3x0r) (Ping timeout: 256 seconds)
[11:49:48] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:50:50] *** Joins: Batzy (~quassel@user/batzy)
[11:51:37] *** Joins: Decker (~d3x0r@user/d3x0r)
[11:56:56] <greenbagels> haha riv don't worry i will have to review smooth atlases and charts first
[12:00:04] <int-e> ESphynx: well you should do your own experiment, but in my tests, computing t as -(a p0.x + b p0.y + c p0.z + d) and then the point by plugging t into the line equation is basically as stable as the code from Plane.ec, and in fact the difference of results of the two approaches tends to be smaller than the error for badly conditioned inputs.
[12:00:36] <int-e> ("basically as stable" meaning there's no winner)
[12:01:09] *** Joins: Guest48 (~Guest48@203.220.63.145)
[12:02:30] *** Quits: blackk (~J@2a02:8389:2301:8980:19be:1fa9:19ad:cac0) (Quit: Leaving)
[12:04:34] *** L30n4rdu5 is now known as leonardus
[12:05:18] <int-e> ESphynx: sorry, t will be computed as -(a p0.x + b p0.y + c p0.z + d)/divisor (with divisor being the same as in Plane.ec) of course.
[12:11:27] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:13:15] <Guest48> Do dependent type provers both not allow division by 0 and have Math.atan( 1 / 0 ) = 1.57..
[12:13:52] *** Joins: Fohsap_ (~Muimi@2001:19f0:6001:5706:5400:3ff:feb7:9796)
[12:15:57] *** Quits: Guest48 (~Guest48@203.220.63.145) (Quit: Client closed)
[12:16:02] *** Quits: Fohsap (~Muimi@2001:19f0:6001:5706:5400:3ff:feb7:9796) (Ping timeout: 240 seconds)
[12:16:08] *** Fohsap_ is now known as Fohsap
[12:22:30] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[12:24:59] <zincy> How is the map f: (0,1) -> R where f(x) = 1/x not bounded?
[12:25:08] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[12:25:34] <int-e> zincy: what would the upper bound be? (it has to be a real number...)
[12:25:41] <zincy> 1?
[12:25:50] <int-e> what is f(1/2)?
[12:26:04] <zincy> Oh reciprocal of reciprocal
[12:26:06] <zincy> thanks!
[12:28:56] *** Joins: palasso (~palasso@user/palasso)
[12:33:56] *** Joins: la_mettrie (~rimrunner@2a01:4f9:c010:3051::1)
[12:34:04] *** Parts: la_mettrie (~rimrunner@2a01:4f9:c010:3051::1) (WeeChat 2.7.1)
[12:34:09] *** Joins: la_mettrie (~rimrunner@2a01:4f9:c010:3051::1)
[12:34:13] *** Parts: la_mettrie (~rimrunner@2a01:4f9:c010:3051::1) (WeeChat 2.7.1)
[12:51:58] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:55:24] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[12:55:43] *** Quits: grindhold (~quassel@mail.skarphed.org) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:55:56] *** Joins: xkuru (~xkuru@user/xkuru)
[12:57:02] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[13:09:37] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[13:09:45] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[13:12:44] *** Joins: millido (~millido@84.210.150.128)
[13:16:12] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[13:21:06] *** Joins: Maturion (~Maturion@p200300ede70deb00e34c133d0d5a0012.dip0.t-ipconnect.de)
[13:22:33] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[13:29:55] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[13:30:47] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[13:30:48] *** Joins: wakeup (~wakeup@user/wakeup)
[13:31:43] <wakeup> Let's say you have an expression like this: sum_{s')( ... max_{s')|v(s') - u(s')|). My question is: s' in the max is the same as s' in the sum, right?
[13:32:07] <wakeup> If that's the case, then sum_{s')( ... max_{s')|v(s') - u(s')|) =  sum_{s')( ... |v(s') - u(s')|)
[13:37:24] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[13:39:29] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[13:40:20] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:40:40] *** Joins: mickey8 (~user@user/mickey)
[13:42:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[13:46:30] *** Joins: luc4 (~manjaro-u@host-87-5-176-139.retail.telecomitalia.it)
[13:46:45] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[13:47:46] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:4841:1341:b177:2049)
[13:49:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:55:12] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[13:55:25] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[13:58:44] *** Joins: MatSharrow (~matthew@169.99.9.51.dyn.plus.net)
[14:01:58] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[14:05:34] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:8413:5c77:eacd:b6f4) (Ping timeout: 250 seconds)
[14:06:29] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:f090:2f6f:e297:e289)
[14:12:08] *** Joins: Ruzon (~Ruzon@2804:7f7:a587:c00e:3097:2de4:7365:14d2)
[14:14:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:15:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:16:00] *** Joins: millido (~millido@84.210.150.128)
[14:17:44] *** Lord_of_Life_ is now known as Lord_of_Life
[14:24:42] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:88d7:a532:5ff2:a82d)
[14:25:35] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[14:26:36] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:31:30] *** Joins: Satin (uid193953@user/Seten)
[14:32:44] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[14:35:56] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[14:36:24] *** Quits: nullcone (uid11626@id-11626.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:44:29] *** Quits: luc4 (~manjaro-u@host-87-5-176-139.retail.telecomitalia.it) (Quit: Konversation terminated!)
[14:44:46] *** Quits: UPXTcgv7 (~KTC2gV3Y@74.5.131.75) (Quit: Quitting)
[14:44:51] *** Joins: luc4 (~manjaro-u@host-87-5-176-139.retail.telecomitalia.it)
[14:45:36] *** Joins: marlboro (~i.am@user/marlboro)
[14:47:54] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:48:35] *** Joins: kish` (~aqua@user/aqua)
[14:48:37] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:48:52] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[14:49:28] *** Joins: kish` (~aqua@user/aqua)
[14:49:28] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca)
[14:50:04] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[14:51:43] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:88d7:a532:5ff2:a82d) (Quit: Leaving...)
[14:54:15] *** kish` is now known as dodik
[14:54:50] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca) (Ping timeout: 256 seconds)
[15:06:18] *** Joins: wakeup (~wakeup@user/wakeup)
[15:06:42] <wakeup> Can someone look at this and tell me what they think: http://mathb.in/69787?
[15:08:24] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[15:08:32] <jmnbtslsQE> wakeup: when you use s' in max, max is introducing s' as a new variable, with a different scope inside of the sum s' . they just both happen to be called s'. so it would not be a good way to write it
[15:08:53] <jmnbtslsQE> (and so the equality you wrote is not necessarily true)
[15:11:25] <jmnbtslsQE> it would be a bit like writing f(x) = integral from 0 to x of x^2 dx . really there needs to be two variables: f(y) = integral from 0 to y of x^2 dx
[15:13:58] *** Joins: widp (~user@124.123.105.153)
[15:14:37] *** Quits: juri_ (~juri@178.63.35.222) (Ping timeout: 240 seconds)
[15:19:37] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:f090:2f6f:e297:e289) (Ping timeout: 240 seconds)
[15:20:49] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:df96:89e3:722a:400f)
[15:22:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:26:43] <wakeup> jmnbtslsQE Why is max introducing s' as a new variable necessarily? I mean, yes, sometimes that's the case, but what if that's not the case?
[15:27:03] <wakeup> what is s' in the max refers to s' in the sum
[15:29:47] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[15:36:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[15:38:23] *** Joins: Xardas (~Xardas@149.233.51.127)
[15:39:10] <Xardas> x - 3y = 4
[15:39:10] <Xardas> 2x + y = 1
[15:39:11] <Xardas> 4x + 5y = 9 this linear equation system has no solution
[15:39:23] <Xardas> But when I solved it, i had a different result than my teacher
[15:39:35] <Xardas> Is it because it's inconsistent ?
[15:40:09] <Xardas> Everytime i used different ways to solve it i get a different answer
[15:40:20] <Xardas> Is that normal for an inconsistent system ?
[15:42:44] <specing> Xardas: probably becuase you fail to check your result against the third equation
[15:43:18] *** Joins: Guest33 (~Guest33@2001:8a0:65b0:900:8928:4d18:ef64:c3e6)
[15:44:31] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Ping timeout: 256 seconds)
[15:45:39] <Xardas> so even though it has no solution, i should have the same result as the one from the calculator ?
[15:46:46] <specing> Xardas: from the calculator?
[15:47:17] <Xardas> I can input the all the values of a linear system in a calculator
[15:47:34] <Xardas> it's feature
[15:48:04] <Xardas> anyway....
[15:48:50] <Xardas> https://youtu.be/9EEv1QVps1E
[15:48:51] <Xardas> like htis
[15:48:55] <Xardas> this*
[15:51:35] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:52:12] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[15:56:40] <specing> so, what is the result that the calculator gives you?
[15:56:41] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[15:57:09] <jmnbtslsQE> wakeup: as far as i know that is just not how items like max are defined, and in this case it would make the max trivial which is unlikekly to be the author's intent. as far as i know the sub script variable is necessarily introduced and ranges through all possible values in some set/class/whatever depending on how it's used in the body of the max.
[15:59:15] *** Joins: seninha (~seninha@user/seninha)
[16:02:22] <wakeup> an expectation of a function can never be greater than max f(x), right?
[16:02:47] <wakeup> I am 99.9% confident that's the case
[16:06:52] *** Joins: juri_ (~juri@178.63.35.222)
[16:07:37] *** gentooclimax is now known as climax
[16:08:33] *** Joins: dez (uid92154@user/dez)
[16:08:34] <riv> why don't you try to prove it?
[16:10:35] <wakeup> the probability distribution makes it a convex combination, if it's discrete
[16:11:32] <wakeup> i.e. a convex combination of values smaller or equal than max f(x)
[16:11:34] *** Joins: frost (~frost@user/frost)
[16:13:52] <Xardas> specing nevermind
[16:13:58] <Xardas> Thanks for helping
[16:14:05] <Xardas> I was just confused
[16:14:14] <riv> wakeup: a proof will use the definition
[16:14:56] <wakeup> riv definition of what?
[16:15:00] <riv> expectation
[16:17:30] <wakeup> yea
[16:18:00] <wakeup> Ok, let me prove this
[16:18:13] <wakeup> let's say that f(x) has a discrete dist
[16:18:14] <wakeup> then we have
[16:18:28] <wakeup> E[f(x)] = sum p(x) f(x)
[16:18:46] <wakeup> we want to show that this is smaller than or equal to max f(x)
[16:18:48] <riv> yeah
[16:18:59] <wakeup> i.e. E[f(x)] = sum p(x) f(x) <= max f(x)
[16:19:48] <wakeup> we know that p(x) f(x), for each x, is smaller or equal to f(x)
[16:19:59] <wakeup> because p(x) in [0, 1]
[16:20:16] <riv> that's true, but instead I think you should use that p(x) f(x) is <= p(x) max(f)
[16:20:43] <wakeup> yes, that's true
[16:21:17] <wakeup> sum p(x) max f(x) = max f(x)
[16:21:35] <wakeup> bu sum p(x) max f(x) > sum p(x) f(x)
[16:21:47] <wakeup> so I guess that's proved
[16:21:50] <wakeup> let me thnk
[16:21:56] <wakeup> yea
[16:22:02] <wakeup> it's proved
[16:22:04] <riv> yes, sum (p(x) max(f)) = (sum p(x)) max(f) = 1 max(f)
[16:22:22] <riv> that proves it, and a similar proof works if you have integral instead of sum
[16:23:22] *** Quits: chomwitt (~chomwitt@ppp-94-67-1-27.home.otenet.gr) (Ping timeout: 250 seconds)
[16:23:48] <wakeup> ok, now I am tryin to prove something else but I am not sure how to do it
[16:24:19] <wakeup> let's say we have a conditional dist p(s' | s)
[16:24:58] <wakeup> I need to show that max_s sum p(s' | s) f(s') <= sum p(s' | s) f(s')
[16:25:04] <wakeup> I am not sure this is always the case
[16:25:13] <wakeup> actually, intuitively, that seems the opposite
[16:25:25] <riv> what's s on the RHS?
[16:25:36] <riv> what are you summing over?
[16:25:42] <wakeup> summing over s'
[16:25:59] *** Joins: maxzor (~maxzor@2a01cb04054faa00d026b44b733dceee.ipv6.abo.wanadoo.fr)
[16:26:18] <wakeup> in my case, f(s') is actually a difference between two functions... I am not sure that makes any difference
[16:26:24] <wakeup> absolute diff
[16:26:33] <wakeup> anyway, those are functions of s'
[16:27:39] <wakeup> if I can show that they are always equal, that would also be fine for my case
[16:27:58] <wakeup> i.e., max_s sum p(s' | s) f(s') == sum p(s' | s) f(s') is always true?
[16:28:01] <wakeup> or when is it true?
[16:32:07] *** Joins: paul424 (~tom@apn-95-41-61-213.dynamic.gprs.plus.pl)
[16:32:28] <paul424> Can I get a pass to an #economics ??
[16:32:39] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[16:33:02] <paul424> Or where I could disuss how to invest in share bonds , because I have a great Idea from that morning ...
[16:33:42] <jmnbtslsQE> the channel has ## instead of #
[16:35:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[16:35:39] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[16:37:36] <paul424> jmnbtslsQE, ok thanks :)
[16:40:03] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[16:40:21] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[16:40:52] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:41:57] *** Quits: wisam (~wisam@5.32.40.122) (Ping timeout: 240 seconds)
[16:45:27] *** Quits: darkapex (~darkapex@user/darkapex) (Remote host closed the connection)
[16:45:27] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[16:46:14] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[16:47:38] <Z-module> rex_victor: you hopefully found some non-noetherian Z-modules, right?
[16:48:40] <rex_victor> Z-module: I went to bed, but since I couldn't find the statement anywhere, I thought it must be true. I only found it for finitely generated ones
[16:49:16] <rex_victor> so the polynomring in infinitely many variables should be a non-noetherian Z-module?
[16:49:24] <Z-module> Q has submodules <1/1!> < <1/2!> < <1/3!> < ...
[16:49:43] *** Joins: wisam (~wisam@5.32.40.122)
[16:49:43] <Z-module> yes on what you just said
[16:50:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:50:07] *** Joins: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net)
[16:50:14] <rex_victor> ah yes Q as a module has a different structure than as as ring
[16:50:59] *** Joins: darkapex (~darkapex@user/darkapex)
[16:51:15] *** Joins: Simplar (~Simplar@188.163.93.76)
[16:51:24] <rex_victor> but then how come my "transfinite" argument won't work?
[16:51:45] <Z-module> argument for which?
[16:52:14] <rex_victor> completing a chain of submodules of M to M itself
[16:52:38] <Z-module> What are you showing?
[16:52:41] <Simplar> Interesting question, fellows. I know Sturm's Theorem to discover whether there are roots in a certain domain of a function. I know there is a RRT (Rational Root Theorem) to find out whether polynomial has any rational roots. But is there something that allows to test whether there are rational roots in a certain domain?
[16:54:04] <rex_victor> Z-module: I wanna show that Q is an injective Z-module. In the first part I showed that if M is a Z-module, M' < M a submodule, f: M' -> Q a homomorphism, then I can continue f for any a in M - M' onto <M', a>
[16:54:47] *** dodik is now known as kish`
[16:55:08] <rex_victor> If M woulde be noetherian the statement would be now trivial
[16:55:31] <Simplar> For example, Sturm's Theorem shown that there is a root inside that domain. And RRT shown that one of the roots of a polynomial is rational (there may be more). But that doesn't tell that the root found in the domain is rational or not
[16:56:11] <Z-module> yes, Q is certainly injective
[16:56:27] <Z-module> also called "divisible", when we're just looking at abelian groups
[16:56:47] <Z-module> Have you seen the structure theorem that gives all of them?
[16:57:40] <rex_victor> Z-module: no I have not
[16:58:14] *** Joins: frost (~frost@user/frost)
[16:58:18] <rex_victor> but this is a more intuitive definition I have to say
[16:58:53] <Z-module> An abelian A is divisible (= an injective Z-module) iff it is some direct sum   (+)_alpha G_alpha    (alpha ranging over some index set, can be of any cardinality), where each G_alpha is Q or one of the Pruefer groups  Z_(p^infty).   THe primes p that get used can be any/all/whatever.
[17:00:25] <Z-module> It turns out not to be very hard to show this.
[17:01:07] <Z-module> so of course R, the additive group of reals, is such a thing, and is a direct sum of c many copies of Q, where c means |R|.
[17:02:27] <rex_victor> I see
[17:02:27] <Z-module> there are various equivalent definitions for an injective Z-module
[17:02:38] <Z-module> as so often happens in algebra
[17:03:09] <rex_victor> we defined it as the contravariant hom functor being exact
[17:04:02] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 256 seconds)
[17:04:30] *** Joins: savask (~savask@Powder/Developer/savask)
[17:06:00] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[17:06:30] <rex_victor> and we hat the charaterization: N is injective, if for all R-modules M and all submodule M' < M, every homomorphism f: M' -> N can be continued to a homomorphism M -> N
[17:07:15] <rex_victor> make that iff
[17:07:26] <Z-module> that's the standard definition of it, actually
[17:07:45] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:4841:1341:b177:2049) (Quit: bbl)
[17:08:06] <rex_victor> so if start with such a configuration
[17:08:38] <rex_victor> I can add an a in M - M' to get a bigger submodule M_1 and a "bigger" homomorphism f_1
[17:08:50] <rex_victor> repeating I get a chain of ascending submodules
[17:09:33] <rex_victor> if M is noetherian, then the chain gets stationary at say N and by construction M_N = M
[17:10:20] <rex_victor> here my attempt at the case if M is not: I take the union of the complete chain and call this M_1
[17:10:32] <rex_victor> now I added countably many
[17:10:37] <rex_victor> But I can repeat this
[17:11:07] <rex_victor> where M_i to M_{i + 1} adds countably many
[17:11:17] <rex_victor> and now I take the union again
[17:11:22] <rex_victor> call this M_1 again
[17:11:27] <rex_victor> and repeat the process
[17:11:44] <rex_victor> do I ever "break" the uncountability barrier?
[17:12:16] *** Quits: kmh (~kmh@2a00:6020:5004:6800:3db0:2ab3:b04b:3605) (Read error: Connection reset by peer)
[17:12:27] *** Joins: kmh (~kmh@2a00:6020:5004:6800:3db0:2ab3:b04b:3605)
[17:12:52] <Z-module> let me see
[17:13:38] <Z-module> YOu're naively trying to show that all such morphisms can be extended to the full M ?
[17:13:47] <rex_victor> yes :)
[17:14:10] <Z-module> thus showing that ever N is injective, thus ZFC is inconsistent, so we can all hang it up and go become basket weavers
[17:14:36] <Z-module> every*
[17:15:04] <rex_victor> well yeah I was wondering, that if it works here it should work everywhere
[17:15:40] <rex_victor> and in my defense: If ZFC is inconsistent, it would definitely work :)
[17:16:12] <rex_victor> but yeah now that suggests that I need to use that Q is the target
[17:16:27] <rex_victor> and that that gives some structure on M
[17:17:32] <rex_victor> ah wait but then it's easy isn't it?
[17:17:32] *** Joins: bosspotato (~bosspotat@lnsm3-montreal02-142-118-86-202.internet.virginmobile.ca)
[17:17:32] *** Quits: bosspotato (~bosspotat@lnsm3-montreal02-142-118-86-202.internet.virginmobile.ca) (Changing host)
[17:17:32] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[17:18:09] <rex_victor> Take any well-ordering on Q, and add f^{-1) from the smallest element to it
[17:18:16] <rex_victor> then the second smallest etc.
[17:18:23] <rex_victor> taking the union must give all
[17:18:25] *** climax is now known as gentooclimax
[17:18:59] <rex_victor> but this only works if f^{-1}(x) would be countable as well
[17:20:57] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[17:26:20] <Z-module> That extension thing lets us get:  Every nonzero abelian A admits a nonzero morphism A -> Q/Z.  Also, with much more work, if some group G in place of Q/Z there, even with G not assumed abelian, has that same property for all nonzero abelian A, then G must have Q/Z as a direct summand so it reduces to the first statement.
[17:27:48] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:28:44] *** Joins: wakeup (~wakeup@user/wakeup)
[17:29:25] <wakeup> let's say I have this
[17:30:23] <wakeup> max_s sum_{s'} p(s' | s) * |v(s') - u(v')|. My question is: with respect to max, can I ignore |v(s') - u(v')|? I cannot move it out of the summation between s' is a variable of the summation
[17:30:29] <wakeup> I feel I cannot ignore it to compute max_s
[17:31:24] *** Quits: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net) (Ping timeout: 250 seconds)
[17:33:35] <rex_victor> Z-module: so are you suggesting that this is a red herring?
[17:34:05] <rex_victor> wakeup: what's v'?
[17:34:07] <wakeup> what causes problems to me is that we have a sum
[17:34:18] <wakeup> sorry, I man u(s') not u(v')
[17:34:22] <wakeup> v and u are functions
[17:34:28] <wakeup> p is a distributrion
[17:34:40] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:34:49] <rex_victor> ok so you are looking for the s for which the sum is maximal
[17:35:22] <rex_victor> then you can't ignore the stuff in the sum
[17:35:38] <wakeup> exactly...
[17:36:19] <wakeup> but I need to show that this max_s ... is <=
[17:36:36] <wakeup> sum_{s'} p(s' | s) * max_x |v(x) - u(x)|
[17:36:56] <Z-module> rex_victor: You mean the attempt to show that every N is injective, using that morphism extension thing transfinitely?
[17:37:31] <wakeup> so, before, I showed that sum_{s'} p(s' | s) * max_x |v(x) - u(x)| is greater or equal to the expectation sum_{s'} p(s' | s) * |v(s') - u(v')|
[17:37:58] <rex_victor> Z-module: well since I believe that ZFC is consistent, I am sure now, that I can't do it transfinitely and so it only works for countable M
[17:38:48] <rex_victor> wakeup: this inequality is easy to see
[17:38:58] <rex_victor> you wanna show a <=
[17:39:13] <rex_victor> so you can do whatever you want that increases the stuff
[17:39:22] <rex_victor> so in sum you can increase every summand
[17:39:41] <wakeup> hah
[17:39:45] <wakeup> right
[17:39:59] <rex_victor> since everything in the sum is non-negative, you can choose the max |...| instead of the s' one
[17:40:11] <wakeup> wait
[17:41:30] <rex_victor> Z-module: I'll have to think about it some more
[17:41:42] <wakeup> the problem is that, in max_s sum_{s'} p(s' | s) * |v(s') - u(v')|, I am afraid that |v(s') - u(v')| affects max_s
[17:41:46] *** Joins: blackk (~J@2a02:8389:2301:8980:19be:1fa9:19ad:cac0)
[17:42:05] <wakeup> if I replace  |v(s') - u(v')| with max, what's going to happen
[17:42:05] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[17:42:07] <wakeup> nothing?
[17:42:09] <wakeup> is that the intuition
[17:42:11] <wakeup> I think so
[17:42:12] <Z-module> rex_victor: It's actually not about that part of it at all (transfinite arguments work fine in ZFC). It's that even at the very first step the map might have no extension. Take M = N = Z,  M' = 2Z,  f: 2Z -> Z  sending each 2n to n.  This f can't be extended beyond 2Z, as you can check.
[17:42:22] <rex_victor> wakeup: nothing is not true, you might get something too large
[17:42:33] <wakeup> I mean with respect to max_s
[17:42:39] <blackk> whats up
[17:42:47] <rex_victor> wakeup: holdon
[17:42:54] <wakeup> with respec to max_s it doesn't matter that we replace |v(s') - u(v')| with a bigger number
[17:43:06] <rex_victor> what is it again you wanna show, I think there's something missing there
[17:43:56] <wakeup> I need to show that max_s sum_{s'} p(s' | s) * |v(s') - u(v')| <= sum_{s'} p(s' | s) * max_x |v(x) - u(x)|
[17:43:59] <rex_victor> but f goes to Q
[17:44:04] <wakeup> now
[17:44:07] <rex_victor> @ Z-module
[17:44:19] <wakeup> the question is: is the following true?
[17:44:27] <Z-module> sure, Q is injective, it will always work there
[17:44:27] <rex_victor> wakeup: ok in the right side you have an unqualified s
[17:44:37] <Z-module> and the general proof is non-constructive
[17:44:43] <Z-module> necessarily
[17:45:01] <rex_victor> Z-module: well I wanna show Q is injective :)
[17:45:07] <wakeup> rex_victor yes, forget about the RHS
[17:45:14] <blackk> injective Z module?
[17:45:18] <wakeup> can we bring the LHS to something similar or equal to the RHS
[17:45:21] <Z-module> yes blackk
[17:45:48] <wakeup> I liked your suggestion before
[17:45:52] <wakeup> but I am still not sure that's true
[17:45:54] <wakeup> I think so
[17:45:54] *** Joins: smoke (~smoke@user/smoke)
[17:45:59] <wakeup> let's say we have max_s sum_{s'} p(s' | s) * |v(s') - u(v')|
[17:46:20] <rex_victor> wakeup: you can do: <= max_x |v(x) - u(x)| max_s sum_{s'} p(s' | s)
[17:46:22] <wakeup> now if we replace |v(s') - u(v')| with k, where k > |v(s') - u(s')|, for all s'
[17:46:48] <wakeup> so max_s sum_{s'} p(s' | s) * k
[17:46:55] <rex_victor> yes
[17:47:50] <wakeup> ok, why is this true
[17:47:52] <wakeup> let me think
[17:47:57] <wakeup> don't tell me for now
[17:48:01] <rex_victor> wakeup: ok :)
[17:50:16] <wakeup> well, before we showed that E[f(x)] <= max f(x)
[17:50:28] <wakeup> hm
[17:50:59] <Z-module> rex_victor: Q has the property that for every natural n, every q in Q has an "nth root", some q' with  nq' = q. You only need this property to get the map extension thing, nothing specifically about Q.
[17:51:07] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[17:51:58] <rex_victor> Z-module: yes the map extension thing I have already proven
[17:52:17] <rex_victor> with this property
[17:52:29] <Z-module> So I'm not sure what you want to show now.
[17:52:43] <Z-module> Clearly Q has all nth roots of everything.
[17:52:44] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[17:53:06] <wakeup> ok, I think I got it
[17:53:37] <rex_victor> I have shown that for every a in M - M' I can extend f:M' -> Q to a map (M',a) -> Q
[17:53:54] <wakeup> ... So, by maximizing wrt to s, then we can only change p. p can decrease or increase.
[17:54:18] <wakeup> but |v(s') - u(v')| cannot increase or decrease
[17:54:42] <rex_victor> wakeup: It would really help, if you can post the actual statement to proof
[17:54:44] <wakeup> in any case, if we replace |v(s') - u(s')| with max |v(s') - u(s')|, we're going to multiply by a bigger number
[17:54:51] <rex_victor> wakeup: yes that's true
[17:55:04] <wakeup> that's the statement to prove above
[17:55:28] <rex_victor> Z-module: if I can shown now that for any M' < M i can extend to a map M -> Q then by lecture notes Q is injective
[17:55:51] <rex_victor> wakeup: then again there's an unqualified s in the rhs
[17:56:14] <wakeup> what I am afraid of is that p could e.g. decrease for say one particular s' if we change s, but could increase for another s'
[17:56:23] <wakeup> but maybe that's nto a problem because we're going to multiply by k
[17:56:32] <wakeup> which is bigger than any other difference
[17:56:34] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[17:56:59] <blackk> rex_victor it actually suffices to show it for any ideal of Z
[17:57:15] <rex_victor> blackk: what you mean?
[17:57:27] <blackk> take nZ instead of M
[17:57:44] <blackk> its a characterisation
[17:57:58] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[17:58:07] <blackk> and show it extends to Z
[17:58:29] <rex_victor> and then it will be true for any Z-module ?
[17:58:32] <blackk> instead of M' I mean
[17:58:34] <blackk> yes
[17:58:40] <blackk> its Baer'S criterion
[17:58:53] <blackk> a similar trick existss for projective modules
[17:58:54] <wakeup> wait
[17:59:02] <blackk> afk
[17:59:09] <wakeup> we don't need to go through that
[17:59:37] <rex_victor> blackk: thx blackk will look into it
[17:59:51] <blackk> sure
[17:59:53] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:00:09] <wakeup> given that p(s' | s) is a prob dist
[18:00:24] <blackk> probably the book of Lam has it
[18:00:39] <wakeup> then the upper bound of  max_s sum_{s'} p(s' | s) * |v(s') - u(s')| must be max_x |v(x) - u(x)|
[18:00:41] <wakeup> right?
[18:00:43] <wakeup> i mean
[18:00:53] <blackk> for the esoteric.. the book of Lam..beck :)
[18:00:54] <wakeup> it doesn't matter which convex combinatino we use
[18:01:05] <wakeup> if that's the case, then I proved what I needed
[18:01:42] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:01:45] <rex_victor> wakeup: depends where s' is coming from
[18:01:46] <wakeup> because basically max_s sum_{s'} p(s' | s) * |v(s') - u(s')| is going to change only p
[18:02:05] <wakeup> *is going to choose among p's
[18:02:14] <rex_victor> the sum of the probabilty of all events is less than or equal to 1
[18:02:26] *** Quits: marlboro (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R/2R->0)
[18:02:32] <blackk> yep chapter 3,.. "Baer's test for injectivity"
[18:02:46] <blackk> its been a long time I did this kind of math
[18:02:46] <rex_victor> so if s' is a subset of those events then yes in total you get <= max_x |v(x) - u (x)|
[18:02:47] <wakeup> but we know that max_x |v(x) - u(x)| is an upper bound to sum_{s'} p(s' | s) * |v(s') - u(s')|
[18:03:02] <wakeup> it follows from E[f(x)] <= max f(x), that I proved before
[18:03:39] *** Guest33 is now known as Zemanskyy
[18:03:59] <wakeup> rex_victor s' is the variable of the sum
[18:04:13] <rex_victor> well yeah that was clear
[18:04:17] <rex_victor> but how is it bounded
[18:04:25] *** Quits: blackk (~J@2a02:8389:2301:8980:19be:1fa9:19ad:cac0) (Quit: Leaving)
[18:05:00] <wakeup> what do you mean by s' is bounded?
[18:05:15] <wakeup> s' is a point from some space
[18:06:06] <rex_victor> yes what space
[18:06:33] <Z-module> rex_victor: If N is any Z-module with the "has all nth roots of everything" (i.e. it's divisible, so it's one of those direct sums I described before), then yes, for *every* Z-module M and every submodule M', every map M' -> N  extends to one on the full M.  And the proof, usually done as a simple Zorn thing, is quite generic: nothing at all specific about M or M' or N gets used for anything, other than N having all those nth roots.
[18:06:45] *** Quits: paul424 (~tom@apn-95-41-61-213.dynamic.gprs.plus.pl) (Quit: Leaving)
[18:06:52] <Z-module> not even the structure theorem I gave before is used
[18:07:01] <rex_victor> ah it uses Zorn
[18:07:08] <rex_victor> that's how you complete it
[18:07:12] <wakeup> why would that matter?
[18:07:14] <Z-module> well, same thing as your way really
[18:07:16] <wakeup> you can just coose say N
[18:07:23] *** Joins: red_owl (~red_owl@p5b243614.dip0.t-ipconnect.de)
[18:08:16] <rex_victor> wakeup: let's have ω_i being the event that a dice rolled (i mod 6) + 1
[18:08:33] <rex_victor> then the sum over i = 1 to 12 p(ω_i) = 2
[18:09:30] <rex_victor> so you have to make sure that you count each event at most once
[18:10:51] <rex_victor> Z-module: ok I have to do some stuff now, but now I think I can formalize it
[18:11:47] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[18:12:12] <rex_victor> Z-module: thx :)
[18:15:04] *** Joins: frost (~frost@user/frost)
[18:17:16] *** Quits: Ruzon (~Ruzon@2804:7f7:a587:c00e:3097:2de4:7365:14d2) (Quit: Iridium IRC Client)
[18:17:51] <Z-module> rex_victor: sorry, I needed to say every *injective* map M' -> N  extends.
[18:19:03] <rex_victor> Z-module: ok I have it for every
[18:19:17] <savask> Z-module: Say you know an ordinary character table of a finite simple group of order 168. Is it then easy to show that it's isomorphic to SL3(2)?
[18:20:01] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[18:20:02] <Z-module> savask: hmm, don't remember.
[18:20:16] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[18:21:49] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-9c88-e50c-5158-ae05.res6.spectrum.com)
[18:23:17] *** Joins: bendersteed (~user@188.4.114.117.dsl.dyn.forthnet.gr)
[18:25:02] <Z-module> savask: I sort of remember that showing it's that group is easy enough without any character stuff.... or maybe that's a faulty memory?
[18:25:50] <savask> Z-module: Maybe you're right, but I was wondering if knowing the character table gives an easy way
[18:26:53] <savask> I bet you can somehow compute Brauer characters and show that it's PSL2(7) or SL3(2), but I don't know modular stuff unfortunately :C
[18:33:33] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[18:33:59] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[18:34:07] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:34:11] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[18:41:10] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[18:47:37] *** Joins: TheCatBehemoth (~TheCatBeh@a89-155-25-194.cpe.netcabo.pt)
[18:48:42] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:48:57] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[18:49:16] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[18:50:59] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[18:54:25] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[18:55:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[19:03:12] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:03:16] *** Joins: millido (~millido@84.210.150.128)
[19:04:01] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[19:04:06] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[19:04:57] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[19:11:51] <Z-module> rex_victor: oops, I retract my correction: it's for any map M' -> N   (when N is injective)
[19:15:05] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[19:16:04] *** Joins: soapsudsxx_ (~soapsudsx@141.193.188.140)
[19:16:27] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Ping timeout: 256 seconds)
[19:19:20] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:19:43] *** Joins: esther (~esther@2607:fb90:5feb:90d3:630c:7af7:aa00:8a04)
[19:23:02] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[19:23:40] *** Joins: millido (~millido@84.210.150.128)
[19:23:57] *** Quits: esther (~esther@2607:fb90:5feb:90d3:630c:7af7:aa00:8a04) (Ping timeout: 240 seconds)
[19:24:54] *** Quits: millido (~millido@84.210.150.128) (Client Quit)
[19:25:32] *** Joins: millido (~millido@84.210.150.128)
[19:26:22] *** Joins: bitd (~bitd@user/bitd)
[19:27:29] <am1985> Is there any way in Mathematica to have a variable that doesn't generally commute with others of its type?
[19:28:46] *** Joins: smile (uid510004@user/smi)
[19:29:25] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[19:30:15] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[19:31:57] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[19:32:45] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[19:33:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:35:12] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[19:36:18] *** gentooclimax is now known as climax
[19:39:25] *** climax is now known as gentooclimax
[19:42:17] *** Quits: widp (~user@124.123.105.153) (Ping timeout: 240 seconds)
[19:47:56] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[19:48:15] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:52:43] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[19:52:47] *** Joins: ferdna (~ferdna@user/ferdna)
[19:53:08] <Vornicus> uch.  I think I need an introduction to the laplacian
[19:54:36] *** Joins: Klinda (~superleag@user/klinda)
[19:55:11] *** Quits: wisam (~wisam@5.32.40.122) (Ping timeout: 256 seconds)
[19:58:58] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[19:59:09] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[20:03:42] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[20:04:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:08:53] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[20:09:25] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[20:09:58] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[20:10:48] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[20:10:55] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[20:12:04] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[20:12:09] *** Parts: adder`` (~adder@user/adder) (Leaving)
[20:12:24] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[20:13:04] *** Quits: joj_ (~joj@45.76.142.39) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:13:31] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[20:13:46] *** Quits: noboruma (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp) (Remote host closed the connection)
[20:14:06] *** Joins: joj (~joj@jojeee.xyz)
[20:19:21] *** Quits: Zemanskyy (~Guest33@2001:8a0:65b0:900:8928:4d18:ef64:c3e6) (Ping timeout: 256 seconds)
[20:21:18] *** Joins: cadmio (~cadmio@151.47.37.126)
[20:21:34] <cadmio> Hello
[20:25:25] <cadmio> in exercise #3 https://gioretikto.github.io/mat/algebra/exercises_field_extensions.html I'm not sure what should be the degree of s(x)
[20:26:05] *** Quits: DoYouKnow (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net) (Remote host closed the connection)
[20:26:06] *** Quits: cadmio (~cadmio@151.47.37.126) (Read error: Connection reset by peer)
[20:28:10] *** Joins: DoYouKnow (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net)
[20:31:57] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[20:31:58] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[20:34:18] *** Joins: lispy (~lispy3@84.69.59.93)
[20:34:57] *** Quits: bendersteed (~user@188.4.114.117.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[20:37:36] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7c5f:6d69:1225:e63e)
[20:37:38] *** Joins: Guest33 (~Guest33@2001:8a0:65b0:900:1131:b9dd:7b6f:5e79)
[20:38:03] *** gentooclimax is now known as climax
[20:40:30] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:40:35] *** Joins: cadmio (~cadmio@151.47.40.96)
[20:42:23] *** Joins: OverCoder (~OverCoder@user/overcoder)
[20:43:27] <cadmio> it disconnected
[20:44:47] <PollionH> cadmio: hi, the degree of s doesn't really matter. It is not unique either.
[20:48:17] *** Quits: lilgopher (~textual@2601:241:8000:38f0:9852:2818:9ff9:c2aa) (Ping timeout: 240 seconds)
[20:48:18] <cadmio> my text says the element s(a) has the powers reduced with the relation p(a) = 0
[20:48:25] <cadmio> I don't understand what it means
[20:48:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:48:48] *** climax is now known as gentooclimax
[20:48:53] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[20:49:04] <PollionH> Do you have the whole sentence ?
[20:50:27] *** Quits: OverCoder (~OverCoder@user/overcoder) (Quit: Quitting? That's odd.)
[20:50:27] <PollionH> But either way, you can prove as an exercise that you can always chose s of degree < n
[20:50:44] <cadmio> "The element s(a) (in which the seuperior powers have been reduced to n with the relation p(a) = 0) is the inverse of g(a)"
[20:51:13] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[20:51:21] <PollionH> One key word: Euclidean division.
[20:51:25] *** Joins: OverCoder (~OverCoder@user/overcoder)
[20:52:00] <PollionH> What is the euclidean division of s by p ?
[20:52:29] <cadmio> but why are you dividing by p?
[20:53:51] *** Joins: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1)
[20:54:08] <PollionH> p is of degree n, right ? And you want something of degree < n. Euclidean division should be a reflex in such situation.
[20:55:09] <cadmio> I want the inverse of g(x)
[20:55:43] <PollionH> And you already have it, it is s(a).
[20:55:55] <PollionH> But s can be of arbitrary degree
[20:56:06] <PollionH> s as a polynomial
[20:56:13] <PollionH> but s(a) is well defined.
[20:56:29] <cadmio> I think it should conform to the degree of g(x), isn't it?
[20:56:39] <cadmio> so that s(x)g(x) = 1
[20:56:45] <PollionH> However you can take a canonical form of s
[20:56:47] <PollionH> No
[20:57:09] <PollionH> You will never find a polynomial s such that s(x)g(x) = 1
[20:57:19] <PollionH> unless g is a constant
[20:57:38] <PollionH> Notice that you textbook writes s(a)g(a) = 1
[20:57:51] <PollionH> s(a) g(a) are elements of your extension field
[20:57:53] <cadmio> ah right it's the inverse of g(a)
[20:57:57] <PollionH> where s and g are polynomials
[20:58:12] <PollionH> Those objects are related but are very different.
[21:00:53] *** Joins: learner36_ (~learner36@cpef81d0fa12c13-cmf81d0fa12c10.cpe.net.cable.rogers.com)
[21:01:31] *** Joins: learner36__ (~learner36@2607:fea8:129f:c220:9db8:7181:4885:4fc7)
[21:01:33] *** Quits: learner36 (~learner36@cpef81d0fa12c13-cmf81d0fa12c10.cpe.net.cable.rogers.com) (Killed (NickServ (GHOST command used by learner36__!~learner36@2607:fea8:129f:c220:9db8:7181:4885:4fc7)))
[21:01:36] *** learner36__ is now known as learner36
[21:02:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[21:02:45] <Simplar> c^2*(sqrt((ab-ac-bc+c^2)/(c^2) * (ab+ac+bc+c^2)/(c^2)))/2
[21:02:52] <Simplar> anyone knows that is this formula?
[21:03:14] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: Leaving)
[21:03:44] <Simplar> what*
[21:03:59] <cadmio> I'm not sure why it is reducing the powers of s to n with the relation p(a) = 0
[21:04:07] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:04:20] <PollionH> cadmio: As I said, what is the Euclidean division of s by p ?
[21:05:02] *** gentooclimax is now known as climax
[21:05:02] <PollionH> Simplar: This is just an expression ? no equality ?
[21:05:02] *** Quits: learner36_ (~learner36@cpef81d0fa12c13-cmf81d0fa12c10.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[21:05:41] <Simplar> PollionH: yes, and it simplifies to sqrt((a-c)(a+c)(b-c)(b+c))/2
[21:06:10] <PollionH> what are a, b, c ?
[21:07:34] <Simplar> PollionC: Beats me. It was connected with geometry according to the one given that, so a, b, and c are sides of a triangle
[21:07:58] <Simplar> it really reminds me of Heron
[21:08:01] <Simplar> But it seems not
[21:08:16] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:08:35] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:08:57] <PollionH> If you want some kind of formula you need to have an equality or something
[21:09:06] <PollionH> otherwise it is just a number
[21:09:15] <cadmio> s = pq + r with degree (r) < n
[21:09:30] <PollionH> cadmio: exactly, now evaluate on a
[21:09:40] <PollionH> what happens ?
[21:10:06] <cadmio> s has degree of r i.e. < n
[21:10:16] <PollionH> what ?
[21:10:33] <cadmio> sorry
[21:10:36] <cadmio> s = r
[21:10:46] <PollionH> why should s = r ?
[21:10:56] <cadmio> p(a) = 0
[21:11:05] <cadmio> s(a) = r(a)
[21:11:07] <PollionH> Yes, this I agree
[21:11:11] <PollionH> yes s(a) = r(a)
[21:11:14] <PollionH> not s = r
[21:11:37] <PollionH> s and r are polynomials
[21:11:50] <PollionH> There is no reason for them to be equal
[21:12:13] *** Quits: TheCatBehemoth (~TheCatBeh@a89-155-25-194.cpe.netcabo.pt) (Quit: bbl)
[21:12:14] <cadmio> sure
[21:12:20] <PollionH> But if s(a) = r(a), you have then g(a)*r(a) = 1
[21:12:37] <PollionH> and you can write your inverse as r(a) with deg(r) < n
[21:12:53] <PollionH> This is probably what is meant in your textbook
[21:12:56] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[21:13:11] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[21:13:30] <lispy> Anyone read Discrete Mathematics and Its Applications? Would you recommend it?
[21:15:12] <cadmio> r(a) is a scalar not a polynomial
[21:16:11] <PollionH> yes
[21:16:40] <PollionH> so is g(a)
[21:17:05] <PollionH> lispy: sorry, don't know about this book.
[21:19:09] *** climax is now known as gentooclimax
[21:20:34] <lispy> All good!
[21:24:49] <cadmio> s(a) = α_0 + α_1 a + + ... + α_{n − 1} a_{n − 1}^{n − 1}
[21:24:59] <cadmio> so you can express s(a) like that
[21:27:01] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[21:28:53] <cadmio> lispy: what's the author?
[21:30:06] <lispy> Kenneth H. Rosen
[21:30:13] <lispy> I should have included that, sorry
[21:30:50] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[21:32:09] <cadmio> now I've understood what the text meant
[21:32:47] <cadmio> we're removing the powers > n which are found in this term t(x)p(x) since p(a) = 0
[21:34:30] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 250 seconds)
[21:36:59] *** Joins: blackk (~J@2a02:8389:2301:8980:dcf8:f391:28b4:bf22)
[21:37:38] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[21:38:18] <PollionH> cadmio:euh no
[21:38:41] <PollionH> s can be an arbitrary large degree polynomial
[21:39:31] <PollionH> but what you proved with the Euclidean division and then using p(a) = 0 is that you can always find a polynomial r of degree < n such that s(a) is also equal to r(a)
[21:39:39] <PollionH> Now r(a) can be expressed as you said.
[21:40:25] <PollionH> s(a) and r(a) are two different ways of representing the same scalar
[21:40:55] <PollionH> But this is something more general than finding the inverse.
[21:41:27] <blackk> given a number e in (0,1) there exist an ellipse of that eccentricity that intersects the unit circle 4 times
[21:41:29] <PollionH> Taking any element y in F(a) you can always find a polynomial r of degree < n such that y = r(a)
[21:41:32] <blackk> this is quite easy to prove
[21:41:44] <zincy> Let X be a compact space, and let (V_n)n∈N be a nested sequence of non-empty closed subsets of X.
[21:41:50] <zincy> Does this mean subspace closed?
[21:42:11] <blackk> a second fact I have an idea of a proof but I was wondering if someone knows a clean proof of it:
[21:42:49] <blackk> as the eccentricity approach 0 (so the ellipses are becoming more circle) the center of the ellipses that intersect the unit circle 4 times approach the origin (center of the unit circle)
[21:43:21] <blackk> what do you mean "subspace closed"?
[21:43:24] <blackk> @zincy
[21:43:52] <blackk> they are closed in the topology of X
[21:43:57] <blackk> those Vn
[21:44:18] <zincy> Ah ok so don't need to consider subspace topology
[21:44:34] <blackk> no
[21:45:07] <blackk> if you have a weird subset Vn of X.. it is "trivially closed" in its "subspace topology".. but not necessarily a closed set in X
[21:45:21] <blackk> say (0,1] is closed in (0,1] but not in R
[21:45:34] <blackk> so it means in the topology of X all the time
[21:46:03] <zincy> Ah right
[21:46:11] <zincy> So it is trivially subspace closed
[21:46:16] <blackk> yeah
[21:46:33] <zincy> For it to be meaningfuly subscape closed we would need to take a further subset
[21:46:39] <zincy> *subspace
[21:46:55] <biberao> yo
[21:47:15] <blackk> if by subspace closed you mean the topology of the bigger set.. yes
[21:47:37] <zincy> Yeah
[21:47:45] <blackk> yo biber
[21:48:03] <blackk> thats beaver
[21:48:31] <blackk> afk
[21:48:38] *** Parts: cadmio (~cadmio@151.47.40.96) (WeeChat 3.0)
[21:49:28] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[21:51:21] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:52:09] *** Quits: mbuf (~Shakthi@122.174.198.26) (Quit: Leaving)
[21:53:47] <biberao> whats wrong blackk
[21:54:36] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[21:55:00] <zincy> Compactness proofs seem abstract
[21:55:05] <zincy> Am I right?
[21:56:10] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:5969:aa36:1621:6eb9)
[21:56:15] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:5969:aa36:1621:6eb9) (Excess Flood)
[21:57:55] <blackk> what do you mean abstract?
[21:58:13] <blackk> non-constructive?
[21:59:48] <trace987> What is the difference about numbers that belong to units and numbers that are arbitrary in their meaning?
[22:00:10] <trace987> maybe this is partly a little math philosophical
[22:00:22] *** gentooclimax is now known as climax
[22:00:34] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[22:00:34] <PollionH> What is your definition of units trace987 ?
[22:01:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:01:17] <trace987> as in physics or economics newton power oder amount of workers or money, etc.
[22:01:26] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:01:54] <PollionH> then I don't understand your question :/
[22:02:06] <zincy> blackk: Maybe abstract is the wrong word. It just feels tricky to prove anything
[22:02:09] <PollionH> What does it mean according to you for a number to belong to units ?
[22:02:36] <trace987> 10 kg or 20 people or 12 bucks
[22:02:46] *** Quits: calcmandan (~quassel@user/calcmandan) (Quit: Visit me at: gopher://gcpp.world)
[22:02:56] <PollionH> You can have arbitrary number there
[22:02:56] <zincy> Well that is a small lie as at least I can show R is not compact
[22:03:23] *** Joins: calcmandan (~quassel@user/calcmandan)
[22:03:24] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[22:03:26] <trace987> okay well, arbitrary is meant that way, that this number could mean really anything possible or impossible
[22:03:30] <blackk> what is R .. I dont even know what the context is
[22:03:35] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:03:40] <zincy> sorry the Reals
[22:03:44] <blackk> oh
[22:04:05] <blackk> I should have known
[22:04:14] <zincy> no worries
[22:04:44] <blackk> are you asking the difference between a number and a unit?
[22:04:47] <blackk> @trace
[22:05:11] <blackk> arent these the type of question that common sense answers?
[22:06:03] <blackk> @zincy maybe you have to ask yourself why we care about compactness
[22:07:17] <zincy> Because we can turn infinite sets into finite sets which are easier to deal with for example we can take max of sets and intersection of open sets holds for finite sets
[22:07:52] <blackk> it kind of make sense
[22:08:01] *** Joins: gb73d (gb73d@host-92-7-42-10.as13285.net)
[22:08:07] <blackk> and if it does, you appreciate it and its proof
[22:08:28] <blackk> also in the euclidean space you have something that is bounded
[22:08:56] <blackk> being bounded can be pretty useful
[22:09:12] <zincy> So any compact set in eucledian space is bounded?
[22:09:38] <blackk> closed and bounded is an equivalence for compactness for them.. yes
[22:10:35] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[22:11:14] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:11:16] *** Joins: Guest3330 (~Guest33@2001:8a0:65b0:900:1131:b9dd:7b6f:5e79)
[22:11:20] <zincy>  Let X be a compact space, and let (Vn)n∈N be a nested sequence of non-empty closed subsets of X (nested means that Vn+1 ⊆ Vn for every n ∈ N). Prove that cap V_n /= ∅
[22:11:33] *** Quits: Guest33 (~Guest33@2001:8a0:65b0:900:1131:b9dd:7b6f:5e79) (Ping timeout: 256 seconds)
[22:11:33] <zincy> I see there is a proof by contradiction for this
[22:11:36] *** Joins: Glaucon (~glaucon@46.109.193.70)
[22:11:41] <zincy> Is there are direct proof?
[22:11:51] *** Joins: seninha (~seninha@user/seninha)
[22:11:56] <zincy> I dont know why I am stuck on it it should be easy
[22:13:12] *** Joins: Satin (uid193953@user/Seten)
[22:13:43] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[22:14:38] <lispy> Usually when I get stuck on things it's because I am tired and/or my working memory is shot to bits
[22:14:38] <zincy> I am struggling to see why "closed" is included  here
[22:14:56] <zincy> Yeah maybe I am tired I just started a new job
[22:15:15] <blackk> consider the complement of these Vn
[22:15:34] <blackk> and prove by contradiction maybe
[22:15:53] *** BytesAndCoffee|a is now known as BytesAndCoffee
[22:15:57] <blackk> you need to use compactness in some way
[22:16:12] <blackk> and the natural way is to find a covering that blabla yaddayadda
[22:16:43] <zincy> ok thanks
[22:16:50] <zincy> I'll take a rest and then try that
[22:17:00] <blackk> hope the hint helps
[22:17:25] *** Joins: xkuru (~xkuru@user/xkuru)
[22:17:30] <blackk> afk
[22:18:08] *** Parts: savask (~savask@Powder/Developer/savask) ()
[22:21:45] *** Quits: Guest3330 (~Guest33@2001:8a0:65b0:900:1131:b9dd:7b6f:5e79) (Ping timeout: 256 seconds)
[22:23:07] <catern> running an optimization where more things are free to vary instead of fixed to specific values allows for better outcomes, is there a name for this principle?
[22:26:56] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[22:27:23] <mycroftiv> catern: good question, im interested, i feel like there are maybe a few choices of vocabulary if you look at specific domains people do that
[22:32:27] *** Joins: wisam (~wisam@5.32.40.122)
[22:32:50] *** Joins: dsrt^ (~dsrt@207.182.73.202)
[22:34:04] *** Joins: econo (uid147250@user/econo)
[22:35:10] <catern> yes, definitely things from specific domains are interesting to me
[22:36:19] *** Quits: blackk (~J@2a02:8389:2301:8980:dcf8:f391:28b4:bf22) (Quit: Leaving)
[22:36:58] *** Joins: io1 (~io@95.80.27.75)
[22:37:24] *** io1 is now known as ph14nix
[22:38:45] *** Quits: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:39:16] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:40:53] <ph14nix> Folks, how do I construct any irreducible polynomial mod 2 of degree n? Is there a simple formula for this?
[22:40:55] <ph14nix> I've been trying to read up on cyclotomic polynomials, but the whole e^i thing killed me (what is e in GF(2) anyway?)
[22:44:35] *** Joins: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de)
[22:44:52] *** Quits: alexhandy (~AndChat62@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[22:47:53] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[22:47:53] *** Joins: specing_ (~specing@user/specing)
[22:49:28] *** specing_ is now known as specing
[22:51:59] *** Quits: edun (~qbt@user/edun) (Ping timeout: 256 seconds)
[22:53:19] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[22:53:45] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[22:55:07] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:55:29] *** Joins: ferdna (~ferdna@user/ferdna)
[22:57:02] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:df96:89e3:722a:400f) (Ping timeout: 240 seconds)
[22:57:27] <catern> mycroftiv: I think terminology from AI would be particularly good here - "constraining the search space of solutions make search easier" is something I know AI people would say... but how would they describe *widening* the search space
[22:57:41] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[22:58:17] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:92cd:1cec:76b4:462b)
[22:59:16] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz?)
[23:02:53] <mycroftiv> catern: im not sure, i have these things im working on in terms of the duality between descriptions and constructions and how each can be seen as constraints on the other
[23:02:53] *** climax is now known as gentooclimax
[23:03:51] <mycroftiv> and this relates to computational issues about making decisions and classifications in a deep way via model theory, but the exact type signatures and how the literature frames things are very hard to fully sort out for me
[23:04:15] <Decker> https://www.youtube.com/watch?v=60z_hpEAtD8  A Swift Introduction to Geometric Algebra
[23:07:23] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[23:11:00] *** Joins: grindhold (~quassel@mail.skarphed.org)
[23:16:27] *** Quits: MsFoxyEmilySmith (~MsFoxyEmi@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[23:19:11] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:21:52] *** gentooclimax is now known as climax
[23:23:21] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[23:23:41] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[23:27:10] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[23:28:03] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[23:30:55] *** Quits: qedders (~qedders@bzq-84-108-229-161.cablep.bezeqint.net) (Remote host closed the connection)
[23:35:40] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:36:31] *** Joins: qedders (~qedders@bzq-84-108-229-161.cablep.bezeqint.net)
[23:39:19] <[itchyjunk]> Wait a second, can i do it like this?
[23:39:40] <[itchyjunk]> i wts for all s in S exists a in S such that alpha_g(a) = s.
[23:39:51] <[itchyjunk]> i know alpha_g^-1(s) \in S.
[23:40:09] <[itchyjunk]> apply alpha_g to this element and i get s?
[23:40:22] <[itchyjunk]> hence surjection?
[23:40:24] <[itchyjunk]> :O
[23:40:39] <[itchyjunk]> kinda makes sense no?
[23:42:06] <[itchyjunk]> If context is needed then (G,*) group and S set and alpha_g is the group action of g \in G on S
[23:42:13] <[itchyjunk]> i wanna show alpha_g is bijective.
[23:43:13] <riv> group actions aren't always bijections are they?
[23:43:22] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:46:22] <Z-module> If any G acts on any nonempty set S, then for each single g in G, the map  s |-> g.s   is always a permutation (= self-bijection) of S.
[23:46:27] <Z-module> That's what he's showing.
[23:47:26] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: will timeout soon.  better quit cleanly.  bbl.)
[23:47:53] <Z-module> the action, that he's calling alpha here, is really a map  G x S -> S.   That map certainly isn't a bijection.
[23:48:14] <Z-module> well, it is iff G = {e}
[23:49:22] <Z-module> The point of checking that each map  s |-> g.s   (for each g in G) is to how that a group action can also be (and sometimes is) defiined as a group homomorphism G -> Sym(S)
[23:49:42] <Z-module> so the image of each g had better be some permutation of S, to start with
[23:49:51] <[itchyjunk]> wait ,  am i showing the wrong thing again?
[23:50:02] <[itchyjunk]> i fixed a g so alpha_g: S -> S no?
[23:50:06] <Z-module> right
[23:50:09] <[itchyjunk]> and i want to show alpha_g is a bijection
[23:50:14] <Z-module> yes
[23:50:39] <[itchyjunk]> so for the surjection part, can i pick alpha_g^-1(s) \in S and allpy alpha_g to it
[23:50:43] <Z-module> (by the way, this holds even if G or S or both are infinite)
[23:50:55] <[itchyjunk]> so i get s back so i can claim for all s in S exists some a in S such that alpha_g(a) = s ?
[23:52:00] <Z-module> yes, but you should explicitly invoke the two defining properties of alpha being a group action
[23:52:03] <Z-module> you need both
[23:52:12] *** Joins: pavonia (~user@user/siracusa)
[23:52:36] <riv> oh wow they are
[23:53:08] <[itchyjunk]> so alpha_g(alpha_g^-1(s)) = (g*g^-1).s = e.s = s
[23:53:19] <Z-module> yes [itchyjunk]
[23:53:28] <[itchyjunk]> the two property being f.(gh) = (fg).h and e.s = s
[23:53:32] <Z-module> right
[23:53:33] <[itchyjunk]> ah okay, nice
[23:53:52] <[itchyjunk]> so now that i have surjection and injection, i have bijection and the proof is done. nice!
[23:54:02] <[itchyjunk]> kinda fun one to do
[23:55:20] *** Quits: msch (sid28472@id-28472.tinside.irccloud.com) (Quit: Updating details, brb)
[23:55:29] *** Joins: msch (sid28472@id-28472.tinside.irccloud.com)
[23:56:29] <[itchyjunk]> I heard action on a set also produces a category :x
[23:58:55] *** Joins: madcat2 (~dgc@user/dgcampea)
[23:59:04] *** Quits: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7) (Ping timeout: 268 seconds)
[23:59:09] *** Joins: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1)
[23:59:34] *** Quits: madcat (~dgc@user/dgcampea) (Remote host closed the connection)
[23:59:45] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Quit: See you on the other side)
