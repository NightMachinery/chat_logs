[00:00:27] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[00:00:28] <Celelibi> Ok, itertools.groupby wins.
[00:00:34] <graingert> p-i-: ah they're stuck with py 3.5 support
[00:00:36] <graingert> p-i-: https://github.com/LonamiWebs/Telethon/issues/1169
[00:00:40] <grym> Celelibi: https://bpa.st/H2PA
[00:00:42] <grym> i think so
[00:00:54] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[00:00:56] <p-i-> graingert: Telethon is huuuge. But I put the suggestion on the telethon telegramm channel.
[00:01:16] <graingert> it's on the wishlist:  Consider using agronholm/anyio.
[00:01:58] <p-i-> Suppose I have N running tasks. One of them picks up the event before the others. How can I make sure my on-message event fires only once?
[00:02:32] *** Quits: x256 (~marc@i080.vpnclients.gwdg.de) (Quit: Leaving)
[00:02:39] <p-i-> Is there some trio primitive for this? Or should I use a lock (do I need a particular flavour?) around setting a flag...
[00:02:48] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[00:03:06] *** Joins: armandokeller (~armandoke@200.159.170.169)
[00:03:08] <p-i-> *N instances of one task
[00:03:31] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.166) (Quit: Textual IRC Client: www.textualapp.com)
[00:03:47] <graingert> p-i-: why would other tasks get the event?
[00:03:59] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[00:04:35] <p-i-> I'm trying to get early-notification of a message to a Telegram channel, using multiple accounts.
[00:04:38] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.110)
[00:05:20] <graingert> p-i-: and you have a message id?
[00:05:23] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:05:24] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[00:05:26] <p-i-> It's a quirk of the batching algo Telegram uses internally. It batches messages and sends the batch. So there can be heavy lag watching for a new message. Several seconds.
[00:05:33] <p-i-> Yes!
[00:05:37] *** Joins: cheater (~Username@user/cheater)
[00:05:51] <graingert> and you want to unique the items?
[00:06:04] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[00:06:10] <graingert> so you just need a dict of seen message ids
[00:06:16] <graingert> a set*
[00:06:22] <p-i-> Yes. 4 listeners pick up the message. I want to emit ONE on_message.
[00:06:28] *** Quits: bxsx (~x@72.red-81-35-191.dynamicip.rima-tde.net) (Quit: leaving)
[00:06:46] *** Quits: Brocker (~NoBody@user/brocker) (Quit: ZNC 1.8.2 - https://znc.in)
[00:06:59] *** Quits: billoday (~bill@cpe-104-228-202-125.maine.res.rr.com) (Quit: leaving)
[00:07:06] <graingert> ah right but they'll all 4 get the message
[00:07:10] *** Joins: anas (~anas@196.224.48.47)
[00:07:11] <graingert> are message ids sequential?
[00:07:28] <p-i-> Actually yes.
[00:08:02] <p-i-> I'm thinking `with my_lock: if msg_id not in msg_ids: on_message(msg_id, msg_text); msg_ids.append(msg_id)`
[00:08:03] <graingert> so you can store the max message id for each listener
[00:08:17] <graingert> that's a sync lock?
[00:08:28] <graingert> use a set for msg_ids
[00:08:35] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[00:08:44] <p-i-> That's what I'm not sure about. Do I need a special async-proof lock?
[00:08:49] <p-i-> Yes!
[00:08:55] <graingert> no
[00:09:02] <graingert> you don't need a lock at all
[00:09:09] <p-i-> I read that `set` access is orders of magnitude faster than list access.
[00:09:14] *** Joins: billoday (~bill@cpe-104-228-202-125.maine.res.rr.com)
[00:09:26] <graingert> yes for `in` checks
[00:09:39] <grym> it's ~O(1) not O(n)
[00:09:45] <grym> that matters after a while
[00:10:11] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[00:10:15] <graingert> but if message ids are sequential then you only need to store the max message id for each task
[00:10:43] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[00:10:44] <graingert> then when you get a message you check what the max message id received is for each task?
[00:10:53] <p-i-> Yess I could simply store last_message_id. But I run a risk of non-atomicity.
[00:11:06] <graingert> non-atomicity?
[00:11:18] <graingert> anything that doesn't do an `await` is atomic
[00:11:22] <p-i-> `if msg_id > curr_max: on_message(...); msg_id = curr_max`
[00:11:32] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[00:11:38] <p-i-> ^ It's possible another ... oh! it's not threads.
[00:11:47] <p-i-> So nothing's gona jump between those instructions.
[00:11:50] <p-i-> niiiiice
[00:12:13] <graingert> if msg_id > curr_max:
[00:12:13] <graingert>     curr_max = msg_id
[00:12:13] <graingert>     await on_message(...)
[00:12:26] <p-i-> This transition to async is starting to bear some fruit already
[00:12:56] <graingert> being able to do this stuff is the main purpose of async programming
[00:13:27] <p-i-> Yes, an alternative to threads to solve the blocking/waiting issue.
[00:13:32] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[00:14:06] *** Quits: Liblx (~Alex@ip4d15ff03.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.1)
[00:14:55] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[00:15:08] <graingert> p-i-: https://glyph.twistedmatrix.com/2014/02/unyielding.html
[00:15:23] *** Joins: derelict (~derelict@user/derelict)
[00:15:29] <graingert> it seems like you drank the kool-aid slightly too early
[00:15:32] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[00:16:53] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:16:54] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[00:17:32] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:857e:b84f:99e3:9c9c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:17:35] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[00:18:40] *** Joins: brickfat (~brickfat@user/brickfat)
[00:19:06] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[00:19:13] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[00:19:16] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 265 seconds)
[00:19:32] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[00:19:36] *** Joins: pnoud (~pnoud@user/pnoud)
[00:20:48] <p-i-> hehe
[00:20:54] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[00:20:55] <p-i-> Now I got an issue: https://bpa.st/7DYA#1L51
[00:21:16] <p-i->             # await client.run_until_disconnected()
[00:21:16] <p-i->             async with trio.open_nursery() as n:
[00:21:16] <p-i->                 n.start_soon(a2t(client.run_until_disconnected))
[00:21:22] <p-i-> What am I missing here?
[00:22:00] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:22:04] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 246 seconds)
[00:24:04] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[00:24:04] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[00:24:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[00:24:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[00:25:18] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 252 seconds)
[00:25:33] *** Quits: nerdraven (~nerdraven@196.45.51.47) (Ping timeout: 265 seconds)
[00:27:33] <p-i-> gottit https://bpa.st/TFMA#1L52
[00:27:52] *** Quits: LemurP (~lemurp@109.74.190.250) (Quit: WeeChat 2.8)
[00:28:24] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:28:25] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[00:28:30] <p-i-> This trio<-->asyncio bridge makes things SO simple. (at least the things I'm doing).
[00:28:55] *** Quits: armandokeller (~armandoke@200.159.170.169) (Quit: Client closed)
[00:29:19] <p-i-> Just need to be aware of whether the async-method I'm in is trio or asyncio flavour (which is determined by the callsite)
[00:29:23] *** Quits: u0_a117 (~u0_a117@191.35.79.147) (Ping timeout: 272 seconds)
[00:29:23] <graingert> p-i-: why are you starting a nursery there?
[00:29:45] <p-i-> And if it makes any calls to an async method of the other flavour, they must be wrapped
[00:30:27] <graingert> you can just do `await client.run_until_disconnected()`
[00:30:49] <p-i-> Because I'm going to need to send messages also. I want to send a message and measure the roundtrip to receiving it.
[00:31:20] <graingert> it's not clear why you'd need a nursery for that
[00:31:24] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[00:31:25] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[00:31:33] <graingert> you should ask in the trio gitter
[00:31:49] <p-i-> Yes! ok I'll do that
[00:32:44] *** Quits: DrNostril (~DrNostril@82.102.21.68) (Remote host closed the connection)
[00:33:08] *** Joins: DrNostril (~DrNostril@82.102.21.68)
[00:33:33] *** Joins: firepup (~firepup@d108-172-166-200.bchsia.telus.net)
[00:33:44] *** Quits: srhm (~ascii@user/srhm) (Ping timeout: 252 seconds)
[00:34:18] *** Joins: Betal (~Beta@user/betal)
[00:34:20] <firepup> is there a reason why running pip as root is going to break packages and perms?
[00:34:42] <grym> firepup: it'll fight with your distro about who owns what in site-packages
[00:34:47] <matsaman> ^
[00:34:50] <grym> and that's a land mie
[00:34:53] <grym> minefield*
[00:34:56] <matsaman> you don't want to mix personal stuff into system stuff
[00:35:02] <matsaman> keep it in ~/
[00:35:09] <firepup> ty, i guess i will get venv to not have to deal with it then
[00:35:16] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[00:35:28] <matsaman> you shouldn't have to consider using pip as root, either, though
[00:35:47] <grym> firepup: venv +1
[00:36:09] <grym> there are a few GPIO happy packages for raspi that sure want root
[00:36:13] <grym> other than that...
[00:36:17] <grym> verboten
[00:36:21] <firepup> unfortunately matsaman, my distro doesn't consider the existence of non-root users lol
[00:36:30] <grym> firepup: venvs do!
[00:36:55] <firepup> well yes c:
[00:37:20] *** Quits: lethu (~lethu@196.117.196.82) (Quit: Quit())
[00:38:00] <Lvl4Sword> firepup, That sounds like a horrible distro :|
[00:38:16] <firepup> not exactly per se
[00:38:17] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:38:23] *** Joins: srhm (~ascii@user/srhm)
[00:38:31] *** Joins: thiras (~thiras@user/thiras)
[00:38:43] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:40:02] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[00:41:00] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:41:06] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[00:41:26] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[00:41:54] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[00:42:09] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[00:42:57] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[00:43:18] *** Joins: northernsage (~northerns@187.107.158.146)
[00:44:01] <matsaman> firepup: you can't make a non-root user as a root user? =)
[00:44:09] <matsaman> I can imagine such a system ... just
[00:44:29] <grym> i too have written code to run on many user university compute clusters!
[00:44:42] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[00:44:43] <firepup> originally it didnt have a non-root user
[00:44:45] <grym> i ... built python in ${HOME} and went on my merry way
[00:44:51] <firepup> later on they would add it.
[00:44:59] <firepup> but for this version the non-root is experimental
[00:45:06] <matsaman> I hate "security" through obnoxiousness
[00:45:36] *** Quits: jbeimler (~quassel@75.177.73.34) (Changing host)
[00:45:36] *** Joins: jbeimler (~quassel@user/jbeimler)
[00:45:36] <firepup> and the root/non-root system is done via savefiles. so i would have to make a 2nd savefile as non-root
[00:46:30] *** Quits: jbeimler (~quassel@user/jbeimler) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:46:41] <Lvl4Sword> That sounds needlessly complicated
[00:46:47] *** Quits: rozbb (~ksundar@pool-96-239-34-154.nycmny.fios.verizon.net) (Quit: Leaving)
[00:47:03] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[00:47:37] <firepup> perhaps i explained it in a complicated way :|
[00:48:28] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[00:49:55] *** Quits: anas (~anas@196.224.48.47) (Ping timeout: 268 seconds)
[00:50:31] *** Quits: staticvoidmaine (~staticvoi@cpe-184-153-179-95.maine.res.rr.com) (Quit: staticvoidmaine)
[00:50:48] *** Joins: Naan (~naan@user/naan)
[00:51:54] <firepup> https://bkhome.org/archive/puppylinux/technical/root.htm a document explaining why we have this albeit weird system. apologies if there was a no link rule.
[00:52:48] *** Quits: northernsage (~northerns@187.107.158.146) (Quit: leaving)
[00:52:55] <hodapp> if posting links is wrong, I don't wanna be right
[00:53:01] *** Joins: northernsage (~northerns@187.107.158.146)
[00:53:07] *** Quits: aslicedbanjo (~aslicedba@81.141.54.228) (Quit: Leaving.)
[00:53:12] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[00:53:12] <SnoopJ> links are fine
[00:53:21] <p-i-> habnabit_: That paste really shook something loose. I can't believe how much progress I've made tonight. Thankyou!
[00:53:30] <SnoopJ> also cool, Puppy Linux :)
[00:53:46] *** Quits: mekhami (~lawrence@135.84.115.18) (Quit: WeeChat 2.8)
[00:53:50] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[00:54:01] <matsaman> puppy linux has no purpose, IMO
[00:54:04] <Tashtari> Is there an established implementation of a sliceable, byte-addressable file object in Python?  Like, you open a file 'rb' and can effectively treat it as a memoryview?
[00:54:27] <SnoopJ> matsaman, what purpose does that sort of unsolicited opinion serve?
[00:54:34] <Tashtari> (Without reading the whole thing first, I mean)
[00:55:09] <SnoopJ> Tashtari, most file-like objects let you do this by doing a seek() and then read()
[00:55:30] <SnoopJ> but "sliceable" there makes me think you want to do this by indexing?
[00:55:30] <grawity> Tashtari: I think you're basically asking for mmap.mmap()
[00:55:31] <matsaman> SnoopJ: whatever "also cool, Puppy Linux :)" does I suppose
[00:56:03] <SnoopJ> matsaman, my purpose was to show that I was interested in the thing this user is. I cannot say I attribute your derision to the same purpose.
[00:56:09] <Tashtari> SnoopJ: Yeah, that's part of it.  Basically I want it to appear the same as a bytes/bytearray/memoryview to anything that might use it - and to be able to slice off subsets of it that are treated the same way.
[00:56:17] <Tashtari> grawity: Hmm, let me have a looksee...
[00:56:18] <grawity> since in other languages this is typically done through mmap/CreateFileMapping, and not through file objects
[00:56:34] <SnoopJ> mmap might be what you want, yea
[00:56:35] <matsaman> my purpose was to show that I appreciate people not wasting their own time
[00:56:57] <Tashtari> Oh, cool, I'm pretty sure this is exactly what I had in mind.
[00:57:06] <Tashtari> Thaks grawity.
[00:57:08] <Tashtari> Thanks, even
[00:57:18] <SnoopJ> matsaman, considering the messages you share in #python I am skeptical of whether you do appreciate anything
[00:57:35] <SnoopJ> since they are mostly "I don't like X" or "nobody should use X"
[00:57:44] *** Joins: sadg (~odd@193.32.249.162)
[00:57:47] <grawity> the way mmap works is that the OS *literally* gives you a memoryview, it's not even "effectively" emulated or anything
[00:58:36] *** Joins: cecep (~weechat@dynamic-089-014-096-119.89.14.pool.telefonica.de)
[00:59:03] <matsaman> SnoopJ: talk about derision =P
[00:59:04] <SnoopJ> pages in parts of the file as needed (on access), right?
[01:00:44] *** Joins: Liblx (~Alex@ip4d15ff03.dynamic.kabel-deutschland.de)
[01:00:59] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[01:01:24] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 250 seconds)
[01:01:49] *** Quits: aquijoule_ (~richbridg@213-225-12-210.nat.highway.a1.net) (Quit: Leaving)
[01:01:52] <SnoopJ> matsaman, contempt does fit, yes
[01:02:04] *** Joins: aquijoule_ (~richbridg@213-225-12-210.nat.highway.a1.net)
[01:02:11] *** aquijoule_ is now known as richbridger
[01:02:13] *** Joins: jbeimler (~quassel@user/jbeimler)
[01:02:36] <matsaman> that's just contemptible
[01:02:44] *** Joins: vimart (~vimart@85.255.235.56)
[01:05:33] *** Joins: ponadm_ (pony@gateway/vpn/protonvpn/ponadm)
[01:05:41] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 258 seconds)
[01:05:57] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[01:06:08] *** Quits: richbridger (~richbridg@213-225-12-210.nat.highway.a1.net) (Remote host closed the connection)
[01:06:44] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[01:07:28] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[01:07:29] *** Joins: richbridger (~richbridg@213-225-12-210.nat.highway.a1.net)
[01:08:46] <firepup> ok by the comment #you cannot run it directly, they mean i cant simply type $path/activate and run venv?
[01:08:55] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[01:09:50] <SnoopJ> firepup, what comment?
[01:10:05] <firepup> oh wait im dumb. i needed to prefix source to get it to work
[01:10:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:12:54] *** Joins: Vonter (~Vonter@user/vonter)
[01:12:57] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 244 seconds)
[01:13:08] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:13:25] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:13:43] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[01:14:39] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[01:14:39] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[01:14:57] *** Joins: northernsage (~northerns@187.107.158.146)
[01:16:37] <Tashtari> grawity: Am I right to assume that it's not -quite- the same as a memoryview object?  Like if I subscript an mmap object, it creates a bytes object, which I assume is effectively the same as a seek followed by a read - a copy of the memory whose indices I referenced rather than the memory itself?
[01:17:08] <Tashtari> I suppose, actually, that that's an implementation detail...
[01:17:15] *** Quits: Barones (~Barones@2804:48dc:8500:0:188c:f4ce:5e7e:aede) (Remote host closed the connection)
[01:17:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[01:17:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:17:36] *** Joins: Barones (~Barones@2804:48dc:8500:0:3100:1852:23b9:80b6)
[01:17:51] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[01:18:22] <bjs> Tashtari: a Python `bytes` object is always a copy of the bytes
[01:19:08] <bjs> Tashtari: you should be able to assign to a slice of a mmap object though, like `some_mmap[3:13] = ...` to modify the memory
[01:19:18] <Tashtari> Yeah, I can do that.
[01:19:20] *** Parts: firepup (~firepup@d108-172-166-200.bchsia.telus.net) ()
[01:19:40] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 244 seconds)
[01:19:50] *** Joins: firepup (~firepup@d108-172-166-200.bchsia.telus.net)
[01:20:07] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[01:20:15] <Tashtari> If I create a memoryview of a slice of the mmap, I'm copying that part of the mmap to a bytes object and then creating a memoryview of the bytes object... but I can also create a memoryview of the mmap object itself.
[01:20:43] <SnoopJ> if you can memoryview(the_mmap) and then slice *that* though
[01:20:51] <Tashtari> Yeah.
[01:21:00] <Tashtari> That, I think, is what I want to do if I want to minimize unnecessary duplications...
[01:21:04] <Tashtari> Neat.
[01:21:11] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[01:21:34] <Tashtari> I assume that's possible because mmap objects implement the "buffer protocol"?
[01:22:13] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:23:20] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:23:30] <SnoopJ> I believe so
[01:23:39] <SnoopJ> but it sounds like you're more interested in the behavior than the implementation?
[01:23:41] *** Joins: akaWolf (~akaWolf@akawolf.org)
[01:23:45] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-19fa-19fb-303f-0075.res6.spectrum.com) (Read error: Connection reset by peer)
[01:23:46] <Tashtari> Well, a bit of both, really.
[01:24:01] <Tashtari> There's no mention of the buffer protocol in the documentation for mmap.  I suppose I could test it by mmapping a large file and see if the python process's memory footprint grows accordingly.
[01:24:18] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[01:24:52] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[01:25:04] <SnoopJ> it says that it behaves like a bytearray, but it doesn't explicitly talk about the buffer protocol there, no
[01:25:52] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 244 seconds)
[01:26:08] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[01:26:27] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 265 seconds)
[01:27:07] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[01:27:08] <SnoopJ> mmap's implementation is a little less abstract anyway, though, since there are different things to do on each target platform, I think
[01:28:02] <SnoopJ> but I think the interaction between memoryview and mmap would use the protocol yep
[01:29:05] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-df50-9334-2200-b3b6.res6.spectrum.com) (Remote host closed the connection)
[01:29:06] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[01:29:18] <Tashtari> Yup, it certainly does seem like it.
[01:29:22] <Tashtari> I like it.
[01:29:45] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[01:30:54] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[01:31:19] *** Quits: Konsgn (~Konsgnx3@66-109-34-138.static.firstlight.net) (Quit: Leaving)
[01:31:46] *** Quits: vimart (~vimart@85.255.235.56) (Ping timeout: 265 seconds)
[01:32:52] *** Quits: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl) (Remote host closed the connection)
[01:34:37] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[01:36:10] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[01:36:27] *** Joins: control (guesswho@user/control)
[01:36:52] *** Quits: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com) (Read error: Connection reset by peer)
[01:37:59] *** Quits: billoday (~bill@cpe-104-228-202-125.maine.res.rr.com) (Quit: WeeChat 3.1)
[01:39:08] *** Quits: m0nkey_ (~quassel@user/m0nkey/x-3352227) (Quit: Quit)
[01:41:20] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[01:41:26] *** Quits: DrNostril (~DrNostril@82.102.21.68) (Ping timeout: 265 seconds)
[01:41:41] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[01:41:46] *** Joins: m0nkey_ (~quassel@user/m0nkey/x-3352227)
[01:41:57] *** Joins: mickey (~user@user/mickey)
[01:42:11] *** Joins: damoreno (~damoreno@redhat/damoreno)
[01:43:14] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[01:43:24] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 252 seconds)
[01:44:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[01:44:51] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[01:45:05] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[01:45:50] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[01:46:05] *** Joins: northernsage (~northerns@187.107.158.146)
[01:46:10] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[01:46:29] <damoreno> Hey. I'm trying to safe dump a class that contains an enum reference but I'm getting a RepresenterError. This is an example of the code reproducing my problem https://bpa.st/DSDQ. What can I do to solve it using safe_dump?
[01:46:38] *** Joins: djapo (~archangel@user/djapo)
[01:47:51] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[01:49:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:49:21] *** Quits: niko (~niko@libera/staff/niko) (Quit: EOF)
[01:51:10] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[01:54:03] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Ping timeout: 268 seconds)
[01:54:04] *** Quits: magla (~gelignite@55d4266d.access.ecotel.net) (Quit: Stay safe!)
[01:54:25] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:54:37] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[01:55:13] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[01:55:29] *** Joins: o (~niko@libera/staff/niko)
[01:56:37] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[01:57:05] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[01:57:15] *** Joins: nerdraven (~nerdraven@196.45.51.47)
[01:58:03] *** Joins: korg815 (~korg815@user/korg815)
[01:58:13] *** Joins: jess (~jess@libera/staff/jess)
[01:59:19] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:00:14] *** Quits: firepup (~firepup@d108-172-166-200.bchsia.telus.net) (Read error: Connection reset by peer)
[02:00:41] <bjs> damoreno: looking at the pyyaml docs y ou'll probably have to add a representer and constructor for the enums
[02:01:32] <bjs> I think the usual dumper would just call the Enum constructor but of course those can do arbitrary things and so it's not considered safe,  possibly?
[02:01:32] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[02:01:38] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[02:01:58] *** Joins: northernsage (~northerns@187.107.158.146)
[02:02:34] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:02:45] *** Joins: heco (~redrum@user/redrum88)
[02:06:24] *** Quits: DodgeThis (~DodgeThis@246.102.90.149.rev.vodafone.pt) (Ping timeout: 250 seconds)
[02:06:41] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 244 seconds)
[02:06:55] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 272 seconds)
[02:07:26] <shodan45> in a virtualenv, I can run bin/python myscript.py without source-ing bin/activate. Is that a lucky accident, or is that an OK way to run a script?
[02:08:28] <Liblx> hello, when i am sorting the index of a dataframe it sorts 279 before 28. how can i make it sort by normal numbers ....,8,9,10,...?
[02:08:28] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[02:08:39] <Liblx> thanks for all ideas!
[02:08:42] *** Joins: northernsage (~northerns@187.107.158.146)
[02:08:45] <ChrisWarrick> shodan45: activation is optional and only for human convenience
[02:09:00] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[02:09:50] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[02:10:36] <grym> shodan45: that is not accidental, and sometimes required (e.g., crontab)
[02:11:42] *** Joins: DodgeThis (~DodgeThis@246.102.90.149.rev.vodafone.pt)
[02:12:12] <shodan45> ah ok, cool.... how does it work? the python binary knows to look for a virtualenv?
[02:12:46] <akk> shodan45: Mostly what a virtualenv does is set up paths, like PATH and PYTHONPATH (look in the activate script to see the details).
[02:13:32] <akk> You can do those things yourself in a script, or else it'll use whatever python is already in your path.
[02:13:46] *** Quits: y2o (~y2o@pc-128-133-45-190.cm.vtr.net) (Ping timeout: 250 seconds)
[02:13:50] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[02:15:26] <grym> shodan45: yeah, look at venv/pyvenv.cfg
[02:15:30] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2)
[02:16:43] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[02:17:42] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[02:17:44] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[02:18:00] *** Joins: lethu (~lethu@196.117.196.82)
[02:18:06] *** Parts: cinix (~cinix__@c-73-60-53-69.hsd1.nh.comcast.net) (Leaving)
[02:18:56] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[02:20:13] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 272 seconds)
[02:20:26] *** Joins: pnoud (~pnoud@user/pnoud)
[02:20:41] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[02:21:33] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:21:35] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[02:22:38] *** Joins: Elodin (~weechat@user/elodin)
[02:23:22] <CuriousErnestBro> how can I trick python into becoming cron on a different thread?
[02:23:34] <CuriousErnestBro> (executing a function)
[02:23:53] <FunkyBob> i did something like that using signals...
[02:24:36] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[02:24:39] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[02:25:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[02:25:54] <Samian> what's the trick of using % in the print statement again?
[02:25:56] *** Joins: thiras (~thiras@user/thiras)
[02:26:07] <Samian> print("Number % is the answer", n)
[02:26:09] <Samian> something like that
[02:26:11] <Samian> I forgot
[02:26:18] *** Quits: Barones (~Barones@2804:48dc:8500:0:3100:1852:23b9:80b6) (Quit: Leaving)
[02:26:19] <Samian> %s I htink? let me try
[02:26:22] <bjs> Samian: it's not a trick, and it's not anything to do with print. It's just string formatting
[02:26:26] <grym> Samian: print(f'Number {n} is the answer')
[02:26:27] <grym> :)
[02:26:28] <SnoopJ> Samian, 1) print() is a function in modern Python 2) it does not have interpolation functionality
[02:26:33] *** Quits: nerdraven (~nerdraven@196.45.51.47) (Ping timeout: 272 seconds)
[02:26:39] <bjs> Samian: "Number %d is the answer" % n   is the old way of doing string formatting
[02:26:47] <Samian> ahhhh that's it!!!!!
[02:26:47] <bjs> Samian: nowadays you'd just write   f"Number {d} is the answer"
[02:26:52] <Samian> bjb  I love it the old way!
[02:26:57] <grym> yich
[02:26:59] <Samian> what's the f mean?
[02:27:01] <bjs> Samian: the old way wasn't very good
[02:27:02] <bjs> Samian: format
[02:27:11] *** Joins: p-i-_ (~Ohmu@node-noc.pool-118-173.dynamic.totinternet.net)
[02:27:24] <bjs> SnoopJ: "in modern Python 2"  :)
[02:27:25] *** Quits: p-i- (~Ohmu@node-mzz.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:28:01] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:28:23] <SnoopJ> I knew I should have gone with (1), (2)
[02:29:08] *** Quits: Akuli (~Akuli@2001:999:40:c1fe:21e:65ff:fe37:6b62) (Quit: Leaving)
[02:30:24] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[02:30:40] *** Joins: northernsage (~northerns@187.107.158.146)
[02:30:57] <CuriousErnestBro> here I don't understand what they mean by "outside world" https://docs.python.org/3/library/sched.html
[02:31:09] *** Quits: maname (~maname@p200300c3ef2d3000e1b8716fc00672fb.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:31:29] <fbiagent> can someone please help me understand why this timezone stuff is not working.. I'd expect datetime to give the same result as the website, but it does not: https://bpa.st/DA2A
[02:32:19] <fbiagent> CuriousErnestBro, outside world just means anything that uses it
[02:32:41] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[02:33:13] *** Joins: CombatVet (~c4@user/combatvet)
[02:33:14] <fbiagent> the above timezone issue is causing a problem for me with a third party api which requires me to submit data in my local timezone and gives it back as UTC. It is helpfully converting it incorrectly which means I can actually not address the required date/time period (lol!)
[02:33:15] <Wulf> fbiagent: what's dt?
[02:33:22] <fbiagent> Wulf, oops, import datetime as dt
[02:34:11] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:36:09] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-df50-9334-2200-b3b6.res6.spectrum.com)
[02:36:10] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[02:36:21] *** Joins: northernsage (~northerns@187.107.158.146)
[02:36:56] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[02:37:10] *** Quits: srhm (~ascii@user/srhm) (Ping timeout: 244 seconds)
[02:37:27] *** Quits: lethu (~lethu@196.117.196.82) (Quit: Quit())
[02:38:19] <Wulf> fbiagent: that's quite strange.
[02:38:47] <fbiagent> Wulf, indeed...
[02:39:12] <fbiagent> worst part is that because it is being helpfully converted for me, I cannot access the data I need to access in the required time which is just... so fun
[02:39:22] <akk> What's the strange part? Seems like they both have hour=14, I must be missing it.
[02:39:49] <akk> Oh, that 56 came out of nowhere?
[02:39:51] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[02:39:53] <fbiagent> akk, minute=56
[02:39:57] <fbiagent> yes!
[02:40:18] *** Quits: control (guesswho@user/control) (Ping timeout: 268 seconds)
[02:40:47] *** Quits: brownan (~brownan@136.56.137.143) (Ping timeout: 244 seconds)
[02:41:05] <Wulf> fbiagent: looks like it's taking into account the longitude of the location
[02:41:19] <fbiagent> Wulf, it does seem that way
[02:41:33] <fbiagent> very accurate, any way I can get it to be less accurate?
[02:42:53] <fbiagent> ah seems like we are not meant to use the tzinfo argument
[02:42:54] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[02:42:57] <fbiagent> oh fun
[02:43:08] <akk> Weird, it also does it for America/Chicago and America/Los_Angeles but not America/Denver
[02:43:08] *** Joins: northernsage (~northerns@187.107.158.146)
[02:43:35] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:43:52] <fbiagent> pytz.timezone("America/New_York").localize(dt.datetime(2021,6,25,10)).astimezone(pytz.utc)
[02:43:52] <fbiagent> datetime.datetime(2021, 6, 25, 14, 0, tzinfo=<UTC>)
[02:43:57] <fbiagent> ^^ above was the fix
[02:44:11] <fbiagent> now I have to figure out how to get the third party to not convert for me
[02:44:16] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 265 seconds)
[02:44:21] <fbiagent> might have to lie about my timezone
[02:44:25] <akk> Another way that works: dt.datetime(year=2021,month=6,day=25,hour=10,minute=0).astimezone(pytz.timezone("America/New_York")).astimezone(dt.timezone.utc)
[02:44:40] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[02:44:57] <fbiagent> never heard the "dont use tzinfo argument" gotcha before
[02:45:14] <fbiagent> now we all know I guess until someone comes in and explains why it wrong
[02:46:05] <fbiagent> problem fixed, thanks for your help guys
[02:47:51] *** Quits: the_emperor (~the_emper@103.60.172.10) (Quit: Leaving)
[02:50:00] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[02:51:34] <OnlineCop> I'm using the `regex` (not `re`) module. I've compiled a pattern with `regex.compile()` with the `regex.X` flag (extended, to allow comments and whitespace). I would like to extract the compiled pattern from it, without the comments. Would this be possible?
[02:53:11] <OnlineCop> `re_pattern = regex.compile(r''' ...stuff1... [newline] # Some useful comment [newline] ...stuff2...''', regex.X | regex.V1)`
[02:53:57] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[02:54:20] *** Joins: supakeen (~user@python/site-packages/supakeen)
[02:55:22] <OnlineCop> I'm attempting to inject more patterns within `stuff1` and `stuff2`, but the .format() command is having problems when I use '{' or '}' within it. Hence, I'm trying to remove the comments so I can use `.format(another_pattern)` (this is for legacy 2.7 and 3.x code).
[02:55:25] *** Seattle is now known as Maple
[02:56:04] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 272 seconds)
[02:56:26] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[02:56:34] *** Joins: derelict (~derelict@user/derelict)
[02:56:52] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Quit: leaving)
[02:57:27] <MrAureliusR> if I want to test out the preview build of python (on linux), what's the safest/best way to do it? my instinct is to build it with --prefix=/usr/local but I don't know if the Makefile touches anything else?
[02:57:27] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[02:57:56] *** Joins: northernsage (~northerns@187.107.158.146)
[02:58:40] *** Quits: fofoni_ (~fofoni@user/fofoni) (Remote host closed the connection)
[02:59:08] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[03:00:30] *** Quits: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7) (Ping timeout: 272 seconds)
[03:01:08] <bjs> MrAureliusR: depending on what you mean by "preview",  but perhaps the easiest way is to use something like pyenv to just grab whatever the main git branch is
[03:01:29] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[03:01:31] <MrAureliusR> sorry, the prerelease version, 3.10.0b3 I think it is?
[03:01:42] <MrAureliusR> never used pyenv, will take a look
[03:02:15] *** Quits: damoreno (~damoreno@redhat/damoreno) (Remote host closed the connection)
[03:02:29] <bjs> MrAureliusR: https://github.com/pyenv/pyenv  it's just some shell scripts that can clone+build+install multiple versions of Python. on my system it e.g. puts them all into ~/.pyenv/  and so its prefix doesn't mess with anything on your system
[03:03:16] <MrAureliusR> oh nice
[03:03:17] <bjs> MrAureliusR: you can just `pyenv install 3.10.0b3 && pyenv global 3.10.0b3` then `python3` is version 3.10.0b3
[03:03:39] <MrAureliusR> well, I'd like it to be installed as like python-preview or something
[03:04:15] <MrAureliusR> just so it doesn't take precedence over the system python
[03:04:34] <MrAureliusR> also, looking at what's new in 3.10 and oh boy, the new error messages are SO much better
[03:05:37] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[03:05:43] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[03:06:35] <bjs> MrAureliusR: pyenv just puts stuff in a local easy-to-reach directory. I don't think it has the "python-preview" name or anything,  but that sounds like a easy job for your shell aliases
[03:07:09] *** Joins: ph88^ (~ph88@2a02:8109:9e00:7e5c:7c55:3c65:74e1:3dc5)
[03:07:12] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[03:07:39] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 244 seconds)
[03:14:07] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[03:17:48] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:18:08] <kevr> is there any nicer way to get the first element of a list than using [0]?
[03:18:18] <KirkMcDonald> Nicer how?
[03:18:19] <kevr> i hate that subscript shit
[03:18:40] <KirkMcDonald> I guess if you prefer there is next(iter(L))
[03:18:42] <kevr> KirkMcDonald: pure function, like, how some query languages have .first(), for example
[03:18:51] <kevr> or some other structures have like .front()
[03:18:52] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[03:18:54] <kevr> .back() or whatever
[03:19:00] *** Joins: upsala (~zcb@193.32.249.134)
[03:19:01] <KirkMcDonald> But that does not strike me as better than just indexing the thing.
[03:19:06] <kevr> KirkMcDonald: ah, yeah, that is what i settled on, but hm..
[03:19:15] <kevr> KirkMcDonald: it is definitely not technically better.
[03:19:19] <kevr> Just less indices. :P
[03:19:30] <kevr> complete aesthetic-based thing here.
[03:19:57] * kevr wishes that next() would take an iterable, not just an iterator!
[03:20:08] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 272 seconds)
[03:20:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:20:44] <northernsage> well, you can always extend the list type and define your own function...
[03:20:55] <kevr> meh
[03:21:08] <northernsage> but I would go with indexing tbh
[03:21:25] <kevr> it's all good, i'm not going to violate the standard just to get things perfectly aesthetic. i appreciate the suggestion though.
[03:23:00] <jiffe> if I'm using asyncio for handling a tcp connection, is there also a way for me to send noop msgs at intervals ?
[03:25:45] *** Quits: DodgeThis (~DodgeThis@246.102.90.149.rev.vodafone.pt) (Read error: Connection reset by peer)
[03:26:15] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 244 seconds)
[03:27:07] *** Quits: cedric (~cedric@2a01:cb11:867:c200:d75f:fc18:dd28:1769) (Quit: Konversation terminated!)
[03:31:07] *** Joins: diek (~diek@187.36.4.113)
[03:31:51] *** Joins: lethu (~lethu@196.117.196.82)
[03:33:31] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[03:33:41] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[03:33:55] *** Quits: upsala (~zcb@193.32.249.134) (Quit: WeeChat 3.2)
[03:33:57] <Samian> do you guys consider this a good unit test file? https://github.com/pytorch/FBGEMM/blob/master/fbgemm_gpu/test/split_table_batched_embeddings_test.py
[03:34:14] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[03:34:17] <Samian> I ask because I can hardly understand it. I can't find where it's checking against ground truth values
[03:34:36] <Samian> isn't that the point of unit tests? To check the results against ground truth values?
[03:35:17] <SnoopJ> Samian, the point of unit tests is to test the functionality of the associated "unit"
[03:35:33] <SnoopJ> "results against ground truth values" sounds a lot more like end-to-end testing
[03:35:58] <Samian> I'm trying to see if correctness is being tested in that link
[03:36:11] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:36:40] *** Joins: ripdog (~quassel@user/ripdog)
[03:36:52] <Samian> SnoopJ  I see it's using import unittest.  Maybe I'm having a hard time because I don't know how to use unittest
[03:37:26] <SnoopJ> this certainly looks like a correctness test: https://github.com/pytorch/FBGEMM/blob/master/fbgemm_gpu/test/split_table_batched_embeddings_test.py#L337-L342
[03:37:42] <SnoopJ> but I agree, this is very difficult to read
[03:38:42] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[03:38:43] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[03:39:15] *** Joins: northernsage (~northerns@187.107.158.146)
[03:39:33] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:39:33] *** Wulf4 is now known as Wulf
[03:40:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:40:51] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[03:41:37] *** Joins: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13)
[03:41:38] *** Joins: dominique_michel (~Dominique@mob-194-230-158-179.cgn.sunrise.net)
[03:41:42] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[03:48:30] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[03:50:29] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:56:53] *** Quits: cheater (~Username@user/cheater) (Quit: (BitchX) If you gaze into the abyss, the abyss gazes also into you)
[03:57:07] *** Quits: northernsage (~northerns@187.107.158.146) (Ping timeout: 272 seconds)
[03:57:52] *** Joins: Guest1234 (~Guest1234@77.127.135.213)
[03:58:11] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[03:58:15] <Guest1234> Hi, there is a way to work with pathlib and "in-memory file"/ stringio?
[03:59:38] <rockSTONE> i think i may have asked this before, but i have new requirements this time ... what's everyone's favourite "schema" validator/creator library to use ... to handle stuff like configuration layout and/or forms ... something that can preferably be modeled using yaml  (better) or json
[03:59:51] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[04:01:32] <nedbat> Guest1234: pathlib only knows how to open real files.  what are you trying to do?
[04:02:15] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[04:02:22] <Guest1234> I'm trying to serialize some data into file, that a lot of data so for the tests I want to check it with stringIO or similar
[04:02:36] <Guest1234> Just to make sure that serializes ok
[04:03:16] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[04:03:40] *** Joins: supakeen (~user@python/site-packages/supakeen)
[04:04:18] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[04:04:39] *** Joins: noarb- (~noarb@user/noarb)
[04:05:24] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 268 seconds)
[04:05:28] <nedbat> Guest1234: ok, so why not pass an open file-like object? Why use pathlib?
[04:06:14] <Guest1234> I can change my code to support it, just wanted to search for a way to do that out of the box
[04:06:43] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:06:55] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[04:08:08] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:08:10] *** Quits: ponadm_ (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 250 seconds)
[04:08:17] <nedbat> Guest1234: pathlib doesn't know about in-memory objects, so something has to change. it's a good idea to separate IO like opening files from the meat of the work anyway.
[04:08:43] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[04:09:02] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[04:09:37] <Guest1234> The current api for my class if to supply a file_path, this will force me to support getting file_path of file-like obj, which is kinda wierd to support both
[04:09:42] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[04:10:08] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[04:10:19] *** Joins: candy (~tvrtko@93-138-115-250.adsl.net.t-com.hr)
[04:10:19] <nedbat> Guest1234: refactor your class to have a function that works on an open file.  Have the file_path function use that first function. write tests for the first function.
[04:10:49] <Guest1234> Yea, ty :S
[04:12:44] <acresearch> people, i am trying to teach myself SSL based socket communication, i can't seem to the ssl to work properly, can someone help me understand what is the correct setup? here is my code so far: https://paste.debian.net/1202432/
[04:13:16] *** Quits: tvrtko (~tvrtko@93-136-56-13.adsl.net.t-com.hr) (Ping timeout: 244 seconds)
[04:15:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[04:17:24] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[04:17:40] *** Joins: cheater (~Username@user/cheater)
[04:18:01] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[04:18:23] *** Joins: zebrag_ (~chris@user/zebrag)
[04:18:35] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 250 seconds)
[04:21:17] *** Joins: pnoud (~pnoud@user/pnoud)
[04:21:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:23:54] *** Joins: meffis (4949ed1c@ircip1.mibbit.com)
[04:24:07] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[04:24:19] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[04:25:18] *** Joins: brownan (~brownan@136.56.4.163)
[04:26:03] *** Joins: akaWolf (~akaWolf@akawolf.org)
[04:26:15] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[04:26:52] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[04:28:15] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Lost terminal)
[04:32:03] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[04:32:50] *** Quits: Guest1234 (~Guest1234@77.127.135.213) (Quit: Client closed)
[04:33:04] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[04:34:09] <ph88^> can someone help me with geopandas? the map is not showing any colors for choropleth https://bpa.st/JRYA
[04:34:20] <meffis> hi, wondering about this https://bpa.st/U32A
[04:34:36] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 250 seconds)
[04:35:07] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:39:03] *** Joins: SlaveGeek334269 (~SlaveGeek@179.61.240.164)
[04:41:32] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 250 seconds)
[04:42:01] *** Joins: ionface (~ionface@user/ionface)
[04:42:47] *** Joins: CombatVet (~c4@user/combatvet)
[04:46:34] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:46:42] <nedbat> meffis: what are you wondering?
[04:47:01] <nedbat> meffis: oh, sorry, i see line 3 now
[04:49:27] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[04:51:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[04:51:56] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 250 seconds)
[04:52:42] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[04:54:57] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:55:06] *** Joins: CombatVet (~c4@user/combatvet)
[04:57:38] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:57:40] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[04:57:44] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[04:57:53] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[04:58:12] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[04:58:18] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[04:58:50] *** Joins: gline_ (~yashi@p508be03a.dip0.t-ipconnect.de)
[04:59:59] *** Parts: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) ()
[05:01:54] *** Quits: gline (~yashi@p508beab1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:02:21] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:14b:79f8:9a0b:e112) (Quit: Leaving)
[05:02:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[05:05:06] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[05:06:14] *** Joins: icy (~icy@user/icy)
[05:08:55] *** Joins: clawh (~clawh@185.244.214.60)
[05:09:18] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[05:10:14] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[05:11:05] *** Joins: wyclif (~wyclif@user/wyclif)
[05:11:16] *** Joins: clawh (~clawh@185.244.214.60)
[05:12:50] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:14:13] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[05:15:46] *** Quits: dominique_michel (~Dominique@mob-194-230-158-179.cgn.sunrise.net) (Ping timeout: 250 seconds)
[05:16:02] *** Joins: clawh (~clawh@185.244.214.60)
[05:16:42] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[05:17:01] *** Joins: qlixed (~qlixed@181.44.129.13)
[05:17:03] *** Joins: ano (~weechat@user/ano)
[05:23:38] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 272 seconds)
[05:25:05] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 244 seconds)
[05:25:31] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[05:26:22] *** Joins: wei2912 (~wei2912@112.199.250.21)
[05:27:41] *** Joins: gline (~yashi@p508be0c6.dip0.t-ipconnect.de)
[05:27:47] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[05:28:49] *** Joins: dominique_michel (~Dominique@mob-194-230-158-179.cgn.sunrise.net)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:01] *** Quits: gline_ (~yashi@p508be03a.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[05:32:23] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[05:32:42] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:34:19] *** Joins: noyb (~noyb@user/noyb)
[05:34:44] *** Joins: vlm (~vlm@user/vlm)
[05:34:50] *** Joins: cecep_ (~weechat@x4db7b631.dyn.telefonica.de)
[05:35:17] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[05:35:20] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[05:36:06] *** Quits: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13) (Remote host closed the connection)
[05:36:39] *** Joins: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13)
[05:37:41] <Samian> This makes no sense. I have import os print(os.getcwd()) and compare that to running python in a terminal window, and running the same command. Both show the same directory, however in the terminal I can import fbg, but when running the py file it says ModuleNotFoundError
[05:37:44] <Samian> any ideas?
[05:37:52] *** Quits: cecep (~weechat@dynamic-089-014-096-119.89.14.pool.telefonica.de) (Ping timeout: 250 seconds)
[05:38:06] *** Quits: brownan (~brownan@136.56.4.163) (Remote host closed the connection)
[05:38:10] <Samian> oh the py file is one directory down. I run it by doing ./test/test.py
[05:38:31] *** Joins: brownan (~brownan@136.56.4.163)
[05:38:33] *** Quits: lidless (~lidless@user/jabberwock) (Ping timeout: 256 seconds)
[05:39:36] <BtbN> What do you mean, when running the py file?
[05:40:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[05:40:13] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[05:40:16] <Samian> ehh sorry. Running the file from the terminal works.  It's running the code in vscode where it doesn't find the module
[05:40:36] <Samian> BtbN  I'm trying to run a python script.
[05:40:43] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:40:47] <BtbN> Are you sure you are using the same interpreter?
[05:41:06] *** Quits: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13) (Ping timeout: 244 seconds)
[05:42:38] <Samian> I just run sys.version and it states 3.8.5
[05:42:51] <BtbN> That doesn't mean it's the same interpreter
[05:42:55] <BtbN> just one of the same version
[05:43:14] <BtbN> One could be using some venv, while the other doesn't.
[05:43:17] <Samian> ah I think that's it
[05:43:46] <Samian> different environment I hitnk
[05:45:31] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[05:45:41] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[05:46:11] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:b401:1d9:cf08:e9d0) (Remote host closed the connection)
[05:47:12] <derek_v> meffis: I'm not sure, but I think maybe where you have n.append(speech[i*2]) you need something like n = [n, speech[i*2]]
[05:47:22] <Samian> okay now I know for sure we're running the same environment
[05:48:25] <Samian> vscode still gives an exception while the terminal window does not :/
[05:50:10] *** Joins: gline_ (~yashi@p5b241fe4.dip0.t-ipconnect.de)
[05:50:34] <Samian> ah I figured it out.. I had the same repo cloned in two different directories. I though I was modifying the launch.json of one but actually the other
[05:51:30] *** Quits: ph88^ (~ph88@2a02:8109:9e00:7e5c:7c55:3c65:74e1:3dc5) (Ping timeout: 272 seconds)
[05:51:39] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[05:51:57] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[05:52:38] <Samian> my clumsiness, forgetfulness, and failure to pay attention to detail makes me look like a total idiot
[05:53:08] *** rud0lf is now known as rud1lf
[05:53:27] *** Joins: wyclif (~wyclif@user/wyclif)
[05:53:34] *** Quits: gline (~yashi@p508be0c6.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[05:55:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[05:55:25] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[05:56:13] *** rud1lf is now known as miktemp0
[05:56:53] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[05:57:33] *** miktemp0 is now known as rud0lf
[05:57:58] *** Quits: akk (~akk@75.161.144.97) (Quit: +++)
[05:58:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[06:00:04] *** Quits: flyback (~flyback@2601:540:8201:1e60:d552:e2c3:6e2:62ad) (Remote host closed the connection)
[06:00:34] *** Joins: srhm (~ascii@user/srhm)
[06:00:58] <Samian> does it mean anything special when a path starts with a double slash?
[06:01:03] *** Joins: flyback (~flyback@2601:540:8201:1e60:a437:18b2:7a48:9163)
[06:01:04] *** Joins: pete443_ (~pete@user/pete443)
[06:01:21] <Samian> like torch.ops.load_library("//deeplearning/fbgemm/fbgemm_gpu:sparse_ops")
[06:01:37] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: rebooting...)
[06:01:59] *** Quits: srhm (~ascii@user/srhm) (Read error: Connection reset by peer)
[06:02:14] <ssbr_> Samian: that looks like a Bazel path.
[06:02:15] *** Joins: srhm (~ascii@user/srhm)
[06:02:30] *** Quits: srhm (~ascii@user/srhm) (Client Quit)
[06:02:38] *** Quits: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net) (Ping timeout: 252 seconds)
[06:03:00] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 250 seconds)
[06:03:01] <grym> protobuf maybe
[06:03:04] <ssbr_> Samian: double slash means "start from the root", slashes separate directories, and then ":foo" is the build rule within the directory. So this likely corresponds to a file like path/to/repo/deeplearning/fbgemm/fbgemm_gpu/sparse_ops.py (or whatever the filename is for the sparse_ops rule)
[06:03:14] <grym> torch is built with cmake
[06:03:36] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[06:04:12] <Samian> thanks
[06:04:33] <Samian> how can I learn this stuff. I want to be selfsufficient but I need the resources
[06:04:37] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:04:48] <ssbr_> Samian: I don't think anyone is expected to randomly know Bazel except google engineers
[06:04:54] *** Joins: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13)
[06:05:05] <ssbr_> Samian: but if I'd had *no idea*, I'd start with the docs for load_library. If it was undocumented, I'd read the source code.
[06:05:14] <ssbr_> you can trace through this way until you figure out wtf it's doing
[06:05:29] <Samian> well, that line of code is here: https://github.com/pytorch/FBGEMM/blob/master/fbgemm_gpu/test/split_table_batched_embeddings_test.py
[06:05:37] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[06:05:53] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[06:06:02] <ssbr_> (btw, the build definitions are in path/to/repo/deeplearning/fbgemm/fbgemm_gpu/BUILD , it will have a definition for sparse_ops which says what the filename is.)
[06:06:03] <Samian> whoops no one sec
[06:06:12] *** Quits: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13) (Remote host closed the connection)
[06:06:23] <ssbr_> Samian: the caller is not interesting for determining what the call-ee does
[06:06:33] <Samian> good point
[06:07:35] *** Joins: easior (~easior@61.155.142.70)
[06:07:52] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[06:08:01] *** Joins: diek (~diek@187.36.4.113)
[06:08:48] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[06:09:49] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:10:13] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[06:10:35] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[06:11:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:11:57] *** awoo is now known as Syrup
[06:12:56] *** Joins: gline (~yashi@p5b241ae1.dip0.t-ipconnect.de)
[06:14:07] *** Joins: wyclif (~wyclif@user/wyclif)
[06:14:40] *** Joins: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13)
[06:15:02] *** Joins: northernsage (~northerns@187.107.158.146)
[06:15:19] *** Quits: flyback (~flyback@2601:540:8201:1e60:a437:18b2:7a48:9163) (Read error: Connection reset by peer)
[06:16:00] *** Quits: gline_ (~yashi@p5b241fe4.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:16:12] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[06:16:51] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[06:17:15] *** Joins: mindlesstux (sid18072@id-18072.tooting.irccloud.com)
[06:17:36] *** Joins: flyback (~flyback@2601:540:8201:1e60:a437:18b2:7a48:9163)
[06:18:47] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:19:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[06:20:42] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[06:21:45] *** Joins: aquijoule_ (~richbridg@213-225-5-235.nat.highway.a1.net)
[06:22:08] *** Joins: pnoud (~pnoud@user/pnoud)
[06:22:11] *** Quits: Liblx (~Alex@ip4d15ff03.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.1)
[06:23:32] *** Quits: Snyp (~rksht@49.207.198.3) (Quit: WeeChat 3.2)
[06:24:12] *** Joins: tims (~tims@193-82-247-42.tpgi.com.au)
[06:24:40] *** Quits: richbridger (~richbridg@213-225-12-210.nat.highway.a1.net) (Ping timeout: 265 seconds)
[06:26:03] *** Quits: brownan (~brownan@136.56.4.163) (Ping timeout: 244 seconds)
[06:26:50] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[06:26:50] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[06:30:29] *** Joins: Fiji (~Fiji@user/fiji)
[06:31:42] *** Joins: wyclif (~wyclif@user/wyclif)
[06:33:08] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[06:33:18] *** Quits: {4144} (~{4144}@46.56.70.183) (Remote host closed the connection)
[06:34:42] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[06:34:51] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:34:58] *** Joins: northernsage (~northerns@187.107.158.146)
[06:36:35] *** Quits: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13) (Remote host closed the connection)
[06:39:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[06:43:24] *** Joins: diek (~diek@187.36.4.113)
[06:43:47] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[06:45:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[06:48:30] *** Quits: {HD} (~{HD}@143.244.44.81) (Ping timeout: 272 seconds)
[06:51:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[06:52:08] *** Parts: transhumanist (~hiken@2601:196:8800:35f0:1d4e:e5ea:4e24:3511) ()
[06:55:02] *** Joins: {HD} (~{HD}@191.96.185.72)
[06:55:05] *** Quits: lethu (~lethu@196.117.196.82) (Ping timeout: 272 seconds)
[06:55:52] *** Joins: lethu (~lethu@196.117.198.64)
[06:57:21] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[06:57:21] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[06:57:59] *** Joins: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13)
[06:58:44] *** Quits: zebrag_ (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:01:48] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[07:02:29] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:02:29] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (platinum.libera.chat (Nickname regained by services)))
[07:02:29] *** finn_elija is now known as FinnElija
[07:02:42] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[07:02:55] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[07:05:19] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 244 seconds)
[07:07:45] *** Quits: twobitsprite (~twobitspr@66.115.175.38) (Ping timeout: 272 seconds)
[07:12:41] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[07:13:12] *** Joins: northernsage (~northerns@187.107.158.146)
[07:15:34] *** Joins: euouae (~euouae@user/euouae)
[07:15:52] <euouae> Hello how do I set up a logging & user error reporting system without clogging my source code all over the place?
[07:16:24] <grym> uhh
[07:16:40] <grym> could you elaborate on "clogging my source code all over the place"
[07:17:12] <euouae> What I currently know to do is this: I can detect errors and use the logger & print() to alert the system and user. These lines would be where the error is detected. Thus something simple such as if f() then error() becomes quite lengthy
[07:17:54] <grym> euouae: non-stdlib loggers people seem to like are eliot and structlog
[07:18:30] <euouae> Are they preventing my issue from happening?
[07:19:11] <grym> eliot is decorator-based with granularity you control, i find it less verbose to write
[07:19:17] <grym> i have not used structlog
[07:19:46] <euouae> Ok let me tell you what I thought of
[07:20:24] <euouae> As an example of terseness. I could raise an exception packed with some information; whoever catches it deals with the logging and decides what the next step is
[07:20:25] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[07:20:44] <euouae> so I'd wrap all my code in one try block and deal with all error reporting in the catch section
[07:20:56] *** Joins: northernsage (~northerns@187.107.158.146)
[07:21:36] <euouae> So I guess, at least the logging strings are not part of the error detection
[07:21:45] <grym> eliot supports that, yes
[07:22:02] <euouae> oh nice!
[07:22:12] <euouae> Okay great, thank you
[07:23:09] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 265 seconds)
[07:23:33] <grym> there are also "log this function" decorators, which are pretty nice
[07:24:20] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Reconnecting)
[07:24:34] <northernsage> out of curiosity, is there something wrong with the stdlib loggers? I have never bothered to look for non-stdlib ones...
[07:24:36] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[07:24:39] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[07:24:53] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[07:24:57] *** Quits: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13) (Remote host closed the connection)
[07:25:07] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Client Quit)
[07:25:23] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[07:27:00] <weibullguy> euouae: I do something conceptually similar except I use pypubsub to send "do_log_" messages with an error message as the data then a logger class listens for the "do_log" messages to do the logging
[07:27:38] <weibullguy> it takes one line of code in the except block to send the message
[07:28:24] <euouae> I see, nice
[07:28:59] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:30:33] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 272 seconds)
[07:33:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[07:37:21] *** Quits: {HD} (~{HD}@191.96.185.72) (Ping timeout: 244 seconds)
[07:38:32] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[07:39:21] *** Quits: northernsage (~northerns@187.107.158.146) (Quit: leaving)
[07:39:36] *** Joins: northernsage (~northerns@187.107.158.146)
[07:41:13] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Client Quit)
[07:41:24] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[07:42:33] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[07:45:58] *** Joins: {HD} (~{HD}@102.165.16.201)
[07:46:21] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 265 seconds)
[07:48:01] *** Joins: easior (~easior@61.155.142.73)
[07:54:31] *** Joins: easior_ (~easior@61.155.142.67)
[07:55:05] *** Quits: death916 (~death916@user/death916) (Ping timeout: 258 seconds)
[07:56:54] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 272 seconds)
[07:57:57] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 265 seconds)
[07:57:57] *** Quits: GrandPa-G (~GrandPa-G@www.rgconsulting.com) (Ping timeout: 265 seconds)
[07:58:06] *** Joins: easior__ (~easior@61.155.142.70)
[08:01:20] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[08:01:35] *** Joins: easior (~easior@61.155.142.70)
[08:03:42] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 244 seconds)
[08:09:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[08:09:12] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[08:09:27] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[08:10:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:11:19] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:11:30] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[08:11:46] *** Joins: northernsage (~northerns@187.107.158.146)
[08:16:06] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 252 seconds)
[08:16:08] *** Joins: easior_ (~easior@61.155.142.70)
[08:16:10] *** Joins: death916 (~death916@user/death916)
[08:16:40] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-e8d9-a80f-b7bb-d535.res6.spectrum.com)
[08:17:08] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 244 seconds)
[08:18:36] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:20:29] *** Joins: easior__ (~easior@61.155.142.70)
[08:21:25] *** Joins: raxor2k (~raxor2k@7.221.181.62.in-addr.dgcsystems.net)
[08:21:57] <raxor2k> if class A imports class B. How can class B tell class A that "hey, im true! Update A.counter += 1" ?
[08:22:26] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[08:22:58] *** Joins: pnoud (~pnoud@user/pnoud)
[08:23:06] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:23:50] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 250 seconds)
[08:26:38] <euouae> raxor2k: inversion of control
[08:27:37] <euouae> raxor2k: for example, https://seddonym.me/2019/08/03/ioc-techniques/ look at the Animal example
[08:27:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[08:27:55] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[08:28:25] <euouae> What do you mean that A imports B? Do you mean subclass?
[08:28:44] <raxor2k> yes
[08:29:04] <raxor2k> instead of a big large class, i split them into two classes, where class A is the main class which imports class B
[08:29:19] <euouae> So class A(B)?
[08:29:54] <raxor2k> No
[08:29:59] <euouae> class B(A)?
[08:30:10] <raxor2k> it just imports class B to get its function and values
[08:30:40] <euouae> Why do you do it that way?
[08:30:54] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[08:31:39] <raxor2k> because everytime a new objects of class A is created, also a new object of class B is needed
[08:31:49] <raxor2k> i used to have them both into a laaaaaaarge big class
[08:31:59] <euouae> does A have an attribute of type B?
[08:32:11] *** Joins: zaquest (~notzaques@5.128.210.178)
[08:33:04] <raxor2k> yes
[08:33:36] <euouae> Then you implement a method in A that sets B to true
[08:33:41] <euouae> and that 'tells' A that B is true as well
[08:34:31] <euouae> another way would be through a messaging system where B sends a message that it is true and A picks it up and acts on it by increasing its counter
[08:34:52] <euouae> I was just told about pypubsub, which I think can do this
[08:35:05] <raxor2k> its easy to tell class B when something is true, but how can class B tell class A that something is true?
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:34] <raxor2k> anyways i find a way to figure that out
[08:36:39] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:56] <euouae> To your last question I would answer with that pypubsub thing I mentioned
[08:37:23] <raxor2k> ok i have a look at it
[08:39:00] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[08:39:20] *** Joins: slavfox (~slavfox@93.158.232.111)
[08:40:46] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[08:42:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:45:08] *** Joins: Vonter (~Vonter@user/vonter)
[08:46:46] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[08:49:24] *** Quits: emerent (~quassel@p200300cd5703bbd0ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:50:00] *** Joins: emerent (~quassel@p200300cd5703bbc1ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:50:42] *** Quits: wololoer (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:50:45] <euouae> What does this pip install message mean? https://bpa.st/YATQ I'm just trying to upgrade wheels
[08:50:46] *** Joins: Crassus (~Crassus@user/crassus)
[08:51:00] <euouae> in my toml file I just have "wheels"
[08:51:11] <euouae> Oh, wow, I should've typed "wheel"...
[08:51:16] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:52:45] *** Joins: poorboy (~poorboy@104.131.46.87)
[08:52:45] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[08:52:45] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:53:00] *** Joins: poorboy (~poorboy@104.131.46.87)
[08:53:00] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[08:53:04] *** Joins: northernsage (~northerns@187.107.158.146)
[08:53:13] *** Joins: poorboy (~poorboy@104.131.46.87)
[08:53:13] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[08:53:26] *** Joins: poorboy (~poorboy@104.131.46.87)
[08:53:27] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[08:55:11] *** Joins: poorboy (~poorboy@104.131.46.87)
[08:55:49] *** Quits: northernsage (~northerns@187.107.158.146) (Client Quit)
[08:56:01] *** Joins: northernsage (~northerns@187.107.158.146)
[08:56:32] *** Joins: mastardet (~mastardet@user/mastardet)
[08:56:55] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[08:57:35] *** Quits: mastardet (~mastardet@user/mastardet) (Remote host closed the connection)
[08:58:02] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[08:58:25] <raxor2k> euouae: so there is no "perfect answer here on how to do what i want?
[08:58:29] <raxor2k> I found a way to do this now btw.
[08:59:40] *** Parts: poorboy (~poorboy@104.131.46.87) ()
[09:00:05] *** Joins: mastardet (~mastardet@user/mastardet)
[09:00:47] <euouae> Nice, what did you do?
[09:00:52] *** Joins: gline_ (~yashi@p5b2416c4.dip0.t-ipconnect.de)
[09:00:53] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:01:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:01:57] <raxor2k> Just an extra function on the parent class to check if this_variable_inside_class_B == True
[09:02:06] <raxor2k> and keeps running consistently
[09:02:19] *** Joins: poorboy (~poorboy@104.131.46.87)
[09:03:11] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:03:25] <raxor2k> maybe not the optimal way but it works
[09:03:43] *** Joins: northernsage (~northerns@187.107.158.146)
[09:04:09] *** Quits: gline (~yashi@p5b241ae1.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[09:04:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:05:37] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 258 seconds)
[09:07:36] *** Quits: raxor2k (~raxor2k@7.221.181.62.in-addr.dgcsystems.net) (Ping timeout: 250 seconds)
[09:09:27] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[09:10:31] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:10:38] *** Quits: p-i-_ (~Ohmu@node-noc.pool-118-173.dynamic.totinternet.net) (Ping timeout: 250 seconds)
[09:11:15] *** Joins: ratelius (ratelius@gateway/vpn/protonvpn/ratelius)
[09:12:16] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:12:26] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[09:13:02] *** Joins: jkl (~jkl@45-19-26-123.lightspeed.cicril.sbcglobal.net)
[09:14:26] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 258 seconds)
[09:14:48] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:15:08] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[09:15:26] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[09:16:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[09:16:42] *** Joins: derelict (~derelict@user/derelict)
[09:17:13] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 265 seconds)
[09:17:15] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:20:36] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[09:22:06] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[09:22:14] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[09:22:46] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 250 seconds)
[09:22:49] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:23:01] *** Joins: easior_ (~easior@61.155.142.70)
[09:26:19] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 258 seconds)
[09:26:52] *** grnman_ is now known as grnman
[09:27:03] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:31:26] *** Joins: akaWolf (~akaWolf@akawolf.org)
[09:33:08] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[09:36:42] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[09:37:46] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[09:41:08] *** Joins: djapo (~archangel@user/djapo)
[09:42:03] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:44:03] *** Joins: telboon (~telboon@user/telboon)
[09:45:59] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[09:46:04] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[09:46:18] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 252 seconds)
[09:46:26] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:50:39] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 244 seconds)
[09:52:08] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:54:29] *** Joins: easior (~easior@61.155.142.70)
[09:54:37] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:56:08] *** Quits: euouae (~euouae@user/euouae) (Quit: euouae)
[09:57:10] *** Quits: Celeo (~Celeo@user/celeo) (Read error: Connection reset by peer)
[09:57:20] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 265 seconds)
[09:57:58] *** Joins: easior_ (~easior@61.155.142.73)
[09:58:08] *** Joins: superboot (~agentgasm@user/superboot)
[09:59:05] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:59:26] *** Joins: icy (~icy@user/icy)
[09:59:53] <Samian> This file uses unittest: https://github.com/pytorch/FBGEMM/blob/master/fbgemm_gpu/test/split_table_batched_embeddings_test.py
[10:00:19] <Samian> I'm reading how to test specific methods. one stack overflow article says to run python -m unittest test_mobulde.TestClass.test_method
[10:00:43] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[10:00:56] *** Joins: veek (~veek@117.192.22.1)
[10:01:05] <Samian> I tried python -m unittest split_table_batched_embeddings_test.py.SplitTableBatchedEmbeddingsTest.test_forward
[10:01:12] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 258 seconds)
[10:01:29] <Samian> pythong returns "ValueError: Empty module name"
[10:01:35] <Samian> ahh maybe I need to exclude the py
[10:01:58] *** Joins: easior__ (~easior@61.155.142.67)
[10:02:58] *** Joins: control (guesswho@user/control)
[10:04:31] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:05:33] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 265 seconds)
[10:05:41] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[10:05:48] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 258 seconds)
[10:06:32] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[10:06:58] *** Joins: doc|work (~doc@user/doc)
[10:07:39] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[10:08:58] *** Joins: easior_ (~easior@61.155.142.70)
[10:10:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:11:23] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:12:10] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 250 seconds)
[10:14:26] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[10:15:58] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[10:15:58] *** Joins: easior__ (~easior@61.155.142.73)
[10:16:59] *** Joins: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl)
[10:17:22] *** Joins: maum (~maum@1.245.147.30)
[10:17:25] <maum> hello
[10:17:27] <maum> how can I merge two dataframes which are different index ordering
[10:19:16] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Remote host closed the connection)
[10:19:34] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 265 seconds)
[10:19:51] *** Joins: Snyp (~rksht@49.207.198.3)
[10:21:12] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[10:21:37] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Quit: Textual IRC Client: www.textualapp.com)
[10:22:20] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[10:22:23] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[10:23:47] *** Joins: pnoud (~pnoud@user/pnoud)
[10:24:47] *** Joins: Vonter (~Vonter@user/vonter)
[10:25:20] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 268 seconds)
[10:25:49] *** Joins: MoiraPrime (sid504449@id-504449.tooting.irccloud.com)
[10:27:46] *** Joins: aod (~a@201.242.114.251)
[10:28:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:28:17] <aod> Hi all
[10:28:22] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 244 seconds)
[10:28:44] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Remote host closed the connection)
[10:29:07] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[10:29:09] <aod> `help("modules")` Ilegal instruction (core generated)
[10:29:09] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[10:29:16] <aod> help?
[10:29:52] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[10:30:45] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:30:56] *** Joins: icy (~icy@user/icy)
[10:31:25] <doc|work> you're proabably asking at the worst possible time. Might need to stick around a while for responses
[10:31:43] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:31:45] *** Quits: montybanksnyc (~montybank@2601:86:600:a2a:643b:fa56:c3e3:a7c8) (Read error: Connection reset by peer)
[10:32:39] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[10:32:43] <aod> 1/1087.
[10:33:00] <aod> please
[10:33:15] <aod> to much work today?
[10:33:21] <maum> how can I merge two dataframes which are different index ordering
[10:35:43] <doc|work> I don't know the answer to your question aod, but it's 11pm on a Friday on the west coast of North America so you're kind of waiting for most of Europe to wake up and chip in at this point
[10:36:12] *** Joins: sazawal (~sazawal@2409:4043:510:d63:70c8:99f8:1d20:da85)
[10:37:08] <aod> luky for u, it is 0300 here, but thanks, good u are here safe and well xD.
[10:37:53] <doc|work> :)
[10:38:14] *** Quits: maum (~maum@1.245.147.30) (Quit: Client closed)
[10:38:59] *** Joins: LucaTM (~LucaTM@user/lucatm)
[10:39:11] <aod> https://stackoverflow.com/questions/56791314/merging-two-dataframes-with-different-indexes-time-as-index
[10:39:14] <aod> ?
[10:43:45] <aod> `help("modules")` Expected Tk Togl installation in /home/user/.local/lib/python3.9/site-packages/OpenGL/Tk/togl-linux-64
[10:44:25] <aod> ? help me please, i don't understand whathe stff i goin on.
[10:44:33] <aod> thanks.
[10:45:26] <Xavierdarkness> Something isn't installed based off of that error message
[10:46:49] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[10:46:50] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:59] <aod> http://togl.sourceforge.net/download.html#building
[10:47:04] <aod> looks complicated
[10:47:14] <aod> but why?
[10:47:36] *** Joins: seednode (~seednode@user/seednode)
[10:47:41] <aod> why i have to make an complicated instalation for that?
[10:48:35] *** Joins: easior (~easior@61.155.142.67)
[10:48:37] <aod> who Togl think he is?
[10:49:26] <doc|work> someone who did some work that you want to use. I see he offers a money back guarantee :)
[10:50:27] <doc|work> also, that project seems to have been last updated in 2008. There are probably people here who weren't even born then.
[10:51:12] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 252 seconds)
[10:51:42] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 272 seconds)
[10:52:35] <aod> ?
[10:52:58] <aod> what happens if you `help("modules")`?
[10:53:41] <aod> you are good reading
[10:55:08] <aod> i have all night reading the 3 line of instalation, how could be possible 2008, making me some trouble on python?
[10:55:38] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:56:03] <aod> i dont' know why this python is "expecting Tk Togl"?
[10:57:11] <djapo> if I want to open a file in a django app for ex, how do i refrence it so that it works within any installation
[10:57:14] <djapo> ?
[10:57:44] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[10:59:11] <aod> i am gonna remove all with `rm -r python3.9`
[10:59:27] <aod> and try again
[10:59:48] *** Joins: N4G4R41 (~CircuitLo@user/n4g4r41)
[11:01:37] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 265 seconds)
[11:03:00] *** Quits: nbao (~nbao@187.20.162.127) (Quit: leaving)
[11:03:26] *** Joins: tijuco (~tijuco@user/tijuco)
[11:03:32] *** Joins: pnoud (~pnoud@user/pnoud)
[11:04:49] *** Joins: easior_ (~easior@61.155.142.67)
[11:04:53] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[11:05:32] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:07:02] *** Quits: N4G4R41 (~CircuitLo@user/n4g4r41) (Quit: Quit)
[11:07:20] *** Joins: N4G4R41 (~CircuitLo@user/n4g4r41)
[11:07:38] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 244 seconds)
[11:07:44] *** Quits: N4G4R41 (~CircuitLo@user/n4g4r41) (Client Quit)
[11:08:00] *** Joins: N4G4R41 (~CircuitLo@user/n4g4r41)
[11:09:03] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[11:10:57] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[11:11:09] *** Joins: NeoCore (~neocore@143.244.56.146)
[11:11:20] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Ping timeout: 272 seconds)
[11:11:34] *** Joins: parzival (~parzival@static-198-54-133-38.cust.tzulo.com)
[11:11:36] *** Quits: N4G4R41 (~CircuitLo@user/n4g4r41) (Client Quit)
[11:12:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:13:33] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e8d9-a80f-b7bb-d535.res6.spectrum.com) (Quit: jarthur)
[11:14:56] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[11:15:09] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[11:17:36] *** Quits: wei2912 (~wei2912@112.199.250.21) (Ping timeout: 250 seconds)
[11:18:28] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 250 seconds)
[11:20:25] *** Joins: palasso (~palasso@user/palasso)
[11:21:10] *** Joins: Crassus (~Crassus@user/crassus)
[11:22:25] *** Quits: ndim (~hun@moooo.n-dimensional.de) (Ping timeout: 265 seconds)
[11:23:28] *** Quits: veek (~veek@117.192.22.1) (Ping timeout: 252 seconds)
[11:23:35] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[11:24:23] *** Joins: ndim (hun@moooo.n-dimensional.de)
[11:24:38] *** Joins: bonestormii (~root@210.ip-158-69-200.net)
[11:25:30] *** Quits: bonestormii (~root@210.ip-158-69-200.net) (Quit: WeeChat 2.8)
[11:25:35] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[11:27:08] *** Quits: death916 (~death916@user/death916) (Ping timeout: 250 seconds)
[11:27:09] *** Joins: bonestormii (~root@210.ip-158-69-200.net)
[11:28:26] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[11:28:49] *** Quits: ndim (hun@moooo.n-dimensional.de) (Ping timeout: 244 seconds)
[11:29:16] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[11:30:16] *** Joins: pnoud (~pnoud@user/pnoud)
[11:30:34] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[11:31:13] *** Joins: death916 (~death916@user/death916)
[11:31:41] *** Joins: icy (~icy@user/icy)
[11:31:56] *** Joins: rendar (~rendar@user/rendar)
[11:31:58] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Client Quit)
[11:32:10] <aod> solved
[11:32:14] <aod> lol
[11:32:19] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[11:32:30] <aod> stupid creators.
[11:34:51] *** Joins: ndim (hun@moooo.n-dimensional.de)
[11:35:39] *** Joins: Nact (~l@host-85-27-122-35.dynamic.voo.be)
[11:39:15] *** Joins: easior__ (~easior@61.155.142.67)
[11:40:46] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 265 seconds)
[11:41:13] *** Joins: rindolf (~rindolf@87.68.240.240.adsl.012.net.il)
[11:42:22] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[11:42:29] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:42:43] *** Quits: control (guesswho@user/control) (Remote host closed the connection)
[11:44:59] *** Joins: p-i- (~Ohmu@node-m5q.pool-125-25.dynamic.totinternet.net)
[11:46:45] *** Joins: kosh (~kosh@user/kosh)
[11:46:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[11:48:45] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:14b:79f8:9a0b:e112)
[11:49:31] *** Joins: etiennem- (~etienne@176-149-215-214.abo.bbox.fr)
[11:50:58] *** Quits: etienneme (~etienne@176-149-215-214.abo.bbox.fr) (Ping timeout: 252 seconds)
[11:51:44] *** Quits: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl) (Quit: sajran)
[11:51:56] *** Joins: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl)
[11:52:01] *** Joins: upsala (~zcb@193.32.249.134)
[11:52:18] *** Quits: aod (~a@201.242.114.251) (Quit: leaving)
[11:54:55] *** Joins: itsmemoria (~itsmemori@user/itsmemoria)
[11:55:02] *** Parts: itsmemoria (~itsmemori@user/itsmemoria) ()
[11:55:04] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[11:59:16] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-df50-9334-2200-b3b6.res6.spectrum.com) (Quit: MrFantastik)
[11:59:26] *** Joins: reedrichards (~Thunderbi@2603-7080-ae03-948a-e3a6-2d3a-abd1-9a63.res6.spectrum.com)
[11:59:40] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:00:09] *** reedrichards is now known as MrFantastik
[12:00:14] *** Joins: upsala1 (~zcb@193.32.127.213)
[12:00:42] *** Joins: aniruddha (~aniruddha@103.242.197.118)
[12:03:45] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[12:03:54] *** Quits: upsala (~zcb@193.32.249.134) (Ping timeout: 272 seconds)
[12:04:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[12:05:10] *** Quits: {HD} (~{HD}@102.165.16.201) (Ping timeout: 272 seconds)
[12:05:33] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[12:06:05] *** Joins: monohorn (~monohorn@user/monohorn)
[12:06:40] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[12:07:37] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:09:43] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[12:10:09] *** Quits: kmh (~kmh@p200300df5f145f004144ecc119e5a184.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[12:10:10] <jiffe> if I'm using asyncio for handling a tcp connection, is there also a way for me to send noop msgs at intervals ?
[12:11:20] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 268 seconds)
[12:12:54] <Wulf> jiffe: what's a noop message?
[12:13:24] <wyclif> LOG OPEN
[12:14:41] <jiffe> Wulf: heartbeat, I'm more concerned about the interval part
[12:14:42] *** Joins: foozle (~foozle@2001-b011-c001-54d9-a401-e17a-331d-00f2.dynamic-ip6.hinet.net)
[12:14:53] <graingert> jiffe: like a sleep
[12:15:00] <graingert> You want a sleeping keep alive?
[12:15:09] <Wulf> jiffe: so you're asking if you can send traffic to a socket at given times? Sure.
[12:15:25] <Wulf> jiffe: But may I suggest you use trio or anyio instead of asyncio?
[12:15:27] <jiffe> graingert: basically, but something running alongside the recv() I'm awaiting
[12:15:52] <graingert> jiffe: TCP does it automatically
[12:16:10] <jiffe> graingert: no this is a custom heartbeat
[12:16:10] <Wulf> graingert: that may be unreliable.
[12:16:38] <graingert> jiffe: Does the other end support it?
[12:16:50] <graingert> What's the protocol you're running?
[12:16:57] <jiffe> graingert: yes this is a custom protocol I'm working with here
[12:17:03] <jiffe> proprietary
[12:17:20] *** Joins: manti7 (~manti7@176.10.104.94)
[12:17:38] *** Joins: northernsage (~northerns@187.107.158.146)
[12:18:24] <jiffe> I'm also using aiohttp which is why I'm planning to use asyncio here
[12:18:29] *** Quits: aniruddha (~aniruddha@103.242.197.118) (Quit: WeeChat 1.9.1)
[12:19:01] *** Joins: aniruddha (~aniruddha@103.242.197.118)
[12:19:31] <graingert> https://www.irccloud.com/pastebin/UPKXUrNT/background_keepalive.py
[12:19:52] <graingert> Then in your async def keepalive
[12:21:00] *** Quits: parzival (~parzival@static-198-54-133-38.cust.tzulo.com) (Changing host)
[12:21:00] *** Joins: parzival (~parzival@user/parzival)
[12:21:41] <graingert> https://www.irccloud.com/pastebin/XsKjUAzL/keepalive.py
[12:21:45] <jiffe> hmm, can you mix asyncio and anyio?
[12:22:09] <graingert> jiffe: Definitely that's the purpose
[12:22:26] <graingert> I'd recommend httpx over aiohttp
[12:22:34] <graingert> As that works with anyio directly
[12:23:06] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[12:23:12] <jiffe> httpx is just a client right?  I need http server and websocket capabilities too
[12:23:18] *** Quits: doc|work (~doc@user/doc) (Ping timeout: 265 seconds)
[12:23:35] <graingert> jiffe: Starlette is the httpx equivalent
[12:23:39] <graingert> For the server
[12:23:48] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:24:16] *** Joins: easior_ (~easior@61.155.142.67)
[12:25:35] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[12:27:12] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 244 seconds)
[12:27:39] *** Parts: monohorn (~monohorn@user/monohorn) (WeeChat 3.2)
[12:29:42] *** Joins: anandprabhu (~anand@94.202.243.198)
[12:30:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:32:05] *** Joins: cedric (~cedric@2a01:cb11:867:c200:dcd3:e836:f81b:e39)
[12:32:12] *** Quits: parzival (~parzival@user/parzival) (Quit: Leaving)
[12:34:09] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[12:34:55] *** Quits: foozle (~foozle@2001-b011-c001-54d9-a401-e17a-331d-00f2.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:36:49] <jiffe> just implemented the anyio tg for keepalive and that seems to work, thanks
[12:38:19] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[12:39:46] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:22] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 250 seconds)
[12:42:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[12:51:14] *** Joins: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af)
[12:53:25] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[12:53:49] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:54:58] <graingert> jiffe: you'll need to aquire the write lock for any other writes to that socket afaik
[12:55:00] *** Joins: easior__ (~easior@61.155.142.73)
[12:55:14] <graingert> depends if your stream does buffering internally or not
[12:56:04] <graingert> jiffe: you can also do stuff like using acquire_nowait() and if it fails skip the write
[12:56:15] <graingert> because it means someone else is already writing to the socket so you don't need to
[12:56:17] *** Joins: wyclif (~wyclif@user/wyclif)
[12:58:08] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 250 seconds)
[12:58:25] *** Quits: sadg (~odd@193.32.249.162) (Quit: WeeChat 3.0.1)
[12:58:35] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[13:00:48] *** Quits: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af) (Remote host closed the connection)
[13:01:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[13:01:34] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:101:83e8:3086:926b) (Ping timeout: 246 seconds)
[13:01:46] *** Joins: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af)
[13:02:02] *** Quits: Nact (~l@host-85-27-122-35.dynamic.voo.be) (Quit: Konversation terminated!)
[13:02:58] *** Joins: Brocker (~NoBody@user/brocker)
[13:03:24] *** Joins: Adoi (~Adoi@user/adoi)
[13:03:43] *** Joins: hendursaga (~weechat@user/hendursaga)
[13:04:21] *** Quits: ndim (hun@moooo.n-dimensional.de) (Quit: hickup)
[13:04:53] <acresearch> people, i am trying to teach myself SSL based socket communication, i can't seem to the ssl to work properly, can someone help me understand what is the correct setup? here is my code so far: https://paste.debian.net/1202432/
[13:04:55] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[13:05:23] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[13:06:50] *** Quits: anandprabhu (~anand@94.202.243.198) (Quit: Konversation terminated!)
[13:09:22] <graingert> acresearch: ssl.wrap_socket is deprecated
[13:09:34] <graingert> you need ssl.create_default_context().wrap_socket
[13:09:44] *** Joins: ndim (hun@moooo.n-dimensional.de)
[13:10:20] <graingert> acresearch: > The old wrap_socket() function is deprecated since it is both inefficient and has no support for server name indication (SNI) and hostname matching.
[13:10:47] <graingert> acresearch: when doing stuff with ssl I'd recommend the python3.10 beta 3 with `python3.10 -Werror` because they changed how a lot of stuff works
[13:11:10] <graingert> then once it works in 3.10 it should work in python 3.7+
[13:12:27] *** Joins: Cacafuego (~vision@104-1-145-196.lightspeed.tukrga.sbcglobal.net)
[13:13:10] *** Quits: Samian (~textual@2620:10d:c091:480::1:8d08) (Quit: Textual IRC Client: www.textualapp.com)
[13:13:14] <Adoi> hello! :)
[13:13:15] *** Joins: easior_ (~easior@61.155.142.73)
[13:13:48] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[13:14:44] <Adoi> I have this class definition further above in the code, but only when I paste it again before the related function I can make the latter work; https://bpa.st/EQMQ
[13:15:28] <Adoi> else I get the error ; "AttributeError: 'Graph' object has no attribute 'find_path" (find_path being the said function(
[13:15:54] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 250 seconds)
[13:16:10] <Adoi> maybe better this way; https://bpa.st/YXTQ
[13:16:20] *** Joins: easior__ (~easior@61.155.142.70)
[13:16:37] *** Joins: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7)
[13:17:25] <Adoi> when I add the code without the "class" section, thinking that this part exists earlier above, I get an error. I dont know if it is because of some failure of jupyter kernel
[13:18:10] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[13:18:43] *** Joins: wyclif (~wyclif@user/wyclif)
[13:19:10] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:19:13] <Adoi> in this paste, too, as soon as I separate the class section from the rest of the code, the same happens
[13:19:51] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 265 seconds)
[13:20:01] <jinsun> when you keep it above are you running that cell? jupyter doesn't run all the cells above automatically
[13:21:25] *** Quits: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7) (Ping timeout: 272 seconds)
[13:21:57] <graingert> Adoi: it's best to put big definitions like that into `.py` files then import them into your cells
[13:22:38] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[13:23:07] <acresearch> graingert: ok
[13:23:16] <Adoi> jinsun, yes, I do
[13:23:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:24:10] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Ping timeout: 268 seconds)
[13:24:18] <Adoi> graingert, havent gotten into the habit of doing it yet :)
[13:24:34] <graingert> Adoi: I just put everything into .py files
[13:24:43] <acresearch> graingert: ok so then how do i setup the server side that accepts and decodes ssl?
[13:24:43] <Adoi> isn't it a bit cumbersome?
[13:24:47] <graingert> I don't really understand .ipynb files
[13:25:04] <graingert> acresearch: same again but with create_default_context(purpose=ssl.Purpose.CLIENT_AUTH)
[13:25:52] <Adoi> that would solve the incompatibility aspect of .ipynb, though
[13:26:38] <graingert> acresearch: https://anyio.readthedocs.io/en/stable/streams.html#tls-streams ?
[13:27:06] <Adoi> but maybe it is made compatible some way, never searched for it
[13:27:10] *** Quits: sazawal (~sazawal@2409:4043:510:d63:70c8:99f8:1d20:da85) (Quit: Leaving)
[13:27:13] <graingert> Adoi: no not cumbersome at all
[13:27:28] <graingert> I use `pytest --sw` for iterative development
[13:27:40] <acresearch> graingert: ah so i need an ssl certificate and key for the server?
[13:27:40] <graingert> and instead of cells I make `def test_...` functions
[13:27:46] <acresearch> but not the client?
[13:27:58] <graingert> acresearch: you can have one for the client but you don't need it
[13:28:13] <graingert> and technically you can do mutual authentication of peers with a password
[13:28:16] <graingert> but nobody uses that
[13:28:45] <gitesh> how to make open() function to get data from a sibling folder?
[13:28:48] <jinsun> Adoi: py files are less cumbersome really, and if you want jupyter like cells you can get them in py files as well if your IDE supports it, like vscode does https://code.visualstudio.com/docs/python/jupyter-support-py#_jupyter-code-cells
[13:28:52] <acresearch> graingert: hmmm ok then what about the server?
[13:29:01] <gitesh> files-2-1: Say you are in a directory called Project. In it, you have a file with your Python code. You would like to read in data from a file called “YearlyProjections.csv” which is in a folder called CompanyData, which is inside of Project. What is the best way to open the file in your Python program?
[13:29:12] <acresearch> gitesh: this is confusing, each article has a totally different setup for this,
[13:29:13] <graingert> gitesh: use importlib.resources
[13:29:29] <graingert> no not confusing. importlib.resources is the blessed way
[13:29:54] <gitesh> how to get to the folder CompanyData?
[13:29:56] <gitesh> *into
[13:30:03] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[13:30:35] <acresearch> gitesh: i know, but i want to learn how this happen at a bit lower level, i find it interesting
[13:30:40] <acresearch> but i can't get ssl to work
[13:30:52] <graingert> gitesh: what's the file with the python code in?
[13:31:00] <graingert> acresearch: did you try with the anyio examples?
[13:31:21] <gitesh> graingert: whatever 'xyz.py'
[13:31:35] <graingert> and how do you import that file?
[13:31:35] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:31:50] <Adoi> jinsun, adding "# %%" on top of each code piece is not exactly practical, is it?
[13:31:52] *** Joins: Crassus (~Crassus@user/crassus)
[13:31:53] <graingert> `from . import xyz` ? `from .. import CompanyData` ?
[13:32:05] <graingert> `from . import xyz` ? `from .. CompanyData import xyz` ?
[13:32:19] <acresearch> graingert: i do not get it, i have a simple client server socket on my localhost setup that works, i can understand how ssl and anyio fit in it
[13:32:21] <graingert> Adoi: yes it is
[13:32:22] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 246 seconds)
[13:32:53] <Adoi> but still curious why the class section inserted earlier is not accepted later
[13:33:12] <Adoi> between cells, that is
[13:33:13] <graingert> acresearch: how about this? https://trustme.readthedocs.io/en/latest/#full-working-example
[13:33:24] <jinsun> Adoi: well jupyter adds loads more stuff than # %% behind the scenes, it is no different than clicking around to make cells in ipynb to me
[13:33:31] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[13:33:32] <Repiphany> Adoi: are you overwriting your class with something that only has __init__ defined and not the other function
[13:33:48] <gitesh> i got it right, C. open("CompanyData/YearlyProjections.csv", "r")
[13:33:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[13:34:18] <acresearch> graingert: ok this looks similar to what i have,,,, but one questions because i think this is where things break.. so i need a server side ssl certificate? if i need one, where do i get it? or how to i generate it? along with a key?
[13:34:21] <graingert> gitesh: no
[13:34:25] <graingert> gitesh: that's incorrect
[13:34:36] <gitesh> so if you are in the same directory just do it
[13:34:40] <gitesh> that's correct
[13:34:42] <graingert> acresearch: trustme will make fake certs
[13:34:49] <acresearch> graingert: ok
[13:34:55] <graingert> gitesh: right but it's not the correct way to get sibling resources from python code
[13:35:06] <graingert> gitesh: how do you import xyz.py into your code?
[13:35:08] <gitesh> graingert: the structure is /Project/CompanyData/YearlyProjections.csv
[13:35:22] <graingert> gitesh:  please answer the questions in the order I asked them
[13:35:39] <gitesh> i dont have to import xyz.py, i run xyz.py
[13:35:48] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 265 seconds)
[13:35:55] *** Quits: jazzy (~jaziz@2600:380:8753:52bc:dd15:cdbe:7359:7673) (Ping timeout: 244 seconds)
[13:35:59] <gitesh> i want data for my program which is in sibling folder
[13:36:22] *** Quits: milosz (~milosz@user/milosz) (Quit: Leaving)
[13:36:26] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[13:36:43] <gitesh> it depends how do you import xyz.py into your code graingert
[13:36:49] <Adoi> Repiphany, no, there is only __iter__, __next__ and __str__ between the two occurences of the said class section
[13:36:50] <graingert> gitesh: and xyz.py is in CompanyData right?
[13:36:56] <gitesh> graingert: no
[13:36:59] *** Joins: wyclif (~wyclif@user/wyclif)
[13:37:04] <graingert> so you have CompanyData/__init__.py and CompanyData/xyz.py ?
[13:37:07] <gitesh> graingert: data is in CompanyData
[13:37:16] *** Joins: d3sync (~d3sync@77.49.32.253.dsl.dyn.forthnet.gr)
[13:37:18] <gitesh> no graingert
[13:37:24] <graingert> so you have Project/__init__.py and Project/xyz.py ?
[13:37:26] <gitesh> i have Project/xyz.py
[13:37:41] <gitesh> and /Project/CompanyData/YearlyProjections.csv
[13:37:58] <graingert> ah right so you'd do `from . import CompanyData` then importlib.resources.open_text(CompanyData, "YearlyProjections.csv")
[13:38:10] <graingert> and you'd run it with `python -m Project.xyz`
[13:38:37] <gitesh> yeah that sounds cool
[13:39:00] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[13:39:05] <graingert> remember to make Project/__init__.py and Project/CompanyData/__init__.py
[13:39:14] <gitesh> graingert: can i import data as from . import CompanyData ?
[13:39:23] <graingert> no that's a syntax error
[13:39:41] <gitesh> i just copied yours
[13:39:41] <graingert> if you made a `Project/CompanyData/__init__.py` and a Project/CompanyData/data.py` you could do:
[13:39:48] <graingert> `from .CompanyData import data`
[13:39:52] <jinsun> Adoi: you said initially that you get "Graph' object has no attribute 'find_path"", but you have defined "find_all_paths" there not "find_paths"
[13:39:59] <graingert> and run it with python -m Project.xyz
[13:40:07] <graingert> gitesh: where do you keep your `.git` file?
[13:40:12] <graingert> directory*
[13:40:13] <gitesh> graingert: i mean can i import data, i thought i just can import python module/code
[13:40:37] <no_gravity> Inside a module I have "def round(decimals): ...". How can I call the original round in the module?
[13:40:38] <gitesh> I'm not on github
[13:40:50] <graingert> gitesh: you don't need to be on github to use git source control
[13:40:56] <graingert> you can use git totally locally
[13:41:03] <gitesh> okay got it
[13:41:09] <gitesh> i will try
[13:41:10] <graingert> do you use some other source control system?
[13:41:27] <gitesh> no I'm just taking courses this is the second course
[13:41:36] <gitesh> and there is interactive textbook
[13:41:49] <gitesh> so i don't use my python on my computer so much
[13:42:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[13:42:14] <acresearch> graingert: excellent, ok i got it to work :-)   thanks
[13:42:20] <gitesh> https://git-scm.com/
[13:42:25] <acresearch> now its it time to read to understand what each line does :-)
[13:42:41] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Quit: you can't fire me!)
[13:42:49] *** Quits: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl) (Quit: sajran)
[13:43:00] *** Joins: sajran1 (~Thunderbi@user-5-173-253-182.play-internet.pl)
[13:43:08] <gitesh> no_gravity: you are making overwriting round function i guess
[13:43:16] <no_gravity> gitesh: Yes
[13:43:20] <gitesh> you shou;dn't do that
[13:43:32] <graingert> acresearch: you can get a real certificate with letsencrypt
[13:43:42] <no_gravity> gitesh: Well, my question is not if I should or should not do that.
[13:43:47] <graingert> acresearch: but trustme is fine for local development (probably better than a real cert)
[13:43:53] *** Quits: sajran1 (~Thunderbi@user-5-173-253-182.play-internet.pl) (Read error: Connection reset by peer)
[13:43:59] *** Joins: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl)
[13:44:01] <Adoi> jinsun, sorry, there is also a partially similar ""find_all_paths" section, therefore pasted the wrong one. this is the one with the error;  https://bpa.st/77EA
[13:44:02] <jinsun> no_gravity: best to rename your own round to round_, you can get it from __builtins__.round too but you can overwrite that too, so better to not get in habit of overwriting builtins
[13:44:05] <no_gravity> Anybody? How can I call the original round function here? https://www.online-python.com/kp5Md04tEm
[13:44:34] <acresearch> graingert: i am not interested at the moment in diploying anything, just how sockets and SSL work    :-)
[13:44:43] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[13:44:48] <no_gravity> jinsun: It is not about a habit. And not about renaming the round function. This would be a huge undertaking in a huge code base. This is not my job. My job is to change the function body so it can use round(x,y)
[13:44:58] <Adoi> separate the class section and the rest into two different cells (if you are using jupyter) and the error comes
[13:46:07] *** Joins: Blankspace (~abcd@user/blankspace)
[13:46:10] <Adoi> same is true for the previous paste
[13:46:36] <no_gravity> jinsun: Strange, that gives me: AttributeError: 'dict' object has no attribute 'round'
[13:47:56] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:48:11] <jinsun> no_gravity: it works here https://www.online-python.com/iGWdMP2BS8
[13:48:29] <no_gravity> jinsun: Yes, but that is not inside a module
[13:48:48] *** Joins: u0_a117 (~u0_a117@191.35.79.116)
[13:48:48] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:49:38] <gitesh> https://git-scm.com/      <------------- is this what real git is?
[13:49:48] <gitesh> for me coding
[13:50:05] <Adoi> anyway, since the code works this or other way, it is not a huge deal. if someone is however interested in further enlightening me on it, I am here
[13:51:12] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 258 seconds)
[13:51:30] <graingert> gitesh: What's your OS?
[13:51:52] <gitesh> graingert: windows 10
[13:52:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[13:53:15] <jinsun> Adoi: the snippet you gave works if you seprate it into 2 cells, maybe something weird is going on in between in your full notebook
[13:53:18] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[13:54:10] *** Joins: wyclif (~wyclif@user/wyclif)
[13:54:28] <no_gravity> Anybody an idea how to access __builtins__ from insida a module? It looks like inside a module it points to the module itself. Any way to get the outter __builtins__?
[13:54:40] *** Joins: easior__ (~easior@61.155.142.70)
[13:54:44] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[13:55:36] <graingert> gitesh: For Windows you might as well use https://desktop.github.com/ it ships with a Microsoft official git for Windows
[13:55:55] <graingert> GitHub is just a hub for git users
[13:56:14] <acresearch> people, i saw a video about web hosting, and i saw this terminal command:   python3 -m http.server --bind IP PORT     what is it? where can i read about it?   is python capable of web server hosting like apache or nginx?
[13:56:15] <graingert> But it's also where Microsoft put their build of git
[13:56:32] <graingert> acresearch: http.server is really rubbish
[13:56:41] <bluss> no_gravity: don't you want to just "import builtins" and use that? I'm unsure what the use case is
[13:56:48] <acresearch> graingert: but what is it? and why is it rubbish?
[13:56:54] <graingert> acresearch: hypercorn is a great example of simple code that runs a good web server
[13:57:12] <Adoi> jinsun, if it works in your cells, the latter may likely be the case for mine.
[13:57:18] <ChrisWarrick> graingert: http.server is bad old code that isn’t meant for doing anything serious
[13:57:22] <ChrisWarrick> acresearch: ↑
[13:57:34] <graingert> acresearch: it's a toy web server with a number of design flaws that make it no good for production
[13:57:41] <no_gravity> bluss: Ah! "import builtins" and then "builtins.round(a,b)"?
[13:57:42] <acresearch> i see
[13:57:52] <ChrisWarrick> acresearch: running http.server with -m lets you launch a quick-n-dirty server in a folder, but you really shouldn’t use it for anything
[13:58:20] *** Joins: GOD (~mad@user/god)
[13:58:25] *** Quits: u0_a117 (~u0_a117@191.35.79.116) (Quit: WeeChat 3.0.1)
[13:58:40] *** Joins: u0_a117 (~u0_a117@177.10.203.30)
[13:58:46] <no_gravity> bluss: Seems to work like a charm! Awesome, thank you!
[13:59:05] <bluss> great. That's the way to use the builtins module
[13:59:06] <graingert> It's handy for sending the latest statically compiled binary for unreal tournament 2004 to your lan party participants
[13:59:08] <acresearch> ChrisWarrick: i see,  i am ust started learing web development and trying to understand these webs servers and which one to learn   so far i have seen articles talk about nginx, apache, flask, django,  reading about them now
[13:59:10] <graingert> But that's about it
[13:59:27] <graingert> acresearch: those are frameworks primarily
[13:59:38] <acresearch> graingert: oh
[13:59:40] *** Joins: entuland (~entuland@user/entuland)
[13:59:51] <acresearch> graingert: i do not understand what that means yet
[13:59:52] <graingert> They all ship development web servers which aren't very good
[14:00:02] <acresearch> graingert: all of them are not good?
[14:00:10] <graingert> acresearch: the frameworks are good
[14:00:15] <acresearch> graingert: then what is good?
[14:00:21] <graingert> The dev servers are good for Dev
[14:00:25] *** Quits: u0_a117 (~u0_a117@177.10.203.30) (Client Quit)
[14:00:33] <graingert> Hypercorn is a web server good for production
[14:00:37] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[14:00:39] *** Joins: u0_a117 (~u0_a117@191.35.79.116)
[14:00:45] <acresearch> ok i will read about it then
[14:00:59] *** Quits: GOD (~mad@user/god) (Client Quit)
[14:01:06] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[14:01:16] <graingert> But if you're just starting web development I'd recommend the django tutorial
[14:01:24] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Quit: you can't fire me!)
[14:04:04] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 252 seconds)
[14:05:15] *** Joins: damoreno (~damoreno@redhat/damoreno)
[14:05:25] *** Quits: Lunatrius (~Lunatrius@77.38.22.128) (Ping timeout: 268 seconds)
[14:05:31] <damoreno> Hey. Is there a way to get all the fields on a dataclass that are not set to a default value?
[14:06:39] <graingert> damoreno: Not if you use factories
[14:06:44] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[14:07:39] *** Joins: ntdll (~ntdll@user/ntdll)
[14:08:11] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[14:09:31] *** Joins: the_emperor (~the_emper@103.60.172.10)
[14:11:13] <damoreno> graingert: I use built-ins and Field(default=)
[14:11:24] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 252 seconds)
[14:11:32] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[14:11:37] *** Joins: ripdog_ (~quassel@user/ripdog)
[14:11:55] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[14:12:42] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[14:13:44] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 272 seconds)
[14:17:09] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[14:20:07] <damoreno> o basically what I want to do is to create a dict from a dataclass in which I only have the fields that don't have a default value or which value is set to something different from the default. In addition to this, I need to return something safe so I can pass it to yaml.safe_dump. As I have enumerations, I'm replacing them with their representation. I'm going to share some code because I have the
[14:20:13] <damoreno> feeling that it can be written is half the lines and I'm just overcomplicating things: https://bpa.st/VAYQ
[14:21:24] *** Quits: u0_a117 (~u0_a117@191.35.79.116) (Quit: WeeChat 3.0.1)
[14:21:39] *** Joins: u0_a117 (~u0_a117@191.35.79.116)
[14:23:41] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[14:23:58] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[14:24:22] *** Quits: u0_a117 (~u0_a117@191.35.79.116) (Client Quit)
[14:25:27] *** Joins: easior__ (~easior@61.155.142.67)
[14:27:39] *** Quits: rindolf (~rindolf@87.68.240.240.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[14:30:05] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[14:30:19] <graingert> damoreno: Maybe you just want pydantic?
[14:30:30] <graingert> damoreno: why don't you want the defaults set explicitly?
[14:30:44] *** Joins: pnoud (~pnoud@user/pnoud)
[14:31:03] <graingert> damoreno: https://cattrs.readthedocs.io/en/latest/customizing.html#omit-if-default
[14:31:45] <damoreno> graingert: I'm using pydantic. Also, what do you mean to be set explicitly?
[14:33:05] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:34:15] <graingert> damoreno: As just always send all properties even if they're the default
[14:34:19] <graingert> Seems safer that way
[14:35:12] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 250 seconds)
[14:35:22] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[14:35:25] <damoreno> graingert: Not my requirements. They want to have just the user defined fields in the file
[14:36:17] *** Joins: easior (~easior@61.155.142.67)
[14:38:06] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[14:38:41] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 272 seconds)
[14:38:44] <graingert> damoreno: https://pydantic-docs.helpmanual.io/usage/exporting_models/#modeljson exclude_unset
[14:40:51] <damoreno> graingert: I'm using a pydantic dataclass. Doesn't seem that it has json
[14:41:25] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[14:42:04] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:42:18] <damoreno> graingert: they don't https://pydantic-docs.helpmanual.io/usage/dataclasses/#json-dumping
[14:43:03] *** Joins: kmh (~kmh@p200300df5f3e6100ecc68ffbff104c01.dip0.t-ipconnect.de)
[14:44:50] *** Joins: easior_ (~easior@61.155.142.67)
[14:45:36] <graingert> damoreno: Use a BaseModel then
[14:45:40] *** Joins: darksun (~darksun@user/darksun)
[14:46:06] *** Joins: snalty (~Shhh@user/snalty)
[14:46:11] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 244 seconds)
[14:46:28] <damoreno> Again, requirements. My hands are tied in so many ways ^^. With this, I don't think there's a simpler way to return a safe struct...
[14:47:21] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[14:48:49] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[14:48:49] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 272 seconds)
[14:50:19] *** Joins: rememberYou (~someone@user/rememberyou)
[14:51:19] *** Quits: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af) (Remote host closed the connection)
[14:52:07] *** Joins: greedom (~greedom@i5E86B323.versanet.de)
[14:52:29] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[14:53:35] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Client Quit)
[14:54:52] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[14:55:32] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:7c55:3c65:74e1:3dc5)
[14:56:57] *** Joins: Adoi (~Adoi@user/adoi)
[14:57:27] *** Joins: scaleww (~Cmaj6@77-41-20-31.ftth.glasoperator.nl)
[14:58:46] *** Quits: upsala1 (~zcb@193.32.127.213) (Quit: WeeChat 3.2)
[15:02:51] *** Joins: easior__ (~easior@61.155.142.67)
[15:03:23] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[15:03:30] <ph88> can someone help me with geopandas? the map is not showing any colors for choropleth https://bpa.st/JRYA
[15:06:28] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[15:07:14] *** Joins: easior_ (~easior@61.155.142.73)
[15:07:31] *** Quits: damoreno (~damoreno@redhat/damoreno) (Quit: leaving)
[15:10:28] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[15:10:47] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[15:12:05] *** Joins: thiras (~thiras@user/thiras)
[15:13:22] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[15:15:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:17:42] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[15:19:14] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[15:20:10] *** Parts: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) ()
[15:20:47] *** Joins: Vonter (~Vonter@user/vonter)
[15:23:50] *** Quits: meffis (4949ed1c@ircip1.mibbit.com) (Remote host closed the connection)
[15:24:34] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[15:26:58] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 265 seconds)
[15:28:28] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[15:29:08] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[15:30:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:30:14] *** Quits: dominique_michel (~Dominique@mob-194-230-158-179.cgn.sunrise.net) (Ping timeout: 250 seconds)
[15:31:03] *** Joins: Vonter (~Vonter@user/vonter)
[15:33:41] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[15:37:56] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[15:38:19] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[15:38:36] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 272 seconds)
[15:46:20] *** Quits: Strom (strom@fedora/strom) ()
[15:46:47] *** Joins: kosh (~kosh@user/kosh)
[15:48:27] *** Joins: Strom (strom@fedora/strom)
[15:52:24] *** Quits: ilmostro (~ilmostro@fedpad.nebulae.systems) (Quit: WeeChat 3.0.1)
[15:52:34] *** Joins: ilmostro (~ilmostro@fedpad.nebulae.systems)
[15:52:45] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[15:53:35] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[15:55:07] *** Joins: {HD} (~{HD}@37.19.197.182)
[16:00:19] *** Joins: cdown (~cdown@89.32.122.5)
[16:02:41] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:04:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:04:54] *** Quits: dibas (~dibas@user/dibas) (Quit: Leaving...)
[16:06:59] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[16:07:17] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:07:25] *** Joins: dibas (~dibas@user/dibas)
[16:08:47] *** Quits: dibas (~dibas@user/dibas) (Client Quit)
[16:11:16] *** Joins: dibas (~dibas@user/dibas)
[16:11:40] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 252 seconds)
[16:12:34] *** Quits: dibas (~dibas@user/dibas) (Client Quit)
[16:14:53] *** Quits: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl) (Read error: Connection reset by peer)
[16:15:06] *** Joins: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl)
[16:15:24] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[16:18:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:20:38] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[16:27:16] *** Joins: revolve (~u0_a227@82-132-245-22.dab.02.net)
[16:27:45] *** Joins: skapata (~Skapata@user/skapata)
[16:28:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:29:12] *** Joins: {4144} (~{4144}@46.56.70.183)
[16:30:20] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Ping timeout: 268 seconds)
[16:30:21] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:30:26] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[16:30:44] *** Joins: kostkon_ (~androirc@2a02:1388:93:f549:4a77:b296:e9e:e3c3)
[16:31:06] *** Joins: pnoud (~pnoud@user/pnoud)
[16:32:14] *** Quits: kostkon_ (~androirc@2a02:1388:93:f549:4a77:b296:e9e:e3c3) (Read error: Connection reset by peer)
[16:32:54] *** Joins: kostkon_ (~androirc@2a02:1388:93:f549:29bd:f439:3944:ece7)
[16:32:56] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 252 seconds)
[16:33:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:34:07] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 258 seconds)
[16:35:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[16:35:55] *** Quits: p-i- (~Ohmu@node-m5q.pool-125-25.dynamic.totinternet.net) (Remote host closed the connection)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 250 seconds)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:40:42] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[16:41:41] *** Joins: ionface (~ionface@user/ionface)
[16:41:44] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[16:42:02] *** Joins: Cleverness (~clevernes@pool-173-52-60-189.nycmny.fios.verizon.net)
[16:42:05] *** Quits: aniruddha (~aniruddha@103.242.197.118) (Quit: WeeChat 1.9.1)
[16:42:12] *** Joins: jinsun (~quassel@user/jinsun)
[16:43:01] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[16:44:13] *** Quits: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl) (Quit: sajran)
[16:44:28] *** Quits: Cleverness (~clevernes@pool-173-52-60-189.nycmny.fios.verizon.net) (Client Quit)
[16:45:02] *** Joins: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl)
[16:47:57] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Quit: Leaving)
[16:53:20] *** Quits: kostkon_ (~androirc@2a02:1388:93:f549:29bd:f439:3944:ece7) (Ping timeout: 272 seconds)
[16:57:56] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Quit: abraxas)
[16:59:16] *** Joins: maum (~maum@1.245.147.30)
[16:59:18] <maum> hello
[16:59:42] *** Joins: kostkon_ (~androirc@2a02:587:a100:18e:850e:324e:46d7:468e)
[17:00:08] <maum> how can I reindex with row https://bpa.st/TPLA
[17:00:15] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 256 seconds)
[17:01:11] <maum> the row values are not changed by index
[17:01:34] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[17:04:26] *** Joins: acresearch (~acresearc@user/acresearch)
[17:04:39] <jinsun> maum: reindex is giving you a new dataframe, not modifying the original
[17:04:53] <gitesh> What's the difference between a folder and a directory?
[17:05:12] <maum> jinsun: how can I modify the original?
[17:06:33] <gitesh> If I open a file, which existed, for writing with "w" what will happen to that existed file?
[17:07:04] <maum> I think it will be overwrite
[17:07:28] <gitesh> How can you say it overwrite if new file is created?
[17:07:45] <maum> if the file name is same
[17:07:56] <gitesh> Yes the file name is same
[17:08:13] <jinsun> maum: well normally pandsa functions have a inplace argument, but reindex doesn't so the only thing you can do is to reassign the result back to the original name, df = df.reindex(...)
[17:09:09] *** Joins: rindolf (~rindolf@87.68.240.240.adsl.012.net.il)
[17:09:30] <maum> jinsun: after df = df.reindex, I combine two dfs using pd.concat([a, b], axis=1) but b df values are all NaN .. how can I solve this?
[17:10:25] <maum> jinsun: pd.concat will work if the index is same ,,, am I right? so.. I reindex the df and tried concat function
[17:11:06] <maum> jinsun: but if I use outer option, df just append df2
[17:12:35] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[17:13:23] <jinsun> maum: yes concat will put NAs wherever the index doesn't match. can you paste that concat code somewhere?
[17:13:28] *** Joins: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056)
[17:13:50] *** Joins: derelict (~derelict@user/derelict)
[17:14:21] *** Quits: paravida (~paravida@user/paravida) (Quit: Leaving)
[17:14:40] <maum> it is just pd.concat([df1, df2], axis=1) but the index is different
[17:15:06] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[17:15:14] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 265 seconds)
[17:15:24] <maum> therefore I tried to reassign the values according to index using reindex.
[17:15:47] <jinsun> and what is df1 and df2?
[17:16:15] *** Joins: aod (~a@201.209.177.95)
[17:16:24] <aod> helpo please
[17:17:09] *** Quits: revolve (~u0_a227@82-132-245-22.dab.02.net) (Read error: Connection reset by peer)
[17:18:04] <maum> https://bpa.st/TCSQ
[17:18:08] <rindolf> aod: hi
[17:18:15] *** Joins: heco (~redrum@user/redrum88)
[17:18:16] <aod> Hi rindolf
[17:18:17] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[17:18:24] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[17:18:26] <rindolf> aod: https://dontasktoask.com/
[17:18:45] <maum> ah wait a minute
[17:19:42] *** Joins: Alexer (~alexer@alexer.net)
[17:20:06] <maum> https://bpa.st/DXQA
[17:20:12] <maum> here is the df1, df2
[17:20:18] <aod> rindolf https://bpa.st/JUCA
[17:20:22] <aod> XD
[17:20:25] *** Joins: easior_ (~easior@61.155.142.73)
[17:21:07] *** Joins: u0_a117 (~u0_a117@191.35.79.116)
[17:21:08] <aod> python is givin me some trouble.
[17:21:33] *** Joins: cdown_ (~cdown@89.32.122.5)
[17:21:35] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[17:21:48] *** Quits: kmh (~kmh@p200300df5f3e6100ecc68ffbff104c01.dip0.t-ipconnect.de) (Quit: Leaving)
[17:22:40] <rindolf> aod: tab-completion?'
[17:22:47] <jinsun> maum: there are no NAs if you do `pd.concat([df1_test, df2_test], axis=1)` order of the index doesn't matter, pandas matches them by value
[17:23:17] <aod> https://pasteboard.co/K8ozZCG.jpg
[17:23:32] <rindolf> aod: are you starting tab-completion?'
[17:24:24] <rindolf> aod: requires js
[17:24:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:24:29] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:24:47] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:26:14] *** Quits: u0_a117 (~u0_a117@191.35.79.116) (Quit: WeeChat 3.0.1)
[17:26:27] *** Joins: u0_a117 (~u0_a117@177.10.203.30)
[17:26:31] *** Quits: onu (~onufn@gibbs.uberspace.de) (Ping timeout: 268 seconds)
[17:26:35] *** u0_a117 is now known as Coder_000
[17:27:06] <bjs> aod: what's the trouble that Python is giving you?
[17:27:27] *** Joins: easior__ (~easior@61.155.142.73)
[17:27:30] <maum> jinsun: my real data doesn't work
[17:27:42] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:14b:79f8:9a0b:e112) (Quit: Leaving)
[17:28:09] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:29:00] <jinsun> maum: what happens? you get NA in some places or NAs everywhere?
[17:29:33] *** Joins: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com)
[17:29:33] <maum> jinsun: https://bpa.st/3ANA
[17:29:37] <OliverUK> Hello
[17:29:44] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 265 seconds)
[17:29:50] *** Quits: aod (~a@201.209.177.95) (Ping timeout: 250 seconds)
[17:30:00] *** Joins: korg815 (~korg815@user/korg815)
[17:30:12] <OliverUK> In threading and multiprocessing you start each one with .start()
[17:30:31] <OliverUK> And if you don't join them then the rest of the script will run
[17:30:40] *** Joins: aod (~a@201.209.177.95)
[17:30:43] <OliverUK> So to get the results you use .join()
[17:30:49] <OliverUK> I understand this
[17:30:52] <aod> i don't know what you mean, 1st i just type `help("modules")`, 2nd I install pyOpenGL type `help("modules")` and got error, sometimes crash, kicking me out the interpreter
[17:30:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[17:31:00] <aod> pyOpenGL  is the only thing i installed
[17:31:15] *** Joins: kmh (~kmh@p200300df5f3e6100dd8abf4c678f29f0.dip0.t-ipconnect.de)
[17:31:20] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[17:31:25] <kmh> snake eyes!
[17:31:37] <aod> withou pyOpenGL `help("modules") work fine.
[17:31:37] <OliverUK> Say you have two threads that you want to start, t1 and t2
[17:31:40] *** Quits: greedom (~greedom@i5E86B323.versanet.de) (Ping timeout: 265 seconds)
[17:32:12] *** Joins: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af)
[17:32:13] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[17:32:24] *** Joins: easior (~easior@61.155.142.70)
[17:32:26] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 250 seconds)
[17:33:18] <OliverUK> t1 takes 10 seconds to run and t2 takes 1 second to run.  You run t1.start() and then t2.start() and then t1.join() and then t2.join()
[17:33:20] <jinsun> maum: hmm somehow it is not considering those indices same even though they look same, they are just string indices or some other type of object?
[17:33:40] <bjs> aod: what's the error?
[17:33:53] <OliverUK> How does the script know to run t2.join() and not wait for t1 to finish?
[17:33:56] <maum> jinsun: other type?
[17:34:07] <bjs> OliverUK: it doesn't, it waits for t1 to finish first, then reaches the t2.join line
[17:34:15] <maum> I get those data from excel
[17:34:22] <OliverUK> bjs: ah
[17:34:26] <maum> read_excel
[17:34:31] <OliverUK> I watched a tutorial and that wasn't clear
[17:34:35] *** Joins: ripdog (~quassel@user/ripdog)
[17:34:41] *** Quits: tims (~tims@193-82-247-42.tpgi.com.au) (Ping timeout: 258 seconds)
[17:34:52] <OliverUK> How would you set them all to join before they finish
[17:34:59] <bjs> OliverUK: your code did that
[17:35:04] <OliverUK> Can you run .join() before .start()?
[17:35:08] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[17:35:22] <bjs> OliverUK: no.  `join` would perhaps be better named `wait_for_thread_to_finish`
[17:35:43] <bjs> as that's what it does. t1.join() waits for t1 to finish
[17:35:58] <bjs> OliverUK: so `t1.join()` then `t2.join()` after both joins both threads have finished
[17:36:01] *** Quits: ripdog_ (~quassel@user/ripdog) (Ping timeout: 272 seconds)
[17:36:14] <OliverUK> Which command would mean wait_for_all_threads_to_finish?
[17:36:21] <aod> rindolf do you get some error if you `help('modules')
[17:36:21] <aod> i have all update i thing
[17:36:23] <bjs> OliverUK: there is no command, what's wrong with what you're doing?
[17:36:29] <bjs> OliverUK: calling join on each threaD?
[17:36:35] *** Joins: ice9 (~ice9@user/ice9)
[17:36:57] <aod> bjs https://pasteboard.co/K8ozZCG.jpg that strange window if i type `help("modules") with pyOpenGL installed.
[17:37:05] <OliverUK> bjs: What if t2 finishes before t1 finishes
[17:37:26] <OliverUK> So you're calling t2.join() after it has finished
[17:37:29] <Repiphany> Then t2.join() finishes instantly
[17:37:35] <bjs> OliverUK: yes that's fine, it'll be finished so it won't have to wait
[17:37:54] <OliverUK> Oh I see
[17:38:09] <OliverUK> I assumed you had to join it while it was still running
[17:38:10] <jinsun> maum: it is probably some unicode thing, those indices look same but are actually completely different strings
[17:38:14] <bjs> OliverUK: nope
[17:38:50] <bjs> aod: oh, the white box on the right? is that what you mean?
[17:38:57] <rindolf> aod: it takes a while
[17:39:19] <maum> jinsun: df1 is from dictionary , df2 is from read_excel
[17:39:40] <OliverUK> In the tutorial there was also explained a method of doing the same with concurrent.futures that I think can return the results in the order of completion
[17:39:53] <maum> jinsun: how can I make the same unicode
[17:40:08] <OliverUK> Which I think is more like what I want
[17:40:45] <OliverUK> bjs: Thank you for your help
[17:40:57] <aod> yes please
[17:41:09] *** Joins: mesa (mesaboogie@user/mesaboogie)
[17:41:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:42:07] *** Joins: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com)
[17:42:59] *** Joins: jdmark (~jdmark@172.58.172.59)
[17:43:04] *** Joins: northernsage (~northerns@187.107.158.146)
[17:43:07] <aod> bjs the error is in line 3 https://bpa.st/JUCA
[17:43:15] *** Quits: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af) (Quit: Konversation terminated!)
[17:43:20] *** Quits: candy (~tvrtko@93-138-115-250.adsl.net.t-com.hr) (Quit: WeeChat 2.8)
[17:43:25] <bjs> aod: is that an error? it just looks like a message, or maybe a warning? it didn't do anything bad
[17:43:43] *** Joins: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af)
[17:43:45] *** mesa is now known as mesaboogie
[17:43:57] <aod> if i isntall other stuff i need kicks me out
[17:44:10] <bjs> aod: you mean when you run help("modules") /
[17:44:17] *** Joins: patstoms (~patstoms@tzt.lv)
[17:44:22] <aod> like `pip install virtualenv pillow matplotlib numpy pyopengl glfw pyrr`
[17:44:41] <aod> hm yes.
[17:44:55] <patstoms> how do you check if dict do not have a key?
[17:44:56] *** Joins: easior_ (~easior@61.155.142.67)
[17:45:05] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:45:11] <bjs> aod: can't you just like, stop trying to run help("modules") if it doesn't work for those modules
[17:45:15] <bjs> patstoms: if key not in dict
[17:45:28] <aod> ok
[17:45:29] <patstoms> oh, thanks bjs
[17:46:23] <aod> yes bjs, thanks very much.
[17:46:44] <bjs> aod: looks like help("modules") tries to run the modules https://bugs.python.org/issue12902 and one of the modules you have installed is doing something bad
[17:46:44] <aod> but it is very weird.
[17:47:44] <aod> ok i will leave for now.
[17:48:06] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 252 seconds)
[17:48:12] <jinsun> maum: no idea about those characters, so I can't say, but if I paste in my terminal they don't even look same, 권민  is 5 characters and 권민 is 2 characters
[17:49:03] <maum> jinsun: I see
[17:49:07] <aod> Bye to all.
[17:49:10] *** Quits: aod (~a@201.209.177.95) (Quit: leaving)
[17:49:43] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:49:57] *** Joins: easior__ (~easior@61.155.142.73)
[17:52:20] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[17:52:23] <maum> jinsun: they are object type
[17:52:57] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[17:53:30] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[17:53:51] *** Joins: easior (~easior@61.155.142.70)
[17:53:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:54:56] <jinsun> maum: the first one is actually 6 characters not 5, but anyway you need to find some way to join characters of first one into the "big" character from the second one, or split the second one into characters which look same if they are put side by side
[17:55:48] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 244 seconds)
[17:55:48] *** Joins: stefanos82 (~stefanos8@93-63-24.netrun.cytanet.com.cy)
[17:55:48] *** Joins: Plazma (~weenis@user/plazma)
[17:56:36] *** Quits: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af) (Remote host closed the connection)
[17:57:04] *** Joins: easior_ (~easior@61.155.142.67)
[17:57:20] *** Joins: node1 (~node1@user/node1)
[17:57:22] *** Joins: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af)
[17:57:30] *** Quits: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af) (Remote host closed the connection)
[17:57:56] *** Joins: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af)
[17:57:56] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[17:58:04] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 258 seconds)
[17:58:26] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: Lost terminal)
[17:58:32] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[17:58:50] *** Joins: zeden (~zeden@user/zeden)
[17:58:59] <jinsun> maum: pandas calls string index as object type also, to see the type of individual element do type(df.index[0]), but now it seems they are just strings that look same but actually different
[17:59:27] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[17:59:57] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Quit: leaving)
[18:00:05] <maum> there are str
[18:00:10] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 250 seconds)
[18:00:17] <maum> type(df.index[0]) returns only str
[18:00:39] *** Quits: Coder_000 (~u0_a117@177.10.203.30) (Quit: WeeChat 3.0.1)
[18:00:50] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[18:00:55] *** Joins: u0_a117 (~u0_a117@177.10.203.30)
[18:00:57] *** Joins: demophoon5 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[18:01:12] *** Quits: u0_a117 (~u0_a117@177.10.203.30) (Client Quit)
[18:01:14] <maum> how can I make them same
[18:02:07] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 265 seconds)
[18:02:28] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:04:12] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[18:04:20] *** Joins: reset (~reset@user/reset)
[18:07:35] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.110)
[18:07:35] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[18:08:29] *** Joins: p-i- (~Ohmu@node-m5q.pool-125-25.dynamic.totinternet.net)
[18:09:50] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:10:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Client Quit)
[18:11:05] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:11:40] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.110) (Client Quit)
[18:12:05] *** Quits: death916 (~death916@user/death916) (Ping timeout: 268 seconds)
[18:13:04] *** Joins: northernsage (~northerns@187.107.158.146)
[18:13:14] *** Quits: p-i- (~Ohmu@node-m5q.pool-125-25.dynamic.totinternet.net) (Ping timeout: 265 seconds)
[18:15:28] *** Joins: Nact (~l@host-85-27-125-155.dynamic.voo.be)
[18:15:50] *** Joins: Morteza24 (~Morteza24@91.245.254.68)
[18:16:58] *** Joins: xsperry (~as@user/xsperry)
[18:18:52] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:19:21] *** Quits: maum (~maum@1.245.147.30) (Quit: Client closed)
[18:19:44] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[18:19:44] *** Joins: hegstal_ (~hegstal@2a02:c7f:7604:8a00:1f42:2755:1fbb:af5c)
[18:20:12] *** Joins: p-i- (~Ohmu@node-m5q.pool-125-25.dynamic.totinternet.net)
[18:23:27] *** hegstal_ is now known as hegstal
[18:23:54] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[18:24:02] *** Joins: death916 (~death916@user/death916)
[18:24:25] *** Quits: northernsage (~northerns@187.107.158.146) (Ping timeout: 268 seconds)
[18:26:35] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:dcf4:a95:503c:a72d)
[18:27:22] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-a590-a395-4a04-5d4c.res6.spectrum.com)
[18:28:37] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[18:29:44] <graingert> maum: you could use unicodedata.normalize
[18:29:48] <graingert> oh they left?
[18:30:19] *** Joins: diek (~diek@187.36.4.113)
[18:30:32] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[18:31:21] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[18:31:44] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[18:31:56] *** Joins: pnoud (~pnoud@user/pnoud)
[18:32:10] <Mangy_Dog> I need some help getting a self contained python program to work... I suspect I have something on my computer causing a conflict. Im using a image asset convert for an embedded project. Im using the self contained version so it "shouldnt" be relying on any external resourse. But sadly its not working. It did used to work in the past. But stopped now. This is the error im getting https://bpa.st/LYQ
[18:32:10] <Mangy_Dog> A  Does anyone know whats causing this assumed conflict? In windows 10 pro. Ive even made sure to uninstall python just in case something there was causing the conflict.
[18:33:04] <Mangy_Dog> im hoping that conflicts like this are well known and common enough that people know what to get rid of
[18:34:50] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 250 seconds)
[18:35:04] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 244 seconds)
[18:36:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[18:36:34] *** Quits: Blankspace (~abcd@user/blankspace) (Ping timeout: 250 seconds)
[18:36:37] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 244 seconds)
[18:38:20] *** Joins: northernsage (~northerns@187.107.158.146)
[18:38:32] *** Quits: stefanos82 (~stefanos8@93-63-24.netrun.cytanet.com.cy) (Quit: Leaving)
[18:39:28] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[18:39:48] <jinsun> Mangy_Dog: that link is not correct, maybe you missed one character
[18:40:13] <Mangy_Dog> https://bpa.st/LYQA
[18:40:15] <Mangy_Dog> :)
[18:43:07] *** Joins: anon16 (~anon16@37.236.110.10)
[18:43:22] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:dcf4:a95:503c:a72d) (Quit: Leaving)
[18:43:42] <anon16> Hello there, is there a function that's like bin() but actually returns a proper integer (instead of a string)?
[18:44:24] <anon16> `print(type(0b101))` -> `<class 'int'>`
[18:44:24] <anon16> `print(type(bin(5)))` -> `<class 'str'>`
[18:44:24] <anon16> This is obviously undesirable
[18:45:35] <deniska> 0b101 is a proper integer already
[18:45:35] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[18:46:02] *** Joins: northernsage (~northerns@187.107.158.146)
[18:46:20] <deniska> there's no special "binary integer type" because all integers are… well, that
[18:47:12] *** Quits: cdown_ (~cdown@89.32.122.5) (Quit: https://chrisdown.name)
[18:47:12] <anon16> Hmm, so there's no way to represent binary integers in python?
[18:47:27] <deniska> anon16: how would it differ from int?
[18:48:05] *** Quits: greedom (~greedom@2001:16b8:2e8f:1d00:33b7:1492:e6f2:59af) (Quit: Konversation terminated!)
[18:48:06] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:48:07] <Mangy_Dog> jinsun any idea?
[18:48:56] *** Joins: onu (~onufn@gibbs.uberspace.de)
[18:48:58] <anon16> deniska: one difference is that I want to be able to print it directly, instead of using (bin) everytime
[18:49:09] <hogarius> anon16: there are ways to show an integer in binary format, or in decimal format, or in hexidecimal format...
[18:50:04] <anon16> Got it, thanks for the help
[18:50:12] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:dcf4:a95:503c:a72d)
[18:50:38] <deniska> anon16: not sure whether it's a good or bad solution, but you may try subclassing int giving it a different __format__
[18:50:46] <deniska> or __str__
[18:53:21] *** Quits: Morteza24 (~Morteza24@91.245.254.68) (Ping timeout: 265 seconds)
[18:53:31] <Mangy_Dog> or does anyone know how to fix my problem?
[18:56:51] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:57:10] *** Joins: zebrag (~chris@user/zebrag)
[18:58:13] *** Joins: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net)
[18:58:15] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[18:58:17] *** Joins: DaNeenjah (~jake@102.129.152.150)
[18:59:07] <jinsun> Mangy_Dog: can't say much without seeing the code, or even the line that is giving the error, what is in File "gd3asset", line 61 ?
[18:59:20] <Mangy_Dog> i have no idea
[18:59:22] <Mangy_Dog> like i say
[18:59:28] <Mangy_Dog> this is meant to be a self contained python program
[18:59:40] <Mangy_Dog> so it shouldnt be relying on any external links
[18:59:48] <Mangy_Dog> it should all be packed inside its own little vm i assume
[19:00:06] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:00:08] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[19:00:46] *** Quits: kostkon_ (~androirc@2a02:587:a100:18e:850e:324e:46d7:468e) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:00:48] <nedbat> Mangy_Dog: where did it come from?
[19:00:59] <kn100> I am fairly new to Python, coming from Golang. I would like to write a http server that responds to requests with JSON, and not much else. What is the package that people use for this? I use Gorilla Mux in Go, so something along those lines!
[19:01:05] <Mangy_Dog> https://excamera.com/sphinx/gameduino2/code.html
[19:01:07] <Mangy_Dog> gameduino
[19:01:10] *** Joins: Akuli (~Akuli@2001:999:40:c1fe:21e:65ff:fe37:6b62)
[19:01:18] <nedbat> kn100: FastAPI is a web framework that is good at that.
[19:01:27] <kn100> nedbat thanks, lemme look into it!
[19:01:32] <Mangy_Dog> i was using the contained package as ive had issues running python on this computer in the past
[19:01:39] <grawity> anon16: are you actually working with the integers as *numbers*, or are they supposed to be bit-arrays that don't necessarily have anything numeric?
[19:01:43] <Mangy_Dog> the self contained program did used to work
[19:01:46] <Mangy_Dog> but stopped now
[19:01:56] *** Joins: kompowiec (~kvirc@89-64-45-89.dynamic.chello.pl)
[19:01:57] <grawity> anon16: because if it's the latter, there is the 'bitstring' module in pip...
[19:02:08] <Mangy_Dog> like i say i suspect something must be conflicting it... in my dev enviroments
[19:02:17] <kn100> nedbat yep this looks precisely like what I want, thank you <3
[19:02:26] <raek> Mangy_Dog: I'm looking at this line: "No such file or directory: 'format'". is "format" part of the path you pass to the tool?
[19:02:44] <Mangy_Dog> no its an argument
[19:02:53] <Mangy_Dog> for setting the image format to convert to
[19:03:10] <anon16> grawity: will take a look, thank
[19:03:15] <anon16> *thanks
[19:03:27] <raek> Mangy_Dog: can you show us the command line you are trying to run?
[19:03:47] <Mangy_Dog> gd2asset -3 -o sci1.h -f sci1.gd2 sci1_frame.png,format=RGB565 sci1_grid.png,format=RGB565 scanbracket1.png,format=RGB565 minigraph.png,format =RGB565 redlightoff.png,format=RGB565 redlight1.png,format=RGB565
[19:03:56] <raek> it looks like the file path argument gets the value "format", so maybe some other argument it mission or is incorrect
[19:04:14] <Mangy_Dog> you run the asset in the same location as the source images
[19:04:16] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:04:23] <grawity> is there supposed to be a space in that "format =RGB565"
[19:04:37] <Mangy_Dog> hmm
[19:04:38] *** Joins: lunc (~moe@user/lunc)
[19:04:40] <raek> Mangy_Dog: should there be a space after the "minigraph.png,format"?
[19:04:48] <Mangy_Dog> maybe not
[19:04:50] <Mangy_Dog> testing
[19:04:56] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[19:05:15] * Mangy_Dog bangs his head on the table and sighs
[19:05:18] <Mangy_Dog> working
[19:05:32] <Mangy_Dog> that was it
[19:05:46] <Mangy_Dog> << really smart dog but on occation a right idiot
[19:08:34] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[19:11:03] <Mangy_Dog> i must admit though its a bit annoying that a space like that can make a program fall apart
[19:11:28] <Mangy_Dog> youd think argument calls would be a little more robust than that
[19:12:46] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:12:51] *** Joins: aniruddha (~aniruddha@103.242.197.118)
[19:12:57] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[19:13:01] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[19:13:15] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[19:14:20] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:dcf4:a95:503c:a72d) (Quit: Leaving)
[19:14:54] <jinsun> the program doesn't even get the space so it is not really its fault, it gets the stuff before space as one argument and the stuff after as another
[19:15:34] *** Quits: sajran (~Thunderbi@user-5-173-253-182.play-internet.pl) (Read error: Connection reset by peer)
[19:15:40] *** Joins: sajran1 (~Thunderbi@89-64-36-84.dynamic.chello.pl)
[19:16:25] <jinsun> but the message could be better when it gets weird input like that
[19:16:36] <Mangy_Dog> indeed
[19:16:46] <Mangy_Dog> at least its working and i can get on with my stuff
[19:17:10] <Mangy_Dog> i havent used the converter tool in over a year so i couldnt remember what conflicts might have been the issue
[19:17:20] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[19:17:30] <Mangy_Dog> i knew that the python dev kits had caused problems with other tools for the same hardware in the past
[19:17:35] <Mangy_Dog> so i assumed it was a conflict issue agian
[19:17:44] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.2)
[19:17:59] *** sajran1 is now known as sajran
[19:18:20] *** Joins: hyh (~hyperlink@5.182.73.35)
[19:18:26] *** Joins: dibas (~dibas@user/dibas)
[19:19:27] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[19:20:20] *** Joins: maxxe (~maxxe@user/maxxe)
[19:23:11] *** Quits: scaleww (~Cmaj6@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[19:23:51] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::29)
[19:24:03] *** Quits: sajran (~Thunderbi@89-64-36-84.dynamic.chello.pl) (Remote host closed the connection)
[19:24:32] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[19:25:08] *** Joins: ctrypoph (~ctrypoph@2607:fb90:18d6:9849:fedc:d252:d282:9d8e)
[19:25:32] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[19:26:18] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[19:29:20] *** Joins: N4G4R41 (~CircuitLo@user/n4g4r41)
[19:29:30] *** Quits: maxxe (~maxxe@user/maxxe) (Quit: off)
[19:30:16] *** Joins: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13)
[19:31:25] *** Joins: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7)
[19:31:32] *** Quits: outsider (~sierkov@c89-176.i07-23.onvol.net) (Ping timeout: 265 seconds)
[19:31:33] *** Quits: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13) (Remote host closed the connection)
[19:31:38] *** Quits: {HD} (~{HD}@37.19.197.182) (Ping timeout: 268 seconds)
[19:31:43] *** Quits: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7) (Remote host closed the connection)
[19:31:51] *** Quits: N4G4R41 (~CircuitLo@user/n4g4r41) (Client Quit)
[19:32:59] *** Joins: bluefox (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[19:33:50] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[19:34:03] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:34:35] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[19:35:04] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 250 seconds)
[19:35:36] *** Quits: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net) (Quit: Konversation terminated!)
[19:36:12] *** Joins: Elodin (~weechat@user/elodin)
[19:37:33] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Quit: Leaving)
[19:38:12] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[19:40:00] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:dcf4:a95:503c:a72d)
[19:40:22] *** Joins: Adoi (~Adoi@user/adoi)
[19:40:33] *** Joins: Wulf (~Wulf@user/wulf)
[19:48:00] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[19:48:40] *** Joins: cliluw (~cliluw@47.147.80.149)
[19:48:43] <trace> how many python lines of code equals how many C lines of code loc =
[19:48:45] <trace> ?
[19:48:58] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[19:49:00] *** Joins: Adoi (~Adoi@user/adoi)
[19:49:19] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2)
[19:50:40] *** Joins: vicfred (~vicfred@user/vicfred)
[19:50:44] <Adoi> hello! which is the more preferable module to read / write files, csv, petl or pandas?
[19:50:58] *** Quits: Adoi (~Adoi@user/adoi) (Remote host closed the connection)
[19:51:14] *** Joins: Adoi (~Adoi@user/adoi)
[19:51:26] <Adoi>  sorry for disconnection, I am out somewhere
[19:53:11] <Adoi> looks like the channel, too :)
[19:53:35] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-e3a6-2d3a-abd1-9a63.res6.spectrum.com) (Remote host closed the connection)
[19:54:11] *** Quits: Nact (~l@host-85-27-125-155.dynamic.voo.be) (Quit: Konversation terminated!)
[19:55:52] *** Quits: rememberYou (~someone@user/rememberyou) (Ping timeout: 250 seconds)
[19:57:02] <acresearch> Adoi: i don't use either, i just use f.write... but pandas is a good choice and will take you a long way if you learn it
[19:57:21] *** Joins: Adois (~Adoi@user/adoi)
[19:58:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[19:58:46] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[19:59:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:00:37] <trace> when to make a function inside a function
[20:00:49] <trace> if it is a class method
[20:01:07] <kn100> so I am trying to parse a date in a stupid format, and here is my formatting directive `%b-%d-%Y %l:%M%P` - I am getting an error `'l' is a bad directive in format` - Do I need to escape the formatting directive when passing the string to strptime?
[20:01:14] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[20:01:19] <trace> because the problem is, you do not have self anymore as first variable
[20:02:54] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 244 seconds)
[20:04:30] <kn100> ah, I'm not used to error messaging being quite that useful - turns out I just had the wrong formatting directive. Needed %I and not %l
[20:06:45] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 272 seconds)
[20:06:59] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[20:07:17] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[20:07:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[20:08:50] *** Joins: Adoi (~Adoi@user/adoi)
[20:09:30] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:09:57] <theseb> help!  My Django server freezes after just a few hours....top shows uwsgi taking around 100% of cpu....Looking at syslog output is revealing....any ideas? how track down where cpu going?
[20:10:10] *** Joins: ctrypop29 (~ctrypoph@172.58.190.217)
[20:10:53] *** Quits: ominionx (~ominionx@38.135.235.14) (Remote host closed the connection)
[20:12:08] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[20:12:56] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[20:13:01] *** Quits: ctrypoph (~ctrypoph@2607:fb90:18d6:9849:fedc:d252:d282:9d8e) (Ping timeout: 268 seconds)
[20:14:13] *** Joins: ripdog (~quassel@user/ripdog)
[20:17:21] *** Joins: pnoud (~pnoud@user/pnoud)
[20:18:17] *** Quits: aniruddha (~aniruddha@103.242.197.118) (Quit: WeeChat 1.9.1)
[20:18:32] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[20:19:08] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[20:20:04] <Celelibi> Is there a way to create a module object dynamically?
[20:20:25] <theseb> Celelibi: well you could dynamically WRITE the code to a file and import it
[20:20:36] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[20:21:44] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[20:21:46] <Celelibi> Yeah, but that's not exactly what I meant.
[20:22:03] <Celelibi> I mean, I can create a new class dynamically with a meta class.
[20:22:35] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[20:23:00] <Celelibi> I was just wondering if I could do the same with modules.
[20:24:17] *** Joins: Auron (Auron956@user/auron)
[20:24:35] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:24:39] <bjs> Celelibi: why do you care about a module object specifically?
[20:25:13] <Celelibi> Hm. It's probably not something I'll implement, it's mostly out of curiosity, but here's the context:
[20:25:17] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[20:25:17] <bjs> Celelibi: the module type doesn't really... have anything on it
[20:25:17] *** Joins: darksun (~darksun@user/darksun)
[20:25:40] *** Joins: ano (~weechat@user/ano)
[20:26:02] <Celelibi> I'm playing with the UNO binding. The interface to communicate with libreoffice.
[20:26:25] <Celelibi> It defines an API with ton of modules and classes and interfaces and enums and whatnot.
[20:26:25] *** Joins: rritoch (~kvirc@222.127.246.55)
[20:26:56] <Celelibi> I made it browsable by having a class UnoModule that implements __dir__, it's pretty fun.
[20:27:51] <Celelibi> But I cannot "import" those things. If I want to access a given class (for instance) I have to use it as rootmodule.com.sun.star.something.TheClass
[20:28:01] *** Quits: Reinhilde (ellenor@2001:19f0:8001:279::4000:12) (Quit: Bye Open Projects!)
[20:28:20] <Celelibi> It implements __dir__ and __getattr__ (among other things).
[20:28:22] <bjs> Celelibi: and what would you prefer instead?
[20:28:49] <Celelibi> from com.sun.star.something import TheClass
[20:28:59] *** Joins: Ellenor (ellenor@vice-chairwoman.of.freenode.management)
[20:29:08] <bjs> Celelibi: but where does UnoModule come into this?
[20:29:24] *** Ellenor is now known as Reinhilde
[20:30:21] <Celelibi> I don't know. UnoModule is just my implementation that uses the introspection API to enumerate things and get a description of them.
[20:30:47] <Celelibi> Because, well, there is not really a "com" module.
[20:31:17] <Celelibi> And I don't really intend for there to be one. I don't want to recreate the whole hierarchy.
[20:31:27] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:31:31] <bjs> Celelibi: isn't the com.blah.blah module hierarchy part of the UNO bindings?
[20:31:37] <bjs> what is "rootdir" ?
[20:31:43] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[20:32:05] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[20:32:22] <Celelibi> rootmodule is an instance of UnoModule that handles the root of the module hierarchy.
[20:32:33] <Celelibi> And no, there's no com module wherever in the python world.
[20:33:18] <Celelibi> If I want to access a class somewhere, I'd have to call something like uno.getInstance("com.sun.star.WhatEver")
[20:33:50] *** Quits: anon16 (~anon16@37.236.110.10) (Ping timeout: 252 seconds)
[20:35:10] <bjs> Celelibi: doesn't the uno bindings install a com.sun.star.WhatEver module for you to import just like `from com.sun.star import WhatEver`?    at least I'm looking at http://www.openoffice.org/udk/python/python-bridge.html
[20:35:43] <Celelibi> It doesn't.
[20:36:01] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:36:07] <bjs> Celelibi: so is that documentation misleading?
[20:36:22] <Celelibi> What part are you refering to?
[20:36:24] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 252 seconds)
[20:37:03] <bjs> Celelibi: the parts of that page that go `from com.sun ...`
[20:37:29] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[20:37:30] <Celelibi> Well, I've this here and there, I don't know where this come from.
[20:38:17] <bjs> Celelibi: what?
[20:38:27] <bjs> I struggled to parse that sentence
[20:38:29] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[20:38:47] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:dcf4:a95:503c:a72d) (Quit: Leaving)
[20:38:52] <Celelibi> Hm, this comes from unohelper.
[20:39:22] <Celelibi> I think.
[20:39:29] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Ping timeout: 272 seconds)
[20:39:46] <Celelibi> Anyway, that's just the context. My actual question was more about creating modules on the fly.
[20:40:04] *** Quits: abn (sid376310@id-376310.tinside.irccloud.com) (Ping timeout: 250 seconds)
[20:40:21] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[20:40:43] <Celelibi> Ah, I see, the uno module actually redefine __import__.
[20:41:00] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[20:41:35] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[20:41:58] *** Joins: chaosite (~chaosite@user/chaosite)
[20:42:01] <SnoopJ> D:
[20:42:59] *** Joins: abn (sid376310@id-376310.tinside.irccloud.com)
[20:43:01] <Celelibi> But it doesn't really support all forms of import. For instance I can't import com
[20:43:10] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 268 seconds)
[20:43:52] <Celelibi> I can only import classes, enums, constants and constant groups. Not just a module.
[20:45:13] *** Quits: cliluw (~cliluw@47.147.80.149) (Remote host closed the connection)
[20:45:39] <Celelibi> I guess if I wanted to do it better I could have __import__ return an object UnoModule in these cases. And implement all the right methods to make them behave like proper modules.
[20:45:42] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[20:46:02] <bjs> Celelibi: well the import system has real hooks, (see the importlib module) which are probably a better starting point
[20:46:10] <bjs> Celelibi: but doesn't this "unohelper" thing add the imports for the things you wanted?
[20:46:23] *** Joins: cliluw (~cliluw@47.147.80.149)
[20:46:34] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:09] <Celelibi> It's not unohelper, it was a decoy. I just never tried to import a class directly. I thought "what could be simpler than import com?"
[20:47:28] <Celelibi> It's the uno module itself that redefines __import__.
[20:48:09] <Celelibi> bjs, what do you mean "add the imports for the things you wanted"?
[20:48:41] <bjs> Celelibi: I mean your question was because you wanted to be able to do `from com.star.sun ...` imports
[20:48:54] *** Joins: Gerula_ (~Gerula@user/gerula)
[20:48:54] *** Quits: Gerula (~Gerula@user/gerula) (Killed (tantalum.libera.chat (Nickname regained by services)))
[20:48:54] *** Gerula_ is now known as Gerula
[20:49:18] <bjs> and I'm just wondering if this weird import thing uno is doing solves it for you or whether it's not what you wanted still
[20:49:37] <Celelibi> I's fairly limited.
[20:49:45] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Quit: Leaving)
[20:49:53] <Celelibi> But now I know how I would do it. ^^
[20:50:04] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[20:50:06] <bjs> Celelibi: well you'd use importlib if you wanted to mess with what the `import` statement(s) do
[20:50:10] *** Joins: darksun (~darksun@user/darksun)
[20:50:18] <Celelibi> I'll check that out.
[20:50:21] <bjs> it has hooks that let you hook directly into the import system and make module objects and stuff
[20:50:41] *** Joins: kosh (~kosh@user/kosh)
[20:50:42] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[20:51:06] *** Quits: node1 (~node1@user/node1) (Read error: Connection reset by peer)
[20:51:27] *** Joins: node1 (~node1@user/node1)
[20:51:48] <xrogaan> is it me, or math.sqrt is significantly faster than numpy.sqrt?
[20:52:35] *** Joins: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[20:52:49] <SnoopJ> xrogaan, over how much data?
[20:52:52] *** Quits: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:52:56] <bjs> xrogaan: I'd expect numpy.sqrt to have a little more overhead (because there's just more code before it actually starts doing the square root stuff), but the actual work to be basically the same
[20:52:59] *** trace is now known as trace987
[20:53:19] <SnoopJ> Yea, I would expect numpy.sqrt() to do worse for a single value or a small series of values, but to pull way ahead for many values
[20:53:24] <xrogaan> depends on the data actually
[20:53:38] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:53:45] <xrogaan> https://dpaste.com/5S5ZJKAZ8
[20:53:58] <xrogaan> oh, N=100000
[20:54:04] <SnoopJ> In [7] there is an antipattern
[20:54:16] <SnoopJ> a loop over an ndarray is the worst of both worlds, you should basically never do it
[20:54:34] <bjs> xrogaan: I'd expect calling numpy.sqrt N times to be slower than calling math.sqrt N times.
[20:54:46] <SnoopJ> In [9] is idiomatic and the fastest, since the equivalent loop is happening on the C side
[20:54:48] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[20:54:49] <bjs> xrogaan: because you should call numpy.sqrt once with an array of N values
[20:55:41] <Celelibi> Rule of thumb: avoid loops in python.
[20:55:58] <gitesh> with <create some object that understands context> as <some name>:
[20:56:02] <xrogaan> But math.sqrt can't work on arrays. So it would actually depends on the type of data?
[20:56:04] <SnoopJ> I don't agree with that at all, but with ndarray specifically it's to be avoided
[20:56:05] <gitesh> do some stuff with the object
[20:56:13] <bjs> xrogaan: yes, math.sqrt doesn't work on arrays that's why it has less overhead
[20:56:17] <SnoopJ> xrogaan, right, numpy.sqrt() has strictly more functionality
[20:56:26] <bjs> xrogaan: numpy.sqrt has to start by going "is this an array?" and that's just work it has to do every time
[20:56:39] <gitesh> does an object understand context? or context understand object?
[20:57:09] <bjs> gitesh: an object either is, or is not, a context manager
[20:57:12] <Celelibi> gitesh, it has __enter__ and __exit__ methods.
[20:57:14] <bjs> gitesh: it depends what methods the object has.
[20:57:22] <SnoopJ> and if it's not an array but it's array-like, it has to construct an array, which involves a lot of busywork (which can dominate execution time for small data)
[20:57:46] <gitesh> alright this is cool stuff i guess it's called context manager
[20:57:51] <gitesh> but it's advance topic
[20:58:13] <bjs> gitesh: yes, it's also a fairly Python-specific thing.  https://docs.python.org/3/reference/datamodel.html#with-statement-context-managers is the documentation for it
[20:58:14] <gitesh> i got that, thanks.
[20:58:26] <bjs> gitesh: that said, it is a very common thing and if you do a lot of Python you will see them everywhere.
[20:58:41] <theseb> I have a web app where the cpu usage for the uwsgi daemon shots up to 100% every hour or so.  I don't see in any logs what the hell is causing this?  Any ideas how to drill down into why this one specific uwsgi proces does this when the others are fine?
[20:58:48] *** Joins: diek (~diek@187.36.4.113)
[20:59:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[20:59:37] <xrogaan> Right, numpy is to work on arrays.
[20:59:46] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[20:59:51] *** Joins: N4G4R41 (~CircuitLo@user/n4g4r41)
[21:00:14] *** Quits: N4G4R41 (~CircuitLo@user/n4g4r41) (Client Quit)
[21:00:39] *** Joins: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13)
[21:00:58] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[21:01:34] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[21:02:10] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[21:04:02] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[21:06:04] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[21:06:40] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[21:07:09] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[21:09:39] *** Joins: darksun (~darksun@user/darksun)
[21:10:29] *** Quits: rritoch (~kvirc@222.127.246.55) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[21:10:49] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:11:24] *** Joins: clawh (~clawh@185.244.214.60)
[21:11:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:12:46] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[21:13:03] <theseb> Anyone ever heard of uwsgi threads or master causing cpu spikes? (e.g. django app?)
[21:13:17] *** Quits: ctrypop29 (~ctrypoph@172.58.190.217) (Remote host closed the connection)
[21:14:50] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[21:15:15] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[21:16:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:19:29] *** Joins: redgloboli (~redglobol@user/redgloboli)
[21:21:30] <marduk> theseb: maybe turn on/up logging/debug
[21:22:08] <marduk> I have not seen that before but have seen nginx cpu spikes.
[21:24:58] *** Quits: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) (Quit: Leaving.)
[21:26:04] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[21:26:09] *** Joins: unary (~unary@ternary.ca)
[21:26:44] <theseb> marduk: when i run uwsgi in a terminal i see various lines emitted as a visit web pages....does that mean logging is on?
[21:28:07] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[21:28:35] *** Joins: djapo (~archangel@user/djapo)
[21:29:32] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[21:29:34] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[21:31:15] *** Joins: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com)
[21:33:10] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[21:33:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 258 seconds)
[21:34:23] <Payam> hi, I am trying, using Selenium select a element in a dropdown list then get the website. but it does not find the element. Can anybody help me with this? https://bpa.st/ITTA
[21:37:53] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[21:38:14] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[21:39:01] *** Quits: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com) (Remote host closed the connection)
[21:39:32] <marduk> theseb: I'm guessing that uwsgi has different log levels, so I'm suggesting increasing the log level and see if you get some kind of clue.
[21:39:37] *** Joins: foozle (~foozle@2001-b011-c001-10fb-73f8-8f1e-e9f7-51db.dynamic-ip6.hinet.net)
[21:39:52] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[21:40:30] <Payam> I want to click on that entry in the drop down list and get get the innerhtml of an element
[21:40:52] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 272 seconds)
[21:41:02] <theseb> marduk: truly just turning off threads and this thing in uwsgi called "master" seemed to have fixed the cpu spike....not sure logs ever would have caught this..i just had a hunch from some stackoverflow post i saw
[21:43:50] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[21:44:05] *** Joins: clawh (~clawh@185.244.214.60)
[21:44:09] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[21:44:38] *** Quits: foozle (~foozle@2001-b011-c001-10fb-73f8-8f1e-e9f7-51db.dynamic-ip6.hinet.net) (Quit: Leaving)
[21:45:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:45:18] *** Quits: diek (~diek@2804:14d:7681:82bd:1904:9de:68c1:7e13) (Ping timeout: 272 seconds)
[21:45:19] *** Joins: jwon (~jwon@2001:470:69fc:105::4f0c)
[21:45:44] *** Joins: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com)
[21:46:34] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 272 seconds)
[21:46:36] *** Joins: clawh (~clawh@185.244.214.60)
[21:47:23] *** Joins: sebastianos (~sebastian@user/sebastianos)
[21:47:25] *** Quits: rindolf (~rindolf@87.68.240.240.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:48:16] <mastardet> Payam: those dropdowns are loaded via XHR. That said, you should at least wait a couple of seconds before trying to apply that XPath
[21:48:48] *** Quits: andrewSC (~andrewSC@95.179.141.168) (Quit: WeeChat 3.1)
[21:49:02] <Payam> should I have a sleep?
[21:49:18] *** Joins: u0_a117 (~u0_a117@177.10.203.30)
[21:49:43] <Payam> I mean it doesn't find anything even when try this in ipython
[21:49:45] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[21:49:45] <mastardet> Payam: do you really need to use Selenium in this case?
[21:49:52] <Payam> not really
[21:50:09] <Payam> you mean I should go with the driver itself?
[21:50:18] <mastardet> Payam: I'd suggest (now that you know that there's a XHR request) to analyze the POST request and do it manually
[21:50:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:50:34] <Payam> have you seen the website?
[21:50:39] <Nothing4You> do you have any recommendations for rate limiting across different independent processes?
[21:50:57] <Payam> mastardet, https://www.ikanobostad.se/hyra-bostad/ the dropdown list that says "Län"
[21:51:57] <Nothing4You> basically i'm trying to not go over a certain request limit when hitting an api that i use in multiple independent python applications
[21:52:00] <mastardet> Payam: you have Alla, Vastmandlands Lan, Skane Lan, Stockholms Lan
[21:52:14] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[21:52:14] <Payam> yes and I want to choose the one that says "Stockholm"
[21:52:32] *** Quits: Maple (~Maple@user/maple) (Read error: Connection reset by peer)
[21:52:41] <mastardet> Payam: so, Stockholms Lan and to the right "Stockholm" ?
[21:52:44] *** Joins: rememberYou (~someone@user/rememberyou)
[21:53:31] <Payam> no only Stockholms län is enough
[21:54:38] *** Joins: ray (~ray@user/re)
[21:55:42] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[21:55:49] *** Quits: u0_a117 (~u0_a117@177.10.203.30) (Quit: WeeChat 3.0.1)
[21:56:29] *** Joins: magla (~gelignite@55d467e5.access.ecotel.net)
[21:58:53] *** Quits: jabberwock (~jessy@user/jabberwock) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[21:59:39] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-243.range86-150.btcentralplus.com)
[21:59:57] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:00:53] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[22:00:55] *** Joins: easior_ (~easior@61.155.142.67)
[22:02:06] *** Joins: jabberwock (~jessy@user/jabberwock)
[22:04:07] <mastardet> Payam: https://asciinema.org/a/K0erWUXXixQNP7ckrKiAnmB9m
[22:04:12] *** Joins: henistein (~henistein@2001:8a0:c1b3:6b01:e4bb:85c6:c93b:f239)
[22:05:17] <henistein> I want to build python from source to armv7. I have a cross compiler clang for armv7. How can I build python using this compiler?
[22:05:19] <mastardet> you just need to study what the site does and then just replay the same yourself using any language or tools
[22:05:28] *** Joins: kosh (~kosh@user/kosh)
[22:05:41] *** Quits: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com) (Remote host closed the connection)
[22:05:49] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[22:06:04] <mastardet> Payam: so you can make that request with Python and then use json lib to parse data and get the results you want
[22:06:14] <mastardet> no need to use Selenium
[22:06:59] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:08:11] *** Quits: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[22:09:57] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[22:10:00] *** Joins: Maple (~Maple@user/maple)
[22:11:53] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[22:12:14] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:12:46] <Payam> mastardet, where did you find the api?
[22:13:03] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[22:13:08] <mastardet> Payam: just use Web Inspector and see the XHR that are done
[22:13:47] <Payam> wow
[22:13:56] <Payam> I really need to learn these stuff
[22:14:14] <mastardet> Payam: here you have all the results https://dpaste.org/qnoF
[22:14:31] <Payam> is it webdevelopment?
[22:18:14] *** Joins: pnoud (~pnoud@user/pnoud)
[22:18:34] <mastardet> Payam: it is
[22:20:36] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[22:21:25] *** Quits: nubonix (uid492751@id-492751.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:23:03] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:23:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[22:24:21] *** Joins: cheater (~Username@user/cheater)
[22:24:39] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[22:26:01] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 244 seconds)
[22:27:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[22:27:43] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:27:50] <dba> Hi, why am I geting inst_id is not defined error in here https://bpa.st/IHLQ ?
[22:27:56] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[22:28:53] *** Quits: jwon (~jwon@2001:470:69fc:105::4f0c) (Changing host)
[22:28:54] *** Joins: jwon (~jwon@user/jwon)
[22:29:00] <dba> revised code https://bpa.st/WNPQ
[22:29:53] *** Joins: jazzy (~jaziz@2600:380:8753:52bc:b84e:2ddb:61ff:c252)
[22:30:04] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[22:31:02] <mastardet> dba: sure, line 10 should be less indented and "inst_id" in that line is not defined. You should pass a value there, instead of the variable name "inst_id"
[22:31:32] *** Joins: cliluw (~cliluw@47.147.80.149)
[22:32:09] *** Joins: Mat1010 (~Mat1010@168.181.209.58)
[22:32:10] <dba> mastardet, the value is passed with the class I want to use the same value
[22:32:11] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:32:13] *** Parts: Mat1010 (~Mat1010@168.181.209.58) ()
[22:32:27] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[22:32:36] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[22:32:44] <mastardet> dba: in the code you shared, there is no value. Please provide the complete code, then.
[22:33:06] <Payam> by some reason that jq doesnt process the json for me
[22:33:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:33:57] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:33:57] <mastardet> Payam: that's off-topic here. I'd suggest to do it in Python. Use requests and json libs.
[22:34:18] <dba> mastardet, I meant when I initiate  the class i pass teh inst_id value like Room(inst_id=123123)
[22:34:28] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[22:34:29] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[22:34:54] <mastardet> dba: then share the updated code so I can see clearly
[22:35:19] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 244 seconds)
[22:36:12] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[22:36:17] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:37:19] <dba> mastardet, this is all my code https://bpa.st/GVTA my porblem is error showing inst_id is not defined
[22:37:52] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 268 seconds)
[22:40:05] <bjs> dba: did you mean to call it inside __init__, like `self.json_data = self.get_room(inst_id)` ?
[22:40:46] *** Joins: Betal (~Beta@user/betal)
[22:41:50] <mastardet> dba: maybe you can explain what you want to achieve with your code
[22:42:36] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::29) (Quit: WeeChat 3.0.1)
[22:42:36] *** Quits: rendar (~rendar@user/rendar) ()
[22:45:31] <dba> bjs, mastardet: not sure how classes works but when I define a function foo(x) that take x as an argument I can use x anywhere inside the function. I am trying to do the same thing here with the class. I deffined a class Room(inst_id) that take inst_id as argument to use it any where inside the class. but when I did as shown in the example it is saying not defined
[22:45:49] <bjs> dba: yes, but inst_id is the argument to the __init__ function
[22:45:58] <bjs> dba: and your get_room(inst_id) call is outside the __init__ function.
[22:46:25] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Read error: Connection reset by peer)
[22:46:46] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[22:47:16] <bjs> dba: nothing magical is happening inside classes here,  there are functions (e.g. __init__ and get_room) and they have some arguments (e.g. self, inst_id and room_obj) and you can use those anywhere inside the functions.
[22:48:32] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:49:14] <dba> bjs, Thanks for your help
[22:49:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:51:38] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[22:51:42] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[22:52:13] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2)
[22:53:16] *** Joins: lazar (~lazar@user/lazar)
[22:53:25] <lazar> does it make any sense to write windows desktop apps in python?
[22:53:55] <lazar> A rich text editor, that sort of things.
[22:54:19] <dba> bjs, isnt it  def __init__() where we define argument the class takes?
[22:54:38] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[22:54:40] <bjs> dba: well, it's the function that gets called when you go `Room(inst_id)` yes
[22:54:51] <bjs> dba: but like any other function, its arguments are only available inside the function
[22:54:51] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[22:55:38] *** Joins: diek (~diek@2804:14d:7681:82bd:adf1:f9c:2c1c:a026)
[22:57:28] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[22:57:44] *** Joins: ice9 (~ice9@user/ice9)
[22:58:06] <dba> bjs: very strange i was able to use inst_id inside a function in the class but I could not use it outside a function in the class
[22:58:20] *** Joins: snac73 (~textual@151.53.207.133)
[22:58:26] <bjs> dba: that's the same as any other function though?
[22:58:33] <bjs> you can use the arguments inside the class but not outside
[22:58:40] <bjs> inside the function*
[23:00:02] <dba> bjs: working code https://bpa.st/HWIQ it kind of mind boggling
[23:01:46] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[23:01:46] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 250 seconds)
[23:02:15] *** Joins: ice9 (~ice9@user/ice9)
[23:02:29] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[23:03:17] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[23:03:21] <bjs> dba: why is it mind boggling?
[23:03:36] <bjs> dba: functions have arguments, you can use those arguments inside the function, but not outside.
[23:04:49] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:cc06:cd85:be74:3e83)
[23:06:06] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:dcf4:a95:503c:a72d)
[23:09:10] *** Joins: wovixo (~wovixo@066-168-055-092.biz.spectrum.com)
[23:09:25] *** Joins: andrewSC (~andrewSC@95.179.141.168)
[23:10:01] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[23:10:29] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[23:10:43] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[23:10:46] <nedbat> dba: we can help clarify what's going on here if you have questions
[23:11:19] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:11:24] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[23:12:03] *** Joins: mathgrad (~mathgrad@2600:8806:3003:f756:f5cd:a8c9:c2ee:d59f)
[23:13:05] *** Joins: Adoi (~Adoi@user/adoi)
[23:13:30] <dba> bjs, nedbat: inst_id is defined inside function __init__() and I was able to use it inside different function get_json() that what i found strange
[23:13:48] *** Quits: diek (~diek@2804:14d:7681:82bd:adf1:f9c:2c1c:a026) (Remote host closed the connection)
[23:13:55] <nedbat> dba: but you didn't use inst_id in get_json: you used self.inst_id
[23:13:57] <bjs> dba: but you didn't use it,  see you said `self.inst_id`, you used `self` which *is* an argument
[23:14:03] <bjs> dba: and in __init__ you said `self.inst_id = inst_id`
[23:14:12] <mathgrad> What data type should I be using in a pandas data frame for integers that get fairly large, the int64 wraps around to negatives
[23:14:30] <KirkMcDonald> mathgrad: How large is "fairly large"?
[23:15:08] <mathgrad> 1470**6
[23:15:14] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Read error: Connection reset by peer)
[23:15:20] <mathgrad> on top of that I need to perform a regression on these numbers
[23:15:39] <dba> bjs, nedbat: thanks got it now
[23:16:21] *** Joins: upsala (~zcb@193.32.127.213)
[23:16:52] <KirkMcDonald> mathgrad: Well, that just happens to be outside the range of a signed 64-bit integer, but inside the range of an unsigned one.
[23:17:44] <KirkMcDonald> As for performing a regression, I don't actually know offhand what that implies about the required range.
[23:17:44] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[23:17:52] *** Quits: jdmark (~jdmark@172.58.172.59) (Read error: Connection reset by peer)
[23:19:16] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[23:22:31] *** Joins: ice99 (~ice9@user/ice9)
[23:22:53] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[23:23:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:24:35] *** Parts: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) ()
[23:25:34] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: I'll be back soon)
[23:26:00] *** Quits: snac73 (~textual@151.53.207.133) (Quit: Textual IRC Client: www.textualapp.com)
[23:26:00] *** Joins: stoneware (~stoneware@user/stoneware)
[23:26:12] *** Joins: WebStorm (~WebStorm@user/webstorm)
[23:26:46] *** Quits: stoneware (~stoneware@user/stoneware) (Client Quit)
[23:27:10] *** Joins: stoneware (~stoneware@user/stoneware)
[23:27:25] <WebStorm> should I use JavaScript or Python
[23:28:16] <mefistofeles> WebStorm: what for?
[23:28:23] <WebStorm> full stack web dev
[23:28:27] <mefistofeles> both :(
[23:28:30] <mefistofeles> err :)
[23:28:36] *** jkl is now known as jkl1337
[23:28:43] <WebStorm> I've been told to learn Node/Express
[23:28:50] <WebStorm> instead of Python/Django or Flask
[23:29:03] <mefistofeles> well, the more tools you have and know, the better I guess
[23:29:17] <mefistofeles> this is a python channel, so of course here we would suggest the python tools
[23:29:20] <mathgrad> KirkMcDonald: using statsmodels I still get what might look like non-sense as the coefficients
[23:29:34] <Akuli> i have never tried to learn a specific framework
[23:29:46] <Akuli> if you give me a project written in some framework i have never heard of, that'
[23:29:48] <Akuli> s fine .D
[23:30:44] *** jkl1337 is now known as jkl
[23:31:31] *** Quits: jkl (~jkl@45-19-26-123.lightspeed.cicril.sbcglobal.net) (Changing host)
[23:31:31] *** Joins: jkl (~jkl@user/jkl)
[23:32:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:32:16] *** Joins: diek (~diek@187.36.4.113)
[23:38:34] *** Joins: BUSY (~BUSY@user/busy)
[23:42:04] *** Joins: MikZyth (~MikZyth@188.65.242.79)
[23:42:28] <mathgrad> KirkMcDonald: As far as the type of data I'm using tese values are on the low end.  Is there a "arbitrarily large" number type I can use with pandas?
[23:42:37] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Ping timeout: 268 seconds)
[23:44:25] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Quit: nurupo.ga)
[23:45:28] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[23:46:32] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[23:47:17] <Adoi> hello, is "pickle" still insecure?
[23:47:17] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 258 seconds)
[23:48:00] <bjs> Adoi: yes
[23:48:05] <bjs> and always will be
[23:49:43] *** Quits: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt) (Ping timeout: 244 seconds)
[23:49:52] <nedbat> Adoi: only use it if you trust the source of the pickle, or if you have nothing of value
[23:49:55] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[23:50:05] <Adoi> bjs, it then surprises me that "petl" package has a "pickle files" section for it; https://petl.readthedocs.io/en/stable/io.html#pickle-files
[23:50:08] *** Joins: clawh (~clawh@185.244.214.60)
[23:50:32] <nedbat> Adoi: there are plenty of uses where pickles are not a risk
[23:50:36] <Adoi> ah
[23:51:14] <bjs> Right,  if you trust where the pickle came from then it's not a problem
[23:51:14] <Adoi> so if there is no particular warning that it is insecure, we can rely on it?
[23:51:30] <nedbat> Adoi: you have to trust the source of the pickle.
[23:51:41] <Adoi> but I suppose petl is an ok package?
[23:51:42] <nedbat> Adoi: if a bad guy makes a pickle, and you unpickle it, you are at risk
[23:51:55] <nedbat> Adoi: petl is not a bad package (note: i have never heard of petl before)
[23:52:04] <nedbat> Adoi: but using pickles doesn't make it a bad package.
[23:52:07] <Adoi> :)
[23:52:12] <bjs> Adoi: well you shouldn't give petl a pickle you don't trust, if it's opening them
[23:52:55] <bjs> and whether you should use a pickle it generates is down to whether you trust the library.  Obviously anything "bad" the pickle would do the library could just do directly in that situation so it's less of a concern
[23:52:56] <Adoi> no, I dont give a pickle :)
[23:53:34] <bjs> Adoi: think of it like this: pickles (can) contain snippets of Python code and reading a pickle will execute it
[23:53:49] <bjs> You shouldn't read (or use a library which reads..) pickles you do not trust,  since the pickle could run any code
[23:54:02] *** Joins: Pickchea (~private@user/pickchea)
[23:54:24] <Adoi> looks like pickle is a small part among many of file read / write cases of petl,
[23:54:55] <Adoi> so it probably shouldnt hurt if one chooses not to use it
[23:55:27] *** Joins: jdmark (~jdmark@67.8.137.130)
[23:57:12] * Adoi just doesnt pickle a dime
[23:57:48] <KirkMcDonald> mathgrad: I know very little about pandas, but I know that in numpy, you can use a dtype(object) and store Python int objects in the array. (Though of course this is not nearly as performant as using native integer types.)
[23:58:17] <KirkMcDonald> This will give you arbitrary-precision integers.
