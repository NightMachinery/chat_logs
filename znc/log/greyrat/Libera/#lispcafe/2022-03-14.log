[00:02:26] <selwyn> as a theorist there is not much i feel i can contribute to this field
[00:04:36] <shka> well, you said that you can slap quantum in front of everything and it makes sense 
[00:05:04] <shka> so time for QUANTUM LASER NUCLEAR FISSION xD
[00:10:32] * shka just found article
[00:10:41] <shka> Problem of nuclear-laser power engineering
[00:11:01] <shka> ... they also apparently build lasers out of nuclear reactors
[00:11:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[00:15:22] <shka> ‚ÄúWe had access to too much money, too much equipment, and little by little, we went insane‚Ä¶‚Äù
[00:15:29] <shka> that's my vibe here
[00:17:54] <selwyn> lasers are basically quantum anyway
[00:18:26] <shka> yeah, good point actually
[00:18:38] <shka> so is nuclear fusion and fission 
[00:18:59] <shka> sun would not be able to fuse hydrogen if not for quantum mechanics
[00:22:20] <shka> selwyn: so in summary only nuclear engineering is not quantum
[00:23:16] <selwyn> are you talking about this paper? https://www.researchgate.net/publication/336043204_Problem_of_nuclear-laser_power_engineering_and_methods_of_their_solution
[00:23:17] -ixelp- (PDF) Problem of nuclear-laser power engineering and methods of their solution
[00:23:26] <shka> selwyn: yes
[00:23:36] <selwyn> i dont have time to read all of it now
[00:23:41] <selwyn> but it looks weird
[00:23:52] <shka> yeah, but it kinda make sense 
[00:24:05] <shka> you can use nuclear plasma as a pumping medium
[00:24:08] <shka> in theory at least
[00:24:15] <shka> no idea why would you want to do it
[00:26:40] <selwyn> i uh
[00:26:43] <selwyn> what confines the plasma
[00:29:21] <shka> selwyn: by plasma i mean just fission fragments
[00:30:04] <shka> and yeah, this article is weird to me, but i am not into lasers
[00:31:41] <selwyn> it shouldn't be that weird to us that lasers can affect nuclear reactions
[00:31:51] <selwyn> they are used in most of the fusion designs
[00:32:03] <shka> yeah
[00:32:36] <shka> but you would not expect to have overlap between people building lasers and people building nuclear reactors
[00:33:32] <shka> https://www.spiedigitallibrary.org/conference-proceedings-of-spie/1411/0000/Characteristics-of-pulsed-nuclear-reactor-pumped-flowing-gas-lasers/10.1117/12.43615.short?SSO=1
[00:33:33] -ixelp- Characteristics of pulsed nuclear-reactor-pumped flowing gas lasers
[00:33:39] <shka> selwyn: this looks more accessible 
[00:34:45] <shka> and this https://www.cambridge.org/core/journals/laser-and-particle-beams/article/abs/pulsed-nuclear-reactors-in-nuclearpumped-laser-research/4477A36735900AAFF9037F3538FF4078
[00:34:46] -ixelp- Pulsed nuclear reactors in nuclear-pumped laser research | Laser and Particle Beams | Cambridge Core
[00:35:09] <shka> I wonder what kind of practical applications this kind of technology can see 
[00:35:51] <shka> good night all
[00:36:53] <selwyn> goodnight
[00:37:09] *** Joins: lisp123 (~lisp123@120.154.103.52)
[00:37:49] <shka> oh, look at that https://cdn.discordapp.com/attachments/711875709382950982/952665341987790868/1647202526867.png
[00:39:31] <shka> selwyn: let me know when you see mushroom cloud outside xD
[00:40:52] <pl> shka: I'd say I'd tell you earlier, but I expect EMP to knock my connectivity out first ;)
[00:41:27] <shka> pl: nah man, I am pretty sure that I will notice nuclear attack on Poland :P
[00:41:27] <pl> also a note, that "NFZ" would have to start with invasion in Kaliningrad Oblast
[00:41:55] <pl> shka: I have major garrison including some american presence less than 50 km away :D
[00:42:10] <pl> and EW/Radar factory across the street :P
[00:42:15] <shka> cool
[00:42:40] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 272 seconds)
[00:42:52] <shka> in that case, don't forget your cyanide pills, because radiation sickness fucking sucks man
[00:42:54] <pl> meanwhile thanks to cynical plea to get our russian-controlled parliament to do more, I coined a new title
[00:42:56] <pl> "My Little Putin: FAE is Magic"
[00:44:17] <shka> it would be really nice if somebody would finally put Putin out of his misery 
[00:44:51] <pl> shka: I wonder how the hell people got the idea that Smole≈Ñsk was result of thermobaric explosion
[00:45:21] <shka> please, i don't even want to discuss this 
[00:45:51] <pl> wise man
[00:46:22] <shka> there is not even point in discussing technical aspects
[00:47:34] <shka> what kind of assassination plan is supposed to hinge on attempting to violate landing procedure by the target?
[00:48:30] <shka> the whole "plan" falls apart when crew does it's job and not performs the landing approach
[00:48:48] <pl> even if the crew was perfectly trained for suicide job, they would have hard time getting the same FDR/CVR results
[00:48:51] <shka> it is "bioweapons in Ukraine" level of stupid
[00:50:20] <selwyn> i watched the polish film about the plane landing for maybe 10 minutes
[00:50:26] <selwyn> *plane crash
[00:50:33] <selwyn> there was one good scene in it
[00:50:52] <shka> "Yes mr Lavrov, certainly USA has biological weapons in Ukraine, and we know that they knew about that invasion for like 2 months, and they certainly not simply ordered destruction of those weapons"
[00:51:22] <shka> "And no, we don't need proof for presence of biological weapons in Ukraine, we trust you"
[00:52:18] <pl> that said, if NoFly Zone is to be established, it would have to start with mass bombing of Kalingrad Oblast
[00:52:26] <shka> biological weapons: the only WMD that you can simply burn
[00:52:45] <shka> pl: yeah, NFZ won't happen
[00:53:13] <shka> hopefully assassination of Putin happens 
[00:53:35] <shka> because this man has no value for the Russian political system at the moment
[00:53:43] <pl> I mean, sure, sometimes you want to really fucking burn the place to erase the bioweapon
[00:53:57] <pl> but that's usually after it escaped
[00:54:04] <shka> pl: no, just burn the containers
[00:54:13] <shka> simple, 100% effective
[00:54:25] <shka> and you can use RUSSIAN GAS for that :P
[00:54:27] <pl> shka: I meant in case if it's already in the ecosystem and sci-fi virulent level
[00:55:03] <shka> eh, let's not go into sci-fi territory 
[00:55:14] <shka> i worked in a bacterial lab
[00:55:29] <shka> want to get rid of your culture?
[00:55:32] <shka> simply burn it 
[00:56:04] <shka> not to the ground even
[00:56:18] <shka> just... you know
[00:56:37] <selwyn> lots of people seem to think you can set off a nuclear bomb by lighting it
[00:56:42] <selwyn> like an acme bomb
[00:57:21] <pjb> In fact, you need a secondary bomb to create quickly the critical mass.
[00:57:27] <pjb> So, yes, an acme bomb.
[00:57:28] <shka> well, wtf i am even doing here 
[00:57:29] <hayley> https://www.youtube.com/watch?v=7MgSmh3vXaQ
[00:57:29] -ixelp- Top Gear - James May attempts to ignite a SS-18 Satan nuclear missle with a lighter - YouTube
[00:57:56] <shka> i swear, this war ruins me psychologically 
[00:58:02] <shka> hours worth of doom scrolling
[01:01:48] <moon-child> ...huh
[01:01:53] <moon-child> isn't cps kinda the same as threaded interpretation?
[01:02:32] * hayley uploaded an image: (162KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/uCloABtbzcfdGFNAYXmHSTgS/evil-baker.jpeg >
[01:07:17] *** Joins: Alfr (~Alfr@user/alfr)
[01:09:54] <pl> selwyn: well... it kinda became important topic in design of nukes
[01:10:49] <pl> selwyn: and when USA accidentally dirty-bombed Albuquerque, they didn't have those advanced countermeasures (and that's why poor cow is probably the only entry on the list of "kills by dirty bomb")
[01:41:00] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[02:08:42] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 252 seconds)
[02:09:30] <hayley> https://www.apple.com/nl/test/
[02:10:55] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:13:32] <drbluefall> god that looks ancient
[02:13:45] <drakonis> raku looks disgustingly oversized, jeeze
[02:14:01] <drakonis> drbluefall: it looks ancient because it is
[02:14:13] <drakonis> its not like anyone has been there ever since apple started shipping itunes with macs
[02:14:28] <drbluefall> I mean like
[02:14:36] <drakonis> which isnt wrong, because that's exactly what happened
[02:14:40] <drbluefall> I haven't seen that kind of design since I was a kid
[02:14:49] <drakonis> this must've predated osx's release
[02:15:11] <drbluefall> fascinating to look at
[02:15:15] <drbluefall> wonder if there's any more
[02:25:59] *** Joins: lisp123 (~lisp123@120.154.103.52)
[02:30:32] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[02:35:09] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:36:50] <kakuhen> <gilberth> "I mean in this sense. Suppose..." <- in clojure, i believe you can treat any indexed collection like this
[02:37:09] <kakuhen> at the very least, you can do something like ([1 2 3] 1) to access index 1
[02:37:16] <kakuhen> and for hash maps you can pass in keys
[02:37:34] *** Joins: notzmv (~zmv@user/notzmv)
[02:37:35] <kakuhen> it's one of the only things i miss from clojure while using common lisp
[02:38:58] <kakuhen> oh another nifty thing, FIRST, SECOND, and LAST work on all collections i believe, so you can do (first '(1 2 3)) and (first [1 2 3])
[02:39:57] <kakuhen> in CL you have to (aref #(1 2 3) 0) if you use a vector, and so on
[02:40:10] <hayley> "Anyhow, what really bothers me with those languages is that they are very un-modular as I usually define a new 'f' to work in x.f(y) outside the class definition of whatever class "y" is of. I can define a new f(x,y) though"
[02:40:15] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 240 seconds)
[02:40:21] *** Quits: trn (jhj@sourcehut/user/trn) (Ping timeout: 245 seconds)
[02:40:36] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 240 seconds)
[02:41:31] *** Joins: trn (jhj@sourcehut/user/trn)
[02:42:16] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[02:42:35] <hayley> One can monkey-patch classes in a modular way in Newspeak. e.g. class MyModule basedOn: smth = (| Base = smth. |) ( public class NewClass = smth NewClass (| moreCrap = 42. ... |) ( ... ) )
[02:43:47] <hayley> (The language really mandates another class indirection e.g. on page 7 of https://bracha.org/newspeak-modules.pdf but I regard this to be a mistake, because Gilad is scared of having arbitrary forms for superclasses.)
[02:46:03] <hayley> I'm not a big fan of generic sequence accessing things, because they can hide the O(). e.g. don't try to ELT a linked list. Alexandria's shuffle IIRC does that and suffers dreadfully. The domains and ranges of such "functions" also differ, but granted you could also say that for any other sort of function.
[02:48:57] <hayley> (Hm, I guess the extra indirection is warranted because Newspeak confuses modules and classes in a good way, and you can _inherit_ modules from modules. Thus you want to inherit the rest of the library. So thus "class ExtendModule basedOn: smth = (| Base = smth. |) ( public class NewModule ... = Base ... ( public class SomeClass = super SomeClass (| moreCrap = 42. |) ( ... ) ) )")
[03:03:44] * hayley scours logs and finds moon-child linked https://people.csail.mit.edu/wjun/papers/sigtbd16.pdf
[03:04:40] <selwyn> queen seems ill
[03:05:14] <hayley> "Considering each BrainFuck command on average takes 5 or more assembly instructions to implement, even assuming a perfect 1 instructions per second on a 3GHz processor, it would require almost one hundred cores to compete with this performance" An interesting estimation. 4 map trivially to x86 INC and DEC, 2 probably need "syscalls" of some sort, [ doesn't exist in machine language, and ] is TEST and JZ (I think).
[03:07:35] <moon-child> '1 instruction per second'
[03:08:06] <hayley> "perfect 1 instruction per second"
[03:08:20] * hayley uploaded an image: (167KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/NAamHepUILaTZLftoAtrEHVT/sad-baker.jpeg >
[03:08:59] <moon-child> '0.84 instructions per second on a core running at 250MHz, each core is capable of processing over 200M instructions per second'  sounds like they confused seconds with cycles?
[03:11:08] <hayley> Yes, that's quite poor for 250MHz.
[03:11:53] <moon-child> is it?  You have a RMW most cycles, so I think it is decent
[03:24:34] <hayley> 0.84 instructions per second.
[03:24:59] <hayley> 3.36 billionths of an instruction per cycle at 250MHz.
[03:33:21] * hayley disassembles code generated by her Brainfuck->CL compiler
[03:33:23] <hayley> ; Size: 73232 bytes. Origin: #x52EAF6D7                       ; (LAMBDA ())
[03:37:08] <gilberth> I would really appreciate if OpenVPN would give me some diagnostics message. Hard to tell what goes wrong, when all you know is "Doesn't work."
[03:37:37] <moon-child> y u no wireguard
[03:38:17] <gilberth> What?
[03:39:14] <semz> this can't actually happen [Condition of type SIMPLE-ERROR]
[03:50:47] <hayley> https://www.reddit.com/r/rust/comments/tcxrs3/announcing_savage_a_computer_algebra_system/ massively inferior Macsyma
[03:51:13] <hayley> "While that executable will of course grow as Savage matures, the plan is to eventually deliver a useful computer algebra system in 5 MB or less." You have a PDP-10 with 5 MB of RAM? Wow!
[03:52:11] <gilberth> Ok. The server game a hint. I have a connection now. But where is the "N" in VPN? My two clients can't see each other. :(
[03:52:54] <gilberth> I am not patient enough for sysadmin work. Would I be rich I'd hire someone.
[03:52:58] * hayley finds it funny that the C++ students have to work out how to check preconditions, but can't return early, and can't throw exceptions.
[03:53:15] <hayley> abort() or assert() probably wouldn't be taught.
[03:55:48] <kakuhen> we learned assert in my c++ class
[03:56:00] <kakuhen> but we were only taught it to "debug" our code
[03:56:23] <kakuhen> because breakpoints in a debugger are too hard for math students to understand
[03:57:11] <kakuhen> it's kind of funny how just teaching a friend of mine to use breakpoints sped up his debugging tenfold for his CS projects
[03:57:19] <kakuhen> much more efficient than tracing a paper
[03:57:44] <hayley> "aren't you supposed to prepare for unexpected input?" "the design of C++ strongly suggests not"
[03:58:21] <kakuhen> runtime error checking is "bloat"
[03:59:38] <remexre> I bet if C++98 had a way to get the worker/wrapper transform in a syntactically convenient way we'd all be writing assert-heavy code, but
[03:59:39] <remexre> alas
[03:59:41] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[04:00:35] <hayley> If they can't use try/catch, I seriously hope at least exit() is allowed. Or abort(). Else we're fucked.
[04:01:16] <semz> I like how the one guy in that thread who points out that small executables aren't really a big selling point for CAS is downvoted into oblivion
[04:02:05] <kakuhen> hayley: silent failure is the unix certified ‚Ñ¢ handling of errors 
[04:02:24] <hayley> Is an infinite loop UB in C++?
[04:04:22] <moon-child> afaik while(1); is not, but while(i); is
[04:05:20] * hayley comes up with a list of fallback plans
[04:05:51] <hayley> If not throw, then assert. If not assert, then abort. If not abort, then raise(SIGABRT). If not raise(SIGABRT), then __asm__("ud2");
[04:06:07] <GreaseMonkey> or __builtin_trap();
[04:06:24] <gilberth> Since when is this in the C++ standard?
[04:06:25] <GreaseMonkey> maybe even use setjmp and longjmp
[04:06:57] <moon-child> oh, wait, no
[04:06:58] <hayley> gilberth: I hear it came from C. idk
[04:07:03] <moon-child> I think while(1); is ub only in c
[04:07:07] <moon-child> but infinite recursion is ub only in c++
[04:07:09] <moon-child> maybe?
[04:07:10] <gilberth> The ud2 instruction?
[04:07:12] <moon-child> err
[04:07:17] <moon-child> while(i); when i is nonzeor
[04:07:29] <hayley> ud2 is not, no.
[04:07:36] <gilberth> See.
[04:07:47] <moon-child> *(volatile char*)0=0
[04:07:53] <moon-child> ez
[04:08:00] <hayley> But, I reiterate, this is if one is not allowed to throw, abort, exit, or raise(SIGABRT). The lecturer asked for it.
[04:08:45] <semz> how is this supposed to work?
[04:09:08] <gilberth> moon-child: (char*)0 is UB. Learned that the hard way. Some bright guy decided to make clang compile ((char*)0 + k) to abort(); So no pointer forging for you. Sorry.
[04:09:08] <hayley> Early returns are also not allowed by the """style""" guide mandated in that course, so you can't really return error values either.
[04:09:35] <moon-child> gilberth: eh?
[04:09:41] <moon-child> (char*)0 is a null pointer constant
[04:10:06] <hayley> Clang says "foo.c:2:3: warning: indirection of non-volatile null pointer will be deleted, not trap" here.
[04:10:19] <gilberth> moon-child: Yes, and to turn an address from an integer into a pointer with clang you now need a union.
[04:10:22] <moon-child> yeah that's why I said *(volatile char*)0=0
[04:10:26] <moon-child> :P
[04:10:28] <GreaseMonkey> there are certain preconditions, postconditions and invariants which, if they fail, the program state is fundamentally broken and the best thing to do is to abort in such a way that, if the program is being debugged, or if the system is set up to drop core dumps, then the debugger can let you do a post-mortem
[04:10:45] <moon-child> gilberth: except when the integer is a constant 0
[04:10:48] <moon-child> this is guaranteed
[04:10:58] <hayley> GreaseMonkey: Yes, this "style" imposed on students does not allow for specifying preconditions at the least.
[04:11:29] <GreaseMonkey> so basically, afterthought-prayer-driven-development?
[04:11:35] <hayley> Yes.
[04:11:50] <GreaseMonkey> just because the input is good now doesn't mean the input will always be good
[04:11:57] <hayley> Well, you can, but you can't write multiple returns, so no if (!okay) { return BAD; }
[04:12:12] <GreaseMonkey> if (!okay) { goto bad; }
[04:12:28] <hayley> So, IIRC something like { int value; if (!okay) { value = BAD; } else { value = work(); } return value; } // Much cleaner!!!
[04:12:49] <hayley> No break or continue in loops either. That also rules out switch/case, of course.
[04:12:54] <gilberth> moon-child: Try compiling int main (void) { return *(volatile char*)0; } I get movsbl 0, %eax ; retq
[04:13:12] <GreaseMonkey> there are arguments in favour of having a single return, but having no break or continue in a loop is just BS
[04:13:35] <hayley> If one cannot throw or abort or exit due to bad input, then single return would also look crap IMO.
[04:13:47] <moon-child> gilberth: does it get rid of a store though?
[04:14:08] *** Joins: lisp123 (~lisp123@120.154.103.52)
[04:14:18] <moon-child> gilberth: also: this is why I compile with -fno-delete-null-pointer-checks -fwrapv -fno-strict-aliasing when I write c :)
[04:14:25] <gilberth> Oh. I missed the store. No, it does not. It happily says movb $0,0
[04:15:13] * GreaseMonkey admits to using the "else" prong in a Python "for" loop from time to time
[04:15:59] <gilberth> Anyhow, the safest bet, if all ways to make main() return a blocked is to go into an infinite loop.
[04:16:12] <semz> moon-child: -ftrapv would probably be better for development
[04:16:18] <gilberth> After all this is the very definition of "undefined" :-)
[04:16:32] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:16:40] <moon-child> semz: I would use that if it also made unsigned overflow trap
[04:16:56] <moon-child> semz: and, if I use -ftrapv for development, I will also ship it.  It has nil performance cost anyway
[04:17:02] <hayley> I had to use StackOverflow to figure out a closed form for some summation, nor myself nor Macsyma could work it out.
[04:17:11] <moon-child> could mathematica do it?
[04:17:28] <hayley> idk, I never used it.
[04:17:51] <gilberth> Meanwhile, I wonder if when I have a Time Machine backup, I could peek at the files that even root is access to denied.
[04:18:30] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 252 seconds)
[04:19:06] <moon-child> on one or two occasions, I had some complicated form that only mathematica was able to reduce.  Tried maxima, I think? and it could not make heads or tails
[04:19:16] <hayley> But I have no idea how I'd derive \Sigma^n_x=1 x^2 myself.
[04:20:02] <moon-child> hmm
[04:20:17] <moon-child> I visualise it as a pyramid
[04:20:22] <moon-child> with a square base
[04:20:54] <moon-child> if you shift everything to one corner, I think it's probably not to difficult to get it as a chunk of a cube
[04:21:17] <moon-child> *too
[04:21:19] <hayley> I guess so.
[04:21:58] <semz> moon-child: How does unsigned overflow relate? I mean sure, it's a shame unsigned and wraparound got conflated in C (like so many things...) but you can still use -ftrapv to catch signed overflow problems.
[04:22:10] <moon-child> hayley: https://www.wolframalpha.com/input?i=Sum+x%5E2%2Cx%3D1+to+n
[04:22:11] -ixelp- Sum x^2,x=1 to n - Wolfram|Alpha
[04:22:38] <hayley> Yes, I found the closed form, but I can't imagine deriving it.
[04:23:31] <moon-child> semz: I want consistent behaviour
[04:24:28] <hayley> https://brilliant.org/wiki/sum-of-n-n2-or-n3/ suggests looking at binomial expansions, but I wouldn't guess to do that. Better check if the course materials mention how to do such summations.
[04:24:29] -ixelp- Sum of n, n¬≤, or n¬≥ | Brilliant Math & Science Wiki
[04:24:44] <kakuhen> hayley: i would view this combinatorially
[04:24:48] <semz> moon-child: Consistency with what? Is there a situation where signed overflow is not a bug?
[04:25:12] <kakuhen> so for instance, k^2 represents choosing from k elements twice, independently
[04:25:29] <kakuhen> so if you view this as e.g. drawing 2 balls from k balls independently, you can get the same binomial stuff in that link you  referenced
[04:25:40] <kakuhen> then you interpret the sum of binom coefficients combinatorially as well
[04:25:45] <kakuhen> and if you want to be doubly sure then induct on n 
[04:26:04] <hayley> Okay, so it's a rule that they mention in the video, and the derivation of that is completely magic, just like for the easier sum-of-n case.
[04:26:18] <GreaseMonkey> i'm looking forward to Zig being Production-Ready(tm), because at least it can make builds which trap on overflow, and it provides explicit operators to allow wrapping as well as some functions which tell you if the operation overflowed
[04:26:42] <hayley> I'm looking forward to https://www.youtube.com/watch?v=tbHix56qfG8
[04:26:42] -ixelp- The Aircrash Bureau - YouTube
[04:26:59] <kakuhen> also if you want an overkill solution that doesnt need you to make clever combinatorial arguments or summations
[04:27:08] <kakuhen> then you can also derive this using a GF i believe
[04:27:40] <kakuhen> but then you deal with calculus
[04:27:53] <hayley> Well, I don't have an GF as of nine months ago. /j
[04:27:58] <kakuhen> lol
[04:28:02] <kakuhen> ok OGF, or generating function
[04:28:03] <hayley> scnr
[04:28:20] <kakuhen> in most general case, using generating function is useful because not everything has a striaghtforward combinatorial interpretation
[04:28:31] <kakuhen> but for "simple" cases its often overkill, but still does not require you to conjure up magical arguments
[04:29:41] <hayley> I guess I am at least allowed to use that magic, so it is not a big deal.
[04:39:08] <gilberth> I need to work around that macos raises all timeout to 10s or 20s at times. I am unsure how to proceed. I have two options (1) find all places in CCL on which there is a wait with timeout and make them use my kludge with a second process kill(2)ing the main process or (2) bite the bullet and spawn a second process for the GUI and going with RPC. Both are ugly.
[04:39:28] <hayley> GreaseMonkey: You might want to look through https://github.com/no-defun-allowed/awesome-low-level-programming-languages imo
[04:39:28] -ixelp- GitHub - no-defun-allowed/awesome-low-level-programming-languages: A curated list of low level programming languages (i. [...]
[04:39:56] <gilberth> The third option is to ditch Cocoa.
[04:40:49] <kakuhen> ditch cocoa, embrace gnustep
[04:41:17] <semz> wtf is V doing on the original list
[04:41:26] <gilberth> Why gnustep?
[04:41:32] <semz> why are there people who take V seriously
[04:41:55] <GreaseMonkey> i think V is on there on the basis that it's probably a low-level programming language perhaps
[04:42:45] <GreaseMonkey> and with that said, the problem with the updated list is that there needs to be at least one sufficiently low-level programming language which your machine understands directly, so i'd say that "assembly" should be the one entry on the list
[04:43:34] <hayley> LAMBDA: the ultimate opcode?
[04:43:57] <gilberth> When I would go with RPC, I could as well design a new network transparent display server protocol.
[04:43:57] <hayley> I can't think of any instruction set that is notably "awesome" though.
[04:44:48] <GreaseMonkey> RISC-V is a good baseline to compare against
[04:45:19] <GreaseMonkey> although if you want to see an interesting CISC architecture, someone reverse-engineered the Casio fx-9750G
[04:45:42] <GreaseMonkey> there are still a few gaps IIRC, but it does allow for variable-length numbers
[04:48:32] <GreaseMonkey> ...hot damn though, reading the "Dubious Achievement" text, when the hell is C going to get bounds checking
[04:49:59] <gilberth> There is nothing in the C standard which would forbid bound checks.
[04:52:14] <semz> there used to be a GCC patch set that added bounds checks
[04:53:05] <GreaseMonkey> -O3 -Wall -Wextra -Werror can catch some of that
[04:53:20] <GreaseMonkey> keyword "some" and of course this is purely compile-time
[04:53:20] <semz> (with-grumpy "and it never caught on because it doesn't win benchmarks")
[04:53:37] <semz> I think the last version it supported was 4.7 or so
[04:54:16] <gilberth> Well, for this to really work you would need to pass pointers as an object, its limit and the offset therein.
[04:55:20] <semz> array decay probably hurts a lot
[04:56:17] <gilberth> The pointer alone can't tell you. Consider struct foo { char a[80]; char b[80]; }; Get craft a pointer to the 'a' slot call it 'p'. It is shared with the whole struct. How to decide whether p + 100 is valid or not?
[04:56:17] <hayley> "Many years later we asked our customers whether they wished us to provide an option to switch off these checks in the interests of efficiency on production runs. Unanimously, they urged us not to - they already knew how frequently subscript errors occur on production runs where failure to detect them could be disastrous. I note with fear and horror that even in 1980, language designers and users have not learned this lesson." - Tony Hoare
[04:56:33] <hayley> "I note with fear and horror that even in 2022, language designers and users have not learned this lesson." - Hayley Patton
[04:57:19] <hayley> Not dissimilar is Andrew Appel in Modern Compiler Implementation: "One might say, by way of excuse, ‚Äúbut the language in which I program has the kind of address arithmetic that makes it impossible to know the bounds of an array.‚Äù Yes, and the man who shot his mother and father threw himself upon the mercy of the court because he was an orphan."
[04:58:07] <semz> the set I was thinking of might have been https://sourceforge.net/projects/boundschecking and its last supported version was 4.0.2 from 2005
[04:58:09] -ixelp- boundschecking download | SourceForge.net
[04:59:41] <semz> but what's an inaccuracy of eight years
[05:01:53] <semz> at least there's asan now
[05:13:09] <gilberth> Bound checks are bad for the climate.
[05:13:46] <hayley> I'm sure you can find someone that says that.
[05:14:38] <GreaseMonkey> bound checks are probably cheaper than dereferences
[05:16:58] <hayley> "without this cout << statement my program segfaults..?"
[05:17:23] * gilberth imagines green protests "No bound checks!" "Down with bound checks!" "Free the indices!"
[05:18:01] * GreaseMonkey imagines a website saying that bound checks are a waste of energy, while showing a bunch of 30 MB autoplaying videos 
[05:18:20] <gilberth> lol
[05:18:46] <GreaseMonkey> believe it or not, there was a website made specifically to complain about bloated websites or something like that and it had a 10+ MB autoplaying video
[05:19:04] <GreaseMonkey> just so you could see a representation of the earth spinning
[05:19:17] <semz> that was Facebook
[05:19:25] <semz> it was about third-world internet access I believe
[05:19:55] <GreaseMonkey> i suspect loading a texture and rendering it onto a low poly sphere using OpenGL would be notably faster and more energy-efficient
[05:20:27] <gilberth> Speaking of which. We should return to monochrome. That is black and white. That's only one bit per pixel. Way less data to move. And scratch font rendering, just use old school bitmap fonts. I bet that would save energy.
[05:20:51] <hayley> "ngl i thought fsanitize was a covid meme and not an actual flag"
[05:21:16] <GreaseMonkey> and heck, one could potentially even raytrace the damn thing in the fragment shader... if that's a bit much, raytrace once to obtain an offset into the earth texture and use that with another constant offset
[05:22:15] <gilberth> Or you could use text: <blink>Imagine a spinning globe here</blink>
[05:22:45] * hayley puts https://www.youtube.com/watch?v=V43iobDBNW8 on jukebox
[05:22:46] <gilberth> I mean, what is the information content of such a spinning globe anyway?
[05:23:14] <GreaseMonkey> exactly
[05:25:06] <gilberth> And I personally hate and can't cope with any animated spam on websites. This was my raison d'etre for using an adblocker. I can't read text while an ad is animated. Wouldn't they have been animated I would not have bothered.
[05:25:37] <gilberth> With print media half the content is ads. But they don't move. And don't make sound.
[05:25:38] <GreaseMonkey> i have some animation-related stuff disabled in my browser, and by default you don't get scripts, XHR, media, or cookies.
[05:26:09] <semz> uMatrix is a godsend
[05:26:16] <GreaseMonkey> eh, the right sound for an ad to make is the sound of being wiped against something and dropped into a toilet bowl
[05:26:28] <semz> how do you deal with animations? an extension?
[05:26:38] <GreaseMonkey> seconded, uMatrix is amazing, pity not even Ungoogled Chromium supports it properly
[05:26:50] <gilberth> Well, I personally don't care so much about other guessing who I am. For a long time /etc/hosts was my adblocker.
[05:26:52] <semz> it really sohuld be base functionality
[05:27:06] <GreaseMonkey> yeah, but it's so anti-Google to disable annoying shit
[05:27:27] <GreaseMonkey> unfortunately i can only disable so much of what i hate about the modern web, "position: fixed" is still there and so are some of the animations that happen anyway
[05:27:37] <GreaseMonkey> or is it "position: sticky"
[05:28:57] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 272 seconds)
[05:29:08] <gilberth> And with news sites, I don't get it. Some complained I should turn of my "ad blocker" --- which was /etc/hosts and the recent trend is hiding everything behind a pay wall. They were fine with ads for decades. They could just have resisted in animations and all too aggressive data accumulation. And would probably be still fine.
[05:29:10] * hayley still wonders how bad it is to suggest that people use BDW in C++ class.
[05:29:42] <hayley> Someone just needs to trick the sysadmin into installing the library and headers.
[05:30:26] <gilberth> And their paywalls don't work either. Why can't I pay say 5ct for this _specific_ article? No, I can't I need a subscription. How many subscriptions should I have? I bet they would make more, when they would offer you to pay for single articles.
[05:30:55] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[05:30:57] <|3b|> paying them 5ct and a credit card processing co $1?
[05:31:02] <|3b|> (per article)
[05:31:04] <hayley> Is it feasible to transmit such tiny transactions? IIRC Naggum mentioned such a thing before.
[05:31:11] <semz> the hilarious thing about these ad blocker blockers is that 90% of them choke and die if you disable js
[05:31:16] <moon-child> well, you can batch them, surely
[05:31:21] <hayley> In the good ol days, people thought Bitcoin would be good for such micro-micro-transactions.
[05:31:22] <semz> and then you can just read the article
[05:31:26] <hayley> See how well that turned out.
[05:31:45] <gilberth> |3b|: Who says that each 5ct must be one credit card transaction?
[05:31:56] <moon-child> hayley: devil's avocado: lightning?
[05:32:12] <gilberth> There could be service for micro payment. It would charge your credit card once a month. Or your bank account.
[05:32:32] <gilberth> Paypal could do that.
[05:32:36] <GreaseMonkey> here's an idea for anyone who wants to run a news site: make the pages really lightweight, minimal images, and each article has a text ad specific to that article.
[05:32:40] <hayley> moon-child: Yes, seems the fees are lower today, but still too high to send 5 US cents really.
[05:32:44] <|3b|> well, get disrupting then :)
[05:32:55] <hayley> Back in my day (when I sold), it was pretty bad.
[05:33:01] * |3b| is pretty sure there have been multiple attempts at that already though
[05:33:06] <moon-child> GreaseMonkey: http://lite.cnn.com/en ?
[05:33:07] -ixelp- CNN - Breaking News, Latest News and Videos
[05:33:26] <hayley> https://ycharts.com/indicators/bitcoin_average_transaction_fee One dollareedoo?
[05:33:44] <GreaseMonkey> moon-child: yeah, like that, but without javascript
[05:33:55] <semz> there is a news site that sends you to a really enjoyable text version of the site if you're from the EU for GDPR reasons
[05:34:12] <gilberth> Well, it's a pity. This way they get zero $monetary-unit from me.
[05:34:13] * |3b| also isn't arguing what could or should be, just what is
[05:34:25] <hayley> I think I sold at the worst time for transaction fees, it was like $30 for my $300 sale.
[05:34:57] <gilberth> hayley: Usually it's like 2%, not 10%.
[05:35:00] <|3b|> yeah, getting money to people who deserve it is annoyingly hard if you don't just have huge piles of it laying around so you can overpay for things :/
[05:35:12] <GreaseMonkey> but really, if they want to get money via advertising: sell ad space up front and each article has a text ad put onto it
[05:35:12] <hayley> gilberth: Bitcoin transaction fees, not the bank.
[05:36:02] <gilberth> hayley: Doesn't matter. A usual disagio is 2%. Everything else is expensive.
[05:36:24] <|3b|> i frequently want to give some money to "free" games i like, but then go into their cash store and everything is so expensive that even when i go in wanting to give them money it still triggers my "wtf, $5 for that?" reflex and i leave
[05:36:26] <gilberth> And you can easily get better quotes, if you sell more.
[05:36:28] <moon-child> I pay like 0.05% transfer fees
[05:36:37] <moon-child> so, 2% seems high :P
[05:36:44] <hayley> gilberth: I will also add that, IIRC, transaction fees are constant w.r.t the value being sent. So it'd be 100% for sending $30 back then.
[05:36:53] <|3b|> but they make their money off people who are going to spend $1000s, so set prices accordingly
[05:36:58] <gilberth> moon-child: Try charging credit cards as a business.
[05:37:02] <hayley> My day looked something like https://www.vox.com/2014/11/24/7279079/redditor-says-western-union-demanded-takedown-of-ad-mocking-them
[05:37:03] -ixelp- Redditor says Western Union demanded takedown of this Bitcoin ad mocking the company - Vox
[05:37:06] <moon-child> gilberth: sure
[05:37:23] <moon-child> (aren't credit cards closer to 5% though?)
[05:37:34] <gilberth> When I transfer money from my back account to another as a private person, I pay 0%.
[05:37:53] <GreaseMonkey> oh hey, Heritage Auctions is still scamming people by trying to create speculation via bullshit
[05:38:09] <moon-child> I pay 0 to transfer to other people's accounts at my bank, 0.05% to someone else's bank
[05:38:24] <White_Flame> GreaseMonkey: send them back to prison from whence they came
[05:38:29] <gilberth> moon-child: Maybe, if you're volume is low.
[05:38:50] <hayley> Kinda funny that people would complain about running out of storage, upon the proposition to increase the limit on block size. But it's not like people had problems finding more money for ASIC miners or whatever. 
[05:38:57] <moon-child> that is what I pay for my rent, so not super low volume
[05:39:01] <gilberth> moon-child: I pay 0% no matter what the destination bank is.
[05:39:06] <GreaseMonkey> White_Flame: it'd be tempting to buy one of those things using one of the coins from way back when they were doing *that* scam
[05:39:32] <gilberth> moon-child: But business usually are charged for bank transfers.
[05:40:36] <gilberth> Anyhow, I don't remember the disagio, but PayPal is actually pretty cheap.
[05:42:11] <hayley> The USPS wants like 300% markup on my damn t-shirt to get it shipped from USA to Australia.
[05:42:50] <gilberth> And speaking about small payments. I read that when Steam discounts a game and sells it for say $0.99 this results into more sales than a whole year otherwise for that title.
[05:43:21] * hayley once again asking people to use -fsanitize=address
[05:43:35] <hayley> It's somewhat less of a shot in the dark than telling me "my code segfaults".
[05:43:52] <|3b|> gilberth: yeah, discounts work :)
[05:44:01] <GreaseMonkey> "my code segfaults" "that means you suck at coding"
[05:44:01] <moon-child> also valgrind, gdb, [...]
[05:44:21] <|3b|> both for advertising and for letting you get more money than you would have from just always selling at the low price
[05:44:21] <hayley> moon-child: Yes, gdb would also help.
[05:45:04] <gilberth> So I could imagine, given a micro-payment platform on which you can just keep being logged in, and that 5ct payment is just one click, news sites could make quite some additional revenue they otherwise won't have. Especially, when I was pointed to an article on XYZ News which I usually won't read and therefore would never have bought a subscription for.
[05:45:24] <|3b|> but lots of people will put a game on their wishlist and wait for steam to email saying it is cheap today, but i doubt many would do that with an article
[05:46:25] <|3b|> (and probably many of those people /wouldn't/ have bought it if that was the list price, because "cheap = crap", but "saving money on something expensive = smart" or some logic like that)
[05:46:34] <gilberth> Won't work for news. Subject: "Your article from 2020 about this Chinese virus is on sale!"
[05:46:35] <moon-child> I was assuming the article prices would be fixed
[05:47:28] <|3b|> right :)
[05:47:46] <moon-child> just, cheap enough to be comparable to the $1 sale steam games
[05:47:47] <gilberth> |3b|: I don't know. At times I am interested into some specific topic. And I wouldn't also mind paying like 50ct for a well researched article.
[05:48:31] <gilberth> And here, when I am into topic X, I don't care if the article by news site Y which I usually won't read.
[05:48:33] <|3b|> gilberth: yeah, i feel that way about other things regularly, and i'd also like something like what you suggest
[05:49:01] <gilberth> Heck, there have been rare occasions at which I bought the dead tree version just because of one article.
[05:49:45] <|3b|> but from seller's perspective, if the curve of "amount people are willing to spend" is steep enough near 0, it looks better to have a high price and miss a few %, then lower it and get more people for less total $
[05:51:05] <gilberth> I believe the equation would look different when you would look at the whole market and not just at one single news site.
[05:52:21] <gilberth> My preferred news site wants EUR 19.99 a month IIRC. There is another I read occasionally, it would perhaps charge as much. That sums up and you could sink a lot of money with subscriptions. I steer clear of subscriptions.
[05:52:59] <gilberth> And isn't the beautiful thing of the internet that I could inform myself from different sources?
[05:53:22] <|3b|> yeah, but seller cares about seller, not "the entire market"
[05:53:46] <|3b|> so obviously their choice will be different from ours, since we care about us not them, or "the entire market"
[05:53:50] <gilberth> It could be a win^n situation.
[05:53:56] <|3b|> maybe
[05:54:11] * |3b| thinks we should just be giving out free money to everybody instead anyway
[05:54:29] <hayley> If you are unfortunate, they will handle it like science publishers, and instead charge ‚Ç¨20 per paper, and ‚Ç¨100/month.
[05:55:30] <gilberth> hayley: The market for papers is way smaller and 99% of the people interested get free [for them] access anyway.
[05:55:58] <gilberth> While everybody besides hayley reads news.
[05:56:06] <hayley> :<
[05:56:15] * |3b| also doesn't read news :)
[05:56:40] <gilberth> I do. It's part of my daily routine.
[05:57:03] <|3b|> you are outnumbered 2:1, your market research is invalid :p
[05:57:38] <gilberth> Yep. So I scratch the idea to get a billionaire by founding a micro payment service.
[05:58:16] <gilberth> OTOH it worked for music, didn't it?
[05:58:53] <gilberth> Not exactly "micro" but you could buy a single song with iTunes.
[05:59:40] <moon-child> who does that now, though?
[05:59:41] <|3b|> music is another place where i have that problem... i don't like specific songs enough to say "i want to spend $1 on this song", but i'd still like people to get some money for working on it :/
[06:00:07] <moon-child> |3b|: I would spend $1 on a song ... but no one will sell it to me!
[06:00:10] <|3b|> so i'm stuck with evil stuff like spotify where that sort of happens, but probably mostly goes to pay random unrelated people :(
[06:00:17] <gilberth> moon-child: Who pays for streaming? Really? paying for what is free?
[06:00:35] <moon-child> many people pay for streaming
[06:00:53] <hayley> https://www.youtube.com/watch?v=Ryc8gGfnL5M
[06:00:53] -ixelp- Pirates - YouTube
[06:00:57] <gilberth> I am aware. Yet "internet radio" still exists.
[06:00:58] <|3b|> (and also where i end up giving money to someone who can't even manage to get simple things like "play music" or "play this playlist in order" right)
[06:00:59] <moon-child> does netflix even rent out discs still?  I bet they don't
[06:01:04] <moon-child> and spotify is massively successful
[06:01:37] <moon-child> |3b|: yeah, spotify is really annoying
[06:01:40] <moon-child> and buggy, and slow
[06:02:04] <|3b|> on yeah, that too
[06:02:28] *** Joins: lisp123 (~lisp123@120.154.103.52)
[06:02:42] * |3b| might try switching to tidal at some point, since they at least claim to pay artists better, too lazy though
[06:03:45] <moon-child> bandcamp is cool, but none of the artists I listen to are on it
[06:03:58] <moon-child> well, one was, but is no longer, and I never got around to buying her shit while it was there
[06:04:47] <gilberth> I usually listen to music with YT these days. At times I actually bought some music because it was easy to do and I could as well pay the artists. Don't remember what platform though.
[06:05:05] <|3b|> but seems like in general, "the market" has settled on randomized algorithms where people give larger amounts of $ to fewer things, in hopes that it asymptotically approaches what you would get if people gave small amounts of $ to larger #s of things
[06:05:31] <hayley> I wonder, if I tell some Verilog compiler to make a 128-bit x 128-bit multiplier, what kind of resources would that take? I guess it has to synthesize something that will settle in the same cycle, which might not be optimal.
[06:05:34] <gilberth> Yep, could have been bandcamp. I really don't remember, because buying was so effortless. I was done in a minute and had a shiny new mp3.
[06:05:40] * |3b| also considers paying for yt and listening to music there as an alternative to spotify
[06:06:00] * gilberth will never pay for YT.
[06:06:22] <moon-child> gilberth: most people don't block ads, nor know how to operate youtube-dl
[06:06:23] <|3b|> but it is one of those micropayment systems you want :p
[06:06:38] <GreaseMonkey> i will never pay for youtube
[06:06:46] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[06:07:11] <hayley> Still, I can't say that a 256x256 multiplier on a FPGA is necessarily faster or more efficient than doing it on software on a GPU.
[06:07:13] <gilberth> |3b|: Does not make to like it though.
[06:07:20] <GreaseMonkey> youtube music was to replace google play music while keeping "everything you love", and in practice they just kept everything i hated, added more crap i hated, and i only used the thing to buy music legally
[06:07:28] <GreaseMonkey> which you can't do on youtube music
[06:08:11] <hayley> https://twitter.com/randommandelbot/status/1503190055388520455 Whoever wrote this bot zoomed in too much, and now we can see floating point lossage.
[06:08:16] <gilberth> You can. Often you find links to some other platform. Or you use google to find the artist you're interested in.
[06:08:20] * |3b| expects most of the people who could successfully get a "good" micropayment system set up and popular enough to matter would probably also be evil enough that none of us would want to use them anyway :/
[06:08:32] <GreaseMonkey> i generally buy my stuff via melodishop but failing that i can always pay first-world prices for things via 7digital
[06:10:14] <gilberth> What annoys me though is this TV tax we pay, while I don't watch TV at all. Or listen to radio.
[06:10:34] <|3b|> more micropayments :)
[06:11:03] <gilberth> And I pay for music with every disk I buy and every USB stick. This also is annoying because I bet that the artists I like will see zero cents from that.
[06:11:17] <|3b|> yeah :/
[06:11:31] <GreaseMonkey> at least with bandcamp there's a chance
[06:11:43] <GreaseMonkey> but really, the mainstream music industry needs to be abolished
[06:11:57] <GreaseMonkey> it's too draconic and exploitative... and bland
[06:12:12] <gilberth> Yes, and it has to end that we pay taxes for the poor and starving mainstream music industry.
[06:12:45] <gilberth> And for poor and starving football clubs.
[06:13:04] *** Joins: Inline__ (~Inline@p200300cd47082500eff0453775466c26.dip0.t-ipconnect.de)
[06:14:00] <gilberth> I mean, those have business models that work already. Why subsidize them with tax money?
[06:14:09] * hayley watches her parallel CPU renderer run out of double-float precision. 
[06:15:05] <gilberth> And I call any fee that I have to pay for a service or product I don't use or even want, a tax.
[06:15:26] *** Quits: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:15:36] <gilberth> In contrast to real taxes, which do good. For the most part at least.
[06:16:32] <kakuhen> <GreaseMonkey> "at least with bandcamp there's a..." <- but also at risk of destroying the chance thanks to new ownership
[06:16:59] <gilberth> What's with the ownership?
[06:17:00] <GreaseMonkey> huh, who are the new owners?
[06:17:58] <kakuhen> bandcamp last week was acquired by epic games
[06:18:16] <GreaseMonkey> also i recall someone refused to pay broadcast tax, and he got legal threats for that or something, so IIRC he desoldered the bode transformer and mailed it to them in reply
[06:18:34] <GreaseMonkey> erm, inside of his TV as he never actually bothered watching TV after some time
[06:19:04] <kakuhen> a penny-pinching DLC company (that also heavily pushes DRM and streaming) now owns the last major (Western) platform  that lets you own a copy of music you purchase
[06:19:11] * hayley decides to use ratio types to avoid losing precision, and SBCL does not enjoy it.
[06:19:21] <GreaseMonkey> this is not something i've read online, this is someone i know
[06:19:23] <kakuhen> methinks bandcamp will eventually become exclusive to some Epic software
[06:19:35] <hayley> Pretty sure I can use GMP from SBCL though.
[06:19:37] <GreaseMonkey> oh right, Epic
[06:19:40] <kakuhen> best case scenario, epic does not touch bandcamp, but i know that will not happen
[06:19:55] <gilberth> GreaseMonkey: Won't work here. You have to pay the broadcast tax even if you don't own a TV.
[06:19:55] <kakuhen> yeah, best case scenario we can hope for is that epic touches bandcamp just like microsoft touched github
[06:19:59] <kakuhen> so a 1 in 10,000 chance
[06:20:20] <GreaseMonkey> gilberth: i think that was a time where you only had to pay if you had a functioning TV here
[06:20:30] <GreaseMonkey> i'm not sure if the broadcast tax is even a thing here anymore
[06:22:30] <kakuhen> I know that Japan you still have to pay monthly license fees to NHK, and you get a nice knock to your doorstep if you do not pay
[06:22:36] <kakuhen> but I'm not sure what exactly that fee is used to fund
[06:22:48] <kakuhen> i want to say it's only for the major 5 national tv stations
[06:22:52] <gilberth> This is so backwards anyway. I mean in times of analogue broadcast this made sense. Because once you have a receiver you could watch the programme. These days even broadcast is encrypted. So there is no technical reason anymore. You want that watches pay? Just encrypt, done. No need for a tax.
[06:23:20] <kakuhen> as for the US, i honestly dont know if there even is a broadcast fee, I only know about Dolby lobbying hard to get AC3 as a TV audio standard so that every broadcaster in America had to pay royalties for 20 or so years to Dolby.
[06:24:01] <kakuhen> and there was a nice $5,000,000 exchange between Dolby and MIT that made MIT suddenly support AC3 as a standard audio codec for transmissions...
[06:24:03] <gilberth> kakuhen: Do you even have non-private broadcast?
[06:24:34] * hayley reads up on SB-MPFR. Now how do I make a damn multiple precisionfloat to start with?
[06:24:52] <kakuhen> gilberth: in the US? i don't think so
[06:25:03] <hayley> It has its own COERCE function. Well, okay.
[06:25:13] <kakuhen> things may be different with """smart""" televisions now, but uh
[06:25:30] <gilberth> kakuhen: See. And thus there would be no reason for a tax^Wfee to begin with.
[06:25:33] <kakuhen> I only recall having to purchase an antenna, run a channel scan on your television, and what the antenna can find is the channels you can view.
[06:25:54] <kakuhen> i know for radio you have at least NPR
[06:26:09] <kakuhen> but I think the case of NPR is "non-profit," not "public"
[06:26:20] <|3b|> yeah, no specific fees for radio or TV in US
[06:26:25] <gilberth> Anyhow, what I hate most is they call it broadcast fee, when this really is a tax. A household tax. Each household has to pay it no matter if they even have electricity.
[06:26:46] <gilberth> Honest would be to label it "household tax" and be done with it.
[06:26:53] <|3b|> (government may or may not be dumping normal tax money into things that would be covered by those fees in other places)
[06:27:12] <kakuhen> well, if your country has a national television channel, then i think a broadcast fee makes sense
[06:27:30] <kakuhen> plenty of people don't drive but they still presumably have to pay taxes that result from directives that fund improvements or additions to roads
[06:27:34] <kakuhen> so on, so forth
[06:27:50] <gilberth> kakuhen: Only if it is a fee for broadcast and not for having a household.
[06:29:07] <gilberth> It was a broadcast fee initially. Fine with me, I don't own a TV. Then they extended it to also be an internet fee. Not fine with me as I still don't use any of their web sites. Now it's a household fee. Worse yet.
[06:29:32] <kakuhen> and this does not apply to people who rent an apartment?
[06:30:08] <gilberth> Sure it applies to people renting an apartment. It's a household after all, isn't it?
[06:30:29] <gilberth> So, if you have a roof above your bed, you pay.
[06:30:31] <kakuhen> I'm not understanding your position then
[06:30:47] <kakuhen> at first I thought you were against it because a select group of Germans had to pay fees while others did not
[06:31:09] <gilberth> My position is that it is a tax on the roof above my head. And not a fee for broadcast. Although they label it as such.
[06:31:55] <gilberth> kakuhen: My point is: It is not honest. I am fine with tax money spend on things I don't use personally. But politics should call it "tax" not "fee for TV".
[06:32:05] <kakuhen> ah, I understand now. I guess they do not simply increase a property(?) or household tax because that would be too controversial among citizens
[06:32:13] <kakuhen> much easier to call it something else and be dishonest about it, I guess
[06:32:36] <kakuhen> I know in California, for instance, a surefire way to end your political career is to dare to touch Proposition 13, which limits tax rates on houses to 1% iirc
[06:32:45] <gilberth> It's a flat tax not proportional to the size of the estate or something. There is a separate real estate tax.
[06:33:37] <gilberth> And I don't like flat taxes in general.
[06:39:43] <hayley> MPFR is apparently slower than SBCL's rationals. Damn.
[06:43:08] <hayley> ...or, rather I screwed up with rational to float "promotion" and I wasn't using SBCL rationals at all. But now this is too slow.
[06:56:35] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 240 seconds)
[07:00:38] <gilberth> Something is not right here. Why am I the only person living at this house who ever cleans the kitchen [up]. After all I am supposed to be the person suffering from depression. Dammit.
[07:01:46] <gilberth> I could stop to clean up the kitchen for two weeks, if I wished. But I don't think that would change much.
[07:02:01] * |3b| 's answer for having the same problem is that nobody else lives here :p
[07:02:54] <gilberth> |3b|: I am lucky and can hide at my cousin's place which helps me a lot because I am not made for living alone in the middle of nowhere.
[07:05:01] * |3b| 's luck is probably also good, since i am fine with that :)
[07:05:20] <gilberth> But I really don't know how I could proceed. (1) I am a guest here and (2) You can't really talk to him for him folding badly with by critique.
[07:05:25] <|3b|> (well, not sure i'd like actual "middle of nowhere", since i like my gbit internet and grocery delivery)
[07:06:26] <gilberth> |3b|: This is Germany. For internet access it doesn't matter much where you live. It's at a snail pace everywhere. But I like to see humans once in a while.
[07:06:56] <gilberth> And talk to them. *gasp* Could you imagine?
[07:07:07] <|3b|> i'd probably just try to think of it as giving something back for the place to stay, as well as being happy with maintaining a nice kitchen despite depression :/
[07:07:17] * |3b| cannot imagine that
[07:07:45] * |3b| pretty much didn't notice covid, aside from having an excuse to go outside even less :p
[07:08:14] <gilberth> |3b|: Well I am not angry or anything. My cousin has his own problem. It rather saddens me that while I get better, he seems to get yet more lazy.
[07:09:23] <gilberth> I try hard to get back to an actual routine. And that includes chores. And yes, I like a tidy kitchen.
[07:10:09] * |3b| probably would like a tidy kitchen, but hasn't seen one in a while :(
[07:10:25] <gilberth> |3b|: Well, I am different. I need company. People to chat with.
[07:10:39] <gilberth> Heh, what stops you from cleaning your kitchen NOW? ;-)
[07:10:51] <|3b|> doesn't help that i don't actually have a kitchen as such, just a room with some tables and shelves that will be a kitchen if i ever finish fixing it :p
[07:11:05] <|3b|> hard to put stuff away when "away" doesn't exist
[07:11:29] <gilberth> Heh. There always is another away: Garbage collection. :-p
[07:11:43] <|3b|> so ends up just being moving stuff into a different pile and maybe wiping it off a bit
[07:11:55] <gilberth> But don't you have a sink, an oven, and a fridge?
[07:12:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[07:12:47] * |3b| has a (ugly plastic utility) sink, fridge, microwave, single electric burner, and air fryer
[07:12:49] <gilberth> Pro-tip: For cleaning up. Make sure every item has a place. When it hasn't you just end up moving stuff from A to B and then to A again.
[07:13:04] <|3b|> but no cabinets or closets
[07:13:07] <|3b|> or counters
[07:13:30] <gilberth> |3b|: Well, better than nothing. Would a cabinet fit in there?
[07:13:48] <|3b|> yeah, there should be lots of cabinets
[07:13:50] <|3b|> also walls
[07:14:05] <|3b|> and paint, working lights, etc
[07:14:38] <gilberth> So then. You only need to find cabinets, right? (And paint, and lights)
[07:14:45] * |3b| actually needs to reduce the amount of available space, since there was a failed attempt to extend the kitchen, which makes it nice and large, but also makes the rest of the house twist a bit more than houses should
[07:14:54] <|3b|> and walls
[07:15:13] <gilberth> Oh dear! The house falling apart?
[07:15:26] <|3b|> house was in a flood a few years ago (and then another flood a year or so later)
[07:15:50] <gilberth> That sounds bad. I feel sorry.
[07:15:52] <|3b|> not quite falling apart, but thanks to the bad extension it tends to get cracks, and has some other problems
[07:16:13] * |3b| is slowly fixing things, just haven't gotten to the kitchen
[07:16:37] <gilberth> Is that your house? Or is it just for rent?
[07:16:41] <|3b|> (using covid as an excuse to not go outside slowed it down a bit since i need to go outside to buy supplies :p)
[07:17:22] * |3b| inherited 1/2 of it (and has indefinite use of the other half)
[07:18:01] <gilberth> So in theory you have plenty of room?
[07:18:27] <|3b|> yeah
[07:19:03] <gilberth> Hey, that cool. Always look on the bright side!
[07:20:01] <|3b|> yeah, just need to get my brain working properly so i can get stuff done :/
[07:20:02] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:20:21] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[07:20:30] <gilberth> Somehow the space that I have available gets smaller and smaller with time.
[07:21:01] * hayley bumps up bit requirement from 256 bit fixed point to 1024 bit fixed point. Now a 1024x1024 bit multiplier seems impractical.
[07:21:06] <|3b|> floods are good at freeing up space if nothing else :/
[07:21:44] <|3b|> hayley: what are you multiplying?
[07:21:53] <gilberth> |3b|: If it's depression. A tidy home helps. But this is a hen and egg problem.
[07:22:08] <hayley> Temporaries in Mandelbrot fractal rendering.
[07:23:05] * hayley doesn't trust the fractal zoom videos too much - everything after a few seconds looks like a completely different fractal.
[07:23:33] <gilberth> What kind of multiplier is it? What is the gate count complexity?
[07:24:05] <|3b|> gilberth: yeah, doesn't help that i need to at some point figure out how to get income, so hard to allocate limited energy between than and making environment nicer
[07:24:21] <|3b|> (and also the various random other brain problems don't help)
[07:24:23] <hayley> idk, I just want to multiply two fixed point numbers. I don't know what the gate count complexity is going to be.
[07:25:31] * hayley watches some people do defensive deep copies in C++ class. "Hey, let me tell you about reference counts!" 
[07:25:38] <gilberth> |3b|: You're talking to an expert. Not on the income part, but on the low energy part. It really is hard to find energy to accomplish anything. But when you do it helps --- in the very long run.
[07:25:55] <|3b|> hayley: sounds like fun, i haven't done any fractals in a while
[07:26:35] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Read error: Connection reset by peer)
[07:27:00] <hayley> Both SBCL and GMP are quite slow w.r.t arbitrary precision. So I just want large fixed point values, but idk how large, and idk how to pull off multiplications in software or in hardware.
[07:27:23] * |3b| has some vague memory of doing 8087 code for mandelbrot set at some point? not sure about that though, maybe 287 or 3?
[07:27:57] <gilberth> |3b|: I prepared dinner. See you, we talk later.
[07:28:09] <hayley> And floating point, even with double floats, rears its ugly head quickly. Haven't tried 80-bit floats though. (:
[07:28:36] <|3b|> i doubt my code was going anywhere near limits even of singles :p
[07:30:35] <hayley> https://www.youtube.com/watch?v=9GEU58nH8dI How to lose your dinner in 5 minutes
[07:30:35] -ixelp- 3 Ways To Play Portal 1 and 2 In VR - YouTube
[07:39:57] * |3b| doesn't think i've ever felt like vomiting from VR, though possibly just because i feel so horrible in other ways i stop before i would have reached that point
[07:42:07] *** Joins: semz_ (~semz@user/semz)
[07:44:53] *** Quits: semz (~semz@user/semz) (Ping timeout: 256 seconds)
[07:54:57] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[08:02:38] <hayley> It's also Portal. 
[08:02:57] * hayley watches her brother inspect element his 8% grade for science class. He forgot he had to write a report. 
[08:05:10] <kakuhen> the upside of paper report cards, i guess
[08:05:15] <hayley> "Hypothesis: The animal and plant cells will look different because _____"
[08:05:23] <hayley> He wrote "they are not the same."
[08:05:23] <kakuhen> harder to tamper and harder to hide since your parents will note everybody got one
[08:05:37] * hayley has no desk to hurt her head on.
[08:07:56] <hayley> His handwriting is unreadable too, and he didn't complete very much of the workbook. Though mine is pretty terrible, to be fair. But IIRC they'll let you type it if it's going to be a problem.
[08:08:26] <moon-child> Q. what's the difference between a duck?
[08:08:33] <moon-child> A. it claps its head together when it walks.
[08:18:37] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[08:19:11] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[08:19:23] * hayley sighs
[08:19:33] <hayley> He is also cheating on the French test for homework.
[08:20:42] <hayley> The lossage here is astonishing.
[08:38:16] <moon-child> https://www.youtube.com/watch?v=sq0MX3fHkro  'nice to see cliff [click] is above me for a change, rather than below me'
[08:38:17] -ixelp- Engineering Concurrent Library Components - YouTube
[08:44:18] <hayley> My mum is telling my brother it doesn't matter, because that result won't appear on his final report. It does matter, because it indicates he sucks at analysing cells under a microscope. That's why there's assessments that don't appear in the final report.
[08:44:32] * hayley grumbles
[08:48:57] * gilberth remembers the sound of cracking glass all around from his microscopy classes at school. .oO(I can't see a thing, it's blurred, let focus harder -- *crack* oops!)
[08:50:15] <gilberth> Some microscopes were very old and didn't have an artificial light source. That was fun.
[08:59:11] <hayley> I once broke a cheap webcam by doing that. Except I focused out and smashed the sensor chip.
[08:59:26] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[09:00:18] * hayley goes to port her Quicksort implementation to CL, as she still has a SBCL bootstrapped for misuse on the university server.
[09:00:42] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:13:13] <mfiano> moon-child: Heya
[09:13:21] <moon-child> sup
[09:13:34] <mfiano> Since you use FreeBSD, could you tell me why this might be?
[09:13:41] <mfiano> https://gist.github.com/mfiano/f45970d620930d11b8a19f53f23f96ea
[09:13:41] -ixelp- gist:f45970d620930d11b8a19f53f23f96ea ¬∑ GitHub
[09:14:13] <moon-child> huh no idea
[09:14:16] * moon-child knows nothing about networking
[09:14:22] <mfiano> Ah fair enough.
[09:14:23] <moon-child> try sudo ping maybe
[09:14:48] * hayley throws in her olde parallel merge sort, which is completely unnecessary. But it's fast.
[09:15:06] <mfiano> Yeah that works. What gives?
[09:16:11] <moon-child> huh, I feel like quicksort (or more generally samplesort) is more amenable to parallelization
[09:16:29] <moon-child> hmm I guess it's pretty much the same actually
[09:18:01] <|3b|> mfiano: man ping
[09:18:52] <|3b|> (apparently the answer is "because freebsd" :p )
[09:19:04] <mfiano> Are you referring to -M?
[09:19:26] <mfiano> "-M do" is the Linux equivalent of of BSD "-D"
[09:19:28] <|3b|> -s
[09:19:42] <|3b|> Only the super-user may specify values
[09:19:43] <|3b|>  more than default.
[09:20:52] <|3b|> possibly depends on ipv4 vs 6 too
[09:20:53] <mfiano> What the hell
[09:21:18] <mfiano> I wonder why that is. 56 is crazy low.
[09:21:39] <|3b|> well, normal for just pinging
[09:21:46] <mfiano> Good thing my packet filtering reassembles packet fragments.
[09:22:02] <|3b|> i guess they think you don't need to be doing sysadmin stuff like debugging MTU if you aren't a sysadmin? :p
[09:22:25] <mfiano> Yeah but I am using ping to test what my network is capable of in order to set a maximum MMS for TCP :)
[09:23:08] *** Joins: Lycurgus (~juan@98.4.112.204)
[09:24:30] <mfiano> Maybe I'm confused
[09:24:34] <mfiano> "Every IPv4 host is required to be able to handle an MSS of at least 536 octets (= 576 - 20 - 20) and every IPv6 host is required to be able to handle an MSS of at least 1220 octets (= 1280 - 40 - 20)."
[09:25:14] <Lycurgus> you expect them to be the same?
[09:25:20] <mfiano> No
[09:25:25] <mfiano> I expect 56 to be higher
[09:26:00] * Lycurgus notes there's a #ipv6
[09:26:23] <mfiano> I don't use IPv6
[09:26:35] <Lycurgus> are you sure?
[09:26:52] <Lycurgus> not intentionally
[09:26:57] <mfiano> Positive. My gateway is configured to bridge 2 ipv4 interfaces
[09:27:38] <Lycurgus> it's fairly ubiquitous now, though not necessarily at the people level
[09:29:47] <Lycurgus> typically tunneling thru ipv4
[09:29:56] <mfiano> Well it's just a ping limitation on FreeBSD (not OpenBSD) it seems. I only needed it to test my IPv4 stack anyway.
[09:30:07] <mfiano> sudo worked and moving on
[09:30:56] <Lycurgus> bsd is your OS of choice?
[09:31:39] <Lycurgus> i think originalists like it 
[09:31:43] <mfiano> For a gateway between my devices and the WAN, most definitely. iptables doesn't come close to PF.
[09:31:56] <Lycurgus> ah, TIL
[09:32:01] <mfiano> All my other devices are Linux.
[09:32:24] <Lycurgus> PF is port forward or what/
[09:32:36] <Lycurgus> s///?/
[09:32:46] <mfiano> Packet Filter, originating like most everything else security-centric, from OpenBSD.
[09:32:55] <Lycurgus> ah
[09:33:05] <Lycurgus> so how is iptables deficient?
[09:33:29] <mfiano> It's a address translation, packet filtering, QoS thing built into the kernel that is extremely efficient.
[09:33:38] <mfiano> It's slow, and doesn't support as much?
[09:33:50] <mfiano> My network is pretty complex admittedly.
[09:33:57] <kakuhen> ok i have successfully got emacs 27.1 running on wsl2 on windows 11, and it works with sly+sbcl
[09:34:05] <kakuhen> didnt test quicklisp yet but im sure it will work
[09:34:11] <Lycurgus> the first two lines seem contradictory
[09:34:45] <mfiano> That's a valid opinion.
[09:35:24] <Lycurgus> if it's a supported implementation, ql will work
[09:37:40] <Lycurgus> i mainly use ipkungfu to manage iptables, with rare use at the command line, e.g. for the shitlist
[09:38:53] <Lycurgus> (which iptables manages now)
[09:39:05] <Lycurgus> s/iptables/ipkungfu/
[09:40:06] <Lycurgus> the python pure chat channel has bot that applies corrections. it's kinda irritating
[09:43:07] <mfiano> Ok great. It seems the MTU of my interfaces matches that of the rest of my topology.
[09:43:22] <Lycurgus> s/pure chat/offtopic/
[09:43:59] * hayley continues picking on her brother until he rewrites his report on looking at cells in a microscope.
[09:44:27] <mfiano> ICMP has an 8 byte header that TCP doesn't have. 1472 works, but 1473 doesn't. 1472+20 = the MTU of all my client interfaces.
[09:44:44] <mfiano> So now I can get to handling packet defragmentation better.
[09:45:11] <mfiano> err 1472+8+20
[09:47:17] <Lycurgus> i thought 10 was supposed to be the last windows major version
[09:47:31] <Lycurgus> but know there's a 11
[09:48:08] <mfiano> I lost count/stopped caring at 95.
[09:48:42] <Lycurgus> i definitely won't do anything after 10 without a good reason
[09:49:25] <Lycurgus> i went to linux from os/2 in the mid nineties
[09:49:51] <Lycurgus> (as OS of choice)
[09:50:38] <Lycurgus> unisys had a free version of MCP which ran under windows 64 but they just discontinued it
[09:51:08] <Lycurgus> (the priced version is like $1500)
[09:51:51] <Lycurgus> ill get a lw license and some others b4 that
[09:52:37] <Lycurgus> was a blast to be able to run MCP on modern hardware
[10:16:02] <kakuhen> <Lycurgus> "the first two lines seem..." <- unfortunately my first is young and loves video games, so he uses windows
[10:16:11] <kakuhen> i don't think he'll fare well on any linux distribution any time soon
[10:16:23] <kakuhen>  s/first/friend
[10:17:02] <kakuhen> with that said, i managed to set up emacs just enough so it's great for lisp dev, but not so much for anything else
[10:17:23] <kakuhen> he eventually wants me to help him get auctex and pdf-tools running, but I'm saving that for a later time
[10:19:10] <Lycurgus> tex is enough to turn a young person off to IT
[10:19:51] <hayley> (Badness 10000)
[10:20:13] <kakuhen> it's funny, in my experience i always see computer ppl complaining about latex
[10:20:14] <Lycurgus> more the state of it's ecosys/culture than the thing itself, but that's pretty hairy too
[10:20:19] <kakuhen> then in my math program i see ppl who've never touched a compute do just fine with it
[10:20:26] <kakuhen> never touched a computer*
[10:20:54] <kakuhen> with that said, i do think latex has a messy package system
[10:21:01] <Lycurgus> and yeah people seldom use straight tex
[10:21:04] <kakuhen> but all the alternatives aren't on-par with features or they're objectively worse
[10:24:50] <Lycurgus> *its
[10:28:14] <kakuhen> hm... quicktime specification says the "fiel" atom contains two 8-bit integers, but ffmpeg's ffv1 encoder is making it much larger. i don't know why
[10:32:16] <kakuhen> I'm getting the bytes 01 00 00 00 00 10, the first two make sense according to QTFF, but I have no idea what the 00 00 00 10 segment is for.
[10:37:33] *** Joins: robin (~robin@user/terpri)
[10:37:42] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[11:06:07] <ck_> bytes for what?
[11:06:30] <kakuhen> the content of the fiel atom
[11:08:02] <kakuhen> I'm getting in particular: #xA 'fiel' (i.e. field handler that is 10-bytes long) and the contents are 01 00 00 00 00 10
[11:09:20] <kakuhen> according to the QuickTime specification, the field handler contains two 8-bit integers, one describing how color is being encoded and the other providing details (if necessary)
[11:09:43] <kakuhen> field valye 01 denotes a progressive scan and always detail set to 00
[11:09:53] <kakuhen> but that doesnt explain what the remaining 4 bytes are doing
[11:10:11] <kakuhen> ffmpeg reproduces this behavior for motion jpeg aswell
[11:12:32] <ck_> unfortunately I have started to look around without really having the knowledge or time to do it, I guess this is what you call "nerd sniping"
[11:12:49] <ck_> to get out of this I'll just do a senior consultant move
[11:13:01] <ck_> " have you looked at this? https://git.ffmpeg.org/gitweb/ffmpeg.git/commit/7d0e3b197c817b307d599a23704a44763ed0bbdd "
[11:13:02] -ixelp- git.ffmpeg.org Git - ffmpeg.git/commit
[11:15:08] <kakuhen> i suppose that'd help me
[11:15:23] <kakuhen> flac spec is also riddled with holes that are only answered by libflac source code
[11:19:02] <kakuhen> also ffv1 spec uses declarative for loops to define some things -- cant wait to learn what bugs suddenly become features of the codec
[11:19:21] <|3b|> that #xa isn't including the 4 byte size and 4 byte fiel?
[11:19:47] <|3b|> (spec says size includes size and type, not sure if you subtract that out or not)
[11:20:12] <kakuhen> if i understood qtff, then size denotes # of bytes from atom to end of content
[11:20:14] <kakuhen> ah
[11:20:32] <kakuhen> This happens every time I deal with mov/mp4...
[11:21:08] <kakuhen> ok this + that ffmpeg commit makes sense now
[11:29:18] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[11:43:34] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[11:43:51] *** Joins: shka (~herr@109.231.3.55)
[11:47:41] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[11:49:12] *** Joins: aeth (~aeth@user/aeth)
[11:50:12] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[12:07:24] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:11:12] * hayley looks through the runtime for the Hare language
[12:11:23] <hayley> "This is a simple memory allocator, based on Appel, Andrew W., and David A. Naumann. "Verified sequential malloc/free.""
[12:11:34] <hayley> Someone remind me what languages Andrew Appel is famous for working on?
[12:12:17] <|3b|> wrote compiler book/papers maybe?
[12:12:53] <hayley> Right. Which language?
[12:13:00] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 272 seconds)
[12:13:25] <moon-child> 'practical compiler construction in ml', right?
[12:14:24] <hayley> I have Compiling with Continuations in my bookshelf, but I guess that series might be more well known. Still, Appel worked on compilers for a given language (which CWC covers)....
[12:15:28] *** Joins: Lycurgus (~juan@98.4.112.204)
[12:16:22] <Lycurgus> https://gizmodo.com/what-percentage-of-philosophers-believe-in-god-485784336 interesting for the list of issues
[12:16:23] -ixelp- What percentage of philosophers believe in God?
[12:18:48] <Lycurgus> i'm in agreement with the majority there on most issues where there is one
[12:19:55] <hayley> Well, I guess it would not be news to #lispcafe that Andrew mostly worked on Standard ML implementations (as far as I can tell). So it's a bit funny for everyone's favourite functional programming hater to use a malloc co-designed by Andrew.
[12:20:34] <Lycurgus> malloc the c function?
[12:20:41] <hayley> Yes.
[12:20:53] <hayley> https://www.cs.princeton.edu/~appel/papers/memmgr.pdf
[12:22:05] <Lycurgus> only a prior knowledge, analytic/synthetic, and scientific realism have super majorities
[12:22:20] <Lycurgus> oh and atheism ofc
[12:22:40] <|3b|> dunno, seems like a "hater" still being willing to consider things from people associated with the object of the "hater"ing should be a good thing, not funny? :)
[12:23:34] <hayley> It's pretty hypocritical, when he's shouted from the rooftops that functional programming is only a source of unnecessary complexity.
[12:23:34] <Lycurgus> i never thought of malloc as doing much
[12:23:44] <Lycurgus> essential but not hard
[12:24:35] <|3b|> so you are saying the choice of using something from an Appel paper is wrong for technical reasons?
[12:25:02] <Lycurgus> that's for you hayley 
[12:25:22] <Lycurgus> (i presume)
[12:25:23] <hayley> It's not "wrong" in any way. But it's quite odd given Drew's history of complaining about things.
[12:26:31] <hayley> Lycurgus: Nor I. But it probably helps to prove that an allocator works, and C is not a proving-friendly language apparently. The authors can also prove when malloc won't fail, and they found a bug in the POSIX spec.
[12:26:39] * |3b| just feels that this sort of response is the sort of thing that makes people less likely to change their mind about things (and i get the impression you think said person's mind should be changed)
[12:27:10] <hayley> (Spoilers: the latter because you cannot coerce -1 to void* in order to check if mmap fails.)
[12:27:10] <Lycurgus> ah
[12:27:52] <hayley> |3b|: Sure, that's a good point.
[12:28:04] * contrapunctus tries to see harelang.org but it requires authentication??
[12:28:17] <hayley> Yep.
[12:28:25] <hayley> contrapunctus: Here's the funny: https://git.sr.ht/~sircmpwn/harec/tree/master/item/rt/malloc.ha
[12:28:27] -ixelp- ~sircmpwn/harec: rt/malloc.ha - sourcehut git
[12:28:36] <hayley> Someone linked the page on Hacker News, and Drew got pissed, I figure.
[12:29:40] * |3b| was going to say that i guess even the source finds it funny though (given extension), but thinking more, a single "ha" tends to be a bit more sarcastic than actual laughing :p
[12:30:19] * hayley also likes non-thread-safe global allocation, she figures.
[12:30:25] <Lycurgus> it's ah backwards
[12:31:40] <Lycurgus> pretty sure malloc is thread safe in most used libs by now
[12:31:58] <hayley> Not in Hare, apparently. Though I don't see any mention of threads.
[12:33:24] * hayley reads someone's valgrind report. "No leaks are possible [...] ERROR SUMMARY: 19185 errors from 15 contexts"
[12:33:47] <Lycurgus> doubtless not in most older ones like win32 and what not
[12:39:08] <Lycurgus> no surprise no supermajority on truth (just a razor edge majority with which I agree) but I knew that was generally fuggled by the many and not just the unwashed
[12:40:25] <kakuhen> i crashed my own vps trying to join a big irc channel lole
[12:42:25] * Lycurgus read that as vpn at first
[12:42:33] <hayley> https://www.youtube.com/watch?v=7oCXNfS3WFw
[12:42:34] -ixelp- Elvis Costello - Radio Radio. - YouTube
[12:45:56] * hayley looks through logs for archive links
[12:45:58] <hayley> Here we are: https://archive.ph/h4EkJ
[12:45:59] -ixelp- archive.ph
[12:46:47] <moon-child> watlol
[12:47:54] <hayley> As I was saying, I find it hilarious that this guy turned around and ported a formally proven allocator from a ML hacker. But "turned around" is the wrong term, since I haven't found evidence that he doesn't still agree with such claims.
[12:48:12] <hayley> moon-child: Also https://archive.ph/lcDmO
[12:48:13] -ixelp- archive.ph
[12:49:02] <hayley> "Basically, each abstraction increases the level of complexity per line of code exponentially. Remember, complexity is the source of all evil in programming." Of course, one who actually isn't trying to paint functional languages in a bad light might notice a (usually downwards) change in the lines of code used to express a program.
[12:49:18] <hayley> At least compared to C or Go or etc. Your mileage may vary with other sane languages.
[12:49:49] <moon-child> 'Functional langauges scales the problem of exponential complexity all the way up to an entire goddamn programming language'   in other words, functional languages attempt to deal with the complexity at the language level?
[12:49:52] <moon-child> :P
[12:50:12] <Lycurgus> the kind of programming that occurs in a full on functional lang haskell is beyond the ken of the run of the mill programmer
[12:50:24] <hayley> idk, a monad is basically just if err != nil { return nil, err } in the >>=
[12:50:28] <Lycurgus> the economies it can realize
[12:51:01] <hayley> moon-child: Clearly you missed the unstated premise that you would write the same LOC irregardless of language.
[12:51:11] * Lycurgus is speechless at that monad tutorial
[12:51:31] <hayley> It's like a burrito.
[12:51:47] <moon-child> a monad is just a monoid in the category of endofunctors, what's not to understand?
[12:52:04] <hayley> The same person archived Baker's website and wrote about monads being burritos.
[12:52:26] <hayley> Speaking of, has moon-child seen <https://web.archive.org/web/20191008012412/http://home.pipeline.com/~hbaker1/unicycle.gif>?
[12:52:39] <Lycurgus> *lang like haskell
[12:53:05] <moon-child> yeah
[12:53:18] <hayley> Very good then.
[12:53:48] <hayley> Drew could just run his language like gilberth runs clex2, and just have discussions in #gocafe or something.
[12:54:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[12:55:47] *** Quits: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net) ()
[12:56:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:57:37] <kakuhen> although ive studied monads to a pretty decent depth, im still not sure how or why programmers bother using them
[12:57:42] <kakuhen> in mathematics they're useful for many reasons, but being able to make computers do things is not one of them
[12:58:19] <kakuhen> yes, they offer a much more general setting for doing algebra on, but by "making computers do things" i guess im thinking more of numbers & stuff
[12:58:50] <hayley> So that Joe Armstrong can go "It's a Mealy machine, It's a MOOOOOOOOONAD"
[12:59:01] *** Joins: random-nick (~random-ni@87.116.167.125)
[12:59:10] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[13:04:32] <hayley> https://twitter.com/BobKerns/status/1503301947490648066 "This about sums it up:" "This thought is not fully formed so YMMV"
[13:09:40] *** Joins: vats (~vats@103.158.91.1)
[13:17:41] <hayley> Did you know that Alonzo Church found that successive beta expansions in lambda calculus could lead to exponential growth of the size of lambda terms, while creating the Church encoding for natural numbers? Look up "beta inflation rule 34"
[13:18:55] <moon-child> lmao
[13:19:12] <moon-child> I'm kinda curious but ... ...
[13:20:00] * dave0 freshens everyone's coffee
[13:20:25] <hayley> I'll tell you. DuckDuckGo puts a lot of pr0n on page one, whereas you have to go on page 2 of Google results to find one link.
[13:20:27] <dave0> how is everyone today at the lisp cafe?
[13:21:08] <dave0> i'm a bit out of touch with porn.. is it still pornhub.com ?
[13:21:19] <hayley> üò≥
[13:21:24] <dave0> or is this programming porn?
[13:21:42] <hayley> I think you want http://gchandbook.org/ for that.
[13:21:42] -ixelp- The Garbage Collection Handbook
[13:22:08] <hayley> I mean, I'd rather have Knuth books, but I've heard those cost money. And I have already permanently borrowed two books from university already.
[13:25:20] <easye> property is theft
[13:27:04] * hayley rewords to "Rule 34 of beta inflation" and Google states "Some results may be explicit". Well, he probably is more likely to not use Google.
[13:28:52] <shka> not sure if bonk or not to bonk
[13:29:00] <|3b|> well, rule 34 isn't even turing complete, so probably not many people implementing lambda calculus in it, not surprising it would give you hits from some other ruleset :)
[13:30:15] * hayley uploaded an image: (100KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/XUHKlsFqXualVEASqFBwVdTP/Screenshot_2022-03-14_21-10-46.png >
[13:31:51] <selwyn> is irc the least horny chat platform
[13:32:21] * |3b| suspects there are chat platforms with fewer users, so probably not?
[13:35:12] <hayley> Would this email be convincing enough if you were Drew DeVault?
[13:35:53] <Gnuxie> need to replace Rule 34 with something less obious 
[13:36:56] <hayley> But inflation has non-horny context.
[13:38:23] <ck_> just call it rule 1.1 repeating
[13:38:37] <ck_> (metric)
[13:38:55] <shka> hayley: before today i didn't knew it had HORNY context
[13:38:59] <shka> you sick fucks
[13:39:03] <hayley> shka: Sorry.
[13:39:38] <hayley> "Jokes on you I am into that crap" - shka
[13:40:06] <shka> ... no
[13:40:07] <|3b|> isn't that the point of rule 34 of that ruleset? everything does :p
[13:40:45] <hayley> (I'm not, it is very unappealing. But such "look up inflation" jokes are common.)
[13:40:59] <selwyn> shka: what did you think rule 34 meant
[13:41:10] <hayley> https://gaming.ebaumsworld.com/pictures/google-sonic-inflation-yields-rule-34-results-not-story-of-supposed-economic-crash/86553723/
[13:41:12] -ixelp- Twitter Bait Tricks People into Looking Up Bizarre Sonic Fan Art - Funny Gallery | eBaum's World
[13:41:19] <ck_> selwyn: I think the remark was about "inflation"
[13:41:23] <selwyn> oh]
[13:41:34] <ck_> I read a book on civil engineering for a job once
[13:41:41] <ck_> there was a chapter named "Speed of Erection"
[13:41:45] <ck_> (it's pretty important)
[13:41:53] <dave0> selwyn: i thought it was "war is good for business"
[13:42:21] <hayley> ck_: https://www.youtube.com/watch?v=S069APhlWR8
[13:42:22] -ixelp- Erectin' a Dispenser - YouTube
[14:00:23] <ck_> easye: so I shouldn't own my mistakes?
[14:02:03] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:2e86:80a5:f58b:d1a4) (Ping timeout: 252 seconds)
[14:02:05] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[14:02:59] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:a4f7:3458:36c4:ffd7)
[14:09:10] <selwyn> shka: did you see that deepmind is tackling fusion
[14:09:16] <selwyn> also, there was a new temperature record set recently
[14:15:09] *** Joins: rain3 (~rain3___@2a02:2f09:d105:8b00:b253:a323:f95:3d4b)
[14:24:59] <shka> selwyn: i don't track fusion research, i am of mind that it lacks practical applications
[14:25:09] <shka> tokomak, certainly so
[14:26:49] <shka> i mean... superconductors next to super heated plasma 
[14:27:24] <shka> i get the scientific aspect of this, but still
[14:27:53] <shka> from engineering standpoint this is absurdly challenging
[14:28:34] <shka> and they want this not only to WORK but also generate excess energy 
[14:29:57] <shka> and meanwhile we are ruining the planet :P
[14:30:03] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[14:30:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:33:04] *** Joins: razetime (~quassel@117.254.35.152)
[14:33:57] <contrapunctus> Meanwhile, people are working on solar power in conjunction with heat storage, in a bid to get renewable energy during low-/no-sunlight situations (night, clouds, etc)
[14:34:30] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[14:36:07] *** Joins: aeth (~aeth@user/aeth)
[14:39:16] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[14:40:36] *** Quits: X-Scale (~ARM@83.223.233.31) (Ping timeout: 240 seconds)
[14:40:36] *** X-Scale` is now known as X-Scale
[14:40:57] *** Quits: razetime (~quassel@117.254.35.152) (Ping timeout: 240 seconds)
[14:41:46] *** Joins: razetime (~quassel@117.254.35.152)
[14:47:40] <pl> https://twitter.com/SarahJaneAvory/status/1501854607974277120
[14:49:26] <shka> viral marketing of military equipment
[14:49:32] <shka> welcome to the cyberpunk
[14:49:45] <pl> Umm, that was the norm, to be honest
[14:49:57] <pl> vs. driving home from Okƒôcie and seeing Raytheon ads
[14:50:52] <shka> have you seen tiger tank manual?
[14:51:22] <pl> nope
[14:51:35] <pl> is it anything like B-29 manual, with "start putt-putt"?
[14:52:45] <pl> https://nitter.papie.sh/nexta_tv/status/1503283617832869888 Mykolaiv police updated to technicals... /fast/ technicals
[14:52:46] -ixelp- NEXTA (@nexta_tv): "The #Mykolaiv patrol police received a valuable gift." | nitter
[14:53:23] <shka> pl: yeah, something like that http://paijmans.net/Tanks/Tigerfibel/18.jpg
[14:54:05] <shka> as well as http://paijmans.net/Tanks/Tigerfibel/58.jpg
[14:54:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[14:55:00] <pl> The Putt-Putt supposedly was one of the most memorable issues in creation of Tu-4
[14:55:11] <shka> and let's not forget about http://paijmans.net/Tanks/Tigerfibel/73.jpg
[14:55:28] <pl> something about Soviet teams working on it being too smart to figure what the fuck putt-putt was
[14:55:57] *** Quits: Bakerposting (~Bakerpost@n122-104-71-229.sun4.vic.optusnet.com.au) (Ping timeout: 240 seconds)
[14:55:59] <shka> yes, sense of humor
[14:56:05] <shka> the ultimate weapon against communism
[14:56:33] <pl> shka: no, the manual was written for illiterate peasant that got conscripted by throwing a grenade at the plow
[14:57:08] <pl> and ended up being studied by MSc. and PhDs and master engineers
[14:58:50] <pl> > Unix - a twisty maze of dark passages with badly documented lore. You're about to be eaten by forking while multithreaded
[15:04:45] *** Quits: vats (~vats@103.158.91.1) (Ping timeout: 252 seconds)
[15:09:18] <shka> pl: corridors of unix
[15:10:29] <hayley> .oO( Well, most noticeably bad AI these days is due to poor training data. Like that MS chatbot that was racist because it read that sort of crap. So I guess oppression by an omnipotent AI gone bad might look eerily similar to an omnipotent human government gone bad. )
[15:12:06] <selwyn> im sure ai oppression would be shit in ways that human oppression isnt
[15:14:25] <selwyn> in most (not quite all) authoritarian societies, if you accept the unwritten rules of the game and keep your head down without complaining, you can survive if not thrive
[15:15:02] <selwyn> would guess that an ai authoritarian government simply would lock up 1% of its loyal supporters without any discernable reason
[15:15:07] <selwyn> because the black box of numbers says so
[15:15:24] <hayley> lol
[15:16:55] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:17:19] <hayley> But I generally believe that humans with power could well pull off the same sort of cruelty that is attributed to AI in dystopian fiction. Of course, the AI is presumably smarter and the backdrop is different, but I suspect the functional principles will remain the same, since we train AIs these days on data to model.
[15:22:57] * hayley also plans a new article. Something close to gilberth's joke on "bounds checks are bad for the climate" will be a topic.
[15:33:22] <shka> https://www.youtube.com/watch?v=bu6xUG9zoRg
[15:33:23] -ixelp- RUSSIA VS SANCTIONS: how they affect regular Russians - YouTube
[15:33:37] *** semz_ is now known as semz
[15:38:44] *** Joins: lisp123 (~lisp123@120.154.103.52)
[15:40:04] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:42:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:43:02] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[15:43:34] *** Joins: kevingal (~quassel@149.157.122.151)
[15:47:55] *** Quits: kevingal (~quassel@149.157.122.151) (Ping timeout: 256 seconds)
[15:48:02] *** Joins: kevingal (~quassel@hamilton-nat.nuim.ie)
[15:57:24] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 240 seconds)
[15:57:49] *** Joins: Mandus (~aasmundo@85.112.154.250)
[16:13:52] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[16:29:26] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[16:38:44] *** Joins: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com)
[16:38:47] *** Quits: razetime (~quassel@117.254.35.152) (Ping timeout: 252 seconds)
[16:50:05] *** Joins: razetime (~quassel@117.254.34.245)
[16:58:03] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 252 seconds)
[16:58:22] <shka> https://youtu.be/yqBx6Bn0ecw?t=2018
[16:58:23] -ixelp- [ENG] AfreecaTV StarLeague(ASL) S13 Ro.16 Group D (Tastosis) - YouTube
[16:58:31] <shka> when caster forgot to turn off microphone
[17:00:07] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[17:00:11] <ck_> sounds more like the editors job, no?
[17:04:03] <shka> well, still funny
[17:04:09] <ck_> yes
[17:04:24] <shka> "he is so fucking good"
[17:04:28] <ck_> where in poland are you, shka?
[17:04:40] <ck_> (close to the ukrainian border or no)
[17:05:53] <shka> close to the Belarusian border
[17:06:14] <selwyn> one of my friends grew up near you actually
[17:06:18] <ck_> without news, would you have noticed anything?
[17:06:58] <shka> ck_: yes, because there is no more 40 km long traffic jam at the border crossing
[17:07:29] <shka> also, you can hear a lot of Belarusian/Russian speaking people in the streets
[17:08:27] <shka> and that manufactured refugee crisis was replaced by a real one
[17:09:04] <selwyn> why isnt there traffixc
[17:09:33] <selwyn> is belarus sanctioned as well?
[17:10:41] <shka> well, i assume they are preoccupied with other shit right now 
[17:11:08] <shka> and i hope they are sanctioned because Belarus is used for launching missiles at Ukraine
[17:11:19] <shka> also, invasion force entered from the north
[17:12:21] <shka> which is act of war
[17:12:32] <shka> regardless, Belarus is de facto part of Russia
[17:13:07] *** Joins: vats (~vats@103.16.30.211)
[17:14:05] * shka just realized that tomorrow is 15 march
[17:14:48] <shka> Ides of March
[17:14:54] <shka> maybe? maybe?
[17:15:06] <selwyn> who is brutus
[17:15:16] <shka> Lavrov? :D
[17:15:57] <selwyn> perhaps there is a classical analogue for putin and lukashenko
[17:16:08] <selwyn> ex soviet nerd vs. hearty slav nationalist
[17:16:47] <selwyn> i don't think pompey and caesar quite works
[17:16:51] <shka> also, that "Third Rome" talk
[17:18:07] <selwyn> chelsea football club is the circus
[17:18:33] <selwyn> if you followed sports you would understand how funny it is
[17:19:00] <shka> sorry, only esports 
[17:19:09] <shka> and woman long jump 
[17:19:14] <selwyn> yesterday, some fans of another club were accused of flying a russian flag
[17:19:30] <selwyn> but it was a bulgarian flag with the club crest in the middle
[17:20:07] <shka> ... why?
[17:20:29] <selwyn> we are not 100% sure but it was probably to honour the former bulgarian captain of that club
[17:21:41] <selwyn> ukrainian flag seems to be flown at every match
[17:23:51] <selwyn> https://ichef.bbci.co.uk/onesport/cps/800/cpsprodpb/D4E1/production/_123679445_romanabramovich_flag_getty.jpg
[17:23:56] <contrapunctus> GreaseMonkey: https://idlewords.com/talks/website_obesity.htm
[17:23:57] -ixelp- The Website Obesity Crisis
[17:30:55] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[17:43:47] *** Joins: OlCe (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr)
[17:45:17] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:10:12] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com)
[18:13:23] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com) (Remote host closed the connection)
[18:18:30] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com)
[18:25:27] *** Quits: Brucio-61 (~Brucio-72@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:25:39] *** Joins: notzmv (~zmv@user/notzmv)
[18:26:02] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[18:51:10] *** Quits: razetime (~quassel@117.254.34.245) (Ping timeout: 250 seconds)
[19:01:01] *** Joins: razetime (~quassel@117.254.35.152)
[19:03:03] *** Joins: scymtym (~user@ip-129-70-148-76.WLAN.Dyn.CIT-EC.NET)
[19:04:48] *** Joins: Brucio-61 (~Brucio-72@ip-129-70-148-76.WLAN.Dyn.CIT-EC.NET)
[19:07:57] *** Quits: kevingal (~quassel@hamilton-nat.nuim.ie) (Ping timeout: 256 seconds)
[19:08:11] *** Joins: kevingal (~quassel@2001:770:c0:401:34fd:1bca:e1ec:2bd4)
[19:12:13] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (Remote host closed the connection)
[19:12:13] *** Quits: sirufer (68f46fc7c3@user/sirufer) (Remote host closed the connection)
[19:12:13] *** Quits: sm2n (ae95cb1267@user/sm2n) (Write error: Broken pipe)
[19:12:13] *** Quits: mcoll (1cd8fbb055@2604:bf00:561:2000::160) (Write error: Broken pipe)
[19:12:13] *** Quits: jasom (f3e90f0325@2604:bf00:561:2000::3a6) (Remote host closed the connection)
[19:12:14] *** Quits: payphone (dd09ba4109@2604:bf00:561:2000::20b) (Remote host closed the connection)
[19:12:48] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[19:12:50] *** Joins: sm2n (ae95cb1267@user/sm2n)
[19:12:53] *** Joins: sirufer (68f46fc7c3@user/sirufer)
[19:12:56] *** Joins: mcoll (1cd8fbb055@2604:bf00:561:2000::160)
[19:12:56] *** Joins: payphone (dd09ba4109@2604:bf00:561:2000::20b)
[19:13:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:15:04] *** Joins: lisp123 (~lisp123@120.154.103.52)
[19:15:30] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:19:51] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[19:25:27] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com) (Remote host closed the connection)
[19:26:56] *** Quits: Brucio-61 (~Brucio-72@ip-129-70-148-76.WLAN.Dyn.CIT-EC.NET) (Read error: Connection reset by peer)
[19:29:26] *** Joins: Brucio-61 (~Brucio-72@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[19:29:29] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com)
[19:43:55] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:44:42] *** Quits: scymtym (~user@ip-129-70-148-76.WLAN.Dyn.CIT-EC.NET) (Ping timeout: 252 seconds)
[19:53:46] *** Inline__ is now known as Inline
[19:55:32] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[20:12:33] <gilberth> Good morning #lispcafe!
[20:13:10] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com) (Remote host closed the connection)
[20:14:53] <sm2n> hayley, selwyn: runaway AI in science fiction usually is/can be read as an allegory for capitalism
[20:15:26] <sm2n> There are well-known authors on the record saying they do it on purpose
[20:17:01] <gilberth> Ok. Task for today: Figure out WITHOUT-INTERRUPTS. How does it work and does it support different interrupt levels? As I need to have different interrupt levels.
[20:17:07] <selwyn> sm2n: i see
[20:19:54] *** Quits: razetime (~quassel@117.254.35.152) (Ping timeout: 252 seconds)
[20:34:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[20:37:16] * gilberth finds an IGNORING-WITHOUT-INTERRUPTS macro and scratches his head.
[20:41:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:25] * gilberth finds some red herrings in form of unused macros.
[20:45:34] <gilberth> How stale is this code?
[20:50:34] *** Joins: Lycurgus (~juan@98.4.112.204)
[20:56:11] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[21:06:38] *** Quits: kevingal (~quassel@2001:770:c0:401:34fd:1bca:e1ec:2bd4) (Remote host closed the connection)
[21:10:39] <ck_> stale according to which measure? by bro-hipster-standards anything commited yesterday and back is, like, old news bro
[21:11:30] <selwyn> stale lisp must be like 40 years old
[21:11:38] <gilberth> Perhaps the time frame I am looking at is decades rather. There are some macros and functions that aren't used at all anymore.
[21:11:42] <ck_> selwyn: but it keeps
[21:11:55] <selwyn> programming languages as food
[21:12:06] <ck_> the () are the freshness seal
[21:12:23] <ck_> that's why structural editing is so important
[21:12:40] <selwyn> lisp has to be some kind of old fashioned but hearty canned food
[21:12:57] <gilberth> And there were spikes on the ";" key. I have fun figuring out how interrupts levels work and if there are levels at all besides the two I found.
[21:14:27] <Lycurgus> WITHOUT-INTERRUPTS is supported but deprecated in allegro, I used it last week to fill in some holes in cl-http miniproc
[21:14:45] <gilberth> I hope Lisp code is more like wine or whiskey. The longer you keep it sitting there the better it gets. :)
[21:14:59] <Lycurgus> they have something else they want you to use, fast something
[21:15:22] <Lycurgus> and they show examples with unwind-protect
[21:15:29] <gilberth> WITHOUT-INTERRUPTS is essential at times.
[21:16:42] <Lycurgus> dentistry is such a horror in the US of A
[21:16:54] <gilberth> Anyhow, for having timeouts with waiting, I want and need another interrupt level. It's sad that I must implement this on my own as this usually is what you expect an OS would do for you.
[21:17:11] <ck_> unexpected topic changes for 400, alex
[21:18:22] <gilberth> I mean, when you say e.g. (sleep 100) and then break into a debugger loop, you would be surprised, when after said 100s you're thrown out of this debugger back to where you came from, don't you?
[21:19:46] <ck_> I was referring to the dentistry remark
[21:19:55] <gilberth> And since macos has no working sleep(2), I must have another process which sleeps for me and kill(2)s the main process after the indicated time has passed.
[21:21:33] <gilberth> So these timeout interrupts must be lower priority than any other interrupts.
[21:23:19] <gilberth> Wait a second. No, that won't work. You want to be able to set new timeouts in said debugger loop. :'(
[21:23:48] <Lycurgus> i do all lisp dev on linux, even ccl
[21:24:59] <Lycurgus> i would do a thing on mac if it required it
[21:25:08] * gilberth is back to the drawing board.
[21:27:24] *** Joins: Catie (~user@user/catie)
[21:27:43] <gilberth> I mean you can interrupt syscalls fine. At least this still works with Darwin. But I have no way to tell whether I am already in the syscall. I can't atomically enter the system call and change my state to "waiting for some timeout". When an interrupt happens between setting this state and the kernel finally listening to interrupts as part of the syscall, that timeout would be lost.
[21:28:13] <gilberth> So I need non-local transfer of control from inside the handler.
[21:29:02] <gilberth> Trouble is: I want that entering a debugger would block this timeout. As well as serving any other.
[21:30:02] <gilberth> Specifically also GC interrupts should block that. But that is handled already by the Lisp kernel.
[21:30:57] <Lycurgus> what implementation?
[21:31:13] <gilberth> CCL
[21:31:19] <Lycurgus> ah
[21:31:40] <Lycurgus> sorry if that was meant to be implicit in Darwin
[21:32:40] <gilberth> Well, once you're a GUI process with Darwin, all timeouts given to any syscall are raise to 10s (or 20s which I also have seen).
[21:33:26] <gilberth> And BTW SBCL on Darwin is fubar with waiting on its own.
[21:36:06] <gilberth> How do signals behave with UNIX? Can I block signals, but still have them queued and reported by syscals with EINTR? I need to do some homework.
[21:36:59] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:38:58] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:44:49] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[21:47:32] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[21:48:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:51:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:07:45] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[22:08:17] <pl> gilberth: I think it depends on which APIs are supported. signalfd will let you queue them, but I think it's part of RT addendum to POSIX
[22:08:30] <ck_> you're never done learning
[22:08:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[22:09:06] <ck_> today I was stunned for a second because an apache docker container shut down immediately after starting it in interactive mode
[22:09:29] <ck_> it received SIGWINCH -- because I ran it inside tmux
[22:10:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:16:58] *** Quits: Catie (~user@user/catie) (Remote host closed the connection)
[22:18:44] *** Joins: Catie (~user@user/catie)
[22:30:15] *** Joins: lisp123 (~lisp123@120.154.103.52)
[22:34:47] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[22:37:52] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Quit: WeeChat 3.4)
[22:38:31] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[22:55:52] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[22:56:37] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Ping timeout: 240 seconds)
[22:56:50] <masinter> hello from Interlisp meeting
[22:59:42] <ck_> welcome to the internet what's the latest internews?
[23:00:16] <masinter> we're hoping people will try the new https://online.interlisp.org
[23:00:17] -ixelp- Interlisp Online
[23:01:13] <masinter> report problems
[23:02:10] <ck_> sorry I have an appointment soon.. with the pillowcase .. in the library
[23:04:21] *** Quits: rain3 (~rain3___@2a02:2f09:d105:8b00:b253:a323:f95:3d4b) (Ping timeout: 252 seconds)
[23:14:03] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[23:16:28] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[23:20:52] *** Parts: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) ()
[23:22:01] <selwyn> does anyone know if there is a sensible way to cite github repos
[23:22:51] <ck_> you mean at one point in time? maybe use the HEAD sha
[23:24:50] <selwyn> i just mean how to make it look nice
[23:24:58] <selwyn> but tbh what can you put apart from the name and url
[23:25:07] <ck_> oh, there must by a style for it
[23:25:28] <ck_> a timestamp maybe, or the summary of the repository if it has one
[23:27:20] *** Quits: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com) (Quit: WeeChat 3.4)
[23:28:45] <ck_> selwyn: !! https://twitter.com/natfriedman/status/1420122675813441540
[23:29:07] <selwyn> i probably tried to use that at some point
[23:29:31] <selwyn> i got really excited by your '!!' i thought maybe the queen had died or sth
[23:29:45] <ck_> noted, sorry for enthusiasm
[23:31:24] <ck_> I just thought it was nice to find such a direct answer to your question. if you look for these files on github you'll probably find a citation style you like
[23:41:02] <selwyn> probably
[23:41:04] <selwyn> thanks for your help
[23:54:32] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
