[00:02:39] <patchvonbraun[m]> Averaging across an FFT power output will simply smoosh bins together.  What is it you're trying to actually accomplish?
[00:03:26] <flash[m]> you ask hard questions. I'm just the software weenie who does what he is told
[00:03:28] <patchvonbraun[m]> Averaging of each bin over many outputs will improve the SNR of the power estimate at the expense of time-domain precision
[00:04:06] <patchvonbraun[m]> You can have trade-offs by using things like overlapped FFTs, etc.
[00:04:09] <flash[m]> one application is detecting a CW jamming signal
[00:04:43] <flash[m]> another is looking for broadband noise jamming (raising the noise floor)
[00:06:53] <flash[m]> so, for example, the BBN uses a "smooshed" average that mostly looks flat unless there is a narrow-band signal present
[00:07:14] <patchvonbraun[m]> CW jamming out-of-band (but still in-band for your RF front end) can actually show up as the noise floor decreasing considerably, without there being any obvious CW spectral component.
[00:08:28] <flash[m]> those applications have been implemented; I'm just looking for some code re-use today :)
[00:09:03] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:560:ccc:5fb5:e52f) (Quit: uros)
[00:09:36] <patchvonbraun[m]> Well, GR has plenty of FFT and averaging and filtering blocks.  Go nuts.
[00:10:04] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[00:10:33] <LordKalma> but not DYK nuts
[00:10:35] <LordKalma> little inside joke
[00:10:58] <patchvonbraun[m]> But there isn't a "is there a strong CW signal present in this spectrum?" block, nor is there a "does this noise floor look 'normal'" block.
[00:11:06] <patchvonbraun[m]> Some programming may be required....
[00:11:31] <LordKalma> Oh no! the _programming_
[00:11:55] <LordKalma> since the fellow member did mention GPU computing, I'll assume that wouldn't be a problem for them
[00:12:22] <LordKalma> So, had a paper rejected because of the reviewers basically didn't read the paper.... 
[00:12:23] <patchvonbraun[m]> LordKalma: Yes, I'm afraid so.   Your mother will be ashamed, etc.
[00:12:24] <LordKalma> I love academia...
[00:12:53] <LordKalma> "Does a device [you describe] exist?" "YES THE MODEL NAME IS RIGHT THERE IN THE PAPER"
[00:12:57] <patchvonbraun[m]> I assume that the bandwidths we're talking about are monsterous or something?  
[00:13:22] <patchvonbraun[m]> Otherwise, I don't see the point of mucking about with GPUs
[00:13:49] <flash[m]> sample rates are high
[00:13:59] <LordKalma> GPUs are very much a double edged sword and I've seen people taking hilariously bad jabs at it
[00:14:06] <Yamakaja[m]> How high?
[00:14:16] <Yamakaja[m]> 100MS high or 2 GS high
[00:14:18] <Yamakaja[m]>  * 100MS/s high or 2 GS/s high
[00:14:23] <flash[m]> 64msps x 6 streams
[00:14:49] <LordKalma> including some colleagues of mine, making master thesis's and be like "This doesn't scale with grid size beyond this point", we're not sure why"
[00:15:01] <LordKalma> > because BUS finite bandwidth that's why 
[00:15:03] <flash[m]> again, all that stuff is done. I am not trying to reinvent the wheel
[00:15:16] <LordKalma> flash[m] we're just curious folks :)
[00:15:19] <flash[m]> sorry I tossed a meatless bone out there
[00:15:36] <patchvonbraun[m]> Dropping a GPU into the middle of a GR flow has been shown to be exceedingly difficult to make work at thruput beyond what the native CPU can do...
[00:15:39] <LordKalma> this isn't stackoverflow, we're not going to say you're using "yesterday's" JS framework
[00:15:51] <flash[m]> that has nothing to do with GR
[00:16:40] <LordKalma> I'm still waiting for Intel to upstream OneAPI/SYCL to LLVM :(
[00:16:46] <flash[m]> the GR question was, given a block that detects spoofing GPS signals, how can I tell the difference between a spoofing signal and a jamming signal
[00:17:14] <flash[m]> adding a new block wouldn't be useful
[00:17:28] <flash[m]> it needs to be a modification of the existing block
[00:17:39] <patchvonbraun[m]> Well, a spoofing signal will be semantically valid in the context of GPS.   A jamming signal? Not so much.
[00:18:29] <flash[m]> this algorithm detects spoofing prior to decoding, so semantics aren't known, Just the phase relationships between peaks
[00:19:03] <flash[m]> you can't fake physics
[00:19:49] <Yamakaja[m]> Well then what your algorithm is really detecting is a bad signal transmitter location, and not if that's a spoofing or jamming transmitter. 
[00:20:00] <Yamakaja[m]> You'll need different algorithms for that
[00:20:49] <flash[m]> it detects the presence of spoofing just fine. It just false alarms in the presence of jamming
[00:20:58] <patchvonbraun[m]> A wideband jammer will not usefully correlate against the GPS spreading code.
[00:21:41] <Yamakaja[m]> flash: That was my point, you're not differentiating. You need to look at the semantics of the signal as patchvonbraun is suggesting to decide whether you're looking at jamming or spoofing
[00:22:52] <LordKalma> aren't jammers just powerful noise with the necessary bandwidth?
[00:23:01] <LordKalma> why would a jammer be decodeable as GPS data?
[00:23:13] <Yamakaja[m]> Exactly, it isn't
[00:23:40] <flash[m]> https://github.com/oscimp/gnss-sdr/blob/master/src/algorithms/signal_source/libs/spoofing_detection.cc
[00:24:16] <flash[m]> the point of detecting prior to decode is that it takes time to acquire and track, and if you detect it, you can actually remove it
[00:24:35] <flash[m]> as I said, we are working from that algorithm
[00:24:36] <clever> LordKalma: ive seen some details before (years ago), about how, if you know the exact distance from you to a target, you can spoof the gps signals with a directional antenna aimed at the target
[00:25:00] <clever> LordKalma: i think it has examples like messing with the altitude readings of drones, so they would just fly into the ground
[00:25:40] <clever> just slowly change the offset between true and spoofed sea-level, until holding at 1k feet means its trying to fly 6 feet under :P
[00:25:50] <LordKalma> notice how you changed language: spoof, not jam
[00:25:56] <LordKalma> a distinguish that was already being made
[00:25:58] <clever> yeah
[00:26:10] <clever> didnt read the full backlog of the chat
[00:33:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:31] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:341d:a479:dc03:8ff8)
[00:43:16] <patchvonbraun[m]> Haven't read the paper, but a VERY cursory inspection of the code assumes two antennas.  It's measuring phase difference between antennas and assumes that if there are considerably different phase angles, it implies a TX at a "trivial" distance from the RX.  Which would not be the case for an actual GPS transmission.  But, I have read neither the paper, nor the algorithm in any detail.
[00:45:23] <flash[m]> yes, there are two antennae
[00:47:05] <flash[m]> square the input signals to remove BPSK modulation and look for multiple peaks (corresponding to individual GPS signals) at the same phase, indicating they came from the same transmitter
[00:53:59] *** Joins: pcero (~pcero@187.135.224.43)
[01:01:01] *** Quits: pcero (~pcero@187.135.224.43) (Quit: Konversation terminated!)
[01:01:26] *** Joins: KeithTalent (~KeithTale@2603-800c-4840-10b6-0000-0000-0000-16f8.res6.spectrum.com)
[01:02:44] *** Quits: KeithTalent (~KeithTale@2603-800c-4840-10b6-0000-0000-0000-16f8.res6.spectrum.com) (Remote host closed the connection)
[01:03:02] *** Joins: KeithTalent (~KeithTale@2603-800c-4840-10b6-0000-0000-0000-16f8.res6.spectrum.com)
[01:03:17] *** Joins: pcero (~pcero@187.135.224.43)
[01:03:39] *** Quits: KeithTalent (~KeithTale@2603-800c-4840-10b6-0000-0000-0000-16f8.res6.spectrum.com) (Remote host closed the connection)
[01:04:05] *** Joins: KeithTalent (~KeithTale@2603-800c-4840-10b6-0000-0000-0000-16f8.res6.spectrum.com)
[01:04:42] *** Quits: pcero (~pcero@187.135.224.43) (Client Quit)
[01:32:51] <patchvonbraun[m]> So, does anyone have a good strategy for allow a single graph that can have the GUI (or other features) disabled at runtime?  For graphs originating in GRC, this seems to be particuarly challenging, and I wonder if "code snippets" could help.
[01:32:54] *** Quits: drewlander_ (~drewlande@74.196.20.3) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[01:33:30] <Jacob[m]12> no, and i think this would be a really cool option
[01:34:06] <Jacob[m]12> well. i shouldnt say no... i have effectively used ZMQ to connect a 'core' flowgraph to a separate analysis FG
[01:34:17] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[01:34:23] <Jacob[m]12> this is not an awesome solution though
[01:34:51] *** Joins: drewlander (~drewlande@74.196.20.3)
[01:34:54] <patchvonbraun[m]> Jacob: Yes, that's the obvious way to do it in lieu of explicit support.  I had an app, years and years ago, called IRA that was coded in XForms, and used named-pipes to talk to a "core" flow-graph.
[01:35:37] *** Joins: hololeap (~hololeap@user/hololeap)
[01:36:41] <Jacob[m]12> an option for "no gui (disable widgets" would be cool where widgets simply are disabled (or resolve to default values in the case of input controls
[01:36:53] <Jacob[m]12> * (disable widgets)" would
[01:38:43] <Jacob[m]12>  * an option for "no gui (disable widgets)" would be cool where widgets simply are disabled or resolve to default values in the case of input controls
[01:39:39] <patchvonbraun[m]> The larger question of how to do runtime component exclusion/inclusion is more interesting than just the GUI bits--they're just the most glaring use case.
[01:40:10] <Jacob[m]12> selector (/s)
[01:40:52] <patchvonbraun[m]> Yeah, aren't selector blocks internally ugly-as-dirt?
[01:41:06] <Jacob[m]12> they are a dumpster fire
[01:41:51] <Jacob[m]12> i guess if you never exercise the callback they are not the worst thing in the world.
[01:52:26] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:00:53] *** Joins: jemius (~imperator@200116b82d09c1004c45edbceb9eadc1.dip.versatel-1u1.de)
[02:29:02] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[02:37:47] <muaddib[m]> Selectors got better once the implementation got switched to c++. I think that was a couple of years ago.
[02:42:45] <muaddib[m]> So, I’m doing the same thing you guys are with a headless ‘core’ and piping zmq to a display flowgraph. I definitely second the ‘disable gui’ option. How would that work, just turn widgets into vanilla variables?
[02:46:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[02:53:20] *** Quits: jemius (~imperator@200116b82d09c1004c45edbceb9eadc1.dip.versatel-1u1.de) (Quit: Leaving)
[03:08:34] <flash[m]> architecturally, it's better to leave them separate. it allow for your display to run remotely from the back-end
[03:09:04] <patchvonbraun[m]> There's a lot of "it depends" in there...
[03:09:24] <muaddib[m]> Yeah, a lot
[03:10:51] <muaddib[m]> It’s more of a convenience for development.
[03:11:50] <patchvonbraun[m]> muaddib: For me, it goes beyond just "developer instrumentation".   It's instrumentation the end-user/observer will want to use from time to time, but for well-understood experiments, can just be tucked away.
[03:12:34] <patchvonbraun[m]> I have one set of apps that I've tucked in beneath a Tornado python webserver, where you launch experiments, and receive data. Very little real-time instrumentation goop.
[03:12:46] <patchvonbraun[m]> Anyway, I'm off to give a talk.  BBL.
[03:12:52] <Jacob[m]12> Yeah I have two sets of some flowgraphs for a ton of reasons and they get out of sync sometimes... It's annoying
[03:15:24] <muaddib[m]> Brother tell me about it! I have so many “_noGUI.grc “ Flowgraphs
[03:19:30] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 256 seconds)
[03:25:23] <jsallay[m]> I proposed conditionally enabled blocks a while back. I was thinking that the inclusion of the GUI elements could be controlled by a variable. It's on my list of things to look into.
[03:32:32] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 240 seconds)
[03:33:43] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[03:48:31] *** Quits: baracurda (~baracurda@user/parserblabla) (Remote host closed the connection)
[03:48:31] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Write error: Connection reset by peer)
[03:48:31] *** Quits: hololeap (~hololeap@user/hololeap) (Write error: Connection reset by peer)
[03:48:31] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Write error: Connection reset by peer)
[03:48:31] *** Quits: spithash (~spithash@user/spithash) (Write error: Connection reset by peer)
[03:49:27] *** Joins: hololeap (~hololeap@user/hololeap)
[03:51:09] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[03:53:17] *** Joins: spithash (~spithash@user/spithash)
[04:21:31] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[04:32:51] *** Joins: harish_ (~harish@158.140.144.42)
[04:35:24] *** Quits: harish (~harish@27.125.135.173) (Ping timeout: 240 seconds)
[04:38:11] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[05:24:57] *** Joins: Guest72 (~Guest72@176.61.36.216)
[05:26:11] *** Quits: Guest72 (~Guest72@176.61.36.216) (Client Quit)
[05:30:00] *** Quits: metta (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: metta)
[05:30:38] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[05:40:21] *** Joins: pcero (~pcero@187.135.224.43)
[06:03:03] *** Joins: GregoryRWarnes[m (~warnesmat@2001:470:69fc:105::1:d6d8)
[06:32:35] <GregoryRWarnes[m> I’m building a custom p2p link using a pair of ADALM-PLUTOs and want to maximize the effective range while respecting FCC regulations on TX power in the unlicensed ISM & SAS-coordinated CBRS frequencies.  Any recommendations for RX and TX amplifiers (LNAs) + directional antennas to use for 10-20 Mhz bandwidth in the 2.4Ghz - 3.8Ghz range.   Total budget is $200.
[06:34:25] <patchvonbraun[m]> You do know that P2P WIFi bridges are readily available and cheap?
[06:35:52] <GregoryRWarnes[m> Yes, but this is a testbed for a novel waveform.
[06:36:10] <GregoryRWarnes[m> So I need to use SDRs.
[06:38:29] <patchvonbraun[m]> The SPF-5189z LNAs would probably work and they’re cheap as dirt. In terms of an RfPA, dunno.
[06:38:50] <GregoryRWarnes[m> ?RfPA?
[06:39:26] <patchvonbraun[m]> RFPA. RF power amplifier.
[06:39:55] <patchvonbraun[m]> Maybe one of those WiFi booster amps on eBay. Can’t vouch for their legality or cleanliness
[07:29:46] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:31:17] *** Quits: pcero (~pcero@187.135.224.43) (Quit: Konversation terminated!)
[07:34:24] *** Quits: KeithTalent (~KeithTale@2603-800c-4840-10b6-0000-0000-0000-16f8.res6.spectrum.com) (Quit: Leaving)
[07:35:16] <bpadalino> i think when i googled yesterday, those spf-5189z's are discontinued
[07:36:23] <patchvonbraun[m]> The part is. But there are vast numbers of the prebuilt boards floating around out there.
[07:36:50] <bpadalino> ah, i see .. 
[07:38:28] <patchvonbraun[m]> I was buying them like candy for a while. When ever I need a bit of low noise gain on an experiment, I’d slap one in place. Didn’t care if it got damaged.
[07:41:39] <bpadalino> so a real workhorse
[07:44:06] <patchvonbraun[m]> Yeah. Specs aren’t spectacular. But cheap.
[08:24:47] <GregoryRWarnes[m> There’s a number available on Amazon
[09:33:16] *** Quits: miaoski (~miaoski@2001-b011-0001-677c-6d4f-12d0-9b50-c1c3.dynamic-ip6.hinet.net) (Ping timeout: 245 seconds)
[09:33:41] *** Joins: miaoski (~miaoski@2001-b011-0001-677c-6d4f-12d0-9b50-c1c3.dynamic-ip6.hinet.net)
[09:58:10] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[09:58:28] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[10:28:08] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[10:29:04] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[10:31:14] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Ping timeout: 250 seconds)
[11:03:08] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[11:14:05] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[11:56:12] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[12:04:52] *** Joins: jemius (~imperator@200116b82d607c00755fa8f547de00c2.dip.versatel-1u1.de)
[12:16:54] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:e52b:f045:4fc5:b526)
[12:30:17] *** Quits: shayanmajumder[m (~shayanmaj@2001:470:69fc:105::c3a5) (Quit: You have been kicked for being idle)
[12:30:17] *** Quits: Nistar[m] (~nistarmat@2001:470:69fc:105::1f70) (Quit: You have been kicked for being idle)
[12:30:17] *** Quits: xhale[m] (~xhaleloop@2001:470:69fc:105::a48e) (Quit: You have been kicked for being idle)
[12:30:19] *** Quits: SEhrhard[m] (~typeregnu@2001:470:69fc:105::ec5d) (Quit: You have been kicked for being idle)
[12:46:25] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[12:47:04] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[12:47:07] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[12:58:34] <Myon> patchvonbraun[m]: re disable at runtime, I was trying to see if there was a way to stop a waterfall sink from python, but didn't succeed. There's a Stop in the gui right-click menu that works, though
[12:59:14] <Myon> since that needs a lot of CPU %s that aren't necessary while I'm not watching
[13:04:18] *** Quits: Thorn (~Thorn@user/thorn) (Ping timeout: 256 seconds)
[13:06:43] *** Joins: Thorn (~Thorn@user/thorn)
[13:54:54] <Notou[m]> You want to stop the waterfall sink from processing samples at certain points? You can put a selector block in front of it, that you control with a GUI button, and have it direct streams either to the waterfall, or to a null sink.
[13:56:27] <Myon> ah, so just stopping the stream, will have to try that
[13:57:39] <Myon> there is a .Stop() function visible in python, but it doesn't do anything - is that supposed to be the GUI Stop equivalent (but just broken), or does that do something else?
[14:03:40] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[14:03:57] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[14:40:18] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[14:44:52] *** Joins: RadimPavlik_ (~RadimPavl@176-74-132-138.netdatacomm.cz)
[14:47:48] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 240 seconds)
[15:47:39] *** Joins: baracurda (~baracurda@user/parserblabla)
[16:07:43] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[16:08:43] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[16:25:49] *** Quits: baracurda (~baracurda@user/parserblabla) (Remote host closed the connection)
[16:26:14] *** Joins: baracurda (~baracurda@user/parserblabla)
[16:26:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:32:28] <BarryDuggan[m]> Myon: you can also stop the Selector output with a message. see https://wiki.gnuradio.org/index.php/Selector#Messages
[16:34:07] <Myon> ack, that seems to do what I want, will try after QRL
[16:35:26] *** Joins: RadimPavlik__ (~RadimPavl@176-74-132-138.netdatacomm.cz)
[16:38:50] *** Quits: RadimPavlik_ (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 272 seconds)
[17:02:31] *** Quits: ChealRipster (~RealChips@user/ChealRipster) (Quit: ChealRipster)
[17:06:34] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[17:07:29] *** Joins: ChealRipster (~RealChips@user/ChealRipster)
[17:10:13] *** Quits: jemius (~imperator@200116b82d607c00755fa8f547de00c2.dip.versatel-1u1.de) (Quit: Leaving)
[17:12:15] *** Joins: pcero (~pcero@187.135.224.43)
[17:41:10] *** Quits: pipapipapibo (~pipapipap@c-67-160-123-241.hsd1.wa.comcast.net) (Remote host closed the connection)
[18:00:23] *** Quits: Elzington (~Elzington@static-68-235-44-43.cust.tzulo.com) (Quit: Leaving)
[18:13:28] <patchvonbraun[m]> Also, the COPY block can turn flow on/off
[18:13:49] <Myon> nod
[18:14:13] <Myon> still, is there supposed to be a .stop method from python?
[18:16:21] <patchvonbraun[m]> Some discussion of the start() stop() wait() methods here:  https://wiki.gnuradio.org/index.php/Handling_Flowgraphs
[18:16:53] *** Parts: brian[m] (~brian27me@2001:470:69fc:105::1:8560) ()
[18:17:54] <Myon> that sounds distinct from the GUI "Stop"
[18:30:05] *** Quits: toulene (~toulene@user/toulene) (Quit: The Lounge - https://thelounge.chat)
[18:49:43] <Notou[m]> The GUI stop feature of the waterfall block stops it from refreshing its display. The stop() function available in a top_block completely interrupts processing in a flowgraph. Using a selector allows to redirect a stream of samples to somewhere that is not the waterfall block and doesn't use as much resources.
[18:53:08] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[18:53:14] *** Joins: kusanagi_ (~kusanagi@user/kusanagi)
[19:02:16] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) ()
[19:02:32] *** Quits: kusanagi_ (~kusanagi@user/kusanagi) (Quit: Leaving)
[19:04:44] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:e52b:f045:4fc5:b526) (Quit: uros)
[19:10:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[19:10:56] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[19:25:17] <Notou[m]> And yes, using a copy block is probably better than usinf a selector+null sink to drop samples
[19:25:26] <Notou[m]> s/usinf/using/
[19:30:11] *** Quits: ON4CG[m] (~on4cggnur@2001:470:69fc:105::f889) (Quit: You have been kicked for being idle)
[19:31:04] <DerekKozel[m]> Improving/extending the API of the GUI blocks to be able to disable processing is a good idea though.
[19:32:00] <Myon> more generally, I was wondering why there aren't message ports on basically all blocks to send stuff like that
[19:34:15] <patchvonbraun[m]> Messages were a relatively-late addition to GR, and many blocks there's not a large compelling reason to prefer messages over the regular set_  methods.
[19:40:31] <MarcinP[m]> Hi, is there a way to delay a tag by specified number of samples? 
[19:40:42] <MarcinP[m]> * tag by a specified number
[19:43:30] <muaddib[m]> <DerekKozel[m]> "Improving/extending the API of..." <- Did you see our discussion about having a ‘disable gui’ mode as well? A feature that would effectively generate a ‘headless’ flowgraph from a ‘QT GUI’ one? Wondering your thoughts on that.  
[19:44:27] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[19:44:28] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:44:50] <DerekKozel[m]> I've seen discussions like that in the past. I think its good feature and I actually thought someone had found a workaround to get close to that using an existing flowgraph.
[19:46:32] <DerekKozel[m]> There's several layers of possible implementation there, one is just replacing all GUI blocks with Null Sinks, and possibly trying to prune the flowgraph back to remove any upstream blocks that are unused by other blocks. I think I saw a discussion as well that wanted to be able to label blocks that would be enabled or disabled with that mode.
[19:46:42] <DerekKozel[m]> *to manually label
[19:47:03] <patchvonbraun[m]> I've always thought that something semantically-similar to #ifdef, but processed at runtime would be a good feature--to be able to disable entire sub-graphs at runtime, but perhaps only at start-up
[19:47:38] <DerekKozel[m]> Myon: Also in many cases no one has contributed code to add the message ports. Many blocks could benefit from them and they are not hard to add.
[19:47:46] <Myon> ack
[19:48:16] <Myon> I was wondering about the general policy, like prefer specialized ports per thing (set freq, set ampl, set whatever) vs. one cmd port
[19:48:19] <DerekKozel[m]> That tends to be the answer for many pretty obvious inconsistencies or possible enhancements.
[19:48:53] <Myon> existing blocks tend to prefer the 1st one, while the fact that messages are labelled cons pairs seems to favor the 2nd
[19:48:54] <DerekKozel[m]> that is a good question. And I don't have an off the top of my head answer or reference to a stated policy
[19:49:09] <DerekKozel[m]> I think the trend is definitely to prefer key-value pairs
[19:49:39] <Myon> what I've seen is that the "set freq" ports do want a key-value pair as well
[19:50:16] <DerekKozel[m]> I was about to say, I remember several blocks being updated so the specialized port is deprecated and redirects to the general message port handler
[19:50:25] <Myon> but I've only started poking around with GR some weeks ago (because the sdrangel authors think that 1s delay on something on a RX-TX application is just normal :D)
[19:51:13] <DerekKozel[m]> What specific application is that? I know of SDRAngel, but it has many modes.
[19:51:51] <Myon> just rx+rx of SSB signals (LimeSDR as QO-100 sat base station)
[19:52:34] <patchvonbraun[m]> Yeah, you get into the problem of small sample rates and large buffers == latency
[19:52:57] <DerekKozel[m]> If there isn't an option to starve some of the buffers.
[19:52:58] <Myon> it's about 0.8s delay on both RX and TX, which makes turnover too slow for many hamradio situations
[19:53:30] <DerekKozel[m]> Yeah, I starve the DSP buffers in my portable station
[19:53:39] <DerekKozel[m]> Helps cut down the latency a lot
[19:53:42] <Myon> while the sum of all delays is just 0.4s for the GRC flowgraph that does the same thing
[19:53:49] <Myon> including the sat delay
[19:54:50] <DerekKozel[m]> Probably there's a lot of extra DSP and state management in SDR Angel to handle all the different displays and reconfigurable demodulators/modulators?
[19:54:52] <Myon> I tried asking them about what I can do, and the answer was just that this amount of delay is just expected for any SDR stuff on commodity hardware
[19:55:08] <Myon> so they didn't seem interested at all
[19:55:35] <Myon> which is a pity, since it's the only (serious?) SDR app on linux that can do transmitting
[19:55:53] <DerekKozel[m]> I bet they'd accept change requests to improve it if you can find places
[19:56:06] <Myon> (there is also quisk, but that doesn't support split band rx/tx)
[19:56:08] <DerekKozel[m]> SoDaRadio works for basic operation
[19:56:29] <patchvonbraun[m]> Sometimes it's in the drivers.  The default buffer size for librtlsdr is large enough that at low sample rates, it's only delivering about 1 buffer/second to GR.  This makes things awfully lumpy.
[19:57:19] <Myon> I tried poking around with sdrangel buffer sizes, but that didn't lead anywhere
[19:57:42] <Myon> ah I had not seen SoDaRadio yet, thanks for the pointer. But that's the wrong SDR device...
[19:58:23] <DerekKozel[m]> Ah, I don't know what you're using
[19:58:56] <Myon> limesdr
[20:01:45] <patchvonbraun[m]> Back when I worked for a living, I had a colleague who worked on digital audio subsystem for QNX, for automotive sound.  He worked at the intersection of latency management and the two-clock problem.  It was a dumpster fire.  
[20:02:19] <patchvonbraun[m]> The point being that latency management is tricky, and the solutions are often application-specific.
[20:04:05] <Myon> a problem I haven't solved yet is generating the CW sidetone when keying the transmitter. Everything I tried so far in GR has a huge audio delay, or isn't responsive
[20:04:53] <Myon> the https://www.gnuradio.org/grcon/grcon19/presentations/Managing_Latency/ talk looks like it would somewhat fix it, but that looks very complex
[20:07:33] <DerekKozel[m]> Heh. I wrote those blocks with Matt
[20:07:41] <DerekKozel[m]> It's very simple actually, and quite effective
[20:07:44] <Myon> yeah I noticed :)
[20:07:54] <Myon> is that still state of the art?
[20:08:05] <DerekKozel[m]> Yeah. It does everything needed
[20:08:19] <Myon> ok, so I might play with it
[20:08:22] <DerekKozel[m]> The GNU Radio 4.0 scheduler might include some of it natively in a few years
[20:08:57] <DerekKozel[m]> But for now, latency control is often something that needs to be managed manually since needs are often different between applications.
[20:09:06] <Myon> hopefully that one last-block-to-audio buffer doesn't kill the idea since it's not part of the loop
[20:09:47] <DerekKozel[m]> It certainly doesn't kill it. It would be better to modify the SDR blocks and Audio blocks to support the tag passing, but that's much more work
[20:09:56] <Myon> right
[20:09:59] <DerekKozel[m]> The two blocks in that OOT allow any section of a flowgraph to be starved
[20:09:59] *** Joins: toulene (~toulene@user/toulene)
[20:11:06] <DerekKozel[m]> I do need to update that OOT at some point though. I have some branches around with 3.9 support in progress and also splitting the polarization blocks out for upstreaming...
[20:11:14] <DerekKozel[m]> Time... energy! sigh.
[20:11:33] <Myon> I don't know what max audio delay is acceptable for CW keying sidetone, but it's likely around 100ms
[20:12:17] <Myon> from what I've seen in the video, that's no problem at all for the latency manager blocks, but the audio sink might think it could fill its buffer to whatever
[20:13:15] <DerekKozel[m]> What are you using to input the key tone?
[20:13:34] <DerekKozel[m]> I've been using a hacked up mouse :D Not ideal but it is functional.
[20:13:55] <Myon> heh, that problem seems completely unsolved in general
[20:14:17] <Myon> I have a hacked K3NG arduino keyer that outputs _ (low) ^ (high) on the serial interface
[20:14:37] <Myon> and a GR python block that connects to the serial
[20:15:42] <Myon> https://github.com/df7cb/df7cb-shack/blob/master/gnuradio/  (the cw* files)
[20:16:16] <Myon> how are you reading from that mouse?
[20:16:24] <DerekKozel[m]> It's hard to know what an ideal answer would be. I'd lean towards using an external sidetone generator and passing it in via audio.
[20:16:34] <DerekKozel[m]> I position it over a button.
[20:17:10] <DerekKozel[m]> Works at my slower speed, and I don't tend to operate CW much from true SDRs.
[20:17:33] <DerekKozel[m]> I do need to figure out how I want to do it with the GNU Radio FlexRadio client though.
[20:17:41] <Myon> ok that's the very same problems I have here. At least that means I didn't miss any solution...
[20:19:11] <Myon> once the audio part works inside the computer, I'll try moving that to MIDI since that feels like the right interface type
[20:19:51] <Myon> SDR Console hasn't solved the problem either it seems, https://sdr-radio.groups.io/g/main/topic/75934376
[20:21:09] <DerekKozel[m]> Manual CW is just an odd combo of problems for a pure general purpose software approach.
[20:21:25] <DerekKozel[m]> Good luck on your latency hunting! I hope you get something that works well for you.
[20:21:58] <DerekKozel[m]> You're on all the right tracks
[20:25:33] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[20:30:24] *** Quits: baracurda (~baracurda@user/parserblabla) (Remote host closed the connection)
[20:31:21] <Myon> thanks! will report back about how it goes
[20:41:30] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[20:44:46] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[20:44:57] *** Quits: RadimPavlik__ (~RadimPavl@176-74-132-138.netdatacomm.cz) (Read error: Connection reset by peer)
[20:52:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:55:42] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[21:06:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:08:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:10:15] <wavewalkerdsp[m]> I'm making an editing pass over the beginner tutorials (left hand column on https://wiki.gnuradio.org/index.php?title=Tutorials). The goal is to make them easier to understand for non-native english speakers and more useful for gnuradio's global audience. I am making edits such as shorter sentences, simpler words and removing pronouns. If you are a non-native english speaker and have some insight into what would make the tutorials
[21:10:15] <wavewalkerdsp[m]> easier to read please let me know
[21:12:12] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:13:36] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[21:23:39] *** Joins: jemius (~imperator@200116b82d607c00755fa8f547de00c2.dip.versatel-1u1.de)
[22:37:47] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[22:40:18] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:48d:86b1:213b:6a7b)
[23:02:01] *** Quits: beenao (~beenao@user/beenao) (Quit: quit)
[23:05:06] *** Joins: beenao (~beenao@user/beenao)
[23:10:40] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[23:45:01] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[23:51:30] *** Quits: pcero (~pcero@187.135.224.43) (Ping timeout: 252 seconds)
[23:59:53] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Quit: Leaving)
