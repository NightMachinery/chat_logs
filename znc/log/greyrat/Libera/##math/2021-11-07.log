[00:00:07] *** Joins: nullcone (uid11626@id-11626.helmsley.irccloud.com)
[00:00:29] <sedeki> if you write it in English, i think we could take a look at it
[00:01:00] <Nickssen> Heh fair enough
[00:01:16] <sedeki> Nickssen this doesn't look like French though, like tolarz said.
[00:01:18] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 260 seconds)
[00:01:26] <Nickssen> it's spanish
[00:01:28] <Nickssen> one moment
[00:01:39] <tolarz> d'accord
[00:01:42] <sedeki> :)
[00:01:59] <sedeki> je suis un retard
[00:02:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[00:03:17] <tolarz> je ne parle pas francais.
[00:03:24] <tolarz> j'ai apprendu francais a l'ecole, mais
[00:03:30] <tolarz> je l'ai oublie tous.
[00:03:36] <tolarz> Nickssen: is this correct french?
[00:03:53] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[00:04:09] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[00:05:05] <Nickssen> i'm no latex expert but i tried
[00:05:12] <Nickssen> http://mathb.in/67170
[00:05:34] <Nickssen> this is what i did
[00:05:35] <Nickssen> https://imgur.com/a/yaCH55u
[00:05:58] <biberao> Nickssen: the latex is way prettier
[00:06:09] <Nickssen> that does look like right french
[00:06:16] <Nickssen> but my class is in spanish
[00:06:22] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[00:06:34] <buster> Decker: correction, it's more like this <http://mathb.in/67171>
[00:06:56] <buster> The matrix of partial derivatives is called the total derivative
[00:07:36] <Decker> that's a better format :)
[00:07:46] <biberao> Nickssen: non te preocupes
[00:07:48] <biberao> no*
[00:08:03] <buster> Decker, homework is to fix the typos
[00:08:10] <biberao> busty
[00:08:34] <buster> hi
[00:09:06] <Nickssen> gracias biberao
[00:09:22] <Nickssen> sedeki is it more understandable now?
[00:11:48] <buster> Decker, four /different/ partial derivatives, like this <http://mathb.in/67172>
[00:13:42] *** Quits: bluss (~bluss@user/bluss) (Quit: leaving)
[00:14:01] *** Joins: magla (~gelignite@55d4f5a2.access.ecotel.net)
[00:15:25] <Decker> okay I thought that might be true :)
[00:17:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:17:18] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[00:17:27] <buster> yep. is it anything like what you were asking about?
[00:17:33] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Remote host closed the connection)
[00:18:21] *** Joins: bluss (~bluss@user/bluss)
[00:22:25] <Decker> buster probably; the acutal application is just sorta silly... for f(z)=f(z-1)^2+C; the +C part... the * part is easy in polar.. R*R,theta+theta ... but the theta that's being added to moves so the new +theta is technically an entirely different angle than the first...
[00:22:57] <Decker> but if I convert the coordinates to polar then I lose the ability to go backards (especially for larger thetas)
[00:23:16] <Decker> (to translate back ot the theta that's at that current cycle)
[00:25:44] <Decker> so the other option maybe - can I scale it?  can I jut use r*sin(theta/4) and r*cos(theta/4) and work in a 4x cycle?
[00:25:50] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[00:26:00] <Decker> (/2's probably all I need, but 4 for effect?)
[00:28:06] <quantum> Given a general subset of a topological space, is the interior of its boundary always empty?
[00:32:07] *** Joins: contagious_meow (~salitos@102.166.188.203)
[00:34:39] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:22] *** Quits: salitos (~salitos@154.123.235.124) (Ping timeout: 260 seconds)
[00:37:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:38:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[00:38:47] *** Joins: seninha (~seninha@user/seninha)
[00:39:35] <greenbagels> quantum: what's the definition of boundary
[00:39:48] <quantum> closure without interior
[00:40:13] <biberao> greenbagels: really as a bagel you should know :P
[00:40:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:41:01] <sedeki> quantum are you excluding all open subsets from "general subsets"?
[00:42:01] <greenbagels> ok quantum now consider this property: a point is in the boundary of S iff any neighborhood containing p contains a point in S and a point outside S
[00:42:27] <quantum> If this isn't true for open sets I'll kick myself, I was so caught up thinking about the general case that I completely forgot to check the usual ones
[00:42:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[00:43:06] <greenbagels> the boundary of an open set is empty
[00:43:10] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:43:17] <greenbagels> sorry
[00:43:19] <greenbagels> ignore me
[00:43:20] <sedeki> hehe
[00:43:31] <greenbagels> its definitely niot empty lol
[00:43:51] <sedeki> the interior of a boundary of an open set is empty right?
[00:43:54] *** Quits: kmh (~kmh@2a00:6020:5004:6800:ace3:323d:beb4:9d97) (Quit: Leaving)
[00:43:56] <sedeki> i mean...
[00:43:57] <greenbagels> yes
[00:44:22] <traxex> can you tell me more about the empty boundary of an open set
[00:44:38] <greenbagels> no bc i misspoke
[00:44:43] <traxex> =)
[00:44:57] <traxex> I just saw "ignore me" and that's like "please ask me to tell more"
[00:45:03] <Z-module> If X is a any space, the open set X is empty boundary
[00:45:06] <Z-module> has*
[00:46:10] <greenbagels> quantum: but if you prove the property i mentioned, the problem becomes easy
[00:46:41] <sedeki> Z-module good point
[00:47:09] <greenbagels> int S = set of points with a neighborhood contained in S; bd S = set of points with no neighborhood contained entirely in S or in S's complement
[00:48:12] <greenbagels> in unrelated news i was teaching someone today who was learning about LU factorization but was struggling with elementary row operations
[00:48:15] <greenbagels> kind of... interesting
[00:49:04] *** Joins: kmh (~kmh@2a00:6020:5004:6800:b9c9:fd53:e903:d62f)
[00:49:21] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[00:51:32] <Z-module> If U \subset X is any open set, then its boundary bd(U) = cl(U) \ int(U) = cl(U) \ U  = {all limit points of U}, so this set can't contain any nonempty open set V, because then each v in V has a nbhd V that's disjoint from U so v couldn't be a limit point of U.
[00:52:30] *** Quits: stipa (~stipa@user/stipa) (Remote host closed the connection)
[00:52:41] <quantum> greenbagels, Z-module: Does this hold in general though?
[00:52:49] <quantum> I can imagine it holds for closed sets bc duality
[00:52:58] <quantum> but what about sets that are neither open nor closed
[00:53:06] <Z-module> Not in general
[00:53:11] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 264 seconds)
[00:53:22] *** Joins: stipa (~stipa@user/stipa)
[00:53:28] <Z-module> Take Q in R.  Its boundary is cl(Q) \ int(Q) = R \ {} = R
[00:53:45] <quantum> ok, thanks!
[00:53:48] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b15e:f180:f777:8727)
[00:54:53] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[00:54:57] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:49c4:49e5:7e55:6de5)
[00:55:01] <Z-module> yeah, it does remain true for closed K (in any space):  bd(K) = cl(K) \ int(K) = K \ int(K)  so there are no nonempty open sets left inside K.
[00:55:14] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[00:55:57] <Z-module> or jsut reduce to the first case by using the lovely general fact that for all B \subset X, B any kind of set at all,  bd(B) = bd(X\B)
[00:58:30] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b15e:f180:f777:8727) (Ping timeout: 268 seconds)
[01:01:22] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-41ea-e7b0-8e8f-bea4.res6.spectrum.com) (Read error: Connection reset by peer)
[01:03:14] <Nickssen> Is the only way to do this through partial fractions?  https://imgur.com/a/YpxWplN
[01:03:15] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[01:05:29] <Nickssen> oh duh
[01:05:31] <Nickssen> residues
[01:10:03] *** Quits: contagious_meow (~salitos@102.166.188.203) (Quit: Leaving)
[01:10:20] *** Quits: red_owl (~red_owl@p5b23f9cd.dip0.t-ipconnect.de) ()
[01:10:55] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[01:11:45] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:14:40] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:15:19] *** Joins: emf (~emf@163.114.132.5)
[01:27:29] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 268 seconds)
[01:28:14] *** Quits: stipa (~stipa@user/stipa) (Remote host closed the connection)
[01:28:38] *** Joins: stipa (~stipa@user/stipa)
[01:29:03] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[01:29:06] *** Joins: argv[] (~movfw@user/marlboro)
[01:31:35] *** Quits: stipa (~stipa@user/stipa) (Remote host closed the connection)
[01:31:59] *** Joins: stipa (~stipa@user/stipa)
[01:35:47] *** Joins: Skyz (~Skyz@user/skyz)
[01:35:54] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Remote host closed the connection)
[01:38:17] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[01:39:48] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:42:30] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[01:43:42] *** Joins: frelleck (~frelleck@user/frelleck)
[01:46:47] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[01:49:57] *** Joins: jmorris (uid433911@id-433911.hampstead.irccloud.com)
[01:50:52] *** Joins: qeed_ (~qeed@072-190-106-143.res.spectrum.com)
[01:54:01] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Ping timeout: 268 seconds)
[01:56:59] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[01:59:08] *** Quits: Nickssen (~Nickssen@2800:150:153:4e93:8d09:aafd:4c13:ef2c) (Ping timeout: 256 seconds)
[02:01:21] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[02:02:23] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[02:03:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[02:03:23] *** Joins: cheater (~Username@user/cheater)
[02:03:45] *** Joins: emerent_ (~quassel@p200300cd5748552fba27ebfffed28a59.dip0.t-ipconnect.de)
[02:03:45] *** Quits: emerent (~quassel@p200300cd5748556aba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:03:46] *** emerent_ is now known as emerent
[02:05:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[02:05:17] *** Quits: frelleck (~frelleck@user/frelleck) ()
[02:06:11] *** Joins: Guest59 (~Guest59@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[02:07:53] *** Joins: pavonia (~user@user/siracusa)
[02:09:17] *** Quits: Trigo (~NeedMathH@64.201.115.44) (Ping timeout: 256 seconds)
[02:10:02] *** Quits: Maturion (~Maturion@p200300ede7400000d21add8c31652ff5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[02:18:42] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Quit: Connection closed)
[02:19:23] *** Joins: tzui (~tzui@p200300e817076e00012bada8b98f6b5d.dip0.t-ipconnect.de)
[02:19:44] *** Quits: stipa (~stipa@user/stipa) (Quit: WeeChat 3.3)
[02:21:03] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[02:21:57] *** Quits: tzui (~tzui@p200300e817076e00012bada8b98f6b5d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:24:54] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:7d4d:58ea:ff3d:71a8)
[02:26:10] <Plazma> eels
[02:26:12] <Plazma> eels
[02:26:21] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:29:20] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:30:05] *** Joins: Trigo (~NeedMathH@64.201.115.44)
[02:39:02] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[02:39:56] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[02:41:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:da94:668f:b78c:97b1) (Remote host closed the connection)
[02:41:56] *** Joins: Inline (~Inline@2a02:908:1252:7a80:d6e1:9cdb:c2c:75e6)
[02:42:09] *** Quits: kaotisk (~kaotisk@user/kaotisk) (Ping timeout: 256 seconds)
[02:46:11] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[02:46:17] <Guest59> https://i.imgur.com/n1eNxVm.png what does cos \theta (t) mean here?
[02:48:41] <joel135> It means cosine of the angle theta which in turn depends on t.
[02:49:06] <Guest59> so theta is fixed?
[02:49:12] *** Joins: kaotisk (~kaotisk@user/kaotisk)
[02:49:23] <tolarz> no, theta is a function
[02:49:25] <joel135> Its dependence on t is fixed.
[02:49:50] <Guest59> wat
[02:50:00] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz...)
[02:50:01] <joel135> As t varies, theta(t) varies, and as theta(t) varies cos(theta(t)) varies.
[02:50:11] <Guest59> ooooooooooooh
[02:50:14] <Guest59> weird
[02:50:32] <tolarz> (cos ∘ Θ)(t)
[02:52:53] <Guest59> I'm trying to do the first one here https://i.imgur.com/8g12wui.png So r = 0, r = 2, r = -2. x(t) = r(t)*cos(theta(t)) and y = r(t)sin(theta(t)). So now I need to plot for each r value the points (x,y) ?
[02:53:16] <Guest59> and from theta' = 1, this is just theta + c, c some constant
[02:53:21] *** Joins: kaotisk_ (~kaotisk@user/kaotisk)
[02:53:49] *** Quits: gb73d (gb73d@host-92-7-42-10.as13285.net) ()
[02:53:51] *** Joins: alzgh (alzgh@user/alzgh)
[02:54:03] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[02:54:43] *** Quits: extern (~archer@80.246.130.109) (Quit: WeeChat 3.3)
[02:56:07] <Guest59> uhm, theta(t)' = 1 means theta(t) = t + c, c some constant
[02:56:11] *** Quits: kaotisk (~kaotisk@user/kaotisk) (Ping timeout: 264 seconds)
[02:56:22] *** Joins: kaotisk__ (~kaotisk@user/kaotisk)
[02:56:41] *** Quits: AimHere (~David@92.238.16.159) (Quit: Leaving)
[02:59:09] *** Quits: kaotisk_ (~kaotisk@user/kaotisk) (Ping timeout: 256 seconds)
[03:01:15] *** Joins: twJizhan (~twJizhan@111-71-111-26.emome-ip.hinet.net)
[03:01:59] *** Quits: NllPtr (~NllPtr@186-78-238-225.baf.movistar.cl) (Ping timeout: 256 seconds)
[03:03:23] *** Joins: fstd (~fstd@xdsl-87-79-44-169.nc.de)
[03:03:26] *** Quits: fstd_ (~fstd@xdsl-81-173-152-177.nc.de) (Ping timeout: 245 seconds)
[03:03:47] *** Joins: NllPtr (~NllPtr@186-78-238-225.baf.movistar.cl)
[03:05:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[03:06:15] *** kaotisk__ is now known as kaotisk
[03:06:39] *** Quits: src (~src@user/src) (Quit: Leaving)
[03:08:48] <johnkeats7> is there anything worse than the bland, uniform, cynical style of intro college textbooks? those with colored text boxes and all that crap
[03:09:02] <johnkeats7> why are they all like that
[03:09:24] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[03:13:43] *** Joins: alzgh (~alzgh@user/alzgh)
[03:14:56] <Samian> hi
[03:15:03] <Samian> Does anyone here know neural networks?
[03:15:07] *** Joins: Guest5977 (~Guest59@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[03:15:22] <Guest5977> how do we tell what direction the trajectory is going for what I found?
[03:15:23] *** Quits: arseniiv (~arseniiv@94.41.2.66.dynamic.ufanet.ru) (Ping timeout: 264 seconds)
[03:15:49] <Samian> can anyone walk with me through a simple example of training a neural net?  I drew this: https://i.imgur.com/palTcvz.png
[03:16:12] *** Quits: Guest59 (~Guest59@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[03:16:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:26:02] *** Joins: jess (~jess@libera/staff/jess)
[03:34:47] <jmorris> Samian: do you mean doing the backpropagation by hand?
[03:35:01] <Samian> yes
[03:35:29] <Samian> jmorris  I think I need to create a vector of partial derivatives
[03:35:47] <Samian> from this equation: (5*w_1 + 2*w_6)*w_4   +    (5*w_5 + 2*w_2)*w_7   -   3.5     =    0.5
[03:36:17] <Samian> I'll write "pd" for partial derivative
[03:38:19] <Samian> w_1 pd = 5*w_4;   w_2 = 2*w_7;    w_4 pd = (5*w_1+2*w_6);    w_5 pd = 5*w_7;    w_6 pd = 2*w_4;   w_7 pd = (5*w_5 + 2*w_2)
[03:38:50] <[itchyjunk]> i recently did a hellow world of neural net
[03:38:59] <[itchyjunk]> i skipped over the details a bit though
[03:39:00] <Samian> I decided to initalize my weight to 0.5. so I plug in 0.5 for all the w values
[03:39:08] <tolarz> [itchyjunk]:world hallo
[03:39:12] <[itchyjunk]> but the idea is that you have a loss function
[03:39:28] <Samian> [itchyjunk]  would you consider my neural net a hello world example?
[03:39:32] <[itchyjunk]> and you want to figure out how to minimize it by figuring out how much each weight contributed it
[03:39:37] <[itchyjunk]> Samian, XOR approximator
[03:39:50] <jmorris> Samian: you have three vectors (x1, x2).T of inputs and (h1, h2).T and (y1, y2).T of output yes
[03:39:51] <[itchyjunk]> 2 input neuron, 2 neuron in the hidden layer and 1 output neuron
[03:39:59] <Samian> XOR approximator?
[03:40:02] <jmorris> [itchyjunk]: XOR is not linearly separable
[03:40:07] <jmorris> which is why its a popular example
[03:40:14] <jmorris> you cant model it with a simple perceptron
[03:40:27] <[itchyjunk]> Samian, what you drew is what i impleimented
[03:40:39] *** Quits: biberao (~m@user/biberao) (Quit: WeeChat 2.3)
[03:40:42] <Samian> woah you're right: https://miro.medium.com/max/543/1*qXt_iBvWods-FOvTldxYFw.png
[03:40:48] <[itchyjunk]> (turns out you kinda need bias or more layers to speed up conversion)
[03:41:01] <[itchyjunk]> ah yes
[03:41:07] <[itchyjunk]> but don't need 2 hidden layer
[03:41:33] <jmorris> Samian: try writing it in matrix form
[03:42:07] <Samian> where did you learn it's called an XOR neural net? I never heard that term before.  DId you read it from a popular deep learning book
[03:42:42] *** Quits: fstd (~fstd@xdsl-87-79-44-169.nc.de) (Read error: Connection reset by peer)
[03:42:45] <[itchyjunk]> no, i asked around. some people were training some fancy tranformer based GAN
[03:42:58] <[itchyjunk]> i asked them what the easiest thing in NN would be , aka "hello world"
[03:43:08] <[itchyjunk]> they said XOR function
[03:43:49] *** Joins: fstd (~fstd@xdsl-87-79-44-169.nc.de)
[03:44:04] <Samian> I googled "xor neural network" (quotes excluded in actual search) and a lot of results appeared
[03:44:48] <[itchyjunk]> apparently, XOR needing a hidden layer was attributed to the "AI winter" of 70s
[03:45:08] <[itchyjunk]> because even that simple thing couldn't be approximated with a perceptron
[03:45:22] *** Joins: jensss (~jensss@46.212.99.221)
[03:46:14] <jensss> Hey, anyone know where i can find scans of any of Eulers handwritten notes? :S
[03:46:22] <jmorris> yes, because its not linearly separable...
[03:46:26] <jensss> Or is this a hopeless endavour
[03:46:51] <Samian> jmorris  I'm used to writing the forward pass as matrix multiplication. I never heard of using matrix form for computing partial derivatives
[03:47:13] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[03:47:29] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[03:47:41] *** Quits: twJizhan (~twJizhan@111-71-111-26.emome-ip.hinet.net) (Quit: Leaving)
[03:47:44] <[itchyjunk]> w's are weights?
[03:47:48] *** Joins: oriba (~oriba@x4dbf7373.dyn.telefonica.de)
[03:47:56] <jmorris> Samian: well you can learn
[03:48:05] <jmorris> start by writing the network in matrix form
[03:48:24] <jensss> Man, Corona sure has taken a toll on my patience
[03:49:22] <Samian> I just read on wiki: "The derivative of a matrix function Y by a scalar x is known as the tangent matrix"
[03:49:29] <Samian> Is that what you mean?
[03:49:59] <jmorris> arent we using backpropagation
[03:50:15] <jmorris> what's the criterion
[03:50:23] <Samian> yes that's right
[03:50:34] <[itchyjunk]> https://plus.maths.org/issue42/features/wilson/Euler_5_web.jpg
[03:51:32] <Samian> well, let me clarify. I don't know what you mean by "backpropagation." I believe what I'm doing is backpropogation. backpropogation = find all the partial derivatives which would then give us the gradient vector.  Isn't that backprop?
[03:52:05] <Samian> Doesn't backprop mean computing the gradient vector?
[03:53:16] <jensss> [itchyjunk]: thanks, but i'm looking for something with better resolution, also as containing as many math expressions as possible B)
[03:53:16] <Guest5977> is it okay for me to rewrite my question in a little bit if it doesn't get attentino?
[03:53:36] <Samian> I just read backprop is an algorithm for computing the gradient vector. Now it makes sense
[03:54:05] <jmorris> Samian: you are taking the partial derivatives with respect to some loss function which you havent specified
[03:54:32] <[itchyjunk]> https://scholarlycommons.pacific.edu/cgi/viewcontent.cgi?article=1000&context=euler-works
[03:54:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:54:49] <[itchyjunk]> its written in gibbrish
[03:54:54] <jensss> haha
[03:54:55] <[itchyjunk]> or french or german or w/e you call it
[03:54:59] <jensss> latin
[03:55:02] <[itchyjunk]> oh
[03:55:04] <[itchyjunk]> right
[03:55:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:55:16] <jensss> and also not handwritten, but i appreciate the effort XD
[03:55:16] <[itchyjunk]> http://eulerarchive.maa.org/
[03:55:29] <[itchyjunk]> they have some handwritten stuff
[03:55:36] <[itchyjunk]> some transcribed stuff
[03:55:43] <jensss> do they? i couldn't find anything handwritten there
[03:55:53] *** Lord_of_Life_ is now known as Lord_of_Life
[03:55:56] <jensss> but i didn't exactly look through everything
[03:57:41] <[itchyjunk]> wikimedia commons has a few looks like
[03:57:42] <[itchyjunk]> https://upload.wikimedia.org/wikipedia/commons/thumb/5/5f/Letter_Goldbach-Euler.jpg/584px-Letter_Goldbach-Euler.jpg
[03:58:13] <jensss> thanks! :D
[03:58:59] <[itchyjunk]> i'd search through and grab all they ones in wikimedia commons
[03:59:05] <[itchyjunk]> seems to be about a dozen random ones
[03:59:35] <[itchyjunk]> https://www.lib.uchicago.edu/media/images/6a00d834979dc253ef0133ec7f9a05970b-320wi.original.jpg
[03:59:42] <[itchyjunk]> doesn't look too valuable
[03:59:48] <[itchyjunk]> dirty as shit
[03:59:59] <LiaoTao> Were those his illustrations or was it commissioned?
[04:00:22] <jensss> Wow
[04:01:44] *** Quits: magla (~gelignite@55d4f5a2.access.ecotel.net) (Quit: Stay safe!)
[04:02:13] *** Joins: loller_ (uid358106@id-358106.uxbridge.irccloud.com)
[04:02:44] <[itchyjunk]> this seems odd
[04:02:49] <[itchyjunk]> who owns his original papers?
[04:02:55] <[itchyjunk]> has to be some museum or somesuch?
[04:02:58] <[itchyjunk]> i can't figure it out
[04:04:24] <[itchyjunk]> if you care enough, i'd try reddits ask a historian about where is original papers are stored
[04:04:34] <[itchyjunk]> you can then figure out how to get the scans somehow
[04:04:40] <[itchyjunk]> (maybe)
[04:05:35] <jensss> thank you very much ^^
[04:05:40] <[itchyjunk]> 2 more images here
[04:05:41] <[itchyjunk]> https://www.bbvaopenmind.com/en/science/leading-figures/euler-the-beethoven-of-mathematics/
[04:05:53] <jensss> his papers are probably spread all over the place
[04:06:39] <[itchyjunk]> this museum has some letters looks like
[04:06:40] <[itchyjunk]> http://corsair.themorgan.org/vwebv/holdingsInfo?bibId=299263&v1=1
[04:06:52] <[itchyjunk]> https://www.themorgan.org/blog/all-math-nerds-out-there
[04:07:03] <jensss> i found some random estonian university library that claims to have digitalized versions of some of his handwritten papers available
[04:07:19] <jensss> but the links won't load )':
[04:08:22] <[itchyjunk]> https://plus.maths.org/issue42/features/wilson/Euler_5_web.jpg
[04:09:41] <[itchyjunk]> very few hand written for supposide "prolific mathematician"
[04:10:16] <jensss> well, there's little doubt he was prolific
[04:10:41] <[itchyjunk]> so there is doubt!
[04:10:51] <jensss> haha, there is always doubt
[04:11:04] <jensss> but oftentimes unneededly so
[04:11:08] <jensss> i'm not sure if that's a word
[04:13:50] *** Joins: dld (~dld@98.217.187.57)
[04:14:17] <[itchyjunk]> i had to read one of eulers letter recently
[04:14:36] *** Quits: egy (egy@tilde.team) (Ping timeout: 268 seconds)
[04:14:39] <[itchyjunk]> bernoulli and liebniz were having a fight over log and negative number
[04:14:50] <[itchyjunk]> and he was trying to solve the issue
[04:14:55] <jensss> :o
[04:15:16] <[itchyjunk]> i shared some bits and peaces here and people weren't impressed
[04:15:45] <[itchyjunk]> type of math they discussed and the state of formal math today is very different and sometimes its hard ot make sense what they were saying
[04:16:13] <jensss> yeah i gather as much, it was explorative in a completely different manner, back then
[04:16:44] <[itchyjunk]> Bernoulii was trying to claim log(-x) = log(x) and he was secretly using log(-1) = log(1) in his proof and euler call him out on it
[04:17:01] <jensss> haha
[04:17:11] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 245 seconds)
[04:17:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:17:47] *** Quits: Trigo (~NeedMathH@64.201.115.44) (Ping timeout: 264 seconds)
[04:18:34] <[itchyjunk]>  http://eulerarchive.maa.org/docs/translations/E807en.pdf
[04:18:35] <[itchyjunk]> this one
[04:20:24] <jensss> and here i thought lg was silly short notation for logarithms :o
[04:20:52] *** Joins: JustLandedOnMars (question@user/question)
[04:20:53] <JustLandedOnMars> hi
[04:21:02] <JustLandedOnMars> around how many axes object can spin at the same time ?
[04:21:05] <JustLandedOnMars> I presume infinite ?
[04:23:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[04:25:49] *** Joins: nagefire (~nagefire@66-219-236-165.dynamic.ip.veracitynetworks.com)
[04:28:05] <jensss> JustLandedOnMars: yes, in 3D at least
[04:28:36] <JustLandedOnMars> yes
[04:30:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:30:41] <jensss> i wonder if Euler did like everyone nowadays, threw away his notes after using them to understand whatever he was studying DX
[04:31:04] <jensss> maybe he used them as firestarters, what a painful mental imagine DX
[04:31:11] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:31:36] <leah2> euler published so much, you probably wont find many things that were only in notes :D
[04:32:01] <jensss> yeah but i was at least hoping to find _something_
[04:32:15] <leah2> and at least letters were kept well
[04:33:23] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 264 seconds)
[04:33:47] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[04:34:06] <jensss> even his letters were printed >.<
[04:34:44] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[04:34:48] <JustLandedOnMars> I was thinking imagine sticking object on a needle_0 and spin around, that would be axes_0 and stick that needle_0 inside box_0, so the object spins inside box_0, then stick that box_0 on another needle_1 and spin it, then stick it inside the wall of bigger box_1, now initial object spins around 2 axes, and then you can continue, sticking next box on next needle and spin it and that could continue
[04:34:54] <JustLandedOnMars> forever ?
[04:35:18] <JustLandedOnMars> now the question if you were given trajectory of a point on that initial object can you deduce around how many axes it spins ?
[04:35:35] <Decker> 1
[04:35:45] <Decker> euler's axis theorum
[04:36:20] *** Joins: egy (~egy@tilde.team)
[04:36:25] <Decker> though it's like polynomial factoring or fourier transform if you had other harmoics you could measure you can find components but not for a single instant
[04:36:32] <JustLandedOnMars> I was just theorizing, I'm not mathematician
[04:37:24] <JustLandedOnMars> so you don't care about other "higher" axes ?
[04:37:42] <Decker> https://d3x0r.github.io/STFRPhysics/3d/indexArmProper.html this is sort of that :)  (enabling advanced shows more slider)  initially the planes would represent the 'object' and the needles are pivots around the edge
[04:37:45] <JustLandedOnMars> its like we don't care about earth spinning around sun or around center of the galaxy ?
[04:37:49] <JustLandedOnMars> only around itself ?
[04:38:00] <Decker> but they're like euler axis... or a labyrinth maze game where they are in a certain order
[04:38:15] <Decker> because relativity ?
[04:38:18] <JustLandedOnMars> sounds like braintwister
[04:38:30] <JustLandedOnMars> thinking of all those axes
[04:38:37] <JustLandedOnMars> "look at all those axes"
[04:38:51] <Decker> yes... I'd imagine that's part of the G-2 number that's not 2
[04:39:06] <Decker> err gFactor?
[04:39:39] <JustLandedOnMars> world was so much simpler in Euler's time, they didn't knew about relativity, lucky bastards
[04:39:57] <qergle> it was relatively better
[04:40:20] *** Joins: XCode (~XCode@d108-173-59-218.abhsia.telus.net)
[04:40:25] <JustLandedOnMars> you got me
[04:41:02] <Decker> really depends on your perspetive
[04:41:14] <XCode> what is the best irc client for mac?
[04:41:29] <XCode> I tried KVIrc and colloguy and both have problems
[04:42:21] <XCode> Decker: do you suggest a client?
[04:43:25] <Decker> nope :) I avoid that platform
[04:43:49] <Decker> except for purely backend, unseen things
[04:44:40] <jmorris> XCode: could use irssi
[04:44:52] <Decker> XCode so it's after wed did you pass?
[04:45:23] <XCode> jmorris: let me try
[04:46:18] <XCode> Decker: I am using different approach for problem I am approaching.
[04:46:18] <XCode> this approach is better
[04:46:30] <Decker> :) ok
[04:46:41] <Decker> just ya know you sorta left me with a cliffhanger :)
[04:46:49] <XCode> Decker: haha
[04:49:19] <XCode> I will also download weechat
[04:49:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[04:49:37] *** Joins: specing_ (~specing@user/specing)
[04:49:37] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[04:49:45] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:50:24] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[04:51:23] *** specing_ is now known as specing
[04:51:57] <jensss> i give up for now
[04:51:59] <jensss> good night
[04:53:12] *** Joins: Trigo (~NeedMathH@64.201.115.44)
[04:54:46] *** Quits: jensss (~jensss@46.212.99.221) (Remote host closed the connection)
[04:59:00] *** Quits: XCode (~XCode@d108-173-59-218.abhsia.telus.net) (Ping timeout: 268 seconds)
[05:00:30] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:04:41] *** Joins: nayfie (~nayfie@159.196.54.128)
[05:05:30] *** Quits: xff0x (~xff0x@2001:1a81:52b1:3000:7ef:3640:6d4d:8cb8) (Ping timeout: 260 seconds)
[05:06:19] *** Joins: xff0x (~xff0x@2001:1a81:52b1:3000:4e58:263b:7745:5105)
[05:08:15] *** Parts: ScR (~S@na.altplay.net) (Möbius strip)
[05:08:54] *** Joins: ScRamble (~S@na.altplay.net)
[05:11:06] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[05:14:29] <rex_victor> Hi y'all I'm having a little trouble coming up with a proof, since it's usually done the other way around
[05:15:42] <rex_victor> so let p prime 𝔽_p the finite field with p elements, d ∈ ℕ, q ≔ p^d, f := X^q - X ∈ 𝔽_p[X] and Z_f the splitting field of f over 𝔽_p
[05:16:20] *** Quits: oriba (~oriba@x4dbf7373.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:16:35] <evidlo> how do I concisely state that an already defined function f is a member of the set of functions from dimension M to dimension N?
[05:16:47] <rex_victor> (a): show: ∀l ∈ ℕ: φ_{p^l}: Z_f → Z_f, a ↦ a^{p^l} is a homomorphism
[05:16:51] <rex_victor> This I've done
[05:16:59] <rex_victor> (b): ∀a ∈ Z_f: f(a) = 0
[05:17:02] <rex_victor> here I'm stuck
[05:17:28] <rex_victor> especially since (c) is: |Z_f| = q
[05:17:38] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-118-210-99.internet.virginmobile.ca)
[05:17:38] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-118-210-99.internet.virginmobile.ca) (Changing host)
[05:17:38] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[05:17:53] <rex_victor> I kinda get it the other way round, but I'm somehow lost going from (a) to (b)
[05:18:23] <rex_victor> evidlo: waht you mean with dim M to dim N?
[05:18:33] <rex_victor> evidlo: functions of the form ℝ^M → ℝ^N ?
[05:20:47] <evidlo> its actually discrete.  domain is size M and codomain N
[05:21:04] <evidlo> really {0,1}^M
[05:21:09] <Z-module> rex_victor:  Check that phi_{p^1} preserves all sums and all products (this is true in all commutative rings of characteristic p, doesn't need Z_f to be a field specifically, nor to be finite).  Then apply phi_{p^1} iteratively to get the truth for all phi_{p^l}
[05:22:06] <Z-module> oh you did that
[05:22:14] <rex_victor> Z-module: yeah :)
[05:22:59] <rex_victor> evidlo: Personally I use the notation Y^X := {f: X → Y}
[05:23:05] <Z-module> For (b), there are several ways. My favorite is that the set of nonzero things in that field is a finite group of order q - 1  ... you don't even need to know that this group is cyclic or abelian.
[05:23:51] <rex_victor> How do you figure that order?
[05:24:13] *** Joins: bittersweetsymph (~water@59.102.87.77)
[05:24:51] <Z-module> The field itself has order q since it's a splitting field of a polynomial of degree q and f is separable
[05:25:12] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:25:14] <Z-module> no repeated roots
[05:25:40] <Z-module> but I guess they don't want you to know that yet
[05:25:53] <rex_victor> Z-module: yeah that's what I believe
[05:26:11] <Z-module> well, everything in Z_f is a root of X^q - X,  right?
[05:26:18] <rex_victor> that's to be shown
[05:27:05] <rex_victor> I guess so far it's clear that Z_f has all roots of X^q - X by definition; but I guess it is to show that it has nothing else
[05:27:12] <bittersweetsymph> If you are writing this formula in word...  Vp  +Vw = R how can you do like the tent hook looking symbol on top of the V and R in word
[05:27:35] <bittersweetsymph> tent peg looking thing
[05:28:24] <rex_victor> Z-module: Showing φ_q = id will do the trick
[05:28:29] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[05:29:46] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[05:31:32] <Z-module> Take the set D of just all the roots of f inside Z_f, and show that they form a subfield of Z_f. Thus Z_f = D, by minimality of splitting fields.
[05:31:42] <Z-module> This uses (a).
[05:32:44] <rex_victor> That's a great idea!
[05:32:47] <rex_victor> I'll try that thx
[05:33:07] <Z-module> I'm off; g'night.
[05:33:25] <rex_victor> gn8
[05:33:58] <qergle> i don't know if this is a tent-peg, but if so here's the latex: http://mathb.in/67177
[05:35:15] <qergle> as for how to do that in word, i know nothing about other than it's malware distributed by microsoft.
[05:36:05] *** Joins: frelleck (~frelleck@user/frelleck)
[05:36:36] <rex_victor> What great world it would be, if that malware would only be distributed my Microsoft and not almost all pc vendors as well :)
[05:36:48] <bittersweetsymph> that is it qergle thanks, you are the best!
[05:36:57] * qergle bows
[05:39:04] <jmorris> bittersweetsymph: you can do it in word the same way you would in latex
[05:39:08] <jmorris> it's just \hat
[05:39:35] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:42:48] *** Quits: xff0x (~xff0x@2001:1a81:52b1:3000:4e58:263b:7745:5105) (Ping timeout: 268 seconds)
[05:43:30] *** Joins: xff0x (~xff0x@2001:1a81:52b1:3000:5297:4b75:9c14:f5c1)
[05:45:35] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[05:46:10] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[05:50:07] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[05:51:54] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[05:53:10] *** Quits: Guest5977 (~Guest59@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[05:53:34] *** Joins: Skyz (~Skyz@user/skyz)
[05:54:43] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[05:59:11] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 264 seconds)
[06:00:40] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:49c4:49e5:7e55:6de5) (Ping timeout: 268 seconds)
[06:04:47] *** Quits: argv[] (~movfw@user/marlboro) (Quit: O campo revela ao homem apenas sua própria loucura e desespero, e a vitória é uma ilusão de filósofos e néscios)
[06:07:29] <buster> 🎩
[06:09:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80:d6e1:9cdb:c2c:75e6) (Ping timeout: 245 seconds)
[06:09:59] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[06:14:06] *** Quits: xff0x (~xff0x@2001:1a81:52b1:3000:5297:4b75:9c14:f5c1) (Ping timeout: 260 seconds)
[06:15:42] *** Joins: xff0x (~xff0x@2001:1a81:52ec:e600:32d8:d60b:eef6:92ba)
[06:15:47] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[06:15:50] *** Joins: stipa (~stipa@user/stipa)
[06:28:14] *** Quits: stipa (~stipa@user/stipa) (Quit: WeeChat 3.3)
[06:30:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[06:33:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:34:25] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:34:45] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[06:38:27] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[06:39:11] *** Quits: bittersweetsymph (~water@59.102.87.77) (Quit: bittersweetsymph)
[06:40:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:40:45] *** Quits: Oli (~Unknown@user/oli) (Ping timeout: 268 seconds)
[06:42:27] *** Joins: Oli (~Unknown@user/oli)
[06:54:06] <[itchyjunk]> lol
[06:54:17] <[itchyjunk]> i didn't know that was part of the utf or w/e
[07:02:31] *** Joins: ferdna (~ferdna@user/ferdna)
[07:08:21] <pavonia> Unicode
[07:10:33] <[itchyjunk]> right
[07:10:35] <[itchyjunk]> heh
[07:18:38] <droid3> hey guys i know i was rambling on about differential inequality equation
[07:19:00] <droid3> But even this simple y' > 0 equation is pretty general
[07:19:32] <droid3> the solution to it is the set of all increasing functions
[07:20:02] *** Joins: kaotisk_ (~kaotisk@user/kaotisk)
[07:20:10] <droid3> So you get tons of class of function not to mention you get intervals for specific function that would be solutions
[07:21:03] <droid3> so differential inequality equation/s seem only of practical use to use in proving existence/uniqueness  of an ODE or PDE.
[07:21:32] <droid3> But beyond that most differential inequality equation are just to general of a set of solutions to be useful.
[07:22:00] <droid3> In my opinion maybe somebody has a use for them i like to here it. Other then for what i mentioned them for.
[07:22:35] *** Quits: kaotisk (~kaotisk@user/kaotisk) (Ping timeout: 264 seconds)
[07:22:51] <droid3> Because most books or resource i have seen dont have a specific course/book on just solving differential inequality equations as a main subject/purpose of study.
[07:23:26] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 245 seconds)
[07:25:03] <droid3> y'' > 0  would be like the set of all concave up functions on a particular interval of choice
[07:25:47] <droid3> it just seems to general most differential inequalities equation solutions to be useful if you call it solving them
[07:26:32] <droid3> hummm though it is a curiousity because the hard part isnt finding a bunch /set of solutions but to know if you got all solutions to these things.
[07:26:38] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[07:26:52] *** Parts: kaotisk_ (~kaotisk@user/kaotisk) (Leaving)
[07:27:05] <droid3> Anyway i have not to much use for them. But for the sake of completeness i was running out of different types of stuff to research
[07:27:54] <droid3> As i already did ODE, PDE ,Delay differential equations , fractional differential equations (using fractional derivatives) ....etc
[07:28:28] <droid3> the last thing i was curious about is if i change all the equality equations to inequality equation for all this stuff.
[07:28:59] <droid3> And now i am left with this least realm of study that i dont see to much usual stuff done with them
[07:29:38] <droid3> Other then like i said proofing existence/uniqueness of things (only in special differential inequalities or useful so far that i see)
[07:38:51] *** Quits: texasmusicinstru (~Rheanna@101.70.63.236) (Remote host closed the connection)
[07:39:35] *** Joins: stipa (~stipa@user/stipa)
[07:40:29] *** Joins: frost (~frost@user/frost)
[07:41:52] *** Joins: texasmusicinstru (~Rheanna@101.70.63.236)
[07:42:27] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[07:45:01] *** Joins: laurus (~laurus@user/laurus)
[07:45:31] <laurus> For an arbitrary sequence (A_i)_{i \in \mathbb{N}}, does \cup_{i \in \mathbb{N}} A_i always exist?
[07:45:53] <frelleck> what are the A_i
[07:46:00] <laurus> frelleck: I'm sorry, they're just arbitrary sets
[07:46:17] <frelleck> yeah the countable union exists
[07:46:37] <laurus> Is that just because there is some large universal set containing everything?
[07:46:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:46:59] <laurus> So the countable union is either that whole universal set or the sequence of sets converges to something in that set?
[07:47:05] <frelleck> not sure what universal set means
[07:47:18] <frelleck> but you can define a set A such that x is in A if and only if x is in some A_i
[07:47:54] <laurus> I see
[07:48:20] <laurus> So why do so many analysis books make a big deal about "the limit of an increasing sequence of sets being defined as the countable union of the sets"?
[07:48:43] <laurus> Because as we just discussed, we can take the countable union of _any_ sequence of sets, and it exists.
[07:48:59] <PlanckWalk> ZF has an axiom of union
[07:49:01] <frelleck> they are just defining a limit
[07:49:14] <frelleck> the countable union's existence isn't the issue
[07:49:57] <frelleck> they need that limit definition for various things, and it's better to do it for increasing unions, or decreasing intersections
[07:50:09] <laurus> frelleck: I see
[07:50:35] <laurus> frelleck: Another question
[07:50:41] <frelleck> ok
[07:51:32] <laurus> Is it wrong to write, for an increasing sequence (A_i) of sets, that lim_{n -> \infty} A_i = lim_{n \to \infty} \cup_{i=1}^n A_i ?
[07:51:54] <laurus> (I believe it is wrong
[07:51:55] <laurus> )
[07:52:07] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 256 seconds)
[07:52:14] <laurus> We have by definition that lim_{n -> \infty} A_i = \cup_{i \in \mathbb{N}} A_i
[07:52:23] <frelleck> it's the same thing because \cup_{i=1}^n A_i  = A_n
[07:52:32] <frelleck> so it's correct
[07:52:34] <laurus> So my question is equivalent to asking: is it wrong to write \cup_{i \in \mathbb{N}} A_i =  lim_{n \to \infty} \cup_{i=1}^n A_i ?
[07:52:59] <frelleck> no, that's what it is for increasing sequences
[07:53:05] <laurus> frelleck: yes I said the sequences were increasing
[07:53:14] <frelleck> when they are increasing  \cup_{i=1}^n A_i  = A_n
[07:53:28] <laurus> Yes I agree
[07:53:32] <frelleck> so the statement is equivalent to  \cup_{i \in \mathbb{N}} A_i =  lim_{n \to \infty}A_n
[07:53:44] <frelleck> which is the definition of limit given
[07:54:14] <laurus> Okay I see
[07:54:20] <laurus> Now I have a very related question
[07:54:45] <laurus> Let's say I have an arbitrary sequence of sets (A_i)
[07:55:23] <laurus> And I construct from them a sequence of sets B_i = A_i \ (A_1 \cup ... \cup A_{i-1})
[07:55:47] <laurus> And we can show that \cup_{i=1}^n A_i = \cup_{i=1}^n B_i for any n \in \mathbb{N}
[07:57:29] *** Quits: Kaylah (~Kaylah@ptr-ekg3bnvu8jm0k5jqwgn.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[07:57:29] <laurus> And we have that since \cup_{i=1}^n B_i = B_n that \lim_{n -> \infty} \cup_{i=1}^n B_i  = \lim_{n \to \infty} B_n = \cup_{n \in \mathbb{N} B_n
[07:57:35] <laurus> (as you just explained to me)
[07:57:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[07:58:02] <laurus> What is the step to be able to show that \cup_{n \in \mathbb{N} A_n = \cup_{n \in \mathbb{N} B_n ?
[07:59:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:59:25] <frelleck> sometimes it's easiest to show that if x is in one set it's in the other
[07:59:35] <frelleck> i.e. that they are subsets of each other
[08:00:03] <laurus> frelleck: Yes I have encountered that method. What I am wondering is, is it wrong to take lim_{n \to \infty} \cup_{i = 1}^n A_n ?
[08:00:11] <laurus> It seems wrong
[08:00:39] <frelleck> If you wanted that approach you could go: \cup_{i <= n} A_i = \cup_{i <=n} B_i for each n
[08:01:06] <frelleck> then use increasing limits as n goes to infinity
[08:01:16] <laurus> But we do not have a definition of limit for the A_i 's, isn't that correct?
[08:01:25] <laurus> We only have it for the B_i's because those are increasing.
[08:01:27] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[08:01:50] <frelleck> the B_i's actually aren't increasing
[08:01:54] <frelleck> they are disjoint
[08:02:02] <laurus> Oh, right, I'm sorry
[08:02:21] <laurus> So in this case, we cannot take limits of either side, is that right?
[08:02:35] <frelleck> not of the original sequences no
[08:02:48] <laurus> frelleck: Thank you. I believe I have one more question if you don't mind
[08:02:54] <frelleck> but you can take limits of the unions from 1 to n, as n goes to infinity
[08:03:00] <frelleck> ok go ahead
[08:03:01] <laurus> frelleck: Oh really?
[08:03:10] <laurus> What is the definition of such a limit?
[08:03:13] <frelleck> because these unions are increasing in n
[08:03:20] <laurus> Oh, yes, I see. :)
[08:03:49] <laurus> Wait, but wouldn't the limit then be a countable union of unions?
[08:04:10] <frelleck> a countable union of finite unions, which is the same as the original countable union
[08:04:36] <laurus> Is there a step required to show that a countable union of finite unions is the original countable union?
[08:05:21] <frelleck> I mean if you're worried about it, you can show it directly
[08:05:36] <laurus> Okay, I will try that later. I would like to ask you one final question:
[08:05:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[08:05:43] <frelleck> ok
[08:06:28] *** Quits: texasmusicinstru (~Rheanna@101.70.63.236) (Ping timeout: 268 seconds)
[08:06:51] <laurus> If we start with a sequence of increasing A_i's, (A_i), and we create a sequence of disjoint B_i's from them, how would we show that lim_{n \to \infty} A_n = \lim_{n \to \infty} B_n ? (if the right hand limit even exists at all...)
[08:07:22] <frelleck> the right hand side doesn't exist since the B_n's aren't increasing anymore
[08:07:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:07:58] <laurus> But, if we have \cup_{i=1}^n A_i = \cup_{i=1}^n B_i for all i, do we still have a problem?
[08:08:18] <frelleck> no because the new sets you're taking limits of are increasing
[08:08:32] <frelleck> C_n =  \cup_{i=1}^n A_i
[08:08:57] <frelleck> then you can show the unions of the partial unions are the original union
[08:09:03] <laurus> Okay, so the limit of that exists
[08:09:06] <frelleck> yeah
[08:09:39] *** Joins: texasmusicinstru (~Rheanna@101.68.251.194)
[08:09:51] <laurus> Oh, for the right hand side, the D_n = \cup_{i=1}^n B_i is increasing with n as well?
[08:10:02] <frelleck> well yeah
[08:10:07] <frelleck> D_n is C_n
[08:10:17] <laurus> Okay. Thank you so much, you have cleared up many things about all of this for me.
[08:10:25] <laurus> I really can't tell you how much I appreciate your help.
[08:10:32] <PlanckWalk> Also in general any D_n of that form is increasing
[08:10:34] <frelleck> not a problem
[08:10:49] <laurus> :)
[08:13:30] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 276 seconds)
[08:14:10] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[08:15:05] <nagefire> Is anyone here familiar with differential geometry?
[08:16:27] <nagefire> Or just differential calculus in general?
[08:17:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[08:18:59] <greenbagels> probably
[08:19:02] <mefistofeles> nagefire: just ask
[08:19:12] <greenbagels> might as well ask, you can always copy paste it elsewhere if you dont get an answer here
[08:20:00] <nagefire> what is a "boundary operator" mapping "1-chains" to "0-chains"?
[08:28:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[08:29:30] *** Quits: texasmusicinstru (~Rheanna@101.68.251.194) (Ping timeout: 260 seconds)
[08:29:49] *** Parts: laurus (~laurus@user/laurus) (Part)
[08:30:25] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:32:20] *** Quits: kmh (~kmh@2a00:6020:5004:6800:b9c9:fd53:e903:d62f) (Remote host closed the connection)
[08:32:33] *** Joins: kmh (~kmh@2a00:6020:5004:6800:b9c9:fd53:e903:d62f)
[08:36:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[08:37:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:42:08] *** Joins: Everything (~Everythin@37.115.210.35)
[08:42:34] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[08:44:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:50:46] *** Joins: corecode (~2@0x2c.org)
[08:50:50] <corecode> hi
[08:54:19] <Decker> aloha
[08:58:24] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[08:59:40] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:9922:b6c9:ac04:f1d8)
[09:00:32] <corecode> i'm wondering what properties need to hold for a field of angular values so that it is continuous
[09:01:20] <corecode> i'm trying to generate such a field of angles and interpolate intermediate angles from generated points
[09:04:30] *** Joins: andreasbuhr (~quassel@p548dde89.dip0.t-ipconnect.de)
[09:05:15] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[09:05:30] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[09:05:36] <Decker> uhmm
[09:05:42] <Decker> mod 360
[09:05:46] <Decker> or /360 mod1
[09:06:19] <Decker> corecode bezier curve?
[09:06:44] <Decker> no... uhmm what do you have? and want to do?  finding the inbetween that was the rotation is easy enough
[09:07:41] <Decker> there's this train game that you put down track with a bunch of generated points, and it computes the degrees that curve spans
[09:08:06] <corecode> yes, interpolating between two angles is trivial (tho there are two ways of interpolating)
[09:08:22] <Decker> a short and a long or random
[09:08:37] <corecode> my question is, if i have several points (for simplicity say 3 or 4), how do i interpolate between those angles
[09:08:49] <corecode> because there is a way where i get a discontinuity
[09:08:57] <Decker> what sort of point? what angles?
[09:09:38] <Decker> your points are joined as line segments and each joint has an angle
[09:09:40] <Decker> ?
[09:09:40] <corecode> let's stick with 2d angular field
[09:09:58] <corecode> 2d, every location has an angle associated
[09:09:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[09:10:04] <Decker> 1 angle
[09:10:09] <Decker> k
[09:10:09] <corecode> yes, one angle
[09:10:26] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:10:49] <Decker> how do you interpolate between those angles
[09:10:59] <corecode> in 1d it is easy, but in 2d i'm not sure what invariants my interpolation function needs to hold such that the field stays continuous
[09:11:36] <Decker> that points near each other are near each other - perlin noise works well
[09:11:42] <corecode> right now i pick the short way around the circle
[09:11:48] <Decker> https://d3x0r.github.io/space-plasma.js/  (was playing with icons, so it's kidna butggy
[09:11:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:12:08] <corecode> yea i've been generating the (random) angles using value noise
[09:12:09] <Decker> each point is a direction, and depending on your direction and it's directionit's forward or backward to you
[09:12:23] <Decker> perlin filter over the pure random field will smooth it
[09:12:24] *** Quits: ua_ (~ua@public-gprs232877.centertel.pl) (Excess Flood)
[09:13:12] <Decker> https://www.d3x0r.org/javascript/a-star/index5.html has a link to explaining perlin in laymans terms
[09:13:17] <corecode> you mean linear interpolation?
[09:13:20] <Decker> https://www.youtube.com/watch?v=6-0UaeJBumA
[09:13:22] *** Joins: ua_ (~ua@public-gprs232877.centertel.pl)
[09:13:22] <corecode> using smoothstep?
[09:13:41] <Decker> uhmm you can pass it through sin/cos to smooth the peaks and valleys
[09:13:48] <Decker> perlin is technically sine waves composited
[09:14:07] <Decker> but truly if you just sin the linear interp you get a smoothed cuve
[09:14:26] <corecode> yea that part isn't the problem
[09:14:32] <Decker> so which is?
[09:14:42] <Decker> wat what pooint do you generate a discontinuity?
[09:14:56] <Decker> (at)
[09:15:06] *** Joins: rain3_ (~rain3_mob@2a02:2f09:d10a:400:1c15:54ba:27b3:ce61)
[09:15:29] *** Quits: rain3_ (~rain3_mob@2a02:2f09:d10a:400:1c15:54ba:27b3:ce61) (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
[09:15:29] <corecode> there are combinations of angles where the "short way" that i use for interpolation switches within the field
[09:15:42] <corecode> so one side interpolates clockwise, the other counterclockwise
[09:16:10] *** Joins: rain3_ (~rain3_mob@2a02:2f09:d10a:400:1c15:54ba:27b3:ce61)
[09:16:32] <Decker> how would you go from 0 to 1?
[09:16:38] <corecode> i'm wondering what invariants a continuous angular 2d field holds, so that i can make sure my interpolation functions are matching it
[09:16:39] <Decker> without going through a value 0-1
[09:17:00] <corecode> assuming my "angles" are [0, 1)
[09:17:03] <Decker> it adds linearly. vectors of angles add linearly
[09:17:12] <corecode> then going from 0.1 to 0.9 can be via 0.5 or via 0.0
[09:17:25] <Decker> but you don't have to...
[09:17:32] <corecode> i don't have vectors of angles, i only have angles
[09:17:35] *** Joins: mbuf (~Shakthi@122.178.124.224)
[09:18:02] <Decker> right
[09:18:13] <Decker> ya just sayin... it holds true higher dimensionally
[09:18:30] <corecode> ok
[09:19:14] <Decker> I was thinkin about that - for 4 quadrant square to interpolate, you end up with a curl of sorts
[09:19:42] <Decker> but in the other case there's already a min/max floored  which loses the short transitions.
[09:20:54] <Decker> but in your case I see you're approaching from different directions and always cchoosing the shorter is going different directions
[09:21:34] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:21:35] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[09:21:56] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[09:22:01] <Decker> you could make it more direcitonal... so from top-left to bottom right you always take shortest, the other way you only take longest
[09:22:32] <Decker> or always clockwise
[09:22:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:26:09] <corecode> yea, that might fix it
[09:26:25] <corecode> but i'm trying to understand the fundamental requirement so that i can prove that it fixes it
[09:29:44] *** Quits: jmorris (uid433911@id-433911.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:31:27] <Decker> corecode basically you're putting a gradient from one area to another as a fixed fixup... you could probably just add +2pix +2piy
[09:32:20] <corecode> i think curl must be zero everywhere, and div as well
[09:32:58] <Decker> but really it's if( p2 < p1 ) p1 to p2 the long way (going forward past 0 to get the the lower value) else p1 to p2 the short way
[09:33:18] <Samian> I hope variable naming in changes in the future. I hope it becomes more like program source code where the variable names are shortened words
[09:34:31] <Decker> but only for the +1x and +1y and +1x+1y coordiantes... which is really like 0 1 1 2
[09:34:46] <Decker> which each cell is slanted... with an overall of 0?  it's like a fresnel lens?
[09:36:21] <Samian> Why use the chain rule when we can simply flatten away the exponents using FOIL
[09:37:03] <markasoftware> uh
[09:37:09] <markasoftware> the chain rule is more general
[09:37:48] <Samian> in cases that either work, why use the chain rule
[09:38:04] <markasoftware> eg find the derivative of e^(x^2)
[09:38:08] <markasoftware> you can't do that using foil
[09:38:25] <Samian> like derivative of (x-1)^2.  FOIL returns x^2+1. Derivative of that is 2x.
[09:38:30] <markasoftware> Samian: which is easier to evaluate the derivative of (2x+5)^37 ?
[09:38:39] <Decker> because ti's an excercise to show it's really not that different
[09:38:42] <Decker> in some cases
[09:38:57] <Samian> markasoftware  awe man you got me there. 100% use chain rule over FOIL
[09:39:01] <qergle> x^2-2x+1
[09:39:23] <Samian> qergle thanks for catching that
[09:40:30] <Samian> This channel is awesome! It beats waiting hours for replies like on stackoverflow
[09:41:02] <Samian> markasoftware  you're smart to think of a counter example so quickly!
[09:41:19] *** Joins: skeels (uid493124@id-493124.uxbridge.irccloud.com)
[09:41:39] *** Parts: skeels (uid493124@id-493124.uxbridge.irccloud.com) ()
[09:41:43] <Samian> qergle are you a software engineer? mathematician? professor?
[09:43:16] <qergle> a professional irc'er
[09:43:40] <Samian> real funny. No one makes money from chatting
[09:44:55] <Samian> why is the chain rule used in neural nets when the derivative is so simple that foil makes more sense?
[09:46:16] <Samian> Say we have: (in_0*w_0 + in_1*w_1)*w_2 = out_0
[09:47:27] <Samian> using mean squared error, we want to find derivative of:    ((in_0*w_0 + in_1*w_1)*w_2 - desired_out)^2
[09:48:03] <Decker> because they're non linear
[09:48:24] <Samian> ahh I see
[09:48:54] <Decker> with things like softmax turns out to not matter a lot
[09:49:05] <Samian> Decker  do you see that the derivative for w_2 is just (in_0*w_0 + in_1*w_1) if nonlinear activation functions weren't used?
[09:49:12] <Decker> the sigmork is a 1/e^k kinda function
[09:49:16] <Decker> sigmoid
[09:49:38] <Decker> yes that would probably be true
[09:50:40] <Samian> I was confused by backprop uses the word "back" when it appears that each derivate depends on what's earlier.  So computing the derivates starts from the front and moves back.
[09:50:42] <Decker> https://en.wikipedia.org/wiki/Activation_function
[09:51:06] <Decker> uhmm... back is back still
[09:51:19] <Decker> that is back?
[09:51:29] <Samian> w_2 is later than ((in_0*w_0 + in_1*w_1).. It seems computing the derivatives makes more sense starting from the front of the network and moving back
[09:51:40] <Decker> it has to know where it wants to go and where it came from to update the where it came from to match where it wanted to go better
[09:52:30] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[09:52:54] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[09:53:38] <Samian> Decker, when you say "it has to know where it wants to go", don't you mean computing the computation graph?
[09:53:49] <Samian> or creating the comptuation graph
[09:53:57] <Samian> creating it can be done during the forward pass, right?
[09:54:23] <Decker> I assumed a basic graph was already in place
[09:54:29] <Decker> a generic covering graph
[09:55:05] <Decker> pruning comes with time as terms with weights of 0 can be cut
[09:56:46] <Decker> I'd say a-cyclic, but LTST are self recursive... it's not long before they loop layers back around
[09:58:46] <Samian> yes, it's in place. But depending on the software library you're using, the graph can exist without being stored in variable. For example, in pytorch, I can create a forward function def forward(in): intermediate_out_0 = hidden_0(in);   intermediate_out_1 = hidden_1(intermediate_out_0);     final_out = hidden_2(intermediate_out_1); return final_out
[10:00:05] <Samian> see that the graph is hardcoded into the source code, without any linked-list variable that can be used to iterate through the graph?
[10:00:14] <Decker> that's just the code path that's not the data
[10:00:21] <Decker> that's not what it's processing... what?
[10:00:57] <Decker> ok sure... I'm naive and just used tensorflow with K-something layers
[10:01:21] <Decker> which you build that whole computation graph and later feed it data but.. anyway
[10:02:00] <Samian> cool
[10:02:02] <Decker> I mean eventually I'd think the engine that path is in would find 0 weights and stop executing something... or at least just return() instead of processing all the inputs
[10:02:35] <Decker> (but then my 'get value' is a getter, that if nooone asks for the value, it doesn't compute, if it computed it returns what it has, otherwise it asks all of its inputs for things
[10:02:50] <Decker> but that's a super primitive NN that doesn't really belong in the same class of NN as NN
[10:03:08] <Samian> So, my question is what exactly is being done starting from the back of the network that earlier layers depend on?   I thought maybe it's like building a stack and then popping off the stack until it's empty again
[10:03:31] <Decker> Kares layers?
[10:03:43] <Samian> yes keras dense layers
[10:04:21] <Decker> what is 'the back' of the network for you?
[10:04:31] <Samian> The only thing I see moving backward is finding the dependencies needed to compute the derivative of a weight.
[10:04:40] <Samian> back of the network is the output
[10:04:43] *** Quits: frelleck (~frelleck@user/frelleck) (Quit: ZoinkZ)
[10:04:43] <Samian> front is the input
[10:05:02] <Decker> okay so backpropgagion is back to front
[10:05:20] <Decker> which is finding the derivitive to find the weight and adjust
[10:05:29] <Decker> so the next forward computation gets a new answer...
[10:05:39] *** Quits: pounce (~pounce@facebook/engineering/pounce) (Quit: byee)
[10:06:26] <Decker> there's also the error function
[10:06:45] <Decker> which is from the back how far the generated output was from the target, which starts with the +c on the first backpropagation
[10:06:52] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[10:07:07] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:07:42] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:08:10] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:08:41] <Samian> but when computing the derivatives for "backpropagation", it makes more sense to compute the derivates of the weights in the first layer first, then derivative of the weights in the subsequent layer, and so forth. That's moving from the front to back, not back to front.
[10:08:56] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:09:10] <Decker> the last layers had the most effect on the output
[10:09:15] <Decker> so you would want to adjust those first
[10:09:27] <Decker> you know the most about the difference of that layer
[10:09:34] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:09:38] <Decker> how would you even start from the front?
[10:09:54] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:10:05] <Decker> none of the points on the first layers has any identifiable relation to the last layers  (given more than 3 layers say?)
[10:10:37] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:10:37] <Decker> not until after propgatating the error corrections backwards from back to front...
[10:10:55] <Decker> your initial graph is filled with noise generally
[10:11:11] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:11:38] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:12:12] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:13:38] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:14:01] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:15:11] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:15:21] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[10:15:49] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:16:10] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:16:49] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:17:35] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:17:52] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:17:52] <Samian> Decker let's say we have a simple chain of single nodes like:  in*w_0*w_1*w_2*w_3 = out.    Put that in a "graph" list: [in,w_0,w_1,w_2,w_3], and let's have an empty partial derivates "pd" list [_, _, _, _];   Now for the compute derivate code:  temp=1 for i from 0 to last element in "graph":  temp = temp*graph[i];  pd[i] = temp.  This way you can "reuse" calculations.  If we previously computed in*w_0, then for the next node, we don't need to compute everything
[10:17:52] <Samian>  over again when computing in*w_0*w_1. We can reuse the in*w_0 calculation.    Because of this reuse advantage, it makes more sense to me to compute derivates starting from the front/input and moving to the end/back/output of the net
[10:19:45] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:19:54] <Samian> Decker  do you see what I'm saying about reusing calculations for subsequent calculations?
[10:19:57] <Decker> each w, is used once ... when you back propagate and update 2 and in turn 1, then you have to recompute 0 * 1 the next time and there's no reuse
[10:20:13] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:20:57] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:21:30] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:22:04] <Decker> I don't see how you have any meaningful error information to compute a dertivitive (no deltas) until you get to the end
[10:22:18] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:22:38] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:23:21] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:23:27] <Decker> :) Samian https://towardsdatascience.com/forward-propagation-in-neural-networks-simplified-math-and-code-version-bbcfef6f9250 you jsut want forward propagation :)
[10:23:42] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:23:51] <Samian> ohh I see.  You're saying the error value is updated per layer. If there are 10 hidden layers, the error value is updated 10 times.. I  was looking at it as the problem "find the gradient" aka vector of partial derivates that I remember from multivariable calculus. Or the "find the tangent plain" problem.
[10:24:22] <Samian> *plane
[10:24:50] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:25:10] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:26:13] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:26:29] <Samian> Decker why not take it a step further and update the error for each neuron adjustment? If there are 10 hidden layers, and each one has 10 neurons, couldn't there be a 99 updates to the error?
[10:26:45] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:27:19] *** Joins: vysn (~vysn@user/vysn)
[10:27:30] <Decker> it's not what is done.... I can see how that sort of approach might work - reducing the significance of the final layers but seems like adjusting the firts layer weights much would shift the whole output beyond measurable degree of error
[10:27:38] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:27:58] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:28:20] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:28:32] <Decker> yes... but based on the rror of what was updated from the next to last error
[10:28:44] <Decker> and so on backwards, which makes the adjustment in the first layer insignificant
[10:29:00] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:29:27] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:30:03] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:30:42] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:31:02] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:31:35] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:32:37] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:33:45] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:34:38] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:35:17] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:36:02] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:37:06] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:37:37] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:38:17] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:39:06] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:39:50] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:39:58] <Samian> thanks for explaining all that Decker
[10:40:20] <Decker> that's one of my passions :)
[10:40:20] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:40:43] *** Joins: Arcorann (~A@user/arcorann)
[10:41:33] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:41:57] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:42:31] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:42:56] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:43:41] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:44:59] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:45:56] *** Quits: xff0x (~xff0x@2001:1a81:52ec:e600:32d8:d60b:eef6:92ba) (Ping timeout: 245 seconds)
[10:45:59] *** Quits: soapsudsxx (~soapsudsx@209.221.40.144) (Remote host closed the connection)
[10:46:11] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:46:30] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:46:55] *** Joins: xff0x (~xff0x@port-92-193-130-240.dynamic.as20676.net)
[10:46:59] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:47:18] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:47:41] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:48:01] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:48:55] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:49:00] *** Joins: jmorris (uid433911@id-433911.hampstead.irccloud.com)
[10:50:03] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:50:26] *** Quits: nullcone (uid11626@id-11626.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:50:31] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:51:04] *** Joins: mei3 (~mei@user/mei)
[10:51:37] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:51:59] *** Joins: texasmusicinstru (~Rheanna@61.174.60.56)
[10:52:36] *** Quits: texasmusicinstru (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:52:59] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:9922:b6c9:ac04:f1d8) (Ping timeout: 268 seconds)
[10:53:15] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:53:36] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:54:21] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:54:44] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:55:54] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:56:00] *** Joins: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu)
[10:56:16] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:56:20] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[10:56:40] *** Joins: texasmusicinstru (~Rheanna@112.29.212.29)
[10:57:00] *** Quits: texasmusicinstru (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:57:37] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[10:59:15] *** Joins: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d)
[11:01:43] *** Joins: texasmusicinstru (~Rheanna@101.68.251.194)
[11:02:34] *** Quits: Trigo (~NeedMathH@64.201.115.44) (Ping timeout: 260 seconds)
[11:04:26] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[11:04:44] *** Joins: darkapex (~darkapex@user/darkapex)
[11:04:57] <rain3> why is the inequality at q1 true ? https://pasteboard.co/VuF3ywZnVn7m.png (screenshot taken from https://brilliant.org/wiki/jensens-inequality/ )
[11:05:42] *** Quits: kajiryoji (~kajiryoji@180.160.56.140) (Ping timeout: 250 seconds)
[11:06:57] *** Joins: kajiryoji (~kajiryoji@180.160.67.213)
[11:12:48] <cherim> q1 by k=2 case, q2 by k=n-1 case (in "Now, we proceed assuming that the cases k=2 and k = n-1 are true")
[11:13:53] <cherim> Where k is their awkward notation for the number of terms in the sum, i.e. what is n elsewhere in the text
[11:22:00] *** Quits: mornfall (~mornfall@user/mornfall) (Ping timeout: 276 seconds)
[11:23:25] *** Joins: mornfall (~mornfall@user/mornfall)
[11:28:56] *** Joins: Hercules (~Hercules@user/hercules)
[11:32:36] *** Joins: darkapex_ (~darkapex@user/darkapex)
[11:33:07] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
[11:34:39] *** Quits: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu) (Quit: leaving)
[11:35:18] *** Quits: Decker (~d3x0r@ip68-96-102-241.lv.lv.cox.net) (Remote host closed the connection)
[11:35:46] *** Joins: alzgh (~alzgh@user/alzgh)
[11:37:57] *** Quits: nayfie (~nayfie@159.196.54.128) (Quit: mwah xx)
[11:39:59] *** Quits: andreasbuhr (~quassel@p548dde89.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:43:02] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:44:42] <rain3_> cherim: thanks. I see now. but what guarantees for q1 that sum_i_1_(n-1)(u_i*x_i) is a valid 'x' ? (=it's in the interval I where f is convex ?)
[11:45:51] <rain3_> only for such a 'valid' x does case k=2 apply , that's why I am asking
[11:46:46] <cherim> mu_i are nonnegative with sum=1 (see rightmost equation in line 1), so a linear combination of x_i with coefficients mu_i is in any interval that contains all x_i
[11:48:21] <cherim> If this is unfamiliar, all x_i <=R implies sum mu_i x_i <= sum mu_i R = R, and similarly for the lower bound
[11:56:54] *** Joins: extern (~archer@80.246.137.4)
[12:00:44] <rain3_> got it it is clear now, thank you
[12:01:09] *** Joins: nayfie (~nayfie@2001:8003:cc41:2c01:1c3f:e3d2:a74d:5c45)
[12:02:35] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:06:18] *** Joins: savask (~savask@Powder/Developer/savask)
[12:09:21] *** Joins: Maturion (~Maturion@p200300ede7400000d21add8c31652ff5.dip0.t-ipconnect.de)
[12:09:29] *** Joins: libsys (~libsys@186.105.159.91)
[12:17:27] *** Quits: lkronnus (~kron@179097066103.provale.com.br) (Quit: Konversation terminated!)
[12:18:12] *** Joins: lkronnus (~kron@179097066103.provale.com.br)
[12:20:25] *** Quits: lkronnus (~kron@179097066103.provale.com.br) (Client Quit)
[12:20:51] *** Joins: lkronnus (~kron@179097066103.provale.com.br)
[12:23:11] *** Quits: emerent (~quassel@p200300cd5748552fba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[12:24:25] *** Joins: emerent (~quassel@p200300cd5748552fba27ebfffed28a59.dip0.t-ipconnect.de)
[12:25:45] <rain3> https://pasteboard.co/fncUUSHROnSy.png here they have proved only left => right implication. for any w1,w2...,wn , we can get  l1,l2,...,l_n   . How about the otherway around ? if we have l1,l2,...,l_n how to get w1,w2,...,wn ?
[12:26:07] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:26:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[12:27:24] *** Lord_of_Life_ is now known as Lord_of_Life
[12:29:47] *** Quits: nayfie (~nayfie@2001:8003:cc41:2c01:1c3f:e3d2:a74d:5c45) (Ping timeout: 268 seconds)
[12:35:29] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:21] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:38:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:40:41] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[12:54:23] *** Joins: extern_ (~archer@185.32.176.95)
[12:55:58] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:56:47] *** Quits: extern (~archer@80.246.137.4) (Remote host closed the connection)
[12:59:38] *** Quits: vysn (~vysn@user/vysn) (Read error: Connection reset by peer)
[13:07:51] *** Joins: Simplar (~quassel@188.163.92.225)
[13:10:47] <Simplar> If points A and B belong to one plane, and plane coordinates of points A = {x1,y1}, and B = {x2,y2}, how to get the lowest possible amount of integer values of coordinates belonging to an arbitrary line (it can be of any form, can be not a straight line) drawn from A to B?
[13:11:33] <PlanckWalk> x1,x2,y1,y2 are integers?
[13:11:45] <Simplar> They may be integers and may be non-integers
[13:12:06] <Simplar> A and B are different points, they do not lie in the same place on a plane, there is a guarantee for that
[13:12:15] <Simplar> Also stated in the problem
[13:12:36] <isekaijin> What exactly is a “non-straight” line?
[13:12:41] <Simplar> A curve
[13:12:45] <isekaijin> Oh.
[13:12:57] <isekaijin> Then just use any curve between A and B that also happens to pass through the origin.
[13:13:06] *** Joins: enyc (~enyc@user/enyc)
[13:13:21] <isekaijin> Define it piecewise: first go from A to the origin, then go from the origin to B.
[13:13:25] <Simplar> So you can draw any curve or polygonal line
[13:13:26] <PlanckWalk> Err what?
[13:13:50] <isekaijin> If negative coordinates are allowed, you can do even better.
[13:13:53] <PlanckWalk> A curve going through the origin will in many cases have a great deal more integer coordinates
[13:14:00] <isekaijin> Wait.
[13:14:04] <isekaijin> I misunderstood the problem, then.
[13:14:07] *** Joins: komorooodesssos (~komoroood@dsl-hkibng22-54f987-151.dhcp.inet.fi)
[13:14:09] <isekaijin> Sorry.
[13:14:27] <komorooodesssos> hi, how can i show that f\inC^k(\0mega)
[13:14:28] <Simplar> all coordinates are allowed, by the way
[13:14:49] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[13:14:49] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[13:14:50] *** Joins: menace (~someone@user/menace)
[13:14:57] <isekaijin> What is f?
[13:15:22] <Simplar> PlanckWalk: how is the assumption that if x1,x2,y1,y2 are not integers, then the amount of integer coordinates is (|x2-x1|+|y2-y1|)?
[13:15:29] <komorooodesssos> a function f\in L^2(\omega)
[13:15:34] <Simplar> The minimal amount*
[13:15:48] <PlanckWalk> Simplar: Well, not always true but close
[13:16:02] <Simplar> PlanckWalk: which case it's not true?
[13:16:11] <isekaijin> A function in L^2(\Omega) only needs to be square-integrable, right? It does not even have to be continuous, let alone C^k.
[13:16:15] <PlanckWalk> E.g. if x1 = 2.9 and x2 = 3.1  then you *have* to go through 3 at some point, but |x1-x2| < 1
[13:16:20] <komorooodesssos> and we know that |x(n)| <= c/(1+|n|)^k
[13:16:45] <Simplar> Uh, dang.
[13:17:06] <PlanckWalk> But something close to that yes
[13:17:07] <Simplar> What if I round down the coordinates?
[13:17:24] <Simplar> then |2-3| = 1
[13:17:59] <Simplar> So the idea is to round down x1,x2,y1,y2 and apply the formula (|x2-x1|+|y2-y1|)
[13:18:37] <Simplar> if any of the coordinates are integer, add the amount of integer coordinates in {x1,x2,y1,y2} set
[13:18:54] <PlanckWalk> Yes, that would work.
[13:19:30] *** Joins: src (~src@user/src)
[13:19:31] <PlanckWalk> Straight line segments would almost always be optimal, except when x1=x2 or y1=y2
[13:19:56] <PlanckWalk> (and also integer)
[13:20:11] <Simplar> But my formula will work for x1=x2 or y1=y2 too?
[13:20:22] <PlanckWalk> Should do yes
[13:20:36] <PlanckWalk> I haven't examined in detail but looks rightish :)
[13:21:09] *** Jmtrix- is now known as Jmtrix
[13:21:09] *** Quits: Jmtrix (~qed@168.235.89.81) (Changing host)
[13:21:09] *** Joins: Jmtrix (~qed@user/jmtrix)
[13:21:24] <PlanckWalk> Heh, one exception: x1=x2 *and* y1=y2 :-)
[13:21:37] <Simplar> PlanckWalk: wait, I need to round down the ABSOLUTE value of the coord
[13:21:39] <Simplar> do I?
[13:21:45] <PlanckWalk> No
[13:22:13] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[13:22:22] <PlanckWalk> Zero isn't special here
[13:23:03] <PlanckWalk> e.g. a curve from (2,3) to (2,3) might have only one integer value, or two depending upon whether the curve has to have nonzero length.
[13:23:09] <Simplar> round down(-2.9) might give 3?
[13:23:14] <Simplar> -3*
[13:23:15] <PlanckWalk> That's fine
[13:23:22] <Simplar> how is that fine?
[13:24:12] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[13:24:12] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[13:24:51] <PlanckWalk> It's fine because the formula still works
[13:24:58] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[13:25:10] *** Quits: extern_ (~archer@185.32.176.95) (Remote host closed the connection)
[13:25:53] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[13:25:55] *** Quits: bildramer (~bildramer@2a02:587:6217:2d00:dd0d:4727:45a9:bef5) (Ping timeout: 268 seconds)
[13:26:23] <PlanckWalk> Oh hmm, I guess (2,3) counts as two integer coordinates either way. Number of points on the curve doesn't matter.
[13:26:31] *** Joins: bildramer (~bildramer@ppp-94-68-188-221.home.otenet.gr)
[13:26:51] <PlanckWalk> (I presume, from problem statement)
[13:27:13] *** Joins: cadmio (~cadmio@151.25.143.49)
[13:27:16] <cadmio> Hello
[13:27:42] <PlanckWalk> So I guess straight line segments are always otimal.
[13:27:56] <rain3_> cadmio hi
[13:28:47] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:29:42] <cadmio> I don't understand the last part in bold http://mathb.in/67185
[13:29:44] <PlanckWalk> Any curve projected onto the x and y axes will include the interval between the endpoint coordinates
[13:30:08] *** Quits: justUnited (~justache@user/justache) (Remote host closed the connection)
[13:30:20] <PlanckWalk> Though there will always be plenty of other curves that only include those intervals.
[13:31:04] *** Joins: justUnited (~justache@user/justache)
[13:33:21] <riv> cadmio: the possible sizes of suborbits are 1, p, p^2, p^3, ..., p^h
[13:33:38] <riv> the sum of all the sizes of suborbits ads up to a number that is not a multiple of p
[13:33:43] <riv> so one of them must be 1
[13:37:15] <Simplar> PlanckWalk: if I have x1=-2.9, then if I ceil it, I get x1=-3
[13:37:27] <Simplar> Then how does my formula work?
[13:37:40] <Simplar> do I need to floor negatives and ceil positives?
[13:37:43] <PlanckWalk> No
[13:37:50] <PlanckWalk> Just either floor everything, or ceil everything
[13:38:00] <PlanckWalk> ceil(-2.9) = -2 though, not -3
[13:38:12] <Simplar> Floor always rounding towards zero. Ceiling always rounding away from zero. E.g floor(x)=-floor(-x) if x<0, floor(x) otherwise
[13:38:20] <PlanckWalk> No, floor rounds down.
[13:38:31] <Simplar> https://math.stackexchange.com/questions/344815/how-do-the-floor-and-ceiling-functions-work-on-negative-numbers
[13:38:34] <Simplar> Look at this
[13:38:41] <PlanckWalk> More precisely, floor(x) = a iff a is an integer and  a <= x < a+1
[13:39:49] *** Joins: qbt (~qbt@user/edun)
[13:40:01] <PlanckWalk> What about that?
[13:41:01] <Simplar> Hm, makes sense
[13:41:22] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[13:41:25] <PlanckWalk> The only answer that says toward or away from zero has -2 rating.
[13:41:37] <Simplar> floor(|x1-x2|)+floor(|y1-y2|)+C, where C is amount of integers among x1,x2,y1,y2
[13:41:41] <Simplar> will that work?
[13:42:04] <PlanckWalk> I'd change C slightly
[13:42:11] <Simplar> why and how?
[13:42:29] <PlanckWalk> Since I guess you want to cout (2,2) as two integer coordinate values (one in x and one in y) rather than one.
[13:42:39] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:43:00] <PlanckWalk> If that counts as one, then it gets mcuh weirder
[13:43:24] <Simplar> we are not looking at the unique integer coords
[13:43:27] <PlanckWalk> much*
[13:44:00] <Simplar> we look for minimal amount of possible integer coordinate values when drawing a line of arbitrary shape from {x1,y1} to {x2,y2}
[13:44:14] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:44:42] <Simplar> and we include x1 if x1 is integer, x2 if x2 is integer, y1 if y1 is integer, y2 if y2 is inteer
[13:44:54] <PlanckWalk> Hmm, maybe I am misinterpreting what you mean by "amount of"
[13:44:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[13:45:06] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:45:15] <PlanckWalk> I interpreted it to me "unique integer values of x plus unique integer values of y"
[13:45:18] <PlanckWalk> mean*
[13:45:20] <Simplar> Oh no XD
[13:45:50] <PlanckWalk> Oh.  What do you mean by "amount of"?
[13:46:06] <Simplar> C=1 if only one coordinate among x1,y1,x2,y2 is integer, C=2 if two coordinates among x1,y2,x2,y2 are integers... and so on
[13:46:19] <Simplar> C=0 if neither are integers.
[13:46:55] <PlanckWalk> What about x1=2, x2=2, y1=2, y2=3?
[13:47:04] *** Parts: qbt (~qbt@user/edun) ()
[13:47:12] <PlanckWalk> (I.e. some curve from (2,2) to (2,3))
[13:48:00] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[13:48:31] <PlanckWalk> There are at least two *points on the curve* with integer x coordinate, but they're the same coordinate.
[13:48:45] <Simplar> > What about x1=2, x2=2, y1=2, y2=3?
[13:48:46] <Simplar> C=4
[13:48:49] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[13:48:51] <Simplar> all four are integers
[13:48:54] <PlanckWalk> Simplar: I'm not asking about C.
[13:49:04] <Simplar> ah
[13:49:07] *** Parts: cadmio (~cadmio@151.25.143.49) (WeeChat 3.0)
[13:49:13] <Simplar> then we count both x coordinates still
[13:49:18] <PlanckWalk> I'm asking how that is classified as "amount of integer coordinates" in your original problem.
[13:49:22] <PlanckWalk> Okay
[13:49:33] <Simplar> because two different points have integer coordinate x
[13:49:39] <Simplar> thus we have 2 integer coordinates
[13:50:00] <PlanckWalk> So the endpoints count as 4 total integer coordinates, 2 in x and 2 in y?
[13:50:24] <Simplar> For example, given x1=-2; y1=-0,5; x2=0,5; y2=1,5; the answer should be 3
[13:50:49] <Simplar> because 3 integer points are minimal amount of integer points
[13:51:05] <PlanckWalk> Err, points?  Or coordinates?
[13:51:09] <Simplar> Coordinates* sorry
[13:51:26] <Simplar> PlanckWalk: yes, endpoints count
[13:51:34] <PlanckWalk> I count x=-2, -1, and 0.  y=0 and 1.
[13:53:35] *** Joins: cadmio (~cadmio@151.25.143.49)
[13:54:22] <Simplar> True
[13:54:45] <cadmio> riv: thanks, but I've a doubt about why it is specifying that O(S) divides m, it seems also a consequence of this fact
[13:57:20] <Simplar> PlanckWalk: how do we get number of oints?
[13:57:24] <Simplar> Points*
[13:57:36] <Simplar> with at least one integer coordinate
[13:57:43] <PlanckWalk> Points is messier because it can be minimized further
[13:57:53] <riv> cadmio: I think that cardinality dividing m, and m being relatively prime to p is what implies cardinality is relatively prime to p
[13:58:19] <Simplar> PlanckWalk: factorial?
[13:59:17] <PlanckWalk> E.g. (0.9, 3.9) to (1.1, 4.1) has to go through x=1 and y=4, but can go through them in the same point.
[13:59:32] <PlanckWalk> (In this case, the line segment does that)
[14:00:26] <PlanckWalk> so it's more like  min(|x1-x2|, |y1-y2|) than the sum.
[14:00:45] <PlanckWalk> Err, max
[14:01:24] <PlanckWalk> This would correspond with a diagonal line segment going through grid corners
[14:01:45] <cadmio> riv: Might it be that's using the relation |O(S)| |St(S)| = |H| ?
[14:02:21] <PlanckWalk> But again the endpoints make things messt
[14:02:23] <riv> it's using |G| = p^a m  with m relatively prime to p
[14:02:23] <PlanckWalk> messy*
[14:05:05] <Simplar> PlanckWalk: so I should just compare absolutes and floor the min?
[14:05:50] <PlanckWalk> Well, it was really more like max(|floor(x1)-floor(x2)|, |floor(y1)-floor(y2)|)
[14:06:01] <PlanckWalk> But the endpoints still need to be accounted for.
[14:06:29] <Simplar> so if x1 or y1 is an integer, i count that endpoint
[14:06:33] <Simplar> same for x2 or y2
[14:06:39] <PlanckWalk> Worse than that
[14:06:48] <Simplar> Uhm, how?
[14:07:58] *** Joins: Nselm (~Nselm@p200300d56f36767abc11a97d0f0c6784.dip0.t-ipconnect.de)
[14:08:10] <Simplar> We basically include a point if at least one its coordinate is an integer
[14:08:42] <cadmio> I'm not sure whether |O(S)| |St(S)| = |G| applies as well for that action
[14:09:30] <PlanckWalk> E.g. (0,0) to (0,1) requires two points with at least one integer coordinate each (the endpoints)
[14:09:44] <PlanckWalk> But |floor(x1)-floor(x2)| = 1
[14:10:00] <PlanckWalk> We double-counted the second endpoint.
[14:10:20] <riv> |G| = |O(S)| |St(S)| holds for any action, it is called the orbit stabilizer theorem
[14:10:36] <riv> sorry
[14:10:43] <riv> |G| = |O(S)| |G : St(S)| holds for any action, it is called the orbit stabilizer theorem
[14:10:55] <Simplar> PlanckWalk: x1=0;y1=-2;x2=0;y2=2 should output 5
[14:11:03] <cadmio> here it's H which is acting on O(S)
[14:11:37] <PlanckWalk> Simplar: Yes, it should.  That's another case of double-counting.
[14:11:58] <Simplar> max(|0|,|-4|)=4
[14:12:09] <Simplar> How to exclude double-counting?
[14:13:22] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:15:17] <PlanckWalk> We should probably test for crossing separately from endpoints.  The |floor()-floor()| formula doesn't distinguish
[14:15:56] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[14:16:16] <PlanckWalk> But maybe there's an easier way
[14:16:51] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[14:18:20] *** Joins: seninha (~seninha@user/seninha)
[14:18:41] *** Joins: Hercules (~Hercules@user/hercules)
[14:20:10] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Client Quit)
[14:21:17] <Simplar> is there a 'more general' approach?
[14:21:32] <PlanckWalk> That's what I'm wondering
[14:22:05] <PlanckWalk> It's easy enough if you have separate cases for x1 >= x2 and x1 < x2
[14:22:13] <PlanckWalk> But that's annoying
[14:22:41] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[14:22:57] *** Joins: DarkSeid (uid394293@id-394293.helmsley.irccloud.com)
[14:25:36] *** Joins: damxsa (~damx@2001:16a2:df3c:b500:fcfd:fe1a:694f:da85)
[14:26:25] <Simplar> I can separate cases for x1 >= x2 and x1 < x2
[14:26:36] <Simplar> PlanckWalk: if I am able to do it, what's the approach?
[14:26:41] <Simplar> I may try to generalize
[14:27:08] <komorooodesssos> hi, how can i show that f\inC^k(\0mega) when f \in C^{k}(\Omega) and where have that |x(n)| <= C/(1+|n|)^k for all n where C and k are constants
[14:27:16] <komorooodesssos> x(n) is have fourier coefficient
[14:27:51] <PlanckWalk> For x1 < x2, the number of *internal* points with an integer coordinate is 1+floor(x2)-ceil(x1)
[14:29:07] <Simplar> *Internal* meaning not including endpoints?
[14:29:19] <PlanckWalk> Right.  Then you can test the endpoints separately
[14:29:46] <Simplar> for x1 >= x2, it's 1+ceil(x2)+floor(x1)?
[14:30:06] <PlanckWalk> x1=x2=integer is a special case, with no internal integer points.
[14:30:18] <PlanckWalk> x1=x2 but not an integer you can use either formula
[14:30:39] <PlanckWalk> Oh , for x1 > x2 you just swap x1 and x2 in the formula
[14:30:51] <Simplar> Oh, okay
[14:31:06] <Simplar> I'll use ternary operator to distinguish these cases
[14:31:14] <PlanckWalk> I suppose in general x1=x2 mean no internal integer points
[14:31:54] <Simplar> PlanckWalk: but x1=x2 but y1 != y2 will give us (y2-y1) internal integer points
[14:32:03] <PlanckWalk> So once you have the internal points for x and y, you take the max and then add any integer endpoints
[14:32:42] <Simplar> We are not required to have both coordinates of a point to be integers, just one OR more
[14:32:48] <PlanckWalk> Yes
[14:33:06] <PlanckWalk> Otherwise it would be really easy :)
[14:33:28] <PlanckWalk> If both coords needed to be integer, the interior points could avoid them all :)
[14:33:41] <Simplar> that's why i think x1 = x2 have floor(abs(y2-y1)) integer points
[14:34:07] <Simplar> Wait wait wait
[14:34:11] <PlanckWalk> x1=x2 means no internal integer points *in the x coordinate*
[14:34:16] <Simplar> > For x1 < x2, the number of *internal* points with an integer coordinate is 1+floor(x2)-ceil(x1)
[14:34:23] <Simplar> this only factors x or counts y too?
[14:34:31] <Simplar> this does not seem to factor y
[14:34:37] <PlanckWalk> Count separately for x and for y, take the max
[14:35:01] <Simplar> ah! so, it's either 1+floor(y2)-ceil(y1) OR 1+floor(x2)-ceil(x1) ?
[14:35:47] <PlanckWalk> Up to swappign x1 with x2 or y1 with y2, yes
[14:36:23] <Simplar> max_on_x = (x1<x2) ? (1+floor(x2)-ceil(x1)) : ((x1>x2) ? (1+floor(x1)-ceil(x2)) : 0)
[14:36:28] <Simplar> max_on_y = (y1<y2) ? (1+floor(y2)-ceil(y1)) : ((y1>y2) ? (1+floor(y1)-ceil(y2)) : 0)
[14:36:38] <Simplar> then i take max(max_on_x,max_on_y)
[14:36:47] <Simplar> and that's all internal points, right?
[14:36:50] <PlanckWalk> Yes
[14:37:00] <Simplar> then i test if x1 or y1 is integer
[14:37:04] <Simplar> i add 1
[14:37:10] *** Parts: cadmio (~cadmio@151.25.143.49) (WeeChat 3.0)
[14:37:10] <Simplar> if x2 or y2 is integer
[14:37:12] <Simplar> i add 1 more
[14:37:15] <PlanckWalk> Right
[14:39:08] <Simplar> There we go
[14:39:09] <Simplar> max((x1<x2)?(1+floor(x2)-ceil(x1)):((x1>x2)?(1+floor(x1)-ceil(x2)):0),(y1<y2)?(1+floor(y2)-ceil(y1)):((y1>y2)?(1+floor(y1)-ceil(y2)):0))+int((floor(x1) == x1)||(floor(y1) == y1))+int((floor(x2) == x2)||(floor(y2) == y2))
[14:39:28] <PlanckWalk> I just hope I didn't mess up some expression in there
[14:39:58] *** darkapex_ is now known as darkapex
[14:40:17] <Simplar> welp, i think you did not
[14:42:13] <PlanckWalk> For x2>x1, it should probably be  ceil(x2) - floor(x1) - 1  since x2 being the integer above x1 shouldn't add an internal point and likewise x1 being the integer below x2.
[14:42:38] <PlanckWalk> What a pest.
[14:42:45] <Simplar> Uh.
[14:42:46] <Simplar> True.
[14:42:56] <Simplar> x1 = -2, y1 = -0.5, x2=0.5, y2=1.5 gave 4
[14:43:16] <PlanckWalk> I think I got them exactly swapped.  yay me.
[14:43:18] <Simplar> PlanckWalk: same for y2>y1?
[14:43:21] <PlanckWalk> Yes
[14:43:29] <Simplar> fixing...
[14:44:54] <Simplar> and for (x1>x2) it should be (1+floor(x1)-ceil(x2))?
[14:45:09] <PlanckWalk> ceil(x1) - floor(x2) - 1
[14:45:09] <Simplar> or 1+floor(x2)-ceil(x1) ?
[14:45:13] <Simplar> oh
[14:45:25] <PlanckWalk> It's ceil(larger) - floor(smaller) - 1
[14:45:37] <Simplar> x1>x2 => ceil(x1)-floor(x2)-1
[14:45:47] <Simplar> x1<x2 => ceil(x2)-floor(x1)-1
[14:45:51] <Simplar> x1=x2 => 0
[14:45:52] <PlanckWalk> Yes
[14:50:24] <Simplar> PlanckWalk: this worked
[14:50:25] <Simplar> max((x1<x2)?(ceil(x2)-floor(x1)-1):((x1>x2)?(ceil(x1)-floor(x2)-1):0),(y1<y2)?(ceil(y2)-floor(y1)-1):((y1>y2)?(ceil(y1)-floor(y2)-1):0))+int((floor(x1) == x1)||(floor(y1) == y1))+int((floor(x2) == x2)||(floor(y2) == y2))
[14:50:30] <Simplar> have the algo if you need it :)
[14:51:24] <komorooodesssos> hi, how can i show that f\inC^k(\0mega) when f \in C^{k}(\Omega) and where have that |x(n)| <= C/(1+|n|)^k for all n where C and k are constants
[14:51:26] <komorooodesssos> x(n) is have fourier coefficient
[14:54:11] <Simplar> thanks PlanckWalk for thinking on that
[14:54:33] <Simplar> I was quite curious if there was a simple way, and you found just that
[14:54:39] <Simplar> I understood what you based on btw
[14:55:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[14:59:07] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Quit: Connection closed)
[15:01:45] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:02:34] <TheHermann> can I tell if I have a generic polynomial of degree n, the zeros of the polynomial will be at most n ?.
[15:02:44] *** Quits: Samian (~s@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:04:18] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:06:15] *** Joins: blackop (~ocloud@user/blackop)
[15:08:32] <riv> TheHermann: yes there cannot be more than n roots of a polynomial in a field
[15:08:49] *** Quits: loller_ (uid358106@id-358106.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:08:52] <riv> this is because you can divide out each root to get a degree n-1 polynomial
[15:10:09] *** Joins: arseniiv (~arseniiv@94.41.2.66.dynamic.ufanet.ru)
[15:10:22] <Simplar> I've got one more interesting task
[15:11:11] <blackop> hi
[15:12:42] <Simplar> A transmitter receives signals from a source, sending a response. Suppose that it happens instantly without delays. Since transmitter's load capacity is limited, it's needed to minimize the amount of receive-and-respond operations. Interval between such operations should not exceed `d` milliseconds. There are intervals of time when the connection is unavailable, specified as (a;b) (means in moments of time a and b the connection is available, but not
[15:12:42] <Simplar> between a and b). A schedule of operations is made for `t` milliseconds, when the first operation should happen in moment of time 0, and the last operation in the moment of time t. Find the minimum amount of operations under specified conditions.
[15:13:31] *** Joins: NEYi (~NEYi@109.251.216.38)
[15:14:35] <Simplar> I suppose that if there would be no connection unavailability, then the minimum amount of operation would have to be equal to the amount of `d` we can put inside of the interval.
[15:15:11] <Simplar> For example, from 0 to 60 with d = 10 it will be 60/10 = 6 operations at least.
[15:16:03] <Simplar> or, from 0 to 60 with d = 7 it'll be ceil(60/7) = 9 operations
[15:16:20] <Simplar> (I can ceil that because the interval should not be greater than d but it's allowed to have it less than d)
[15:16:36] *** Parts: Nselm (~Nselm@p200300d56f36767abc11a97d0f0c6784.dip0.t-ipconnect.de) ()
[15:16:42] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[15:17:00] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[15:19:44] <Simplar> What to do with these intervals of unavailability? I guess, they are limited to be less than d, because else it would be impossible to have necessary maximum interval between operations.
[15:21:58] *** Quits: someone235 (uid419897@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:30:37] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:33:32] *** Joins: Turingtoast (~Tino@200116b860ebd5002168c1cb8f062168.dip.versatel-1u1.de)
[15:33:33] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 268 seconds)
[15:34:06] *** Quits: damxsa (~damx@2001:16a2:df3c:b500:fcfd:fe1a:694f:da85) (Ping timeout: 260 seconds)
[15:34:29] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:34:34] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:39:44] *** Quits: jmorris (uid433911@id-433911.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:42:36] *** Joins: cadmio (~cadmio@151.47.185.104)
[15:51:05] *** Joins: sedeki (~textual@user/sedeki)
[15:51:26] *** Joins: lpapp|office (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[15:51:41] <lpapp|office> hi, I do not understand why | is used here instead of for the final conclusion: Firstly,letd=gcd(a,b).Wegetd|(b·t+r)andd|b,sod|r.
[15:51:44] <lpapp|office> Therefore we get gcd(a, b) | gcd(b, r).
[15:51:46] <lpapp|office> eh
[15:52:08] *** Parts: cadmio (~cadmio@151.47.185.104) (WeeChat 3.0)
[15:52:24] <riv> | is divisibility
[15:52:32] <riv> d | n  means  exists k, n = k d
[15:52:32] <lpapp|office> yeah
[15:52:43] <lpapp|office> yes, I know
[15:52:47] <lpapp|office> I still maintain my question though
[15:53:06] <sedeki> instead of what in the final conclusion?
[15:53:24] <riv> what's r?
[15:53:25] <lpapp|office> gcd(a, b) == gcd(b, r)
[15:53:31] <lpapp|office> remainder
[15:53:36] <riv> remainder of what
[15:53:55] <lpapp|office> well, a = t * b + r
[15:54:01] <riv> ok
[15:54:06] <riv> a = t * b + r
[15:54:16] <riv> gcd(a, b) = gcd(t * b + r, b)
[15:54:21] <lpapp|office> I am looking at this here: https://codility.com/media/train/10-Gcd.pdf
[15:54:30] <lpapp|office> top of the second page
[15:54:33] <riv> and gcd(t * b + r, b) = gdc(r, b)
[15:54:39] <lpapp|office> so, my question is why it is | instead of = or ==
[15:54:43] <riv> so it would be better to write = than |
[15:55:10] <riv> and the proof can be done better, as I did it
[15:55:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[15:57:46] *** Quits: kajiryoji (~kajiryoji@180.160.67.213) (Ping timeout: 250 seconds)
[15:59:37] <sedeki> to be fair, they say that after "Secondly"
[15:59:41] <lpapp|office> thanks
[16:02:12] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[16:04:58] *** Joins: seninha (~seninha@user/seninha)
[16:07:16] <TheHermann> riv, for example if a have p(x)=x^2-1 i can divide it for 1 and -1. right?
[16:07:45] <riv> you can divide it by (x-1) and (x-(-1))
[16:07:58] <riv> in fact x^2-1 = (x-1)(x-(-1))
[16:10:45] <isekaijin> Why be helpful when you can be literal? The question was whether you can divide it “for” 1 and -1. You the syntactically closest meaningful sentence by replacing “for” with “by”.
[16:11:01] <isekaijin> And, can you divide any polynomial by 1 or -1? Sure as hell you can!
[16:11:08] <riv> isekaijin: it was a follow up question to something we were talking about earlier
[16:11:10] <isekaijin> You get* the
[16:11:16] <isekaijin> Oh.
[16:12:04] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[16:22:38] *** Quits: somiaj (~somiaj@fvwm/admin) (Ping timeout: 260 seconds)
[16:29:27] *** Joins: somiaj (~somiaj@fvwm/admin)
[16:34:39] *** Quits: Turingtoast (~Tino@200116b860ebd5002168c1cb8f062168.dip.versatel-1u1.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[16:35:13] *** Quits: arseniiv (~arseniiv@94.41.2.66.dynamic.ufanet.ru) (Ping timeout: 268 seconds)
[16:48:54] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:49:24] *** Joins: specing_ (~specing@user/specing)
[16:49:24] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[16:51:13] *** specing_ is now known as specing
[16:53:53] <[itchyjunk]> https://www.happyschools.com/bachelors-vs-masters-vs-phd/
[16:54:08] <[itchyjunk]> phd is a pertubation on a ball apparently
[17:00:20] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Quit: Leaving)
[17:00:31] <komorooodesssos> hi, how can i show that f\inC^k(\0mega) when f \in C^{k}(\Omega) and where have that |x(n)| <= C/(1+|n|)^k for all n where C and k are constants. x(n) is a fourier coefficient
[17:02:41] *** Joins: arseniiv (~arseniiv@94.41.2.66.dynamic.ufanet.ru)
[17:02:43] <Z-module> The two sets for f to be in look the same there, komorooodesssos
[17:02:44] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:03:06] <komorooodesssos> what do you mean?
[17:04:00] <Z-module> THe question had the form:  How can I show that f \in X  where  f \in X and ...
[17:04:42] <komorooodesssos> oh lol
[17:04:43] <komorooodesssos> yeah
[17:05:01] <komorooodesssos>  f\in L^2(\0mega) when f \in C^{k}(\Omega)
[17:05:04] <komorooodesssos> sorry
[17:05:18] <Z-module> Any assumption about the set Omega ?
[17:08:20] <Franciman> uhm, seems false in general if \Omega is not limited
[17:08:55] <Franciman> for example, \Omega = \mathbb{R}
[17:09:06] <Franciman> f(x) = x \in C^{k}(\mathbb{R})
[17:09:09] <isekaijin> Wait, the first time I understood the converse. I thought that you were assuming that your function is square-integrable, and wanted to prove that it is in C^k.
[17:09:14] <komorooodesssos> umm \Omega = [0,2*pi]
[17:09:35] <Franciman> ah very well komorooodesssos
[17:09:48] <Franciman> an easy way to show it is that f \in C^{k} means that f is continuous
[17:09:53] <Franciman> hence bounded on [0, 2*pi]
[17:09:54] <Franciman> so
[17:10:15] *** Joins: daoudr_ (~daoudr@gateway/vpn/pia/daoudr)
[17:10:29] <komorooodesssos> i thought i need so show actually what f is k times differentiable
[17:10:30] <Franciman> int |f|^2 dt <= ||f||^{2}_inf * (2pi)
[17:10:40] <isekaijin> komorooodesssos: The last thing you said suggested otherwise.
[17:10:53] <Z-module> you can be in L^2 without having even a single point of differentiability
[17:10:55] <Franciman> if f \in L^2(\omega) it's not true that it is continous
[17:11:04] <Franciman> for example
[17:11:17] <Franciman> the characteristic function of [1/2, 1]
[17:11:22] <Franciman> is L^2
[17:11:27] <Franciman> but not even continuous
[17:11:36] <komorooodesssos> bu we have this extra condition |x(n)| ≤ C(1 + |n|)^{−k−2}
[17:11:49] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[17:12:20] <Z-module> YOu asked for the conclusion f being in L^2([0, 2pi]), no?   That's automatic if f is continuous on [0, 2pi]
[17:12:29] <Franciman> I think they mean
[17:12:41] <Franciman> WAIT
[17:12:43] <Franciman> sorry
[17:12:44] <isekaijin> That is why I said he was probably trying to prove the converse.
[17:12:53] <Franciman> is x(n) the fourier coefficients of f ?
[17:13:00] <komorooodesssos> yes
[17:13:03] <Franciman> ok
[17:13:05] <Franciman> lol
[17:13:09] <komorooodesssos> sorry i said that earlier
[17:13:10] <Franciman> they are basically saying
[17:13:19] <Franciman> if the fourier series of f converges
[17:13:24] <Franciman> totally
[17:13:28] *** Quits: daoudr__ (~daoudr@2a02:1205:c690:ca10:cc28:1113:28f4:cbb8) (Ping timeout: 268 seconds)
[17:13:28] <Franciman> with respect to that thing
[17:13:39] <Franciman> then f is k times differentiable
[17:13:57] <Franciman> so let's reformulate the question, shall we?
[17:14:27] <Franciman> Given f \in L^2(T) such that |f(n)| <= C/(1 + |n|)^k
[17:14:41] <komorooodesssos>  if f\inL^2(\0mega) and we have that |x(n)| <= C/(1+|n|)^k for all n where C and k are constants then we have that f \in C^{k}(\Omega). x(n) is a fourier coefficient where \Omega = [0, 2pi]
[17:14:46] *** Joins: dutch (~DutchIngr@user/dutch)
[17:14:48] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[17:15:00] <Franciman> well
[17:15:24] <Franciman> x(n) fourier coefficient of f
[17:17:41] <komorooodesssos> i need to show that then f is cts on \Omega and its k th derivative  is cts
[17:17:42] <komorooodesssos> right?
[17:17:53] <Franciman> yes
[17:18:07] <Franciman> do you have any condition on k?
[17:18:13] <Franciman> like k >= 2
[17:18:20] <Franciman> o it works for any natural k?
[17:19:30] <komorooodesssos> yerr i was able to argue that f^k are cts on \Omega, but i didnt use the inequality assumption
[17:20:02] <Franciman> if k >= 2
[17:20:15] <Franciman> I think you can reason as follows
[17:20:21] <komorooodesssos> so i guess my argument is incorrect
[17:20:21] <Franciman>  the fourier series of f converges uniformly
[17:20:35] <Franciman> so you can do derivatives
[17:21:21] <Franciman> but let me think about it more
[17:21:44] <komorooodesssos> sure
[17:24:19] *** Joins: daoudr__ (~daoudr@2a02:1205:c690:ca10:cc28:1113:28f4:cbb8)
[17:24:33] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[17:26:58] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[17:27:23] *** Quits: daoudr_ (~daoudr@gateway/vpn/pia/daoudr) (Ping timeout: 264 seconds)
[17:32:58] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:39:10] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[17:40:58] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:c9db:88da:525a:13a1) (Quit: Textual IRC Client: www.textualapp.com)
[17:42:27] *** lpapp|office is now known as lpapp
[17:42:48] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:b850:1b43:885f:16e1)
[17:43:00] *** Joins: kajiryoji (~kajiryoji@180.160.59.123)
[17:50:55] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[17:51:57] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[17:53:55] *** Quits: Simplar (~quassel@188.163.92.225) (Ping timeout: 256 seconds)
[17:56:09] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[17:56:54] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:57:39] *** Quits: Arcorann (~A@user/arcorann) (Quit: Leaving)
[17:59:09] <TheHermann> what do you mean about phd? [itchyjunk]
[17:59:53] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:03:27] *** Joins: Turingtoast (~Tino@200116b860ebd5002168c1cb8f062168.dip.versatel-1u1.de)
[18:03:48] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[18:04:04] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[18:04:15] *** Joins: kish` (~aqua@user/aqua)
[18:05:59] *** Joins: lpo (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[18:06:14] *** Quits: X-Scale (~ARM@31.22.160.27) (Ping timeout: 260 seconds)
[18:06:45] <lpo> hi, https://codility.com/media/train/10-Gcd.pdf -> end of 12.3: they seem to write O(log(a*b)) = O(log (a+b)) -> I am surprised by that. How can log(a*b) = log(a+b)?
[18:07:20] <lpo> or since they do not put brackets, do they mean b + loga?
[18:07:55] *** X-Scale` is now known as X-Scale
[18:09:38] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[18:11:03] <greenbagels> lpo: they mean log a + log b
[18:11:06] <qergle> asymptotically, O(log(ab)) = O(log(a+b)).
[18:13:36] <lpo> qergle: ah, ok, thanks, never seen a*b written as a+b before, even in this context, thanks.
[18:14:42] *** Joins: sazawal (~sazawal@2401:4900:51d6:3714:57d9:77fb:e83d:d6ba)
[18:15:00] *** Quits: sazawal (~sazawal@2401:4900:51d6:3714:57d9:77fb:e83d:d6ba) (Remote host closed the connection)
[18:15:20] <int-e> max(a,b) <= a+b <= 2max(a,b) gives you O(log(a*b)) = O(max(log(a),log(b)) = O(log(max(a,b)) and also O(log(max(a,b))) = O(log(a+b)).
[18:15:54] <qergle> lpo: you can probably work out bounds in both directions, but might be easiest to consider the limiting behavior of log(a+b)/(log(a) + log(b))
[18:16:57] <lpo> yeah, I was wondering why they write (logn)^2 for big integers. Trying to work that out.
[18:16:57] <int-e> (assuming a,b >= 1 (or some  fixed positive number)... taking a = 1/b gives something funny)
[18:17:53] <qergle> i'd have to carefully read their alorithmic analysis, but they might be taking a very casual approach...
[18:18:14] <int-e> https://gmplib.org/manual/Subquadratic-GCD is fun (hmm why is gmp the fist thing that comes up)
[18:18:50] <lpo> qergle: do you know why it is (logn)^2?
[18:19:15] <greenbagels> do most people who need bignums use gmp or other libraries / language bindings that use gmp behind the scenes
[18:20:42] <greenbagels> because i can't imagine mathematicians using C directly
[18:20:50] *** Quits: Turingtoast (~Tino@200116b860ebd5002168c1cb8f062168.dip.versatel-1u1.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[18:21:12] <Galois> we use assembly directly
[18:21:22] *** Joins: Kaylah (~Kaylah@ptr-ekg3bnumwkc7irtgubs.18120a2.ip6.access.telenet.be)
[18:21:52] <greenbagels> Galois: very nice
[18:22:28] <Galois> https://github.com/microsoft/PQCrypto-SIKE/blob/master/Additional_Implementations/x64/SIKEp751/AMD64/fp_x64_asm.S
[18:23:09] *** Quits: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d) (Ping timeout: 268 seconds)
[18:23:22] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89e7:f55a:92fd:8abb)
[18:23:29] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[18:23:58] <Galois> the other option is Mathematica or sage or whatever, which supports big numbers natively
[18:24:21] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:25:38] <qergle> i'm surprised sage doesn't use gmp
[18:25:47] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:27:21] <isekaijin> Doesn't Python already support big integers natively anyway?
[18:27:56] <qergle> no
[18:28:20] <cherim> No in which sense?
[18:28:41] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e59c-51ba-07e6-ca2d.res6.spectrum.com)
[18:30:14] <isekaijin> https://pastebin.com/cVZrwD6q
[18:30:31] <isekaijin> Pretty sure 2^1000 does not fit in any standard machine integer type.
[18:33:07] *** Quits: RadSurfer (~RadSurfer@user/radsurfer) (Quit: Leaving)
[18:34:23] <riv> i use sagemath
[18:34:31] <riv> which is python + stuff, idk
[18:34:51] <isekaijin> greenbagels: Why would mathematicians be unable to use C?
[18:35:07] <riv> mathematicians would be too smart to waste their time using C?
[18:35:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89e7:f55a:92fd:8abb) (Quit: Leaving)
[18:35:18] <greenbagels> something like that
[18:35:45] <isekaijin> Writing C seems like a fun enough hobby.
[18:36:01] <isekaijin> “Okay, now prove that it has no memory management bugs.”
[18:36:03] <riv> yeah it is, C is really fun
[18:36:28] *** Joins: RadSurfer (~RadSurfer@user/radsurfer)
[18:36:36] <cherim> It's almost the opposite, every time mathematicians have to write something for large-scale number crunching, C is the most common choice
[18:36:39] <int-e> isekaijin: easy, just use static arrays
[18:36:59] <isekaijin> int-e: haha
[18:38:52] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[18:39:23] <qergle> ah, now i remember, i use gmpy2 for efficiency, not because of missing native support.
[18:40:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80:fbbe:75e0:a944:53e0)
[18:41:01] <isekaijin> Almost all the interpreted languages that are not outright dumb (*cough* JavaScript *cough*) support big integers anyway.
[18:41:15] <HisShadow> cherim: fortran could be a choice too, there's even MPI for it
[18:41:24] <DPA> JavaScript supports bigint
[18:41:36] <DPA> Just put an n behind the number. 100n
[18:41:58] <DPA> *BigInt
[18:42:01] <HisShadow> ESwhateveritisnow is quite advanced
[18:42:07] <isekaijin> Good to know that they finally came to their senses.
[18:42:23] <isekaijin> It is still awful that you need to add a qualifier to make your constant literal an integer.
[18:42:44] <isekaijin> Why can't 100 be an integer just like in any reasonable language?
[18:42:45] <DPA> You can't doo stuf like 100n/10. It all needs to be biging.
[18:43:03] <DPA> And the Math.* functions won't take them yet.
[18:43:22] <DPA> BUt stuff like 10n/5n works.
[18:43:29] <isekaijin> Did they also get rid of the other dumb stuff, like hoisting?
[18:43:57] <DPA> No. Even let technically does it.
[18:44:14] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[18:44:27] <DPA> But it's quiet nice that const now exists.
[18:45:13] <isekaijin> “const” is actually useless, just like “final” in Java.
[18:45:30] <isekaijin> The thing that needs to be constant is the object itself, not the variable that points to it.
[18:46:03] <isekaijin> But anyway, I will go back to reading this paper on “linearizations of algebraic group actions”.
[18:46:53] *** Joins: xelxebar (~xelxebar@aj173081.dynamic.ppp.asahi-net.or.jp)
[18:46:56] <DPA> I disagree. Const is very useful, it makes it easy to see something doesn't suddenly point to something new, and allows for all kinds of assumptions. The only bad thing is that it's not the default.
[18:47:03] <cherim> If you wnat to see how TheoreticalCS/math people write C, there is a program at the end of http://www.cs.cmu.edu/~guyb/realworld/papersS04/KaSa03.pdf
[18:47:56] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[18:48:09] <cherim> Typically it's either this or python-like pseudocode
[18:48:17] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[18:48:35] <DPA> (Making an object unchangeable is also possible to some extent. See Object.freeze, Object.seal, and the properties like configurable, writable & enumerable each property descriptor has.
[18:48:38] <isekaijin> DPA: To have a grasp of the relative usefulness of having constant pointers vs constant pointees, just look at how often “foo * const” is used in C vs. “const foo *”.
[18:49:12] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[18:49:19] <isekaijin> The former is used way less often. Precisely because it is way less useful.
[18:50:10] <riv> const is useful in C++ I think, not C
[18:50:19] <DPA> I write a lot of C. I use both variants. They are very useful. However, they would be more useful if they were the default. Like in rust, where you have to say mut, I think. (Although I don't write any rust)
[18:50:29] <greenbagels> riv: it's always useful
[18:51:16] <DPA> Imagine variables in a math funktion weren't const. Algebra wouldn't work at all anymore.
[18:51:32] <riv> thats literally what programming is like :P
[18:52:06] <DPA> True
[18:53:35] <isekaijin> DPA: Making a local variable constant gives you almost nothing. If someone cannot see whether a procedure changes a local variable, then they really have no business being a programmer. But it could be excusable if you are calling a method on an object, and you don't know / can't tell whether the method will mutate the object or not.
[18:54:58] <DPA> Knowing a variable is const makes it unnecessary to search for assignments. This massively speeds up understanding things, and avoids issues due to missing something.
[18:55:44] <isekaijin> And, since you mentioned Rust, this also shows up in Rust. Making a local variable “mut” or non-“mut” has no effect on its type. But a mutable reference (“&mut T”) and a non-mutable one (“&T”) have very different types.
[18:56:11] <isekaijin> Precisely because the latter distinction matters more than the former.
[18:56:38] <DPA> Yes, but you need to explicitly specify the mut, which allows for all kinds of assumptions for all the things that don't explicitly have it.
[18:57:11] *** Joins: gb73d (gb73d@host-92-7-42-10.as13285.net)
[18:58:03] <isekaijin> You could write a tool that replaces all the local “let”s with “let mut”s (or, conversely, replaces all the unnecessary “let mut”s with “let”s), and your program will compile just fine, no types will change.
[18:58:34] <isekaijin> But try replacing one “&” with “&mut” (or other way around), and then watch hell be unleashed upon the Earth.
[18:58:41] <isekaijin> or the* other way around
[19:00:03] <riv> damn you know rust
[19:00:12] <riv> ive been wanting to learn it for a while
[19:00:30] <isekaijin> It is useless for mathematics, though.
[19:00:57] <isekaijin> If I could, I would gladly trade the time I spent learning Rust for more time to read math papers.
[19:01:03] <isekaijin> Or playing gacha games, I don't know.
[19:03:54] <DPA> Don't bother with rust. It's a nightmare. I looked at it once, thinking let's just creating a simple data structure, a linked list, and I found horrendous things. Also, it's one of those languages where you write a Project in <language>, rather than just happening to have <language> in a project. It's tied to an ecosystem.
[19:04:21] *** Parts: lpo (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[19:04:39] <[itchyjunk]> your rust is rusty then
[19:05:13] <isekaijin> Rust is useless, except for one thing: measuring the brain of a programmer.
[19:05:43] <isekaijin> If a programmer cannot look at a program, and anticipate the kinds of errors that the Rust compiler would complain about, then they need to git gud, sorry.
[19:06:28] <riv> i just find PLs very interesting
[19:07:03] <DPA> Regarding const, it's a form compilers often bring all local variables in, because it makes things simpler: https://en.wikipedia.org/wiki/Static_single_assignment_form
[19:07:26] <Plazma> isekaijin: i dunno, people bitch for years about cryptic error messages even seasoned programmers, and then finally they get something that does better, people find a reason to complain
[19:07:33] <Plazma> not a rust fan by any means, but regardless
[19:08:32] <HisShadow> isekaijin: I think dalcde would disagree it is useless for maths
[19:08:49] <isekaijin> Plazma: I just meant to say “a programmer should be able to think about who owns what, who has to do the cleanup”.
[19:09:20] *** Quits: menace (~someone@user/menace) (Remote host closed the connection)
[19:09:22] *** Joins: Simplar (~quassel@188.163.92.225)
[19:10:23] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[19:10:48] <Plazma> isekaijin: while i agree, the counter arguement is why not let the machine/compilers do that, since they can usually do it better than a human
[19:11:07] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[19:11:12] <DPA> In C, that can often be avoided using conventions. In Java, the language takes care of GCing things (things just shouldn't unnecessarelly hold onto things). In rust, even if I know something is fine, I have to decide between restructoring it, or marking it unsafe,
[19:12:07] <isekaijin> DPA: Since when did Java gain the magical ability to automatically .finalize() objects in a timely fashion, without you telling it to?
[19:12:23] <vqueiroz> How do we call the .[0-9] part of a number? (i.e. given 1.20, I want to know how to call the .20 part)
[19:12:31] <isekaijin> vqueiroz: Decimal part.
[19:12:31] <riv> vqueiroz: the fractional part
[19:12:49] <isekaijin> Oh, fractional part is a better term, I guess.
[19:12:51] <vqueiroz> Thank you guys. fractional part makes more sense
[19:12:59] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[19:12:59] *** Joins: menace (~someone@user/menace)
[19:13:00] <vqueiroz> isekaijin: Yes, but thank you still for the quick reply
[19:13:23] *** Joins: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d)
[19:13:43] <HisShadow> vqueiroz: there's also a function notated as {x} that equals to the fractional part of x
[19:14:12] <DPA> There is a difference between setting ref=null and having to decide when to free the ref entirely. If you do the former in java, it's usually enough. (although there may be edge cases). That happening timely is another issue entirely. It would have been possible, but not efficient.
[19:14:48] *** Joins: XCode (~XCode@d108-173-59-218.abhsia.telus.net)
[19:14:58] <XCode> hi
[19:15:35] <DPA> (The JS gc does a better job than the java GC, though.)
[19:17:36] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[19:17:45] <lpapp> hi, in 12.3: https://codility.com/media/train/10-Gcd.pdf -> what does "res" abbreviate?
[19:18:00] *** justUnited is now known as justCity
[19:20:05] <isekaijin> They have just made the algorithm tail recursive, and “res” is an accumulator.
[19:20:27] <int-e> without looking, res = result, presumably
[19:20:37] <isekaijin> Mmm, wait.
[19:20:47] <lpapp> res, is not the result
[19:20:52] <lpapp> it returns the result in the return value
[19:21:02] <lpapp> res is a parameter, not output argument.
[19:21:07] <lpapp> worth looking
[19:21:08] <int-e> resolution?
[19:21:17] <lpapp> resolution of what?
[19:21:34] <riv> res is short for result
[19:21:38] <lpapp> to me, this looks like a multiplier of some sort.
[19:21:45] <lpapp> it cannot be
[19:21:50] <lpapp> since it is an input argument, not output
[19:21:59] <lpapp> result is an output of a function, which is the return value here.
[19:22:19] <int-e> nah, it's a partial result that collects the power of 2 that has been identified as a commone factor
[19:22:41] <lpapp> nope
[19:22:45] <lpapp> it is not even a partial result
[19:22:54] <lpapp> partial result is returned in the nested function call as return value
[19:24:28] <riv> return gcd(a // 2, b // 2, 2 * res)
[19:24:31] <isekaijin> lpapp: int-e is right. Whenever “a” and “b” are both even, the algorithm replaces “res” (in the next call) with “res * 2” (in the previous call), so “res” is always to “2^k”, where “k” is “how many times did we extract a common factor 2?”
[19:24:34] <riv> when they do this, they are doubling the result
[19:24:39] <lpapp> it is literally unused actually.
[19:24:45] <isekaijin> It is not unused.
[19:24:48] <riv> its used on line 3 return res * a
[19:24:52] <riv> as part of the result
[19:25:01] <int-e> I'm pretty confident in my guess. Of course naming variables is hard, and this name isn't ideal.
[19:25:26] <isekaijin> The best names are \alpha, \beta, \gamma, \sigma, \tau, etc. as every mathematician knows.
[19:25:35] <lpapp> yes, I think it is a multiplier.
[19:25:51] <lpapp> so, the name result is probably wrong.
[19:26:09] <lpapp> Although I have a gut feeling that they meant something else the result, it probably abbreviates something else.
[19:26:12] <lpapp> Just not sure what.
[19:26:15] <isekaijin> Have you tried running the algorithm by hand, or through a debugger, to see what happens?
[19:26:21] <lpapp> than*
[19:26:36] <isekaijin> printf debugging is wonderful
[19:26:41] *** Joins: Trigo (~NeedMathH@64.201.115.44)
[19:26:47] <lpapp> no, as you can see this is not C ...
[19:26:54] <lpapp> and it does not need to debugging.
[19:27:01] <lpapp> -to
[19:27:06] <isekaijin> printf debugging is not just for fixing bugs
[19:27:12] <lpapp> if you have no clue either, that is fine.
[19:27:18] <lpapp> but this is definitely not the result.
[19:27:26] <lpapp> it is a multiplier.
[19:29:20] <lpapp> I liked accumulator also better than "result"
[19:29:36] <lpapp> but I still have a got feeling that they abbreviate some other English word with the prefix res :)
[19:30:08] *** Quits: mbuf (~Shakthi@122.178.124.224) (Quit: Leaving)
[19:31:37] *** Quits: orbatos__ (~orbatos@user/orbatos) (Quit: Leaving)
[19:31:51] *** Joins: Decker (~d3x0r@ip68-96-102-241.lv.lv.cox.net)
[19:32:23] <int-e> there's a non-zero chance that this is paraphrased from imperative code that started with  int res = 1; while (a != b) { lots of ifs... }; res *= a; return res;
[19:32:26] <riv> result 100%
[19:33:10] <lpapp> result 100% wrong concept here though
[19:33:26] <riv> no
[19:33:28] <lpapp> since it is simply not a result, but a multiplier and/or accumulator.
[19:33:28] <lpapp> yes
[19:33:32] <riv> you suck
[19:33:45] <lpapp> eoe
[19:33:46] <lpapp> wow
[19:33:51] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[19:33:52] *** Joins: magla (~gelignite@55d4a5c9.access.ecotel.net)
[19:34:49] <int-e> this is why you name variables a,b,c,...,z,aa,ab, and so on
[19:35:02] * int-e runs
[19:35:14] * greenbagels baps int-e with a newspaper
[19:35:27] <greenbagels> bad
[19:36:02] <int-e> exercise: how many variables will you run through before getting to something controversial like `res`?
[19:36:17] <int-e> greenbagels: okay then, how about a,b,aa,ab,ba,bb,aaa,...
[19:36:19] <greenbagels> an exercise in base-26 math?
[19:36:26] <Decker> all of them
[19:36:31] <greenbagels> free group inspired variable names
[19:36:33] <greenbagels> fantastic
[19:36:55] <int-e> greenbagels: and an invitation to about half a dozen off-by-one errors, at least one of which is an ambiguity in the problem statement
[19:37:33] <int-e> (I'm not sure myself whether 'res' should be counted or not given that phrasing)
[19:37:33] <HisShadow> int-e: you can use emojis as variable names now too
[19:37:58] <HisShadow> int-e: old plain ascii is just boring with the possibilities of Unicode
[19:38:32] <int-e> HisShadow: ugh you reminded me of that Trojan Code hype
[19:40:15] <greenbagels> wasn't that one of Swift's big taglines
[19:40:20] <greenbagels> "look at our emoji variable names"
[19:41:15] <Decker> good for visual programming in K-4 grades
[19:41:47] *** Joins: soapsudsxx (~soapsudsx@209.221.40.144)
[19:43:18] <isekaijin> I think the main reason why this gcd function is unclear is that, for example, when you reach the case where a is odd, then the case where a and b are both even is no longer reachable from future iterations. But the way the code is written does not exploit this fact.
[19:46:00] *** Parts: savask (~savask@Powder/Developer/savask) ()
[19:46:29] *** Joins: tacegory (~tacegory@user/tacegory)
[19:46:32] <int-e> I'm still baffled by wtf happened there... all because of a poorly chosen variable name. Which... are just a fact of life.
[19:46:42] <isekaijin> ikr
[19:48:29] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[19:49:24] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:49:39] *** Joins: seninha (~seninha@user/seninha)
[19:49:56] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:6941:f4b7:dcee:b476)
[19:50:38] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[19:51:06] <HisShadow> int-e: what Trojan Code hype
[19:53:29] <isekaijin> So this is how I would have written it: https://pastebin.com/12yashNL
[19:54:33] *** Joins: cadmio (~cadmio@151.57.230.21)
[19:54:56] <cadmio> Hello
[19:55:07] <int-e> isekaijin: that's not good. note how b-a and a-b are even so they should be divided by 2 again.
[19:55:18] <int-e> and if you don't you get bad worst case behavior
[19:55:25] <isekaijin> int-e: Oh.
[19:55:27] <isekaijin> You are right.
[19:55:55] <isekaijin> I was assuming that the algorithm would never return to the phase 1 after exiting it.
[19:56:01] <isekaijin> But it does! Thanks for pointing it out.
[19:56:13] <Decker> isekaijin // ? is that super divide?
[19:56:26] <isekaijin> Decker: Python uses // to denote integer division.
[19:56:34] <Decker> ahh
[19:56:36] <int-e> isekaijin: it returns to phase 2; it's true that a and b will never be even again simultaneously
[19:56:37] <cadmio> I'm not sure about the part in bold at the bottom http://mathb.in/67195 . why is it necessary that O(S) does not divide m to have a suborbit of 1 element?
[19:56:52] <isekaijin> int-e: Oh.
[19:56:59] <riv> cadmio: consider p + p + p^2 + p^3, it's a multiple of p right
[19:57:09] <isekaijin> int-e: Right, precisely because a and b are both odd, |a - b| is even. You are right.
[19:57:09] * int-e is wondering how to fit a = 0 or b = 0 nicely into that code
[19:57:12] <riv> cadmio: now consider 1 + p + p + p^2 + p^3, it's NOT a multiple of p
[19:57:26] <isekaijin> int-e: Then I have to merge phase 2 and phase 3.
[19:58:03] <cadmio> riv: yes but that seems not related to 'm'
[19:58:54] <isekaijin> int-e: Actually, now that I think about it, I could just replace “a - b” with “(a - b) // 2”, right? Similarly with “b - a”.
[19:59:00] <int-e> (I mean dealing with gcd(a,0) = a and gcd(0,b) = b... you can do that up-front if you like)
[19:59:00] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[19:59:12] <isekaijin> In phase 3, I mean.
[19:59:14] <int-e> isekaijin: it could be divisible by 2 several times
[19:59:21] <Decker> https://pastebin.com/zXAMxMv3 isekaijin :)  4 line version?
[19:59:23] <isekaijin> Oops. Right.
[19:59:28] *** Joins: palasso (~palasso@user/palasso)
[19:59:32] <isekaijin> int-e: Then phase2(a - b) and phase2(b - a).
[19:59:48] <int-e> isekaijin: yeah that works
[20:00:19] <isekaijin> But the phases are no longer nicely linearly ordered.
[20:02:14] *** Quits: DoYouKnow (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net) (Remote host closed the connection)
[20:05:20] <int-e> yeah there's really just 2 phases, not 3.
[20:05:27] *** Joins: Turingtoast (~Tino@200116b860ebd50040a64bcff0d036e0.dip.versatel-1u1.de)
[20:06:12] <isekaijin> Right.
[20:06:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:07:11] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:07:27] <isekaijin> Okay, now with better names: https://pastebin.com/Yt7TLZfq
[20:10:52] *** Joins: mei32 (~mei@user/mei)
[20:13:50] *** Joins: lavaball (felix@31.204.155.215)
[20:14:47] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 264 seconds)
[20:14:47] *** mei32 is now known as mei3
[20:15:35] <lavaball> i started here: 1/(x^2 - x) = 1/(x^2 - 1) + 1/(x^2 + x ), ended up here:  x^4 - 2x^3 - x^2 + 2x = 0. divide by x and now i have: x^3 - 2x^2 + 2 = 0.  what do i do now?
[20:16:20] <mawk> what do you want to do
[20:16:29] *** Parts: cadmio (~cadmio@151.57.230.21) (WeeChat 3.0)
[20:16:39] <mawk> equate it to 0 ?
[20:16:56] <Z-module> It would have been better to multiply first not by the product of the denominators, but instead by their LCM which is  x(x + 1)(x - 1)
[20:17:06] <Z-module> better in the sense of making things simpler to work withj
[20:17:43] <Z-module> doing what I said results in a simple linear equation
[20:17:47] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[20:18:17] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[20:19:31] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[20:19:55] *** Joins: jason1234 (fltk@thunix.net)
[20:20:00] <jason1234> hi
[20:20:17] <jason1234> how was calculating EINSTEIN.?? he was said to perform calc in mind way differenetly than others?
[20:21:33] <lavaball> Z-module, how do you come to x(x+1)(x-1). if i do that i have x(x-1) x(x+1) and i don't know what to do with x^2 -1.
[20:21:47] *** Joins: nullcone (uid11626@id-11626.helmsley.irccloud.com)
[20:22:14] <Z-module> I first factored each denominator. They are, in order: x(x - 1),  (x + 1)(x - 1),  x(x + 1)
[20:22:45] <Z-module> each of them is a product of two distinct things in { x,  x + 1,  x - 1 }
[20:22:48] <Z-module> so it works out very nicely
[20:22:56] <lavaball> for you maybe!
[20:23:12] <lavaball> i still don't get (x+1)(x-1) ohh. no got it.
[20:23:17] <lavaball> okay.
[20:23:18] <lavaball> let me think.
[20:24:47] <lavaball> no, wait, shouldn't x oh ,right, no we have -x and +x so it cancels each other out.
[20:26:02] <Z-module> In general,  (a + b)(a - b) = a^2 - b^2   and this is something you need to really know. It comes up ALL the time.
[20:26:29] <lavaball> the binomials, heard of them. i skipped 4 classes, so i never actually had them.
[20:26:34] <Z-module> best of all, it's true in every single commutative ring in the universe
[20:26:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:fbbe:75e0:a944:53e0) (Remote host closed the connection)
[20:26:53] <lavaball> don't bring the universe into it.
[20:26:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[20:27:08] <Z-module> okay, every single commutative ring in the Milky Way
[20:27:09] *** Quits: Turingtoast (~Tino@200116b860ebd50040a64bcff0d036e0.dip.versatel-1u1.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:27:15] <lavaball> funny guy, i see.
[20:29:15] <cherim> We need offshore commutative rings
[20:29:17] <lavaball> so since you can pull out those factors, x(x+1)(x-1) i should just multiply by those. and then i get what do i get then?
[20:29:24] <Decker> https://ibb.co/q7wPCDR I was playin with spherical harmonics, if I was to add another stimulation point, that had a 180 degree opposed antinode, it would obviously fit in one of the 4 diagonals, but how would the other points move equi-potentially from each other?  I guess it'd be a tetrahdra inscribed in a sphere
[20:30:11] <Decker> hmm 5 pointed solid?  a pyramid (square baes and a point?)
[20:34:15] <Z-module> lavaball: call those three things I listed A, B, C.  Your equation is  1/(AC) = 1/(BC) + 1/(AB).   Mutlipying through by ABC gives   ABC/(AC) = ABC/(BC) + ABC/(AB)  or   B = A + C
[20:35:03] <lavaball> then you can strike out the top and bottom matches.
[20:35:06] <lavaball> so no more fractions.
[20:35:08] <lavaball> i think i got it.
[20:35:14] <lavaball> thanks so much for your help.
[20:35:38] <Z-module> quite welcome
[20:35:52] <lavaball> seriously though. i bet you solve much harder things on a daily basis, but this is top shelf for me.
[20:36:03] <lavaball> so thanks again.
[20:40:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 264 seconds)
[20:53:10] *** Joins: vysn (~vysn@user/vysn)
[20:57:20] *** Joins: StormGlass (~CraigDurh@2604:2d80:af07:5300:accd:fbab:7513:2aa0)
[20:57:25] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Read error: Connection reset by peer)
[20:57:48] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[20:59:32] *** Joins: mononote (~mononote@user/mononote)
[21:01:53] *** Parts: mononote (~mononote@user/mononote) ()
[21:03:36] *** Quits: Kaylah (~Kaylah@ptr-ekg3bnumwkc7irtgubs.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[21:05:15] *** Quits: xelxebar (~xelxebar@aj173081.dynamic.ppp.asahi-net.or.jp) (Quit: WeeChat 3.3)
[21:11:31] *** yotsuba-chan is now known as yotsuba
[21:11:38] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[21:14:42] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[21:15:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:15:37] *** Joins: MirrorGate (~CraigDurh@2604:2d80:af07:5300:accd:fbab:7513:2aa0)
[21:18:59] *** Quits: StormGlass (~CraigDurh@2604:2d80:af07:5300:accd:fbab:7513:2aa0) (Ping timeout: 264 seconds)
[21:19:45] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[21:20:09] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[21:20:19] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Read error: Connection reset by peer)
[21:20:23] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:20:41] *** Quits: MirrorGate (~CraigDurh@2604:2d80:af07:5300:accd:fbab:7513:2aa0) (Quit: Konversation terminated!)
[21:21:35] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Remote host closed the connection)
[21:21:55] *** Parts: ScRamble (~S@na.altplay.net) (Möbius strip)
[21:21:59] *** Joins: ScRamble (~S@na.altplay.net)
[21:23:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:25:03] *** Quits: gb73d (gb73d@host-92-7-42-10.as13285.net) (Ping timeout: 268 seconds)
[21:25:07] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[21:27:21] *** Joins: Papa_ (~papa@user/papa)
[21:28:25] *** Parts: lavaball (felix@31.204.155.215) ()
[21:29:17] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[21:29:19] *** Joins: econo (uid147250@user/econo)
[21:46:05] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[21:48:44] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:49:39] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[21:50:20] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[21:51:57] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:54:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[21:54:09] *** Joins: qu4nt1n|3 (~qu4nt1n@78.198.214.34)
[21:55:53] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 256 seconds)
[21:56:02] *** Joins: DarthVader_R2D2_ (~user@2001:1c03:670c:4000:b751:91a7:1db6:d205)
[21:58:15] *** Parts: ScRamble (~S@na.altplay.net) (Möbius strip)
[21:58:44] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[21:59:27] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[22:00:31] *** Quits: qu4nt1n|3 (~qu4nt1n@78.198.214.34) (Ping timeout: 245 seconds)
[22:02:44] *** Quits: jellydonut (~quassel@185.213.154.170) (Quit: jellydonut)
[22:06:48] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[22:07:16] *** Joins: gb73d (~gb73d@host-92-7-42-10.as13285.net)
[22:07:40] *** Quits: gb73d (~gb73d@host-92-7-42-10.as13285.net) (Client Quit)
[22:07:54] *** Joins: qu4nt1n (~qu4nt1n@80.214.114.62)
[22:08:00] *** Joins: ScRamble (~S@na.altplay.net)
[22:08:33] *** Joins: gb73d (~gb73d@host-92-7-42-10.as13285.net)
[22:08:49] *** Joins: jellydonut (~quassel@185.213.154.170)
[22:15:27] *** Quits: qu4nt1n (~qu4nt1n@80.214.114.62) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[22:15:57] <qergle> we solve elementary school fractions for free, on sundays
[22:16:08] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[22:16:42] *** Quits: chasmo77 (~chas77@71.63.241.168) (Remote host closed the connection)
[22:19:36] <johnkeats6> i remember in elementary school when we learned fractions eating pizza
[22:19:42] <johnkeats6> good times
[22:20:44] <qergle> is brazilian pizza also round?
[22:22:08] <johnkeats6> yes. tho there's a place around the corner that makes a square one
[22:23:11] *** Joins: Samian (~s@user/samian)
[22:24:23] *** Quits: menace (~someone@user/menace) (Remote host closed the connection)
[22:24:42] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[22:24:52] <tusko> brazilian bubble butts are round
[22:26:23] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:31:27] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Remote host closed the connection)
[22:31:44] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[22:32:00] <greenbagels> wtf
[22:32:46] *** Joins: kish` (~aqua@user/aqua)
[22:37:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Remote host closed the connection)
[22:38:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2315:e7f0:55c7:7d49)
[22:38:26] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[22:41:39] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361)
[22:42:31] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361) (Remote host closed the connection)
[22:42:36] *** Joins: BrownJenkin (~falconsti@2001:470:69fc:105::36d)
[22:42:58] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361)
[22:44:46] *** Quits: Simplar (~quassel@188.163.92.225) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:45:14] *** Quits: Inline (~Inline@2a02:908:1252:7a80:2315:e7f0:55c7:7d49) (Ping timeout: 268 seconds)
[22:46:18] *** Quits: zacts (~zacts@user/zacts) (Quit: leaving)
[22:48:32] <tolarz> yeah, wtf.
[22:49:16] *** Joins: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu)
[22:49:19] *** Parts: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu) ()
[22:51:44] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[22:55:42] *** Quits: xff0x (~xff0x@port-92-193-130-240.dynamic.as20676.net) (Ping timeout: 268 seconds)
[22:57:15] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[22:58:26] *** Quits: Matt|home (~matt@adsl-74-233-58-34.mia.bellsouth.net) (Ping timeout: 260 seconds)
[23:02:11] *** Joins: xff0x (~xff0x@2001:1a81:52ec:e600:16f0:b06d:ec81:fca7)
[23:04:26] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Quit: menace)
[23:09:24] *** Joins: damxsa (~damx@2001:16a2:df3c:b500:52e7:1c66:409b:139f)
[23:09:25] *** Joins: andreasbuhr (~quassel@p548dde89.dip0.t-ipconnect.de)
[23:11:31] *** Joins: damxsa_ (~damx@2001:16a2:df3c:b500:fcfd:fe1a:694f:da85)
[23:11:47] *** Joins: Matt|home (~matt@adsl-74-233-58-208.mia.bellsouth.net)
[23:12:35] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[23:13:07] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:13:24] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[23:13:35] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[23:14:49] *** Quits: damxsa (~damx@2001:16a2:df3c:b500:52e7:1c66:409b:139f) (Ping timeout: 268 seconds)
[23:15:54] *** Joins: sedeki (~textual@user/sedeki)
[23:17:18] *** Quits: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d) (Ping timeout: 268 seconds)
[23:17:27] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[23:25:53] *** Quits: damxsa_ (~damx@2001:16a2:df3c:b500:fcfd:fe1a:694f:da85) (Quit: Leaving)
[23:26:33] *** Joins: seninha (~seninha@user/seninha)
[23:27:46] *** Quits: xff0x (~xff0x@2001:1a81:52ec:e600:16f0:b06d:ec81:fca7) (Ping timeout: 260 seconds)
[23:35:29] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Remote host closed the connection)
[23:35:54] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[23:38:08] *** Joins: phao (~phao@2804:d45:8e7a:de00:10a0:21c4:74dc:fba7)
[23:39:48] *** Joins: xff0x (~xff0x@2001:1a81:52ec:e600:16f0:b06d:ec81:fca7)
[23:39:49] *** Quits: stipa (~stipa@user/stipa) (Quit: WeeChat 3.3)
[23:40:06] *** Joins: Lawgiver (Lord@2601:18a:c000:5290:7044:9730:5757:334b)
[23:40:07] *** Joins: stipa (~stipa@user/stipa)
[23:41:40] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:42:34] *** Quits: Panther (Lord@2601:18a:c000:5290:415e:fe2b:87e9:2665) (Ping timeout: 268 seconds)
[23:46:43] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[23:48:07] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[23:48:30] <twoisprime> 15 students are each going to enroll in exactly one of economics, psychology, or sociology. In how many ways can they enroll, provided that no class is left empty?
[23:49:04] <twoisprime> If we assume the students to be indistinguishable, we just have C(14,2), but we can't so is there any way to find what we have to multiply by to account for them being distinguishable?
[23:49:18] <twoisprime> C(14,2) is just the solution to e + p + s = 15, where e,p,s > 0
[23:49:25] *** Quits: stipa (~stipa@user/stipa) (Quit: WeeChat 3.3)
[23:49:43] *** Joins: stipa (~stipa@user/stipa)
[23:55:12] <riv> each student is given either e, p, s
[23:55:20] <riv> so 3^15 ?
[23:55:33] <riv> >provided that no class is left empty
[23:55:39] <riv> oh we have to deal with this..
[23:56:16] <riv> you could subtract off the assignments that only have e, only have p, only have s, only have e,p, only have e,s, et.c
[23:56:31] <riv> 3^15 - 3 - 3 * 2^15 I think
[23:56:46] *** Quits: micronn (~micronn@user/micronn) (Quit: brb)
[23:57:20] *** Joins: micronn (~micronn@user/micronn)
[23:57:26] <riv> it's tempting to pick 3 students, one for each of the 3 classes, put them in.. then assign the rest without worrying about emptyness - but it overcounts
[23:57:58] *** Joins: AimHere (~David@vpn-fn-229.net.ed.ac.uk)
[23:58:15] *** Lawgiver is now known as Panther
[23:58:51] *** Quits: ua_ (~ua@public-gprs232877.centertel.pl) (Ping timeout: 256 seconds)
[23:59:53] <riv> (that's where e + p + s = 15 goes wrong)
