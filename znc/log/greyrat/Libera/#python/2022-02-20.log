[00:00:18] *** Quits: drbeco (~beco@2804:351c:dd03:4500:a332:d74e:8d17:e625) (Ping timeout: 260 seconds)
[00:00:21] *** Joins: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com)
[00:00:28] *** Quits: nicoz (nicoz@nicoz.letz.dev) (Quit: Pang timeout)
[00:00:36] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[00:01:36] *** Quits: purple_cthulhu (~rax@2.186.4.24) (Quit: Leaving.)
[00:01:59] *** Joins: gitly (~gitly@185.69.144.241)
[00:02:26] *** Joins: ofl^ (~ofl@50.233.120.162)
[00:02:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:02:33] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[00:03:30] *** Quits: dme86_ (~dan@user/dan86) (Ping timeout: 256 seconds)
[00:04:02] *** Joins: hyiltiz (~quassel@31.220.5.250)
[00:04:50] *** Joins: drbeco (~beco@2804:351c:dd03:3500:e47a:cfbe:a980:776b)
[00:05:48] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 240 seconds)
[00:06:00] *** Joins: dme86 (~dan@user/dan86)
[00:06:56] *** Joins: trace987 (~trace@user/trace)
[00:07:21] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:07:24] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 250 seconds)
[00:07:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:07:42] *** Joins: jmd (~user@de.cellform.com)
[00:08:12] *** Joins: crashrep (~crashrep@user/crashrep)
[00:08:42] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:09:10] *** Joins: jmd (~user@de.cellform.com)
[00:09:22] *** Joins: nicoz (nicoz@nicoz.letz.dev)
[00:09:51] *** Joins: filename (~kilitary@185.193.143.131)
[00:09:58] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:10:32] *** Joins: jmd (~user@de.cellform.com)
[00:10:33] *** Joins: xeyes (~user@user/duuude)
[00:11:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:914:d3a6:c56f:5cc8) (Quit: Client closed)
[00:11:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[00:11:55] *** Quits: filename (~kilitary@185.193.143.131) (Client Quit)
[00:12:13] *** Quits: rya (~ry@user/rya) (Remote host closed the connection)
[00:12:52] *** Quits: control (~v1@user/control) (Quit: leaving)
[00:12:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[00:13:45] *** linuxdaemon_ is now known as linuxdaemon
[00:14:00] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:14:05] *** Joins: filename (~kilitary@185.193.143.131)
[00:14:36] *** Joins: parv (~quass@user/parv)
[00:16:49] *** Quits: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com) (Quit: WeeChat 3.4)
[00:17:03] *** Quits: paul424 (~tom@ip-5-172-234-213.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:17:14] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:19:12] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[00:19:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:19:20] <foo> hmm, wonder if it's worth fixing these warnings: https://bpa.st/2MZQ
[00:19:59] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:20:27] <mefistofeles> foo: can't hurt, those are pretty commonly used things that you might want to get into your python distribution
[00:20:45] <foo> mefistofeles: thanks, I'm on ubuntu, will see what I need to apt-get
[00:20:56] <mefistofeles> foo: probably the dev packages for those things
[00:20:58] <mefistofeles> is my guess
[00:21:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:21:53] <foo> mefistofeles: yeah. Do I need to do pyenv install 3.10.2 again after installing them I wonder? Hmm
[00:22:07] *** Parts: switchnode (~switchnod@2601:240:d200:fef:82fa:5bff:fe19:f8e4) (ollies out)
[00:22:24] <mefistofeles> foo: ye
[00:22:25] <mefistofeles> yes*
[00:22:33] <foo> mefistofeles: ok, thanks, will do this. I've seen these package names before
[00:22:35] <foo> and have a sense of them
[00:22:53] <foo> Woohoo, sub 24 hours to move from python 3.6 to python 3.10
[00:23:01] <foo> perhaps I should wait until this is in production haha
[00:23:02] *** Quits: FabTG (~ftg@120.ip-51-178-81.eu) (Ping timeout: 240 seconds)
[00:23:08] <foo> ... and 1 week passes and we've had no issues
[00:23:08] <foo> heh
[00:23:21] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:24:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[00:24:55] *** Quits: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net) (Read error: Connection reset by peer)
[00:25:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:25:35] <mefistofeles> foo: haha, well, it's still py3, but sure, it's better to test this as much as possible
[00:26:09] <foo> mefistofeles: true. :) I've already ran through most things manually... we're still building up our tests. reallllyy looking forward to having that done
[00:27:09] <mefistofeles> foo: nice
[00:29:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[00:29:50] <foo> mefistofeles: great, uninstalled and installed again, no warnings. Thanks again.
[00:30:38] <foo> Not sure if this is common but I started naming my venv with python version. eg. venv3.10.2
[00:30:46] <foo> At least during this migration.
[00:32:41] *** Joins: ntome (~ntome@user/ntome)
[00:32:43] <ntome> hi
[00:33:03] <mefistofeles> foo: I don't really do that, but sure, if that works for you
[00:33:05] <ntome> it seems PYTHONIOENCODING sets the encoding of std*
[00:33:06] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[00:33:22] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:33:23] <ntome> but how to set the default encoding of open()?
[00:33:44] <ntome> (without modifying the code)
[00:34:21] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:34:49] <ntome> the use case, i have an app using fileinput.input(), but the files i'm passing may be in a different encoding than utf-8, else it fails
[00:35:39] *** Joins: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581)
[00:35:43] <ntome> with PYTHONIOENCODING i can choose the proper encoding of the file i'm passing as stdin, i'd like to have the same without using stdin
[00:35:47] <mefistofeles> ntome: so, open() wouldn't handle this, but rather how you read the contents/strings of the file
[00:35:58] *** Quits: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581) (Read error: Connection reset by peer)
[00:36:14] <mefistofeles> by default python does unicode, but you can use others by using decode/encode capabilities of python strings
[00:36:29] <ntome> mefistofeles: i don't control the source of the app
[00:36:36] *** Joins: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581)
[00:37:22] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[00:37:24] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Ping timeout: 240 seconds)
[00:38:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:38:23] <ntome> it seems python has a builtin way for handling stdin encoding without requiring special support in an app, is there something equivalent for files?
[00:38:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:38:36] *** Joins: nrg (~NRG@user/nrg)
[00:38:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:39:03] *** Joins: wyclif (~wyclif@user/wyclif)
[00:39:21] <jinsun> open uses the encoding returned by locale.getpreferredencoding if you don't specify
[00:39:39] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:40:07] *** Joins: blackleitus (~blackleit@189.195.195.100)
[00:40:51] *** Quits: nicoz (nicoz@nicoz.letz.dev) (Changing host)
[00:40:51] *** Joins: nicoz (nicoz@ubuntu/member/nicoz)
[00:41:19] <ntome> so i could control it with LANG=something.encoding?
[00:41:40] <jinsun> or PYTHONCOERCECLOCALE maybe
[00:42:44] <jinsun> ideally you'd send them a pull request and make the configurable, locale stuff is weird and hard to get right
[00:42:59] *** Joins: Klinda (~superleag@user/klinda)
[00:43:06] <caveman> when does a asyncio task run?  upon calling the task with await?
[00:43:16] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[00:45:36] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:45:40] <bjs> caveman: asyncio Tasks are just in-progress `async def`s,  asyncio just runs a loop that runs one `async def` until it await something, then switches to another that's ready to run
[00:46:25] <caveman> when we `task = create_task(lol())`, will `lol()` get called except for getting paused as if asyncio.sleep(indefinite) happened early on?  then that pause will end when i say `await task`?
[00:46:42] *** Joins: baba (~baba@197.184.176.187)
[00:46:59] <baba> hi guys
[00:47:06] <bjs> caveman: create_task just adds the coroutine to the big bag of coroutines asyncio knows about
[00:47:12] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:47:24] <bjs> caveman: the coro that's actually running is the thing that called create_task and it will still be running as that's not an await
[00:47:33] <bjs> caveman: I'm not really sure what you mean by "pause"
[00:47:39] <nedbat> caveman: that won't run any code inside lol() until the task is awaited
[00:48:02] <bjs> caveman: in the asyncio world, only 1 `async def` is running at a time.
[00:48:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[00:49:17] <caveman> so it's just an easy way to schedule tasks in a single thread
[00:49:29] <bjs> caveman: yes.
[00:49:43] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:49:54] <bjs> that's all asyncio is really, a little scheduler
[00:50:10] <caveman> nedbat: i wonder how is it implemented internally.  is there like an internal pause inside the `async def lol(): ...`?
[00:50:12] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:50:15] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[00:50:23] <bjs> caveman: are you familiar with generators?
[00:51:05] <caveman> sort of.  they spit data every time they're called?
[00:51:08] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[00:51:33] *** Joins: korg815 (~korg815@user/korg815)
[00:51:35] <bjs> caveman: hmm, well the idea here is that when you call lol() it doesn't run lol's code instead it returns a "coroutine", which is like a "paused function"
[00:52:04] <bjs> you can continue the function, which runs it until the next await (like a generator with `yield`s).
[00:52:38] *** Joins: OP-0 (~pca290122@94.134.227.107)
[00:52:47] <caveman> `mytask = asyncio.create_task(lol(x,y,z))` means that i specified also the arguments of lol(), right?
[00:53:01] <bjs> caveman: yes, but lol(x,y,z) doesn't actually run lol's code
[00:53:02] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[00:53:10] <caveman> yes.  i get that part.  thanks.
[00:53:28] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[00:53:32] <bjs> caveman: the coroutine it returns instead can be used to run the code until an `await`, and that's what asyncio does
[00:53:32] <caveman> i wonder, why isn't it done like:  `mytask = asyncio.create_task(lol)`, then `await lol(x,y,z)`?
[00:53:50] <bjs> caveman: well you can write `await lol(x,y,z)` but then you're waiting for lol to finish
[00:54:08] <bjs> create_task puts it in the 'background' and it means the coroutine doesn't wait for it to finish.
[00:54:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:54:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:54:27] <caveman> i see.
[00:54:42] <caveman> oh, my mistake.  i meant `await mytask(x,y,z)`
[00:55:31] <bjs> caveman: creating a task doesn't have any need to "await"
[00:55:51] <bjs> so that's why it's just a normal function call, you can await the task but it's the same as awaiting the coro: it waits for it to finish.
[00:56:12] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[00:56:40] <caveman> i didn't say to await while creating the task.  or did i?
[00:56:56] <bjs> caveman: you said why not write it `await mytask(x,y,z)`
[00:57:00] *** gentooclimax is now known as climax
[00:57:12] <caveman> `mytask = create_task(lol);  await mytask(x,z,z)`
[00:57:28] <caveman> so as i change arguments, i don't create a new task.
[00:57:40] <bjs> caveman: you can't make the task until you have the arguments...
[00:57:52] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[00:58:06] <bjs> a task is a running (or "paused") coroutine, so you need the arguments to call the `async def` to be able to get the coroutine to be able to create the Task
[00:58:09] <caveman> because only after arguments all the asyncio.sleeps will be known?
[00:58:25] <bjs> caveman: I'm not sure what the sleeps have to do with it.
[00:58:42] <caveman> i thought that's how we pause them internally.
[00:59:11] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:59:37] *** Quits: baba (~baba@197.184.176.187) (Remote host closed the connection)
[00:59:59] <nedbat> caveman: asyncio.sleep is a way to pause execution, but is rarely used. It's often used in examples as a stand-in for real IO
[01:00:24] *** Joins: lbalhar (~lbalhar@185-186-161-56.mx-net.cz)
[01:00:34] <caveman> i see.  though in my case i have to put it to avoid flooding some servers.
[01:00:52] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[01:00:53] <bjs> caveman: the `await` is what pauses a coroutine.
[01:01:01] <bjs> The thing after the await is just handed to asyncio to tell it what to wait for
[01:01:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:01:10] <nedbat> caveman: ok.  any await is an opportunity for for another task to start execution
[01:01:47] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[01:02:39] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:03:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[01:03:17] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 256 seconds)
[01:04:22] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[01:04:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:04:54] <bjs> caveman: https://bpa.st/6WVA  is what is actually going on
[01:05:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:05:52] *** Joins: kioooow (~kioooow@cpc160021-brad25-2-0-cust65.17-1.cable.virginm.net)
[01:05:58] *** Joins: Enitin (~Enitin@82.102.22.86)
[01:06:04] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:06:09] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:06:14] <kioooow> Hello
[01:06:25] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[01:06:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:06:41] <bjs> caveman: the sleeps don't actually "do" anything, it's the awaits that actually pause execution and return to asyncio. asyncio calls next() like I do here on the task's internal coroutine to run it, and then when it reaches the `await` Python automatically pauses the function for you and returns
[01:06:51] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[01:06:54] *** Joins: trace987 (~trace@user/trace)
[01:06:58] <kioooow> hello
[01:07:20] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[01:07:34] *** Quits: kioooow (~kioooow@cpc160021-brad25-2-0-cust65.17-1.cable.virginm.net) (Client Quit)
[01:07:53] *** Quits: Strom (strom@fedora/strom) ()
[01:08:23] *** Joins: crashrep (~crashrep@user/crashrep)
[01:08:31] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:08:37] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 240 seconds)
[01:08:41] <bjs> caveman: but if you hang onto the function (my `baz_paused_func` variable) you can "call" it again to continue from where it left off, and then asyncio does this in a big loop, running one and once it returns, running another.
[01:08:57] *** Quits: mat001_ (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[01:09:57] *** Joins: Strom (strom@fedora/strom)
[01:10:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:10:58] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[01:12:26] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Quit: WeeChat 3.4)
[01:13:45] *** climax is now known as gentooclimax
[01:13:49] *** Quits: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[01:14:38] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[01:15:22] *** Quits: andreasbuhr (~quassel@p549db736.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:15:36] *** Joins: LuKaRo (~LuKaRo@p200300dfa72f4b9400000000000001f9.dip0.t-ipconnect.de)
[01:15:37] *** Joins: ovelny (~ovelny@user/ovelny)
[01:15:47] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:17:16] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:19:13] *** Joins: MercilessDeth (~brad@136.49.59.177)
[01:20:35] *** Quits: fanis30 (~anon@adsl-164.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[01:21:01] *** Joins: alex11 (~alex11@user/alex11)
[01:22:04] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[01:22:48] <bjs> caveman: this is a better proper example of what asyncio is doing https://gist.github.com/bensimner/a957ac8dd101b2fbfb70495908515e73
[01:24:37] <caveman> thanks
[01:24:55] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[01:25:00] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 240 seconds)
[01:25:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:26:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:26:27] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:914:d3a6:c56f:5cc8)
[01:26:31] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:26:48] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 256 seconds)
[01:27:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:28:03] *** Joins: wyclif (~wyclif@user/wyclif)
[01:30:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[01:30:38] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[01:30:41] <bjs> caveman: I updated it so you can await tasks, so you can play around with the internals of this if you wanted to see what create_task is doing and what the difference is between creating a task and awaiting it, vs awaiting the coro, vs creating the task and awaiting something else
[01:31:10] <bjs> it's a pretty good analogue of what asyncio is doing (if you forget about IO at least)
[01:31:12] *** Joins: goldfish (~goldfish@user/goldfish)
[01:31:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[01:33:46] <stewie925> to those using `concurrent.futures.ProcessPoolExecutor ` - anyone experienced  `raise OSError("handle is closed") ` error  ?   the worker processes from the process pool did execute, though
[01:33:46] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:33:54] *** Joins: bluedust (~bluedust@103.165.167.221)
[01:37:46] *** Joins: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr)
[01:37:49] <braxas> when adding type annotations to a library, like this: https://github.com/RDFLib/sparqlwrapper/blob/230a0295217dba0f263054413100bd859898b784/SPARQLWrapper/KeyCaseInsensitiveDict.py#L19-L22 - is it best to use `_V = TypeVar("_V")` instead of `V = TypeVar("V")` ? I guess the first can be misinterpreted as part of the interface somehow
[01:38:14] <braxas> I guess it is more a question of convention/norms
[01:38:25] *** Quits: bluedust (~bluedust@103.165.167.221) (Ping timeout: 256 seconds)
[01:38:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:38:34] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[01:38:36] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[01:38:42] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[01:39:00] *** Joins: wyclif (~wyclif@user/wyclif)
[01:39:04] <braxas> question as to what is considered part of the public API of a module
[01:39:15] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:39:23] *** Quits: OP-0 (~pca290122@94.134.227.107) (Quit: WeeChat 3.4)
[01:41:45] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:8989:4d0:aaef:ac40)
[01:42:06] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[01:43:23] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Client Quit)
[01:43:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[01:43:48] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[01:44:09] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 272 seconds)
[01:44:33] *** Joins: wyclif (~wyclif@user/wyclif)
[01:44:56] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[01:45:15] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:45:45] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[01:46:18] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[01:47:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:47:52] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[01:48:40] <dale> When I find a type in typeshed that I want to use as a type in a program I'm writing, should I be importing and using typeshed directly?  README suggests it's only for type stubs.  I don't have any pyi files.  I've just been copying/pasting types thus far, which seems wrong.  (Today's contestant: _typeshed.ReadableBuffer.)
[01:49:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[01:49:30] <jinsun> braxas: yeah normally if you don't specify a __all__ then anything not starting with underscore can be considerded public api
[01:49:37] *** Quits: cyphase_eviltwin (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[01:49:37] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[01:49:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:50:05] *** Joins: wyclif (~wyclif@user/wyclif)
[01:50:23] <jinsun> braxas: I don't like the underscored typevars myself, but makes sense to have them if you don't wanna make them part of your api and you don't want to specify a __all__
[01:50:45] <braxas> but even with __all__, someone can still import it directly can't they
[01:52:12] <braxas> https://www.python.org/dev/peps/pep-0008/#public-and-internal-interfaces - "Even with __all__ set appropriately, internal interfaces (packages, modules, classes, functions, attributes or other names) should still be prefixed with a single leading underscore."
[01:52:21] <braxas> If I was just writing an app it would be somewhat different
[01:52:25] *** Joins: filename (~kilitary@185.193.143.131)
[01:54:06] *** Joins: zuplex (~zuplex@202.51.76.74)
[01:54:52] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[01:54:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:54:57] <jinsun> well you can import even the underscored names too, so what you can do at runtime doesn't matter, but looks like even pyright allows importing stuff outside of __all__, which I thought it didn't
[01:55:37] *** Joins: wyclif (~wyclif@user/wyclif)
[01:55:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:56:11] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (Remote host closed the connection)
[01:56:29] <jinsun> so I guess you are stuck with the underscored typevars if you want to be strict about the public api thing
[01:57:01] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[01:57:14] *** Joins: cyphase (~cyphase@user/cyphase)
[01:57:58] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 256 seconds)
[01:58:25] <jinsun> dale: if you just want to use it for type hinting, you can import from _typeshed inside a if TYPE_CHECKING block and then stringify the annotation wherever you use it
[01:58:58] <jinsun> dale: but if you want to inspect them at runtime also (like with pydantic models) then you would have to copy paste
[01:59:00] <dale> jinsun: And you think this is relatively sanctioned, to have programs/libraries require typeshed and then import them in .py files (rather than .pyi)?
[01:59:44] *** Joins: jmd (~user@de.cellform.com)
[01:59:47] <dale> It's weird to me that the typeshed README only talks about use from type stubs files, unless I misread it.
[02:00:36] *** Quits: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net) (Read error: Connection reset by peer)
[02:00:57] <jinsun> dale: not sure what you mean by "require typeshed" if you are using a type checker, it will come with typeshed bundled, don't have to install the stubs (and can't do it yet anyway)
[02:01:24] *** Joins: filename_ (~kilitary@185.193.143.131)
[02:01:27] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[02:01:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[02:01:54] <dale> jinsun: Oh, good point.  And we are to assume that our type checker, whichever it is, will use its included typeshed when asked to "import _typeshed"?
[02:01:56] <foo> Would anyone in here call a python module "an internal service" ? One of our devs called it that. I haven't heard of that before. I'm thinking the answer is no. He said: "I'm referring to internal service as python modules, not services like systemd, daemon, etc. I call them as service because they provide service (logic) to a major section/part of a repo/project." I think it's safe to assume creating
[02:02:02] <foo> language like this is confusing to anyone but the author of said language - agree?
[02:02:48] <jinsun> dale: yes, that's why stuff like this happens https://github.com/python/typeshed/issues/5751
[02:02:55] *** Joins: cyphase_ (~cyphase@2600:1700:7800:4680::48)
[02:03:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:03:00] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 240 seconds)
[02:04:04] *** Joins: cosmo (~user@65.78.142.57)
[02:04:06] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:04:21] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[02:04:28] <dale> jinsun: Excellent, I can work with that.  Thanks!
[02:05:28] *** Joins: pepper (~pepper@user/pepper)
[02:05:37] *** Quits: cozmo (~user@65.78.142.57) (Ping timeout: 256 seconds)
[02:06:06] <mattf> what is the stdlib thing i want? I want to launch multiple threads to do some http requests in parallel and i want to looop on whatever order they finish doing something, when they are all done continue. the point is to take least time already giving the response to the users when a thread finish
[02:06:21] <mattf> in contrast to waiting for them all
[02:06:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:06:28] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Ping timeout: 256 seconds)
[02:07:13] <jinsun> mattf: https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.as_completed ?
[02:08:02] <mattf> hmmm ill try
[02:08:02] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:a58d:1461:5aa2:acdf)
[02:08:08] <jinsun> mattf: and an example https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example
[02:08:20] <mattf> aaah, thanks you
[02:09:13] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[02:10:14] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:1d79:7c54:c545:7cd5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:11:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[02:12:01] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 245 seconds)
[02:12:17] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[02:13:54] *** Quits: filename_ (~kilitary@185.193.143.131) (Quit: joined libera)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[02:15:21] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 245 seconds)
[02:16:07] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:09] *** Joins: filename (~kilitary@185.193.143.131)
[02:17:21] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[02:18:28] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:18:42] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[02:20:04] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:20:52] *** Quits: dre (~dre@2001:8003:c932:c301:147f:456a:d163:a87f) (Ping timeout: 250 seconds)
[02:21:31] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[02:21:40] *** Joins: filename_ (~kilitary@185.193.143.131)
[02:22:20] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[02:23:28] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 256 seconds)
[02:24:13] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[02:24:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[02:24:53] *** Quits: lbalhar (~lbalhar@185-186-161-56.mx-net.cz) (Ping timeout: 256 seconds)
[02:25:09] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:25:29] *** Quits: upsala (~zcb@185.209.196.167) (Quit: WeeChat 3.4)
[02:25:48] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[02:26:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:27:09] *** Joins: wakeup (~wakeup@user/wakeup)
[02:28:39] *** Joins: crashrep (~crashrep@user/crashrep)
[02:28:46] *** Joins: Enitin (~Enitin@82.102.22.86)
[02:29:30] *** Quits: Narrat (~omnius@p200300df5f123b4a06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:29:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:29:59] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:30:02] <wakeup> given an nxm numpy array, what is the best way to find all combinations of 2 coordinates, i.e. (x1, y1) and (x2, y2), excluding the coordinates where x1=x2 and y1=y2... I know that there are (n*m) * (n * m - 1)
[02:32:41] <KirkMcDonald> wakeup: The trivial approach is just to take the Cartesian product and skip those elements. Which of course is simplest in just regular Python code and there may be a more efficient numpy-based approach.
[02:33:04] *** Joins: dre (~dre@2001:8003:c932:c301:1811:4143:ef26:85c6)
[02:34:26] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[02:34:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:34:48] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[02:35:04] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:313a:50d:41b9:5f96)
[02:35:14] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 260 seconds)
[02:35:46] <monkeyPlus> hey. im iteranting a list with 13 million iterations, is this number too big to handle performance?? like it slows down, or python is used to so much iterations
[02:35:55] <monkeyPlus> is that a good number
[02:36:44] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3e36:44e1:48e2:7142)
[02:36:49] <monkeyPlus> wheres the limit, that python will slow down?
[02:37:20] <dale> It will really depend on what you are doing with said 13,000,000 elements and what these elements are.
[02:37:22] <KirkMcDonald> monkeyPlus: The time required will be linear in the number of elements.
[02:37:42] <KirkMcDonald> monkeyPlus: So however much time constitutes "too slow" is really up to you.
[02:37:42] <dale> 13,000,000 bytes that you print, no problem.  13,000,000 1 MB arrays, you might have a bad time.
[02:38:02] <dale> (FSVO "no problem" at least)
[02:38:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:38:41] <KirkMcDonald> monkeyPlus: I'll note that it isn't really that Python "slows down" past some number. The performance is just linear.
[02:39:27] <monkeyPlus> im saying because when i run the program, it gets sig kill (signal 9) and my youtube account starts repeating itself
[02:39:41] <Repiphany> wakeup: Do you mean something like `np.stack(np.meshgrid(arr, arr))`
[02:39:43] <monkeyPlus> nop..i just do iteraqting, and sums
[02:39:53] <monkeyPlus> sums comaparison,
[02:40:06] <monkeyPlus> oh and an index on a list
[02:40:09] <monkeyPlus> index()
[02:41:26] <monkeyPlus> hold on counting operations
[02:42:01] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[02:42:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[02:42:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:43:02] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:43:09] *** Joins: Church (~aleph@68.161.207.188)
[02:43:15] *** Quits: filename_ (~kilitary@185.193.143.131) (Read error: Connection reset by peer)
[02:43:54] <monkeyPlus> is like "12345" + "12345" faster than the numbers 12345+12345 for large numbers?
[02:44:13] <Repiphany> "12345" + "12345" is string concatenation, not number addition
[02:44:22] <monkeyPlus> no no i meants use strings to do calculations
[02:44:32] <monkeyPlus> like "12345" represents 12345
[02:44:41] <Repiphany> You can't do strings to do calculations directly like that
[02:44:48] <Repiphany> s/do/use
[02:44:55] <monkeyPlus> well i wrote some code that does
[02:45:12] <Repiphany> That's not direct
[02:45:26] <monkeyPlus> oh ok..so no direct :)
[02:45:33] <monkeyPlus> normal way
[02:45:35] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[02:45:37] *** Joins: Barones (~Barones@user/Barones)
[02:46:11] <dale> Repiphany: What does "direct" mean in this context?
[02:46:11] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 245 seconds)
[02:46:25] <KirkMcDonald> monkeyPlus: I am not entirely clear what you're asking.
[02:46:28] <jinsun> monkeyPlus: whatever you did manually with strings is almost certainly slower than just using strings
[02:46:44] <jinsun> ugh, just using ints I mean
[02:46:50] <dale> jinsun: Don't be so closed-minded, it could be much faster but totally wrong.
[02:47:00] <monkeyPlus> well java has BigInteger class to instantiate with strings...like BigInteger i = new BigInteger("12412412"), that instantiate t to the big number 12412412
[02:47:08] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:45cf:b8e9:9339:3957) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:47:28] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:bb43:b1cd:291e:86ef)
[02:47:28] <Repiphany> Python integers are already bignums
[02:47:32] <KirkMcDonald> monkeyPlus: Yes. It uses strings because it can represent integers beyond the range that an integer literal can represent.
[02:47:34] <monkeyPlus> jinsun, even if i do digit to digit sum?
[02:47:43] <jinsun> dale: well yeah if correctness is not required you can get faster :D
[02:47:50] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[02:47:58] <KirkMcDonald> monkeyPlus: Integer addition is pretty fast.
[02:48:10] <monkeyPlus> so its probably a ram issue ffs
[02:48:11] <jinsun> monkeyPlus: yes that would be slower
[02:48:28] <monkeyPlus> my program keeps stalling, and im not using any special function
[02:48:34] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[02:48:57] *** Quits: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr) (Quit: Lost terminal)
[02:49:14] <Repiphany> wakeup: `np.stack(np.meshgrid(arr, arr), axis = -1)[y] ` gives you [[arr[0], arr[y]], [arr[1], arr[y], ..., [arr[m], arr[y]] for example
[02:49:20] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[02:49:34] *** lukedashjr is now known as luke-jr
[02:50:06] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:50:19] <Repiphany> Er, after flattening
[02:50:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:50:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:51:04] <Repiphany> arr on the right is flattened, so it goes to arr_flattened[m*n]
[02:52:22] <Repiphany> monkeyPlus: People here don't have magic mind-reading powers so if you want help with your code you need to post it somewhere
[02:52:25] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:34e0:8b74:dd2c:1d62) (Ping timeout: 256 seconds)
[02:52:30] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[02:52:31] <monkeyPlus> okok thks
[02:53:01] <wakeup> Repiphany what is y there?
[02:53:27] <Repiphany> y between 0 and n*m
[02:54:47] <wakeup> I think I can do what I need with itertools product twice
[02:54:50] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[02:55:01] <wakeup> and then filtering the combinations that have the same coorindates
[02:55:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:55:46] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[02:55:59] <Repiphany> Sure, if you don't need numpy speed
[02:56:15] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[02:56:36] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:fac3:85b:39f5:8c3d) (Ping timeout: 240 seconds)
[02:56:39] *** Quits: NeoCore (~neocore@195.200.221.225) (Quit: Leaving)
[02:57:03] <Repiphany> Normally you wouldn't need stacking with meshgrid, it's not clear what you're intending to do with coordinate pairs
[02:57:26] *** luke-jr- is now known as luke-jr
[02:57:36] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[02:58:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:914:d3a6:c56f:5cc8) (Quit: Client closed)
[02:58:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[02:59:05] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[03:01:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[03:01:35] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[03:02:39] *** Joins: wyclif (~wyclif@user/wyclif)
[03:03:45] *** Quits: jessicara (~shirogits@user/jessicara) (Ping timeout: 250 seconds)
[03:04:08] *** Joins: jessicara (~shirogits@user/jessicara)
[03:04:09] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Client Quit)
[03:04:12] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 250 seconds)
[03:04:13] *** Joins: luke-jr| (~luke-jr@user/luke-jr)
[03:04:35] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[03:05:24] *** luke-jr| is now known as luke-jr
[03:06:49] *** Joins: wawr (~w@c-67-160-123-241.hsd1.wa.comcast.net)
[03:07:28] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[03:07:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:07:48] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[03:08:09] *** Joins: wyclif (~wyclif@user/wyclif)
[03:08:39] *** Quits: msk (~Thunderbi@89.205.124.7) (Ping timeout: 252 seconds)
[03:09:19] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[03:10:30] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[03:11:00] *** Quits: wawr (~w@c-67-160-123-241.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[03:12:18] *** Joins: wawr (~w@c-67-160-123-241.hsd1.wa.comcast.net)
[03:12:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:12:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[03:13:39] *** Joins: wyclif (~wyclif@user/wyclif)
[03:15:05] *** Quits: luke-jr- (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[03:15:58] *** Joins: trace (~trace@user/trace)
[03:15:58] *** Quits: trace987 (~trace@user/trace) (Ping timeout: 272 seconds)
[03:17:35] *** Quits: wawr (~w@c-67-160-123-241.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[03:18:58] *** Joins: pipapipapibo (~w@c-67-160-123-241.hsd1.wa.comcast.net)
[03:19:18] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[03:20:28] *** luke-jr- is now known as luke-jr
[03:21:48] *** Joins: filename (~kilitary@185.193.143.131)
[03:21:48] *** Joins: JordiGH (~jordi@user/jordigh)
[03:22:36] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:24:36] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[03:25:51] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:26:37] *** Joins: VoidSync (~sync@user/voidsync)
[03:27:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:28:00] *** Joins: dme86 (~dan@user/dan86)
[03:28:33] *** Joins: evanextreme (~evan@2604:4080:1000:8150:c4dd:92db:20cd:4512)
[03:29:00] *** Joins: trace987 (~trace@user/trace)
[03:29:10] <foo> Hmm, upgraded to python 3.10 and now I see this in my log: interactiveshell 343 - DEBUG - Stop. -> lots of lines.
[03:29:12] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:29:16] <foo> I can silence it, not sure what's causing that.
[03:29:34] <foo> Oh, I'm in ipython, maybe it has something to do with that
[03:30:02] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:12] *** Quits: trace (~trace@user/trace) (Ping timeout: 240 seconds)
[03:30:38] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[03:30:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:32:04] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[03:32:17] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:32:19] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[03:32:53] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[03:33:09] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:34:23] *** lukedashjr is now known as luke-jr
[03:35:27] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[03:35:37] *** Quits: evanextreme (~evan@2604:4080:1000:8150:c4dd:92db:20cd:4512) (Ping timeout: 240 seconds)
[03:36:16] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 250 seconds)
[03:36:49] *** Quits: parv (~quass@user/parv) (Quit: parv)
[03:38:41] <yanmaani> Is there something in Python like Erlang's pattern matching for functions?
[03:38:56] <yanmaani> e.g. you can define something like
[03:39:15] <yanmaani> `def myfun(a, "X"): ... \n def myfun(a, b): ...`
[03:39:33] <yanmaani> call myfun(whatever, "X"), first one is invoked, otherwise, the second
[03:40:45] <nedbat> yanmaani: not really.  https://docs.python.org/3/library/functools.html#functools.singledispatch can dispatch based on the type of an argument.
[03:41:06] <nedbat> yanmaani: but usually, there can only be one thing with a name, so two "myfun"s doesn't make sense.
[03:41:28] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[03:41:31] <yanmaani> What's the best way of accomplishing it then? Like for parsers, in Erlang you can implement a state machine using that kind of thing.
[03:42:01] <jinsun> you can just have if-else inside myfun
[03:42:06] <yanmaani> (well, more technically, the definition of myfun is one thing, it just happens to have two headers)
[03:42:12] <jinsun> if b == "X": ... else: ...
[03:42:12] <yanmaani> jinsun: I mean yes, but it's not as clean
[03:42:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[03:42:24] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[03:43:01] <jinsun> well define the bodies as two separate functions, then the if else part will be just one line of function call
[03:43:28] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:43:49] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[03:44:29] <jinsun> return _myfunX(a, b) if b == "X" else _myfunB(a, b)
[03:44:38] *** Joins: filename_ (~kilitary@185.193.143.131)
[03:44:39] <jinsun> something like that
[03:45:05] <jinsun> and you can define those functions inside the body of myfun too
[03:45:06] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:45:07] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 272 seconds)
[03:45:20] *** Joins: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be)
[03:45:28] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:45:29] <jinsun> so don't have to worry about polluting the global namespace
[03:45:33] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[03:45:48] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[03:45:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:45:57] *** Joins: blackleitus (~blackleit@189.195.195.100)
[03:46:32] *** Quits: dre (~dre@2001:8003:c932:c301:1811:4143:ef26:85c6) (Quit: Leaving)
[03:47:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:48:45] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:49:36] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 256 seconds)
[03:49:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:50:19] *** Joins: Wulf (~Wulf@user/wulf)
[03:50:37] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[03:52:12] *** Quits: arinov (~arinov@78.162.46.214) (Ping timeout: 240 seconds)
[03:54:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:54:47] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[03:55:16] <nedbat> yanmaani: in Python 3.10 there's the match/case statement that can do pattern matching
[03:55:18] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[03:55:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:55:52] <nedbat> yanmaani: https://www.python.org/dev/peps/pep-0636/
[03:55:52] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 272 seconds)
[03:56:38] <foo> Would anyone in here call a python module "an internal service" ? One of our devs called it that. I haven't heard of that before. I'm thinking the answer is no. He said: "I'm referring to internal service as python modules, not services like systemd, daemon, etc. I call them as service because they provide service (logic) to a major section/part of a repo/project." I think it's safe to assume creating
[03:56:44] <foo> language like this is confusing to anyone but the author of said language - agree?
[03:56:50] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:57:35] <nedbat> foo: i would agree it's confusing to call an in-process module a service, unless they are willing to put more formalism around it.
[03:57:47] <foo> nedbat: thank you.
[03:57:51] <nedbat> foo: i've called things like that services, but only when they are abstracted away through a registry.
[03:57:58] <yanmaani> conventionally, a service responds to requests
[03:58:05] <nedbat> definitely it's a specialized thing, not calling every module a service.
[03:58:08] <yanmaani> whereas code is "dead"
[03:58:19] <yanmaani> nedbat: hmm, maybe I can use that, thanks
[03:59:14] <foo> to be more clear, we were working on a stats piece of functionality... which is as simple as increment a number in a database table. But he used the example of a class and called it a service. eg. ProjectStatsService -> I fail to see how that resembles a service in any capacity. But I come here to ask these questions because I don't know everything and I'm willing to learn, but this simply seems confusing.
[03:59:38] <foo> thank you nedbat and yanmaani for sharing your thoughts.
[03:59:55] <foo> I call something a service if it runs all the time or frequently or such, and even then, I don't use that word in my code.
[04:00:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:01:15] *** Joins: skapata (~Skapata@user/skapata)
[04:01:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:02:21] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[04:03:13] *** Joins: purple_cthulhu (~rax@2.186.4.24)
[04:03:58] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:06:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:07:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:07:57] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[04:08:30] *** Joins: lllh (~llh@198.48.244.21)
[04:09:24] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:09:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:09:57] *** Quits: llh (~llh@user/llh) (Ping timeout: 240 seconds)
[04:10:25] *** Joins: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0::f824)
[04:10:57] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824) (Ping timeout: 240 seconds)
[04:11:05] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[04:11:21] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 250 seconds)
[04:11:57] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Ping timeout: 240 seconds)
[04:11:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:14:53] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[04:16:13] *** Joins: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net)
[04:17:54] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:19:16] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[04:19:25] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[04:20:21] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:20:29] *** Quits: filename_ (~kilitary@185.193.143.131) (Ping timeout: 256 seconds)
[04:20:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:21:40] *** Joins: filename___ (~kilitary@185.193.143.131)
[04:22:35] *** Joins: blei (~blei@c-73-153-189-5.hsd1.co.comcast.net)
[04:22:45] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[04:23:22] *** Quits: filename___ (~kilitary@185.193.143.131) (Client Quit)
[04:23:58] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:24:43] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:25:50] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[04:25:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[04:25:57] *** Joins: filename (~kilitary@185.193.143.131)
[04:26:44] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[04:27:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:27:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:28:47] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:28:51] *** Quits: blei (~blei@c-73-153-189-5.hsd1.co.comcast.net) (Quit: Client closed)
[04:28:54] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[04:29:50] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[04:29:57] *** Joins: crashrep (~crashrep@user/crashrep)
[04:30:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:31:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:32:37] *** Quits: iphone (~spiderman@user/spiderman) (Ping timeout: 240 seconds)
[04:33:01] *** Joins: iphone (~spiderman@user/spiderman)
[04:34:07] *** Quits: cosmo (~user@65.78.142.57) (Quit: WeeChat 2.8)
[04:34:12] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[04:34:16] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:34:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[04:34:37] *** Joins: cozmo (~user@65.78.142.57)
[04:34:58] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:35:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:35:22] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[04:35:49] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:36:54] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[04:38:25] *** Joins: Vonter (~Vonter@user/vonter)
[04:39:00] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[04:39:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:41:45] *** Leonarbro_ is now known as Leonarbro
[04:42:05] *** Joins: _filename (~kilitary@185.193.143.131)
[04:43:23] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 272 seconds)
[04:43:44] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:44:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:45:48] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:8989:4d0:aaef:ac40) (Ping timeout: 240 seconds)
[04:45:52] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:52:04] *** Joins: ejjfunky (~ejjfunky@125.164.19.4)
[04:55:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:55:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:56:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:59:00] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[04:59:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:01:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:02:23] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[05:03:00] *** Quits: _filename (~kilitary@185.193.143.131) (Quit: joined libera)
[05:03:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:04:54] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:04:57] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Read error: Connection reset by peer)
[05:05:22] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[05:06:14] *** Joins: filename (~kilitary@185.193.143.131)
[05:07:18] *** Quits: filename (~kilitary@185.193.143.131) (Client Quit)
[05:08:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:09:40] *** Joins: filename (~kilitary@kilitary.xyz)
[05:10:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[05:12:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:12:51] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[05:14:24] *** Quits: ofl^ (~ofl@50.233.120.162) (Remote host closed the connection)
[05:15:13] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[05:18:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:20:00] *** Joins: Enitin (~Enitin@82.102.22.85)
[05:20:02] *** Joins: sixie6e (~sixie6e@2600:1000:b06b:d422:ec6d:487:32da:8658)
[05:20:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:20:28] *** Quits: sixie6e (~sixie6e@2600:1000:b06b:d422:ec6d:487:32da:8658) (Client Quit)
[05:22:37] *** Joins: sixie6e (~sixie6e@2600:1000:b06b:d422:ec6d:487:32da:8658)
[05:23:14] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:26:21] *** Quits: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be) (Quit: harpia)
[05:26:26] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 272 seconds)
[05:26:27] *** cdown_ is now known as cdown
[05:26:34] *** Joins: harpia (~harpia@187.49.85.200)
[05:28:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:28:37] *** Quits: harpia (~harpia@187.49.85.200) (Client Quit)
[05:29:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:29:06] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:30:33] *** Quits: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[05:31:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:32:01] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:01] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:34:20] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:34:52] *** Joins: vlm (~vlm@user/vlm)
[05:34:59] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[05:35:24] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:35:24] *** brabrax_ is now known as brabrax
[05:35:33] *** Joins: dsrt^ (~dsrt@50.233.120.162)
[05:37:40] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:41:11] *** Joins: harpia (~harpia@2804:fc:8d49:1000:b62e:99ff:fee9:cc51)
[05:41:18] *** Parts: sixie6e (~sixie6e@2600:1000:b06b:d422:ec6d:487:32da:8658) ()
[05:42:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:42:43] * foo finally figuring out git pre-hooks and how to set it up for a repo
[05:42:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:43:47] *** Quits: purple_cthulhu (~rax@2.186.4.24) (Ping timeout: 256 seconds)
[05:44:10] <grym> `pre-commit install` :(
[05:44:13] <grym> er, :)
[05:44:32] <foo> grym: yup, did. Following https://pre-commit.com now :)
[05:45:35] <foo> grym: do I need an actual "install script"? I saw one video suggest this... but it looks like if I use pre-commit, I can simply have a .pre-commit-config.yaml file in the repo and the pre-commit install that... easy as that? Or am I missing something?
[05:46:18] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:46:23] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[05:46:49] <foo> Looks like it.
[05:48:32] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[05:48:36] *** Quits: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:48:56] *** Quits: pipapipapibo (~w@c-67-160-123-241.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:48:57] *** Joins: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de)
[05:49:09] <dale> Is "match" the first time a keyword is also a valid symbol for use in programs?
[05:49:13] <grym> foo: the only gotcha is that nothing compels pre-commit to be installed
[05:49:18] *** Joins: pipapipapibo (~w@c-67-160-123-241.hsd1.wa.comcast.net)
[05:49:25] <grym> dale: await and async used to be!
[05:49:27] <foo> grym: yeah, I got to document that in README - correct?
[05:49:45] <dale> grym: Yes, but I'm assuming they ceased to be usable as variables once they began to function as keywords.  Not so?
[05:50:00] <grym> foo: sure.  i often make a makefile that has a `make install` command which runs pip install -e '.[dev]' and then pre-commit install
[05:50:10] <grym> dale: 3.7 was the breaker
[05:50:13] <dale> I cannot remember the transition.  I was assuming that there was a point at which you "from __future__ import async" or something like that, and after that you couldn't use "async = 42" and the like.
[05:50:13] <foo> grym: nice
[05:50:23] <grym> dale: 3.6 and down, you could do both
[05:50:52] <foo> Is there a master .pre-commit-config.yaml that's suggested for python code/etc? Sure, I want black, flynt, isort with black for restructuring imports, etc... I don't want to reinvent the wheel with stuffing this file ha
[05:51:02] <grym> foo: it'd be nicer if i could get people to regularly run it :D
[05:51:15] <dale> grym: Right you are, just found it at https://www.python.org/dev/peps/pep-0492/#transition-plan.
[05:51:25] <foo> grym: it's just a one time thing though, right?
[05:51:32] <foo> grym: eg. start of setting up a repo
[05:51:35] <grym> dale: i remember that one rather vividly; 3.7 broke tensorflow for ~6 months
[05:51:36] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:51:37] <grym> foo: correct
[05:51:51] <foo> grym: nice.
[05:51:57] <foo> Maybe there's some large project that has a great .pre-commit-config.yaml I can snag
[05:52:03] <dale> grym: That seems like a long time for it to stay broken?  Perhaps it is not as active as I thought.
[05:52:25] <grym> dale: it was moving real quick then too; it's just that they had a biiig refactor
[05:53:07] <grym> foo: i like black, isort, trailing-whitespace, and end-of-file-fixer
[05:53:42] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[05:54:09] *** Joins: parv (~quass@user/parv)
[05:54:15] *** Quits: martums5 (~martums@user/martums) (Read error: Connection reset by peer)
[05:54:33] <dale> Interesting, if I'm reading this right, "match" and "case" are "soft keywords" in the new PEG parser.  I can find no mention of them ever becoming "hard keywords".
[05:55:07] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 256 seconds)
[05:55:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:55:16] *** Joins: filename (~kilitary@kilitary.xyz)
[05:55:24] <dale> "Most importantly, the new parser doesn't require us to do this. Unlike with async that caused hardships with being a soft keyword for few releases, here we can make match a permanent soft keyword."
[05:55:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:56:35] <Repiphany> Would break stuff like `re.match`
[05:56:51] <dale> Indeed, or the numerous times I've written "match = re.search(...)".
[05:56:56] *** Joins: purple_cthulhu (~rax@2.186.4.50)
[05:57:31] <dale> The main issue here is that I'm not sure if Emacs's Python mode is ready to highlight a word that is a keyword in some contexts and not a keyword in others. :)
[05:58:32] <nedbat> dale: it's a challenge for sure
[05:58:40] <dale> Really the problem is that I was going to make a joke about "won't someone think of all the poor 'match = ' statements", but now I guess I have to fall back on "won't someone think about all the poor editors", which is less funny.
[05:59:54] *** Quits: purple_cthulhu (~rax@2.186.4.50) (Client Quit)
[06:00:07] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:01:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:01:34] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[06:01:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:02:04] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:f107:35d2:9019:655d) (Remote host closed the connection)
[06:02:19] *** Joins: mgedmin (~mg@user/mgedmin)
[06:02:35] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:2dae:d303:309b:b673)
[06:04:01] <foo> grym: hmm, I don't see flake8 in your list. I probably should read what this is, looks like it's failing.
[06:04:14] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:1d79:7c54:c545:7cd5)
[06:04:59] *** Quits: lord_daemon (~lord_daem@187.36.203.244) (Read error: Connection reset by peer)
[06:05:23] *** Joins: lord_daemon (~lord_daem@187.36.203.244)
[06:06:17] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[06:07:04] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[06:07:08] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:07:42] <foo> Setting .pre-commit-config.yaml up for the first time. I have this: https://bpa.st/UGAA -> anyone else think I'm missing something? Or any other suggestions? Not sure if there's common suggested ones, I'm open. First time setting this up.
[06:08:31] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[06:08:59] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:09:00] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:1d79:7c54:c545:7cd5) (Ping timeout: 240 seconds)
[06:09:29] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:09:54] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:13:08] *** Quits: snortie (~snortie@2a02:970:1186:1800:f881:7773:c6f5:7fb8) (Ping timeout: 250 seconds)
[06:13:33] <dale> foo: FYI I think line 10 in that paste has an error.
[06:13:40] <grym> foo: i start real small and scale up when needed
[06:14:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:14:43] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:15:36] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[06:16:27] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:17:55] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:20:33] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:22:37] *** Quits: Origin (~Origin@d-69-161-70-214.nh.cpe.atlanticbb.net) (Quit: Leaving)
[06:22:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:27:02] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:28:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:29:09] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[06:29:57] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[06:30:50] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[06:30:57] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:31:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:31:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[06:32:23] *** Joins: brabrax (~brabrax@user/brabrax)
[06:33:28] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:34:44] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[06:35:47] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3e36:44e1:48e2:7142) (Remote host closed the connection)
[06:36:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:37:57] *** Joins: liqu1d (~guest@2806:2f0:5021:9b56:259a:454f:9691:2d1d)
[06:41:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[06:42:25] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:8989:4d0:aaef:ac40)
[06:42:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:42:55] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[06:43:43] *** Quits: liqu1d (~guest@2806:2f0:5021:9b56:259a:454f:9691:2d1d) (Quit: liqu1d)
[06:46:07] *** Quits: ubert (~Thunderbi@5.253.207.46) (Ping timeout: 256 seconds)
[06:48:15] *** Joins: ubert (~Thunderbi@86.107.21.238)
[06:48:38] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[06:50:54] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[06:51:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:51:23] <dale> TIL struct module doesn't support unpacking null-terminated strings.  https://bugs.python.org/issue29328
[06:51:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:51:53] *** Joins: superboot (~agentgasm@user/superboot)
[06:52:07] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:52:21] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:52:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:53:11] *** Quits: harpia (~harpia@2804:fc:8d49:1000:b62e:99ff:fee9:cc51) (Quit: harpia)
[06:55:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:56:15] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[06:58:39] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[06:58:56] *** Joins: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com)
[06:58:56] *** Joins: SaltHillStroller (~SaltHillS@searspoint.nvidia.com)
[07:00:02] *** Quits: zuplex (~zuplex@202.51.76.74) (Remote host closed the connection)
[07:00:07] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:00:35] *** Joins: ejjfunky0 (~ejjfunky2@125.164.17.4)
[07:01:35] *** Joins: nrg (~NRG@user/nrg)
[07:04:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:04:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:04:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:05:05] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:05:17] *** Joins: adeliktas2 (~adeliktas@i59F5265C.versanet.de)
[07:05:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:06:30] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:06:35] *** Joins: filename (~kilitary@kilitary.xyz)
[07:06:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:07:22] *** Quits: adeliktas (~adeliktas@i59F52980.versanet.de) (Ping timeout: 256 seconds)
[07:07:22] *** adeliktas2 is now known as adeliktas
[07:07:23] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:10:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:10:17] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:11:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:11:20] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 256 seconds)
[07:11:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:12:11] *** Joins: fldme (~fldme@178.49.152.42)
[07:12:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:12:52] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[07:13:05] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:15:48] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:d942:5125:e3e3:6390)
[07:18:37] *** Quits: cliluw (~cliluw@47.147.77.43) (Read error: Connection reset by peer)
[07:19:11] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[07:20:45] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[07:23:10] *** Joins: Hackerpcs (~user@user/hackerpcs)
[07:23:25] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[07:23:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:24:55] *** Joins: Hackerpcs (~user@user/hackerpcs)
[07:28:40] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[07:29:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:29:37] *** Joins: dez (uid92154@user/dez)
[07:30:10] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:32:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[07:32:26] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:52] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:35:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:36:25] *** Joins: bluedust (~bluedust@103.165.167.221)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:14] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[07:37:15] *** Joins: evanextreme (~evan@2604:4080:1000:8150:c4dd:92db:20cd:4512)
[07:37:34] *** Joins: runelind (~runelind@user/runelind)
[07:38:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:38:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:41:05] *** Quits: bluedust (~bluedust@103.165.167.221) (Ping timeout: 256 seconds)
[07:42:10] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:43:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:44:31] *** Quits: sreve (~quassel@p54a717a7.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[07:44:37] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 240 seconds)
[07:44:57] *** Quits: evanextreme (~evan@2604:4080:1000:8150:c4dd:92db:20cd:4512) (Ping timeout: 240 seconds)
[07:45:00] *** Joins: sreve (~quassel@p54a706a2.dip0.t-ipconnect.de)
[07:46:46] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:47:11] *** Joins: haasn (~nand@haasn.dev)
[07:49:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:49:31] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[07:51:16] *** Joins: tijko (~tijko@static-71-184-137-31.bstnma.ftas.verizon.net)
[07:51:19] <tijko> yoooo
[07:51:45] *** Joins: wyclif (~wyclif@user/wyclif)
[07:52:37] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[07:53:28] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:ffdd:89dd:42e7:2bc2)
[07:55:36] *** Joins: evanextreme (~evan@2604:4080:1000:8150:c4dd:92db:20cd:4512)
[07:58:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:58:52] *** Quits: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581) (Read error: Connection reset by peer)
[07:59:24] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:59:29] *** Joins: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581)
[08:00:05] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:00:21] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[08:01:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[08:01:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:03:32] *** Joins: gegenschein (~james@ec2-54-210-169-253.compute-1.amazonaws.com)
[08:04:11] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[08:04:54] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bc9a-9d0f-1878-88ac.res6.spectrum.com) (Read error: Connection reset by peer)
[08:05:59] *** Quits: superboot (~agentgasm@user/superboot) (Remote host closed the connection)
[08:06:12] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[08:07:18] *** Quits: d3sync (~d3sync@193.92.209.51.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[08:07:57] *** Quits: evanextreme (~evan@2604:4080:1000:8150:c4dd:92db:20cd:4512) (Ping timeout: 240 seconds)
[08:08:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:10:07] *** Joins: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[08:11:02] *** Joins: Bjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[08:11:14] *** Joins: xeyes (~user@user/duuude)
[08:11:44] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 272 seconds)
[08:11:59] *** Bjander is now known as Belxjander
[08:12:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:13:00] *** Quits: NealRame (~a@202-63-68-29.ip4.superloop.com) (Quit: Konversation terminated!)
[08:13:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:13:20] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:13:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:13:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:18:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:19:23] *** Quits: decartes (sid240036@id-240036.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:19:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:21:13] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:23:16] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[08:23:34] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[08:24:09] *** Quits: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 256 seconds)
[08:24:09] *** Quits: SaltHillStroller (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 256 seconds)
[08:27:40] *** Joins: sixie6e (~sixie6e@2600:1000:b06b:d422:69f3:c624:745b:a5a5)
[08:28:09] *** Joins: aphysically (~aphysical@user/aphysically)
[08:28:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:29:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:31:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:31:09] *** Joins: Guest99 (~Guest99@157.42.253.53)
[08:31:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:31:57] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:d942:5125:e3e3:6390) (Read error: Connection reset by peer)
[08:32:18] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:32:22] *** Quits: cozmo (~user@65.78.142.57) (Read error: Connection reset by peer)
[08:32:41] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:32:49] <Guest99> Hi all there is some data coming in long veriable that i want to write into a text file by using python how can i do it
[08:33:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:33:16] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:33:56] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:34:10] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[08:38:02] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[08:40:02] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:42:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:42:52] <jinsun> Guest99: https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
[08:43:35] *** Joins: filename (~kilitary@kilitary.xyz)
[08:45:27] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:243f:5eba:389b:63d7)
[08:47:06] *** Parts: sixie6e (~sixie6e@2600:1000:b06b:d422:69f3:c624:745b:a5a5) ()
[08:51:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:51:59] *** Joins: rajkosto (~rajkosto@93-87-137-4.dynamic.isp.telekom.rs)
[08:52:26] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[08:54:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:54:25] *** Joins: bluedust (~bluedust@103.165.167.221)
[08:58:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:59:05] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[09:00:15] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[09:03:09] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[09:04:05] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[09:04:21] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[09:06:25] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 256 seconds)
[09:10:08] *** Joins: yukkeorg (~yukkeorg@105.135.178.217.shared.user.transix.jp)
[09:11:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:11:24] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[09:11:27] *** Joins: widp (~user@124.123.105.155)
[09:12:06] *** Quits: l4yer (~l4yer@2001:ac8:20:3a00:1012:3f2e:f182:ae72) (Ping timeout: 250 seconds)
[09:16:36] *** Joins: Dotz0cat (~Dotz0cat@98.19.231.212)
[09:17:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:17:53] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[09:20:35] *** Joins: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1)
[09:20:42] <mtj> hi folks, how can i find the source repo for the gym module, when i run 'pip3 -v install gym'?
[09:21:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:22:27] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[09:22:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:22:50] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[09:24:17] *** Joins: Dotz0cat_ (~Dotz0cat@h246.117.90.75.dynamic.ip.windstream.net)
[09:24:34] *** Quits: Dotz0cat (~Dotz0cat@98.19.231.212) (Ping timeout: 272 seconds)
[09:25:13] *** Dotz0cat_ is now known as Dotz0cat
[09:25:48] <Guest99> jinsun: https://bpa.st/JTXA
[09:26:57] *** Joins: ice9 (~ice9@user/ice9)
[09:28:14] *** Quits: lllh (~llh@198.48.244.21) (Quit: :::: ( UPP ) ::::)
[09:29:04] <interestingname> <mtj> "hi folks, how can i find the..." <- https://pypi.org/project/gym/
[09:29:04] <interestingname> go to pypi, and go to the homepage here
[09:29:20] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:bb43:b1cd:291e:86ef) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:29:35] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:7ddf:c20:b443:e9f3)
[09:29:55] *** Joins: llh (~llh@user/llh)
[09:30:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:30:10] *** Joins: aphysically (~aphysical@user/aphysically)
[09:30:16] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:30:25] <mtj> cheers, interestingname
[09:30:50] <mtj> is there another CLI way? ... like 'pip search gym' but working?
[09:31:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:31:32] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[09:31:46] <interestingname> https://pypi.org/project/pypi-cli/
[09:31:58] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[09:32:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:32:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:33:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:35:43] <mtj> perfect!
[09:36:52] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[09:38:07] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:38:52] <Guest99> https://bpa.st/JTXA
[09:38:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:39:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:39:08] *** Quits: rajkosto (~rajkosto@93-87-137-4.dynamic.isp.telekom.rs) (Ping timeout: 272 seconds)
[09:40:08] <jinsun> Guest99: if you wanted the result of my_form_post() in the file then pass that to file.writelines, so file.writelines(my_form_post()), instead of file.writelines("textt")
[09:40:42] <jinsun> also .writelines is for writing a list of lines to a file, if it is just a string, better to use .write
[09:40:51] *** Joins: llh (~llh@user/llh)
[09:43:41] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:313a:50d:41b9:5f96) (Remote host closed the connection)
[09:46:43] *** Joins: queue (~nerd@rektnet.com)
[09:51:02] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[09:52:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:52:23] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[09:52:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:52:58] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:54:43] <Guest99> https://bpa.st/BTGA
[09:57:06] *** Quits: Guest99 (~Guest99@157.42.253.53) (Quit: Client closed)
[09:57:18] *** Joins: Guest99 (~Guest99@157.42.253.53)
[09:59:50] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:00:12] <jinsun> Guest99: well why did you move the with block inside the def now? you had it outside the def earlier
[10:01:52] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:04:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:05:18] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[10:07:11] *** Joins: Vonter (~Vonter@user/vonter)
[10:08:49] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[10:10:07] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:13:56] *** Joins: upsala (~zcb@185.209.196.167)
[10:14:11] <Guest99> https://bpa.st/76PA
[10:15:27] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:15:34] *** Joins: doc|home (~doc@user/doc)
[10:15:41] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: Leaving)
[10:18:05] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[10:19:42] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[10:19:42] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:a58d:1461:5aa2:acdf) (Quit: Leaving)
[10:20:19] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:20:34] *** Quits: davit (~davit@50.35.184.227) (Quit: Leaving)
[10:21:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:26:53] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 256 seconds)
[10:27:51] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:27:56] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[10:29:31] *** Joins: filename (~kilitary@kilitary.xyz)
[10:30:12] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[10:30:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:31:18] *** Quits: subopt (~subopt@2603-8081-2302-459a-054b-dc1a-bca1-20aa.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:31:20] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[10:31:20] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:31:40] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:7ddf:c20:b443:e9f3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:31:56] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[10:32:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:33:37] *** Quits: llh (~llh@user/llh) (Ping timeout: 272 seconds)
[10:34:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[10:34:24] <Guest99> https://bpa.st/76PA
[10:34:38] <Guest99> can anyone help me
[10:34:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:34:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:39:06] <Wulf> Guest99: Hello. "Doesn't work" isn't helpful. Got an error message?
[10:39:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[10:39:58] <Guest99> no error but txt file is coming blank
[10:40:58] <Wulf> Guest99: Please no private messages.
[10:41:13] <Guest99> ok
[10:41:16] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:41:45] <Guest99> it returning some data in return statement
[10:42:49] <Wulf> Guest99: how is your taggs.txt related to your http function?
[10:42:51] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[10:44:22] <Guest99> there is a file taggs.txt in which whatever function is returning should be written
[10:44:56] <Repiphany> How are you running this script
[10:45:20] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[10:45:39] <Batzy> does cython have any support for multi-dim arrays? (not through numpy)
[10:46:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:46:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:47:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:47:24] <Wulf> Guest99: I had a look at your other pastes. Please go through a python tutorial, e.g. https://docs.python.org/3/tutorial/index.html
[10:47:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:52:46] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[10:52:55] *** Joins: Blankspace (~androirc@user/blankspace)
[10:53:27] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[10:54:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:56:54] *** Quits: Blankspace (~androirc@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[10:57:01] <Swayze> yeah aside from learning the docs another good way to learn is to look at other sample code tht does work
[10:57:29] <Swayze> debug or step through it and see how it works
[10:57:29] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[10:58:54] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[10:59:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:59:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:59:32] <Swayze> there's a finite set of standard libraries and functions that you should familiarise yourself with to write 'good code'
[10:59:59] <Swayze> online python tutorials will also be useful for a beginner
[11:00:39] *** Joins: manti7 (~manti7@176.10.104.94)
[11:01:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:04:26] *** Joins: EGH (~EGH@185.25.195.104)
[11:04:59] *** Joins: bluedust (~bluedust@103.165.167.221)
[11:09:40] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[11:10:11] *** Quits: bluedust (~bluedust@103.165.167.221) (Ping timeout: 256 seconds)
[11:11:43] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[11:12:45] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[11:13:02] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:13:10] *** Joins: tomg (~tomg@user/tomg)
[11:15:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:15:29] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[11:17:49] *** Joins: frost (~frost@user/frost)
[11:19:32] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[11:21:31] *** Quits: filename (~kilitary@kilitary.xyz) (Ping timeout: 256 seconds)
[11:24:34] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[11:24:53] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:26:00] *** Joins: mickey8 (~user@user/mickey)
[11:26:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:26:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:26:45] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[11:27:48] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[11:28:44] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[11:29:58] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 272 seconds)
[11:30:05] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[11:30:12] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[11:30:24] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[11:30:53] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:31:15] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:31:41] *** Joins: fbiagent__ (~fbiagent@user/fbiagent)
[11:32:30] *** Quits: raym (~raym@user/raym) (Ping timeout: 272 seconds)
[11:33:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:34:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:34:16] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[11:35:57] *** Joins: bluedust (~bluedust@103.165.167.221)
[11:36:05] *** Joins: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net)
[11:36:30] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[11:36:56] *** Joins: blackleitus (~blackleit@189.195.195.100)
[11:37:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:37:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:37:59] *** Joins: raym (~raym@user/raym)
[11:38:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[11:40:06] <amogorkon> mornin
[11:40:30] *** Quits: widp (~user@124.123.105.155) (Ping timeout: 256 seconds)
[11:40:54] *** Joins: davep (uid504677@id-504677.tinside.irccloud.com)
[11:41:40] *** Joins: kts (~kts@103.73.237.210)
[11:43:57] *** Joins: Vonter (~Vonter@user/vonter)
[11:44:24] *** Joins: han-solo (~han-solo@user/han-solo)
[11:45:06] *** Joins: dme86 (~dan@user/dan86)
[11:45:50] *** Joins: han-solo_ (~han-solo@103.104.46.44)
[11:45:57] *** Quits: han-solo (~han-solo@user/han-solo) (Killed (NickServ (GHOST command used by han-solo_!~han-solo@103.104.46.44)))
[11:46:11] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[11:47:01] *** Quits: han-solo_ (~han-solo@103.104.46.44) (Changing host)
[11:47:01] *** Joins: han-solo_ (~han-solo@user/han-solo)
[11:47:07] *** han-solo_ is now known as han-solo
[11:47:47] *** Joins: andreasbuhr (~quassel@p5dcf93df.dip0.t-ipconnect.de)
[11:48:12] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Quit: Leaving)
[11:48:36] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[11:49:08] *** Joins: cpunk (~mm@ip2505fdad.dynamic.kabel-deutschland.de)
[11:49:17] *** Joins: wolfshappen (~waff@irc.furworks.de)
[11:50:19] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[11:50:33] *** Joins: Sadale (~Sadale@user/sadale)
[11:52:57] *** Quits: andreasbuhr (~quassel@p5dcf93df.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:53:04] *** Joins: widp (~user@124.123.105.155)
[11:53:42] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:53:59] *** Quits: Sadale (~Sadale@user/sadale) (Client Quit)
[11:54:44] *** Joins: Batzy (~quassel@user/batzy)
[11:56:18] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:56:34] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[12:00:54] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:01:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[12:01:26] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[12:02:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:05:20] *** Joins: rendar (~rendar@user/rendar)
[12:06:27] *** Joins: paul424 (~tom@ip-5-172-233-2.multi.internet.cyfrowypolsat.pl)
[12:06:42] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[12:07:42] <AhmedAmerican> i remember there's a library which convert a list into chunks of size `n`
[12:07:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:08:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[12:09:38] <Wulf> AhmedAmerican: grouper from https://docs.python.org/3/library/itertools.html?
[12:09:39] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:09:58] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:10:13] *** Joins: Vonter (~Vonter@user/vonter)
[12:11:40] <AhmedAmerican> Wulf: thank you.
[12:11:54] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[12:12:07] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:8313:4753:b259:91cf)
[12:12:27] *** Joins: hyperknot (~hyperknot@catv-188-142-160-214.catv.fixed.vodafone.hu)
[12:12:47] <widp> I am trying to use a tensorflow library, and I get this error: tfco_lagrange_multipliers:0 due to variable shape (82680,) and value shape (1, 82680) are incompatible
[12:12:48] <widp>  
[12:13:10] <widp> This library: https://github.com/google-research/tensorflow_constrained_optimization
[12:13:15] <jinsun_> AhmedAmerican : and you can get it from more_itertools instead of copy pasting https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.grouper
[12:13:40] <widp> How do I fix this?
[12:13:57] <jinsun_> AhmedAmerican: and chunked for the lazy version https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.chunked
[12:14:13] <AhmedAmerican> Yes that’s it
[12:14:15] <AhmedAmerican> Thanks a lot
[12:14:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:14:28] *** Joins: jmd (~user@de.cellform.com)
[12:14:40] <AhmedAmerican> Btw , which one is recommended to deal with large list with 10k elements
[12:15:04] <jinsun_> ah no both are lazy, not sure why there are two things doing almost the same thing
[12:15:33] <jinsun_> ah grouper allows padding
[12:15:38] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[12:15:54] *** Quits: noent (~quassel@user/sven/x-0967695) (Quit: noent)
[12:15:54] *** Quits: cYmen_ (~simon@squint.a-oben.org) (Quit: bye)
[12:16:07] *** Joins: cYmen (~simon@squint.a-oben.org)
[12:16:08] *** Joins: noent (~quassel@squint.a-oben.org)
[12:16:08] *** Quits: noent (~quassel@squint.a-oben.org) (Changing host)
[12:16:08] *** Joins: noent (~quassel@user/sven/x-0967695)
[12:16:50] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[12:17:35] <jinsun_> AhmedAmerican: either of them is fine, the choice mainly depends on what you want to do with the last element if the total size of the list is not a multiple of the chunk size
[12:18:45] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:19:40] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[12:22:47] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:25:17] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[12:25:37] *** Joins: jmd (~user@de.cellform.com)
[12:26:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:26:49] *** Joins: dayimproper (amit@2a01:7e00::f03c:91ff:fe08:f7b7)
[12:26:49] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[12:26:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:26:57] *** Joins: cosimone (~user@93-34-133-75.ip49.fastwebnet.it)
[12:27:15] *** Quits: upsala (~zcb@185.209.196.167) (Ping timeout: 256 seconds)
[12:27:36] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:27:54] <AhmedAmerican> Let’s say if it’s 10 numbers within a list , and my chunk condition is on 3 numbers . So I expect the last list to be single number
[12:28:06] <AhmedAmerican> jinsun_: is that what you meant ?
[12:28:16] *** Joins: tejr (~tejr@user/tejr)
[12:29:00] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[12:29:11] *** Joins: upsala (~zcb@185.213.155.232)
[12:30:09] *** Quits: Hist (~histausse@2001:470:69fc:105::b91) (Quit: You have been kicked for being idle)
[12:30:31] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:31:06] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:31:12] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:31:19] <jinsun> AhmedAmerican: then you want chunked, with grouper the last list will also have 3 elements
[12:31:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:31:42] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[12:31:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:33:09] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:33:14] *** Joins: tejr (~tejr@user/tejr)
[12:33:16] <jinsun> and actually its tuples with grouper not lists, another weird difference between the two
[12:33:23] *** Joins: _subopt (~subopt@2603-8081-2302-459a-1884-1497-0757-e964.res6.spectrum.com)
[12:33:28] *** Joins: rsx (~dummy@ppp-188-174-134-66.dynamic.mnet-online.de)
[12:34:02] <parv> jinsun, Thanks re *.chunked vs *.grouper (as I do prefer not to have deal with padded values)
[12:34:54] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 256 seconds)
[12:35:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:35:52] <jinsun> the version with padding is more useful when you are passing those chunkes into something like zip()
[12:36:14] *** Joins: xeyes (~user@user/duuude)
[12:36:24] *** Joins: upsala (~zcb@185.213.155.160)
[12:36:33] <jinsun> but if you are just iterating over the chunks you probably want chunked
[12:37:17] *** Joins: kaiseisei (~Thunderbi@223.11.82.191)
[12:37:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[12:39:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:39:40] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[12:41:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:41:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:42:01] *** Joins: hwdyki (~hwdyki@user/hwdyki)
[12:43:05] <hwdyki> how can i use a regex in select() for jinja2?
[12:43:10] *** Joins: mattfoxxx (~mattfoxxx@200116b822f4490071cd60d41e462908.dip.versatel-1u1.de)
[12:43:24] *** Quits: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581) (Read error: Connection reset by peer)
[12:44:03] *** Joins: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581)
[12:44:24] *** Quits: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581) (Read error: Connection reset by peer)
[12:45:03] *** Joins: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581)
[12:49:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:52:02] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[12:52:11] *** Joins: berong91 (~noob4ever@75.154.235.153)
[12:53:00] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[12:53:49] *** Quits: onichomp (~onichomp@2806:264:4408:12a:f498:a927:1536:8581) (Quit: onichomp)
[12:55:24] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 240 seconds)
[12:55:35] *** Quits: berong91 (~noob4ever@75.154.235.153) (Remote host closed the connection)
[12:55:54] *** Joins: arinov (~arinov@78.162.46.214)
[12:57:37] *** Joins: upsala (~zcb@185.209.196.137)
[12:58:48] *** Joins: triph (~triph@113.191.123.89)
[12:59:56] *** Quits: triph (~triph@113.191.123.89) (Client Quit)
[13:00:28] *** Joins: Vonter (~Vonter@user/vonter)
[13:01:55] *** Joins: kosh (~kosh@user/kosh)
[13:03:29] *** Quits: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:04:22] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[13:09:38] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:09:57] <AhmedAmerican> jinsun_: what ? How come the last list will contain 3 elements? From 0 to 9 chunked on 3 element ! So the last list will contain one item which is number 9
[13:10:17] *** Quits: xakan (~xakan@pnmx.zdx.fr) (Quit: The Lounge - https://thelounge.chat)
[13:10:32] *** Quits: jazzy2 (~jaziz@user/jaziz) (Max SendQ exceeded)
[13:11:10] *** Quits: upsala (~zcb@185.209.196.137) (Ping timeout: 256 seconds)
[13:11:10] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[13:11:36] *** Joins: jmd (~user@de.cellform.com)
[13:11:45] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:12:39] <Wulf> hwdyki: create a regex test, then do e.g.   something | select("regex", "^\d+$")
[13:12:50] *** Joins: upsala (~zcb@185.209.196.167)
[13:12:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:13:59] <hwdyki> thanks.
[13:14:35] *** Joins: badsektor (~badsektor@user/badsektor)
[13:16:46] *** Joins: xakan (~xakan@pnmx.zdx.fr)
[13:18:21] *** Joins: DavidMilestone (~DavidMile@182.68.216.223)
[13:19:33] *** Joins: dme86 (~dan@user/dan86)
[13:20:05] <DavidMilestone> Hi, I'm learning how to write unit tests for Python programs. This is what I've tried so far: https://bpa.st/NSMQ
[13:20:06] <DavidMilestone> Is this the correct way to write unit tests? And, is there any area of improvement which you would like to point out?
[13:20:51] *** Quits: cowsay-moo (~cowsay-mo@2001:ac8:9a:60:1015:e4fd:d6d:b039) (Ping timeout: 256 seconds)
[13:21:19] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[13:22:15] <jinsun> AhmedAmerican: well grouper adds padding, it will just add extra Nones (or whatever you supply as fillvalue), that's why I said use chunked instead, chunked does what you wanted
[13:22:16] <deniska> DavidMilestone: seems fine. Also take a look at `pytest`, it's a fairly popular 3rd party module for writing tests in python
[13:22:53] *** Joins: arinov_ (~arinov@77.67.139.142)
[13:23:19] <AhmedAmerican> Ah my mistake ;) we are on same page now
[13:23:23] <DavidMilestone> Alright, I will check it out. Thank you
[13:23:41] *** Quits: ExpiredKebab (~sgreadly@47-72-197-36.dsl.dyn.ihug.co.nz) (Quit: Textual IRC Client: www.textualapp.com)
[13:25:00] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:25:31] *** Joins: kcrk (~kcrk@user/kcrk)
[13:27:08] *** Quits: arinov (~arinov@78.162.46.214) (Ping timeout: 272 seconds)
[13:27:24] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:8989:4d0:aaef:ac40) (Ping timeout: 240 seconds)
[13:27:57] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[13:28:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[13:30:38] *** jazzy2 is now known as jazzy
[13:32:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:34:02] <fldme> is there a quick way to reverse the list pairwise?
[13:34:19] <fldme> like 3 4 1 2
[13:34:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:34:44] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[13:35:11] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:35:21] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[13:35:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:35:44] <Repiphany> [a_list[i:i+2] for i in range(0, len(a_list), 2)][::-1]
[13:36:21] <Repiphany> Some more work to flatten it as well I guess
[13:38:17] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[13:39:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:40:25] *** Joins: dme86 (~dan@user/dan86)
[13:41:14] *** Joins: tejr (~tejr@user/tejr)
[13:41:17] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[13:42:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:42:30] *** Joins: wakeup (~wakeup@user/wakeup)
[13:42:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:42:39] <wakeup> hello
[13:42:51] <wakeup> I have a space of matrices, let's say
[13:42:53] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:42:59] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[13:43:04] <wakeup> I would like to create a mapping between these matrices and integers
[13:43:18] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:43:34] <wakeup> I was thinking that, given that these matrices contain integers, then the best way would be to put the integers of these matrices in a sequence
[13:43:52] <wakeup> that would create a unique sequence of integers, which is an integer, that would uniquely represent the matrix
[13:44:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[13:44:28] <wakeup> I was wondering 1. do you think this is the best approach, 2. does anyone of you know any python library that would do something similar to what I want?
[13:44:46] <Repiphany> A sequence of integers isn't an integer
[13:44:57] <wakeup> well
[13:45:10] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[13:45:15] <wakeup> let's say you have [[1, 1], [3, 0]], then the number could be 1130
[13:45:19] <wakeup> that's what I mean
[13:45:47] <Repiphany> What is [[11, 1], [3, 0]]
[13:45:55] <wakeup> 11130
[13:46:03] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:46:06] <Repiphany> [[1, 11], [3, 0]]
[13:46:13] <wakeup> 11130
[13:46:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:47:22] <wakeup> well, in my case, I think that would not be a problem
[13:47:29] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[13:47:38] <wakeup> because I have only integers 0, 1, 2, 3
[13:47:53] <wakeup> and there can only be only one 1, one 2 and one 3
[13:47:56] <wakeup> everything else is 0
[13:48:30] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:48:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:48:56] <wakeup> anyway, I asked this question here because I was wondering if you have better ideas
[13:49:01] <Repiphany> [[0, 0, 0], [0, 0, 0], [1, 2, 3]] and [[0, 1], [2, 3]]
[13:49:22] <wakeup> they are different
[13:49:29] <wakeup> in terms of strings
[13:49:35] <Repiphany> Strings aren't integers
[13:49:44] <wakeup> well, I can shit all integers by 1
[13:49:49] <wakeup> and that would not be a problem anymore
[13:49:53] <wakeup> *shift
[13:50:12] <wakeup> but I like how you're trying to break the idea
[13:50:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:50:54] <Repiphany> It would be better to describe the actual problem you're trying to solve rather than your approaches to solving the problem that no one else knows
[13:50:55] <wakeup> anyway, I need to create a mapping between a matrices and numbers
[13:50:58] <wakeup> do you have better ideas?
[13:51:02] <wakeup> the mapping must be unique
[13:51:13] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:51:24] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[13:51:25] <wakeup> so, given a specific matrix, the same integer should be returned and it should be different from the integer of other matrices
[13:51:36] <Repiphany> Why does it need to be an integer
[13:51:37] <wakeup> this is the problem that I have
[13:51:46] <wakeup> mapping a series of matrices to integers
[13:51:51] <Repiphany> Are you adding integers together or doing other numbery things with them
[13:51:51] <wakeup> uniquely
[13:51:54] <wakeup> that's important
[13:51:59] <DavidMilestone> I think wakeup is trying to solve an algorithmic question
[13:53:09] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:53:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:53:22] <wakeup> well, if you have other ideas let me know
[13:53:34] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:53:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:53:57] <Repiphany> Smells like an XY problem
[13:54:15] <DavidMilestone> I have seen a similar problem somewhere but it had something to do with the prefix sum approach, im not sure about this problem tho
[13:54:38] <wakeup> well, I think I found an easier way
[13:55:01] <wakeup> I just enumerate all the matrices, and then arbitrarily map them to an integer not assigned before
[13:55:02] <wakeup> why not
[13:55:18] <wakeup> but I need to enumerate the matrices
[13:55:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:55:24] <wakeup> well, not a big problem, I guess
[13:55:53] <wakeup> I would need to do that anywy
[13:55:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:56:48] <wakeup> not exactly
[13:57:02] *** Joins: pycode (~pycode3@2001:b07:5d28:551:1fe6:b677:2755:3dbd)
[13:57:07] <wakeup> what I was thinking about before didn't require to initially enumerate all matrices
[13:57:19] <wakeup> I could compute the integer representation of a matrix on the fly
[13:59:04] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:59:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:59:39] <pycode> hello i am going to create a django project and i wpuld like to organize the code a little bit, for example i split views.py into a module like /views/recruiter.py  /views/agent.py and same thing for forms.py i do /forms/recruiter.py and /forms/agents.py and so on... i do that to organize the code to avoid having giant views.py and forms.y so i that way i can "segment" the views/forms on purpose. It is not really django related
[13:59:39] <pycode> question i just wonder if...having same name.py could give me problem for some reason
[14:00:34] <pycode>  /views/agent.py and /forms/agent.py same filename..is better to name them with different names?
[14:01:15] <deniska> pycode: it's fine
[14:01:43] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:02:09] <deniska> pycode: (it could be somewhat problematic in py2 era which supported implicit relative imports, but it's not the case in py3)
[14:02:45] <pycode> deniska, my doubt is...what about i have to import them? i mean....    from app.views import agent       from app.forms import agent
[14:02:53] <pycode> so for one import i need to do something like
[14:03:01] <pycode> from app.forms import agent as agent_form
[14:03:06] <pycode> to avoid collision?
[14:03:14] <pycode> OR...should i do something inside the __init__.py ^
[14:03:16] <pycode> ?
[14:03:48] <deniska> pycode: you can do `from app import views` and then use `views.agent`
[14:04:23] *** Joins: godSend23 (~journeyMa@2601:646:8900:6fe0:e11c:b9c3:8fe1:88a)
[14:04:27] <godSend23> hey all
[14:04:40] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[14:04:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[14:05:37] <pycode> yeah that too, or create something like import agent as agent_form inside the /forms/__init__.py
[14:05:43] <pycode> could it be a solution too?
[14:05:51] <pycode> just asking i will do what you said
[14:06:33] <DavidMilestone> wakeup although I'm not an expert (im a beginner) and I probably shouldn't say this, if I were you, I would ask this question in the #algorithms channel to know if there's any standard, optimized approach to solving such problems, and get a general idea as to how I should implement it. And then I would think of translating that algo in Python, and
[14:06:34] <DavidMilestone> ask for the best Python implementation practices in this channel. A friendly suggestion because I like solving similar problems too, and I am interested to know the best solution to this problem :)
[14:07:07] <godSend23> had no idea therre was an algos channel
[14:07:26] *** Joins: plastico (~plastico@neomutt/plastico)
[14:07:29] *** Joins: cockatoodude (~communist@bras-base-tnhlon4048w-grc-67-67-71-22-200.dsl.bell.ca)
[14:08:15] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[14:08:22] <pycode> deniska, ^
[14:08:27] *** Joins: brabrax (~brabrax@user/brabrax)
[14:09:00] <wakeup> yea, this not necessarily a python question
[14:09:44] <deniska> pycode: it can be a solution, but I think `.` is easier to type than _
[14:10:00] <pycode> ok, thanks
[14:10:58] <godSend23> anybody use AI w/ python?
[14:11:19] <pycode> the problem i found with py frameworks is that they allow a lot of freedom in structuring the project, for example in django some devs are putting apps into a separate "apps" folder...sometimes it is hard to find a "common" way
[14:11:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[14:11:36] *** Joins: georgios (~georgios@user/georgios)
[14:11:57] *** Joins: Vonter (~Vonter@user/vonter)
[14:12:08] <pycode> maybe i am wrong about that, i have started using django recently.
[14:13:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:13:26] <cockatoodude> Djagno is great if you want to build a CMS type system for personal purposes that no existing CMS is good for
[14:13:57] <cockatoodude> I personally find Elgg, and Joomla, solve most of my web development needs, with additional other web dev solutions incorporated into them
[14:14:13] <cockatoodude> I love and hate django
[14:14:17] *** Quits: arinov_ (~arinov@77.67.139.142) (Ping timeout: 240 seconds)
[14:14:29] *** Joins: bluedust (~bluedust@103.165.167.221)
[14:14:56] <deniska> pycode: django is on a somewhat stricter side when it comes to code organization
[14:15:42] <pycode> cockatoodude, never heard about Elgg
[14:15:42] <deniska> pycode: I generally tend to divide code into apps, views/forms/models of each individual app are too small to divide
[14:16:05] *** Joins: dme86 (~dan@user/dan86)
[14:16:20] <deniska> so I'd probably make agent/views.py and agent/forms.py etc
[14:16:49] <cockatoodude> Elgg is a social media platform CMS, which has features like blogs, pages, groups, twitter style feeds, file sharing, messaging... All the social media platforms and all the major features about them or used by them from other platforms... in one massive package
[14:17:01] <cockatoodude> Elgg last time I read the CSS, had over 40,000 lines of CSS
[14:17:33] <pycode> deniska, i thought the same but i do not know...i m ean i am still a bit confused about "app" concept in django... because i also thought to create "agent" app and put there views.py forms.py tables.py FOR "agent" same things for recruiter, same thing for other roles...but i read that app should be used to allow reusability of the code
[14:17:43] <pycode> in my case i do not need to reuse the code into other projects
[14:17:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:17:52] *** Quits: kaiseisei (~Thunderbi@223.11.82.191) (Quit: kaiseisei)
[14:17:59] <pycode> i should odo that just for "organization" of the code...but maybe it is not the goal of django apps.
[14:18:25] <cockatoodude> For Django, you can't use it to supplement scripted or browser run code. You can't generate interactive complex webapps with django alone
[14:18:41] <pycode> deniska, when you say "agent/views.py" you mean inside an app called "agent" another for "recruiter" and so on ?
[14:19:09] *** Joins: dob1_ (~dob1@user/dob1)
[14:19:23] *** Joins: stellacy_ (~stellacy@static-198-54-129-46.cust.tzulo.com)
[14:19:26] <deniska> pycode: I typically start making a distinct app when I may want to split models.py otherwise
[14:19:43] <pycode> if i do that deniska my problem will be with models.py becucase i share the model across all apps, so an app needs another apps to work etc etc...i think it will be a bit complex
[14:19:58] <pycode> that's the point as i just said..
[14:20:20] <deniska> if it's just views and forms, maybe keeping them in the same app may make more sense
[14:20:20] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 272 seconds)
[14:20:35] <cockatoodude> How many people would be interested in writing Android apps, with the full Android SDK functionality, in python?
[14:20:39] *** Quits: davep (uid504677@id-504677.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:20:41] *** Quits: godSend23 (~journeyMa@2601:646:8900:6fe0:e11c:b9c3:8fe1:88a) (Quit: Leaving)
[14:20:58] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[14:21:00] *** Joins: toverna (~uni@85.249.169.81)
[14:21:11] <pycode> deniska, i like separating code in app i feel it more organized but all the model will be inside the "core" app
[14:21:14] <cockatoodude> I am asking because I am considering making Android ADK API hooks for python and making a app handling bunch of code and interpreter to do that
[14:21:22] *** Quits: ejjfunky0 (~ejjfunky2@125.164.17.4) (Remote host closed the connection)
[14:21:22] <deniska> cockatoodude: I find this JS library great in supplementing django on the browser side of things: https://htmx.org/
[14:21:25] <pycode> so for that reason i thought to create forms/agent.py etc etc
[14:22:04] <pycode> because as i said, i do not need to reuse the app
[14:22:10] <pycode> it is a 100% custom project
[14:22:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:22:30] <deniska> pycode: in the end of the day the distinction is not too big, so use whatever's more comfortable to you. I've certainly saw both approaches
[14:22:59] <pycode> ok thanks!
[14:23:19] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:23:33] <stellacy_> hi
[14:23:48] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[14:23:56] *** Joins: magla (~gelignite@55d46ecf.access.ecotel.net)
[14:24:36] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[14:24:51] <pycode> deniska, the real reason i am asking such question is becase at the moment i am the only dev on this project....but if the team increase they will find other django devs so i would like to find the "most common" solution to avoid confusion
[14:25:23] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:25:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:25:27] <pycode> but if you said that both solutions are "common"... ok
[14:26:15] <deniska> pycode: I often create multiple apps per project with no real intention for reuse, but I also mostly worked solo when it comes to django. I think libera has a channel on django, try also asking there :)
[14:27:02] *** Quits: paul424 (~tom@ip-5-172-233-2.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[14:27:22] <pycode> deniska, but you said that you decide to create a new app when you have separated models right?
[14:27:36] <deniska> pycode: that's typically a tipping point
[14:27:41] <pycode> but..in the case your app needs other apps to work...and data are shared across other models it will be complex
[14:29:55] <pycode> deniska, for example the "blog" is a separate app in my case, it has nothing to do with the main project so it is ok having another apps, but for recruiter/agent idk, recruiter needs agent data and other way around so ..
[14:31:27] <deniska> pycode: my apps would refer to models in other apps
[14:31:47] *** Joins: filename (~kilitary@kilitary.xyz)
[14:32:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:33:00] <pycode> deniska, yes that the origin of the confustion i think about "apps" like a pluggable piece of code that has its own purpose and does not need other thing outside its app to work...in my case if i move some code inside a different app, that code can do nothing without other things inside other apps
[14:33:19] *** Joins: nomic (~nomic@185.217.117.193)
[14:33:30] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[14:33:48] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:34:40] *** Joins: dme86 (~dan@user/dan86)
[14:34:42] <pycode> deniska, i mean..i think about the app like a way to add more features to the main project, in my case no, all the things are strctly related
[14:34:54] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[14:36:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[14:37:35] <pycode> deniska, i'm sorry if I bore you with these organization questions :D ahah
[14:38:03] <deniska> pycode: in a project I did relatively recently, basically a catalog of, let's call them 'things'. So I had an app `things`, but pages for things had comments on them, so I had an app `comments`, and comments.comment would have a foreign key to things.thing
[14:38:39] *** Joins: Klinda (~superleag@user/klinda)
[14:39:07] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:39:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[14:39:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:39:58] *** Quits: stellacy_ (~stellacy@static-198-54-129-46.cust.tzulo.com) (Ping timeout: 272 seconds)
[14:40:40] <pycode> deniska, yes that's correct because you main "things" does not refer to comment...you just adding a functionality to "things" so if comments are pointing to "things" is correct to me...the soubt is about when you have an app that need other app to work and viceversa
[14:41:49] <deniska> pycode: if you remove `comments` the whole thing breaks, because views and templates of `things` do refer to `comments`, so it's not as clean as you'd imagine
[14:41:52] *** Quits: widp (~user@124.123.105.155) (Ping timeout: 272 seconds)
[14:42:48] <pycode> yeah that's correct but it is templating problem, it is not a problem about the structure of the db
[14:43:04] <pycode> if yuou remove the comment on template everything works..
[14:43:20] <pycode> in my case if i remove an app EVERYTHING break
[14:43:30] <pycode> :D
[14:43:43] <pycode> domino effect
[14:47:17] *** Joins: snortie (~snortie@2a02:8308:386:b900:f881:7773:c6f5:7fb8)
[14:47:19] *** Joins: kaiseisei (~Thunderbi@223.11.82.191)
[14:47:23] <wakeup> is there a numpy function that converts converts the elements of an array to a string, i.e. [0, 1, 2, 3, 4] to "01234"?
[14:47:31] <wakeup> I know there's array2string, but that doesn't do what I need
[14:47:53] <wakeup> I can do it manually
[14:48:05] <wakeup> but I was wondering if there's something already implemented i could use
[14:48:12] <wakeup> I can do a join
[14:48:17] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Ping timeout: 240 seconds)
[14:49:12] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:49:17] <deniska> ''.join(str(a) for a in this_list)
[14:49:28] <wakeup> yes, that's what I was thinking about
[14:49:39] <wakeup> I was wondering if numpy provided anything like that
[14:49:57] <wakeup> but yes that isn't too long to implement and I also already did it anyw
[14:50:57] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 256 seconds)
[14:51:07] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:51:23] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[14:51:38] *** Joins: dme86 (~dan@user/dan86)
[14:52:32] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:53:15] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[14:53:25] *** Joins: Vonter (~Vonter@user/vonter)
[14:54:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:55:46] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:56:32] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:56:34] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[14:57:58] *** Joins: widp (~user@124.123.105.155)
[14:59:12] *** Joins: Earnestly (~earnest@user/earnestly)
[15:00:05] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[15:00:50] *** Joins: remolej (~kenoba@user/kenoba)
[15:01:33] <Earnestly> When dealing with IDPF obfuscated font files, python3 (3.10) mimetypes.guess_type will return font/ttf (or whatever it is) if obfuscated or not.  file(1) returns application/octet-stream for obfuscated files and I'm wondering how one might deal with mimetypes being a bit too coarse
[15:02:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:02:26] *** Joins: tomasfarias (~tomasfari@user/tomasfarias)
[15:02:27] *** Joins: dme86 (~dan@user/dan86)
[15:02:39] <Earnestly> Because while it claims to be a font/ttf, it certainly cannot be used as one until deobfuscated.  This makes it difficult to know if the obfuscation should be toggled or not http://idpf.org/epub/20/spec/FontManglingSpec.html
[15:02:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:04:53] *** Quits: DavidMilestone (~DavidMile@182.68.216.223) (Quit: Client closed)
[15:12:43] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[15:14:59] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[15:16:24] *** Quits: Jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch) (Ping timeout: 256 seconds)
[15:18:02] *** Joins: Vonter (~Vonter@user/vonter)
[15:18:10] *** Joins: frost (~frost@user/frost)
[15:19:03] *** Joins: dme86 (~dan@user/dan86)
[15:19:20] *** Joins: trace987 (~trace@user/trace)
[15:20:02] *** Joins: Barones (~Barones@user/Barones)
[15:20:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:21:02] *** Quits: pycode (~pycode3@2001:b07:5d28:551:1fe6:b677:2755:3dbd) (Ping timeout: 260 seconds)
[15:21:53] *** Quits: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:22:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[15:23:04] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[15:23:34] *** Joins: brabrax (~brabrax@user/brabrax)
[15:23:51] *** Joins: Z-cat (~Z-cat@user/z-cat)
[15:24:24] *** Joins: yusraDev (~yusraDev@62.201.243.118)
[15:24:33] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:8989:4d0:aaef:ac40)
[15:25:26] <yusraDev> Hey there,
[15:25:27] <yusraDev> I'm using Djoser and for activation user process, how do I send activation link to there email without specifying {EMAIL_HOST_USER,EMAIL_HOST_PASSWORD} in settings file?
[15:25:27] <yusraDev> Any help would be much appreciated.
[15:28:46] <ChrisWarrick> yusraDev: if your SMTP server supports auth-less sending, I suppose you could set them to None
[15:29:09] <ChrisWarrick> yusraDev: (you need a working SMTP server to send e-mail from Django)
[15:29:23] <ChrisWarrick> yusraDev: (and you should not ask the same question in both #django and #python)
[15:29:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:30:37] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:30:56] *** Joins: zuplex (~zuplex@202.51.76.205)
[15:31:09] *** Quits: zuplex (~zuplex@202.51.76.205) (Remote host closed the connection)
[15:31:34] *** Joins: zuplex (~zuplex@202.51.76.205)
[15:31:49] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th)
[15:33:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:33:24] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[15:34:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:2dae:d303:309b:b673) (Ping timeout: 240 seconds)
[15:35:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:35:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:35:43] *** Quits: atomicwrites (~atomicwri@2601:588:c500:2eb0:d4d2:81ff:fe02:26d3) (Ping timeout: 256 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:36:18] <yusraDev> ChrisWarrick thanks for your guidance, I didn't know about the SMTP server account, I will learn about it  :D  I didn't know that the two channels is kinda connected, that won't happen again.
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:37:18] *** Reinhilde is now known as AmyMalik
[15:37:24] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[15:37:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:37:34] *** Quits: yusraDev (~yusraDev@62.201.243.118) (Quit: Client closed)
[15:38:09] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[15:40:10] *** Joins: dme86 (~dan@user/dan86)
[15:40:29] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[15:41:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:42:22] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:42:40] *** Quits: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:43:39] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[15:44:13] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4b9400000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:44:57] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[15:45:36] *** Joins: LuKaRo_ (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:47:24] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[15:48:11] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 256 seconds)
[15:48:29] *** Quits: reset (~reset@user/reset) (Quit: reset)
[15:49:39] *** Joins: BlessJah (~BlessJah@user/blessjah)
[15:50:54] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[15:51:49] *** Joins: yusraDev (~yusraDev@62.201.243.118)
[15:52:12] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[15:52:20] *** Quits: yusraDev (~yusraDev@62.201.243.118) (Client Quit)
[15:54:02] <braxas> is there a good reason to have module level duners beyond __version__ ?
[15:56:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:57:06] *** Joins: cdown (~cdown@188.214.11.14)
[15:58:12] <nedbat> braxas: they are very informal, and not standardized.
[15:58:21] <nedbat> braxas: so probably not.
[16:04:12] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[16:07:16] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th) (Remote host closed the connection)
[16:07:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:07:52] *** Joins: p-i- (~Ohmu@183.89.29.122)
[16:09:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:09:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:11:25] *** Joins: dme86 (~dan@user/dan86)
[16:11:31] *** Joins: widp` (~user@124.123.81.63)
[16:14:29] *** Quits: widp (~user@124.123.105.155) (Ping timeout: 256 seconds)
[16:14:36] *** Joins: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr)
[16:14:57] *** Joins: xeyes (~user@user/duuude)
[16:16:28] *** Quits: widp` (~user@124.123.81.63) (Ping timeout: 256 seconds)
[16:18:00] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:18:06] *** Joins: msk (~Thunderbi@89.205.124.40)
[16:19:04] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:19:11] *** Joins: ejjfunky0 (~ejjfunky2@125.164.16.133)
[16:19:18] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[16:21:08] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[16:21:21] *** Joins: BlueFrog (~BlueFrog@user/BlueFrog)
[16:22:43] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[16:23:30] *** Joins: Angs (~Angs@193.138.218.215)
[16:24:27] *** Joins: sobkas (~sobkas@95.175.17.217)
[16:24:51] *** Quits: hyperknot (~hyperknot@catv-188-142-160-214.catv.fixed.vodafone.hu) (Quit: Textual IRC Client: www.textualapp.com)
[16:25:48] *** Joins: wakeup (~wakeup@user/wakeup)
[16:26:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:26:16] *** Joins: Vonter (~Vonter@user/vonter)
[16:26:58] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[16:27:32] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[16:27:48] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[16:28:01] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:29:12] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[16:29:38] *** Joins: sobkas (~sobkas@95.175.17.217)
[16:30:10] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[16:30:33] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[16:31:33] *** Joins: dme86 (~dan@user/dan86)
[16:32:06] *** Joins: sobkas (~sobkas@95.175.17.217)
[16:32:42] *** Quits: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) (Quit: Leaving.)
[16:32:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[16:32:52] *** Joins: angelacrust (~angelacru@182.68.216.223)
[16:32:56] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:33:14] <xeyes> I expect "%02.3f"%(1.4) to be 01.400
[16:33:20] <xeyes> but it is 1.4 :(
[16:33:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:33:37] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:35:20] <nedbat> xeyes: it's 1.400 for me on Python 3.9
[16:35:28] <grym> i get 1.400 also
[16:36:22] *** Joins: pvergain1 (~Thunderbi@2a01:e0a:223:690:243f:5eba:389b:63d7)
[16:36:35] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[16:36:38] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:243f:5eba:389b:63d7) (Ping timeout: 260 seconds)
[16:36:38] *** pvergain1 is now known as pvergain
[16:36:48] <grym> 06.3f gives me 01.400
[16:37:09] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[16:37:13] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:37:15] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:37:16] <grym> f"{1.4:06.3f}"  works too
[16:37:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:37:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:40:27] <grym> xeyes: in a formatting string X.Y, X is "how many digits, total" and Y is "how many of those go after the decimal point", and any digits before X are "what to pad with"
[16:40:43] *** Joins: l4yer (~l4yer@84.69.191.245)
[16:40:50] <grym> er, if that's zero :D
[16:41:41] *** Quits: toverna (~uni@85.249.169.81) (Ping timeout: 256 seconds)
[16:43:14] *** Joins: aknot (~aknot@2603-900a-1503-17bb-41fb-8b8e-dff0-1cb4.inf6.spectrum.com)
[16:43:15] *** Joins: toverna (~uni@2.95.239.158)
[16:44:49] *** Quits: BlueFrog (~BlueFrog@user/BlueFrog) (Quit: Quit)
[16:46:00] *** Quits: l4yer (~l4yer@84.69.191.245) (Ping timeout: 272 seconds)
[16:47:15] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[16:49:15] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:49:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:49:30] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:49:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:50:30] *** Joins: damonlynch (~ngaio@static-68-235-44-10.cust.tzulo.com)
[16:51:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:51:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:51:58] *** Quits: angelacrust (~angelacru@182.68.216.223) (Quit: Client closed)
[16:52:34] <Lvl4Sword> Earnestly, Looks like mimetypes isn't all that advanced after a cursory look of the source code - https://github.com/python/cpython/blob/3.10/Lib/mimetypes.py - Looks to just read in a list of known files ( like /etc/mime.types ) and tries to guess based on the filename. You'll need to do more advanced checking yourself, outside of mimetypes
[16:54:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:54:52] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[16:54:53] <Earnestly> Lvl4Sword: It seems be taking file extension as source of truth
[16:55:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:55:13] <Lvl4Sword> Earnestly, Precisely, which is pretty rudimentary honestly.
[16:56:25] <Lvl4Sword> I haven't messed much with font files or the obfuscation you're working with, so can't give much assistance on that. But you at least know *why* mimetypes is returning what it is
[16:58:06] *** Quits: WhiteKarura (~WhiteKaru@user/whitekarura) (Client Quit)
[16:58:24] *** Joins: l4yer (~l4yer@195.181.170.210)
[16:59:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:00:51] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[17:01:00] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[17:01:41] *** Quits: cockatoodude (~communist@bras-base-tnhlon4048w-grc-67-67-71-22-200.dsl.bell.ca) (Quit: Leaving)
[17:02:09] *** Quits: kaiseisei (~Thunderbi@223.11.82.191) (Changing host)
[17:02:09] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[17:02:57] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Ping timeout: 240 seconds)
[17:04:14] *** Joins: Axy (~Axy@user/axy)
[17:05:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:06:04] *** Joins: dme86 (~dan@user/dan86)
[17:09:17] *** Joins: arinov_ (~arinov@78.162.46.214)
[17:09:33] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:10:35] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[17:11:01] <yanmaani> Is there a way to split an array based on a lambda?
[17:11:22] <yanmaani> 'hi there'.split(' ') == ['hi', 'there']
[17:11:54] <deniska> yanmaani: I see no lambda here?
[17:12:21] <yanmaani> F(lambda x: x == 3, [1, 2, 3, 4, 5]) == [[1, 2], [4, 5]]
[17:12:34] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[17:12:38] <yanmaani> Is there an equivalent of split() for arbitrary lists?
[17:13:14] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[17:13:24] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:409c:deea:cba7:6b6d)
[17:13:24] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:409c:deea:cba7:6b6d) (Changing host)
[17:13:24] *** Joins: skapata (~Skapata@user/skapata)
[17:13:27] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[17:13:44] <xeyes> Lvl4Sword: filenames are like the best source of information
[17:13:48] <deniska> yanmaani: itertools.groupby is kinda sorta close, but not really
[17:13:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[17:14:16] <esro> can i match spaces / tabs with .startswith() ?
[17:14:21] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[17:14:24] <xeyes> look at the pegasus hack, which used pdfs named gifs, and the system interpreted them as pdfs
[17:14:36] <esro> i have arbirary of number of spaces, then pattern i am seeking for
[17:14:39] *** Joins: ft8 (~ft8@178.210.211.25)
[17:14:51] <Lvl4Sword> xeyes, That sounds like a horrible idea
[17:15:00] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[17:15:02] *** Quits: zuplex (~zuplex@202.51.76.205) (Remote host closed the connection)
[17:15:04] <ft8> Hi
[17:15:08] <bjs> esro: if you're using words like "match" and "pattern" perhaps you just want to write a regex?
[17:15:26] <xeyes> Lvl4Sword: getting mimetype from filename?
[17:15:32] <yanmaani> esro: can you give an example?
[17:15:41] <yanmaani> deniska: I can't use that for separators, now can I?
[17:15:48] <Lvl4Sword> xeyes The above example you gave.
[17:16:01] *** Quits: ft8 (~ft8@178.210.211.25) (Quit: Client closed)
[17:16:17] *** Joins: ft8 (~ft8@178.210.211.25)
[17:16:24] <deniska> yanmaani: yeah, perhaps not what you want. If you need this operation often, create your own function
[17:16:25] <xeyes> you can construct files that qualify for more than one types of file and that is an attack vector
[17:16:30] <dreamer> hmm. I'm looking to convert PD [expr] (C-like expressions) to actual C code. does anyone have some tips/ideas? http://yadegari.org/expr/expr.html - maybe I'll just start by doing some stupid string replacement and output the result, but I feel there are way too many caveats to consider
[17:16:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[17:16:40] *** Joins: Sadale (~Sadale@user/sadale)
[17:16:42] <yanmaani> I guess I can do, like, cumsum(map(lambda x: x == 4, [1, 2, 4, 8]))
[17:16:45] <yanmaani> then group on that
[17:16:54] <esro> haha cumsum XD
[17:16:58] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:17:07] <bjs> yanmaani: groupby([1,2,3,4,5], lambda v: v != 3) will get roughly [[1,2],[3],[4,5]]
[17:17:22] <yanmaani> oh, will that work? Hmm
[17:17:33] <bjs> (groupby doesn't return lists, it returns groups so you have a little more work to put it in the right format)
[17:17:34] <yanmaani> In that case, I suppose I can just get the uneven indices?
[17:17:50] <yanmaani> hmm, can I just do list(...)
[17:17:52] <bjs> yanmaani: no don't do that, go read what groupby actually returns
[17:18:02] <yanmaani> okay, will do
[17:18:18] *** Quits: toverna (~uni@2.95.239.158) (Ping timeout: 272 seconds)
[17:18:31] <bjs> yanmaani: it might work for your use-case here, it doesn't quite behave the same as .split() but it might be something you can write a little wrapper around if it works for you
[17:18:53] *** Joins: paul424 (~tom@apn-46-77-202-68.dynamic.gprs.plus.pl)
[17:19:24] *** Parts: ft8 (~ft8@178.210.211.25) ()
[17:19:31] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[17:19:37] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[17:20:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:20:35] *** Joins: dme86 (~dan@user/dan86)
[17:20:40] *** Joins: brabrax (~brabrax@user/brabrax)
[17:20:57] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[17:21:18] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:21:33] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[17:22:56] <esro> search("\S*\"uri\":", line) ;; thx
[17:23:38] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[17:24:15] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[17:24:38] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[17:24:46] *** Joins: jamea (~jamea@177.239.81.39)
[17:25:04] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:26:19] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[17:26:29] *** Joins: otty (~otty@27.97.169.58)
[17:26:42] *** Joins: thiras (~thiras@user/thiras)
[17:26:55] *** Quits: kts (~kts@103.73.237.210) (Quit: Konversation terminated!)
[17:27:07] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:27:17] *** Joins: brabrax (~brabrax@user/brabrax)
[17:27:33] <yanmaani> bjs: yeah thanks this works
[17:27:40] <yanmaani> [list(g) for _, g in groupby([1,2,3,4,5], lambda x: x == 3)]
[17:27:48] *** Quits: arinov_ (~arinov@78.162.46.214) (Ping timeout: 240 seconds)
[17:27:57] *** Joins: arinov_ (~arinov@77.67.139.142)
[17:28:20] <yanmaani> or even `[list(g) for _, g in groupby([1,2,3,4,5], lambda x: x == 3)][::2]`
[17:28:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:29:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:29:53] <jamea> hi all
[17:29:58] *** Joins: wakeup (~wakeup@user/wakeup)
[17:30:13] <jamea> how to create a basic window with a button heere in my windows
[17:30:36] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[17:31:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:31:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:31:48] <fldme> tk should be built in
[17:32:51] <tk> Built into what?
[17:33:44] <marduk> lol
[17:34:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:34:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:35:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:35:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:37:04] <jamea> fldme for me? tk?
[17:37:24] <fldme> yes
[17:37:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:37:44] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[17:39:06] <tk> jamea: just to avoid confusion. fldme was informing you that the Tk GUI toolkit should ship as part of windows python installations. Please refer to here for documentation: https://docs.python.org/3/library/tk.html
[17:39:32] <tk> There should be some guides online on how to use it. I am not associated with the Tk GUI toolkit but I do get pinged a lot when anyone talks about it.
[17:39:57] <jamea> ok i start here
[17:40:41] <jamea> thanks
[17:41:04] <jamea> https://www.pythontutorial.net/tkinter/tkinter-hello-world/
[17:41:11] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 245 seconds)
[17:41:52] *** Joins: ice9 (~ice9@user/ice9)
[17:43:51] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[17:44:09] <jamea> tk: simple? import tkinter as tk root = tk.Tk() root.mainloop()   =
[17:44:11] <jamea> ?
[17:45:35] *** Joins: dme86 (~dan@user/dan86)
[17:47:56] <tk> I'm not sure what you're asking. Yes, it is that simple to get just a blank window up.
[17:51:11] *** Joins: mossman93 (~quassel@user/mossman93)
[17:51:18] <jamea> ooo impressionant...
[17:51:23] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[17:52:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[17:55:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:55:43] <nedbat> i have a testing dilemma: I'd like to test the logic in this block of code https://github.com/nedbat/dinghy/blob/main/src/dinghy/digest.py#L227-L239. It raises exceptions if it can't create async tasks, and I want to test that, but that means making tasks in my tests that i have no intention of running.  Is that weird?
[17:55:46] <jamea> i want press a button and  exceute Excel...New Book,  and click or positioning on cell C19
[17:55:51] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:56:00] *** Joins: dlb (~netbsd@bosen.dberg.net)
[17:56:02] *** Joins: slav0nic (slav0nic@python.su)
[17:56:12] *** Quits: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:56:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[17:56:55] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:58:58] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:59:00] <fldme> you need to find a dde library and use it
[17:59:31] <jamea> fldme for me?
[17:59:38] <fldme> yes
[18:00:05] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:00:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:00:16] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[18:00:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:00:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:01:48] *** Joins: Elodin (~elodin@user/elodin)
[18:01:58] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[18:02:01] <jamea> thanks
[18:03:16] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:05:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:07:23] *** Joins: dme86 (~dan@user/dan86)
[18:10:10] *** Joins: pro_z (~pro_z@37.214.51.149)
[18:12:24] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[18:12:30] *** Joins: Guest21 (~Guest21@36.72.21.216)
[18:12:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[18:12:39] *** gentooclimax is now known as climax
[18:18:45] *** Joins: Barones (~Barones@user/Barones)
[18:20:53] *** Quits: parv (~quass@user/parv) (Quit: parv)
[18:21:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:22:01] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[18:24:46] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e5cd-9d1e-ee8d-d0aa.res6.spectrum.com)
[18:25:54] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[18:26:25] <NeilRG> Can someone explain why this is failing? https://github.com/google/flax/runs/5264982245?check_suite_focus=true  It says can't import from typing_extensions, but I added it to setup.py
[18:27:08] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[18:27:33] *** Joins: zebrag (~chris@user/zebrag)
[18:27:46] *** Joins: skapata (~Skapata@user/skapata)
[18:28:09] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:29:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:31:46] *** Quits: arinov_ (~arinov@77.67.139.142) (Ping timeout: 272 seconds)
[18:33:22] *** Joins: Bombo (atom@user/bombo)
[18:33:26] <Bombo> hi
[18:34:31] <WhiteKarura> Hi everyone! I had a question regarding the mean_squared_error() function of scikit learn. I am receiving a
[18:34:31] <WhiteKarura> 'UFuncTypeError' but what strikes me is that nowhere in the code have I previously declared "y_true" & "y_pred". Additionally, since this is a pre-written code snippet, present in the notebook from the start (as everyone knows, these parameters are native to the  mean_squared_error() method only)
[18:34:32] <WhiteKarura> Am I suppose to declare "y_true" & "y_pred" myself?
[18:34:32] <WhiteKarura> Link to the code--> https://bpa.st/NHSQ
[18:34:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:34:33] <WhiteKarura> [sorry if I've said anything technically incorrect. I'm a  beginner in ML]
[18:34:59] *** Guest21 is now known as Sidiq
[18:35:30] <Bombo> i get this error on ubuntu focal: <type 'exceptions.ImportError'>: No module named six.moves, probably needs a newer version? when i 'pip install six' it says 'Requirement already satisfied: six in /usr/lib/python3/dist-packages (1.14.0)'
[18:36:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[18:37:20] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:38:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:39:10] <nedbat> Bombo: how are you running your program?
[18:39:37] <Bombo> nedbat: pydoc mod_pywebsocket.standalone
[18:40:13] <nedbat> Bombo: probably pydoc and pip are different python installations.  Use `python -m pydoc` and `python -m pip`
[18:41:11] <BlackBishop> anybody here using sonarqube-scanner in docker for a python project ? It fails me :-(
[18:41:46] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:42:25] *** Joins: goldfish (~goldfish@user/goldfish)
[18:42:46] *** Joins: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr)
[18:42:50] <Bombo> nedbat: oh yes that works, thank :)
[18:45:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:45:15] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[18:45:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:46:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:46:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:46:04] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[18:46:36] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[18:46:37] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Quit: Leaving...)
[18:46:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:46:55] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[18:47:19] *** Quits: paul424 (~tom@apn-46-77-202-68.dynamic.gprs.plus.pl) (Remote host closed the connection)
[18:48:12] *** Quits: yukkeorg (~yukkeorg@105.135.178.217.shared.user.transix.jp) (Remote host closed the connection)
[18:49:15] *** Joins: pycurious (~Adium@user/pycurious)
[18:50:36] *** Joins: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net)
[18:51:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:52:16] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[18:52:29] *** Joins: pycurious (~Adium@user/pycurious)
[18:52:54] *** Joins: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:54:17] <jamea> tkinter: root.title('Utileria para Extraer datos de Excel.')   not show immediatly, when move the window was displayed, how to force to be displayed?
[18:55:08] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:55:32] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[18:55:57] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 240 seconds)
[18:56:21] *** Joins: tomasfarias (~tomasfari@user/tomasfarias)
[18:56:28] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[18:56:53] *** Joins: kts (~kts@103.73.237.237)
[18:57:07] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[18:57:16] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[18:59:11] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:02:22] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:02:34] *** Joins: dme86 (~dan@user/dan86)
[19:02:47] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[19:03:24] *** Joins: Vonter (~Vonter@user/vonter)
[19:05:18] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:05:19] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[19:07:27] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:07:32] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:09:07] *** Joins: pycurious (~Adium@user/pycurious)
[19:09:17] *** Quits: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:09:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:10:43] *** Quits: wakeup (~wakeup@user/wakeup) (Ping timeout: 256 seconds)
[19:11:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:11:42] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[19:11:55] *** Joins: pycurious (~Adium@user/pycurious)
[19:12:24] *** Joins: oriba (~oriba@dynamic-077-191-072-113.77.191.pool.telefonica.de)
[19:13:16] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 256 seconds)
[19:13:47] *** Joins: stemid (~nocturnal@i-lands.anark.ist)
[19:14:02] *** climax is now known as gentooclimax
[19:14:09] <stemid> will python ever make typecasted arguments standard so old code won't work?
[19:14:20] <nedbat> stemid: extremely unlikely
[19:14:41] *** Joins: royce3 (~royce3@66.102.230.214)
[19:14:49] *** Joins: fldme18 (~fldme@178.49.152.42)
[19:14:50] *** Joins: frmlof (~frmlof@70.243.238.191)
[19:14:51] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:15:18] <nedbat> stemid: 1) many people value the dynamic-typed nature of Python. 2) the 2->3 transition was painful, no one wants large breaking changes
[19:15:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:15:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[19:15:37] <fldme18> there are better ways to extract excel data than excel automation btw
[19:16:12] *** Quits: otty (~otty@27.97.169.58) (Ping timeout: 240 seconds)
[19:16:16] <stemid> oh I mean type annotation, yeah now that I know they're not enforced I realize it's unlikely. thanks
[19:16:23] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[19:16:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[19:18:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:18:33] *** Joins: wakeup (~wakeup@user/wakeup)
[19:18:39] *** Quits: fldme (~fldme@178.49.152.42) (Ping timeout: 256 seconds)
[19:19:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[19:19:59] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[19:20:30] <c4017> How can I convert {"t": 5, "d": [1, 2, 3]} into ((5, 1), (5, 2), (5, 3)) in one line?
[19:20:39] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[19:21:19] <nedbat> c4017: [(that_dict["t"], v) for v in that_dict["d"]]
[19:21:39] <phy1729> or tuple(...) if you really meant for it to be a tuple
[19:21:52] <nedbat> i'm guessing it doesn't need to be a tuple, but that's just a guess
[19:22:10] <nedbat> (i'll assert that it should not be a tuple!)
[19:22:10] <c4017> ah thanks
[19:22:14] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th)
[19:22:57] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[19:23:10] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d50:ed7b:88e6:c382)
[19:23:42] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[19:24:08] *** Joins: dez (uid92154@user/dez)
[19:24:28] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[19:24:32] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[19:24:46] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[19:25:03] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[19:25:36] *** Quits: p-i- (~Ohmu@183.89.29.122) (Ping timeout: 272 seconds)
[19:27:37] <royce3> nedbat: https://bugs.python.org/issue46809
[19:28:36] *** Joins: otty (~otty@2402:8100:390c:4161:3b9c:9fc2:cfb0:550b)
[19:29:05] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:29:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:29:10] <foo> dale: thanks, it does look like line 10 has an error, heh, thanks
[19:29:20] <foo> dale: re: https://bpa.st/UGAA
[19:29:48] <foo> grym: why "start real small" on a .pre-commit-config.yaml file? Why not go big and get all the benefits of uniform code?
[19:29:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:30:31] *** Joins: Midjak (~Midjak@82.66.147.146)
[19:31:16] <nedbat> royce3: thanks, that looks helpful
[19:31:19] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[19:31:25] *** Joins: harpia (~harpia@2804:fc:8d49:1000:b62e:99ff:fee9:cc51)
[19:31:26] <foo> Morning ya'll, I recently learned about pre-commit and this is my .pre-commit-config.yaml file: https://bpa.st/JHHQ -> any other suggestions on what I could add for uniform code between a team? Or does that look like I covered most things? Should have set this up a while ago
[19:32:02] *** Parts: WhiteKarura (~WhiteKaru@user/whitekarura) ()
[19:32:03] *** Quits: harpia (~harpia@2804:fc:8d49:1000:b62e:99ff:fee9:cc51) (Client Quit)
[19:32:15] *** Joins: harpia (~harpia@2804:fc:8d49:1000:b62e:99ff:fee9:cc51)
[19:32:16] <royce3> nedbat: thanks for pointing me in the right direction!
[19:33:34] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[19:33:48] *** Quits: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[19:34:09] *** Joins: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr)
[19:35:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:35:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[19:36:24] <foo> ah, I don't have flynt in there
[19:36:59] <grym> foo:  because your priors on what "all the benefits" and "uniform" and "benefits" are relatively weak
[19:38:00] <foo> grym: not sure I'm following that. If I'm understanding "priors" then yes, the uniformity of it is weak, hence the need for making it all look uniform. Unless you're saying starting small because it'll change too much stuff and affect things too much?
[19:38:12] *** Quits: snortie (~snortie@2a02:8308:386:b900:f881:7773:c6f5:7fb8) (Ping timeout: 240 seconds)
[19:38:16] *** Quits: lidless (lidless@user/lidless) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[19:38:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:39:01] <grym> foo: i'm saying that until you know the tools you're cramming into pre-commit pretty well, you don't know if you want to use them in pre-commit with high confidence
[19:39:06] *** Joins: lidless (~lidless@45-33-96-118.ip.linodeusercontent.com)
[19:39:31] <grym> (so, start with what you know; usually, that means starting small)
[19:39:41] <seanicus> nedbat: maybe slightly off-topic but do you know when boston python meetups will be irl again
[19:39:54] <foo> grym: ok, that makes sense.
[19:40:06] *** Quits: lidless (~lidless@45-33-96-118.ip.linodeusercontent.com) (Changing host)
[19:40:06] *** Joins: lidless (~lidless@user/lidless)
[19:40:10] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 272 seconds)
[19:40:14] <nedbat> seanicus: no, we don't know. it depends on members' comfort, and hosts' comfort
[19:40:17] <foo> grym: ... and yes, I totally crammed as much as I could find in here. Like a kid at the candy store and everything is free.
[19:40:21] <foo> ha
[19:40:39] <seanicus> thanks!
[19:40:42] <grym> foo: i know i like black, isort, and no trailing whitespace; so i use those
[19:40:54] *** Joins: nomn (nomn@user/nomn)
[19:41:12] <grym> nedbat: get a projector and hang out on kresge lawn :)
[19:41:12] <han-solo> https://github.com/python-attrs/attrs/blob/main/.pre-commit-config.yaml # i remember using this
[19:41:29] <han-solo> atleast the first 3
[19:41:45] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[19:41:53] <nedbat> grym: well, then we are back to the weather, and members' comfort :)
[19:42:03] <grym> nedbat: "python in the park" has a certain charm!
[19:42:12] <foo> grym: My concern with that approach is - I don't know what I don't know, thus cramming everything. I could just go with black / isort, I've ran those manually before. But there's a good chance I'll just stay there if I don't evolve this now. (Hence why, for the first time on a project, I just set up pre-commit yesterday heh)... granted, maybe I'm mistaken and I revisit this in 4 months. Or if nothing more, I
[19:42:18] <foo> read up on everything I added
[19:42:19] <foo> han-solo: thanks
[19:42:20] <nedbat> seanicus: we've been doing virtual events, have you tried those?
[19:42:47] <foo> han-solo: I tried flake8, it threw some errors. I removed it. Haha. I got to read up on that moer.
[19:42:50] <grym> foo: what's wrong with staying there?
[19:43:09] <grym> KISS, YAGNI, FOMO, etc
[19:43:20] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[19:43:42] <foo> grym: Assuming "stay there" meaning only 3 pre-commit hooks, which I'm not opposed to. This might be my scarcity brain wanting to cram as much in here as possible, maybe I should have a talk with it. Possible reason: not getting the full benefit of certain packages and what's possible.
[19:43:47] * foo looks up YAGNI
[19:43:56] *** Joins: someuser (~user@197.54.29.36)
[19:44:06] <grym> "y'ain't gonna need it"
[19:44:06] <foo> "You aren't gonna need it"
[19:44:12] * foo shrugs, kids these days
[19:44:15] <foo> :)
[19:44:34] <foo> grym: thank you, I do genuinely appreciate it. I might be in shiny object syndrome mode.
[19:44:50] <grym> happens to the best of is
[19:44:53] <grym> us*
[19:45:34] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[19:45:37] *** Joins: angelacrust (~angelacru@182.68.216.223)
[19:45:38] <foo> grym: for example, this looks helpful: https://github.com/asottile/add-trailing-comma -> but it's possible Black enforces that already, got to check
[19:45:45] *** Quits: baltazar (~baltazar@84-236-101-128.pool.digikabel.hu) (Remote host closed the connection)
[19:45:52] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[19:46:08] *** Joins: noarb (~noarb@user/noarb)
[19:46:12] *** Joins: filename (~kilitary@kilitary.xyz)
[19:46:27] *** Joins: dme86 (~dan@user/dan86)
[19:46:30] <seanicus> nedbat: couple of them, keep forgetting to go though. I don't really like virtual but I know there's some "pandemic" that people have been talking about lately...
[19:46:31] <foo> "id: debug-statements" will be helpful, I know I've called out pdb in code
[19:47:02] *** Joins: rhombus (~rhombus@ip5b408ee5.dynamic.kabel-deutschland.de)
[19:47:05] * foo reads about https://github.com/econchick/interrogate
[19:47:08] *** Quits: rhombus (~rhombus@ip5b408ee5.dynamic.kabel-deutschland.de) (Client Quit)
[19:47:25] <royce3> The problem I've run into with applying an aggressive prehook is it ruins blame for a long time and causes a lot of developer frustration every time they touch a file that hasn't been touched since the implementation of the hook.
[19:47:29] *** Joins: xkuru (~xkuru@user/xkuru)
[19:47:34] *** Quits: lidless (~lidless@user/lidless) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[19:48:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:48:29] <foo> royce3: genuinely and really appreciate that comment, I can see that happening. If there's no time crunch on stuff, though, perhaps that's a way to improve a codebase? Or was that not the case in your situatio?
[19:48:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:48:33] <foo> situation?
[19:49:41] <grym> you can ignore commits in blame
[19:49:48] *** Joins: paul424 (~tom@ip-5-172-236-71.multi.internet.cyfrowypolsat.pl)
[19:49:56] <grym> see what django did, for example
[19:50:17] <royce3> foo: it did improve the codebase, but then I have some ADD/OCD with my code and I would get sidetracked fixing things that didn't really need to be fixed so it was at least in part making me more efficient in light of my own personal flaws
[19:50:27] <wakeup> a subclass is immediately abstract if it derives from an abstract class and has another or additional abstract method
[19:50:30] <wakeup> rights?
[19:50:34] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[19:51:05] <royce3> grym: not when there are hundreds of them sprinkled in many hundreds more relevant commits. Unless you're proposing stopping development and touching every single file in the project to see which ones break in the hook?
[19:51:05] <foo> royce3: If there was a cultural value on "better code," do you think that would have affected the influence around the "need to be fixed" ?
[19:51:17] <foo> We've got a relatively new codebase I was thinking of applying this to, for starters.
[19:52:13] <royce3> foo: oh my devs were on board, but getting them to remember every time they commit was asking a bit much. Additionally, I didn't always remember, so it helped me help myself too. On a new codebase I wouldn't hesitate.
[19:52:59] *** Joins: OP-0 (~pca290122@94.134.227.107)
[19:53:02] <royce3> wakeup: a class is abstract if there are any abstract methods that haven't been defined
[19:53:38] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[19:53:58] <grym> royce3: if you black && isort an entire codebase ~once, and then turn on pre-commit, is what i meant: see https://github.com/django/django/blob/main/.git-blame-ignore-revs
[19:54:06] <foo> royce3: copy, thanks. I guess, I'm halfway trying to make up for never implementing code checks on my codebase for the past 7 years. heh. I'm hoping pre-commit can help me feel "born again" ... if only grym was aware of the horrific things I've done (with code) in my time, coming from decades in PHP, they wouldn't slap the FOMO label on me and understand the depths of my struggles.
[19:54:32] <grym> foo: dude i used to write matlab :P
[19:54:34] <foo> hmm, black && isort an entire codebase is nice, if I do that I believe I need to tell isort to use the black profile, right?
[19:54:36] *** Quits: dlb (~netbsd@bosen.dberg.net) (Ping timeout: 240 seconds)
[19:54:37] <foo> grym: haha :P
[19:54:47] <grym> foo: isort --profile black , yes
[19:54:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:54:59] <foo> grym: thank you :)
[19:54:59] <royce3> foo: php? You have my sincere sympathy.  I will never start a new project in PHP ever again.
[19:54:59] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[19:55:19] *** Joins: dlb (~netbsd@bosen.dberg.net)
[19:55:28] <royce3> grym: cool, I learned something new today, thanks!
[19:56:01] <grym> royce3: cheers!  it's relatively new, i thnk
[19:56:22] <royce3> foo: I ran into that exact sentiment when I decided to go 100% on mypy. There are some really nasty things you can do in Python that mypy will slap you for
[19:56:31] <foo> royce3: I recently started using a photo solution for a camping group I'm part of so people can share photos... photoprism (pretty rad), took me so long to find something because so many of them are written in PHP. I hire someone to touch PHP stuff and I am grateful to them. I am proud to announce I quit the habit in 2015 and haven't ever touched PHP since.
[19:57:16] <foo> royce3: ahh, ChrisWarrick sold me on mypy a while back and a few others here... my team and I decided last week we're going to start typing properly. One guy did it, I didn't do it and the other guy didn't do it
[19:57:17] *** Joins: korg815 (~korg815@user/korg815)
[19:57:28] <foo> royce3: ... I haven't got into mypy yet, but tell me more. You're grateful for implementing mypy?
[19:57:58] * foo listens to the TRON daft punk movie score while we talk about all these fancy new techs, mypy and pre-commit checks
[19:58:02] * foo chuckles 
[19:58:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:58:10] <royce3> foo: 110%, it catches many many bugs which results in 1) faster dev / testing cycle and 2) fewer bugs in prod
[19:58:36] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 256 seconds)
[19:58:37] <royce3> foo: it's a very time-consuming investment in the beginning, but it will save you way more time in the long run
[19:58:53] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[19:58:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:59:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:59:31] <foo> royce3: another benefit of pre-commit, I've been calling people out on PEP8 stuff for months and I've probably spent hundreds of hours on things. Meanwhile I set up pre-commit checks in 1 hour. *huge facepalm* -> this is one of those, "Ok, I'll let myself be depressed about how dumb that was for this evening only" and then get on with my life moments
[19:59:42] *** Joins: Auron (~Auron956@user/auron)
[19:59:45] <royce3> foo: also if you're testing on a newer version of Python, but deploying to an older version ( Linux bundled version ), it can catch things that work fine on yours but are incompatible with the target version
[20:00:23] <royce3> foo: I strongly recommend --strict --implicit-reexport --disallow-untyped-defs: if you're gonna do it, do it 100%
[20:00:29] <foo> ah, that's good to know. We're on 3.9/3.10 (happy to report upgraded from 3.6 to 3.10.2 yesterday... also upgraded 200+ packages at once... boy did that feel good)
[20:00:49] <foo> royce3: thank you, this is getting me excited about mypy... for next weekend... haha. *makes a note about this
[20:01:01] *** Joins: lidless (lidless@2600:3c02::f03c:93ff:fe98:5c43)
[20:01:38] *** Quits: lidless (lidless@2600:3c02::f03c:93ff:fe98:5c43) (Changing host)
[20:01:38] *** Joins: lidless (lidless@user/lidless)
[20:01:47] <royce3> I've just started evaluating 3.10, I really like the idea of structural pattern matching.
[20:02:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:02:11] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:02:14] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:02:40] <royce3> but then I love the walrus operator and the repr-self (f'{foo=}') features too, so many I drink too much of the Python kool-aid?
[20:02:58] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 272 seconds)
[20:03:16] <foo> royce3: I wish I could keep up, frankly, it's why I'm so slow. I spend so much time on client-side stuff I went from 3.6 to 3.10 knowing very few of the benefits short of the splinter in my mind saying "I need to." I'd be curious what your "evaluation process" is
[20:03:21] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[20:03:47] *** Quits: Guest99 (~Guest99@157.42.253.53) (Quit: Client closed)
[20:03:54] *** Joins: Astrased (~Astrased@82-168-108-38.fixed.kpn.net)
[20:04:07] <royce3> yes for security reasons you should absolutely stay on the latest version. The only reason I'm just now getting 3.10 is because I've found it usually takes a few months for binary wheels to get updated to the latest, so it's far less hassle waiting a few months
[20:04:31] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[20:04:49] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:04:55] <royce3> also performance... holy crap they've really boosted performance in the last few releases
[20:05:01] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:243f:5eba:389b:63d7) (Remote host closed the connection)
[20:05:26] <Astrased> royce3:  you mean implementations in C under the hood like func tools?
[20:05:48] <royce3> Astrased: I mean overall. Your Python programs run much faster in 3.9+
[20:05:49] *** Quits: ejjfunky0 (~ejjfunky2@125.164.16.133) (Remote host closed the connection)
[20:05:51] <foo> Interesting. I wonder what the sweet spot is on waiting for a new version. eg. 3.10.X updates are likely fine, but 3.X updates ... well, probably no science to that, it probably depends on the codebase and packages.
[20:05:56] <Astrased> oh okay
[20:06:35] <foo> Speaking of which, I upgraded to python 3.10 but I didn't restart the service that is using python 3.6 because that package has so many conflicts, haha. Amazon has a new SDK, I got to migrate that code over. Maybe I'll do that today.
[20:06:37] <royce3> foo: I don't think it's worth wasting brain cells over that.
[20:07:15] <foo> royce3: If I had a dollar for every brain cell I've wasted... well... you know how the saying goes.
[20:07:21] * foo laughs again
[20:07:30] *** Joins: noarb (~noarb@user/noarb)
[20:07:30] <foo> (thanks for being candid)
[20:07:34] <Astrased> how many hours per day do you folks code?
[20:07:54] <foo> Astrased: Do you want the truth? Or what I tell my doctor?
[20:07:54] <royce3> Astrased: when I'm productive, easily 16
[20:08:03] <Astrased> that’s a lot
[20:08:11] <Wulf> Astrased: quite often 0
[20:08:13] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:08:13] *** Quits: monchi (~joints@143.198.92.132) (Read error: Connection reset by peer)
[20:08:25] <foo> Yeah, I can go 12-15 hours and not blink an eye. If I get busy in client side, I can spend 8 hours on phone calls and not touch code all day.
[20:08:40] <royce3> 4-6 hours sleep, 1-2 hours for meals, shower, punching the walls, etc
[20:08:50] *** Joins: filename (~kilitary@kilitary.xyz)
[20:08:51] <foo> ... mind you, that's not the best for me, exercise serves me... working on  that.
[20:08:54] <royce3> foo: that's my problem too, too many interruptions
[20:09:07] <foo> royce3: I schedule all phone calls on Tue/Wed. If that doesn't work for someone, well, not a good fit. Haha.
[20:09:17] <royce3> foo: I love weight-lifting, but been too depressed to do it the last couple means even though it helps with depression
[20:09:23] <foo> I've declined projects because main POC couldn't make that work.
[20:09:32] <Wulf> royce3: uh, why would you punch the wall?
[20:09:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[20:09:39] <royce3> foo: I'm on call 24/7 for my clients because of the industry I serve
[20:09:55] <foo> royce3: ... that's the kicker. Exercise helps with so many things. I've done exercise neuro/blood/gut work to optimize stuff. And exercise could rarely be a "bad thing"
[20:10:02] <Astrased> that’s a great work ethic royce3
[20:10:13] *** Quits: ejjfunky (~ejjfunky@125.164.19.4) (Ping timeout: 256 seconds)
[20:10:17] <royce3> Wulf: I don't really, except for that one time, but just a funny way of expressing that sometimes I need to stay away from the keyboard and clear my head while dealing with a particularly difficult problem
[20:10:20] <Astrased> but yeah breaks are important
[20:10:30] <foo> royce3: ouch, I used to be. I left said industry. Although I did enjoy it and learned a ton. The stress of "dollars being lost every minute" if there was downtime became too much.
[20:10:58] <royce3> Astrased: no it's terrible, leaves no time for pleasure or family, turns you into a soulless monster. Just because I do it, doesn't mean it's a good/healthy thing
[20:11:29] <royce3> foo: eventually I will, but I have commitments I have to fulfill and I don't break commitments
[20:11:32] <foo> royce3: appreciate the chatter, not sure we've engaged much in here. Meanwhile, TML was supporting my PHP habit decades ago. They know what I've been through... not sure if they're a "full convert" yet, tho.
[20:12:24] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[20:12:30] <royce3> I used to be involved in IRC 20 years ago working on ReactOS development, but haven't been involved in IRC since then
[20:14:42] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[20:15:17] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:15:22] <jamea> fldme18 are you there?
[20:15:31] <Astrased> i used to be on IRC everyday now it’s more like 1 x per week/two weeks
[20:15:52] *** Joins: bloody (~bloody@user/bloody)
[20:17:00] <royce3> thanks for the banter as well foo, good luck on mypy
[20:17:08] *** Quits: royce3 (~royce3@66.102.230.214) (Quit: Client closed)
[20:17:14] <foo> royce3: ❤️
[20:17:32] <foo> super looking forward to that. Got to revisit some docs on typing in python, too. I see our devs do it but not habit yet for me.
[20:18:49] <jamea> i want open excel file but.... also open Excel program... how to?  (i know panda open and read file... but not open excel program
[20:19:51] <ChrisWarrick> jamea: on Windows: os.startfile("whatever.xlsx")
[20:20:44] <jamea> ok...
[20:20:53] <ChrisWarrick> (on macOS: subprocess.run(["open", "whatever.xlsx"]); on Linux: typically xdg-open instead of open)
[20:21:23] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[20:22:26] <foo> I've seen a pattern where folks have a repo: defined that's their personal repo, then they define the hooks via an "id" of sorts. I wonder what the value of that is? I'm wondering if it makes sense to definfe 1 repo with all of my ids and share that across projects. meh, that's probably a bit more work
[20:23:32] *** Quits: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[20:23:34] <foo> yeah, I don't think that's valuable, fine to link to other repos and re-use a single file.
[20:23:36] <jamea> worked on windows...  with Delphi i open excel file (and can manipulate it, select sheet, click on a cell copy text, and so on....)  ChrisWarrick. thanks, any link for do it with python?
[20:23:45] <foo> (at least for my use case, might make sense if I had a custom linter)
[20:23:47] *** Joins: CaCode (~CaCode@user/cacode)
[20:24:31] <ChrisWarrick> jamea: I would recommend not doing stuff with excel itself, instead generate files using a reasonable xlsx library (openpyxl? xlsxwriter? no idea really)
[20:24:59] <foo> hmm, what's a pre-commit package for checking typos/misspellings? /me investigates
[20:26:29] <ChrisWarrick> foo: typos/mispellings as in English?
[20:26:35] <foo> ChrisWarrick: yes
[20:27:01] *** Joins: Warped (~Warped@user/warped)
[20:27:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:27:33] <ChrisWarrick> foo: in comments and docstrings? I wouldn’t really bother, the dictionary will lack half the vocabulary your project uses
[20:27:47] <foo> ChrisWarrick: ok, fair enough. Thanks. :)
[20:28:03] <ChrisWarrick> killing the typo inspection is the first thing I do when launching a new project in a certain famous IDE
[20:29:06] <jamea> ChrisWarrick, i know read/write but the file contain, filters:  The process is so so: 1) open excel 2) select sheet 3) in this sheet exist filters, need click on 2 filters, 4) in other sheed (the data was filtered) 5) select some cell value and copy to another...  see the sample of excel file:   https://postimg.cc/yJT0tycy
[20:29:20] <jamea> not know if with pandas can click on these filters
[20:29:20] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com)
[20:29:28] <ChrisWarrick> jamea: definitely not with pandas
[20:29:42] <ChrisWarrick> jamea: excel mobile doesn’t support those, I doubt any libraries do
[20:29:45] <jamea> see the image?
[20:29:58] <jancoow> Any known tools where I can collect logs generated by my python application?
[20:30:02] <jamea> i am think in sendkeys
[20:30:06] <jancoow> Looking for something simple to setup now :)
[20:30:15] <jamea> something: https://www.codegrepper.com/code-examples/python/how+to+send+keystrokes+in+python
[20:30:25] <ChrisWarrick> jamea: perhaps you’d be better off with Excel VBA macros or something
[20:30:47] <jamea> the client want do with python
[20:31:01] <jamea> i asked him if can do with c# and say no...
[20:31:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:31:15] <ChrisWarrick> why does the client pick the programming language?
[20:31:31] <jamea> not know... really
[20:31:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:32:13] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:32:14] <jamea> os.startfile("whatever.xlsx")   <----- how to force... send to top?
[20:32:18] <ChrisWarrick> your client shouldn’t generally know nor care what language your thing is written in
[20:32:21] <euphrates[m]> how can i get a random element from an iterator very fast?
[20:32:39] *** Quits: fldme18 (~fldme@178.49.152.42) (Quit: Client closed)
[20:32:42] <supakeen> next(iterator)
[20:32:45] <jamea> ChrisWarrick i think the client have some, programs developed on python...
[20:32:50] <regulate> euphrates[m]: random.choice()
[20:33:06] <ChrisWarrick> jamea: but would they integrate with your excel thing?
[20:33:15] <jamea> yes i think so
[20:33:50] <ChrisWarrick> jamea: it might be worth thinking of a way to decouple the excel thing from python and from clicking on excel as much as possible
[20:34:02] <euphrates[m]> regulate: TypeError: object of type 'itertools.combinations' has no len()
[20:34:05] <ChrisWarrick> euphrates[m]: to get a random item, you need a list (or otherwise a finite structure)
[20:34:11] <jamea> yes i think is the easy way
[20:34:19] *** Joins: dme86 (~dan@user/dan86)
[20:34:19] *** Joins: Betal (~Betal@user/betal)
[20:34:25] <euphrates[m]> i am concerned about speed penalties when converting to list
[20:34:32] <euphrates[m]> as the iterator is very very long
[20:34:59] <jamea> then i start here: os.startfile("whatever.xlsx")   <----- how to force... send to top?
[20:35:02] <regulate> picking a random element out of a list is at least a O(n) operation.
[20:35:28] <euphrates[m]> how about converting an iterator to list
[20:35:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:35:49] <ChrisWarrick> euphrates[m]: list(the_iterator)
[20:36:24] <jamea> pyautogui help me i think so
[20:36:38] <euphrates[m]> ChrisWarrick: i am concerned about time complexity of that exact operation, how long would it take for a very long iterator?
[20:36:53] <ChrisWarrick> euphrates[m]: depends on the size of the iterator
[20:37:06] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[20:37:09] <ChrisWarrick> euphrates[m]: you might want instead to implement your own random itertools.combinations, it shouldn’t be too difficult
[20:37:10] <Wulf> you don't have to convert the iterator into a list. You can iterate over the iterator and pick a random element while you do it. All other elements are forgotten about.
[20:37:13] <euphrates[m]> do you happen to know O() of it
[20:37:22] <regulate> It's still an O(n) operation.
[20:37:23] <ChrisWarrick> euphrates[m]: O(n) most likely
[20:37:34] <euphrates[m]> thank you very much!
[20:37:35] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 240 seconds)
[20:37:37] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[20:37:41] <euphrates[m]> thanks everyone
[20:38:15] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[20:38:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[20:38:53] <foo> Trying to get flynt in pre-commit hook. https://github.com/ikamensh/flynt#pre-commit-hook for rev: I put '0.76' and it's throwing this error: =====> Expected string got float ... but I gave it a string. Am I missing something?
[20:38:55] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[20:38:55] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 240 seconds)
[20:38:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[20:38:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[20:38:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[20:39:15] <foo> oh, nevermind, heh.
[20:39:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 240 seconds)
[20:39:16] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[20:39:16] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[20:39:16] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 240 seconds)
[20:39:16] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Ping timeout: 240 seconds)
[20:39:16] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 240 seconds)
[20:39:20] <foo> Was working on the wrong file
[20:39:22] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[20:39:35] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[20:39:36] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 240 seconds)
[20:39:42] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:39:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:43:22] *** Quits: angelacrust (~angelacru@182.68.216.223) (Quit: Client closed)
[20:43:37] <foo> I wonder if I can have a pre-commit that cleans up HTML/CSS/JS in my repo. Hmm.
[20:44:30] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 256 seconds)
[20:45:00] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 250 seconds)
[20:45:19] <lidless> cleans up?
[20:45:36] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[20:45:36] *** Joins: arinov_ (~arinov@78.162.46.214)
[20:45:43] <foo> lidless: has some sort of prettifying capability if it's not a .min.js or such, hmm. I know some devs use something in VS Code sometimes
[20:45:49] <lidless> back in the day I would use YUI Compressor to get JS/CSS into "production" minified mode
[20:46:00] *** Joins: xeyes (~user@user/duuude)
[20:46:02] <foo> lidless: thanks, I think flask-assets helps with that
[20:46:04] *** Quits: Astrased (~Astrased@82-168-108-38.fixed.kpn.net) (Quit: Astrased)
[20:46:06] <lidless> oh cool
[20:46:11] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[20:46:41] *** Joins: cowsay-moo (~cowsay-mo@2001:ac8:25:400:1016:44e2:837e:7026)
[20:47:02] *** Joins: matsaman (~matsaman@user/matsaman)
[20:47:44] *** queue is now known as queue-
[20:47:57] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[20:47:57] *** Joins: queue- (~nerd@user/queue/x-7267619)
[20:48:02] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e5cd-9d1e-ee8d-d0aa.res6.spectrum.com) (Read error: Connection reset by peer)
[20:48:41] *** Parts: dlb (~netbsd@bosen.dberg.net) ()
[20:48:56] *** Joins: Roey (~Roey@user/Roey)
[20:49:07] <Payam> How do you activate the virtual environment in vim? I installed vm-virtualenv plugin but still can not find env/...
[20:49:44] *** Parts: ntome (~ntome@user/ntome) (WeeChat 3.0.1)
[20:50:02] *** Joins: arinov (~arinov@77.67.139.142)
[20:50:10] *** Joins: baltazar (~baltazar@84-236-101-128.pool.digikabel.hu)
[20:50:12] *** Quits: arinov_ (~arinov@78.162.46.214) (Ping timeout: 240 seconds)
[20:50:13] *** Joins: snortie (~snortie@37-188-150-37.red.o2.cz)
[20:50:13] *** Quits: snortie (~snortie@37-188-150-37.red.o2.cz) (Read error: Connection reset by peer)
[20:50:31] <matsaman> https://github.com/jmcantrell/vim-virtualenv#virtualenvvim
[20:51:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:53:15] *** Joins: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr)
[20:53:24] *** Joins: Atque (~Atque@user/atque)
[20:53:54] <Payam> No virtualenv could be auto-detected and activated.
[20:53:58] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[20:54:00] *** Joins: CombatVet (~c4@user/combatvet)
[20:54:02] *** Joins: de-facto (~de-facto@user/de-facto)
[20:54:15] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[20:54:20] *** Joins: naranja (~orange@user/orangeboxcutter)
[20:54:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:54:22] *** Joins: noteness (~noteness@user/noteness)
[20:54:23] *** Joins: tejr (~tejr@user/tejr)
[20:54:26] *** Joins: bindu (~bindu@user/bindu)
[20:54:28] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[20:54:29] *** Joins: kevr (~kevr@user/kevr)
[20:54:32] *** Joins: mickey8 (~user@user/mickey)
[20:54:33] *** Joins: vaio (~gary@user/ghost)
[20:54:55] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:54:59] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[20:55:01] *** dob1_ is now known as dob1
[20:55:32] *** Quits: someuser (~user@197.54.29.36) (Ping timeout: 272 seconds)
[20:56:09] *** Joins: filename (~kilitary@kilitary.xyz)
[20:56:15] *** Joins: spithash (~spithash@user/spithash)
[20:56:16] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:56:41] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[20:57:05] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[20:57:07] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[20:57:10] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[20:58:51] *** Joins: bluedust (~bluedust@103.165.167.221)
[20:58:55] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:58:57] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:e9b7:c40d:3af0:3b04) (Ping timeout: 240 seconds)
[21:00:29] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[21:00:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[21:01:31] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[21:02:33] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[21:02:55] *** Joins: bluedust (~bluedust@103.165.167.221)
[21:04:40] <Payam> does the virtual environment folder have to have a specific name?
[21:05:05] *** Joins: filename (~kilitary@kilitary.xyz)
[21:05:54] <amazigh> no
[21:06:06] <amazigh> usually it is called .venv or venv
[21:06:13] *** Quits: rsx (~dummy@ppp-188-174-134-66.dynamic.mnet-online.de) (Quit: rsx)
[21:07:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:07:11] <amazigh> look at how other popular project do
[21:07:21] <amazigh> or not so popular
[21:07:46] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 260 seconds)
[21:08:14] *** Quits: bluedust (~bluedust@103.165.167.221) (Ping timeout: 260 seconds)
[21:08:50] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 272 seconds)
[21:09:09] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:09:52] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[21:10:16] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[21:10:25] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[21:11:28] *** Joins: mexen (uid495612@user/mexen)
[21:12:50] *** Joins: Xano_ (~Xano@host86-151-110-89.range86-151.btcentralplus.com)
[21:13:08] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[21:13:16] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 245 seconds)
[21:14:02] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[21:14:28] *** Joins: blackleitus (~blackleit@189.195.195.100)
[21:15:52] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[21:16:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[21:16:22] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:18:11] *** Quits: satta_satta (~AdminUser@55d41988.access.ecotel.net) (Ping timeout: 252 seconds)
[21:18:26] *** Joins: nrg (~NRG@user/nrg)
[21:20:26] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:20:58] *** Joins: Narrat (~omnius@p200300df5f123b3b06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:22:37] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Client Quit)
[21:23:31] *** Joins: xeyes (~user@user/duuude)
[21:23:40] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:24:15] *** Joins: Guest39 (~b332b756@servidor.wikimedia.es)
[21:25:20] *** Joins: Achylles (~Achylles_@2804:431:d724:7449:3b4d:585c:367b:f390)
[21:27:16] *** Joins: ano (~ano@user/ano)
[21:27:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:8989:4d0:aaef:ac40) (Ping timeout: 240 seconds)
[21:28:46] *** Quits: otty (~otty@2402:8100:390c:4161:3b9c:9fc2:cfb0:550b) (Ping timeout: 260 seconds)
[21:28:58] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[21:28:59] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[21:30:47] *** Joins: otty (~otty@2402:8100:3901:39a3:ace1:96c3:4041:4bd9)
[21:31:33] *** Joins: korg815 (~korg815@user/korg815)
[21:32:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:33:27] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[21:33:33] *** Quits: dsrt^ (~dsrt@50.233.120.162) (Ping timeout: 272 seconds)
[21:33:37] <dodo> :\ getting TypeError: to_pickle() missing 1 required positional argument: 'path', despite passing a string as arg..
[21:34:03] *** Parts: Guest39 (~b332b756@servidor.wikimedia.es) ()
[21:34:15] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:34:48] <Wulf> dodo: what's "to_pickle"?
[21:34:59] <dodo> pandas dataframe method, 1.1.5.. this code worked yesterday..
[21:35:08] * dodo scratches head
[21:35:13] *** Joins: euouae (~euouae@user/euouae)
[21:35:40] *** Joins: vi64 (~victor@103.203.72.8)
[21:35:40] <euouae> Hello with setuptools, is `author = foo bar <foo@bar>, baz xyz <baz@xyz>` correct in setup.cfg?
[21:36:01] <jinsun> dodo: are you doing DataFrame.to_pickle instead of df.to_pickle ?
[21:36:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:36:56] <ChrisWarrick> euouae: try it and see?
[21:37:45] <dodo> jinsun: yup, thanks. weird..
[21:37:58] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[21:39:29] <euouae> ChrisWarrick it's for a new project, I'm not afraid of anything breaking
[21:39:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[21:39:39] <euouae> ChrisWarrick but I was just wondering if it makes sense. I think it should be fine, right?
[21:39:51] <euouae> I wasn't able to find info on whether foo = bar is the same as foo = "bar"
[21:40:03] <ChrisWarrick> euouae: if it doesn’t make sense, setuptools or whatever will raise a warning/error
[21:40:12] *** Joins: palasso (~palasso@user/palasso)
[21:40:37] <euouae> hm, okay. Is there a tutorial on github actions for python? Or should I just read the general docs on github actions of github?
[21:42:22] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:42:46] <ChrisWarrick> euouae: I think GitHub has some sample actions for Python
[21:42:56] <euouae> got it, thank you
[21:43:38] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[21:43:45] *** Joins: reset (~reset@user/reset)
[21:47:07] *** Quits: tofran (~tofran@bl15-47-228.dsl.telepac.pt) (Ping timeout: 256 seconds)
[21:48:23] *** Joins: dsrt^ (~dsrt@50.233.120.162)
[21:48:27] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[21:49:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:49:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:52:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:52:12] *** Quits: dsrt^ (~dsrt@50.233.120.162) (Remote host closed the connection)
[21:52:22] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:52:36] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[21:52:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:53:09] *** Joins: abaiste^ (~abaiste@50.233.120.162)
[21:53:15] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com)
[21:53:59] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:55:34] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:59:12] *** Joins: Barones (~Barones@user/Barones)
[22:00:11] *** Joins: masoudd (~masoudd@user/masoudd)
[22:01:14] *** Joins: bluedust (~bluedust@103.165.167.221)
[22:02:39] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[22:03:41] <foo> 2022-02-20 10:29:33,970 interactiveshell 694 - DEBUG - NAME 'context' (prefix='') -> odd, I'm seeing this in my logs in my docker container. I did recently upgrade stuff, I wonder if something changes.
[22:03:45] <foo> Any two cents on what might cause this?
[22:04:36] *** Quits: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[22:05:12] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[22:06:39] *** Quits: vi64 (~victor@103.203.72.8) (Quit: Leaving)
[22:06:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[22:07:16] *** Joins: vi64 (~victor@103.203.72.8)
[22:08:17] *** Quits: vi64 (~victor@103.203.72.8) (Max SendQ exceeded)
[22:08:25] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[22:08:44] *** Joins: vi64 (~victor@103.203.72.8)
[22:09:37] *** Joins: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:13:28] *** Quits: otty (~otty@2402:8100:3901:39a3:ace1:96c3:4041:4bd9) (Quit: WeeChat 3.0)
[22:14:02] *** Quits: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[22:14:42] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[22:15:20] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[22:15:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[22:18:07] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[22:18:20] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[22:19:42] *** Quits: Bkid (~Bkid@user/bkid) (Ping timeout: 256 seconds)
[22:19:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:19:52] *** Joins: onichomp (~onichomp@2806:264:4408:1f2:5550:1ec2:7947:17fa)
[22:20:41] *** Quits: onichomp (~onichomp@2806:264:4408:1f2:5550:1ec2:7947:17fa) (Read error: Connection reset by peer)
[22:21:31] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:22:29] *** Joins: onichomp (~onichomp@2806:264:4408:1f2:5550:1ec2:7947:17fa)
[22:22:45] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[22:22:56] *** Joins: not_not (~not_not@193.178.220.11)
[22:23:11] <not_not> Hey
[22:23:19] <mefistofeles> hey
[22:23:22] *** Joins: Bkid (~Bkid@user/bkid)
[22:23:35] <not_not> Eek the devil
[22:24:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[22:24:12] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[22:24:13] *** lukedashjr is now known as luke-jr
[22:24:39] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:ffdd:89dd:42e7:2bc2) (Quit: Leaving)
[22:25:16] *** Quits: vi64 (~victor@103.203.72.8) (Remote host closed the connection)
[22:26:21] *** Quits: harpia (~harpia@2804:fc:8d49:1000:b62e:99ff:fee9:cc51) (Quit: harpia)
[22:26:23] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[22:27:58] *** Quits: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:28:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:28:46] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[22:29:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[22:29:45] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[22:31:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:31:32] *** Joins: tofran (~tofran@bl15-47-228.dsl.telepac.pt)
[22:31:45] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:31:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[22:33:24] *** Quits: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[22:34:15] *** Joins: slee (~slee@user/slee)
[22:34:24] <Payam> nedbat, virtual environment does show in vim and when I try to activate it it says that https://dpaste.org/qJwT
[22:34:30] <Payam> How do you setup yours?
[22:34:31] *** Joins: epony (epony@user/epony)
[22:35:17] *** Joins: crashrep (~crashrep@user/crashrep)
[22:35:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:35:51] <slee> hi, how can i have my script not have an 'out of bound' error if there is an empty part of an array? ....not sure how to word this properly...lets say i have an array of 2 items, but i try to print the 3rd...is there a way to have it just see that empty one as nothing without an error?
[22:35:54] *** Quits: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:36:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:36:25] *** Quits: Xano_ (~Xano@host86-151-110-89.range86-151.btcentralplus.com) (Ping timeout: 256 seconds)
[22:36:31] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[22:36:31] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[22:36:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:36:44] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[22:36:48] <slee> err, sorry, the error is IndexError: list index out of range
[22:36:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:36:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:37:51] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 245 seconds)
[22:39:31] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:40:28] <EdFletcher> if you have an array of two items (`len(yourArray) == 2`) then trying to access the third item is indeed an out-of-bound error, because you're trying to access beyond the bounds of that array. what i believe you're referring to instead is a sparse array where some/many of the elements can be empty. however those arrays still have bounds that
[22:40:28] <EdFletcher> include all the sparse elements, e.g. `len([1,2,3,None,4,None,None])` is still 7, meaning that indexing the sixth element will not throw but will return `None`.
[22:40:40] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:40:49] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[22:41:00] *** Joins: Babar_ (~Babar@171.233.210.64)
[22:41:00] *** Quits: Babar (~Babar@171.233.210.64) (Killed (copper.libera.chat (Nickname regained by services)))
[22:41:00] *** Babar_ is now known as Babar
[22:41:38] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:41:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[22:42:05] *** Quits: hwdyki (~hwdyki@user/hwdyki) (Ping timeout: 256 seconds)
[22:44:45] <chronon> I've just installed python3-pip from he Ubuntu repo. It has been a long time since I used pip (on another system) but a recall having a lot of trouble last time because pip does not seem to be setup to install python modules for system-wide usage.
[22:44:52] *** Quits: slee (~slee@user/slee) (Quit: Leaving)
[22:45:03] *** Quits: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com) (Read error: Connection reset by peer)
[22:45:31] *** Joins: frmlof (~frmlof@70.243.238.191)
[22:45:59] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[22:46:01] <chronon> Can someone please guide me on how I can configure pip to "just work" and install centrally for all users like a normal package manager?
[22:46:27] <TingPing> chronon: The concept doesn't work. Two tools can't sanely manage the same files.
[22:46:43] *** Joins: Barones (~Barones@user/Barones)
[22:46:47] <chronon> Which is the other tool to which you refer?
[22:47:06] *** Joins: nomic (~nomic@185.217.117.193)
[22:47:07] <TingPing> `apt` controls files in `/usr`. `pip` is best left controlling private or per-user files.
[22:47:11] *** Joins: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com)
[22:47:34] <chronon> But apt is not designed for managing python modules, it's for deb packages.
[22:47:46] <chronon> If I run as root, can pip install for all users?
[22:47:49] <TingPing> Yes. I do not recommend `apt` as your main source of python packages.
[22:48:06] <TingPing> Yes `pip` will happily overwrite any files you want it to as root. It is not a good idea.
[22:48:14] <chronon> HEhe
[22:48:27] *** _subopt is now known as subopt
[22:48:51] <Repiphany> Build your own python and give access to all users, don't mess with system python
[22:49:08] <chronon> If I run pip as my current non-root user, where does it manage the downloaded modules, and how do I avoid filling up my own user dir with modules I wanted to make available to every user?
[22:49:48] <TingPing> chronon: `pip --user` defaults to `~/.local/{lib/python3.x,bin}`
[22:50:10] *** Quits: pro_z (~pro_z@37.214.51.149) (Ping timeout: 272 seconds)
[22:50:11] <not_not> Pip ftw
[22:50:42] <TingPing> technically you can customize the default behavior to do anything. Including making a shared `/python` dir or whatever you want.
[22:50:49] <chronon> So does everyone *always* have to specify the --user flag when using pip? If so, why isn't that flag the default?
[22:51:14] <TingPing> chronon: It actually does > "Defaulting to user installation because normal site-packages is not writeable"
[22:51:16] <Repiphany> It is default if you can't install to site-packages
[22:51:46] <chronon> Ok, so if I am root when using pip, it will indeed install into a system central place?
[22:51:55] <TingPing> Yes it will overwrite system files.
[22:52:05] *** Joins: angelacrust (~angelacru@182.68.216.223)
[22:52:12] <not_not> Repi any other advantages to building ur own python over sys python?
[22:52:34] <chronon> Well, surely site-packages is not system files, it must be an empty dir that I as the site admin can add to, right?
[22:52:35] <Repiphany> Not being subject to weird decisions of debian package managers
[22:52:42] *** Quits: pyhalo3 (~pyhalo3@46.19.85.80) (Remote host closed the connection)
[22:53:20] <TingPing> I don't know what debian does, but by default it overwites package managed files
[22:53:26] <not_not> Ahh i see, just looking for an excuse to build packaged
[22:53:35] <Repiphany> https://www.getpagespeed.com/server-setup/do-not-run-pip-as-root
[22:53:42] *** Joins: purple_cthulhu (~rax@2.186.4.33)
[22:55:05] <chronon> Given I've only just now done apt install python3-pip, are there any other steps I should take? (I'm such a newb.) I mean like updating itself, or fetching a list of modules, or configuring the closest mirror, or similar?
[22:55:13] <Repiphany> Hum, just seems like a shill for the author's tool
[22:55:44] <Repiphany> Learn to love virtual environments
[22:55:50] <not_not> Kinda wanna do an lfs build or better yet make my own os kernel then wander off to gdt run over by railway
[22:57:08] *** Quits: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:58:13] <not_not> Maybe an os where the shell is python
[22:58:45] <chronon> Any guidance about how to use pip immediately after install? Any steps to take?
[22:59:21] <not_not> God i love python its like if you code c and asm all ur life then u can breathe
[22:59:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:00:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:00:29] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[23:00:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:01:15] <not_not> So im teaching some old hippie music teacher programming🪐 wondering weather to teach him python c or asm first
[23:01:19] *** Quits: Achylles (~Achylles_@2804:431:d724:7449:3b4d:585c:367b:f390) (Remote host closed the connection)
[23:01:49] *** Joins: medium_cool (~medium_co@136.36.128.48)
[23:02:15] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 256 seconds)
[23:02:23] <not_not> But i taught him how cpu works and some basic asm and c so he dont make buffer overflow bugs
[23:03:04] *** Quits: medium_cool (~medium_co@136.36.128.48) (Client Quit)
[23:03:11] <ChrisWarrick> you don’t really need to know how the CPU works as a beginner, and you won’t hit buffer overflows with python
[23:03:53] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[23:04:06] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 272 seconds)
[23:04:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:04:14] <not_not> I know but he's a 70 year old methead with 5 heart attacks under his belt
[23:04:39] *** Joins: mcglk (~mcglk@131.191.49.120)
[23:05:04] <not_not> And highly intelligent + only sleeps every 3 days or so
[23:05:10] <jamea> tkinter how to do: click button show open dialog for select file and set into a variable?
[23:05:22] *** Quits: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:05:32] <chronon> Ok, python -m pip --version reports 20.0.2
[23:06:09] *** Joins: greedom (~greedom@p200300de674d5b0089331a0bb91838bc.dip0.t-ipconnect.de)
[23:06:45] <not_not> Gone over most of the basics with him he   was really interested in bufer overflows cus his 300k dollar debt kinda vanished
[23:07:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:08:09] <not_not> Meh python is what i write most stuff inn untill i crave c
[23:08:37] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:d068:c7d1:a1c0:59b4)
[23:08:57] <EdFletcher> python is objectively a better teaching language than c, i would focus on it
[23:08:59] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[23:09:24] <not_not> But he says on note sheets in music there are while loops, but he gets paid for amount of notes written
[23:09:52] <EdFletcher> well unfortunately for him none of us get paid by the lines of code written, so he's going to need to adjust his perspective 😆
[23:10:26] <not_not> Ye i told him about the before timed
[23:10:33] <not_not> Times
[23:10:50] <chronon> It's hard to find info online that does NOT tell you to create virtual environments. People seem to have totally abandoned the idea that modules/libraries should be backward compatible.
[23:11:11] <not_not> When microsoft got paid per line of code
[23:11:30] <not_not> God i love virtual environments
[23:12:03] <not_not> My name might suggest that
[23:12:17] <chronon> ?
[23:12:31] <not_not> Not
[23:12:35] <nomic> in <Wnck.Window object at 0x7f90d2d18680 (WnckWindow at 0x1c6fc40) how do i get the 0x number
[23:12:35] <not_not> Not not
[23:12:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:12:42] <not_not> Not not not
[23:12:58] <nomic> idi think
[23:12:59] <nomic> id.
[23:13:15] <not_not> Not not is is
[23:13:35] *** Joins: frmlof (~frmlof@70.243.238.191)
[23:14:00] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:14:00] <not_not> Basically a programming language used by god to create multiverses
[23:14:01] <nomic> hex(id(value))
[23:14:32] <chronon> How do I lookup info on modules using pip? When I try pip search <module> I get a stacktrace ending in RuntimeError: PyPI's XMLRPC API is currently disabled due to unmanageable load and will be deprecated in the near future.
[23:14:52] <not_not> Instead of using 2 concepts 0 and 1
[23:15:11] <not_not> U can use one concept, not
[23:15:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:15:23] *** Joins: Spitfire (spitfire@178-79-153-80.ip.linodeusercontent.com)
[23:15:27] <not_not> And use it on itself
[23:15:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:15:33] *** Quits: angelacrust (~angelacru@182.68.216.223) (Quit: Client closed)
[23:15:42] <nomic> .z.
[23:15:45] <not_not> To create its opposite
[23:16:03] <not_not> Not is the singularity bro
[23:16:13] <not_not> Not not neo
[23:16:15] <chronon> Where do the real Python hackers hang out?
[23:16:23] <not_not> The matrix has you
[23:16:33] *** Joins: aslicedbanjo (~aslicedba@host86-178-157-216.range86-178.btcentralplus.com)
[23:16:44] *** Lord_of_Life_ is now known as Lord_of_Life
[23:17:30] <not_not> Chronon idk i been tortured for hacking and couped a government
[23:17:42] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:17:53] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[23:18:06] <not_not> Real hacker? Yes. Python hacker no
[23:18:21] <akk> chronon: Search on pypi.org, or install a module like pip_search. (I'm not clear why pip search itself can't be changed to use the website.)
[23:18:55] <not_not> Chronon i want to be a python hacker tho
[23:19:03] <chronon> I feel like I've stumbled into a bar full of drunkards not making much sense. There must be some other place where the professional Pythong programmers hang out. You don't happen to know where that is do you?
[23:19:11] *** Joins: xeyes (~user@user/duuude)
[23:19:26] <chronon> Oh, ok, thanks akk.
[23:19:31] <not_not> Chronon i think cpython
[23:19:41] <not_not> Or python dev
[23:20:02] <not_not> Where the guys who write cpython hang
[23:20:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:20:50] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:20:57] <not_not> Nah im not drunk im in the insane asylum cuz i tried to burn the house cuz drunk
[23:21:37] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[23:21:42] *** Quits: paul424 (~tom@ip-5-172-236-71.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:21:56] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[23:23:58] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[23:24:32] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:54c5:a541:eeee:60e9)
[23:24:34] *** Quits: Spitfire (spitfire@178-79-153-80.ip.linodeusercontent.com) (Changing host)
[23:24:34] *** Joins: Spitfire (spitfire@user/Spitfire)
[23:25:00] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[23:27:09] *** Joins: xa0s (~xa0s@mab.sdf.org)
[23:27:51] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:27:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:27:53] *** Quits: subopt (~subopt@2603-8081-2302-459a-1884-1497-0757-e964.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:28:22] *** Joins: subopt (~subopt@2603-8081-2302-459a-b0f0-95d6-8e7e-c5f5.res6.spectrum.com)
[23:28:57] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[23:29:04] <ChrisWarrick> not_not: Perhaps you want a different channel, eg. #python-offtopic?
[23:29:34] <ChrisWarrick> eh, ##python-offtopic*
[23:29:43] <ChrisWarrick> chronon: this is the channel you’re looking for
[23:30:01] *** Joins: Viewday11 (~Viewday@user/viewday)
[23:30:08] <not_not> Ye was just replying to chronon
[23:30:14] <matsaman> chronon: there's Discord if you like really slow communication
[23:30:19] <ChrisWarrick> chronon: as for your pip question — you need to go to pypi.org for that
[23:30:40] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:31:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:31:16] <amazigh> dodo: "it worked yesterday": it used to happen to my all the time, until I started using tests and CI
[23:31:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com)
[23:31:28] <amazigh> and git ;)
[23:31:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:31:37] *** Quits: Midjak (~Midjak@82.66.147.146) (Read error: Connection reset by peer)
[23:31:41] *** Joins: ExpiredKebab (~sgreadly@47-72-197-36.dsl.dyn.ihug.co.nz)
[23:31:46] <jamea> ChrisWarrick is possible control this: os.startfile("whatever.xlsx")   <----- open, and then close?  how to?
[23:31:50] *** Joins: Midjak (~Midjak@82.66.147.146)
[23:31:57] <ChrisWarrick> jamea: not really
[23:32:03] <ChrisWarrick> jamea: not without talking to the app somehow
[23:32:21] <ChrisWarrick> jamea: and as I said, controlling an app isn’t something you want to do in general
[23:32:39] <oriba> When I have a simgle pythonfile, I can use it in my current repo or just copy it to a path in $PATH. But what to do when I have splitted the file into modules? How to make that available and being sure that all modules will be available? Do I have to set sys.path by hand, or will packaing tools be helpful here?
[23:32:42] *** Joins: Betal (~Betal@user/betal)
[23:32:49] <jamea> ok...
[23:32:57] <ChrisWarrick> oriba: never touch sys.path, never touch $PYTHONPATH, package your thing and install it
[23:33:04] <OliverUK> Hello, I am trying this code at the bottom of this page but it is giving me an error.  I don't have enough experience to know what is wrong here, could someone please point me in the right direction: https://www.zabbix.com/documentation/current/en/manual/appendix/protocols/header_datalen
[23:33:05] <jamea> pyautogui  only right?
[23:33:57] <not_not> I feel linux is oooooollllllllllllllllllld
[23:34:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:34:08] <ChrisWarrick> OliverUK: what error?
[23:35:21] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[23:35:45] <dodo> amazigh: it's too small to unit test really. problem was a cleanup job failed, so a code branch ran that i've removed now
[23:36:14] <OliverUK> ChrisWarrick: TypeError: can only concantenate str (not "bytes") to str
[23:36:39] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:37:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:37:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:37:13] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[23:37:13] <ChrisWarrick> OliverUK: can you pastebin the full traceback and precise code you’re running?
[23:37:38] <not_not> Cant u str(variable)?
[23:37:57] <ChrisWarrick> this webpage looks hopelessy broken on my side, btw
[23:38:10] <ztrawhcse> for me too
[23:38:10] <ztrawhcse> every word is on its own span and line
[23:38:10] <oriba> ChrisWarrick: when I have split my python file into modules, and it rins with ./myprog.py, then packaging solves the issue that the stuff then runs after installation? Does itmean then, that the program can be installed with pip? or are there different packaging systems and tools for installation?
[23:38:14] <not_not> Or bytes.str() or something
[23:38:53] <ChrisWarrick> oriba: to make your thing pip-installable, you’ll need something like setuptools, and an appropriate configuration file for it (setup.py/setup.cfg/pyproject.toml)
[23:38:57] *** Joins: martums59 (~martums@user/martums)
[23:39:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:39:02] <ztrawhcse> but hey, fortunately it has "highlight giant square on hover"
[23:39:30] <oriba> ChrisWarrick: but I can ignore pip and do the packaging in other ways?
[23:39:35] <ChrisWarrick> oriba: not really
[23:39:38] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (Ping timeout: 250 seconds)
[23:39:40] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[23:39:56] <ztrawhcse> pip isn't "packaging"
[23:39:57] <ztrawhcse> pip is an installer for things that are already packaged
[23:40:07] <dodo> setuptools isn't sooo bad. it's not nice though
[23:40:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:40:51] <OliverUK> ChrisWarrick: https://pastebin.com/VF16U7nM
[23:40:53] <oriba> which packaging methods/tools do extist for python, and what installers could use which packages?
[23:41:16] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[23:41:16] <ChrisWarrick> OliverUK: this code seems to be for an ancient and long-dead python version (aka python 2)
[23:41:26] <OliverUK> Oh
[23:41:29] <OliverUK> Awesome
[23:42:06] *** Joins: georgios (~georgios@user/georgios)
[23:42:16] <ztrawhcse> > #include struct
[23:42:44] <ChrisWarrick> OliverUK: the modern way to write this would be: https://bpa.st/DRQA
[23:42:58] <puff> Afternoon. I'm writing up a little tutorial on using the csv module.  In the section on how to skip over the first line of the CSV if it contains column headers, one way to do it is, rather than "for row in reader(inputfile)",  instantiate the reader on a separate line, then call next(readerinstance) before starting the for loop.
[23:43:16] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[23:43:17] <puff> However, that feels kinda un-pythonic.  Is there a more idiomatic python way to do it?
[23:43:20] <purple_cthulhu> OliverUK, Prefix the data and "ZBXD\1" with "b" to indicate that they are bytes instances and not strings: data = b'{"request":"active checks","host":"<hostname>"}' and packet = b"ZBXD\1" + struct.pack('<Q', len(data)) + data
[23:43:37] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 256 seconds)
[23:43:45] *** Quits: cpunk (~mm@ip2505fdad.dynamic.kabel-deutschland.de) (Quit: leaving)
[23:44:10] *** Joins: withered1wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:44:13] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[23:44:14] <OliverUK> ChrisWarrick: I will try your code now, thank you very much
[23:44:35] <dodo> puff: i always use DictReader..
[23:44:44] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:45:23] <puff> dodo: Quite, but regardless.
[23:45:28] <ChrisWarrick> puff: itertools.islice?
[23:45:42] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[23:45:43] *** Quits: withered1wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[23:46:00] <puff> ChrisWarrick: Interesting.
[23:46:02] <dodo> puff: i mean, if you write a tutorial i would definitely go with DictReader
[23:46:22] <dodo> theline[fieldidx] is just not user friendly
[23:46:27] <ChrisWarrick> anything you do, don’t rely on random indexes
[23:46:38] <ChrisWarrick> especially since they will break one day
[23:46:46] <puff> dodo: Yeah.
[23:47:00] <puff> ChrisWarrick: Random indexes?  You mean using a randomly generated index value?
[23:47:21] <jinsun> oriba: for build backends, setuptools, flit, hatch, and poetry are options, and for installers pip is really the only one I've see people use, but there are few others like https://github.com/FFY00/python-install and https://github.com/brettcannon/mousebender
[23:47:23] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[23:47:25] <puff> ChrisWarrick: Or do you mean using an arbitrary numeric index rather than using column headers?
[23:47:34] <ChrisWarrick> puff: arbitrary
[23:47:51] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:47:59] *** Joins: simplicius (~simplicio@2a02-a45b-3dc8-1-1d3a-6766-2ae7-f393.fixed6.kpn.net)
[23:48:00] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:48:17] *** Quits: aknot (~aknot@2603-900a-1503-17bb-41fb-8b8e-dff0-1cb4.inf6.spectrum.com) (Ping timeout: 240 seconds)
[23:48:44] <ztrawhcse> DictReader uses next(readerinstance) to grab the fieldnames, seems idiomatic to me...
[23:48:50] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[23:49:21] <oriba> jinsun: ok, thanks. Which way to packaging would you recommend, with respect of easy use?
[23:49:35] <puff> ChrisWarrick: Yeah.
[23:49:48] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[23:50:02] *** Quits: nhanb_ (522d4a25ea@2604:bf00:561:2000::13b) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: lew (c292bc13c9@2604:bf00:561:2000::27e) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: shreyasminocha (51fdc93eda@user/shreyasminocha) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: akelly (24aca7a63b@2604:bf00:561:2000::152) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: Hummer12007 (061e0434dc@2604:bf00:561:2000::16) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: sliwkr (1aac56ad72@2604:bf00:561:2000::251) (Ping timeout: 250 seconds)
[23:50:02] *** Quits: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17) (Ping timeout: 250 seconds)
[23:50:05] *** Quits: Angs (~Angs@193.138.218.215) (Ping timeout: 256 seconds)
[23:50:13] *** lukedashjr is now known as luke-jr
[23:50:31] *** Joins: cjb (~cjb@user/cjb)
[23:50:54] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[23:51:00] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com)
[23:51:32] <dale> oriba: I've been using https://packaging.python.org/en/latest/tutorials/packaging-projects/ to learn how to package things in a "modern" way lately.
[23:51:44] <dale> oriba: Also https://github.com/pypa/sampleproject
[23:51:50] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[23:51:51] *** Joins: nhanb (522d4a25ea@2604:bf00:561:2000::13b)
[23:51:51] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17)
[23:51:51] *** Joins: sliwkr (1aac56ad72@2604:bf00:561:2000::251)
[23:51:52] <ztrawhcse> jinsun: python-install is an unmaintained fork and wrapper over https://github.com/pradyunsg/installer/ so it's curious to see you mention it
[23:51:53] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[23:51:54] *** Joins: Hummer12007 (061e0434dc@2604:bf00:561:2000::16)
[23:51:54] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[23:51:54] *** Joins: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5)
[23:51:55] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[23:51:55] *** Joins: lew (c292bc13c9@2604:bf00:561:2000::27e)
[23:52:12] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[23:52:18] <dale> jinsun: Where does the package called "build" fit in amongst the options you mentioned?
[23:52:30] <oriba> dale, ok thanks
[23:52:38] <jinsun> oriba: I just use the old school stuff, pip + setuptools, for installers pip is really the only good choice, for backends setuptools is kinda too complicated, so you may want to try flit if you have pure python projects
[23:52:44] <dale> jinsun: https://pypi.org/project/build/ is what I'm talking about, to be clear.
[23:53:13] <jinsun> ztrawhcse: okay I knew about that one too but didn't know which one is more maintained
[23:53:17] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[23:53:48] *** Joins: satta_satta (~AdminUser@55d41988.access.ecotel.net)
[23:54:41] <ztrawhcse> the unmaintained one was an experiment in building a CLI on top of the maintained one, but the goal has *always* been to have the maintained one provide a CLI
[23:54:41] <ztrawhcse> which there now is!
[23:54:56] <oriba> jinsun: what is meant with backend here? same meaning as in frontend/backend programming? I have some scripts, that use mostly python stdlib, but also some other things, like PIL, numpy, rdflib, jsonlines...
[23:55:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:55:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:55:07] <ztrawhcse> do note, its purpose is to be a simple (the simplest) spec-compliant way to install a single wheel file into a python environment
[23:55:15] <ztrawhcse> without options, or dependency management
[23:55:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:56:12] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:56:12] <jinsun> dale: build is a frontend like pip, but it just builds the wheels and sdists and doesn't install the package, you have to install with pip, pip can do both build and install
[23:56:16] *** Joins: cozmo (~user@65.78.142.57)
[23:56:40] <ztrawhcse> (without too many options, that is; the ones that are there are strictly to control stuff like DESTDIR for distros, and whether to generate bytecode)
[23:56:43] <puff> Last time I looked into python packaging there were half a dozen ways that people said to use.  For a language with an explicitly stated policy of "There should be one-- and preferably only one --obvious way to do it"....
[23:57:01] <nedbat> puff: the zen of python is not policy :)
[23:57:07] <ztrawhcse> puff: that ideal died when people decided setuptools was bad
[23:57:27] <dale> jinsun: Oh!  I didn't realize I didn't need build if I already have pip.  Is that "pip wheel" to build?
[23:57:28] <jamea> anyone used pandas for read excel file? how to get the value of cell A5 Sheet1
[23:57:40] <ztrawhcse> (when in reality it had bad things about it, but the solution was never to allow poetry to make it worse)
[23:58:37] <ztrawhcse> > 'pip wheel' uses the bdist_wheel setuptools extension from the wheel package to build individual wheels.
[23:58:52] <ztrawhcse> dale: so I guess that largely depends on the particular package
[23:59:34] <dale> Are eggs dead?
[23:59:39] <jinsun> dale: well better to use build, that's what pypa recommends, not sure if pip supports just building and not installing, I used to assume the build part is internal
[23:59:43] <dale> Or wanted to be dead in favor of wheels, at least?
