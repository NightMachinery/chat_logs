[00:03:08] *** Joins: Northwoods (~Northwood@2409:4055:4e80:c18a:7800:f119:52db:209f)
[00:13:39] *** rwb is now known as rb
[00:16:53] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[00:34:36] *** Quits: jeffrey (~jeffrey@2001:1c00:b1c:4100::ff16) (Quit: Client quit)
[00:36:37] *** Quits: dimi1947 (~dimi1947@2a02:1388:8f:4b0e:8840:7bb2:6e7:2ac4) (Ping timeout: 240 seconds)
[00:43:17] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[00:54:25] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[00:58:21] <FightingFalcon> is there a way to make it so that when i go to mysite.com/myurl it will re-direct me to mysite.com/my-new-url but still show my-url?
[01:01:11] <Albright> FightingFalcon: Assuming you're using a decent CMS/framework, you'll want to tweak the router to call the controller for the latter URL when the former URL is accessed. That's really vague but the specifics will differ based on the framework.
[01:01:37] *** Quits: pmercado (~pmercado@190.22.78.173) (Ping timeout: 240 seconds)
[01:02:38] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[01:03:07] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:03:56] <judah> So in Magento, if you want to update any CMS pages you need to write a full data patch and tweak the blog post with SQL queries
[01:04:08] <judah> I swear whoever designed this needs locked away before they do any more harm
[01:04:32] <FightingFalcon> ok
[01:13:55] *** Quits: magla (~gelignite@55d453bf.access.ecotel.net) (Quit: Stay safe!)
[01:21:16] *** Joins: meaurieati (~meaurieat@p200300d43721d400e5984ee483d0edd6.dip0.t-ipconnect.de)
[01:21:45] <meaurieati> any knowledge or experience with "The mbstring extension is missing." at PHPMyAdmin? (Linux Mint)
[01:21:52] <meaurieati> already installed php7.*-mbstring (even though 7.4-mbstring isn't in the regular repos)
[01:22:08] <da_wunder> install that extension
[01:22:24] <Albright> meaurieati: Did you bounce PHP-FPM after installing the extension?
[01:22:40] <da_wunder> meaurieati: https://www.php.net/manual/en/mbstring.installation.php
[01:22:43] <meaurieati> Albright - I can't remember
[01:23:11] <Albright> Well, try bouncing it again. :P
[01:23:16] <da_wunder> and really if you're using eg. debian that is just one `apt-get install` command and that's all
[01:23:44] <Albright> What is Mint downstream from?
[01:24:21] <meaurieati> Ubuntu
[01:24:53] *** Quits: guido (~weechat@host-80-182-121-179.pool80182.interbusiness.it) (Ping timeout: 256 seconds)
[01:25:51] <da_wunder> so maybe this - https://stackoverflow.com/questions/67959017/ubuntu-20-04-php-7-4-mbstring-installed-but-not-enabled ?
[01:26:45] *** Joins: guido (~weechat@host-95-235-249-12.retail.telecomitalia.it)
[01:30:37] <meaurieati> I already tried to install it that way.
[01:31:03] <meaurieati> package could not be found
[01:31:56] <da_wunder> please share that _exact_ command
[01:32:49] <da_wunder> and eg. I'm assuming that you've run eg. `apt-get update` command  before that install command that we don't know
[01:34:29] <da_wunder> but now some sleep, need to wake up 06:30, so just more than 6h of sleep ->
[01:35:29] <meaurieati> sudo apt-get update && sudo apt-get install php7.4-mbstring
[01:35:38] <meaurieati> good night
[01:35:40] <meaurieati> thank you
[01:38:55] <da_wunder> so last tip; `apt-get update` after that `apt-cache search mbstring`
[01:39:56] <da_wunder> of `apt-cache search string | grep php` or similar
[01:40:38] <da_wunder> I don't have PHP 7.4 setup anymore, so mbstring is built-in for my setup (8.x)
[01:41:11] *** Quits: guido (~weechat@host-95-235-249-12.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[01:42:22] <meaurieati> I'll try that
[01:42:26] <meaurieati> thank you alot
[01:43:51] *** Quits: meaurieati (~meaurieat@p200300d43721d400e5984ee483d0edd6.dip0.t-ipconnect.de) (Quit: Leaving)
[02:27:17] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[02:28:27] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:30:59] <relipse> Hi,I am trying to upgrade from php 7.4 to php8.1 on ubuntu 20.04, I am following this page:  https://www.linuxcapable.com/how-to-install-php-8-1-on-ubuntu-20-04/ and I am getting message i paste, and php -v still shows 7.4 https://www.irccloud.com/pastebin/7Mj0DUFu/ubphp8.1
[02:31:48] *** Joins: slimfadey (~Guest40@35.129.44.74)
[02:32:37] <slimfadey> Could anyone recommend a encrypt/decrypt function that's not openSSL? I have a sensitive (not extremely) API Key I'd like to encrypt with an application salt key
[02:32:49] <Albright> relipse: You updated your package database, but haven't actually installed anything yet.
[02:32:52] <slimfadey> The issue I'm running into with the openssl functions is that my clients may or may not have SSL, I can't control it.
[02:33:01] <Albright> (Assuming what you pasted is the entirety of what you've done so far.)
[02:33:26] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[02:33:31] <Blondie101010> slimfadey:  well that means you won't be able to have any good solution
[02:33:35] <Blondie101010> you should put the requirement
[02:33:39] <Sammitch> ^
[02:33:45] <BadAdviceCat> slimfadey, lol, nice name.
[02:34:11] <slimfadey> I don't necessarily need a perfect solution. It's not like the app will be compromised if this key is public but it's also not optimal.
[02:34:13] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[02:34:30] <slimfadey> It's not a password or SSN just sensitive
[02:34:52] <BadAdviceCat> slimfadey, it's about software quality. Any minor bug can cause problems.
[02:34:52] <Blondie101010> either you want to protect it or you don't care
[02:35:14] <Albright> rot13()
[02:35:19] <Blondie101010> no
[02:35:22] <slimfadey> The application salt is a constant and it'll be saved to a database so in the unlikely case the database is compromised I just want it to be "encrypted" as best as possible
[02:35:27] <Blondie101010> please don't give bad advice
[02:35:31] <slimfadey> the value not the salt*
[02:35:41] <BadAdviceCat> Ideally, you want code to function exactly as intended. Not by accident, or because you've gotten lucky.
[02:36:18] <slimfadey> I was hoping to not pull in a library for this as again, it's not super critical
[02:36:19] <Sammitch> if the encryption key and the ciphertext live on the same machine, and the key doesn't require a human to unlock, then the encryption is just meaningless theater anyway
[02:36:36] <slimfadey> Theater is just fine
[02:36:55] <Blondie101010> if it's not sensitive, you could just encode it
[02:37:08] <Blondie101010> but it will be illusional protection
[02:37:32] <slimfadey> It's a Constant Contact secret API key I just need to save to the database. I just want to obfuscate it in the database as best I can while still being able to access it in my application.
[02:38:18] <Sammitch> use the DB's built in theater, I know mysql has an encrypt function
[02:38:19] <slimfadey> So I'm looking for an alternative to openssl_encrypt()
[02:38:37] <Sammitch> just know that it is meaningless theater
[02:38:47] <slimfadey> I've heard
[02:38:57] <slimfadey> I understand the implications, just looking for a solution.
[02:38:58] <Blondie101010> a secret API key is a password
[02:39:39] <Blondie101010> but it won't be safer if the script that retrieves it has the key
[02:39:48] <Blondie101010> so you're imagining fake security
[02:40:59] <slimfadey> This isn't helping me at all :/
[02:41:25] <Blondie101010> why don't you just ask your employer if they have openssl like most people??
[02:41:41] <Sammitch> I mean, I gave you an option, you just didn't bother to read the half of the sentence that contained it.
[02:42:06] <slimfadey> I did read it and am looking into it.
[02:42:08] <Sammitch> have a silver platter: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html#function_aes-encrypt
[02:42:15] <BadAdviceCat> Exactly as Sammitch said. It's a theater.
[02:42:52] <BadAdviceCat> slimfadey, I'm not going to pretend to understand exactly what you're doing. Just from reading, it sounds to me that you want what is called an "encryption as a service".
[02:44:03] <Sammitch> BadAdviceCat: they don't want to install openssl to even do the theater properly, I doubt they're going to be interested in installing Vault. :P
[02:44:06] <BadAdviceCat> That means that your "Regular  server" is able to encrypt data, but can not perform decryption. Then a second server, that is able to decrypt.
[02:44:08] <Blondie101010> I doubt they want to repeatedly decrypt the API key
[02:44:39] <slimfadey> It's a CMS extension, SSL isn't guaranteed.
[02:44:54] <Sammitch> Vault being the correct answer, though. `chef_kiss.jpeg`
[02:45:11] <Blondie101010> slimfadey:  what?  do you mean that you're sending the API key to the client??
[02:45:26] <Sammitch> echo "Requires openssl." >> README.md
[02:45:41] <slimfadey> I wish it was that simple
[02:45:45] <Blondie101010> not sure that'll be enough based on what he just said
[02:45:49] <slimfadey> Blondie101010 the client is providing the secret
[02:46:00] <Blondie101010> uhhhhhhhhhhh
[02:46:14] <Blondie101010> so each user has their own API key?
[02:46:27] <slimfadey> Constant Contact provides the user, the user provides the extension with the API and secret
[02:46:33] <Sammitch> it's probably a wordpress extension, or something similar, to be deployed to client-controlled app installs.
[02:47:16] <Blondie101010> that would be a bit better
[02:48:03] <Blondie101010> slimfadey:  once configured, is the API key seen by any browser?
[02:49:29] <slimfadey> The extension uses both to authenticate with the CC API but the client browser doesn't get any of that, it's server based api
[02:50:21] <Blondie101010> if you don't manage the server in question, securing the key would be beyond your scope
[02:51:08] <Blondie101010> but sure you can't fake security all you want
[02:51:11] <slimfadey> Right, I just want to obfuscate it database as best I can. There are many things that are simply out of my hands
[02:51:38] <Blondie101010> it's just a smoke show, so not worth 5 minutes of effort
[02:51:54] <Blondie101010> base64_encode($key)
[02:52:25] <Sammitch> why don't you just make your "security" function detect the capabilities of the server and apply the best available option, falling back to "plaintext" if none are available, and raising a notice to the user.
[02:52:53] <Albright> Blondie101010: You just scolded me for suggesting rot13 and now you're suggesting base64? :P
[02:53:00] <Blondie101010> Sammitch:  I did think of that possibility, but it still won't be safe enough to bother
[02:53:26] <Blondie101010> Albright:  yeah, I disagree with myself here
[02:53:26] <slimfadey> Yeah that was the alternative is SSL wasn't detected but I was hoping there was a PHP function that could simply encrypt/decrypt with some salt.
[02:53:36] <slimfadey> That doesn't seem to be the case AFAICT
[02:53:55] <Albright> Gratefully, yes.
[02:53:58] <Sammitch> Blondie101010: none of this provides any actual safety, right now we're just talking about how to trick rubes into thinking slim's code has more than zero security
[02:54:32] <Sammitch> slimfadey: why implement a worse version of openssl when openssl is like... right there?
[02:54:41] <Sammitch> that's why mcrypt is dead.
[02:55:02] <Sammitch> you could use sodium, but that's also an extension.
[02:55:04] <slimfadey> Because SSL isn't always guaranteed in my usecase.
[02:55:16] <Sammitch> ok hold on.
[02:55:17] <Blondie101010> that's irrelevant for the most part
[02:55:53] <Sammitch> do you mean to say "the openssl extension isn't necessarily installed" or "maybe they don't use HTTPS"? because you keep sayign "SSL"
[02:55:54] *** Quits: hansol (~hansol@185.116.92.25) (Quit: Client closed)
[02:55:58] <Blondie101010> slimfadey:  but if you want to do transport encryption, that would be a good idea
[02:56:06] <Blondie101010> though much more involved
[02:56:47] <slimfadey> Maybe they don't use HTTPS. I keep running into issues with the openssl_encrypt() where it tries to go to an HTTPS URL
[02:57:00] <Sammitch> lol
[02:57:01] <slimfadey> Blondie101010 I'm not sure what you mean by transport encryption.
[02:57:04] <Sammitch> two different things.
[02:57:09] <Blondie101010> I think you're confused
[02:57:12] <judah> Did you guys know that in Magento, you cant actually get upgrade instructions from the release notes? Nope, they just link back to the installation instructions. Thanks Adobe
[02:57:13] <slimfadey> I certainly am.
[02:57:36] <Sammitch> openssl is a generic encryption library, which you should be using for this. whether or not the website is served via HTTPS is 100% unrelated to what you're asking about
[02:57:38] <Blondie101010> slimfadey:  when the user/site owner sets up their own API config
[02:57:46] <Blondie101010> that transfer is the highest risk
[02:57:49] <BadAdviceCat> slimfadey, to put things in perspective, even kids can decode this stuff. It's really not hard, there are literally many websites with common "Text to Binary, Binary to text, Hex to Text, Text to Hex" conversion tools online that exists just for amusement, you're not fooling anyone.
[02:58:17] <slimfadey> BadAdviceCat I appreciate the advice, but we've been over this already. I understand the implications.
[02:58:43] <BadAdviceCat> There is URL encodes, decoders, all available on the same site, and I would see kids pass/share "secret messages" to each other all the time.
[02:59:34] *** Quits: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[02:59:56] <BadAdviceCat> slimfadey, at this point, I would've asked the higher-ups, the bosses, or whomever is responsible to either gain more access to the stuff, or make them do it, or at least warn them of this problem. Ideally, if anything blows up, you'll likely get blamed for it.
[03:00:08] <Sammitch> yeah anyone more interested than a botnet is going to be like "oh it's just base64'd" and decode it immediately
[03:00:09] <slimfadey> Sammitch Maybe I'm misunderstanding then. When I call openssl_encrypt() my page tries to load in https, which then gets caught up in my firewall if there's no cert for the site which is reasonable. Then I'm back to the issue of if/when the site doesn't have a cert.
[03:00:30] <Sammitch> slimfadey: those two things are entirely separate
[03:00:31] <BadAdviceCat> ideally, you want to avoid getting blamed for this.
[03:01:01] <slimfadey> Sammitch I guess, but my site doesn't get HTTPs when I call other PHP functions lol
[03:01:05] <Blondie101010> slimfadey:  openssl_encrypt() does not affect how the user gets to the pag
[03:01:07] <Blondie101010> *page
[03:01:18] <Sammitch> your page is likely trying to load via HTTPS because of other misconfigurations, and/or the fact that HTTPS is the defacto default protocol as far as browsers are concerned.
[03:01:51] <Blondie101010> maybe just give your users a simple generic howto letsencrypt
[03:02:03] <BadAdviceCat> ^ this
[03:02:10] <slimfadey> Possibly, but I can run this website fine but as soon as I call openssl_encrypt() my page tries to load over HTTPS which is not what I want.
[03:02:22] <Blondie101010> that makes no sense
[03:02:32] <slimfadey> That's what I thought too, but it's happening
[03:02:38] <Blondie101010> because of something else
[03:02:47] <Blondie101010> are you doing a redirect?
[03:02:49] <Sammitch> slimfadey: if you want to believe that those two things are related, then I can't help you.
[03:02:50] <slimfadey> I mean, I can comment out the function call and browse around just fine.
[03:02:58] <slimfadey> I'm calling it and killing the page.
[03:03:03] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[03:03:10] <Blondie101010> slimfadey:  check your webserver logs
[03:03:36] <Sammitch> it's like saying "it's raining and the internet is slow, therefore rain slows down internet."
[03:03:47] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:03:59] <Blondie101010> if you want help troubleshoot this weirdness, you'll need to provide sample code to demonstrate the issue
[03:04:06] <Sammitch> I'm not disputing that those two things are happening, but there's not a direct causal realtionship
[03:05:18] *** Joins: style (fatal@error.rs)
[03:05:48] <BadAdviceCat> F12 in web browser. Network tab (you might have to refresh, or re-visit the web page.) to check to see if you are being redirected. The web browser dev tools should inform you what is happened.
[03:07:17] <BadAdviceCat> Or use an API testing tool. I like using https://insomnia.rest/products/insomnia - Yes, the software is free to use.
[03:07:18] <Blondie101010> he likely won't notice it
[03:07:30] <Blondie101010> troubleshoot as any other code
[03:09:10] <Blondie101010> the first explanation that comes to mind is a 500 causing a bad redirect, so 2-3 problems in one
[03:09:28] <slimfadey> So my script is pretty straight forward. If I visit it directly in HTTP I get the die() just as normal. If I append a query string ?crypt I get HTTPS -> https://pastecode.io/s/injtk4mx
[03:09:35] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[03:09:47] <slimfadey> I can pretty consistently replicate it on my end. It's the only PHP function that does this.
[03:10:04] <slimfadey> If it didn't do this, I would love to use openssl_encrypt()
[03:10:57] <Blondie101010> slimfadey:  did you look at your webserver error log?
[03:11:05] <Albright> slimfadey: What output do you get if you do `curl -i http://urlto.your/script.php` ?
[03:11:11] <Blondie101010> I just gave you a likely explanation
[03:11:14] <slimfadey> There is no error log
[03:11:21] <Blondie101010> set it up then!
[03:11:32] <slimfadey> It is, there's just no errors or warnings to report
[03:11:42] <slimfadey> Hold on let me read up
[03:12:06] <Blondie101010> I'm also interested in Albright's suggestion
[03:12:39] <Blondie101010> what is the output?
[03:12:41] <slimfadey> Console access above my pay grade
[03:12:50] <Blondie101010> ask your sysadmin then
[03:12:55] <Albright> WAHT
[03:13:09] <Albright> How much are you being paid then?
[03:13:19] <Blondie101010> at most 10cents per hour
[03:13:29] <slimfadey> Mean
[03:13:36] <Albright> No, I want to know.
[03:13:44] <Albright> I need to know if I should raise my prices.
[03:14:16] <Albright> Okay, I guess that could be read as mean too.
[03:14:31] <Albright> Never mind. Forgive me.
[03:14:51] <Albright> At any rate, if you want to grow as a developer, you should learn not to fear the command line.
[03:15:35] <slimfadey> I don't fear the command line, I just don't have access to the server console at my workpalce.
[03:15:55] <Blondie101010> just test it from any machine that can access the server!
[03:17:36] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:17:43] *** Joins: ferdna (~ferdna@user/ferdna)
[03:18:11] *** Parts: style (fatal@error.rs) ()
[03:18:59] <slimfadey> Weird, it stopped raining outside and my internet is still slow
[03:19:10] <Albright> slimfadey: Yeah, that command doesn't need to be run from the server. Just any machine that can access it.
[03:19:21] <slimfadey> I guess I can use openssl_encrypt() after all
[03:19:54] <slimfadey> Seems to be some oddity with Chrome, doesn't happen X Browser so it's something localized
[03:22:58] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[03:24:01] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[03:25:53] <Blondie101010> that is insufficient troubleshooting
[03:26:09] <Blondie101010> but at least you see it's not caused by the PHP function
[03:26:51] <slimfadey> And I'm pretty happy that I should be able to use openssl_encrypt/decrypt()
[03:27:01] <slimfadey> Cause it seemed like any alternative would have been a pain.
[03:27:56] <Blondie101010> since it doesn't happen in another browser, you could be facing a cached redirect or similar
[03:28:32] <slimfadey> That's probably the case. I think I got hung up on the openssl part of the function name.
[03:29:24] <slimfadey> In any case thanks for entertaining my peculiar use-case folx
[03:46:56] *** Joins: Hiccup (cHoy@user/hiccup)
[03:49:28] *** Quits: slimfadey (~Guest40@35.129.44.74) (Quit: Client closed)
[03:53:04] <relipse> what does this mean albright https://www.irccloud.com/pastebin/MmsR4KJn/
[03:54:04] <Albright> relipse: So Apt is a package manager. All package managers need some sort of database of what packages are available to be installed and associated info, like a description of the package, what versions are available, etc.
[03:54:19] <Albright> What that command does is update that database.
[03:54:36] <Albright> It does *not* actually update the installed software.
[03:54:59] <relipse> yes i did all of the below and it still didn't work i'm just showing you step by step
[03:55:15] <__adrian> if you're asking about the W, it's saying that it couldn't ubdate the stripe db.
[03:55:39] <relipse> what about this Albright ? https://www.irccloud.com/pastebin/CSszhJ23/
[03:55:52] <relipse> do I need to remove php 7.4 first?
[03:56:17] <__adrian> you can, and maybe want to, but you don't *have* to.
[03:56:28] <relipse> yeah i don't want to if i don't have to
[03:56:54] <relipse> ok next step: sudo apt install php8.1 libapache2-mod-php8.1
[03:57:14] <relipse> https://www.irccloud.com/pastebin/dfu8Hq0b/
[03:57:19] <relipse> what does that mean?
[03:57:56] <__adrian> it means you already did that step
[03:58:13] <relipse> then why does php -v still show 7.4
[03:58:28] <__adrian> because that's the one in your $PATH
[03:58:35] <relipse> so where is php 8 ?
[03:58:51] <__adrian> somewhere else
[03:58:59] <relipse> even phpinfo still showed 7.4 if i remember correclty
[03:59:25] <__adrian> autoremove might sort that out, if php8 was not put on the path because php7 already was
[03:59:33] <relipse> i see
[03:59:37] <__adrian> $ which php
[03:59:57] <relipse> ./usr/bin/php
[04:00:09] <__adrian> $ ls -lah /usr/bin/php
[04:00:23] <__adrian> it's probably a symlink to whereever you installed php 7.4
[04:00:29] <relipse> lrwxrwxrwx 1 root root 21 Jun 13  2020 /usr/bin/php -> /etc/alternatives/php
[04:00:33] <__adrian> change it to point to your php 8 install
[04:00:41] <relipse> how do I find where my php8 is?
[04:00:50] <__adrian> $ ls -lah /etc/alternatives/php
[04:01:11] <relipse> oh genius
[04:01:12] <relipse> lrwxrwxrwx 1 root root 15 Jan 26  2021 /etc/alternatives/php -> /usr/bin/php7.4
[04:01:26] <__adrian> so see if there's a /usr/bin/php8.1
[04:01:40] <relipse> https://www.irccloud.com/pastebin/kpkAUbYv/
[04:02:08] <__adrian> so i'd change the /etc/alternatives/php link
[04:08:26] <Albright> Wait… am I crazy or does `const CONST_NAME = 123;` work outside of classes?
[04:08:35] <__adrian> it does
[04:08:54] <Albright> It does the same thing as `define()`?
[04:09:00] <Blondie101010> similar
[04:09:27] <__adrian> it must use a constant expression (nothing dynamic), as it happens at compile time (not runtime)
[04:09:32] <Blondie101010> the differences are not appriciable
[04:09:45] <Blondie101010> *appeciable
[04:09:50] <Blondie101010> ah duhh
[04:31:39] <relipse> check this sucker out
[04:31:58] <relipse> flipphp8php7 https://www.irccloud.com/pastebin/nOc5Ydsr/
[04:32:15] <relipse> thanks to the guys in #bash
[04:34:21] <relipse> hmm, that changes it on the command line but not in apache
[04:35:54] <Blondie101010> of course...  the only case it would affect apache is if you call php through an old cgi script
[04:36:34] <relipse> how do I enable php 8.1 in apache now?
[04:36:44] <Blondie101010> ask your webserver support/sysadmin
[04:36:48] <Hiccup> restart apache2
[04:36:49] <__adrian> that's an apache config issue
[04:36:56] <relipse> I already tried restarting apache
[04:37:03] <Blondie101010> you may want to use php-fpm
[04:37:06] <Blondie101010> so look for howtos
[04:37:46] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[04:39:35] <relipse> I thought installing libapache2-mod-php8.1 would of done it and restarting apache
[04:39:56] <__adrian> depends on the install script
[04:40:06] <Blondie101010> ask your package maintainer to know how they set it up
[04:40:16] <Blondie101010> or look at the actual config
[04:40:17] <relipse> this is all local blondie, i'm doing everything local
[04:40:19] <__adrian> just like with the cli php, maybe it didn't because you already had apache installed/configured
[04:40:46] * Blondie101010 nods
[04:42:00] <Blondie101010> relipse:  note: thep package maintainer is the person or group that made the libapache2-mod-php8.1 package
[04:42:18] <Blondie101010> s/thep/that the/
[04:42:29] <relipse> oh sorry I thought you mean tsomething else
[04:43:55] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[04:44:40] <relipse> ok so does anyone know why after installing libapache2-mod-php8.1 and restarting apache it still shows php 7.4 ?
[04:45:02] <Blondie101010> look at the darn apache config
[04:45:09] <Blondie101010> or get a sysadmin to do it for you
[04:45:20] <__adrian> relipse: to be clear, the only answer is "because that's what it did"
[04:45:42] <__adrian> there's not "one way" this works. it depends entirely on what the particular install script did / did not do.
[04:45:43] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:46:01] * relipse looking for apache config
[04:46:13] <Blondie101010> likely in /etc/httpd
[04:46:50] <Hiccup> reinstall php :D
[04:47:25] *** Quits: MrBlue (~MrBlue@217.138.213.30) (Quit: Leaving)
[04:50:15] <Nekomander> relipse, rather than a bash script, you also have an option to create TWO VHOSTs. One for PHP8 using this fictional domain: https://localhost7.test/ and the other one using this domain: https://localhost8.test/
[04:50:44] <relipse> yeah Nekomander that might be a good idea
[04:50:49] <Nekomander> PHP7 uses localhost7.test, and PHP8 uses localhost8.test
[04:51:54] <Nekomander> The vhost will connect to their own PHP-FPM instance. (Run php7 and php8  FPM instances)
[04:52:29] <Blondie101010> (on different ports or sockets)
[04:56:50] <relipse> I tried installing  sudo apt-get install php8.1-fpm  and now I am getting Service Unavailable 503 error
[04:57:19] <relipse> sudo a2enmod proxy_fcgi setenvif and sudo a2enconf php8.1-fpm
[04:59:34] <Nekomander> Strange.
[05:00:04] <Nekomander> I use this repo. https://launchpad.net/~ondrej/+archive/ubuntu/php for PHP.
[05:00:51] <Nekomander> I know it's third party, but this is the same person who makes this available in debian which eventually gets dropped into Ubuntu anyway.
[05:01:34] <Blondie101010> his repo works on both
[05:07:46] <relipse> different question, why is one of my pages giving a 500 error
[05:20:00] *** Joins: molt (~molt@46.33.200.12)
[05:24:13] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[05:24:25] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[05:29:10] *** Joins: pmercado (~pmercado@190.22.78.173)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:47:07] <Blondie101010> look at the SAPI's error log
[05:48:14] <Blondie101010> the webserver's error log should at a minimum tell you the request that had the issue..
[05:49:09] <Blondie101010> look at phpinfo() from the same SAPI
[05:56:38] *** Joins: Rockwood (~Rocky@user/rocky)
[05:58:17] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 240 seconds)
[06:00:33] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[06:02:35] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[06:05:27] *** Joins: lembron (~admin@user/lembron)
[06:07:47] <lembron> hello, is there a "oneliner" to make foreach happy given a "$list = glob(...); foreach($list as ...) {}" while not having to move all the code around? -> its in the middle ofther code, so i cant just bail/return, and i need the full $list after the loop still
[06:08:21] <lembron> is there something like "$list = glob(...) || array(); foreach..." or such?
[06:08:25] <TML> foreach(glob(…) as …) { … }
[06:10:44] <lembron> `and i need the full $list after the loop still` :/ --- isnt there "$var = val() :? fallback;" or so? remember seeing something along those lines a while ago in some other combination
[06:10:45] <__adrian> glob(...) ?: [] as ...
[06:11:30] <__adrian> but if you need it after the loop (not whatever you process in the loop) then just assign it. that's the more clear approach anyway.
[06:11:50] <__adrian> $list = glob(...) ?: [];  foreach ($list as ...) { ...
[06:12:14] <lembron> would one write "$var = val() :? fallback;" or "$var = (val() :? fallback);" then? - i know the () isnt needed, but readibility/expectation wise?
[06:12:48] <__adrian> it's clearer without imo, but up to your judgement
[06:13:13] <lembron> last, this ":?" works all the way down to php5 right?
[06:13:27] <__adrian> ?:  not  :?
[06:13:56] <__adrian> and i'll leave that as an exercise for you; i have no interest in promoting php5-compatible code  :p
[06:15:11] <lembron> ;D ill understand - well, ill see what CI says - thanks so far =)
[06:15:12] <__adrian> meh, actually easier than expected to find the answer.  5.3
[06:15:51] <Nekomander> lembron, why are you concerned with PHP 5?
[06:18:38] <Rockwood> stable and latest always good in everything
[06:18:39] <lembron> cause the rider says so ;D not my choice and i dont think anyone actually uses it on 5 (hopefully, there is more code in there that looks like it could break lol) - but the book says it has to (what actually officially ended on the 31st lol, but im squeezing out one last patch :F)
[06:19:33] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[06:27:52] *** Joins: keypusher (keypusher@user/keypusher)
[06:29:27] <TML> lembron: it's unclear to me why you're not just doing foreach(($list = glob(…)) as $e) { …; }
[06:30:12] <TML> glob() already returns an empty array when there aren't any matches
[06:30:41] <__adrian> unless it errors
[06:31:22] <TML> well, by default, all errors are ignored - so as long as you don't set GLOB_ERR, you should be fine
[06:32:18] <__adrian> hm. true.
[06:32:19] <lembron> ive never understood when/why those assignments convert back to bool/not... so generally not a fan of that whole "if($var=$bla)" thing i guess
[06:32:41] <lembron> and ye, error-wise either is fine, but stan doesnt like it :P
[06:32:45] <__adrian> ofc i'd still be in favor of setting it and handling the error
[06:33:10] <TML> *shrug* I mean, if your goal as stated was "oneliner", …
[06:33:13] <__adrian> "ive never understood when/why"  which assignments? what coversion?
[06:33:21] <TML> it's all going to look like line-noise anyway
[06:33:33] <__adrian> yeah, i don't support the "onliner" goal
[06:33:38] <__adrian> *oneliner
[06:33:48] <lembron> __adrian on `foreach(($list = glob(…)) as $e)` for example
[06:34:40] <__adrian> <iterable> as $e  means for each iteration,  $e = <item from iterable>
[06:35:07] <__adrian> `as` is what causes the assignment. and it's only bool if the item is bool. there's no conversion.
[06:35:23] <__adrian> takes each item as-is
[06:37:01] <TML> lembron: The docs for glob() state that glob returns an array, unless there's an error; but that by default, errors are ignored (you have to set GLOB_ERR in the second argument to glob() to get a non-array back from glob())
[06:37:22] <TML> as __adrian and I just barely discussed
[06:37:35] * __adrian ahsn't used glob() in a long time
[06:39:28] <TML> yeah, it's been a hot minute since I used the PHP implementation - but I've used C's fnmatch() not too long ago
[06:40:17] *** Quits: pmercado (~pmercado@190.22.78.173) (Ping timeout: 240 seconds)
[06:51:55] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[07:06:42] <CoJaBo> Our code uses glob extensively for database operations :/
[07:14:32] *** Joins: ash_m (~androirc@user/ash-m/x-3292451)
[07:16:32] <Blondie101010> almost funny
[07:17:44] *** Quits: ash_m (~androirc@user/ash-m/x-3292451) (Client Quit)
[07:18:39] <CoJaBo> It is my personal hell.
[07:18:50] <__adrian> ok, it's a little funny.
[07:21:57] <TML> I don't even understand how that would work
[07:27:05] <Blondie101010> the directory structure can represent the index
[07:27:07] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[07:27:40] <__adrian> better to build the indexing into the filename  ;)
[07:28:35] <Blondie101010> possible, but I wouldn't bet on that.....  tempting to benchmark
[07:29:10] <__adrian> you do that
[07:29:27] <Blondie101010> when you have >100000 files in a directory, things start to dramatically change
[07:29:27] <TML> I'm still not following
[07:29:43] <__adrian> well, *I* was being sarcastic. i don't know about those two.
[07:29:55] <TML> like you do `mkdir select/col1/tablename` or something?
[07:30:03] <Blondie101010> so was I until I wasn't :)
[07:30:31] *** Quits: led_belly (~led_belly@196.240.57.118) (Ping timeout: 256 seconds)
[07:30:31] <Blondie101010> hmm  that's another possibility
[07:30:40] <Blondie101010> we were talking of something simpler
[07:30:42] <__adrian> filename would be a covering index. first n bytes of every column, in order.
[07:30:58] <__adrian> pk first, obvs.
[07:35:02] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:35:17] *** Joins: ash_m (~androirc@user/ash-m/x-3292451)
[07:36:57] <ash_m> Are getters and setters useless if they don't check anything (like type ie `function setThing($thing)`)
[07:37:57] <TML> ash_m: The question seems like a trap - maybe instead of that question, explain what you are trying to do and we can try to suggest a good path forward to achieve that?
[07:42:24] <ash_m> I was just trying to think why people have them in the first place. This old project that uses setters this way, but nothing is typed.
[07:42:40] <ash_m> -that
[07:42:44] <__adrian> there are tons of people that don't know why they're doing various things
[07:43:47] <ash_m> So... Can I deduce that there is no practical reason to have setters in that case?
[07:44:07] <__adrian> it could allow for something useful in the future
[07:44:34] <ash_m> Like if the model changes?
[07:45:09] <Blondie101010> it's a matter of design
[07:45:14] <__adrian> no, like if you have some useless setters BUT all the code uses them, you're set up to make them do something useful
[07:45:26] <Blondie101010> if you must, check the type
[07:45:42] <ash_m> I guess that may have been the reason
[07:45:51] <__adrian> oh, i doubt that was the reason
[07:46:02] <__adrian> the reason is usually that they don't know why they did it
[07:46:23] <ash_m> Thanks
[07:46:27] <Blondie101010> in my case, it's often lazyness
[07:46:33] *** Quits: ash_m (~androirc@user/ash-m/x-3292451) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[07:49:25] *** Quits: luva (~luva@37.120.197.53) (Ping timeout: 240 seconds)
[07:57:19] <Rockwood> bye cya
[07:57:23] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:00:15] *** Joins: luva (~luva@37.120.197.53)
[08:04:19] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[08:05:31] <Nekomander> Good thing I've learned about Full-text search. :)
[08:10:34] <Blondie101010> grep
[08:12:07] * Nekomander runs grep in SQL.
[08:15:47] <Blondie101010> that would make a funny stored procedure
[08:16:14] <Blondie101010> going through the DBs/tables/fields for the string
[08:18:51] <CoJaBo> TML: glob("items/*$query_word*.json"), for one
[08:21:36] <CoJaBo> But mostly, they just glob everything and then iterate thru every single record. And then complain they can't figure out why it's so slow
[08:22:08] *** Joins: \mSg (mSg@user/msg/x-0285936)
[08:48:57] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:01:37] *** Quits: Northwoods (~Northwood@2409:4055:4e80:c18a:7800:f119:52db:209f) (Ping timeout: 240 seconds)
[09:28:48] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[09:29:23] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[09:39:12] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[09:40:16] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:03:38] *** Joins: ReimuHakurei (~Reimu@2607:5600:26d:4:de:ad:be:ef)
[10:11:49] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::5cc4)
[10:35:37] *** Quits: ReimuHakurei (~Reimu@2607:5600:26d:4:de:ad:be:ef) (Ping timeout: 240 seconds)
[10:37:16] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[10:58:13] *** Joins: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it)
[11:12:42] *** Quits: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[11:23:22] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:30:14] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[11:30:39] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[11:31:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[11:36:24] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:38:57] *** Quits: skyroveRR (~skyroveRR@user/skyroverr) (Ping timeout: 240 seconds)
[11:42:13] *** Joins: skyroveRR (~skyroveRR@user/skyroverr)
[11:47:56] *** Joins: PovilasCNC (~PovilasCN@user/PovilasCNC)
[12:01:25] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[12:06:48] *** Quits: Tempesta (~Tempesta@user/tempesta) (Read error: Connection reset by peer)
[12:10:36] *** Joins: Tempesta (Tempesta@user/tempesta)
[12:17:32] *** Joins: stenno (~stenno@user/stenno)
[12:18:15] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:27:51] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e9ca:85ca:3c40:1d47)
[12:46:37] *** Joins: lenarhoyt (~lenarhoyt@mail.bfc-net.de)
[12:57:21] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:58:46] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[13:02:30] *** Quits: judabuda (kowbunga@user/judabuda) (Ping timeout: 268 seconds)
[13:03:26] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[13:04:36] *** Joins: ms49434 (~ms49434@user/ms49434)
[13:16:57] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[13:25:46] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:30:44] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:32:17] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[13:32:42] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[13:34:31] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[13:48:08] *** Joins: biberu\ (~biberu@user/biberu)
[13:48:25] *** Joins: Pixi_ (~Pixi@user/pixi)
[13:48:55] *** Joins: WarpedAI (~Warped@user/warped)
[13:50:02] *** Quits: SilverEagleDev (~SilverEag@azuracast/lead-developer/SilverEagleDev) (Read error: Connection reset by peer)
[13:50:11] *** Joins: SilverEagleDev (~SilverEag@azuracast/lead-developer/SilverEagleDev)
[13:50:17] *** Quits: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com) (Ping timeout: 240 seconds)
[13:50:37] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 240 seconds)
[13:51:17] *** Quits: Phil-Work (~phil@62.3.100.20) (Ping timeout: 240 seconds)
[13:51:17] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[13:51:37] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 240 seconds)
[13:51:38] *** biberu\ is now known as biberu
[13:54:01] *** Quits: lembron (~admin@user/lembron) (Ping timeout: 256 seconds)
[13:59:49] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::5cc4) (Ping timeout: 240 seconds)
[14:01:30] *** Joins: ugga-the-caveman (~ugga-the-@185.66.195.90)
[14:12:24] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[14:19:19] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[14:30:30] *** Quits: ugga-the-caveman (~ugga-the-@185.66.195.90) (Quit: Client closed)
[14:43:32] *** Joins: Bitflux (~byte@byteflux.net)
[14:43:38] *** Quits: Byteflux (~byte@byteflux.net) (Ping timeout: 268 seconds)
[14:46:04] *** Quits: Bitflux (~byte@byteflux.net) (Excess Flood)
[14:48:04] *** Quits: tercaL (~tercaL@user/tercal) (Remote host closed the connection)
[14:50:45] *** Joins: Byteflux (~byte@byteflux.net)
[14:57:17] *** Quits: Byteflux (~byte@byteflux.net) (Ping timeout: 240 seconds)
[14:59:09] *** Joins: Byteflux (~byte@byteflux.net)
[15:05:01] *** Quits: Byteflux (~byte@byteflux.net) (Ping timeout: 240 seconds)
[15:10:38] *** Joins: Byteflux (~byte@byteflux.net)
[15:17:20] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[15:20:17] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 256 seconds)
[15:20:18] *** mIk3_09 is now known as mIk3_08
[15:22:07] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[15:25:51] *** Joins: vlm (~vlm@user/vlm)
[15:33:15] *** Joins: MrBech (~MrBech@152.115.67.90)
[15:34:54] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[15:35:01] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[15:37:54] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::5cc4)
[15:41:37] *** Quits: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.4)
[15:43:01] *** Joins: pmercado (~pmercado@190.22.78.173)
[15:49:28] *** Joins: Furai (~Furai@furai.pl)
[15:52:42] <Jck_true> CoJaBo: And somebody exploits directory traversal
[15:55:25] <stenno> how could you exploit that\x00\x00\x00\/etc/passwd
[15:57:44] *** Quits: MrBech (~MrBech@152.115.67.90) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:57:55] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[16:02:51] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Read error: Connection reset by peer)
[16:03:19] *** Joins: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it)
[16:07:26] *** Joins: oztunan (~oztunan@oztunan.org)
[16:14:50] *** Joins: MrBech (~MrBech@152.115.67.90)
[16:28:34] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[16:30:38] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[16:35:19] *** Joins: MrBlue (~MrBlue@86.106.90.249)
[16:35:30] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[16:35:48] *** Joins: de-facto (~de-facto@user/de-facto)
[16:46:25] *** Quits: lenarhoyt (~lenarhoyt@mail.bfc-net.de) (Quit: Client closed)
[16:47:12] *** Quits: sfields (~sfields@2605:a601:adea:7a00:3f4a:ee11:3db0:1276) (Remote host closed the connection)
[16:47:35] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[16:56:49] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:57:37] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[16:58:01] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[16:58:37] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[17:01:25] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Client Quit)
[17:02:17] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 256 seconds)
[17:02:18] *** mIk3_09 is now known as mIk3_08
[17:08:48] *** Joins: panella32 (~textual@164.215.227.223)
[17:08:52] <panella32> Hi
[17:09:08] <panella32> can u see my messages?
[17:09:17] <Naktibalda> no
[17:09:31] <panella32> good :)
[17:10:18] <panella32> guys how can I unescape this string?
[17:10:19] <panella32> 30\/issmart\/0\/hash_url\/147b954970e728cc95\/hash_urln\/5b6c963e\/afcn\/164281530\/movie.m3u8
[17:10:48] <panella32> it's been extracted from html response
[17:11:00] *** Joins: sfields (~sfields@2605:a601:adea:7a00:e4a8:6d46:2de4:a302)
[17:11:11] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[17:13:02] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[17:13:08] <Naktibalda> !+strip_slashes
[17:13:24] <Naktibalda> panella32: https://www.php.net/strip_slashes
[17:14:09] <panella32> thanks Naktibalda!
[17:14:12] <panella32> Worked just fine!
[17:14:28] <Blondie101010> I'd question how the slashes got added in the first place
[17:14:35] <Blondie101010> that looks like php 5 behaviour
[17:14:46] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Client Quit)
[17:15:03] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[17:15:26] <Naktibalda> PHP4 or older
[17:16:25] <Naktibalda> adding or removing slashes was one of the most frequest issues in the old days. not anymore
[17:16:44] <AllenJB> magic_quotes
[17:17:51] <Blondie101010> that's the word
[17:18:18] <biberu> could be a fragment of e.g. a json string
[17:18:21] <AllenJB> Alternatively: Was it a JS value? (In which case you should use json_decode())
[17:27:35] <panella32> is there any quick way to detect all links inside a string and then putting them into an array?
[17:29:59] *** Joins: freeman_h (~freeman_h@37.120.159.215)
[17:30:24] <freeman_h> hi all, is the a website which teach regex for noobs
[17:30:25] <panella32> links such as https://foo.bar
[17:31:55] *** Joins: tercaL (~tercaL@user/tercal)
[17:32:54] <panella32> (found a solution)
[17:34:34] <biberu> panella32: it sounds like you're parsing something, does it have some sort of format?
[17:36:03] <panella32> actually this treasure did the thing for me. https://stackoverflow.com/questions/23366790/php-find-all-links-in-the-text
[17:36:35] <panella32> I'm actually extracting some urls from a curl resoinse
[17:36:37] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[17:36:44] <panella32> *response
[17:36:56] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[17:38:47] <biberu> panella32: sure, but if that response is e.g. json you won't have to treat it as an arbitrary string
[17:39:41] <panella32> honestly I'm a noob! afaik it's not json fortunately!
[17:40:00] <panella32> echo end($out); // Array
[17:40:07] <biberu> just asking in case someone might be able to suggest something more robust
[17:40:15] <panella32> why not returns the last element?
[17:40:45] <biberu> https://3v4l.org <- make an example
[17:40:53] <Naktibalda> use var_dump() instead of echo for debugging
[17:41:57] <panella32> Naktibalda something like var_dump(end($out))?
[17:43:28] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[17:43:41] <Naktibalda> yes, var_dump($out) too
[17:44:57] <panella32> it's weird I know, but end() brings back whole array rather than the last element!
[17:45:10] <Naktibalda> you have array in array
[17:45:38] <Naktibalda> which is very likely if you used preg_match_all
[17:45:47] <stenno> end() sucks though
[17:46:27] <panella32> $out is based on the answer of https://stackoverflow.com/questions/23366790/php-find-all-links-in-the-text! I think it meant to be an array of links not array of arrays.
[17:47:21] <Naktibalda> which answer?
[17:47:38] <panella32> the chosen answer of the question.
[17:48:10] <freeman_h> ^[0-1]$ will this regex work for number to be only 0 or 1?
[17:48:31] <Naktibalda> panella32: read documentation of preg_match_all
[17:48:44] <stenno> same as ^[01]$
[17:49:07] <Naktibalda> you really shouldn't be using end() with it, just use the index  - $out[0], $out[3], etc
[17:49:22] <stenno> you should probably never use end()
[17:50:14] <Naktibalda> wow, that's the simplest pattern for URL matching I've ever see, so there is only $out[0]
[17:50:26] <panella32> I know but it's kinda dynamic and the last one is the link of the highest resolution. so sometimes it'd be out[3] other times it might be out[4] but always gonna be the last member of the array
[17:50:47] <Naktibalda> [0] contains matches of full pattern, if you used subpatterns, you would get [1], [2] and so on
[17:51:27] <panella32> stenno why not? any equivalent?
[17:51:30] <Naktibalda> $lastLink = end($out[0]);
[17:52:26] <panella32> one more time, you right! Naktibalda
[17:52:57] <panella32> excelente!
[17:52:58] *** Joins: Furai (~Furai@furai.pl)
[17:53:42] <stenno> you could use end for intermediate values
[17:54:20] <panella32> ah got it
[17:54:25] <stenno> the reason to not do it is it will lead to spaghetti unless you are careful, as the function call mutates the passed argument
[17:54:34] <stenno> which is always usually really bad
[17:56:50] <biberu> always usually
[17:56:57] <biberu> :)
[17:58:03] <panella32> stenno I'll keep the distance
[17:58:05] *** Joins: magla (~gelignite@55d4ca9b.access.ecotel.net)
[17:58:26] <stenno> -always
[17:59:20] *** Joins: freeman_h1 (~freeman_h@37.120.159.215)
[18:02:37] *** Quits: freeman_h (~freeman_h@37.120.159.215) (Ping timeout: 240 seconds)
[18:17:59] *** Joins: judabuda (kowbunga@user/judabuda)
[18:20:50] *** Quits: MrBech (~MrBech@152.115.67.90) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:24:17] <panella32> guys could you please help me with preg_replace? Now I need to replace s-12345- with foo/s-12345-
[18:24:23] <panella32> I came up with preg_replace('[s-]+\d+[-]',$prebase , $mystring);
[18:24:31] *** Joins: MrBech (~MrBech@152.115.67.90)
[18:26:18] <panella32> but it's not working. can that pattern be used in php?
[18:26:32] <ms49434> pattern is wrong
[18:26:41] <panella32> [s-]+\d+[-] // anything like s-?????-
[18:26:43] *** Joins: Northwoods (~Northwood@202.14.122.173)
[18:26:55] *** Quits: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[18:27:08] <AllenJB> [ ] is "any of this set of characters". If you explicitly want only "s-" in that order, don't use "[s-]", use "s-"
[18:27:08] <panella32> ms49434 any idea what should it be?
[18:27:32] <panella32> oh great let me try..
[18:27:51] <AllenJB> panella32: It may help us if you can show us a complete example of what you have using a sandbox such as https://3v4l.org/
[18:28:22] *** Quits: hamilton5 (iamfive@user/ham5) (Quit: hamilton5)
[18:29:30] *** Joins: vanessa (~farawayas@103.160.128.7)
[18:30:17] <ms49434> you are most likely searching for something similar to preg_replace('/(s-[\d]+-)/', 'foo/$1', $mystring);
[18:30:40] <vanessa> why does password_verify("pass", password_hash("pass", PASSWORD_DEFAULT)) return true?
[18:30:52] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:31:14] *** Quits: jgrim (~jgrim@d60-65-99-197.col.wideopenwest.com) (Quit: Buh bye!)
[18:31:56] <Naktibalda> vanessa: because same password?
[18:31:59] *** Joins: Rockwood (~Rocky@user/rocky)
[18:32:28] *** Joins: node1 (~node1@user/node1)
[18:33:18] <panella32> AllenJB sorry for delay. I don't know what exactly that is but sure in case I'm not able to describe it well enough then I'll bring it there.
[18:33:47] <panella32> ms49434 you saved me sir! Your code was working finet!
[18:33:53] <panella32> Thank you.
[18:35:01] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (Ping timeout: 240 seconds)
[18:35:08] *** Quits: PovilasCNC (~PovilasCN@user/PovilasCNC) (Read error: Connection reset by peer)
[18:35:19] <vanessa> Naktibalda, but everytime I run password_hash with exactly same string, I get different values.
[18:35:24] <panella32> I think regex is too difficult for newbies like me to understand!
[18:35:29] <vanessa> and where is the salt?
[18:36:00] <relipse> vanessa: that is the correct behavior
[18:36:02] <Naktibalda> vanessa: it is in the result of password_hash
[18:36:15] <relipse> each hash returns different hash
[18:36:25] <relipse> even though can be verified by same password
[18:36:26] *** Joins: jgrim (~jgrim@d60-65-99-197.col.wideopenwest.com)
[18:36:29] <ms49434> from php: If omitted, a random salt will be generated by password_hash() for each password hashed. This is the intended mode of operation.
[18:36:58] <relipse> its so you can never reverse lookup the password from the hash I believe
[18:37:31] <vanessa> so the final has both password and the salt together hash?
[18:38:36] <relipse> otherwise, people who used the same passwords would have the same hash
[18:38:42] <relipse> and that is insecure
[18:39:11] <vanessa> but then how does password_verify know what the salt was?
[18:39:32] <Naktibalda> vanessa: yes, salt, algorithm and parameters are in the result
[18:39:49] <Naktibalda> separated by $
[18:40:16] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[18:40:17] <vanessa> mine always start with `$2y$10$`
[18:41:05] <Naktibalda> 2y is algorith, 10 is cost, the next part should be salt
[18:41:20] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[18:41:47] <Rockwood> __adrian, hi how are you sir?
[18:41:59] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[18:42:13] <vanessa> so, the password_hash and password_verify duo will do all the work securely and I never have to worry about salts and all and don't need to save in the database? right?
[18:42:32] <relipse> vanessa:  you need to save the password_hash() into the database
[18:42:41] <relipse> but yep that's how it works
[18:43:20] <AllenJB> You don't need to persist anything other than the hash password_hash() gives you - it encodes all the information (algorithm, salt, additional options) it needs
[18:44:23] *** Joins: de-facto_ (~de-facto@user/de-facto)
[18:44:28] <vanessa> yeah, only save the result of the password_hash() in my database and no matter how many people have the same password, it will be different in my database but password_verify will still work correctly?
[18:44:37] <relipse> exactly vanessa
[18:44:53] <relipse> that's the beauty of what PHP did when they invented password_hash and password_verify()
[18:45:13] <vanessa> yeah that is like magic!
[18:45:22] <Rockwood> don't forget anything
[18:46:02] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[18:46:29] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[18:46:42] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[18:47:07] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (Ping timeout: 256 seconds)
[18:47:33] *** de-facto_ is now known as de-facto
[18:48:16] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[18:50:14] <vanessa> Thank you, relipse Naktibalda AllenJB
[18:50:30] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[19:00:13] *** Quits: jgrim (~jgrim@d60-65-99-197.col.wideopenwest.com) (*.net *.split)
[19:00:13] *** Quits: MrBech (~MrBech@152.115.67.90) (*.net *.split)
[19:00:13] *** Quits: Furai (~Furai@furai.pl) (*.net *.split)
[19:00:13] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (*.net *.split)
[19:00:13] *** Quits: tercaL (~tercaL@user/tercal) (*.net *.split)
[19:00:13] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (*.net *.split)
[19:00:14] *** Quits: MrBlue (~MrBlue@86.106.90.249) (*.net *.split)
[19:00:14] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (*.net *.split)
[19:00:14] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[19:00:14] *** Quits: WarpedAI (~Warped@user/warped) (*.net *.split)
[19:00:14] *** Quits: Pixi_ (~Pixi@user/pixi) (*.net *.split)
[19:00:14] *** Quits: LucaTM (~LucaTM@user/lucatm) (*.net *.split)
[19:00:14] *** Quits: stenno (~stenno@user/stenno) (*.net *.split)
[19:00:14] *** Quits: luva (~luva@37.120.197.53) (*.net *.split)
[19:00:14] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[19:00:14] *** Quits: molt (~molt@46.33.200.12) (*.net *.split)
[19:00:14] *** Quits: bytestream (~bytestrea@user/bytestream) (*.net *.split)
[19:00:14] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (*.net *.split)
[19:00:14] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (*.net *.split)
[19:00:14] *** Quits: alien_lappy (~alien@user/alien) (*.net *.split)
[19:00:14] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (*.net *.split)
[19:00:15] *** Quits: noord (noord@user/noord) (*.net *.split)
[19:00:15] *** Quits: Taripe (~ePirat@user/epirat) (*.net *.split)
[19:00:15] *** Quits: robotkittenscat (~robotkitt@user/robotkittenscat) (*.net *.split)
[19:00:15] *** Quits: Festivus-Maximus (~thelounge@user/Kilroy) (*.net *.split)
[19:00:15] *** Quits: cosine (~cosine@vpn.mashio.net) (*.net *.split)
[19:00:15] *** Quits: siinus (sns@saabas.kahtlane.info) (*.net *.split)
[19:00:15] *** Quits: glider (~glider@user/glider) (*.net *.split)
[19:00:15] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[19:00:15] *** Quits: refactor_ring (~refactor_@142.93.146.100) (*.net *.split)
[19:00:15] *** Quits: starz (starz@2001:41d0:8:4bd3::1) (*.net *.split)
[19:00:15] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (*.net *.split)
[19:00:15] *** Quits: nate (NBishop@o.apocaleaps.com) (*.net *.split)
[19:00:15] *** Quits: Northwoods (~Northwood@202.14.122.173) (*.net *.split)
[19:00:15] *** Quits: freeman_h1 (~freeman_h@37.120.159.215) (*.net *.split)
[19:00:15] *** Quits: panella32 (~textual@164.215.227.223) (*.net *.split)
[19:00:15] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[19:00:16] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[19:00:16] *** Quits: judabuda (kowbunga@user/judabuda) (*.net *.split)
[19:00:16] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[19:00:16] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (*.net *.split)
[19:00:16] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[19:00:16] *** Quits: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de) (*.net *.split)
[19:00:16] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (*.net *.split)
[19:00:16] *** Quits: bodiccea (~bodiccea@user/bodiccea) (*.net *.split)
[19:00:16] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[19:00:16] *** Quits: Sammitch (~Jerkface@user/sammitch) (*.net *.split)
[19:00:16] *** Quits: void09 (~void@150.230.21.57) (*.net *.split)
[19:00:16] *** Quits: eht (~eht@user/eht) (*.net *.split)
[19:00:16] *** Quits: nortoh (~nortoh@user/nortoh) (*.net *.split)
[19:00:16] *** Quits: Woet (~me@irc.woet.me) (*.net *.split)
[19:00:16] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (*.net *.split)
[19:00:16] *** Quits: zlg_ (~zlg@user/zlg) (*.net *.split)
[19:00:16] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[19:00:16] *** Quits: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa) (*.net *.split)
[19:00:17] *** Quits: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com) (*.net *.split)
[19:00:17] *** Quits: salathe_ (~peter@idle.php.net) (*.net *.split)
[19:00:17] *** Quits: CyberCr33p (~chris@bnc.cretaforce.gr) (*.net *.split)
[19:00:17] *** Quits: c17r_ (~c17r@c17r.com) (*.net *.split)
[19:00:17] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (*.net *.split)
[19:00:17] *** Quits: dmk (~dmk@dmk.sh) (*.net *.split)
[19:00:17] *** Quits: jtreminio (~jtreminio@198.199.111.164) (*.net *.split)
[19:00:17] *** Quits: sabet (~sabet@user/sabet) (*.net *.split)
[19:00:17] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[19:00:17] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (*.net *.split)
[19:00:17] *** Quits: justIrresolute (~justache@user/justache) (*.net *.split)
[19:00:17] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[19:00:17] *** Quits: melchior (melchior@167.172.232.113) (*.net *.split)
[19:00:17] *** Quits: paladox (sid373195@wikimedia/paladox) (*.net *.split)
[19:00:17] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[19:00:17] *** Quits: Janusz (~Janusz@user/janusz) (*.net *.split)
[19:00:17] *** Quits: caffeinatedcode (~caffeine@user/caffeinatedcode) (*.net *.split)
[19:00:17] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[19:00:17] *** Quits: benl90 (benl90@sponsored.by.bnc4you.xyz) (*.net *.split)
[19:00:17] *** Quits: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net) (*.net *.split)
[19:00:18] *** Quits: AciD (~fu@user/acid/x-5205451) (*.net *.split)
[19:00:18] *** Quits: jwpapi (sid502614@id-502614.uxbridge.irccloud.com) (*.net *.split)
[19:00:18] *** Quits: sharpertool (sid80151@id-80151.hampstead.irccloud.com) (*.net *.split)
[19:00:18] *** Quits: DCTWD (~dc@uz.utmappro.com) (*.net *.split)
[19:00:18] *** Quits: nekaii (nekaii@er.alltaf.online) (*.net *.split)
[19:00:18] *** Quits: steve (~steven@li677-71.members.linode.com) (*.net *.split)
[19:00:18] *** Quits: Deltik (~deltik@2001:470:69fc:105::1:5ba3) (*.net *.split)
[19:00:18] *** Quits: kerouac (~kerouac@2001:470:69fc:105::4e36) (*.net *.split)
[19:00:18] *** Quits: regedit (uid150526@id-150526.uxbridge.irccloud.com) (*.net *.split)
[19:00:19] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[19:00:19] *** Quits: beob (beob@user/beob) (*.net *.split)
[19:00:19] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[19:00:19] *** Quits: arieh (~51062cbc@user/jewllama) (*.net *.split)
[19:00:19] *** Quits: Koopz (~Koopz@koopz.rocks) (*.net *.split)
[19:00:20] *** Quits: arash (arash@thinks.life.is-a.beauty) (*.net *.split)
[19:00:20] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (*.net *.split)
[19:00:20] *** Quits: FatBoyXPC (~FatBoyXPC@user/fatboyxpc) (*.net *.split)
[19:00:20] *** Quits: dag (~d@user/dag) (*.net *.split)
[19:00:21] *** Quits: ialokin (znc@user/ialokin) (*.net *.split)
[19:00:21] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (*.net *.split)
[19:00:21] *** Quits: miklcct (~quassel@vps.miklcct.com) (*.net *.split)
[19:00:21] *** Quits: epony (epony@user/epony) (*.net *.split)
[19:00:21] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (*.net *.split)
[19:00:21] *** Quits: joachimo (~joachimo@cloud02.joachimopdenakker.be) (*.net *.split)
[19:00:21] *** Quits: Forza (~Forza@user/forza) (*.net *.split)
[19:00:21] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[19:00:21] *** Quits: gonogo (~gonogo@167.88.62.87) (*.net *.split)
[19:00:21] *** Quits: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle) (*.net *.split)
[19:00:22] *** Quits: stutz (~stutz@user/stutz) (*.net *.split)
[19:00:22] *** Quits: elycin (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com) (*.net *.split)
[19:00:22] *** Quits: ramsey[m] (~ramsey@phpc/ramsey) (*.net *.split)
[19:00:22] *** Quits: hays (rootvegeta@fsf/member/hays) (*.net *.split)
[19:00:22] *** Quits: entropy_ (~ent@user/entropy/x-9891564) (*.net *.split)
[19:00:22] *** Quits: judah (~judah@50.46.45.66) (*.net *.split)
[19:00:23] *** Quits: adsr (~adsr@45.58.35.250) (*.net *.split)
[19:00:23] *** Quits: wolfgangspace (~wolfgangs@2604:a880:800:10::81:b001) (*.net *.split)
[19:00:23] *** Quits: TML (~tml@user/tml) (*.net *.split)
[19:00:23] *** Quits: anomander (~anomander@vps-e9abfd3d.vps.ovh.net) (*.net *.split)
[19:00:23] *** Quits: Teraii (~teraii@juraii-s1-1.teraii.net) (*.net *.split)
[19:00:23] *** Quits: intx (intx@user/intx) (*.net *.split)
[19:00:23] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[19:00:23] *** Quits: omegatron (~some@p5484973e.dip0.t-ipconnect.de) (*.net *.split)
[19:00:23] *** Quits: poseidon_ (~broseidon@users.757.org) (*.net *.split)
[19:00:23] *** Quits: biggie (~biggie@user/bige) (*.net *.split)
[19:00:23] *** Quits: ekl (~ekl@user/ekl) (*.net *.split)
[19:00:23] *** Quits: SleePy (SleePy@simplemachines/siteteam/SleePy) (*.net *.split)
[19:00:23] *** Quits: ramsey (sid508214@phpc/ramsey) (*.net *.split)
[19:00:23] *** Quits: Yorick- (znc@vps.freegamehosting.eu) (*.net *.split)
[19:00:24] *** Quits: ikonia (~irc@user/ikonia) (*.net *.split)
[19:00:24] *** Quits: Cybergeek (~Cybergeek@2a03:b0c0:3:e0::1ab:5001) (*.net *.split)
[19:00:24] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (*.net *.split)
[19:00:24] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[19:00:24] *** Quits: __adrian (~adrian@user/adrian/x-7832151) (*.net *.split)
[19:00:24] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[19:00:24] *** Quits: travisghansen (~travisgha@192.74.130.86) (*.net *.split)
[19:00:25] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (*.net *.split)
[19:00:25] *** Quits: nbin (~nbin@user/nbin) (*.net *.split)
[19:00:25] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[19:00:25] *** Quits: jhave (~jhave@gw.jdh.dk) (*.net *.split)
[19:00:25] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (*.net *.split)
[19:00:26] *** Quits: jdrab (~jdrab@user/jdrab) (*.net *.split)
[19:00:26] *** Quits: Kristine (~quassel@user/kristine) (*.net *.split)
[19:00:26] *** Quits: ringo__ (~ringo@157.230.117.128) (*.net *.split)
[19:00:26] *** Quits: chiptuner (~bobby@user/chiptuner) (*.net *.split)
[19:00:26] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[19:00:26] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[19:00:26] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[19:00:26] *** Quits: percY- (~percY@138.68.239.19) (*.net *.split)
[19:00:26] *** Quits: CapitalistPunk (~Capitalis@liledevil.xs4all.nl) (*.net *.split)
[19:00:26] *** Quits: Robdgreat (~rob@user/robdgreat) (*.net *.split)
[19:00:26] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[19:00:27] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[19:00:27] *** Quits: \mSg (mSg@user/msg/x-0285936) (*.net *.split)
[19:00:27] *** Quits: novns (~novns@user/novns) (*.net *.split)
[19:00:27] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[19:00:27] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[19:00:27] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (*.net *.split)
[19:00:27] *** Quits: michele- (~eraser@user/michele) (*.net *.split)
[19:00:27] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (*.net *.split)
[19:00:27] *** Quits: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net) (*.net *.split)
[19:00:27] *** Quits: simius (~simius@user/simius) (*.net *.split)
[19:00:27] *** Quits: Hash (~Hash@hashsecurity.org) (*.net *.split)
[19:00:27] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[19:00:27] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[19:00:27] *** Quits: AllenJB (~AllenJB@user/allenjb) (*.net *.split)
[19:00:27] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (*.net *.split)
[19:00:27] *** Quits: belak (~belak@user/belak) (*.net *.split)
[19:00:28] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (*.net *.split)
[19:00:28] *** Quits: cybertron (~cybertron@2a03:4000:5:32a:6447:c0ff:fe3a:2af4) (*.net *.split)
[19:00:28] *** Quits: AMG (ghebo@user/amg) (*.net *.split)
[19:00:28] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[19:00:28] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (*.net *.split)
[19:00:28] *** Quits: de-facto (~de-facto@user/de-facto) (*.net *.split)
[19:00:28] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (*.net *.split)
[19:01:12] *** Joins: ChanServ (ChanServ@services.libera.chat)
[19:01:12] *** Joins: jgrim (~jgrim@d60-65-99-197.col.wideopenwest.com)
[19:01:12] *** Joins: MrBech (~MrBech@152.115.67.90)
[19:01:12] *** Joins: Furai (~Furai@furai.pl)
[19:01:12] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:01:12] *** Joins: tercaL (~tercaL@user/tercal)
[19:01:12] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[19:01:12] *** Joins: MrBlue (~MrBlue@86.106.90.249)
[19:01:12] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[19:01:12] *** Joins: Byteflux (~byte@byteflux.net)
[19:01:12] *** Joins: WarpedAI (~Warped@user/warped)
[19:01:12] *** Joins: Pixi_ (~Pixi@user/pixi)
[19:01:12] *** Joins: LucaTM (~LucaTM@user/lucatm)
[19:01:12] *** Joins: stenno (~stenno@user/stenno)
[19:01:12] *** Joins: luva (~luva@37.120.197.53)
[19:01:12] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[19:01:12] *** Joins: molt (~molt@46.33.200.12)
[19:01:12] *** Joins: bytestream (~bytestrea@user/bytestream)
[19:01:12] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[19:01:12] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[19:01:12] *** Joins: alien_lappy (~alien@user/alien)
[19:01:12] *** molybdenum.libera.chat sets mode: +o ChanServ
[19:01:26] *** Joins: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it)
[19:01:47] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:01:58] *** Joins: judah (~judah@50.46.45.66)
[19:01:58] *** Joins: ramsey[m] (~ramsey@phpc/ramsey)
[19:01:58] *** Joins: hays (rootvegeta@fsf/member/hays)
[19:01:58] *** Joins: entropy_ (~ent@user/entropy/x-9891564)
[19:01:58] *** Joins: adsr (~adsr@45.58.35.250)
[19:01:58] *** Joins: wolfgangspace (~wolfgangs@2604:a880:800:10::81:b001)
[19:01:58] *** Joins: intx (intx@user/intx)
[19:01:58] *** Joins: TML (~tml@user/tml)
[19:01:58] *** Joins: anomander (~anomander@vps-e9abfd3d.vps.ovh.net)
[19:01:58] *** Joins: Teraii (~teraii@juraii-s1-1.teraii.net)
[19:01:58] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[19:01:58] *** Joins: omegatron (~some@p5484973e.dip0.t-ipconnect.de)
[19:01:58] *** Joins: poseidon_ (~broseidon@users.757.org)
[19:01:58] *** Joins: biggie (~biggie@user/bige)
[19:01:58] *** Joins: ekl (~ekl@user/ekl)
[19:01:58] *** Joins: SleePy (SleePy@simplemachines/siteteam/SleePy)
[19:01:58] *** Joins: ramsey (sid508214@phpc/ramsey)
[19:01:58] *** Joins: Yorick- (znc@vps.freegamehosting.eu)
[19:01:58] *** Joins: ikonia (~irc@user/ikonia)
[19:01:58] *** Joins: Cybergeek (~Cybergeek@2a03:b0c0:3:e0::1ab:5001)
[19:01:58] *** molybdenum.libera.chat sets mode: +v TML
[19:02:03] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[19:02:03] *** Joins: FatBoyXPC (~FatBoyXPC@user/fatboyxpc)
[19:02:03] *** Joins: dag (~d@user/dag)
[19:02:08] *** Joins: ialokin (znc@user/ialokin)
[19:02:08] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[19:02:08] *** Joins: miklcct (~quassel@vps.miklcct.com)
[19:02:08] *** Joins: epony (epony@user/epony)
[19:02:08] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[19:02:08] *** Joins: joachimo (~joachimo@cloud02.joachimopdenakker.be)
[19:02:08] *** Joins: Forza (~Forza@user/forza)
[19:02:08] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[19:02:08] *** Joins: gonogo (~gonogo@167.88.62.87)
[19:02:08] *** Joins: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle)
[19:02:08] *** Joins: stutz (~stutz@user/stutz)
[19:02:08] *** Joins: elycin (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com)
[19:02:15] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[19:02:15] *** Joins: __adrian (~adrian@user/adrian/x-7832151)
[19:02:15] *** Joins: wolfshappen (~waff@irc.furworks.de)
[19:02:15] *** Joins: pizza (~pizzaiolo@user/pizzaiolo)
[19:02:15] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:02:15] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[19:02:15] *** Joins: jdrab (~jdrab@user/jdrab)
[19:02:15] *** Joins: jhave (~jhave@gw.jdh.dk)
[19:02:15] *** Joins: nbin (~nbin@user/nbin)
[19:02:15] *** Joins: mjsir911 (~bnc@user/mjsir911)
[19:02:15] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[19:02:15] *** Joins: Kristine (~quassel@user/kristine)
[19:02:15] *** Joins: ringo__ (~ringo@157.230.117.128)
[19:02:15] *** Joins: chiptuner (~bobby@user/chiptuner)
[19:02:15] *** Joins: enyc (~enyc@user/enyc)
[19:02:15] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[19:02:15] *** Joins: sebbu (~sebbu@user/sebbu)
[19:02:16] *** Quits: enyc (~enyc@user/enyc) (Max SendQ exceeded)
[19:02:16] *** Quits: wolfshappen (~waff@irc.furworks.de) (Max SendQ exceeded)
[19:02:16] *** Joins: panella32 (~textual@86.57.81.119)
[19:02:21] *** Joins: Deltik (~deltik@2001:470:69fc:105::1:5ba3)
[19:02:21] *** Joins: kerouac (~kerouac@2001:470:69fc:105::4e36)
[19:02:21] *** Joins: regedit (uid150526@id-150526.uxbridge.irccloud.com)
[19:02:21] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[19:02:21] *** Joins: beob (beob@user/beob)
[19:02:21] *** Joins: mgocobachi (~m@ancrae.com)
[19:02:21] *** Joins: arieh (~51062cbc@user/jewllama)
[19:02:21] *** Joins: Koopz (~Koopz@koopz.rocks)
[19:02:21] *** Joins: arash (arash@thinks.life.is-a.beauty)
[19:02:27] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[19:02:27] *** Joins: noord (noord@user/noord)
[19:02:27] *** Joins: Taripe (~ePirat@user/epirat)
[19:02:27] *** Joins: robotkittenscat (~robotkitt@user/robotkittenscat)
[19:02:27] *** Joins: Festivus-Maximus (~thelounge@user/Kilroy)
[19:02:27] *** Joins: cosine (~cosine@vpn.mashio.net)
[19:02:27] *** Joins: siinus (sns@saabas.kahtlane.info)
[19:02:27] *** Joins: glider (~glider@user/glider)
[19:02:27] *** Joins: Exa (exa@irc.moe)
[19:02:27] *** Joins: refactor_ring (~refactor_@142.93.146.100)
[19:02:27] *** Joins: starz (starz@2001:41d0:8:4bd3::1)
[19:02:27] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[19:02:27] *** Joins: nate (NBishop@o.apocaleaps.com)
[19:02:43] *** Joins: de-facto (~de-facto@user/de-facto)
[19:02:43] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[19:02:43] *** Quits: ramsey[m] (~ramsey@phpc/ramsey) (Ping timeout: 250 seconds)
[19:02:45] *** Joins: enyc (~enyc@user/enyc)
[19:02:50] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[19:02:50] *** Joins: justIrresolute (~justache@user/justache)
[19:02:50] *** Joins: foo (~foo@user/foo/x-8763512)
[19:02:50] *** Joins: melchior (melchior@167.172.232.113)
[19:02:50] *** Joins: paladox (sid373195@wikimedia/paladox)
[19:02:50] *** Joins: Artea (~Lufia@artea.com.pt)
[19:02:50] *** Joins: Janusz (~Janusz@user/janusz)
[19:02:50] *** Joins: caffeinatedcode (~caffeine@user/caffeinatedcode)
[19:02:50] *** Joins: Learath2 (~learath2@user/learath2)
[19:02:50] *** Joins: benl90 (benl90@sponsored.by.bnc4you.xyz)
[19:02:50] *** Joins: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net)
[19:02:50] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[19:02:50] *** Joins: AciD (~fu@user/acid/x-5205451)
[19:02:50] *** Joins: steve (~steven@li677-71.members.linode.com)
[19:02:50] *** Joins: sharpertool (sid80151@id-80151.hampstead.irccloud.com)
[19:02:50] *** Joins: DCTWD (~dc@uz.utmappro.com)
[19:02:50] *** Joins: nekaii (nekaii@er.alltaf.online)
[19:02:51] *** Quits: justIrresolute (~justache@user/justache) (Max SendQ exceeded)
[19:02:51] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Ping timeout: 245 seconds)
[19:03:06] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (Ping timeout: 252 seconds)
[19:03:06] *** Joins: \mSg (mSg@user/msg/x-0285936)
[19:03:06] *** Joins: novns (~novns@user/novns)
[19:03:06] *** Joins: percY- (~percY@138.68.239.19)
[19:03:06] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[19:03:06] *** Joins: Robdgreat (~rob@user/robdgreat)
[19:03:06] *** Joins: celphi (sid97751@user/celphi)
[19:03:06] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[19:03:06] *** Joins: tabakhase (tabakhase@user/tabakhase)
[19:03:06] *** Joins: barlas (~aqeel@user/barlas)
[19:03:06] *** Joins: Zauberfisch (~Zauberfis@cm147-42.liwest.at)
[19:03:06] *** Joins: michele- (~eraser@user/michele)
[19:03:06] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[19:03:06] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[19:03:06] *** Joins: simius (~simius@user/simius)
[19:03:06] *** Joins: Hash (~Hash@hashsecurity.org)
[19:03:06] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[19:03:06] *** Joins: Albright (~Albright@149.28.13.173)
[19:03:06] *** Joins: AllenJB (~AllenJB@user/allenjb)
[19:03:06] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[19:03:06] *** Joins: belak (~belak@user/belak)
[19:03:06] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[19:03:06] *** Joins: cybertron (~cybertron@2a03:4000:5:32a:6447:c0ff:fe3a:2af4)
[19:03:06] *** Joins: AMG (ghebo@user/amg)
[19:03:07] *** Quits: \mSg (mSg@user/msg/x-0285936) (Max SendQ exceeded)
[19:03:11] *** Joins: justIrresolute5 (~justache@user/justache)
[19:03:11] *** Quits: tercaL (~tercaL@user/tercal) (Quit: enter the Tekken!)
[19:03:17] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Ping timeout: 268 seconds)
[19:03:18] *** Joins: Northwoods (~Northwood@202.14.122.173)
[19:03:18] *** Joins: judabuda (kowbunga@user/judabuda)
[19:03:18] *** Joins: freeman_h1 (~freeman_h@37.120.159.215)
[19:03:18] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:03:18] *** Joins: vlm (~vlm@user/vlm)
[19:03:18] *** Joins: keypusher (keypusher@user/keypusher)
[19:03:18] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[19:03:18] *** Joins: rb (~augh@theguntretort.com)
[19:03:18] *** Joins: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de)
[19:03:18] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[19:03:18] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[19:03:18] *** Joins: CyberCr33p (~chris@bnc.cretaforce.gr)
[19:03:18] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[19:03:18] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[19:03:18] *** Joins: nortoh (~nortoh@user/nortoh)
[19:03:18] *** Joins: Sammitch (~Jerkface@user/sammitch)
[19:03:18] *** Joins: void09 (~void@150.230.21.57)
[19:03:18] *** Joins: eht (~eht@user/eht)
[19:03:18] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[19:03:18] *** Joins: Woet (~me@irc.woet.me)
[19:03:18] *** Joins: zlg_ (~zlg@user/zlg)
[19:03:18] *** Joins: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa)
[19:03:18] *** Joins: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com)
[19:03:18] *** Joins: salathe_ (~peter@idle.php.net)
[19:03:18] *** Joins: c17r_ (~c17r@c17r.com)
[19:03:18] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[19:03:18] *** Joins: dmk (~dmk@dmk.sh)
[19:03:18] *** Joins: jtreminio (~jtreminio@198.199.111.164)
[19:03:18] *** Joins: sabet (~sabet@user/sabet)
[19:03:18] *** Joins: CoJaBo (~aztec@user/CoJaBo)
[19:03:19] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (Max SendQ exceeded)
[19:03:20] *** AciD is now known as Guest6833
[19:03:22] *** Joins: wolfshappen (~waff@irc.furworks.de)
[19:03:23] *** Joins: \mSg_mini (mSg@user/msg/x-0285936)
[19:03:49] *** Quits: Deltik (~deltik@2001:470:69fc:105::1:5ba3) (Ping timeout: 250 seconds)
[19:03:49] *** Quits: kerouac (~kerouac@2001:470:69fc:105::4e36) (Ping timeout: 250 seconds)
[19:04:04] <panella32> I'm trying to save a php array to a txt file. The array contains URLs and I'd prefer to save each URL in a new line of the txt file. Tried https://stackoverflow.com/questions/13432632/php-array-saved-to-text-file/13432681 but the output still contain some stuff other than URLs.
[19:04:22] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[19:04:58] <Naktibalda> nobody recommends using serialize() for saving to file anymore
[19:05:05] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[19:05:13] <judah> panella32, showing what you tried so far on pastebin or 3v4l might help. If its an array of JUST urls though, you could "file_put_contents(implode(PHP_EOL, $array))" or something
[19:06:49] *** Quits: void09 (~void@150.230.21.57) (Ping timeout: 256 seconds)
[19:07:19] *** Joins: void09 (~void@150.230.21.57)
[19:07:44] <panella32> okay thanks guys I'm going to try something else. Eventually I have to bring it to 3v4l I guess :)
[19:10:37] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::5cc4) (Ping timeout: 240 seconds)
[19:13:18] <panella32> judah great! every single one of you guys is literally a magician! file_put_contents('file.txt',implode(PHP_EOL,$out[0])); did the thing as intended!
[19:13:24] <panella32> Thank you.
[19:13:40] <judah> happy to help :)
[19:13:45] *** Quits: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net) (Ping timeout: 256 seconds)
[19:18:35] <TinoDidriksen> Except, you should always use "\n" instead of PHP_EOL.
[19:21:04] <judah> Why is that? I stick with the constant because it is OS specific. I hate fighting with newlines in the rare occasion I have to use Windows so the constant is easier for me
[19:22:47] <novns> TinoDidriksen, with "\n" without "\r" your teletype will print on the new line but from the same carriage position
[19:22:50] <panella32> on macOS it's fine. Haven't tried \n yet to see the result.
[19:23:27] <novns> "\r" is important to return the carriage to the start
[19:24:48] *** Joins: freeman_h2 (~freeman_h@37.120.159.215)
[19:25:01] <TinoDidriksen> All platforms understand \n just fine. PHP_EOL can cause differences in the output - e.g. files would hash differently. Always using \n means the output is portable - using PHP_EOL means the output is tied to the platform. Imo, PHP_EOL should be deprecated and removed.
[19:25:10] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[19:26:06] <Togra> wouldn't that still be handy if you want the platform specific EOL and don't need a universal one?
[19:26:49] <TinoDidriksen> Only Windows differs, and doesn't even differ these days since even Notepad understands \n now.
[19:26:55] <novns> and "\r" performs the "ding" sound with a bell, it's important too
[19:28:21] *** Quits: freeman_h1 (~freeman_h@37.120.159.215) (Ping timeout: 256 seconds)
[19:29:02] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[19:29:07] *** Joins: freeman_h1 (~freeman_h@37.120.159.215)
[19:31:25] *** Quits: freeman_h2 (~freeman_h@37.120.159.215) (Ping timeout: 240 seconds)
[19:31:27] <panella32> and almost the last question of the series! So far you guys come up with amazing answers so far! Now need a last one!
[19:31:36] <panella32> My small php code is intended to send some HTTP requests, extract ~200 URLs in each try (they are actually segments of a video file). Then Download them, Merge them and finally decrypt the merged one with provided .key file using openssl/ffmpeg.
[19:31:49] <panella32> The problem is that the downloading block has to be quite fast otherwise those links might get expired. Is there any php library or something like that to download 5 segment simoustanly? Youtube-dl?
[19:32:03] <panella32> I really appreciate it.
[19:33:36] <novns> panella32, https://openswoole.com/docs/modules/swoole-coroutine-parallel
[19:34:09] <TinoDidriksen> cURL has built-in multi-downloading.
[19:34:16] <novns> panella32, https://www.php.net/manual/en/book.swoole.php
[19:34:33] <panella32> I'll check them out all!
[19:34:37] <TinoDidriksen> https://www.php.net/curl_multi_init
[19:35:26] <TinoDidriksen> There are also several open source Twitch downloaders you can look at.
[19:36:23] <judah> The curl implementation might be best since its an easier extension to install
[19:36:41] *** Quits: MrBech (~MrBech@152.115.67.90) (Quit: Textual IRC Client: www.textualapp.com)
[19:37:20] <panella32> Thanks. Sure. I hope an easy implementation awaiting me. tbh I had hard time using curl and providing headers! But maybe it's still the easiest compared to others, I'm not sure..
[19:37:24] <judah> TinoDidriksen, those are good points about PHP_EOL, I had not thought about checksum differences
[19:37:28] <stenno> multi-track downloading :o
[19:39:27] *** Joins: kerouac (~kerouac@2001:470:69fc:105::4e36)
[19:40:22] <panella32> stenno May I know which one you prefer at this point?
[19:40:42] <stenno> sorry, i was making a reference to a meme
[19:41:02] <panella32> np
[19:41:03] <panella32> lol
[19:42:30] <Naktibalda> panella32: if you know how to use composer, you could use Guzzle library: https://docs.guzzlephp.org/en/stable/quickstart.html#concurrent-requests
[19:42:57] <judah> Guzzle++
[19:43:58] <stenno> i used guzzle to make non-blocking requests and it was good
[19:46:03] *** Quits: panella32 (~textual@86.57.81.119) (Ping timeout: 256 seconds)
[19:46:41] *** Joins: panella32 (~textual@45.130.83.214)
[19:49:04] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[19:50:43] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[19:50:49] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[19:51:44] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[19:52:05] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Client Quit)
[20:06:43] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:305e:f5b7:70e8:c357)
[20:06:43] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[20:09:18] *** Joins: tccki (~tccki@box.webslate.co.nz)
[20:09:26] *** Joins: bandit_za (~bandit@192.145.145.8)
[20:14:26] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[20:15:03] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[20:16:30] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:17:35] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[20:20:11] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[20:20:21] *** Quits: bandit_za (~bandit@192.145.145.8) (Ping timeout: 245 seconds)
[20:20:43] *** Joins: Rockwood (~Rocky@user/rocky)
[20:21:31] *** Joins: Phil-Work (~phil@62.3.100.20)
[20:28:59] *** Quits: panella32 (~textual@45.130.83.214) (Quit: Textual IRC Client: www.textualapp.com)
[20:30:41] *** Quits: Northwoods (~Northwood@202.14.122.173) (Ping timeout: 256 seconds)
[20:37:29] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[20:38:06] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[20:41:23] *** Joins: panella32 (~textual@45.130.83.214)
[20:41:25] <panella32> can you please tell me how to replace a substring that starts with a "word"?
[20:43:08] <panella32> in each line
[20:43:36] <judah> Maybe this? https://www.php.net/manual/en/function.substr-replace.php
[20:44:24] *** Joins: ham5 (~iamfive@user/ham5)
[20:44:38] *** Joins: bandit_za (~bandit@192.145.145.8)
[20:48:16] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[20:48:36] *** Joins: ramsey[m] (~ramsey@phpc/ramsey)
[20:49:09] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:52:55] *** Quits: bandit_za (~bandit@192.145.145.8) (Ping timeout: 256 seconds)
[20:53:52] <AllenJB> panella32: You'll want to define what you mean by "word". In regexp, \w ("word character") is equivalent to [0-9a-zA-Z_], so a word is, in theory \w+ - but that could also match something that's just a number, or something that's alphanumeric but not a language word.
[20:55:22] <AllenJB> To match the start of a string, use a caret after the first delimiter - so something like: /^\w+/ would match a word at the beginning of the string
[20:57:06] <panella32> great thanks
[20:57:26] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[20:57:27] <panella32> for now used foreach(preg_split("/((\r?\n)|(\r\n?))/", $sndinside) as $line to iterate over the string
[20:57:54] *** Joins: Deltik (~deltik@2001:470:69fc:105::1:5ba3)
[20:57:55] <panella32> and then replace a substring starting with a "word" from each line
[20:58:00] <AllenJB> MDN has a regexp cheatsheet which can be useful: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet (this is specifically for JavaScripts RegExp implementation, but most regexp implementations are based on PCRE - Perl Compatible RegExp - so are very portable)
[20:58:05] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[21:00:54] <panella32> Nice stuff.
[21:05:14] *** Joins: Northwoods (~Northwood@202.14.122.173)
[21:05:23] <da_wunder> I also like this site - https://regex101.com/ - you can easily test your regex and get proper information about that
[21:05:29] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[21:06:06] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[21:11:09] <panella32> https://regexr.com/ also looks good
[21:12:14] <judah> Thats the site that I use. Has a handy cheat sheet.
[21:13:49] <panella32> but personally still deeply confused about regex numerous flavours and implementations.
[21:14:55] <panella32> I think even code editors like notepad++ got their own ones!!
[21:16:49] <panella32> definitely won't help me become a fan of its.
[21:17:42] <judah> Its quick to learn, hard to master, easy to write, and impossible to read. You might never learn to love it, but its good to understand its place
[21:18:14] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[21:19:41] <panella32> yeah good point
[21:26:23] <relipse> I use regexbuddy
[21:26:26] <relipse> paid user for years
[21:26:28] <relipse> love it
[21:30:19] <panella32> it's good to have it as a desktop app
[21:30:54] <panella32> looks nice! https://www.regexbuddy.com/screen.html
[21:31:35] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e9ca:85ca:3c40:1d47) (Remote host closed the connection)
[21:32:04] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e9ca:85ca:3c40:1d47)
[21:36:27] <TML> After I read Jeff Friedl's "Mastering Regular Expressions", I found I didn't need cheat sheets anymore
[21:38:01] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e9ca:85ca:3c40:1d47) (Ping timeout: 268 seconds)
[21:39:23] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 256 seconds)
[21:47:04] *** Quits: panella32 (~textual@45.130.83.214) (Quit: Textual IRC Client: www.textualapp.com)
[21:48:02] *** Quits: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it) (Read error: Connection reset by peer)
[21:49:29] *** Quits: magla (~gelignite@55d4ca9b.access.ecotel.net) (Quit: Stay safe!)
[21:50:28] *** Joins: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it)
[22:00:44] <relipse> I have 10,000 images, i want to send to the printer, how do I do that?
[22:02:18] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:02:37] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:02:52] <AllenJB> "Send to the printer"? Do you mean a printer attached to a computer with a web browser? Or attached to the "server" PHP is running on? Or something else?
[22:03:10] <Sammitch> or the company you contract with to rpint things?
[22:03:36] <relipse> to the windows default printer
[22:03:56] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[22:04:09] <__adrian> from your website?
[22:04:26] <relipse> either from php script directly or some other way
[22:04:35] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[22:04:41] <relipse> i have a php script which generates 10,000 QR codes
[22:04:49] <relipse> i want them all to go to printer
[22:05:03] <__adrian> that doesn't clarify. do you mean, a php script running on your local computer? or a php script on your website?
[22:05:09] <relipse> local computer
[22:06:01] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[22:06:03] <Sammitch> I would rather [graphic example of bodily mutilation] than talk directly to a printer. generate a PDF and then print that.
[22:06:27] <__adrian> looks like there is (was?) a pecl package for that. but the tl;dr is you'll need to learn about how to use windows apis.
[22:06:31] <__adrian> https://www.hashbangcode.com/article/printing-directly-php
[22:07:00] <relipse> i suppose  i could generate one pdf file with all 10,000 images?
[22:07:23] <__adrian> and yeah, generate your PDFs or just store a directory of images and then run a powershell script to print them
[22:07:40] <__adrian> doing windows desktop things with php is silly
[22:08:06] <relipse> they seriously need a AutoHotKey that accepts PHP
[22:08:16] <relipse> but that's a different story altogether
[22:08:29] <__adrian> ...no comment
[22:09:42] <da_wunder> who the hell wants to do windows desktop things with php
[22:10:30] <relipse> raises hand
[22:11:26] <judah> put your hand back down
[22:11:26] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[22:12:04] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[22:12:53] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[22:13:32] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[22:15:32] *** Taripe is now known as ePirat
[22:16:04] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[22:21:26] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e9ca:85ca:3c40:1d47)
[22:23:19] *** Joins: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net)
[22:27:08] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e9ca:85ca:3c40:1d47) (Ping timeout: 252 seconds)
[22:28:15] <TML> relipse: Get some more tools in your toolbox already
[22:29:40] <relipse> what do you mean TML?
[22:31:44] <TML> relipse: I mean anyone who wants to write AutoHotKey in PHP needs to learn some more programming languages other than PHP
[22:33:42] <relipse> ahk is an ugly language if you ask me, would have been better in javascript
[22:34:20] <relipse> i know c++ PHP, a little Java and javascript
[22:35:27] <TML> Regardless of whether you think the language is good or bad, AutoHotKey uses a DSL because no general-purpose programming language would be a very good fit for the kinds of things people do with AutoHotKey
[22:36:08] <TML> you can certainly make an argument that AHK deserves a better DSL than the one they have, but trying to shoe-horn a general-purpose language like PHP or JavaScript into that role seems just insane to me
[22:37:53] <relipse> i'm glad for the freedom for us to have our own opinions :)
[22:38:02] <relipse> freedom is wonderful, isn't it?
[22:40:29] <relipse> is there a website to announce web-design contests anywhere?
[22:41:09] * __adrian shrugs
[22:41:10] <__adrian> probably
[22:42:27] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[22:43:05] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[22:52:30] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[22:52:57] *** Quits: Northwoods (~Northwood@202.14.122.173) (Ping timeout: 240 seconds)
[22:53:07] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[23:07:56] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[23:08:54] <freeman_h1> I am moving a project which is around 15 years old so it was not written in MVC structure. I have spend the last 9 months moving the project slowing so cannot undo anything(so dont ask to undo anything because it would not be possible) The project is been moved to symfony. I just have a small issues at the moment which I cannot think of a suitable approach to resolve it. Due to this project not been my own I cannot share the full code, am sure you
[23:08:54] <freeman_h1> will understand. I am moving a project which is around 15 years old so it was not written in MVC structure. I have spend the last 9 months moving the project slowing so cannot undo anything(so dont ask to undo anything because it would not be possible) The project is been moved to symfony. I just have a small issues at the moment which I cannot think of a suitable approach to resolve it. Due to this project not been my own I cannot share the full
[23:08:55] <freeman_h1> code, am sure you will understand. https://3v4l.org/i59Z1 this is what the old code look like. The entity class had all the business logic inside, etc. However what the guys have decided to do is move all the business logic to the repository class also make it easy to test has this thing connects to many db which has old records etc. in the old code you can do something like $order->loadOrderLines(); I am wondering how do do this now seen
[23:08:59] <freeman_h1> loadOrderLines() method is in the repository class without me having to pass in the Order entity to the loadOrderLines method. Do bare in mind the are similar methods like this and it's used all over the project. If what I am saying does not make sense, do let me know which part is confusing and I will do my best to explain better. Thank you
[23:10:24] <da_wunder> could you make TL;DR version of that
[23:10:32] <biberu> relipse: can you print from the terminal? why ahk?
[23:20:16] *** Joins: Northwoods (~Northwood@202.14.122.173)
[23:24:21] *** Joins: magla (~gelignite@55d4ca9b.access.ecotel.net)
[23:26:16] <relipse> ahk was just an offshoot conversation, it doesn't matter "how" I do it,  I just need to print 10,000 png files to the printer
[23:26:21] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 256 seconds)
[23:29:01] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[23:29:05] <biberu> relipse: powershell?
[23:29:49] <relipse> yeah that might work biberu
[23:30:14] <relipse> I apologize TML, my comment was snarky, Can you please forgive me, and everyone for seeing it?
[23:30:28] <biberu> i think it has a built in cmdlet for printing, never tried it though
[23:34:28] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[23:35:06] *** Joins: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae)
[23:35:53] *** Quits: onichomp (~onichomp@2806:264:4404:80f2:2c6b:f029:9dba:35ae) (Read error: Connection reset by peer)
[23:43:04] *** Joins: Kexoni (~Kexoni@user/kexoni)
[23:47:38] *** Joins: stenno (~stenno@user/stenno)
[23:49:12] <judah> Today I discovered that my company commits clients usernames and passwords and other authentication details straight to the project repositories. I get the feeling that the Magento crowd does not hire the best and brightest
[23:50:35] <Sammitch> devs in general are pretty awful at managing secrets
[23:51:43] <judah> We just had a production server fall over. Why? Because the client changed their bitbucket password
[23:53:07] <Sammitch> there are several levels of things that probably should not be done there, but I'm going to settle for "and that's why you use keys or tokens"
[23:53:17] <Sammitch> and also not bitbucket
[23:54:11] <Sammitch> know that I mean it when I say that I have virtually no respect for the people that make/run gitlab
[23:54:20] <Sammitch> but gitlab is worlds better than bitbucket
[23:54:51] *** Joins: freeman_h2 (~freeman_h@85.255.237.232)
[23:55:16] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[23:56:39] *** Quits: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[23:57:37] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:57:53] <Albright> Sammitch: What's the issue with Gitlab?
[23:57:53] *** Joins: guido (~weechat@host-95-238-19-143.retail.telecomitalia.it)
[23:58:26] *** Quits: freeman_h1 (~freeman_h@37.120.159.215) (Ping timeout: 252 seconds)
