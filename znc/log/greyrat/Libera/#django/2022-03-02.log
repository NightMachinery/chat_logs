[00:04:57] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Ping timeout: 240 seconds)
[00:06:19] *** Joins: Atque (~Atque@user/atque)
[00:11:22] *** Quits: teut (~teut@103.144.92.182) (Quit: Client closed)
[00:20:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:28:33] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:32:03] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[00:49:13] *** Quits: ekathva (~ekathva@2001:999:51:19b8:30eb:aab6:8fa5:4db8) (Remote host closed the connection)
[00:51:31] *** Quits: alexandros_c (~amcollie@108.60.250.241) (Ping timeout: 256 seconds)
[00:58:29] *** Joins: alexandros_c (~amcollie@108.60.250.241)
[00:58:31] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:08:51] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:09:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[01:10:12] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:10:33] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:11:23] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:17:43] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:20:24] *** Joins: rob4227 (~Thunderbi@2.57.168.165)
[01:22:08] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[01:22:27] *** Quits: rob4226 (~Thunderbi@154.6.25.48) (Ping timeout: 256 seconds)
[01:22:27] *** rob4227 is now known as rob4226
[01:38:21] *** Joins: jessrosenfield (~jessrosen@65.200.105.218)
[01:40:46] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:40:56] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:41:22] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[01:41:59] <jessrosenfield> hi there 👋  having trouble with model validation on `clean_fields` because `MyModel().save()` seems to instantiate a `TextField` to '' (even when I use `TextField(null=True, default=None)` whereas `MyModel.objects.create()` seems to instantiate a `TextField` to `NULL` (even when I use `TextField(blank=True)`). any advice?
[01:49:41] <GinFuyou> not sure how this is related to cleaning?
[01:50:04] <GinFuyou> doesn't sound correct though anyway
[01:54:26] <jessrosenfield> it's related to cleaning in that I end up triggering validation errors. But also you're right! I was confusing `ValidationError` messages I was getting w/ `blank=True` with `ValidationError` messages being triggered by `JSONField` values
[01:58:08] <GinFuyou> blank=True is only meaningful for forms and validation. Not sure if it will some how default to "" if null=False
[01:58:34] <GinFuyou> setting explicit not Null default is always welcome
[01:59:37] <jessrosenfield> hmm yeah it seems like TextField operates fine with `TextField(blank=True)` but JSONField requires `JSONField(blank=True, null=True)`
[01:59:47] <jessrosenfield> in order for `clean_fields` to pass
[02:00:01] <jessrosenfield> even after `clean` is run
[02:00:43] <jessrosenfield> oh wait ignore that last piece - might have wrong order of ops in mind. was just looking at https://github.com/django/django/pull/14920/files
[02:18:49] *** Joins: cryocaustik74 (~cryocaust@user/cryocaustik)
[02:18:50] *** Joins: dongcarl2 (~dongcarl@pool-96-232-179-212.nycmny.fios.verizon.net)
[02:18:52] *** Joins: flynn8 (~mcbloch@user/flynn)
[02:19:05] *** Quits: c17r (~c17r@c17r.com) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: kurfen_ (~kurfen@213.152.188.7) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: w0rp (~w0rp@w0rp.com) (Ping timeout: 256 seconds)
[02:19:17] *** Joins: c17r_ (~c17r@c17r.com)
[02:19:30] *** Joins: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589)
[02:19:34] *** Joins: kurfen (~kurfen@213.152.188.7)
[02:20:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: fizzizist (~fizzizist@72.53.248.15) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: dongcarl (~dongcarl@pool-96-232-179-212.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: syberspa1e (~syberspac@xiaoxiao.anvor.at) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 256 seconds)
[02:20:47] *** dongcarl2 is now known as dongcarl
[02:20:47] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 256 seconds)
[02:20:51] *** cryocaustik74 is now known as cryocaustik7
[02:20:51] *** flynn8 is now known as flynn
[02:21:18] *** Joins: cliluw (~cliluw@47.147.77.43)
[02:22:00] *** Joins: fikran (~fikran@user/fikran)
[02:22:09] *** Joins: syberspace (~syberspac@xiaoxiao.anvor.at)
[02:22:59] *** Joins: fizzizist (~fizzizist@72.53.248.15)
[02:33:50] *** Joins: dlam (~dlam@dlam.me)
[02:34:03] <schinckel> jessrosenfield: Sometimes you want ‘{}’ or ‘[]’ as a default on JSONField, depending upon the database and how well it handles queries (and the data you store in there)
[02:34:23] <schinckel> (Rather than null=True)
[02:35:42] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[02:54:03] *** Quits: jessrosenfield (~jessrosen@65.200.105.218) (Quit: Client closed)
[03:02:27] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:05:02] *** Quits: alexandros_c (~amcollie@108.60.250.241) (Remote host closed the connection)
[03:05:39] *** Joins: alexandros_c (~amcollie@108.60.250.241)
[03:09:13] *** Joins: djapo (~archangel@user/djapo)
[03:24:49] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 256 seconds)
[03:27:08] <jim> what's wrong with this dtl html template: https://termbin.com/02fv
[03:27:36] <jim> it keeps saying, line 8, did you register or load the else tag
[03:27:38] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:30:31] <FunkyBob> jim: is that the whole of the template?
[03:30:41] <FunkyBob> and can  ytou please paste more details from the error/traceback?
[03:30:42] <jim> yeah
[03:31:12] <jim> like what do you want to know
[03:31:21] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:31:43] <FunkyBob> what the rest of the error showed
[03:31:44] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:33:34] <jim> I guess I could save it as an html document and just ship it over to you
[03:34:13] <FunkyBob> if it's a django error page, it should have a cut'n'paste mode
[03:34:32] <FunkyBob> oh, bah
[03:34:40] <FunkyBob> the problem is the very first char of the file
[03:34:43] <FunkyBob> you have ( instead lf {
[03:34:48] <FunkyBob> of, not lf
[03:34:54] <jim> it is a django error page
[03:34:56] <FunkyBob> (% if q_exists_p %}
[03:35:03] <jim> oh
[03:35:07] <jim> :)
[03:35:09] <jim> thanks
[03:35:18] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:35:24] <FunkyBob> I was looking everywhere for mis-typed tag start/end
[03:36:50] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:36:58] <jim> works (except there are soime logic issues, I'll fix those
[03:37:42] <jim> appreciate your help (of course, you don't want to see the err page now)
[03:37:54] <FunkyBob> indeed
[03:38:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[03:39:01] <jim> what's this paste mode thing on django error pages about?
[03:40:05] <FunkyBob> when the page contains a traceback, normally it's shown with a lot of extra detail and chevrons to open up panels of details
[03:40:20] <FunkyBob> there's a "switch to cut'n'paste" mode to show it in a more cut'n'paste friendly state for sharing
[03:40:48] <jim> oh I see
[03:41:01] <jim> let me put that error back so I can see it
[03:42:30] <FunkyBob> if you look at t his image, it's there next to the "Traceback" title - https://i.stack.imgur.com/TJE6q.png
[03:50:19] <jim> actually... would you mind looking at the html of the err page, just to see if it's an effective way to show errors?
[03:55:24] <jim> you don't even need to download it... just browse this: https://jam.sessionsnet.org/file-storage/view/libera-pastes/err.html
[03:56:18] <jim> and again, the question is, is that usually enough information, in the general case of all error pages?
[03:56:55] <jim> I looked at it, it renders beautifully, just like the original
[04:03:12] *** Joins: yanchai (~yanchai@222.127.97.162)
[04:04:40] *** Joins: rje (~textual@50.35.241.164)
[04:38:08] *** Joins: x_kuru (~xkuru@user/xkuru)
[04:39:57] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[04:55:06] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: The Lounge - https://thelounge.chat)
[05:10:23] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:11:15] <schinckel> jim: Usually the error page (in DEBUG) will be just about enough to see where the error is (and what is causing it), but sometimes we’ll need to see model and/or view definitions - the debug error page has some context but not always enough.
[05:11:29] <schinckel> ie, it could be the way a specific model field (or form field) is defined that triggers the error.
[05:12:36] <jim> ok, uhderstood. so you'd need that error page, and probably some code
[05:13:17] <schinckel> Yeah. Sometimes the error page is enough, but model code is often very helpful.
[05:14:04] <schinckel> In the context of the one there - you need `{% empty %}`, not `{% else %}` in that situation.
[05:14:56] <schinckel> Ah, wait, no, I mis-read your template
[05:15:20] <schinckel> Can you paste the whole detail template?
[05:15:28] <jim> sure
[05:16:07] <jim> I'll give you views too (working on an issue where things aren't showing up)
[05:16:24] <schinckel> (You can use `{% for … %} … {% empty %} … {% endfor %}`, that’s what I thought you were trying to do: I missed the `if` above)
[05:16:59] <jim> yeah, I'd have to look that one up
[05:18:02] <jim> this is polls/views.py: https://termbin.com/uxgt
[05:19:28] <jim> this is polls/templates/polls/detail.html: https://termbin.com/dz4g
[05:19:33] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:20:25] <jim> thanks for taking a look
[05:21:14] <schinckel> I can’t see any reason why that error would come from that template.
[05:21:56] <jim> (incidently, fixed earlier error, it was a ( but should have been a {, very first byte of file
[05:22:01] <jim> )
[05:22:17] <schinckel> Ahhhh.
[05:22:19] <jim> now, not getting errors, but I get:
[05:22:25] <jim> The question:
[05:22:34] <jim> The choices:
[05:22:40] <jim> and nothign else
[05:22:47] <wez> Add some content in there?
[05:23:08] <jim> right, it should have been there
[05:24:08] <jim> now I got an error
[05:26:02] <jim> I'm gonna try to find it (this should be reasonably easy... right?)
[05:26:02] <wez> That's good! An error will probably tell you what's wrong!
[05:26:23] <wez> depaste it if you want others to assist
[05:26:27] <wez> dpaste*
[05:26:36] <jim> thanks
[05:27:34] <schinckel> I’d go with something like: https://dpaste.org/zhFd
[05:27:34] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:27:51] <schinckel> You can put {{ instance }} in a template and that’s like `str(instance)`.
[05:28:30] <jim> for some reason, that's not working (I think it did work before)
[05:28:32] <schinckel> You could even leave out the `”question”` key in the not-found context, as a missing variable is treated as falsey in the template.
[05:30:00] <schinckel> Catching a Model.DoesNotExist is probably better than wrapping the Http404 stuff in there.
[05:30:36] <schinckel> Especially since from that code it’s really easy to move to a class based view that requires you to write _no_ imperative code, only define the model/template.
[05:31:26] <jim> yeah, I kinda knew something like that was coming :) I put it the other way because I knew I was gonna get the Http404 if the question didn't exist, so I put a try block around it
[05:33:51] <jim> I see what's wrong
[05:35:20] <jim> I don't have list.append() quite figured out :)
[05:37:14] <schinckel> It’s an odd pattern you are using there.
[05:37:25] <schinckel> What exactly are you trying to do with the context building? Why not just use a dict?
[05:40:01] <jim> wanted to make it look neater :)
[05:40:32] *** Quits: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net) (Remote host closed the connection)
[05:40:34] <jim> nedbat says you can build a dict that way
[05:41:03] <schinckel> You _can_, but it’s not always the best way.
[05:41:44] <schinckel> (And you probably want `dict_list.extend([ … ])` rather than append.
[05:42:07] <schinckel> Extend takes an iterable and adds each item, append adds exactly one item to the end - even if that’s iterable.
[05:43:01] <schinckel> And I’m not sure there’s much point in putting anything other than the question in the context (and referencing related objects).
[05:43:41] <jim> bingo, that would save me from having to iterate over the list of pairs I want to append
[05:45:41] <jim> and everything comes back :) thanks, it works now :)
[05:48:30] <jim> (with the get-or-404 thing, I used the shortcut, and then turned around and unshortcutted it:)
[05:55:52] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:11:04] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:12:34] *** Joins: justAstache (~justache@user/justache)
[06:23:14] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[06:34:29] *** Joins: audio (~audio@user/audio)
[06:41:24] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 240 seconds)
[06:42:07] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[06:44:40] <jim> the extend-instead-of-append is a good idea for that... I put the shortcut back
[06:45:04] <jim> now the template is only used if the question does exist
[06:46:36] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 240 seconds)
[06:46:41] <jim> that gets rid of half the code :)
[07:05:33] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[07:06:56] <dodobrain> why am i not able to switch role to one which has a hyphen init?
[07:08:52] <dodobrain> with psql, theres no issue in creating or setting roles with hyphens: SET ROLE org-foo; works fine. if i do it with `from django.db import connection; csr= connection.cursor(); csr.execute("SET ROLE org-foo")`  i get db.utils.ProgrammingError: syntax error at or near "-"
[07:09:09] <dodobrain> schinckel, do you happen to know anything about this? ^^
[07:09:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:10:27] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:46:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:46:07] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:48:35] *** Quits: sreve (~quassel@p549d706d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:48:49] *** Joins: sreve (~quassel@p549d70f6.dip0.t-ipconnect.de)
[07:49:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:50:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:50:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:54:13] <schinckel> dodobrain: https://www.postgresql.org/docs/current/sql-set-role.html suggests it can be an identifier or a string, so you should be able to either double or single quote it.
[07:54:30] <schinckel> Maybe psql does something unusual and that’s why it works?
[07:54:32] <dodobrain> yeah, i wasnt quoting it, that was the problem
[07:57:16] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 272 seconds)
[08:06:02] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[08:13:37] *** Joins: andrewgodwin (sid23792@django/member/andrewgodwin)
[08:24:39] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[08:35:40] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[08:41:39] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[08:41:57] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:46:57] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 256 seconds)
[08:54:53] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Ping timeout: 256 seconds)
[08:55:40] *** Joins: alex_c (~amcollie@108.60.250.222)
[08:58:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:59:12] *** Quits: alexandros_c (~amcollie@108.60.250.241) (Ping timeout: 250 seconds)
[08:59:35] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[09:01:37] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[09:09:55] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:10:20] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:10:36] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:12:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[09:17:44] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[09:27:52] *** Joins: djapo (~archangel@user/djapo)
[09:36:19] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:37:50] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[09:37:58] *** Quits: alex_c (~amcollie@108.60.250.222) (Ping timeout: 272 seconds)
[09:41:14] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:50:27] *** Joins: sandeepk (~sandeepk@223.130.30.23)
[09:51:39] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:52:33] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:57:44] *** Joins: dor (~erg@188.146.36.240.nat.umts.dynamic.t-mobile.pl)
[10:03:56] *** Quits: dor (~erg@188.146.36.240.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 272 seconds)
[10:14:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[10:16:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:18:29] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:23:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:23:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:24:59] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[10:25:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:26:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:27:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:28:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:33:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 240 seconds)
[10:34:12] *** Joins: mrwick (~mrwick@user/mrwick)
[10:37:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:38:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:39:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:41:25] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[10:44:07] *** Joins: slav0nic (slav0nic@python.su)
[10:45:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 272 seconds)
[10:49:02] *** Joins: rje (~textual@65.141.156.170)
[10:56:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:58:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:59:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:01:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:01:08] *** Quits: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Read error: Connection reset by peer)
[11:01:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:01:54] *** Joins: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[11:02:04] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:03:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:03:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:05:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:05:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:07:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:07:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:09:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[11:10:05] *** Joins: djapo (~archangel@user/djapo)
[11:10:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:10:12] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:10:32] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 240 seconds)
[11:12:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:12:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:14:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:14:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:14:33] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:19df:e67f:9bdd:4b58)
[11:16:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:16:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:18:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:18:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:20:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:21:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:23:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:23:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:25:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:25:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:27:16] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:27:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:29:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:29:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:31:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:31:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:33:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:33:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:36:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:36:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:38:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:38:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:40:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:40:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:42:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:42:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:45:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:45:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:46:46] *** Quits: audio (~audio@user/audio) (Ping timeout: 260 seconds)
[11:47:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:47:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:48:28] *** Quits: dkr13 (~dkr13@dkr13.de) (Quit: The Lounge - https://thelounge.chat)
[11:49:06] *** Joins: dkr13 (~dkr13@dkr13.de)
[11:49:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:49:20] *** Joins: audio (~audio@user/audio)
[11:49:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:51:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:51:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:53:16] <pycode1> hello everybody is there a way to include a filter inside ALL the queries i do? i have ~10 models in my application and all of them have a ForeignKey to Account model so when i run query i MUST add the account ID, i would like to add it automatically to manage things like a multi-tenant architecture
[11:53:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:53:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:55:22] <wez> pycode1: You can create a mixin that all of your queries extend
[11:55:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:55:38] <pycode1> wez, are you referring to a custom manager?
[11:55:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:56:04] <pycode1> the account id is coming from URL
[11:56:27] <pycode1> so i have that code (obviously i need to do a check first if it exists and if the permissions are ok)...but then i need to include it for all the others queries
[11:57:16] <wez> pycode1: Yes, a custom manager, or extend the default one,
[11:57:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:57:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:58:02] <pycode1> wez, i wonder how can i read that account id from the URL ....inside this custom manager
[11:58:29] <pycode1> because as i said i have 10 models so basically i have to extend each model
[11:58:31] <wez> You don't
[11:58:36] <pycode1> and i need to pass the account ID somehow
[11:58:45] *** Joins: rob4227 (~Thunderbi@2.57.168.88)
[11:58:55] <pycode1> wez, why not? how can i add a permanet filter for account id ? for all the queries
[11:59:06] *** Quits: rob4226 (~Thunderbi@2.57.168.165) (Ping timeout: 245 seconds)
[11:59:06] *** rob4227 is now known as rob4226
[11:59:09] <wez> Psss to what? what is the URL you are referring to?  A Django route?
[11:59:29] <pycode1> exactly i have a <int:account_id>
[11:59:37] <pycode1> in route
[11:59:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:59:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:59:55] <wez> so pass create a view to handle it
[12:00:02] <wez> s/pass //
[12:00:11] <wez> in the view you take the id then run the query.
[12:01:32] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[12:01:36] <pycode1> for security reasons i asked to myself if there was a method to add it automatically reading it from request... :) because if i forgot to filter by account_id i will expose private data to others... so i am thinking a way to add it automatically
[12:01:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:01:48] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[12:01:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:02:15] <pycode1> if i forgot to add it from a wiew i broke everything
[12:02:56] <wez> If you forget to add it then it won't match your route pattern
[12:03:22] <wez> You would get a 404
[12:03:52] <wez> Unless you have another route that handles the case where an account_id wasn't defined,
[12:03:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:04:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:05:16] <pycode1> no no wait i am not talking about the route, lets suppose a route like: account/12345/deals   all the views are passing 12345 to the manager (somehow)....but if i forgot to pass the account the user will run a query like Deals.objects.all() so he can read data of others users
[12:05:31] <pycode1> understand what i mean wez ? sorry for my english hehe
[12:06:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:06:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:06:42] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[12:08:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:08:23] <wez> if the 12345 is missing then the route won't match so it won't run the view
[12:08:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:08:28] <wez> daniel-k3: wb!
[12:09:35] <pycode1> wez, no missing :)  the account exists on the route so the route match! i mean the second step....the step where i need to pass that ID to the custom manager....if i not pass it "manually" i will run a query like Deals.objects.all() instead of Deals.objects.filter(account=12345).all()
[12:09:49] <pycode1> for that reason i asked if there is a way to directly set the account id
[12:10:00] <pycode1> instead of passing it manually
[12:10:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:10:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:10:38] <wez> pycode1: Not unless you use a view that does that already.
[12:10:55] <pycode1> should i create a mixing that get get_queryset() and add .filter(account=1234) ? i do not know just trying to understand a good method to avoid errors
[12:11:13] <wez> Just code it, or if you are trying to implement rest then use rest library like Django REST Framework, or use GraphQL.
[12:11:14] <pycode1> i would like to do it automatically without remembering that part it can cause problems
[12:11:39] <wez> What are you trying to do?
[12:12:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:12:40] <pycode1> yes i am using REST but the problem is the same... i mean. my goal is to add the account id to all the queries the user makes.... i can add it manually on all the queries...ok, but if i forgot to add it to just one query i can expose private data
[12:12:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:13:28] <pycode1> so the account id is coming from route... the o thought to pass that ID to the manager so i can just call .all() and internally my manager add the .filter() part automatically
[12:13:51] <wez> pycode1: just do it :)
[12:14:04] <wez> Or extend a framework that does it already, like django rest framework
[12:14:40] <wez> pycode1: you don't need to call all(), just call filter(account=account_id)
[12:14:46] <pycode1> yes bu i am asking how to assign that account_id automatically is that possible somehow ? like inscluding the account_id inside the __init__ of the manager.... idk
[12:14:48] <wez> or whatever naming convention you are using
[12:15:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:15:13] <wez> pycode1: You need to have code which does that :)  You can either write the code yourself or extend from a class that does that for you, like DRF
[12:15:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:15:37] <wez> pycode1: https://www.django-rest-framework.org/
[12:15:52] <serafeim> hey friends
[12:16:08] <wez> For example, there are other libraries you can use, I won't google for you :)
[12:16:10] <pycode1> hi serafeim
[12:16:15] <wez> hi serafeim!  How are you?
[12:16:23] <serafeim> fine and you
[12:17:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:17:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:19:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:19:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:22:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:22:12] <pycode1> does anybody know if daniel-k3 likes django? haha
[12:22:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:24:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:24:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:26:23] *** Quits: kostkon__ (~androirc@2a02:587:a10f:c988:4142:80fd:5bce:d437) (Ping timeout: 268 seconds)
[12:26:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:26:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:29:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:29:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:31:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:31:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:33:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:33:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:36:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:36:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:38:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[12:38:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:39:19] <pycode1> hey, when you design an API do you usually prefer urls like  /accounts/{str:account}/projects/{str:project}  or something like projects/?account=<str:account>&project=<str:project>
[12:39:19] <pycode1> ?
[12:39:43] <pycode1> obviously in my case projects are related to the account
[12:40:10] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[12:40:23] <pycode1> i am worried about too long urls because for example i also have    /accounts/<str:account>/projects/<str:project>/profile/<str:profile>
[12:40:28] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[12:40:33] <serafeim> the clean urls is better
[12:40:51] <pycode1> if i do not specify the <code> it obviously means ALL
[12:40:51] <serafeim> use query params when you wantt to add filters etc
[12:40:59] <pycode1> ok
[12:41:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:41:10] <pycode1> so an url like  /accounts/<str:account>/projects/<str:project>/profiles/<str:profile>
[12:41:12] <pycode1> is ok serafeim ?
[12:41:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:41:19] <serafeim> that's what i'd prefer
[12:41:32] <pycode1> ok! thanks
[12:41:34] <serafeim> np
[12:41:34] *** Quits: rje (~textual@65.141.156.170) (Read error: Connection reset by peer)
[12:41:37] *** Quits: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de) (Ping timeout: 240 seconds)
[12:43:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:43:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:45:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:45:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:47:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:47:27] *** Joins: rje (~textual@50.35.241.164)
[12:47:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:49:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:49:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:51:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:52:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:54:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:54:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:56:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:56:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:58:07] <pycode1> serafeim, a context_processor is used to put things for template, right? but is that possible to use things i put inside the context inside the view?
[12:58:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:58:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:58:34] <serafeim> yes a context processor is a function
[12:58:41] <serafeim> so call it and use it
[12:59:02] <pycode1> so it is executed at the begining and then all the info i put there can be read inside the view and tempate
[13:00:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:00:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:01:12] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:01:39] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[13:02:19] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[13:02:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:04:08] <pycode1> serafeim, the doubt is regarding the view
[13:04:16] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:04:18] <pycode1> i mean... i see context_processors are under "TEMPLATES"
[13:04:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:04:28] <pycode1> but...can i use their values from view too ?
[13:05:04] <pycode1> basically i am creating a very basic permissions system so i read the permissions of the user one time put them inside the context....but i also need to read it from the view to create custom queryset
[13:06:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:06:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:08:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:08:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:10:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:10:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:12:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:12:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:14:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:14:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:16:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:16:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:18:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:19:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:20:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:20:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:21:11] *** Joins: kostkon__ (~androirc@2.142.66.94.static.otenet.gr)
[13:22:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:22:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:24:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:24:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:26:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:26:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:28:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:28:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:30:33] <pycode1> serafeim, ?
[13:30:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:30:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:36:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 256 seconds)
[13:39:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:41:16] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:41:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:43:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Write error: Connection reset by peer)
[13:43:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:45:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:45:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:47:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:47:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:50:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:50:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:52:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:52:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:54:27] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:54:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:56:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:56:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:58:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[13:58:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:00:28] <FunkyBob> wow, that daniel-k3 person STILL network flapping?
[14:00:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:00:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:02:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:02:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:02:57] <FunkyBob> MarkusH: apollo13: felixx: any of you awake?
[14:03:28] <felixx> FunkyBob: Hi
[14:04:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:04:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:04:57] <FunkyBob> and chance you can kick daniel-k3 for a little bit?
[14:05:04] <Lartza> A little ban is likely what they wanted ;) $a:daniel-k$##fix_your_connection wouldn't be bad
[14:05:05] <FunkyBob> they've been flapping in and out for a couple of days now
[14:05:14] <Lartza> #tooslow
[14:05:27] <wez> pycode1: I prefer one URL, /graphql :)
[14:05:30] <FunkyBob> I find a short ban, long enough to persuade their auto-rejoin to not... is sufficient
[14:05:52] <FunkyBob> (it's how I handled this on the old network)
[14:06:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:06:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:06:57] <FunkyBob> see?
[14:07:05] <FunkyBob> give it 2 to 3 minutes, they'll do it again
[14:08:04] <felixx> FunkyBob: OK, let me find an appropriate command :)
[14:08:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:08:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:08:59] <FunkyBob> felixx: cheers :)
[14:11:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:11:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:13:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:13:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:15:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:15:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:17:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:17:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:19:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:19:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:21:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:21:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:22:51] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:23:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:23:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:25:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:25:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:26:59] *** Joins: imakestuff (~imakestuf@197.156.107.131)
[14:27:02] <imakestuff> Hello!
[14:27:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:27:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:28:02] <imakestuff> Has anyone used Graphene to create graphql endpoints? I have read the performance is not great at one point. Is it a viable tool to create graphql implementation? thanks
[14:29:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:29:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:29:20] <wez> wb daniel-k3!
[14:29:31] <wez> imakestuff: I have
[14:30:23] <wez> The performance depends on how you implement it :)  If you have a lot of nested nodes and don't use a proper data loader then you are going to may a lot of redundant queries
[14:30:51] <wez> may = make
[14:31:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:31:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:33:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:33:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:35:19] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:35:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:37:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:37:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:40:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:40:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:42:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:42:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:44:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:44:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:46:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:46:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:48:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:49:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:50:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:51:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:52:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:53:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:57:18] *** Quits: enkrypt (~enkrypt@user/enkrypt) (Quit: WeeChat 3.0)
[14:58:36] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 240 seconds)
[14:59:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:00:36] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:19df:e67f:9bdd:4b58) (Ping timeout: 250 seconds)
[15:00:43] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Read error: Connection reset by peer)
[15:01:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:01:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:01:52] *** ChanServ sets mode: +o apollo13
[15:01:57] *** daniel-k3 was kicked by apollo13 (daniel-k3)
[15:03:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:05:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:05:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:07:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:08:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:10:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:10:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:10:43] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[15:10:58] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[15:15:44] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:15:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:16:44] *** Joins: mattil (~mattil@87-92-22-248.bb.dnainternet.fi)
[15:16:44] *** Quits: mattil (~mattil@87-92-22-248.bb.dnainternet.fi) (Read error: Connection reset by peer)
[15:17:44] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:17:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:19:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:20:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:20:34] *** Joins: ekathva (~ekathva@2001:999:51:19b8:865d:874e:7a83:9797)
[15:22:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:22:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:24:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:24:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:26:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:26:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:26:30] <FunkyBob> apollo13: IME you have to ban, kick, wait a minute, then un-ban... otherwise the client with auto-rejoin
[15:27:26] <apollo13> yeah
[15:27:44] *** Joins: Atque (~Atque@user/atque)
[15:28:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:28:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:28:35] *** apollo13 sets mode: +b $a:daniel-k$##fix_your_connection
[15:30:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:31:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[15:31:27] *** apollo13 sets mode: -b $a:daniel-k$##fix_your_connection
[15:31:59] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:32:14] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[15:32:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:32:37] <imakestuff> wez: thanks, but other than the latency incurred by the queries, does the library have a significant overhead itself?
[15:34:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:34:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:35:27] <wez> I haven't benchmarked it or compared it against other libraries. It runs nicely and has a nice easy interface to work with.  If you are worried about performance then don't use the Django ORM, use a raw SQL connection :)
[15:35:34] <wez> daniel-k3: wb
[15:36:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Write error: Connection reset by peer)
[15:36:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:37:08] <imakestuff> wez: thanks
[15:37:48] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:38:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:38:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:40:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:41:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:42:57] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:42:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:43:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:45:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:45:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:45:36] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[15:47:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:47:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:49:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:49:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:51:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:51:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:53:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:53:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:55:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:56:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:57:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:58:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:00:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:00:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:04:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:05:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:06:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:07:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:09:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:09:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:11:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:11:23] *** Quits: sandeepk (~sandeepk@223.130.30.23) (Quit: Leaving)
[16:11:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:13:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[16:13:41] *** Quits: pidroid (~pidroid@user/pidroid) (Quit: Ping timeout (120 seconds))
[16:13:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:13:59] *** Joins: pidroid (~pidroid@user/pidroid)
[16:15:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:16:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:17:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:18:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:18:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:20:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:20:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:21:51] <jim> I'm looking at one of these tutorials, and they're bringing up {% url %} and namespacing
[16:22:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:22:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:23:40] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:23:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[16:24:29] <jim> they're saying, in the urls.py of an app, add a variable called app_name and set it equal to the app name (right now we're doing an app called polls, so I guess that's saying "in polls/urls.py, add var app_name = "polls"
[16:24:43] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:25:14] <jim> one thing, anything special about the name 'app_name'?
[16:25:20] <wez> 15
[16:27:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:27:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:29:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:29:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:31:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[16:31:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:34:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:34:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:36:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:36:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:37:20] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[16:38:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:38:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:40:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:40:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:42:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:42:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:44:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:45:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:47:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:47:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:51:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:52:01] *** apollo13 sets mode: +b $a:daniel-k$##fix_your_connection
[17:00:02] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[17:08:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[17:25:34] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:26:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:29:59] *** Joins: alex_c (~amcollie@108.60.250.222)
[17:34:01] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:4dc7:1c37:449f:b2a5)
[17:53:43] *** Quits: imakestuff (~imakestuf@197.156.107.131) (Remote host closed the connection)
[17:54:14] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[17:55:43] *** Joins: justAstache (~justache@user/justache)
[17:57:29] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[18:33:10] *** Joins: simplicity (~yti@user/simplicity)
[18:38:15] *** Joins: pro_z_ (~pro_z@37.214.78.161)
[18:45:58] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[19:21:00] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[19:38:03] *** Quits: kostkon__ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 256 seconds)
[19:47:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:51:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:51:50] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:52:20] *** Joins: thiras (~thiras@user/thiras)
[20:06:27] *** Joins: kostkon__ (~androirc@2a02:587:a10f:c988:4142:80fd:5bce:d437)
[20:21:24] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Ping timeout: 240 seconds)
[20:24:04] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:28:34] *** Joins: BLAHHHHHHH (~BLAHHHHHH@136.58.104.247)
[20:29:47] <BLAHHHHHHH> hello everyone, I had a question regarding `django.core.cache.backends.locmem.LocMemCache`, I can't use this if I have two instances running my django application or else caching will return inconsistent results right?
[20:30:39] <GinFuyou> iirc, yes, but I never really used it
[20:31:13] <GinFuyou> well, it's not like you can't use it if I understand that correctly, you just have to account for it
[20:37:08] <BLAHHHHHHH> Right, cause right now I'm using LocMemCache across two instances (separate machines), so just wanted to be 100% this is the reason I keep getting different results when making multiple successive queries (wasn't sure if there was some sort of way django might be synchronizing or "accounting" for it as you allude to as far as I can tell I'm not)
[20:38:41] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Ping timeout: 256 seconds)
[20:38:57] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[20:41:48] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:45:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[21:00:04] *** Joins: lucascastro (~lucascast@177-185-131-162.corp.isotelco.net.br)
[21:07:25] *** Quits: kurfen (~kurfen@213.152.188.7) (Quit: ZNC 1.8.2 - https://znc.in)
[21:07:40] *** Quits: ops (~ops@user/echelon) (Ping timeout: 272 seconds)
[21:08:12] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[21:08:46] *** Joins: kurfen (~kurfen@213.152.188.7)
[21:09:11] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:09:22] *** Joins: ops (~ops@user/echelon)
[21:10:33] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[21:42:19] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[21:51:22] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[21:52:40] *** Joins: splinter (~splinter@host-109-89-216-249.dynamic.voo.be)
[21:52:49] <splinter> Hi
[21:53:25] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 240 seconds)
[21:54:20] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 268 seconds)
[22:00:46] <splinter> I got a specific question related to i18n and makemessages/compilemessages, basically i got a django.po and a django.js file and i would like to add another po file (created with vue3-gettext) to these two files. My goal is to add it to the JS catalog and see it in rosetta. For now i'm just msgcat my third po file into the djangojs. Is this a good place to ask this ? Thanks <3
[22:03:45] <jim> what does it mean, "to perform url reversing"?
[22:07:12] <splinter> @jim do you mean this ? : https://docs.djangoproject.com/en/4.0/ref/urlresolvers/
[22:08:03] <jim> I'm looking at one of these tutorials, and they're bringing up {% url %} and namespacing
[22:08:07] <jim> they're saying, in the urls.py of an app, add a variable called app_name and set it equal to the app name (right now we're doing an app called polls, so I guess that's saying "in polls/urls.py, add var app_name = "polls"
[22:09:03] <jim> and I guess that's all part of namespacing the url to a particular app
[22:11:53] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[22:13:27] <jim> so I'm trying to figure out how urls work, and how they're specified.
[22:13:30] <splinter> I guess so, i'm only using the 'name' kwarg and put prefix manually, then in template call {% url 'my_name_with_prefix'%}
[22:14:52] <splinter> Just came here 10min ago to ask a question myself, but everybody seems asleep
[22:15:56] <jim> yeah, I don't know how the i18n stuff works
[22:16:27] *** Joins: rje (~textual@65.141.156.170)
[22:27:39] *** Quits: BLAHHHHHHH (~BLAHHHHHH@136.58.104.247) (Quit: Client closed)
[22:33:40] *** kostkon_ is now known as kostkon
[22:36:34] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[22:36:39] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[22:36:59] *** Joins: thiras (~thiras@user/thiras)
[22:38:00] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[22:38:27] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[22:38:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:39:30] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[22:39:52] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[22:40:24] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:42:33] *** Quits: pro_z_ (~pro_z@37.214.78.161) (Ping timeout: 256 seconds)
[22:44:39] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:45:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:45:14] *** Joins: xkuru (~xkuru@user/xkuru)
[22:50:29] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:4dc7:1c37:449f:b2a5) (Ping timeout: 256 seconds)
[22:51:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[22:53:31] *** Joins: thiras (~thiras@user/thiras)
[22:54:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:59:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:08:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:20:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:21:50] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Quit: pyrrhus)
[23:26:57] <splinter> FYI i ended up making a bash script to automatically merge external .po file with djangojs that i call between makemessages and compilemessages, that way translation shows up in rosetta, i guess i could add this as a manage command but works fine for now
[23:51:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[23:53:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
