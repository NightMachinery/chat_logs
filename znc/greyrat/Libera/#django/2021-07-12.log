[00:05:48] <bparker> ...apparently I had to use both... Form(mydict, initial=mydict) seems to work ><
[00:05:58] <bparker> double wtf
[00:39:56] *** Quits: mxp (~mxp@138.199.47.179) (Ping timeout: 252 seconds)
[00:41:46] *** Joins: mxp (~mxp@82.98.30.69)
[01:07:49] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[01:10:16] *** Joins: rje (~rje@50.54.137.153)
[01:37:08] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[01:37:33] *** Joins: xkuru (~xkuru@user/xkuru)
[01:42:52] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[02:04:58] *** Quits: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 258 seconds)
[02:10:07] *** Joins: rje (~rje@50.54.137.153)
[02:11:40] *** Quits: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com) (Remote host closed the connection)
[02:14:40] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[02:16:13] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[02:16:44] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:3198:cc9a:19ef:da73)
[02:17:50] *** Joins: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com)
[02:18:25] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:3198:cc9a:19ef:da73) (Client Quit)
[02:22:13] *** Quits: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com) (Ping timeout: 258 seconds)
[02:34:06] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[02:36:26] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[02:45:28] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 246 seconds)
[02:45:59] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[03:00:31] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 246 seconds)
[03:02:15] *** Joins: thiras (~thiras@user/thiras)
[03:13:56] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[03:17:33] *** Joins: rje (~rje@50.54.137.153)
[03:23:23] *** Joins: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28)
[03:24:24] <mekhami> does using async views/asgi inherently allow you to process more requests concurrently, all else being equal? what are the factors that i need to think about here
[03:25:54] <mekhami> i have this monolithic service that handles just way too much stuff. under uwsgi, i'm able to process some number of requests concurrently (what is that number, how do i even know what that is?) with asgi, i should theoretically be able to handle some number in the hundreds/thousands of concurrent requests on the event loop, no?
[03:26:07] <mekhami> assuming my views aren't 100% I/O
[03:26:32] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[03:32:10] *** Joins: serghei (~egrep@user/serghei)
[03:35:37] <FunkyBob> mekhami: i've found some peculiar scaling limits with async... but in theory, yes, it will scale until your CPU pegs 100%
[03:35:45] <FunkyBob> one asgi thread per core
[03:36:31] <FunkyBob> does uwsgi support asgi yet?
[03:38:19] <mekhami> if my mental model is correct; if i make as many of my views that do NOT do much I/O async, that's how i have a larger impact on how i scale things up, as far as concurrency goes? or is it the other way around, should i async-ify my I/O bound views
[03:38:30] <FunkyBob> no
[03:38:38] <FunkyBob> it's IO that allows async to work
[03:38:53] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[03:38:55] <FunkyBob> oh, re reading.. .yeah
[03:39:10] <FunkyBob> non-blocking views will not benefit from async
[03:40:03] <mekhami> okay so.. i need to async my I/O bound views to free up the event loop for the not-I/O-bound views?
[03:40:05] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 268 seconds)
[03:40:06] <schinckel> Yeah, the more I/O wait, the more async can benefit.
[03:42:39] <mekhami> if the system is more CPU bound than I/O bound, then async doesn't help as much?
[03:42:45] <FunkyBob> not as much, no
[03:43:15] *** Quits: n00bn00b (~N00b@79.184.110.70.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[03:49:39] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[03:53:56] <mekhami> and to be clear, using async only helps if the I/O you're doing has an async-capable adapter? idk if that sentence makes any sense
[03:54:05] <mekhami> but things like the ORM are not async-capable, so that would still be blocking?
[03:54:19] <mekhami> and so you need to have async-capable I/O libraries or whatnot in order to benefit from the event loop
[03:54:53] <FunkyBob> mekhami: yes, the IO must be done async-friendly
[04:00:15] <mekhami> async orm when @.@
[04:03:25] <schinckel> bparker: What does your Form class look like?
[04:20:04] *** Joins: chiz (~alkjkljkl@cpe-184-153-212-20.twcny.res.rr.com)
[04:25:40] <chiz> Dropped this in the aws channel, but will try here as well.  Hey All, I'm running django on docker and with the deprecation of amazon linux, I've moved to amazon linux 2. The problem is when I update from platform version 3.1.2 to Docker running on 64bit Amazon Linux 2/3.4.2  I'm getting a 502 gateway error, the log file is showing a 502 on load balancer but the - on target.  I'm able to curl the website via localost. I'm at a loss fo
[04:25:41] <chiz> r where to look next
[04:40:50] <tm007> mekhami: tortoise orm?
[04:41:31] *** Joins: rje (~rje@50.54.137.153)
[04:42:07] *** Quits: rje (~rje@50.54.137.153) (Client Quit)
[04:42:36] *** Joins: rje (~rje@50.54.137.153)
[04:42:54] *** Quits: rje (~rje@50.54.137.153) (Read error: Connection reset by peer)
[04:43:38] *** Joins: rje (~rje@50.54.137.153)
[04:46:07] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[05:03:24] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:09:10] <FunkyBob> chiz: hard to know without knowing how any of that is configured
[05:09:32] <FunkyBob> chiz: sounds like however you've told  your web server to talk to your app server isn't working... however your networking is configured
[05:10:31] <chiz> I'm working on trying to figure out how to get gunicorn to actually log, I can't find any log files
[05:16:27] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[05:17:37] <schinckel> Think I've found a bug in some Django code. Unfortunately, it was code that I wrote... :(
[05:18:34] <schinckel> Subquery(queryset.annotate(x=ExpressionWrapper(...OuterRef()))) does not appear to work as expected.
[05:18:40] <schinckel> Wonder if that's fixed in > 2.2
[05:19:28] <PaulWay[w]> schinckel: still, plus side: found a bug :-)
[05:21:55] <schinckel> Okay, hopefully it is https://code.djangoproject.com/ticket/29545
[05:22:10] <schinckel> ...although I don't have nested subquery/outerref.
[05:26:02] <schinckel> I'm hoping https://github.com/django/django/commit/8b4a43dda702fe72c254388f1be2c0c75b7a3efc fixes it, but I think there are a bunch of things that changed before that patch from 2.2
[05:29:11] <schinckel> Hmm. May have to just use my workaround of using RawSQL :(
[05:33:32] <tm007> WHO WROTE THAT CODE! Oh! It was me!
[05:36:34] <bparker> schinckel: it's a ModelForm with some fields overridden... apparently all the overridden fields must be specified in initial= instead
[05:36:45] <bparker> so that's why I had to use both
[05:37:50] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 272 seconds)
[05:37:51] <schinckel> bparker: Is that documented somewhere? It's somewhat surprising from a user perspective (although not completely, once you have spent a lot of time on django internals).
[05:37:57] <bparker> I doubt it
[05:38:25] <bparker> the data= variable isn't documented either
[05:38:50] <bparker> and instance= doesn't say whether or not it accepts an unsaved instance, which would be helpful (although not so much in this case)
[05:39:32] <bparker> chiz: why would the host distro matter? if your docker containers themselves haven't been upgraded and they're the ones doing all the work...
[05:39:50] <bparker> or are you mixing some host functions (like a webserver) with only python running in a container?
[05:40:14] <GinF> bparker, I would presume state of instance doesn't matter
[05:40:15] <bparker> that would probably be not the best idea
[05:41:53] <schinckel> It's not uncommon to have an unsaved instance passed to a form. I do it all of the time on CreateView to get non-editable values on the object. (Actually, I use an UpdateView with an overridden get_object)
[05:42:22] <schinckel> But I think that overridding a field should not prevent it from getting that value from the instance - in fact I'm pretty sure I do that a bunch.
[05:42:41] <schinckel> For instance, I use an overridden field to turn a DurationField into a DecimalHoursField, or IntegerMinutesField (both my constructs).
[05:43:01] <schinckel> Pretty sure that works - unless maybe it's my custom field subclass doing some extra stuff...
[05:44:33] <chiz> bparker,  Not doing anything special that I know about.  This works fine on amazon linux up to the latest version, and on amazon linux up to 3.1.2 .  But as soon as you try and update platform version to latest it barfs with the gateway error and I'm clueless as to how I can see what the beanstalk app is serving up to cause the 502. I don't quite understand where to find the logs of the access request or how to get them working. Going
[05:44:34] <chiz>  to try some cloudwatch tutorial here in a sec.  This is how my app starts in the dockerfile https://dpaste.org/MOrd
[05:45:55] <bparker> need a lot more information
[05:46:03] <bparker> like where is your webserver and how is it configured
[05:46:08] <bparker> is it also docker ?
[05:46:29] <tm007> chiz: you're on which version of Python?
[05:46:38] <bparker> and have you tried runserver
[05:46:53] <bparker> and is gunicorn even starting
[05:46:57] <bparker> and listening
[05:47:27] <tm007> Think it's on Elastic Beanstalk
[05:47:37] <bparker> no idea what that is
[05:48:08] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[05:48:38] <bparker> schinckel: I don't know if instance= reads overridden values, but it seems just Form(foo) (or with data=foo) does not
[05:49:17] <schinckel> Oh, it's not going to get anything from the instance if you don't pass it one! /facepalm
[05:51:42] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[05:52:52] <bparker> no I get that, that wasn't my concern
[05:53:06] <schinckel> Ah, I misinterpreted you then ;)
[05:53:20] <bparker> if you're constructing a form from POST fields for example
[05:53:26] <bparker> and you have some redeclared fields
[05:53:39] *** Joins: rje (~rje@50.54.137.153)
[05:53:40] <bparker> then just Form(request.POST) doesn't appear to fill those
[05:53:51] <bparker> unless I also add initial=request.POST
[05:54:02] <bparker> I have not messed with instance= *and* redeclared fields
[05:54:25] <schinckel> You don't want to pass the data to initial too - that might mean something thinks nothing has changed (because data===initial)
[05:54:51] <bparker> well, it's the only thing that seems to work
[05:54:59] <wallbroken> oh, we are champions
[05:55:00] <bparker> and I tried for hours to find another solution
[05:55:08] <PaulWay[w]> wallbroken: heh :-)
[05:55:14] <PaulWay[w]> Good win for Italy there :-)
[05:55:51] <bparker> schinckel: in my case I'm not using this approach to edit anything, only to save new data
[05:55:58] <bparker> so I think it's ok
[05:56:32] <bparker> but if you come up with a better solution I'm all ears
[05:58:19] <chiz> Yes it's on elasticbeanstalk, python 3.7stretch.I can see it running on the server and when I do a basic curl localhost:5000 I get stuff, back.  Here is a paste of when I grep for gunicorn in processes and the beginning of the curl return when I curl localhost:5000 https://dpaste.org/Zmuy
[06:12:52] <bparker> yea there's nothing there really that would help
[06:13:00] <bparker> try to get the gunicorn and/or webserver logs
[06:16:46] <chiz> yah That's what I'm tryin to figure out, looks like I can get them possibly  through a cloudwatch stream, just enabled it
[06:19:15] <mekhami> bparker: using initial is only for when you want to edit data or provide a default initial state.
[06:19:30] <mekhami> bparker: can you reshare your codE? it was pasted before i got here
[06:19:55] *** Joins: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com)
[06:20:08] <bparker> 19:29 < bparker> form = Form({'foo': 1})  if not form.is_valid(): print(form.errors) -> 'foo': This field is required ...... wtf????
[06:20:18] <bparker> that was all I pasted really
[06:20:37] <mekhami> a dict is not the same as request.POST
[06:20:49] <bparker> the form itself is a ModelForm with all the 'this field is required' complaints coming from redefined fields in my subclass of ModelForm
[06:21:25] <mekhami> i've had some strange edge cases around trying to use a dictionary for a form arg
[06:21:34] <mekhami> i don't remember the specifics, it was many months gao
[06:21:41] <bparker> yea I'm not sure why it matters
[06:21:59] <bparker> but I understand the POST data is some other class
[06:22:58] <GinF> hm, bparker what if you do Form({'foo': [1]}) ?
[06:23:14] *** GinF is now known as GinFuyou
[06:23:21] <mekhami> GinFuyou: that was the thing! the values had to be lists.
[06:23:32] <mekhami> which is weird cause the docs don't demonstrate that behaviour
[06:23:40] <mekhami> https://docs.djangoproject.com/en/3.2/ref/forms/api/#using-forms-to-validate-data
[06:25:10] <GinFuyou> I just remembered POST\GET is a multivaluedict object
[06:25:39] <GinFuyou> though, yeah it looks inconsistent
[06:27:12] *** Quits: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28) (Quit: WeeChat 1.9.1)
[06:29:23] <chiz> blah, the cloudwatch stream is unhelpful as well so far. I looked through the release notes and dont see anything they changed that would make the 502 error just appear out of nowhere, I may have to just get a basic django app working on this platform version and work back from there.
[06:29:46] *** Quits: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com) (Ping timeout: 272 seconds)
[06:29:52] <bparker> anyone use caching in django successfully? I'm trying to figure out what's the easiest way to speed up at least just a few of my views that are slow to load but only need updating when the tables they select from have been modified, is there a straightforward way to implement something like that with database-level invalidation instead of just @cache_page(seconds) since that will give either stale data or
[06:29:58] <bparker> not cache long enough ?
[06:30:01] *** Joins: dre (~dre@2001:8003:c932:c301:ca88:a637:7a5c:d23c)
[06:31:47] *** Quits: dre (~dre@2001:8003:c932:c301:ca88:a637:7a5c:d23c) (Client Quit)
[06:33:01] <chiz> should nginx show up in the process log? I'm assuming it should and I don't see that.
[06:35:27] <chiz> nvm it's there
[06:35:41] <GinFuyou> there is `django.views.decorators.http condition` for client side caching, could probably repurpose for server-side onw
[06:35:56] <bparker> yea I'm referring to server-side
[06:36:06] <bparker> I enabled memcached in the CACHES setting but that alone doesn't seem to do anything
[06:36:37] <GinFuyou> certainly it won't
[06:36:44] <chiz> So if aws says that docker default binds port 5000 to port 80, but when I curl localhost:5000 I get my app stuff, but when I curl localhost:80 i get the nginx default html back, hrm
[06:37:18] <bparker> basically I just want my database queries cached until the tables they read from are modified, and then the cache should be invalidated
[06:37:50] <bparker> that way loading admin change_lists and such don't take 30 seconds every time, especially when inserts are rare
[06:38:55] <GinFuyou> do you have FK selects in those change lists? I don't think there are many other reasons for them to take so long
[06:39:02] <bparker> yea
[06:39:26] <GinFuyou> use autocomplete\raw inputs instead?
[06:39:43] <bparker> in older django versions I was able to speed up the change lists dramatically by inserting 'USE INDEX' into the query, but my patch is so old now it no longer applies
[06:39:49] *** Joins: dre (~dre@2001:8003:c932:c301:ca88:a637:7a5c:d23c)
[06:40:29] <GinFuyou> it most likely takes all time on rendering options. Seen it many times
[06:40:57] <bparker> well if you examine the query on the database side it shows that it uses a bunch of temporary tables which is slow
[06:41:04] <bparker> that's why adding 'USE INDEX' sped it up so much
[06:41:20] <bparker> but no idea why django can't just do that already
[06:41:34] <bparker> or why it's even necessary
[06:41:43] <GinFuyou> Well, haven't seen problem like that
[06:41:47] <bparker> why can't the database server just know it already has indexes and to use that
[06:42:08] <bparker> but either way, caching would help a lot here regardless
[06:42:33] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[06:42:40] <GinFuyou> mm, no, if it's rendering, it won't help
[06:43:12] <GinFuyou> if you've confirmed it's a query, I'd worry about it way more than cache
[06:43:16] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[06:43:25] <bparker> the slowness is from the query
[06:43:26] <schinckel> bparker: You could use something like django-cachalot; but that can be a scattergun approach.
[06:43:29] <bparker> not rendering a page
[06:44:08] *** Quits: dre (~dre@2001:8003:c932:c301:ca88:a637:7a5c:d23c) (Quit: Leaving)
[06:59:46] *** Joins: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com)
[07:04:21] *** Quits: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com) (Ping timeout: 258 seconds)
[07:08:00] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[07:17:11] <chiz> Well, I think I'm making some progress. compared the broken 502 environment to a working one on the older platform and noticed that for some reason aws beanstalk was not updating nginx settings at all when I'd deploy new code. Nuking it and seeing what happens with a new build blah
[07:18:12] *** Joins: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com)
[07:29:26] *** Quits: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com) (Ping timeout: 255 seconds)
[07:29:50] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[07:30:15] *** Joins: thiras (~thiras@user/thiras)
[07:48:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[08:20:41] *** Quits: chiz (~alkjkljkl@cpe-184-153-212-20.twcny.res.rr.com) (Ping timeout: 265 seconds)
[08:32:04] *** Joins: clawh_ (~clawh@78.10.204.200)
[08:34:40] *** Quits: clawh (~clawh@78.10.204.200) (Ping timeout: 252 seconds)
[08:43:15] *** Joins: dre (~dre@2001:8003:c932:c301:ca88:a637:7a5c:d23c)
[08:43:56] *** Quits: rje (~rje@50.54.137.153) (Remote host closed the connection)
[08:44:22] *** Quits: jasonbraganza (jasonbraga@user/jasonbraganza) (Quit: Au revoir …)
[08:44:31] *** Joins: rje (~rje@50.54.137.153)
[08:48:39] *** Joins: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com)
[08:52:28] *** Joins: jasonbraganza (~jasonbrag@user/jasonbraganza)
[09:06:06] *** Joins: zBeeble42 (~zBeeble@107-179-205-94.cpe.teksavvy.com)
[09:08:45] *** Quits: zBeeble (~zBeeble@2001:1928:1::35) (Ping timeout: 272 seconds)
[09:12:31] *** Joins: zBeeble (~zBeeble@107-179-205-94.cpe.teksavvy.com)
[09:12:52] *** Quits: zBeeble42 (~zBeeble@107-179-205-94.cpe.teksavvy.com) (Read error: Connection reset by peer)
[09:21:48] *** Quits: zBeeble (~zBeeble@107-179-205-94.cpe.teksavvy.com) (Read error: Connection reset by peer)
[09:22:31] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[09:28:30] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:31:21] *** Quits: gcbirzan (~gcbirzan@user/gcbirzan) (*.net *.split)
[09:31:21] *** Quits: Azelphur (~Azelphur@static.156.2.9.176.clients.your-server.de) (*.net *.split)
[09:31:21] *** Quits: Mindiell (~Mindiell@python/afpy/mindiell) (*.net *.split)
[09:31:36] *** Joins: gcbirzan_ (~gcbirzan@user/gcbirzan)
[09:34:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:36:12] *** Quits: benjaoming (~benjaomin@37.139.19.237) (*.net *.split)
[09:36:12] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[09:36:12] *** Quits: jrabbit (~jack@user/jrabbit) (*.net *.split)
[09:36:12] *** Quits: dang`r`us (~eismann@pg.afoo.at) (*.net *.split)
[09:36:12] *** Quits: Vohveli (vohveli@user/vohveli) (*.net *.split)
[09:36:12] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:36:12] *** Quits: jor (~jor@jor.link) (*.net *.split)
[09:36:12] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:36:12] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (*.net *.split)
[09:36:12] *** Quits: abyss (~robbins@user/robbins) (*.net *.split)
[09:36:12] *** Quits: matthewwilkes (sid500242@id-500242.highgate.irccloud.com) (*.net *.split)
[09:36:12] *** Quits: Wooble (~Wooble@107.170.27.240) (*.net *.split)
[09:36:12] *** Quits: Kipe_ (kipe@user/kipe/x-8442575) (*.net *.split)
[09:36:12] *** Quits: optiz0r_ (~quassel@universe.sihnon.net) (*.net *.split)
[09:36:12] *** Quits: Grauwolf (~grauwolf@user/grauwolf) (*.net *.split)
[09:36:12] *** Quits: mattmcc (~matt@li807-33.members.linode.com) (*.net *.split)
[09:36:23] *** Joins: FunkyBob_ (~curtis@vhost3.tinbrain.net)
[09:36:26] *** Joins: matthewwilkes (sid500242@id-500242.highgate.irccloud.com)
[09:36:39] *** Joins: optiz0r (~quassel@universe.sihnon.net)
[09:36:40] *** Joins: benjaomi- (~benjaomin@37.139.19.237)
[09:36:50] *** Joins: andreas3- (andreas303@ip227.orange.bnc4free.com)
[09:37:04] *** benjaomi- is now known as benjaoming
[09:37:13] *** Joins: dlam (~dlam@dlam.me)
[09:37:14] *** Joins: jrabbit (~jack@user/jrabbit)
[09:37:17] *** Joins: jor (~jor@jor.link)
[09:37:18] *** Joins: Wooble (~Wooble@107.170.27.240)
[09:37:22] *** Joins: strudl (~strudl@user/strudl)
[09:37:22] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:37:30] *** Joins: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[09:38:04] *** Joins: strudl (~strudl@user/strudl)
[09:38:05] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:38:24] *** Joins: strudl (~strudl@user/strudl)
[09:38:24] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:38:54] *** Joins: strudl (~strudl@user/strudl)
[09:38:54] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:39:22] *** Joins: strudl (~strudl@user/strudl)
[09:39:22] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:39:52] *** Joins: strudl (~strudl@user/strudl)
[09:39:52] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:40:24] *** Joins: strudl (~strudl@user/strudl)
[09:40:25] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:40:56] *** Joins: strudl (~strudl@user/strudl)
[09:41:26] *** Quits: darxun (sid504814@id-504814.tinside.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: wallbroken (wallbroken@user/wallbroken) (*.net *.split)
[09:41:26] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (*.net *.split)
[09:41:26] *** Quits: WhyNotHugo (sid269118@id-269118.stonehaven.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (*.net *.split)
[09:41:26] *** Quits: himcesjf (uid409730@id-409730.tinside.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: hyperair (~hyperair@49.128.61.210) (*.net *.split)
[09:41:26] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:41:31] *** Joins: hypera1r (~hyperair@49.128.61.210)
[09:41:58] *** Joins: WhyNotHugo (sid269118@id-269118.stonehaven.irccloud.com)
[09:42:32] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[09:42:49] *** Joins: sa (sid1055@2a03:5180:f::41f)
[09:43:07] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[09:43:08] *** Joins: wallbroken (wallbroken@user/wallbroken)
[09:43:47] *** FunkyBob_ is now known as FunkyBob
[09:44:57] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: DLange (~DLange@about/linux/staff/DLange) (*.net *.split)
[09:44:58] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (*.net *.split)
[09:44:58] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (*.net *.split)
[09:44:58] *** Quits: HorusHorrendus (sid21675@id-21675.tinside.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: gjm (sid142836@apache/committer/gjm) (*.net *.split)
[09:44:58] *** Quits: Knyght (sid365271@id-365271.brockwell.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: urth (~urth@geertswei.nl) (*.net *.split)
[09:44:58] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[09:44:58] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (*.net *.split)
[09:44:58] *** Quits: pjs (~pjs@user/pjs) (*.net *.split)
[09:44:58] *** Quits: SallyAhaj (~sallyahaj@user/sallyahaj) (*.net *.split)
[09:45:08] *** Joins: pjs (~pjs@user/pjs)
[09:45:15] *** Joins: urth (~urth@geertswei.nl)
[09:45:40] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[09:46:00] *** Joins: SallyAhaj (~AallyAhaj@user/sallyahaj)
[09:46:07] *** Joins: marienz (~marienz@libera/staff/marienz)
[09:50:55] <PaulWay[w]> Hmmmm.  Is it possible to change the accepted media type of certain views?
[09:51:15] <PaulWay[w]> I've got a DRF viewset that needs to export text/csv regardless of what the external browser supplied.
[10:00:50] <b-rex> you mean the content-type of the response?
[10:03:41] <PaulWay[w]> Yeah.
[10:04:27] <PaulWay[w]> I figured out my hack - basically include the JSON renderer in the list of accepted renderers, but set `request.accepted_renderer = MyCSVRenderer()` in the list view.
[10:04:29] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[10:04:35] <PaulWay[w]> Ugly but it doesn't require any middleware.
[10:04:36] *** Quits: Matthias1 (~Matthias1@cpe-76-170-236-166.socal.res.rr.com) ()
[10:08:32] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[10:13:07] <b-rex> i wonder if a Response object can take content_type like render
[10:13:43] <PaulWay[w]> I suspect I'd have to argue a bit with DRF at that point.
[10:15:09] <b-rex> https://dpaste.org/4JA3
[10:16:14] <PaulWay[w]> *nods*  Thanks.
[10:16:33] <b-rex> obviously adapt to your stuff if it's something that might work for you
[10:17:02] <b-rex> my boss didn't want clients connecting directly to our minio and s3 stuff. this view basically proxies the stuff back to the user
[10:19:04] <PaulWay[w]> Yep, we do a similar thing in another part of the code.  I'd forgotten about that.
[10:19:37] <PaulWay[w]> I still have to force the renderer, otherwise DRF chooses to render in JSON when it's asked to.
[10:21:33] <b-rex> what if you make your own detail method or whatever in the viewset?
[10:22:02] <PaulWay[w]> This is a list view, so I'm not what you mean?
[10:22:28] <b-rex> oh i see. you're wanting to return the list as a csv? interesting
[10:22:39] <PaulWay[w]> Yes.
[10:22:44] <b-rex> are you familiar with extra actions on a viewset?
[10:22:48] <PaulWay[w]> Yes.
[10:22:57] <PaulWay[w]> This is because I'm emulating a previous API which ignored the accept header.
[10:23:05] <b-rex> that's how i've been doing a lot of off the wall things that don't fit the usual json REST
[10:23:42] <b-rex> e.g. /api/mylistofstuff/csv
[10:23:48] <PaulWay[w]> Yep.
[10:23:57] <PaulWay[w]> I'm using a separate router for these views because of the way you can only have one renderer class on a viewset.
[10:24:20] <PaulWay[w]> But since I'm now deliberately breaking that rule, I could just simplify to a viewset with a couple of actions.
[10:24:26] <b-rex> yup :)
[10:24:30] <b-rex> read my mind
[10:25:07] <PaulWay[w]> The regular API does /api/export/systems.json and /api/export/reports.json.
[10:26:06] <PaulWay[w]> Which IMO is a much nicer way of specifying the file type, integrated into DRF already.
[10:26:29] <PaulWay[w]> But that requires a router rather than separate actions.
[10:27:05] <PaulWay[w]> Although you could fake it with `@action(url_path="mylistofstuff.csv")`
[10:27:44] <b-rex> SunOS database 5.11 joyent_20210617T001230Z i86pc i386 i86pc illumos
[10:27:46] <b-rex> ^ ok boomer
[10:28:03] <b-rex> i'm done migrating a bunch of apps. now it's time to sleep. l8r
[10:29:07] <PaulWay[w]> Wow.  That's been around for a while.
[10:29:25] * PaulWay[w] remembers SunOS 4.2 with some fondness.
[10:30:24] <PaulWay[w]> Maybe not a lot of fondness, but some.
[10:36:38] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[10:39:15] *** Joins: slav0nic (slav0nic@python.su)
[10:43:17] <FunkyBob> PaulWay[w]: heh.. we had a SS4 running sunos4 as a DNS
[10:43:45] <PaulWay[w]> :-)
[10:53:52] <tm007> That thing is still alive????
[10:54:15] <tm007> Latest release 26 years ago
[10:54:19] <tm007> Dammm
[10:55:06] <FunkyBob> oh, hell no
[10:55:17] <FunkyBob> that was at a company I haven't worked for for over a decade
[10:55:23] <FunkyBob> could probably replace it with a rPI
[10:55:32] <tm007> lol
[10:55:51] <tm007> May sound funny, but true.
[10:56:06] <FunkyBob> sure
[10:56:31] <FunkyBob> also moved our mail and samba onto a Netra V100... 450MHz ultrasparc2e
[10:59:24] <tm007> Can you guys even imagine
[10:59:37] <tm007> The beautiful Django
[10:59:46] <tm007> coming to it's end of life
[10:59:53] <FunkyBob> ?
[11:00:16] <tm007> No more release!
[11:00:36] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:00:38] <PaulWay[w]> I'm intrigued, tm007 - what are you thinking?
[11:00:47] <tm007> That may be someday
[11:00:52] <FunkyBob> it could happen, one day
[11:00:53] <tm007> way in the future
[11:00:59] <tm007> Django is no more
[11:01:03] <tm007> like Python 2.7
[11:01:08] <PaulWay[w]> It'd only be because something better has surpassed it.
[11:01:20] <tm007> Yeah
[11:01:29] <tm007> It's very hard to imagine at this moment
[11:01:31] <PaulWay[w]> And I think it'd be hard to beat the ease and simplicity of Python as a language combined with the power of Django as a framework.
[11:01:45] <tm007> Agreed
[11:02:14] <tm007> Plus the community support
[11:06:35] <PaulWay[w]> And even though I like Golang, I think the idea of recompiling the code to run your website each time would be ... a little tedious?  I dunno.  Maybe it's not that big a problem?
[11:10:12] <tm007> I think it'd have to be something drastic
[11:10:16] <tm007> WW3
[11:10:26] <tm007> Or a complete shift in the platforms we use
[11:10:39] <schinckel> Maybe a global pandemic?
[11:10:41] <schinckel> Oh, wait.
[11:10:53] <PaulWay[w]> You mean the Third Browser War?
[11:10:53] <tm007> lol
[11:11:08] <tm007> maybe we all move to smart glasses or something
[11:14:45] <PaulWay[w]> Microsoft finally decides that the only way it can defeat Chrome is to launch the nuclear missiles at Google's headquarters.
[11:15:02] <PaulWay[w]> Unfortunately they're using Bing Maps and they target Apple's headquarters.
[11:16:17] <PaulWay[w]> Apple's self defence grid sees the incoming missiles, assumes that Stallman is behind them, and turns on the mind-control device built into every Apple device to force its subjects into the Apple Zombie Army/
[11:17:16] <PaulWay[w]> The AZA target every Microsoft store, all Linux vendors, and (for some reason) GameStop with a wave of unthinking drones bent on destruction.
[11:17:30] <deniska> No tech is truly ever dies
[11:17:48] <PaulWay[w]> The nuclear missiles still hit, but now war ravages most continents.
[11:17:57] <PaulWay[w]> And no-one has the Zombie Off Code any more.
[11:18:17] <tm007> Won't die, but EOL
[11:18:34] <tm007> Yet we are more vulnerable than we think/know
[11:19:25] <PaulWay[w]> The Redditors from WallStreetBets that survive cause every stock market to crash by deliberately targetting every investment bank's shorts.
[11:19:47] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[11:21:22] <PaulWay[w]> Google, in turn, activates Plan Hyperwave, which blows the last rock bastions on the gigantic tunnels that link gigantic water storages directly to Microsoft headquarters downstream.  It's clean, it's efficient, it wastes the Microsoft headquarters, and Google generates electrical power.
[11:21:32] <PaulWay[w]> Can you tell I'm bored at work?
[11:24:33] <tm007> Maybe it's Putin
[11:24:42] <tm007> he has the one button
[11:24:50] <tm007> click
[11:27:08] <tm007> Do you ever wonder
[11:28:54] *** Joins: pycode (~pycode@2001:b07:5d28:551:c07a:a3f0:7a8a:fd77)
[11:42:17] <PaulWay[w]> Yes, but not of that.
[11:42:32] <doc>  The reason the AZA target gamestop is obvious. Do you really think anyone at the SEC is using an android phone? Of course not.
[11:47:17] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 255 seconds)
[11:47:33] <doc> fine then
[12:00:52] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:10:21] *** Joins: rje (~rje@50.54.137.153)
[12:16:09] *** Joins: shangxiao (~davids@101.181.108.207)
[12:19:27] *** Joins: Knyght (sid365271@id-365271.brockwell.irccloud.com)
[12:21:12] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[12:27:48] *** Joins: serafeim (serafeim@thunix.net)
[12:27:58] <serafeim> hello friends
[12:33:30] *** Joins: Grauwolf (~grauwolf@user/grauwolf)
[12:33:33] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:37:40] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[12:37:47] *** Joins: Kipe_ (kipe@user/kipe/x-8442575)
[12:41:15] *** Joins: doev (~doev@p549d7dfa.dip0.t-ipconnect.de)
[12:45:00] <doev> hi. does someone know if and how I can override the forms field names in the backend? my fields have ids as names and I like to stay with that. For example, "field_12_34" -> should get a "real_name".
[12:46:29] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[12:47:38] <doev> ok, got it: https://stackoverflow.com/questions/18515545/change-field-name-in-django-admin
[12:50:53] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 258 seconds)
[12:55:46] <schinckel> If it's the admin, why would you care what their names are?
[12:57:52] *** Joins: Trieste (T@user/pilgrim)
[12:58:25] <serafeim> TIL: if you use django-sendfile you need to disable the `sendfile` thingie in nginx or else you'll get some very problematic caching of files
[13:02:18] *** Quits: audiocat (~audio@2603-8081-1800-00ad-e450-fa91-465b-f753.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:02:39] <FunkyBob> serafeim: err.. doesn't it depend on the web server having the feature enabled??
[13:02:52] <FunkyBob> otherwise it won't react to the magic header to do the sendfile acceleration
[13:03:18] *** Joins: Trieste_ (T@user/pilgrim)
[13:03:56] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[13:04:21] <serafeim> FunkyBob: it's a different thing :)
[13:05:12] <FunkyBob> not according to the docs for django-sendfile
[13:05:21] <FunkyBob> https://pypi.org/project/django-sendfile/
[13:05:34] <serafeim> FunkyBob: the nginx `sendfile` is a feature of nginx on how to serve static files (https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/#optimizing-performance-for-serving-content). the nginx functionality that django-sendfile uses to serve internal files is called `XSendFile`: https://www.nginx.com/resources/wiki/start/topics/examples/xsendfile/
[13:08:48] <FunkyBob> ah
[13:09:03] <FunkyBob> well, that's more a matter of how it's serving the file asked for...
[13:09:12] <FunkyBob> if there's a caching issue, that sounds like a bug in nginx
[13:09:54] <serafeim> i'm not really sure i have never understood how cache works. so i just disable the sendfile :)
[13:10:32] *** Joins: Trieste (T@user/pilgrim)
[13:10:54] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 272 seconds)
[13:23:32] <FunkyBob> what makes you say it's a caching issue?
[13:25:31] <serafeim> FunkyBob: the fact that i upload a new file and i still get the existing one
[13:28:54] <serafeim> and the fact that althoguh i have added a never_cache django decorator to my django-sendfile file serving view i still get the same file
[13:29:06] <serafeim> so something's fishy
[13:31:20] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[13:32:33] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[13:35:19] <doev> schinckel, cause I want to have the field_ids (given by third party) in my code, but have some meaningful in the admin interface.
[13:39:09] <svedrin> hey, is there a method to prevent a FileField from storing files to disk while running under `manage.py test`?
[13:42:49] <hemebond> svedrin: You've checked the docs?
[13:43:35] <jor> svedrin: no, but there's an inmemory-storage library (not 100% about the name, search pypi)
[13:44:38] <serafeim> or you can just override Storage https://docs.djangoproject.com/en/3.2/ref/files/storage/#django.core.files.storage.Storage
[13:45:42] <shangxiao> Yeah I've used that in-memory storage for tests… works a treat
[13:46:00] <jor> yeah, that's what that does. Just checked a project requirements, the one i'm using is: https://pypi.org/project/dj-inmemorystorage/
[13:46:26] <svedrin> awesome, I'll look into it, thanks :)
[13:48:13] <shangxiao> svedrin: maybe also check out: https://docs.djangoproject.com/en/3.2/ref/settings/#file-upload-handlers
[13:48:23] <shangxiao> there's the MemoryFileUploadHandler
[13:50:04] <doev> What do I use for a ratiobutton on model site? A CharField with choices?
[13:51:40] <svedrin> thank you guys :) I'll have a look
[13:53:28] <hemebond> svedrin: I thought this was in the main Django docs but I was reading this last night https://github.com/danifus/django-override-storage
[13:53:29] <jor> doev: some numeric type would make it easier to do calculations in any future queries
[13:54:04] <jor> atleast for my definition of 'ratio', it can usually be represented as an integer
[13:54:53] <doev> jor, but then you need a translation between numeric value and displayed text.
[13:55:28] <jor> doev: I meant an integerfield with choices, get the best of both worlds :)
[13:55:51] <doev> What I mean is, that a CharFiled with given choices are displayed as a dropdown-list in the admin interface. Are there no real ratiobuttons?
[13:55:52] *** Quits: dre (~dre@2001:8003:c932:c301:ca88:a637:7a5c:d23c) (Remote host closed the connection)
[13:56:52] <jor> doev: that is just a matter of changing the default widget for a field. you can use a RadioSelect
[13:58:40] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[14:00:46] <svedrin> hemebond: that works like a charm, thanks a ton :D
[14:03:05] *** Joins: n00bn00b (~N00b@79.184.96.125.ipv4.supernova.orange.pl)
[14:03:34] *** Quits: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net) (Ping timeout: 252 seconds)
[14:07:47] *** Joins: richbridger (~richbridg@mobiledyn-185-69-244-156.mrsn.at)
[14:12:19] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[14:31:45] *** Joins: himcesjf (uid409730@2a03:5180:f::6:4082)
[14:37:54] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:38:44] *** Joins: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:39:25] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[14:42:52] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[14:43:44] *** Quits: doev (~doev@p549d7dfa.dip0.t-ipconnect.de) (Quit: Client closed)
[14:48:44] <schinckel> If doev is using the admin, then it's sometimes a bunch more work to switch widgets - at some point you probably don't want to use the admin for your website anyway.
[14:53:17] *** Joins: doev (~doev@p549d7dfa.dip0.t-ipconnect.de)
[15:07:11] <doev> jor, but there is no widget-parameter for a model field. I think that can only be used within a form.
[15:08:39] <schinckel> doev: But it's easy to override the widget for a form: either redeclaring the field itself, or using the Meta.widgets dict.
[15:10:04] <schinckel> ...and if you are still talking about the admin, then https://stackoverflow.com/a/4466958/188 (but you really don't want to use the admin for your website)
[15:10:28] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:10:57] <schinckel> (It's a great tool, but generally writing your own views will be more flexible and productive, once you are past just throwing data into the system)
[15:11:30] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[15:12:34] *** Joins: aquijoule_ (~richbridg@089144202018.atnat0011.highway.a1.net)
[15:13:32] *** Quits: richbridger (~richbridg@mobiledyn-185-69-244-156.mrsn.at) (Read error: Connection reset by peer)
[15:19:08] *** Joins: sherlock_95 (~sherlock_@1.55.170.89)
[15:37:08] <moldy> schinckel, doev: iirc you can also override the widget template, that should work for the admin too, i believe
[15:37:16] *** Quits: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[15:42:56] *** Quits: pycode (~pycode@2001:b07:5d28:551:c07a:a3f0:7a8a:fd77) (Ping timeout: 256 seconds)
[15:55:02] *** Quits: gitly (~gitly@185.69.145.226) (Ping timeout: 252 seconds)
[15:57:14] *** Joins: Crassus (~Crassus@user/crassus)
[16:13:37] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:26:46] *** Joins: yanchai (~yanchai@203.177.194.130)
[16:27:56] *** Joins: Coder_000 (~Coder_000@177.10.203.30)
[16:28:20] <Coder_000> Please someone help me set up an IRC Bouncer
[16:33:17] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[16:33:35] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[16:33:56] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Ping timeout: 256 seconds)
[16:35:33] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[16:40:09] *** Joins: slav0nic (slav0nic@python.su)
[16:52:37] *** Joins: pycode (~pycode@2001:b07:5d28:551:49b0:b565:c4cd:542)
[16:54:06] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[16:54:06] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[17:06:00] *** Quits: READ10 (~weechat@user/read10) (Quit: WeeChat 3.0.1)
[17:07:15] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 276 seconds)
[17:14:08] *** Quits: nonanomalous (~nonanomal@2601:280:c77e:8780:8829:78fd:59a8:7e36) (Quit: Client closed)
[17:15:21] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[17:25:07] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[17:27:02] *** Quits: TakinOver (~TakinOver@47.150.206.35) (Ping timeout: 268 seconds)
[17:32:54] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[17:33:46] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[17:40:48] *** Quits: sherlock_95 (~sherlock_@1.55.170.89) (Ping timeout: 256 seconds)
[17:42:06] *** Joins: thiras (~thiras@user/thiras)
[17:42:52] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[17:43:29] *** hylje_ is now known as hylje
[17:44:33] *** Joins: thiras (~thiras@user/thiras)
[17:47:00] *** Joins: Thanatos (~Thanatos@197.210.77.180)
[17:52:06] *** Quits: Coder_000 (~Coder_000@177.10.203.30) (Ping timeout: 276 seconds)
[17:53:39] <doev> schinckel, actually I am working on the model. My plan is to finish it, before I will create the frontend. Btw, I am a django beginner, maybe I am wrong but first concentrate first to the backend helps me to get into django.
[17:55:34] *** Joins: READ10 (~weechat@user/read10)
[18:21:16] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:22:30] *** Quits: yanchai (~yanchai@203.177.194.130) (Ping timeout: 272 seconds)
[18:36:54] *** Quits: pycode (~pycode@2001:b07:5d28:551:49b0:b565:c4cd:542) (Ping timeout: 256 seconds)
[18:38:13] *** Joins: bambanxx (~bambanx@181-163-43-25.baf.movistar.cl)
[18:43:05] *** Joins: kevr (~kevr@user/kevr)
[18:43:47] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[18:43:59] <kevr> So, I have a layout template, "layout.html" which defines a {% block pageContent %}. I can override this fine. Now, I also have another template, "header.html" and I want to include that inside of "layout.html" with a customizable <title> via another block, called pageTitle.
[18:44:29] <kevr> How exactly should I structure this? I need to extend layout.html in my higher level template and define both pageTitle and pageContent in the derivative.
[18:44:46] <kevr> But it does not seem to pass through to header.html from layout.html
[18:49:19] <GinFuyou> Does title have use block to be customizable?
[18:53:08] <GinFuyou> also you could approach it from other angle: layout_with_header.html that extends layout.html
[19:01:37] *** Quits: doev (~doev@p549d7dfa.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[19:02:36] *** Quits: aquijoule_ (~richbridg@089144202018.atnat0011.highway.a1.net) (Quit: Leaving)
[19:03:36] *** Joins: pycode (~pycode@2001:b07:5d28:551:ff5e:1808:86f7:60dd)
[19:04:01] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[19:08:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:08:28] *** ChanServ sets mode: +v EvilDMP
[19:11:12] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[19:11:39] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[19:15:02] *** Joins: whallz (~whallz@170.83.127.50)
[19:15:51] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[19:16:03] <whallz> hello, I am building a webhook for handling unsubscribes from Mailchimp. Basically: Mailchimp will make a POST request with application/x-www-form-urlencoded data.
[19:17:17] <ironbeard> I dunno the full story, but you'll want to use the csrf_exempt wrapper for webhooks
[19:17:36] <whallz> i am using FormParser from rest_framework.parsers, but there seems to be an issue with the "associative array" type of notation using brackets, the value for request.POST.get('data') is a string, and should be an object or querydict
[19:17:59] <whallz> the issue is with parsing the request payload actually
[19:18:54] <ironbeard> ah, hm
[19:19:05] <whallz> I have seen samples where they do things like: email = request.data['data[email]'] but that does not seem to work email = request.data['data'] is just a string which looks like a json object
[19:19:37] <whallz> (sorry, have not used IRC in a long time :))
[19:19:52] <ironbeard> Is the request a Django object or a REST object?
[19:20:21] <whallz> rest_framework.request.Request object
[19:20:58] <whallz> i am using this parser_classes = [FormParser, MultiPartParser] and tried different combinations but with no success
[19:21:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[19:22:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:22:01] *** ChanServ sets mode: +v EvilDMP
[19:22:10] <ironbeard> I've never used the FormParser, so sorry I'm not more of a help :/
[19:24:40] <ironbeard> What's the benefit of using Django Rest as opposed to just a regular Django view?
[19:25:05] <whallz> i am using APIView and permission_classes
[19:25:34] *** Joins: Elzington (~Elzington@104.129.24.124)
[19:25:55] <whallz> wait a minute, i think i just found an issue, seems to be bad formatting of the payload data in the test..... major facepalm.
[19:27:14] <whallz> it seems one needs to go public with the issue to wake up the brain, something like the rubber duck debugging technique :D
[19:27:37] <whallz> ironbeard, thanks for reading!
[19:28:14] <ironbeard> all good :)
[19:31:42] <ironbeard> I have a /media/ block in my nginx config, but I would like for nginx to pass on /media/uploads/newsletter/ and send that to Django (to decide if the user has access and then pass X-Accel-Redirect back to nginx). I have a URL conf and view set up for /media/uploads/newsletter/<str:filename>, but I'm not sure how to tell nginx to "ignore" that subdirectory. Anyone here have an idea?
[19:32:24] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[19:40:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:42:07] <deniska> ironbeard: add another block for /media/uploads/newsletter/ before the block for /media/
[19:42:57] <ironbeard> @deniska what would I put in that block? I want that block to be "forwarded" to django, so would I put the same hting as in my `location /` block?
[19:44:38] <deniska> ironbeard: I'd think so, yes. Although I'm not too familiar with X-Accel-Redirect workflow
[19:45:14] <ironbeard> gotcha, I'll try that and at least see if it gives progress. thanks!
[19:45:51] <kevr> I'm using a admin.TabularInline, and it's saying that my model has no foreign key to my inlined model. I don't understand this, because all I want to do is create a many-to-one relationship, so I added a models.ForeignKey in the class that's supposed to be many toward the class that is supposed to be one.
[19:45:56] <kevr> Does that sound incorrect in any way?
[19:46:21] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Ping timeout: 255 seconds)
[19:46:57] <deniska> ironbeard: although now that I look at examples, it seems like the /media/uploads/newsletter/ should just have `internal` directive
[19:47:10] <kevr> It doesn't seem like it is generating the foreign key in the class that the ForeignKey references. Though, I don't think this is abnormal for relational models..
[19:47:24] <kevr> I'm just not sure why django admin is complaining about it.
[19:48:04] <deniska> ironbeard: seems like the URL user accesses and the location internal to nginx should have decoupled paths
[19:48:05] *** Joins: djacobs (~IceChat95@109.133.171.241)
[19:48:48] <ironbeard> @deniska: yeah, I have the internal directive, but I'm getting a bunch of 404s from nginx (which occur before it hits my django app since I have custom 404s and i'm getting the default nginx ones). I /think/ it's because nginx is still trying to serve up /media/uploads/newsletter/ as a subdirectory of /media/ instead of passing on to django but :shrug:
[19:49:26] <ironbeard> yeah, that's what I'm thinking too. But I'd like it if the URL user access was still a sub directory of /media/, just for consistency with other file names..but yeah I think that's the issue
[19:49:46] <deniska> ironbeard: perhaps invent some sort of /media/protected?
[19:50:21] <ironbeard> but then the /media/ location in nginx would also include that, which I think is my issue.
[19:50:22] <ironbeard> hmm
[19:50:56] <deniska> ironbeard: there're rules in which priority location blocks match
[19:52:12] *** Quits: Thanatos (~Thanatos@197.210.77.180) (Ping timeout: 255 seconds)
[19:52:13] <ironbeard> yeah, I was hoping there was a rule that was something like negative lookahead in regex..match /media/ as long as it's not /media/uploads/newsletter/. I think I should try adding a block at media/uploads/newsletter that mirrors the / block and see what happens
[19:52:21] <ironbeard> thanks for helping me think this through :)
[19:55:20] *** Quits: djacobs (~IceChat95@109.133.171.241) (Quit: Friends help you move. Real friends help you move bodies.)
[19:55:46] *** Joins: djacobs (~IceChat95@109.133.171.241)
[19:59:24] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Ping timeout: 255 seconds)
[20:05:05] *** Quits: djacobs (~IceChat95@109.133.171.241) (Read error: Connection reset by peer)
[20:05:10] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[20:05:35] *** Joins: ironbeard_ (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[20:05:54] *** Joins: djacobs (~IceChat95@109.133.171.241)
[20:06:15] *** Quits: bambanxx (~bambanx@181-163-43-25.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:06:58] <ironbeard_> @deniska looks like my issue was fixed with a block at /media/uploads/newsletter/ that mirrors the / block (i.e., sends the request on to django), and then I have a separate block with the `internal` directive that will server the file after I add X-Accel-Redirect in django. Thanks for helping me work this out!
[20:07:34] *** Quits: whallz (~whallz@170.83.127.50) (Quit: Client closed)
[20:14:08] *** Joins: Thanatos (~Thanatos@197.210.77.51)
[20:24:06] *** Joins: y3k (~y3k@user/y3k)
[20:24:30] <y3k> Hello o/
[20:26:11] <y3k> I've a bunch of `model.objects.create_or_update(key=key..., defaults=defaults)` in a for loop, this results in a high number of queries. I'm trying to wrap them up in a transaction but doesn't seem to work (or be straight forward). Any suggestion?
[20:29:22] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[20:31:56] *** Quits: READ10 (~weechat@user/read10) (Ping timeout: 256 seconds)
[20:33:14] *** Quits: clawh_ (~clawh@78.10.204.200) (Remote host closed the connection)
[20:39:21] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:39:26] *** Joins: rje (~rje@50.54.137.153)
[20:39:39] *** Joins: chiz (~alkjkljkl@cpe-184-153-212-20.twcny.res.rr.com)
[20:41:00] *** Quits: pycode (~pycode@2001:b07:5d28:551:ff5e:1808:86f7:60dd) (Ping timeout: 256 seconds)
[20:41:23] *** Quits: y3k (~y3k@user/y3k) (Quit: Client closed)
[20:46:02] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[20:47:30] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:50:38] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[20:52:36] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[20:54:37] *** Joins: rje (~rje@50.54.137.153)
[20:56:34] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:01:24] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 256 seconds)
[21:05:40] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:10:28] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 256 seconds)
[21:14:24] <tm007> https://pypi.org/project/django-bulk-update-or-create/
[21:14:44] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:23:18] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[21:23:33] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 255 seconds)
[21:24:43] *** Joins: rje (~rje@50.54.137.153)
[21:27:10] *** Quits: ironbeard_ (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Quit: WeeChat 2.3)
[21:31:40] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[21:32:10] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Ping timeout: 240 seconds)
[21:38:48] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 256 seconds)
[21:44:42] *** Quits: Thanatos (~Thanatos@197.210.77.51) (Ping timeout: 255 seconds)
[21:46:16] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:48:16] *** Joins: Thanatos (~Thanatos@197.210.77.63)
[21:51:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:56:18] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[22:04:12] <wallbroken> https://dpaste.org/7wjn
[22:04:19] <wallbroken> i created this view function
[22:04:39] <wallbroken> but i get a blank page when i call it
[22:04:40] <wallbroken> why?
[22:05:23] *** Quits: Lauxley (~lauxley@2a01:e34:ec55:2700:6194:7fb1:298b:ec96) (Ping timeout: 252 seconds)
[22:09:48] *** Joins: rje (~rje@50.54.137.153)
[22:11:32] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 265 seconds)
[22:19:36] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[22:29:04] <dodo> wallbroken: how can we know without seeing the template?
[22:29:22] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[22:29:40] <wallbroken> dodo: there is not a template
[22:29:43] <bilb_ono> can someone help me figure out how to use this package? https://github.com/joke2k/django-environ
[22:29:56] <bilb_ono> I don’t know where to put that .env file so that my settings.py finds it
[22:29:57] <wallbroken>     path('shoes/<int:pk>/checkitemstate/', checkItemState, name='checkItemState'),
[22:30:26] <wallbroken> {% state %}
[22:30:30] <dodo> wallbroken: https://docs.djangoproject.com/en/3.2/topics/http/shortcuts/#render
[22:30:34] <wallbroken> i just need tu put the state
[22:30:38] <wallbroken> in my template
[22:30:52] <dodo> wallbroken: none of your condition matches
[22:30:57] <wallbroken> dodo: false
[22:31:04] <dodo> wallbroken: have an else: state = "lol" at the end
[22:31:20] <wallbroken> it joins the if
[22:31:24] <wallbroken> and sets the state
[22:31:27] <wallbroken> so it works
[22:31:33] <dodo> also {% state %} would not show the state var
[22:34:46] <wallbroken> dodo: and how could i show it in the template?
[22:35:18] <dodo> wallbroken: have you done the django tutorial yet?
[22:35:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:35:31] *** ChanServ sets mode: +v EvilDMP
[22:35:55] <dodo> wallbroken: https://docs.djangoproject.com/en/3.2/topics/templates/#variables
[22:36:36] <wallbroken> yes, but how to get that variable from that view?
[22:36:42] *** Joins: Skyz (~Skyz@user/skyz)
[22:37:39] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[22:38:29] <nedbat> wallbroken: what are the three arguments to render() ?
[22:38:47] <wallbroken> nedbat: render() need 3 arguments
[22:38:55] <wallbroken> i don't need that
[22:39:02] <wallbroken> i just need to pass "state" var to the template
[22:39:03] <nedbat> wallbroken: you don't? Why not?
[22:39:57] <nedbat> wallbroken: what are the three arguments? What do they do?
[22:40:52] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[22:41:37] <nedbat> wallbroken: the code you showed used three arguments for render()
[22:41:54] <wallbroken> yes, i know
[22:42:16] <nedbat> wallbroken: but you say you don't need three arguments?
[22:42:29] <wallbroken> yes
[22:42:34] <wallbroken> as i said
[22:42:44] <wallbroken> i just need to pass the "var" state
[22:42:48] <wallbroken> "state"
[22:42:54] <nedbat> wallbroken: why are you using three arguments if you don't need three?
[22:43:01] <wallbroken> ...
[22:43:42] <wallbroken> render() missing 1 required positional argument: 'template_name'
[22:43:43] <wallbroken> ok?
[22:43:51] <wallbroken> so i need to use them
[22:44:24] <nedbat> wallbroken: you must have changed the code since you last pasted it to get that error.
[22:44:42] <wallbroken> yes
[22:44:48] <wallbroken> i removed the arguments i don't need
[22:44:53] <wallbroken> just to show you why i need it
[22:45:01] <wallbroken> because if i remove them, i get an error
[22:45:02] <wallbroken> ok?
[22:45:15] <nedbat> wallbroken: so we agree that you need all three arguments now? I'm confused.
[22:45:55] <wallbroken> I DON'T NEED FOR MY PURPOSE
[22:45:58] *** Quits: Thanatos (~Thanatos@197.210.77.63) (Ping timeout: 272 seconds)
[22:46:11] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:46:29] <nedbat> wallbroken: do you know what they are for? How do you know you don't need them?
[22:46:47] <wallbroken> nedbat: are you kidding me?
[22:46:51] <wallbroken> it's clear what my goal is?
[22:46:57] <wallbroken> because looks like not
[22:46:59] <nedbat> wallbroken: yes, it's clear what your goal is.
[22:47:29] <nedbat> wallbroken: but it's also clear that you want people to type your code for you, without you figuring out how it works.
[22:47:38] <nedbat> wallbroken: this just frustrates you, and it frustrates helpers.
[22:47:40] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:47:54] *** Joins: Thanatos (~Thanatos@197.210.77.51)
[22:47:59] <wallbroken> nedbat: don't make me nervous
[22:48:05] <wallbroken> i just wrote the code myself
[22:48:13] <nedbat> wallbroken: if you can tell me what the three arguments to render() do, I will help you.
[22:48:17] *** Joins: audiocat (~audio@2603-8081-1800-00ad-22ac-dc5d-4600-e5df.res6.spectrum.com)
[22:48:35] <wallbroken> one gets the request, one renders the template
[22:48:44] <wallbroken> one returns json format data
[22:49:00] *** Quits: Thanatos (~Thanatos@197.210.77.51) (Remote host closed the connection)
[22:49:19] <nedbat> wallbroken: that is not correct.  What are the names of the first three arguments to render() ?
[22:50:14] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:50:15] <nedbat> wallbroken: arguments can't return anything.  They are for giving data to the function.
[22:53:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 255 seconds)
[22:53:50] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:55:07] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:55:52] <wallbroken> request, 'shoes/imageView.html', {'state': state}
[22:56:14] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:56:14] *** ChanServ sets mode: +v EvilDMP
[22:59:02] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[22:59:35] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:00:18] <nedbat> wallbroken: yes, and what do they mean? How do they help render()  do its work? Do you need all three?
[23:01:50] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[23:02:54] <wallbroken> nedbat: idk
[23:03:02] <nedbat> wallbroken: how can you find out?
[23:03:08] <wallbroken> nedbat: thank you anyway
[23:03:12] <wallbroken> don't worry
[23:03:47] <wallbroken> i cannot stay here answering to hundreds of questions
[23:04:35] <nedbat> wallbroken: the questions are designed to pull you into the docs, to understand how things work.
[23:04:44] <nedbat> wallbroken: you need to learn these things, or you will always be frustrated.
[23:05:07] <wallbroken> ok, i appreciate your purpose, but you are answering to me things i don't know
[23:05:13] <wallbroken> and i cannot guess
[23:05:24] <wallbroken> *asking
[23:05:32] <nedbat> wallbroken: i don't want you to guess. I want you to read this: https://docs.djangoproject.com/en/3.2/topics/http/shortcuts/#render
[23:05:47] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:05:57] <nedbat> wallbroken: or do the django tutorial again, but slower, and focus on these things
[23:07:24] <nedbat> wallbroken: i believe you can learn these things.  I you think you can't, then you should stop writing code.
[23:07:33] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:08:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 276 seconds)
[23:08:45] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:09:45] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[23:10:02] *** Joins: rje (~rje@50.54.137.153)
[23:11:14] <wallbroken> nedbat: i needed real help
[23:11:21] <wallbroken> not this kind of pointless help
[23:11:33] <nedbat> wallbroken: you have been at this for weeks if not months.
[23:11:37] <nedbat> wallbroken: you are frustrated.
[23:11:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:11:37] *** ChanServ sets mode: +v EvilDMP
[23:12:20] <nedbat> wallbroken: you need a different approach. You need to learn the fundamentals. Copying code that people give you isn't going to make this work.
[23:12:39] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[23:13:11] <nedbat> wallbroken: don't you believe that you can learn how render() works?
[23:14:48] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:15:52] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[23:20:25] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[23:20:30] <wallbroken> nedbat: i'd like to understand
[23:20:47] <nedbat> wallbroken: did you look at the docs I linked to?
[23:20:53] *** Joins: Skyz (~Skyz@user/skyz)
[23:21:06] <wallbroken> yes, without understading nothing as usua
[23:21:10] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:21:54] <nedbat> wallbroken: what's the first thing there that you didn't understand?
[23:22:06] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[23:22:34] <wallbroken> i don't understand why i need it
[23:22:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:22:50] <wallbroken> i just want a function that returns a variable
[23:22:57] <wallbroken> i don't want to render a template
[23:23:05] <wallbroken> i don't want anything of this
[23:23:18] <wallbroken> just a simple function to return a variable to whatever calls it
[23:23:31] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:23:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:23:51] *** ChanServ sets mode: +v EvilDMP
[23:25:14] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[23:28:20] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[23:30:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:31:51] *** Joins: iomari891 (~iomari891@105.112.138.38)
[23:33:48] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[23:34:00] *** Joins: Skyz (~Skyz@user/skyz)
[23:36:20] *** Quits: shangxiao (~davids@101.181.108.207) (Quit: WeeChat 3.2)
[23:36:41] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[23:36:48] <nedbat> wallbroken: you want to display information in the user's browser, right?
[23:38:17] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:38:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:38:17] *** ChanServ sets mode: +v EvilDMP
[23:38:28] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[23:39:41] <wallbroken> yes
[23:40:15] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[23:40:36] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[23:40:37] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Read error: Connection reset by peer)
[23:40:46] <nedbat> wallbroken: i strongly recommend that you do the django tutorial again, and don't move off a page until you understand what happened on that page.
[23:40:52] *** Joins: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com)
[23:40:57] *** Joins: Thanatos (~Thanatos@197.210.77.172)
[23:42:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[23:42:25] *** Joins: ThanatosJ (~Thanatos@197.210.53.15)
[23:43:44] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[23:44:35] <dlam> wheres the place in an django.db.models.QuerySet to modify the default queryset?  in the old manager way you'd overridge `def get_queryset()`   (im trying to default a model to do a select_related)
[23:45:05] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:45:06] *** Quits: ChOcO-Bn (~choco@user/choco-bn) (Ping timeout: 252 seconds)
[23:45:19] *** Joins: ChOcO-Bn (~choco@user/choco-bn)
[23:45:45] *** Quits: Thanatos (~Thanatos@197.210.77.172) (Ping timeout: 255 seconds)
[23:46:18] <wallbroken> nedbat: plese, stop that
[23:46:57] <nedbat> wallbroken: i know, it won't be easy.  But has it been easy asking for lines of code here?
[23:47:17] <wallbroken> i repeat stop that
[23:49:43] *** Joins: READ10 (~weechat@user/read10)
[23:49:45] <nedbat> wallbroken: you are going to get less and less help here.  That much is clear
[23:54:09] <wallbroken> well, you always geave me 0 help, and then lower than 0 would not exist
[23:59:12] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
