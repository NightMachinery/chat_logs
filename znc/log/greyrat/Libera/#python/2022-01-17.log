[00:03:32] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 240 seconds)
[00:06:03] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[00:06:27] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[00:08:17] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[00:09:38] *** Joins: ano (~ano@user/ano)
[00:09:57] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[00:09:59] *** Quits: evocatus (~evocatus@62.182.77.224) (Quit: Leaving)
[00:14:58] *** Quits: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de) (Remote host closed the connection)
[00:15:23] *** Joins: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de)
[00:18:16] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[00:18:49] *** Quits: cyberfall (~owner@2600:6c40:1600:39ec:b49d:6307:ee6c:7e57) (Quit: Leaving)
[00:18:50] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[00:18:51] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[00:18:54] *** Joins: pepper (~pepper@user/pepper)
[00:21:24] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[00:23:16] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:310a:887:a8c8:ed35) (Ping timeout: 250 seconds)
[00:24:11] *** Quits: aiena (~aiena@user/aiena) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[00:24:19] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[00:24:39] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:25:36] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:35a0:e4d2:2738:3a6)
[00:25:39] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[00:27:09] *** Joins: pymelea (~manjaro-i@164.68.127.184)
[00:27:17] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[00:27:36] *** Joins: thiras (~thiras@user/thiras)
[00:27:37] *** Joins: mossman93 (~quassel@user/mossman93)
[00:30:33] <nomic> if i got (id) object in namespace .. is there any way i can find from the id what the object is
[00:30:49] <nomic> id(object) i got the number but not the object i want to find the object from the id number
[00:31:05] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[00:31:20] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:31:31] * node1 solved NFA
[00:33:23] *** Quits: jay-m1262 (~jay-m@41.205.30.141) (Remote host closed the connection)
[00:33:32] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[00:34:04] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[00:34:31] <nedbat> nomic: there isn't a way to do that.  why not just hold onto the object instead of holding onto the number?
[00:34:38] *** Quits: earendel (uid498179@user/earendel) (Killed (NickServ (GHOST command used by Amore!~AmoreFS@user/earendel)))
[00:35:12] <nomic> im sure there must be a way
[00:35:16] <nomic> even though i found a way round it
[00:35:43] <nedbat> nomic: what was your way around it, and why not keep the object itself?
[00:35:49] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[00:35:49] <nomic> way = to go thru every object and check
[00:35:58] <nomic> im in pdb trying to track something
[00:35:58] <BrenBarn> I think there are some unsafe ways with ctypes (for CPython) and there is a slow way where you use the `gc` module to check the id of every object
[00:36:01] <nedbat> nomic: that sounds cumbersome
[00:36:02] *** Quits: ITD4004 (~ITD4004@187.61.233.248) (Ping timeout: 240 seconds)
[00:36:09] <nomic> well hey
[00:36:18] <nomic> debugging is sometimes cumbersome in im pdb not programming
[00:36:23] *** Joins: stonkey2 (~stonkey@user/stonkey)
[00:36:28] <BrenBarn> how are you getting the id in pdb without already having the object?
[00:36:42] <nomic> id(object) from the code where it runs
[00:36:50] <nomic> now i have to find where its produced frm
[00:37:01] <nomic> i dont have the ide in pdb
[00:37:12] <nedbat> nomic: you said "go through every object". But you have the object.
[00:37:13] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[00:37:17] <nomic> im outta here
[00:37:18] <nomic> bye
[00:37:21] <BrenBarn> but if you're in pdb, just break wherever it's doing `id(object)`
[00:37:30] <nedbat> bye i guess
[00:38:33] *** Quits: pymelea (~manjaro-i@164.68.127.184) (Quit: leaving)
[00:39:59] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[00:40:15] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:41:29] *** Joins: slav0nic (slav0nic@python.su)
[00:41:44] <nomic> is jst passing wrong surface is all i fixed it
[00:42:58] <bjs> nomic: the `gc` module has a list of every object
[00:43:32] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[00:43:52] <bjs> nomic: but note that the id() of an object can only be used to identify an object if it's alive,  once the object dies another object may be spawned with the same id.  (This doesn't seem to apply in your instance? but it's a caveat I feel required to state everytime regardless)
[00:45:00] <nomic> why doesn't it uses epoch number.. thats eems stupid
[00:45:06] <nomic> 2 have 2 ids possibly the same
[00:45:17] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[00:45:43] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[00:46:10] <nedbat> nomic: pro-tip: when a well-established technology seems stupid, it's good to investigate more to understand the constraints and assumptions it was built under.
[00:46:11] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[00:46:18] <bjs> nomic: because you're misusing the id and then calling it stupid? :P
[00:46:27] <nomic> yeah but epoch number short and unique
[00:46:27] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[00:46:36] <nomic> wow ur callintg me stupid now?
[00:47:00] <nedbat> nomic: no one is calling you stupid
[00:47:31] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[00:48:24] *** Quits: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se) (Ping timeout: 250 seconds)
[00:48:40] <bjs> nomic: Python doesn't really allocate things in "epochs", when you ask for a new object you get a new object.  The id isn't intended to keep track of objects over a long period of time,  it's just there to be a unique id for living objects.
[00:48:48] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[00:49:37] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[00:50:23] <bjs> Infact the chance that you see the same id() appear again is very high,  as generally implementations just choose the id to the memory address of the object and then tries hard to re-use the memory later on rather than continually asking for more
[00:50:25] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[00:50:26] *** Joins: runciter (~runciter@user/runciter)
[00:50:42] *** Quits: Enitin (~Enitin@82.102.22.86) (Remote host closed the connection)
[00:51:01] *** Joins: Enitin (~Enitin@82.102.22.86)
[00:51:08] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[00:51:18] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[00:51:34] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[00:52:20] <nomic> id is mem addres?
[00:52:34] <VaniaPy> hi, i'm splitting a csv with 20 entries in 2 smaller but i see that the entry on the first line appears in both the new files. how can i avoid that? https://bpa.st/PKTA
[00:53:01] <bjs> nomic: Python doesn't say *what* the id is, only that it's unique for living objects.  Using the memory address is one way to do that, and is the way your Python implementation is probably doing it.
[00:53:25] <teut> https://bpa.st/6KVQ  so I was trying this leetcode problem and I need to use lru_cache on that in_BST function  . By default lru_cache takes all parameters in a tuple as key. Won't it be nicer to allow the user to set that since as a user I often pass a set or something as a parameter which mutates but the lru_cache has dependency of a single
[00:53:26] <teut> parameter only?
[00:53:51] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[00:54:01] <teut> to set what parameters should be considered in the key of lru_cache*
[00:54:34] <bjs> teut: it comes up every now and again but generally people are unable to provide compelling enough examples to actually get anyone to change it
[00:54:37] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[00:56:53] <teut> do you have a pep for it?
[00:56:55] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[00:57:04] *** Joins: jdmark (~jdmark@user/jdmark)
[00:57:23] <bjs> teut: I don't recall any discussion actually reaching the "write a PEP" stage
[00:59:03] <bjs> teut: so it's not been rejected as an idea or anything,  just nobody has made a concrete proposal (that i know of) for it to be decided (yet!)
[00:59:14] *** Quits: mharig (~mharig@181.188.139.229) (Ping timeout: 250 seconds)
[00:59:42] <teut> hmm, would it be a good first enhancement to work upon?
[01:00:01] <bjs> teut: most of the work in this kind of proposal would be finding examples
[01:00:32] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd) (Ping timeout: 240 seconds)
[01:00:39] <teut> https://docs.python.org/3/library/heapq.html  Another thing is this heap here which doesn't specifies min or max
[01:01:17] <bjs> teut: what you suggest is pretty clear and obvious in both what it is and how to implement it (although there may be questions over the exact design of the lru_cache function spec) so most of the effort would go into trying to find examples where this would make things better
[01:01:43] <bjs> either making them up or better yet finding examples in real code (stdlib, third-party etc) where they have to "work around" this and do something else.
[01:01:54] *** Joins: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se)
[01:01:55] <bjs> teut: heapq is a min heap
[01:02:05] <teut> whats maxheap then?
[01:02:16] <teut> heapstack?
[01:02:19] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 256 seconds)
[01:02:29] <bjs> teut: no, a max heap is just one where the largest value is at the root
[01:02:34] <bjs> a min heap is one where the smallest value is at the root
[01:02:39] <teut> that I know
[01:02:50] <teut> but there is no option to specify that
[01:03:08] <bjs> teut: well you almost never need to, because if you e.g. use integers for your priorities then you just negate them
[01:03:11] <bjs> and you get a max heap
[01:03:20] <teut> yes I know this trick
[01:03:50] <teut> but I would actually have to use the trick so it complicates the already pesky question
[01:04:04] *** Joins: smrtz (~smrtz@user/smrtz)
[01:04:13] <bjs> teut: revamping the heapq module to have actual MinHeap and MaxHeap classes is also something I recall having come up but nobody actually doing
[01:04:46] <jinsun> VaniaPy: you are adding the first line to each file in line 18-19, don't do that if you don't want that to happen
[01:05:31] <teut> ok
[01:05:58] <bjs> teut: if you were to do it you'd probably find a lot of people would be very happy but there'd be a huge amount of arguing over exactly what the classes should be called :P
[01:06:02] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 240 seconds)
[01:06:10] *** Quits: stonkey2 (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[01:06:24] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.4)
[01:06:48] <teut> '=D  sure, that's what is the big part in an API in a coding language
[01:06:52] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:07:27] *** Quits: Nutte35 (~Nutte@202.153.81.63) (Read error: Connection reset by peer)
[01:07:34] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[01:08:15] *** Joins: Nutte35 (~Nutte@202.153.81.63)
[01:08:24] <teut> actually if we look at other languages  c++ too doesnt has two separate data structures for min and max heap.
[01:08:33] <teut> It just allows us to use comparators
[01:08:50] <teut> and that would be the best
[01:08:50] <parv> .oO ( I wonder if there is a module|package named "bikeshed", given there is|was attr with "attr.(s|ibs)" members & is "typeshed" )
[01:09:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:10:57] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[01:11:39] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[01:13:09] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[01:13:22] <The-Compiler> "Bikeshed is a pre-processor for spec documents, turning a source document (containing only the actual spec content, plus several shorthands for linking to terms and other things) into a final spec document, with appropriate boilerplate, bibliography, indexes, etc all filled in. It's used on specs for CSS and many other W3C working groups, WHATWG, the C++ standards committee, and elsewhere!
[01:13:25] <The-Compiler> TIL :)
[01:13:41] <ammar2> oh wow, because objects can move around in PyPy's memory model, it looks like supporting id() requires them to keep a unique id -> obj mapping around in the GC
[01:13:45] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:14:30] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:14:35] *** Joins: runciter (~runciter@user/runciter)
[01:14:36] <ammar2> goes to show how assumptions like "object is at a fixed place" made long ago can cause effects down the line for others
[01:15:09] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:15:11] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[01:15:13] *** Joins: ITD4004 (~ITD4004@187.61.233.248)
[01:15:27] *** Joins: mickey8 (~user@user/mickey)
[01:15:39] <Yhg1s> Python takes great care not to make those assumptions, though. The implementation is free to produce the result of id() however it likes, it just has to not change or be re-used during an object's life time :)
[01:16:18] <ammar2> eh I mean with people relying on id being stable
[01:16:20] <ammar2> not really
[01:16:22] <ammar2> Hyrum's law and all
[01:16:34] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:16:57] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[01:17:20] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[01:17:34] <Yhg1s> ammar2: it's *defined* (and required) to be stable. Long before PyPy, JPython made it work by having a sequential counter (always or when requested, I dont' remember the details)
[01:17:36] <ammar2> oh sorry I misread, the not-changing assumption is what I'm referring to
[01:17:44] <Yhg1s> it's not an assumption.
[01:18:25] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[01:18:26] <ammar2> right, but it's defined that way because it was convenient for the default implementation to do so, no?
[01:18:59] *** Quits: magla (~gelignite@55d4ed71.access.ecotel.net) (Quit: Stay safe!)
[01:19:33] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[01:19:34] *** Joins: midnite (~human@user/midnightlantern)
[01:19:36] <nedbat> ammar2: wouldn't it be strange for an id() function to return different values at different times for the same object?
[01:19:40] *** Joins: JimmyPx (~JimmyPx@i59F7CFE2.versanet.de)
[01:19:57] <ammar2> nedbat: I think it's strange for an id() function to exist at all ;)
[01:19:58] <Yhg1s> ammar2: _maybe_. But even if that was the case, JPython came along many, many, many years ago, and there has been ample opportunity to change id() _if it wasn't useful_. Clearly it is.
[01:20:16] <Yhg1s> So it's not about that assumption anymore.
[01:20:22] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[01:20:37] <ammar2> right, assumption is the wrong word
[01:20:42] <nedbat> ammar2: it's occasionally useful to have id()
[01:20:50] <nedbat> (it shouldn't be a builtin though)
[01:20:56] <ammar2> convenient for initial implementation -> feature added -> people rely on the feature -> hard to implement in other implementations
[01:20:59] <ammar2> was my line of thought
[01:21:16] *** Quits: JimmyPx (~JimmyPx@i59F7CFE2.versanet.de) (Client Quit)
[01:21:20] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[01:21:23] <Yhg1s> ammar2: plenty of things changed even though they were convenient for people to rely on it.
[01:21:40] <parv> The-Compiler, Lovely!
[01:22:12] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:22:13] <nedbat> ammar2: should we talk about the things id() is good for?
[01:22:28] <ammar2> nedbat: sure, I've mostly used it in introspection tools
[01:22:55] <nedbat> ammar2: the one that comes to mind for me is tracking whether you've seen an object already in a recursive possibly cyclic data structure
[01:23:17] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[01:23:22] <ammar2> Yhg1s: sorry not quite sure I follow, what convenient stuff are you talking about there?
[01:24:07] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:24:33] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:24:39] <ammar2> nedbat: aah yeah, containers are definitely a place where it can be useful
[01:25:45] <Yhg1s> ammar2: well, the one that immediately comes to mind is relying on files closing when the last reference goes away.
[01:25:52] <Yhg1s> ammar2: but there have been others.
[01:26:39] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[01:26:44] <jinsun> why is id still a builtin though? did no one try to move it sys.id or something yet?
[01:27:05] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[01:27:10] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[01:27:19] <Yhg1s> jinsun: why would it? It's not like it's in the way, or a bad idea to use.
[01:28:01] <jinsun> is is annoying to either use id_ because linters complain or configure linters to ignore shadowing of id
[01:28:11] <jinsun> well I guess not annoying enough
[01:28:21] *** Quits: nomic (~nomic@185.217.117.104) (Quit: Leaving)
[01:28:39] <BrenBarn> I do think "real" use of id is niche enough that it could be in some stdlib module rather than as a builtin
[01:29:06] *** Joins: nomic (~nomic@185.217.117.104)
[01:31:11] <Yhg1s> If it were newly added, sure. Breaking anything that uses it isn't worth it. The linter issue is common enough that it needs different treatment -- input, dir, hex are other rarely-used and useful variable/parameter names, for example.
[01:31:55] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:32:57] <The-Compiler> IMHO there should just be no (or almost no) non-namespaced builtins
[01:33:02] *** Quits: l4yer (~l4yer@178.239.168.223) (Ping timeout: 250 seconds)
[01:33:10] <The-Compiler> but that ship has sailed :D
[01:33:17] <BrenBarn> yeah but it could have been moved in py2 to py3 transition
[01:33:35] <Yhg1s> BrenBarn: you don't think Python 3 already broke enough?
[01:33:48] *** Joins: Joss (~joss@user/Joss)
[01:33:56] <BrenBarn> or even just add a less annoyingly short alias like `get_object_id` and then say it's ok for linters to let people use `id`
[01:33:57] <ChrisWarrick> we clearly need a python 4
[01:33:59] <Yhg1s> (Breaking everything willy-nilly was never in the cards, regardless of discussions about whether each individual thing should be moved.)
[01:34:15] <BrenBarn> I mean, there aren't very many
[01:34:15] <VaniaPy> jinsun i removed on line 17 the first element of the csv but it doesn't append any data to the second csv file now:(   https://bpa.st/45SQ
[01:34:20] <BrenBarn> not nearly enough :-)
[01:34:21] *** Quits: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:b511:48dd:fb11:f5c5) (Quit: Leaving)
[01:34:22] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:34:41] <BrenBarn> I'm in favor of breaking things when needed to improve them
[01:34:44] *** Joins: mickey8 (~user@user/mickey)
[01:35:24] <BrenBarn> and once you've made a decision to break things (like the breakages between py2 and py3) I think it's good to take that opportunity to break everything you had felt you shouldn't break before
[01:35:29] <BrenBarn> but wanted to
[01:35:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:35:50] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[01:36:14] <Yhg1s> BrenBarn: yes. That's how we got Python 3. It was not a good idea.
[01:36:39] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:37:02] *** Quits: Csm319_ (~csm3105@static-90-220-24-46.ipcom.comunitel.net) (Ping timeout: 240 seconds)
[01:37:04] *** Joins: parvXirc (~quass@user/parv)
[01:37:27] *** Quits: parvXirc (~quass@user/parv) (Client Quit)
[01:37:28] *** Quits: teut (~teut@2401:4900:1c68:6b85:8d9c:5c88:1fa7:34f3) (Quit: Client closed)
[01:37:49] *** Joins: parvXirc (~quass@user/parv)
[01:37:54] <BrenBarn> I think it was a fine idea
[01:38:57] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[01:38:57] <jinsun> VaniaPy: I was telling to remove the if condition, not to change the stuff in the range
[01:39:25] <VaniaPy> ok
[01:39:29] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[01:39:54] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[01:40:16] *** Joins: ST47 (~ST47@wikimedia/st47)
[01:40:32] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 240 seconds)
[01:40:59] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:41:06] *** Joins: Praise (~Fat@user/praise)
[01:41:25] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[01:41:39] *** Quits: Joss (~joss@user/Joss) (Quit: Leaving.)
[01:43:08] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[01:43:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:44:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:44:27] <VaniaPy> jinsun i removed the if ,but now appends the first element twice in the first file and on time in the second file
[01:45:21] <ITD4004> is there something similar to "memset" in python?
[01:45:29] *** Joins: oriba (~oriba@dynamic-089-012-117-098.89.12.pool.telefonica.de)
[01:45:33] <jinsun> VaniaPy: hmm, show code?
[01:45:42] <Yhg1s> ITD4004: to do what, exactly?
[01:46:08] *** Joins: fikran (~fikran@user/fikran)
[01:46:27] <ITD4004> to make an memory block out of a certain value
[01:46:32] <ITD4004> like 25600
[01:46:39] *** Joins: l4yer (~l4yer@178.239.168.223)
[01:46:41] *** Joins: stonkey (~stonkey@user/stonkey)
[01:46:46] <ITD4004> or 33408
[01:46:51] <Yhg1s> ITD4004: and what kind of object is holding on to that memory block?
[01:47:02] <ITD4004> something like various numbers
[01:47:08] <VaniaPy> jinsun https://bpa.st/ETOQ, and here are the results https://bpa.st/AL3Q https://bpa.st/HMMQ
[01:47:24] <Swayze> https://github.com/MoserMichael/pyasmtool/blob/master/bytecode_disasm.md
[01:47:33] <Swayze> Python bytecode explained
[01:48:32] <jinsun> VaniaPy: ah, I meant remove the entire if block not just that one line, so get rid of the `f.write(next_line[0]) ` too
[01:49:19] <VaniaPy> jinsun right,that one worked! ty!
[01:49:57] <Yhg1s> ITD4004: so, what, a bytestring? a list? a bytearray? something else?
[01:51:02] <ITD4004> bytearray
[01:51:20] <ITD4004> i'm already familiar with lists
[01:52:11] <Yhg1s> ITD4004: okay, then no, not really. You can set all the items to a certain value, but not with something like memset.
[01:52:54] <ITD4004> alright
[01:53:01] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[01:53:10] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[01:53:27] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Client Quit)
[01:53:45] *** Joins: you (~ShmoSeph@c-69-248-83-247.hsd1.nj.comcast.net)
[01:54:42] *** Joins: dre (~dre@2001:8003:c932:c301:2a14:8300:3b99:1684)
[01:54:57] *** Joins: ice9 (~ice9@user/ice9)
[01:55:02] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[01:59:56] *** Joins: Naan (~Naan@user/naan)
[02:03:22] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[02:05:02] *** Quits: Nutte35 (~Nutte@202.153.81.63) (Ping timeout: 240 seconds)
[02:06:00] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[02:06:02] *** Quits: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:06:21] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[02:06:36] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[02:07:01] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:59da:fcd2:abfb:4d1d) (Read error: Connection reset by peer)
[02:08:27] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:09:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:10:38] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:11:39] *** Quits: parvXirc (~quass@user/parv) (Quit: parvXirc)
[02:12:30] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:12:54] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 250 seconds)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:47] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:50] <nedbat> ITD4004: can you tell us what you'd want to do with the result?
[02:18:23] *** Joins: Nutte35 (~Nutte@43.231.30.12)
[02:19:08] <you> Of?
[02:19:57] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:20:40] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[02:20:49] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[02:21:53] *** Quits: midnite (~human@user/midnightlantern) (Quit: later)
[02:22:39] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[02:22:59] <SnoopJ> nedbat, that discussion on your pyenv PR has me wondering if it makes sense for that project to have a formal policy about how those dependencies should be pinned, I was surprised by the notion that what was in place for 3.10.1 would perhaps not be okay for 3.10.2
[02:24:05] *** Joins: KvL (~KvL@user/KvL)
[02:25:42] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:27:51] *** Joins: autopsy (~androirc@172.58.19.2)
[02:29:22] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Ping timeout: 250 seconds)
[02:29:22] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:b0b1:34c8:dbe5:b46b) (Ping timeout: 250 seconds)
[02:33:23] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:35:03] *** Joins: blindgaenger (~blindgaen@2a02:8108:473f:faf4:9505:a2e5:bee2:f25b)
[02:35:32] *** Joins: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net)
[02:35:38] *** Quits: blindgaenger (~blindgaen@2a02:8108:473f:faf4:9505:a2e5:bee2:f25b) (Remote host closed the connection)
[02:35:45] *** Joins: elwood__ (~elwoodpd@host-92-8-65-11.as13285.net)
[02:36:07] *** Quits: elwood__ (~elwoodpd@host-92-8-65-11.as13285.net) (Client Quit)
[02:36:35] <elwoodpd> this seems like a simple question but what is the recomended way to parse a simple xml file these days
[02:37:00] <matsaman> the best way is to find the JSON version of it instead =)
[02:37:30] <matsaman> but you can parse xml with only stdlib tools or popular 3rd party libs
[02:37:51] <elwoodpd> don't think there is going to be a json version
[02:38:01] <matsaman> horrifying
[02:38:22] <grym> elwoodpd: lxml is still the tool
[02:38:35] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Remote host closed the connection)
[02:38:50] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[02:38:54] <matsaman> it's really not much harder with 'xml' if you don't want to add a dep, though; not a big deal either way IMO
[02:38:55] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[02:39:32] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[02:39:32] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:39:39] *** Quits: n0cturna1 (~n0cturna1@94-214-14-33.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[02:41:29] <ba> elwoodpd: I tend to use lxml or https://docs.python.org/3/library/xml.etree.elementtree.html
[02:42:23] <SnoopJ> lxml +1
[02:43:02] *** Quits: you (~ShmoSeph@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:43:49] <ba> Always lxml for HTML parsing, at least. More recently I've been using `xml.etree.ElementTree` for XML docs as it's built in to Python and seems fine?
[02:43:52] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[02:43:58] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:fbe6:bedc:33e6:efeb)
[02:44:02] *** Joins: bjs2 (~bjs2@cpc91196-cmbg18-2-0-cust97.5-4.cable.virginm.net)
[02:44:06] <ba> Haven't needed to reach for lxml in a while.
[02:44:14] *** Parts: bjs2 (~bjs2@cpc91196-cmbg18-2-0-cust97.5-4.cable.virginm.net) ()
[02:44:30] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[02:45:02] <elwoodpd> cheers all
[02:46:23] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[02:46:25] <SnoopJ> ba, it's a little slow and I think lxml supports more of XPath, but lxml deliberately copies the etree API so it's easy to go between the two
[02:46:44] *** Joins: nomad1 (~nomad@user/spacenomad)
[02:46:48] <ba> SnoopJ: gotcha, thanks
[02:47:02] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[02:47:16] <SnoopJ> n.b. that not all browser-acceptable HTML will be valid XML, though, so if you use it for HTML you need to understand that there's an implicit assumption that your documents will be well-formed
[02:47:39] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[02:47:59] *** Joins: runciter (~runciter@user/runciter)
[02:48:05] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:48:39] <nedbat> SnoopJ: i definitely don't understand how to assess those dependencies.  btw, sorry to step on your PR
[02:49:16] <SnoopJ> that's alright, I let the chatter about dependencies sit in my inbox for a few days anyway :)
[02:50:01] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:50:02] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[02:50:24] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[02:50:25] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[02:50:55] *** Quits: Lojas (~Lojas@user/Lojas) (Quit: Going offline, see ya! (www.adiirc.com))
[02:50:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:51:02] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[02:51:40] *** Joins: Guest10 (~Guest10@93-50-90-162.ip151.fastwebnet.it)
[02:52:02] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 240 seconds)
[02:52:32] *** Joins: AndroUser2 (~androirc@98.186.217.32)
[02:52:32] *** Quits: autopsy (~androirc@172.58.19.2) (Read error: Connection reset by peer)
[02:52:37] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[02:53:02] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[02:55:17] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[02:56:45] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:56:54] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:59:02] *** Quits: AndroUser2 (~androirc@98.186.217.32) (Ping timeout: 240 seconds)
[02:59:17] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[02:59:35] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-5dd7-8e71-50db-65dc.res6.spectrum.com)
[03:00:30] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[03:01:20] *** Parts: Guest10 (~Guest10@93-50-90-162.ip151.fastwebnet.it) ()
[03:01:52] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[03:03:16] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:04:43] *** Quits: cosimone (~user@93-47-231-31.ip115.fastwebnet.it) (Ping timeout: 256 seconds)
[03:05:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-29d9-0277-7525-223b.res6.spectrum.com)
[03:05:57] *** Joins: korg815 (~korg815@user/korg815)
[03:08:17] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:09:14] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:12:13] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:12:49] <foo> I'm trying to associate a polygot to data which is referenced in a GIS way. Some data has a polygot associated with it, some doesn't. I can A) add "area" column to a table to use GeoAlchemy 2 or B) create a table called Area (polygot) and create a FK between the data and the area. Any specific reasoning on one versus the other?
[03:13:05] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:13:05] *** Quits: hightower2 (~hightower@212.15.178.16) (Read error: Connection reset by peer)
[03:14:52] *** Joins: constxd_ (~brad@142.167.170.88)
[03:16:13] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:18:16] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:18:22] *** Joins: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c)
[03:18:23] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:19:42] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:20:08] <nedbat> foo: do you mean polygon?
[03:20:10] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:20:16] <foo> nedbat: whoops, yes.
[03:20:27] <foo> nedbat: thanks for reading my mind.
[03:20:31] <nedbat> foo: other than that, i have nothing to contribute :)
[03:20:35] <foo> nedbat: haha.
[03:20:36] <foo> :)
[03:20:44] *** Quits: Phase (~phase@user/phase) (Read error: Connection reset by peer)
[03:20:56] *** Quits: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com) (Ping timeout: 250 seconds)
[03:20:58] <foo> We're likely going to just add a column to the table, creating another table might make sense if we had multiple tables referencing it... we don't
[03:21:36] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[03:22:40] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 250 seconds)
[03:22:53] <SnoopJ> foo, a separate table might more sense if there could be more than one such polygon, but if an additional column fits your domain I don't think there's any reason to avoid it
[03:23:20] <SnoopJ> might make* more sense
[03:23:34] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[03:23:48] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[03:24:09] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[03:24:28] <SnoopJ> I'd say the column approach more strongly couples the two forms of data, which may or may-not be desirable :)
[03:25:42] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:e983:cad7:582e:2dfe) (Ping timeout: 250 seconds)
[03:25:46] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[03:26:08] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[03:28:24] *** Joins: Denver (~Denver@174-16-83-85.hlrn.qwest.net)
[03:28:45] *** Parts: Denver (~Denver@174-16-83-85.hlrn.qwest.net) ()
[03:28:50] *** karlnashville is now known as karl_AFK
[03:29:08] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:29:56] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[03:30:14] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:38] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:02] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[03:31:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:32:02] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[03:32:14] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[03:32:24] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[03:32:29] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[03:32:34] *** Quits: Esteri (Esteri@gateway/vpn/protonvpn/esteri) (Quit: Esteri Libera)
[03:34:30] *** Joins: walterwhip (~www@user/walterwhip)
[03:35:32] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[03:35:38] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:36:08] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Client Quit)
[03:38:37] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[03:41:18] *** Quits: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se) (Ping timeout: 250 seconds)
[03:41:56] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[03:42:42] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[03:45:44] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:46:04] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[03:46:32] *** Quits: marcello42 (~mp@2001:1a81:13b0:8300:40f1:59b9:1fcf:dec9) (Ping timeout: 240 seconds)
[03:48:27] *** Joins: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se)
[03:48:33] *** Quits: gry (gry@botters/gry) (Quit: Lost terminal)
[03:48:41] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[03:49:05] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[03:49:37] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:51:37] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:53:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:54:23] *** Joins: Soni (~quassel@autistic.space)
[03:55:29] *** Joins: fikran (~fikran@user/fikran)
[03:58:38] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[03:59:52] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[04:01:20] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[04:02:41] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:03:05] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[04:03:23] *** Joins: smrtz (~smrtz@user/smrtz)
[04:03:24] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 250 seconds)
[04:03:27] *** Quits: runciter (~runciter@user/runciter) (Quit: Leaving)
[04:04:13] *** Quits: grimvar (~grimvar@i5C75F583.versanet.de) (Ping timeout: 240 seconds)
[04:06:02] *** Quits: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net) (Ping timeout: 240 seconds)
[04:06:17] *** Joins: grimvar (~grimvar@i5C75F741.versanet.de)
[04:06:26] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 250 seconds)
[04:06:43] *** Joins: millido (~millido@84.210.150.128)
[04:07:12] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:08:35] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[04:08:44] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:09:31] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:09:41] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[04:09:58] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (Quit: WeeChat 2.9)
[04:11:28] *** Joins: Guest_119 (~Guest_119@bras-base-kntaon1614w-grc-38-76-71-23-60.dsl.bell.ca)
[04:12:30] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[04:12:53] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[04:13:11] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[04:13:12] *** Joins: bailsman (~Mm1@xls01.freecult.org)
[04:13:17] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 256 seconds)
[04:13:22] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 250 seconds)
[04:13:47] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[04:14:06] *** Joins: millido (~millido@84.210.150.128)
[04:14:38] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:15:09] *** Joins: Astara (~skraito@user/skraito)
[04:15:25] *** Quits: Astara (~skraito@user/skraito) (K-Lined)
[04:15:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[04:16:46] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[04:17:15] *** Quits: slisnake0 (~slisnake@82.102.25.12) (Ping timeout: 256 seconds)
[04:18:34] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (Ping timeout: 268 seconds)
[04:18:50] *** Joins: crashrep (~crashrep@user/crashrep)
[04:18:53] *** Joins: slisnake0 (~slisnake@82.102.25.13)
[04:19:02] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:19:17] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[04:19:26] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[04:19:31] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[04:19:52] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[04:20:02] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[04:20:17] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[04:20:30] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[04:21:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[04:21:08] *** Joins: Wulf (~Wulf@user/wulf)
[04:23:29] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[04:25:27] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[04:25:48] <xheimlich> this is a numpy question but a pandas-based answer is also useful.
[04:25:49] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:26:23] *** Joins: kaiseisei (~Thunderbi@171.116.100.151)
[04:26:52] <xheimlich> let A be a ndarray with shape (n,c) and f be a function that takes ndarrays shaped like (n,) to ndarrays shaped like (m,)
[04:28:01] *** Quits: ham5urg (~ham5urg@84.46.41.85.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 256 seconds)
[04:28:32] <xheimlich> is there an idiomatic way to apply a function to columns of A that's equivalent to -- B = np.empty(A.shape); for col in range(c): B[:,col]=f(A[:,col])?
[04:29:30] <Repiphany> Do you have an example of function f
[04:29:34] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[04:29:54] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Client Quit)
[04:30:18] *** Quits: XV8 (~XV8@2601:5cb:c001:50:74f2:29a5:c6ca:a36e) (Quit: Textual IRC Client: www.textualapp.com)
[04:30:36] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:35a0:e4d2:2738:3a6) (Remote host closed the connection)
[04:32:11] *** Joins: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:97cc:fbb2:f76a:9efe)
[04:32:29] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:32:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:33:53] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:33:53] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:33:59] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:e326:3af1:9e3c:cc13)
[04:34:40] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:34:43] *** Joins: brabrax (~brabrax@user/brabrax)
[04:36:58] *** Joins: califax (~califax@user/califx)
[04:37:00] <kungp_> tkinter+pyplot question here
[04:37:02] <kungp_> https://bpa.st/B5VQ
[04:37:20] *** Joins: llh (~llh@user/llh)
[04:37:45] <kungp_> so the functionality is fine, and when i use it with random values like that everything is perfect
[04:38:34] <kungp_> but when i use the commented out version of the data_gen function, that gets the data from the calling script, the plot flickers when redrawing. i don't understand how there's a difference..
[04:39:54] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:40:43] <kungp_> oh, nevermind... apparently i had to yield in a loop
[04:41:07] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1d13-cde8-80a7-543f.res6.spectrum.com) (Read error: Connection reset by peer)
[04:43:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:43:14] *** Quits: CRUNK-b0t (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[04:43:20] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[04:43:45] *** Joins: Celeo (~Celeo@user/celeo)
[04:44:11] *** Joins: Sora (~Guest@user/sora)
[04:44:13] <Sora> hi there
[04:44:26] <Sora> https://docs.python.org/3/library/random.html how many possible random seeds are there?
[04:44:53] <Sora> > If a is omitted or None, the current system time is used. If randomness sources are provided by the operating system, they are used instead of the system time (see the os.urandom() function for details on availability).
[04:46:50] <Sora> assume say, a secure token has been generated inproperly using the first example here: https://stackoverflow.com/a/2257449/9665729
[04:46:59] <nedbat> Sora: there are many many possible seeds. idk how much information is used from them, which is the important question
[04:47:10] *** Quits: slisnake0 (~slisnake@82.102.25.13) (Ping timeout: 250 seconds)
[04:47:10] <InPhase> Sora: From the docs it sounds like they are using the my19937ar variant of Mersenne Twister which can take up to 2496 bytes worth of seed data.
[04:47:19] <Sora> it can take up to that, yes
[04:47:25] <Sora> but assume the programmer has copy pasted that stack overflow answer
[04:47:36] <Sora> the seed is set by the system
[04:47:45] *** Quits: Guest_119 (~Guest_119@bras-base-kntaon1614w-grc-38-76-71-23-60.dsl.bell.ca) (Quit: Client closed)
[04:48:11] <Sora> i wish to try all possible tokens, what is the space of possible seeds? in c# this would be int32 for example
[04:48:41] *** Joins: _SKiTZO (~dark@64.89-10-146.nextgentel.com)
[04:49:15] *** Joins: slisnake0 (~slisnake@82.102.25.14)
[04:49:40] <InPhase> Sora: Well it seems it will be platform dependent.  Current time will probably be implemented with the highest precision clock available.  The docs don't specify the number of OS random values that will be used by default, but I would assume enough that you will likely not repeat a seed.
[04:50:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[04:50:06] <InPhase> It does not take a lot of data to guarantee that with very high confidence.
[04:50:11] <Sora> https://github.com/python/cpython/blob/3.10/Lib/random.py#L824
[04:50:20] <Sora> urandom(7) is what, 7 bytes?
[04:50:29] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[04:50:34] <Sora> so 256^7 possible seeds on linux
[04:51:10] <Sora> but it's rsh 3, so 4 bytes used? ie int32
[04:53:05] <Sora> https://docs.python.org/3/library/stdtypes.html#int.from_bytes
[04:53:50] *** Quits: oriba (~oriba@dynamic-089-012-117-098.89.12.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:54:14] <Sora> if a naive developer were to copy paste that code to generate secure tokens of length n, there would only be 4 billion tokens possible?
[04:54:16] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[04:54:17] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[04:54:17] *** Joins: hams (~hams@user/hams)
[04:54:29] *** Quits: jbeimler (~quassel@75.183.82.166) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:54:37] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[04:55:58] <InPhase> Where do you get the 4 bytes idea from?  Looks like 7 to me.
[04:56:07] <Sora> 7 bytes rsh 3
[04:56:11] <Sora> loses the latter 3 bytes
[04:56:52] <Sora> also max size of int32 is 4 bytes regardless
[04:57:12] <InPhase> That's 3 bits.
[04:57:20] <Sora> oh, you're right
[04:57:27] <InPhase> Which is almost the same.  I'm not sure why they do the shift, but it's small.
[04:57:48] <Sora> and int.from_bytes() doesn't have a range of 0 to 2^32?
[04:57:51] <Sora> or is it int64?
[04:58:10] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[04:58:28] <InPhase> Try this test:  print(int.from_bytes(urandom(24), 'big'))
[04:58:48] <InPhase> With from os import urandom
[04:58:51] *** Joins: barry1 (~Thunderbi@2408:8207:186a:c850:a99e:1f0c:b0df:626a)
[04:58:58] *** Joins: montyboy (uid333652@id-333652.tinside.irccloud.com)
[04:58:59] <Sora> ah yes, you are right
[04:59:02] <Sora> that is unfortunate, then
[04:59:24] <InPhase> If you want certain requirements on the seed, it's best to specify it manually.
[04:59:46] <Sora> I am vulnerability hunting. :P
[05:00:10] <InPhase> Ah.
[05:00:55] <InPhase> Well that's a bad thing to use when vulnerabilities are possible anyway.
[05:01:21] <InPhase> Using the system clock as a once-off for a seed for is a classic security blunder.
[05:01:28] <InPhase> Turns out the clock is mostly a known value.  :)
[05:01:37] <Sora> I think with this implementation it wouldn't matter even if the seed was 32 bit
[05:01:46] <Sora> because it's not using a random.next()
[05:02:22] *** Joins: driib20 (~driib@185.65.135.253)
[05:02:35] <Sora> yeah seed isn't used so this was a waste of time to even look into
[05:02:37] <Sora> thanks anyway!
[05:02:39] *** Quits: esv_ (~esv@74.124.178.154) (Quit: Leaving)
[05:03:08] *** Joins: esv (~esv@74.124.178.154)
[05:03:26] <kungp_> will it ever use the system time though? all oses have better randomness generators no?
[05:03:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-29d9-0277-7525-223b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:04:03] <InPhase> kungp_: Well it says in the docs it sometimes does.  But if you are writing code that depends on it doing so, you might as well be explicit in using those sources.
[05:04:07] *** Quits: driib2 (~driib@185.195.233.151) (Ping timeout: 256 seconds)
[05:04:07] *** driib20 is now known as driib2
[05:04:18] <twainwek> does list[a:b] return a new list or a generator
[05:04:19] <InPhase> kungp_: I concur most systems it would matter on wouldn't have this problem.
[05:04:39] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:04:51] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 256 seconds)
[05:04:59] <InPhase> kungp_: Such mistakes though are how security holes can linger for a decade in forgotten code and then emerge in a different context.
[05:05:12] <kungp_> twainwek: new list. it's not a deep copy though
[05:05:25] <kungp_> InPhase very true
[05:07:02] *** Joins: matsaman (~matsaman@user/matsaman)
[05:07:04] *** Joins: millido (~millido@84.210.150.128)
[05:08:39] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:09:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[05:09:35] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[05:09:38] *** Joins: walterwhip (~www@user/walterwhip)
[05:10:19] *** Quits: esv (~esv@74.124.178.154) (Quit: Leaving)
[05:10:21] *** Joins: zebrag (~chris@user/zebrag)
[05:10:36] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[05:12:13] *** Quits: nunggu (~q@user/nunggu) (Quit: nunggu)
[05:15:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[05:16:38] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[05:16:53] *** Joins: yac_ (~user@user/yac)
[05:18:27] *** Quits: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se) (Ping timeout: 256 seconds)
[05:18:48] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[05:19:18] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[05:21:51] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[05:22:01] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[05:22:49] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:23:33] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[05:23:52] *** Joins: H4Z3 (~H4ZE@165.227.36.29)
[05:24:43] *** Joins: _slate_ (~slate@159.69.26.92)
[05:25:04] <_slate_> can anyone suggest tools to debug a running python process?
[05:25:24] <_slate_> like read variables values etc
[05:25:25] <xheimlich> Repiphany: real example: from scipy.signal import periodogram; f = lambda timeseries: periodogram(timeseries)[1]
[05:25:32] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:28:20] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[05:28:58] <SnoopJ> _slate_, I like pudb for debugging during development, and gdb can be pretty useful if your Python provides debug symbols
[05:29:01] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:29:51] <_slate_> yeah i have a server that starts some threaded work when it receives a request and i dont know why it keeps getting stuck
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:26] <_slate_> im gonna take a look at pudb, can it read from a currently running process yeah?
[05:30:48] *** Joins: et_ (~et@user/et)
[05:30:56] *** Quits: h_ (rootvegeta@fsf/member/hays) ()
[05:31:32] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[05:31:32] *** et_ is now known as et
[05:31:53] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-105.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:32:07] <SnoopJ> Yes, I usually enter my debug sessions that way with breakpoint() in the program itself. It won't be very useful in a production-process-that-is-not-debug-aware context
[05:32:18] <_slate_> yer
[05:32:22] <_slate_> yeah
[05:32:34] <SnoopJ> That's where you'd want to take advantage of gdb and the extensions that let you examine the state of the runtime (assuming this is CPython, anyway)
[05:32:48] <_slate_> thats what i need tho because my problem is, that for some reason the server never finishes some jobs and then gets stuck
[05:33:06] <_slate_> there was pyrasite for this but it doesnt seem to be maintained anymore and is broken too
[05:33:09] <SnoopJ> okay, I wasn't sure which of those two contexts you were thinking of
[05:33:22] <_slate_> yeah i need to hack into the running python process
[05:33:32] <_slate_> and read the value of a couple variables to find out where the problem might be
[05:33:32] *** Joins: hays (rootvegeta@fsf/member/hays)
[05:33:45] *** Quits: someuser (~user@197.54.16.50) (Ping timeout: 256 seconds)
[05:33:51] <_slate_> so sad pyrasite is unmaintained now
[05:33:54] <_slate_> it was the perfect tool
[05:34:59] <SnoopJ> I hadn't realized it died, that's a shame. Never even really took it for a spin, but remember thinking it looked neat.
[05:37:07] *** Joins: califax- (~califax@user/califx)
[05:37:13] *** Joins: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se)
[05:37:22] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[05:37:58] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[05:38:36] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[05:39:32] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:39:40] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[05:39:54] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:39:55] *** califax- is now known as califax
[05:39:55] *** Joins: brabrax (~brabrax@user/brabrax)
[05:41:15] <_slate_> i just cant find a similar tool
[05:41:37] <_slate_> i guess im gonna have to go look through the whole code
[05:43:25] <SnoopJ> gdb isn't a very glamorous tool, but I can attest to its effectiveness if you're able to get into the mindset it requires
[05:44:32] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:44:43] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[05:44:58] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:45:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-29d9-0277-7525-223b.res6.spectrum.com)
[05:45:14] *** Joins: foozle (~foozle@2001-b011-c040-5c74-123a-2936-e0e6-5160.dynamic-ip6.hinet.net)
[05:45:48] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[05:45:57] *** Quits: barry1 (~Thunderbi@2408:8207:186a:c850:a99e:1f0c:b0df:626a) (Quit: barry1)
[05:46:26] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:46:44] *** Quits: foozle (~foozle@2001-b011-c040-5c74-123a-2936-e0e6-5160.dynamic-ip6.hinet.net) (Remote host closed the connection)
[05:46:47] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[05:47:11] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[05:47:38] *** Joins: KvL (~KvL@user/KvL)
[05:49:22] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[05:49:37] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[05:50:00] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[05:51:35] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[05:53:35] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:53:57] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[05:58:46] *** Joins: walterwhip (~www@user/walterwhip)
[06:01:45] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:02:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[06:03:04] *** Quits: subopt (~subopt@2603-8081-2302-459a-0982-65a9-00b6-247e.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:04:50] *** Joins: fikran (~fikran@user/fikran)
[06:05:10] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 250 seconds)
[06:05:32] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[06:06:29] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[06:06:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:47eb:8d98:191c:cbbb)
[06:06:34] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[06:07:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[06:08:31] *** Joins: Astara (~skraito@user/skraito)
[06:08:45] *** Quits: Astara (~skraito@user/skraito) (K-Lined)
[06:12:34] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:13:02] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 240 seconds)
[06:13:46] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:14:58] *** Joins: KvL (~KvL@user/KvL)
[06:18:26] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[06:19:52] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (Quit: WeeChat 2.9)
[06:20:16] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:26:32] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:28:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:30:37] *** Quits: xizhendu_ (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 240 seconds)
[06:31:01] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:19] *** Quits: junebug (~junebug@2600:1700:3db0:2540:47eb:8d98:191c:cbbb) (Remote host closed the connection)
[06:31:27] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:23] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7236:29f5:ad13:7e19)
[06:34:37] *** Quits: yac (~user@user/yac) (Ping timeout: 240 seconds)
[06:34:47] *** Quits: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:57] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[06:35:09] *** Joins: yac (~user@user/yac)
[06:35:30] *** Quits: nomic (~nomic@185.217.117.104) (Quit: Leaving)
[06:38:11] *** Quits: sysadmin98 (~sysadmin9@pool-108-6-169-68.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[06:40:15] <_SKiTZO> What is a way to load a text file that is in same folder as my python script that works both in a normal folder but also when the files are inside a package?
[06:40:50] <_SKiTZO> on 3.7+
[06:40:55] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[06:41:44] <SnoopJ> _SKiTZO, you can make the file part of the package data and use importlib.resources
[06:43:18] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:43:24] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[06:43:41] *** Joins: KnowledgeShark (~Knowledge@50.34.206.168)
[06:44:36] <KnowledgeShark> Hello everyone! I am a newbie Python coder and am hooked! My duties, responsibilities and learning curves require mastery. I hope to annoy everyone in here with useful questions and sharing my progress of my journey. :)
[06:46:12] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[06:46:26] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[06:47:02] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[06:47:03] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:50:20] *** Joins: kingofcsu (~kingofcsu@114.249.133.203)
[06:50:39] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[06:52:02] <nedbat> KnowledgeShark: welcome! we can help. i hope that you don't hope to annoy :)
[06:55:21] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[06:57:22] <KnowledgeShark> nedbat: Thank you! Glad to read ^_^
[06:58:02] <KnowledgeShark> looking forward to getting to know people around here!
[06:58:02] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[06:58:26] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[06:58:41] *** Joins: ham5urg (~ham5urg@84.46.41.85.dynamic-pppoe.dt.ipv4.wtnet.de)
[06:59:16] <_SKiTZO> KnowledgeShark, welcome to the vibrant community that is #python on libera chat! We are always here to help! Enjoy your stay!
[07:01:28] *** Quits: rje (~textual@50.35.241.164) (Read error: Connection reset by peer)
[07:01:33] *** Joins: rje_ (~textual@50.35.241.164)
[07:01:36] <KnowledgeShark> _SKiTZO: Appreciate the warm welcome!
[07:02:59] *** Joins: xx (~xx@user/xx)
[07:03:50] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[07:04:56] *** Joins: twb (~twb@2403-5804-c6--cfeb-44f7-7895-9800.ip6.aussiebb.net)
[07:05:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[07:06:15] *** Parts: optimant (~asavage@user/optimant) (WeeChat 3.2.1)
[07:07:13] <twb> OK so I want to write a new rpc.quotad client in python, because I have a few problems with the C version (e.g. it's UDP; I want TCP).  I know a little socket.connect-level networking, and I know a little CFFI.  But I'm not sure where I should be looking to understand how to actually construct rcp.quotad packets
[07:07:21] <twb> *rpc.rquotad
[07:07:37] <twb> There's a rpcsvc/rquotad.h in glibc...
[07:08:10] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:09:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-5dd7-8e71-50db-65dc.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:12:38] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[07:12:39] <twb> https://cyber.com.au/~twb/tmp/tmp.pcap is the entire conversation I want to implement (I'm the client side)
[07:13:41] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[07:13:53] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[07:15:07] *** Joins: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[07:15:25] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[07:16:21] *** Joins: adeliktas6 (~adeliktas@i59F4A597.versanet.de)
[07:16:52] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:18:01] *** Quits: adeliktas (~adeliktas@i59F52DAD.versanet.de) (Ping timeout: 256 seconds)
[07:18:01] *** adeliktas6 is now known as adeliktas
[07:18:24] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[07:22:43] *** Joins: jazzy (~jaziz@user/jaziz)
[07:23:22] *** Joins: \mSg (mSg@user/msg/x-0285936)
[07:23:27] *** Joins: vanessa (~annada@103.160.128.7)
[07:24:38] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:25:25] *** Joins: walterwhip (~www@user/walterwhip)
[07:28:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:30:13] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:32:36] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:40] <vanessa> why doesn't perldoc not obey my enviroment variables. perldoc defaults to 'more' unless I specify something like `PAGER=less perldoc perlre`
[07:34:42] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[07:35:13] <vanessa> sorry wrong chat window :(
[07:35:18] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 250 seconds)
[07:35:24] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Client Quit)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:30] *** Joins: millido (~millido@84.210.150.128)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:37:57] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[07:38:27] <twb> Surely PAGER *is* an environment variable
[07:38:34] <twb> Did you forget to export it?
[07:38:52] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[07:39:07] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[07:39:23] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[07:44:24] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 250 seconds)
[07:46:36] *** Joins: parv (~quass@user/parv)
[07:46:36] *** Joins: frost (~frost@user/frost)
[07:46:42] *** Joins: saroy (~Sandipan@43.252.250.86)
[07:48:29] <vanessa> twb: yeah I had forgotten to export it. :]
[07:48:30] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:48:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7236:29f5:ad13:7e19) (Ping timeout: 240 seconds)
[07:49:06] *** karl_AFK is now known as karlnashville
[07:49:13] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[07:49:15] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:506e:821:1232:2e80)
[07:49:15] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:506e:821:1232:2e80) (Changing host)
[07:49:15] *** Joins: skapata (~Skapata@user/skapata)
[07:49:20] *** Joins: millido (~millido@84.210.150.128)
[07:49:24] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:fbe6:bedc:33e6:efeb) (Remote host closed the connection)
[07:49:44] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[07:50:41] *** Joins: seednode99 (~seednode@user/seednode)
[07:51:26] *** saroy is now known as bytehackr
[07:52:06] <xheimlich> joblib.Parallel is great, but it's also a roundabout way of doing what in matlab was achieved by replacing "for" for "parfor".
[07:52:09] <xheimlich> But instead of making parallelism with first class syntax, nooo.
[07:52:25] *** Quits: haps (~haps@hyena.haps.ca) (Ping timeout: 256 seconds)
[07:52:25] *** Quits: jamwil_ (~jamwil@user/jamwil) (Ping timeout: 256 seconds)
[07:52:59] *** Quits: pankid (~quassel@pankid.club) (Ping timeout: 256 seconds)
[07:53:35] *** Joins: pankid (~quassel@pankid.club)
[07:53:53] *** Joins: jamwil (~jamwil@user/jamwil)
[07:53:58] *** Joins: haps (~haps@hyena.haps.ca)
[07:55:59] <SnoopJ> MATLAB is *slightly* less generalist than Python is
[07:56:38] *** Joins: soun (~soun@49.37.47.11)
[07:56:47] *** Quits: kingofcsu (~kingofcsu@114.249.133.203) (Quit: kingofcsu)
[07:57:32] <InPhase> "slightly" not *slightly*
[08:00:21] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 256 seconds)
[08:00:34] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[08:01:08] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[08:01:26] *** Joins: djapo (~archangel@user/djapo)
[08:01:27] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[08:01:47] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[08:02:42] <xheimlich> Matlab's syntax for OO is perfectly cromulent. It also makes fast code slow as ass.
[08:03:04] <xheimlich> anyway, if concurrency deserves some love...
[08:03:30] <xheimlich> and Python's place in the spotlight is all due to machine learning and data science.
[08:04:04] *** Joins: saroy (~Sandipan@43.252.250.86)
[08:08:21] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:09:35] <SnoopJ> xheimlich, do you have a question about parallel computation in Python?
[08:10:18] *** Quits: yac_ (~user@user/yac) (Remote host closed the connection)
[08:10:18] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[08:12:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:12:13] *** Quits: sreve (~quassel@p54a704b4.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:12:40] *** Joins: audiobirb (~audio@user/audio)
[08:12:58] *** Joins: sreve (~quassel@p4ff44efb.dip0.t-ipconnect.de)
[08:13:21] *** Joins: Jong (~Jong@2620:10d:c090:400::5:44d9)
[08:13:24] <xheimlich> many functions (including joblib.Parallel but also much of scikit-learn and other scientific packages) have n_jobs parameters, where n_jobs = -1 means "use all processors".
[08:13:44] <xheimlich> is it sufficient to just say n_jobs = -1 for everything, or should I "budget" processors?
[08:13:57] <xheimlich> (I realize processors/cores/etc. is sort of abstract nowadays)
[08:14:11] *** Joins: fikran (~fikran@user/fikran)
[08:14:16] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:15:04] *** Joins: ElPresidenteP (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[08:15:07] *** Quits: ElPresidenteP (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[08:16:13] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[08:17:08] <SnoopJ> It depends on what you're doing, really, and how much of available resources you want to soak up. There are workloads that will benefit greatly from distribution across many cores (especially embarrassingly parallel ones) and some that will be a disaster if divided.
[08:17:14] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[08:19:02] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[08:19:18] *** Joins: Phase (~phase@user/phase)
[08:19:46] *** Joins: bluedust (~bluedust@117.207.235.4)
[08:22:27] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[08:25:19] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[08:25:45] *** Joins: yac (~user@user/yac)
[08:26:55] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[08:27:01] *** Quits: kujo (~kujo@188.166.12.52) (Ping timeout: 240 seconds)
[08:28:10] *** Joins: kujo (~kujo@188.166.12.52)
[08:28:40] *** Joins: panella32 (~panella32@180.149.246.206)
[08:29:12] *** Joins: ham5urg_ (~ham5urg@149.233.170.98.dynamic-pppoe.dt.ipv4.wtnet.de)
[08:31:04] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[08:32:05] *** Quits: ham5urg (~ham5urg@84.46.41.85.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 256 seconds)
[08:32:35] <twb> FTR I gave up
[08:33:14] <twb> I'll just keep running NFSv3 UDP-only quota sideband client, not being able to test it in guestfwd VMs, &c &c
[08:33:43] <twb> I got as far as clnt = tirpc.clnt_create(b'PrisonPC', RQUOTAPROG, EXT_RQUOTAVERS, b'tcp')
[08:33:52] <twb> ...which hangs because it's still trying to do UDP to portmapper
[08:35:55] *** Joins: djapo (~archangel@user/djapo)
[08:36:28] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:36:28] *** Quits: u0_a416 (~u0_a416@120.20.41.150) (Read error: Connection reset by peer)
[08:37:20] *** Quits: panella32 (~panella32@180.149.246.206) (Quit: Textual IRC Client: www.textualapp.com)
[08:37:35] *** Joins: u0_a416 (~xxNightxO@120.20.41.150)
[08:39:28] *** Joins: pagnol (~user@014198154145.ctinets.com)
[08:40:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:45:22] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[08:46:00] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[08:46:06] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Quit: Leaving)
[08:48:25] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[08:52:17] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1561:687a:91e0:753e) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[08:52:32] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[08:54:00] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[08:55:28] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 250 seconds)
[08:57:54] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[08:59:11] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:59:22] *** Joins: zmt01 (~zmt00@user/zmt00)
[09:01:49] *** Joins: walterwhip (~www@user/walterwhip)
[09:02:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[09:03:22] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[09:03:26] *** Joins: nicko (~iClass@221.236.54.48)
[09:04:33] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[09:05:43] *** Quits: nicko (~iClass@221.236.54.48) (Client Quit)
[09:07:37] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[09:13:47] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:15:50] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 250 seconds)
[09:17:37] *** Joins: analoq (~yashi@user/dies)
[09:17:49] <grawity> twb: hmm I think the portmapper is always UDP, isn't it?
[09:17:57] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:dc64:3ab8:7f09:81e5)
[09:18:15] <twb> grawity: "rpcinfo -p" says portmapper is listening on tcp
[09:18:22] <twb> so >gallic shrug<
[09:18:26] <grawity> you could roll your own packets with python's xdrlib, but I guess that's a bit too manual
[09:18:30] *** Quits: montyboy (uid333652@id-333652.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:18:39] <grawity> I tried implementing an LDAP-backed ypserv that way
[09:18:44] <pagnol> Normally when you have an instance of some class and you do obj.attr, then you don't know if attr is an attribute of the instance or the class, right? Is there a way to return None or raise an Exception, if there is no instance attribute?
[09:19:06] <twb> grawity: what *really* shits me is that NFSv4 actually provides quota calls in-band on the single-port 2049/tcp
[09:19:19] <grawity> ok so use nfsv4
[09:19:19] <pagnol> I mean the value you get, you don't know if it's actually from the instance
[09:19:24] <twb> grawity: but Linux just has not implemented that "SHOULD" part of RFC 3010
[09:19:29] *** Joins: yac_ (~user@user/yac)
[09:19:48] *** Joins: yac__ (~user@user/yac)
[09:19:56] <grawity> pagnol: I'm not sure if there is a legitimate difference in Python, but if you really want class attributes I suppose you could access foo.__class_.attr?
[09:20:22] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[09:24:42] <resistor4u> for any selenium / css people, can anyone tell me what element / xpath / selector i need to have selenium click through to the next page(s) of this site?
[09:24:47] <resistor4u> https://dloc.patron.uflib.ufl.edu/title-sets/UF00093680/results?q=music
[09:25:09] <pagnol> grawity: What I want is this. If someone does obj.attr and there is no instance attribute called 'attr', then I want to return None, even though there may be a class attribute 'attr'.
[09:25:34] <pagnol> I think SQLAlchemy is doing this but I'm too stupid to find out how they're doing it
[09:25:46] <resistor4u> i've exhausted my novice knowledge of python / selenium, and i'm unable to get it working
[09:25:48] <grawity> hmm might guess a custom __getattr__()?
[09:26:26] *** Joins: ahammer (~ahammer@157.122.68.240)
[09:27:17] *** Quits: emf (~emf@2620:10d:c090:400::5:2d26) (Ping timeout: 240 seconds)
[09:27:21] *** Joins: runciter (~runciter@user/runciter)
[09:27:55] <matsaman> resistor4u: .pagination .page-item.active + li button
[09:28:20] <matsaman> resistor4u: or... use the query string, page=#, incrementing it
[09:28:36] <matsaman> resistor4u: what is this 'The Caribbean'?
[09:29:02] <resistor4u> it's turn of century newspaper
[09:29:59] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:30:00] *** Joins: emf (~emf@2620:10d:c090:400::5:2d26)
[09:31:10] <matsaman> from where, Panama?
[09:31:45] <resistor4u> yesh
[09:31:51] <matsaman> neat
[09:33:36] *** Quits: ahammer (~ahammer@157.122.68.240) (Ping timeout: 250 seconds)
[09:34:42] *** Joins: ahammer (~ahammer@157.122.68.240)
[09:35:36] <resistor4u> ugh that seems easier than i was making it...
[09:36:24] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[09:36:47] <resistor4u> the smarter move would be to follow the >> button to prgress through result pages until it is exhausted
[09:37:17] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[09:37:47] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:37:50] <resistor4u> matsaman: your second option was what i had been doing, but it sometimes failed because i didn't have a reliable way of programing how many pages of results
[09:40:20] <matsaman> yeah you should be able to test for success/failure
[09:40:57] <matsaman> yep I didn't even see the >> =P
[09:41:19] <resistor4u> i had also been searching to select for `>>` but that was erroring out for me, likely because i'm noob
[09:41:41] <matsaman> so '[aria-label="go to the next page"]'
[09:42:08] <resistor4u> more_buttons = driver.find_elements_by_xpath("//*[contains(text(), '»')]")
[09:42:27] *** Joins: manti7 (~manti7@176.10.104.94)
[09:42:32] <resistor4u> the above was another attempt that failed lol
[09:42:37] <matsaman> or .pagination li:last-child button etc.
[09:42:38] <dba> resistor4u: why not use thier API?
[09:42:46] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[09:42:57] <resistor4u> dba: unaware they have one?
[09:43:07] <dba> https://api.dloc.patron.uflib.ufl.edu/search?bibid=UF00093680&default=music&size=24&sort=conv_date&start=48 this will gets you very sexy clean data
[09:43:38] <dba> you can increment start params with 24 and will get you the next page data
[09:43:39] <matsaman> mmm lovely APIs
[09:44:05] <resistor4u> woajh
[09:45:10] <dba> I hope I didnt violate any rules/policies in the communinty  by providing this
[09:45:26] <matsaman> can't imagine how
[09:46:12] <resistor4u> me either?
[09:46:23] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[09:46:42] <resistor4u> dba: how did you find this?
[09:47:01] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:47:24] <dba> matsaman, Scraping usualy is againt any website owner policies therefore it consider illegal without the website owner permission.
[09:49:14] <matsaman> don't think you have to worry about that here
[09:49:18] * matsaman shrugs
[09:49:31] <matsaman> scraping is pretty big in python =P
[09:49:57] <dba> resistor4u: open Chrome dev tool and click in the next page and see what requests being made to the server. one of them is that json request which get the data is json format
[09:50:03] <matsaman> and I feel like people who offer an API are truly "asking for it" to be archived
[09:50:03] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[09:50:40] <resistor4u> it is a public university library afterall
[09:50:56] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[09:50:56] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[09:51:53] <dba> matsaman, I believe there are two type of API private and public. The private one are which is the case here are not supposed to be used by a third party other than brwosers
[09:52:26] <matsaman> https://dataverse.fiu.edu/dataverse/dloc-as-data
[09:52:37] <matsaman> dba: sure
[09:53:34] <matsaman> would be so much easier if these organizations just embraced bittorrent =P
[09:53:37] <matsaman> NASA did
[09:53:51] <dba> Lol
[09:54:19] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[09:54:33] <matsaman> "dLOC as Data, an initiative of the Digital Library of the Caribbean, intends to enhance access to its existing Caribbean newspaper collections by making texts available for bulk download to its users"
[09:54:50] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[09:55:33] <resistor4u> at scale, lol
[09:56:19] <matsaman> like, who at a university saw some data and said "THIS IS ENOUGH!, I don't even want the rest"
[09:56:25] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:58:28] <matsaman> https://lts.uflib.ufl.edu/supported-systems/uf-digital-collections/
[09:58:32] <matsaman> ok ok =P
[09:59:23] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:59:50] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[10:00:52] *** Joins: thatmint (~thatmint@119-17-133-28.771185.mel.nbn.aussiebb.net)
[10:01:18] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[10:01:19] <resistor4u> so `more_buttons = driver.find_elements_by_xpath("//*[contains(text(), 'go to the next page')]")` is not working
[10:02:00] <resistor4u> because `aria-label` is not technically text?
[10:02:10] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[10:03:06] *** Joins: programmar (~whatever@118.69.128.37)
[10:03:30] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[10:03:54] *** Joins: chgtg (~chg@113.234.210.112)
[10:04:01] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[10:04:13] <dba> what is the error are you getting?
[10:04:22] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[10:04:24] <programmar> does "from lib import function" saves more memory then "import lib" then use "lib.function()" ? if it does but only saves up a slightly more insignificant amount of memory then nvm
[10:04:37] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[10:04:54] <programmar> i only have 512MB of RAM tho so every Kb or MB counts :P
[10:05:08] *** Quits: thatmint (~thatmint@119-17-133-28.771185.mel.nbn.aussiebb.net) (Changing host)
[10:05:08] *** Joins: thatmint (~thatmint@user/thatmint)
[10:06:16] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[10:06:29] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[10:07:17] <resistor4u> dba: multiple, but appears "connection refused" is prevalent, but that doesn't make sense to me when i can print the full page again and again
[10:09:38] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:12:42] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[10:13:36] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (Read error: Connection reset by peer)
[10:14:01] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[10:14:09] *** Joins: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie)
[10:15:27] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[10:16:06] *** Quits: thatmint (~thatmint@user/thatmint) (Quit: The Lounge - https://thelounge.chat)
[10:16:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:16:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[10:16:56] *** Quits: ahammer (~ahammer@157.122.68.240) (Ping timeout: 250 seconds)
[10:17:13] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[10:17:45] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[10:17:57] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[10:18:20] <resistor4u> this is as far as i'm able to get
[10:18:27] <resistor4u> https://pastebin.com/Ry5AKdcG
[10:18:38] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de)
[10:18:39] <jinsun> programmar: doesn't save any memory really, the entire lib is imported either way
[10:18:49] <programmar> oh
[10:19:00] <programmar> hm, fine then
[10:19:26] <resistor4u> it's apparent to me the whole operation shoudl be put into a loop until the "go to the next page" is no longer apparening the page source
[10:19:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:20:33] *** Joins: p-i- (~Ohmu@2403:6200:8978:2a76:dd5f:304c:a7ec:7c34)
[10:20:50] *** Quits: dre (~dre@2001:8003:c932:c301:2a14:8300:3b99:1684) (Ping timeout: 250 seconds)
[10:21:01] *** Joins: thatmint (~thatmint@user/thatmint)
[10:21:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:22:21] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:23:32] *** Joins: fikran (~fikran@user/fikran)
[10:24:14] <dba> resistor4u: this is working fine for me driver.find_element_by_xpath('/html/body/div[1]/div/div[2]/div[2]/div/div/div/nav/ul/li[6]/button').click() it is not an optimal solution but it is working. Please note that the xpath might different from your end
[10:24:51] <dba> that would location the location of the next path and click on it. no need for bs4
[10:24:59] <dba> locate**
[10:25:06] *** Joins: KombuchaKip (~kip@192.252.230.5)
[10:25:08] *** Joins: upsala (~zcb@185.209.196.170)
[10:25:48] *** Parts: programmar (~whatever@118.69.128.37) (Leaving)
[10:26:02] <resistor4u> interesting... i'm getting `urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=59168): Max retries exceeded with url: /session/55e3eeab272456eff4ca898244befdfa/element (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x105d54880>: Failed to establish a new connection: [Errno 61] Connection refused'))`
[10:26:37] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:3dac:2519:6b1d:2118)
[10:26:51] <dba> I think your chrome session is dead. try kill all Chrome instances and start all over
[10:27:06] *** Joins: ahammer (~ahammer@157.122.68.240)
[10:28:48] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[10:29:38] *** Quits: ahammer (~ahammer@157.122.68.240) (Client Quit)
[10:30:11] <resistor4u> ah
[10:30:23] *** saroy is now known as bytehackr
[10:30:26] <resistor4u> i guess the print(soup) object is just still in memory
[10:31:01] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-163.poda.cz)
[10:31:13] <dba> resistor4u: one more thing is you might change the time.sleep with an implicit wait
[10:31:14] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[10:31:33] <resistor4u> yeah i was considering that too
[10:31:40] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:31:52] <resistor4u> optimize that for like 5 or so
[10:32:23] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:32:28] *** Joins: ahammer (~ahammer@157.122.68.240)
[10:32:30] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:60e7:9503:5a26:9518) (Quit: Leaving)
[10:32:32] <dba> https://selenium-python.readthedocs.io/waits.html
[10:33:21] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[10:33:25] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:43d5:ab16:760d:5ac2)
[10:33:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[10:33:34] *** Quits: ahammer (~ahammer@157.122.68.240) (Client Quit)
[10:38:01] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[10:38:30] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:43d5:ab16:760d:5ac2) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:39:33] <resistor4u> so a loop is definitely the way to go, it seems?
[10:39:45] *** Quits: chgtg (~chg@113.234.210.112) (Ping timeout: 256 seconds)
[10:40:07] <resistor4u> at the end of each iteration, i can append the links i'm looking for to a variable, and then print that var at end of loop
[10:40:43] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[10:40:52] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[10:41:14] <resistor4u> the logic would be an if loop, as in keep going if a 'more button' is present, otherwise print the var and quit?
[10:41:20] <resistor4u> does this sound "elegant"?
[10:41:33] *** Joins: chgtg (~chg@116.3.16.5)
[10:42:25] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[10:42:51] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[10:42:57] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[10:43:17] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428)
[10:44:08] <dba> what is your goal?
[10:44:18] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[10:44:41] <dba> what are you exactly trying to achieve ?
[10:45:55] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[10:46:05] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[10:46:08] <resistor4u> i'm trying to print out a list of hits, and i'm using that to do some further `sed` work to programmatically make those search hits into links to the pdf pages
[10:46:32] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:46:44] <resistor4u> i've been able to accomplish this 100% only for first pages of results so far
[10:47:16] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[10:47:36] <resistor4u> after that, i've got to switch to incrementing up like matsaman suggested earier
[10:48:03] <dba> If you want to apply what you have done on the first page to the other pages, then the loop is what you need to loop through all pages
[10:48:34] <resistor4u> cool, thanks for the sanity / learner check
[10:49:26] <dba> another way around it to save you the hassle of clicking if you are not comartable dealing with JSON the conical url for each page https://dloc.patron.uflib.ufl.edu/title-sets/UF00093680/results?page=3&q=music
[10:49:48] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[10:50:02] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (Ping timeout: 240 seconds)
[10:50:12] <resistor4u> so once the `click()` function is called, the `page_source` variable needs to be vacated and repopulated anew for printing it out, otherwise it's just going to print the original page, correct?
[10:50:26] *** Joins: pepper (~pepper@user/pepper)
[10:50:30] <dba> there seems to be only 4 pages so you can use for example for i in range(1,5) driver.get(f'https://dloc.patron.uflib.ufl.edu/title-sets/UF00093680/results?page={i}&q=music')
[10:51:11] <dba> from there you can scrap whatever you want from that page
[10:51:33] <resistor4u> dba: yeah that's what i've been doing, but it doesn't seem sustainable if they add more searchable material to a title set collection, or if i want to tweak a term. in those cases, i can't programmatially know the total results pages
[10:51:41] *** Joins: dvx (~dvx@5.181.92.64)
[10:52:15] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:52:39] <dba> trust me the element also not sustainable they website might get updated and you have to change your code
[10:52:55] <resistor4u> haha i bet
[10:53:00] <dba> you can come up with some logic when to stop
[10:54:26] <dba> for example 404 error page not found meaning the previous page was the last. or if there is no content in the current page means that the previous one is the last
[10:54:33] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[10:54:40] <resistor4u> ohhh
[10:54:44] <resistor4u> so ok
[10:55:17] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:55:30] *** Quits: thatmint (~thatmint@user/thatmint) (Quit: The Lounge - https://thelounge.chat)
[10:55:52] *** Joins: thatmint (~thatmint@user/thatmint)
[10:56:00] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[10:56:08] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:56:17] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:56:20] <kj7rrv> Is there a preferred way to store RGB colors in Python?
[10:56:32] *** Joins: bluedust_ (~bluedust@103.161.144.94)
[10:56:33] *** Quits: runciter (~runciter@user/runciter) (Quit: Leaving)
[10:57:36] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[10:57:39] <parv> Use bins!
[10:57:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[10:58:26] <twb> parv: I imagine it depends on what you're doing with them
[10:58:49] <kj7rrv> Using them to color elements on screen in a gtk app
[10:59:21] <twb> parv: e.g. CSS '#deadbe' is only 24-bit rather than doubles
[10:59:29] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[10:59:33] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[10:59:35] *** Joins: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:1d19:d7db:2a8:4c7b)
[10:59:47] <twb> kj7rrv: I'd use named colors in the GTK CSS then
[10:59:47] *** Joins: Terexen (~terexen@user/terexen)
[10:59:53] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:00:02] *** Quits: bluedust (~bluedust@117.207.235.4) (Ping timeout: 240 seconds)
[11:00:21] <kj7rrv> They're being imported from an outside source, and can't be limited to named colors
[11:00:30] <twb> https://github.com/cyberitsolutions/bootstrap2020/blob/twb/debian-11-PrisonPC/xdm/acceptable-use-policy.py#L41-L53
[11:00:47] <twb> That's where I'm importing named colors from ~/.Xresources into a GTK3 app
[11:00:52] <kj7rrv> They're coming in as Android color ints, which I'll be parsing and converting to whatever format is needed
[11:01:09] <twb> kj7rrv: what does an android color int look like?
[11:01:26] <ItsLandon> I'm loading a JSON file that has a string value. The string contains \n in the file, but I can't figure out how to match it. I cannot match ^M (the character, not the visual representation) or \n. Like I'm trying `if "\
[11:01:30] <ItsLandon> Whoops.
[11:01:31] <twb> GTK CSS understands rgba(float, float, float, float);
[11:01:34] *** Joins: mrwick (~mrwick@user/mrwick)
[11:01:50] <twb> ItsLandon: you can't just do json.loads() ?
[11:01:52] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[11:02:06] <twb> ItsLandon: ^M is \r in python notation
[11:02:20] <ItsLandon> I'm trying `if "\^M" in foo["bar"]:` after loading it into a dict
[11:02:26] <ItsLandon> Oh, I'll try \r
[11:02:43] <ItsLandon> I was pressing ctrl+v enter to get the character literal
[11:02:59] *** Joins: gusto (~Augustus@2a01:b740:13d2::85)
[11:03:15] *** Joins: portalrat_ (~portalrat@user/portalrat)
[11:03:15] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10fd:2e9d:a484:8794:e84d:9e60)
[11:03:32] <kj7rrv> @twb https://developer.android.com/reference/android/graphics/Color
[11:03:50] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:4418:6bcd:21ed:c287)
[11:03:57] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[11:04:07] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10fd:2e9d:a484:8794:e84d:9e60) (Read error: No route to host)
[11:04:09] *** Quits: zaz\ (~zaz@poneybl.eu) (Client Quit)
[11:04:38] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:04:40] *** Quits: zaz\ (~zaz@poneybl.eu) (Remote host closed the connection)
[11:04:47] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[11:05:01] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[11:05:09] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:05:11] *** Joins: Guest73 (~Guest73@pop.92-184-105-62.mobile.abo.orange.fr)
[11:05:33] *** Quits: zaz\ (~zaz@poneybl.eu) (Remote host closed the connection)
[11:05:34] <twb> ItsLandon: can you pastebin the full json file?  There's two things you might be asking, and one of them is very silly
[11:05:35] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 252 seconds)
[11:05:39] *** Quits: Guest73 (~Guest73@pop.92-184-105-62.mobile.abo.orange.fr) (Client Quit)
[11:06:13] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 256 seconds)
[11:06:13] <twb> kj7rrv: OK so they're just bit-shifting a 24-bit color plus alpha
[11:06:32] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[11:07:07] <ItsLandon> I want to test for the \n when I load {"foo": "bar\nbaz"} into a dict with json.loads().
[11:07:32] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[11:07:35] <twb> Ah and the alpha channel is first, not last
[11:07:42] <twb> ItsLandon: OK
[11:07:44] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:07:50] <kj7rrv> Yes
[11:08:02] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:08:25] <twb> ItsLandon: '\n' in json.loads(r'{"foo": "bar\nbaz"}')['foo']
[11:08:54] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[11:09:06] <ItsLandon> fg
[11:09:19] <twb> kj7rrv: I'd make an integer-derived class to represent that, with a .as_css() method or so that converts it
[11:09:23] <kj7rrv> I can ignore alpha in this app
[11:09:30] <kj7rrv> Oh okay that's a good idea
[11:09:39] <ItsLandon> Sorry, I'm a little distracted. Meant to send that to my terminal not my irc.
[11:09:54] <twb> The reason to not juts use an int as-is, is it's easy to double-convert and get confused
[11:10:14] <kj7rrv> Okay
[11:10:22] <kj7rrv> Thank you
[11:10:25] <twb> Assuming you're converting to #rrggbb notation, which is straightforward, and throwing away alpha, you can probably just print it as a hex string
[11:10:29] *** Joins: bkhl (~bkhl@user/bkhl)
[11:10:39] <twb> So this is an android flat red, right?  4278190335
[11:10:48] <deniska> unless your number actually looks like bbggrr :)
[11:11:01] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[11:11:28] <twb> my_cool_number = 4278190335; f'{my_cool_number:x}'
[11:11:28] <kj7rrv> I think that's blue
[11:12:14] <kj7rrv> Red is 4294901760
[11:12:37] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[11:12:39] <twb> What's the opposite of &, to mask out 255 << 24
[11:12:40] <kj7rrv> Good night it's late here
[11:12:51] <twb> my_cool_number = 4278190335; f'{my_cool_number ^ 255 << 24:06x}'
[11:12:59] <twb> kj7rrv: I think that's exactly what you want
[11:13:16] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:13:44] <twb> Probably clearer to write f'#{my_cool_numbr ^ 0xFF000000:06x}'
[11:14:09] *** Joins: seednode99 (~seednode@user/seednode)
[11:14:23] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[11:15:01] *** Joins: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759)
[11:15:50] *** Quits: thatmint (~thatmint@user/thatmint) (Quit: The Lounge - https://thelounge.chat)
[11:15:55] *** Quits: amaenli (~amaenli@aries.uberspace.de) (Changing host)
[11:15:55] *** Joins: amaenli (~amaenli@user/amaenli)
[11:15:57] *** Quits: onichomp (~onichomp@2806:264:4408:251:2d8d:1d46:1d20:5759) (Read error: Connection reset by peer)
[11:16:13] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:30b0:4e97:c707:d3fa)
[11:16:17] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[11:16:18] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 250 seconds)
[11:17:17] *** Quits: emf (~emf@2620:10d:c090:400::5:2d26) (Ping timeout: 240 seconds)
[11:17:56] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:18:04] *** Joins: jpic (~jpic@82.142.9.130)
[11:19:28] *** Joins: doko_ (~doko@2a02:8106:1a:7600:b5dc:b217:d1e4:e8ec)
[11:19:59] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[11:19:59] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[11:19:59] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[11:20:02] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[11:20:33] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[11:20:53] *** Joins: emf (~emf@2620:10d:c090:400::5:2d26)
[11:21:00] *** Joins: djapo (~archangel@user/djapo)
[11:23:08] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[11:23:17] *** Quits: doko (~doko@2a02:8106:1a:7600:2390:f8e7:6562:4c11) (Ping timeout: 240 seconds)
[11:23:23] *** Joins: palasso (~palasso@user/palasso)
[11:23:31] *** Joins: lewisje (~lewisje@72.49.207.113)
[11:24:05] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:24:12] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:24:30] *** Joins: pgajdos (~pgajdos@cst-prg-16-88.cust.vodafone.cz)
[11:24:38] *** Parts: pgajdos (~pgajdos@cst-prg-16-88.cust.vodafone.cz) ()
[11:24:40] *** Joins: d3vtr (~pwnd@112.215.242.176)
[11:24:45] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:24:47] <d3vtr> :?
[11:24:49] <d3vtr> ok
[11:24:53] <betterOn1> hi.
[11:25:14] *** Joins: slav0nic (slav0nic@python.su)
[11:25:20] <betterOn1> for ex, subprocess's communicate() function returns both output and errors
[11:25:43] <betterOn1> what does it return actually? how can i return multiple object like that?
[11:26:09] *** Quits: d3vtr (~pwnd@112.215.242.176) (Remote host closed the connection)
[11:26:16] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[11:26:28] *** Joins: tannishpage (~tannishpa@2001:8003:e90a:200:f3ec:7768:3fc2:57a0)
[11:26:29] *** Joins: kosh (~kosh@user/kosh)
[11:26:32] *** Joins: d3vtr (~pwnd@112.215.242.176)
[11:27:04] <parv> Use tuple, list, set?
[11:27:08] <jinsun> it returns a tuple with 2 items
[11:27:20] *** Joins: c_d3v (~pwnd@114.79.21.61)
[11:27:22] <jinsun> and python allows you to unpack that into 2 separate variables
[11:27:50] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:27:56] <jinsun> and you can do that with any iterable, doesn't have to be tuple
[11:28:00] *** Quits: tannishpage (~tannishpa@2001:8003:e90a:200:f3ec:7768:3fc2:57a0) (Client Quit)
[11:29:32] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:30:18] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428)
[11:31:09] *** Quits: d3vtr (~pwnd@112.215.242.176) (Ping timeout: 256 seconds)
[11:32:57] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:37:58] *** Joins: someuser (~user@197.54.16.50)
[11:39:50] *** Quits: kaiseisei (~Thunderbi@171.116.100.151) (Quit: kaiseisei)
[11:40:04] *** Joins: kaiseisei (~Thunderbi@171.116.100.151)
[11:40:43] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[11:41:22] *** Joins: anotheruser (~user@45.133.4.56)
[11:42:23] <wyre> there is no Context class in the PyOpenSSL module?
[11:42:29] *** Joins: chele (~chele@user/chele)
[11:42:37] *** Quits: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:1d19:d7db:2a8:4c7b) (Ping timeout: 240 seconds)
[11:42:39] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[11:42:51] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:42:56] *** Joins: demon__ (~user@197.54.16.50)
[11:43:53] *** gizmo1 is now known as gizmo_
[11:44:54] *** Quits: Nutte35 (~Nutte@43.231.30.12) (Ping timeout: 250 seconds)
[11:44:55] *** Quits: someuser (~user@197.54.16.50) (Ping timeout: 256 seconds)
[11:45:16] *** Joins: Nutte35 (~Nutte@202.153.80.188)
[11:45:30] <jinsun> there is a Context in OpenSSL.SSL
[11:46:00] <jinsun> though it is not the same API as the stdlib ssl.SSLContext
[11:46:37] *** Quits: anotheruser (~user@45.133.4.56) (Ping timeout: 256 seconds)
[11:47:58] <twb> betterOn1: unfortunately Python is inconsistent; instead of always accepting and returning exactly one value (like Haskell), or accepting and returning multiple values (like Common Lisp), it accepts multiple values, and always returns 1 value.  So if you want to return two, the CONVENTION is that you use a tuple
[11:48:43] <twb> betterOn1: if you then want to only collect the value and not the error, you do something like "return_value, _ = do_thing()"
[11:48:44] <resistor4u> dba: thanks for your guidance
[11:49:26] *** Quits: resistor4u (~resistor4@2601:5c2:102:33d0:9469:1b4b:66f0:b618) (Quit: Leaving...)
[11:50:06] *** Quits: rje_ (~textual@50.35.241.164) (Ping timeout: 250 seconds)
[11:50:49] *** Joins: razzd777 (~razzd777@2603:9000:2503:5600:83eb:94be:f206:3b50)
[11:51:03] *** Quits: razzd777 (~razzd777@2603:9000:2503:5600:83eb:94be:f206:3b50) (Changing host)
[11:51:03] *** Joins: razzd777 (~razzd777@user/razzd777)
[11:52:26] *** Joins: iomari891 (~iomari891@197.210.70.203)
[11:52:40] <betterOn1> twb thank you for the detailed info...
[11:54:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:55:01] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:56:30] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[11:57:15] *** Joins: rje (~textual@50.35.241.164)
[11:58:13] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:58:50] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:59:56] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[11:59:57] *** Joins: MajorBiscuit (~MajorBisc@c-001-020-016.client.tudelft.eduvpn.nl)
[11:59:58] *** Quits: iomari891 (~iomari891@197.210.70.203) (Quit: WeeChat 3.3)
[12:00:06] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:00:37] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[12:01:12] *** Joins: iomari891 (~iomari891@197.210.71.129)
[12:01:53] *** Joins: pythia (~pythia@ti0044a400-1030.bb.online.no)
[12:04:21] *** Joins: codificat (~pep@126.red-79-158-54.dynamicip.rima-tde.net)
[12:04:51] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[12:04:55] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[12:04:58] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[12:05:18] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:05:24] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:06:34] *** Quits: kaiseisei (~Thunderbi@171.116.100.151) (Quit: kaiseisei)
[12:07:20] *** Joins: xkuru (~xkuru@user/xkuru)
[12:07:30] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:07:53] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[12:08:35] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[12:08:45] *** Joins: stblaha (~stblaha@user/stblaha)
[12:09:03] *** Joins: thiras (~thiras@user/thiras)
[12:09:14] *** Joins: ice9 (~ice9@user/ice9)
[12:09:21] *** Quits: pythia (~pythia@ti0044a400-1030.bb.online.no) (Remote host closed the connection)
[12:09:30] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[12:10:05] *** Joins: pythia (~pythia@ti0044a400-1030.bb.online.no)
[12:11:09] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[12:11:23] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[12:11:51] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Client Quit)
[12:12:02] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[12:12:02] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[12:12:02] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[12:12:17] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 240 seconds)
[12:12:53] *** Joins: rendar (~rendar@user/rendar)
[12:14:18] *** Joins: slavfox (~slavfox@93.158.232.111)
[12:16:52] *** Joins: shad (~shad@user/shad)
[12:16:58] *** Quits: c_d3v (~pwnd@114.79.21.61) (Quit: Leaving)
[12:19:51] *** Joins: lork (~lork@2601:603:1301:3630::9bfd)
[12:20:19] <lork> I have a python file that I have been troubelshooting like to know if anyone is up this late at night and look at it?
[12:21:18] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[12:21:22] <mrwick> lork: it's nearly 10 in the morning
[12:21:29] <lork> in europe
[12:21:31] <lork> ;)
[12:23:12] <lork> https://imagebin.ca/v/6TrC3YEVRMxy this is the file
[12:23:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[12:24:12] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:4418:6bcd:21ed:c287) (Read error: Connection reset by peer)
[12:24:29] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:4418:6bcd:21ed:c287)
[12:24:43] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:25:46] <mrwick> lork: there is a paste url in the topic
[12:26:03] <mrwick> lork: and timezones traverse north and south
[12:26:14] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:26:19] *** Quits: bluedust_ (~bluedust@103.161.144.94) (Remote host closed the connection)
[12:27:22] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:3dac:2519:6b1d:2118) (Ping timeout: 250 seconds)
[12:27:51] <mrwick> lork: and None is an object
[12:28:51] *** Joins: hightower2 (~hightower@95.168.116.16)
[12:29:57] *** Quits: hightower2 (~hightower@95.168.116.16) (Read error: Connection reset by peer)
[12:30:03] *** Joins: hightower3 (~hightower@212.15.178.51)
[12:30:04] *** Joins: hui (~hui@113.246.233.213)
[12:30:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:30:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[12:32:53] *** Joins: fikran (~fikran@user/fikran)
[12:33:30] <lork> what is non is an object?
[12:33:44] <lork> what do I need to enter what field in 36?
[12:33:45] <twb> lork: cap.read() is returning None where you expect it to return some kind of image object
[12:33:47] *** hui is now known as BurgerW
[12:33:53] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:34:12] <twb> lork: this looks like a question for cv2 people, if you can find them
[12:34:35] *** Quits: BurgerW (~hui@113.246.233.213) (Quit: leaving)
[12:34:35] *** Quits: hightower3 (~hightower@212.15.178.51) (Read error: Connection reset by peer)
[12:34:39] *** Joins: dre (~dre@2001:8003:c932:c301:1533:19c3:8abd:b2d5)
[12:34:48] <twb> lork: try #opencv on irc.oftc.net?
[12:34:55] <lork> so the file name? because if you execute the code it is asking for the file name
[12:35:31] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:36:23] *** Joins: BurgerW (~BurgerW@113.246.233.213)
[12:39:02] *** Joins: hightower2 (~hightower@212.15.178.51)
[12:39:25] *** Joins: kaiseisei (~Thunderbi@171.116.77.170)
[12:39:32] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[12:39:38] *** Quits: razzd777 (~razzd777@user/razzd777) (Quit: Leaving)
[12:39:47] *** Joins: razzd777_ (~razzd777@user/razzd777)
[12:39:57] *** Quits: razzd777_ (~razzd777@user/razzd777) (Remote host closed the connection)
[12:40:17] *** Joins: razzd777 (~razzd777@user/razzd777)
[12:40:18] <md618> lork: line 26: return should not be indented (i.e. it shouldn't depend on whether `val == ""` or not.
[12:40:50] <lork> not indentied?
[12:40:54] <lork> indented?
[12:41:42] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[12:41:47] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[12:41:48] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[12:41:52] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[12:42:24] <md618> yes because of the indent you are returning `val` only if `val == ""`
[12:42:33] <md618> and None (no return) otherwise
[12:44:16] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[12:44:48] <lork> explain indent
[12:44:49] *** Joins: bluedust (~bluedust@103.161.144.94)
[12:45:02] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:45:14] <md618> https://www.w3schools.com/python/gloss_python_indentation.asp
[12:45:51] *** Joins: Naan (~Naan@user/naan)
[12:45:58] *** Quits: soun (~soun@49.37.47.11) (Read error: Connection reset by peer)
[12:46:08] <twb> lork: are you new to Python?  Or to programming in general?  It's OK if you are.
[12:46:27] *** Quits: razzd777 (~razzd777@user/razzd777) (Quit: Leaving)
[12:47:09] <AhmedAmerican> I'm unable to download file using selenium, everything works fine expect that I'm unable to automate the download https://stackoverflow.com/q/70405990/7658985
[12:47:37] <lork> not not totally new
[12:48:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[12:48:22] *** Joins: Guest936 (~smartveda@2405:201:6804:b197:ce16:5f5c:7b27:627)
[12:48:27] <lork> I just LOVE the idea that python is used for computer vision. To many guns in this country warrent a extra layer of protection at a store or home so if the code sees it sets of a alarm.
[12:48:45] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[12:48:51] <Guest936> hey i need a help in compiling code in python....the code doesnt gives any output
[12:49:19] <twb> lork: interesting use case
[12:49:30] <Guest936> print("Hey i am here to calculate\n")
[12:49:30] <Guest936> num1 = int(input("number1\n"))
[12:49:30] <Guest936> num2 = int(input("number2\n"))
[12:49:30] <Guest936> print("What do you want to do?")
[12:49:30] <Guest936> add = num1+num2
[12:49:31] <Guest936> subtract = num1 - num2
[12:49:31] *** litharge sets mode: +q *!*@2405:201:6804:b197:ce16:5f5c:7b27:627
[12:49:32] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[12:49:43] <twb> lork: does OpenCV has a built-in recognizer for e.g. Mosin's rifle
[12:49:59] <twb> lork: can it tell the difference between a gun and a broom
[12:50:03] *** litharge sets mode: -q *!*@2405:201:6804:b197:ce16:5f5c:7b27:627
[12:50:07] *** Joins: stonkey (~stonkey@user/stonkey)
[12:50:09] <lork> twb yes it can
[12:50:15] *** Joins: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de)
[12:50:16] <Guest936> please help in this code
[12:50:22] <Guest936> the above one
[12:50:37] <lork> goto youtube type in yolo object detection
[12:50:39] *** Quits: Guest7932 (~roro@78.192.226.182) (Ping timeout: 256 seconds)
[12:51:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:51:11] *** Joins: raym (~raym@user/raym)
[12:51:51] *** Joins: shad (~shad@user/shad)
[12:52:11] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:52:11] *** Joins: roro (~roro@78.192.226.182)
[12:52:11] <rindolf> Guest936: did yu write tests? https://github.com/shlomif/what-you-should-know-about-automated-testing
[12:52:30] *** Joins: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2)
[12:52:35] *** roro is now known as Guest1058
[12:52:59] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:53:11] <Guest936>  no @rindolf....I am in a process of learning python..and i am stuck in this code...would you please help me
[12:53:15] *** Joins: andreasbuhr (~quassel@p549db3a5.dip0.t-ipconnect.de)
[12:53:22] *** Quits: gitly (~gitly@85.255.235.98) (Ping timeout: 250 seconds)
[12:53:41] <Guest936> print("Hey i am here to calculate\n")
[12:53:41] <Guest936> num1 = int(input("number1\n"))
[12:53:41] <Guest936> num2 = int(input("number2\n"))
[12:53:41] <Guest936> print("What do you want to do?")
[12:53:41] <Guest936> add = num1+num2
[12:53:42] <Guest936> subtract = num1 - num2
[12:53:42] *** litharge sets mode: +q *!*@2405:201:6804:b197:ce16:5f5c:7b27:627
[12:53:54] <twb> Guest936: use a pastebin
[12:54:13] *** litharge sets mode: -q *!*@2405:201:6804:b197:ce16:5f5c:7b27:627
[12:54:16] <rindolf> twb: thanks
[12:54:21] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[12:54:33] <twb> lork: my dad uses opencv to measure how fast trucks move between two fixed points, and then goes and yells are the drivers
[12:54:47] *** Quits: andreasbuhr (~quassel@p549db3a5.dip0.t-ipconnect.de) (Client Quit)
[12:54:51] <lork> hahaha
[12:54:52] <twb> lork: I didn't think it would be able to tell a rifle from a broom with crappy store CCTV  tho
[12:55:01] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:55:01] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Remote host closed the connection)
[12:55:16] <lork> TWP need the resultion and speed of the processor to tell the difference.
[12:55:31] <Guest936> @twb here is the link https://pastebin.com/jpACNz0v
[12:55:48] *** Joins: weedmic (~weedmic@5.102.235.240)
[12:56:16] *** Joins: novns (~novns@user/novns)
[12:56:16] <Guest936> Plese help what did i do wrong in code...I have just used a simple calculator program...with my own logic
[12:56:39] <twb> Guest936: looks OK to me
[12:57:10] <twb> Guest936: except you run input() several times in your last if/else block
[12:57:10] <Repiphany> You're calling input() separately for each of the if;elif;
[12:57:22] <Guest936> yes
[12:57:31] <twb> you probably want to do something like "choice = input()" then "if choice == '*': ..."
[12:57:38] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:58:07] <Guest936> let me share you a video or GIF link
[12:58:10] *** Joins: gitly (~gitly@148.252.129.4)
[12:58:45] <twb> Guest936: is this homework?
[12:59:26] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[12:59:47] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[12:59:57] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[13:01:14] <Jong> Ever use ternary statements just so the code is on a single line?  x += a if b else pass
[13:01:59] <Guest936> @twb no i am practising python...learned basics till conditional expressions.
[13:02:02] *** Quits: vanessa (~annada@103.160.128.7) (Ping timeout: 250 seconds)
[13:02:07] <The-Compiler> Jong: that doesn't seem very readable, and lines are free!
[13:02:08] <twb> Jong: all the time
[13:02:32] *** Quits: gitly (~gitly@148.252.129.4) (Ping timeout: 240 seconds)
[13:02:36] <twb> Jong: because I come from a lisp background so it drives me batty that I can't say "2 + (if p: C else: A)"
[13:02:37] <Jong> twb do you add "else pass" like I did?
[13:02:55] <Guest936> @twb please see https://file.re/2022/01/17/wwwscreencapturecom2022-1-171459/
[13:02:56] *** Joins: gitly (~gitly@148.252.129.4)
[13:03:08] <lork> twb it can be coded to recognize dog breeds
[13:03:30] <twb> No usually I do something like subprocess.cmd(['foo', *(['-a', a] if a else [])])
[13:03:43] <twb> Which is the closest you can get to an UNSPLICE in python
[13:03:54] <Jong> got it got it
[13:03:55] <Jong> thanks
[13:03:59] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:04:02] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[13:04:14] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:04:18] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[13:04:27] <twb> Occasionally I'll do x = (f if p else g)(99)
[13:04:42] <twb> Where it would be more normal to write "if p: x = f(99) else: x = g(99)"
[13:04:55] <twb> But I try to only do thta when I'm really annoyed at the repetition
[13:04:59] <twb> Because it's unpythony
[13:05:16] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[13:05:37] *** Joins: jokoon (~jokoon@136.252.163.126)
[13:05:47] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[13:05:48] *** Joins: hlauk (~hlauk@176.33.97.244)
[13:05:55] <twb> I also hate that for/in loops don't create a new lexical scope, so I do comprehensions more than normal people
[13:05:57] *** Quits: jackblasted (~quassel@45.131.194.21) (Ping timeout: 256 seconds)
[13:06:03] <jokoon> Any info about python 3.12? I've read there is going to be some kind of JIT in cpython...
[13:06:29] <The-Compiler> jokoon: where did you read that?
[13:06:31] *** Joins: jackblasted (~quassel@45.131.194.40)
[13:06:47] <jokoon> The-Compiler: https://www.reddit.com/r/Python/comments/ngxi29/python_will_be_officially_faster_in_a_year_from/
[13:06:56] *** Joins: justm33 (~Username@82-171-85-246.fixed.kpn.net)
[13:06:56] <jokoon> And somebody else in another forum
[13:07:33] <Jong> twb  what does (99) do?
[13:07:51] *** Quits: md618 (~md618@37.228.215.251) (Quit: leaving)
[13:07:56] <twb> Jong: it's just an argument to the function
[13:08:02] <Jong> thought so. great
[13:08:14] <twb> Or more precisely it's applying the function to the single value 99
[13:08:24] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[13:08:29] <jinsun> jokoon: it is planned stuff not yet done, the work for 3.11 is still going on
[13:08:32] *** Joins: md618 (~md618@37.228.215.251)
[13:08:37] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[13:08:49] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:09:14] <jokoon> ok
[13:09:21] *** Quits: justm33_ (~Username@82-171-85-246.fixed.kpn.net) (Ping timeout: 256 seconds)
[13:09:28] <The-Compiler> jinsun: that seems to be based on a single line in https://github.com/markshannon/faster-cpython/blob/master/plan.md (note that's not part of the "official" space where the work is taking place, https://github.com/faster-cpython )
[13:09:32] <The-Compiler> err, jokoon
[13:09:55] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:09:57] <The-Compiler> also not been updated in over a year
[13:10:45] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[13:10:48] <jokoon> Any plan to some webassembly interaction with official Python?
[13:11:18] <jokoon> I wish I could download a WASM python binary to play with...
[13:11:27] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:11:27] <jokoon> although I'm not sure it's really possible
[13:11:32] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Client Quit)
[13:11:35] <Swayze> have yo useen pyodide?
[13:11:51] <jinsun> there is some work going on here https://github.com/ethanhs/python-wasm
[13:11:51] <Swayze> i also posted this a bit earlier you might like
[13:11:57] <jokoon> Swayze: yes I did, but it also comes with a lot of scientific stuff I don't need
[13:12:20] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:12:23] <Swayze> https://github.com/MoserMichael/pyasmtool/blob/master/bytecode_disasm.md
[13:12:56] *** Quits: hlauk (~hlauk@176.33.97.244) (Quit: Leaving)
[13:13:32] *** Joins: plastico (~plastico@neomutt/plastico)
[13:14:10] *** Quits: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2) (Ping timeout: 250 seconds)
[13:17:12] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[13:18:47] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:19:16] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[13:20:10] *** Quits: Ergo^ (~ergo@91.238.59.144) (Read error: Connection reset by peer)
[13:21:05] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 256 seconds)
[13:21:56] <jokoon> https://github.com/ethanhs/python-wasm do you know if there are binaries for this? can't find them on this repo...
[13:22:15] *** Joins: Axy (~Axy@user/axy)
[13:23:13] <lork> does this look right? shoudl there be a path in the () of this line ?  _, img = cap.read()
[13:23:13] <lork>     assert isinstance(img, object)
[13:23:13] <lork>     height, width, channels = img.shape
[13:23:17] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[13:25:01] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[13:25:46] <Jong> Anyone here feel lucky to be a coder in 2022 as opposed to 1982 ?
[13:26:41] * Jong gets back to coding
[13:27:11] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[13:28:13] *** Quits: EsoAlgo4 (~EsoAlgo@152.70.142.52) (Ping timeout: 240 seconds)
[13:28:31] *** Joins: kingofcsu (~kingofcsu@114.249.133.203)
[13:28:46] *** Joins: juanma (~juanma@2a0c:5a81:114:800:7da2:b88:a4a1:8788)
[13:28:58] *** Quits: juanma (~juanma@2a0c:5a81:114:800:7da2:b88:a4a1:8788) (Client Quit)
[13:29:19] *** Quits: portalrat_ (~portalrat@user/portalrat) (Remote host closed the connection)
[13:29:19] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:29:36] *** Joins: bluedust_ (~bluedust@117.207.235.4)
[13:29:38] *** Joins: portalrat_ (~portalrat@user/portalrat)
[13:30:38] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428) (Ping timeout: 250 seconds)
[13:30:48] <Swayze> It was called a 'punch card technician'
[13:30:57] *** Quits: dfch (~dfch@user/dfch) (Remote host closed the connection)
[13:31:08] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428)
[13:32:03] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[13:32:04] *** Quits: hightower2 (~hightower@212.15.178.51) (Read error: Connection reset by peer)
[13:32:11] <lork> I got it to work ya!!!!!!!!!!
[13:32:24] <lork> the image processing is really slow!
[13:32:30] *** Joins: dfch (~dfch@user/dfch)
[13:32:42] *** Joins: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:8ce8:ed4a:ae5e:637)
[13:33:09] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 256 seconds)
[13:33:14] *** Quits: bluedust (~bluedust@103.161.144.94) (Ping timeout: 250 seconds)
[13:33:32] *** Joins: hightower2 (~hightower@212.15.178.51)
[13:33:54] *** Quits: BurgerW (~BurgerW@113.246.233.213) (Quit: leaving)
[13:33:54] *** Quits: hightower2 (~hightower@212.15.178.51) (Read error: Connection reset by peer)
[13:34:02] *** Joins: hightower2 (~hightower@95.168.116.16)
[13:34:06] *** Quits: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[13:34:10] *** Joins: BurgerW (~BurgerW@113.246.233.213)
[13:34:27] *** Joins: duoi (~duoi@user/duoi)
[13:34:53] *** Joins: AlanMD (~AlanMD@193.104.215.11)
[13:35:15] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 256 seconds)
[13:35:38] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[13:35:51] *** doko_ is now known as doko
[13:36:03] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:10] *** Quits: BurgerW (~BurgerW@113.246.233.213) (Client Quit)
[13:36:42] *** Quits: bluedust_ (~bluedust@117.207.235.4) (Ping timeout: 250 seconds)
[13:36:57] *** Quits: ItsLandon (~ItsLandon@2601:1c0:6d03:1cb0:8ce8:ed4a:ae5e:637) (Ping timeout: 240 seconds)
[13:37:33] *** Joins: bluedust (~bluedust@117.207.227.55)
[13:38:06] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:39:01] *** Quits: d3x (michal@bielaw.ski) (Remote host closed the connection)
[13:39:22] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[13:39:42] <Guest936> @TWB Your code works i have added a new variable name choice and instead of input i have added the cariable in if/else if (choice == "*") and after executing it works!
[13:39:43] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:40:10] *** Joins: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[13:40:22] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428) (Read error: Connection reset by peer)
[13:40:30] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[13:41:27] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[13:42:38] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:43:02] *** Joins: zamba (~marius@5.226.162.54)
[13:44:11] *** Quits: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Client Quit)
[13:44:15] *** Joins: ihon (Username@176.192.181.241)
[13:45:15] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[13:45:38] *** Joins: kevr (~kevr@user/kevr)
[13:45:51] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:48:01] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[13:48:43] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:49:01] *** Joins: andreasbuhr (~quassel@p549db3a5.dip0.t-ipconnect.de)
[13:49:01] *** Quits: andreasbuhr (~quassel@p549db3a5.dip0.t-ipconnect.de) (Client Quit)
[13:51:03] *** Quits: Guest936 (~smartveda@2405:201:6804:b197:ce16:5f5c:7b27:627) (Quit: Leaving)
[13:54:32] *** Quits: kingofcsu (~kingofcsu@114.249.133.203) (Ping timeout: 240 seconds)
[13:58:00] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[13:58:14] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[14:00:14] *** Joins: Sylhouette (~johan@87.233.191.146)
[14:01:02] <pagnol> anyone happen to know a library that can generate random test data given a type (hint)?
[14:03:31] *** Joins: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk)
[14:03:47] <nedbat> pagnol: https://faker.readthedocs.io/en/master/index.html ? or https://hypothesis.readthedocs.io/en/latest/ ? depending on what you mean
[14:05:23] *** Joins: soun (~soun@49.37.47.11)
[14:06:01] <pseudonymous> I have a test run with pytest which crashes with something like `test_foo.py Segmentation fault (core dumped)` - I'm developing a C binding wrapper so I'm assuming it's my fault. My issue is that I'm not getting any trace to go by. How can I get that ?
[14:06:08] *** Joins: Guest1041 (~smartveda@2405:201:6804:b197:ce16:5f5c:7b27:627)
[14:06:38] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[14:08:35] <nedbat> pseudonymous: are you using pytest -s ?
[14:09:32] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[14:11:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:12:43] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:13:05] <pseudonymous> nedbat: beautiful, that seems to do the trick ! :D
[14:13:12] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[14:14:00] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:15:13] <pseudonymous> Actually, it's almost what I want, but not quite. Using `pytest -s` I get all the output from the program's process, but I don't see any trace per se. I'd love it if I'd get the equivalent of gdb's bt (backtrace) when it blows up.
[14:15:29] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 256 seconds)
[14:15:57] <nedbat> pseudonymous: i don't know how to use gdb, or get it's like
[14:17:15] *** Joins: jpic (~jpic@82-64-233-31.subs.proxad.net)
[14:17:57] *** Joins: jazzy2 (~jaziz@user/jaziz)
[14:19:01] <Guest1041> hey can anyone help me
[14:19:22] <pagnol> nedbat: what I had in mind was something that, say, takes a List[Tuple[int, str]] and then spits out [(123, 'foo'), (999, 'bar')]
[14:19:46] <pagnol> Guest1041: it's usually best to just ask straightaway
[14:20:35] <nedbat> pagnol: hypothesis is kind of amazing, though it takes some time to wrap your head around.
[14:20:56] *** Quits: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se) (Quit: Leaving)
[14:21:08] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[14:21:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[14:21:59] <nedbat> pagnol: but sorry, i don't know a simpler version like you are looking for
[14:22:15] <pagnol> maybe I'll try to roll my own
[14:22:44] *** waveform_ is now known as waveform
[14:22:46] <pagnol> or why not check out hypothesis
[14:22:51] <pagnol> I'll do that, thanks ;-)
[14:23:34] *** Quits: bluedust (~bluedust@117.207.227.55) (Remote host closed the connection)
[14:29:12] *** Joins: e2m4n (~ezman@user/e2m4n)
[14:30:34] <Guest1041> @pagnol i have this code https://pastebin.com/jpACNz0v which is not giving any output despite 0 errors...
[14:31:18] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[14:31:32] *** Quits: jpic (~jpic@82-64-233-31.subs.proxad.net) (Ping timeout: 240 seconds)
[14:32:22] *** Joins: jinsun (~quassel@user/jinsun)
[14:32:37] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:38] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[14:32:42] <nedbat> Guest1041: instead of using input() on each line 10-16, use it just once before line 10.
[14:32:51] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[14:33:05] *** Joins: ubert (~Thunderbi@p200300ecdf0994547bbbb5c3c61d0cc2.dip0.t-ipconnect.de)
[14:33:45] *** Quits: hightower2 (~hightower@95.168.116.16) (Read error: Connection reset by peer)
[14:33:47] *** Joins: jpic (~jpic@82.142.9.130)
[14:33:51] <Guest1041> ok but please explain me the logic behind it...its comiling successfully..but when i try to enter input it doesnt gives any output...so
[14:34:18] <Repiphany> Every time you branch into the next elif, you're being prompted for another input()
[14:34:18] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[14:34:22] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[14:34:24] <Repiphany> Try pressing enter 6 times
[14:34:39] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[14:34:41] <Guest1041> yes yes yes exactly this is happening
[14:34:53] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[14:35:15] <Repiphany> The first input() doesn't get "shared" to the rest of the elif statements when you write it like that
[14:35:38] *** Quits: TechSmurf (~tech@user/techsmurf) (Ping timeout: 250 seconds)
[14:35:52] *** Joins: jinsun (~quassel@user/jinsun)
[14:36:44] *** Joins: TechSmurf (~tech@user/techsmurf)
[14:37:06] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Client Quit)
[14:37:11] <Guest1041> so you mean that i need to write input() one time only?
[14:37:27] <Guest1041> instead of using it in elif statements
[14:38:02] *** Joins: hightower2 (~hightower@95.168.116.16)
[14:38:15] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:39:26] *** Joins: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se)
[14:39:35] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[14:40:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:40:52] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428)
[14:41:07] <Guest1041> this is what i have done, i have added "choice" variable https://pastebin.com/P7AvAdQC and after that it runs without any issue
[14:41:13] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Quit: Client closed)
[14:41:18] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[14:41:58] *** Quits: soun (~soun@49.37.47.11) (Quit: WeeChat 2.8)
[14:42:14] *** Joins: fikran (~fikran@user/fikran)
[14:42:17] <squid_game> I'd like to generate possible combinations of multiple parameters such as in this snippet https://bpa.st/BWHA but I have a problem with parameter3 when the data is not list. I can either get it as list or get it as an integer. What's the correct way to solve the problem? Is it to add if elses for each parameters or use itertool or  another way?
[14:42:40] *** Quits: Nutte35 (~Nutte@202.153.80.188) (Remote host closed the connection)
[14:42:44] <Repiphany> parameter3 = [7]
[14:42:44] *** Joins: razzd777 (~razzd777@user/razzd777)
[14:42:58] *** Joins: Nutte35 (~Nutte@202.153.80.188)
[14:43:14] <grawity> assuming you have to work with some external source that gives you either a list or an int
[14:43:21] <squid_game> Repiphany, I know [7] is still a list, but I may get it as parameter3 = 7
[14:43:22] <grawity> I'd settle with "if not isinstance(parameter3, list): parameter3 = [parameter3]"
[14:43:25] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[14:43:32] *** Joins: bluebird (~palenoon@103.100.150.2)
[14:43:34] <weedmic> am i correct that this is not python?  https://github.com/boopathi/nethogs-parser/blob/master/hogs.go - anyone know what it is?
[14:43:50] <Repiphany> .go
[14:43:58] <grawity> .go sounds a lot like Golang aka Go
[14:43:59] <squid_game> grawity, thank you
[14:44:16] <weedmic> .go is a language?
[14:44:27] <weedmic> ok, ty
[14:45:22] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Read error: Connection reset by peer)
[14:48:04] *** Joins: cursey (~cursey@user/cursey)
[14:48:48] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:49:16] *** Quits: ihon (Username@176.192.181.241) (Quit: Going offline, see ya! (www.adiirc.com))
[14:52:19] *** Quits: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se) (Remote host closed the connection)
[14:53:02] <deniska> .go is a different language than .py :)
[14:55:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:56:13] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:58:31] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:58:57] *** bluebird is now known as B1U3B1RD
[14:59:36] *** Joins: bluedust (~bluedust@117.207.227.55)
[14:59:40] *** B1U3B1RD is now known as B1ueB1rd
[14:59:57] *** B1ueB1rd is now known as B1uebird
[15:01:02] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:4418:6bcd:21ed:c287) (Ping timeout: 240 seconds)
[15:01:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[15:02:34] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:02:45] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[15:04:30] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[15:04:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:06:16] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[15:06:58] *** Quits: Guest1041 (~smartveda@2405:201:6804:b197:ce16:5f5c:7b27:627) (Quit: Leaving)
[15:08:53] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:10:07] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:10:50] *** Joins: cdown (~cdown@163.114.131.1)
[15:11:02] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[15:12:35] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:13:24] *** Joins: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2)
[15:13:27] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[15:14:01] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:14:35] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[15:15:02] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[15:17:24] *** Joins: bkhl (~bkhl@user/bkhl)
[15:20:03] *** Joins: dambuster (~dambuster@185.193.170.225)
[15:21:29] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[15:22:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:23:08] *** Quits: lork (~lork@2601:603:1301:3630::9bfd) (Quit: Leaving)
[15:23:18] *** Quits: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2) (Ping timeout: 250 seconds)
[15:24:48] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:25:20] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[15:25:23] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[15:26:37] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[15:27:38] *** Joins: Klinda (~superleag@user/klinda)
[15:27:51] *** Joins: nrg (~NRG@user/nrg)
[15:29:09] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[15:31:42] *** Joins: someuser (~user@197.54.16.50)
[15:32:24] *** Quits: B1uebird (~palenoon@103.100.150.2) (Ping timeout: 250 seconds)
[15:32:43] *** Quits: demon__ (~user@197.54.16.50) (Ping timeout: 256 seconds)
[15:34:06] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:34:21] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428)
[15:35:43] *** Joins: MikZyth (~MikZyth@host-196-158-66-217.spbmts.ru)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:15] *** Joins: thatmint (~thatmint@user/thatmint)
[15:39:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:40:09] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[15:40:39] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:47:57] *** Joins: Wanderer_42 (~Wanderer_@dslb-188-109-015-071.188.109.pools.vodafone-ip.de)
[15:48:53] *** Quits: Nutte35 (~Nutte@202.153.80.188) (Read error: Connection reset by peer)
[15:51:14] *** Quits: iomari891 (~iomari891@197.210.71.129) (Quit: WeeChat 3.3)
[15:51:40] *** Joins: kingofcsu (~kingofcsu@114.249.133.203)
[15:52:19] *** Quits: kingofcsu (~kingofcsu@114.249.133.203) (Client Quit)
[15:55:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:56:13] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[15:56:50] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:4418:6bcd:21ed:c287)
[15:59:03] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[15:59:22] *** Joins: kingofcsu (~kingofcsu@114.249.133.203)
[15:59:46] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[16:00:08] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[16:01:01] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:4418:6bcd:21ed:c287) (Ping timeout: 240 seconds)
[16:01:15] *** Joins: LimeOn (~user@user/limeon)
[16:01:21] *** Quits: kingofcsu (~kingofcsu@114.249.133.203) (Client Quit)
[16:01:33] *** chilvers1 is now known as chilversc
[16:01:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[16:02:54] *** Joins: fluter (~fluter@user/fluter)
[16:04:01] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:4418:6bcd:21ed:c287)
[16:04:23] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[16:05:31] *** Joins: kingofcsu (~kingofcsu@114.249.133.203)
[16:05:35] *** Quits: kingofcsu (~kingofcsu@114.249.133.203) (Remote host closed the connection)
[16:07:16] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[16:09:03] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[16:11:48] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[16:11:58] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[16:12:06] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:12:13] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Client Quit)
[16:12:56] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[16:12:58] <merijn> So, what's the state-of-the-art in terms of Python profiling tools? Especially when it comes to memory usage
[16:13:19] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[16:14:26] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428)
[16:15:19] *** Joins: constxd_ (~brad@142.167.170.88)
[16:16:32] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:17:36] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[16:18:33] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[16:18:48] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[16:19:01] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 256 seconds)
[16:20:36] *** Joins: soun (~soun@49.37.47.11)
[16:20:56] *** Quits: soun (~soun@49.37.47.11) (Client Quit)
[16:21:25] <jinsun> I've seen scalene mentioned in this channel before https://github.com/plasma-umass/scalene
[16:21:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[16:21:42] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Client Quit)
[16:21:46] <xheimlich> SnoopJ: that's not what I meant.
[16:22:06] <jinsun> dunno if it is state-of-the-art or even good though, since I didn't use it myself
[16:22:20] *** Joins: soun (~soun@49.37.47.11)
[16:22:24] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[16:22:38] <xheimlich> there's joblib which produces equivalent functionality to parfor. Basically anything that can be expressed as a comprehension is a list of calculations independent from each other, so they can be done separately
[16:22:59] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[16:23:27] <xheimlich> in some scenario from the past I might be distributing tapes with the inner calculations to N different people, each with their own computers and collating their results when they get back to me.
[16:23:34] <xheimlich> That's embarrasingly parallel, right?
[16:24:07] <xheimlich> Now: joblib (and, probably by transitivity, many scikit-learn etc. type tools) has a "n_jobs" argument.
[16:24:14] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Quit: Client closed)
[16:24:44] <xheimlich> quote: "The maximum number of concurrently running jobs, such as the number of Python worker processes when backend=”multiprocessing” or the size of the thread-pool when backend=”threading”. If -1 all CPUs are used."
[16:24:55] <xheimlich> now. have you ever heard about bootstrapping?
[16:25:31] <xheimlich> the np.mean of [1,3,7,5] is (1+3+7+5)/4 = 16/4 = 4. cool.
[16:25:52] *** Quits: MikZyth (~MikZyth@host-196-158-66-217.spbmts.ru) (Quit: WeeChat 3.4)
[16:25:55] <xheimlich> but maybe [1,3,7,5] is a random sample. which means the mean is random too. So we want confidence intervals.
[16:26:25] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[16:26:46] <xheimlich> One thing you can do is sample from [1,3,7,5] with repetition numerous times and calculate the mean each time. this gets you numerous realizations of the mean, from which quantiles can be calculated.
[16:27:01] <xheimlich> of course this is stupid for 4 numbers.
[16:27:11] *** Quits: jokoon (~jokoon@136.252.163.126) (Remote host closed the connection)
[16:27:17] *** Quits: md618 (~md618@37.228.215.251) (Quit: leaving)
[16:27:32] <xheimlich> anyway, bootstrapping is clearly "embarrassingly paallel". also not restricted to mean calculations, you might have stuff that's long running and inverts matrices or worse.
[16:27:55] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[16:27:59] <xheimlich> so cool, you want to run bootstrap simulations of expensive statistics of large datasets in parallel.
[16:28:26] <xheimlich> Now: I'm doing all of this for each of hundreds of stocks from the stock market.
[16:28:37] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[16:29:07] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[16:29:08] <xheimlich> each of these is an independent task too. Again, if I had minions will old timey computers I could give them punch card tape instructions that they will run on their computers. in parallel.
[16:29:30] <xheimlich> now, how do I organize this two-level thing? More concretely, what shall I do about the n_jobs argument in joblib.Parallel?
[16:30:56] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Quit: Leaving)
[16:32:21] <AsenMx> Hello, I want to do the following I have text in sqlite and i want to fetch that text and replace a word from the text with other string, how can i do that? Basically I want to have something in the text like a placeholder where i will put different values there?
[16:34:48] *** Joins: dez (uid92154@user/dez)
[16:35:36] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:36:45] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[16:36:51] *** Joins: ub (~Thunderbi@141.98.252.232)
[16:37:15] <sn_fk_n> AsenMx, you might want SQLite `REPLACE`
[16:37:18] *** Joins: md618 (~md618@37.228.215.251)
[16:37:55] <sn_fk_n> or in a query: https://sqlite.org/lang_corefunc.html#replace
[16:38:28] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Remote host closed the connection)
[16:40:15] <grawity> python has quite a few templating languages
[16:40:53] <AhmedAmerican> is there anyone success to download file automatically using selenium ?
[16:40:58] <AhmedAmerican> am stuck with that for days yet
[16:41:26] <AhmedAmerican> https://stackoverflow.com/q/70405990/7658985
[16:41:48] *** Joins: ahammer (~ahammer@157.122.68.240)
[16:42:40] <AsenMx> sn_fk_n, SORRY my internet dropped, I don't want to replace the actual data in the database i want to replace part of the data i'm fetching. I want to have a text in the base and have certain placeholders in that text that i replace on the fly in python
[16:43:33] *** Quits: kaiseisei (~Thunderbi@171.116.77.170) (Ping timeout: 256 seconds)
[16:43:34] <sn_fk_n> AsenMx, you can use str.replace() or re.sub() for regex
[16:43:46] <AsenMx> is that the best way?
[16:44:08] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:44:10] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:44:13] <sn_fk_n> best in what way?
[16:44:21] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[16:44:25] *** Joins: stonkey2 (~stonkey@user/stonkey)
[16:44:31] *** Joins: shad (~shad@user/shad)
[16:46:13] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[16:46:20] <AsenMx> to fetch the text into a variable and then replace it and use it? Is there more elegant way maybe something within sqlite?
[16:47:40] <xheimlich> that sounds like a sqlite question.
[16:47:49] <sn_fk_n> well you can query the database with `UPDATE` and use the `replace()` function with SQLite but you said you're not replacing the data in the database?
[16:48:17] <xheimlich> ayway, have a look at the aiosql library. it's the best way to interact with sqlite and probably with other sql providers too.
[16:48:26] *** Joins: zamanf (~readyorno@2a02:587:3234:b500:a1d0:4b14:522e:96bc)
[16:48:28] <sn_fk_n> it's not really clear where you're trying to actually edit the strings
[16:48:32] *** Quits: ahammer (~ahammer@157.122.68.240) (Ping timeout: 240 seconds)
[16:49:26] <AsenMx> In database i have generic sms like "hello your shipment [number] has arrived" and i want to send sms like "hello your shipmetnt 123 has arrived" i use this piece of code now
[16:49:28] <xheimlich> despite the name it has nothing to do with async io. i think it was spun out of the async aiosqlite library.
[16:49:43] <AsenMx> text.__str__().replace('[number]', '123'
[16:49:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[16:50:05] <nedbat> AsenMx: text.replace("[number]", "123")     should work
[16:50:18] <nedbat> AsenMx: (pretty much never call __dunder__ methods yourself)
[16:50:19] <xheimlich> also:
[16:50:28] <AsenMx> nedbat, why?
[16:50:46] <nedbat> AsenMx: because str(x) is easier to read than x.__str__.  they aren't meant for you to call.
[16:50:55] <nedbat> AsenMx: and in your case, I think text is already a string
[16:51:09] *** Joins: hlauk (~hlauk@176.33.97.244)
[16:51:11] <sn_fk_n> you can also maybe use str.format()
[16:51:11] <xheimlich> also: you can dodge learning regexes with python string functions for years, and then you'll heavily regret not having years of experience with regex.
[16:51:19] *** Quits: ITD4004 (~ITD4004@187.61.233.248) (Remote host closed the connection)
[16:51:35] *** Joins: fikran (~fikran@user/fikran)
[16:51:59] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[16:52:06] <nedbat> xheimlich: I'm not sure how regex would help in this case
[16:52:10] <AsenMx> nedbat, it comes as a list sadly so str(text).replace() is better ?
[16:52:30] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[16:52:35] <nedbat> AsenMx: if it's a list, then str(text) would add square brackets, wouldn't it?
[16:53:14] <nedbat> AsenMx: maybe you want text[0].replace
[16:53:17] <AsenMx> yeah sqlite fetchone() returns tuple :(
[16:54:15] *** Joins: pagios (~pagios@life.is-a.beauty)
[16:54:24] <xheimlich> AsenMx: again, aiosql helps with this.
[16:54:34] <pagios> hello, how can i install  a package using PIP globally to all users on windows ?
[16:54:40] <pagios> it is installing on my own home dir
[16:55:20] <xheimlich> https://nackjicholson.github.io/aiosql/defining-sql-queries.html#select-one
[16:55:25] *** Quits: mpmc (~mpmc@user/mpmc) (Quit: ZNC - https://znc.in)
[16:55:43] *** Quits: gusto (~Augustus@2a01:b740:13d2::85) (Read error: Connection reset by peer)
[16:57:21] <AsenMx> thanks for the help guys
[16:57:35] *** Joins: mpmc (~mpmc@user/mpmc)
[16:58:35] <pagios> anyone please?
[16:58:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:58:53] *** Quits: hlauk (~hlauk@176.33.97.244) (Quit: Leaving)
[16:59:41] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[17:00:14] <pagios> are you reading me ? or need to identify
[17:00:28] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:01:58] <nedbat> pagios: we see your messages.  i don't know the answer
[17:02:00] *** Joins: gusto (~Augustus@109.255.100.54)
[17:02:03] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[17:02:50] *** Quits: gusto (~Augustus@109.255.100.54) (Client Quit)
[17:04:30] <pagios> i solved it by logging in as administrator
[17:04:31] *** Quits: chgtg (~chg@116.3.16.5) (Ping timeout: 256 seconds)
[17:04:31] <pagios> thanks
[17:06:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[17:06:26] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:07:27] *** Joins: tizca (~tizca@46.19.86.3)
[17:07:35] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[17:08:02] *** Quits: l4yer (~l4yer@178.239.168.223) (Ping timeout: 240 seconds)
[17:08:16] *** Quits: tizca (~tizca@46.19.86.3) (Remote host closed the connection)
[17:08:29] *** Joins: tizca (~tizca@46.19.86.3)
[17:08:37] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[17:09:04] *** Joins: ahammer (~ahammer@157.122.68.240)
[17:09:08] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[17:09:10] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de)
[17:09:31] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[17:10:43] *** Quits: tizca (~tizca@46.19.86.3) (Remote host closed the connection)
[17:10:51] *** Joins: tizca (~tizca@46.19.86.3)
[17:10:58] *** Quits: LordVan_ (~lordvan@gentoo/developer/lordvan) (Read error: Connection reset by peer)
[17:11:33] *** Joins: jinsun__ (~quassel@user/jinsun)
[17:12:14] *** Quits: tizca (~tizca@46.19.86.3) (Remote host closed the connection)
[17:12:33] *** Joins: tizca (~tizca@46.19.86.3)
[17:13:02] *** Quits: tizca (~tizca@46.19.86.3) (Remote host closed the connection)
[17:13:48] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 250 seconds)
[17:14:40] *** Joins: vanessa (~annada@103.160.128.7)
[17:14:57] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[17:15:06] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[17:16:00] *** Joins: chgtg (~chg@116.3.16.5)
[17:16:11] *** Joins: gusto (~Augustus@109.255.100.54)
[17:16:20] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[17:17:31] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:17:32] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[17:17:51] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[17:17:59] <NeilRG> anyone playing Wordle?
[17:18:11] <NeilRG> I wrote a solver for it in Python
[17:19:54] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[17:21:02] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[17:21:06] *** Parts: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) ()
[17:22:37] *** Joins: james[m]123456 (~jamesjame@2001:470:69fc:105::1:5aa1)
[17:22:51] *** Joins: tizca (~tizca@46.19.86.3)
[17:23:17] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[17:23:17] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[17:23:27] <tizca> id like to manage my project correctly and generate a package that'll supply its tools as a "sub namespace". e.g., to be imported as "import company.project". any advice of my options? I've seen, in the past, packages have bracketed optional dependencies, "pip install apackage [opt]"
[17:23:38] *** Joins: d3x (michal@bielaw.ski)
[17:23:42] *** Joins: nomic (~nomic@185.217.117.104)
[17:24:12] <tizca> is that what i should read about? or is it something else?
[17:25:12] *** Joins: NeoCore (~neocore@195.200.221.21)
[17:25:23] *** Quits: tizca (~tizca@46.19.86.3) (Remote host closed the connection)
[17:25:51] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[17:25:52] *** Joins: tizca (~tizca@46.19.86.3)
[17:26:09] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[17:26:14] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[17:27:13] <xheimlich> NeilRG: you mean something that exactly solves Wordle-like puzzles with the minimum number of attempts? Or something that solves the puzzle in six tries with maximum probability?
[17:27:43] *** Quits: jinsun__ (~quassel@user/jinsun) (Quit: No Ping reply in 180 seconds.)
[17:27:47] <NeilRG> xheimlich:  it's an approximate algorithm unfortunately, that tries to minimize the number of moves
[17:28:07] <NeilRG> (in the worst case)
[17:28:11] <Yhg1s> tizca: no, the extras part (the thing in the brackets) is for additional dependencies to install. it's not for namespace packages, really. You can just create a package that installs 'company.project', and make 'company' a namespace package. Or, make 'company' a regular package and depend on it from the package that installs 'company.project'.
[17:28:55] *** Quits: tizca (~tizca@46.19.86.3) (Remote host closed the connection)
[17:29:10] *** Joins: jinsun (~quassel@user/jinsun)
[17:30:18] <xheimlich> I've been looking at a few solvers like that. I have no idea of how to even design one myself (I hear of Wordle this weekend), but I think people are solving the wrong problem.
[17:30:21] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[17:30:42] *** Quits: zamanf (~readyorno@2a02:587:3234:b500:a1d0:4b14:522e:96bc) (Ping timeout: 250 seconds)
[17:31:10] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[17:31:13] <NeilRG> xheimlich: A lot of them are
[17:31:18] <xheimlich> A guaranteed 7-move solution that very rarely solves in 6 moves doesn't solve the game.
[17:31:25] <NeilRG> I did write the exact algorithm, but even with dynamic programming, it's quite slow
[17:31:31] <xheimlich> You have to start with the constraints of the game.
[17:31:38] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--1bc.oracle-ocna.com)
[17:32:00] <xheimlich> It would be easiest if you had the joint distribution of letters in words in the English language.
[17:32:51] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 256 seconds)
[17:32:54] <xheimlich> Like these are 5-grams and true, there are 26^5-ish of them, but most are very very rare. And does the game use repeated letters? I've only played it twice.
[17:32:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:33:09] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[17:33:12] <nedbat> xheimlich: it does
[17:33:36] <xheimlich> but once you try one, it shows all repetitions? Like hangman.
[17:33:53] <xheimlich> there's a great video on hangman by the guy who does conlang critic.
[17:34:05] *** Joins: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef)
[17:34:12] <nedbat> xheimlich: no. it only shows green for letters that are in the right place. So you can have one green tile, but that letter could also appear in another position
[17:34:20] <xheimlich> basically on adversarial play.  hangman is usually played semi cooperatively.
[17:34:25] *** falk689_ is now known as falk689
[17:35:08] <xheimlich> anyway. you have a 5-dimensional Dirichlet distribution. Initialize at first with the letter frequency distributions of English.
[17:35:21] <NeilRG> xheimlich: Why do you need a joint distribution when you have the word list?
[17:35:31] <xheimlich> Then pick some word that exists (something that's very disconcerting is that it won't let you enter nonsense words to suss out letter positions)
[17:35:35] <NeilRG> xheimlich: the game does use repeated letters
[17:35:38] <ahammer> try write it in Prolog
[17:35:45] <xheimlich> NeilRG: that was a bad idea, true.
[17:36:37] <xheimlich> you have a Dirichlet distribution and update. That will solve it, but is there a better model?
[17:37:08] <xheimlich> sorry, I'm being imprecise.
[17:38:21] *** Joins: bloody (~bloody@user/bloody)
[17:38:24] <xheimlich> gah.
[17:38:30] <xheimlich> I have to get back to work.
[17:38:35] <NeilRG> lol
[17:38:36] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[17:38:40] <NeilRG> you should code it
[17:38:57] <NeilRG> looks like my solution solves nearly all words in 4 guesses
[17:39:05] <dante-as> Hi guys, Is someone that has experience with the python-social-auth library?
[17:39:16] <xheimlich> It doesn't really work. It's updating letters independently.
[17:40:10] <nedbat> is there a URL to bugs.python.org that shows bugs reported by a particular user?  My "created by you" URL includes &creator=3911, but that doesn't work when I'm not logged in.
[17:41:25] *** Quits: jinsun (~quassel@user/jinsun) (Quit: No Ping reply in 180 seconds.)
[17:42:52] *** Joins: jinsun (~quassel@user/jinsun)
[17:44:12] *** Joins: rsx (~dummy@ppp-188-174-135-179.dynamic.mnet-online.de)
[17:44:25] <nedbat> the search form doesn't seem to do it either... https://bugs.python.org/issue?@template=search&status=1
[17:47:06] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[17:47:36] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 250 seconds)
[17:47:57] *** Joins: Falc (~Falc@193.191.206.243)
[17:48:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:49:08] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[17:50:29] <Falc> I have a problem with pytest, where there is some cross-contamination between tests. I believe this may be because the code under test (and maybe pytest itself) uses the logging module and it's global config is leaking through... Does anyone have any experience fixing such an issue?
[17:50:35] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[17:51:50] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[17:53:56] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[17:53:58] <pseudonymous> Falc: only really painful memories. But perhaps you can mark tests (@pytest.mark.<SOMETHING>) and then there should be a flag or plugin to run tests in random order. Try gradually including more and more tests and run several times in random order to see if issues arise. Presumably once you get an error, then one of the existing tests cause the newly added one to fail.
[17:55:11] <Falc> pseudonymous: I only have two tests, basically. If I run #1 alone, it's fine. If I run #2 alone, it's fine. But if I run them both, then the output from #1 shows up a second time in that of #2...
[17:55:36] *** Joins: twinsignal (~twinsigna@static-198-54-134-43.cust.tzulo.com)
[17:56:07] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:56:58] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:57:02] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[17:57:02] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[17:57:03] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[17:57:10] <Lvl4Sword> nedbat, Not perfect but try something like .. https://bugs.python.org/issue?%40search_text=nedbat
[17:57:26] *** Quits: thatmint (~thatmint@user/thatmint) (Remote host closed the connection)
[17:57:37] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:57:47] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[17:58:01] *** Joins: thatmint (~thatmint@user/thatmint)
[17:58:07] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:58:16] <nedbat> Lvl4Sword: thanks, but that might be too imperfect.  I wonder why creator= doesn't work.
[17:58:36] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[17:58:37] *** Joins: Kruppt (~Kruppt@50-111-55-116.drhm.nc.frontiernet.net)
[17:59:33] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[18:00:19] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[18:02:39] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[18:03:45] *** Quits: syrius (syrius@titan.stormtek.net) (Remote host closed the connection)
[18:03:48] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[18:03:52] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:04:07] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428)
[18:04:09] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:05:48] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[18:06:08] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[18:06:14] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[18:06:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[18:07:46] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[18:07:50] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[18:08:32] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 240 seconds)
[18:09:13] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[18:09:23] <jinsun> nedbat: did you report 13 in total?
[18:10:32] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[18:12:51] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[18:12:55] *** Quits: soun (~soun@49.37.47.11) (Read error: No route to host)
[18:12:57] *** Joins: esther (~esther@2607:fb90:5fea:df29:b07b:7ba8:4b3c:bfec)
[18:13:29] *** Joins: mfao (~mao@187.1.168.150)
[18:13:54] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[18:14:36] <jinsun> or maybe 13 open right now, 69 in total?
[18:15:10] <xheimlich> I wish there was some cleaner syntax to pass methods as functions.
[18:15:18] <mfao> Why people use the "for line in text.split('\n')" code separating by lines the matches instead of looking the whole text ? I mean what are the advantages? Aren't we loosing processing power?
[18:15:27] <Yhg1s> xheimlich: what do you mean by 'pass'? Because 'obj.method' is pretty clean.
[18:15:28] <xheimlich> like map(lambda x: x.hair_color, people).
[18:15:42] <supakeen> mfao: a lot of things have a logical delimitation by lines (though I'd use splitlines, anyways).
[18:16:07] <Lvl4Sword> nedbat, It's not an upstream issue. So it's something that the PSF did with their install. I can't replicate it with:
[18:16:07] <Lvl4Sword> https://issues.roundup-tracker.org/issue?%40search_text=&title=&%40columns=title&id=&%40columns=id&creation=&creator=rouilj&%40columns=creator&activity=&%40columns=activity&%40sort=activity&actor=&nosy=&type=&components=&versions=&dependencies=&assignee=&keywords=&priority=&%40group=priority&status=1&%40columns=status&resolution=&%40pa
[18:16:07] <Lvl4Sword> gesize=50&%40startwith=0&%40action=search
[18:16:08] <xheimlich> except not "map", and a longer has_a hierarchy of objects and methods.
[18:16:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[18:16:20] <Yhg1s> xheimlich: that's... not passing methods at all? But there's operator.attrgetter or operator.methodcaller.
[18:16:22] <Lvl4Sword> or my copy/paste will mess up. Neat.
[18:16:37] <Yhg1s> xheimlich: perhaps you could show the actual thing you want to improve.
[18:16:54] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:56] <nedbat> jinsun: yes, 13 open of 69.  How did you get that?
[18:16:57] *** Quits: esther (~esther@2607:fb90:5fea:df29:b07b:7ba8:4b3c:bfec) (Ping timeout: 240 seconds)
[18:17:03] *** Joins: kts (~kts@103.73.237.142)
[18:17:06] <mfao> the delimitaion is the \n. But why would you use the splitlines anyway? You dont care too much for efficiency in your code? @supakeen
[18:17:31] <supakeen> mfao: There's little efficiency lost if I need to operate on lines anyways.
[18:17:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:17:59] <jinsun> nedbat: okay so the search thing works after logging in, even if I'm not you, but doesn't work if I'm logged out
[18:18:01] *** Quits: Dotz0cat (~Dotz0cat@h177.233.31.71.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[18:18:19] <xheimlich> Yhg1s: it will not make much sense without a whole context and also this is a ragged edge of the code I'm first evolving interactively and will later be tucked away in a cleaner fashion. But ok.
[18:18:35] <nedbat> jinsun: weird
[18:18:38] <supakeen> I would use neither as they both want to read the entire file which in my case often doesn't fit in my memory anyways :)
[18:19:09] <supakeen> (I tend to use `for line in file:`, no .split/.splitlines)
[18:19:17] *** Joins: hkc (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[18:19:27] <xheimlich> https://bpa.st/6ZXA  thing is, I will ALWAYS be passing "lambda x: mod.this.that.please()".
[18:19:48] <xheimlich> minor annoyance. forget about it.
[18:20:05] <jinsun> so some kind of facebook like behavior in the bpo website I guess, only shows the good stuff after logging in
[18:21:34] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[18:21:36] *** Joins: Dotz0cat (~Dotz0cat@h214.238.31.71.dynamic.ip.windstream.net)
[18:22:17] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[18:22:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9048:56ad:c252:2add)
[18:22:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9048:56ad:c252:2add) (Changing host)
[18:22:26] *** Joins: skapata (~Skapata@user/skapata)
[18:23:27] <nedbat> xheimlich: i'm sure there's a way to define method=TrickyClass()  such that this would work:    fit_rank = fit_and_return(method.vecm.rank)
[18:23:49] *** Joins: jdmark (~jdmark@user/jdmark)
[18:23:59] *** Joins: wolfshappen (~waff@irc.furworks.de)
[18:24:19] <phy1729> Or if it really is always used that way, just remove the argument
[18:24:25] <xheimlich> nedbat: I'm already abusing __call__ in one place where it's really.. called for.
[18:24:32] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:25:29] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f4a2-2bdd-1b71-ce90.res6.spectrum.com)
[18:25:31] <xheimlich> phy1729: yes, but it's used in a loop (as follows)
[18:27:02] <phy1729> If it's a hot loop the repeated function definition will probably hurt too
[18:27:05] *** Quits: Dotz0cat (~Dotz0cat@h214.238.31.71.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[18:27:12] <xheimlich> https://bpa.st/HAJA
[18:27:19] *** Joins: llanhmod_ (~developer@user/domhnall/x-2887755)
[18:27:23] *** Quits: llanhmod_ (~developer@user/domhnall/x-2887755) (Client Quit)
[18:27:34] <xheimlich> see, model.modsystem.modules has many many many mods.
[18:27:39] *** Quits: hkc (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Ping timeout: 256 seconds)
[18:28:13] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[18:28:19] *** Joins: Dotz0cat (~Dotz0cat@h214.238.31.71.dynamic.ip.windstream.net)
[18:28:26] <xheimlich> bitching about syntax is stupid though.
[18:30:05] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 256 seconds)
[18:30:28] <bjs> xheimlich: if you're importing things you can use `as` to get a simpler name
[18:30:31] <xheimlich> ech, the problem is more irregular than I was antecipating.
[18:30:51] <bjs> xheimlich: like `import foo.bar.baz as m` then you can go `m.x` instead of `foo.bar.baz.x`
[18:31:08] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[18:31:16] <bjs> (and in general you can always assign short names to things when useful)
[18:31:33] <xheimlich> each mod has a single rank. (this is a  Vector Error Correction Model).  but each mod has a few (one, two, sometimes 15) cointegrating vectors.
[18:32:10] <xheimlich> and there are calculations done on those vectors. so I need a function like fit_and_return but somehow accomodating that (or just using tuples to get by).
[18:32:14] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 250 seconds)
[18:32:50] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[18:33:00] *** Joins: cdown_ (~cdown@188.214.11.14)
[18:33:00] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[18:33:03] <xheimlich> anyway, I'm really venting.
[18:33:20] <xheimlich> and the place to vent is #emacs  *canned laughter*
[18:33:32] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 250 seconds)
[18:33:48] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[18:34:19] *** Quits: ahammer (~ahammer@157.122.68.240) (Quit: Leaving)
[18:34:31] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Client Quit)
[18:34:45] <xheimlich> Is there an observable difference between an empty dataclass and an ABC?
[18:35:30] <xheimlich> All I want is to type annotate my dataclasses/basemodels. I don't even mypy, I just like knowing what I was thinking later on.
[18:35:32] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[18:35:37] *** cdown_ is now known as cdown
[18:35:56] <bjs> xheimlich: do you mean an empty dataclass and an empty ABC? I mean they both sound a little useless but yes you can tell when something was an ABC
[18:36:18] <bjs> an empty dataclass doesn't sound totally useful, after all the name is a *data*class and if your class has no data why is it a dataclass :)
[18:36:26] <xheimlich> (I know, ABCs sort of enforce that some methods are there. Like your father's type checking)
[18:36:41] <xheimlich> true. should be just class ModuleProperty: pass
[18:38:05] <xheimlich> Python sometimes makes hard problems easy with tuples and dict(zip((((...)))). Easy for the computer to run anyway, I'll have no idea what this mess is next week.
[18:38:37] *** Joins: nosklo (~nosklo@201.17.157.59)
[18:39:18] *** Joins: programmar (~whatever@118.69.128.37)
[18:40:12] <programmar> question, imagine if my memory is 512MB and i run "a = function()" where function() will return a list with the size of over 512MB, that is bad but what if i do "a = function()[0]" ?
[18:40:32] <bjs> programmar: then it'll make a list of 512MB and then get the first element and then assign that to a
[18:40:47] <programmar> yea i thought so, so it would also be bad ?
[18:40:52] <xheimlich> why is 512 the magic number.
[18:40:57] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[18:41:05] <programmar> because my RAM is actually 512MB
[18:41:07] <bjs> programmar: well if making a list of size over 512MB is a "bad" thing, then yes
[18:41:20] <bjs> but if that's what function() does then it's function() that's bad not the [0] part
[18:41:51] *** Quits: nosklo (~nosklo@201.17.157.59) (Client Quit)
[18:42:19] <bjs> programmar: you'll have to re-write the function so it doesn't return a huge list
[18:42:54] <programmar> hm, then how else can i 100% safe to loop through each key in a nosql database and apply some stuffs to it such as regex or some checking, i would first need to extract all of the available keys as a list first
[18:42:58] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[18:43:06] <programmar> i mean in real life that key will hardly ever pass 512MB but who knows ?
[18:43:09] <programmar> it could ?
[18:43:31] <bjs> programmar: why do you need to extract as a list?
[18:44:01] <programmar> because the library i use doesn't allow me to extract keys through indexing or anything that doesn't require keys extractions
[18:44:09] <programmar> i heard about elara so i am trying that
[18:46:00] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[18:46:21] <bjs> programmar: i'm not sure what you mean,  in something like mongodb you can `for doc in db.somecollection.find(): ...` and this will get all the documents without having to store anything in a list
[18:46:29] <bjs> surely the library you are using has some similar thing?
[18:46:50] <programmar> bjs: i have been reading through their README https://github.com/saurabh0719/elara, and still i can't find similar things
[18:47:03] <programmar> or it does exist but my english is too poor to detect that
[18:47:32] <programmar> they have exportdb() but that is gonna make my life harder
[18:47:41] <programmar> even tho it could save me from the worrying of over-memory
[18:47:48] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[18:48:02] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Client Quit)
[18:49:32] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[18:49:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[18:49:32] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[18:50:12] <xheimlich> programmar: I've wasted some time I could be basking in the sun or something rewriting stuff on my end that was already implemented *and* fast on MongoDB.
[18:50:19] <xheimlich> Lessons learned, talk to people.
[18:50:20] <bjs> programmar: I've never seen this library before, it's like a big Python dictionary?
[18:50:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:14c0:3d8e:c030:40e0)
[18:50:34] *** Joins: hightower3 (~hightower@212.15.178.51)
[18:50:45] *** Joins: chele_ (~chele@user/chele)
[18:50:46] *** Quits: chele (~chele@user/chele) (Read error: Connection reset by peer)
[18:50:52] <programmar> bjs: yea
[18:50:59] <xheimlich> (MongoDB guy was someone else.)
[18:51:07] *** Quits: hightower2 (~hightower@95.168.116.16) (Read error: Connection reset by peer)
[18:51:36] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[18:51:37] <bjs> programmar: what does that retmem function do? I do not like the way this library is written
[18:51:39] *** Quits: kts (~kts@103.73.237.142) (Quit: Konversation terminated!)
[18:51:46] <hodapp_> it's fine, I completely blew a programmer's mind once by informing them that FPGAs are a thing that exist
[18:51:57] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[18:52:15] <hodapp_> and another one's mind when I showed him that his entire problem could be solved with one SVD
[18:52:16] <bjs> programmar: it might be that this library does not provide a way to loop over all the keys without loading all the keys into memory.
[18:53:24] *** Joins: ArtfulDodger (~ArtfulDod@147.210.204.164)
[18:53:59] <programmar> retmem() means all of the cached contents, like data that is written before it is being committed
[18:54:08] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[18:54:31] <programmar> i mean this could also be an over-worrying situation, like 90% of the case my list will ever even pass through 100MB but there is still 10% of nastiness
[18:54:46] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 250 seconds)
[18:55:09] <hightower3> Does anyone know if there is a module in node.js world which works like Alembic? (I.e. has the ability to automatically generate migrations/diffs based on changes in model files)
[18:55:12] <programmar> if it doesn't support that, i guess i can live along with a bit of danger :P
[18:55:42] <programmar> xheimlich: i have kinda gone quite of a long journey now and it's only below 10% that my memory can be overflowed so, i guess it's cool
[18:56:18] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:56:49] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::4)
[18:56:53] <xheimlich> is there some way to list at runtime the *user-defined* methods of a class, but not the stock (presumably inherited from object?) dunder etc. methods?
[18:56:56] *** Quits: raym (~raym@user/raym) (Ping timeout: 250 seconds)
[18:57:14] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:57:14] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:57:48] *** Quits: gusto (~Augustus@109.255.100.54) (Ping timeout: 250 seconds)
[18:58:12] *** Joins: raym (~raym@user/raym)
[18:58:27] *** Joins: gusto (~Augustus@109.255.100.54)
[18:58:30] <xheimlich> dataclasses have this, true
[18:58:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[18:58:52] <bjs> Yes you can just inspect the fields of a dataclass very simply
[18:59:02] <bjs> xheimlich: what is it you are trying to design?
[18:59:18] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[18:59:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:14c0:3d8e:c030:40e0) (Ping timeout: 240 seconds)
[18:59:58] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[19:00:01] *** cdown_ is now known as cdown
[19:00:40] *** Joins: junebug (~junebug@2600:1700:3db0:2540:12aa:2fee:7b0a:8e2a)
[19:00:56] *** Joins: fikran (~fikran@user/fikran)
[19:01:05] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[19:01:47] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Quit: leaving)
[19:02:17] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[19:02:35] *** Joins: wolfshappen (~waff@irc.furworks.de)
[19:02:48] *** Joins: soun (~soun@49.37.47.11)
[19:03:11] *** Quits: dhellmann_ (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[19:03:37] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[19:03:53] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:04:11] <bjs> programmar: you could also considering using something more mature like MongoDB which certainly does have this ability
[19:04:42] *** Quits: Kruppt (~Kruppt@50-111-55-116.drhm.nc.frontiernet.net) (Read error: Connection reset by peer)
[19:04:44] *** Quits: Nutte35 (~Nutte@27.114.187.37) ()
[19:04:44] <bjs> whether or not they work for your use-case is for you to decide, obviously :)
[19:04:51] <programmar> hhm yea i am considering it when my project get scalable
[19:04:57] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[19:05:03] *** Joins: jbeimler (~quassel@75.183.82.166)
[19:07:04] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:07:14] *** Joins: zamanf (~readyorno@2a02:587:3234:b500:a1d0:4b14:522e:96bc)
[19:09:04] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 250 seconds)
[19:09:09] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[19:09:18] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[19:09:21] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Client Quit)
[19:09:25] *** Joins: joes (~joes@dyndsl-095-033-032-093.ewe-ip-backbone.de)
[19:09:50] *** Parts: Wanderer_42 (~Wanderer_@dslb-188-109-015-071.188.109.pools.vodafone-ip.de) (carry on)
[19:10:28] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[19:11:38] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[19:13:14] *** Quits: junebug (~junebug@2600:1700:3db0:2540:12aa:2fee:7b0a:8e2a) (Remote host closed the connection)
[19:13:53] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[19:14:13] *** Joins: spithash (~spithash@user/spithash)
[19:17:05] *** Quits: Jong (~Jong@2620:10d:c090:400::5:44d9) (Quit: Textual IRC Client: www.textualapp.com)
[19:17:39] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Quit: leaving)
[19:18:10] *** Joins: junebug (~junebug@2600:1700:3db0:2540:fb33:a80c:6390:494)
[19:20:51] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:4418:6bcd:21ed:c287) (Read error: Connection reset by peer)
[19:20:55] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:359b:ef20:8303:bcba)
[19:21:10] *** Joins: Kruppt (~Kruppt@50-111-55-116.drhm.nc.frontiernet.net)
[19:21:37] *** Quits: hays (rootvegeta@fsf/member/hays) (Ping timeout: 240 seconds)
[19:22:16] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[19:22:54] *** Quits: Kruppt (~Kruppt@50-111-55-116.drhm.nc.frontiernet.net) (Client Quit)
[19:24:28] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:f823:4d62:8643:d53b)
[19:24:43] *** Joins: hays (~rootveget@fsf/member/hays)
[19:25:28] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:25:36] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--1bc.oracle-ocna.com) (Read error: Connection reset by peer)
[19:27:09] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[19:27:10] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[19:27:53] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[19:28:16] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:359b:ef20:8303:bcba) (Ping timeout: 245 seconds)
[19:28:36] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[19:28:36] <xheimlich> I have an object. This object has a property "content".
[19:28:49] <xheimlich> I want my_thing[2] to desugar to my_thing.content[2]
[19:29:01] <xheimlich> (content is known to be a list)
[19:29:06] <xheimlich> again with the syntax, I know.
[19:29:27] <xheimlich> there's probably a dunder for that, right?
[19:29:48] <supakeen> The __getitem__ one.
[19:30:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:31:51] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[19:32:22] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[19:32:44] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[19:33:52] *** Joins: subopt (~subopt@2603-8081-2302-459a-002c-be69-8646-8eca.res6.spectrum.com)
[19:34:12] *** Quits: AlanMD (~AlanMD@193.104.215.11) (Ping timeout: 250 seconds)
[19:34:20] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[19:34:52] *** Joins: MrCollinsGA (~MrCollins@199.231.255.146)
[19:35:53] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:36:13] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 256 seconds)
[19:37:05] <MrCollinsGA> Hello. I am using ubuntu and python, and in a virtual environment via terminal, I keep getting this error when trying to install bs4, super python newb any help is appreciated. https://paste.debian.net/1227406/
[19:38:30] <Yhg1s> MrCollinsGA: how did you create the virtualenv, and as what user?
[19:39:24] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:40:02] <MrCollinsGA> sudo python3 -m venv my_env
[19:40:03] *** Joins: bluedust_ (~bluedust@185.248.85.41)
[19:40:12] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::4)
[19:40:12] <MrCollinsGA> as root did I mess that up
[19:40:17] <Yhg1s> MrCollinsGA: okay, don't create the virtualenv as root.
[19:40:24] <MrCollinsGA> ok Yhg1s
[19:40:33] <Yhg1s> MrCollinsGA: you can just delete the directory (as root), and recreate it as a regular user.
[19:40:34] <MrCollinsGA> so can I just change the permissions
[19:40:39] <Yhg1s> (in a directory the user can write to.)
[19:40:39] <MrCollinsGA> oh ok Yhg1s
[19:40:44] <MrCollinsGA> ok! one sec
[19:40:55] <pseudonymous> Falc: then I don't think there's much to do aside from digging in. Sounds like a very small test suite. Are those tests essentially big integration tests?
[19:41:08] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 250 seconds)
[19:41:19] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[19:41:24] <MrCollinsGA> Yhg1s, is it ok to have my directory that the env is in, to be chowned by my regular user?
[19:41:29] *** Quits: hays (~rootveget@fsf/member/hays) (Ping timeout: 256 seconds)
[19:41:45] <Yhg1s> MrCollinsGA: sure, as long as the user has write access to it.
[19:42:17] *** Joins: magla (~gelignite@55d4381b.access.ecotel.net)
[19:42:41] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[19:43:02] *** Quits: bluedust (~bluedust@117.207.227.55) (Ping timeout: 240 seconds)
[19:43:35] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:43:35] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Client Quit)
[19:44:31] *** Joins: KeiraT (~k@cpc152719-sotn17-2-0-cust364.15-1.cable.virginm.net)
[19:45:02] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[19:45:38] *** Joins: nyah (~nyah@94.6.71.219)
[19:47:12] *** Quits: adeliktas (~adeliktas@i59F4A597.versanet.de) (Ping timeout: 250 seconds)
[19:47:28] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::4) (Quit: Leaving)
[19:48:07] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 256 seconds)
[19:48:39] *** Quits: junebug (~junebug@2600:1700:3db0:2540:fb33:a80c:6390:494) (Quit: Leaving)
[19:48:57] *** Joins: djapo (~archangel@user/djapo)
[19:50:01] *** Joins: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net)
[19:50:12] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[19:50:34] *** Joins: Pandadub (~Barones@189.50.80.77)
[19:50:49] *** Joins: adeliktas (~adeliktas@i59F4DA04.versanet.de)
[19:51:32] *** Quits: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se) (Ping timeout: 250 seconds)
[19:54:23] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:359b:ef20:8303:bcba)
[19:54:30] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[19:54:55] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:55a2:57c6:2850:4dcb)
[19:55:03] <lucerne> I want to benchmark a Python function with regards to both its execution time and the maximum memory usage. Any suggestions?
[19:56:06] <mefistofeles> lucerne: profiling, there are many options for profiling
[19:56:18] <mefistofeles> but the builtin one might do it, cprofile
[19:56:26] *** Quits: soun (~soun@49.37.47.11) (Read error: Connection reset by peer)
[19:56:36] *** Joins: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se)
[19:56:44] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[19:57:43] *** Quits: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net) (Quit: Leaving)
[19:57:48] <mefistofeles> or vprof even
[19:58:26] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[19:58:41] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:359b:ef20:8303:bcba) (Ping timeout: 245 seconds)
[19:58:47] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[19:59:29] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:00:46] *** Joins: Crassus (~Crassus@user/crassus)
[20:01:02] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[20:01:10] <hightower3> lucerne, for a very simple method, you can run the python program under `time` in shell, which will give you a time breakdown when it exits, and for memory, since script languages don't return memory to the OS, the RSS amount you see in the process list is the max amount it had actually allocated
[20:01:43] *** Joins: morteza24 (~morteza24@37.98.107.222)
[20:01:48] <lucerne> Thanks
[20:02:47] *** Joins: hays (rootvegeta@fsf/member/hays)
[20:02:58] *** Joins: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net)
[20:03:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:03:37] <Lvl4Sword> hightower3, Wouldn't timeit be better?
[20:03:37] *** Joins: shad (~shad@user/shad)
[20:03:48] *** Joins: mossman93 (~quassel@user/mossman93)
[20:03:48] *** Joins: mistermattyg (~mistermat@2a00:23c5:ed80:e501:cd0:bf92:3314:c752)
[20:03:50] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:04:19] *** Quits: mistermattyg (~mistermat@2a00:23c5:ed80:e501:cd0:bf92:3314:c752) (Remote host closed the connection)
[20:04:19] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[20:05:10] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Remote host closed the connection)
[20:05:14] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[20:05:18] <hightower3> Depends on the purpose. I clearly said my suggestion is a 'very simple method'.
[20:05:29] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:05:30] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:06:02] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[20:06:07] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Remote host closed the connection)
[20:07:19] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:08:00] *** Joins: djapo (~archangel@user/djapo)
[20:08:37] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:30b0:4e97:c707:d3fa) (Remote host closed the connection)
[20:09:04] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:30b0:4e97:c707:d3fa)
[20:09:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-29d9-0277-7525-223b.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:09:10] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[20:09:23] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[20:10:13] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[20:10:19] <Lvl4Sword> In regards to memory usage, there's tracemalloc as referenced in https://www.geeksforgeeks.org/monitoring-memory-usage-of-a-running-python-program/ and https://docs.python.org/3/library/tracemalloc.html
[20:10:41] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[20:10:53] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[20:11:05] *** Joins: edd_lc (~manjaro-i@85.64.197.64.dynamic.barak-online.net)
[20:12:16] <morteza24> Is it possible to write a program that finds the number of solutions to this equation in an acceptable time? https://bpa.st/2DCQ
[20:12:21] <morteza24> I wrote a bunch of for loops but I think it's gonna take weeks to find the answer
[20:13:13] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[20:13:46] <shad> morteza24: its a problem for #algorithms more than #python
[20:14:11] <shad> Python ain't your problem here, it would take weeks with any langage if your algorithm is O(n^4)
[20:14:11] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:14:25] *** Joins: frmlof (~frmlof@70.243.238.191)
[20:14:29] <morteza24> sorry I will ask it there. thank you
[20:14:29] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[20:14:32] <shad> O(n^7) my bad
[20:14:34] <nedbat> morteza24: you can definitely do it without actually considering each solution
[20:14:45] <phy1729> seems like a perfect usecase for dynamic programming
[20:14:47] <grym> 8 unknowns, one equation ...
[20:14:57] <grym> sad times
[20:15:02] <nedbat> grym: that's why there is more than one solution :)
[20:15:07] <grym> nedbat: heaps
[20:15:59] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:16:01] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:16:02] <jinsun> wthout any constraints on the values it is infinite solutions
[20:16:09] <grym> i can inspect that and come up with the boring one :)
[20:17:11] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b0ad:b4e3:33b4:d428) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:17:26] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[20:18:22] *** Joins: charlie_sando (~charlie_s@2600:6c60:417f:24b5:fefe:a416:f283:9412)
[20:19:30] <edd_lc> what's the right way to manage a "sub-namespace" package? id like to develop the pacakge "somepackage" and allow others to install it in such a way that they can `import company.somepackage` but not hinder their ability to develop their own packages, e.g. "differentpackage", and do the same. with the final result being able to install all company packges and `import company.differentpacakge; import company.project`
[20:19:53] <edd_lc> s/others/company teams/g
[20:20:09] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:30b0:4e97:c707:d3fa) (Quit: pvergain)
[20:20:17] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[20:20:51] <edd_lc> pointer to the right docs to get me started or right noun to look up and read about would be amazing
[20:21:33] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[20:21:43] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:22:53] *** Quits: bkhl (~bkhl@user/bkhl) (Quit: ZNC - https://znc.in)
[20:22:55] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[20:22:57] *** Quits: chele_ (~chele@user/chele) (Remote host closed the connection)
[20:23:22] *** Quits: bluedust_ (~bluedust@185.248.85.41) (Remote host closed the connection)
[20:23:42] <morteza24> nedbat any hint on how to do it without considering each solution?
[20:24:00] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:24:03] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:25:16] <nedbat> morteza24: let's think about this: suppose the equation were: i + (100*a) + (200*b) == 200.  there's only one where b == 1.  There's one where b == 0, a == 2.  And there are 100 where b == 0, a == 1
[20:25:36] <nedbat> and 200 where b == 0, a == 0
[20:25:47] <nedbat> oops, that's not right.
[20:25:48] <phy1729> morteza24: https://en.wikipedia.org/wiki/Dynamic_programming   the examples may be helpful
[20:25:56] <nedbat> 1 where b == 0, a == 1,  and 1 where b == 0, a == 0
[20:26:15] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:26:16] <charlie_sando> Dynamic programming is caching results for the same inputs, saved you some time ;)
[20:26:18] *** Quits: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1323-89.w90-79.abo.wanadoo.fr) (Quit: Bridge terminating on SIGTERM)
[20:26:31] <phy1729> well you have to structure it right
[20:26:43] *** Joins: Guest9947 (~Guest99@ip5f5bf6f7.dynamic.kabel-deutschland.de)
[20:27:31] <charlie_sando> Heres a decorator for it https://gist.github.com/qorrect/bc5ddbc063508cbd5a6031e6595bbe41
[20:28:17] <arash> Hello, I'm new to python, how can I pass parameters to a class? its not working like this https://0bin.net/paste/h6H+tFK3#VXqB2BxnDEt4qLLE+Sl1Cucecd-5bl+oU4jxPpm0vMF
[20:28:42] <phy1729> you have subproblems where for p it can be 0 or 1, if 0 you have a remainer of 200 and consider o, 0 or 1 or 2 then you have a remainder and consider n and cache at each level so you don't have to compute twice
[20:29:02] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[20:29:07] <arash> here is the class document https://docs.pyrogram.org/telegram/functions/channels/edit-creator?highlight=editcreator
[20:29:18] <Guest1058> whats the difference between " and """ when using print(f"hello") for example
[20:29:42] <charlie_sando> Guest1058, """this can span multiple lines"""
[20:30:59] <morteza24> thank you guys so much nedbat charlie_sando phy1729
[20:30:59] <arash> in php its like EditCreator("param1","param2","param3"). how it is in python?
[20:31:25] <edd_lc> arash, the same
[20:31:36] <Guest1058> thx
[20:31:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[20:31:53] <Guest9947> arash: just make sure to add "self" as the first parameter to the __init__ method
[20:32:12] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[20:32:13] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[20:32:19] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:32:31] <edd_lc> arash, you can also take the recommendation to be explicit and write `EditCreator(channel="param1", user_id="param2", password="param3")`. it's a good habit to build
[20:33:31] <phy1729> Though depending on the signature the key= part may be manditory or forbidden
[20:33:42] *** Joins: dextercd (~dexter@2a02:a450:f25d:1:76d4:35ff:fefe:34c)
[20:33:55] <arash> edd_lc, thank you. now fixed
[20:34:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[20:34:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:34:26] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:35:28] <Guest1058> How can I comment code like this https://bpa.st/65CA ?
[20:35:45] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:35:48] <Guest1058> comment like it does not execute
[20:36:18] *** Quits: Guest9947 (~Guest99@ip5f5bf6f7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[20:36:41] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Client Quit)
[20:37:12] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[20:37:48] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:38:00] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[20:38:03] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[20:39:35] *** Quits: rsx (~dummy@ppp-188-174-135-179.dynamic.mnet-online.de) (Quit: rsx)
[20:39:41] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 256 seconds)
[20:40:09] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[20:40:49] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:41:02] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[20:41:05] *** Quits: joes (~joes@dyndsl-095-033-032-093.ewe-ip-backbone.de) (Changing host)
[20:41:05] *** Joins: joes (~joes@hardfought/member/joes)
[20:41:35] *** Quits: twinsignal (~twinsigna@static-198-54-134-43.cust.tzulo.com) (Quit: Leaving)
[20:42:00] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:e326:3af1:9e3c:cc13) (Quit: Leaving)
[20:42:37] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[20:43:01] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:43:53] <jinsun> put a # in front of each line
[20:44:44] *** Joins: fef (~thedawn@user/thedawn)
[20:45:43] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:55a2:57c6:2850:4dcb)
[20:45:56] *** Joins: ice9 (~ice9@user/ice9)
[20:46:19] *** Joins: Atque (~Atque@user/atque)
[20:46:39] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[20:46:58] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:48:34] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:49:31] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10fd:2e9d:55a2:57c6:2850:4dcb) (Ping timeout: 245 seconds)
[20:49:51] *** Joins: Betal (~Betal@user/betal)
[20:50:55] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[20:50:57] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:dc64:3ab8:7f09:81e5) (Ping timeout: 240 seconds)
[20:51:27] *** Joins: bkhl (~bkhl@user/bkhl)
[20:52:29] <llanhmod> Hi, which modules can I consider for usage when doing Authentication? so far all I have identified is requests.Session.
[20:53:13] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[20:53:31] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[20:53:59] <llanhmod> oh, and bcrypt
[20:54:24] *** Joins: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net)
[20:54:44] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[20:55:10] <ba> llanhmod: what are you trying to do?
[20:56:38] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:56:42] *** Joins: pepper (~pepper@user/pepper)
[20:56:44] *** Quits: bkhl (~bkhl@user/bkhl) (Quit: ZNC - https://znc.in)
[20:57:43] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[20:58:05] *** Joins: hackers (~self@user/hackers)
[20:58:12] *** Joins: bkhl (~bkhl@user/bkhl)
[20:58:12] <llanhmod> ba, right now, just research and gather the tools needed for 1) password hashing/encryption, 2) session validation  and 3) anything else to do with authentication/authorization for user logins and such
[20:58:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:58:31] *** Quits: stonkey2 (~stonkey@user/stonkey) (Quit: Leaving)
[20:58:34] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd)
[20:59:04] <ba> llanhmod: you're hoping to run a website where users can register + sign in, from the sounds of it?
[20:59:06] <llanhmod> ba, in short, I'm looking to identify any and all requirements
[20:59:35] <llanhmod> ba, I'm hoping to implement security controls...yes.
[20:59:58] <deniska> llanhmod: if you are making a website, consider using django, it handles auth in an ok way
[21:00:06] *** hackers is now known as remote
[21:00:21] <ba> I'm afraid you're not going to have much luck figuring out which libraries to use unless you describe specifics.
[21:00:24] <llanhmod> deniska: well, not using django... although I was considering it.
[21:00:45] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[21:01:12] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:01:36] <ba> flask is pretty handy for websites. I've used https://flask-login.readthedocs.io/en/latest/ before, which uses something like bcrypt under the hood
[21:02:54] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[21:03:02] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:145:48aa:c4b6:f056)
[21:03:06] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:a00a:fbfb:340a:8fb7)
[21:03:43] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[21:04:32] <llanhmod> hm
[21:04:59] <llanhmod> guess I have some more reading/research to conduct. thanks for the tips ba, deniska
[21:05:22] *** Parts: llanhmod (~developer@user/domhnall/x-2887755) ()
[21:05:27] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:c84d:24ef:5079:3a2f)
[21:05:49] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[21:05:53] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr)
[21:07:08] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[21:07:35] *** Quits: zivoni (~tomas@user/zivoni) (Quit: WeeChat 3.3)
[21:07:56] *** Joins: mh3f_ (~mdhowle@spcvpn.sonoco.com)
[21:08:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:09:40] *** Joins: bluedust (~bluedust@185.248.85.26)
[21:10:17] *** Joins: fikran (~fikran@user/fikran)
[21:10:24] *** Quits: someuser (~user@197.54.16.50) (Ping timeout: 250 seconds)
[21:10:24] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 250 seconds)
[21:10:32] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:11:12] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:11:50] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[21:12:08] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 250 seconds)
[21:12:20] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[21:13:00] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[21:13:52] *** Quits: magla (~gelignite@55d4381b.access.ecotel.net) (Ping timeout: 250 seconds)
[21:13:58] *** Joins: geli (~gelignite@55d4fbf8.access.ecotel.net)
[21:14:04] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[21:14:23] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[21:14:25] *** Quits: bluedust (~bluedust@185.248.85.26) (Ping timeout: 256 seconds)
[21:14:29] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[21:14:31] *** Joins: heday (~heday@2a00:23c5:12a3:9400:14bb:b08e:2043:52a0)
[21:16:02] *** Quits: ham5urg_ (~ham5urg@149.233.170.98.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 250 seconds)
[21:17:32] <heday> Hi guys,I was wondering if this is possible: I have some python files in Folder1/a/b/c/x.py and some others in Folder2/a/b/c/y.py. is there a way I can import them as say from a.b.c import x,y ?
[21:17:48] *** Quits: joes (~joes@hardfought/member/joes) (Quit: Leaving)
[21:18:56] *** Joins: Bakunin (~Bakunin@user/lindis)
[21:19:25] *** Joins: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[21:19:27] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Remote host closed the connection)
[21:19:47] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[21:20:20] <meatballs> llanhmod: you could have a look at https://anvil.works It has user authentication available as a built in service
[21:21:32] *** Quits: mh3f_ (~mdhowle@spcvpn.sonoco.com) (Ping timeout: 240 seconds)
[21:21:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:22:14] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[21:23:03] <edd_lc> heday, maybe using soft links but the requirement sounds like black magic which i'd avoid. i vote you stick with `from folder1.a.b.c import x; from folder2.a.b.c import y`
[21:23:03] *** Quits: dude-x_ (~textual@72.76.74.165) (Quit: Textual IRC Client: www.textualapp.com)
[21:24:00] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[21:24:53] *** Joins: thevar1able (~textual@46.39.45.122)
[21:25:14] *** Joins: dude-x (~textual@72.76.74.165)
[21:26:18] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[21:26:21] <jinsun> it is actually possible without any links, if a, b, c in both folders don't have a __init__.py and both Folder1 and Folder2 are in sys.path
[21:26:22] *** Joins: xkuru (~xkuru@user/xkuru)
[21:26:55] *** Joins: bluedust (~bluedust@185.248.85.26)
[21:26:55] <jinsun> but yes, not a good idea to have that kind of setup
[21:27:55] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:28:14] *** Joins: bluedust_ (~bluedust@117.207.227.55)
[21:28:56] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[21:30:12] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[21:30:50] *** Joins: stonkey (~stonkey@user/stonkey)
[21:30:56] <heday> edd_lc: thanks. The problem is that i am trying to create an add-on for another python program, but this program needs all the add-ons to be in its folder (because their modules should be imported in the same namespace)
[21:31:11] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: Textual IRC Client: www.textualapp.com)
[21:31:27] *** Joins: thevar1able (~textual@46.39.45.122)
[21:31:28] <heday> jinsun: I will try that, thanks
[21:32:02] *** Quits: bluedust (~bluedust@185.248.85.26) (Ping timeout: 240 seconds)
[21:32:07] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[21:33:34] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:34:04] *** Joins: thevar1able (~textual@46.39.45.122)
[21:36:24] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 250 seconds)
[21:36:41] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[21:37:12] *** Joins: thevar1able (~textual@46.39.45.122)
[21:38:27] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:38:28] <heday> jinsun: interesting in ipython, althugh it does load classes from the first folder, it complains that the second folder that 'no module named a.b.c'
[21:38:46] *** Joins: \mSg (mSg@user/msg/x-0285936)
[21:39:10] *** Joins: Croves (~Croves@2804:58:c1a5:4400:fd1e:571:32c1:6a8d)
[21:40:15] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[21:40:54] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:5c68:5817:cec9:586d)
[21:41:16] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[21:42:07] *** Quits: five64333 (~five6@8.40.26.70) (Quit: Ping timeout (120 seconds))
[21:42:14] *** Joins: vassenn (~vassen@178.35.78.65)
[21:42:30] *** Joins: five64333 (~five6@8.40.26.70)
[21:42:32] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[21:42:34] <Croves> Hey folks. So I have a parent class BaseJob and in it I have two properties: run_mode and ticket. Basically, run_mode decides if the credentials being used is test/prod and ticket is the ID of a Zendesk ticket that I need to manipulate using a child class called ZendeskJob that inherits from BaseJob. The problem is, in the process() method of the
[21:42:35] <Croves> child class, I can't access the Ticket property. What am I missing? I end up getting an `AttributeError: 'property' object has no attribute`
[21:42:39] *** hodapp_ is now known as hodapp
[21:42:51] <jinsun> heday: well I said it is possible, but not really a good idea to try it, because of hard to debug situations like this one that it can create, can you show the full traceback you get? and the folder tree for both Folder1 and Folder2? and the contents of sys.path?
[21:44:03] <edd_lc> Croves: can you, please, show a minimal example?
[21:44:39] <Celelibi> Should the requirements.txt contain only the direct dependencies or all the transitive dependencies as well?
[21:45:18] *** Joins: idk (~idk@2804:29b8:505a:f33d:8187:1eee:9f1b:78aa)
[21:47:01] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[21:47:28] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[21:48:10] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[21:48:12] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[21:48:31] <Croves> edd_lc Sorry I can't paste the code here since I'm working in this project with an NDA and etc... but it's basically this: https://bpa.st/WG2A
[21:48:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:50:39] *** Joins: l4yer (~l4yer@178.239.168.223)
[21:50:55] <bjs> Croves: properties are attributes of the objects, not the class
[21:51:17] <bjs> Croves: in ZendeskJob.process there is no BaseJob instance, so you cannot get the ticket of it
[21:52:02] <bjs> Croves: the process @classmethod is a bit weird, why is it a @classmethod?
[21:52:32] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 240 seconds)
[21:52:56] *** Joins: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de)
[21:52:57] *** Quits: MajorBiscuit (~MajorBisc@c-001-020-016.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[21:53:02] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd) (Ping timeout: 240 seconds)
[21:53:36] *** TML_ is now known as TML
[21:54:00] <Croves> bjs the @classmethod is - somehow - part of our code standard. I don't know why either...
[21:54:15] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[21:54:45] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[21:54:47] <Croves> bjs so in process() I need to instantiate the class like ticket = BaseJob even when it's inheriting from it?
[21:54:59] *** Quits: mfao (~mao@187.1.168.150) (Read error: Connection reset by peer)
[21:55:06] <bjs> Croves: a classmethod is a method that doesn't use the instance,  but then inside you're trying to use the ticket
[21:55:13] <bjs> it just doesn't really make sense why it's a @classmethod at all
[21:55:29] <bjs> Croves: what is process() supposed to do and how are you supposed to use it?
[21:55:46] *** Joins: stonkey2 (~stonkey@user/stonkey)
[21:55:49] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 240 seconds)
[21:56:25] <Croves> pbjs process() is suposed to run a bunch of other methods of ZendeskJob. In my application, I do something like this: job = ZendeskJob(); job.process()
[21:56:36] <bjs> Croves: then why is it a classmethod?
[21:56:38] <johnkeats6> (why didn't they call it @staticmethod)
[21:56:41] <Croves> bjs process() is suposed to run a bunch of other methods of ZendeskJob. In my application, I do something like this: job = ZendeskJob(); job.process()
[21:57:02] <bjs> Croves: sure everything here makes perfect sense except the "@classmethod" line which is very confusing and I'm not sure why it's there
[21:57:27] <bjs> Croves: what would it mean to say ZendeskJob.process()  without making a job?
[21:57:27] <Croves> well yeah I agree but don't know how to jusitfy that for you
[21:57:29] *** Quits: edd_lc (~manjaro-i@85.64.197.64.dynamic.barak-online.net) (Ping timeout: 256 seconds)
[21:57:53] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[21:58:21] <Croves> bjs I don't understand sorry
[21:58:39] *** Joins: dhwohrom^ (~dhwohrom@wsip-98-188-242-61.mc.at.cox.net)
[21:58:40] <bjs> Croves: well, it's a classmethod, the purpose of @classmethod is it lets you write ZendeskJob.process()
[21:58:57] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[21:59:13] <Croves> Ah yes, I see. Well, technically yes but we still need to create an instance of it by job = ZendeskJob lol
[21:59:17] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[21:59:42] <bjs> Croves: so I come back to my question of "why is the @classmethod line there", what happens if you just delete that line?
[22:00:08] <Croves> they will probably reject my code review as they did it before
[22:00:24] <Croves> But is @classmethod creating the issue with the property?
[22:00:57] *** Joins: zebrag (~chris@user/zebrag)
[22:00:59] <bjs> Croves: it's not an issue with property, it's just an issue with "@classmethod there doesn't seem to make any sense@
[22:02:02] <heday> jinsun: I managed to make it work, thanks for the help! it was very helpfull (I see your point. I will use it like this while the main mainterers don't create a system to avoid this ugly hack)
[22:02:32] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[22:04:20] *** Joins: stonkey (~stonkey@user/stonkey)
[22:04:40] <jinsun> heday: ah, great
[22:05:23] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr)
[22:05:39] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[22:05:52] *** Quits: stonkey2 (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[22:06:25] *** Joins: fofoni (~fofoni@user/fofoni)
[22:06:46] <morteza24> in dynamic programming is it a better idea to pass the memo dict as an input to the function or to have it as a global variable? https://bpa.st/GIXA
[22:06:54] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[22:06:57] *** Quits: vassenn (~vassen@178.35.78.65) (Quit: Good bye!)
[22:07:18] <Repiphany> It's better to use functools.cache (lru_cache) if you're just doing memoization
[22:07:42] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[22:07:50] <charlie_sando> avoid globals as much as possible though
[22:08:02] <morteza24> oh I didn't know about functools.cache
[22:08:05] <morteza24> thanks
[22:08:31] <charlie_sando> I didnt either, good call
[22:09:03] *** Joins: Brudibert (~Brudibert@2a02:8071:81b8:7100:d0f0:c74f:7f6b:4e3a)
[22:09:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:11:29] *** Joins: Guest99 (~Guest99@ip5f5bf6f7.dynamic.kabel-deutschland.de)
[22:12:03] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[22:12:51] *** Quits: codificat (~pep@126.red-79-158-54.dynamicip.rima-tde.net) (Quit: leaving)
[22:13:19] *** Quits: Brudibert (~Brudibert@2a02:8071:81b8:7100:d0f0:c74f:7f6b:4e3a) (Quit: Leaving)
[22:15:19] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:145:48aa:c4b6:f056) (Quit: Konversation terminated!)
[22:15:52] *** Joins: crashrep (~crashrep@user/crashrep)
[22:17:41] <Croves> bjs so if I remove @classmethod, I should be fine then?
[22:17:43] <The-Compiler> grym: re black forks, I think https://pypi.org/project/blue/ was the main one I had in mind (which seems to be monkey-patching black)
[22:19:43] *** Joins: rje (~textual@65.141.156.170)
[22:20:00] <bjs> Croves: given everything you have said, I can't see why it's there at all so presumably yes
[22:20:15] *** Quits: ArtfulDodger (~ArtfulDod@147.210.204.164) (Quit: Leaving)
[22:20:27] *** Joins: greedom (~greedom@p200300de670444008f6786cd7e3fe700.dip0.t-ipconnect.de)
[22:22:30] *** Quits: heday (~heday@2a00:23c5:12a3:9400:14bb:b08e:2043:52a0) (Quit: Konversation terminated!)
[22:23:09] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[22:23:46] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[22:23:54] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[22:24:07] <dav1d> Celelibi, only actual dependencies, a lockfile (poetry has them, or I guess `pip freeze` works for that) are for pinning (transitive) dependencies
[22:24:32] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:55a2:57c6:2850:4dcb) (Ping timeout: 240 seconds)
[22:24:33] *** Joins: hlauk (~hlauk@176.33.97.244)
[22:24:36] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[22:25:00] <Celelibi> A lockfile?
[22:25:13] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[22:27:02] <Celelibi> dav1d, somehow you're right, there are two kind of dependencies. The actual direct dependencies. And versionning everything for reproducibility.
[22:27:32] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[22:28:40] *** Quits: hlauk (~hlauk@176.33.97.244) (Client Quit)
[22:28:44] <dav1d> Celelibi, yeah, looking for a good explanation but not finding anything related to python. You usually have a list of "vague" direct dependencies (semver compatible, e.g. I need flask in version 1.X) and you have a last known working version of flask (e.g. 1.5.3) pinned in the lockfile. So everytime you install your application you get the same
[22:28:45] <dav1d> 1.5.3 version (which is working). When you update dependencies you update the lockfile and make sure everything still works, then commit the lockfile
[22:29:14] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Quit: ZNC 1.8.2 - https://znc.in)
[22:29:18] <dav1d> which now includes the new flask version (e.g. 1.7.0)
[22:30:05] <Celelibi> So, what's the right way to do this in python?
[22:30:34] <morteza24> charlie_sando omg i think i got the answer
[22:30:38] <morteza24> thank you
[22:30:42] <dav1d> Celelibi, https://python-poetry.org/
[22:30:42] <morteza24> and everyone else
[22:30:43] <Celelibi> Maybe with two requirements.txt. One written by hand, the other generated from pip freeze?
[22:30:49] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:32:00] <dav1d> Celelibi, yeah that would work, but that is quite annoying. 1) need to do everything manually, 2) freezes everything in your venv/installation (e.g. dev dependencies)
[22:32:38] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[22:33:32] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[22:34:05] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[22:34:32] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:35:51] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[22:36:24] *** Quits: greedom (~greedom@p200300de670444008f6786cd7e3fe700.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:36:33] *** Joins: georgios (~georgios@user/georgios)
[22:36:38] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 250 seconds)
[22:37:09] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[22:37:20] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[22:37:31] *** Joins: greedom (~greedom@p200300de670444008f6786cd7e3fe700.dip0.t-ipconnect.de)
[22:37:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[22:38:01] <nedbat> dav1d: at work we use pip-compile to do this.  .in files for hand-written, and .txt created by pip-compile
[22:38:32] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[22:39:22] <dav1d> nedbat, that's neat!
[22:40:12] <lessshaste> can you run a .ipynb jupyter notebook in ipython?
[22:40:52] <Celelibi> Not directly.
[22:40:52] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[22:41:28] *** Joins: casastorta (~casastort@neo3.krivokuca.net)
[22:42:55] *** Joins: ErkiS (~opera@82.131.59.134.cable.starman.ee)
[22:43:01] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3804:da2a:aa0f:e262)
[22:43:13] *** Quits: casastorta (~casastort@neo3.krivokuca.net) (Client Quit)
[22:43:14] *** Parts: ErkiS (~opera@82.131.59.134.cable.starman.ee) ()
[22:43:19] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[22:43:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:43:47] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[22:43:55] *** Quits: idk (~idk@2804:29b8:505a:f33d:8187:1eee:9f1b:78aa) (Remote host closed the connection)
[22:44:14] *** Joins: idk (~idk@ec2-54-87-145-249.compute-1.amazonaws.com)
[22:45:04] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:06] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:47:30] <nedbat> ironic, since the ipy in ipynb stands for IPython
[22:47:38] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:47:54] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[22:48:56] *** Quits: Croves (~Croves@2804:58:c1a5:4400:fd1e:571:32c1:6a8d) (Quit: Client closed)
[22:49:19] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[22:49:28] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[22:50:04] *** Joins: Auron (Auron956@user/auron)
[22:50:38] *** Joins: brisky (~brisky@37.120.213.118)
[22:50:52] *** Quits: idk (~idk@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
[22:52:51] *** Joins: casastorta (~casastort@neo1.krivokuca.net)
[22:53:42] *** Joins: teut (~teut@2401:4900:1c68:6b85:81e5:34bc:8adc:b633)
[22:55:45] <charlie_sando> morteza24, rock on!
[22:57:25] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:58:09] *** Joins: CrowX- (~CrowX-@185.167.46.134)
[22:59:41] *** Joins: Msandoy (~Msandoy@telia-590873-165.connect.netcom.no)
[22:59:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:00:39] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:00:54] *** Parts: brisky (~brisky@37.120.213.118) ()
[23:01:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:02:35] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[23:02:55] *** Joins: audiobirb (~audio@user/audio)
[23:04:45] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[23:05:14] *** Joins: vlm (~vlm@user/vlm)
[23:05:28] *** Joins: The_Loko (~The_Loko@79.116.24.80)
[23:06:12] <SnoopJ> lessshaste, you can use the %run magic for that https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-run
[23:07:35] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:08:02] *** Quits: Msandoy (~Msandoy@telia-590873-165.connect.netcom.no) (Quit: Leaving)
[23:08:17] <SnoopJ> There's also --TerminalIPythonApp.file_to_run=path/to/notebook.ipynb (documented under `ipython --help-all`) https://stackoverflow.com/a/66544595
[23:08:25] *** Joins: Msandoy (~Msandoy@telia-590873-165.connect.netcom.no)
[23:09:10] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[23:09:26] *** Quits: Msandoy (~Msandoy@telia-590873-165.connect.netcom.no) (Client Quit)
[23:09:27] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[23:09:28] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:10:15] *** Joins: martin__-- (~default@84-113-156-178.cable.dynamic.surfer.at)
[23:10:20] *** Joins: Msandoy (~Msandoy@telia-590873-165.connect.netcom.no)
[23:11:56] <martin__--> hi, has anyone a idea how to create the following np.array( [[x], [x], [x], [x], [x], [x], [x], [x], ] ) dynamicly with ones? I did this: np.array( [np.ones(200, dtype=int) ] ) but I get one error [[1,1,1,1,1]] instead of [[1],[1],[1],[1],[1]]
[23:12:17] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:12:48] <SnoopJ> martin__--, `np.ones(shape=(200, 1))` is probably what you want
[23:13:25] *** Joins: Joss (~joss@user/Joss)
[23:13:32] *** Quits: morteza24 (~morteza24@37.98.107.222) (Ping timeout: 240 seconds)
[23:13:32] <SnoopJ> with dtype=int as well if you want ints over floats
[23:14:35] *** Joins: Celeo (~Celeo@user/celeo)
[23:14:47] <martin__--> yes thanks SnoopJ
[23:15:10] *** Quits: Joss (~joss@user/Joss) (Client Quit)
[23:15:24] *** Joins: Joss (~joss@user/Joss)
[23:15:56] *** Joins: Guest45 (~Guest45@99-6-72-105.lightspeed.rcsntx.sbcglobal.net)
[23:16:01] <stewie925> can we use a dictionary comprehension to remove a list of keys?
[23:16:45] <stewie925> it seems that dic.pop would work, but del dic[key] would not
[23:17:17] <SnoopJ> stewie925, right, because `del` is a statement. Comprehensions with side effects are generally anti-patterns, is there a reason you don't want to just write a loop?
[23:17:17] *** Joins: jdmark2 (~jdmark@user/jdmark)
[23:17:28] *** Quits: Msandoy (~Msandoy@telia-590873-165.connect.netcom.no) (Read error: Connection reset by peer)
[23:17:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:17:44] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[23:17:55] *** Quits: dhwohrom^ (~dhwohrom@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[23:17:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:18:00] *** Quits: Joss (~joss@user/Joss) (Client Quit)
[23:18:14] *** Joins: morteza24 (~morteza24@37.98.107.222)
[23:18:15] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[23:18:50] <stewie925> SnoopJ: ahh I see , thank you.... could you clarify "because del is a statement" ?  wouldnt  `dic.pop(key) `  be a statement as well (but it works)?
[23:19:14] *** Joins: summersault (~summersau@179.221.251.36)
[23:19:21] <stewie925> ugh my tick marks wont render correctly for some reason
[23:19:37] <stewie925> SnoopJ: ahh I see , thank you.... could you clarify "because del is a statement" ?  wouldn't  `dic.pop(key)`  be a statement as well (but it works)?
[23:19:37] *** Joins: fikran (~fikran@user/fikran)
[23:19:41] <stewie925> `test`
[23:19:59] <SnoopJ> stewie925, `dic.pop(key)` is an expression, but any expression can by itself form a simple statement
[23:20:07] *** Quits: Guest99 (~Guest99@ip5f5bf6f7.dynamic.kabel-deutschland.de) (Quit: Client closed)
[23:20:56] <stewie925> I see, thank you SnoopJ!
[23:21:11] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 256 seconds)
[23:21:17] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[23:21:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:22:28] *** Joins: frmlof (~frmlof@70.243.238.191)
[23:22:43] <whatsupdoc> How do you access a variable outside of a function?
[23:23:02] <whatsupdoc> I want something like closure in javascript
[23:23:35] <llanhmod> whatsupdoc: I thought closure was a function returning another function...no?
[23:23:51] <roxfan> do you want lambdas?
[23:24:00] <whatsupdoc> A closure is the combination of a function bundled together (enclosed) with references to its surrounding state
[23:24:02] <TML> whatsupdoc: It's unclear how your second statement connects to your first statement
[23:24:14] <llanhmod> whatsupdoc: ah...the backpack?
[23:24:33] <whatsupdoc> I have a function defined inside of another function and I want to access variables from that outer function in my inner function
[23:24:39] *** Joins: bluedust (~bluedust@89.238.143.233)
[23:25:44] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-8926-a20e-7ef6-caff.res6.spectrum.com)
[23:26:02] <jinsun> have you tried just using them?
[23:26:03] <martin__--> I got a 2d array with print(gaus1.shape) (200, 2) and a second one gaus2 with 200,2. I want to append them so the result should be 400,2 . I used np.append(gaus1,gaus2) but then I get a shape with 800 . It should be a shape 800,2
[23:26:12] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:26:14] <SnoopJ> whatsupdoc, just use the name in the inner function. It will be looked up against the inner function's closure and when that fails it will go to the enclosing scope and use the value it finds there.
[23:26:27] *** Quits: yac (~user@user/yac) (Ping timeout: 256 seconds)
[23:26:27] <martin__--> I tried to use gaus1.append(gaus2) but then I get append does not exist on nparray
[23:26:28] *** Quits: yac__ (~user@user/yac) (Ping timeout: 250 seconds)
[23:26:28] *** Quits: yac_ (~user@user/yac) (Ping timeout: 250 seconds)
[23:26:39] <SnoopJ> https://docs.python.org/3/reference/executionmodel.html#resolution-of-names
[23:26:57] <llanhmod> ^yeah
[23:27:05] <avu> note that you might need `nonlocal` if you want to assign to the 'outer' variables
[23:27:32] *** Quits: bluedust_ (~bluedust@117.207.227.55) (Ping timeout: 240 seconds)
[23:27:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[23:27:41] <llanhmod> understanding the execution model is helpful here.
[23:28:02] *** Joins: Guest73 (~Guest73@185.6.148.130)
[23:28:06] *** Quits: jdmark2 (~jdmark@user/jdmark) (Quit: Leaving)
[23:29:02] <martin__--> it looks like its not possible to append 2d arrays
[23:29:06] *** Parts: Guest73 (~Guest73@185.6.148.130) ()
[23:29:19] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[23:29:24] <SnoopJ> martin__--, there is np.append() but np.concatenate() is a better fit here: `np.concatenate((gaus1, gaus2), axis=0)`
[23:30:09] *** Joins: superboot (~agentgasm@user/superboot)
[23:30:28] <martin__--> thanks! SnoopJ that was the trick!
[23:32:06] *** Joins: ovnicraft (~ovnicraft@181.188.201.152)
[23:33:05] *** Joins: yac (~user@user/yac)
[23:33:10] *** Joins: yac_ (~user@user/yac)
[23:33:12] *** Joins: jay-m126 (~jay-m@154.72.160.184)
[23:33:15] *** Joins: yac__ (~user@user/yac)
[23:34:29] <llanhmod> deniska: yeah...think I'll use Django
[23:35:07] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[23:36:22] <whatsupdoc> SnoopJ: maybe it doesn't work because i am using a recursive function and trying to access a variable inside of it?
[23:36:39] <charlie_sando> whatsupdoc, it should work, can you paste the code ?
[23:36:48] <charlie_sando> pastebin* , the code
[23:36:58] <SnoopJ> whatsupdoc, I couldn't begin to tell you without seeing the code
[23:38:12] *** Joins: Nodawey (~Nodawey@109.104.50.143)
[23:38:35] *** Quits: Nodawey (~Nodawey@109.104.50.143) (Read error: Connection reset by peer)
[23:39:07] *** Joins: bluedust_ (~bluedust@117.207.227.55)
[23:40:01] *** Joins: edd_lc (~manjaro-i@85.64.197.64.dynamic.barak-online.net)
[23:41:29] *** Quits: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[23:41:47] *** Joins: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba)
[23:42:09] *** Quits: bluedust (~bluedust@89.238.143.233) (Ping timeout: 256 seconds)
[23:42:25] *** Joins: bluedust (~bluedust@86.106.136.217)
[23:43:10] *** Quits: bluedust_ (~bluedust@117.207.227.55) (Remote host closed the connection)
[23:43:32] *** Quits: KeiraT (~k@cpc152719-sotn17-2-0-cust364.15-1.cable.virginm.net) (Ping timeout: 240 seconds)
[23:43:43] *** Joins: bluedust_ (~bluedust@117.207.227.55)
[23:44:06] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:44:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:44:45] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:44:48] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:45:17] *** Joins: zen_coder (~Axel@2a02:8109:a280:2d8d:6140:c4c6:bf9:2254)
[23:45:43] *** Quits: MrCollinsGA (~MrCollins@199.231.255.146) (Read error: Connection reset by peer)
[23:45:45] *** Quits: zen_coder (~Axel@2a02:8109:a280:2d8d:6140:c4c6:bf9:2254) (Client Quit)
[23:46:12] *** Joins: KeiraT (~k@lulzsec.co.uk)
[23:46:52] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6140:c4c6:bf9:2254)
[23:47:00] <whatsupdoc> SnoopJ:, charlie_sando: thanks, I decided to scrap the code and implement it another way lol
[23:47:02] <whatsupdoc> and it works :)
[23:47:32] *** Quits: bluedust (~bluedust@86.106.136.217) (Ping timeout: 240 seconds)
[23:47:54] *** Joins: ano (~ano@user/ano)
[23:47:54] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[23:47:56] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[23:47:58] <p-i-> Suppose I have a string of HTML... I'm trying to search for all UPPERCASEONLY words, and exclude anything inside <...>
[23:48:06] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:48:20] <Dan39> why?
[23:48:21] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[23:48:43] <p-i-> The question is "How"
[23:49:01] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:49:31] <edd_lc> looks like i was using the wrong layout. https://doc.pytest.org/en/latest/explanation/goodpractices.html
[23:49:39] <Dan39> haha p-i-
[23:49:58] <Dan39> p-i-: anything HTML i usually first go to using lxml
[23:50:21] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[23:50:36] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:50:46] <p-i-> e.g. '123FOO .BAR? <QUUX> qWeRtY' I would only return BAR.
[23:51:21] <p-i-> I suppose I could regexp-replace <...> with '' first
[23:51:38] *** Joins: architek (~luser@user/frikinz)
[23:52:29] <Dan39> BAR, but not 123FOO?
[23:52:33] <Dan39> or not FOO BAR?
[23:52:41] *** Joins: summersault (~summersau@179.221.251.36)
[23:52:44] <SnoopJ> p-i-, ideally you'd use an HTML parser
[23:52:47] <Dan39> why BAR? it isnt an uppercase word, it also has a . and a ?
[23:53:04] *** Quits: greedom (~greedom@p200300de670444008f6786cd7e3fe700.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:53:56] <Dan39> p-i-: you can use lxml to run text_content on the whole body, then grep from there
[23:54:04] <architek> Hi. How can I convert a dict like {'col1':0, 'col2':1} to a string like "set col1='0' set col2='1'" ? Trying to do it as oneliner, I guess with map?
[23:54:13] <charlie_sando> p-i-,  https://regex101.com/r/WA1m3q/1
[23:54:30] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:55:20] <p-i-> charlie_sando: oh that's a nice tool
[23:55:51] <SnoopJ> architek, something like `gen = f"set {key}={val!r}" for key,val in thedict.items(); result = " ".join(gen)`
[23:55:52] <avu> architek: " ".join(f"set {key}='{value}'" for key, value in d.items())
[23:56:31] <architek> avu, SnoopJ thanks a lot. Map was not the good path. well done
[23:56:37] <charlie_sando> p-i-,  yeah programming in the 2020s is fun , in the old days youd just bang your head on the wall and cry for a day
[23:56:53] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[23:56:54] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:57:21] <KnowledgeShark> hey everyone! I don't know if anyone could point me in the right direction in learning a method to extract the keyword "*1611*" folders/files that I have in a large files.log file generated by a ls -lrt >> files.log script - https://dpaste.com/HU7FAZFBT - I need target folders & files to parse and want to drop the rest. Thank you for your time!
[23:57:34] <SnoopJ> architek, a functional approach here would probably use itertools.accumulate(), but that would be bending over backwards pretty far to write something less legible
[23:57:36] <xheimlich> charlie_sando: there's a new method?
[23:58:20] <xheimlich> I've been considering putting up a soft acoustic foam square on my home office to avoid injuries...
[23:58:29] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[23:58:40] <charlie_sando> xheimlich, no same method just takes less time
[23:58:52] * SnoopJ keeps a rubber duck within arm's reach
[23:58:58] <architek> SnoopJ: Interesting function, didn't know that.
[23:59:01] <xheimlich> but I don't know if banging against a soft surface will be as cathartic and/or brain-resetting.
[23:59:28] <SnoopJ> architek, that's the problem with functional solutions: they often involve this kind of "oh, that exists?" trivia if they aren't map/filter, and map/filter are largely outclassed by comprehensions
[23:59:34] <SnoopJ> functional solutions in Python*
[23:59:55] <xheimlich> I know there are good reasons for this.
[23:59:58] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Remote host closed the connection)
