[00:01:29] <[Coke]> nirnam: if you haven't already, please open a ticket for that hyper/cached issue. (note that cached is experimental, but this definitely needs to be fixed if it's going to go mainstream)
[00:04:12] <[Coke]> https://github.com/rakudo/rakudo/blob/master/lib/experimental.rakumod#L3-L19 - there's no locking going on there.
[00:05:16] <nirnam> I tried manual caching, give similar error, and switch hyper with thread same error, there's something more going here
[00:05:39] <MasterDuke> manual caching with locking?
[00:06:00] <nirnam> nope
[00:08:46] * [Coke] thinks https://docs.raku.org/type/Lock::Async might be enough?
[00:10:05] <nirnam> If it break the way I think it break, just not let each hyper modipy the same caches at the same time would be enough
[00:10:08] <MasterDuke> you have to have some sort of locking, modifying an array or hash isn't thread-safe. currently you'll get segfaults and such, though eventually we hope to made it higher-level errors
[00:10:41] <nirnam> But I just ficking up raku from perl5 recently, I'm not sure if I can make that happen
[00:10:47] <nirnam> picking*
[00:11:42] <[Coke]> for now, I'd skip the cached then until we can fix this bug.
[00:13:30] <[Coke]> trying to add a simple lock to :cached...
[00:13:42] * MasterDuke is trying the same thing
[00:13:57] <nirnam> :cached and .hyper would speed up that snippet code, especially if it that easy this would be a sole for me
[00:15:33] <nirnam> alway apreciate a tool that have parallelism in the design, except js async there not much I can think off
[00:16:45] <[Coke]> MasterDuke: worse here: MoarVM oops: MVM_str_hash_entry_size called with a stale hashtable pointer
[00:17:10] <[Coke]> er, whoops it threw out my change.
[00:17:25] <[Coke]> one sec. :)
[00:18:00] <[Coke]> ok, doesn't crash but is always returning Nil...
[00:18:05] *** Joins: dvergin (~dvergin@2601:602:881:1050:169:9e51:1a4f:a1d)
[00:20:34] <[Coke]> MasterDuke: https://gist.github.com/coke/e70575dd882c0b0a28a9f475d6c75b03 is not quite right
[00:21:27] <MasterDuke> yeah, i'm not sure why (haven't done much locking code myself)
[00:21:43] <[Coke]> ... don't need the ternary if we're only locking the callsame...
[00:21:52] <MasterDuke> i have almost the identical change locally
[00:22:07] *** Quits: dvergin (~dvergin@2601:602:881:1050:169:9e51:1a4f:a1d) (Client Quit)
[00:23:49] <[Coke]> I think the callsame might need changing.
[00:25:37] <[Coke]> https://gist.github.com/coke/e70575dd882c0b0a28a9f475d6c75b03 has my current version, which fails to crash, but returns Nil
[00:26:23] <[Coke]> I bet the callsame is confused because now it's in the protect.
[00:27:43] <[Coke]> oh. don't need to protect the callsame.
[00:28:36] <nirnam> the thread & manual cache version does run sometimes, the other times is just blow up
[00:31:35] <[Coke]> I imagine sometimes you can get lucky
[00:31:35] <perlbot> nirnam pasted a new file at https://l.perl.bot/p/8tgl1v - 
[00:32:58] <[Coke]> MasterDuke: my current version dies with 999936 47
[00:32:59] <[Coke]> MoarVM oops: MVM_str_hash_fetch_nocheck called with a stale hashtable pointer
[00:33:36] <nirnam> that doesn't seem right, starting point 47 doesn't generate that long of a chain
[00:34:28] <[Coke]> updated gist. have to take a call
[00:34:40] <nirnam> oh it bolloc it other way round, sorry
[00:34:42] <[Coke]> Yes, it means my cache implementation is completely screwed up. :)
[00:34:45] <nirnam> the out put is correct
[00:37:43] <nirnam> do raku have formatter in the same vein as perl::tidy? every spaces and tabs trigger my ocd now aday
[00:38:16] *** Quits: Tirifto (~Tirifto@47-186-111-21.dlls.tx.frontiernet.net) (Quit: Ĝis revido!)
[00:39:46] *** Joins: Tirifto (~Tirifto@47-186-111-21.dlls.tx.frontiernet.net)
[00:40:26] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[00:41:30] <MasterDuke> not really. i thought drforr had one in the works before he died that was transferred to the community modules repo, but i don't see it there
[00:42:36] <RandalSchwartz> drforr died? :(
[00:42:56] <nirnam> I'm sorry to hear that
[00:43:06] <MasterDuke> year or two ago, scuba accident on a cruise
[00:44:57] <nirnam> since raku have proper grammer and parser build in I thought that could be one already
[00:45:26] <nirnam> I really hope this isn't 'only perl can parse perl' situation
[00:45:41] <MasterDuke> https://conf.raku.org/talk/147 has some relevant info
[00:47:31] <MasterDuke> https://github.com/raku-community-modules/Raku-Parser is what drforr was working on, but i'm not sure how complete it is (or if the next step of implementing a ::Tidy was started)
[00:48:42] <MasterDuke> but as jnthn will explain in his talk, RakuAST should make such things much easier
[00:53:49] <nirnam> "This year, it takes place online on August 7, 2021"
[00:54:01] <nirnam> also Food freference in profile/edit
[00:54:10] <nirnam> how does that work?
[00:56:32] <MasterDuke> maybe they'll mail people a snack
[00:58:09] <nirnam> I watched most of damian conway and bruce gray talk for perl & raku conf on youtube, this is gonna be my first live conference
[01:07:37] *** Joins: AntonOks (~AntonOks@77.47.31.43)
[01:10:52] *** Quits: AntonOks (~AntonOks@77.47.31.43) (Client Quit)
[01:23:55] *** Joins: zoli73 (~zoli@99-186-61-255.lightspeed.jcvlfl.sbcglobal.net)
[01:24:07] *** Quits: zoli73 (~zoli@99-186-61-255.lightspeed.jcvlfl.sbcglobal.net) (Client Quit)
[01:31:05] <MasterDuke> nirnam: ok, i have it safely using `.hyper` and `is cached`, but i'm not sure how much faster it is
[01:31:38] <nirnam> can I see the patch? so I can test it out
[01:33:00] <MasterDuke> https://gist.github.com/MasterDuke17/c2769796f3a693ee5d836c5a5f73788e
[01:33:20] <MasterDuke> oh, that should be Lock::Async
[01:34:12] <MasterDuke> btw, there are some micro-optimizations you could do to your code
[01:34:30] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[01:35:33] *** Joins: m6502 (~6502@2600:8805:d800:b3e::2a2)
[01:36:39] <MasterDuke> wait, maybe it shouldn't be Lock::Async
[01:40:03] <MasterDuke> ooo, i just got a MoarVM oops. maybe the whole thing needs to be protected
[01:42:11] *** Quits: m6502 (~6502@2600:8805:d800:b3e::2a2) (Quit: Leaving)
[01:47:03] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[01:47:36] <nirnam> rakumod supposed so be in /usr/share/perl6 right? because gentoo doesn't give me any of it
[01:47:51] <nirnam> gonna have to build from git hub
[01:47:59] <MasterDuke> yeah
[01:49:20] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 272 seconds)
[01:49:23] <nirnam> I have .moarvm but not .rakumod, I didn't even know how this happened nor does how my rakudo even work in the first place
[01:50:51] <MasterDuke> those are the pre-compiled bytecode
[01:54:40] *** Quits: bd3i (~bd3i@75-109-179-182.mdlncmtk02.com.dyn.suddenlink.net) (Read error: Connection reset by peer)
[01:56:04] *** Joins: bd3i (~bd3i@75-109-179-182.mdlncmtk02.com.dyn.suddenlink.net)
[01:56:34] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[02:00:43] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 246 seconds)
[02:15:11] <nirnam> it is no longer crashed
[02:17:41] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[02:24:27] <nirnam> annd id died
[02:25:35] <nirnam> right about when it gonna be mostly cache hit
[02:32:47] *** Joins: juanfra (~juanfra@user/juanfra)
[02:33:02] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[02:34:22] <nirnam> the run that does survived, hyper with :cached is about 1.16 times faster
[02:34:34] *** Joins: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1)
[02:34:49] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[02:35:01] *** Joins: ComplYue[m] (~complyuem@2001:470:69fc:105::9b0)
[02:35:01] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[02:35:01] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[02:35:13] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[02:35:25] *** Joins: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca)
[02:41:31] *** Quits: juanfra (~juanfra@user/juanfra) (Quit: node-irc says goodbye)
[02:41:36] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Quit: node-irc says goodbye)
[02:42:13] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Quit: node-irc says goodbye)
[02:42:48] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de)
[02:43:56] *** Quits: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1) (Quit: node-irc says goodbye)
[02:44:17] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Quit: node-irc says goodbye)
[02:44:28] *** Quits: ComplYue[m] (~complyuem@2001:470:69fc:105::9b0) (Quit: node-irc says goodbye)
[02:44:47] *** Quits: cnx (~cnxhaloge@2001:470:69fc:105::61f) (Quit: node-irc says goodbye)
[02:45:12] *** Quits: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca) (Quit: node-irc says goodbye)
[02:48:11] *** Joins: Doc_Holliwould (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de)
[02:51:06] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[02:57:51] *** Joins: juanfra (~juanfra@user/juanfra)
[03:02:20] *** Quits: bd3i (~bd3i@75-109-179-182.mdlncmtk02.com.dyn.suddenlink.net) (Quit: Leaving)
[03:03:47] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[03:03:47] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[03:03:47] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[03:03:56] *** Joins: m6502 (~6502@2600:8805:d800:b3e::2a2)
[03:03:59] *** Joins: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca)
[03:03:59] *** Joins: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1)
[03:03:59] *** Joins: ComplYue[m] (~complyuem@2001:470:69fc:105::9b0)
[03:04:01] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[03:06:03] *** Quits: m6502 (~6502@2600:8805:d800:b3e::2a2) (Client Quit)
[03:06:17] *** Joins: jgaz (~jgaz@2600:8805:d800:b3e::2a2)
[03:11:40] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 272 seconds)
[03:28:31] *** Quits: jgaz (~jgaz@2600:8805:d800:b3e::2a2) (Quit: Leaving)
[03:59:14] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[04:03:31] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 256 seconds)
[04:12:54] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[04:17:30] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 240 seconds)
[04:19:20] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[04:22:50] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[04:26:24] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 272 seconds)
[04:29:43] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[04:32:52] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:33:06] <[Coke]> MasterDuke++
[04:33:54] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 240 seconds)
[04:35:46] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[04:43:27] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[04:49:08] *** Quits: a3r0_ (~aero@61.100.184.210) (Ping timeout: 258 seconds)
[04:49:16] *** Joins: a3r0 (~aero@61.100.184.210)
[05:03:08] *** Quits: Doc_Holliwould (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[05:15:20] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[05:16:37] <Xliff> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C is B does AA { }; C.new.a
[05:16:37] <camelia> rakudo-moar eab780f38: OUTPUT: «role A␤»
[05:18:30] <Xliff> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C is B { also does AA }; C.new.a
[05:18:31] <camelia> rakudo-moar eab780f38: OUTPUT: «role A␤»
[05:18:45] <moon-child> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C does AA is B { }; C.new.a
[05:18:45] <camelia> rakudo-moar eab780f38: OUTPUT: «role A␤»
[05:19:25] <Xliff> I don't want the role to override A.a
[05:19:35] <Xliff> But I do want A.a to refer to AA.a
[05:20:09] <Xliff> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C is B { also does AA }; B.new.a; C.new.a
[05:20:09] <camelia> rakudo-moar eab780f38: OUTPUT: «class a␤role A␤»
[05:23:24] <Xliff> Let's say that C.new.a is running A.a -- how would I refer to AA.a via self?
[05:23:44] <Xliff> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C is B { also does AA method a { 'class C'; }; }; B.new.a; C.new.a
[05:23:44] <camelia> rakudo-moar eab780f38: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3le A'; }; }; class C is B { also does AA7⏏5 method a { 'class C'; }; }; B.new.a; C.␤    expecting any of:␤        infix␤        infix stopper␤   …»
[05:23:52] <Xliff> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C is B { also does AA; method a { 'class C'; }; }; B.new.a; C.new.a
[05:23:52] <camelia> rakudo-moar eab780f38: OUTPUT: «class a␤»
[05:24:13] <Xliff> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C is B { also does AA; method a { sau 'class C'; }; }; B.new.a; C.new.a
[05:24:14] <camelia> rakudo-moar eab780f38: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    sau used at line 1. Did you mean 'say'?␤␤»
[05:24:20] <Xliff> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C is B { also does AA; method a { say 'class C'; }; }; B.new.a; C.new.a
[05:24:20] <camelia> rakudo-moar eab780f38: OUTPUT: «class a␤class C␤»
[05:24:26] <Xliff> Aha!
[05:26:36] <Xliff> Answering my own question...
[05:26:42] <Xliff> m: class A { method a { say 'class a' }; }; class B is A { }; role AA { method a { say 'role A'; }; }; class C is B { also does AA; method a { say 'class C'; self.AA::a }; }; B.new.a; C.new.a # Et voila!
[05:26:43] <camelia> rakudo-moar eab780f38: OUTPUT: «class a␤class C␤role A␤»
[05:34:04] *** Parts: parv (~quass@user/parv) ()
[06:34:05] *** Quits: nativecallable6 (~nat-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[06:34:05] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:34:05] *** Quits: sourceable6 (~sou-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:34:05] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:34:05] *** Quits: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:34:05] *** Quits: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:34:05] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:34:05] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:34:05] *** Quits: greppable6 (~gre-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:34:05] *** Quits: committable6 (~com-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:34:05] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:34:05] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:34:05] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:34:05] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:34:05] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:34:05] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:34:05] *** Quits: tellable6 (~tel-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[06:34:05] *** Quits: shareable6 (~sha-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[06:34:05] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:34:41] *** Joins: coverable6 (~cov-able@ns306169.ip-94-23-219.eu)
[06:34:47] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[06:34:53] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[06:34:58] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[06:35:01] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[06:35:21] *** Joins: unicodable6 (~uni-able@ns306169.ip-94-23-219.eu)
[06:35:48] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[06:35:49] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[06:36:00] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[06:36:14] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[06:36:22] *** Joins: squashable6 (~squ-able@ns306169.ip-94-23-219.eu)
[06:36:29] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[06:36:37] *** Joins: notable6 (~not-able@ns306169.ip-94-23-219.eu)
[06:36:43] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[06:36:54] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[06:37:16] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[06:37:17] *** Joins: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu)
[06:37:17] *** Joins: shareable6 (~sha-able@ns306169.ip-94-23-219.eu)
[06:37:18] *** Joins: tellable6 (~tel-able@ns306169.ip-94-23-219.eu)
[07:22:59] *** Quits: nirnam (~nirnam@1.47.151.208) (Ping timeout: 256 seconds)
[07:35:04] *** Joins: bd3i (~bd3i@24-155-162-157.dyn.grandenetworks.net)
[07:55:29] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[08:11:14] *** Quits: bd3i (~bd3i@24-155-162-157.dyn.grandenetworks.net) (Quit: Leaving)
[08:15:06] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[08:20:47] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 256 seconds)
[08:23:44] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de)
[08:57:55] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[09:40:30] *** Joins: _ed (~ed@ip174-70-136-148.ks.ks.cox.net)
[09:44:42] *** Quits: _ed (~ed@ip174-70-136-148.ks.ks.cox.net) (Ping timeout: 240 seconds)
[10:00:22] *** Joins: kylese (~kylese@p5dd8ba69.dip0.t-ipconnect.de)
[10:01:14] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de)
[10:02:32] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[10:03:04] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[10:06:36] *** Quits: kylese (~kylese@p5dd8ba69.dip0.t-ipconnect.de) (Quit: Leaving)
[10:12:40] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 252 seconds)
[10:15:02] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[10:30:24] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[10:30:47] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[10:32:53] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:34:17] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[10:35:19] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:38:44] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 258 seconds)
[10:57:05] *** Joins: l0g (~unix@user/l0g)
[10:57:56] *** Parts: l0g (~unix@user/l0g) ()
[11:13:46] *** Joins: nirnam (~nirnam@1.46.149.36)
[11:15:13] *** Joins: frost (~frost@59.71.241.179)
[11:18:49] *** Joins: patrickb (~quassel@55d48c8d.access.ecotel.net)
[11:27:14] <patrickb> o/
[11:27:16] <patrickb> Anyone knows who is responsible for the raku mailing lists?
[11:43:20] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:51:01] *** Joins: stoned75 (~seb@pop.92-184-100-100.mobile.abo.orange.fr)
[11:53:32] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[12:00:12] *** Joins: xinming_ (~xinming@115.219.38.38)
[12:03:22] *** Quits: xinming (~xinming@115.219.32.49) (Ping timeout: 265 seconds)
[12:20:20] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:28:58] <lizmat> patrickb: which one do you mean?
[12:30:28] <patrickb> _perl.perl6.users_
[12:34:29] <lizmat> that would be the Perl NOC
[12:47:44] <patrickb> Thanks lizmat!
[12:48:02] *** Quits: patrickb (~quassel@55d48c8d.access.ecotel.net) (Quit: Quit.)
[13:10:21] *** Quits: nirnam (~nirnam@1.46.149.36) (Read error: Connection reset by peer)
[13:11:54] *** Joins: nirnam (~nirnam@1.46.149.36)
[13:14:26] *** Joins: ufobat (~martin@p5093487f.dip0.t-ipconnect.de)
[13:24:55] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Read error: Connection reset by peer)
[13:25:33] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[13:26:00] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de)
[13:31:35] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[13:43:01] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[13:53:57] <Xliff> Is there a Raku module for generating random words?
[13:54:02] <Xliff> Sort of like Silly::Werder
[13:54:31] <lizmat> https://modules.raku.org/dist/Random::Names ?
[14:05:48] * lizmat clickbaits https://rakudoweekly.blog/2021/06/29/2021-26-r3/
[14:10:32] *** Quits: jdv (~jdv79@jdv.devuyst.com) (Ping timeout: 244 seconds)
[14:10:39] *** Joins: jdv (~jdv79@jdv.devuyst.com)
[14:28:44] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[14:49:01] <Xliff> Looks like Inline::Perl5 is broken on latest KUbuntu
[14:49:15] <Xliff> Wants libperl.so.5.30 but current is on libperl.so.5.32
[14:49:20] <Xliff> And 5.30 is no longer available.
[14:51:12] <dakkar> does kubuntu ship a inline-perl5 package?
[14:51:25] <moritz> did you upgrade your OS after installing Inline::Perl5?
[14:51:28] <moon-child> Xliff: recompile?
[14:51:32] <moritz> you might need to recompile Inline::Perl5
[14:51:38] <dakkar> (we're all thinkig the same exact thing 😉)
[14:57:58] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[15:00:19] <Xliff> I did 'zef install --force-install Inline::Perl5' and that didn't change anything.
[15:00:33] <Xliff>  And I did that before mentioning anything here... ;)
[15:03:12] <dakkar> ok, you're an advanced user ☺
[15:03:56] <dakkar> that's very surprising, though
[15:04:06] <dakkar> next step: check that you don't have two copies installed
[15:04:44] <Xliff> Hah! Yep.
[15:05:37] <Xliff> Er. Nope.
[15:05:39] <Xliff> Weird.
[15:05:50] <Xliff> 0.52 is getting installed, but 0.53 is available
[15:06:05] <Xliff> I install from zef, and it says its installing 0.53
[15:06:11] <Xliff> I do info, but it says 0.52 is installed.
[15:06:17] <dakkar> yep, two copies in two different directories
[15:07:06] <Xliff> Hrm. How can I find?
[15:07:10] <dakkar> `raku -V |grep repo::chain`
[15:07:18] <dakkar> should tell you where raku looks for modules
[15:10:33] <Xliff> Well, it looks like I do without :from<Perl5> for now.
[15:10:44] <Xliff> That doesn't help me at all. The names are all hashed.
[15:10:51] <dakkar> yes, the names are, sure
[15:11:03] <dakkar> but I'm pretty sure we can figure it out
[15:11:11] <dakkar> what directories does that command show you?
[15:11:24] <Xliff> repo::chain=inst#/home/cbwood/.raku inst#/home/cbwood/Projects/rakudobrew/versions/moar-blead/install/share/perl6/site inst#/home/cbwood/Projects/rakudobrew/versions/moar-blead/install/share/perl6/vendor inst#/home/cbwood/Projects/rakudobrew/versions/moar-blead/install/share/perl6/core ap# nqp# perl5#
[15:12:11] <dakkar> good, nothing too weird there
[15:13:19] <dakkar> `zef list --installed` should `Inline::Perl5` twice for you
[15:13:40] <Xliff> ....aaaaand....
[15:13:51] <Xliff> The package came with a version of libp5helper.so precompiled
[15:13:57] <Xliff> Which wanted the wrong version of perl.
[15:14:02] <dakkar> ooh
[15:14:14] <Xliff> Removed it and rebuilt and problem looks sorted.
[15:14:16] <Xliff> dakkar++
[15:14:39] <dakkar> I'm glad you fixed it!
[15:26:45] <Xliff> Believe it or not, you did help a lot! Thanks.
[15:36:33] *** Quits: ufobat (~martin@p5093487f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:38:12] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[15:38:21] *** Quits: squashable6 (~squ-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[15:39:03] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[15:43:41] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[15:51:18] *** Joins: ufobat (~martin@p5093487f.dip0.t-ipconnect.de)
[16:20:11] *** Quits: stoned75 (~seb@pop.92-184-100-100.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[16:20:59] *** Joins: stoned75 (~seb@pop.92-184-112-54.mobile.abo.orange.fr)
[16:32:33] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:34:32] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:42:44] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[16:45:00] *** Quits: nirnam (~nirnam@1.46.149.36) (Ping timeout: 252 seconds)
[16:45:28] *** Joins: nirnam (~nirnam@1.47.138.32)
[16:55:10] *** Joins: dogbert17 (~dogbert@c83-251-249-247.bredband.tele2.se)
[16:58:09] *** Quits: dogbert11 (~dogbert@c83-251-249-247.bredband.tele2.se) (Ping timeout: 256 seconds)
[17:13:04] *** Joins: AntonOks (~AntonOks@217.10.52.10)
[17:20:30] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[17:38:42] *** Joins: dogbert11 (~dogbert@c83-251-249-247.bredband.tele2.se)
[17:41:18] *** Joins: dogbert12 (~dogbert@c83-251-249-247.bredband.tele2.se)
[17:41:28] *** Quits: dogbert17 (~dogbert@c83-251-249-247.bredband.tele2.se) (Ping timeout: 252 seconds)
[17:43:06] *** Quits: dogbert11 (~dogbert@c83-251-249-247.bredband.tele2.se) (Ping timeout: 240 seconds)
[18:33:27] *** Quits: AntonOks (~AntonOks@217.10.52.10) (Quit: Connection closed)
[18:43:51] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:59:01] *** Joins: m6locks (thebbo@irc.entropy.fi)
[19:07:06] *** Quits: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:17:24] <nirnam> Label.goto() not yet implemented. Sorry.
[19:17:28] <nirnam> hmmmm
[19:45:28] <m6locks> m: class a { has @!b; submethod BUILD ( :@c! ) { for @c -> $i { @!b.append($i); say $i; }}}; my @argg = <nsdnskf rgporkgp>; my $d = a.new(c => @argg);
[19:45:29] <camelia> rakudo-moar eab780f38: OUTPUT: «nsdnskf␤rgporkgp␤»
[19:45:55] <m6locks> hmm I get an error with that 
[19:46:14] <m6locks> it says expecting any of: generic role
[19:46:49] <dakkar> works here on 2021.02 (yes, I'll upgrade some day…)
[19:47:14] <m6locks> I have 2021.03 
[19:47:15] <dakkar> where does your rakudo say the error is?
[19:47:26] <m6locks> after the a
[19:47:28] <ugexe> works on blead and on 2018.01
[19:47:31] <m6locks> in class a
[19:47:52] <m6locks> ran it again and now it seems to work
[19:47:56] <m6locks> weird
[19:48:13] <dakkar> which probably means you had some previous declaration that changed the meaning of that code
[19:48:20] <m6locks> aye
[19:50:28] *** Quits: ufobat (~martin@p5093487f.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:50:54] *** Joins: melezhik (~melezhik@c-98-198-98-197.hsd1.tx.comcast.net)
[19:50:57] <melezhik> .
[19:51:50] <melezhik> .tell raydiak I've dropped some r3 tests for nested pod , maybe quite simple but still test something - https://gist.github.com/melezhik/859b91789e0576b39cdf957c2000554c
[19:51:51] <tellable6> melezhik, I'll pass your message to raydiak
[19:59:16] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[20:03:48] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 265 seconds)
[20:05:15] <raydiak> thank you :)
[20:05:17] <tellable6> 2021-06-30T15:21:51Z #raku <melezhik> raydiak I've dropped some r3 tests for nested pod , maybe quite simple but still test something - https://gist.github.com/melezhik/859b91789e0576b39cdf957c2000554c
[20:24:43] *** Joins: sortiz (~sortiz@200.194.25.216)
[20:31:32] <sortiz>  /msg NickServ VERIFY REGISTER sortiz Of6vRqVeDghL22Ss
[20:32:02] <lizmat> oops
[20:33:37] <sortiz> \o #raku  Is an OTP only, no problem.
[20:34:39] *** Quits: sortiz (~sortiz@200.194.25.216) (Quit: Leaving)
[20:35:21] *** Joins: sortiz (~sortiz@200.194.25.216)
[20:40:13] *** Quits: sortiz (~sortiz@200.194.25.216) (Quit: Leaving)
[20:41:24] *** Joins: sortiz (~sortiz@200.194.25.216)
[20:42:26] <El_Che> otp for the win
[20:54:03] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:54:17] *** Quits: sortiz (~sortiz@200.194.25.216) (Remote host closed the connection)
[20:54:41] *** Joins: sortiz (~sortiz@200.194.25.216)
[21:05:05] <melezhik> i post some r3 tags stat, also including upcoming release if someone is interested - https://gist.github.com/melezhik/d214191ec6f6c4179e96ca2ce3d50057
[21:07:21] <melezhik> so before release is cut one call always run `tomty --only=rc_2021_07+open` to run tests against all open issues and see if they are pass ..
[21:08:12] <melezhik> or just `tomty --only=rc_2021_07+open --tags` to see tags stat 
[21:08:25] <melezhik> that's the idea ...
[21:08:37] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 256 seconds)
[21:30:13] *** Quits: peder (4822@nidur.ifi.uio.no) (Ping timeout: 244 seconds)
[21:32:11] *** Joins: peder (4822@nidur.ifi.uio.no)
[21:32:52] *** Quits: sortiz (~sortiz@200.194.25.216) (Quit: Leaving)
[21:48:53] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[22:09:58] <perlbot> nirnam pasted a new file at https://l.perl.bot/p/x95xhe - 
[22:10:38] <nirnam> I did some fiddleing with experimental.rakumod to make cached worked with hyper
[22:10:45] <nirnam> and I finally did the brenchmark
[22:11:18] *** Joins: poseidon (~poseidon@ip68-4-249-101.oc.oc.cox.net)
[22:11:32] *** Quits: poseidon (~poseidon@ip68-4-249-101.oc.oc.cox.net) (Client Quit)
[22:13:11] <nirnam> it gonna carsh every time thread accessing the same cache not just modifying, so I just lock everything that have to do with cache in there
[22:26:27] <[Coke]> did MasterDuke's try not work?
[22:27:06] <nirnam> it blowing up on %cache.EXISTS-KEY , he only lock %caches{$key} := target(|c)
[22:27:33] <[Coke]> interesting. I think he and I both thought we just needed to worry about the *set*, not the get.
[22:28:01] <[Coke]> I wonder if we have any benchmarks on cached we could test a new impl. again
[22:29:10] *** Joins: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr)
[22:30:01] *** Quits: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr) (Quit: leaving)
[22:32:47] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:33:20] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:33:47] *** Joins: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr)
[22:36:43] <nirnam> perfomance wise, if I reverse the list before feeding it, hyper with chache is already beating just chache
[22:37:09] <nirnam> not by alot, but it become apparent for very very last set of input
[22:50:24] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[23:50:24] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[23:50:24] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:51:26] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[23:51:59] <MasterDuke> nirnam: so you modified my patch to protect the whole sub?
[23:52:40] <nirnam> yeah
[23:53:19] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[23:53:59] <MasterDuke> did that ever fail for you?
[23:54:34] <nirnam> Didn't yet, I tried variation of the collatz function, and nothing been blowing up yet
[23:55:52] <MasterDuke> have you benchmarked cached, but no hyper with the patch and without? i.e., how much does adding the lock.protect slow things down in the case where it isn't needed?
[23:56:31] <MasterDuke> because if it's not terrible, might be worth submitting as a PR for rakudo
[23:57:11] <nirnam> I didn't does anything with hyper, and hyper with cached will not work without the patch
[23:57:48] <MasterDuke> well, i'd say it's worth submitting as a PR regardless, and there is a large performance drop for the non-hyper case that'd be a good cause for discussion
[23:57:59] <MasterDuke> *if there is
[23:58:39] <nirnam> Ah, in that case I should benchmark only cached without hyper, with and without patch on
[23:59:21] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de)
