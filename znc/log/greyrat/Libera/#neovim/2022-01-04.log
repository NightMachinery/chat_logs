[00:02:53] <gpanders> <ngortheone> "there is no good way to jump..." <- you can generate one big tags file for all of your system headers and include that in your `'tags'` option
[00:03:22] <gpanders> e.g. something like `ctags -o ~/.cache/nvim/tags -R --languages=c /usr/include`
[00:04:08] <gpanders> then in your init.vim `:set tags+=~/.cache/nvim/tags`
[00:04:12] <ngortheone> gpanders, that is a nice idea, very simple!
[00:04:16] <gpanders> you wouldn't need to update it unless you install new packages
[00:05:26] <ngortheone> such a big tag file would probably be a bit slow to process. Is there a visible performance impact when you just "ctags all the things" ?
[00:07:17] <gpanders> finding tags within a ctags file is very fast
[00:07:27] <gpanders> it does a binary search so it's log N
[00:09:18] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613)
[00:09:38] <jamessan[m]> https://accidentallyquadratic.tumblr.com/post/158074080953/vim-tags-lookup
[00:10:52] <gpanders> "Thanks to James McCoy for fixing this one as well as bringing it to my attention."
[00:11:02] <gpanders> wow who knew we had a celebrity in our midst? 🥳
[00:11:33] <jamessan[m]> log n can still be pretty slow when other factors are involved :-)
[00:12:13] *** Joins: RoodRallec (~RoodRalle@p200300e0af096a00dd76ef5baea69362.dip0.t-ipconnect.de)
[00:15:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:19:45] <ngortheone> I will try this approach anyway...  Also I want to say this - I rarely jump to IRC, but every time I do people in this channel are most helpful, friendly, non-toxic and on-point. I wish more opensource communities were like this. Thank you all for keeping up the good work - community building!
[00:21:26] <Bowuigi[m]> Most of the communities I found here on Matrix are like that, for example, the Arch Linux one or the DistroTube one
[00:21:48] <Bowuigi[m]> It is cool
[00:21:53] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:25:55] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[00:29:12] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[00:33:21] *** Joins: cottoneyejim (~cottoneye@62.4.57.10)
[00:34:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:47] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[00:36:09] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[00:36:34] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[00:37:01] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Client Quit)
[00:37:25] *** Joins: Betal (~Betal@user/betal)
[00:37:26] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[00:38:12] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[00:39:42] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Client Quit)
[00:39:57] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[00:53:49] *** Quits: cottoneyejim (~cottoneye@62.4.57.10) (Ping timeout: 256 seconds)
[00:57:49] *** Quits: towb (~bwot@user/towb) (Quit: WeeChat 3.4)
[01:03:24] *** Joins: lilgopher (~textual@2601:241:8000:38f0:b93c:7b73:2b99:2cd1)
[01:03:37] *** Quits: guido (~weechat@host-82-59-223-142.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[01:05:13] *** Joins: tufei_ (~Ngyu-Phee@gateway/tor-sasl/tufei)
[01:05:39] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613) (Read error: Connection reset by peer)
[01:05:42] *** Joins: guido (~weechat@host-79-18-253-44.retail.telecomitalia.it)
[01:06:15] *** Quits: tufei__ (~Ngyu-Phee@gateway/tor-sasl/tufei) (Ping timeout: 276 seconds)
[01:06:43] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613)
[01:07:37] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:dd68:aa56:195d:8ec3) (Ping timeout: 240 seconds)
[01:08:00] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[01:10:15] *** Quits: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[01:15:47] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:6728:f23a:63d:192)
[01:20:55] *** Quits: zer0bitz (~zer0bitz@196.244.192.60) (Read error: Connection reset by peer)
[01:27:25] *** Quits: pun (~weechat@user/pun) (Quit: pun)
[01:29:38] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[01:30:46] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:35:40] *** Joins: thetic (~thetic@174-21-54-220.tukw.qwest.net)
[01:43:00] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:43:54] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[01:52:08] *** Joins: PortableDave (~portabled@27-33-20-59.tpgi.com.au)
[01:58:49] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[02:08:05] *** Joins: Nesin (~Nesin@user/Nesin)
[02:17:23] *** Quits: Nesin (~Nesin@user/Nesin) (Remote host closed the connection)
[02:21:54] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:22:50] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[02:23:28] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Client Quit)
[02:31:08] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:37:28] *** Joins: ixil (~ixil@82.197.178.182)
[02:37:50] *** Quits: ixil_ (~ixil@82.197.178.137) (Ping timeout: 260 seconds)
[02:43:26] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:6728:f23a:63d:192) (Ping timeout: 268 seconds)
[02:45:10] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: WeeChat 3.3)
[02:46:23] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[02:46:47] *** Quits: aberrant (~aberrant@c-69-251-113-165.hsd1.va.comcast.net) (Read error: No route to host)
[02:48:44] *** Joins: bearsodastarship (~bearsodas@2001:470:69fc:105::1:5fdf)
[02:50:49] *** Joins: a0z1 (~a0z1@89.238.130.72)
[02:51:23] *** Quits: lilgopher (~textual@2601:241:8000:38f0:b93c:7b73:2b99:2cd1) (Quit: Textual IRC Client: www.textualapp.com)
[02:51:41] *** Quits: samgranieri (~samgranie@user/samgranieri) (Ping timeout: 256 seconds)
[02:52:50] *** Quits: thetic (~thetic@174-21-54-220.tukw.qwest.net) (Ping timeout: 256 seconds)
[02:59:24] *** Joins: lilgopher (~textual@2601:241:8000:38f0:256e:d3dc:d349:22df)
[03:01:24] *** Quits: guido (~weechat@host-79-18-253-44.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[03:09:48] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:12:37] *** Joins: mrmr (~mrmr@user/mrmr)
[03:13:21] *** Quits: PortableDave (~portabled@27-33-20-59.tpgi.com.au) (Ping timeout: 256 seconds)
[03:13:45] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:19:50] *** Joins: kaivai (~kaivai@user/kaivai)
[03:24:27] *** Joins: PortableDave (~portabled@27-33-20-59.tpgi.com.au)
[03:31:13] *** Quits: RoodRallec (~RoodRalle@p200300e0af096a00dd76ef5baea69362.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[03:31:37] *** Quits: ixil (~ixil@82.197.178.182) (Ping timeout: 240 seconds)
[03:31:57] *** Joins: ixil (~ixil@82.197.178.137)
[03:45:05] *** Quits: ublx (~ublx@user/ublx) (Ping timeout: 256 seconds)
[03:49:37] *** Quits: PortableDave (~portabled@27-33-20-59.tpgi.com.au) (Ping timeout: 240 seconds)
[04:05:37] *** Quits: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[04:05:44] *** Quits: ngortheone (~ngortheon@2600:6c55:600:d924:1d7f:ef4:81f0:5f42) (Quit: Client closed)
[04:12:15] *** Joins: arch042[m] (~arch042ma@2001:470:69fc:105::1:5fed)
[04:13:34] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[04:17:28] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[04:18:21] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[04:19:33] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:20:07] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[04:20:18] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[04:21:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:26:40] *** Joins: rgrinberg (~textual@177.246.218.103)
[04:36:21] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[04:36:50] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:36:54] <Shadman[m]> Does anyone know a good way to check which api function was added at which version of neovim?
[04:38:19] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[04:38:42] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:40:52] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[04:43:53] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[04:45:11] *** Joins: TudbuTD (~nodebot@2001:16b8:665f:ec01:de4e:f4ff:fe04:8ebe)
[04:45:12] *** Quits: TudbuTD (~nodebot@2001:16b8:665f:ec01:de4e:f4ff:fe04:8ebe) (Remote host closed the connection)
[04:48:25] *** Quits: columbarius (~columbari@muedsl-82-207-236-148.citykom.de) (Ping timeout: 256 seconds)
[04:50:11] *** Joins: columbarius (~columbari@muedsl-82-207-236-132.citykom.de)
[04:56:06] <jamessan[m]> Git blame?  It'd be better if we documented it
[05:07:20] *** Quits: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com) (Remote host closed the connection)
[05:07:41] *** Joins: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com)
[05:10:06] *** Joins: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net)
[05:27:21] *** Quits: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net) (Excess Flood)
[05:34:26] *** Joins: eyemyth[m] (~eyemythma@2001:470:69fc:105::1:5ffc)
[05:38:26] *** Quits: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com) (Remote host closed the connection)
[05:38:54] *** Joins: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com)
[05:39:37] *** Quits: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com) (Max SendQ exceeded)
[05:40:05] *** Joins: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com)
[05:40:18] *** Quits: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com) (Max SendQ exceeded)
[05:40:52] *** Joins: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com)
[05:40:59] *** Quits: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com) (Max SendQ exceeded)
[05:41:17] <shadmansalehShad> Don't really need to blame . Api versions are available as part of api function definition https://github.com/neovim/neovim/blob/207307d0faf9b821cfd3cfeae4d027ab9ee5dbdb/src/nvim/api/vim.c#L109 . I was thinking if there was a list so someone wouldn't need to open up neovims codebase for that info :)
[05:41:31] *** Joins: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com)
[05:41:37] *** Joins: PortableDave (~portabled@27-33-20-59.tpgi.com.au)
[05:41:43] <shadmansalehShad> * neovims codebase every time for that
[05:41:44] *** Quits: ereteros (~ereteros@2603-6080-9800-18ee-0000-0000-0000-1ad4.res6.spectrum.com) (Max SendQ exceeded)
[05:46:40] *** Joins: Nesin (~Nesin@176.54.235.170)
[05:49:32] *** Joins: califax- (~califax@user/califx)
[05:50:58] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:51:37] *** Quits: PortableDave (~portabled@27-33-20-59.tpgi.com.au) (Ping timeout: 240 seconds)
[05:54:12] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:54:13] *** califax- is now known as califax
[05:55:39] *** Joins: kaivai (~kaivai@user/kaivai)
[06:02:50] <eyemyth[m]> How do I map a Lua function using vim.api.nvim_set_keymap?
[06:02:51] <eyemyth[m]> vim.api.nvim_set_keymap("", "H", MyLuaFunction(), { silent = true })
[06:02:51] <eyemyth[m]> every example I've seen uses strings for each argument, but that feels like it should be unnecessary for just calling a function. I feel like I'm missing something obvious...
[06:06:23] *** Quits: a0z1 (~a0z1@89.238.130.72) (Quit: Leaving)
[06:06:55] *** Joins: aod (~a@190-205-131-163.dyn.dsl.cantv.net)
[06:08:15] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[06:08:30] *** Joins: PortableDave (~portabled@27-33-20-59.tpgi.com.au)
[06:16:59] *** Quits: cyphix[m] (~cyphixsys@2001:470:69fc:105::948) (Quit: Client limit exceeded: 20000)
[06:17:50] *** Joins: TudbuTD (~nodebot@2001:16b8:665f:ec01:de4e:f4ff:fe04:8ebe)
[06:17:51] *** Quits: TudbuTD (~nodebot@2001:16b8:665f:ec01:de4e:f4ff:fe04:8ebe) (Remote host closed the connection)
[06:28:02] <gpanders> eyemyth: it is only possible if you're using master/nightly right now (not on 0.6.1, the latest release)
[06:28:29] <gpanders> and even then, your syntax is wrong. You want `vim.api.nvim_set_keymap("", "H", MyLuaFunction, {silent = true})`. No parens after `MyLuaFunction`
[06:36:13] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[06:38:00] *** Joins: keypusher (keypusher@user/keypusher)
[06:42:03] <eyemyth[m]> Cool, I'm running nightly so I'll give that a shot
[06:43:39] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:45:56] *** Quits: tosom[m] (~tosommatr@2001:470:69fc:105::1:79f) (Quit: Client limit exceeded: 20000)
[06:48:02] *** Quits: rgrinberg (~textual@177.246.218.103) (Read error: Connection reset by peer)
[06:48:58] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.3)
[06:49:16] *** Joins: rgrinberg (~textual@177.246.216.115)
[07:00:14] <eyemyth[m]> I'm running NVIM v0.7.0-dev+719-gbdfea9d9a compiled via homebrew... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/2e91d032866ec50f65cc9adf30c2169c7372fce9)
[07:00:41] <eyemyth[m]> stupid thing ate my leading whitespace
[07:01:01] <eyemyth[m]> s/--------------------------------------------------------------------------------//, s/--------------------------------------------------------------------------------//
[07:05:16] *** Joins: keypushe- (keypusher@user/keypusher)
[07:06:41] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[07:08:13] <gpanders> yea you're missing the first argument
[07:08:17] <gpanders> which is required
[07:08:26] <gpanders> `:h nvim_set_keymap`
[07:08:30] *** keypushe- is now known as keypusher
[07:13:38] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 260 seconds)
[07:14:20] <eyemyth[m]> The 'mode' argument? I have an empty string because that's equivalent to just `map`
[07:14:45] <eyemyth[m]> > {mode}  Mode short-name (map command prefix: "n", "i",
[07:14:45] <eyemyth[m]>    │   │   "v", "x", …) or "!" for :map!, or empty string
[07:14:45] <eyemyth[m]>    │   │   for :map.
[07:17:18] *** Quits: aod (~a@190-205-131-163.dyn.dsl.cantv.net) (Quit: leaving)
[07:18:07] *** Quits: PortableDave (~portabled@27-33-20-59.tpgi.com.au) (Quit: WeeChat 3.3)
[07:18:21] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[07:22:07] *** Quits: nzeo (~nzeo@80.64.181.150) (Ping timeout: 256 seconds)
[07:27:09] <Shadman[m]> @gpanders No nvim_set_keymap needs to use `callback` and '' is a valid mode value... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ff6cff0c0fc3567b55e7d1d6cdd465e6b5dc867d)
[07:27:29] <gpanders> > <@shadman:matrix.org> @gpanders No nvim_set_keymap needs to use `callback` and '' is a valid mode value... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/7dfee1e4d9099e1d5583d494ab92a6e5ce235d93)
[07:29:47] <eyemyth[m]> ahh, I see. Thanks!
[07:54:09] *** Joins: csmoecsmoe[m] (~csmoe-5a8@2001:470:69fc:105::1:600c)
[07:54:09] * csmoecsmoe[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/8e707570f8d983acc625d3022c6f01b3b169fc70
[07:54:13] <csmoecsmoe[m]> https://github.com/neovim/nvim-lspconfig/wiki/Project-local-settings
[07:54:16] *** Quits: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net) (Quit: Client closed)
[07:54:41] * csmoecsmoe[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/e3dbd21d002e7abd23a99118268075841fa75145
[07:56:20] <csmoecsmoe[m]> * ```... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/4003a2aae3efdf377d1adf3beb1e4e9c50613983)
[07:58:30] *** Joins: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net)
[07:58:48] *** Quits: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net) (Client Quit)
[07:59:00] *** Joins: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net)
[08:06:45] *** Quits: veesh (~veesh@89.237.100.63) (Ping timeout: 256 seconds)
[08:08:24] *** Joins: razzd777 (~razzd777@user/razzd777)
[08:10:15] <mjlbach[m]> Well, rust-analyzer is panicking for some reason
[08:10:48] *** Joins: jcbjoe2021 (~joe@user/jcbjoe2021)
[08:10:57] <mjlbach[m]> Why are you sending the extra notification? 
[08:12:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[08:12:46] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:20:53] *** Joins: veesh (~veesh@77.137.130.225)
[08:28:04] <csmoecsmoe[m]> [![image.png](https://files.gitter.im/5506b96e15522ed4b3dd5317/Cos5/thumb/image.png)](https://files.gitter.im/5506b96e15522ed4b3dd5317/Cos5/image.png)
[08:29:07] <csmoecsmoe[m]> > Why are you sending the extra notification? 
[08:29:08] <csmoecsmoe[m]> I was following the wiki
[08:30:32] <mjlbach[m]> That example isn't quite right
[08:30:43] <mjlbach[m]> client.notify('workspace/didChangeConfiguration', {
[08:30:43] <mjlbach[m]>             settings = settings,
[08:30:43] <mjlbach[m]>      })
[08:30:56] <mjlbach[m]> settings can be client.config.settings
[08:31:22] <csmoecsmoe[m]> oh, thank you ❤️ 
[08:37:23] <mjlbach[m]> You can update the wiki entry when you get it working :) 
[08:38:45] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[08:49:09] *** Quits: zwrr (~zwr@2804:d45:b966:fb00:1f1f:72e7:c7dc:fde0) (Ping timeout: 250 seconds)
[08:50:49] *** Joins: zwr (~zwr@2804:d45:b966:fb00:1d28:97e7:e951:1b26)
[09:02:07] *** Quits: rgrinberg (~textual@177.246.216.115) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:10:55] *** Quits: mattroelle (~mattroell@136-26-68-28.cab.webpass.net) (Ping timeout: 256 seconds)
[09:13:26] *** Joins: sealson[m] (~sealsonma@2001:470:69fc:105::1:6014)
[09:14:56] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[09:23:01] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1)
[09:23:13] <p00f> i added these extra flags to cmake while building neovim from the aur:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/21d014faa9b50fe481e3334a534921dc61aec38c)
[09:23:31] <p00f> so the `build()` function is now... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/66deb9815b7d52705ccd1aed42f4856280a11c6c)
[09:24:12] <p00f> and i get this warning `clang-13: warning: argument unused during compilation: '-fuse-ld=lld' [-Wunused-command-line-argument]`
[09:26:39] *** Joins: Guest75 (~Guest75@pa49-178-174-201.pa.nsw.optusnet.com.au)
[09:26:49] <p00f> nvm got it
[09:28:23] *** Quits: Guest75 (~Guest75@pa49-178-174-201.pa.nsw.optusnet.com.au) (Quit: Client closed)
[09:52:41] *** Joins: thetic (~thetic@174-21-54-220.tukw.qwest.net)
[09:55:12] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[09:55:55] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[10:06:36] *** Quits: wahpanda (~relms@user/relms) (Quit: UwU)
[10:14:44] *** Quits: lilgopher (~textual@2601:241:8000:38f0:256e:d3dc:d349:22df) (Quit: Textual IRC Client: www.textualapp.com)
[10:18:00] * csmoecsmoe[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/bd4deb98afe7d6624d35053a91b46b85abaa7837
[10:18:39] <csmoecsmoe[m]> s/private-protocol/feature1/, s/lan-file/feature2/
[10:21:27] *** Joins: wahpanda (~relms@user/relms)
[10:21:40] <csmoecsmoe[m]> * ```... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/62fd3b181596e12498454bf7452ec6c084c0833b)
[10:27:09] *** Joins: ublx (~ublx@user/ublx)
[10:34:05] *** Quits: thetic (~thetic@174-21-54-220.tukw.qwest.net) (Ping timeout: 256 seconds)
[10:39:11] *** Joins: csmoe[m] (~csmoematr@2001:470:69fc:105::1:6021)
[10:59:11] *** Joins: pun (~weechat@user/pun)
[11:03:40] <csmoecsmoe[m]> https://github.com/neovim/nvim-lspconfig/blob/1917a52a7ccb517f76d6a6e732fb349f381fc927/lua/lspconfig/configs.lua#L179 the second notification seems sent by this code.
[11:05:46] <csmoecsmoe[m]> the local_config was sent here https://github.com/neovim/nvim-lspconfig/blob/1917a52a7ccb517f76d6a6e732fb349f381fc927/lua/lspconfig/util.lua#L53, then a new empty params sent by the function above.
[11:07:36] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:10:52] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:11:10] <mjlbach[m]> Yeah I would probably do all of that in on_attach rather than on_init
[11:21:49] <vigoux> Good morning everyone
[11:26:57] *** Quits: zoltanzuberi[m] (~zoltanker@2001:470:69fc:105::fb20) (Quit: Client limit exceeded: 20000)
[11:40:08] *** Joins: taupiqueur (~taupiqueu@107.146.204.77.rev.sfr.net)
[11:40:19] *** Quits: razzd777 (~razzd777@user/razzd777) (Remote host closed the connection)
[11:40:36] *** Joins: razzd777 (~razzd777@2603:9000:2503:5600:bbcf:be12:c148:9405)
[11:47:31] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.3)
[11:51:18] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1) (Read error: Connection reset by peer)
[11:52:03] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1)
[11:58:20] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:a884:20a2:2d1a:334d)
[12:08:47] *** Quits: razzd777 (~razzd777@2603:9000:2503:5600:bbcf:be12:c148:9405) (Quit: Leaving)
[12:09:58] *** Joins: d42 (~root@user/d42)
[12:10:34] *** Quits: softinio[m] (~softiniom@2001:470:69fc:105::9b37) (Quit: Client limit exceeded: 20000)
[12:19:16] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:28:12] *** Quits: tmerse[m] (~tmersemat@2001:470:69fc:105::3ae) (Quit: Client limit exceeded: 20000)
[12:28:16] *** Joins: towb (~bwot@user/towb)
[12:28:46] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[12:29:29] *** Quits: Dima[m] (~reddima10@2001:470:69fc:105::366) (Quit: Client limit exceeded: 20000)
[12:30:10] *** Quits: Boss[m] (~bossbigbi@2001:470:69fc:105::2acd) (Quit: You have been kicked for being idle)
[12:30:14] *** Quits: RohitGoswami[m] (~rgoswamim@2001:470:69fc:105::16cc) (Quit: You have been kicked for being idle)
[12:33:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[12:33:26] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:55:22] *** Quits: aJJa (~aJJa@2a0a:e340:1001:300::8:3) (Quit: Leaving)
[12:57:53] *** Quits: ScrumpyJack (~ScrumpyJa@beaucoup.fish) (Ping timeout: 250 seconds)
[13:03:33] *** Joins: M4rty (~M4rtyflex@37.166.127.240)
[13:10:20] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[13:17:29] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:19:37] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[13:22:05] *** Joins: Haricophile (~Haricophi@2a01:e34:ed36:e850:de33:ac3f:d165:8c70)
[13:34:00] *** Joins: ScrumpyJack (~ScrumpyJa@beaucoup.fish)
[13:36:44] *** Joins: cottoneyejim (~cottoneye@62.4.57.10)
[13:38:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:41:24] *** Joins: sara13 (~sara13@62.19.93.8)
[13:42:41] <sara13> Ciao
[13:43:37] *** Quits: sara13 (~sara13@62.19.93.8) (Client Quit)
[13:44:36] *** Joins: sara13 (~sara13@62.19.93.8)
[13:45:02] *** Quits: sara13 (~sara13@62.19.93.8) (Client Quit)
[13:50:48] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:51:37] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[13:52:16] *** Joins: sara13 (~sara13@host-79-18-127-74.retail.telecomitalia.it)
[13:52:52] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[13:53:21] *** Quits: sara13 (~sara13@host-79-18-127-74.retail.telecomitalia.it) (Client Quit)
[13:58:47] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[14:01:37] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:03:41] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[14:12:23] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:19:38] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[14:22:20] *** Joins: biog (~user1@159.224.42.85)
[14:23:50] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[14:33:55] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:34:40] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[14:42:13] *** Joins: han-`8 (~han`@li987-55.members.linode.com)
[14:42:59] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Quit: Leaving)
[14:43:13] *** Quits: han-` (~han`@user/han-/x-0887595) (Read error: Connection reset by peer)
[14:43:21] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[14:43:32] *** Quits: carlavilla (~carlavill@2a0c:5a84:3105:5e00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[14:46:27] *** Quits: Haricophile (~Haricophi@2a01:e34:ed36:e850:de33:ac3f:d165:8c70) (Remote host closed the connection)
[14:46:47] *** Joins: Haricophile (~Haricophi@2a01:e34:ed36:e850:ca3:44c9:cdd1:6e7d)
[14:47:41] *** Joins: carlavilla (~carlavill@2a0c:5a84:3105:5e00:221:6bff:fe3b:cee4)
[14:51:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[14:53:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:56:21] *** Joins: hellstabber (~hellstabb@178.233.16.12)
[15:05:01] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[15:13:41] *** Joins: agonhajdari (~textual@user/agonhajdari)
[15:19:55] *** Quits: M4rty (~M4rtyflex@37.166.127.240) (Quit: leaving)
[15:24:53] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:26:44] *** Joins: breavyn_ (~breavyn@user/breavyn)
[15:28:09] *** Quits: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.4)
[15:28:11] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 256 seconds)
[15:34:26] *** Quits: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[15:34:46] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Quit: Cy@)
[15:34:49] *** Joins: aphysically (~aphysical@user/aphysically)
[15:34:56] <aphysically> wow my neovim plugins are real angry
[15:35:59] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[15:36:13] *** Joins: rany (~rany@user/rany)
[15:36:31] <aphysically> somehow my update command managed to uninstall everything and I had to reinstall i
[15:36:36] <aphysically> with the same update command...
[15:36:39] <aphysically> nvim --headless +PlugUpgrade +PlugUpdate! +PlugClean! +TSUpdateSync +visual +qall
[15:36:47] *** Joins: nzeo (~nzeo@80.64.181.150)
[15:36:58] <aphysically> probably some net edge case or something with clean! 
[15:37:56] <sunjonSenghanBri> or, you managed to run it in an environment where an env $VAR that it depends upon wasn't present, and it proceeded to clean
[15:38:46] <sunjonSenghanBri> or, perhaps something related to a change in start/opt paths
[15:38:56] <aphysically> could be
[15:39:05] <aphysically> I suspect I won't find out
[15:39:22] <aphysically> one thing that doesn't work in this command is TSUpdateSync will close before everything is actually updated
[15:39:47] <aphysically> but it only seems to be a problem if there's a lot of updates/you're installing new, it seems to catch the small updates before quitting
[15:39:54] <aphysically> I suspect there's not a fix, but I'm also not sure it's actually a bug
[15:42:13] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:43:34] *** Joins: darkstorm (~male@user/darkstorm)
[15:45:46] <clason[m]> Probably Github having degraded performance (or limiting to mitigate increased access over the holidays).
[15:45:59] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[15:46:02] <clason[m]> Try setting the maximal number of parallel jobs lower (if vim-plug allows that)
[15:46:20] <clason[m]> s/limiting/throttling/
[15:49:33] <darkstorm> Hi... is there come command that will insert a "()" (or other brackets) & leave tHe cursor inside ?
[15:49:56] <clason[m]> You're probably looking for an "autopairs" plugin.
[15:50:21] <darkstorm> i see, thx for the info clason
[15:51:23] <clason[m]> You can also just do something like `inoremap <c-s> ()<cmd>normal!h<cr>`
[15:52:03] *** Joins: guido (~weechat@host-80-182-121-179.pool80182.interbusiness.it)
[15:53:14] <darkstorm> thx that would be better
[15:54:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:55:48] <darkstorm> the ENTER key in normal seems to do the same thing as +
[15:56:03] <darkstorm> or is there a diff
[15:56:46] <clason[m]> same thing (also `<c-m>`)
[15:56:51] <clason[m]> `:h <cr>`
[15:58:00] <darkstorm> so <CR> is associated with the enter key and not <NL> (which is alternate for j)
[15:58:21] <darkstorm> at least in normal mode.
[15:58:23] <clason[m]> yes
[15:58:27] <clason[m]> `<nl>` is not a key
[15:58:42] <clason[m]> oh, wait, it might be on some keyboards
[15:58:56] <clason[m]> again, `:h <nl>` will tell you
[15:59:14] <darkstorm> in insert mode hitting enter inserts an <NL> though right?
[15:59:29] <clason[m]> depends on your settings
[15:59:50] <darkstorm> with unix settings I mean
[15:59:57] *** Quits: cottoneyejim (~cottoneye@62.4.57.10) (Ping timeout: 240 seconds)
[16:00:12] <clason[m]> no, I don't think so (I'd have to check)
[16:01:02] <darkstorm> oh no that is a Line feed
[16:01:02] <clason[m]> ah, yes, it does
[16:01:11] <clason[m]> again, `:h fileformat` will tell you
[16:01:25] <darkstorm> okay
[16:02:29] <darkstorm> so i can use either enter or + for something else then since here is no diff
[16:02:37] <darkstorm> one of the am I mean
[16:02:47] <darkstorm> them *
[16:03:30] <clason[m]> unless you or a plugin has mapped one of them to something else
[16:03:59] <darkstorm> cool thats great :)
[16:04:17] <darkstorm> i have no plugins installed
[16:04:27] *** Joins: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[16:05:56] *** Quits: guido (~weechat@host-80-182-121-179.pool80182.interbusiness.it) (Read error: Connection reset by peer)
[16:06:09] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[16:06:16] *** Joins: guido (~weechat@host-80-182-121-179.retail.telecomitalia.it)
[16:09:19] *** Quits: guido (~weechat@host-80-182-121-179.retail.telecomitalia.it) (Read error: Connection reset by peer)
[16:09:28] *** Joins: guido (~weechat@host-80-182-121-179.retail.telecomitalia.it)
[16:11:37] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:11:55] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:12:17] *** Quits: guido (~weechat@host-80-182-121-179.retail.telecomitalia.it) (Read error: Connection reset by peer)
[16:12:20] *** Joins: guido_ (~weechat@host-80-182-121-179.pool80182.interbusiness.it)
[16:14:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:15:14] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:21:25] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[16:25:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:25:50] *** Joins: qwmyee[m] (~qwmyeemat@2001:470:69fc:105::1:6056)
[16:26:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:26:48] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:26:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:27:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[16:28:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:30:14] *** Netboy3_ is now known as Netboy3
[16:31:53] *** Joins: MarkusAmshoveMar (~markusams@2001:470:69fc:105::1:6059)
[16:31:54] <MarkusAmshoveMar> Hi, I'm adding a language server via `lspconfig` and I'm trying to figure out how to send a custom notification to the server. I've found vim.lsp.rpc.notify() in the documentation, but everytime I call `:lua vim.lsp.rpc.notify("doSomething")` it says that `notify` is nil. A LSP is attached to the current buffer. What am I doing wrong? :)
[16:33:33] *** Joins: zostj (~rue@61-231-132-126.dynamic-ip.hinet.net)
[16:34:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[16:39:41] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[16:50:18] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[17:17:54] <numToStr[m]> are you using the Markdown parser
[17:18:24] *** Quits: okt (560965ea7b@user/okt) (Read error: Connection reset by peer)
[17:18:34] *** Joins: okt_ (560965ea7b@user/okt)
[17:19:06] *** okt_ is now known as okt
[17:19:08] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:19:14] *** Joins: constxo (~brad@142.134.38.68)
[17:19:18] <clason[m]> you also need the parser for the embedded language
[17:19:18] <constxo> kings
[17:19:42] <constxo> anyone had any success getting neovim set up for working on a visual studio C++ project?
[17:19:58] <constxo> i cannot overstate how much i hate editing code in VS
[17:20:08] <constxo> but the intellisense is invaluable
[17:20:13] *** Quits: jamietanna[m] (~jamietann@2001:470:69fc:105::30f0) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: AlexejKowalew[m4 (~akowalewm@2001:470:69fc:105::704) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: auscyber[m] (~auscyberm@2001:470:69fc:105::1:5c91) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: MarkCabanes[m] (~cabanesde@2001:470:69fc:105::1:594e) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: pvh4caretd[m] (~pvh4caret@2001:470:69fc:105::1:5152) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: stevearc[m] (~stevearcm@2001:470:69fc:105::1:4acd) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: Ardiansah[m] (~redboyzma@2001:470:69fc:105::1:4ac5) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: ryantr[m] (~ryantrmat@2001:470:69fc:105::1:4dda) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: ArrayinaMatrix[m (~arrayinam@2001:470:69fc:105::1:470d) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: jvet[m] (~jvetmatri@2001:470:69fc:105::1:38e2) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: enirda[m] (~enirdamat@2001:470:69fc:105::db7e) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: mrassiliMarouane (~mrassili-@2001:470:69fc:105::fbc3) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: Bug[m] (~qbugmatri@2001:470:69fc:105::94bf) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: delta-official[m (~delta-off@2001:470:69fc:105::ece6) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: rcarriga[m] (~rcarrigam@2001:470:69fc:105::d544) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: jweckman[m] (~jweckmanm@2001:470:69fc:105::1:4785) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: niamhniamh[m] (~niamhniam@2001:470:69fc:105::1:3ee4) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: CKolkeyCameron[m (~ckolkey-6@2001:470:69fc:105::e1ba) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: manveru[m]1 (~manveruma@2001:470:69fc:105::c2d7) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: xac0[m] (~xac0matri@2001:470:69fc:105::da0f) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: SevereOverfl0wDo (~severeove@2001:470:69fc:105::feb2) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: M008newbie[m] (~clcucmatr@2001:470:69fc:105::3f35) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: the0dorek[m] (~the0dorek@2001:470:69fc:105::371a) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: amazingefren[m] (~amazingef@2001:470:69fc:105::f838) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: rakshacode[m] (~rakshacod@2001:470:69fc:105::1:1570) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: Amin[m] (~fieryrain@2001:470:69fc:105::c526) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: Morimaruza[m] (~morimaruz@2001:470:69fc:105::da03) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: usuariodeteste[m (~usuariode@2001:470:69fc:105::d007) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: dsha256[m] (~dhsha256m@2001:470:69fc:105::39f3) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: bard[m] (~bardhalog@2001:470:69fc:105::c361) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: SunClonus[m] (~sunclonus@2001:470:69fc:105::47b) (Ping timeout: 240 seconds)
[17:20:22] <constxo> so i need some kind of LSP plugin that works 
[17:20:31] <constxo> on windows
[17:20:32] <vigoux> nvim-lspconfig
[17:20:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: M9d0cd7d2[m] (~M9d0cd7d2@2001:470:69fc:105::1:1609) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: choffee[m] (~johnchoff@2001:470:69fc:105::3f7d) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: Taesheher[m] (~tssmmatri@2001:470:69fc:105::1:1a3) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: romwhite[m] (~romwhitem@2001:470:69fc:105::1:4f27) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: stephenpraterSte (~stephenpr@2001:470:69fc:105::1:31f1) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: AntonKashin[m] (~antonmkas@2001:470:69fc:105::1:1195) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: Jonas[m]1 (~joweissma@2001:470:69fc:105::1:172c) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: algmyr[m] (~algmyrmat@2001:470:69fc:105::1:a39) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: she3o[m] (~she3omatr@2001:470:69fc:105::1:cc6) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: irminsul1337irmi (~irminsul1@2001:470:69fc:105::1:2ec8) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: ShidongWang[m] (~wsdjegmat@2001:470:69fc:105::1:cb7) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: oskaroe[m] (~oskaroema@2001:470:69fc:105::fa28) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: SeniorMars[m] (~seniormar@2001:470:69fc:105::fd9b) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: dfg{}[m] (~danielfgr@2001:470:69fc:105::1:25a4) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: unkvolism[m] (~unkvolism@2001:470:69fc:105::fa86) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: rozbb[m] (~rozbbmatr@2001:470:69fc:105::f80d) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: vtronkoVladyslav (~vtronko-5@2001:470:69fc:105::f73d) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: chroot[m] (~roothalog@2001:470:69fc:105::f073) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: CaioStott[m] (~iknashmat@2001:470:69fc:105::1:11) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: ryanf[m] (~rf-matrix@2001:470:69fc:105::1:27be) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: darkedlight[m] (~darkedlig@2001:470:69fc:105::f9f0) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: ectocooler[m] (~ectocoole@2001:470:69fc:105::3f44) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: MuhammadAldoFirm (~maldomatr@2001:470:69fc:105::1:1029) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: st4ll1[m] (~st4ll1mat@2001:470:69fc:105::1:1692) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: parsanooriParsaN (~parsanoor@2001:470:69fc:105::f080) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: Simone[m] (~cigamatri@2001:470:69fc:105::e81b) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: AfnanEnayet[m] (~afnanioma@2001:470:69fc:105::1:73f) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: beauwilliamsBeau (~beauwilli@2001:470:69fc:105::fc03) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: netcarver[m] (~netcarver@2001:470:69fc:105::8fd9) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: monban[m] (~monbanmat@2001:470:69fc:105::ed3a) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: splines[m] (~splinesma@2001:470:69fc:105::e2c4) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: IzzxtIzzat[m] (~izzxt-5fa@2001:470:69fc:105::e7ec) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: BenjmanBenjman[m (~benjman-5@2001:470:69fc:105::1:1939) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: chemzqmQimingzha (~chemzqm-5@2001:470:69fc:105::dfd9) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: kimat[m] (~kimatmatr@2001:470:69fc:105::dde4) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: bgshacklettBrian (~bgshackle@2001:470:69fc:105::1:390c) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: lxsymingtonLukeX (~lxsymingt@2001:470:69fc:105::1:1b33) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: JesseGibson[m] (~psycholla@2001:470:69fc:105::c082) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: notusknot[m] (~notusknot@2001:470:69fc:105::b509) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: kaji (~kajiryoji@2001:470:69fc:105::405b) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: mangelozzimangel (~mangelozz@2001:470:69fc:105::c712) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: jzelinskie[m] (~jzelinski@2001:470:69fc:105::b4d6) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: worldwidewebuser (~worldwide@2001:470:69fc:105::408b) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: l-kershaw[m] (~l-kershaw@2001:470:69fc:105::3f20) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: distrotube[m] (~distrotub@2001:470:69fc:105::ce6e) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: sergey-lapinSerg (~sergey-la@2001:470:69fc:105::1:472f) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: mini_girav[m] (~minigirav@2001:470:69fc:105::4035) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: Nakhtiar[m] (~nakhtiarm@2001:470:69fc:105::1:8b6) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: funn1est[m] (~funn1estm@2001:470:69fc:105::e902) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: JanSteinke[m] (~jan-xyzma@2001:470:69fc:105::da4a) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: runiq[m] (~runiqmatr@2001:470:69fc:105::3a86) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: roschaefer[m] (~roschaefe@2001:470:69fc:105::3a83) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: sim[m] (~simrat39m@2001:470:69fc:105::3a9b) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: tomsen[m] (~tfbiomatr@2001:470:69fc:105::3aa5) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: thek3nger[m] (~thek3nger@2001:470:69fc:105::3aa6) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: spicynoodles[m] (~spicynoo_@2001:470:69fc:105::3a9e) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: tiyn[m] (~tiynmtxti@2001:470:69fc:105::3aa9) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: sh3rm4n[m] (~sh3rm4nma@2001:470:69fc:105::3a92) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: RanduinRobinLiao (~randuin-5@2001:470:69fc:105::3a7a) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: puremourningBenJ (~puremourn@2001:470:69fc:105::3a73) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: mattijs[m] (~mattijshm@2001:470:69fc:105::3a4e) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: TamTam[m] (~oblommatr@2001:470:69fc:105::3a61) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: ronniemagattiRon (~ronniemag@2001:470:69fc:105::3a82) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: jsatkJesseAtkins (~jsatk-588@2001:470:69fc:105::3a30) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: ludbeksurenshres (~ludbek-55@2001:470:69fc:105::3a47) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: mfusseneggerMath (~mfusseneg@2001:470:69fc:105::3a52) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: JonathanGilchris (~jgilchris@2001:470:69fc:105::3a2a) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: DannyTormoen[m] (~dtormoenm@2001:470:69fc:105::39f9) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: esirumeran[m] (~esirumera@2001:470:69fc:105::3a00) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: berven[m] (~bervenmat@2001:470:69fc:105::39c5) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: bfredlBjrnLinse[ (~bfredl-55@2001:470:69fc:105::39c8) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: Avahe[m] (~avahematr@2001:470:69fc:105::3865) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: dilawarDilawarSi (~dilawar-5@2001:470:69fc:105::39f4) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: camspiersCamSpie (~camspiers@2001:470:69fc:105::39d8) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: alanwsmithAlanSm (~alanwsmit@2001:470:69fc:105::39a5) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: hamedasgari88[m] (~hamedasga@2001:470:69fc:105::1:5aaa) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: comfortablynickN (~comfortab@2001:470:69fc:105::d06b) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: mckormick[m] (~mckormick@2001:470:69fc:105::e321) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: tylerryan[m] (~tylerryan@2001:470:69fc:105::becb) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: hazelrah[m] (~hazelrahm@2001:470:69fc:105::1:346a) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: lchapoguzman[m] (~lchapoguz@2001:470:69fc:105::1:389) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: jokeyrhyme[m] (~jokeyrhym@2001:470:69fc:105::d05c) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: geetsethi[m] (~geetsethi@2001:470:69fc:105::c374) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: jemag[m] (~jemagmatr@2001:470:69fc:105::b626) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: hedy[m] (~hedyenvsn@2001:470:69fc:105::1:1f6) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: dogfoodpizza[m] (~dogfoodpi@2001:470:69fc:105::ef69) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: udscbt[m] (~udscbtmat@2001:470:69fc:105::a149) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: thonoht[m] (~thonohtma@2001:470:69fc:105::d7be) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: benjamin[m]1234 (~benjaminm@2001:470:69fc:105::1:3f2f) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: createtargett[m] (~whoami96m@2001:470:69fc:105::1:3373) (Ping timeout: 240 seconds)
[17:20:43] <vigoux> What version on nvim are you on ?
[17:20:48] <constxo> 0.6.1
[17:20:55] <constxo> but like
[17:21:01] *** Quits: csmoecsmoe[m] (~csmoe-5a8@2001:470:69fc:105::1:600c) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: Soham[m] (~sohamshan@2001:470:69fc:105::319f) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: gipsypunk[m] (~gipsypunk@2001:470:69fc:105::1:4183) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: gadkadoshgadkado (~gadkadosh@2001:470:69fc:105::1:3f03) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: JeffBowes[m] (~strossusm@2001:470:69fc:105::1:458c) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: _Real[m] (~irealisti@2001:470:69fc:105::f630) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: lazytanuki[m] (~lazytanuk@2001:470:69fc:105::1:40b0) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: talvdav[m] (~talvdavma@2001:470:69fc:105::3c42) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: meanmachin3[m] (~meanmachi@2001:470:69fc:105::1:3343) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: sayanarijit[m] (~sayanarij@2001:470:69fc:105::1:2cd7) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: vaalla[m] (~vaallamat@2001:470:69fc:105::1:28a3) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: AlessandroMartin (~martini97@2001:470:69fc:105::1:2ca7) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: nub[m] (~nubmatrix@2001:470:69fc:105::1:2fc7) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: efertone[m]1 (~efertonem@2001:470:69fc:105::1:2437) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: glitterly[m] (~glitterly@2001:470:69fc:105::1:24c6) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: ghishadow[m] (~ghishadow@2001:470:69fc:105::1:403b) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: C698844402HadmiR (~c69884440@2001:470:69fc:105::1:1e50) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: Gee19Jordan[m] (~gee19-618@2001:470:69fc:105::1:2f37) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: moziz[m] (~mozizmozi@2001:470:69fc:105::1:2c02) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: MichaelZant[m] (~zantinger@2001:470:69fc:105::1:20b2) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: rustyconstruct[m (~rustycons@2001:470:69fc:105::1:1e0a) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: Shatur[m] (~hennadiim@2001:470:69fc:105::1:5679) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: Farrokh[m] (~sinning-m@2001:470:69fc:105::1:2b05) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: cewood[m] (~cewoodmat@2001:470:69fc:105::daf9) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: foldue[m] (~folduemat@2001:470:69fc:105::d1a2) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: utkhambra[m] (~utkhambra@2001:470:69fc:105::cfcc) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: _____[m] (~chirpyboa@2001:470:69fc:105::d353) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: jluismontilla[m] (~jluismont@2001:470:69fc:105::cdc2) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: awendell[m] (~awendellm@2001:470:69fc:105::cdc4) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: maccam94[m] (~maccam94m@2001:470:69fc:105::c9de) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: samrath2007Samra (~samrath20@2001:470:69fc:105::c7eb) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: KOKOUAFIDEGNON[m (~afidegnum@2001:470:69fc:105::1:34e0) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: Popkornium18[m] (~popkorniu@2001:470:69fc:105::1:3fa2) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: theduke[m] (~thedukema@2001:470:69fc:105::9ee2) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: delafthi[m] (~delafthim@2001:470:69fc:105::be66) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: n8henrie[m] (~n8henriem@2001:470:69fc:105::bfdb) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: vlopes11VictorLo (~vlopes11-@2001:470:69fc:105::1:1b7c) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: Kristopher[m] (~krruzicev@2001:470:69fc:105::c2c8) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: ineol[m] (~ineolmatr@2001:470:69fc:105::c462) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: dohungthinh[m] (~bonthinhm@2001:470:69fc:105::c0ec) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: malb[m] (~vidiobeil@2001:470:69fc:105::1:3bae) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: m397[m] (~m397matri@2001:470:69fc:105::bbbe) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: BradenT[m] (~babygauma@2001:470:69fc:105::be6a) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: kleschenko[m] (~kleschenk@2001:470:69fc:105::be4a) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: camflan[m] (~camflanma@2001:470:69fc:105::be1e) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: hab[m] (~hab0matri@2001:470:69fc:105::ef40) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: vpoat[m] (~vpoatmatr@2001:470:69fc:105::c622) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: elbin[m] (~elbinkdeo@2001:470:69fc:105::b7c7) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: bigjazzsound[m] (~bigjazzso@2001:470:69fc:105::be06) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: chrash[m] (~chrashmat@2001:470:69fc:105::be17) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: tilom[m] (~tilommatr@2001:470:69fc:105::bb7c) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: sevanteri[m] (~sevanteri@2001:470:69fc:105::f1ba) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: tlde[m] (~tldematri@2001:470:69fc:105::1:34cf) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: yujinyuzEugeneOl (~yujinyuz-@2001:470:69fc:105::c413) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: claudemullerLFIL (~claudemul@2001:470:69fc:105::68b3) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: svermeulenSteveV (~svermeule@2001:470:69fc:105::b5ca) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: sdflasjdf[m] (~sdflasjdf@2001:470:69fc:105::afd7) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: justqaz[m] (~justqazma@2001:470:69fc:105::6148) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: nullvoxpopuli[m] (~nullvoxpo@2001:470:69fc:105::f8bc) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: slackcoder[m] (~slackcode@2001:470:69fc:105::c8d0) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: Jacob[m]1 (~jacobmatr@2001:470:69fc:105::1:8a3) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: detlevich[m] (~detlevich@2001:470:69fc:105::cea2) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: pystardust[m] (~pystardus@2001:470:69fc:105::4121) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: testingcodehere[ (~testingco@2001:470:69fc:105::31ba) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: ynrbode[m] (~ynrbodema@2001:470:69fc:105::bad9) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: nmuntz87[m] (~nmuntz87m@2001:470:69fc:105::b910) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: whalebait[m] (~whalebait@2001:470:69fc:105::ce8d) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: oceanicplainsape (~oceanicpl@2001:470:69fc:105::315b) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: rowan[m] (~adehenmat@2001:470:69fc:105::2df1) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: LoipesMas[m] (~loipesmas@2001:470:69fc:105::1:3e00) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: BuZZ-dEE[m] (~buzz-deem@2001:470:69fc:105::51a) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: albertyeah[m] (~albertyea@2001:470:69fc:105::adc) (Ping timeout: 240 seconds)
[17:21:04] <constxo> the project is generally built using the windows toolchain
[17:21:14] <constxo> also holy fuck matrix is cringe
[17:21:20] <vigoux> haha
[17:21:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[17:21:32] <constxo> i tried using clangd as my language server
[17:21:43] <constxo> but i was getting a bunch of errors 
[17:21:54] <vigoux> Are you using CMake ?
[17:21:55] *** Joins: bwot (~bwot@user/towb)
[17:22:12] <vigoux> Because clangd actually needs the complie_commands.json thing
[17:22:34] <constxo> i tried using -DCMAKE_EXPORT_COMPILE_COMMANDS=1 or whatever
[17:22:39] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[17:22:41] <constxo> but it just didn't generate any files lol
[17:23:02] <vigoux> The compile_commands.json should be in your build directory
[17:23:15] <constxo> maybe my cmake is too old
[17:23:24] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[17:23:44] <vigoux> You would have got a warning if that was the case
[17:24:20] <constxo> ok yeah i just checked, it should work
[17:24:22] <constxo> hmm
[17:24:40] <vigoux> Is it not in your build/ directory ?
[17:24:55] *** Quits: towb (~bwot@user/towb) (Ping timeout: 256 seconds)
[17:25:10] <constxo> no 
[17:25:18] <constxo> find . -name compile_commands.json
[17:25:20] <constxo> nothing
[17:25:33] <vigoux> hmmm
[17:25:47] <vigoux> What if you delete it, and rerun cmake from scratch
[17:26:48] *** Joins: saud (~saud@2406:7400:73:8702:27f8:7f77:616d:4500)
[17:27:40] <constxo> will try
[17:28:35] *** bwot is now known as towb
[17:29:01] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[17:32:32] *** Joins: jamietanna[m] (~jamietann@2001:470:69fc:105::30f0)
[17:32:43] *** Joins: usuariodeteste[m (~usuariode@2001:470:69fc:105::d007)
[17:32:50] *** Joins: niamhniamh[m] (~niamhniam@2001:470:69fc:105::1:3ee4)
[17:32:51] *** Joins: CKolkeyCameron[m (~ckolkey-6@2001:470:69fc:105::e1ba)
[17:32:56] *** Joins: the0dorek[m] (~the0dorek@2001:470:69fc:105::371a)
[17:32:57] *** Joins: Morimaruza[m] (~morimaruz@2001:470:69fc:105::da03)
[17:32:58] *** Joins: rakshacode[m] (~rakshacod@2001:470:69fc:105::1:1570)
[17:33:00] *** Joins: SunClonus[m] (~sunclonus@2001:470:69fc:105::47b)
[17:33:03] *** Joins: MarkCabanes[m] (~cabanesde@2001:470:69fc:105::1:594e)
[17:33:04] *** Joins: bard[m] (~bardhalog@2001:470:69fc:105::c361)
[17:33:38] *** Joins: auscyber[m] (~auscyberm@2001:470:69fc:105::1:5c91)
[17:33:40] *** Joins: dsha256[m] (~dhsha256m@2001:470:69fc:105::39f3)
[17:33:42] *** Joins: M008newbie[m] (~clcucmatr@2001:470:69fc:105::3f35)
[17:33:51] *** Joins: amazingefren[m] (~amazingef@2001:470:69fc:105::f838)
[17:33:53] *** Joins: Amin[m] (~fieryrain@2001:470:69fc:105::c526)
[17:33:53] *** Joins: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6)
[17:33:56] *** Joins: ryantr[m] (~ryantrmat@2001:470:69fc:105::1:4dda)
[17:33:56] *** Joins: AlexejKowalew[m4 (~akowalewm@2001:470:69fc:105::704)
[17:33:56] *** Joins: pvh4caretd[m] (~pvh4caret@2001:470:69fc:105::1:5152)
[17:33:57] *** Joins: stevearc[m] (~stevearcm@2001:470:69fc:105::1:4acd)
[17:33:58] *** Joins: Ardiansah[m] (~redboyzma@2001:470:69fc:105::1:4ac5)
[17:34:00] *** Joins: jweckman[m] (~jweckmanm@2001:470:69fc:105::1:4785)
[17:34:02] *** Joins: ArrayinaMatrix[m (~arrayinam@2001:470:69fc:105::1:470d)
[17:34:06] *** Joins: jvet[m] (~jvetmatri@2001:470:69fc:105::1:38e2)
[17:34:07] *** Joins: enirda[m] (~enirdamat@2001:470:69fc:105::db7e)
[17:34:07] *** Joins: mrassiliMarouane (~mrassili-@2001:470:69fc:105::fbc3)
[17:34:08] *** Joins: rcarriga[m] (~rcarrigam@2001:470:69fc:105::d544)
[17:34:08] *** Joins: Bug[m] (~qbugmatri@2001:470:69fc:105::94bf)
[17:34:10] *** Joins: delta-official[m (~delta-off@2001:470:69fc:105::ece6)
[17:34:15] *** Joins: SevereOverfl0wDo (~severeove@2001:470:69fc:105::feb2)
[17:34:15] *** Joins: xac0[m] (~xac0matri@2001:470:69fc:105::da0f)
[17:34:18] *** Joins: manveru[m]1 (~manveruma@2001:470:69fc:105::c2d7)
[17:34:31] *** Joins: chemzqmQimingzha (~chemzqm-5@2001:470:69fc:105::dfd9)
[17:34:31] *** Joins: kimat[m] (~kimatmatr@2001:470:69fc:105::dde4)
[17:34:32] *** Joins: geetsethi[m] (~geetsethi@2001:470:69fc:105::c374)
[17:34:33] *** Joins: bgshacklettBrian (~bgshackle@2001:470:69fc:105::1:390c)
[17:34:33] *** Joins: jemag[m] (~jemagmatr@2001:470:69fc:105::b626)
[17:34:35] *** Joins: JonathanGilchris (~jgilchris@2001:470:69fc:105::3a2a)
[17:34:41] *** Joins: hamedasgari88[m] (~hamedasga@2001:470:69fc:105::1:5aaa)
[17:34:44] *** Joins: CaioStott[m] (~iknashmat@2001:470:69fc:105::1:11)
[17:34:45] *** Joins: chroot[m] (~roothalog@2001:470:69fc:105::f073)
[17:34:45] *** Joins: ryanf[m] (~rf-matrix@2001:470:69fc:105::1:27be)
[17:34:45] *** Joins: hedy[m] (~hedyenvsn@2001:470:69fc:105::1:1f6)
[17:34:46] *** Joins: tylerryan[m] (~tylerryan@2001:470:69fc:105::becb)
[17:34:48] *** Joins: hazelrah[m] (~hazelrahm@2001:470:69fc:105::1:346a)
[17:34:48] *** Joins: mckormick[m] (~mckormick@2001:470:69fc:105::e321)
[17:34:50] *** Joins: lchapoguzman[m] (~lchapoguz@2001:470:69fc:105::1:389)
[17:34:51] *** Joins: comfortablynickN (~comfortab@2001:470:69fc:105::d06b)
[17:34:57] *** Joins: MuhammadAldoFirm (~maldomatr@2001:470:69fc:105::1:1029)
[17:34:57] *** Joins: darkedlight[m] (~darkedlig@2001:470:69fc:105::f9f0)
[17:34:58] *** Joins: ectocooler[m] (~ectocoole@2001:470:69fc:105::3f44)
[17:34:58] *** Joins: vtronkoVladyslav (~vtronko-5@2001:470:69fc:105::f73d)
[17:35:05] *** Joins: Simone[m] (~cigamatri@2001:470:69fc:105::e81b)
[17:35:08] *** Joins: AfnanEnayet[m] (~afnanioma@2001:470:69fc:105::1:73f)
[17:35:08] *** Joins: beauwilliamsBeau (~beauwilli@2001:470:69fc:105::fc03)
[17:35:09] *** Joins: st4ll1[m] (~st4ll1mat@2001:470:69fc:105::1:1692)
[17:35:10] <constxo> ahh vigoux 
[17:35:10] *** Joins: thonoht[m] (~thonohtma@2001:470:69fc:105::d7be)
[17:35:13] *** Joins: ixil (~ixil@82.197.178.137)
[17:35:15] *** Joins: splines[m] (~splinesma@2001:470:69fc:105::e2c4)
[17:35:15] <vigoux> yup
[17:35:16] *** Joins: jokeyrhyme[m] (~jokeyrhym@2001:470:69fc:105::d05c)
[17:35:16] <constxo> that only works for Makefile generators
[17:35:18] *** Joins: IzzxtIzzat[m] (~izzxt-5fa@2001:470:69fc:105::e7ec)
[17:35:22] *** Joins: sh3rm4n[m] (~sh3rm4nma@2001:470:69fc:105::3a92)
[17:35:23] *** Joins: RanduinRobinLiao (~randuin-5@2001:470:69fc:105::3a7a)
[17:35:23] *** Joins: ronniemagattiRon (~ronniemag@2001:470:69fc:105::3a82)
[17:35:23] *** Joins: TamTam[m] (~oblommatr@2001:470:69fc:105::3a61)
[17:35:23] <vigoux> really ?
[17:35:24] *** Joins: DannyTormoen[m] (~dtormoenm@2001:470:69fc:105::39f9)
[17:35:24] *** Joins: netcarver[m] (~netcarver@2001:470:69fc:105::8fd9)
[17:35:24] *** Joins: esirumeran[m] (~esirumera@2001:470:69fc:105::3a00)
[17:35:25] *** Joins: mattijs[m] (~mattijshm@2001:470:69fc:105::3a4e)
[17:35:25] *** Joins: monban[m] (~monbanmat@2001:470:69fc:105::ed3a)
[17:35:27] <constxo> doesn't work when generating VS project files apparently
[17:35:27] *** Joins: berven[m] (~bervenmat@2001:470:69fc:105::39c5)
[17:35:27] *** Joins: bfredlBjrnLinse[ (~bfredl-55@2001:470:69fc:105::39c8)
[17:35:28] *** Joins: Avahe[m] (~avahematr@2001:470:69fc:105::3865)
[17:35:29] *** Joins: dilawarDilawarSi (~dilawar-5@2001:470:69fc:105::39f4)
[17:35:30] *** Joins: BenjmanBenjman[m (~benjman-5@2001:470:69fc:105::1:1939)
[17:35:31] *** Joins: camspiersCamSpie (~camspiers@2001:470:69fc:105::39d8)
[17:35:32] *** Joins: alanwsmithAlanSm (~alanwsmit@2001:470:69fc:105::39a5)
[17:35:32] *** Joins: jsatkJesseAtkins (~jsatk-588@2001:470:69fc:105::3a30)
[17:35:34] *** Joins: mfusseneggerMath (~mfusseneg@2001:470:69fc:105::3a52)
[17:35:34] *** Joins: ludbeksurenshres (~ludbek-55@2001:470:69fc:105::3a47)
[17:35:35] *** Joins: irminsul1337irmi (~irminsul1@2001:470:69fc:105::1:2ec8)
[17:35:35] *** Joins: she3o[m] (~she3omatr@2001:470:69fc:105::1:cc6)
[17:35:36] *** Joins: ShidongWang[m] (~wsdjegmat@2001:470:69fc:105::1:cb7)
[17:35:37] <constxo> works for Ninja too
[17:35:38] <vigoux> huhn
[17:35:39] *** Joins: choffee[m] (~johnchoff@2001:470:69fc:105::3f7d)
[17:35:42] *** Joins: oskaroe[m] (~oskaroema@2001:470:69fc:105::fa28)
[17:35:43] *** Joins: puremourningBenJ (~puremourn@2001:470:69fc:105::3a73)
[17:35:43] *** Joins: unkvolism[m] (~unkvolism@2001:470:69fc:105::fa86)
[17:35:43] *** Joins: dfg{}[m] (~danielfgr@2001:470:69fc:105::1:25a4)
[17:35:44] *** Joins: SeniorMars[m] (~seniormar@2001:470:69fc:105::fd9b)
[17:35:44] *** Joins: rozbb[m] (~rozbbmatr@2001:470:69fc:105::f80d)
[17:36:00] <vigoux> Why do you need to generate VS project files though ?
[17:36:02] *** Joins: parsanooriParsaN (~parsanoor@2001:470:69fc:105::f080)
[17:36:05] *** Joins: dogfoodpizza[m] (~dogfoodpi@2001:470:69fc:105::ef69)
[17:36:12] *** Joins: Taesheher[m] (~tssmmatri@2001:470:69fc:105::1:1a3)
[17:36:18] <constxo> well that's how the project is built
[17:36:19] *** Joins: benjamin[m]1234 (~benjaminm@2001:470:69fc:105::1:3f2f)
[17:36:25] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[17:36:26] <constxo> using MSBuild
[17:36:29] <vigoux> huh
[17:36:30] *** Joins: udscbt[m] (~udscbtmat@2001:470:69fc:105::a149)
[17:36:31] *** Joins: algmyr[m] (~algmyrmat@2001:470:69fc:105::1:a39)
[17:36:31] *** Joins: roschaefer[m] (~roschaefe@2001:470:69fc:105::3a83)
[17:36:31] *** Joins: sim[m] (~simrat39m@2001:470:69fc:105::3a9b)
[17:36:32] *** Joins: Jonas[m]1 (~joweissma@2001:470:69fc:105::1:172c)
[17:36:32] *** Joins: tomsen[m] (~tfbiomatr@2001:470:69fc:105::3aa5)
[17:36:32] *** Joins: thek3nger[m] (~thek3nger@2001:470:69fc:105::3aa6)
[17:36:33] *** Joins: tiyn[m] (~tiynmtxti@2001:470:69fc:105::3aa9)
[17:36:36] *** Joins: spicynoodles[m] (~spicynoo_@2001:470:69fc:105::3a9e)
[17:36:39] *** Joins: runiq[m] (~runiqmatr@2001:470:69fc:105::3a86)
[17:37:03] *** Joins: distrotube[m] (~distrotub@2001:470:69fc:105::ce6e)
[17:37:05] *** Joins: l-kershaw[m] (~l-kershaw@2001:470:69fc:105::3f20)
[17:37:06] *** Joins: Nakhtiar[m] (~nakhtiarm@2001:470:69fc:105::1:8b6)
[17:37:08] *** Joins: sergey-lapinSerg (~sergey-la@2001:470:69fc:105::1:472f)
[17:37:09] *** Joins: kaji (~kajiryoji@2001:470:69fc:105::405b)
[17:37:14] *** Joins: mangelozzimangel (~mangelozz@2001:470:69fc:105::c712)
[17:37:15] *** Joins: jzelinskie[m] (~jzelinski@2001:470:69fc:105::b4d6)
[17:37:18] *** Joins: JanSteinke[m] (~jan-xyzma@2001:470:69fc:105::da4a)
[17:37:19] *** Joins: romwhite[m] (~romwhitem@2001:470:69fc:105::1:4f27)
[17:37:19] *** Joins: worldwidewebuser (~worldwide@2001:470:69fc:105::408b)
[17:37:34] *** Joins: createtargett[m] (~whoami96m@2001:470:69fc:105::1:3373)
[17:37:36] *** Joins: stephenpraterSte (~stephenpr@2001:470:69fc:105::1:31f1)
[17:37:47] *** Joins: AntonKashin[m] (~antonmkas@2001:470:69fc:105::1:1195)
[17:37:55] *** Joins: notusknot[m] (~notusknot@2001:470:69fc:105::b509)
[17:37:55] *** Joins: JesseGibson[m] (~psycholla@2001:470:69fc:105::c082)
[17:38:01] *** Joins: funn1est[m] (~funn1estm@2001:470:69fc:105::e902)
[17:38:02] <vigoux> https://github.com/0xabu/MsBuildCompileCommandsJson
[17:38:02] *** Joins: mini_girav[m] (~minigirav@2001:470:69fc:105::4035)
[17:38:53] *** Joins: nmuntz87[m] (~nmuntz87m@2001:470:69fc:105::b910)
[17:38:53] *** Joins: whalebait[m] (~whalebait@2001:470:69fc:105::ce8d)
[17:39:15] *** Joins: M9d0cd7d2[m] (~M9d0cd7d2@2001:470:69fc:105::1:1609)
[17:39:30] *** Joins: ynrbode[m] (~ynrbodema@2001:470:69fc:105::bad9)
[17:39:32] *** Joins: oceanicplainsape (~oceanicpl@2001:470:69fc:105::315b)
[17:39:38] *** Joins: AlessandroMartin (~martini97@2001:470:69fc:105::1:2ca7)
[17:39:39] *** Joins: camflan[m] (~camflanma@2001:470:69fc:105::be1e)
[17:39:39] *** Joins: sevanteri[m] (~sevanteri@2001:470:69fc:105::f1ba)
[17:39:54] *** Joins: detlevich[m] (~detlevich@2001:470:69fc:105::cea2)
[17:39:55] *** Joins: ghishadow[m] (~ghishadow@2001:470:69fc:105::1:403b)
[17:39:55] *** Joins: Jacob[m]1 (~jacobmatr@2001:470:69fc:105::1:8a3)
[17:39:55] *** Joins: C698844402HadmiR (~c69884440@2001:470:69fc:105::1:1e50)
[17:39:58] *** Joins: pystardust[m] (~pystardus@2001:470:69fc:105::4121)
[17:39:59] *** Joins: ublx (~ublx@user/ublx)
[17:40:00] *** Joins: rowan[m] (~adehenmat@2001:470:69fc:105::2df1)
[17:40:04] *** Joins: Gee19Jordan[m] (~gee19-618@2001:470:69fc:105::1:2f37)
[17:40:04] *** Joins: MichaelZant[m] (~zantinger@2001:470:69fc:105::1:20b2)
[17:40:05] *** Joins: moziz[m] (~mozizmozi@2001:470:69fc:105::1:2c02)
[17:40:05] *** Joins: rustyconstruct[m (~rustycons@2001:470:69fc:105::1:1e0a)
[17:40:06] *** Joins: justqaz[m] (~justqazma@2001:470:69fc:105::6148)
[17:40:06] *** Joins: glitterly[m] (~glitterly@2001:470:69fc:105::1:24c6)
[17:40:07] *** Joins: nullvoxpopuli[m] (~nullvoxpo@2001:470:69fc:105::f8bc)
[17:40:07] *** Joins: slackcoder[m] (~slackcode@2001:470:69fc:105::c8d0)
[17:40:07] *** Joins: efertone[m]1 (~efertonem@2001:470:69fc:105::1:2437)
[17:40:07] *** Joins: yujinyuzEugeneOl (~yujinyuz-@2001:470:69fc:105::c413)
[17:40:07] *** Joins: svermeulenSteveV (~svermeule@2001:470:69fc:105::b5ca)
[17:40:10] *** Joins: testingcodehere[ (~testingco@2001:470:69fc:105::31ba)
[17:40:33] *** Joins: nub[m] (~nubmatrix@2001:470:69fc:105::1:2fc7)
[17:40:39] *** Joins: BuZZ-dEE[m] (~buzz-deem@2001:470:69fc:105::51a)
[17:40:50] *** Joins: dohungthinh[m] (~bonthinhm@2001:470:69fc:105::c0ec)
[17:40:57] *** Joins: bigjazzsound[m] (~bigjazzso@2001:470:69fc:105::be06)
[17:40:58] *** Joins: vpoat[m] (~vpoatmatr@2001:470:69fc:105::c622)
[17:40:58] *** Joins: hab[m] (~hab0matri@2001:470:69fc:105::ef40)
[17:40:58] *** Joins: albertyeah[m] (~albertyea@2001:470:69fc:105::adc)
[17:40:58] *** Joins: tlde[m] (~tldematri@2001:470:69fc:105::1:34cf)
[17:40:58] *** Joins: chrash[m] (~chrashmat@2001:470:69fc:105::be17)
[17:40:58] *** Joins: tilom[m] (~tilommatr@2001:470:69fc:105::bb7c)
[17:41:11] *** Joins: claudemullerLFIL (~claudemul@2001:470:69fc:105::68b3)
[17:41:13] *** Joins: sdflasjdf[m] (~sdflasjdf@2001:470:69fc:105::afd7)
[17:41:13] *** Joins: _Real[m] (~irealisti@2001:470:69fc:105::f630)
[17:41:26] *** Joins: csmoecsmoe[m] (~csmoe-5a8@2001:470:69fc:105::1:600c)
[17:41:26] *** Joins: Farrokh[m] (~sinning-m@2001:470:69fc:105::1:2b05)
[17:41:32] *** Joins: Popkornium18[m] (~popkorniu@2001:470:69fc:105::1:3fa2)
[17:41:32] *** Joins: theduke[m] (~thedukema@2001:470:69fc:105::9ee2)
[17:41:46] *** Joins: sayanarijit[m] (~sayanarij@2001:470:69fc:105::1:2cd7)
[17:41:56] *** Joins: kleschenko[m] (~kleschenk@2001:470:69fc:105::be4a)
[17:41:56] *** Joins: m397[m] (~m397matri@2001:470:69fc:105::bbbe)
[17:41:56] *** Joins: BradenT[m] (~babygauma@2001:470:69fc:105::be6a)
[17:41:56] *** Joins: meanmachin3[m] (~meanmachi@2001:470:69fc:105::1:3343)
[17:41:56] *** Joins: talvdav[m] (~talvdavma@2001:470:69fc:105::3c42)
[17:41:57] *** Joins: malb[m] (~vidiobeil@2001:470:69fc:105::1:3bae)
[17:41:57] *** Joins: Kristopher[m] (~krruzicev@2001:470:69fc:105::c2c8)
[17:41:57] *** Joins: ineol[m] (~ineolmatr@2001:470:69fc:105::c462)
[17:41:59] *** Joins: gadkadoshgadkado (~gadkadosh@2001:470:69fc:105::1:3f03)
[17:42:09] *** Joins: JeffBowes[m] (~strossusm@2001:470:69fc:105::1:458c)
[17:42:10] *** Joins: Shatur[m] (~hennadiim@2001:470:69fc:105::1:5679)
[17:42:16] *** Joins: _____[m] (~chirpyboa@2001:470:69fc:105::d353)
[17:42:18] *** Joins: jluismontilla[m] (~jluismont@2001:470:69fc:105::cdc2)
[17:42:19] *** Joins: awendell[m] (~awendellm@2001:470:69fc:105::cdc4)
[17:42:20] *** Joins: maccam94[m] (~maccam94m@2001:470:69fc:105::c9de)
[17:42:21] *** Joins: foldue[m] (~folduemat@2001:470:69fc:105::d1a2)
[17:42:21] *** Joins: utkhambra[m] (~utkhambra@2001:470:69fc:105::cfcc)
[17:42:21] *** Joins: cewood[m] (~cewoodmat@2001:470:69fc:105::daf9)
[17:42:21] *** Joins: lxsymingtonLukeX (~lxsymingt@2001:470:69fc:105::1:1b33)
[17:42:21] *** Joins: lazytanuki[m] (~lazytanuk@2001:470:69fc:105::1:40b0)
[17:42:22] *** Joins: samrath2007Samra (~samrath20@2001:470:69fc:105::c7eb)
[17:42:23] *** Joins: LoipesMas[m] (~loipesmas@2001:470:69fc:105::1:3e00)
[17:42:35] *** Joins: vaalla[m] (~vaallamat@2001:470:69fc:105::1:28a3)
[17:42:36] *** Joins: n8henrie[m] (~n8henriem@2001:470:69fc:105::bfdb)
[17:42:36] *** Joins: vlopes11VictorLo (~vlopes11-@2001:470:69fc:105::1:1b7c)
[17:42:37] *** Joins: delafthi[m] (~delafthim@2001:470:69fc:105::be66)
[17:42:48] *** Joins: elbin[m] (~elbinkdeo@2001:470:69fc:105::b7c7)
[17:42:49] *** Joins: gipsypunk[m] (~gipsypunk@2001:470:69fc:105::1:4183)
[17:42:50] *** Joins: Soham[m] (~sohamshan@2001:470:69fc:105::319f)
[17:43:03] *** Joins: KOKOUAFIDEGNON[m (~afidegnum@2001:470:69fc:105::1:34e0)
[17:43:17] <constxo> vigoux: sick
[17:45:03] <vigoux> does it work ?
[17:47:28] <constxo> not sure yet
[17:47:33] <constxo> i build that dll
[17:47:47] <constxo> but it's been a while since i actually invoked msbuild from the command line to build this project
[17:48:47] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:a884:20a2:2d1a:334d) (Quit: WeeChat 3.3)
[17:50:05] <constxo> ok building
[17:50:41] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[17:50:55] <constxo> the readme says it's meant for use with microsoft's c++ extension for vs code, hopefully works with clangd as well
[17:51:35] <vigoux> c++ extension for vscode uses clangd I think ?
[17:53:11] *** Quits: saud (~saud@2406:7400:73:8702:27f8:7f77:616d:4500) (Quit: Leaving)
[17:55:58] <constxo> for some reason when i build by running msbuild.exe from CLI it takes like 10x as long as building in VS
[17:56:16] <vigoux> Maybe some parallel building options ?
[17:56:18] <constxo> maybe need some flag to use multiple jobs
[17:56:20] <constxo> yea
[17:56:22] <vigoux> yup
[17:56:53] <constxo> ugh it failed lol
[17:57:06] <constxo> no error when i build in VS
[17:57:38] <constxo> "an internal error has occurred in the compiler" lmao
[17:57:46] <vigoux> wtf
[18:06:29] *** Quits: darkstorm (~male@user/darkstorm) (Quit: Quit)
[18:07:02] *** Joins: arkurious (~arkurious@user/arkurious)
[18:12:34] <numToStr[m]> Okk I found something in kitty. Press `Ctrl-Shift-U` to know more.
[18:17:01] <numToStr[m]> (spoiler: it is a builtin emoji/symbol search in the terminal 🤯)
[18:20:08] *** Joins: trace987 (~trace@dynamic-002-247-248-146.2.247.pool.telefonica.de)
[18:20:09] *** Quits: trace987 (~trace@dynamic-002-247-248-146.2.247.pool.telefonica.de) (Remote host closed the connection)
[18:22:01] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[18:29:27] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[18:30:54] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[18:39:52] <mjlbach[m]> MarkusAmshove (Markus Amshove):  you can find the client with buf_get_clients and then call client.notify
[18:42:57] <kylo252[m]> is there a chance that <C-s> does something internally even when you bind it?
[18:45:55] *** Quits: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net) (Read error: Connection reset by peer)
[18:47:18] <wimstefanStefanW> hmmm does commit 3fd454bd4 deprecate 'nathom/filetype.nvim'?
[18:48:22] <swimmer> gpanders: ^^
[18:49:31] *** Joins: zro (~zro@user/zro)
[18:51:34] <gpanders> nathom's filetype.nvim uses a different implementation and has some different features, so it's not a 1:1 replacement. That said, it's up to nathom to decide what direction he wants to take that plugin now
[18:56:31] <wimstefanStefanW> I see. Thanks for the swift response 👍 As soon as the dust has settled down a bit I'll install `nightly` again and take some measurements ...
[18:56:40] <wimstefanStefanW> not that it'll make a big difference 😉
[18:57:22] <numToStr[m]> Is both `let g:do_filetype_lua = 1` `let g:did_load_filetypes = 0` needed?
[18:58:07] <gpanders> the former is needed to enable filetype.lua. The latter is used to disable filetype.vim.
[18:58:27] <gpanders> both are needed if you want to use only Lua filetype detection, with the warning that there may be some filetypes that won't be detected
[18:59:51] <numToStr[m]> I am already assuming that common filetypes are already supported so I am going with `filetype.lua` XD
[19:00:18] *** Joins: agonhajdari (~textual@user/agonhajdari)
[19:00:23] <numToStr[m]> And big thanks for landing this 🎉
[19:01:52] <gpanders> numToStr[m]: indeed, and if you find a filetype that doesn't work as expected please open a PR :) there's no way just the core devs can find every single corner case so we are crowdsourcing this effort
[19:03:24] <numToStr[m]> Sure. Now it's lua so PR is an easy task.
[19:03:40] <numToStr[m]> I already have some filetypes that doesn't included in vim... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/a3331eb9c38a44fdbdda1b1801ac0dba1bbec002)
[19:04:19] <gpanders> extensions are not patterns
[19:04:22] <gpanders> so you don't need `%.` or `$`
[19:04:29] <gpanders> just `eslintrc`, `prettierrc`, etc.
[19:05:35] <numToStr[m]> That's straight from my dotfiles. I already had a mini filetype.lua in my dotfiles XD... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/a3db38960cd89c2f1eb70fcbccf7e1b00378096a)
[19:05:46] <numToStr[m]>  * That's straight from my dotfiles. I already had a mini filetype.lua in my dotfiles XD... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d979f11b783dcee571dffe8d0ba9cc854f37df39)
[19:07:04] <numToStr[m]> So, can we have filetypes that doesn't exist in vim yet?
[19:07:17] <gpanders> yep
[19:07:32] <gpanders> although for upstream filetypes I think our policy will still be "send it to Vim first then we'll patch it over"
[19:07:34] <clason[m]> nathom's plugin is definitely faster on startup, but at the cost of not matching filetype.vim behavior (a big dealbreaker for core) and disabling plugin ftdetect (ditto)
[19:07:40] <gpanders> but you can add anything you want to your own config
[19:12:39] <kylo252[m]> I wanted to try the new patch, but it's broken for me :( 
[19:12:40] * kylo252[m] uploaded an image: (90KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/BkCoGpxARtrSZEkbodYMKiQk/image.png >
[19:12:56] <kylo252[m]> do I need a clean install this around? 
[19:15:02] <wimstefanStefanW> that's what I meant with 'dust' 😉
[19:15:36] <wimstefanStefanW> clean install didn't help - first the plugin authors have to embrace the changes ...
[19:16:00] <clason[m]> plugins don't need to do anything
[19:16:56] *** Joins: wirewaves[m] (~wirewaves@2001:470:69fc:105::1:6076)
[19:17:10] <clason[m]> and it works fine for me
[19:17:37] <WhyNotHugo> How can I create a split and render a string onto it? (using lua)
[19:19:26] <WhyNotHugo> Or rather; what's a good starting point to figure these kind of things out?
[19:19:27] <gpanders> kylo252: see https://github.com/neovim/neovim/issues/14090#issuecomment-1004318147
[19:19:49] <gpanders> apparently a lot of plugins were depending on buggy behavior
[19:20:25] <gpanders> try updating those plugins, and if they're still not working open a PR to fix it (it's a simple fix)
[19:20:53] <gpanders> (this is entirely unrelated to the filetype.lua feature btw)
[19:22:47] <gpanders> WhyNotHugo: for Lua-specific features, read this: https://github.com/nanotee/nvim-lua-guide For general Vim/Neovim APIs, the best way to learn is 1. the user manual `:h usr` or 2. read through source code of other plugins and refer to the reference manual with `:h`
[19:27:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:28:51] <WhyNotHugo> gpanders: I came across nvim-lua-guide many times, but never manage to find anything there tbh.
[19:29:13] <WhyNotHugo> And I can't really find lua plugins that use splits -- most of them tend to be written in vimscript :(
[19:29:31] <mjlbach[m]> managing windows is still best done through vimscript
[19:29:35] <gpanders> yep
[19:29:35] <mjlbach[m]> there isn't a good api for it yet
[19:29:40] <mjlbach[m]> vim.cmd[[vsplit]]
[19:29:42] <mjlbach[m]> and the like
[19:30:12] *** Quits: nodeboy[m] (~nodeboyma@2001:470:69fc:105::c91) (Quit: You have been kicked for being idle)
[19:30:15] <WhyNotHugo> How do I render a string onto that split though?
[19:30:21] <gpanders> `:h function-list` and `:h api` are good places to look if you need a list of available functions
[19:30:27] *** Joins: guido (~weechat@host-80-182-121-179.retail.telecomitalia.it)
[19:30:28] <mjlbach[m]> I do stuff like this
[19:30:29] <mjlbach[m]> https://github.com/mjlbach/incremental.nvim/blob/81a7c11d1834ce31138b70099b1a0c28bfcd3800/debugging/on_lines.lua#L3-L28
[19:30:29] *** Quits: guido_ (~weechat@host-80-182-121-179.pool80182.interbusiness.it) (Read error: Connection reset by peer)
[19:30:33] <gpanders> and of course all ex-commands are available in lua using `vim.cmd` as mjlbach just demonstrated
[19:30:38] <mjlbach[m]> set_buf_text
[19:30:40] <mjlbach[m]> set_lines*
[19:30:45] <WhyNotHugo> I guess if I want to avoid focusing it that's not possible and I just need swich the focus back myself, right?
[19:30:46] <mjlbach[m]> You can see in that example
[19:30:47] <gpanders> `:h nvim_buf_set_lines`
[19:31:00] <mjlbach[m]> No
[19:31:08] <mjlbach[m]> you can create a buffer before doing the split
[19:31:10] <mjlbach[m]> and then populate that buffer
[19:31:17] <mjlbach[m]> then set the active buffer for the current window 
[19:31:28] <mjlbach[m]> You should read the code I sent you first :) 
[19:31:28] <WhyNotHugo> Ah, interesting pointers, thanks!
[19:33:25] *** Quits: guido (~weechat@host-80-182-121-179.retail.telecomitalia.it) (Read error: Connection reset by peer)
[19:33:33] *** Joins: guido_ (~weechat@host-80-182-121-179.retail.telecomitalia.it)
[19:35:14] <kylo252[m]> <gpanders> "kylo252: see https://github.com..." <- thanks for the hint, let me see if it's only whichkey that was affected
[19:35:47] <mjlbach[m]> fyi this is not a bug in neovim and it was known at the time of merging it would break plugins
[19:41:12] *** Joins: samgranieri (~samgranie@user/samgranieri)
[19:43:52] <kylo252[m]> sadly, the two fixes that are needed appear semi random
[19:44:07] <kylo252[m]> because none of the other ones are validating the input
[19:44:12] <WhyNotHugo> Oh, making the split and filling it in is working nicely, cheers!
[19:44:33] <kylo252[m]> it just so happened that this specific functions were triggered for me
[19:45:47] <WhyNotHugo> When setting lines via `nvim_buf_set_lines`, how can I colourise individual lines...?
[19:46:15] <gpanders> highlighting is an entirely different animal :)
[19:46:28] <gpanders> the easiest way is to use extmarks, give `:h nvim_buf_set_extmark` a quick read
[19:47:12] <kylo252[m]> here's the one for whichkey... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/2f0b81ec15bcae70f116447f0f132b4c7b0892eb)
[19:47:26] <WhyNotHugo> Will do, thans!
[19:47:52] <gpanders> > <@kylo252:matrix.org> here's the one for whichkey... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d718e989af50bf91cf745b3c47b15df95fd78897)
[19:48:11] <kylo252[m]> while the one for null-ls is triggered from a different api call for me... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/460037c8a834e898a966e31571792732cd2e58ec)
[19:48:28] <kylo252[m]> bad formatting, sorry
[19:48:32] <gpanders> both of those need the same fix: change `buf` to `buf or 0`
[19:49:10] <kylo252[m]> is it tho? there are so many of these calls, and in whichkey's case it's trickier 
[19:49:27] <clason[m]> yes, it is, tho.
[19:50:00] <clason[m]> it's making implicit the (unintended) implicit behavior these plugins relied on
[19:50:40] <kylo252[m]> I mean if the assumption was `nil = 0` then why not add `bufnr = bufnr or 0`? I feel like the answer to both of my questions is the same
[19:51:02] <gpanders> kylo252[m]: that's what I suggested
[19:51:11] <gpanders> change the "raw" `buf` to `buf or 0`
[19:51:19] <kylo252[m]> I meant internally^
[19:51:40] <gpanders> because 1. our APIs are not Lua specific and 2. they have a specific contract which demands strict types
[19:51:52] <gpanders> and `nil` is not `0`, even though Lua treats it that way
[19:52:45] <kylo252[m]> in which-key's case, that buffer-handle seems to be controlled by a state in other places, and there's also win_id which might be broken for all I know, I barely opened neovim without testing anything else
[19:52:46] <clason[m]> also, buf != bufnr
[19:53:30] <mjlbach[m]> it's almost certainly the case that replacing all nil instances of bufnr with bufnr or 0 will fix your issue
[19:53:31] <mjlbach[m]> you should try it
[19:53:52] <kylo252[m]> gpanders: yeah that's why I'm saying that this might end up be too hard to fix for certain plugins in some cases without a big refactor. I hope I'm wrong tho
[19:54:11] <clason[m]> you're wrong
[19:55:11] <kylo252[m]> mjlbach[m]: it's not about removing the error, I also don't know what these functions are supposed to be doing. they shouldn't have had an invalid parameter in the first place
[19:55:23] <mjlbach[m]> bufnr or 0
[19:55:51] <mjlbach[m]> if the plugin relied on the old behavior, and that behavior was broken by that PR, bufnr or 0 is the correct fix
[19:55:55] <mjlbach[m]> there are only so many ways to say that
[19:57:31] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:57:50] <kylo252[m]> mjlbach[m]: the key point I'm trying to make is that I don't know if they _relied_ on that or simply got away with it
[19:57:50] <kylo252[m]> if it's the former, then `bufnr or 0` is fine, if it's the latter, then the plugin maintainer, or someone fully aware of the use-case, should fix it
[20:00:27] <kylo252[m]> example: the same function I fixed is used here again but with a valid bufnr
[20:00:27] <kylo252[m]> https://github.com/kylo252/null-ls.nvim/blob/dfc8f89b9d58aeb9f84e1ba8264bc5550d18d64b/lua/null-ls/utils.lua#L164-L165
[20:04:10] *** Joins: tufei__ (~Ngyu-Phee@gateway/tor-sasl/tufei)
[20:07:00] *** Quits: tufei_ (~Ngyu-Phee@gateway/tor-sasl/tufei) (Ping timeout: 276 seconds)
[20:13:09] *** Quits: vx (~f@phrixion.net) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[20:14:48] *** Joins: lilgopher (~textual@2601:241:8000:38f0:98fe:16cb:dc9a:51bd)
[20:28:09] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.4)
[20:34:18] <clason[m]> s/implicit/explicit/
[20:37:35] *** Quits: samgranieri (~samgranie@user/samgranieri) (Ping timeout: 256 seconds)
[20:39:34] *** Joins: samgranieri (~samgranie@user/samgranieri)
[20:40:19] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:44:37] *** Joins: xsteadfa1 (~marv@94.31.106.190)
[20:46:29] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzz…)
[20:48:21] *** Quits: samgranieri (~samgranie@user/samgranieri) (Read error: Connection reset by peer)
[20:48:33] *** Joins: Guest5769 (~Guest57@router-memphis-nat-c.pilsfree.net)
[20:48:47] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 268 seconds)
[20:49:48] *** Joins: samgranieri (~samgranie@user/samgranieri)
[20:50:22] *** Quits: Guest5769 (~Guest57@router-memphis-nat-c.pilsfree.net) (Client Quit)
[20:51:18] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[20:52:21] <JulianJulianBerm> @atrius:matrix.org did my comment on that warning issue make any sense or still not
[20:53:14] *** Quits: guido_ (~weechat@host-80-182-121-179.retail.telecomitalia.it) (Read error: Connection reset by peer)
[20:55:03] *** Joins: jabster28 (~jabster28@81.111.217.63)
[20:55:36] <mjlbach[m]> it sorta did although I think the situation is a bit weird
[20:55:57] <mjlbach[m]> you're starting two lean servers because you can't tell based on filetype which one is actually needed and they have separate offset encodings?
[20:57:20] <JulianJulianBerm> not on purpose
[20:57:58] <JulianJulianBerm> the servers are started automatically -- first neovim detects this buffer is filetype A (lean) then I manually fix that (via set ft=lean3, which is just because otherwise the syntax highlighting is annoying)
[20:58:08] <JulianJulianBerm> that triggers starting a second server
[20:58:19] <JulianJulianBerm> I assume this would happen for any similar case no?
[20:58:35] <JulianJulianBerm> where someone edits a buffer, it's somehow misdetected, an LSP starts for the misdetected lang, then they change the ft now they have 2 servers
[20:58:36] <mjlbach[m]> that seems bad
[20:58:42] <mjlbach[m]> Am I missing something?
[20:58:52] <mjlbach[m]> I feel like we should only start the correct server no?
[20:58:53] *** Joins: emf (~emf@2620:10d:c091:480::1:89d7)
[20:58:59] <JulianJulianBerm> no, almost certainly I am
[20:59:10] <JulianJulianBerm> right I feel like I've asked this before
[20:59:13] <JulianJulianBerm> this being --
[20:59:21] <JulianJulianBerm> should changing the ft of a buffer kill all active client/servers?
[20:59:31] <JulianJulianBerm> because it's the right behavior in my specific case here
[20:59:37] <JulianJulianBerm> I just don't manually arse myself to do it
[21:00:31] *** Joins: guido (~weechat@host-80-182-121-179.pool80182.interbusiness.it)
[21:00:44] <mjlbach[m]> It should not
[21:01:10] <JulianJulianBerm> then I don't see how else one could autodetect the situation I was describing, no?
[21:01:11] <mjlbach[m]> So there is no way based on the filetype to say which type of lean file it is?
[21:01:43] <JulianJulianBerm> there is -- we have 2 separate filetypes, `lean` and `lean3`
[21:02:11] <JulianJulianBerm> if there's a bug, and a buffer was misdetected as one, then changing to the other manually triggers starting a different language server
[21:02:13] <mjlbach[m]> Wait so why are you changing the filetype then?
[21:02:23] <mjlbach[m]> Ah
[21:02:27] <mjlbach[m]> Yes
[21:02:28] <JulianJulianBerm> ^^ -- imagine python 2 and python3 had incompatible language servers or something
[21:02:31] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[21:02:52] <mjlbach[m]> Yes I totally get that, just if there are different filetypes I'm not getting the situation where there is a "misdetection"
[21:03:20] <JulianJulianBerm> well, sorry if I'm still not explaining clearly
[21:03:26] <JulianJulianBerm> the detection logic is some heuristic essentially
[21:03:30] <JulianJulianBerm> because there's no difference in extension
[21:03:46] <JulianJulianBerm> so the heuristic is wrong (which I can fix), but in the interim, bug
[21:03:46] <mjlbach[m]> I see
[21:03:54] *** Joins: cliluw (~cliluw@47.147.73.223)
[21:04:14] <mjlbach[m]> I got it
[21:04:31] <mjlbach[m]> I would say the appropriate mitigation would be a command that shuts down all lean3/lean2 servers
[21:04:33] <JulianJulianBerm> (in theory in the general case this is unfixable, the heuristic is just a heuristic obviously)
[21:04:37] <mjlbach[m]> attached to the current buffer
[21:05:01] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[21:05:24] <JulianJulianBerm> ok, fair enough, we can handle it in the plugin then
[21:05:35] <JulianJulianBerm> I just figured this can happen with other filetypes too
[21:05:52] <gpanders> what if a `.h` file is incorrectly detected as a C++ file and I use `:set ft=c`. Will that mean a second clangd client gets attached to the buffer?
[21:06:03] <JulianJulianBerm> right, like that
[21:06:38] <JulianJulianBerm> (thanks, that's a better example than my python one)
[21:07:50] <mjlbach[m]> Hah, that's actually an interesting case
[21:07:59] <mjlbach[m]> something that should be fixed with our filetype plugins :P 
[21:09:26] <JulianJulianBerm> it's impossible to fix in general though right?
[21:09:46] <JulianJulianBerm> or some shell language server that was per-shell-dialect would presumably be even worse at differentiating
[21:10:02] <mjlbach[m]> So what will happen is clangd will attach to the the header, and then resolve the root to the same root as main.c/cpp, the filetype by default for headers is cpp, but they will be attached to the same server
[21:10:24] <mjlbach[m]> compile_commands.json ensures that clangd analyzes the files correctly
[21:11:54] *** Joins: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[21:12:18] *** Quits: zostj (~rue@61-231-132-126.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[21:12:25] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[21:13:18] <mjlbach[m]> with Projects it won't matter, as you can register the filetype for the project ahead of time based on the project root uri
[21:16:49] <WhyNotHugo> Is there something like a "virtual line"; to display a line with custom content between lines N and N+1 of a buffer (but without altering the buffer content)?
[21:16:56] <WhyNotHugo> E.g.: Kinda like how virtual text works, but a whole line.
[21:17:14] <clason[m]> yes.
[21:17:21] <clason[m]> it's literally called "virtual lines"
[21:18:19] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[21:18:23] <clason[m]> `:h nvim_buf_set_extmark()` (look for `virt_lines`)
[21:19:28] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[21:19:45] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:21:03] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[21:22:03] <WhyNotHugo> How did I miss that?! o.O
[21:22:06] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Client Quit)
[21:24:26] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[21:24:59] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[21:25:17] *** Quits: taupiqueur (~taupiqueu@107.146.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[21:25:23] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[21:25:42] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[21:26:40] <WhyNotHugo> So, before I run off reinventing the wheel, is there anything already that renders diagnostics are virtual LINES?
[21:27:11] *** Joins: ublx (~ublx@user/ublx)
[21:27:12] <mjlbach[m]> No, it's been discussed though
[21:27:18] <mjlbach[m]> it's pretty easy to add a new diagnostic handler
[21:27:27] <mjlbach[m]> would make an ice plugin :) 
[21:27:32] <mjlbach[m]> s/ice/nice/
[21:28:26] <WhyNotHugo> So I wrote some code to show for the current line of a split, but updating it and closing it seems like such a burden... I think virtual lines might be less work and better results.
[21:32:29] <kylo252[m]> <mjlbach[m]> "Hah, that's actually an interest..." <- is it tho? what's the difference here?
[21:32:40] <mjlbach[m]> well
[21:32:59] <mjlbach[m]> compile_commands.json ensures the header is parsed correctly despite us sending the cpp filetype when we open the header (if it is a c header)
[21:33:03] <mjlbach[m]> that is the difference
[21:33:18] <kylo252[m]> clangd can handle c headers, so there's no reason to change the filetype in the first place
[21:33:53] <mjlbach[m]> and secondly, lspconfig detects the same root for c/cpp projects, so the server is attached regardless, because the watcher is per server/workspace directory
[21:34:15] <kylo252[m]> I guess I'm more arguing the use-case of switching the filetype 
[21:34:27] <kylo252[m]> as in: it shouldn't matter
[21:34:35] <mjlbach[m]> I don't know what you are arguing
[21:34:56] <JulianJulianBerm> (nor do I 😛 since the crux of the issue I was asking about was "someone needs to switch filetype")
[21:35:26] <kylo252[m]> you should never need to switch a *.h file from c to cpp, so that python corner-case/example doesn't apply here
[21:35:47] <mjlbach[m]> but yeah julian I know the mixed encoding situation right now is not ideal
[21:36:08] <mjlbach[m]> but that's not the real issue for your usecase, since multiple servers shouldn't be present anyways
[21:36:31] <JulianJulianBerm> I can't say I understand, but I trust you (legitimately)
[21:36:44] <mjlbach[m]> There are two separate issues
[21:36:54] <mjlbach[m]> we historically silently sent the wrong text ranges depending on the offset encoding of the server
[21:37:01] <mjlbach[m]> basically always utf-16 ranges
[21:37:16] <JulianJulianBerm> forget about offset encoding for a minute
[21:37:19] <JulianJulianBerm> it's just tangential I think
[21:38:15] *** Joins: ugubok (~ugubok@user/ugubok)
[21:38:56] *** hwrd_ is now known as hwrd
[21:38:58] <JulianJulianBerm> the 2 things that still gave me pause are 1) I don't generally see a reason to repeatedly emit the same warning over and over again (it's in `:messages` and someone saw it and dismissed it) and 2) I still imagine whatever case that someone has an LSP server automatically started, realizes they need to reconfigure, and may expect the LSP configurations to automatically notice without them needing to manually intervene
[21:39:10] <kylo252[m]> JulianJulianBerm: I seem to remember a discussion about introducing a timeout for terminating servers, it would work to solve what you're describing iirc
[21:39:21] *** Quits: ooGoop9 (~realident@user/oogoop9) (Ping timeout: 256 seconds)
[21:40:37] <JulianJulianBerm> I'm not sure I made the 1) point clearly earlier, but yeah that just seems like a general principle to me -- e.g. in python our warnings default used to be that (emit once -- and then we became hilarious and turned them off entirely) -- but perhaps the norms are different elsewhere
[21:40:53] <kylo252[m]> server A was configured to start for markdown, we changed the markdown filetype to mdx or something. the server should timeout after a certain period of not being to attached to any buffers. something like this
[21:41:07] <JulianJulianBerm> for 2 I can perfectly well handle it in the ft-specific case, so I do trust you if you say this wouldn't happen in other cases or that they don't matter
[21:41:26] *** Joins: ooGoop9 (~realident@user/oogoop9)
[21:42:01] <JulianJulianBerm> right that potentially sounds similar as well
[21:42:01] *** Quits: ooGoop9 (~realident@user/oogoop9) (Read error: Connection reset by peer)
[21:42:16] *** Quits: bubbler (~bubbler@2a02:810d:8cc0:3fa0::8b3a) (Remote host closed the connection)
[21:42:26] <JulianJulianBerm> I didn't ask what the reason *not* to kill LSP servers was when ft changes, but presuming there is one, that indeed would probably make sense to me
[21:42:31] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[21:42:43] <JulianJulianBerm> but I literally do not know what I'm talking about 😛 so I'm just mostly hoping something clicks on what I'm thinking about incorrectly
[21:43:20] <kylo252[m]> I think the silencing part might become easier with lua `autocmds`, basically the server should de-register itself after 3 consecutive errors. no point in hammering down the messages
[21:43:22] *** Joins: zeraphel (~zeraphel@2a00:a040:1a0:fa5::1)
[21:43:45] <zeraphel> ive noticed that the quickfix sometimes breaks window layout
[21:44:16] *** Joins: bubbler (~bubbler@2a02:810d:8cc0:3fa0::8b3a)
[21:44:25] <kylo252[m]> but maybe it has nothing to do with autocmds, and can be handled internally in a different way, but was selectively chosen to behave this way, idk either 🤷
[21:44:55] <zeraphel> after opening quickfix,  i have a split i cannot focus neither by ^wj or mouseclick,  ^w^w will toggle between focusing the first split and the quickfix..
[21:45:02] <mjlbach[m]> Julian (Julian Berman): the main issue is that the position requests are normally only called by the buf.lua functions which we expect to be keyboard driven
[21:45:04] *** Joins: ooGoop9 (~realident@user/oogoop9)
[21:45:41] <mjlbach[m]> so it makes sense that every time you call one of these functions we show an error, because you are calling a function that is invalid in the context of that call
[21:45:49] <JulianJulianBerm> so emitting the warning each time is direct feedback to something the user just did
[21:45:50] <JulianJulianBerm> that makes sense
[21:46:34] <mjlbach[m]> Yeah
[21:46:54] <mjlbach[m]> We don't ever automatically send a position request
[21:47:03] <kylo252[m]> but the offset encoding error was consistently "on" last time I tried it
[21:47:07] <mjlbach[m]> users can ofc map those with autocommands 
[21:47:17] <mjlbach[m]> kylo252: not helpful
[21:47:33] <JulianJulianBerm> right but then it's their party
[21:47:40] <kylo252[m]> I thought we were talking about the same thing, if not, then sorry
[21:47:42] <mjlbach[m]> And I want to fix this anyways
[21:47:45] <JulianJulianBerm> ok, that's fair enough -- though maybe someday nvim has some sort of robust warnings framework that makes this easier to configure
[21:47:57] <mjlbach[m]> Yeah we want to add configurable logging at some point
[21:48:02] <mjlbach[m]> and a unified logging interface
[21:48:05] <mjlbach[m]> at least justin did
[21:48:05] * JulianJulianBerm nods
[21:48:20] <JulianJulianBerm> cool
[21:48:27] <mjlbach[m]> this is a temporary warning because we will fix the offset encoding support and remove that warning
[21:48:43] <mjlbach[m]> the issue is that I didn't like rish's implementation of the mixed offset requests
[21:48:51] <zeraphel> The quickfix is also visible in the previous tab,  i realize that the second tab (where it was actually called) is the only one bugged,  displaying the contents of the previous tab in the "broken split"  or maybe just failing to redraw that area entirely.
[21:48:52] <mjlbach[m]> so this was a compromise to support utf-32 requests for lean that could be backported
[21:49:11] <JulianJulianBerm> right understood I didn't look at it
[21:49:32] <JulianJulianBerm> oh really, was this our fault for rushing in 😟? oy.
[21:49:37] <mjlbach[m]> This is the only visible/annoying warning thus far and it should only affect users that use more than single language server at the time of sending a request
[21:49:40] <mjlbach[m]> haha no it was good
[21:49:54] <mjlbach[m]> rish is good/motivated I just don't like sweeping PRs without discussion
[21:50:16] <JulianJulianBerm> right
[21:50:23] <mjlbach[m]> the buf_request API is part of the technical debt in the built-in client
[21:50:43] <mjlbach[m]> I've taken a couple stabs at an alternative interface with Mathias but it's hard to get motivated recently
[21:50:49] <SeanDewar[m]> zeraphel: do you have wincmd J in your config for the qf FileType?
[21:51:10] <SeanDewar[m]> or some other similiar wincmd
[21:51:14] <JulianJulianBerm> sounds familiar
[21:51:27] <kylo252[m]> I want to share my handy shell alias/function for debugging, until that logger interface gets implemented.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/9f38954f998aed39fe9767f031421f10a7bbafe4)
[21:51:51] <zeraphel> SeanDewar[m]: Nope.  It's literally like an area of the screen is not redrawing.. not being able to access it is a small issue in comparison
[21:52:21] <JulianJulianBerm> @atrius:matrix.org well -- explanation certainly makes sense now thanks
[21:52:21] <zeraphel> SeanDewar[m]: i literally gT, scroll down, gt, and i see the contents of  the previous tab in that region of the screen
[21:52:45] <mjlbach[m]> No worries, I want you all to have a good experience :) 
[21:52:48] <SeanDewar[m]> so an inaccessible glitchy looking split window?
[21:52:57] <zeraphel> SeanDewar[m]: Yep.
[21:53:03] <JulianJulianBerm> can we have cake?
[21:53:23] <mjlbach[m]> `:!cake`
[21:53:31] <SeanDewar[m]> my suspicion is that its the autocmd window getting bugged
[21:53:49] <SeanDewar[m]> sounds awfully similiar to a similiar issue reported with the quickfix window
[21:53:56] *** Joins: ybaumy1 (~ybaumy@static.36.114.69.159.clients.your-server.de)
[21:54:09] *** Quits: ybaumy (~ybaumy@static.36.114.69.159.clients.your-server.de) (Ping timeout: 250 seconds)
[21:54:09] *** ybaumy1 is now known as ybaumy
[21:54:21] <zeraphel> SeanDewar[m]: The thing is that the quickfix is looking normal in tab #1 where it was not called from,  but tab #2 is all messed up.  asif the splits aren't sure what their height is
[21:54:36] <zeraphel> SeanDewar[m]: This has happened once or twice before,  i wouldn't be surprized if this issue has already been reported
[21:55:04] <kylo252[m]> mjlbach[m]: is it this? https://github.com/neovim/neovim/issues/16363
[21:55:04] <kylo252[m]> I was agreeing with the issue first, but your comment actually made a lot of sense that I figured it's not worth it to implement it. although it looks like it should be available
[21:55:24] <mjlbach[m]> Well
[21:55:30] <mjlbach[m]> It's really hard to explain
[21:55:42] <JulianJulianBerm> @gpanders:matrix.org is there a place you (and/or others) post things like https://old.reddit.com/r/neovim/comments/rvwsl3/introducing_filetypelua_and_a_call_for_help/ to that's notification driven?
[21:55:52] <mjlbach[m]> announcements in discord
[21:55:54] <mjlbach[m]> s/discord/discours/
[21:55:59] <mjlbach[m]> s/discord/discourse/
[21:56:11] <SeanDewar[m]> zeraphel: yeah sounds like the autocmd window issue to me
[21:56:16] <JulianJulianBerm> I thought Iw as subscribed to those
[21:56:17] * JulianJulianBerm checks
[21:56:27] <gpanders> JulianJulianBerm: yes, what mjlbach said
[21:56:40] <mjlbach[m]> It might be because gpanders isn't staff on discourse so I had to reassign his category to announcements
[21:56:45] <mjlbach[m]> not sure if that triggers the notification
[21:56:59] <mjlbach[m]> (gpanders is only not staff because we have a limit of 5 staff members with the free discourse plan we are on)
[21:57:01] <gpanders> 😭
[21:57:07] <SeanDewar[m]> im guessing if you run `:lua vim.api.nvim_buf_call(vim.api.nvim_create_buf(false, true), function() vim.cmd "wincmd J" end)` in a new nvim instance you get something similiar? zeraphel 
[21:57:08] <mjlbach[m]> basically I have a vision of Projects, where you define how to compose different buf.lua functions together, so you would declaratively say what servers you wanted to handle format per project
[21:57:12] <clason[m]> (feel free to swap me out for him)
[21:57:37] <gpanders> Those are some big shoes to fill
[21:57:47] <clason[m]> no they're not :)
[21:57:55] <zeraphel> SeanDewar[m]: yes!
[21:57:57] <clason[m]> In fact, you have to bring your own.
[21:58:00] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[21:58:12] <zeraphel> SeanDewar[m]: i get an empty window i can't access.
[21:58:18] <SeanDewar[m]> okay phew
[21:58:23] <JulianJulianBerm> Got it -- it seems though the announcement topic isn't very noisy though right? I don't see any other similar announcements
[21:58:24] <SeanDewar[m]> thats a bug with the autocmd window
[21:58:32] <SeanDewar[m]> i have a PR open that should fix that
[21:58:40] <JulianJulianBerm> Like, there's the "breaking changes" issue to follow for "you may need to address something"
[21:58:44] <mjlbach[m]> JulianJulianBerm: not super noisy
[21:58:48] <mjlbach[m]> we have the breaking changes issue
[21:58:52] <gpanders> I think this is the first time we've posted an announcement for a new feature
[21:58:58] <mjlbach[m]> announcements is usually only used for releases
[21:58:58] <JulianJulianBerm> But a "here's a feature that just got merged that you may care about" one was what I meant I supposed
[21:59:03] <gpanders> and that's only because it's explicitly opt-in, and we need to stir up a crowdsourcing effort
[21:59:25] <JulianJulianBerm> right sorry, I just put that in the thread 😛, but that was exactly what I was asking about
[21:59:26] <gpanders> if we didn't announce it it would just languish in obscurity :(
[21:59:27] <mjlbach[m]> congrats, praise be to gpanders the new moderator
[21:59:55] <zeraphel> SeanDewar[m]: sweet,  that's a big deal :)
[22:00:25] <kylo252[m]> mjlbach[m]: I was struggling for this for that `document_highlight` command, in a way I feel like it might be easiest to implement those kind of handlers to accept a client id, because otherwise you end up re-writing a lot of stuff yourself. it's not hard, but more annoying with lua-autocmds 
[22:01:03] <mjlbach[m]> I was going to make all handlers accept either client_id or client_name
[22:01:04] <mjlbach[m]> name(s)
[22:01:07] <gpanders> mjlbach[m]: does this mean I can start banning people?
[22:01:08] <SeanDewar[m]> zeraphel: haha that issue annoyed me enough a few days ago to look into it 😆
[22:01:12] <gpanders> 😈
[22:01:13] <mjlbach[m]> gpanders: yes
[22:01:22] <mjlbach[m]> unfortunately I don't think you can ban me
[22:01:23] <gpanders> finally
[22:01:33] *** Quits: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065) (Quit: WeeChat 3.4)
[22:01:41] <SeanDewar[m]> but you can ban me! 🙌
[22:01:54] <zeraphel> SeanDewar[m]: any chance you're using romainl's vim-qf ?
[22:01:57] *** Joins: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[22:02:20] <SeanDewar[m]> zeraphel: nope but i have `au FileType qf wincmd J` in my config which occasionally triggers it
[22:03:42] <kylo252[m]> mjlbach[m]: this is what I to do to make it more robust 😥... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/c25a8896769cd6bd4b37083a49f345cd363dac7b)
[22:03:43] <zeraphel> SeanDewar[m]: ah, i do have an autocommand that runs cwindow on QuickFixCmdPost
[22:03:54] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:04:15] <mjlbach[m]> > <@kylo252:matrix.org> this is what I to do to make it more robust 😥... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/0efe38aa769262057681c72fa9014e2635e82218)
[22:04:27] <mjlbach[m]> you don't need to use a protected call
[22:04:31] <mjlbach[m]> you can use client.supports_method
[22:05:37] <zeraphel> SeanDewar[m]: no neither is at fault,  oh well.  Guess im waiting for your PR to get merged :)
[22:05:43] <kylo252[m]> it's because it's called in an autocmd, and there's something about error handling there. it might be because I always need to use `unsilent` (?)
[22:05:43] <kylo252[m]> so I was worried about de-referencing an invalid client 
[22:05:56] <SeanDewar[m]> zeraphel: i don't think that by itself will cause it, i'm guessing the plugin is maybe running a window command to unfloatify the autocmd window which breaks it
[22:06:12] <mjlbach[m]> you take the bufnr as part of the autocommand, and check all servers attached to the buffer passed via the autocommand
[22:07:02] <SeanDewar[m]> zeraphel: ah, here it is https://github.com/romainl/vim-qf/blob/127257057c4befb8c1026a7ba7e07713af1fb5c8/after/ftplugin/qf.vim#L181
[22:07:08] <SeanDewar[m]> this'll definitely trigger the bug 😛
[22:07:12] <kylo252[m]> mjlbach[m]: I thought about that, but I chose speed over simplicity, since this is done on CursorHold
[22:07:27] *** Quits: guido (~weechat@host-80-182-121-179.pool80182.interbusiness.it) (Read error: Connection reset by peer)
[22:07:30] *** Joins: guido_ (~weechat@host-80-182-121-179.pool80182.interbusiness.it)
[22:07:44] <mjlbach[m]> wut
[22:07:54] <mjlbach[m]> that is so cheap
[22:08:02] <zeraphel> SeanDewar[m]: I'm reproducing it with `-Nu NONE` tho
[22:08:53] <kylo252[m]> to get all clients per buffer and then loop through their capabilities is cheap even compared to a single protected de-reference?
[22:09:24] <mjlbach[m]> yes.
[22:09:28] <mjlbach[m]> time a for loop to a million in python
[22:09:46] <kylo252[m]> it's N*N tho
[22:10:48] <SeanDewar[m]> zeraphel: without using vim-qf?
[22:12:05] <zeraphel> SeanDewar[m]: actually nvm that, i neglected reading the lua command you sent /o\  Just one of those times for me.  I'll see if it happens on its own with vim-qf disabled.
[22:13:57] <SeanDewar[m]> if it does happen without vim-qf, can you run `:lua vim.api.nvim_buf_call(vim.api.nvim_create_buf(true, false), function() print(vim.api.nvim_win_get_config(0).relative) end)` and tell me what it says (even if it says nothing?)
[22:14:03] <kylo252[m]> dumb question of the day, is it possible to remap `q:`? 
[22:14:11] <SeanDewar[m]> if it says nothing it should be the same bug 
[22:14:37] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Ping timeout: 240 seconds)
[22:14:37] <gpanders> kylo252[m]: sure
[22:14:41] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:15:17] <kylo252[m]> gpanders: none of this worked... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/b36fe39c8fb024b0cdd71e9a42151e651df3634c)
[22:15:21] *** Quits: hasenov (~root@ip70-188-7-100.rn.hr.cox.net) (Ping timeout: 245 seconds)
[22:15:44] <gpanders> hm works for me
[22:15:49] <gpanders> the first one does
[22:16:44] <kylo252[m]> damn, I wonder if it's a keyboard thing, I vaguely remember some oddities with non-ANSI layouts 
[22:18:07] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:19:02] *** Joins: Galladite27 (~Galladite@host-92-24-75-159.as13285.net)
[22:20:43] *** Quits: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Ping timeout: 256 seconds)
[22:24:32] *** Joins: Galladite (~Galladite@host-92-24-75-159.as13285.net)
[22:24:51] <zeraphel> SeanDewar[m]: It was my bad entirely, spoke before thinking.  It's not happening without vim-qf as far as i can tell.
[22:25:22] <SeanDewar[m]> ok thats good news
[22:25:42] <SeanDewar[m]> then im pretty certain thatll be fixed soonish then 😛
[22:25:49] *** Quits: Galladite27 (~Galladite@host-92-24-75-159.as13285.net) (Ping timeout: 240 seconds)
[22:25:49] <SeanDewar[m]> provided i don't break something else...
[22:25:52] <SeanDewar[m]> 👀
[22:27:03] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[22:27:03] *** Quits: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065) (Quit: WeeChat 3.4)
[22:27:11] <zeraphel> 👍👍👍
[22:27:22] *** Joins: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[22:29:46] *** Quits: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065) (Client Quit)
[22:30:02] *** Joins: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[22:31:30] *** Quits: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065) (Client Quit)
[22:31:37] *** Quits: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Ping timeout: 256 seconds)
[22:33:22] *** Joins: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[22:34:46] *** Quits: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065) (Client Quit)
[22:35:01] *** Joins: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[22:35:32] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[22:35:49] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[22:36:26] *** Joins: cliluw (~cliluw@47.147.73.223)
[22:37:10] *** Xaerru[m] is now known as xaerru[m]
[22:39:42] *** Joins: Maybelline[m] (~jeremyma_@2001:470:69fc:105::b9a3)
[23:11:58] *** Joins: agonhajdari (~textual@user/agonhajdari)
[23:12:11] *** Joins: aberrant (~aberrant@c-69-251-113-165.hsd1.va.comcast.net)
[23:12:11] *** Quits: samgranieri (~samgranie@user/samgranieri) (Quit: samgranieri)
[23:12:14] <aberrant> re all.
[23:12:51] <aberrant> Can someone explain to me the value of snippets? I've been using vi/vim/nvim for 3 decades now and I've still never used them. But I feel like I'm missing out.
[23:14:01] <gpanders> I was a longtime snippet skeptic too, and I still don't use them that often, but they can be quite nice for boilerplate
[23:14:25] <gpanders> one thing I use them for a lot is adding print statements. e.g. in C I have a snippet `print` that expands to `printf("{}\n"); ` and my cursor is placed where `{}` is
[23:14:35] <aberrant> I've got a lot of boilerplate since I'm using Go a lot :)
[23:15:02] <gpanders> I also have a `pdb` snippet in Python that insert `import pdb; pdb.set_trace()`, I use that one quite a bit as well
[23:15:08] <gpanders> s/insert/inserts/
[23:15:12] <aberrant> so, snippets work in insert mode, and when you start typing something, it will automatically expand it?
[23:15:14] <gpanders> an `iferr` snippet might be nice for Go
[23:15:30] <gpanders> typically you have a trigger character, like `<Tab>`
[23:15:40] <gpanders> so you type the snippet name, press the trigger character, and the snippet is expanded
[23:15:57] <aberrant> I see
[23:16:31] <aberrant> and - yeah. I was thinking specifically about if err != nil :)
[23:17:11] <aberrant> I don't know whether my potential use is worth installing more packages though.
[23:17:30] <aberrant> my config already feels heavy
[23:17:49] <gpanders> if you don't need placeholders or dynamically generated text, you can just use abbreviations
[23:18:09] <gpanders> `:inoreabbrev iferr if err != nil {`
[23:18:23] <gpanders> then whenever you type `iferr` in Go, it will automatically expand
[23:18:29] <aberrant> I had no idea.
[23:19:03] <gpanders> abbreviations automatically expand tho, unlike snippets, so you have to be careful about the abbreviation you choose so that you don't accidentally type it in the middle of a sentence or something
[23:19:56] <gaarco[m]> hey does someone know if it's possible to set a sort of `colorcolumn` using virtual text? or maybe using a selected character like `|` instead of just coloring the column
[23:21:22] <gaarco[m]> ooo found a plugin nvm
[23:21:24] <aberrant> gpanders: thank you for the explanation.
[23:21:47] <aberrant> I don't think I'm ready for them but at least I understand them a bit more now.
[23:23:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:23:57] *** Joins: pawtinautica[m] (~pawtinaut@2001:470:69fc:105::1:6075)
[23:28:07] *** Joins: pagalingling[m] (~pagalingl@2001:470:69fc:105::1:60b9)
[23:28:42] *** Joins: vx (~f@phrixion.net)
[23:34:20] *** Joins: taupiqueur (~taupiqueu@113.247.204.77.rev.sfr.net)
[23:35:28] *** guido_ is now known as guido
[23:35:31] *** Quits: hgc_ (~hgc@kick.dog) (Ping timeout: 256 seconds)
[23:35:43] *** Joins: hgc (~hgc@kick.dog)
[23:35:56] <tohe[m]> how can i make sure `stopinsert` exceeds
[23:37:47] *** Quits: vx (~f@phrixion.net) (Ping timeout: 256 seconds)
[23:39:05] *** Joins: vx (~f@phrixion.net)
[23:39:15] *** Joins: Betal (~Betal@user/betal)
[23:40:12] <tohe[m]> according to the neovim source https://github.com/neovim/neovim/blob/master/src/nvim/ex_docmd.c#L8736 it sets two variables `restart_edit` and `stop_insert_mode`
[23:42:00] *** Joins: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net)
[23:45:12] <tohe[m]> and the documentation for `restartedit` https://github.com/neovim/neovim/blob/master/src/nvim/globals.h#L645 says it calls edit when the next command finishes. what does that mean?
[23:45:49] <tohe[m]> what happens when `restartedit == 0`?
[23:49:49] *** Joins: samgranieri (~samgranie@user/samgranieri)
[23:49:50] <tohe[m]> s/exceeds/finishes/
[23:50:02] *** Quits: samgranieri (~samgranie@user/samgranieri) (Client Quit)
[23:51:26] *** Joins: ldh (~ldh@70-231-72-114.lightspeed.gnbonc.sbcglobal.net)
[23:51:57] *** Joins: bit817[m] (~bit817mat@2001:470:69fc:105::1:42df)
[23:52:26] *** Quits: vx (~f@phrixion.net) (Quit: ZNC - https://znc.in)
[23:54:05] *** Joins: samgranieri (~samgranie@user/samgranieri)
[23:54:34] *** Quits: samgranieri (~samgranie@user/samgranieri) (Client Quit)
[23:56:19] <WhyNotHugo> How can I make a virtual line have indentation matching the real line to which it's attached?
[23:56:42] <luisiacc[m]> can treesitter highlight embeded code in markdown files?
[23:56:57] *** Joins: samgranieri (~samgranie@user/samgranieri)
[23:57:23] *** Quits: samgranieri (~samgranie@user/samgranieri) (Client Quit)
[23:57:37] <luisiacc[m]> nvm I hadn't installed the MD parser
[23:58:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[23:59:48] *** Joins: joelchrono12 (~Thunderbi@user/joelchrono12)
