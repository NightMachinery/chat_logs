[00:00:22] <sm> if I was building an industrial app I mightn't care about sqlite, but things like "a better hackage" really need to be good at onboarding contributors to succeed, I feel. Flora has gone another way for your reasons I know. But generally speaking I do think this is a pretty important aspect
[00:00:41] <sm> what are trigrams ?
[00:00:57] <tomsmeding> wha hat are tri rig igr gra ram ams
[00:01:07] <sm> does a hackage-like app really need such fancy features from the db ?
[00:02:12] <tomsmeding> I believe the common usage of trigrams in search is to break up the query into trigrams (as shown), then find all the trigrams in all the keywords, and return matches based on how many trigrams were found
[00:02:44] <tomsmeding> choice of 3 because (#{set of alphabetic characters})^3 is still manageable
[00:03:01] <sm> interesting tomsmeding, thanks
[00:03:39] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:05:50] <Hecate> sm: on the contrary, they are the less fancy way of doing search in the DB
[00:05:58] <Hecate> they're not FTS
[00:06:09] <Hecate> and most certainly not equivalent to ElasticSearch
[00:07:00] <sm> does hackage really need more than LIKE or ~ though ?
[00:07:38] <Hecate> it's a badly phrased question
[00:08:17] <sm> oops, how so ?
[00:08:17] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[00:08:41] <Hecate> what you're asking without knowing is "do we have machines powerful enough to allow the database to search through the whole dataset a high frequencies with an unoptimised technique"
[00:09:11] <Hecate> and that's part of what I try to avoid: Having ludicrous requirements for the hosts
[00:09:23] <Hecate> also sm, Flora is meant to be industrial
[00:09:57] <Hecate> This is why I'm thinking of having stuff like read-replicas, multiple application servers, ease of hosting, etc
[00:10:16] <sm> ok perhaps I'm being naive, but hackage searches.. package names ? And not that many. Isn't a dumb postgres search of those pretty fast ? And how many searches per second do you really need to support ?
[00:10:49] <Hecate> Hackage searches names, but apparently also synopsises and other fields
[00:11:20] <Hecate> sm: yeah it's not that many, around 16k
[00:11:52] <Hecate> also I have production experience with PostgreSQL
[00:11:59] <Hecate> I'm a member of the French PostgreSQL community
[00:12:02] * sm too
[00:12:13] <Hecate> I have easy access to a support network that I know can deliver 
[00:12:35] <Hecate> I don't have the resources to rebuild such a support network for 1 project
[00:12:36] <geekosaur> hackage searches every visible field in the index, from what I've seen
[00:12:44] <sm> I love postgres and manage it for work, but I know I won't set it up a postgres db on local machine for a quick contribution to a new FOSS project
[00:12:55] <geekosaur> (that is, hackage.org/packages/browse)
[00:13:13] <Hecate> sm: that being said I think I provide a docker-compose setup
[00:13:24] <Hecate> but again, if you don't want to install the toolchain of a project, it's okay
[00:13:25] <maerwald> Hecate: does pg-entity have parametrized queries?
[00:13:33] <Hecate> you can whisper in my ear instead :P
[00:13:38] <sm> docker neither (sorry :)
[00:13:45] <sm> yup, no worries
[00:13:51] <Hecate> maerwald: named parameters? nah it's using postgresql-simple under the hood
[00:13:57] <Hecate> and the hood is very much open
[00:14:01] <Hecate> so it's with '?'
[00:14:24] <maerwald> Hecate: https://github.com/haskellari/postgresql-simple/issues/58
[00:15:16] <Hecate> if tdammers implements it and phadej accepts it, I'll support it :)
[00:15:46] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Remote host closed the connection)
[00:15:49] <maerwald> the point is rather that the absence is a security issue 
[00:16:05] <Hecate> maerwald: you're making the good point to the wrong person
[00:16:14] <Hecate> I have no ability to influence the development of postgresql-simple
[00:16:25] <Hecate> but I agree
[00:16:28] <Hecate> but I can't do shit
[00:19:25] <maerwald> is it wired deeply into postgresql-simple?
[00:21:11] <Hecate> no idea I don't know the internals
[00:23:10] <maerwald> Hecate: man, you spelled Oleg wrong :p
[00:23:29] <maerwald> Oleg Grerus :(
[00:24:27] <Hecate> uh??
[00:24:28] <Hecate> I did ?
[00:24:30] <Hecate> where?
[00:24:35] <maerwald> https://github.com/tchoutri/pg-entity#documentation
[00:25:24] <Hecate> fixed, thanks
[00:27:43] *** Quits: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com) (Ping timeout: 250 seconds)
[00:28:10] <maerwald> I miss the hackage bot. I feel I should have known about this package
[00:29:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:29:49] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:29:49] *** Joins: wroathe (~wroathe@user/wroathe)
[00:31:04] <sm> I do too
[00:31:43] <maerwald> it wasn't really that noisy was it?
[00:32:42] <sm> not that noisy. Sometimes more than others. It had various limits.
[00:33:05] <sm> it does change the feel of the room a bit
[00:33:27] <sm> new more compact output could work better
[00:34:09] *** Joins: haris (~haris@69.169.3.81)
[00:34:11] <Hecate> I have it on my Fediverse feed
[00:34:12] <Hecate> :P
[00:34:13] <maerwald> collect pkgs in interval of 5 minutes and print a paste if there are too many?
[00:34:22] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[00:35:47] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:35:48] <sm> * new packages uploaded:  faktory, graphula, hspec-expectations-json, hspec-junit-formatter, ...
[00:36:16] <geekosaur> could even remove "uploaded"
[00:37:25] <sm> if anyone wants to revive the rss2irc-based one that I ran, I have pointers
[00:38:01] <sm> it could also just announce new packages, not updated ones
[00:38:23] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[00:38:42] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:40:23] <maerwald> new packages and package takeovers :p
[00:40:41] *** Joins: pavonia (~user@user/siracusa)
[00:42:00] *** Quits: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291) (Quit: Leaving)
[00:42:26] *** Joins: kenran (~kenran@200116b82bc26800d8fb2d8773389650.dip.versatel-1u1.de)
[00:43:19] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:43:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:44:37] *** Lord_of_Life_ is now known as Lord_of_Life
[00:46:56] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[00:54:55] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[00:55:21] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:58:02] <dmj`> question, is there a package that will convert all imports to be explicit (and rewrite all uses of types, functions to be qualified) in an entire codebase?
[00:58:25] <dmj`> asking for a friend
[00:59:40] <maerwald> HLS can at least do the first part, but converting to qualified use not I think
[00:59:57] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[01:00:13] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 260 seconds)
[01:02:01] <Hecate> HLS can do the converting to qualified
[01:02:06] <Hecate> but you'll have to script it
[01:04:35] *** Joins: acidjnk (~acidjnk@p200300d0c7049f58687650f0568aa4d7.dip0.t-ipconnect.de)
[01:04:57] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[01:06:47] *** Quits: raehik1 (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 260 seconds)
[01:09:31] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[01:10:03] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[01:12:27] *** Quits: briandaed (~root@109.95.142.93.r.toneticgroup.pl) (Ping timeout: 260 seconds)
[01:13:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[01:14:41] *** Joins: raehik1 (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[01:17:28] <dmj`> Hecate: does it just convert the import? or does it actually rewrite the usage sites as well
[01:18:04] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[01:24:43] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[01:24:59] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[01:25:14] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:27:16] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[01:27:43] *** Joins: SobiX (~SobiX@83.120.59.40)
[01:29:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[01:29:57] *** Parts: SobiX (~SobiX@83.120.59.40) ()
[01:31:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:32:46] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[01:33:24] <dmj`> Hecate: I think this would be a cool standalone static analysis tool
[01:33:54] *** Joins: InstX1 (~Liam@2601:6c4:4080:3f80:edd7:b0a0:789:3ae4)
[01:37:03] *** Quits: Inst (~Liam@2601:6c4:4080:3f80:6050:16ec:fe01:4f97) (Ping timeout: 250 seconds)
[01:37:24] <Hecate> dmj`: you activate it on a call-site in particular actually
[01:37:26] <Hecate> but again
[01:37:34] <Hecate> that's the "interactive" usage
[01:37:41] <Hecate> idk about scripting
[01:39:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[01:40:01] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Quit: ZNC - https://znc.in)
[01:40:48] <monochrom> dmj`: ghc -ddump-minimal-imports can help.
[01:41:02] <InstX1> what is it called
[01:41:02] <monochrom> It doesn't add "qualified" though.
[01:41:13] <InstX1> in haskell, when you create a record that's absorbed by a function interface?
[01:41:24] <monochrom> But it converts "import Data.List" to "import Data.List (sort)" for example.
[01:41:41] <monochrom> even adds "import Prelude (length)"
[01:42:01] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:43:13] <geekosaur> InstX1, I don't understand your question. Can you show an example?
[01:43:31] <InstX1> umm, i defined a record via data
[01:43:35] <InstX1> then created a prototype of that record
[01:43:57] <InstX1> then i had a function interface for a bunch of functions that demanded complex arguments to be fed to them constantly
[01:44:07] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:44:08] <InstX1> the prototype basically set defaults
[01:44:31] <InstX1> so i called the functions via the function interface by feeding the function interface the record
[01:44:33] <geekosaur> oh.I don't think we have a specific name for that
[01:44:40] <InstX1> is that a bad design pattern?
[01:44:56] <geekosaur> it kinda serves the same purpose as a keyword interface to a function, though
[01:45:11] <abastro[m]> Function interface?
[01:45:21] <geekosaur> no, just we don't necessarily g;lorify our design patterns with names, or even with "design pattern"
[01:45:28] <geekosaur> it's just good coding style
[01:45:36] <monochrom> Generally we don't waste time coining names. But in this case I wouldn't mind hijacking "named parameters" and "default parameters".
[01:46:10] <abastro[m]> What does function interface mean here?
[01:46:11] <InstX1> there's a bunch of cool design patterns that deserve names, like tuple recursion of a list to be split
[01:46:22] <dmj`> monochrom: that's exactly what I go for, but I'd still need some kind of source rewriting tool, thinking about haskell-src-exts ... probably still good
[01:46:25] <InstX1> the function interface calls the underlying function and feeds it inputs to satisfy the arguments
[01:46:26] <monochrom> You can safely s/interface// :)
[01:46:32] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[01:46:39] <InstX1> i somehow think the underlying function was poorly designed
[01:46:55] <InstX1> returns a IO (Maybe [Text])
[01:47:09] <dmj`> monochrom: -ddump-minimal-imports would give me a list of all types / functions that need to be prefixed ... then I just gotta parse that module body and adjust the usage sites
[01:47:28] <geekosaur> no, it's just a convenient way to pass arguments with defaults
[01:47:34] <monochrom> Yikes, that's a lot of yak shaving.
[01:48:15] <InstX1> can i ask another stupid question?
[01:48:22] <InstX1> is FP about dataflows?
[01:48:24] <geekosaur> and the defaults can differ (see for example how dynamicLog gets used in xmonad, starting with a default that you can pick from a list of predefined ones)
[01:48:46] <monochrom> It seems strange to universally make everything qualified, I guess that's why other people haven't implemented it.
[01:49:54] <monochrom> No FP is not about dataflows. Though they do overlap.
[01:49:55] <dmj`> monochrom: it is a tad odd, but this project has a /ton/ of types, and some modules have been duplicated with only slight modifications (releasing a new endpoint version)
[01:50:15] *** Chargen is now known as macbethwin
[01:51:47] <abastro[m]> So by function interface mean higher-order functions
[01:52:28] <monochrom> Arrow does scream like "I am a dataflow language" for example. But Arrow is still not all of FP.
[01:52:57] <abastro[m]> Arrow?
[01:53:26] <abastro[m]> Hm, do you mean using Arrow instead of Monad?
[01:53:28] <monochrom> Control.Arrow for starters. And then it gets better with the proc-do notation for Arrow.
[01:53:43] <monochrom> Oh Monad obviously exceeds dataflow.
[01:53:52] <abastro[m]> `proc-do`, I see
[01:54:16] <abastro[m]> Personally never tried Arrow programming
[01:54:18] <geekosaur> in fact Arrow is not very widely used these days
[01:54:37] <geekosaur> I don't often see it, beyond people using >>> or first
[01:55:07] <monochrom> And >>> was demoted to just Category so you don't need to know Arrow. :)
[01:55:30] <geekosaur> and first/second to Profunctor
[01:55:41] <tomsmeding> or Bifunctor
[01:55:50] <tomsmeding> (which is in base)
[01:55:59] <abastro[m]> > :t (>>>)
[01:56:00] <lambdabot>  <hint>:1:1: error: parse error on input ‘:’
[01:56:04] <tomsmeding> :t (>>>)
[01:56:06] <lambdabot> forall k (cat :: k -> k -> *) (a :: k) (b :: k) (c :: k). Category cat => cat a b -> cat b c -> cat a c
[01:56:11] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:88a0:fb04:2d2:c434) (Ping timeout: 245 seconds)
[01:56:12] <tomsmeding> forward function composition
[01:56:13] <abastro[m]> Oh
[01:56:20] <monochrom> Some greedy capitalist investment firm bought Arrow and split it into parts for sale >:)
[01:56:21] <abastro[m]> So.. reverse (.)?
[01:56:29] <tomsmeding> :t flip (.)
[01:56:30] <lambdabot> (a -> b) -> (b -> c) -> a -> c
[01:56:34] <geekosaur> % :t (>>>) @((->) _)
[01:56:34] <yahb> geekosaur: ; <interactive>:1:9: error:; * Couldn't match kind `*' with `* -> *'; Expected kind `* -> * -> *', but `(->) _' has kind `* -> *'; * In the type `((->) _)'; In the expression: (>>>) @((->) _)
[01:56:37] <abastro[m]> Wait wasn't that what `&` does?
[01:56:43] <tomsmeding> except generalised over -> like things
[01:56:51] <geekosaur> & is flipped ($) iirc?
[01:56:52] <tomsmeding> abastro[m]: (&) is to ($) as (>>>) is to (.)
[01:57:05] <tomsmeding> and (<<<) == (.)
[01:57:14] <abastro[m]> Duh me
[01:57:18] <abastro[m]> Now I see...
[01:57:36] <abastro[m]> How could I confuse (.) and ($) is out of mind to ke
[01:57:40] <abastro[m]> To me*
[01:58:32] <abastro[m]> Tbf, I heard Arrow is great if you also want to give some info about the "procedure" without consuming input
[01:58:42] <geekosaur> and to serious-ify monochrom's observation, the useful parts of Arrow went to Category, Profunctor, Bifunctor, and Applicative. much of the rest is ruined by `arr` being mandatory
[01:58:52] <abastro[m]> `a -> m b` cannot give you any info without consuming input `a`
[01:59:13] <abastro[m]> `Profunctor`?
[01:59:38] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[01:59:56] <abastro[m]> @hoogle Profunctor
[01:59:57] <lambdabot> Control.Lens.Combinators class Profunctor (p :: Type -> Type -> Type)
[01:59:57] <lambdabot> Control.Lens.Iso class Profunctor (p :: Type -> Type -> Type)
[01:59:57] <lambdabot> module Data.Profunctor
[02:00:53] <abastro[m]> Oh you don't mean base
[02:01:05] <geekosaur> no, I'd forgotten Profunctor wasn't in base yet
[02:01:13] <abastro[m]> I thought you mean Profunctor is in base
[02:01:17] <abastro[m]> Oh
[02:01:18] <geekosaur> (if ever)
[02:02:05] <abastro[m]> Btw it is interesting how Category has general type signature
[02:02:28] <janus> geekosaur: do you know if there is a monomorphic (&&&) somewhere?
[02:02:49] <geekosaur> I don't knowof one
[02:02:58] <abastro[m]> Perhaps generalized monad could be defined with it.
[02:03:57] <geekosaur> I think generalized monads have been defined with it. outside base, of course
[02:04:38] <geekosaur> there are several implementations of indexed monads on hackage iirc
[02:05:19] <geekosaur> whether they have a full CT monad definition somewhere I don't know
[02:06:18] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:06:35] <abastro[m]> Isn't CT monad simpler than indexed monads
[02:07:12] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:08:04] <johnw> given thata "CT monad" can be defined in multiple ways, I'm not sure how to understand that question
[02:08:44] *** Quits: michalz (~michalz@185.246.204.107) (Remote host closed the connection)
[02:11:49] <abastro[m]> Ah I forgot that `pure` and `join` in CT monad requires natural transformation
[02:12:01] *** Quits: alp (~alp@user/alp) (Ping timeout: 245 seconds)
[02:12:37] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:12:47] *** Quits: kenran (~kenran@200116b82bc26800d8fb2d8773389650.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[02:12:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:14:13] <abastro[m]> Perhaps one could get by with
[02:14:13] <abastro[m]> `pure :: cat a (m a)`
[02:14:14] <abastro[m]> `join :: cat (m (m a)) (m a)`
[02:15:07] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:17:21] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[02:18:44] <johnw> well, that's another way from that perspective
[02:19:04] <johnw> there's also: arrows of the Kleisli category, monoid objects in the category of endofunctors, and the operad-based definition
[02:19:29] <dolio> The important question is: what's the point?
[02:19:35] <johnw> the adjunction-composite definition isn't quite universal enough to established what a monad IS, more than one simply always exists in that case
[02:19:41] *** Quits: Graham31415 (~Graham@user/Graham31415) (Read error: Connection reset by peer)
[02:20:54] *** Joins: Graham31415 (~Graham@user/Graham31415)
[02:21:56] <johnw> dolio: seems oddly out of place for a discussion about CT monads :)
[02:22:40] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: Leaving)
[02:25:44] *** Joins: hololeap_ (~hololeap@user/hololeap)
[02:26:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[02:28:45] <abastro[m]> Oh, so other definitions exist
[02:29:06] <abastro[m]> Btw I think https://hackage.haskell.org/package/category does what I wanted, but it is somehow deprecated
[02:29:15] <abastro[m]> I wonder why..
[02:31:11] <dolio> The point of the question in that regard is that there are significantly better systems to use if faithfully embedding category theory is your goal.
[02:31:31] <geekosaur> I suspect because Control.Category is in base now
[02:31:37] *** Quits: polyphem (~rod@2a02:810d:840:8754:224e:f6ff:fe5e:bc17) (Ping timeout: 240 seconds)
[02:33:44] *** Joins: polyphem (~rod@2a02:810d:840:8754:224e:f6ff:fe5e:bc17)
[02:34:34] <johnw> dolio: ah, yes indeed, Haskell is not a great choice; better than C++, but much worse than Agda
[02:34:40] <abastro[m]> Oh. I thought it at least lacks Higher order functors tho
[02:34:44] <geekosaur> hm, no, it doesn't have Category, just classes derived from it. nouseful info on why it's deprecated either (speaking of documentation…)
[02:35:04] <abastro[m]> Oh.
[02:35:52] <abastro[m]> Well tbh I was actually thinking about using Set as monad, but that is implemented in another package cleverly it seems.
[02:36:02] <geekosaur> that'd be an indexed monad
[02:36:14] <geekosaur> as I said earlier, there are several such packages
[02:36:39] <abastro[m]> Oh? Set as Indexed monad?
[02:36:58] <geekosaur> Set requires Ord, you need an indexed monad to support that
[02:37:34] <geekosaur> sadly that does not mean you can just use an indexed monad anywhere you'd use a Monad, including with `do` (except maybe in 9.2.x)
[02:37:49] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:38:15] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:38:34] <abastro[m]> I mean, I do not get how indexed monad is enough to provide the Ord instance
[02:38:36] *** Joins: deadmarshal_ (~deadmarsh@95.38.115.112)
[02:39:05] *** Joins: machinedgod (~machinedg@24.105.81.50)
[02:39:19] *** Joins: hololeap (~hololeap@user/hololeap)
[02:40:15] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[02:40:32] *** Quits: Graham31415 (~Graham@user/Graham31415) (Quit: Lost terminal)
[02:41:36] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[02:41:59] *** Quits: dcoutts_ (~duncan@host86-150-41-212.range86-150.btcentralplus.com) (Ping timeout: 260 seconds)
[02:42:11] <abastro[m]> How do you implement indexed monad instance for Set?
[02:42:52] *** Quits: deadmarshal_ (~deadmarsh@95.38.115.112) (Ping timeout: 246 seconds)
[02:46:24] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:46:37] <geekosaur> looks like https://hackage.haskell.org/package/category-extras is where everything has moved (note that it'sa metapackage)
[02:46:50] <geekosaur> including what you were looking at earlier
[02:47:07] <geekosaur> anyway strictly speaking you want a parameterized monad, where the parameter here is Ord
[02:49:02] <geekosaur> this allows it to work even though the shape of the value may change (a value may move to a different part of a tree, which in turn may cause rebalancing; this is what bites Set and Map)
[02:49:28] <geekosaur> that said I don't know off the top of my head how you would defined a parameterized monad instance for Set
[02:50:17] *** Quits: macbethwin (~chargen@8.21.8.253) (Quit: zzz)
[02:54:30] *** Joins: nate1 (~nate@98.45.152.91)
[02:57:39] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[02:59:32] *** Quits: nate1 (~nate@98.45.152.91) (Ping timeout: 272 seconds)
[02:59:39] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[03:02:22] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[03:02:58] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[03:07:55] <johnw> I had always thought it need a restricted monad, which parameterized monads generalize (as they also generalize indexed monads)
[03:08:07] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[03:13:03] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[03:15:49] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[03:16:47] *** Quits: InstX1 (~Liam@2601:6c4:4080:3f80:edd7:b0a0:789:3ae4) (Ping timeout: 256 seconds)
[03:19:03] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[03:23:52] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:24:09] *** Quits: haris (~haris@69.169.3.81) (Remote host closed the connection)
[03:25:17] *** Joins: InstX1 (~Liam@2601:6c4:4080:3f80:49ba:58e8:9838:64ed)
[03:32:27] *** Quits: InstX1 (~Liam@2601:6c4:4080:3f80:49ba:58e8:9838:64ed) (Ping timeout: 260 seconds)
[03:34:47] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:38:07] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::2253)
[03:40:43] *** Joins: alp (~alp@user/alp)
[03:40:56] *** Joins: InstX1 (~Liam@2601:6c4:4080:3f80:28f0:360e:9f80:acb)
[03:41:04] *** Quits: lainon (~lainon@2601:7c0:c500:4d20::2253) (Client Quit)
[03:42:58] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[03:44:24] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[03:47:35] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Ping timeout: 240 seconds)
[03:49:39] *** Quits: acidjnk (~acidjnk@p200300d0c7049f58687650f0568aa4d7.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[03:50:42] *** Joins: tiferrei (~tiferrei@user/tiferrei)
[03:52:09] *** Quits: zyklotomic (~ethan@r4-128-61-93-8.res.gatech.edu) (Ping timeout: 256 seconds)
[03:54:08] *** Joins: zyklotomic (~ethan@r4-128-61-93-188.res.gatech.edu)
[03:57:33] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 260 seconds)
[03:58:56] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Remote host closed the connection)
[04:01:00] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[04:03:01] *** Joins: Guest27 (~Guest27@2601:281:d47f:1590::6b90)
[04:05:23] <Guest27> I have a simple by-the-books N-queens solver. The first version has type
[04:05:23] <Guest27> `Integral a => a -> [[(a,a)]]`
[04:05:24] <Guest27> Changing this to
[04:05:24] <Guest27> `Int -> [(Int,Int)]`
[04:05:25] <Guest27> Makes it 2 orders of magnitude faster. Both versions are compiled with -O2. What exactly is going on? Is whatever concrete type satisfying the Integral constraint really that much slower than an Int?
[04:06:08] <Axman6> your code is probably defaulting to Integer for a if you haven't specified what type you're using
[04:06:26] <monochrom> Certainly a factor. It's Integer. Unlimited width.
[04:07:01] <Guest27> That's what I figured, but I'm curious why Integer is soooo much slower when it's dealing with numbers on the same scale as the Int
[04:07:26] <monochrom> Not to mention that naturally, also incurs one more layer of function calls.
[04:07:29] <Axman6> basically every operation needs to check if you have a small integer or a large integer
[04:07:40] <Axman6> @src Integer
[04:07:40] <lambdabot> data Integer = S# Int#
[04:07:40] <lambdabot>              | J# Int# ByteArray#
[04:08:32] <Guest27> Huh, I didn't realize that would add up so much
[04:09:10] <Axman6> so things like plus are implemented as (S# i) + (S# j) = addIntOverFlowToIntegerIfTooBig# i j; (S# i) + (J# n arr) = addIntToBigInteger# i n arr; etc. (made up, but you should get the point)
[04:09:19] <monochrom> Heap allocation also adds GC pressure.
[04:09:42] <Axman6> when you specify it's just Int, then it can use registers for all the values
[04:10:26] <Guest27> Okay, that all makes sense. Thanks!
[04:11:02] <Guest27> Are there any situations where Int becomes boxed under your nose to watch out for?
[04:11:40] <abastro[m]> geekosaur: Oh, category-extras has lots of things. That said, it still lacks the categorical monad..
[04:11:52] <monochrom> Just wait until you suffer Int overflow->wraparound and start complaining that safety is more important than performance.
[04:12:23] <monochrom> Maybe Int boxes Int.
[04:13:24] <abastro[m]> Safety is more important than performance?
[04:13:44] <Guest27> monochrom On the one hand safety is important. On the other hand I'm playing code golf with friends and need to **win**
[04:14:04] <monochrom> I am agnostic to that debate. Just stating that other people would kill each other over it.
[04:14:08] <hpc> abastro[m]: when my code does the wrong thing, i always want it to do lots of wrong things in rapid succession :D
[04:15:10] <monochrom> In fact stating that even the same person can flip-flop upon the slightest pretext of suffering whatever issue du jour.
[04:16:28] <dolio> Throwing exceptions is safe?
[04:16:52] <monochrom> I am agnostic to that debate, too.
[04:16:55] <dolio> And the mathematical behavior of Z/Z(2^64) is not safe? :þ
[04:17:13] <Axman6> According to the type system, throwing an exception will always give you the correct answer!
[04:17:28] <geekosaur> 63, as I was reminded the last time this came up :þ
[04:17:43] <hpc> whenever you encounter an error, all you have to do is fix it
[04:17:44] <hpc> > fix error
[04:17:46] <lambdabot>  "*Exception: *Exception: *Exception: *Exception: *Exception: *Exception: *Ex...
[04:18:07] *** Quits: InstX1 (~Liam@2601:6c4:4080:3f80:28f0:360e:9f80:acb) (Ping timeout: 260 seconds)
[04:18:31] <monochrom> hpc: I once compiled in C "int i = 0; while (i > 0) i *= 2;" with gcc -O2.  The generated code was "label: jmp label". That is a perfect realization of your preference. >:)
[04:18:47] <monochrom> Although, one can argue s/wrong/right/
[04:19:11] <dolio> Pretty sure it's 64. Negative numbers aren't included even though people usually start with the integers for some reason.
[04:19:13] <monochrom> err, s/i = 0/i = 1/
[04:19:34] <abastro[m]> <hpc> "abastro: when my code does the..." <- That's the spirit
[04:19:53] <hpc> there's posts online of gcc optimizer solving the collatz conjecture
[04:20:10] *** Joins: InstX1 (~Liam@2601:6c4:4080:3f80:85fa:fa6d:a3c9:394a)
[04:20:18] <monochrom> Oh haha.
[04:20:52] <monochrom> I guess the conjecture is a theorem when restricted to int input.
[04:20:54] <geekosaur> well, it *is* demonstrated for built-in types…
[04:21:00] <geekosaur> yeh, that
[04:21:58] <monochrom> It would take a while before a platform decides that int has 1000 bits or something.
[04:22:42] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[04:22:45] <abastro[m]> Well if `int i = 0; while (i > 0) i *= 2;` indeed resulted in infinite loop, that would be a good meme material
[04:22:55] <monochrom> Now, does gcc also solve the Riemann hypothesis for double? >:)
[04:25:33] <monochrom> Also, 2^n = 0 for all sufficently large n, therefore Θ(2^n) = Θ(1), hence EXPTIME=P. Corollary: NP=P.
[04:25:45] *** Quits: Guest27 (~Guest27@2601:281:d47f:1590::6b90) (Quit: Client closed)
[04:27:00] <monochrom> This is now known as dolio's Lemma. >:)
[04:27:06] <geekosaur> so now that you scared the OP away…
[04:27:06] <abastro[m]> XD
[04:27:10] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[04:27:24] <dolio> Nice.
[04:27:33] <abastro[m]> Who was OP?
[04:27:48] <abastro[m]> :O
[04:28:14] <geekosaur> Guest27, with the n-queens problem
[04:28:15] *** Quits: slaydr (~slaydr@173.239.197.154) (Remote host closed the connection)
[04:28:53] <geekosaur> #haskell, where we slide offtopic at the slightest pretext. }:>
[04:29:04] <abastro[m]> Ahh.. welp
[04:29:47] <abastro[m]> I am worried on the impression they might have gotten..
[04:30:49] <geekosaur> have to admit I was also wondering if they'd made any calls that perhaps had prevented the compiler from solving the Integral dictionary at compile time, but now we're into inspecting Core
[04:30:55] <geekosaur> speaking of scaring newcomers off
[04:31:22] <geekosaur> then again if you're golfing, it's nearly a requirement anyway
[04:31:31] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:31:35] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::7980)
[04:32:23] <monochrom> But the factors I listed were already optimistic in that.
[04:32:30] *** Joins: califax (~califax@user/califx)
[04:34:09] <abastro[m]> Golfing?
[04:34:21] <geekosaur> [30 23:43:44] <Guest27> monochrom On the one hand safety is important. On the other hand I'm playing code golf with friends and need to **win**
[04:34:27] <Axman6> using a few ~hits~ characters as possible
[04:34:36] <geekosaur> or least time, etc.
[04:34:52] <geekosaur> point being it is, like golf, about getting the lowest score
[04:34:56] <geekosaur> by whatever metric
[04:35:09] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[04:35:29] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:36:07] <monochrom> Remember that childish children competed in length? They all wanted to boast that they had the longest whatever?
[04:36:29] <monochrom> Well adults do the reciprocal.
[04:37:25] <Axman6> it's an important thing though, it relates to information theory and compression
[04:37:37] <geekosaur> reminded of the old joke about cellphones, before smartphones came out and they rebounded
[04:37:55] <monochrom> hehe
[04:39:56] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:41:39] <monochrom> We said "water bottle phone" in Hong Kong.
[04:42:03] <monochrom> Naturally, toy makers henceforth made water bottles in the shape of those large cellphones.
[04:43:01] <geekosaur> come to think  of it, I don't think I've yet seen a comic retrospective comparing the days when everyone wanted the smallest phone to now when everyone wants the largest smartphone
[04:43:14] <abastro[m]> Hahahaha
[04:43:41] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Ping timeout: 245 seconds)
[04:43:57] <Axman6> toy makers just need to pivot to making hip flasks instead
[04:44:54] <hpc> they should sell non-fungible fungus
[04:47:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[04:47:46] *** Joins: Zach[m]1 (~zoglesby@user/zoglesby)
[04:48:23] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[04:48:49] *** Quits: jgeerds (~jgeerds@d5364b87.access.ecotel.net) (Ping timeout: 250 seconds)
[04:50:56] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[04:51:06] *** Quits: zoglesby (f0f8ca1525@user/zoglesby) (Remote host closed the connection)
[04:51:37] *** Quits: Zach[m]1 (~zoglesby@user/zoglesby) (Client Quit)
[04:51:51] *** Joins: Zach[m]1 (~zoglesby@user/zoglesby)
[04:52:49] *** Quits: dunj3 (~dunj3@kingdread.de) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:52:57] *** Joins: dunj3 (~dunj3@kingdread.de)
[04:54:51] *** Joins: Guest27 (~Guest27@2601:281:d47f:1590::6b90)
[04:56:22] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:59:11] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[05:02:06] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[05:02:36] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[05:08:59] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[05:17:13] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 246 seconds)
[05:17:25] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Read error: Connection reset by peer)
[05:17:31] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[05:18:19] *** Joins: nosewings (~ngpc@2603-8081-3e05-e2d0-9a13-8636-84b9-e362.res6.spectrum.com)
[05:19:08] *** Quits: nosewings (~ngpc@2603-8081-3e05-e2d0-9a13-8636-84b9-e362.res6.spectrum.com) (Read error: Connection reset by peer)
[05:19:26] *** Joins: nosewings (~ngpc@2603-8081-3e05-e2d0-9a13-8636-84b9-e362.res6.spectrum.com)
[05:26:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[05:33:37] *** Quits: Guest27 (~Guest27@2601:281:d47f:1590::6b90) (Quit: Client closed)
[05:40:09] *** Quits: the_proffesor (~theproffe@2601:282:847f:8010::7f59) (Ping timeout: 256 seconds)
[05:40:31] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[05:41:29] *** Joins: vysn (~vysn@user/vysn)
[05:42:39] *** Quits: nosewings (~ngpc@2603-8081-3e05-e2d0-9a13-8636-84b9-e362.res6.spectrum.com) (Remote host closed the connection)
[05:43:32] *** Joins: theproffesor (~theproffe@2601:282:847f:8010::7f59)
[05:46:37] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[05:48:16] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::7980) (Ping timeout: 245 seconds)
[05:48:25] <dons> morning all
[05:49:06] <geekosaur> o/
[05:50:04] <Guest|18> y
[05:50:28] *** Joins: neurocyte861 (~neurocyte@IP-094016065068.dynamic.medianet-world.de)
[05:50:29] *** Quits: neurocyte861 (~neurocyte@IP-094016065068.dynamic.medianet-world.de) (Changing host)
[05:50:29] *** Joins: neurocyte861 (~neurocyte@user/neurocyte)
[05:52:23] *** Quits: neurocyte86 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[05:52:24] *** neurocyte861 is now known as neurocyte86
[05:53:19] *** Quits: alp (~alp@user/alp) (Ping timeout: 260 seconds)
[05:53:35] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[05:58:18] <abastro[m]> Wait, morning?
[05:58:19] <abastro[m]> Where is it
[06:00:29] <Guest|18> type Maybe :: * -> *
[06:00:30] <Guest|18> data Maybe a = Nothing | Just a
[06:00:30] <Guest|18>         -- Defined in ‘GHC.Maybe’
[06:01:55] <abastro[m]> m
[06:03:09] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:03:09] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:03:09] *** Joins: wroathe (~wroathe@user/wroathe)
[06:03:16] <geekosaur> australia, I believe
[06:05:18] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[06:10:26] <Guest|18> i guest Arctic :-|
[06:13:38] <hpc> haha, technically true
[06:17:12] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:17:25] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:19:27] *** Quits: napping (~brandon@65.128.43.198) (Quit: leaving)
[06:20:27] <abastro[m]> Kek
[06:20:44] <abastro[m]> Btw it is morning here too
[06:21:41] <geekosaur> Guest|18, did you have a question related to that paste?
[06:25:00] <abastro[m]> I thought it was an answer to my "Where is it?"
[06:28:53] <Guest|18> abastro[m]: yes
[06:29:55] <abastro[m]> Ye
[06:32:58] *** Joins: kor1 (~kor1@81.19.209.58)
[06:33:55] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[06:33:55] *** Quits: Dorkside (~dorkside@208.190.197.222) (Ping timeout: 260 seconds)
[06:33:56] *** Dorkside6 is now known as Dorkside
[06:34:20] *** Parts: danso (~danso@danso.ca) ()
[06:43:49] *** Joins: _xor (~xor@74.215.232.169)
[06:48:42] *** Joins: slack1256 (~slack1256@186.11.26.81)
[06:53:05] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[06:54:38] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[06:57:40] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[06:59:42] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[06:59:55] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[07:03:44] *** Quits: Katarushisu (~Katarushi@cpc147334-finc20-2-0-cust27.4-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[07:04:02] *** Joins: Katarushisu (~Katarushi@cpc147334-finc20-2-0-cust27.4-2.cable.virginm.net)
[07:06:49] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[07:07:13] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:10:48] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[07:11:38] *** Quits: slack1256 (~slack1256@186.11.26.81) (Remote host closed the connection)
[07:15:59] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[07:19:56] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[07:21:53] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:22:42] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[07:24:38] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 260 seconds)
[07:26:11] *** Joins: abastro (~abab9579@192.249.26.132)
[07:26:59] *** Joins: jbox (~jbox@user/jbox)
[07:30:23] *** Quits: abastro (~abab9579@192.249.26.132) (Remote host closed the connection)
[07:30:37] *** Joins: abastro (~abab9579@192.249.26.132)
[07:34:32] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[07:39:00] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[07:41:30] *** Joins: zaquest (~notzaques@5.130.79.72)
[07:44:15] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[07:45:13] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[07:45:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[07:50:25] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:52:18] *** Joins: zebrag (~chris@user/zebrag)
[07:52:18] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[07:54:10] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[07:54:24] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[07:56:27] *** Quits: kor1 (~kor1@81.19.209.58) (Quit: kor1)
[07:58:37] *** Joins: kor1 (~kor1@81.19.209.58)
[07:58:50] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[08:01:33] *** Joins: coot (~coot@213.134.190.95)
[08:02:23] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[08:03:49] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[08:04:11] *** Quits: coot (~coot@213.134.190.95) (Client Quit)
[08:04:39] *** Quits: hgolden (~hgolden2@cpe-172-251-233-141.socal.res.rr.com) (Remote host closed the connection)
[08:08:36] *** Joins: nosewings (~ngpc@2603-8081-3e05-e2d0-96c1-0fad-58de-6f58.res6.spectrum.com)
[08:09:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[08:12:32] *** Quits: nosewings (~ngpc@2603-8081-3e05-e2d0-96c1-0fad-58de-6f58.res6.spectrum.com) (Remote host closed the connection)
[08:12:39] *** Joins: hgolden (~hgolden2@cpe-172-251-233-141.socal.res.rr.com)
[08:14:04] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:14:21] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[08:16:38] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[08:19:29] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[08:22:48] *** Joins: vicfred (~vicfred@user/vicfred)
[08:27:16] *** Quits: abastro (~abab9579@192.249.26.132) (Ping timeout: 246 seconds)
[08:28:27] *** Joins: abastro (~abab9579@192.249.26.132)
[08:30:45] *** Joins: yauhsien_ (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[08:30:45] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[08:32:19] *** Quits: abastro (~abab9579@192.249.26.132) (Remote host closed the connection)
[08:32:33] *** Joins: abastro (~abab9579@192.249.26.132)
[08:34:35] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:38:43] *** Joins: zebrag (~chris@user/zebrag)
[08:41:43] *** Quits: yauhsien_ (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:42:20] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[08:44:42] *** Quits: kor1 (~kor1@81.19.209.58) (Ping timeout: 272 seconds)
[08:47:13] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[08:55:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:59:01] *** Joins: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[08:59:15] <jle`> why leak space
[08:59:17] <jle`> how find leak :(
[09:00:42] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[09:04:21] *** Joins: mbuf (~Shakthi@171.61.194.140)
[09:04:22] *** Quits: abastro (~abab9579@192.249.26.132) (Ping timeout: 260 seconds)
[09:08:33] *** Quits: toulene (~toulene@user/toulene) (Quit: The Lounge - https://thelounge.chat)
[09:08:34] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[09:10:52] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:14:31] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 246 seconds)
[09:17:03] *** alMalsamo is now known as littlebobeep
[09:17:56] <abastro[m]> Just as hard as memory leak
[09:20:24] <Guest|18> QAQ！
[09:20:49] *** Quits: modnar (~modnar@shell.sonic.net) (Remote host closed the connection)
[09:23:06] <Andrew> Let's add malloc() to Haskell
[09:23:23] <abastro[m]> Great idea
[09:23:32] <dolio> GHC already has malloc.
[09:23:42] <abastro[m]> It's immutable so `free` should not exist
[09:24:05] <abastro[m]> `malloc :: Data a => a`
[09:24:25] * Andrew doesn't *actually* see a use case except for irony
[09:25:14] <abastro[m]> Hm usecase for which?
[09:25:36] <abastro[m]> Ofc `malloc :: Data a => a` is a complete joke
[09:25:52] <Andrew> Data, lol
[09:31:37] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:34:43] *** Joins: abastro (~abab9579@192.249.26.132)
[09:36:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:39:05] *** Quits: Guest|18 (~Guest|18@116.21.1.31) (Quit: Ping timeout (120 seconds))
[09:39:54] <Axman6> jle`: simple, delete code until leak goes away!
[09:40:44] *** Joins: Guest|18 (~Guest|18@116.21.1.31)
[09:41:17] *** Joins: lainon (~lainon@2601:7c0:c500:4d20:3667:2fa5:dc2b:132a)
[09:41:47] <jle`> eureka!
[09:42:08] <Axman6> if you get to main = pure (), you're all done
[09:44:33] *** Quits: abastro (~abab9579@192.249.26.132) (Remote host closed the connection)
[09:44:40] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:44:47] *** Joins: abastro (~abab9579@192.249.26.132)
[09:45:10] <abastro> Hahaha
[09:45:30] <Axman6> abastro: does your change of name mean you've got glirc working?
[09:45:41] <abastro> Yep, I am on glirc now
[09:45:47] <Axman6> congrats
[09:45:53] <abastro> Tho I am afraid I might be pinging smone named glirc
[09:46:35] <abastro> Xmonad with scratchpad made it quite easy to work with this app.
[09:46:46] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[09:51:47] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[09:52:52] <Axman6> there's a default highlight for the word glirc in the config, which you can remove if you don't like getting notified every time another glirc user talks about how great glirc is
[09:55:05] <jackdk> Axman6: Back when I was young and wasn't good at things, I tried to "fix" a sample program that came with my Pascal compiler by deleting every line it complained about. By the end, I had a very small program.
[09:55:26] <Axman6> Thanos would be proud
[10:01:54] <abastro[m]> Oh, saying glirc just lets glirc ppl notified?
[10:01:59] <abastro[m]> I thought it was an actual user
[10:02:52] <dons> yow my .cabal file is nearly 2000 lines now
[10:03:03] <dons> hmm. i bet parsing that is a non-trivial part of the build time
[10:03:25] <sclv> waht
[10:03:38] <sclv> parsing cabal files should be really fast unless we screwed something up
[10:03:48] <sclv> (that's not what the waht is referring to tho)
[10:03:49] <Axman6> need more packages and meta-cabal files (pun intended)
[10:04:03] <dons> well, checking dependencies anyway
[10:04:19] <sclv> solving dependencies could well be, though we've worked on that
[10:04:35] <sclv> the parsing should be good tho, since its pretty frequent cabal has to parse a _ton_ of files
[10:05:02] <sclv> you can time a fresh "configure" to mod out the cabal figuring stuff out portion of a build time
[10:05:36] <sclv> i'm sort of astonished that a file could hit that large though. unless it has like a lot of distinct targets inside it
[10:05:36] *** Joins: dut_ (~dut@user/dut)
[10:06:15] <dons> https://raw.githubusercontent.com/facebookincubator/Glean/main/glean.cabal
[10:07:09] <sclv> lmao wow really putting that sublibrary thing to work
[10:07:16] <dons> $ find . -type f -name '*.hs' -exec cat {} \; | wc -l
[10:07:20] <dons> 559,786
[10:07:31] <dons> fair bit of generated stuff there
[10:08:10] <sclv> i wonder if you can use wildcards for like cxx-sources
[10:08:24] <sclv> probably doesn't work for that field, and possibly for good reason?
[10:09:02] *** Joins: dcoutts_ (~duncan@host109-149-38-1.range109-149.btcentralplus.com)
[10:10:34] <dons> i'm doing this mad thing where i'm compiling rust, typescript, go, php, c++, javascript. its all running fine. today it falls over because theres a dependency on a specific 2018 version of bison at the bottom of the stack
[10:10:53] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[10:10:59] <dons> [industry built on dude in montana maintaining a unix tool.gif]
[10:11:09] *** Quits: monochrom (trebla@216.138.220.146) (Quit: NO CARRIER)
[10:11:32] <Axman6> Thanks Brian, the unix tool guy
[10:12:17] <sclv> but yeah i don't see how to factor that down much further. impressive!
[10:13:13] <Axman6> is that all hand written too?
[10:13:27] <dons> yeah
[10:13:36] <sclv> i learned btw that people now call the issue "the nebraska problem" since thats where the guy is in the original xkcd cartoon
[10:13:37] <dons> 4 years of piecewise development 
[10:13:44] <dons> nebraska. right.
[10:13:46] <Axman6> dons: something about this and Australia's property market made me laugh: Glean.RTS.Foreign.Ownership
[10:14:07] *** Quits: abastro (~abab9579@192.249.26.132) (Remote host closed the connection)
[10:14:18] <dons> we have to track who 'owns' facts in the db, so that when we add new facts that invalidate the old ones, we can work out what else got invalidated.
[10:14:35] <dons> incremental recomputing of DAGs . anyway yeah ownership :}
[10:19:27] <dons> some of these generate schema files  " 401%  13.9   1:05.16 ghc"
[10:19:28] <dons> ghc go brrr
[10:20:05] <dons> i've managed to squeeze out just on 600% cpu utilisation on a few of them. pretty cool seeing ghc go down the module graph
[10:20:23] <dons> i suspect generating a gazillion instances i'll never use but oh well
[10:23:15] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[10:28:22] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[10:28:47] *** Joins: monochrom (trebla@216.138.220.146)
[10:29:58] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[10:31:00] *** Quits: lainon (~lainon@2601:7c0:c500:4d20:3667:2fa5:dc2b:132a) (Quit: Konversation terminated!)
[10:33:47] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[10:40:04] *** Joins: Midjak (~Midjak@82.66.147.146)
[10:41:35] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[10:43:39] *** Joins: coot (~coot@213.134.190.95)
[10:43:46] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[10:46:36] *** Joins: img (~img@user/img)
[10:50:04] *** Quits: raehik1 (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 246 seconds)
[10:50:36] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:51:13] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[10:56:12] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[10:57:31] *** Joins: acidjnk (~acidjnk@p200300d0c7049f56dc923130dc4d7bd3.dip0.t-ipconnect.de)
[10:58:32] *** Joins: yuriy (uid548749@id-548749.hampstead.irccloud.com)
[11:03:23] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[11:05:36] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[11:05:59] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[11:06:03] *** Quits: haskl (~haskl@user/haskl) (Quit: Uh oh... ZNC disconnected.)
[11:06:15] *** Joins: haskl (~haskl@user/haskl)
[11:06:21] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[11:12:41] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:14:37] *** Joins: neurocyte861 (~neurocyte@IP-094016065068.dynamic.medianet-world.de)
[11:14:37] *** Quits: neurocyte861 (~neurocyte@IP-094016065068.dynamic.medianet-world.de) (Changing host)
[11:14:37] *** Joins: neurocyte861 (~neurocyte@user/neurocyte)
[11:14:48] *** Joins: odnes (~odnes@5-203-245-187.pat.nym.cosmote.net)
[11:15:19] *** Quits: neurocyte86 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[11:19:56] *** Joins: michalz (~michalz@185.246.204.125)
[11:22:37] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[11:28:56] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[11:29:19] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[11:29:52] *** Joins: alp (~alp@user/alp)
[11:30:31] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[11:41:25] *** Joins: fendor (~fendor@178.165.181.49.wireless.dyn.drei.com)
[11:45:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:46:41] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[11:47:26] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:2b26:10cb:f0bf:5e24)
[11:53:02] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[11:53:35] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[12:03:16] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[12:04:27] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[12:05:45] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[12:08:18] *** Joins: jakalx (~jakalx@base.jakalx.net)
[12:08:25] *** Quits: PHO` (~pho@akari.cielonegro.org) (Ping timeout: 250 seconds)
[12:09:17] *** Joins: PHO` (~pho@akari.cielonegro.org)
[12:10:28] *** Joins: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl)
[12:11:14] *** Joins: cfricke (~cfricke@user/cfricke)
[12:11:51] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[12:17:12] *** Joins: mncheck (~mncheck@193.224.205.254)
[12:18:15] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[12:18:40] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:18:55] *** Joins: jgeerds (~jgeerds@d5364b87.access.ecotel.net)
[12:23:23] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[12:24:00] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.4.1)
[12:28:16] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[12:35:55] <merijn> sclv: Also, with v2 doesn't it just parse once and then only check hash and load the preparsed result if unchanged?
[12:37:12] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[12:37:32] *** Joins: cfricke (~cfricke@user/cfricke)
[12:38:57] *** Andrew is now known as fadsfdsafdsa
[12:39:41] *** fadsfdsafdsa is now known as Andrew
[12:41:44] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[12:44:34] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[12:45:19] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[12:45:45] *** Joins: kuribas (~user@188.188.218.243)
[12:50:59] *** Quits: zyklotomic (~ethan@r4-128-61-93-188.res.gatech.edu) (Ping timeout: 260 seconds)
[12:52:30] *** Quits: tinwood (~tinwood@canonical/tinwood) (Remote host closed the connection)
[12:52:40] *** Joins: zyklotomic (~ethan@res388d-128-61-91-237.res.gatech.edu)
[12:53:07] *** Joins: ccntrq (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca)
[12:53:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[12:54:35] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:55:30] *** Joins: tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io)
[12:55:31] *** Quits: tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io) (Changing host)
[12:55:31] *** Joins: tinwood (~tinwood@canonical/tinwood)
[12:58:48] *** Quits: mjacob (~mjacob@adrastea.uberspace.de) (Read error: Connection reset by peer)
[12:59:00] *** Joins: mjacob (~mjacob@adrastea.uberspace.de)
[13:05:16] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[13:05:49] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[13:07:20] *** Joins: Pickchea (~private@user/pickchea)
[13:09:14] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[13:14:43] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[13:15:02] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[13:16:33] *** Quits: theproffesor (~theproffe@2601:282:847f:8010::7f59) (Read error: Connection reset by peer)
[13:16:51] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[13:17:10] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[13:17:29] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[13:18:15] *** Joins: theproffesor (~theproffe@2601:282:847f:8010::7f59)
[13:22:21] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[13:22:33] *** Joins: jespada_ (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[13:24:59] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[13:25:21] *** Quits: jespada_ (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[13:25:55] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[13:29:28] *** Quits: kuribas (~user@188.188.218.243) (Remote host closed the connection)
[13:30:06] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[13:30:06] *** Quits: amesgen[m] (~amesgenm]@2001:470:69fc:105::82b) (Quit: You have been kicked for being idle)
[13:30:18] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[13:33:47] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[13:34:23] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:c06:c5f:5435:411f)
[13:34:25] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[13:34:28] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[13:37:00] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Ping timeout: 240 seconds)
[13:39:11] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[13:39:13] *** Quits: _________ (~nobody@user/noodly) (Ping timeout: 256 seconds)
[13:39:57] *** Quits: xsarnik (xsarnik@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[13:40:17] *** Joins: xsarnik (xsarnik@lounge.fi.muni.cz)
[13:42:08] *** Joins: __monty__ (~toonn@user/toonn)
[13:45:07] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[13:45:53] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[13:47:28] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[13:47:56] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[13:48:16] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[13:50:32] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:58:06] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[13:58:43] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[14:00:02] *** Joins: dcoutts__ (~duncan@host109-149-1-229.range109-149.btcentralplus.com)
[14:02:51] *** Quits: dcoutts_ (~duncan@host109-149-38-1.range109-149.btcentralplus.com) (Ping timeout: 260 seconds)
[14:05:02] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[14:05:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:05:36] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[14:06:43] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[14:07:03] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[14:07:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:10:12] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[14:10:26] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[14:11:45] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[14:13:25] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Ping timeout: 240 seconds)
[14:17:49] *** Quits: acidjnk (~acidjnk@p200300d0c7049f56dc923130dc4d7bd3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:22:06] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:22:44] *** Joins: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813)
[14:27:27] *** Quits: earthy (~arthurvl@2001:984:275b:1:ba27:ebff:fea0:40b0) (Quit: WeeChat 2.3)
[14:27:33] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[14:32:29] *** Quits: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[14:34:39] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.4.1)
[14:34:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:34:54] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[14:35:40] *** Joins: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl)
[14:37:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:37:15] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[14:38:33] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:39:31] *** Joins: acidjnk (~acidjnk@p200300d0c7049f56dc923130dc4d7bd3.dip0.t-ipconnect.de)
[14:47:54] *** Quits: littlebobeep (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[14:48:17] *** Joins: littlebobeep (~alMalsamo@gateway/tor-sasl/almalsamo)
[14:50:53] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:51:23] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[14:54:46] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Ping timeout: 260 seconds)
[14:55:55] *** Quits: littlebobeep (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[14:57:13] *** Joins: littlebobeep (~alMalsamo@gateway/tor-sasl/almalsamo)
[15:00:35] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:03:23] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[15:04:36] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[15:06:57] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:07:31] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[15:09:29] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[15:09:46] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[15:09:53] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[15:10:02] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[15:14:45] *** Quits: phma (~phma@host-67-44-209-94.hnremote.net) (Read error: Connection reset by peer)
[15:16:32] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:21:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[15:21:52] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[15:22:21] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:23:15] *** Quits: littlebobeep (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[15:24:22] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[15:24:26] *** Joins: phma (phma@2001:5b0:210d:9148:44c4:fa72:8ed3:4747)
[15:24:35] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[15:25:04] *** Quits: phma (phma@2001:5b0:210d:9148:44c4:fa72:8ed3:4747) (Read error: Connection reset by peer)
[15:25:32] *** Joins: phma (~phma@host-67-44-208-11.hnremote.net)
[15:26:17] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[15:27:45] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:27:46] *** Joins: raehik1 (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[15:28:50] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[15:28:52] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[15:29:52] *** Joins: califax (~califax@user/califx)
[15:30:10] *** Joins: littlebobeep (~alMalsamo@gateway/tor-sasl/almalsamo)
[15:34:25] *** Joins: Pickchea (~private@user/pickchea)
[15:36:08] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[15:37:05] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[15:37:22] <maerwald> tomsmeding: https://www.npmjs.com/package/monaco-editor
[15:37:31] <maerwald> that's what the plutus playground editor uses as well
[15:39:15] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:39:26] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[15:41:24] <tomsmeding> "Is the editor supported in mobile browsers or mobile web app frameworks?" -- "No."
[15:41:52] <tomsmeding> that would be a really powerful editor though
[15:42:33] <maerwald> well, you can detect viewport size and select editor based on that
[15:43:18] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.4.1)
[15:46:10] <tomsmeding> true
[15:46:52] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[15:50:22] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:50:34] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:51:08] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[15:51:55] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:53:37] *** Joins: cfricke (~cfricke@user/cfricke)
[15:53:47] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[16:00:02] *** Joins: razetime (~quassel@117.193.2.164)
[16:07:44] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[16:08:41] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[16:10:29] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[16:14:01] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[16:17:39] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[16:25:28] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[16:25:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:27:04] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:27:06] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Max SendQ exceeded)
[16:27:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:28:34] *** Joins: toulene (~toulene@user/toulene)
[16:29:01] <abastro[m]> Honestly I am concerned if haskell might fall as cardano dies
[16:29:55] <merijn> Why?
[16:30:27] <merijn> the vast majority of people involved in Haskell predate cardano and have nothing to do with cardano
[16:31:37] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:33:24] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[16:33:34] <maerwald> abastro[m]: rust didn't die after mozilla more or less abandoned it. Cardano is not even close to being that closely tied to the language or ecosystem as Mozilla was to rust.
[16:33:54] <Hecate> Rust didn't die because Amazon some big corporations gave jobs to the ex-Mozilla employees
[16:34:13] <Hecate> now the idea is: how many people would be jobless if IOG was to fall
[16:34:17] <int-e> . o O ( Cardawhat? (No, I've heard of it. It's just not relevant. )
[16:34:41] *** Joins: slajdlj (~slajdlj@85.210.203.240)
[16:34:47] *** Quits: slajdlj (~slajdlj@85.210.203.240) (Remote host closed the connection)
[16:34:59] <merijn> I know like 1-2 people being payed by Cardano and I don't think they're particularly crucial roles in the community
[16:35:06] *** Quits: raehik1 (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Quit: WeeChat 3.5)
[16:35:06] <maerwald> merijn: duncan?
[16:35:21] <merijn> Duncan isn't at well-typed anymore?
[16:35:25] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[16:35:31] <maerwald> sure and leading cardano projecs
[16:35:42] <abastro[m]> Oh I did not know that rust was abandoned by mozilla
[16:35:45] <abastro[m]> What happened?
[16:35:47] <int-e> Hecate: That one got me... what is IOG?
[16:35:47] <merijn> Sure, but well-typed existed way before cardano
[16:36:06] <maerwald> merijn: yes, it will cause some disruption
[16:36:34] <merijn> maerwald: Someone injecting big money in the ecosystem going away will cause some disruption sure
[16:36:35] <maerwald> GHC darwin M1 support was mostly paid for by IOHK afair
[16:36:46] <merijn> Not enough to create an existential risk for Haskell, though
[16:36:46] <abastro[m]> Is Mozilla back at using C++ again?
[16:36:52] <maerwald> merijn: I agree
[16:37:07] *** Quits: xsarnik (xsarnik@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[16:37:19] <abastro[m]> I am afraid that haskell is being tied with blockchain
[16:37:20] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[16:37:24] <abastro[m]> Especially Cardano
[16:37:37] <maerwald> abastro[m]: it's not even the only blockchain written in Haskell ;)
[16:37:43] <int-e> abastro[m]: It's not. It may have found a use there but it is not the primary use of Haskell by any means.
[16:37:55] <maerwald> https://github.com/kadena-io/chainweb-node
[16:38:06] <abastro[m]> Like what is it really good at, tbh it is most likely that only Btc and Eth would serve well in the long run
[16:38:33] <maerwald> abastro[m]: blockchain is mostly about marketing and hitting the right buttons at the right time
[16:38:40] *** Joins: xsarnik (xsarnik@lounge.fi.muni.cz)
[16:38:49] <abastro[m]> Maerwald, how do you know quite a lot in this area?
[16:38:50] <maerwald> but purely technical, cardano is way more interesting than etc (if you're into that sort of stuff)
[16:38:57] <maerwald> s/etc/eth
[16:39:13] <maerwald> I'm not interested in blockchain as a technology
[16:39:24] <abastro[m]> Yeah, but eth could indeed change its tech I think
[16:39:36] <int-e> it's a fascinating social phenomenon
[16:40:02] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[16:40:07] <maerwald> abastro[m]: I happen to work in that area (sadly, maybe)
[16:40:08] <abastro[m]> Guess many ppl hate govt intervention
[16:40:22] <abastro[m]> Which area?
[16:40:23] <int-e> Mostly for its frauds... https://nitter.allella.fr/Bitfinexed/status/1508618905065078785#m
[16:40:55] <abastro[m]> Do you work in cryptos?
[16:41:01] <int-e> (This is for permissionless blockchains... which /require/ a cryptocurrency to work.)
[16:41:19] <merijn> abastro[m]: It's more likely none of the blockchains will serve well in the future >.>
[16:41:24] <maerwald> abastro[m]: fintech, which blockchain is a part of
[16:41:24] *** Quits: dut_ (~dut@user/dut) (Quit: Leaving)
[16:41:29] <int-e> "crypto" means "cryptography" to me. Does that answer your question?
[16:41:30] <int-e> :P
[16:42:03] <maerwald> abastro[m]: fintech has been interested in Haskell long before blockchain
[16:42:48] <maerwald> and I'd argue it may in fact be one of the primary drivers of industry adoption... but these days there are all sorts of other startups doing haskell
[16:42:54] <maerwald> from robotics to green tech and whatever
[16:43:03] <abastro[m]> Oh, fintech
[16:43:08] <abastro[m]> That is way better tbh
[16:43:42] <abastro[m]> While many fintech companies are indeed looking into some investment towards cryptocurrencies, I guess
[16:43:55] <abastro[m]> Green tech?
[16:44:01] <int-e> You just need to have one look at hackage's package index to realize that Haskell is a general purpose programming language.
[16:44:45] <abastro[m]> I mean I know it's GP, but even GP languages often have some areas it accels at.
[16:45:07] <int-e> . o O ( Yeah. Haskell excels at writing compilers. )
[16:45:10] <int-e> :P
[16:45:41] <abastro[m]> Anyway thanks for reassuring me, so the concern is more strictly financial
[16:46:08] <maerwald> abastro[m]: https://carboncloud.com/
[16:46:54] <maerwald> or health care: https://www.holmusk.com/
[16:47:38] <maerwald> diverse enough... I guess most of these applications are backends
[16:47:41] <int-e> . o O ( word cloud )
[16:48:22] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[16:48:23] <abastro[m]> Interesting
[16:48:26] <int-e> Sorry, I don't speak marketing. https://carboncloud.com/ manages to say *nothing* in 30 words.
[16:49:01] <maerwald> abastro[m]: I also know of a company doing low-level network protocols for telephone providers in Haskell
[16:49:13] *** Quits: jgeerds (~jgeerds@d5364b87.access.ecotel.net) (Ping timeout: 250 seconds)
[16:49:17] <int-e> The "about" link isn't better. "We distill decades of climate research in pixels to reach the responsible to halt climate change"
[16:49:20] <int-e> pixels?
[16:49:48] <maerwald> it's just that those companies don't have the funding of Cardano
[16:49:55] <abastro[m]> I think they mean they are sorting the climate data out
[16:50:01] <abastro[m]> So that it is more accessible
[16:50:09] <int-e> ...I should probably rant about this elsewhere. Or be reasonable and just leave it there.
[16:50:32] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:50:56] <abastro[m]> Also it is better for marketing if it gives good impression to ppl AND ppl do not know what it precise does
[16:51:37] <int-e> I'll say one more thing... They say they don't put up smokescreens but their whole blurb is a smokescreen.
[16:52:39] <abastro[m]> Haha tbh sounds like typical marketing
[16:53:39] <maerwald> industry bashing in haskell :p ...ppl complain about blockchain and now green tech to save the planet isn't good enough
[16:53:58] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[16:54:13] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[16:55:16] <abastro[m]> Well I am still considerate that ppl will attribute cardano's fall towards its choice of language
[16:55:39] <abastro[m]> For choosing a language too hard for adoption
[16:55:44] *** Quits: notableduck (~notabledu@ares.dbalan.in) (Quit: WeeChat 2.7.1)
[16:55:45] <kuribas> idris used to be written in haskell, but they rewrote it.
[16:56:03] <merijn> kuribas: It's written in Idris now, no?
[16:56:06] <kuribas> abastro[m]: tbf, I don't really think haskell has an advantage for crypto.
[16:56:08] <kuribas> merijn: yeah
[16:56:22] <merijn> kuribas: self-hosting is an obvious choice for any compiler
[16:56:36] <merijn> Don't think that's a strike against Haskell
[16:56:42] <merijn> Especially given the similarity
[16:56:55] <abastro[m]> Yea, personally I cannot understand why cardano picked haskell
[16:57:06] <kuribas> and compiles to chez scheme.
[16:57:29] <maerwald> abastro[m]: the had an alternative node implementation in rust
[16:57:32] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:58:08] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[16:58:09] <Hecate> yeah that was a prototype
[16:58:10] <abastro[m]> Yep, rust would make more sense
[16:58:18] <abastro[m]> Tho I guess python would suit them much better
[16:58:41] <abastro[m]> Much easier bar of entry
[16:58:43] <maerwald> Hecate: it actually works and is still developed 
[16:58:52] <maerwald> https://github.com/input-output-hk/jormungandr
[16:59:16] <Hecate> ah I see
[16:59:28] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[16:59:36] <maerwald> there are only myths about why Haskell was chosen over it, though :p
[17:00:01] <maerwald> (I'm guessing that Haskell fits better into the science-first approach from the marketing perspective)
[17:00:55] <abastro[m]> Tho I've indeed seen many ppl  opposed to it simply because haskell
[17:01:06] <maerwald> abastro[m]: in the non-technical blockchain community, yes
[17:01:10] <maerwald> that's understandable
[17:01:34] <abastro[m]> Indeed, and tbh I find most of the community non-technical
[17:01:49] <maerwald> to write smart contracts, you now need senior haskell devs with blockchain experience... 
[17:02:00] <maerwald> instead of just some javascript trash
[17:02:03] <abastro[m]> Also they somehow promote their coin as "safer" just because they use haskell
[17:02:26] <abastro[m]> Or some random python moneky
[17:02:49] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[17:03:27] <abastro[m]> But I think their tone of "using haskell makes the chain bulletproof" does not make sense as well
[17:03:38] <maerwald> for a blockchain, adoption matters... Haskell is seen as an issue there
[17:04:01] <maerwald> abastro[m]: I've never actually heard that argument
[17:04:07] <abastro[m]> Simply adopting a language won't improve the security just because.
[17:04:25] <maerwald> Haskell doesn't even have strong focus on security :p
[17:04:50] <juri_> Haskell doesn't have a native SSL implementation worth using.
[17:05:02] <maerwald> it probably shouldn't
[17:05:29] *** Quits: gentauro (~gentauro@user/gentauro) (Ping timeout: 256 seconds)
[17:05:40] <juri_> I work at a place that writes security software in haskell. sometimes, it gets painful.
[17:05:53] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[17:06:00] <abastro[m]> Charles Hoskinson, IOHK CEO, said that in a twitter
[17:06:12] <maerwald> abastro[m]: that's marketing
[17:06:22] <abastro[m]> Yep
[17:06:33] <abastro[m]> So that became one of the criticisms
[17:06:52] <abastro[m]> Sometimes leaking onto the haskell end as well
[17:07:08] <maerwald> there's some truth to it though, because the consensus protocol uses very heavy type-level programming
[17:07:17] <maerwald> if you consider that, maybe
[17:07:40] <abastro[m]> Maybe, but that doesn't make the protocol inherently safer, does it
[17:07:52] <maerwald> protocol correctness and types definitely correlate... but low-level security is a completely different topic
[17:07:55] <abastro[m]> Like there is certain limit types could get you far
[17:08:14] <abastro[m]> Low level security is important in crypto as well, right
[17:09:08] <abastro[m]> Btw, haskell is still small even in fintech area right? I was said that many ppl never heard of haskell in fintech area
[17:09:32] <maerwald> not sure any blockchain dev team runs proofs on their node binaries, though
[17:10:00] *** Quits: feliix42 (~felix@gibbs.uberspace.de) (Read error: Connection reset by peer)
[17:10:03] *** Quits: phma (~phma@host-67-44-208-11.hnremote.net) (Read error: Connection reset by peer)
[17:11:50] *** Joins: phma (~phma@host-67-44-208-132.hnremote.net)
[17:12:18] *** Joins: gentauro (~gentauro@user/gentauro)
[17:12:23] <abastro[m]> How big is haskell in fintech in general
[17:12:42] <abastro[m]> Still minority, right?
[17:12:51] <maerwald> Java is more popular there for sure
[17:13:01] <abastro[m]> Simply because haskell is minority in the whole scene
[17:13:04] <abastro[m]> Yep
[17:13:11] *** Joins: feliix42 (~felix@gibbs.uberspace.de)
[17:13:14] <abastro[m]> Idk what secure Java looks like but eh
[17:13:34] <abastro[m]> I heard many also still use COBOL
[17:14:30] <maerwald> banks don't have very large APIs exposed to the public internet :p
[17:15:04] <abastro[m]> Yea
[17:15:33] <abastro[m]> Guess that is why some manage to keep COBOL in their codebase
[17:15:42] <maerwald> Java has excellent paid support and you can compile old programs with very new compilers. Something that's impossible in Haskell
[17:16:26] <abastro[m]> Ouch
[17:16:45] <abastro[m]> Lack of backward compatibility hits hard
[17:16:58] <maerwald> and even in formal methods, it's not any worse than Haskell, probably... because the type system can so easily be extended
[17:17:16] <maerwald> https://www.cs.cornell.edu/jif/
[17:17:45] *** Joins: ph88 (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de)
[17:17:51] *** Joins: jinsun (~jinsun@user/jinsun)
[17:18:03] <maerwald> haskell has a couple of papers about IFC as well (one with arrows, one with monads afair)
[17:18:21] <maerwald> I tried both... java was easier :p
[17:19:03] <maerwald> except I got eye cancer from looking at the code
[17:19:19] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[17:19:36] *** Joins: abastro (~abab9579@220.75.216.63)
[17:19:36] *** Quits: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813) (Read error: Connection reset by peer)
[17:19:57] <abastro[m]> IFC?
[17:20:09] <abastro[m]> I did not know that Java could be extended
[17:20:13] <maerwald> information flow control
[17:20:45] <abastro> Now I wonder why haskell is used in fintech at all
[17:21:11] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:21:59] <maerwald> probably has to do more with what type of engineers those companies attract
[17:23:33] <abastro> I see, they might even be able to employ haskellers without much problem
[17:23:36] <merijn> abastro: It's less true now (since Haskell has been growing a lot the past decade(s)), but 10 years ago the average Haskeller was *much* more skilled than the average "anything else" programmar. So it's a good selection filter for looking for expensive, experienced engineers
[17:23:53] <merijn> And letting them use the tools they like is just a negotiation strategy
[17:24:22] <abastro> Also explains why haskell use is much uncommon in smaller countries
[17:24:36] *** Joins: lainon (~lainon@c-68-46-201-40.hsd1.al.comcast.net)
[17:24:51] <abastro> Hm, so nowadays average haskell programmers are comparable to other average programmers?
[17:25:21] <merijn> I don't think so, but it's hard to judge since there's no real good way to poll. It also depends how you define "haskell programmer" :)
[17:25:35] <maerwald> yeah, if you get a star programmer to join your company, the last thing you want to do is tell them what tech to use
[17:25:45] <abastro> Aha, I se
[17:25:51] <abastro> s/se/see
[17:26:01] <abastro> Haskell had many star programmers?
[17:26:08] <maerwald> every language has them
[17:26:40] <maerwald> but I'd argue they're the ones introducing new languages to the industry
[17:27:15] <maerwald> because the company has enough confidence in whatever decision they make
[17:28:46] *** Quits: lainon (~lainon@c-68-46-201-40.hsd1.al.comcast.net) (Client Quit)
[17:31:02] <abastro> This kind of star programmers would be rarer in smaller countries I guess
[17:31:21] <abastro> Which explains why it veers towards certain language
[17:31:38] <maerwald> abastro: nah, they just leave for silicon valley :p
[17:32:26] <abastro> !oh
[17:32:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:33:21] <abastro> I wonder how much talent they would have, so that they can simply go for silicon valley
[17:34:36] <exarkun> "Talent" is kind of a confusing idea here.
[17:34:53] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[17:34:55] <abastro> Is it?
[17:35:10] <exarkun> It's not like people are born as expert Haskell programmers
[17:35:39] <exarkun> And it's also not the case that if your only skill is being an amazing Haskell programmer you'll be a good addition to any particular team
[17:36:01] <exarkun> Also a lot of SV companies hire a lot of people who are not amazing programmers (for good reasons and for bad reasons).
[17:36:56] <abastro> Yep, I mean those haskellers who was talented enough to be hired by SV companies
[17:37:15] <exarkun> But did they get hired because they are "talented"?
[17:37:17] <Hecate> it's not just talent but also culture fit
[17:37:27] <abastro> If they are not talented and they prefer haskell, why would they hire them?
[17:37:34] <abastro> Culture fit?
[17:37:38] <Hecate> and some dose of nepotism
[17:37:41] <exarkun> You assume tech hiring is a rational process based on total knowledge.
[17:37:42] <Hecate> well yes
[17:37:51] <Hecate> abastro: have you ever been involved in recruiting?
[17:38:11] <maerwald> Never seen a company that cares about culture fit beyond being scared about their public image
[17:38:21] <exarkun> maerwald: I've seen plenty
[17:38:27] <Hecate> same
[17:38:40] <exarkun> There is quite a range of understanding about what "culture fit" actually /means/
[17:38:57] <maerwald> My experience is that toxic employees will always be tolerated if they're very productive.
[17:39:05] <exarkun> Sometimes it just means "it was easy to have an enjoyable conversation during the interview"
[17:39:18] <exarkun> maerwald: That sounds like a bummer, sorry to hear it.
[17:39:32] <abastro> Never involed in recruiting, yes
[17:39:43] <exarkun> I am not skeptical at all that there are companies that run that way (I worked at one for a while).
[17:39:53] <abastro> My english is bad enough to not understand what culture fit means.
[17:40:01] <exarkun> But I have also worked at companies that veer the other way ("culture fit" is priority, technical ability is a distant second).
[17:40:22] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:40:33] <abastro> Does it mean if the person is good at pleasing the higher-ups?
[17:40:49] <abastro> Like being great at flattery? Because that is one of the prime factors of being hired in where I live
[17:40:50] <maerwald> "culture fit" as in "is excited about agile"? :p
[17:41:05] <Hecate> abastro: it's evaluating how much the person in front of you will integrate in your organisation's culture
[17:41:14] <Hecate> sometimes they're looking for people with no life
[17:41:14] <abastro> Wait, isn't that like
[17:41:19] <abastro> Much, MUCH reasonable
[17:41:23] <Hecate> sometimes they're looking for people who are not assholes
[17:41:28] <shapr> yeah, that
[17:41:29] <abastro> Like it could be more reasonable than just technical skills
[17:41:45] <exarkun> abastro: Sure.  On the surface, it sounds like a good thing.
[17:41:45] <abastro> I expected them to hire those who are just great at flattery
[17:42:06] <abastro> And good at hiding/covering what higher-up does
[17:42:20] <shapr> For example, Recurse Center entrance filter is mostly about being kind. They assume you can be trained to have more technical skills, that's easier than retraining someone to be pleasant and nice.
[17:42:31] <abastro> I mean, the culture fit could backfire and is bad for certain cases I guess, but that is not what I expected
[17:42:39] <exarkun> The downside is that it leaves a lot of room for bias in the process.
[17:42:46] <abastro> Indeed
[17:42:56] <exarkun> Maybe a recruiter didn't get along with a candidate because the /recruiter/ is the asshole...
[17:43:15] <shapr> exarkun: I've experienced that
[17:43:19] <Hecate> this is why you don't have *one* person interacting with a candidate
[17:43:20] <maerwald> exarkun: yeah, I've never considered "culture fit" when I interviewed. Because it's too unspecific. I look for specific things.
[17:43:32] <abastro> Better than hiring based on flattery ability at least
[17:43:38] <exarkun> maerwald: I tend to prefer to look for concrete, quantifiable traits too, yea.
[17:43:57] <maerwald> the main thing I look for is engagement
[17:44:00] <abastro> Or being employed through lines
[17:44:03] <exarkun> I mean, if someone acts like a total asshole in an interview, I might disqualify them.
[17:44:22] <maerwald> if a candidate starts babbling excitedly about some tech I have never heard of... great
[17:44:27] <exarkun> But if they're bad at eye contact, if they're nervous, if they have different hobbies than me, none of that stuff is relevant to whether they'll be good at the job.
[17:44:32] <abastro> I feel like culture fit should be minimum requirement
[17:44:58] <exarkun> abastro: How do you measure it in an interview?
[17:45:02] <abastro> Babbling excitedly about some tech never heard of, wouldn't that drop the candidte right off the bat?
[17:45:10] <abastro> I mean, yea, hard dto measure
[17:45:36] <abastro> Won't companies dismiss ppl who speak about new techs in interview
[17:45:45] <exarkun> Anyway there's as many hiring process philosophies as there are managers at companies, or more
[17:45:58] <abastro> They'd rather consider ppl who fits well with company's existing systems
[17:46:00] <exarkun> And as a first approximation, nobody /really/ knows how to generalize the good ones.
[17:46:28] <exarkun> abastro: That's a great way to build a rigid monoculture
[17:46:44] <abastro> Yeah, most of the companies in my country are rigid monocultures
[17:46:54] <abastro> Isn't it what companies are supposed to be?
[17:46:54] <exarkun> If everyone on the team likes and knows the same tools, you're going to have a lot of blind spots.
[17:46:57] <juri_> i hire a lot, and a lot of what i'm looking for is strong opinions. i'm here to hire people good at what they do, and to listen to them, so i don't sound dumb / do the wrong thing.
[17:47:09] <abastro> Wow
[17:47:10] <maerwald> exarkun: exactly, so maybe the "culture fit" angle is actually detrimental to the goal ;)
[17:47:15] <exarkun> In some industries, maybe that's fine.  In software, probably not so much.,
[17:47:17] <abastro> That sounds like truly another world
[17:47:19] <exarkun> maerwald: right
[17:47:30] <abastro> I mean, that is precisely what is happening in SW scene in my country
[17:47:34] <exarkun> In some ways, the other popular buzzword "diversity" is the opposite of "culture fit".
[17:47:39] <abastro> I think it should be similar for Japan and China
[17:47:44] <exarkun> Culture fit - hire people just like us
[17:47:48] <exarkun> Diversity - hire people different from us
[17:47:54] <exarkun> It's fun when a company wants to do both at the same time.
[17:48:17] <abastro> Better be fun if you can't do it great
[17:48:25] <exarkun> :)
[17:48:31] <juri_> i don't see those as oposing positions. my team is very argumentative, so people like us can defend their positions, and more importantly, be wrong gracefully.
[17:48:44] <abastro> Rigid SW companies clinging to Java 5/6 is stereotypical SW tech company
[17:49:04] <abastro> Or with jQuery for frontend
[17:49:54] <raehik> Is it possible to push a package to Hackage that relies on a non-Hackage dependency (i.e. a directory in a GitHub repo, specified in cabal.project)?
[17:50:04] <Hecate> raehik: nope and that's by design
[17:50:13] <Hecate> every reasonable package repo will put this limit on you
[17:50:31] <maerwald> raehik: you'll have to bundle/vendor that dependency into your code
[17:50:31] <raehik> mm. I had kind of imagined
[17:50:51] <abastro> Actually you guys are mostly working in best kinds of companies right
[17:50:59] <raehik> cheers Hecate , maerwald !
[17:51:06] <Hecate> I'm working for a Swedish legaltech that uses Haskell in the backend
[17:51:09] * shapr hugs Hecate for awesome
[17:51:26] <Hecate> my managers are kind, competent and open to new ideas
[17:51:29] <abastro> Yep, sounds like one of the best
[17:51:34] <Hecate> I'd say I found a very good fit
[17:51:48] <Hecate> oh, and we're not controlled by the accountants
[17:51:50] <shapr> Hecate: jättekul!
[17:51:55] <Hecate> even though we're not a startup
[17:51:57] <abastro> I imagine only 1% of SW companies would be like that
[17:52:02] <juri_> I'm working in management at a secure messaging company with a Haskell based backend.
[17:52:13] <juri_> I have become the enemy.
[17:52:17] <Hecate> shapr: yeah it's cool :)
[17:52:20] <abastro> enemy?
[17:52:22] <Hecate> juri_: you're at Wire? :)
[17:52:36] <abastro> Oh. you mean manager?
[17:52:47] <juri_> Hecate: yeah. backend chapter lead. :)
[17:52:54] <Hecate> juri_: :)
[17:53:33] <juri_> it's very stressy, but i learn a lot, so.. :)
[17:53:50] <Hecate> juri_: do you get to store this knowledge somewhere outside of the company?
[17:53:59] <Hecate> like writing public blog posts or in open-source projects?
[17:54:05] <abastro> I guess if you reach higher, more advanced companies, it is harder to see troubles usual in typical companies.
[17:54:15] <maerwald> juri_: Berlin?
[17:54:15] *** Joins: ccntrq1 (~Thunderbi@dynamic-095-116-001-154.95.116.pool.telefonica.de)
[17:54:21] <juri_> maerwald: yep.
[17:54:30] <maerwald> think I've been to a talk at your company then :p
[17:54:30] *** Quits: ccntrq (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca) (Remote host closed the connection)
[17:54:30] *** ccntrq1 is now known as ccntrq
[17:54:35] <abastro> Like those being rigid in choices or preference towards simple obedience
[17:55:30] <juri_> Hecate: no, honestly, it takes up so much of my life it's hard to work on my actual passion projects. plus, i don't write well / much. landed in management due to a car accident, that took my "i grind out code all day" hands away.
[17:55:33] <Hecate> I don't want to live my current company but I'd love to experiment with a worker cooperative one day
[17:55:46] <Hecate> juri_: ow :-(
[17:55:50] <Hecate> I see
[17:56:12] <Hecate> maerwald: take care of your hands, otherwise you're going to end up in management!
[17:56:27] <abastro> When management position is pain
[17:56:33] <maerwald> Hecate: I lost a finger last year already ;) coding with 9 now
[17:56:49] <Hecate> maerwald: is it still attached?
[17:56:52] <juri_> i WAS a linux kernel hacker when that was cool. and when cool was cool. moved to haskell because thinking all day to write 50 lines is more effective than writing code for 30 minutes a day.
[17:56:53] <maerwald> yep
[17:56:57] <maerwald> just not usable
[17:57:03] <juri_> maerwald: emacs pinky?
[17:57:07] <Hecate> oki
[17:57:10] <raehik> quick follow up question, who's to stop me chucking this (GPL2) non-Hackage lib onto Hackage? (sorry to interrupt storytime :( )
[17:57:21] <maerwald> juri_: left index finger
[17:57:26] <maerwald> the worst to lose :p
[17:57:29] <raehik> do Hackage maintainers ask for proper creds or whatever, I'm unsure
[17:57:33] <maerwald> covers 6 keys
[17:57:38] <juri_> maerwald: ouch.
[17:58:01] <Hecate> raehik: https://hackage.haskell.org/accounts
[17:58:18] <Hecate> wait, is it your library, raehik ?
[17:58:27] <raehik> Nope
[17:58:45] <abastro> sorry for interrupting questions, I ranted and started this convo
[17:58:53] <raehik> it's keystone, they have Haskell bindings https://github.com/keystone-engine/keystone/tree/master/bindings/haskell
[17:59:09] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:59:26] <juri_> I ended up with untreatable nerve damage, due to a car accident. cracked C3. had to move to split keyboard / custom dvorakish keymap.
[17:59:27] <raehik> no being sorry for *discussion* on IRC! :D
[17:59:30] <Hecate> raehik: ask them first ;-)
[17:59:45] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[17:59:52] <raehik> Hecate: AGH fine but now my builds are all broken >:(
[17:59:56] <raehik> ty
[18:00:08] <Hecate> juri_: aouch, cervical? damn :/
[18:00:41] <juri_> the above ^-- is enough conversation i'm going to have to rest for a bit. biology sucks. need to 3d print a new me. hense, github.com/Haskell-Things/ , my 'all 3d printing tools in haskell' project.
[18:00:42] <abastro> Think the one commited on the repo was one of active ppl in haskell discourse
[18:01:00] <Hecate> juri_: rest well, see you later
[18:01:18] * juri_ nods
[18:01:23] <maerwald> juri_: I'm also 3d printing my own keyboards ^^
[18:01:27] <abastro> (so it would be not hard to contact them - hardfully)
[18:01:32] <maerwald> but kinesis advantage 2 is still the best
[18:01:36] <abastro> s/hardfully/thankfully
[18:01:47] <Hecate> juri_: did you see the extra thumb controlled with big toe movement?
[18:02:04] <Hecate> https://www.youtube.com/watch?v=OmcM683JIgU
[18:02:26] <abastro> Hm seeing as how ppl lose fingers etc.. is SW one of the hazardous job?
[18:03:34] <maerwald> you should check out this if you're looking for ergonomic splits: https://www.kickstarter.com/projects/moergo/glove80-the-incredibly-comfortable-ergonomic-keyboard
[18:04:11] <maerwald> abastro: sitting is one of the most unhealthy things you can do, yes
[18:04:23] <abastro> Oh no
[18:04:37] <maerwald> there are studies indicating it's worse than being a chain smoker
[18:05:06] <abastro> I should be careful then
[18:05:12] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[18:05:43] <exarkun> get up and take a walk once in a while, or get a standing/sitting desk so you can change your position throughout the day
[18:06:08] <abastro> Gotta make sure to move around!
[18:06:30] <maerwald> exarkun: only building real muscle helped me
[18:06:36] <maerwald> like, back, shoulders
[18:06:46] <exarkun> sure, there's levels
[18:06:58] <exarkun> and I usually prefer to believe that most people are about the same, while they're healthy
[18:07:04] <exarkun> and then everybody manages to break themselves in a unique way :)
[18:07:27] <maerwald> at least we met the deadline
[18:07:38] <exarkun> for building muscle, I recommend getting a sheep farm
[18:08:10] <maerwald> they need attention *every* day, lol
[18:08:44] <maerwald> maybe there's an app for this
[18:08:59] <Clint> attending to sheep?
[18:09:57] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[18:10:37] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Ping timeout: 240 seconds)
[18:10:39] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[18:11:43] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:16:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:16:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:16:28] *** Joins: wroathe (~wroathe@user/wroathe)
[18:17:03] *** Quits: ajb_ (~ajb@cupid.whatbox.ca) (Quit: bye)
[18:17:09] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[18:19:05] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[18:19:18] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[18:22:31] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:2b26:10cb:f0bf:5e24) (Quit: WeeChat 2.8)
[18:26:15] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Quit: Lost terminal)
[18:26:41] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[18:31:18] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[18:31:55] *** Quits: raym (~raym@user/raym) (Remote host closed the connection)
[18:35:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[18:36:51] <juri_> Hecate: interesting, no. :)
[18:37:02] <maerwald> juri_: is Artyom still working there?
[18:37:30] <juri_> maerwald: nope, he left about 6 months after i joined. i do miss him. :)
[18:37:45] <juri_> his classes were nice. i attended them. :)
[18:39:07] <merijn> weightlifting helped a ton with removing precursor RSI symptoms and not going to the gym a lot the past 2 years has noticably made stuff worse
[18:39:08] <Hecate> his Aeson guide is fantastic
[18:39:22] <Hecate> get buffed!
[18:39:50] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[18:39:53] <merijn> Pretty sure my personal max halved in two years >.> I should go back to the office again so I get back into gym habit :p
[18:40:12] <juri_> Hecate: I haven't managed to get through that, but it's in my browser atm. my haskell is.. what haskell looks like when a hobbled C programmer moves to haskell. :)
[18:40:25] <Hecate> juri_: ;-D
[18:40:35] <Hecate> it's okay, I trust you to do C
[18:41:23] <juri_> I am still breaking myself of all of the internalized micro-optimizations from writing C for 20 years. it's just not needed!
[18:41:50] <juri_> that said, i swear i ran across a haskell compiler bug a few days back. my first!
[18:42:23] <maerwald> merijn: push ups (the ones with elbows close to the torso)... don't need gym :p
[18:42:40] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[18:43:53] *** Joins: raym (~raym@user/raym)
[18:45:21] <maerwald> I'll send you a bottle of Auchentoshan if you manage to do more than 3 (twitch stream?)
[18:47:40] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[18:48:14] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[18:48:20] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[18:48:25] *** Joins: jgeerds (~jgeerds@d5364b87.access.ecotel.net)
[18:48:55] *** Joins: ajb (~ajb@cupid.whatbox.ca)
[18:49:31] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[18:49:36] *** Quits: ajb (~ajb@cupid.whatbox.ca) (Read error: Connection refused)
[18:51:36] <merijn> Pushups are *literally* the most hellish exercise
[18:51:39] *** Quits: alp (~alp@user/alp) (Ping timeout: 250 seconds)
[18:51:46] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[18:52:19] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:52:22] <merijn> maerwald: I could do about 10 proper ones. Now probably 1-2? *Maybe* 3 if I struggle a lot
[18:52:34] <maerwald> start the stream :D
[18:52:37] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[18:52:37] *** Joins: nate1 (~nate@98.45.152.91)
[18:52:43] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[18:52:46] <merijn> Three Wood is the only Auchentoshan worht a damn, though :p
[18:53:11] <maerwald> sure, what else would I have
[18:53:29] <merijn> The frustration to effectiveness ratio for weightlifting is better than pushups. I quite like oly lifting
[18:54:25] * byorgey wants to know how I can get a bottle of Auchentoshan too
[18:54:43] <maerwald> :D
[18:55:41] <maerwald> merijn: IME, the main problem is weak core muscles... that leads to imbalances in sitting posture, that leads to back and neck issues, goes to shoulders and elbows and finally hits your finger. And only then you notice :D
[18:55:41] <merijn> byorgey: Pushups, apparently :p
[18:56:00] <maerwald> and then wonder why your finger hurts
[18:56:03] <merijn> maerwald: Sounds about right from what I know
[18:56:22] <maerwald> then you go to the doc, they do MRI on your finger and say "hey, that looks fine"
[18:56:24] <maerwald> :D
[18:56:28] <merijn> Weightlifting is pretty good for core
[18:56:45] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[18:56:46] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Read error: Connection reset by peer)
[18:56:53] <merijn> But yeah, so are pushups
[18:57:03] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[18:57:16] *** Quits: nate1 (~nate@98.45.152.91) (Ping timeout: 246 seconds)
[18:57:17] <merijn> Pushups require quite a lot of base strength in shoulders/arms to begin, though
[18:57:31] <merijn> And it's easier to do bad pushups, which renders them drastically less effective
[18:58:49] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[18:58:57] <maerwald> we could start a Haskell Foundation pushup group
[18:59:20] *** Joins: lispy (~lispy@82.212.115.165)
[18:59:39] *** Quits: acidjnk (~acidjnk@p200300d0c7049f56dc923130dc4d7bd3.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[19:01:22] <juri_> No. i would die. :)
[19:02:09] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[19:09:03] *** Joins: ccntrq1 (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca)
[19:10:36] *** Quits: ccntrq (~Thunderbi@dynamic-095-116-001-154.95.116.pool.telefonica.de) (Ping timeout: 240 seconds)
[19:10:36] *** ccntrq1 is now known as ccntrq
[19:14:53] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[19:16:48] *** Joins: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com)
[19:16:55] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[19:20:01] *** Joins: ajb (~ajb@cupid.whatbox.ca)
[19:20:42] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[19:20:58] *** Joins: dut (~dut@user/dut)
[19:22:32] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[19:23:49] <abastro> What's so hard with 10 pushups
[19:24:23] <abastro> Oh I just thought it was matter of putting my body close to the floor
[19:24:33] *** Quits: ajb (~ajb@cupid.whatbox.ca) (Client Quit)
[19:25:39] <merijn> abastro: There's two kinds of people: People who think 10+ pushups are hard and people who are doing their pushups wrong :D
[19:26:00] <merijn> (technically there's also the extremely ultra-fit, but those are a negligible percentage of the population)
[19:26:59] <exarkun> isn't "... ultra-fit ... negligible percentage ..." a tautology
[19:27:10] <exarkun> if more people were fitter then you would have to be even fitter to be ultra-fit
[19:27:33] <exarkun> Any good / widely-used Haskell source formatters I can plug into my emacs config?
[19:28:00] <juri_> ormolu?
[19:28:35] <exarkun> > Any of several copper and zinc or tin alloys resembling gold in appearance
[19:28:37] <lambdabot>  <hint>:1:5: error: parse error on input ‘of’
[19:28:42] <exarkun> sorry lambdabot 
[19:29:01] <abastro> I have to practice more correct pushups then
[19:29:03] <exarkun> oh yea it's on melpa, great, ty
[19:29:15] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:29:21] <exarkun> juri_: is the question mark that you're not sure if it is good or if you're not sure if it's widely-used or something else? :)
[19:29:24] <abastro> I mean, I saw many ppl who actually do 10 pushups and they looked great in posture. Though that might be illusion :P
[19:29:41] <juri_> exarkun: it's the only one i know. :)
[19:29:56] <exarkun> abastro: 10 push-ups is only about as hard as writing a nice "hello world" program
[19:29:56] <merijn> Good auto-formatter is a contradiction ;)
[19:30:06] <exarkun> looks hard to someone who never tried, otherwise pretty trivial
[19:30:09] <merijn> exarkun: It's really not
[19:30:26] <abastro> I'd say 10 pushups are not trivial at least, though.
[19:30:29] <merijn> Takes me a solid month of routine pushup practice to be able to properly do 10
[19:30:42] <abastro> I mean, who doesn't do routine pushups
[19:30:46] <exarkun> And there are a lot of people who would take at least that long to get to "hello world" :)
[19:32:31] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[19:36:20] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:40:48] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:41:34] <maerwald> exarkun: not chicken pushups 
[19:41:47] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[19:41:49] <maerwald> elbows close to the torso and try again ;)
[19:41:51] <exarkun> Are these pushups that you do while a chicken is standing on you?
[19:42:01] <exarkun> Ah I see.
[19:42:17] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:42:29] <maerwald> no, it means you spread your elbows, which causes your chest and supraspinatus to do most of the work
[19:43:06] <maerwald> also increases excersice injury
[19:43:14] <exarkun> delightful
[19:43:42] <exarkun> I am a fan of taking care of the equipment
[19:43:46] <abastro> I thought pushup was a chest exercise
[19:43:53] <InstX1> exarkun -> [exa]?
[19:43:57] <exarkun> InstX1: nope
[19:44:19] <InstX1> also maerwald: if I'm reading it correctly, is the new HF director viewing Haskell in the same way I do, i.e, we need more posers, codemonkeys, kids, and randumbs?
[19:44:33] <maerwald> wat?
[19:45:06] <InstX1> https://discourse.haskell.org/t/new-executive-director-for-the-haskell-foundation/4290
[19:45:22] <InstX1> David has impressed upon me the importance of reaching out beyond current Haskell communities, seeking new voices and approaches. Haskell is a language that anyone can master – but we have work to do to have its perception match that reality. I know David is committed to that course of action, and of focusing on the practical aspects of Haskell use that affect the Haskell community broadly.
[19:45:36] *** Joins: rawley (~rawley@142.99.241.242)
[19:45:48] <InstX1> my point is that you need more kids to learn haskell as a first language, you want managers to learn haskell to create toy apps for their needs that their IT department can clean up
[19:45:59] <maerwald> I'm not sure why you're asking me. I don't know the guy, but only heard high praises.
[19:46:03] <InstX1> oh okay
[19:46:17] <InstX1> well, you know, you're fairly high up, what the hell would we do without GHCup? :)
[19:46:29] <maerwald> it's a small tool -.-
[19:46:37] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[19:46:51] <InstX1> it's an important one
[19:47:09] <InstX1> if Haskell Platform were dead, and GHCup didn't exist, I probably wouldn't have given Haskell another shot
[19:47:21] <abastro> "Small tool" wow
[19:47:26] <InstX1> Modesty :)
[19:47:29] <abastro> someone better quote it
[19:47:41] <maerwald> Well, it is. If you compare it with HLS or cabal
[19:48:00] <abastro> Without ghcup it is much bigger pain to install cabal/HLS
[19:48:03] <InstX1> if both stack and cabal teams approached you
[19:48:21] <InstX1> to merge projects, i.e, better integration between stack or cabal with GHCup
[19:48:28] <InstX1> which team would you choose?
[19:49:07] <maerwald> that's an odd question
[19:49:18] <maerwald> let's say integration with cabal is easy, because it mostly follows unix principles
[19:49:28] <maerwald> with stack I tried, but https://github.com/commercialhaskell/stack/pull/5585
[19:49:29] <InstX1> stack i uninstalled
[19:49:35] <InstX1> because stack created like 20 different GHCs
[19:49:43] <InstX1> and kept on messing with my path variables
[19:49:54] <maerwald> yeah, there's a relatively simple solution to it... my patch isn't even very big
[19:50:35] <abastro> Wow, no convo?
[19:50:36] <maerwald> and I found stack codebase somewhat pleasent to work with, tbh
[19:51:15] <abastro> Surprising seeing no discussion in the PR
[19:51:40] <maerwald> I didn't try very hard (like pinging maintainers per email) though
[19:51:56] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[19:52:13] *** Joins: alp (~alp@user/alp)
[19:52:16] <abastro> I see, still
[19:52:16] <maerwald> Snoyman seems to have little time for stack atm has he explained in his blog post
[19:52:29] <abastro> Hmm
[19:52:43] <abastro> <del>Cabal + Stack when</del>
[19:53:16] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[19:53:17] <merijn> InstX1: There is no stack team left :p
[19:53:22] <merijn> So that's a simple decision
[19:53:54] <maerwald> merijn: tbf, it's quite maintainable (module a few rather complicated libraries)
[19:54:02] <maerwald> *modulo
[19:54:07] <maerwald> (like pantry, brr)
[19:54:11] <InstX1> merijn: so stack is officially discontinued?
[19:54:15] <maerwald> no
[19:54:18] <InstX1> wait, is Snoyman the guy who got fed up because of Cardano?
[19:54:35] <merijn> InstX1: stack is "community maintenance"
[19:55:19] <juri_> maerwald: remind me to rant at you about 'mostly' following unix principles. spoiler: I ship/use a Makefile for all of my projects.
[19:55:37] <InstX1> but it's basically dead, it'll be kept maintained vs security issues, but it's not moving forward
[19:55:37] <exarkun> wait, what happened to stack?
[19:55:42] <InstX1> it feels like GHCup ate stack :)
[19:55:50] <abastro> Stack is relatively unmaintained?
[19:56:01] <abastro> Eh, ghcup and stack has different niche
[19:57:11] <abastro> I did not know cabal follows unix principles "mostly"
[19:57:16] <maerwald> I think the main issue is that it's still based on Cabal-3.2
[19:57:37] <abastro> Guess some noncomplliant parts are not so compatible
[19:57:38] <maerwald> so it's kind of at the mercy of cabal devs, in fact... wrt backwards compat
[19:59:04] <merijn> exarkun: Snoyman had another kid :p
[20:00:42] <exarkun> aha
[20:00:53] <maerwald> https://www.snoyman.com/blog/babies-oss-maintenance/
[20:01:42] *** Quits: noctux (~noctux@user/noctux) (Read error: Connection reset by peer)
[20:02:02] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[20:02:08] <maerwald> at any rate... even if stack will not survive, I'm pretty sure stackage will
[20:03:00] *** Joins: dschrempf (~dominik@mobiledyn-62-240-134-128.mrsn.at)
[20:03:31] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[20:04:20] *** Joins: noctux (~noctux@user/noctux)
[20:04:59] <maerwald> there's already a cabal branch where you can import remote stackage set in your cabal.project
[20:05:26] <sm> good morning all!
[20:05:28] <maerwald> https://github.com/haskell/cabal/pull/7783
[20:05:28] * sm learns about pushups
[20:05:52] <maerwald> sm: how many can you do?
[20:06:48] <abastro> How do you put star like that? Messages like `* {nick} foo bar`
[20:06:57] <maerwald>  /me ...
[20:07:00] <sm> that is an embarassing question.. :/ I typically do 10, can reliably do 20, if I want to really suffer could probably do a little more
[20:07:15] *** Joins: _________ (~nobody@user/noodly)
[20:08:15] * abastro tries the command
[20:08:23] <abastro> Thx! Learned a lot toay
[20:08:29] <abastro> s/toay/today
[20:09:12] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[20:09:14] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[20:12:27] *** Joins: econo (uid147250@user/econo)
[20:12:40] *** Quits: ccntrq (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca) (Remote host closed the connection)
[20:12:58] *** Joins: ccntrq (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca)
[20:13:12] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:15:37] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[20:18:59] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[20:19:29] *** Joins: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net)
[20:19:56] *** Quits: odnes (~odnes@5-203-245-187.pat.nym.cosmote.net) (Read error: Connection reset by peer)
[20:20:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:21:33] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[20:22:45] *** Joins: jakalx (~jakalx@base.jakalx.net)
[20:23:51] <sm> maerwald: how about you ? and what's a "proper" arms-in pushup - how low do you go ?
[20:24:39] <maerwald> I can do 10. 3 sets, the last one usually 6 or 7
[20:24:54] <maerwald> slow, elbows to the torso
[20:25:18] *** Quits: dschrempf (~dominik@mobiledyn-62-240-134-128.mrsn.at) (Quit: WeeChat 3.4.1)
[20:25:21] *** Joins: ss- (~ss-@187.83.249.216.dyn.smithville.net)
[20:26:33] <sm> 3 x 10 ? how long do you reset between sets ? how low do you go ? If you don't mind me asking
[20:26:45] * sm will use "catch up with maerwald" to motivate
[20:27:01] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[20:27:13] *** Joins: Papercombo (~Papercomb@194.210.221.87)
[20:27:16] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.4.1)
[20:27:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:27:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[20:29:01] <maerwald> 1-2 minutes break
[20:29:20] *** Joins: arjun (~arjun@user/arjun)
[20:30:14] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[20:30:41] <sm> ok, I'm going to assume "to 90 degree elbows"
[20:30:53] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:31:31] *** Quits: Papercombo (~Papercomb@194.210.221.87) (Ping timeout: 250 seconds)
[20:31:56] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[20:32:24] <ss-> I'm trying to use `stack build --profile` to build a project with profiling, but no matter what I do I keep getting errors like "Perhaps you haven't installed the profiling libraries for package `base-4.15.1.0`" when building dependencies. I've tried rm -rf ~/.stack (and stack exec -- which ghc shows ~/.stack/...). anyone have any ideas for what I
[20:32:25] <ss-> might be doing wrong here?
[20:32:53] <geekosaur> the profiling libraries for base have to come with your ghc, stack cannot build them
[20:32:59] <geekosaur> (base is wired into ghc)
[20:33:13] <geekosaur> where did you install your ghc from?
[20:34:01] <ss-> I used to stack to install ghc iirc, or at least I thought I did
[20:34:17] <abastro> Think lower than 90 degree elbows is the way to go with pushups
[20:34:34] <ss-> on arch linux, I think I did...sudo pacman -S stack into stack build?
[20:34:34] <merijn> abastro: nose touching ground with straight back is
[20:34:46] * sm groans
[20:34:54] <merijn> ss-: Never trust arch pacman for haskell tooling
[20:35:21] <merijn> ss-: They (intentionally!) install a bunch of stuff that's non-functional for default Haskell usage
[20:35:25] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:35:29] <sm> hahaha.. how did I guess it was arch
[20:35:43] *** Quits: jgeerds (~jgeerds@d5364b87.access.ecotel.net) (Ping timeout: 256 seconds)
[20:35:56] <maerwald> someone should tell arch devs how much support work they caused to us
[20:36:00] <ss-> what's the easiest fix? uninstall stack and reinstall with ghcup or something?
[20:36:05] *** Joins: fendor_ (~fendor@178.115.44.149.wireless.dyn.drei.com)
[20:36:18] <maerwald> ss-: stack should install correct GHCs by itself unless you use --system-ghc
[20:38:25] *** Quits: fendor (~fendor@178.165.181.49.wireless.dyn.drei.com) (Ping timeout: 246 seconds)
[20:38:33] <geekosaur> I don't think even they can break stack that badly, yeh. it should do the right thing unless, as maerwald says, you used --system-ghc in which case you got an intentionally hobbled compiler
[20:38:38] <ss-> that's what I'd thought, and stack exec -- which ghc shows ~/.stack/... I've also just done stack config set system-ghc false (and --global false) to be sure, but stack build --profile still fails
[20:38:49] *** Joins: Cale_ (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[20:38:56] *** Quits: Cale_ (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:39:41] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:39:58] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[20:40:04] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Remote host closed the connection)
[20:40:07] <ss-> is it possible the specific dependencies i'm trying to use don't have profiling builds somehow? using lts-19.1, and it seems to be failing specifically on cereal-0.5.8.2, hashable-1.3.5.0 for example
[20:40:36] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[20:41:00] <geekosaur> stack shouldnotice that and rebuild them appropriately. base, ghc-prim, and template-haskell are the ones it can't
[20:42:34] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:44:04] <sm> I believe `cd ~/.stack; fd base-4` should show both `libHSbase-4.14.3.0.a` and `libHSbase-4.14.3.0_p.a`, eg
[20:45:18] <geekosaur> .p_a, I think, but yes. you may have to nuke .stack and .stack-work again after changing system-ghc though, that may confuse it
[20:47:17] <ss-> only see libHSbase-4.15.1.0.a, no _p.a. i did try nuking both .stack and .stack-work a few times, maybe i'll try it again with a different resolver
[20:47:41] <sm> what's stack --version
[20:47:56] <sm> and `arch`
[20:49:07] <ss-> Version 2.7.5, Git revision ba147e6f59b2da75b1beb98b1888cce97f7032b1 (dirty) (8407 commits) x86_64, arch is x86_64
[20:49:28] *** Quits: werdnA (~andrew@114.88.181.56) (Quit: WeeChat 3.4.1)
[20:49:43] *** Joins: werdnA (~andrew@114.88.181.56)
[20:50:48] <sm> and the ghc version / resolver ? something recent ?
[20:51:46] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[20:52:31] <ss-> stack exec -- which ghc shows 9.0.2, resolver 19.1
[20:53:34] <ss-> trying it with a different resolver now actually
[20:53:35] <sm> weird. Maybe `stack setup --reinstall 9.0.2` makes a difference ?
[20:54:43] * sm notes that --reinstall forces it to install ghc even when config.yaml says not to
[20:54:43] <glguy> Axman6: I think "glirc" is only a notification if you copy the sample config on the wiki where I showed a slimmed down copy of what I was using, but it's not in the executable's default, at least.
[20:54:48] *** Quits: abastro (~abab9579@220.75.216.63) (Quit: sleep)
[20:57:10] <abastro[m]> It doesn't seem to notify me at least, even with default config
[20:59:11] <glguy> abastro[m]: there isn't a default config
[20:59:43] <abastro[m]> Oh, I mean one from wiki
[21:00:49] <abastro[m]> Btw why does glirc not generate the folder `~/.config/glirc`?
[21:01:34] <glguy> It never writes to your configuration file; that's something you do
[21:02:03] <ss-> ah so stack setup --reinstall 9.0.2 now gives me an error "gcc: error: unrecognized command-line option '--target=x86_64-unknown-linux'" (maybe this is the root of my problems?). if i change the resolver to lts-18.24, stack build --profile seems to now work
[21:02:37] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[21:05:42] <ss-> also noticing that stack setup --reinstall 8.10.7 is a 200 MB download, stack setup --reinstall 9.0.2 is a 116 MB download for what it's worth
[21:06:09] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[21:06:47] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[21:08:32] <sm> I don't know the cause, but switching to a ghcup-installed ghc could be a workaround
[21:11:36] <sm> https://github.com/commercialhaskell/stack/issues/5652 looks relevant
[21:13:04] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 246 seconds)
[21:13:09] <sm> stackage nightly has 9.2.2, maybe you could use that
[21:13:25] *** Quits: razetime (~quassel@117.193.2.164) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:15:14] <ss-> yes, i just tried switching to nightly-2022-03-31 and it seems to work! build hasn't finished yet, but fd base-4 shows the profiling libraries
[21:15:22] <ss-> thanks for all the help!
[21:15:29] <janus> ooh, one more reason to prefer 9.2.2 over 9.0.2
[21:15:53] <sm> great. I'd like to know if 9.2.2 is faster on linux, too
[21:16:25] <sm> on x86, I mean
[21:16:49] * sm is hoping 9.2.2 turns out to be a good GHC
[21:17:03] <maerwald> you mean 9.2.3
[21:17:15] <sm> argh
[21:17:21] <janus> it sounds like https://gitlab.haskell.org/ghc/ghc/-/issues/20959 is also affecting 9.2.2
[21:17:54] *** Quits: arjun (~arjun@user/arjun) (Ping timeout: 260 seconds)
[21:18:25] <sm> we seem to have a quality control problem
[21:21:09] *** Joins: Topsi (~Tobias@dyndsl-095-033-092-148.ewe-ip-backbone.de)
[21:21:10] <abastro[m]> No hls for 9.2.2? :<
[21:22:14] *** Joins: vicfred (~vicfred@user/vicfred)
[21:24:27] <sm> thanks janus, that's a nice issue. You know it's a fun one when both Simons get involved
[21:25:15] *** Quits: mbuf (~Shakthi@171.61.194.140) (Quit: Leaving)
[21:25:32] <sm> abastro: no, I keep forgetting the reason, but you can build it yourself: https://www.reddit.com/r/haskell/comments/tqzxy1/now_that_stackage_supports_ghc_92_is_it_easy_to/i2qdpop/
[21:27:49] <c_wraith> that is a really cool ticket.  Also unfortunate that GHC sometimes produces broken code.  But that debugging is great.
[21:29:07] *** Joins: nishant (~nishant@2405:201:f005:c007:3ab2:bee7:6ff3:39cb)
[21:29:20] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:29:33] <sm> +1
[21:30:20] *** Quits: ccntrq (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca) (Remote host closed the connection)
[21:30:38] *** Joins: ccntrq (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca)
[21:33:18] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[21:41:46] *** Quits: rawley (~rawley@142.99.241.242) (Ping timeout: 246 seconds)
[21:42:43] *** Joins: Pickchea (~private@user/pickchea)
[21:43:30] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[21:43:40] *** Joins: vysn (~vysn@user/vysn)
[21:44:01] *** Quits: ccntrq (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca) (Remote host closed the connection)
[21:44:19] *** Joins: ccntrq (~Thunderbi@2a01:c23:94e3:d700:54f3:f8c1:9ce9:c8ca)
[21:46:33] <ss-> sadly got a ghc panic while building with 9.2.2 (building `vulkan-api`, something about mightEqualLater unbounded cbv), and lts-19.0 seemed to have the same profiling issue. but 9.0.1 (nightly-2022-01-06) builds and profiling works. thanks again sm!
[21:50:15] *** Joins: zebrag (~chris@user/zebrag)
[21:51:00] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:51:03] <sm> yikes. np
[21:53:35] *** Joins: arjun (~arjun@user/arjun)
[21:54:15] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[21:54:48] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[21:54:48] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:55:33] *** Quits: ss- (~ss-@187.83.249.216.dyn.smithville.net) (Quit: Client closed)
[21:56:22] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[21:56:52] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[21:58:39] *** Joins: hololeap_ (~hololeap@user/hololeap)
[21:59:49] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[21:59:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[22:01:36] *** Joins: jinsun (~jinsun@user/jinsun)
[22:04:09] *** Joins: rawley (~rawley@142.99.241.242)
[22:04:30] *** Quits: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net) (Remote host closed the connection)
[22:05:37] *** Joins: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net)
[22:05:55] *** Quits: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net) (Remote host closed the connection)
[22:06:15] *** Quits: dolio (~dolio@130.44.130.54) (Quit: ZNC 1.8.2 - https://znc.in)
[22:06:18] *** Joins: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net)
[22:08:00] *** Quits: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net) (Remote host closed the connection)
[22:08:01] *** Quits: arjun (~arjun@user/arjun) (Quit: Leaving)
[22:08:19] *** Joins: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net)
[22:09:40] *** Quits: ph88 (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[22:11:21] *** Joins: dolio (~dolio@130.44.130.54)
[22:16:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:16:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:16:47] *** Joins: wroathe (~wroathe@user/wroathe)
[22:21:39] *** Joins: MasterK (~MK@86.127.10.135)
[22:23:14] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[22:28:12] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[22:29:02] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[22:30:44] *** Joins: jakalx (~jakalx@base.jakalx.net)
[22:32:27] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[22:32:40] *** Joins: ss- (~ss-@187.83.249.216.dyn.smithville.net)
[22:45:40] *** Joins: anon61924576 (~anon61924@85.210.203.240)
[22:46:20] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4.1)
[22:47:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:48:24] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[22:51:37] *** Quits: dut (~dut@user/dut) (Quit: Leaving)
[23:00:49] *** Quits: fendor_ (~fendor@178.115.44.149.wireless.dyn.drei.com) (Quit: Leaving)
[23:03:14] *** Quits: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10) (Ping timeout: 252 seconds)
[23:05:06] *** Quits: nishant (~nishant@2405:201:f005:c007:3ab2:bee7:6ff3:39cb) (Quit: Leaving)
[23:09:19] *** Joins: deadmarshal_ (~deadmarsh@5.115.35.156)
[23:12:22] *** Quits: rawley (~rawley@142.99.241.242) (Ping timeout: 272 seconds)
[23:15:44] *** Quits: anon61924576 (~anon61924@85.210.203.240) (Ping timeout: 250 seconds)
[23:15:53] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[23:17:24] *** Joins: alp (~alp@user/alp)
[23:18:00] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[23:20:56] *** Quits: ss- (~ss-@187.83.249.216.dyn.smithville.net) (Ping timeout: 250 seconds)
[23:22:30] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 272 seconds)
[23:24:01] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:38:40] <maerwald> hasql has a refreshing API. Without typeclasses.
[23:38:59] <Rembane> maerwald: Just functions? 
[23:39:21] <maerwald> you specify encoders and decoders
[23:39:31] <maerwald> or use TH-automagic quasiquoter
[23:40:10] <Rembane> That sounds sane for that domain.
[23:40:14] <maerwald> https://hackage.haskell.org/package/hasql-1.5.0.2/docs/Hasql-Statement.html
[23:46:47] *** Quits: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl) (Remote host closed the connection)
[23:47:07] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
