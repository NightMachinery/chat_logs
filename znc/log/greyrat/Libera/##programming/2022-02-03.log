[00:00:34] <Stefan26> in the recent years ive worked so often with string-copying-middleware ... reading data, changing names of things and forwarding... ive been tempted to think about how such projects ( typically with like 10k LoCs) could have been reduced to extremely few lines using suitable frameworks (like apache camel or similar)
[00:00:35] <sonny> I noticed when I was working on my compiler frontend I kept refactoring it and it kept getting much smaller, but I realized I was spending too much time on the front end
[00:01:15] <sonny> Stefan26: it certainly can
[00:01:19] <oldlaptop> koollman: see also https://core.tcl-lang.org/tips/doc/trunk/tip/131.md
[00:01:20] <bayaz> Title: Tcl Improvement Proposals: TIP 131: Read My Mind and Do What I Mean 
[00:01:48] <koollman> oldlaptop: I think I read that before. I've seen many variations of the dwim instruction :)
[00:02:03] <oldlaptop> but how many of them include an example implementation?! :D
[00:02:06] <Stefan26> and that's been out for 20 years... I don't mean senseless code-golfing but there must be some clean solutions out there for very simple ETL-use cases
[00:02:41] <sonny> yeah
[00:03:00] <koollman> Stefan26: awk, obviously ;)
[00:03:16] <Stefan26> what made you think of awk at this hour?
[00:03:18] <sonny> I'm just realizing that from a business perspective, it has not been shown to be worth it
[00:03:49] <sonny> so Cobol banking software well still be here 40 years later
[00:03:56] <sonny> s/well/will/
[00:04:02] <oldlaptop> sonny: You do get costs from *some* kinds of mindless bloat that aren't necessarily obvious (or obvious to management), but add up to lots of money anyway.
[00:04:24] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:04:30] <sonny> oldlaptop: extactly, business only see short term goals
[00:04:36] <koollman> Stefan26: more realistically one of the cleanest way I currently know to do the T part of etl (well, at that point, usually ELT) is dbt. writing tranformations steps as sql with some templating 
[00:04:44] <oldlaptop> More time loading pages on your Web store is (negative) money, for example
[00:05:09] <sonny> good example
[00:05:15] <oldlaptop> Bloat your site up enough and whole classes of potential customers can't give you money even if they want to.
[00:05:21] <CoJaBo> Well that was weird. Someone wrote into support to thank us for finally fixing r*****s.com
[00:05:35] <sonny> so they throw more developers on to optimize it
[00:05:35] <CoJaBo> oldlaptop: So, like Newreddit?
[00:06:10] <oldlaptop> see https://danluu.com/web-bloat/ - especially the Conclusion (relating how Google once increased page load times by optimizing them - because traffic from Africa increased enough to drag down the average)
[00:06:10] <bayaz> Title: The modern web on a slow connection 
[00:06:25] <vdamewood> CoJaBo: well, did you fix it?
[00:06:33] <c2a1> New reddit is good on mobile imo
[00:06:44] <c2a1> Well, the app is
[00:06:49] <oldlaptop> CoJaBo: Does newreddit take longer to load, or something?
[00:07:06] <koollman> well, suffice to say many use oldreddit instead :)
[00:07:13] <CoJaBo> vdamewood: We have no connection whatsoever with r*****s.com, other than supporting it for embedding like any other site with an embed function
[00:07:23] <CoJaBo> oldlaptop: A lot longer
[00:07:37] <CoJaBo> Also, it breaks more often
[00:07:42] <oldlaptop> (I understand there are people who hate it and like the old one, or something. I can't judge by my own preferences, because they are weird, and I don't like reddit in general anyway.)
[00:07:45] <CoJaBo> Also, eww, newreddit
[00:07:49] *** Joins: audiobirb (~audio@user/audio)
[00:07:54] *** Joins: Pickchea (~private@user/pickchea)
[00:08:39] <vdamewood> CoJaBo: Sounds like a troll, then.
[00:09:05] <oldlaptop> Now this doesn't map directly onto what sonny is talking about, because your zillion lines of code can easily serve up a lean, mean, highly-optimized webpage that's exceptionally useful even on a satellite link from Jijiga, Ethiopia. (Or could be doing something completely unrelated.)
[00:09:15] <CoJaBo> It's an actual user of one of our sites, cuz they were logged in when they sent this
[00:09:31] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:09:35] <oldlaptop> I would bet that mindless bloat inside the backend correlates pretty well with mindless bloat in what gets spat out by it, though.
[00:09:48] <CoJaBo> We get lots of negative stuff (most of which just HAS to be trolling), but not often someone thanks us for something we didn't do xD
[00:09:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:10:06] <oldlaptop> (New project: estimate backend SLOC by counting the number of distinct copies of jquery each page load fetches)
[00:10:28] *** Joins: zaher (~zaher@37.48.178.93)
[00:10:40] <CoJaBo> My record is 6
[00:11:27] <lf94> It's so crazy I have 71 projects
[00:11:35] <lf94> On GitHub
[00:11:35] *** Joins: eXtr3m0 (~eXtr3m0@p4fd3aa8f.dip0.t-ipconnect.de)
[00:11:40] <lf94> 1 of those are forks
[00:12:05] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[00:13:15] *** Joins: zaher_ (~zaher@37.48.158.108)
[00:13:29] *** Joins: Gaboradon (~Gaboradon@user/Gaboradon)
[00:13:53] *** Joins: csh4dow (~csh4dow@122.161.53.78)
[00:14:07] *** Quits: eXtr3m0 (~eXtr3m0@p4fd3aa8f.dip0.t-ipconnect.de) (Changing host)
[00:14:07] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[00:14:18] *** Joins: csh4dow1 (~csh4dow@122.161.53.78)
[00:14:30] <csh4dow> hi
[00:14:34] <csh4dow1> hi
[00:14:40] <GeDaMo> :|
[00:14:43] <flakland> sup sh4dow13
[00:15:01] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:15:09] *** Quits: csh4dow (~csh4dow@122.161.53.78) (Quit: Quit)
[00:15:15] *** Quits: csh4dow1 (~csh4dow@122.161.53.78) (Client Quit)
[00:15:45] *** Quits: zaher (~zaher@37.48.178.93) (Ping timeout: 250 seconds)
[00:15:57] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[00:16:41] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:17:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:17:36] <sonny> legacy also gives old corps the edge over upstarts, so the key ability would be to keep the loc and development time down in tandem 
[00:18:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:18:58] *** Quits: MatSharrow (~matthew@36.115.9.51.dyn.plus.net) (Quit: Konversation terminated!)
[00:20:10] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving.)
[00:20:33] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 256 seconds)
[00:20:39] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[00:21:17] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Client Quit)
[00:21:21] <sonny> so the most difficult thing left that you cannot quantify, is creativity
[00:21:31] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[00:21:36] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[00:22:08] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[00:23:27] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:25:19] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[00:25:58] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:b44a:f768:9ead:27f) (Read error: Connection reset by peer)
[00:28:26] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[00:30:30] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 250 seconds)
[00:30:32] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[00:30:44] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:31:21] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[00:38:13] *** Quits: deniska (~deniska@user/deniska) (Remote host closed the connection)
[00:41:32] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[00:41:32] *** Quits: flakland (~flaknet99@32.211.211.39) (*.net *.split)
[00:41:32] *** Quits: znemo (sid500529@id-500529.uxbridge.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: df_data (sid466269@id-466269.ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: Fangs (sid141280@id-141280.hampstead.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[00:41:32] *** Quits: Affliction (affliction@idlerpg/player/affliction) (*.net *.split)
[00:41:32] *** Quits: duckworld (~duckworld@user/duckworld) (*.net *.split)
[00:41:32] *** Quits: Spr0cket (sprocket@user/Spr0cket) (*.net *.split)
[00:41:32] *** Quits: trevors (~trevors@user/trevors) (*.net *.split)
[00:41:32] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (*.net *.split)
[00:41:32] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: regedit (uid150526@uxbridge.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: SGautam (uid286066@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[00:41:32] *** Quits: k8yun (~k8yun@24.244.29.215) (*.net *.split)
[00:41:32] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (*.net *.split)
[00:41:32] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (*.net *.split)
[00:41:32] *** Quits: chives (~chives@64.130.100.177) (*.net *.split)
[00:41:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (*.net *.split)
[00:41:32] *** Quits: suss (~user@120.208.165.3) (*.net *.split)
[00:41:32] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: inky (~inky@46.36.119.204) (*.net *.split)
[00:41:32] *** Quits: macaw (~macaw@87-205-47-92.adsl.inetia.pl) (*.net *.split)
[00:41:32] *** Quits: ghost64 (~ghost64@user/ghost64) (*.net *.split)
[00:41:32] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (*.net *.split)
[00:41:32] *** Quits: art_vandelay (~art_vande@142.126.234.156) (*.net *.split)
[00:41:32] *** Quits: Crocodillian (~Crocodill@comply.posixsh.org) (*.net *.split)
[00:41:32] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (*.net *.split)
[00:41:32] *** Quits: NEYi (~NEYi@109.251.216.38) (*.net *.split)
[00:41:32] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[00:41:32] *** Quits: darsie (~darsie@84-113-55-200.cable.dynamic.surfer.at) (*.net *.split)
[00:41:32] *** Quits: Klinda (~superleag@user/klinda) (*.net *.split)
[00:41:33] *** Quits: xkuru (~xkuru@user/xkuru) (*.net *.split)
[00:41:33] *** Quits: justyb11 (~justyb@64.253.212.72) (*.net *.split)
[00:41:33] *** Quits: kaivai_ (~kaivai@user/kaivai) (*.net *.split)
[00:41:33] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (*.net *.split)
[00:41:33] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[00:41:33] *** Quits: Obscenity (~Obscenity@user/obscenity) (*.net *.split)
[00:41:33] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (*.net *.split)
[00:41:33] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (*.net *.split)
[00:41:33] *** Quits: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt) (*.net *.split)
[00:41:33] *** Quits: realms (~marco@190.239.58.40) (*.net *.split)
[00:41:33] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (*.net *.split)
[00:41:33] *** Quits: jaysicks (~jaysicks@91-82-168-15.pool.digikabel.hu) (*.net *.split)
[00:41:33] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[00:41:33] *** Quits: APic (~apic@apic.name) (*.net *.split)
[00:41:33] *** Quits: astiak (~astiak@ownage.biz) (*.net *.split)
[00:41:33] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (*.net *.split)
[00:41:33] *** Quits: cfjk (~cfjk@user/cfjk) (*.net *.split)
[00:41:33] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[00:41:33] *** Quits: Tabmow (~tabmow@user/tabmow) (*.net *.split)
[00:41:33] *** Quits: bytefire (~bytefire@li1531-193.members.linode.com) (*.net *.split)
[00:41:33] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[00:41:33] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[00:41:33] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[00:41:33] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (*.net *.split)
[00:41:33] *** Quits: zeroflame_ (~zeroflame@192.210.139.174) (*.net *.split)
[00:41:33] *** Quits: matrael (~matrael@PLEASEJUSTLETME.BE) (*.net *.split)
[00:41:33] *** Quits: Frogging101 (~Frogging@kitsune.fastquake.com) (*.net *.split)
[00:41:33] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[00:41:33] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[00:41:33] *** Quits: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com) (*.net *.split)
[00:41:33] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[00:41:33] *** Quits: martums5 (~martums@user/martums) (*.net *.split)
[00:41:33] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (*.net *.split)
[00:41:33] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[00:41:33] *** Quits: ds (~ds@user/ds) (*.net *.split)
[00:41:33] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[00:41:33] *** Quits: NChief (~nchief@irc.nortv.net) (*.net *.split)
[00:41:33] *** Quits: obrut (~obrut@user/obrut) (*.net *.split)
[00:41:33] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (*.net *.split)
[00:41:33] *** Quits: hassoon__ (~hassoon@triton.blinkenshell.org) (*.net *.split)
[00:41:33] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[00:41:33] *** Quits: williewillus (~williewil@user/williewillus) (*.net *.split)
[00:41:34] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[00:41:34] *** Quits: z3t0 (~z3t0@146.71.14.98) (*.net *.split)
[00:41:34] *** Quits: Buggys (~Buggys@185.149.90.52) (*.net *.split)
[00:41:34] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[00:41:34] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[00:41:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[00:41:34] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[00:41:34] *** Quits: Notiche (~quassel@irk.rojekti.fi) (*.net *.split)
[00:41:34] *** Quits: hassoon_ (hassoon@user/hassoon) (*.net *.split)
[00:41:34] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[00:41:34] *** Quits: stella (~aoei@nethackscoreboard/aoei) (*.net *.split)
[00:41:34] *** Quits: bayaz (~bayaz@user/jeaye/bot/bayaz) (*.net *.split)
[00:41:34] *** Quits: zvijezda (~Foobar@c-98-203-220-45.hsd1.wa.comcast.net) (*.net *.split)
[00:41:34] *** Quits: _neonrex_ (~jbrubake@user/jbrubake) (*.net *.split)
[00:41:34] *** Quits: les_ (~whome@user/les) (*.net *.split)
[00:41:34] *** Quits: DefiantN (~DefiantN@user/defiantn) (*.net *.split)
[00:41:34] *** Quits: arahael (~arahael@118.208.232.68) (*.net *.split)
[00:41:34] *** Quits: ishanjain (~ishan@li2028-175.members.linode.com) (*.net *.split)
[00:41:34] *** Quits: opotin (~opotin@gyros.collabora.co.uk) (*.net *.split)
[00:41:34] *** Quits: koollman (~samson_t@user/koollman) (*.net *.split)
[00:41:34] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[00:41:34] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (*.net *.split)
[00:41:34] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[00:41:34] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (*.net *.split)
[00:41:34] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (*.net *.split)
[00:41:34] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (*.net *.split)
[00:41:34] *** Quits: alan1 (~alan@user/Nucleos) (*.net *.split)
[00:41:34] *** Quits: fweht (uid404746@lymington.irccloud.com) (*.net *.split)
[00:41:34] *** Quits: emf (~emf@2620:10d:c090:400::5:b0fe) (*.net *.split)
[00:41:34] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwopyrygzx8rbm.ipv6.telus.net) (*.net *.split)
[00:41:34] *** Quits: ProperNoun (~holyShizn@user/propernoun) (*.net *.split)
[00:41:34] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[00:41:34] *** Quits: Akiva (~Akiva@user/Akiva) (*.net *.split)
[00:41:34] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d) (*.net *.split)
[00:41:34] *** Quits: c2a1 (~c2a1@2607:fb90:1771:25aa:c358:d695:5d6f:7a9) (*.net *.split)
[00:41:34] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (*.net *.split)
[00:41:34] *** Quits: allegorical_- (~guest@2607:fea8:33e0:65c:4c4c:a57d:1961:e23b) (*.net *.split)
[00:41:34] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (*.net *.split)
[00:41:34] *** Quits: plastico (~plastico@neomutt/plastico) (*.net *.split)
[00:41:34] *** Quits: Rounin (~david@84.212.130.215) (*.net *.split)
[00:41:34] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (*.net *.split)
[00:41:35] *** Quits: brabrax (~brabrax@user/brabrax) (*.net *.split)
[00:41:35] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-1037-static.midco.net) (*.net *.split)
[00:41:35] *** Quits: kmh_ (~kmh@94.31.106.215) (*.net *.split)
[00:41:35] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (*.net *.split)
[00:41:35] *** Quits: pizdets (~pizdets@183.182.111.120) (*.net *.split)
[00:41:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[00:41:35] *** Quits: vukky (~vukky@wikipedia/vukky) (*.net *.split)
[00:41:35] *** Quits: EtherNet (~ethernet@user/ethernet) (*.net *.split)
[00:41:35] *** Quits: zhiayang (~zhiayang@user/zhiayang) (*.net *.split)
[00:41:35] *** Quits: joev (~joev@user/joev) (*.net *.split)
[00:41:35] *** Quits: skipper (~whatsupbo@user/scobydoo) (*.net *.split)
[00:41:35] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (*.net *.split)
[00:41:35] *** Quits: peace-angel (uid530400@user/star1) (*.net *.split)
[00:41:35] *** Quits: bloodElk (~bloodElk@user/bloodelk) (*.net *.split)
[00:41:35] *** Quits: payphone (dd09ba4109@2604:bf00:561:2000::20b) (*.net *.split)
[00:41:35] *** Quits: saribro (~swinnenb@user/swinnenb) (*.net *.split)
[00:41:35] *** Quits: XSDNMN_ (~XSDNMN@2601:449:8400:4170:9c01:6151:fa36:aa8e) (*.net *.split)
[00:41:35] *** Quits: DrMax (~DrMax@node-1w7jra94757g0kdpr9wjqf80y.ipv6.telus.net) (*.net *.split)
[00:41:35] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[00:41:35] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[00:41:35] *** Quits: karstensrage (~karstensr@user/karstensrage) (*.net *.split)
[00:41:35] *** Quits: jtgd (~jtgd@user/jtgd) (*.net *.split)
[00:41:35] *** Quits: |smlckz| (~smlckz@user/smlckz) (*.net *.split)
[00:41:35] *** Quits: scjosh (~scjosh@206.189.79.69) (*.net *.split)
[00:41:35] *** Quits: BurumaSerafuku (~sjw@69.206.48.64) (*.net *.split)
[00:41:35] *** Quits: ugjka (~ugjka@ugjka.net) (*.net *.split)
[00:41:35] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[00:41:35] *** Quits: [ins4ne] (~ins4ne]@user/ins4ne/x-5207303) (*.net *.split)
[00:41:35] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (*.net *.split)
[00:41:35] *** Quits: nitrix (~nitrix@user/nitrix) (*.net *.split)
[00:41:35] *** Quits: zmotaj (~zmotaj@user/zmotaj) (*.net *.split)
[00:41:35] *** Quits: Matt|home (~matt@adsl-74-233-58-56.mia.bellsouth.net) (*.net *.split)
[00:41:35] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (*.net *.split)
[00:41:35] *** Quits: edr (~edr@user/edr) (*.net *.split)
[00:41:35] *** Quits: kzootech (~contact@kzoo.tech) (*.net *.split)
[00:41:35] *** Quits: geonic (~geonic@user/geonic) (*.net *.split)
[00:41:35] *** Quits: javabean (~javabean@user/javabean) (*.net *.split)
[00:41:35] *** Quits: upp (~upp@c-71-227-220-185.hsd1.wa.comcast.net) (*.net *.split)
[00:41:35] *** Quits: derpy (~quassel@2a02:810d:800:10f8:80bc:99e7:800a:7a53) (*.net *.split)
[00:41:35] *** Quits: Kol (~Kol@75.157.122.186) (*.net *.split)
[00:41:36] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (*.net *.split)
[00:41:36] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[00:41:36] *** Quits: AMG (ghebo@user/amg) (*.net *.split)
[00:41:36] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (*.net *.split)
[00:41:36] *** Quits: vigumnov (~victori@cpe-76-89-139-69.socal.res.rr.com) (*.net *.split)
[00:41:36] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[00:41:36] *** Quits: tafa (~tafa@user/tafa) (*.net *.split)
[00:41:36] *** Quits: snake (~snake@user/snake) (*.net *.split)
[00:41:36] *** Quits: astroid (astroid@user/astroid) (*.net *.split)
[00:41:36] *** Quits: echoreply (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d) (*.net *.split)
[00:41:36] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[00:41:36] *** Quits: avu (~jan@user/avu) (*.net *.split)
[00:41:36] *** Quits: devz3ro (~devz3ro@user/devz3ro) (*.net *.split)
[00:41:36] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[00:41:36] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (*.net *.split)
[00:41:36] *** Quits: eein (35f97d3dbd@2604:bf00:561:2000::2a6) (*.net *.split)
[00:41:36] *** Quits: reynir (root@user/reynir) (*.net *.split)
[00:41:36] *** Quits: ikiryo (sid109660@user/ikiryo) (*.net *.split)
[00:41:36] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[00:41:36] *** Quits: light (~light@user/light) (*.net *.split)
[00:41:36] *** Quits: lewisje (~lewisje@72.49.207.113) (*.net *.split)
[00:41:36] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[00:41:36] *** Quits: H4Z3 (~H4ZE@165.227.36.29) (*.net *.split)
[00:41:36] *** Quits: Macuser (Macuser@here.for-the.chat) (*.net *.split)
[00:41:36] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[00:41:36] *** Quits: tomate (~hubrecht@125.ip-51-178-27.eu) (*.net *.split)
[00:41:36] *** Quits: Djoobstil (~djoobstil@djoobstil.online) (*.net *.split)
[00:41:36] *** Quits: psb___ (sid500598@id-500598.ilkley.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[00:41:36] *** Quits: Guest4960 (~moses_@user/moses/x-1166525) (*.net *.split)
[00:41:36] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[00:41:36] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[00:41:36] *** Quits: ozarker (~ozarker@user/ozarker) (*.net *.split)
[00:41:36] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (*.net *.split)
[00:41:36] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (*.net *.split)
[00:41:36] *** Quits: Pickchea (~private@user/pickchea) (*.net *.split)
[00:41:36] *** Quits: audiobirb (~audio@user/audio) (*.net *.split)
[00:41:36] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (*.net *.split)
[00:41:37] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[00:41:37] *** Quits: digdilem (~digdilem@rolf.yuss.org) (*.net *.split)
[00:41:37] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[00:41:37] *** Quits: paulo (paulo@user/paulo/x-9032687) (*.net *.split)
[00:41:37] *** Quits: rickame (~rickame@user/rickame) (*.net *.split)
[00:41:37] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (*.net *.split)
[00:41:37] *** Quits: nshire_ (~nshire@47.146.41.156) (*.net *.split)
[00:41:37] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (*.net *.split)
[00:41:37] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (*.net *.split)
[00:41:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[00:41:37] *** Quits: koo5_ (~quassel@51.140.155.227) (*.net *.split)
[00:41:37] *** Quits: [smlckz] (3329f5a75b@user/smlckz) (*.net *.split)
[00:41:37] *** Quits: copier (~g@user/copier) (*.net *.split)
[00:41:37] *** Quits: antranigv (~antranigv@37.252.78.252) (*.net *.split)
[00:41:37] *** Quits: locutus (~locutus@user/locutus) (*.net *.split)
[00:41:37] *** Quits: benji (~benji@user/benji) (*.net *.split)
[00:41:37] *** Quits: Chpy0 (~chpy@30-8-178-69.static.gci.net) (*.net *.split)
[00:41:37] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (*.net *.split)
[00:41:37] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (*.net *.split)
[00:41:37] *** Quits: novns (~novns@user/novns) (*.net *.split)
[00:41:37] *** Quits: timmot (~timmot@207.148.85.201) (*.net *.split)
[00:41:37] *** Quits: Raziel (~Raziel@user/raziel) (*.net *.split)
[00:41:37] *** Quits: kubrickdave_ (~kubrickda@194-166-168-169.adsl.highway.telekom.at) (*.net *.split)
[00:41:37] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (*.net *.split)
[00:41:37] *** Quits: hendrikpern (~hendrikpe@host-176-36-13-171.b024.la.net.ua) (*.net *.split)
[00:41:37] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[00:41:37] *** Quits: dvanloon (~dvanloon@user/dvanloon) (*.net *.split)
[00:41:37] *** Quits: tccki (~tccki@box.webslate.co.nz) (*.net *.split)
[00:41:37] *** Quits: nupilios (~nupilios@user/nupilios) (*.net *.split)
[00:41:37] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[00:41:37] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[00:41:37] *** Quits: monchi (~joints@143.198.92.132) (*.net *.split)
[00:41:37] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (*.net *.split)
[00:41:37] *** Quits: Cyp (~cyp@213.237.88.120) (*.net *.split)
[00:41:37] *** Quits: ornxka (~ornxka@user/ornxka) (*.net *.split)
[00:41:37] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (*.net *.split)
[00:41:37] *** Quits: boycott (~boycott@user/boycott) (*.net *.split)
[00:41:37] *** Quits: jasper1378 (~jasper137@bras-base-toroon0628w-grc-47-142-112-142-77.dsl.bell.ca) (*.net *.split)
[00:41:37] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[00:41:37] *** Quits: Decker (~d3x0r@user/d3x0r) (*.net *.split)
[00:41:37] *** Quits: steam (~steam@user/steam) (*.net *.split)
[00:41:37] *** Quits: Dreg- (~Dreg@fr33project.org) (*.net *.split)
[00:41:37] *** Quits: minto (~mintograd@47.201.5.61) (*.net *.split)
[00:41:37] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[00:41:37] *** Quits: jeaye (~jeaye@user/jeaye) (*.net *.split)
[00:41:37] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (*.net *.split)
[00:41:37] *** Quits: fcser (~fcser@booty.farted.net) (*.net *.split)
[00:41:37] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[00:41:37] *** Quits: kaichiuchu (~mike@user/kaichiuchu) (*.net *.split)
[00:41:37] *** Quits: zwei (~Zweihande@znc.ext.zweihander.me) (*.net *.split)
[00:41:37] *** Quits: el (~el@libera/staff/el) (*.net *.split)
[00:41:37] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[00:41:37] *** Quits: Atque (~Atque@user/atque) (*.net *.split)
[00:41:37] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (*.net *.split)
[00:41:37] *** Quits: mickey8 (~user@user/mickey) (*.net *.split)
[00:41:37] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (*.net *.split)
[00:41:37] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[00:41:37] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[00:41:37] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[00:41:37] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[00:41:37] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (*.net *.split)
[00:41:37] *** Quits: Smeef (~deathonat@user/smeef) (*.net *.split)
[00:41:37] *** Quits: swp (~Thunderbi@143.176.249.0) (*.net *.split)
[00:41:37] *** Quits: aradesh (~aradesh@user/aradesh) (*.net *.split)
[00:41:37] *** Quits: chuckx (~chuckx@user/chuckx) (*.net *.split)
[00:41:37] *** Quits: brw (~bas@haring.bas.sh) (*.net *.split)
[00:41:37] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (*.net *.split)
[00:41:37] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (*.net *.split)
[00:41:38] *** Quits: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee) (*.net *.split)
[00:41:38] *** Quits: nworb (~zbrownm]@2001:470:69fc:105::1:33db) (*.net *.split)
[00:41:38] *** Quits: jinsun_ (~jinsun@user/jinsun) (*.net *.split)
[00:41:38] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (*.net *.split)
[00:41:38] *** Quits: paoda[m] (~paodamatr@2001:470:69fc:105::9247) (*.net *.split)
[00:41:38] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[00:41:38] *** Quits: dirtwash (~dirtwash@user/dirtwash) (*.net *.split)
[00:41:38] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[00:41:38] *** Quits: Twix (~None@2a01:4f8:192:23d0::1be4:a) (*.net *.split)
[00:41:38] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: redrambles (sid319583@id-319583.tinside.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: Fleck (~fleck@user/fleck) (*.net *.split)
[00:41:38] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (*.net *.split)
[00:41:38] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[00:41:38] *** Quits: Buartawe (~AnCELASTR@216.243.47.158) (*.net *.split)
[00:41:38] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (*.net *.split)
[00:41:38] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[00:41:38] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (*.net *.split)
[00:41:38] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[00:41:38] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[00:41:38] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[00:41:38] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[00:41:38] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[00:41:38] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[00:41:38] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (*.net *.split)
[00:41:38] *** Quits: davve (davve@bsd.douchedata.com) (*.net *.split)
[00:41:38] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[00:41:38] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (*.net *.split)
[00:41:38] *** Quits: piou (~piou@user/piou) (*.net *.split)
[00:41:38] *** Quits: Kays (Kays@user/kays) (*.net *.split)
[00:41:38] *** Quits: Vesryn (~vesryn@user/vesryn) (*.net *.split)
[00:41:38] *** Quits: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net) (*.net *.split)
[00:41:38] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (*.net *.split)
[00:41:38] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (*.net *.split)
[00:41:38] *** Quits: esran (~esran@vps.conical-effort.net) (*.net *.split)
[00:41:38] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[00:41:38] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[00:41:38] *** Quits: ochronus (~ochronus@2a01:4f8:1c1c:be5b::1) (*.net *.split)
[00:41:38] *** Quits: confluence (~quassel@2a01:4f8:c17:3ca::2) (*.net *.split)
[00:41:39] *** Quits: tane (~tane@user/tane) (*.net *.split)
[00:41:39] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (*.net *.split)
[00:41:39] *** Quits: Kerr (~quassel@2601:602:ce00:c8d0:cb1b:59a4:8a8b:230c) (*.net *.split)
[00:41:39] *** Quits: tomathy (~jenova@user/quetzl) (*.net *.split)
[00:41:39] *** Quits: xff0x (~xff0x@2001:1a81:53ac:4a00:25b:5701:e54d:ee3e) (*.net *.split)
[00:41:39] *** Quits: breavyn (~breavyn@user/breavyn) (*.net *.split)
[00:41:39] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (*.net *.split)
[00:41:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[00:41:39] *** Quits: Twipply (~Twipply@user/twipply) (*.net *.split)
[00:41:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (*.net *.split)
[00:41:39] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:40a0:b50a:e8ed:d1eb) (*.net *.split)
[00:41:39] *** Quits: kusanagi_ (~kusanagi@user/kusanagi) (*.net *.split)
[00:41:39] *** Quits: img (~img@user/img) (*.net *.split)
[00:41:39] *** Quits: remedan (~remedan@octo.cafe) (*.net *.split)
[00:41:39] *** Quits: JanC (~janc@user/janc) (*.net *.split)
[00:41:39] *** Quits: pimeys (~pimeysmat@2001:470:69fc:105::1:650a) (*.net *.split)
[00:41:39] *** Quits: fulminatingmoat (~fulminati@2001:470:69fc:105::1:658d) (*.net *.split)
[00:41:39] *** Quits: nicoty (~nicoty@user/nicoty) (*.net *.split)
[00:41:39] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[00:41:39] *** Quits: kinduff (~kinduff@user/kinduff) (*.net *.split)
[00:41:39] *** Quits: tehenderz (~tehenderz@ti0018a400-6758.bb.online.no) (*.net *.split)
[00:41:39] *** Quits: sh4nks (~sh4nks@2a02:6ea0:dc05::a15d) (*.net *.split)
[00:41:39] *** Quits: Whippersnapper (~whprsnpr@user/whippersnapper) (*.net *.split)
[00:41:39] *** Quits: arash- (arash@thinks.life.is-a.beauty) (*.net *.split)
[00:41:39] *** Quits: kline (~freedom0@libera/staff/kline) (*.net *.split)
[00:41:39] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (*.net *.split)
[00:41:39] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (*.net *.split)
[00:41:39] *** Quits: Echoz (~chris@user/echoz) (*.net *.split)
[00:41:39] *** Quits: MetaNova (zero-one@znc/supporter/metanova) (*.net *.split)
[00:41:39] *** Quits: AsenMx (~asen@user/asenmx) (*.net *.split)
[00:41:39] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (*.net *.split)
[00:41:39] *** Quits: Solak (~solak@cthia.xs4all.nl) (*.net *.split)
[00:41:39] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (*.net *.split)
[00:41:39] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[00:41:40] *** Quits: jacekowski (jacekowski@jacekowski.org) (*.net *.split)
[00:41:40] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[00:41:40] *** Quits: mhmd (~mhmd@37.48.90.208) (*.net *.split)
[00:41:40] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[00:41:40] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[00:41:40] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[00:41:40] *** Quits: livestradamus (~quassel@user/livestradamus) (*.net *.split)
[00:41:40] *** Quits: grogu (~quassel@user/grogu) (*.net *.split)
[00:41:40] *** Quits: vicfred (~vicfred@user/vicfred) (*.net *.split)
[00:41:40] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (*.net *.split)
[00:41:40] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: monr0e (~monr0e@smtp.vixen.international) (*.net *.split)
[00:41:40] *** Quits: sicelo (~sicelo@user/sicelo) (*.net *.split)
[00:41:40] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (*.net *.split)
[00:41:40] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (*.net *.split)
[00:41:40] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (*.net *.split)
[00:41:40] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (*.net *.split)
[00:41:40] *** Quits: magla (~gelignite@55d436fa.access.ecotel.net) (*.net *.split)
[00:41:40] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (*.net *.split)
[00:41:40] *** Quits: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net) (*.net *.split)
[00:41:40] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (*.net *.split)
[00:41:40] *** Quits: adder` (~adder@user/adder) (*.net *.split)
[00:41:40] *** Quits: adder (~adder@user/adder) (*.net *.split)
[00:41:40] *** Quits: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de) (*.net *.split)
[00:41:40] *** Quits: _inky (~inky_@46.36.119.204) (*.net *.split)
[00:41:40] *** Quits: anderson (~ande@user/anderson) (*.net *.split)
[00:41:40] *** Quits: glider (~glider@user/glider) (*.net *.split)
[00:41:40] *** Quits: wovixo (~wovixo@128.104.205.49) (*.net *.split)
[00:41:40] *** Quits: Tips|Cloud (sid62231@ilkley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: Khoyo_ (~khoyo@user/khoyo) (*.net *.split)
[00:41:40] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (*.net *.split)
[00:41:40] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (*.net *.split)
[00:41:40] *** Quits: RedNifre (~michael@dslb-002-203-247-145.002.203.pools.vodafone-ip.de) (*.net *.split)
[00:41:40] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (*.net *.split)
[00:41:40] *** Quits: Fairy97 (~Fairy@ti0004a400-6144.bb.online.no) (*.net *.split)
[00:41:40] *** Quits: random-nick (~random-ni@87.116.167.125) (*.net *.split)
[00:41:40] *** Quits: dTal (~quassel@dragonbox/wizzard/dtal) (*.net *.split)
[00:41:40] *** Quits: m5zs7k (aquares@web10.mydevil.net) (*.net *.split)
[00:41:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[00:41:40] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (*.net *.split)
[00:41:40] *** Quits: palasso (~palasso@user/palasso) (*.net *.split)
[00:41:40] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[00:41:40] *** Quits: Auron (Auron956@user/auron) (*.net *.split)
[00:41:40] *** Quits: DasBrain (DasBrain@user/dasbrain) (*.net *.split)
[00:41:40] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[00:41:40] *** Quits: LjL (~ljl@user/ljl) (*.net *.split)
[00:41:40] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[00:41:40] *** Quits: Azem (~haise01@user/haise01) (*.net *.split)
[00:41:40] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (*.net *.split)
[00:41:40] *** Quits: moose (~moose@user/moose) (*.net *.split)
[00:41:40] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (*.net *.split)
[00:41:40] *** Quits: fling (~fling@user/fling) (*.net *.split)
[00:41:40] *** Quits: Deknos (~someone@user/menace) (*.net *.split)
[00:41:40] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (*.net *.split)
[00:41:40] *** Quits: immibis (~hexchat@62.156.144.218) (*.net *.split)
[00:41:40] *** Quits: Jong (~Jong@163.114.132.5) (*.net *.split)
[00:41:40] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[00:41:40] *** Quits: raym (~raym@user/raym) (*.net *.split)
[00:41:40] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (*.net *.split)
[00:41:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[00:41:40] *** Quits: zunk (~zunk@user/zunk) (*.net *.split)
[00:41:40] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[00:41:40] *** Quits: KDDLB (kevin@user/kddlb) (*.net *.split)
[00:41:40] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (*.net *.split)
[00:41:40] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[00:41:40] *** Quits: sheepduck_ (~sheepduck@user/sheepduck) (*.net *.split)
[00:41:40] *** Quits: cation (cation@user/cation) (*.net *.split)
[00:41:40] *** Quits: f843d0 (~pi@ip4d155464.dynamic.kabel-deutschland.de) (*.net *.split)
[00:41:40] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[00:41:40] *** Quits: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net) (*.net *.split)
[00:41:40] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[00:41:40] *** Quits: ski (~ski@remote12.chalmers.se) (*.net *.split)
[00:41:40] *** Quits: danpg (~thelounge@shout.jpaglier.com) (*.net *.split)
[00:41:40] *** Quits: caramel (~caramel@user/caramel) (*.net *.split)
[00:41:40] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[00:41:40] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (*.net *.split)
[00:41:40] *** Quits: abraxis (~abraxis@user/abraxis) (*.net *.split)
[00:41:40] *** Quits: lithium_sulfate (~li2so4@sr388.sophieversum.net) (*.net *.split)
[00:41:40] *** Quits: ario (~ario@159.65.220.102) (*.net *.split)
[00:41:40] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (*.net *.split)
[00:41:40] *** Quits: JTL (~irc@user/jtl) (*.net *.split)
[00:41:40] *** Quits: dartmouthed (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[00:41:40] *** Quits: bel0tte (~bel0tte@51.15.76.217) (*.net *.split)
[00:41:40] *** Quits: b3z (~b3z@user/b3z) (*.net *.split)
[00:41:40] *** Quits: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[00:41:40] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (*.net *.split)
[00:41:40] *** Quits: Valware (~val@Valeyard/Developer/Valware) (*.net *.split)
[00:41:40] *** Quits: gurki (~gurki@user/gurki) (*.net *.split)
[00:41:40] *** Quits: shantaram (shan@cyblog/maintainer/shan) (*.net *.split)
[00:41:40] *** Quits: lupi (~lupi@user/lupi) (*.net *.split)
[00:41:40] *** Quits: majors_ (~majors@user/majors) (*.net *.split)
[00:41:40] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (*.net *.split)
[00:41:40] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[00:41:40] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[00:41:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (*.net *.split)
[00:41:41] *** Quits: XV8 (~XV8@2601:5cb:c001:50:b02a:1289:ddb1:fbc8) (*.net *.split)
[00:41:41] *** Quits: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com) (*.net *.split)
[00:41:41] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[00:41:41] *** Quits: pulse (~pulse@user/pulse) (*.net *.split)
[00:41:41] *** Quits: tirnanog (~tirnanog@user/tirnanog) (*.net *.split)
[00:41:41] *** Quits: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:81a7:a11a:626:f80c) (*.net *.split)
[00:41:41] *** Quits: armin (~armin@unix.porn) (*.net *.split)
[00:41:41] *** Quits: kron (~weechat@user/qaph) (*.net *.split)
[00:41:41] *** Quits: user51 (~user51@176.228.148.215) (*.net *.split)
[00:41:41] *** Quits: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328) (*.net *.split)
[00:41:41] *** Quits: Noni (zet@kapsi.fi) (*.net *.split)
[00:41:41] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:a87b:a586:9470:a9e3) (*.net *.split)
[00:41:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (*.net *.split)
[00:41:41] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (*.net *.split)
[00:41:41] *** Quits: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718) (*.net *.split)
[00:41:41] *** Quits: psydroid (~psydroid@user/psydroid) (*.net *.split)
[00:41:41] *** Quits: etolier (~somewhere@122-199-44-127.ip4.superloop.com) (*.net *.split)
[00:41:41] *** Quits: Rayke (rayke@user/rayke) (*.net *.split)
[00:41:41] *** Quits: Suchiman (sid3778@about/csharp/suchiman) (*.net *.split)
[00:41:41] *** Quits: Lochnair8 (~Lochnair@wireguard/contributor/lochnair) (*.net *.split)
[00:41:41] *** Quits: thiccdaddy (~o_O@user/thiccdaddy) (*.net *.split)
[00:41:41] *** Quits: hsv (~unknown@user/hsv) (*.net *.split)
[00:41:41] *** Quits: Vlen (~irc@user/Vlen) (*.net *.split)
[00:41:41] *** Quits: erica (~erica@user/erica) (*.net *.split)
[00:41:41] *** Quits: PlanckWalk (~Planck@user/planckwalk) (*.net *.split)
[00:41:41] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[00:41:41] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[00:41:41] *** Quits: Geolykt (~Geolykt@94.46.93.245) (*.net *.split)
[00:41:41] *** Quits: geeknix (~pi@2001:e68:5432:46d8:39f7:e80b:25f7:e9cb) (*.net *.split)
[00:41:41] *** Quits: dfg (dfg@user/dfg) (*.net *.split)
[00:41:41] *** Quits: pyzozord (pyzozord@user/pyzozord) (*.net *.split)
[00:41:41] *** Quits: snep (craftxbox@2001:bc8:650:1d1f::1) (*.net *.split)
[00:41:41] *** Quits: pavelow_ (~pavelow@opticalchimp.com) (*.net *.split)
[00:41:41] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (*.net *.split)
[00:41:41] *** Quits: pierrepaul (sid504261@id-504261.uxbridge.irccloud.com) (*.net *.split)
[00:41:41] *** Quits: QuartzXtal (sid507167@id-507167.lymington.irccloud.com) (*.net *.split)
[00:41:41] *** Quits: f1chid (~fichid@2a00:d880:3:2::2cf0:1238) (*.net *.split)
[00:41:41] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[00:41:41] *** Quits: skreech (skreech@user/skreech) (*.net *.split)
[00:41:41] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (*.net *.split)
[00:41:41] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (*.net *.split)
[00:41:41] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (*.net *.split)
[00:41:41] *** Quits: oldlaptop (~quassel@45.63.78.126) (*.net *.split)
[00:41:41] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (*.net *.split)
[00:41:41] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (*.net *.split)
[00:41:41] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[00:41:41] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (*.net *.split)
[00:41:42] *** Quits: bw (sid2730@user/betawaffle) (*.net *.split)
[00:41:42] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (*.net *.split)
[00:41:42] *** Quits: leachim6 (~leachim6@user/leachim6) (*.net *.split)
[00:41:42] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[00:41:42] *** Quits: avery (sid501608@id-501608.uxbridge.irccloud.com) (*.net *.split)
[00:41:42] *** Quits: edenist (edenist@rdns.robotprofessor.net) (*.net *.split)
[00:41:42] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (*.net *.split)
[00:41:42] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (*.net *.split)
[00:41:42] *** Quits: Gaboradon (~Gaboradon@user/Gaboradon) (*.net *.split)
[00:41:42] *** Quits: zaher_ (~zaher@37.48.158.108) (*.net *.split)
[00:41:42] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (*.net *.split)
[00:41:42] *** Quits: absc (~absc@dynamic-adsl-94-34-200-126.clienti.tiscali.it) (*.net *.split)
[00:41:42] *** Quits: Akuli (~Akuli@213.216.211.88) (*.net *.split)
[00:41:42] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (*.net *.split)
[00:41:42] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[00:41:42] *** Quits: tangy (~tangy@user/tangy) (*.net *.split)
[00:41:42] *** Quits: bananer (~bananer@ns372809.ip-91-121-117.eu) (*.net *.split)
[00:41:42] *** Quits: brandon (~brandon@user/brandon) (*.net *.split)
[00:41:42] *** Quits: gravypod (~gravypod@user/gravypod) (*.net *.split)
[00:41:42] *** Quits: d10n_ (~d10n@user/d10n) (*.net *.split)
[00:41:42] *** Quits: sybariten (~jake@157.90.217.120) (*.net *.split)
[00:41:42] *** Quits: rvgate (~rvgate@user/rvgate) (*.net *.split)
[00:41:42] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[00:41:42] *** Quits: KillerWasp (~KillerWas@user/killerwasp) (*.net *.split)
[00:41:42] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[00:41:42] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (*.net *.split)
[00:41:42] *** Quits: betterOn1 (~user@vmi489242.contaboserver.net) (*.net *.split)
[00:41:42] *** Quits: matiss (~matiss@almalinux/web/matiss) (*.net *.split)
[00:41:42] *** Quits: ellie (~ellie@user/ellie) (*.net *.split)
[00:41:42] *** Quits: AgentK (~AgentK@user/agentk) (*.net *.split)
[00:41:42] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[00:41:42] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[00:41:42] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[00:41:42] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[00:41:42] *** Quits: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa) (*.net *.split)
[00:41:42] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (*.net *.split)
[00:41:42] *** Quits: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5) (*.net *.split)
[00:41:42] *** Quits: arakimo[m] (~arakimoma@2001:470:69fc:105::1:6559) (*.net *.split)
[00:41:42] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (*.net *.split)
[00:41:43] *** Quits: Jaran (~mail@user/jaran) (*.net *.split)
[00:41:43] *** Quits: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (*.net *.split)
[00:41:43] *** Quits: beaky (~beaky@2a03:b0c0:0:1010::1e:a001) (*.net *.split)
[00:41:43] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: feliix42_ (~felix@gibbs.uberspace.de) (*.net *.split)
[00:41:43] *** Quits: victor__ (sid208353@id-208353.tinside.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (*.net *.split)
[00:41:43] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[00:41:43] *** Quits: V (~v@anomalous.eu) (*.net *.split)
[00:41:43] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[00:41:43] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (*.net *.split)
[00:41:43] *** Quits: neunon (~neunon@user/neunon) (*.net *.split)
[00:41:43] *** Quits: jinsun__ (~quassel@user/jinsun) (*.net *.split)
[00:41:43] *** Quits: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (*.net *.split)
[00:41:43] *** Quits: jaskal (jaskal@user/jaskal) (*.net *.split)
[00:41:43] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[00:41:43] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (*.net *.split)
[00:41:43] *** Quits: xsperry (~xs@user/xsperry) (*.net *.split)
[00:41:43] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: vito (sid1962@user/vito) (*.net *.split)
[00:41:43] *** Quits: DrAnything (uid538291@id-538291.lymington.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: user282069 (~user@li1512-248.members.linode.com) (*.net *.split)
[00:41:43] *** Quits: jstoker (~jstoker@user/jstoker) (*.net *.split)
[00:41:43] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (*.net *.split)
[00:41:43] *** Quits: mjh4386_ (~mjh4386@165.22.53.231) (*.net *.split)
[00:41:43] *** Quits: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net) (*.net *.split)
[00:41:43] *** Quits: Athas (athas@sigkill.dk) (*.net *.split)
[00:41:43] *** Quits: death916 (~death916@user/death916) (*.net *.split)
[00:41:43] *** Quits: chir4gm (~chirag@user/chir4gm) (*.net *.split)
[00:41:43] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (*.net *.split)
[00:41:43] *** Quits: Gamah (~quassel@gamah.net) (*.net *.split)
[00:41:43] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[00:41:43] *** Quits: biberu (~biberu@user/biberu) (*.net *.split)
[00:41:43] *** Quits: extor (~xtor@192.99.217.240) (*.net *.split)
[00:41:43] *** Quits: mannu (mannu@wodanaz.se) (*.net *.split)
[00:41:43] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[00:41:43] *** Quits: adrian17 (~adrian17@thehyper.space) (*.net *.split)
[00:41:43] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[00:41:43] *** Quits: tanto (~tanto@178.62.223.32) (*.net *.split)
[00:41:43] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[00:41:43] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[00:41:43] *** Quits: Emil (emil@emil.fi) (*.net *.split)
[00:41:43] *** Quits: jjt (~jjt@user/jjt) (*.net *.split)
[00:41:43] *** Quits: maxzor (~maxzor@2a01cb04054faa005845757de706397d.ipv6.abo.wanadoo.fr) (*.net *.split)
[00:41:43] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[00:41:43] *** Quits: pax_os__ (uid535114@ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (*.net *.split)
[00:41:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (*.net *.split)
[00:41:43] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[00:41:43] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (*.net *.split)
[00:41:43] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:27e5:9579:b326:6aba) (*.net *.split)
[00:41:43] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[00:41:43] *** Quits: moniker- (~mon@dh207-123-192.xnet.hr) (*.net *.split)
[00:41:43] *** Quits: Telvana (~capo@user/telvana) (*.net *.split)
[00:41:43] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (*.net *.split)
[00:41:43] *** Quits: zwr (~zwr@2804:d45:b966:fb00:35ea:d66c:6406:325c) (*.net *.split)
[00:41:43] *** Quits: nulleip (~luiz@user/nulleip) (*.net *.split)
[00:41:44] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (*.net *.split)
[00:41:44] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (*.net *.split)
[00:41:44] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (*.net *.split)
[00:41:44] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (*.net *.split)
[00:41:44] *** Quits: davidk156305 (~davidk156@2001:470:69fc:105::1:484e) (*.net *.split)
[00:41:44] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (*.net *.split)
[00:41:44] *** Quits: SmokenatorZ6 (~Smokenato@179.247.160.94) (*.net *.split)
[00:41:44] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:ec54:cd88:99c3:2b2f) (*.net *.split)
[00:41:44] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (*.net *.split)
[00:41:44] *** Quits: xeno (~xeno@user/xeno) (*.net *.split)
[00:41:44] *** Quits: mz` (~mz`@user/mz/x-8532539) (*.net *.split)
[00:41:44] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[00:41:44] *** Quits: mercenary (~mercenary@user/mercenary) (*.net *.split)
[00:41:44] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[00:41:44] *** Quits: gdarko (~me@dg.mk) (*.net *.split)
[00:41:44] *** Quits: Fjorgynn (~gothenbur@178.62.228.204) (*.net *.split)
[00:41:44] *** Quits: reinhardt (~cronos@user/cronos) (*.net *.split)
[00:41:44] *** Quits: cis (cis@user/cis) (*.net *.split)
[00:41:44] *** Quits: dfoolz (~dfoolz@2a01:4f8:160:1161::2) (*.net *.split)
[00:41:44] *** Quits: gshumway (~gshumway@user/gshumway) (*.net *.split)
[00:41:44] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[00:41:44] *** Quits: blahblah441 (~blahblah4@89.46.62.154) (*.net *.split)
[00:41:44] *** Quits: madprops (hj8oijo@user/madprops) (*.net *.split)
[00:41:44] *** Quits: carploader (~bull@185.117.72.168) (*.net *.split)
[00:41:44] *** Quits: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com) (*.net *.split)
[00:41:44] *** Quits: con3 (~con3@143.198.53.32) (*.net *.split)
[00:41:44] *** Quits: EdwardIII (~edwardiii@user/edwardiii) (*.net *.split)
[00:41:44] *** Quits: jontxu (~jon@user/jontxu) (*.net *.split)
[00:41:44] *** Quits: picooz_ (~picooz@user/picooz) (*.net *.split)
[00:41:44] *** Quits: Boniche (~Boniche@ivysaur.umbreon.net) (*.net *.split)
[00:41:44] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[00:41:44] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (*.net *.split)
[00:41:44] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (*.net *.split)
[00:41:44] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (*.net *.split)
[00:41:44] *** Quits: Cashlin (~hp@user/cashlin) (*.net *.split)
[00:41:44] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (*.net *.split)
[00:41:44] *** Quits: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7) (*.net *.split)
[00:41:44] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (*.net *.split)
[00:41:44] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (*.net *.split)
[00:41:45] *** Quits: Alpha3031[m] (~alpha3031@wikipedia/alpha3031) (*.net *.split)
[00:41:45] *** Quits: peace[m] (~elliotal_@2001:470:69fc:105::bb21) (*.net *.split)
[00:41:45] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[00:41:45] *** Quits: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (*.net *.split)
[00:41:45] *** Quits: kodah- (~kodah@user/kodah) (*.net *.split)
[00:41:45] *** Quits: ShockTohp (~kevin@155.138.224.160) (*.net *.split)
[00:41:45] *** Quits: nf (~n@monade.li) (*.net *.split)
[00:41:45] *** Quits: daurn (~daurnimat@vultr.daurnimator.com) (*.net *.split)
[00:41:45] *** Quits: Kaya (~KC@2a01:4f9:c010:3917::1) (*.net *.split)
[00:41:45] *** Quits: derelict (~derelict@user/derelict) (*.net *.split)
[00:41:45] *** Quits: Brando751 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:45] *** Quits: pink_sarco (~admin@ec2-52-208-131-13.eu-west-1.compute.amazonaws.com) (*.net *.split)
[00:41:45] *** Quits: brad1 (~brad@brad.fi) (*.net *.split)
[00:41:45] *** Quits: Henry_The_Longsh (~Henry@46.101.4.181) (*.net *.split)
[00:41:45] *** Quits: l2ftsnek_ (~jon@144.202.10.138) (*.net *.split)
[00:41:45] *** Quits: micronnn (~micronn@user/micronn) (*.net *.split)
[00:41:45] *** Quits: prime (~prime@user/prime) (*.net *.split)
[00:41:45] *** Quits: sauce (~sauce@omae.wa.mou.shindei.ru) (*.net *.split)
[00:41:45] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[00:41:45] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: liam__ (sid7517@id-7517.helmsley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: crackerjack (~crackerja@pear.bnc4free.com) (*.net *.split)
[00:41:45] *** Quits: NovaXrine_ (~NovaXrine@2604:a880:4:1d0::183:6000) (*.net *.split)
[00:41:45] *** Quits: Nspace_ (~Nspace@user/nspace) (*.net *.split)
[00:41:45] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[00:41:45] *** Quits: jakesyl__ (sid56879@id-56879.hampstead.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: Puyo (sid500577@user/puyo) (*.net *.split)
[00:41:45] *** Quits: sunarch (uid526836@user/sunarch) (*.net *.split)
[00:41:45] *** Quits: buffet (~buffet@buffet.sh) (*.net *.split)
[00:41:45] *** Quits: Liothen (sid23291@id-23291.helmsley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: Guest8414 (riotz@is.only.here.for-some.fun) (*.net *.split)
[00:41:45] *** Quits: megamus_prime (~megamus_p@46.101.47.16) (*.net *.split)
[00:41:45] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[00:41:45] *** Quits: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net) (*.net *.split)
[00:41:45] *** Quits: overra (sid16036@id-16036.lymington.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[00:41:45] *** Quits: DonRichie (~DonRichie@ricl.de) (*.net *.split)
[00:41:45] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (*.net *.split)
[00:41:45] *** Quits: homura (uid398348@user/homura) (*.net *.split)
[00:41:45] *** Quits: schna (sid484866@id-484866.helmsley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: Sqaure (~a@user/square) (*.net *.split)
[00:41:45] *** Quits: zzz (~z@user/zero) (*.net *.split)
[00:41:45] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[00:41:45] *** Quits: Teckla (uid172075@user/teckla) (*.net *.split)
[00:41:45] *** Quits: void09 (~void@150.230.21.57) (*.net *.split)
[00:41:46] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[00:41:46] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[00:41:46] *** Quits: logiz (~otter@pool-100-2-192-142.nycmny.fios.verizon.net) (*.net *.split)
[00:41:46] *** Quits: BenLand100 (~bland@user/benland100) (*.net *.split)
[00:41:46] *** Quits: wolfshappen (~waff@irc.furworks.de) (Max SendQ exceeded)
[00:44:10] *** Joins: flynn (~mcbloch@user/flynn)
[00:44:10] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[00:44:10] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[00:44:10] *** Joins: opotin (~opotin@gyros.collabora.co.uk)
[00:44:10] *** Joins: ishanjain (~ishan@li2028-175.members.linode.com)
[00:44:10] *** Joins: arahael (~arahael@118.208.232.68)
[00:44:10] *** Joins: DefiantN (~DefiantN@user/defiantn)
[00:44:10] *** Joins: les_ (~whome@user/les)
[00:44:10] *** Joins: _neonrex_ (~jbrubake@user/jbrubake)
[00:44:10] *** Joins: zvijezda (~Foobar@c-98-203-220-45.hsd1.wa.comcast.net)
[00:44:10] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[00:44:10] *** Joins: koollman (~samson_t@user/koollman)
[00:44:10] *** Joins: stella (~aoei@nethackscoreboard/aoei)
[00:44:10] *** Joins: Spydar007 (~spydar007@user/spydar007)
[00:44:10] *** Joins: hassoon_ (hassoon@user/hassoon)
[00:44:10] *** Joins: Notiche (~quassel@irk.rojekti.fi)
[00:44:10] *** Joins: blinky42 (~quassel@user/blinky42)
[00:44:10] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:44:10] *** Joins: [R] (~rs@genoce.org)
[00:44:10] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[00:44:10] *** Joins: Buggys (~Buggys@185.149.90.52)
[00:44:10] *** Joins: z3t0 (~z3t0@146.71.14.98)
[00:44:10] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:44:10] *** Joins: williewillus (~williewil@user/williewillus)
[00:44:10] *** Joins: hassoon__ (~hassoon@triton.blinkenshell.org)
[00:44:10] *** Joins: webstran- (~webstrand@user/webstrand)
[00:44:10] *** Joins: obrut (~obrut@user/obrut)
[00:44:10] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[00:44:10] *** Joins: NChief (~nchief@irc.nortv.net)
[00:44:10] *** Joins: dodo (~dodo@user/dodo)
[00:44:10] *** Joins: ds (~ds@user/ds)
[00:44:10] *** Joins: justGhost (~justache@user/justache)
[00:44:10] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[00:44:10] *** Joins: martums5 (~martums@user/martums)
[00:44:10] *** Joins: kcrk (~kcrk@user/kcrk)
[00:44:10] *** Joins: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com)
[00:44:10] *** Joins: haliucinas (~haliucina@5.20.153.21)
[00:44:10] *** Joins: swistak (~swistak@185.21.216.141)
[00:44:10] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[00:44:10] *** Joins: matrael (~matrael@PLEASEJUSTLETME.BE)
[00:44:10] *** Joins: zeroflame_ (~zeroflame@192.210.139.174)
[00:44:10] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[00:44:10] *** Joins: cursey (~cursey@user/cursey)
[00:44:10] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[00:44:10] *** Joins: Duckle (~Duckle@user/duckle)
[00:44:10] *** Joins: bytefire (~bytefire@li1531-193.members.linode.com)
[00:44:10] *** erbium.libera.chat sets mode: +o bayaz
[00:44:10] *** Joins: Tabmow (~tabmow@user/tabmow)
[00:44:10] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[00:44:10] *** Joins: cfjk (~cfjk@user/cfjk)
[00:44:10] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[00:44:10] *** Joins: astiak (~astiak@ownage.biz)
[00:44:10] *** Joins: APic (~apic@apic.name)
[00:44:10] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[00:44:10] *** Joins: jaysicks (~jaysicks@91-82-168-15.pool.digikabel.hu)
[00:44:10] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[00:44:10] *** Joins: realms (~marco@190.239.58.40)
[00:44:10] *** Joins: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt)
[00:44:10] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[00:44:10] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[00:44:10] *** Joins: Obscenity (~Obscenity@user/obscenity)
[00:44:10] *** Joins: Trashlord (~trash@user/trashlord)
[00:44:10] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[00:44:10] *** Joins: kaivai_ (~kaivai@user/kaivai)
[00:44:10] *** Joins: justyb11 (~justyb@64.253.212.72)
[00:44:10] *** Joins: xkuru (~xkuru@user/xkuru)
[00:44:10] *** Joins: Klinda (~superleag@user/klinda)
[00:44:10] *** Joins: darsie (~darsie@84-113-55-200.cable.dynamic.surfer.at)
[00:44:10] *** Joins: NEYi (~NEYi@109.251.216.38)
[00:44:10] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[00:44:10] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[00:44:10] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[00:44:10] *** Joins: ghost64 (~ghost64@user/ghost64)
[00:44:10] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[00:44:10] *** Joins: macaw (~macaw@87-205-47-92.adsl.inetia.pl)
[00:44:10] *** Joins: inky (~inky@46.36.119.204)
[00:44:10] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[00:44:10] *** Joins: suss (~user@120.208.165.3)
[00:44:10] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:44:10] *** Joins: chives (~chives@64.130.100.177)
[00:44:10] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[00:44:10] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[00:44:10] *** Joins: k8yun (~k8yun@24.244.29.215)
[00:44:10] *** Joins: SGautam (uid286066@ilkley.irccloud.com)
[00:44:10] *** Joins: regedit (uid150526@uxbridge.irccloud.com)
[00:44:10] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[00:44:10] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[00:44:10] *** Joins: trevors (~trevors@user/trevors)
[00:44:10] *** Joins: mikrosis (~mikrosis@dynamic-046-114-173-011.46.114.pool.telefonica.de)
[00:44:10] *** Joins: confluence (~quassel@2a01:4f8:c17:3ca::2)
[00:44:10] *** Joins: ochronus (~ochronus@2a01:4f8:1c1c:be5b::1)
[00:44:10] *** Joins: computerquip (sid423484@user/computerquip)
[00:44:10] *** Joins: mweckbecker (~matthias@weckbecker.name)
[00:44:10] *** Joins: esran (~esran@vps.conical-effort.net)
[00:44:10] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[00:44:10] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[00:44:10] *** Joins: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net)
[00:44:10] *** Joins: Vesryn (~vesryn@user/vesryn)
[00:44:10] *** Joins: Kays (Kays@user/kays)
[00:44:10] *** Joins: piou (~piou@user/piou)
[00:44:10] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[00:44:10] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[00:44:10] *** Joins: davve (davve@bsd.douchedata.com)
[00:44:10] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[00:44:10] *** Joins: barlas (~aqeel@user/barlas)
[00:44:10] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[00:44:10] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[00:44:10] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[00:44:10] *** Joins: jelly (jelly@user/jelly)
[00:44:10] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[00:44:10] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[00:44:10] *** Joins: koolazer (~koo@user/koolazer)
[00:44:10] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[00:44:10] *** Joins: Buartawe (~AnCELASTR@216.243.47.158)
[00:44:10] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[00:44:10] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[00:44:10] *** Joins: Fleck (~fleck@user/fleck)
[00:44:10] *** Joins: redrambles (sid319583@id-319583.tinside.irccloud.com)
[00:44:10] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[00:44:10] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[00:44:10] *** Joins: Twix (~None@2a01:4f8:192:23d0::1be4:a)
[00:44:10] *** Joins: Soni (~quassel@autistic.space)
[00:44:10] *** Joins: dirtwash (~dirtwash@user/dirtwash)
[00:44:10] *** Joins: baloona (~baloona@mail.baloona.de)
[00:44:10] *** Joins: paoda[m] (~paodamatr@2001:470:69fc:105::9247)
[00:44:10] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[00:44:10] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[00:44:10] *** Joins: nworb (~zbrownm]@2001:470:69fc:105::1:33db)
[00:44:10] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[00:44:10] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[00:44:10] *** Joins: brw (~bas@haring.bas.sh)
[00:44:10] *** Joins: chuckx (~chuckx@user/chuckx)
[00:44:10] *** Joins: aradesh (~aradesh@user/aradesh)
[00:44:10] *** Joins: swp (~Thunderbi@143.176.249.0)
[00:44:10] *** Joins: Smeef (~deathonat@user/smeef)
[00:44:10] *** Joins: BenLand100 (~bland@user/benland100)
[00:44:10] *** Joins: enyc (~enyc@user/enyc)
[00:44:10] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[00:44:10] *** Joins: void09 (~void@150.230.21.57)
[00:44:10] *** Joins: Teckla (uid172075@user/teckla)
[00:44:10] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[00:44:10] *** Joins: zzz (~z@user/zero)
[00:44:10] *** Joins: Sqaure (~a@user/square)
[00:44:10] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[00:44:10] *** Joins: schna (sid484866@id-484866.helmsley.irccloud.com)
[00:44:10] *** Joins: homura (uid398348@user/homura)
[00:44:10] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[00:44:10] *** Joins: DonRichie (~DonRichie@ricl.de)
[00:44:10] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[00:44:10] *** Joins: overra (sid16036@id-16036.lymington.irccloud.com)
[00:44:10] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[00:44:10] *** Joins: SoF (~skius@user/skius)
[00:44:10] *** Joins: megamus_prime (~megamus_p@46.101.47.16)
[00:44:10] *** Joins: Guest8414 (riotz@is.only.here.for-some.fun)
[00:44:10] *** Joins: Liothen (sid23291@id-23291.helmsley.irccloud.com)
[00:44:10] *** Joins: buffet (~buffet@buffet.sh)
[00:44:10] *** Joins: Puyo (sid500577@user/puyo)
[00:44:10] *** Joins: ross (sid305269@user/ross)
[00:44:10] *** Joins: NovaXrine_ (~NovaXrine@2604:a880:4:1d0::183:6000)
[00:44:10] *** Joins: Nspace_ (~Nspace@user/nspace)
[00:44:10] *** Joins: crackerjack (~crackerja@pear.bnc4free.com)
[00:44:10] *** Joins: sunarch (uid526836@user/sunarch)
[00:44:10] *** Joins: jakesyl__ (sid56879@id-56879.hampstead.irccloud.com)
[00:44:10] *** Joins: liam__ (sid7517@id-7517.helmsley.irccloud.com)
[00:44:10] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[00:44:10] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[00:44:10] *** Joins: sauce (~sauce@omae.wa.mou.shindei.ru)
[00:44:10] *** Joins: prime (~prime@user/prime)
[00:44:10] *** Joins: micronnn (~micronn@user/micronn)
[00:44:10] *** Joins: Henry_The_Longsh (~Henry@46.101.4.181)
[00:44:10] *** Joins: l2ftsnek_ (~jon@144.202.10.138)
[00:44:10] *** Joins: brad1 (~brad@brad.fi)
[00:44:10] *** Joins: pink_sarco (~admin@ec2-52-208-131-13.eu-west-1.compute.amazonaws.com)
[00:44:10] *** Joins: Brando751 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com)
[00:44:10] *** Joins: derelict (~derelict@user/derelict)
[00:44:10] *** Joins: Kaya (~KC@2a01:4f9:c010:3917::1)
[00:44:10] *** Joins: daurn (~daurnimat@vultr.daurnimator.com)
[00:44:10] *** Joins: nf (~n@monade.li)
[00:44:10] *** Joins: logiz (~otter@pool-100-2-192-142.nycmny.fios.verizon.net)
[00:44:10] *** Joins: ShockTohp (~kevin@155.138.224.160)
[00:44:10] *** Joins: kodah- (~kodah@user/kodah)
[00:44:10] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[00:44:10] *** Joins: mspe (~user@tilde.team/user/mspe)
[00:44:10] *** Joins: peace[m] (~elliotal_@2001:470:69fc:105::bb21)
[00:44:10] *** Joins: Alpha3031[m] (~alpha3031@wikipedia/alpha3031)
[00:44:10] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[00:44:10] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[00:44:10] *** Joins: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7)
[00:44:10] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[00:44:10] *** Joins: Cashlin (~hp@user/cashlin)
[00:44:10] *** Joins: Tempesta (~Tempesta@user/tempesta)
[00:44:10] *** Joins: edenist (edenist@rdns.robotprofessor.net)
[00:44:10] *** Joins: avery (sid501608@id-501608.uxbridge.irccloud.com)
[00:44:10] *** Joins: Exa (exa@irc.moe)
[00:44:10] *** Joins: leachim6 (~leachim6@user/leachim6)
[00:44:10] *** Joins: bw (sid2730@user/betawaffle)
[00:44:10] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[00:44:10] *** Joins: orkim (~orkim@user/orkim)
[00:44:10] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[00:44:10] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[00:44:10] *** Joins: oldlaptop (~quassel@45.63.78.126)
[00:44:10] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[00:44:10] *** Joins: cacheyourdreams (~cache@user/cacheyourdreams)
[00:44:10] *** Joins: skreech (skreech@user/skreech)
[00:44:10] *** Joins: f1chid (~fichid@2a00:d880:3:2::2cf0:1238)
[00:44:10] *** Joins: s1b1 (~s1b1@user/s1b1)
[00:44:10] *** Joins: QuartzXtal (sid507167@id-507167.lymington.irccloud.com)
[00:44:10] *** Joins: pierrepaul (sid504261@id-504261.uxbridge.irccloud.com)
[00:44:10] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[00:44:10] *** Joins: pavelow_ (~pavelow@opticalchimp.com)
[00:44:10] *** Joins: snep (craftxbox@2001:bc8:650:1d1f::1)
[00:44:10] *** Joins: pyzozord (pyzozord@user/pyzozord)
[00:44:10] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[00:44:10] *** Joins: geeknix (~pi@2001:e68:5432:46d8:39f7:e80b:25f7:e9cb)
[00:44:10] *** Joins: Geolykt (~Geolykt@94.46.93.245)
[00:44:10] *** Joins: jootoi (~jootoi@130.61.158.197)
[00:44:10] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[00:44:10] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[00:44:10] *** Joins: Vlen (~irc@user/Vlen)
[00:44:10] *** Joins: erica (~erica@user/erica)
[00:44:10] *** Joins: thiccdaddy (~o_O@user/thiccdaddy)
[00:44:10] *** Joins: Lochnair8 (~Lochnair@wireguard/contributor/lochnair)
[00:44:10] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[00:44:10] *** Joins: Suchiman (sid3778@about/csharp/suchiman)
[00:44:10] *** Joins: Rayke (rayke@user/rayke)
[00:44:10] *** Joins: hsv (~unknown@user/hsv)
[00:44:10] *** Joins: etolier (~somewhere@122-199-44-127.ip4.superloop.com)
[00:44:10] *** Joins: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718)
[00:44:10] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[00:44:10] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:a87b:a586:9470:a9e3)
[00:44:10] *** Joins: Noni (zet@kapsi.fi)
[00:44:10] *** Joins: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328)
[00:44:10] *** Joins: user51 (~user51@176.228.148.215)
[00:44:10] *** Joins: kron (~weechat@user/qaph)
[00:44:10] *** Joins: armin (~armin@unix.porn)
[00:44:10] *** Joins: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:81a7:a11a:626:f80c)
[00:44:10] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[00:44:10] *** Joins: pulse (~pulse@user/pulse)
[00:44:10] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[00:44:10] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[00:44:10] *** Joins: XV8 (~XV8@2601:5cb:c001:50:b02a:1289:ddb1:fbc8)
[00:44:10] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:44:10] *** Joins: off^ (~off@128-092-174-141.biz.spectrum.com)
[00:44:10] *** Joins: zwei (~Zweihande@znc.ext.zweihander.me)
[00:44:10] *** Joins: kaichiuchu (~mike@user/kaichiuchu)
[00:44:10] *** Joins: BUSY (~BUSY@user/busy)
[00:44:10] *** Joins: fcser (~fcser@booty.farted.net)
[00:44:10] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[00:44:10] *** Joins: jeaye (~jeaye@user/jeaye)
[00:44:10] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[00:44:10] *** Joins: minto (~mintograd@47.201.5.61)
[00:44:10] *** Joins: Dreg- (~Dreg@fr33project.org)
[00:44:10] *** Joins: steam (~steam@user/steam)
[00:44:10] *** Joins: Decker (~d3x0r@user/d3x0r)
[00:44:10] *** Joins: calcmandan (~quassel@user/calcmandan)
[00:44:10] *** Joins: jasper1378 (~jasper137@bras-base-toroon0628w-grc-47-142-112-142-77.dsl.bell.ca)
[00:44:10] *** Joins: boycott (~boycott@user/boycott)
[00:44:10] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[00:44:10] *** Joins: ornxka (~ornxka@user/ornxka)
[00:44:10] *** Joins: Cyp (~cyp@213.237.88.120)
[00:44:10] *** Joins: monchi (~joints@143.198.92.132)
[00:44:10] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[00:44:10] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[00:44:10] *** Joins: nupilios (~nupilios@user/nupilios)
[00:44:10] *** Joins: tccki (~tccki@box.webslate.co.nz)
[00:44:10] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[00:44:10] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[00:44:10] *** Joins: hendrikpern (~hendrikpe@host-176-36-13-171.b024.la.net.ua)
[00:44:10] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[00:44:10] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[00:44:10] *** Joins: kubrickdave_ (~kubrickda@194-166-168-169.adsl.highway.telekom.at)
[00:44:10] *** Joins: Raziel (~Raziel@user/raziel)
[00:44:10] *** Joins: novns (~novns@user/novns)
[00:44:10] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[00:44:10] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[00:44:10] *** Joins: Chpy0 (~chpy@30-8-178-69.static.gci.net)
[00:44:10] *** Joins: timmot (~timmot@207.148.85.201)
[00:44:10] *** Joins: benji (~benji@user/benji)
[00:44:10] *** Joins: el (~el@libera/staff/el)
[00:44:10] *** Joins: locutus (~locutus@user/locutus)
[00:44:10] *** Joins: antranigv (~antranigv@37.252.78.252)
[00:44:10] *** Joins: copier (~g@user/copier)
[00:44:10] *** Joins: [smlckz] (3329f5a75b@user/smlckz)
[00:44:10] *** Joins: koo5_ (~quassel@51.140.155.227)
[00:44:10] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:44:10] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[00:44:10] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[00:44:10] *** Joins: nshire_ (~nshire@47.146.41.156)
[00:44:10] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[00:44:10] *** Joins: rickame (~rickame@user/rickame)
[00:44:10] *** Joins: paulo (paulo@user/paulo/x-9032687)
[00:44:10] *** Joins: dstein64 (~dstein64@dannyadam.com)
[00:44:10] *** Joins: digdilem (~digdilem@rolf.yuss.org)
[00:44:10] *** Joins: cncr04s (~cncr04s@afxr.net)
[00:44:10] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[00:44:10] *** Joins: audiobirb (~audio@user/audio)
[00:44:10] *** Joins: Pickchea (~private@user/pickchea)
[00:44:10] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[00:44:10] *** Joins: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693)
[00:44:10] *** Joins: Boniche (~Boniche@ivysaur.umbreon.net)
[00:44:10] *** Joins: bertiger (~bertiger@user/bertiger)
[00:44:10] *** Joins: picooz_ (~picooz@user/picooz)
[00:44:10] *** Joins: jontxu (~jon@user/jontxu)
[00:44:10] *** Joins: EdwardIII (~edwardiii@user/edwardiii)
[00:44:10] *** Joins: con3 (~con3@143.198.53.32)
[00:44:10] *** Joins: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com)
[00:44:10] *** Joins: carploader (~bull@185.117.72.168)
[00:44:10] *** Joins: blahblah441 (~blahblah4@89.46.62.154)
[00:44:10] *** Joins: madprops (hj8oijo@user/madprops)
[00:44:10] *** Joins: strudl (~strudl@user/strudl)
[00:44:10] *** Joins: dfoolz (~dfoolz@2a01:4f8:160:1161::2)
[00:44:10] *** Joins: gshumway (~gshumway@user/gshumway)
[00:44:10] *** Joins: cis (cis@user/cis)
[00:44:10] *** Joins: reinhardt (~cronos@user/cronos)
[00:44:10] *** Joins: Fjorgynn (~gothenbur@178.62.228.204)
[00:44:10] *** Joins: gdarko (~me@dg.mk)
[00:44:10] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[00:44:10] *** Joins: mercenary (~mercenary@user/mercenary)
[00:44:10] *** Joins: birkoff (birkoff@user/birkoff)
[00:44:10] *** Joins: mz` (~mz`@user/mz/x-8532539)
[00:44:10] *** Joins: xeno (~xeno@user/xeno)
[00:44:10] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[00:44:10] *** Joins: SmokenatorZ6 (~Smokenato@179.247.160.94)
[00:44:10] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[00:44:10] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[00:44:10] *** Joins: davidk156305 (~davidk156@2001:470:69fc:105::1:484e)
[00:44:10] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[00:44:10] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[00:44:10] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[00:44:10] *** Joins: nulleip (~luiz@user/nulleip)
[00:44:10] *** Joins: zwr (~zwr@2804:d45:b966:fb00:35ea:d66c:6406:325c)
[00:44:10] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[00:44:10] *** Joins: Telvana (~capo@user/telvana)
[00:44:10] *** Joins: moniker- (~mon@dh207-123-192.xnet.hr)
[00:44:10] *** Joins: chronon (~chronon@user/chronon)
[00:44:10] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:27e5:9579:b326:6aba)
[00:44:10] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[00:44:10] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[00:44:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[00:44:10] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[00:44:10] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[00:44:10] *** Joins: pax_os__ (uid535114@ilkley.irccloud.com)
[00:44:10] *** Joins: Sadale (~Sadale@user/sadale)
[00:44:10] *** Joins: maxzor (~maxzor@2a01cb04054faa005845757de706397d.ipv6.abo.wanadoo.fr)
[00:44:10] *** Joins: jjt (~jjt@user/jjt)
[00:44:10] *** Joins: szkl (uid110435@uxbridge.irccloud.com)
[00:44:10] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[00:44:10] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[00:44:10] *** Joins: AgentK (~AgentK@user/agentk)
[00:44:10] *** Joins: ellie (~ellie@user/ellie)
[00:44:10] *** Joins: matiss (~matiss@almalinux/web/matiss)
[00:44:10] *** Joins: betterOn1 (~user@vmi489242.contaboserver.net)
[00:44:10] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[00:44:10] *** Joins: Henry151 (~bishop@user/henry151)
[00:44:10] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[00:44:10] *** Joins: rvgate (~rvgate@user/rvgate)
[00:44:10] *** Joins: sybariten (~jake@157.90.217.120)
[00:44:10] *** Joins: d10n_ (~d10n@user/d10n)
[00:44:10] *** Joins: gravypod (~gravypod@user/gravypod)
[00:44:10] *** Joins: brandon (~brandon@user/brandon)
[00:44:10] *** Joins: tangy (~tangy@user/tangy)
[00:44:10] *** Joins: bananer (~bananer@ns372809.ip-91-121-117.eu)
[00:44:10] *** Joins: KillerWasp (~KillerWas@user/killerwasp)
[00:44:10] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[00:44:10] *** Joins: Akuli (~Akuli@213.216.211.88)
[00:44:10] *** Joins: absc (~absc@dynamic-adsl-94-34-200-126.clienti.tiscali.it)
[00:44:10] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:44:10] *** Joins: zaher_ (~zaher@37.48.158.108)
[00:44:10] *** Joins: Gaboradon (~Gaboradon@user/Gaboradon)
[00:44:10] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[00:44:10] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[00:44:10] *** Joins: dysfigured (~dfg@dfg.rocks)
[00:44:10] *** Joins: Dijky (~Dijky@user/dijky)
[00:44:10] *** Joins: Teacup (~teacup@user/teacup)
[00:44:10] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[00:44:10] *** Joins: majors_ (~majors@user/majors)
[00:44:10] *** Joins: lupi (~lupi@user/lupi)
[00:44:10] *** Joins: shantaram (shan@cyblog/maintainer/shan)
[00:44:10] *** Joins: gurki (~gurki@user/gurki)
[00:44:10] *** Joins: Valware (~val@Valeyard/Developer/Valware)
[00:44:10] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[00:44:10] *** Joins: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[00:44:10] *** Joins: b3z (~b3z@user/b3z)
[00:44:10] *** Joins: bel0tte (~bel0tte@51.15.76.217)
[00:44:10] *** Joins: ebb (ebb@user/ebb)
[00:44:10] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[00:44:10] *** Joins: JTL (~irc@user/jtl)
[00:44:10] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[00:44:10] *** Joins: ario (~ario@159.65.220.102)
[00:44:10] *** Joins: lithium_sulfate (~li2so4@sr388.sophieversum.net)
[00:44:10] *** Joins: abraxis (~abraxis@user/abraxis)
[00:44:10] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[00:44:10] *** Joins: jkl (~jkl@user/jkl)
[00:44:10] *** Joins: caramel (~caramel@user/caramel)
[00:44:10] *** Joins: danpg (~thelounge@shout.jpaglier.com)
[00:44:10] *** Joins: ski (~ski@remote12.chalmers.se)
[00:44:10] *** Joins: phenom (~primus@user/phenom)
[00:44:10] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[00:44:10] *** Joins: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net)
[00:44:10] *** Joins: cation (cation@user/cation)
[00:44:10] *** Joins: sheepduck_ (~sheepduck@user/sheepduck)
[00:44:10] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[00:44:10] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[00:44:10] *** Joins: KDDLB (kevin@user/kddlb)
[00:44:10] *** Joins: Byteflux (~byte@byteflux.net)
[00:44:10] *** Joins: zunk (~zunk@user/zunk)
[00:44:10] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:44:10] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[00:44:10] *** Joins: raym (~raym@user/raym)
[00:44:10] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[00:44:10] *** Joins: Jong (~Jong@163.114.132.5)
[00:44:10] *** Joins: immibis (~hexchat@62.156.144.218)
[00:44:10] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[00:44:10] *** Joins: Deknos (~someone@user/menace)
[00:44:10] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[00:44:10] *** Joins: moose (~moose@user/moose)
[00:44:10] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[00:44:10] *** Joins: Azem (~haise01@user/haise01)
[00:44:10] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:44:10] *** Joins: LjL (~ljl@user/ljl)
[00:44:10] *** Joins: slavfox (~slavfox@93.158.232.111)
[00:44:10] *** Joins: DasBrain (DasBrain@user/dasbrain)
[00:44:10] *** Joins: Auron (Auron956@user/auron)
[00:44:10] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[00:44:10] *** Joins: palasso (~palasso@user/palasso)
[00:44:10] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[00:44:10] *** Joins: f843d0 (~pi@ip4d155464.dynamic.kabel-deutschland.de)
[00:44:10] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:44:10] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[00:44:10] *** Joins: dTal (~quassel@dragonbox/wizzard/dtal)
[00:44:10] *** Joins: random-nick (~random-ni@87.116.167.125)
[00:44:10] *** Joins: Fairy97 (~Fairy@ti0004a400-6144.bb.online.no)
[00:44:10] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[00:44:10] *** Joins: RedNifre (~michael@dslb-002-203-247-145.002.203.pools.vodafone-ip.de)
[00:44:10] *** Joins: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[00:44:10] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[00:44:10] *** Joins: Khoyo_ (~khoyo@user/khoyo)
[00:44:10] *** Joins: Tips|Cloud (sid62231@ilkley.irccloud.com)
[00:44:10] *** Joins: wovixo (~wovixo@128.104.205.49)
[00:44:10] *** Joins: glider (~glider@user/glider)
[00:44:10] *** Joins: anderson (~ande@user/anderson)
[00:44:10] *** Joins: _inky (~inky_@46.36.119.204)
[00:44:10] *** Joins: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de)
[00:44:10] *** Joins: adder (~adder@user/adder)
[00:44:10] *** Joins: adder` (~adder@user/adder)
[00:44:10] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:44:10] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[00:44:10] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[00:44:10] *** Joins: magla (~gelignite@55d436fa.access.ecotel.net)
[00:44:10] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[00:44:10] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[00:44:10] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[00:44:10] *** Joins: sicelo (~sicelo@user/sicelo)
[00:44:10] *** Joins: monr0e (~monr0e@smtp.vixen.international)
[00:44:10] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[00:44:10] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[00:44:10] *** Joins: vicfred (~vicfred@user/vicfred)
[00:44:10] *** Joins: grogu (~quassel@user/grogu)
[00:44:10] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[00:44:10] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e538:7cb4:ad6e:63d1)
[00:44:10] *** Joins: wolfshappen (~waff@irc.furworks.de)
[00:44:10] *** Joins: img_ (~img@2405:6580:b1c0:2500:2ede:bbf7:e65:5b9)
[00:44:14] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Max SendQ exceeded)
[00:44:14] *** Quits: epony (epony@user/epony) (Max SendQ exceeded)
[00:44:27] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[00:44:27] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[00:44:27] *** Joins: duckworld (~duckworld@user/duckworld)
[00:44:29] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[00:44:29] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[00:44:29] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[00:44:29] *** Joins: alan1 (~alan@user/Nucleos)
[00:44:29] *** Joins: fweht (uid404746@lymington.irccloud.com)
[00:44:29] *** Joins: emf (~emf@2620:10d:c090:400::5:b0fe)
[00:44:29] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwopyrygzx8rbm.ipv6.telus.net)
[00:44:29] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[00:44:29] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:44:29] *** Joins: Akiva (~Akiva@user/Akiva)
[00:44:29] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d)
[00:44:29] *** Joins: c2a1 (~c2a1@2607:fb90:1771:25aa:c358:d695:5d6f:7a9)
[00:44:29] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[00:44:29] *** Joins: allegorical_- (~guest@2607:fea8:33e0:65c:4c4c:a57d:1961:e23b)
[00:44:29] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[00:44:29] *** Joins: plastico (~plastico@neomutt/plastico)
[00:44:29] *** Joins: Rounin (~david@84.212.130.215)
[00:44:29] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[00:44:29] *** Joins: brabrax (~brabrax@user/brabrax)
[00:44:29] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1037-static.midco.net)
[00:44:29] *** Joins: kmh_ (~kmh@94.31.106.215)
[00:44:29] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[00:44:29] *** Joins: pizdets (~pizdets@183.182.111.120)
[00:44:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:44:29] *** Joins: vukky (~vukky@wikipedia/vukky)
[00:44:29] *** Joins: EtherNet (~ethernet@user/ethernet)
[00:44:29] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[00:44:29] *** Joins: joev (~joev@user/joev)
[00:44:29] *** Joins: skipper (~whatsupbo@user/scobydoo)
[00:44:29] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[00:44:29] *** Joins: peace-angel (uid530400@user/star1)
[00:44:29] *** Joins: bloodElk (~bloodElk@user/bloodelk)
[00:44:29] *** Joins: payphone (dd09ba4109@2604:bf00:561:2000::20b)
[00:44:29] *** Joins: saribro (~swinnenb@user/swinnenb)
[00:44:29] *** Joins: XSDNMN_ (~XSDNMN@2601:449:8400:4170:9c01:6151:fa36:aa8e)
[00:44:29] *** Joins: DrMax (~DrMax@node-1w7jra94757g0kdpr9wjqf80y.ipv6.telus.net)
[00:44:29] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[00:44:29] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[00:44:29] *** Joins: BlueShark (sid10311@user/blueshark)
[00:44:29] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[00:44:29] *** Joins: karstensrage (~karstensr@user/karstensrage)
[00:44:29] *** Joins: jtgd (~jtgd@user/jtgd)
[00:44:29] *** Joins: |smlckz| (~smlckz@user/smlckz)
[00:44:29] *** Joins: light (~light@user/light)
[00:44:29] *** Joins: scjosh (~scjosh@206.189.79.69)
[00:44:29] *** Joins: BurumaSerafuku (~sjw@69.206.48.64)
[00:44:29] *** Joins: ugjka (~ugjka@ugjka.net)
[00:44:29] *** Joins: digilink (~digilink@user/digilink)
[00:44:29] *** Joins: [ins4ne] (~ins4ne]@user/ins4ne/x-5207303)
[00:44:29] *** Joins: reynir (root@user/reynir)
[00:44:29] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[00:44:29] *** Joins: nitrix (~nitrix@user/nitrix)
[00:44:29] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[00:44:29] *** Joins: Matt|home (~matt@adsl-74-233-58-56.mia.bellsouth.net)
[00:44:29] *** Joins: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9)
[00:44:29] *** Joins: edr (~edr@user/edr)
[00:44:29] *** Joins: kzootech (~contact@kzoo.tech)
[00:44:29] *** Joins: geonic (~geonic@user/geonic)
[00:44:29] *** Joins: javabean (~javabean@user/javabean)
[00:44:29] *** Joins: upp (~upp@c-71-227-220-185.hsd1.wa.comcast.net)
[00:44:29] *** Joins: derpy (~quassel@2a02:810d:800:10f8:80bc:99e7:800a:7a53)
[00:44:29] *** Joins: Kol (~Kol@75.157.122.186)
[00:44:29] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[00:44:29] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[00:44:29] *** Joins: AMG (ghebo@user/amg)
[00:44:29] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[00:44:29] *** Joins: vigumnov (~victori@cpe-76-89-139-69.socal.res.rr.com)
[00:44:29] *** Joins: OverCoder (~OverCoder@user/overcoder)
[00:44:29] *** Joins: tafa (~tafa@user/tafa)
[00:44:29] *** Joins: snake (~snake@user/snake)
[00:44:29] *** Joins: astroid (astroid@user/astroid)
[00:44:29] *** Joins: echoreply (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d)
[00:44:29] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[00:44:29] *** Joins: avu (~jan@user/avu)
[00:44:29] *** Joins: devz3ro (~devz3ro@user/devz3ro)
[00:44:29] *** Joins: Retr0id (~Retr0id@user/retr0id)
[00:44:29] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[00:44:29] *** Joins: eein (35f97d3dbd@2604:bf00:561:2000::2a6)
[00:44:29] *** Joins: ikiryo (sid109660@user/ikiryo)
[00:44:29] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[00:44:29] *** Joins: lewisje (~lewisje@72.49.207.113)
[00:44:29] *** Joins: H4Z3 (~H4ZE@165.227.36.29)
[00:44:29] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[00:44:29] *** Joins: Macuser (Macuser@here.for-the.chat)
[00:44:29] *** Joins: ra4king (~ra4king@roiatalla.com)
[00:44:29] *** Joins: tomate (~hubrecht@125.ip-51-178-27.eu)
[00:44:29] *** Joins: Djoobstil (~djoobstil@djoobstil.online)
[00:44:29] *** Joins: psb___ (sid500598@id-500598.ilkley.irccloud.com)
[00:44:29] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[00:44:29] *** Joins: Guest4960 (~moses_@user/moses/x-1166525)
[00:44:29] *** Joins: rb (~augh@theguntretort.com)
[00:44:29] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[00:44:29] *** Joins: ozarker (~ozarker@user/ozarker)
[00:44:29] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Max SendQ exceeded)
[00:44:34] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:ec54:cd88:99c3:2b2f)
[00:44:37] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Ping timeout: 240 seconds)
[00:44:37] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Ping timeout: 240 seconds)
[00:44:49] *** Joins: tane (~tane@user/tane)
[00:44:49] *** Joins: Kerr (~quassel@2601:602:ce00:c8d0:cb1b:59a4:8a8b:230c)
[00:44:49] *** Joins: tomathy (~jenova@user/quetzl)
[00:44:49] *** Joins: xff0x (~xff0x@2001:1a81:53ac:4a00:25b:5701:e54d:ee3e)
[00:44:49] *** Joins: breavyn (~breavyn@user/breavyn)
[00:44:49] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[00:44:49] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:44:49] *** Joins: Twipply (~Twipply@user/twipply)
[00:44:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:44:49] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:40a0:b50a:e8ed:d1eb)
[00:44:49] *** Joins: kusanagi_ (~kusanagi@user/kusanagi)
[00:44:49] *** Joins: remedan (~remedan@octo.cafe)
[00:44:49] *** Joins: JanC (~janc@user/janc)
[00:44:49] *** Joins: pimeys (~pimeysmat@2001:470:69fc:105::1:650a)
[00:44:49] *** Joins: nicoty (~nicoty@user/nicoty)
[00:44:49] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[00:44:49] *** Joins: fulminatingmoat (~fulminati@2001:470:69fc:105::1:658d)
[00:44:49] *** Joins: kinduff (~kinduff@user/kinduff)
[00:44:49] *** Joins: tehenderz (~tehenderz@ti0018a400-6758.bb.online.no)
[00:44:49] *** Joins: sh4nks (~sh4nks@2a02:6ea0:dc05::a15d)
[00:44:49] *** Joins: Whippersnapper (~whprsnpr@user/whippersnapper)
[00:44:49] *** Joins: arash- (arash@thinks.life.is-a.beauty)
[00:44:49] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[00:44:49] *** Joins: kline (~freedom0@libera/staff/kline)
[00:44:49] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[00:44:49] *** Joins: Echoz (~chris@user/echoz)
[00:44:49] *** Joins: AsenMx (~asen@user/asenmx)
[00:44:49] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[00:44:49] *** Joins: Solak (~solak@cthia.xs4all.nl)
[00:44:49] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[00:44:49] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[00:44:49] *** Joins: jacekowski (jacekowski@jacekowski.org)
[00:44:49] *** Joins: Learath2 (~learath2@user/learath2)
[00:44:49] *** Joins: mhmd (~mhmd@37.48.90.208)
[00:44:49] *** Joins: InPhase (~InPhase@openscad/inphase)
[00:44:49] *** Joins: Ara (~Ara@user/ara)
[00:44:49] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[00:44:49] *** Joins: livestradamus (~quassel@user/livestradamus)
[00:44:50] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Max SendQ exceeded)
[00:44:56] *** Quits: fulminatingmoat (~fulminati@2001:470:69fc:105::1:658d) (Ping timeout: 245 seconds)
[00:44:58] *** Joins: epony (epony@lz2.eu)
[00:45:01] *** Joins: Atque (~Atque@user/atque)
[00:45:01] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[00:45:01] *** Joins: mickey8 (~user@user/mickey)
[00:45:01] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[00:45:01] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:45:01] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[00:45:01] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[00:45:01] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: davidk156305 (~davidk156@2001:470:69fc:105::1:484e) (Ping timeout: 250 seconds)
[00:45:01] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[00:45:01] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[00:45:01] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:45:01] *** Joins: znemo (sid500529@id-500529.uxbridge.irccloud.com)
[00:45:01] *** Joins: df_data (sid466269@id-466269.ilkley.irccloud.com)
[00:45:01] *** Joins: Fangs (sid141280@id-141280.hampstead.irccloud.com)
[00:45:01] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[00:45:01] *** Joins: bjs (sid190364@user/bjs)
[00:45:02] *** Quits: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: spectern[m] (~specternm@2001:470:69fc:105::1:6842) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: ketchupicecream (~ketchupic@user/ketchupicecream) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Alpha3031[m] (~alpha3031@wikipedia/alpha3031) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: peace[m] (~elliotal_@2001:470:69fc:105::bb21) (Ping timeout: 240 seconds)
[00:45:08] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (Max SendQ exceeded)
[00:45:10] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (Ping timeout: 260 seconds)
[00:45:10] *** Quits: paoda[m] (~paodamatr@2001:470:69fc:105::9247) (Ping timeout: 260 seconds)
[00:45:11] *** Quits: sebbu (~sebbu@user/sebbu) (Read error: Connection reset by peer)
[00:45:18] *** Joins: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b)
[00:45:18] *** Joins: arakimo[m] (~arakimoma@2001:470:69fc:105::1:6559)
[00:45:18] *** Joins: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5)
[00:45:18] *** Joins: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa)
[00:45:18] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[00:45:18] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[00:45:18] *** Joins: Jaran (~mail@user/jaran)
[00:45:18] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[00:45:18] *** Joins: victor__ (sid208353@id-208353.tinside.irccloud.com)
[00:45:18] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[00:45:18] *** Joins: feliix42_ (~felix@gibbs.uberspace.de)
[00:45:18] *** Joins: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[00:45:18] *** Joins: Jigsy (~Jigsy@user/jigsy)
[00:45:18] *** Joins: V (~v@anomalous.eu)
[00:45:18] *** Joins: yitz (~yitz@exercism/yitz)
[00:45:18] *** Joins: ninjabanjo (~ninjabanj@107.150.45.163)
[00:45:18] *** Joins: neunon (~neunon@user/neunon)
[00:45:18] *** Joins: jinsun__ (~quassel@user/jinsun)
[00:45:18] *** Joins: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[00:45:18] *** Joins: jaskal (jaskal@user/jaskal)
[00:45:18] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[00:45:18] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[00:45:18] *** Joins: xsperry (~xs@user/xsperry)
[00:45:18] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[00:45:18] *** Joins: vito (sid1962@user/vito)
[00:45:18] *** Joins: DrAnything (uid538291@id-538291.lymington.irccloud.com)
[00:45:18] *** Joins: user282069 (~user@li1512-248.members.linode.com)
[00:45:18] *** Joins: jstoker (~jstoker@user/jstoker)
[00:45:18] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[00:45:18] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[00:45:18] *** Joins: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net)
[00:45:18] *** Joins: Athas (athas@sigkill.dk)
[00:45:18] *** Joins: death916 (~death916@user/death916)
[00:45:18] *** Joins: chir4gm (~chirag@user/chir4gm)
[00:45:18] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[00:45:18] *** Joins: Gamah (~quassel@gamah.net)
[00:45:18] *** Joins: nisstyre (~wes@user/nisstyre)
[00:45:18] *** Joins: biberu (~biberu@user/biberu)
[00:45:18] *** Joins: extor (~xtor@192.99.217.240)
[00:45:18] *** Joins: mannu (mannu@wodanaz.se)
[00:45:18] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[00:45:18] *** Joins: adrian17 (~adrian17@thehyper.space)
[00:45:18] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[00:45:18] *** Joins: Emil (emil@emil.fi)
[00:45:18] *** Joins: tanto (~tanto@178.62.223.32)
[00:45:18] *** Joins: theglass (~glass@user/theglass)
[00:45:18] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[00:45:18] *** Quits: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5) (Max SendQ exceeded)
[00:45:18] *** Quits: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: arakimo[m] (~arakimoma@2001:470:69fc:105::1:6559) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Ping timeout: 245 seconds)
[00:45:21] *** Quits: pimeys (~pimeysmat@2001:470:69fc:105::1:650a) (Ping timeout: 245 seconds)
[00:45:21] *** Quits: kinduff (~kinduff@user/kinduff) (Ping timeout: 245 seconds)
[00:45:25] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (Ping timeout: 250 seconds)
[00:45:25] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Ping timeout: 250 seconds)
[00:45:25] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (Ping timeout: 250 seconds)
[00:45:32] *** Quits: Roman[m]1 (~wrongt@2001:470:69fc:105::341e) (Ping timeout: 240 seconds)
[00:45:32] *** Quits: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350) (Ping timeout: 240 seconds)
[00:45:38] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Ping timeout: 260 seconds)
[00:45:38] *** Quits: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee) (Ping timeout: 260 seconds)
[00:45:38] *** Quits: nworb (~zbrownm]@2001:470:69fc:105::1:33db) (Ping timeout: 260 seconds)
[00:45:40] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:45:45] <flakland> piiiing
[00:45:46] *** Quits: nicoty (~nicoty@user/nicoty) (Ping timeout: 245 seconds)
[00:45:57] <vdamewood> pooooong
[00:46:00] *** Quits: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693) (Client Quit)
[00:46:14] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[00:46:14] *** Joins: CodeMouse92 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693)
[00:46:14] *** Quits: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718) (Ping timeout: 252 seconds)
[00:46:15] *** Quits: szkl (uid110435@uxbridge.irccloud.com) (Client Quit)
[00:46:15] *** Quits: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Remote host closed the connection)
[00:46:29] *** Joins: sebbu (~sebbu@2a01:cb10:856f:3000:70bc:5bd0:8f78:3b97)
[00:46:38] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[00:46:58] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[00:47:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[00:47:16] <vdamewood> Everyone back together now?
[00:47:23] *** Joins: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[00:47:27] <flakland> i think the problem might be the europeans are using metric pipes, but the US is SAE
[00:47:29] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 254 seconds)
[00:47:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:47:49] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[00:47:49] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[00:47:50] <user51> " MS-DOG mallocs " <- not sure if that's a typo in a comment..
[00:47:50] <vdamewood> Stupid American Eunits?
[00:47:54] *** Joins: szkl (uid110435@uxbridge.irccloud.com)
[00:47:56] <koollman> is there a libera server hosted by linode ? :)
[00:48:16] <vdamewood> koollman: Not sure. If you really want to find out, maybe ask in #libera.
[00:48:30] <vdamewood> Why did linode just go down?
[00:48:33] <user51> heh, both hahs functions share them :D
[00:48:45] <flakland> oh thats from automotive lingo :<  yes stupid american units indeed
[00:48:52] <koollman> vdamewood: emergency maintenance with 'no downtime'
[00:48:55] <user51> http://sprunge.us/J1JCUP
[00:48:57] *** Joins: Pent (sid313808@lymington.irccloud.com)
[00:49:07] <[itchyjunk]> koollman, its recommended you use roundrobin
[00:49:09] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Client Quit)
[00:49:12] <[itchyjunk]> rather than pick a specific server
[00:49:22] <user51> reading some gawk source
[00:49:31] <koollman> I'm just wondering about probable causes for the netsplit
[00:50:11] <[itchyjunk]> netsplit happens all the time for very trivial reason. server restart due to updates, desync etc etc
[00:50:17] <vdamewood> rhark ate the cable
[00:50:19] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[00:50:21] <vdamewood> shark
[00:50:26] <[itchyjunk]> the matrix servers seem to go down all the time too
[00:50:44] <[itchyjunk]> hmm too bad screen prices aren't going down
[00:50:49] <[itchyjunk]> rasp pi looks tempting to buy
[00:50:56] <[itchyjunk]> but i don't have a screen to hook it up to
[00:51:04] *** Joins: itok (sid418430@ilkley.irccloud.com)
[00:51:06] <[itchyjunk]> and screens are like $99
[00:51:12] <[itchyjunk]> while the computer itself is $40
[00:52:11] *** Quits: magla (~gelignite@55d436fa.access.ecotel.net) (Quit: Stay safe!)
[00:52:14] <[itchyjunk]> the $60 version comes with keyboard and a ssd with some type of OS in it
[00:53:06] <flakland> you can find used monitors pretty cheap, some people just throw them out
[00:53:07] <adder> the whole point of a pi is that you don't need a screen
[00:53:33] *** Quits: szkl (uid110435@uxbridge.irccloud.com) ()
[00:53:54] * Solak has a pi2 connected to a tv...
[00:55:34] <vdamewood> I ran out of HDMI ports on my TV to plug into.
[00:55:40] *** zaher_ is now known as zaher
[00:55:45] <Solak> runs irssi and is used for different things like emulation, coding, webbrowsing (for online shopping it is too slow).
[00:56:21] <user51> i kind of want a pi but i'm not sure what to do with it
[00:56:35] <adder> I use mine as a file server, the other is idling
[00:56:40] <Solak> pi4 seems to be able to function as some sort of backup-system since it is more powerfull.
[00:56:55] <koollman> user51: get one. or three
[00:57:30] <user51> is it still sdcard only? i don't know how reliable they are.
[00:58:46] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[00:58:48] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:58:54] <koollman> from crap to tolerable, depending what sd card you buy
[00:59:20] <koollman> but you can use external storage. on the pi4 you can also boot from external storage (and have pretty fast usb ports)
[00:59:33] <flakland> you still can't boot from the USB?
[00:59:48] <beaky> nice wish i had a raspberry pi i could host my tea database on it
[00:59:59] <user51> rapsberry ti
[01:00:24] <koollman> flakland: I just said you could, on the pi4
[01:00:27] <flakland> oh pi4, nice. that one can almost do gigabit networking
[01:00:35] <BurumaSerafuku> beaky: how many entries are in your DB?
[01:00:36] <vdamewood> To monitors these days use anything other than HDMI, DisplayPort, or Thunderbolt?
[01:00:40] <vdamewood> s/To/Do/
[01:00:54] <GeDaMo> Is DVI still a thing?
[01:01:07] <vdamewood> GeDaMo: That's kind of part of what I'm asking.
[01:01:29] *** Quits: img_ (~img@2405:6580:b1c0:2500:2ede:bbf7:e65:5b9) (Changing host)
[01:01:29] *** Joins: img_ (~img@user/img)
[01:01:31] *** Joins: ChanServ (ChanServ@services.libera.chat)
[01:01:31] *** erbium.libera.chat sets mode: +o ChanServ
[01:01:33] <adder> I'm using vga
[01:01:48] <vdamewood> Yay! Chanserv's back.
[01:01:49] <koollman> vdamewood: usb-c (with displayport in it) :)
[01:01:49] *** epony is now known as Guest3959
[01:02:04] *** CodeMouse92 is now known as Guest1476
[01:02:14] *** Joins: fling (~fling@user/fling)
[01:02:20] *** Joins: MetaNova (zero-one@znc/supporter/metanova)
[01:02:21] <mikrosis> I use a reduce function that simply subtracts the width property of objects (array) and finds out where there absolute difference is the smallest - that would be the object with a width that is closest to the given width.
[01:02:22] *** Joins: rvalue (~rvalue@user/rvalue)
[01:02:23] *** Quits: Guest1476 (~CodeMouse@2600:6c46:6000:97b:70c6:453d:f96c:d693) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:02:25] <vdamewood> koollman: I'll take it.
[01:02:27] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[01:02:39] *** Joins: Guest1476 (~CodeMouse@user/codemouse92)
[01:02:49] <vdamewood> adder: Was your computer and monitor made in this decade?
[01:02:50] <mikrosis> but now I want to reduce based on _two_ properties - width and height
[01:03:00] <mikrosis> so I give width and height and I want the object that comes close in both properties
[01:03:09] <mikrosis> now you will say: but how to decide what is more important? rank?
[01:03:14] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[01:03:16] <mikrosis> width and height should be equally important here
[01:03:19] <mikrosis> any ideas?
[01:03:21] *** Joins: deniska (~deniska@user/deniska)
[01:03:29] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[01:03:32] <adder> vdamewood, yeah. I have 1xHDMI and 1xVGA so that's kinda my only option without extensions
[01:03:37] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[01:03:42] *** Joins: rvalue (~rvalue@user/rvalue)
[01:03:44] <koollman> vdamewood: pretty nice if you connect a laptop and everything works. I have such a screen at work, can't find the ref right now. laptops connect to the screen with usb-c, get power through it, usb ports from the screen, and second display because the screen is linked to another with displayport cable. pretty great
[01:03:46] <adder> oh this /decade/
[01:03:50] <adder> I don't know, probably not
[01:04:01] <koollman> one cable, keyboard and dual screen and power come up
[01:04:04] *** Quits: arahael (~arahael@118.208.232.68) (Ping timeout: 256 seconds)
[01:04:39] *** Guest1476 is now known as CodeMouse92
[01:04:45] <vdamewood> koollman: Now I wonder if Thunderbolt monitors are really a thing, of it they're just DisplayPort over USB-C.
[01:04:59] *** Quits: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:05:18] <vdamewood> adder: Any idea approximately when?
[01:05:33] <beaky> yes i now have 429 entries in my tea database maybe i should look into optimizing it
[01:05:36] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[01:05:40] <koollman> vdamewood: some are true thunderbolt. different 'tunneling' of the signal
[01:05:45] <vdamewood> Intel stopped supporting VGA on on-board GPUs a few years ago.
[01:05:47] <beaky> so that it will be more scalable
[01:06:02] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[01:06:03] <adder> vdamewood, I bought this computer about 2 years ago, I had one monitor by then already, and I bought the other identical one some time later
[01:06:03] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:06:16] *** Joins: rvalue (~rvalue@user/rvalue)
[01:06:36] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[01:06:48] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[01:06:49] *** Joins: w0ng (~w0ng@103.1.212.158)
[01:06:51] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:06:53] <beaky> raspberry pi the only computer anyeone needs
[01:06:59] <user51> beaky: maybe make a tea tree
[01:06:59] <koollman> actually I just remember the screens are in the asset inventory. I can find models :)
[01:07:04] *** Joins: rvalue (~rvalue@user/rvalue)
[01:07:10] <beaky> yes i am looking into tree based data structures
[01:07:26] <beaky> since tea naturally grows on trees so they are a perfect match
[01:07:35] <BurumaSerafuku> you're funny
[01:07:43] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[01:07:43] <vdamewood> beaky: You need a binary search tea
[01:07:55] *** Joins: flakland (~flaknet99@32.211.211.39)
[01:08:08] *** Joins: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de)
[01:08:08] *** Joins: greasybyte (~greasybyt@pool-98-116-192-195.nycmny.fios.verizon.net)
[01:08:12] <beaky> yes the challenge is to make the search as cache friendly as possible to make all my 429 teas fit in cache
[01:08:34] <vdamewood> beaky: Make it work for up to 512 teas. Give yourself room to grow.
[01:08:37] <pulse> use a skiplist for maximum efficiency
[01:08:48] <BurumaSerafuku> looks like they can even fit in an atari 2600 cartridge
[01:08:57] <pulse> statistical data structures > whiny deterministic data structures
[01:09:13] * vdamewood hand pulse a bogosort
[01:09:16] <beaky> nice i will try skiplists then 
[01:09:18] <pulse> ugh
[01:09:46] <beaky> first i must formalize skiplists in agda and verify all the algorithms correct (even deletion which all textbooks always skip as an exercise for the reader for some reason)
[01:10:11] <KillerWasp> For me it was like a roller coaster. The netsplits were fun.
[01:10:16] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:10:28] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr)
[01:10:29] *** Joins: rvalue (~rvalue@user/rvalue)
[01:11:13] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[01:12:41] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[01:13:06] *** Quits: user51 (~user51@176.228.148.215) (Remote host closed the connection)
[01:13:50] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:14:05] <koollman> vdamewood: real world usb-c screen example: P2422HE 
[01:14:24] <koollman> (from dell)
[01:15:59] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:16:01] *** Joins: EdFletcher (~PKD@user/edfletcher)
[01:16:21] *** Joins: rvalue (~rvalue@user/rvalue)
[01:16:48] *** Quits: deniska (~deniska@user/deniska) (Remote host closed the connection)
[01:17:02] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:17:20] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:17:33] *** Joins: rvalue (~rvalue@user/rvalue)
[01:17:51] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[01:18:49] *** Joins: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net)
[01:18:51] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[01:19:04] *** Joins: rvalue (~rvalue@user/rvalue)
[01:19:05] *** Joins: jdmark (~jdmark@user/jdmark)
[01:19:39] <tomathy> so i can printf what i need, is there a way to return the string literal in C?
[01:20:09] <tomathy> return ("basdjasd %s, %s", blah, blah2) ?
[01:20:18] *** Joins: duuude (~user@user/duuude)
[01:20:32] <tomathy> or char * p = that; return p;
[01:20:36] <phogg> sprintf
[01:20:43] <tomathy> yay
[01:20:51] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:21:12] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[01:21:12] <tomathy> wait that returns an int
[01:21:14] *** Joins: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa)
[01:21:24] *** Joins: flakland (~flaknet99@32.211.211.39)
[01:21:26] *** Joins: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5)
[01:21:31] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[01:23:02] <tomathy> ah i have to set an argument of the method
[01:24:57] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[01:25:02] *** Quits: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:26:00] <vdamewood> Don't use sprintf. Use snprintf
[01:26:55] *** Joins: nitrix (~nitrix@user/nitrix)
[01:26:58] <tomathy> two questions
[01:27:01] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:27:05] <tomathy> 1. can i avoid this switch statement?
[01:27:06] <tomathy> https://bpa.st/UL7Q
[01:27:07] <bayaz> Title: View paste UL7Q 
[01:27:16] <tomathy> and 2. how do i get the bloody name out
[01:28:27] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[01:28:43] <beaky> yes you can use an array
[01:28:46] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[01:28:54] <vdamewood> char [][] face = {"", "one", "two", "three"...};
[01:29:03] <vdamewood> er char face[][]...
[01:29:27] <tomathy> oops
[01:29:32] <tomathy> i tried char ** face
[01:29:45] *** Joins: jenntech (~jenntech@134.134.139.86)
[01:30:00] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[01:30:05] <flakland> char *face[] 
[01:30:39] <flakland> "string" is a string literal, which is a const char *
[01:30:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[01:30:59] *** Joins: peace[m] (~elliotal_@2001:470:69fc:105::bb21)
[01:31:02] <flakland> "some-string-annnyyything"
[01:31:05] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[01:31:09] <vdamewood> flakland: True, but not when initializing a string array.
[01:31:14] <vdamewood> er char array
[01:31:33] <jenntech> could someone help me figure out why the player and the enemy are flipping when ran? https://bpa.st/22LA
[01:31:34] <bayaz> Title: View paste 22LA 
[01:31:39] <vdamewood> But still, an array of char pointers works better.
[01:31:55] <jenntech> line 251
[01:32:09] <flakland> oh yeah doesn't it need the length defined or some gotcha
[01:32:42] <vdamewood> jenntech: By the way, your name looks like it got registered by a troll back when the networks switched. You'll want to ask someone in #libera to drop it for you.
[01:32:56] <jenntech> ok will do
[01:33:54] *** Joins: maxzor__ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr)
[01:33:57] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:34:04] *** Joins: davidk156305 (~davidk156@2001:470:69fc:105::1:484e)
[01:34:38] *** Joins: Alpha3031[m] (~alpha3031@wikipedia/alpha3031)
[01:35:00] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[01:35:23] *** Joins: paoda[m] (~paodamatr@2001:470:69fc:105::9247)
[01:36:13] <jenntech> whats the command to register again? sorry
[01:36:45] <jenntech> nevermind lol
[01:37:06] <Stefan26> beaky you writing stuff here always puts a smile on my face
[01:37:36] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving.)
[01:37:51] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[01:38:21] <tomathy> face[][] doesnt seem to work
[01:39:04] <vdamewood> tomathy: use *face[] instead.
[01:39:22] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[01:40:36] <flakland> tomathy 'const char *face[] = { "one", "two" };'
[01:40:47] <vdamewood> jenntech: What do you mean 'flipping'?
[01:40:51] <tomathy> i get no compiler error
[01:41:04] <tomathy> but now how to concat without a library function?
[01:41:06] <jenntech> the enemy is coming up as the player and likewise
[01:41:18] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[01:41:45] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[01:42:06] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[01:42:11] *** Joins: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7)
[01:42:12] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[01:42:17] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[01:42:39] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:43:10] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:18] <[itchyjunk]> whats the difference between player and enemy?
[01:43:24] <flakland> tomathy, extend your C compiler
[01:43:31] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[01:43:44] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[01:43:47] <jenntech> just the ascii image
[01:43:51] *** Joins: nworb (~zbrownm]@2001:470:69fc:105::1:33db)
[01:44:25] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[01:44:31] <vdamewood> I wonder how hard it would be to port PyGame to SDL2.
[01:44:35] *** Joins: horseface (~horseface@user/horseface)
[01:44:35] <flakland> or make a macro that assumes null terminator always exists (bad idea)
[01:44:40] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:44:46] <[itchyjunk]> what triggers the flip?
[01:44:46] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[01:44:47] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[01:44:52] <[itchyjunk]> or do they flip right from the start?
[01:45:01] *** Joins: kinduff (~kinduff@user/kinduff)
[01:45:02] <jenntech> they flip from the start
[01:45:03] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[01:45:07] *** Quits: horseface (~horseface@user/horseface) (Remote host closed the connection)
[01:45:34] *** Joins: nicoty (~nicoty@user/nicoty)
[01:45:48] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[01:45:51] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:46:33] *** Joins: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718)
[01:46:45] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[01:46:54] <tomathy> finally, i can breathe https://bpa.st/OHGA
[01:46:56] <bayaz> Title: View paste OHGA 
[01:47:07] <tomathy> that took me two hours to write
[01:47:11] *** Joins: ketchupicecream (~ketchupic@user/ketchupicecream)
[01:47:11] *** Joins: spectern[m] (~specternm@2001:470:69fc:105::1:6842)
[01:47:13] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[01:47:27] <tomathy> and i start as a professional developer in a few days
[01:47:40] <tomathy> Lord help me
[01:47:41] *** Joins: hurl (~hurl@212.183.219.210.dyn.user.ono.com)
[01:47:55] <vdamewood> tomathy: Could be worse. You could have already started as a professional dev.
[01:47:59] *** Joins: psydroid (~psydroid@user/psydroid)
[01:48:02] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:09] <jenntech> ^
[01:48:17] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:48:29] <[itchyjunk]> so
[01:48:44] <[itchyjunk]> line 198 you say ascii[1] is player right?
[01:48:50] <jenntech> yes
[01:49:11] <[itchyjunk]> line 252 ascii[0] says player
[01:49:14] <[itchyjunk]> is that intended?
[01:49:40] <[itchyjunk]> its ascii[0] sometimes and ascii[1] sometimes, your player and enemy
[01:49:59] <jenntech> really?
[01:50:07] <jenntech> thats prob whats wrong then lol
[01:50:46] *** Joins: fulminatingmoat (~fulminati@2001:470:69fc:105::1:658d)
[01:52:35] <jenntech> thanks guys.. its working now
[01:53:02] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[01:53:29] *** Joins: echo (uid504326@user/echosmile)
[01:55:10] *** Joins: EdFletcher (~PKD@user/edfletcher)
[01:55:16] *** Joins: pimeys (~pimeysmat@2001:470:69fc:105::1:650a)
[01:56:16] <[itchyjunk]> what language is that?
[01:56:23] <davve> looks like python
[01:56:29] <[itchyjunk]> oh interesting
[01:56:34] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[01:56:36] <[itchyjunk]> didn't remind me of py
[01:56:48] *** Quits: absc (~absc@dynamic-adsl-94-34-200-126.clienti.tiscali.it) (Quit: Leaving)
[01:56:54] <[itchyjunk]> guess i haven't lost all my brain cells since i could debug it
[01:56:57] <davve> might be wrong
[01:57:11] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:57:15] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Ping timeout: 276 seconds)
[01:57:20] <jenntech> nevermind
[01:57:35] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[01:57:35] <vdamewood> jenntech: Nirvana?
[01:57:50] <[itchyjunk]> bug is still there?
[01:58:06] *** Quits: jaysicks (~jaysicks@91-82-168-15.pool.digikabel.hu) (Remote host closed the connection)
[01:58:16] <jenntech> i have a screenshot.. is there a paste place i can use to show you?
[01:58:28] <[itchyjunk]> imgur or imgbb
[01:58:38] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[01:59:23] <[itchyjunk]> for line in ascii[1]:
[01:59:29] <[itchyjunk]> this wouldn't make sense in py, would it?
[01:59:37] <jenntech> https://imgur.com/a/KQ38rqK
[01:59:38] <[itchyjunk]> 'for' would want an array
[01:59:50] <[itchyjunk]> ascii[1] isn't an array?
[02:00:33] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[02:00:37] <vdamewood> Puff, the fractal dragon, was written in C. And frolicked while processes switched in mainframe memory.
[02:00:51] *** Quits: mikrosis (~mikrosis@dynamic-046-114-173-011.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:00:55] <[itchyjunk]> what am i looking at in the image?
[02:01:02] <[itchyjunk]> i can see the player i suppose
[02:01:05] <jenntech> yes
[02:01:07] <[itchyjunk]> yellow guy
[02:01:16] <[itchyjunk]> the enemy looks like my ex
[02:01:33] <jenntech> when they're swapped it lines the two characters up right, but if you put it back to normal it's all fked
[02:01:34] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:01:37] <vdamewood> jenntech: Impressive ASCII art on the fencer, but the dragon needs work.
[02:01:58] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:02:04] <[itchyjunk]> is the terminal big enough to draw all that?
[02:02:09] <jenntech> lol _0x1d3 itchyjunk
[02:03:00] <jenntech> I thought it might be cuz of the color tags I put in but I don't think they match to how the reaper is messed up
[02:03:06] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Max SendQ exceeded)
[02:03:13] *** Quits: Akuli (~Akuli@213.216.211.88) (Quit: Akuli)
[02:03:21] <vdamewood> reaper?
[02:03:27] <jenntech> enemy sorry
[02:03:40] <vdamewood> I thought it was a dragon.
[02:03:44] <[itchyjunk]> what happens if you don't prnt the player but just the enemy?
[02:04:37] *** Quits: c2a1 (~c2a1@2607:fb90:1771:25aa:c358:d695:5d6f:7a9) (Remote host closed the connection)
[02:04:39] <jenntech> ?? one sec
[02:04:50] *** Joins: c2a1 (~c2a1@2607:fb90:1771:25aa:c358:d695:5d6f:7a9)
[02:05:16] *** Joins: vrp2zqL7 (~v8XhLN3K@74.5.157.96)
[02:05:33] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[02:05:44] *** Joins: Roman[m]1 (~wrongt@2001:470:69fc:105::341e)
[02:06:03] <vdamewood> I swear I don't understand Swedish phonetics.
[02:06:23] <stella> if u think thats bad u wont like denmark
[02:07:00] <pulse> vdamewood, https://www.youtube.com/watch?v=s-mOy8VUEBk
[02:07:01] <bayaz> Title: Danish language 
[02:07:19] *** Joins: Intelo (~Intelo@88.246.77.60)
[02:07:20] <[itchyjunk]> just speak english in denmark
[02:07:36] <[itchyjunk]> everyone from denmark i know speaks english as well
[02:08:34] <pulse> kameloso
[02:09:54] <jenntech> https://imgur.com/a/YbbE58H
[02:10:30] <Intelo> If I were to make an html based (or whatever based) gui for a commandline based unix system (which it is commandline by default), what would be the starting point? where can i learn on how to 'connect' the ui part to the backend part? Here I said 'backend' to the unix system. The 'frontend' would be the html ui. Just like a web app were you can
[02:10:31] <Intelo> decouple the frontend and backend. In my case, the unix system will stream data via socket etc and now the backend and frontend can be on different physical hardware as well as remotely distant.
[02:10:37] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[02:10:50] <[itchyjunk]> oh it prnted it well?
[02:10:58] <jenntech> yes
[02:11:05] <[itchyjunk]> my suspicion is that there is not enough "room" in the terminal
[02:11:10] <[itchyjunk]> idk the technical term for that
[02:11:49] <jenntech> is there a workaround to make it bigger?
[02:12:07] <[itchyjunk]> i have no idea
[02:12:15] <[itchyjunk]> i am guessing based on the top of the hat
[02:12:29] <[itchyjunk]> it seems to be on the right most possible position
[02:12:32] <vdamewood> pulse: WTFdid I just watch?
[02:12:44] <[itchyjunk]> but the hat below it needs to be further right, so it goes to a new line
[02:12:45] <pulse> vdamewood, a documentary on the Danish language
[02:12:54] <[itchyjunk]> you can try reducing the distance between player and enemy
[02:13:02] <[itchyjunk]> get them as close as possible
[02:13:57] <jenntech> ok
[02:14:07] <vdamewood> pulse stella: So, apparently a g is pronounced [j] and kj is pronounced [ʃ] (š).
[02:14:32] <pulse> in which galaxy
[02:14:35] <stella> vdamewood: yeh i think i know the sounds you mean
[02:14:42] <stella> the kj one confuses me a bit
[02:14:44] <vdamewood> pulse: Sweeden
[02:14:50] <pulse> i see
[02:14:54] <stella> but i would say danihs pronunciation
[02:14:58] <stella> is way more fucked as a thing
[02:15:00] <stella> in general
[02:15:05] <stella> danish *
[02:15:48] <vdamewood> Yeah, but I'm not listening to a Danish song trying to sing along.
[02:16:08] <jenntech> tried erasing all the spaces but it still does it
[02:18:04] <vdamewood> stella: And the only reason I know about kj is because of PewDiePie
[02:18:10] <stella> oic
[02:18:16] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[02:18:22] <stella> i lived in denmark for a year as a student
[02:18:29] <stella> so i learnt a little of their weird language
[02:18:34] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[02:18:46] <stella> and can vaguely understand some swedish also cuz they're similar
[02:19:12] <stella> (i mean, i can go to a café in sweden and order a coffee in danish and it works, thats kind of the level lol)
[02:19:47] <vdamewood> Ordering coffee is probably fairly easy, but since English uses Italian names for everything, I'd probably do better in Italy myself.
[02:20:33] *** Joins: hololeap (~hololeap@user/hololeap)
[02:20:41] <vdamewood> But I also half expect everyone to use the Italian names.
[02:20:50] *** Quits: swp (~Thunderbi@143.176.249.0) (Ping timeout: 260 seconds)
[02:21:38] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[02:21:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[02:22:09] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving.)
[02:22:23] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr)
[02:22:41] *** Quits: maxzor__ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[02:23:23] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[02:23:59] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:24:27] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[02:25:51] *** Joins: arakimo[m] (~arakimoma@2001:470:69fc:105::1:6559)
[02:26:18] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[02:26:37] <[itchyjunk]> yeah you need more space possibly
[02:26:40] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:26:41] <[itchyjunk]> not sure how to get it
[02:26:52] <[itchyjunk]> maybe there is a way to make that window bigger 
[02:26:57] <[itchyjunk]> so make your menu smaller
[02:27:14] <[itchyjunk]> try not printing any of the side menu and just the player and enemy
[02:27:22] <[itchyjunk]> if that works, you'll have to rethink menu placement
[02:27:28] <[itchyjunk]> if that doesn't work, i am out of ideas
[02:28:34] <jenntech> ok thanks for your help...
[02:30:13] *** Quits: APic (~apic@apic.name) (Ping timeout: 256 seconds)
[02:30:15] <gambl0re> can I ask postgres questions in here?
[02:30:24] <hassoon_> gambl0re: meh sure
[02:30:28] <hassoon_> this is programming after all
[02:30:46] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:40a0:b50a:e8ed:d1eb) (Ping timeout: 245 seconds)
[02:30:59] <vdamewood> gambl0re: You can ask Postgres questions, but you aren't allowed to ask if it's okay to ask Postgres questions.
[02:31:37] <vdamewood> Oh, wait. We dropped the don't-ask-to-ask rule.
[02:31:42] *** Joins: APic (apic@apic.name)
[02:31:52] <vdamewood> So, nevermind that, then.
[02:33:48] *** Joins: pizdets_ (~pizdets@183.182.110.216)
[02:34:11] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 250 seconds)
[02:34:26] *** Quits: pizdets (~pizdets@183.182.111.120) (Ping timeout: 250 seconds)
[02:34:31] <gambl0re> each project has 3 awards bestproject, bestdesign, bestreadme. I want to get the winners of each award for all projects
[02:34:35] <gambl0re> https://www.db-fiddle.com/f/4SVQW9Yq9uYrq2cDviB8be/1
[02:34:36] <bayaz> Title: DB Fiddle - SQL Database Playground 
[02:34:56] <gambl0re> is this possible with the way my tables are designed?
[02:34:56] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[02:34:57] *** Quits: c2a1 (~c2a1@2607:fb90:1771:25aa:c358:d695:5d6f:7a9) (Ping timeout: 240 seconds)
[02:35:33] <Decker> you can get each one right?
[02:35:39] *** Quits: Fairy97 (~Fairy@ti0004a400-6144.bb.online.no) (Ping timeout: 256 seconds)
[02:35:44] <Decker> then you just need to concat selects with UNION ALL ?
[02:35:59] *** Quits: hurl (~hurl@212.183.219.210.dyn.user.ono.com) (Quit: Leaving...)
[02:36:21] <gambl0re> Decker: not sure what you mean
[02:36:42] <Decker> you can get the winner of each award right?
[02:36:47] <Decker> individually
[02:37:05] <gambl0re> yea
[02:37:24] <gambl0re> i want to get the winners of each award for all projects
[02:37:25] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:37:34] <gambl0re> and somehow display it in a table
[02:37:35] *** Joins: advanced_malform (~nuke@189.5.58.77)
[02:37:54] *** Joins: jj_attaq (~jj_attaq@95.180.91.76)
[02:37:59] <Decker> so you can take each of those and use UNION to join the select results
[02:38:02] <Decker> then it's just 1
[02:38:08] <Decker> recordset, not really a table
[02:38:31] <gambl0re> can you update my SQL cause I have no idea what you are talking about
[02:38:38] <gambl0re> i've never heard of a UNION before
[02:38:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[02:39:30] <Decker> maybe that's something you could look up in relation to select? https://www.postgresql.org/docs/8.3/queries-union.html
[02:39:32] <bayaz> Title: Combining Queries 
[02:40:23] <gambl0re> Oh I tried using that and I still counltnt get the result I wanted
[02:41:16] <gambl0re> any postgres in here can help me out, just PM me. thanks
[02:41:29] *** Quits: SGautam (uid286066@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:43:12] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[02:43:55] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e538:7cb4:ad6e:63d1) (Quit: Leaving)
[02:44:03] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:44:22] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e538:7cb4:ad6e:63d1)
[02:45:18] *** stella is now known as aoeixsz4
[02:45:46] *** Parts: jj_attaq (~jj_attaq@95.180.91.76) ()
[02:45:47] *** Joins: independent56 (~independe@148.252.128.83)
[02:45:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:46:00] <independent56> What's best for GUI? Java, Python's Tkinter, or C?
[02:46:16] *** Joins: trevors (~trevors@user/trevors)
[02:46:43] <vdamewood> independent56: No.
[02:47:01] <sonny> JavaFX is really nice
[02:47:12] <pulse> independent56, C#
[02:47:21] <independent56> I'll have a look
[02:47:28] <oldlaptop> independent56: Tk, but it's best talked to with Tcl, not python
[02:48:05] *** Quits: regedit (uid150526@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:48:08] <Decker> gambl0re  haven't joined bestprojects or designes; though you'll proobably want LEFT OUTER JOIN so you get  NULL where there isn't an entry - then you can include in the where 'where bestprojects.project_id IS NOT NULL and ... '
[02:48:24] <Decker> but that site says ' Query Error: error: common column name "project_id" appears more than once in left table '  and I have no idea what it is really complaining about.
[02:48:40] <Decker> in what statement? where is the first and second reference?
[02:48:47] <vdamewood> I'm still in camp Qt.
[02:48:49] <ProfSimm> How would you encode efficiently a stream of values, where some of them may have a label (associative) and many many not?
[02:49:14] <Decker> How come noone ever comes by with a homework for 'generating good error messages' homework?
[02:49:22] <[itchyjunk]> best gui is irl
[02:49:24] <[itchyjunk]> i hope
[02:50:34] <gambl0re> Decker: have you tried testing your query to see if it actually works?
[02:50:48] <Decker> Query Error: error: common column name "project_id" appears more than once in left table ya - it doesn't.
[02:50:51] <Decker> but I can't fix it
[02:51:34] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[02:51:40] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Read error: Connection reset by peer)
[02:56:13] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:56:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[02:57:27] *** Quits: advanced_malform (~nuke@189.5.58.77) (Quit: Leaving.)
[02:57:58] <sonny> [itchyjunk]: I can't program irl :(
[02:58:05] <[itchyjunk]> same
[02:58:13] <[itchyjunk]> i can't program ifl
[02:58:37] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Remote host closed the connection)
[03:00:11] <pulse> i can program in ftl
[03:00:36] <vdamewood> I can't program my cat.
[03:01:21] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:01:28] <hassoon_> nah you can
[03:03:34] <sonny> [itchyjunk]: working on anything interesting?
[03:03:46] <[itchyjunk]> sonny, on not dying
[03:03:48] <[itchyjunk]> been sick 
[03:03:56] <Decker> gambl0re https://www.db-fiddle.com/f/4SVQW9Yq9uYrq2cDviB8be/3
[03:03:57] <bayaz> Title: DB Fiddle - SQL Database Playground 
[03:03:58] <sonny> oh :(
[03:04:03] <independent56> To me, QT just looks like open-source commercial software, not open-source free software. It makes you pay for it,either through time or money. Tkinter just puts itself out there.
[03:04:06] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[03:04:24] <Decker> oh that's the version that didn't work hold on
[03:05:24] <Decker> https://www.db-fiddle.com/f/4SVQW9Yq9uYrq2cDviB8be/4 '
[03:05:25] <bayaz> Title: DB Fiddle - SQL Database Playground 
[03:05:26] <independent56> What is the best? Tutorialspoint, Javatpoint, or geeksforgeeks?
[03:05:35] <independent56> Tutorialspoint is probably at the bottom.
[03:05:49] <sonny> [itchyjunk]: I don't see any point to continuing my compiler so I probably will look at category theory, if I can get past this summation stuff
[03:07:53] <sonny> think I'm getting better at using search engines
[03:07:55] <[itchyjunk]> ah yes, id started on cat theory
[03:08:00] <[itchyjunk]> i did a hello world in it even
[03:08:08] <[itchyjunk]> i'll try again soon, hopefully
[03:09:06] <sonny> my new project might be making a new statistic for basketball
[03:10:13] *** Quits: Intelo (~Intelo@88.246.77.60) (Ping timeout: 256 seconds)
[03:10:16] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[03:11:40] *** Quits: independent56 (~independe@148.252.128.83) (Quit: Client closed)
[03:12:09] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[03:12:11] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[03:12:15] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:12:59] *** Joins: advanced_malform (~nuke@189.5.58.77)
[03:13:11] *** Joins: Joanna (uid57472@lymington.irccloud.com)
[03:14:45] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Ping timeout: 256 seconds)
[03:17:08] <gambl0re> Decker: you've got an error somewhere
[03:19:51] *** Quits: _inky (~inky_@46.36.119.204) (Ping timeout: 256 seconds)
[03:20:22] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (Remote host closed the connection)
[03:21:04] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:21:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:21:34] *** Joins: pavonia (~user@user/siracusa)
[03:21:42] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:44] <Decker> gambl0re not with /4 ?
[03:23:29] <Decker> it's not filtered to just the results - I would think 'best' would only have 1 project or a user... but most combinations of users and porjects have at least one award
[03:24:36] *** Joins: trevors (~trevors@user/trevors)
[03:24:50] <gambl0re> Decker: this is what I would like the output to look like https://www.db-fiddle.com/f/4SVQW9Yq9uYrq2cDviB8be/2
[03:24:51] <bayaz> Title: DB Fiddle - SQL Database Playground 
[03:24:58] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-1037-static.midco.net) (Quit: Leaving)
[03:25:47] <Decker> gambl0re :) GL that's beyond my sql skills.  that's something that should be done in the reporting language and not SQL IMO
[03:25:48] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[03:26:07] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[03:26:12] <mehwork> is AWS API Gateway only for serverless?
[03:26:14] <gambl0re> Decker: yes i thought it would be quite difficult to do something like that. thanks anyway for your help
[03:27:42] <[itchyjunk]> sonny, what does that mean?
[03:28:09] <[itchyjunk]> you make up new static without any regards to the planet?
[03:28:18] <[itchyjunk]> have you considered how much it contributes to global warming?
[03:29:06] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1037-static.midco.net)
[03:29:40] <koollman> mehwork: no
[03:30:23] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 256 seconds)
[03:30:33] *** Quits: advanced_malform (~nuke@189.5.58.77) (Quit: Leaving.)
[03:33:29] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:34:16] *** Joins: kli_ (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[03:34:43] *** Joins: _inky (inky_@gateway/vpn/protonvpn/inky)
[03:35:51] *** Quits: kli_ (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Remote host closed the connection)
[03:36:11] *** Joins: zaher_ (~zaher@37.48.159.107)
[03:37:31] <gambl0re> Decker: I got it!
[03:37:34] <gambl0re> you want to see?
[03:37:37] <Decker> sure
[03:37:41] *** Quits: zaher (~zaher@37.48.158.108) (Ping timeout: 250 seconds)
[03:38:03] <gambl0re> https://www.db-fiddle.com/f/4SVQW9Yq9uYrq2cDviB8be/6
[03:38:04] <bayaz> Title: DB Fiddle - SQL Database Playground 
[03:38:16] <gambl0re> obiously, i dont figure it out someone else did
[03:39:30] <ProfSimm> Let's say we intersperse the input/output/error type of a function as inline assert checks within the function's code itself. I wonder would there be a reliable way of extracting types from it as if they were written out separately?
[03:39:33] <Decker> ya 
[03:39:38] <ProfSimm> The expressions will be pure
[03:39:47] <ProfSimm> Well not all but the assertions would be
[03:40:03] <ProfSimm> I'll partially fold the code, reducing what I can.
[03:40:09] <Decker> I was just randomly sorta saying 'ya'... Array_agg is neat.
[03:40:10] <ProfSimm> Decker: done something like this?
[03:40:26] <ProfSimm> Oh you were randomly saying yeah :P
[03:40:29] *** Quits: k8yun (~k8yun@24.244.29.215) (Ping timeout: 256 seconds)
[03:40:32] <Decker> ya sorta :)
[03:40:45] *** zaher_ is now known as zaher
[03:41:01] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: Textual IRC Client: www.textualapp.com)
[03:41:52] <Decker> Promises Promises...  https://youtu.be/CJK6yfx9AK4?t=43
[03:41:53] <bayaz> Title: Naked Eyes - Promises, Promises (Official Video) 
[03:42:18] <Decker> and uhmm object returns like {err:true/false, data:{object} } for multi-return like go
[03:42:23] *** Joins: k8yun (~k8yun@24.244.29.215)
[03:43:55] <Decker> ProfSimm I've noticed playing with promises, and long chains of them, that the return path becomes a seaprate graph from the call path... sort of in parallel but not the same
[03:44:32] <Decker> you don't exactly just go up the call tree from where you are, when you really leverage promises anyway; there's like a setup/inital condition check/validation and then genrate some event to a far system and wait for a result
[03:44:44] <Decker> wait might include a timeout that throws a reject( "timeout" )
[03:45:08] <Decker> which is the return value instead... but .then()'s on't fire and .catch() does... but you can turn a caught rejection into a resolved promise too
[03:45:18] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[03:45:35] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:45:55] <ProfSimm> I sense my brain is vastly smaller than all things I have to fit simultaneously in it to make this project work
[03:46:09] <ProfSimm> Damn it.
[03:47:54] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[03:47:59] <sonny> [itchyjunk]: I didn't know stats had a cost
[03:48:05] <sonny> afk
[03:49:00] *** Quits: tomathy (~jenova@user/quetzl) (Remote host closed the connection)
[03:50:09] *** Joins: scabby (~scabby@user/scabootssca)
[03:50:46] <ProfSimm> How can I implement exceptions as a return result, but also allow it to bubble up the stack. hmm
[03:51:35] <Decker> if !registered catch, return again
[03:51:56] <pulse> i find with difficult problems it's best start with 5 candles equidistantly placed from eachother, then you draw a pentagram in between them and
[03:52:12] <pulse> wait we're discussing programming, never mind
[03:54:26] <Decker> ProfSimm there is the setjmp/longjmp  C solution... but there's a few different methods for handling exceptions actually; when you install MinGW you get to choose what sort of C/C++ exception hadnling youw ant ( SEH uhmm https://en.wikipedia.org/wiki/Exception_handling#Exception_support_in_programming_languages I guess has a list of more than I can list)
[03:54:26] <bayaz> Title: Exception handling - Wikipedia 
[03:54:51] *** Joins: CaCode (~CaCode@user/cacode)
[03:56:45] <ProfSimm> Decker: well I'm concerned mostly with semantics and less with implementation right now. 
[03:56:48] *** Quits: echo (uid504326@user/echosmile) ()
[03:56:51] <Decker> const pending=[];  const p = new Promsie( (resolve,reject)=>{  pending.push( {p, resolve, reject} ) } );       Promises sort of have exceptions - along a chain, there's registered handlers, which are callbacks.  - which I guess puts more syntax around calling things
[03:57:03] <ProfSimm> Decker: see, it's unclear how a pure function can throw. Seems like a side-effect doesn't it
[03:57:12] <Decker> well it certainly is
[03:57:16] <ProfSimm> Decker: well yeah
[03:57:43] <ProfSimm> Decker: so I want it to look sort of like   (a) -> a > 0 ? sqrt(a) : error()
[03:57:51] <ProfSimm> And somehow this to be an exception 
[03:58:02] *** Quits: darsie (~darsie@84-113-55-200.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[03:58:28] <ProfSimm> But be returned from an expression
[03:58:42] <CaCode> ProfSimm, I am no IT or CS but wouldn't it possible for it to throw an error as some sort of result that always gets returned to certain ranges of input?
[03:58:51] <CaCode> an error just as another form of output?
[03:59:45] <ProfSimm> CaCode: I can always special case it and say "returning error type throws it". But the problem is what I do after that. Also what if I want a function that builds an error without throwing. There's ambiguity. Or did you mean something else?
[03:59:51] <Decker> it just becomes a tagged union of 'exception:true/false and data:{data if false} {exception detail if true}'  which is just an additional bit to return; and have to check in the return handler that gets results
[04:00:29] <Decker> if it doesn't throw it why did it build it?
[04:00:50] <Decker> (what an abuse of it :) )
[04:00:55] <CaCode> ProfSimm, not sure
[04:01:47] <Decker> like if it was targetin x86 I'd say just set the Z flag on return and immeditealy do JZ exception_path  
[04:01:48] <ProfSimm> Decker: well the recipient may choose to throw it conditionally or I may pass an error for display or god knows what.
[04:02:09] <CaCode> like for example if you had a pure function called "divide by" then the input 0 returns one number that is reserved as  error code?
[04:02:22] <Decker> sure and wrap it in an otherwise valid return clearing the exception bit
[04:02:55] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:03:08] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Ping timeout: 252 seconds)
[04:03:23] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:05:11] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:05:55] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[04:06:16] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:06:26] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 252 seconds)
[04:11:30] *** Quits: DrAnything (uid538291@id-538291.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:12:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:13:10] *** Joins: szutt (~szutt@116.37.2.145)
[04:13:14] *** Joins: kron (~weechat@user/qaph)
[04:13:45] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[04:14:37] <KillerWasp> aaaaargh
[04:14:46] *** Joins: gerow (~gerow@2600:1700:8660:c570:e42d:8ff7:6b8f:e5f)
[04:15:41] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:15:56] <KillerWasp> JZ is also used for equal condition
[04:16:18] <KillerWasp> like multifunction, yes.
[04:16:21] <senoraraton> So I have a set of functions ~5 that need access to the same dataset, is there a convient way to set up a variable scoped to these functions so that I can treat the data as "quasi" global?
[04:16:53] <inhahe_> isn't that what OOP is :P
[04:17:02] <nomagno> senoraraton: highly message-dependent
[04:17:06] <nomagno> Language' dependent*
[04:17:25] <nomagno> Which language?
[04:17:26] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 245 seconds)
[04:17:50] <nomagno> You might want to pass a pointer to the dataset to the functions
[04:17:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[04:18:15] <KillerWasp> senoraraton: like you need a pointer to a structure for use in all the functions
[04:18:30] <KillerWasp> well, in OOP are class
[04:18:36] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[04:18:54] <senoraraton> C++.  Essentially KillerWasp.  I'm working with SDL and I have a set of functions that need to operate on my window, and need the window pointer, and the renderer pointer, and the surface pointer.
[04:19:04] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[04:19:10] <KillerWasp> in OOP you don't need a pointer where can use in the same class for all functions member
[04:19:58] <nomagno> senoeraraton: I'd use a custom struct pointer for that
[04:20:07] <KillerWasp> like C++ are OOP...
[04:20:33] <KillerWasp> in C++ use class/structure, and C only structure
[04:20:59] <senoraraton> So create an object that holds the data, and then pass the object around to the functions?
[04:21:05] <nomagno> struct mydatabase  { SDL_Window *window; SDL_Renderer *renderer; }; int myfunc(struct mydatabase *db);
[04:21:13] <KillerWasp> although in C you can use all pointers for functions in callback style
[04:21:25] <KillerWasp> all pointers for functions in the structure
[04:21:47] <nomagno> This is how I'd do it in C, but it is valid C++
[04:22:17] <KillerWasp> nomagno: no really, in C++ the structure is a camouflaged class
[04:22:35] <KillerWasp> all in public access
[04:23:10] <nomagno> I said it's valid C++, not idiomatic.
[04:23:49] *** Joins: src (~src@user/src)
[04:23:53] <KillerWasp> it's valid, but have other behavior
[04:23:54] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:24:17] *** Joins: audio (~audio@user/audio)
[04:24:36] <nomagno> I wouldn't say it's any different in this case.
[04:24:59] <KillerWasp> like a class, and with all the problems with ctor if you use ELF or ASM, that nightmare.
[04:25:01] <nomagno> You'd still be using db->renderer to access the SDL_Renderer pointer
[04:25:16] <nomagno> Well that's kinda orthogonal
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:25:32] <nomagno> Happens with literally almost anything in C++
[04:26:18] <KillerWasp> senoraraton: mmm... it's a binding?
[04:28:23] <KillerWasp> C++ is still nice for use the functions of C like SDL.
[04:28:39] <nomagno> I don't get what your point is
[04:28:40] <KillerWasp> except for functions that need a callback.
[04:28:41] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:29:39] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:29:57] <nomagno> You're the one talking about how fit C++ is, I only threw a possible function signature that fits the requirements and is reentranr
[04:30:00] *** Joins: Blasphemian (~Blasphemi@user/blasphemian)
[04:30:09] <nomagno> More reentrant than required*
[04:30:17] *** Joins: kron (~weechat@user/qaph)
[04:31:58] <KillerWasp> maybe senoraraton must say more details for understand the problem
[04:32:03] *** Joins: MsFoxEmilySmith (~MsFoxEmil@S01069050ca4e3573.cg.shawcable.net)
[04:33:36] <MsFoxEmilySmith> https://www.youtube.com/watch?v=7whVCTZX5fA
[04:33:37] <bayaz> Title: Alphavile - big in japan (Nightcore tempo) 
[04:33:52] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[04:34:02] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[04:39:26] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving.)
[04:40:45] *** Quits: Blasphemian (~Blasphemi@user/blasphemian) (Quit: WeeChat 2.8)
[04:41:28] *** Joins: horseface (~horseface@user/horseface)
[04:41:41] *** Joins: Blasphemian (~Blasphemi@user/blasphemian)
[04:42:36] <Thedarkb1-Deskto> horseface, is your name a reference to McAlpine's Fusiliers?
[04:42:36] *** Joins: anon__ (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:42:43] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: Connection reset by peer)
[04:43:46] *** Joins: lilgopher (~textual@2601:241:8000:38f0:e066:45e5:41b6:82b6)
[04:44:51] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[04:47:08] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:47:21] *** Joins: ejjfunky (~ejjfunky2@125.164.23.110)
[04:48:11] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[04:50:00] *** Joins: qaph (~weechat@user/qaph)
[04:50:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:50:52] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:52:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[04:52:47] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 256 seconds)
[04:52:49] *** qaph is now known as kron
[04:53:21] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:53:41] *** Joins: chillbruh (~chillbruh@2001:470:69fc:105::1:8946)
[04:54:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:54:38] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[04:56:45] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:58:03] *** peace[m] is now known as Elliot[m]
[05:00:08] *** Joins: kish` (~aqua@user/aqua)
[05:00:43] *** Joins: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-103B-static.midco.net)
[05:03:04] *** Joins: panella32 (~panella32@154.6.22.11)
[05:03:12] *** Quits: panella32 (~panella32@154.6.22.11) (Client Quit)
[05:03:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:03:29] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-1037-static.midco.net) (Ping timeout: 250 seconds)
[05:03:38] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[05:05:22] *** Joins: flakland (~flaknet99@32.211.211.39)
[05:06:23] *** Quits: monr0e (~monr0e@smtp.vixen.international) (Ping timeout: 256 seconds)
[05:08:17] *** Quits: k8yun (~k8yun@24.244.29.215) (Ping timeout: 240 seconds)
[05:09:24] *** Joins: henbruas (~henbruas@ti0003a400-2412.bb.online.no)
[05:10:07] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:11:15] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 256 seconds)
[05:11:45] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[05:14:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:14:58] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[05:15:27] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[05:16:45] *** Joins: off^ (~off@128-092-174-141.biz.spectrum.com)
[05:16:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:18:26] <hassoon_> am i missing something ?
[05:18:59] <flakland> did you miss that lurgid bee?
[05:19:00] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (Remote host closed the connection)
[05:19:22] <vdamewood> hassoon_: Do you have a full set of polyhedral dice?
[05:19:32] <MsFoxEmilySmith> i think im gonna be a billionaire one day
[05:19:45] <smallville7123> ok so this backtracking bug is fixed by setting the matchdata matches to 0 after popping, eg     iterator.popIterator(match.matches); match.matches = 0; return match;
[05:19:45] <hassoon_> writing a CRUD java spring boot code, calling repository.save(updatedModel) inserts a new row in the database rather than updating the row, what is happening
[05:19:48] <inhahe_> what kind of die isn't polyhedral
[05:20:36] <vdamewood> inhahe_: A coin?
[05:21:05] <vdamewood> A one-sided die (aka a sphere)?
[05:21:19] <MsFoxEmilySmith> inhahe: one that isnt hedral mostly
[05:21:43] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[05:21:55] <MsFoxEmilySmith> not all shapes have hedra / faces
[05:22:05] <MsFoxEmilySmith> (mosty dont)
[05:22:05] <pulse> can you make a dice out of a mobius strip
[05:22:19] *** Joins: maxzor__ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[05:22:19] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:27e5:9579:b326:6aba) (Ping timeout: 250 seconds)
[05:22:25] <MsFoxEmilySmith> why not? a dice is just a random variable
[05:22:26] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[05:22:27] <vdamewood> pulse: It wouldn't role very well.
[05:22:31] <pulse> hah
[05:22:37] <duuude> most dices have rounded edges
[05:22:40] <MsFoxEmilySmith> unfortunately we only have some shitty discrete RV with 6 sides we call a 'dice'
[05:22:49] <pulse> wouldn't a mobius strip be a one sided die
[05:22:53] <vdamewood> pulse: Also, prepare to hate English a little more. 'die' is the singular, 'dice' is the plural.
[05:22:55] <MsFoxEmilySmith> every RV is a kind of dice, some have infinite 'hedra'
[05:23:12] <[itchyjunk]> what was random variable?
[05:23:14] <pulse> vdamewood, yeah i've never liked the word die to mean dice
[05:23:21] <duuude> so almost none of the cube-lie ones i have seen is polyhedral
[05:23:21] <[itchyjunk]> f:set of possibility -> ?  
[05:23:28] <MsFoxEmilySmith> actually RV on surfaces is a huge field bro
[05:23:29] <duuude> like
[05:23:58] <vdamewood> pulse: And 'paradise' is the dual. :P
[05:23:58] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[05:24:00] <MsFoxEmilySmith> random vector spaces over manifolds. basis for a lot of things in physics
[05:24:08] <duuude> dyed die died
[05:24:12] *** Joins: flakland (~flaknet99@32.211.211.39)
[05:24:22] <[itchyjunk]> vector spaces over manifolds?
[05:24:33] <[itchyjunk]> if its a vector space, you have a underlying field
[05:24:37] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00156a2badd8434128.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:24:43] <[itchyjunk]> if you have a field, you have metric space already
[05:24:57] <MsFoxEmilySmith> have oyu done field theory [itchyjunk]?
[05:25:03] <MsFoxEmilySmith> you*
[05:25:05] <[itchyjunk]> what's field theory?
[05:25:12] <[itchyjunk]> the algebriac structure "field" ?
[05:25:18] <[itchyjunk]> commutative division rings?
[05:25:20] <MsFoxEmilySmith> stohastic metric spaces are a thing
[05:25:20] <[itchyjunk]> i've seen those
[05:25:30] <[itchyjunk]> never heard of such a thing
[05:25:34] <MsFoxEmilySmith> https://en.wikipedia.org/wiki/Probabilistic_metric_space
[05:25:35] <bayaz> Title: Probabilistic metric space - Wikipedia 
[05:25:39] <[itchyjunk]> what makes the metric space "stohastic" ?
[05:25:48] <MsFoxEmilySmith> instead of a "point" in space
[05:25:55] <[itchyjunk]> my probability is weak, idk measure theory
[05:25:57] <MsFoxEmilySmith> you have a "distribution" of points that is stohastic
[05:26:02] <[itchyjunk]> oh
[05:26:16] <[itchyjunk]> is that why they use for hilbert spaces and such in phy? surely not
[05:26:25] <[itchyjunk]> though wave function is a distribution i suppose
[05:26:33] <MsFoxEmilySmith> nah hilbert spaces are way more basic
[05:26:37] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[05:26:47] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:26:50] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:26:51] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[05:27:11] <MsFoxEmilySmith> maybe heres hilbert version:https://en.wikipedia.org/wiki/Distribution_(mathematics)
[05:27:31] <MsFoxEmilySmith> fundamental object in functional analysis
[05:27:39] <MsFoxEmilySmith> and basis for probability metric spaces
[05:27:41] <[itchyjunk]> oh wait, hilbert spaces are for functions
[05:27:51] <[itchyjunk]> when you want to generalize it for distributions, you get banach spaces 
[05:27:53] <pulse> "In mathematics, probabilistic metric spaces are a generalization of metric spaces where the distance no longer takes values in the non-negative real numbers R ≥ 0, but in distribution functions."
[05:27:53] <[itchyjunk]> i think
[05:27:57] <pulse> thanks, now my brain is broken
[05:28:14] <vdamewood> pulse: just now?
[05:28:20] <MsFoxEmilySmith> pulse: like neural nets
[05:28:20] <ProfSimm> So return result and exception. There has to be another way of doing errors
[05:28:22] <MsFoxEmilySmith> are an example
[05:28:24] <MsFoxEmilySmith> but
[05:28:30] *** Joins: horseface (~horseface@user/horseface)
[05:28:32] *** Joins: random-nick (~random-ni@87.116.181.150)
[05:28:34] <pulse> neural nets don't really have distance though
[05:28:34] <MsFoxEmilySmith> only ones that generalize to any type of data
[05:28:35] <pulse> or do they
[05:28:40] <MsFoxEmilySmith> thers graph neural nets
[05:28:43] <MsFoxEmilySmith> and then
[05:28:48] <MsFoxEmilySmith> theres probabilistic metric spaces
[05:29:01] <[itchyjunk]> neural nets generally use norms in some vector space
[05:29:02] <MsFoxEmilySmith> maybe not similar unless you think about it;)
[05:29:03] *** Quits: jenntech (~jenntech@134.134.139.86) (Ping timeout: 256 seconds)
[05:29:09] <[itchyjunk]> so they do have "distances"
[05:29:19] <[itchyjunk]> else how do you minimize error?
[05:29:29] <MsFoxEmilySmith> exactly
[05:29:29] <[itchyjunk]> when you don't know how "far" from the actual result you are
[05:29:33] <MsFoxEmilySmith> classical neural nets require distance
[05:29:45] <MsFoxEmilySmith> but i think the true generalization would be a probabilistic metric space
[05:29:54] <pulse> interesting
[05:30:05] <[itchyjunk]> that too is "distance" in some sense no?
[05:30:10] <[itchyjunk]> maybe measure theoritic distance
[05:30:16] <MsFoxEmilySmith> in some sense
[05:30:52] <flakland> magnitude?
[05:31:54] <MsFoxEmilySmith> I think the problem with neural nets is this
[05:32:08] <MsFoxEmilySmith> they assume you embed in euclidean space
[05:32:19] <MsFoxEmilySmith> that's the easy case
[05:33:17] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 240 seconds)
[05:33:26] <ProfSimm> MsFoxEmilySmith: neural nets have no "distance"
[05:33:38] <[itchyjunk]> what is the problem there?
[05:33:53] *** Quits: etolier (~somewhere@122-199-44-127.ip4.superloop.com) (Ping timeout: 252 seconds)
[05:33:59] <[itchyjunk]> seems to be that "data" seems to have nice clustering in some high dimension vector space
[05:34:11] <[itchyjunk]> and humans just happen to be interested in some of those clustering
[05:34:20] <[itchyjunk]> although its weird that we care about some and not about the others
[05:34:23] <[itchyjunk]> for the same data
[05:34:29] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 256 seconds)
[05:36:58] <MsFoxEmilySmith> ProfSimm: ok then why do they require differentiability and embedding in a Euclidean metric space then lol?
[05:38:01] <[itchyjunk]> yeah "differentiability" is a very strong requirement. but you can get differentiability without classcal notion of "distance" though
[05:38:02] <MsFoxEmilySmith> I always laugh at ML researchers that dont realize this. as itchjunky said, they could at least assume banach spaces and be a bit more general
[05:38:12] <MsFoxEmilySmith> even if they're entirely unaware of probabilistic metric spaces or beyond
[05:38:13] <[itchyjunk]> guess it depends on what is "distance" being defined as
[05:38:17] <ProfSimm> MsFoxEmilySmith: they don't require it
[05:38:28] <MsFoxEmilySmith> ProfSimm: they dont require back prop?
[05:38:46] <MsFoxEmilySmith> the entire thing is based on idea of a derivative lol
[05:38:47] <[itchyjunk]> you can get diffretiability in topo spaces that are not metric spaces
[05:38:53] <MsFoxEmilySmith> "gradient descent"
[05:38:57] <ProfSimm> MsFoxEmilySmith: no, back prop doesn't require "embedding in metric spaces" etc.
[05:39:04] <MsFoxEmilySmith> how do you gradient descent in an arbitrary topos?
[05:39:16] *** Joins: quartz (~quartz@user/quartz)
[05:39:29] <[itchyjunk]> well you do need norm of some sort to do back prop
[05:39:36] <[itchyjunk]> and i think all normed spaces are metric spaces?
[05:39:38] <[itchyjunk]> hmm
[05:39:41] <[itchyjunk]> can't remember
[05:39:46] <MsFoxEmilySmith> yea thats def true
[05:40:06] <MsFoxEmilySmith> just not all have the what do you call it? pythag identity
[05:40:23] <MsFoxEmilySmith> triangle inequality
[05:40:47] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[05:40:51] <MsFoxEmilySmith> or or cauchy schwartz
[05:41:16] <ProfSimm> MsFoxEmilySmith: you can analyze a neural net in many ways, it doesn't imply that's the only or required representation. It's a tool. A model.
[05:41:32] <[itchyjunk]> that makes 0 sense.
[05:41:39] <flakland> may the schwartz be with you
[05:41:48] <[itchyjunk]> if you want to "minimize" an error function, you need to define what that means somehow
[05:41:54] <pulse> flakland, ah, i see your schwartz is as big as mine
[05:42:04] <[itchyjunk]> and for anything that uses backprop, it seems that it would require a metric space
[05:42:54] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:42:59] <[itchyjunk]> so manybe ANN's that don't use backprob can do without?
[05:43:00] <[itchyjunk]> hmm
[05:43:08] <MsFoxEmilySmith> [itchyjunk] well graph neural nets just take a weighted average
[05:43:19] <MsFoxEmilySmith> in the neighborhood of a node
[05:43:32] <MsFoxEmilySmith> you could generalize to arbitrary topos
[05:43:41] <MsFoxEmilySmith> with neighborhoods if you can "add" things
[05:44:30] <[itchyjunk]> hmm i don't understand
[05:44:35] <[itchyjunk]> so the ANN is a graph?
[05:45:00] <[itchyjunk]> i remember generalization of CNN also lead to graph ANN's
[05:45:05] <[itchyjunk]> but i dont remember much
[05:46:12] *** Joins: vysn (~vysn@user/vysn)
[05:46:13] <MsFoxEmilySmith> nah the data is a graph
[05:46:14] <[itchyjunk]> oh input data is graphs
[05:46:15] <MsFoxEmilySmith> the input to the ANN
[05:46:19] <MsFoxEmilySmith> the ANN can be anything
[05:46:26] <MsFoxEmilySmith> as long as it has a feedback signal
[05:46:39] <MsFoxEmilySmith> and adjusts internal state somehow
[05:46:41] <[itchyjunk]> right, i remember now. there was a recent paper where they represented ANN's as graphs and use that as training data
[05:46:46] <MsFoxEmilySmith> based on expectation
[05:46:48] <[itchyjunk]> so they could make meta ANN's
[05:46:50] <MsFoxEmilySmith> (internal)
[05:47:17] <MsFoxEmilySmith> in the year 2300 where I'm from this is the norm
[05:47:22] <MsFoxEmilySmith> so is kinda funny for me
[05:47:45] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:47:59] <flakland> can you duct tape NN's together to make a superNN ?
[05:48:27] <flakland> or is it only workable as a single net
[05:49:20] <smallville7123> and i got rescan working correctly,  rescanning the input DOES NOT backtrack, but instead simply rewinds the input to the point that it would be if it had backtracked
[05:49:23] <smallville7123> input after rule 'new Rules::Char('3')' : 45
[05:49:23] <smallville7123> input after rule 'new Rules::Sequence({ new Rules::Char('4'), new Rules::Char('5') })' :
[05:49:23] <smallville7123> input after rule 'Rules_NS_LogInput_A(new Rules::Sequence({ new Rules::Char('4'), new Rules::Char('5') }), [] (auto x) { x.rescan(); })' : 45
[05:49:42] *** Joins: nivagator (~gavin@cpe-67-10-69-205.rgv.res.rr.com)
[05:50:27] <[itchyjunk]> you can glue together NN's
[05:50:29] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:50:34] <[itchyjunk]> use output of one as input of other etc
[05:50:38] <MsFoxEmilySmith> gluing together NNs is essential
[05:50:42] <MsFoxEmilySmith> to do anything non-trivial imo
[05:50:43] <[itchyjunk]> that's how you might end up with GAN's and suc
[05:50:53] <[itchyjunk]> such*
[05:51:07] <[itchyjunk]> youtube is 3 NN's glued together.
[05:51:28] <[itchyjunk]> one does a broad search, one does something and the last one picks out things "specialized" for you
[05:52:33] <flakland> so THATS why their suggestions are always the same, and always wrong
[05:53:01] <[itchyjunk]> same search produces same results on the broad search
[05:53:12] <smallville7123> otherwise this      "new Rules::Sequence({ new Rules::Char('4'), new Rules::Char('5') }, [] (auto x) { x.rescan(); } ), new Rules::Char('8') }) })"          would backtrack twice, once from rescan() and another from the Sequence rule failing
[05:53:15] <[itchyjunk]> but it's the third layers that makes it seem that same search produces different results
[05:53:25] <[itchyjunk]> its just ranked differently based on YOU.
[05:53:47] <flakland> they need more inputs
[05:53:57] *** Quits: zaher (~zaher@37.48.159.107) (Ping timeout: 240 seconds)
[05:54:03] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:54:20] <flakland> or to let you make an account without phone #
[05:54:52] <[itchyjunk]> the recommendation does see odd patterns.
[05:55:01] <MsFoxEmilySmith> if you dont have 1 million neural networks operating together simultaneously right now, you're probably not doing 'real' ML
[05:55:02] <[itchyjunk]> it will link like 10 year old vids with 2k views or something
[05:55:04] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:55:04] *** brabrax_ is now known as brabrax
[05:55:05] <[itchyjunk]> and it will go viral
[05:55:21] <MsFoxEmilySmith> but that many NNs can approximate what im talking about
[05:55:27] <MsFoxEmilySmith> probabilistic metric spaces
[05:55:41] <MsFoxEmilySmith> like our brain(s)
[05:56:00] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[05:56:23] <MsFoxEmilySmith> its standard fare in the future to understand this
[05:57:51] *** Quits: xff0x (~xff0x@2001:1a81:53ac:4a00:25b:5701:e54d:ee3e) (Ping timeout: 245 seconds)
[05:58:32] <MsFoxEmilySmith> if you can understand distance in a domain specific embedding and also combine that with a stohastic decison process, then you can rival human intelligence
[05:58:36] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:59:05] *** Quits: Guest3959 (epony@lz2.eu) (Quit: QUIT)
[05:59:14] <MsFoxEmilySmith> probably with modern maths is metric spaces cant be nested or combined in a usable way to create other more domain specific metric spaces / embeddings
[05:59:29] <[itchyjunk]> if you can not eat tide pods, you can rival human intelligence
[05:59:44] *** Joins: xff0x (~xff0x@2001:1a81:53e8:2500:a319:1c51:2e8e:9977)
[06:00:06] *** Quits: Blasphemian (~Blasphemi@user/blasphemian) (Quit: WeeChat 2.8)
[06:00:27] *** Joins: Blasphemian (~Blasphemi@user/blasphemian)
[06:00:33] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 256 seconds)
[06:00:37] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[06:03:01] *** Quits: MsFoxEmilySmith (~MsFoxEmil@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[06:03:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[06:04:45] *** Joins: epony (epony@user/epony)
[06:05:03] *** Quits: fweht (uid404746@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:07:21] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[06:08:45] *** Quits: gerow (~gerow@2600:1700:8660:c570:e42d:8ff7:6b8f:e5f) (Read error: Connection reset by peer)
[06:09:45] *** Joins: frost (~frost@user/frost)
[06:11:09] *** Quits: suss (~user@120.208.165.3) (Remote host closed the connection)
[06:12:14] <ProfSimm> What if we replace the notion of exceptions with the notion of a logger with flow control abilities. You set a log similar to try {} catch. When a loggable event occurs, the function logs. The logger receives it. But it may not halt the function. Or it might.
[06:14:20] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:14:59] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[06:15:03] <Tech_8> sup
[06:18:58] <smallville7123> in a parser, should a capture be in a seperate string if the input string can be modified?
[06:19:49] <smallville7123> wait no
[06:19:57] <smallville7123> hmmmm
[06:20:20] *** Joins: absentia (~evocatus@24-212-138-156.cable.teksavvy.com)
[06:20:26] *** Quits: Blasphemian (~Blasphemi@user/blasphemian) (Quit: WeeChat 2.8)
[06:20:32] <absentia> thank the gods for irc
[06:20:52] <absentia> at least i can still come here when the web turns out to be hot garbage
[06:21:07] *** Joins: Blasphemian (~Blasphemi@user/blasphemian)
[06:21:19] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[06:21:23] <smallville7123> if we have `String("12", [] (auto x) { x.eraseAndRescan(); }) )` should the content captured by String be '' ?
[06:21:28] <oldlaptop> Unfortunately, IRC may or may not still be hot garbage.
[06:21:31] *** Joins: flakland (~flaknet99@32.211.211.39)
[06:22:10] <absentia> oldlaptop: it's old garbage, like a fine wine - better with age and fermentation
[06:22:15] <absentia> or putrefaction as the case may be
[06:25:54] <smallville7123> if we have `Sequence({ String("12", [] (auto x) { x.eraseAndRescan(); }) ), Char('3') })` should the content captured by String be '' and thus Sequence will capture '3' if it succeeds ?
[06:27:58] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[06:30:26] <smallville7123> eg https://gist.github.com/mgood7123/7376d3bc0fb59400c7269a1b6a16dbcf
[06:30:27] <bayaz> Title: gist:7376d3bc0fb59400c7269a1b6a16dbcf 
[06:31:18] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[06:31:46] *** Quits: absentia (~evocatus@24-212-138-156.cable.teksavvy.com) (Changing host)
[06:31:46] *** Joins: absentia (~evocatus@user/absentia)
[06:31:47] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[06:31:59] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[06:32:27] *** Quits: absentia (~evocatus@user/absentia) (Quit: WeeChat 3.4)
[06:32:39] *** Joins: evocatus (~absentia@24-212-138-156.cable.teksavvy.com)
[06:32:54] *** Quits: evocatus (~absentia@24-212-138-156.cable.teksavvy.com) (Client Quit)
[06:32:56] <ProfSimm> How not to branch on error conditions.
[06:33:06] *** Joins: absentia (~absentia@24-212-138-156.cable.teksavvy.com)
[06:33:48] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:33:51] *** Quits: absentia (~absentia@24-212-138-156.cable.teksavvy.com) (Changing host)
[06:33:51] *** Joins: absentia (~absentia@user/absentia)
[06:35:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[06:36:52] <smallville7123> eg it should be this, right?      rule 'new Rules::String("12", [] (auto x) { x.eraseAndRescan(); })' captured ''
[06:38:08] *** Joins: password (~password8@user/password2)
[06:38:43] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[06:43:16] <ProfSimm> What if we have a special value, called "invalid". If you refer to it in any way at all other than "valid(val)" then it halts the program.
[06:43:27] <ProfSimm> Then we return this value from functions that had to abort
[06:43:36] <ProfSimm> No exceptions, but can't skip handling either
[06:43:44] <absentia> ProfSimm: Haskell does this, it's called `undefined`
[06:43:49] <ProfSimm> Hmm
[06:44:00] <absentia> except, there's no valid way to refer to it at all
[06:44:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:44:10] <absentia> it immediately raises an exception and terminates
[06:44:25] <ProfSimm> absentia: immediately raises it when? When it's returned?
[06:45:07] <absentia> ProfSimm: when it's evaluated
[06:45:28] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[06:45:28] <ProfSimm> absentia: ah right, lazy eval
[06:45:46] <ProfSimm> absentia: so HAskell cheats a bit, this is a side-effect, isn't it
[06:46:16] <absentia> ProfSimm: imo Conal Elliot put the nail into the coffin of this debate http://conal.net/blog/posts/the-c-language-is-purely-functional
[06:46:33] <ProfSimm> absentia: how do you provide further information about the error 
[06:46:43] <absentia> ProfSimm: you don't, good luck
[06:46:53] <ProfSimm> I.e. can you be like "undefined (because reasons)"
[06:47:08] <absentia> if you actually require that use something like Either or Control.Monad.Exception
[06:47:25] <ProfSimm> All right
[06:47:27] <ProfSimm> Thanks
[06:47:30] <absentia> o7
[06:49:57] <ProfSimm> absentia: so if I read this blog right, he's poking fun at Haskell's way of circumventing its own rules
[06:50:39] <absentia> sure - IO is really a fancy way of building a pure AST which is then evaluated by a runtime
[06:50:47] <absentia> but he makes the point that the C preprocessor does this too
[06:51:22] <absentia> i think the ultimate point is "what exactly do you mean purely functional"
[06:51:27] <ProfSimm> absentia: yup, tbh it's nice to see someone with visibility spell it out, we're all kinda thinking it.
[06:51:45] <absentia> because most common definitions don't seem to be able to distinguish between say, the c preprocessor and IO
[06:51:50] <ProfSimm> The separation of pure impure is still valuable of course
[06:51:55] <ProfSimm> In any language
[06:52:36] <absentia> it's a wrong-headed concept that is still immensely useful
[06:52:45] <absentia> it's only once you start zooming in too much that it stops making sense
[06:52:56] <absentia> (the concept of "purely functional," that is)
[06:54:24] <smallville7123> ProfSimm: C has that, it is called attempting to dereference 0x0 (NULL or nullptr)
[06:54:35] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:54:38] <ProfSimm> In my toy language I plan to evaluate pure expressions as you type code, to derive types and so on. It's like static analysis, but less static. Useful to know what's safe to run. Of course I also have side-effects (which the IDE/runtime knows about)
[06:54:38] <smallville7123> or nullptr in C++) *
[06:54:53] <ProfSimm> smallville7123: good point
[06:55:00] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[06:55:13] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[06:55:25] *** Joins: flakland (~flaknet99@32.211.211.39)
[06:55:31] <ProfSimm> smallville7123: I want to be less of a minefield than null deref. But now that you mentioned it, it's kinda the same exact thing. Shit.
[06:55:44] <smallville7123> haha :)
[06:56:15] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Remote host closed the connection)
[06:56:44] <smallville7123> bew it usually results in SIGSEGV signal (or SEGV) which is Segmentation Fault
[06:56:46] <smallville7123> btw*
[06:57:04] *** Joins: jazzy (~jaziz@user/jaziz)
[06:57:23] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:57:43] <smallville7123> depending on the OS (most use Segmentation Fault but other ones may use a different signal)
[06:57:49] <flakland> don't forget to mmap it first!
[06:58:03] <smallville7123> flakland: haha
[06:58:16] <smallville7123> mmap 0x0 results in an anominous mmap
[06:58:34] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[06:58:44] <smallville7123> (the same as malloc i think)
[07:01:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[07:02:32] <smallville7123> is a capture typically refered to a static capture or a dynamic capture? (eg the capture contents depends on the contents of the input in that it references a slice of the input, vs the capture contents does not depend on the contents of the input in that it is a copy of the input from the point at which it is captured)
[07:02:44] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f)
[07:02:48] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[07:02:49] <smallville7123> dynamic capture or a static capture *
[07:04:34] *** Joins: horseface (~horseface@user/horseface)
[07:05:43] *** Quits: vrp2zqL7 (~v8XhLN3K@74.5.157.96) (Quit: Quitting)
[07:06:43] *** Joins: duuude (~user@user/duuude)
[07:06:46] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:25] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[07:07:47] <flakland> whats the question? reference vs copy ?
[07:08:07] <chives> Anyone know anything about estinmation of battery levels?  I've got some headphones that the status semems to go up?()?)?()?() for no reason... so I don't know how to estimate... i guess the battery level is a start better than i had before downloaded off github but... room for improvement
[07:09:39] *** Joins: dgg (~dgg@107-179-198-38.cpe.teksavvy.com)
[07:09:50] <ski> smallville7123 : capturing the current value of a mutable location, in a closure, is just weird, imho
[07:09:55] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:09:58] <flakland> at what point does modifying the input make any sense
[07:10:23] <smallville7123> ok
[07:10:32] <ski> either the nonlocal identifier that you capture is bound to a value, and then you capture the value, or it's bound to a mutable location, and then you capture that location (not its contents)
[07:10:33] <chives> "Corsair Headset Battery Overlay master"
[07:11:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:11:46] <ski> (it either case there, you capture the denotation of the identifier, be it a value, or a mutable location)
[07:14:37] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[07:17:29] *** Quits: horseface (~horseface@user/horseface) (Client Quit)
[07:23:31] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:25:32] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:25:41] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 250 seconds)
[07:27:21] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:27:41] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:28:55] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[07:31:25] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:31:45] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:33:25] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:33:45] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:34:04] *** Quits: nivagator (~gavin@cpe-67-10-69-205.rgv.res.rr.com) (Quit: nivagator)
[07:34:30] *** Quits: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com) (Ping timeout: 256 seconds)
[07:36:57] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[07:39:55] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:40:16] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:41:00] *** Joins: rvalue (~rvalue@user/rvalue)
[07:43:53] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:44:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:45:53] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:46:09] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[07:46:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:46:31] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[07:48:11] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:48:31] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:49:22] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[07:49:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:49:52] *** Quits: dgg (~dgg@107-179-198-38.cpe.teksavvy.com) (Quit: Leaving)
[07:49:55] *** Joins: beencubed (~beencubed@209.131.238.248)
[07:51:13] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[07:52:53] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:53:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:54:53] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:55:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:55:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[07:56:57] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[07:57:17] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[07:58:17] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[08:00:53] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[08:01:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[08:01:26] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[08:03:06] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[08:03:25] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[08:08:20] *** Joins: rtypo (~alex@user/rtypo)
[08:09:16] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7940:f4d5:36de:f523)
[08:10:50] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[08:11:02] *** Joins: flakland (~flaknet99@32.211.211.39)
[08:12:35] *** Joins: blacked (~blacked@user/blacked)
[08:12:47] <blacked> How do i find my hobby on programming?
[08:12:49] *** Joins: k8yun_ (~k8yun@198-48-158-40.cpe.pppoe.ca)
[08:13:07] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[08:13:48] <pulse> odd question
[08:14:10] <pulse> maybe ask again but in a different way
[08:14:14] <pulse> :)
[08:17:15] *** Joins: raym (~raym@user/raym)
[08:17:41] *** Quits: k8yun_ (~k8yun@198-48-158-40.cpe.pppoe.ca) (Client Quit)
[08:17:54] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[08:18:14] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[08:19:37] *** Quits: password (~password8@user/password2) (Ping timeout: 256 seconds)
[08:20:39] <epony> you how your computer can do some things but you want something done in an consistent way, like reproducible and repeating extra time wasting things for you..?
[08:20:57] <epony> you "know" you can do fix that, right..
[08:23:01] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[08:23:20] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[08:24:49] <absentia> blacked: build the software that will fulfill your greatest dreams
[08:24:58] <absentia> the metal of metals, stone of the wise
[08:25:54] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[08:26:02] *** Quits: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com) (Ping timeout: 252 seconds)
[08:26:26] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:26:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:27:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:28:10] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:51c3:c0d2:e2de:930c)
[08:30:11] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[08:31:51] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[08:32:10] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[08:33:50] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[08:34:10] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[08:34:29] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[08:34:31] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[08:34:42] *** Joins: flakland (~flaknet99@32.211.211.39)
[08:36:22] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[08:36:41] *** Joins: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca)
[08:40:33] *** Quits: sonny (~sonny@bras-base-london1483w-grc-41-65-94-139-157.dsl.bell.ca) (Remote host closed the connection)
[08:40:47] *** Joins: deniska (~deniska@user/deniska)
[08:42:20] *** Quits: blacked (~blacked@user/blacked) (Quit: Client closed)
[08:43:05] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[08:45:34] *** Joins: SandAmongBlueWat (~SandAmong@apn-31-0-67-252.dynamic.gprs.plus.pl)
[08:46:44] *** Joins: audio (~audio@user/audio)
[08:47:28] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[08:47:39] <SandAmongBlueWat> Ruby+Linux. Why signals seem to work only when sleep is 0 https://pastebin.com/raw/xyxQdpeY
[08:47:39] <bayaz> Type: text/plain; charset=utf-8 
[08:47:46] *** Joins: user51 (~user51@176.228.148.215)
[08:49:33] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[08:49:57] *** Quits: lilgopher (~textual@2601:241:8000:38f0:e066:45e5:41b6:82b6) (Ping timeout: 240 seconds)
[08:52:17] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[08:52:43] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[08:55:28] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[08:56:24] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Client Quit)
[08:56:31] *** Joins: frost (~frost@user/frost)
[08:58:13] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:01:29] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Client Quit)
[09:02:40] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[09:04:57] *** Quits: SandAmongBlueWat (~SandAmong@apn-31-0-67-252.dynamic.gprs.plus.pl) (Ping timeout: 256 seconds)
[09:05:18] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[09:06:10] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[09:08:35] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[09:09:02] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:09:44] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Client Quit)
[09:10:51] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:12:36] *** Joins: audio (~audio@user/audio)
[09:12:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[09:16:12] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[09:16:17] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[09:16:46] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:17:33] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Client Quit)
[09:17:36] *** Quits: jjt (~jjt@user/jjt) (Quit: Lost terminal)
[09:18:15] *** Quits: emf (~emf@2620:10d:c090:400::5:b0fe) (Read error: Connection reset by peer)
[09:18:16] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:19:35] *** Joins: lane (~lane@89.45.224.24)
[09:19:47] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:20:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[09:24:46] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[09:24:49] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[09:25:08] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:25:11] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:26:29] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[09:28:19] *** Joins: fuzzykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[09:29:18] <k8yun> is there a channel for c# language?
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:23] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Ping timeout: 256 seconds)
[09:36:00] *** Joins: fluffykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[09:38:09] *** Quits: fuzzykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Ping timeout: 256 seconds)
[09:43:36] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[09:43:51] *** Joins: rvalue (~rvalue@user/rvalue)
[09:47:01] *** Joins: Shamasu (~Shamasu@69-209-102-87.lightspeed.sntcca.sbcglobal.net)
[09:47:29] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[09:48:15] <Shamasu> Hello, is this a good place to ask a programing question? Specifically about django and drf
[09:49:22] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[09:49:53] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[09:50:41] <leduyquang753> Sure.
[09:51:48] *** Joins: node1 (~hex@user/node1)
[09:53:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[09:53:21] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[09:54:12] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[09:54:15] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:54:33] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:54:34] <Shamasu> This isn't so much a technical question but more of, what is a better way of doing something. I'm setting up a backend API, and putting together some serializers using drf. I'm ending up with a bunch of nested serializers. Is it better to do it that way (using nested serializer and writing my own create and update methods to deal with it), or should I be making a whole bunch of separate 
[09:54:34] <Shamasu> API calls to individual endpoints?
[09:54:58] *** Joins: k8yun_ (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:56:08] <Shamasu> Or does it not matter and I should just do whatever. It feels like using a whole bunch of API calls to different endpoints is going to results in a lot of more traffic, but dealing with nested serializers seems more a pain.
[09:56:09] *** Quits: k8yun_ (~k8yun@198-48-158-40.cpe.pppoe.ca) (Remote host closed the connection)
[09:56:49] *** Joins: gearX (~gearX@152.57.141.4)
[09:57:48] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[09:57:59] <gearX> how to search nth comma character in currentline of a csv file, probably using regex in text editors like notepad++, editor++, etc
[09:58:39] *** Joins: tomathy (~jenova@user/quetzl)
[09:59:10] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[09:59:23] *** Joins: rvalue (~rvalue@user/rvalue)
[09:59:37] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[10:00:17] <PlanckWalk> Regex something like ([^,]*,){8}
[10:00:56] *** Joins: k8yun_ (~k8yun@198-48-158-40.cpe.pppoe.ca)
[10:01:06] <PlanckWalk> "an optional string of things that aren't commas followed by a comma, repeated 8 times"
[10:01:16] *** Quits: k8yun_ (~k8yun@198-48-158-40.cpe.pppoe.ca) (Client Quit)
[10:01:27] <PlanckWalk> Err, stick a ^ at the start
[10:01:46] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7940:f4d5:36de:f523) (Read error: Connection reset by peer)
[10:01:53] <PlanckWalk> That would match up to and including the 8th comma, if there is one
[10:02:10] <PlanckWalk> BUT ... csv have a variety of escaping schemes
[10:02:25] <flakland> tomathy i forgot, there is a way to concatonate string literals in C, but it doesn't work with array of const char *    -- printf("hello" "world" "\n");
[10:02:39] <PlanckWalk> You'd need to find out which scheme your file uses and change the regex appropriately.  Except some can't be matched by regex.
[10:03:05] <tomathy> you can just put them next to each other?
[10:03:30] <flakland> yeah, i never knew this until recently after many years of C'ing
[10:03:31] <tomathy> i never make my arrays const, does it work with char * ?
[10:04:58] <flakland> nah, i get test.c:26:17: error: expected ')' before 'space'
[10:05:08] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[10:05:30] <tomathy> ok
[10:05:44] <flakland> space being const char * identifier
[10:05:51] <tomathy> so string literals are different to char *
[10:16:12] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[10:16:23] <Inst> help, i've been filtered by ramanujan numbers
[10:16:24] <Inst> ;_;
[10:16:38] <Inst> ramanujan = [ (w,a,b,x,y) | w <- [0..], x <- [0..w], y <- [0..w], x^3 + y^3 == w, a <- [0..w], notElem a [x,y], b <- [0..w], a^3 + b^3 == w]
[10:16:46] *** Joins: vysn (~vysn@user/vysn)
[10:19:59] *** Joins: swp (~Thunderbi@143.176.249.0)
[10:22:13] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[10:23:36] *** Parts: Blasphemian (~Blasphemi@user/blasphemian) (Leaving)
[10:24:05] *** Joins: Blasphemian (~Blasphemi@user/blasphemian)
[10:24:51] <node1> How to make a user defined data type in C that can store interger, float and string. For instance it should be like an array but different data type can be stored at any index. Consider a list in a python for real example.
[10:26:16] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[10:26:38] <adder> https://stackoverflow.com/questions/26772711/heterogeneous-array-implementation
[10:26:39] <bayaz> Title: Heterogeneous array implementation 
[10:28:13] *** Quits: Shamasu (~Shamasu@69-209-102-87.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[10:29:33] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[10:31:59] *** Quits: maxzor__ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[10:34:38] *** Joins: acidcrawl (~acidcrawl@184-155-39-91.cpe.sparklight.net)
[10:34:45] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:35:17] *** Joins: rick123 (~rick123@157.245.192.96)
[10:35:28] <rick123> How does a tool like ffmpeg calculate the duration of a video file ? Is it mentioned somewhere in some headers/meta data or is it calculated by reading the entire contents ?
[10:35:33] <rick123> Also does video file actually have any headers/meta-data that I could read quickly ? Generally ffprobe/ffmpeg seems to wait a while while passing a video file of say 2mins. That means its reading the input.
[10:37:28] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[10:37:39] *** Quits: maxzor (~maxzor@2a01cb04054faa005845757de706397d.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[10:39:21] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[10:40:27] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[10:41:02] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Max SendQ exceeded)
[10:41:23] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[10:41:43] *** Quits: acidcrawl (~acidcrawl@184-155-39-91.cpe.sparklight.net) (Quit: leaving)
[10:44:11] <nomagno> Tagged Union would be the way to go, yes ^
[10:44:49] <nomagno> It does waste potentially a bit of memory, but not too bad
[10:45:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[10:45:57] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:46:25] *** Joins: node1 (~hex@user/node1)
[10:49:02] *** Quits: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328) (Ping timeout: 252 seconds)
[10:49:08] <node1> adder, Thank you for the idea.
[10:49:19] <nomagno> That stack overflow accepted answer's data structure is bug-ridden. I recommend something like 
[10:49:19] <nomagno> union int_ { unsigned tag; int val; }; struct variant { unsigned tag; union int_ int_; ... }
[10:49:53] <nomagno> or even just prescind of the inner tag altogether
[10:50:46] <node1> Yes something like this https://stackoverflow.com/questions/26772711/heterogeneous-array-implementation
[10:51:15] *** Joins: dld (~davidlowr@73.61.8.20)
[10:51:25] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[10:52:00] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[10:52:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[10:52:56] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:55:52] *** Quits: flakland (~flaknet99@32.211.211.39) (*.net *.split)
[10:55:52] *** Quits: znemo (sid500529@id-500529.uxbridge.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: df_data (sid466269@id-466269.ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: Fangs (sid141280@id-141280.hampstead.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[10:55:52] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: chives (~chives@64.130.100.177) (*.net *.split)
[10:55:52] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: inky (~inky@46.36.119.204) (*.net *.split)
[10:55:52] *** Quits: macaw (~macaw@87-205-47-92.adsl.inetia.pl) (*.net *.split)
[10:55:52] *** Quits: ghost64 (~ghost64@user/ghost64) (*.net *.split)
[10:55:52] *** Quits: Crocodillian (~Crocodill@comply.posixsh.org) (*.net *.split)
[10:55:52] *** Quits: NEYi (~NEYi@109.251.216.38) (*.net *.split)
[10:55:52] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[10:55:52] *** Quits: justyb11 (~justyb@64.253.212.72) (*.net *.split)
[10:55:52] *** Quits: kaivai_ (~kaivai@user/kaivai) (*.net *.split)
[10:55:52] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[10:55:52] *** Quits: Obscenity (~Obscenity@user/obscenity) (*.net *.split)
[10:55:52] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (*.net *.split)
[10:55:52] *** Quits: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt) (*.net *.split)
[10:55:52] *** Quits: realms (~marco@190.239.58.40) (*.net *.split)
[10:55:52] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (*.net *.split)
[10:55:52] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[10:55:52] *** Quits: astiak (~astiak@ownage.biz) (*.net *.split)
[10:55:52] *** Quits: cfjk (~cfjk@user/cfjk) (*.net *.split)
[10:55:52] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[10:55:52] *** Quits: Tabmow (~tabmow@user/tabmow) (*.net *.split)
[10:55:52] *** Quits: bytefire (~bytefire@li1531-193.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[10:55:52] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[10:55:52] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[10:55:52] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (*.net *.split)
[10:55:52] *** Quits: zeroflame_ (~zeroflame@192.210.139.174) (*.net *.split)
[10:55:52] *** Quits: matrael (~matrael@PLEASEJUSTLETME.BE) (*.net *.split)
[10:55:52] *** Quits: Frogging101 (~Frogging@kitsune.fastquake.com) (*.net *.split)
[10:55:52] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[10:55:52] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[10:55:52] *** Quits: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com) (*.net *.split)
[10:55:52] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[10:55:52] *** Quits: martums5 (~martums@user/martums) (*.net *.split)
[10:55:52] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (*.net *.split)
[10:55:52] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[10:55:52] *** Quits: ds (~ds@user/ds) (*.net *.split)
[10:55:52] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[10:55:52] *** Quits: NChief (~nchief@irc.nortv.net) (*.net *.split)
[10:55:52] *** Quits: obrut (~obrut@user/obrut) (*.net *.split)
[10:55:52] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (*.net *.split)
[10:55:52] *** Quits: hassoon__ (~hassoon@triton.blinkenshell.org) (*.net *.split)
[10:55:52] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[10:55:52] *** Quits: williewillus (~williewil@user/williewillus) (*.net *.split)
[10:55:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[10:55:52] *** Quits: z3t0 (~z3t0@146.71.14.98) (*.net *.split)
[10:55:52] *** Quits: Buggys (~Buggys@185.149.90.52) (*.net *.split)
[10:55:52] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[10:55:52] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[10:55:52] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[10:55:52] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[10:55:52] *** Quits: Notiche (~quassel@irk.rojekti.fi) (*.net *.split)
[10:55:52] *** Quits: hassoon_ (hassoon@user/hassoon) (*.net *.split)
[10:55:52] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[10:55:52] *** Quits: aoeixsz4 (~aoei@nethackscoreboard/aoei) (*.net *.split)
[10:55:52] *** Quits: bayaz (~bayaz@user/jeaye/bot/bayaz) (*.net *.split)
[10:55:52] *** Quits: zvijezda (~Foobar@c-98-203-220-45.hsd1.wa.comcast.net) (*.net *.split)
[10:55:52] *** Quits: _neonrex_ (~jbrubake@user/jbrubake) (*.net *.split)
[10:55:52] *** Quits: les_ (~whome@user/les) (*.net *.split)
[10:55:52] *** Quits: DefiantN (~DefiantN@user/defiantn) (*.net *.split)
[10:55:52] *** Quits: ishanjain (~ishan@li2028-175.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: opotin (~opotin@gyros.collabora.co.uk) (*.net *.split)
[10:55:52] *** Quits: koollman (~samson_t@user/koollman) (*.net *.split)
[10:55:52] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[10:55:53] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (*.net *.split)
[10:55:53] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[10:56:01] *** Joins: rsx (~dummy@ppp-188-174-147-214.dynamic.mnet-online.de)
[10:56:12] *** Joins: darsie (~darsie@84-113-55-200.cable.dynamic.surfer.at)
[10:58:05] *** Joins: flakland (~flaknet99@32.211.211.39)
[10:58:05] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[10:58:05] *** Joins: chives (~chives@64.130.100.177)
[10:58:05] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[10:58:05] *** Joins: inky (~inky@46.36.119.204)
[10:58:05] *** Joins: macaw (~macaw@87-205-47-92.adsl.inetia.pl)
[10:58:05] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[10:58:05] *** Joins: ghost64 (~ghost64@user/ghost64)
[10:58:05] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[10:58:05] *** Joins: NEYi (~NEYi@109.251.216.38)
[10:58:05] *** Joins: justyb11 (~justyb@64.253.212.72)
[10:58:05] *** Joins: kaivai_ (~kaivai@user/kaivai)
[10:58:05] *** Joins: Trashlord (~trash@user/trashlord)
[10:58:05] *** Joins: Obscenity (~Obscenity@user/obscenity)
[10:58:05] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[10:58:05] *** Joins: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt)
[10:58:05] *** Joins: realms (~marco@190.239.58.40)
[10:58:05] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[10:58:05] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[10:58:05] *** Joins: astiak (~astiak@ownage.biz)
[10:58:05] *** Joins: cfjk (~cfjk@user/cfjk)
[10:58:05] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[10:58:05] *** Joins: Tabmow (~tabmow@user/tabmow)
[10:58:05] *** Joins: bytefire (~bytefire@li1531-193.members.linode.com)
[10:58:05] *** Joins: Duckle (~Duckle@user/duckle)
[10:58:05] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[10:58:05] *** Joins: cursey (~cursey@user/cursey)
[10:58:05] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[10:58:05] *** Joins: zeroflame_ (~zeroflame@192.210.139.174)
[10:58:05] *** Joins: matrael (~matrael@PLEASEJUSTLETME.BE)
[10:58:05] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[10:58:05] *** Joins: swistak (~swistak@185.21.216.141)
[10:58:05] *** Joins: haliucinas (~haliucina@5.20.153.21)
[10:58:05] *** Joins: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com)
[10:58:05] *** Joins: kcrk (~kcrk@user/kcrk)
[10:58:05] *** Joins: martums5 (~martums@user/martums)
[10:58:05] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[10:58:05] *** Joins: justGhost (~justache@user/justache)
[10:58:05] *** Joins: ds (~ds@user/ds)
[10:58:05] *** Joins: dodo (~dodo@user/dodo)
[10:58:05] *** Joins: NChief (~nchief@irc.nortv.net)
[10:58:05] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[10:58:05] *** Joins: obrut (~obrut@user/obrut)
[10:58:05] *** Joins: webstran- (~webstrand@user/webstrand)
[10:58:05] *** Joins: hassoon__ (~hassoon@triton.blinkenshell.org)
[10:58:05] *** Joins: williewillus (~williewil@user/williewillus)
[10:58:05] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:58:05] *** Joins: z3t0 (~z3t0@146.71.14.98)
[10:58:05] *** Joins: Buggys (~Buggys@185.149.90.52)
[10:58:05] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[10:58:05] *** Joins: [R] (~rs@genoce.org)
[10:58:05] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[10:58:05] *** Joins: blinky42 (~quassel@user/blinky42)
[10:58:05] *** Joins: Notiche (~quassel@irk.rojekti.fi)
[10:58:05] *** Joins: hassoon_ (hassoon@user/hassoon)
[10:58:05] *** Joins: Spydar007 (~spydar007@user/spydar007)
[10:58:05] *** Joins: aoeixsz4 (~aoei@nethackscoreboard/aoei)
[10:58:05] *** Joins: koollman (~samson_t@user/koollman)
[10:58:05] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[10:58:05] *** Joins: zvijezda (~Foobar@c-98-203-220-45.hsd1.wa.comcast.net)
[10:58:05] *** Joins: _neonrex_ (~jbrubake@user/jbrubake)
[10:58:05] *** Joins: les_ (~whome@user/les)
[10:58:05] *** Joins: DefiantN (~DefiantN@user/defiantn)
[10:58:05] *** Joins: ishanjain (~ishan@li2028-175.members.linode.com)
[10:58:05] *** Joins: opotin (~opotin@gyros.collabora.co.uk)
[10:58:05] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[10:58:05] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[10:58:05] *** Joins: flynn (~mcbloch@user/flynn)
[10:58:05] *** Joins: znemo (sid500529@id-500529.uxbridge.irccloud.com)
[10:58:05] *** Joins: df_data (sid466269@id-466269.ilkley.irccloud.com)
[10:58:05] *** Joins: Fangs (sid141280@id-141280.hampstead.irccloud.com)
[10:58:05] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[10:58:05] *** Joins: bjs (sid190364@user/bjs)
[10:58:05] *** erbium.libera.chat sets mode: +o bayaz
[10:58:08] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Max SendQ exceeded)
[10:58:18] *** Quits: Joanna (uid57472@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:58:39] *** Quits: realms (~marco@190.239.58.40) (Read error: Connection reset by peer)
[10:58:45] <pyzozord> rick123: it's probably both and depends on the file format
[10:59:11] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 256 seconds)
[10:59:26] *** Quits: NEYi (~NEYi@109.251.216.38) (Remote host closed the connection)
[10:59:50] *** Joins: NEYi (~NEYi@109.251.216.38)
[10:59:56] *** Quits: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f) (Quit: Client closed)
[10:59:57] *** Joins: leonardus (sid358597@tinside.irccloud.com)
[11:01:28] *** Quits: gearX (~gearX@152.57.141.4) (Ping timeout: 250 seconds)
[11:02:44] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[11:05:39] *** Joins: leonarth (~leonarth@user/leonarth)
[11:06:08] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f)
[11:06:39] *** Joins: emf (~emf@2620:10d:c090:400::5:d558)
[11:07:04] *** arash- is now known as arash
[11:07:59] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:08:11] *** Joins: flakland (~flaknet99@32.211.211.39)
[11:09:27] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:12:02] *** Joins: Kake (~Kake_Fisk@84.212.75.90)
[11:13:55] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:14:25] *** Quits: swp (~Thunderbi@143.176.249.0) (Quit: swp)
[11:14:42] *** Joins: swp (~Thunderbi@143.176.249.0)
[11:18:46] *** Joins: hex_ (~hex@43.230.42.213)
[11:19:15] *** Joins: lord4163_ (~lord4163@81-233-183-142-no86.tbcn.telia.com)
[11:19:50] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Ping timeout: 252 seconds)
[11:19:54] *** lord4163_ is now known as lord4163
[11:20:13] *** Joins: Rounin (~david@84.212.130.215)
[11:20:17] *** Quits: node1 (~hex@user/node1) (Ping timeout: 240 seconds)
[11:21:08] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:21:47] *** Joins: maxzor__ (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[11:26:29] *** Quits: hex_ (~hex@43.230.42.213) (Quit: Leaving)
[11:27:19] *** Joins: xkuru (~xkuru@user/xkuru)
[11:28:15] <duuude> has anyone used patreon?
[11:30:31] <edgar-rft> yes, according to the patreon homepage more than 200000 people
[11:31:08] <duuude> haha, i mean here
[11:31:26] <pyzozord> edgar-rft: I have resisted making the same joke :D
[11:31:30] *** Joins: palasso (~palasso@user/palasso)
[11:31:36] <edgar-rft> no, I'm using hexchat here
[11:31:39] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:31:41] <duuude> lol
[11:32:21] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.95)
[11:32:39] <Kake> Used as creator or consumer?
[11:32:41] <duuude> has anyone reading this have used patreon?
[11:33:03] <absentia> i went on their homepage once
[11:33:42] <pyzozord> duuude: probably folks we just spoke up (including me) haven't really used patreon, hence jokes
[11:33:50] <pyzozord> s/we/who/
[11:33:53] <duuude> Kake: Does it show the bank information for the recipient and does it need registration for someone to just donate?
[11:34:49] <absentia> there's the actual question :D
[11:34:53] *** Quits: lane (~lane@89.45.224.24) (Ping timeout: 256 seconds)
[11:35:15] <flakland> i'm only familiar with patraeon
[11:35:21] <edgar-rft> I can give you my bank account so that you can donate to me directly :-)
[11:35:58] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[11:36:22] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[11:36:29] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[11:38:33] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[11:39:23] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.95) (Remote host closed the connection)
[11:41:03] *** Joins: blacked (~blacked@user/blacked)
[11:45:21] <pyzozord> duuude: these kinds of website often use payment gate and don't even store your bank info
[11:45:31] <pyzozord> just some kind of payment gate token
[11:45:47] <duuude> do those show?
[11:46:13] <pyzozord> I don't know how patreon specifically does it
[11:46:17] *** Joins: aradesh (~aradesh@user/aradesh)
[11:46:49] <pyzozord> but if they redirect you to some payment gate when you pay, I think you can feel pretty safe
[11:46:59] <pyzozord> those payment gates all they do is worry about security
[11:47:44] *** Quits: adder (~adder@user/adder) (Read error: Connection reset by peer)
[11:49:21] *** Joins: adder (~adder@user/adder)
[11:50:44] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:52:11] <Inst> gah
[11:52:17] <Inst> i'm too addicted to imperative programming
[11:54:47] *** Emet-Selch is now known as Azem
[11:54:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:54:56] <Belxjander> Patreon?  Ive looked and I know of a few people that use it... it uses payment processors and doesn't handle any funds directly afaik
[12:02:00] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[12:02:06] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[12:06:17] *** Quits: blacked (~blacked@user/blacked) (Ping timeout: 256 seconds)
[12:06:40] *** Joins: mrig (~mrig@user/mrig)
[12:06:53] *** Joins: jaysicks (~jaysicks@91-82-168-15.pool.digikabel.hu)
[12:07:01] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[12:07:04] *** Joins: troels (4eee6b4dcf@2604:bf00:561:2000::3b3)
[12:07:17] *** Quits: emf (~emf@2620:10d:c090:400::5:d558) (Ping timeout: 240 seconds)
[12:07:25] *** Joins: absc (~absc@81.31.144.28)
[12:08:21] <troels> Is there a channel where I can ask questions about frontend technologies? 
[12:09:34] <pyzozord> troels: /msg alis list frontend
[12:09:55] <pyzozord> but I'd try in #javascript
[12:09:59] <pyzozord> or here
[12:12:16] <troels> I am doing an SPA, backend in Python. I can see that it's possible to write the frontend in python as well and then transpile it. Considering I was going to go with TypeScript+React, could python make up for that? 
[12:12:57] <troels> Does the benefit of having your whole codebase in a single language outweigh the (presumed) costs in complexity involved with transpilation? 
[12:13:10] *** Joins: NakedKing (~NakedKing@user/nakedking)
[12:14:40] <deniska> troels: while there're some solutions for running python on the web, they're not really worth to use for that usecase imho
[12:14:48] <pyzozord> don't think there is a single answer for that kind of questions, different people will have different opinions
[12:15:06] <deniska> troels: however, if your goal is to write less JS, consider taking a look at https://htmx.org/
[12:15:07] <bayaz> Title: </> htmx - high power tools for html 
[12:15:08] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[12:15:08] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[12:15:08] *** Joins: menace (~someone@user/menace)
[12:15:16] *** menace is now known as Deknos
[12:15:20] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:17:29] <troels> My main concern is actually dependencies and obsolence. I have experienced coming back to a relatively simple JS project and it being completely outdated full of warnings, upgrading really painful and so on. So if I could do an SPA without (or at least some async) without too many external dependencies, that would be preferred. 
[12:19:34] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[12:19:50] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[12:20:26] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[12:20:59] <deniska> troels: take a look at htmx, it's really nice for "I just want to sprinkle some SPA-iness onto what otherwise would be an oldschool style server rendered application"
[12:21:18] <deniska> and it has no dependencies on its own :)
[12:21:29] <troels> deniska: Thanks, it looks really cool so far! 
[12:21:47] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:23:03] *** Quits: xff0x (~xff0x@2001:1a81:53e8:2500:a319:1c51:2e8e:9977) (Ping timeout: 256 seconds)
[12:23:56] *** Joins: xff0x (~xff0x@2001:1a81:53e8:2500:31e6:f5f6:6492:6bc2)
[12:24:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[12:24:25] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:25:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[12:27:57] *** Joins: SGautam (uid286066@ilkley.irccloud.com)
[12:29:36] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:1498:75d8:5496:f62f)
[12:30:50] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:31:29] <troels> HTMX looks more like MVC to me. E.g. "This example will cause the button to issue a POST to /account/enable and swap the returned HTML into the innerHTML of the body." Isn't that MVC?
[12:31:41] *** Joins: callq (~callq@2409:4062:2e9e:2081:3c70:5be0:414d:6151)
[12:34:27] *** Joins: x_kuru (~xkuru@user/xkuru)
[12:34:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:34:58] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[12:35:21] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:35:54] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[12:36:37] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[12:39:03] <deniska> troels: the author prefers to call it "REST" although he's a bit of a troll :)
[12:39:58] <deniska> I am still not quite sure what "MVC" means
[12:40:29] <mobidrop> model view controller, haven't used that pattern in 8 years or so
[12:40:34] <troels> https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#/media/File:MVC-Process.svg
[12:40:34] <bayaz> Title: Model?view?controller - Wikipedia 
[12:40:55] <mobidrop> well I use it but it's built into the web framework
[12:41:05] *** Quits: lewisje (~lewisje@72.49.207.113) (Quit: Leaving)
[12:41:45] <deniska> I've seen this diagram a lot of times, it doesn't really tell a useful story
[12:42:12] <troels> Okay, maybe I misunderstand what MVC means. 
[12:42:42] <epony> merge vindicate commerce
[12:42:51] <epony> most valuable customer
[12:43:03] <deniska> You send http requests to a server, you get a response back, that's how it works :)
[12:43:04] <epony> msft virtualisation classes
[12:43:22] <troels> What I am hesitant about is having navigation on the site issue GET requests to manipulate and populate DOM elements. That sounds slow as opposed to having everything load in a React SPA and do everything client side.
[12:44:06] <pikapika> Apparently the dev environment for the PS3, an os built up from a bsd, was only available on Windows. What cartoony hilarity man.
[12:44:12] <troels> I mean, sure initial page load may be slow, but that is a one-off.
[12:44:30] <pikapika> Just goes on to show that forget bsd, even gpl won't have been enough to force their hand in this case and we need even stronger copyleft measures
[12:44:43] <deniska> troels: If loading speed is a concern, you shouldn't use something like react
[12:45:07] <mobidrop> if you need speed you need web assemlby
[12:45:24] <troels> Well, Facebook uses it, and I think their chat service works fine (I know the backend is in C++)
[12:45:52] <deniska> troels: Think about it that way. With react you are doing the work browser is already good at (creating and modifying html elements), but through JS, and while JS is fast, it still has considerable overhead over just letting browser written in something like C++ to do this work
[12:46:08] <smallville7123> im not sure how i should handle expanding a function in the case where the function name is a function-like macro, and where the function name is not a function-like macro
[12:46:31] <mobidrop> idk you also have to deal with latency loading html elements, if it's already locally there you already got it
[12:46:43] <troels> But with htmx you have the added overhead of network latency, because you have to issue a get request and wait for the reply, right? 
[12:47:06] <deniska> troels: well, to do anything useful you have to issue a request anyway
[12:47:51] <troels> Hmmmm. You are probably right.
[12:48:32] <deniska> troels: Let's go through something like a chat. To display a new chat message one has to create new DOM nodes. You can either call document.createElement() a few times in JS to create a needed structure, or you can create a new single node, set its innerHTML to a value returned from a server
[12:48:48] <deniska> and leverage a very optimized HTML parser already built into a browser
[12:49:20] <mobidrop> but what if you need to display a massive amount of data
[12:49:22] <smallville7123> deniska: " while JS is fast, it still has considerable overhead over just letting browser written in something like C++ to do this work" you would still need to make sure the C++ written browser has JS support (a lot of webpages use JS)
[12:49:35] <mobidrop> then something like react with a virtual DOM might be bette
[12:50:00] <deniska> something like react is probably better if you are displaying something offensively realtime like, dunno, a stock trading web UI
[12:50:28] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:51:02] <deniska> but even then you can just limit react to the trading widget, something like a forum where people share screenshots of their stock trading losses doesn't have to be written in react :)
[12:51:07] *** Joins: Klinda (~superleag@user/klinda)
[12:51:34] *** fluffykef is now known as furrykef
[12:52:47] <mobidrop> probably also has more to do with programmer preference and development speed
[12:52:48] <deniska> troels: so decide for yourself depending on the nature of the site you are building. If it's a mostly "static" one, but you want a live search type ahead there and no full page reload there, htmx seems like a good fit. If you need a lot of blinkenlights, maybe go for react/angular/vue
[12:52:58] *** Joins: xa0s (~xa0s@mab.sdf.org)
[12:53:13] *** aoeixsz4 is now known as aoei
[12:53:23] <troels> The most critical component is a chat. 
[12:53:58] <deniska> And at its core API, the entry point into react is a DOM node, and it doesn't have to be an outermost DOM element, you can limit react to some specific widget on your site
[12:54:31] <epony> ralinka
[12:55:22] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:55:27] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:56:52] <mobidrop> something tells me that frontend devs don't really care about performance tho
[12:58:15] <deniska> one of the considerations behind react was performance, but I feel like it's actually hard to use it in a performant fashion
[12:58:50] <troels> But including React for just one feature kind of defeats the whole purpose? I mean then you might as well just have written the whole thing in React when I need to load it for one component. 
[12:59:24] <troels> I actually like the way React structures things. 
[12:59:54] <deniska> Depends on what the goal was. If it was "never using react" then yeah, we lost. If it was "not using react for parts which are easier to reason about when react is not used" then we won :)
[13:00:27] <Inst> by this point
[13:00:31] <troels> I just wish there was an obvious library/framework suited for creating a web chat that was mature and without external deps. 
[13:00:33] <Inst> i just have to admit Haskell is little other than insanity
[13:00:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[13:01:07] <mobidrop> yeah the reason to use React is to have a nicely structured code base, not performance
[13:01:34] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[13:02:29] <Inst> want dynamic types? defer type errors language extension
[13:02:35] <Inst> want mutability? IORef and STRef
[13:02:44] <Inst> this language is insane
[13:03:03] <deniska> Inst: it's made by committee
[13:03:13] <Inst> you can probably implement mutable objects via IORef, STRef, and record syntax / field labels
[13:03:36] <Inst> also typeclasses
[13:03:59] <pikapika> Inst, the haskell people have certain ideas about how the language is meant to be used
[13:04:00] <Inst> only thing it really needs is dependent types
[13:04:28] <Inst> linear types are already an extension
[13:04:29] <pikapika> Which is why despite all this effort being put into these modern languages, ultimately people are having to return to C
[13:04:33] <Inst> pikapika: what's that supposed to mean?
[13:04:41] <mobidrop> or Rust :)
[13:04:48] <pikapika> Inst, they don't want you to edit your variables for example
[13:05:35] <pyzozord> just realized some thing, the "ops" in DevOps and GitOps does not stand for "operations" it stands for "operators"
[13:05:54] <Inst> pikapika: but you can implement mutability via STref and IORef
[13:05:58] <Inst> what's the problem?
[13:05:59] <pyzozord> and operators are folks who operate, so administer
[13:06:06] <Inst> it's just hard to get your head around STRef and IOref
[13:06:09] <deniska> pyzozord: oops
[13:06:17] <Inst> it's great, it's the most insane programming language I've ever come across
[13:06:17] <pikapika> Inst, my point is
[13:06:33] <pikapika> Most of these modern languages try to fix one or two things, and then fuck up everything else
[13:06:56] <pyzozord> deniska: that would a great name for some chaos engineering team :D
[13:07:15] <pikapika> Which is why C is still the most popular language
[13:07:18] <mobidrop> in Rust you can also do things that they don't want you to do, but you have to do it in an unsafe block
[13:07:19] <pikapika> I am not saying C is ideal
[13:07:22] <pikapika> but its the least bad option
[13:07:22] <Inst> pikapika: rust is competitive
[13:07:28] <pyzozord> OOps stands for Oops Ops
[13:07:38] <epony> I don't think Rust is a  competitor to C
[13:07:38] <pikapika> mobidrop, having escape hatches is important yes
[13:07:42] <pikapika> Just like void* in C
[13:07:42] <mobidrop> Rust is the language of the future!
[13:07:49] <Inst> (and always will be)
[13:08:06] <pikapika> The overall language culture is staticy but it provides escapes like void* for when you need them
[13:08:10] <pikapika> Its a nice balance
[13:08:35] <mobidrop> yes safety by default and then you can always do it your way
[13:08:37] <pikapika> Inst, C is still the most popular language
[13:08:40] *** Joins: humanface (~humanface@20014C4E1C4D4700A82CE91D91A2788C.dsl.pool.telekom.hu)
[13:08:50] <epony> it's a fallout of commercial lock-in competition
[13:08:53] <epony> https://en.wikipedia.org/wiki/Timeline_of_programming_languages#2010s
[13:08:53] <bayaz> Title: Timeline of programming languages - Wikipedia 
[13:08:55] <Inst> pikapika: by what metric?
[13:08:56] <deniska> Don't make me tap on TIOBE :D
[13:09:04] <mobidrop> yes just like at some point horses were the most popular means of transportation, but we have cars now! :D
[13:09:04] <Inst> IIRC, tons of Pythoners, tons of Javascripters
[13:09:06] <epony> see most of the additions are commercial in that period
[13:09:17] <pikapika> Inst, size and power of existing projects, new projects being written etc
[13:09:25] <Inst> the nice thing is, after having struggled through Haskell for ages with insufficient progress
[13:09:31] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:09:32] <Inst> taking a look at K&R makes it seem much less daunting
[13:09:40] <epony> and have really no application outside the domains of their introduction, the respecive mothership vendor of low end commercial services
[13:09:44] <mobidrop> Haskell was ahead of its time
[13:09:48] <pikapika> mobidrop, the problem has been that most newer attempts at language (probably C++ excepted) have been very leaky abstractions
[13:09:57] <epony> mobidrop, EVERYTHING is behind its time
[13:10:01] <pikapika> They make some hard things easy, but then also make many easy things hard
[13:10:05] <Inst> Haskell is more like, "learn Haskell, learn computer science (because you'll have to learn all of computer science to actually learn Haskell properly)"
[13:10:15] <pikapika> Its still hard to make a high level language as flexible as C
[13:10:18] <mobidrop> pikapika, do you think Rust has leaky abstractions?
[13:10:31] <pikapika> I haven't used it yet so I can't say
[13:10:53] <pikapika> By leaky abstractions I mean things that are trivial on the lower layer becoming really hard in your framework/language
[13:10:54] <epony> Rust has low performance
[13:11:06] *** Joins: plastico (~plastico@neomutt/plastico)
[13:11:09] <epony> and high compilation memory and cpu load
[13:11:18] <deniska> Didn't we already do the happy hour of language arguing yesterday? :P
[13:11:29] <pikapika> I am not dogmatic about languages
[13:11:35] <pikapika> I just use whatever is practical
[13:11:42] <user51> deniska: i was just about to post a mailing list discussion about that :P
[13:11:43] <deniska> Using whatever is practical is boring
[13:12:03] <deniska> Now using whatever is impractical is fun
[13:12:08] <mobidrop> well there are some things that are trivial in normal languages but difficult in Rust
[13:12:21] <user51> sometimes using the wrong language can be interesting
[13:12:28] <pikapika> mobidrop, I must add the caveat that the said trivial thing is also actually useful and beneficial
[13:12:34] <pikapika> And not like, something you should avoid
[13:13:17] <pikapika> user51, template driven development. No need to run your program, the C++ compiler is the runtime, and your program executes at compile time.
[13:14:02] <user51> never did that, what's good about it?
[13:14:22] <pikapika> As you said sometimes its funny to use a system for something it wasn't intended for
[13:14:44] <user51> the unix philosophy :P
[13:14:45] <pikapika> though I must say, there is a lot of valid usage of templates to do compile time computations too
[13:15:59] <user51> i think implemented function pointers in nawk once by duplicating the function body inside a if/else. e.g if(name == "function") ...
[13:16:08] <mobidrop> pikapika, some things are trivial normally but difficult in Rust, like calling a method with 2 elements from the same array (mutably)
[13:16:34] <mobidrop> for example : https://stackoverflow.com/questions/30073684/how-to-get-mutable-references-to-two-array-elements-at-the-same-time
[13:16:35] <bayaz> Title: How to get mutable references to two array elements at the same time? 
[13:16:53] <mobidrop> in any normal language you can do function_blah(array[0], array[10])
[13:17:05] <pikapika> can you somehow try to wrap it in a deeper function call
[13:17:07] <mobidrop> but in Rust you need to first split the array somehow and then index the 2 slices
[13:17:24] <user51> i also wrote data structures in awk. but you also figure out that man, this stuff could just be part of the language.
[13:17:49] <pikapika> I see, let us hope the compiler manages to reduce it to the dumb swap after all this
[13:18:49] <user51> so while it's fun to see how far you get, by the time you do there's only regret
[13:21:00] <mobidrop> but the thing is, when you get deeper into Rust you find that the way you do things adapts to the language and you'll find yourself not even wanting to use constructs that you did in other languages
[13:21:37] <deniska> rust being restrictive is, like, its feature
[13:22:11] <deniska> people who use it actively try to avoid flexibility something like C provides :)
[13:22:16] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[13:22:32] *** Joins: node1 (~hex@user/node1)
[13:22:45] <epony> it's embedded application programming with not much application for system programming
[13:23:08] <epony> that safety is false
[13:23:13] *** Quits: node1 (~hex@user/node1) (Remote host closed the connection)
[13:23:14] <epony> and comes at a great cost
[13:23:21] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Ping timeout: 256 seconds)
[13:23:32] <pikapika> mobidrop, I think C will continue rising in popularity
[13:23:45] <epony> of course
[13:23:46] <pikapika> Of course I do appreciate the rust experiment too and wish it success
[13:23:55] <epony> it's not rising, it's never declining
[13:24:13] <epony> there are just different domains where the languages have more useful application
[13:24:13] <deniska> I mean, once you wrote a piece of software, it lives practically forever
[13:24:16] <pikapika> epony, many people are writing new projects in C
[13:24:18] <pikapika> See Redis
[13:24:22] <deniska> be it in C or COBOL or FOXPRO
[13:24:24] <epony> of course
[13:24:34] <epony> C is suitable for system programming, Rust is not
[13:24:45] <pikapika> C is very popular because its the cleanest way to call most existing os apis
[13:24:48] <user51> i just want my pointers :D
[13:24:51] <pikapika> Windows, linux and bsds
[13:24:59] <epony> C is kernel space, C++ is userland space
[13:25:11] <pikapika> C++ is also popular though less so than C
[13:25:13] <epony> C is for system utilities, C++ is for application programming
[13:25:14] <wootehfoot> preaching for C is like beating a dead horse, it's the only way to write something, and be immediately able to imagine how the assembler code will look
[13:25:16] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[13:25:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:25:26] <epony> actually C++ is the post popular programming language
[13:25:29] <pikapika> wootehfoot, that is wrong today I'd say
[13:25:39] <mobidrop> may the best language win over time :)
[13:25:43] <pikapika> C optimization is quite powerful and its not trivial to predict the asm fro mthe C source
[13:25:47] <deniska> wootehfoot: ever saw godbolt.org? :P
[13:25:49] <wootehfoot> pikapika, -flto -O3 ?
[13:25:50] *** Joins: mickey8 (~user@user/mickey)
[13:25:52] <epony> due to the vast ammount of applications and most languages using it for their implementation
[13:26:08] <f843d0> pikapika: try using objdump -dS and you'll change opinion
[13:26:15] <pikapika> epony, yeah I think C++ is also somewhat popular
[13:26:17] <wootehfoot> yeah sure, but try imagining the assembler code for haskell lol, at leas C leaves something to the imagination hehe
[13:26:23] <pikapika> Browser authors and node use C++
[13:26:31] <pikapika> wootehfoot, yeah thats correct
[13:26:38] <pikapika> It is important to know where the mallocs and frees will be
[13:26:39] <epony> browser authors are not the example of application programming experts
[13:26:42] <pikapika> Haskell makes that very hard to guess
[13:26:52] <deniska> oh hey, godbolt.org has a dark theme now
[13:27:07] <pikapika> f843d0, what do you mean
[13:27:26] *** Quits: sh4nks (~sh4nks@2a02:6ea0:dc05::a15d) (Ping timeout: 245 seconds)
[13:27:26] <epony> application servers are more critical examples of application programming for high performance where the C++ features are demonstrated
[13:27:35] <pikapika> epony, many people write application space programs in C
[13:27:38] <pikapika> Its quite popular
[13:27:41] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[13:27:43] <epony> and also redefinition of new languages and interpreters
[13:27:59] <epony> it is, but C++ is more popular
[13:28:00] <pikapika> C++ is quite popular too yes
[13:28:05] *** Joins: horseface (~horseface@user/horseface)
[13:28:06] <epony> because it has more capabilities and features
[13:28:08] <pikapika> The main point is that
[13:28:17] <pikapika> You need wrappers for anything not C
[13:28:24] <pikapika> C is the simplest way to call OS apis
[13:28:34] <pikapika> Which is why it is so popular
[13:28:47] <mobidrop> just because it's popular, doesn't mean it's good
[13:28:50] <pikapika> All the major oses present their apis in a C interface
[13:28:56] <epony> it is good
[13:29:02] <epony> that's why it is used in that domain
[13:29:19] <pikapika> All domains.
[13:29:22] <epony> you can use C++ too, only you would not be benefitting from its extra capabilities
[13:29:29] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[13:29:29] <pikapika> I like C++ too
[13:29:32] <epony> it's not suitable to all domains
[13:29:40] <epony> for example C is bad for prototyping
[13:29:44] <mobidrop> heh remember when golang was marketed as a systems programming language
[13:29:54] *** Joins: kasper93 (~kasper93@user/kasper93)
[13:30:30] <epony> also has terrible problems with standard libraries and extra runtimes coming from various incompatible vendors of sloppy libraries
[13:30:55] <epony> however with C and C++ you CAN and DO pick your libraries
[13:31:27] <epony> with a bundle like Rust you get a small predefined sub-optimal set of choices made in advance for you integrated and "one way" of handling it
[13:31:36] <epony> that is the REAL difference
[13:31:40] <f843d0> pikapika: man objdump | cat | grep -E "(-d\||-S\|)"
[13:31:52] <epony> the syntax and grammar are just UI
[13:32:44] <epony> the languages features are similar with less capability in the more integrated higher level languages like Rust, and it borrows dynamic programming and functional programming methodologies, that are just not needed as built-ins
[13:33:11] <f843d0> pikapika: when programming in C, above utilities will drive you exactly to the disassembled source code line after line and you'll find a logic...
[13:33:18] <epony> so you can NEVER write efficient high performance programs in Rust, you will get application level bundles
[13:33:33] <pikapika> Ok, it is meant to dump asm with the corresponding sources
[13:33:37] <epony> which is a huge waste of computing resource at runtime
[13:33:40] <pikapika> so what was your point
[13:33:48] <pikapika> my point wasn't that you can't see the asm
[13:33:55] <f843d0> pikapika: do the same with whatsoever other language and you'll see many difficulties. Starting with the inlining of C++ for not speaking of the vtables rather than the this pointers around...
[13:34:05] <pikapika> My point was that your inner intuition may no longer work with modern optimization
[13:34:17] <f843d0> 10:55:43< pikapika> C optimization is quite powerful and its not trivial to predict the asm fro mthe C source
[13:34:21] <pikapika> Even thought it might still be the case that C asm is the most natural
[13:34:29] <pikapika> I said predict not see
[13:34:42] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[13:34:47] <absentia> _real_ programmers handwrite their assembly because that's the only way to achieve timings with microsecond level precision
[13:34:50] <pikapika> Of course we can disasm and see the instructions
[13:35:12] <f843d0> 11:04:50< pikapika> Of course we can disasm and see the instructions <--- not trivial
[13:35:13] <epony> it is possible to get predictable machine code binaries from C and C++ alike (if you do not use the complex extensions of C++)
[13:35:18] <DnzAtWrk> isn't it kinda funny. On one hand you have a group of people wasting substantial amounts of time writing C++ code still, because they think they need the performance
[13:35:31] <epony> no
[13:35:32] <f843d0> 11:05:13< epony> it is possible to get predictable machine code binaries from C and C++ alike (if you do not use the complex extensions of C++) <--- yeah, like STL and lambdas?
[13:35:32] <DnzAtWrk> on the other hand you have people who like things like javascript and think optimization is a bad word
[13:35:39] <absentia> "optimization is a bad word"
[13:35:41] <pikapika> How is it not trivial? We can just instruct gcc to emit the .s file
[13:35:44] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[13:35:44] <absentia> Slack takes 5GB of RAM
[13:35:46] <absentia> and several minutes to load
[13:35:53] <absentia> this is the modern frontend zeitgeist
[13:36:02] <epony> DnzAtWrk, only naive people think they do not need performance.
[13:36:10] <pikapika> absentia, yeah people have completely misused that famous knuth quote
[13:36:17] <absentia> _premature_ optimization
[13:36:17] <DnzAtWrk> the truth is somewhere in the middle of course
[13:36:19] <absentia> take a profile
[13:36:22] <pikapika> We are not doing premature optimization today, we are doing premature pessimization
[13:36:23] <f843d0> pikapika: that still won't grant you easy comparison of source code line by line
[13:36:24] <absentia> then target the hot spots
[13:36:29] <epony> DnzAtWrk, no.
[13:36:34] <epony> there is no middle
[13:36:39] <DnzAtWrk> modern computers are so powerful that you barely need to write at the c++ level at all even to make things like high-end games
[13:36:46] <pikapika> f843d0, thats a good point. I hadn't known there was an option to interleave C source and its asm.
[13:36:49] <pikapika> in the disasm
[13:36:53] <absentia> that quote was supposed to be for people going all out hand-unrolling loops thinking they could squeeze out a few extra cycles
[13:36:56] <epony> there are different best usage / application domains of the respective languages
[13:36:56] <DnzAtWrk> but you shouldn't use the latest 500 MB javascript framework either because you're too lazy to do literally anything yourself
[13:37:03] <absentia> but missing the bigger picture of what was actually slowing their program down
[13:37:05] <absentia> you need to profile it
[13:37:07] <absentia> _need_
[13:37:10] <pikapika> absentia, exactly
[13:37:14] <absentia> optimization is an empirical activity
[13:37:15] <pikapika> If all parts of their program are slow
[13:37:19] <f843d0> pikapika: jo, sounded like that :)
[13:37:20] <pikapika> profiling won't help you much
[13:37:22] <epony> DnzAtWrk, your arguments are flawed
[13:37:25] <pikapika> f843d0, jo?
[13:37:44] <f843d0> pikapika: jo
[13:37:51] <epony> and people using that argumentation have no place in most system and application level programming groups
[13:38:43] <pikapika> absentia, you know theres a way to do real time profiling of your code as it runs, everytime effortlessly
[13:38:46] <pikapika> thats called an older laptop
[13:38:59] <absentia> i want cost centers
[13:39:04] <absentia> number of invocations
[13:39:06] <absentia> call graphs
[13:39:10] <epony> well, all machines have constraints
[13:39:13] <epony> and are real
[13:39:22] <pikapika> Just test on older hardware
[13:39:30] <f843d0> absentia: systemtap
[13:39:33] <pikapika> I don't know why many people have forgotten this basic thing
[13:39:34] <absentia> doesn't answer the question, which part is slow?
[13:39:52] <epony> even if you believe it's some virtual super cluster.. it still runs on real and physical machines
[13:40:06] <absentia> DnzAtWrk: again - what happens when you need to write code that must execute within less than a nanosecond
[13:40:06] <pikapika> Profiling is one thing, but if your code is so bad that everything is equally slow we don't get much understanding from the profiling
[13:40:18] <absentia> there is basically no way to do this other than handwriting the assembly
[13:40:26] <absentia> to be sure that you actually fit what you want into those dozen instructions
[13:40:54] <epony> and you do need every single bit and cycle
[13:41:20] *** Joins: tangyQED (~tangy@user/tangy)
[13:41:27] <absentia> yes, if you're bit banging a wire protocol
[13:41:28] <epony> otherwise your machines get slow, you can do less work, and lose memory and computation, and your business gets displaced by others who do not make stupid mistakes
[13:41:39] <epony> errors and faults accumulate
[13:41:45] <absentia> the physical device on the other end will literally not function
[13:41:49] <absentia> if you fail to abide by these timings
[13:41:52] <pikapika> Older apps on newer hardware is an amazing experience
[13:42:11] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 250 seconds)
[13:42:22] <absentia> i find a bunch of web programmers think that software ends at javascript, and there is nothing below
[13:42:27] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:42:40] <absentia> and that they've seen everything there is to the world of computing
[13:42:46] <epony> sloppily programmed applications that incur waste quickly get abandoned
[13:42:59] <epony> memory leaks and inefficiencies result in discarded work
[13:43:16] <pikapika> absentia, they have a weird mindset
[13:43:28] <pikapika> Some of them are simply unable to think outside a web server+browser mindset
[13:43:45] <absentia> there's less hobbyists
[13:43:51] <pikapika> Like if you ask them about how its getting difficult to maintain sofware, the first "solution" they will come to mind is running a home cloud
[13:44:00] <absentia> "put it in a docker container"
[13:44:01] <pikapika> Have they fucking forgotten the concept of a native app?
[13:44:08] <epony> on a modern operating system you have to run applications, not just show a snapshot of the UI that looks like any other UI
[13:45:19] <epony> system level virtualisation is not your problem, your problem is inefficient, slow and wasteful badly designed applications, database tables and uncapped growth of data sets
[13:45:26] <pikapika> absentia, if I use the term "serverless" whats the first thing that comes to your mind? A pure client side js page right?
[13:45:35] <pikapika> Well you would be dead wrong if you listened to web devs
[13:45:35] <absentia> the proprietary aws technology
[13:45:40] <pikapika> Search for serverless apps and see what you get
[13:45:57] <absentia> microsoft docs
[13:45:59] <absentia> not terrible
[13:46:05] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[13:46:08] <absentia> depends on which docs i guess
[13:46:15] <pikapika> absentia, exactly. And in the context of web apps, you would imagine a pure client side js page.
[13:46:25] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[13:46:31] <pikapika> But no "serverless" apparently means something completely different and does require an aws and god knows what complicated frameworks.
[13:46:36] <PlanckWalk> Nah, that's more like single-page application
[13:46:42] <absentia> yes
[13:46:46] <absentia> PlanckWalk is correct
[13:46:48] *** Joins: programmar (~whatever@118.69.128.37)
[13:46:48] <pikapika> PlanckWalk, it also happens to be completely serverless
[13:46:57] <absentia> you're equivocating terms
[13:46:57] <pikapika> Everythings happening on the client
[13:46:59] <pikapika> There is no server
[13:47:00] <PlanckWalk> Eh, sometimes
[13:47:05] <programmar> anyone here faces the same problem that Notification() api in javascript doesn't show any notification on mobile devices ?
[13:47:07] <epony> serverless means no Internet ;-)
[13:47:08] <pikapika> absentia, it need not be a single page
[13:47:13] <pikapika> It just has to be pure clientside
[13:47:19] <pikapika> epony, correct
[13:47:19] <absentia> lolololol
[13:47:20] <programmar> i tried and it works so well on desktop and laptop but mobile is doomed
[13:47:34] <PlanckWalk> Yeah, to me serverless means just "there is no server, anywhere"
[13:47:40] <pikapika> Exactly PlanckWalk 
[13:47:47] <absentia> serverless = metered compute time on ephemeral instances
[13:47:48] <epony> mobile is drone computing
[13:47:50] <PlanckWalk> So definitely not a web page with js on it
[13:47:57] <absentia> that is where the term originated
[13:48:05] <absentia> from aws lambda which was the first proprietary offering of this technology
[13:48:05] <epony> can not even start the devie without registration to the botnet, that is mobile
[13:48:06] <pikapika> PlanckWalk, a web page with js does not need a server to run.
[13:48:15] <absentia> get off my lawn
[13:48:18] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[13:48:34] <PlanckWalk> Yes, I've written a few tiny js-only applications
[13:48:40] <Rounin> Mumble mumble HTTP server cough cough
[13:48:42] <absentia> write a function, who cares what server it runs on
[13:48:45] <PlanckWalk> Not even http
[13:48:48] <absentia> "the cloud" takes care of it for you
[13:48:51] <absentia> => serverless
[13:48:53] <pikapika> We have apis to save and load files of users choice from a page, and the browser comes bundled with an easy to use graphical api...thats all you need for many apps
[13:48:58] <pikapika> PlanckWalk, correct
[13:48:59] <pikapika> no http
[13:49:02] <pikapika> just a pure client side js
[13:49:06] <Rounin> Well I mean, you can have all the users be on localhost
[13:49:15] <Rounin> Or serve it over teletext...
[13:49:15] <pikapika> Rounin, my point is
[13:49:20] <pikapika> We don't need a server at all
[13:49:20] <absentia> brb pissing in the wind
[13:49:24] <pikapika> What does GIMP do?
[13:49:31] <PlanckWalk> it gimps things
[13:49:36] <pikapika> You make something and save it to a disk file
[13:49:45] <Rounin> Edit graphics...? If it's the program commonly known as GIMP
[13:49:45] <pikapika> Modern frontend js apis allow you to do the same thing
[13:49:59] <pikapika> As long as you can load and save files, thats all you need for many things
[13:50:07] <pikapika> You don't need a server to load and save files
[13:50:13] <PlanckWalk> But anyway, you'll get no traction trying to redefine the existing term
[13:50:14] <absentia> we should go back to java apps
[13:50:16] <absentia> and qt
[13:50:20] <absentia> run everything on the desktop
[13:50:25] <absentia> and rediscover the early 2000s
[13:50:32] <PlanckWalk> Amazon got there first
[13:50:42] <Rounin> I suppose WebAssembly and JS are the new applets/Flash now
[13:50:57] <absentia> but this time we'll get it right
[13:50:57] <epony> there is nothing modern about programming scripts in an embedded programming language inside a dull application that has a built in virtual machine wrapped in an idiotic interface
[13:50:58] <[itchyjunk]> electron apps
[13:51:00] <PlanckWalk> Rounin: Yes
[13:51:04] <epony> it's just a bundle of CRAP.
[13:51:40] <Rounin> I feel like applets usually required 10 terabytes of RAM and 90 minutes to load, though... And then they had this static stamp-sized window... So JS and WebAssembly might have an edge there
[13:52:03] <absentia> you mean, that's not the case with modern web apps and electron?
[13:52:04] <PlanckWalk> Rounin: No difference when the browsers require 10 TB and 90 minutes to load...
[13:52:10] <epony> it's crappy not because it looks bad, it looks bad because it is designed to be captive and to be a low efficiency bundle to constrain your computing into its inside area
[13:52:11] <absentia> it turns out 16 gigs is not enough to run a browser these days
[13:52:15] <epony> so it's a JAIL.
[13:52:16] <Rounin> :D Good point PlanckWalk 
[13:52:21] <epony> the browser is a GAOL.
[13:52:26] <epony> it's worthless
[13:52:44] <Rounin> "gaol" would be a pretty good product name
[13:52:49] <pikapika> In theory js for graphical applications can be faster than java
[13:52:52] <absentia> it just redirects to facebook
[13:52:52] <Rounin> Gnome Application Object Loader...
[13:53:02] <pikapika> but it won't be anything at all like typical front end code
[13:53:10] <pikapika> Because you have to leverage the fast C++ code for that
[13:53:11] <Rounin> (Or perhaps Google)
[13:53:17] <epony> ;-) Getting Absurdly Old and Leaky
[13:53:19] <pikapika> so let the browser engine and native controls do as much as possible
[13:53:27] <Rounin> epony: :D
[13:53:28] <pikapika> and do as little direct graphical manipualtion with js as possible
[13:53:42] <absentia> we should overhaul UI and do everything in wasm and webgl clientside in the browser
[13:53:47] <pikapika> Whereas with java, the low level graphical operations are themselves in Java and not C++ so it can be slower
[13:53:51] <absentia> the browser becomes the new lingua franca virtual machine
[13:53:55] <absentia> gary bernhardt is vindicated
[13:54:06] <absentia> yavascript becomes the world's most popular programming language
[13:54:11] <epony> Java is the same captive model of computing in a confined space, imprisoned applications
[13:54:16] <pikapika> Oh god please no absentia 
[13:54:17] <epony> that fail to use the underlying OS
[13:54:20] <absentia> search engines become even more useless than they are today
[13:54:30] <absentia> as they fail to crawl sites that just embed a giant canvas
[13:55:01] <absentia> i could write dystopian software horror
[13:55:07] <absentia> or tragedy
[13:55:19] <Rounin> All apps could just be a static image that said "YOUR DATA, YOUR CHOICE" and "I AGREE"
[13:55:27] <epony> java is just some way to inflate the cost of computing and provide a means to hide the program from the OS environment so it is demanding a lot and behaving like an onvergrown monster inside a cacoon
[13:55:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:55:49] <epony> it's the shitty WIN/DOS model of computing
[13:55:57] <Rounin> epony: All I'm hearing is billable hours
[13:56:00] <epony> one program overtaking the entire system
[13:56:07] <PlanckWalk> Well, then we'll reinvent OSes within the js canvas and write other application sandboxes in there to protect the apps from each other and then reinvent the whole infrastructure inside the browser inside the OS that runs on the actual computer.
[13:56:13] <epony> debillable ;-)
[13:56:15] <Rounin> Additional complexity, you say? That sounds very expensive... Very profitable
[13:56:24] <Rounin> We need more Kubernetes
[13:56:41] <epony> yeah, that's why the company who shipped Java is no more
[13:56:48] <absentia> PlanckWalk: and then god said, let there be light
[13:56:50] <Rounin> Imagine... Imagine wrapping all of your browsers running WASM in Docker... I'm just saying
[13:56:54] <absentia> it was actually just operating systems all the way down
[13:57:04] <epony> and nobody runs an Oracle application on their desktop
[13:57:14] <PlanckWalk> Rounin: Imagine running a Docker-liek implementation ... inside the browser.
[13:57:28] <Rounin> PlanckWalk: It's so beautiful T_T
[13:57:42] <epony> cause the company that sells expensive proprietary and "patented" slow shit gets replaced
[13:57:44] <absentia> "front-end microservice architecture" just took on a whole new meaning
[13:58:04] <epony> so you run other databases, not Oracles
[13:58:08] <absentia> i can't wait for this house of cards to collapse
[13:58:16] <Rounin> Hmm, haha... I bet if you released a JavaScript-based client-side Docker/Kubernetes thing, websites would start using it
[13:58:18] <epony> and you run other virtual machines, not Java
[13:58:26] <absentia> or perhaps the grimdark fans are right and we will be maintaining cobol mainframes in perpetuity for another 38,000 years
[13:58:38] <Rounin> Let's not tell anyone about that idea... Some things are better left undiscovered
[13:58:47] <PlanckWalk> Rounin: Then you could run web servers in your Kubernetes/JS inside Chrome.
[13:58:51] <Rounin> :D :D :D
[13:58:58] <Rounin> The natural way.
[13:59:12] <epony> web sites can't use anything on your computer, unless you run the botnet infection
[13:59:25] <PlanckWalk> epony: They can't YET
[13:59:27] <epony> that's serverless.
[13:59:37] <epony> no web sites ;-)
[13:59:54] <absentia> they have to defraggle your motherdisc first
[14:00:13] <varaindemian> any idea what I am doing wrong? https://www.irccloud.com/pastebin/MC97nywm/
[14:00:14] <bayaz> Title: Snippet | IRCCloud 
[14:00:32] <varaindemian> my end goal: https://www.irccloud.com/pastebin/suiTaILZ/
[14:00:32] <bayaz> Title: Snippet | IRCCloud 
[14:00:48] <PlanckWalk> So when you're running your webserver inside your browser and you want to shut down your computer, you just upload to a browser running somewhere else.
[14:01:14] <epony> s/browser/process/g
[14:01:17] <PlanckWalk> It's only a 3 terabyte upload so it's no big deal.
[14:01:56] <epony> you call that VM hot-migration
[14:02:08] <absentia> i call it a waste of electricity
[14:02:18] <epony> yes, web browsers waste a lot
[14:02:20] <absentia> oh wait, that's cryptocurrency
[14:02:22] <absentia> nevermind
[14:02:27] <epony> that's the same
[14:02:30] <epony> botnet
[14:02:32] <PlanckWalk> That's ... everything more or less
[14:02:45] <epony> except serverless worms
[14:02:55] * epony nails it
[14:03:10] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[14:04:11] <PlanckWalk> Hmm, that's not very interesting base64 data
[14:04:30] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[14:04:30] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[14:04:30] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:05:23] <absentia> varaindemian: you need to read more on python's module system - https://docs.python.org/3/tutorial/modules.html
[14:05:24] <bayaz> Title: 6. Modules ? Python 3.10.2 documentation 
[14:05:45] <absentia> contrary to popular opinion i recommend just reading the python docs cover to cover
[14:05:55] <absentia> better than any tutorial
[14:06:08] <varaindemian> absentia: definetely 
[14:06:22] <varaindemian> absentia: but I'll probably need a quick fix until then
[14:06:37] <absentia> quick fix now, big pain later
[14:08:19] <absentia> s/python docs/python tutorial
[14:09:01] <varaindemian> I agree
[14:09:05] <varaindemian> I want pain
[14:09:23] <epony> hit your finger with the keyboard
[14:09:43] *** Joins: leonarth (~leonarth@user/leonarth)
[14:09:48] <epony> (it hurts a lot, better don't do it)
[14:10:14] <varaindemian> Already tried the to hit the keyboard with my fingers -> no helpful result found
[14:10:15] <reynir> oh yea I was going to object to reading the python docs cover to cover as an in any way reasonable way to learn python
[14:10:32] <epony> no, the keyboard has a narrow side
[14:10:36] <absentia> varaindemian: what are you actually trying to do
[14:10:40] <Stefan26> python
[14:10:45] <absentia> reynir: i meant the official python tutorial in the docs
[14:10:48] <absentia> not the full on reference
[14:11:06] <absentia> this is how i learned
[14:11:12] <varaindemian> absentia: this: https://www.irccloud.com/pastebin/suiTaILZ/
[14:11:12] <bayaz> Title: Snippet | IRCCloud 
[14:11:15] <reynir> yea I saw your amendment
[14:11:17] <absentia> but it occurs to me varaindemian is trying to do something tricky
[14:11:22] <reynir> and I agree the tutorial is good
[14:11:51] <absentia> varaindemian: yeah but why
[14:12:10] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[14:12:15] *** Joins: SCP-1471 (~NOX@59.red-83-32-35.dynamicip.rima-tde.net)
[14:12:38] *** Quits: kmh_ (~kmh@94.31.106.215) (Quit: Leaving)
[14:12:39] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:51c3:c0d2:e2de:930c) (Remote host closed the connection)
[14:13:02] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:51c3:c0d2:e2de:930c)
[14:13:09] *** Parts: SCP-1471 (~NOX@59.red-83-32-35.dynamicip.rima-tde.net) ()
[14:13:38] <varaindemian> absentia: instantiating newly created classes and checking the output of those objects
[14:14:01] <varaindemian> absentia: basically a script checker
[14:15:30] <absentia> varaindemian: and MyModule is a name in my_module?
[14:15:41] <absentia> (both having been specified by argv)
[14:15:59] <varaindemian> absentia: yes
[14:17:34] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:f143:90e7:e058:c617)
[14:18:01] *** Joins: Twipply (~Twipply@user/twipply)
[14:20:11] <absentia> one second
[14:22:52] <absentia> haha
[14:23:54] <absentia> pasting
[14:23:59] <varaindemian> :D
[14:24:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:24:24] <GeDaMo> Didn't I answer this question yesterday?
[14:24:43] <varaindemian> GeDaMo: yes, now I am trying to implement it
[14:24:44] *** Quits: Blasphemian (~Blasphemi@user/blasphemian) (Quit: Leaving)
[14:24:50] <varaindemian> GeDaMo: struggling
[14:24:56] <absentia> https://bpa.st/YQ6Q
[14:24:57] <bayaz> Title: View paste YQ6Q 
[14:25:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:25:24] <absentia> this would appear to work when invoked as `python __main__.py foobar Foobar`
[14:25:28] <absentia> (prints foo)
[14:25:30] *** Lord_of_Life_ is now known as Lord_of_Life
[14:26:06] <absentia> the return of import_module is an object that can be inspected with dir() and accessed through getattr() like any other
[14:26:21] <absentia> use getattr to fetch the class and create a new instance
[14:26:23] <absentia> and boom
[14:26:35] <absentia> absolute sorcery that you will burn in hell for evoking
[14:26:40] <absentia> (maybe not really)
[14:27:03] <absentia> sorry for the whitespacing my editor isn't equipped for python any more
[14:27:54] *** Joins: kmh (~kmh@2a00:6020:5004:6800:460a:ef03:e89d:7820)
[14:31:55] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[14:33:05] *** Joins: jazzy2 (~jaziz@user/jaziz)
[14:33:55] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[14:34:14] <varaindemian> https://www.irccloud.com/pastebin/MnDfch0Q/
[14:34:15] <bayaz> Title: Snippet | IRCCloud 
[14:34:17] <varaindemian> @absentia 
[14:34:21] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:35:17] <absentia> varaindemian: what's your dir structure
[14:35:29] <absentia> i ran this in a fresh virtualenv
[14:35:42] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[14:36:47] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[14:36:58] <varaindemian> absentia: no virtual env
[14:38:13] <absentia> varaindemian: did you create `foobar/__init__.py`?
[14:39:03] <absentia> in the root of your package tree
[14:39:10] <varaindemian> yes
[14:39:21] <absentia> :/
[14:40:05] *** Quits: src (~src@user/src) (Quit: Leaving)
[14:40:19] <varaindemian> ah, fixed it
[14:40:22] <varaindemian> typo
[14:40:50] <absentia> often is
[14:40:52] <absentia> works?
[14:42:34] <varaindemian> absentia: your example, yeah, flawless
[14:42:49] <varaindemian> gotta try it for my use case now
[14:42:54] <varaindemian> absentia: thank you!
[14:44:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:45:29] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[14:45:36] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[14:46:33] *** Quits: ejjfunky (~ejjfunky2@125.164.23.110) (Quit: Leaving)
[14:46:46] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[14:48:21] *** Quits: horseface (~horseface@user/horseface) (Client Quit)
[14:49:25] *** Parts: leonarth (~leonarth@user/leonarth) ()
[14:50:32] <pyzozord> any ideas how to set up simplest git server in docker?
[14:50:58] *** Joins: znedw54 (~znedw@home.znedw.com)
[14:51:55] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[14:51:57] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: WeeChat 3.4)
[14:51:58] <pyzozord> so that i can git clone git@localhost:containerport:/project.git
[14:52:13] <pyzozord> where /project.git maps to host ~/Projects/project/.git
[14:53:05] *** Joins: leonarth (~leonarth@user/leonarth)
[14:55:48] *** Quits: znedw54 (~znedw@home.znedw.com) (Client Quit)
[14:56:22] *** Joins: znedw54 (~znedw@home.znedw.com)
[14:58:52] <mobidrop> you can use directory as remote right
[14:59:57] <pyzozord> i know but somehow argo doesn't like that
[15:02:13] *** Quits: calcmandan (~quassel@user/calcmandan) (Quit: Visit me at: gopher://gcpp.world)
[15:02:51] *** Joins: calcmandan (~quassel@user/calcmandan)
[15:04:46] *** Joins: aqua (~aqua@user/aqua)
[15:04:48] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[15:06:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:07:07] *** aqua is now known as kish
[15:07:19] *** kish is now known as kish`
[15:08:30] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:10:03] *** Quits: z3t0 (~z3t0@146.71.14.98) (Read error: Connection reset by peer)
[15:10:22] *** Joins: z3t0 (~z3t0@146.71.14.98)
[15:11:53] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[15:13:13] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:13:13] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:51c3:c0d2:e2de:930c) (Remote host closed the connection)
[15:13:15] <beaky> yes outside of docker i just python -m http.server and then git clone
[15:13:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[15:14:03] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[15:14:54] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:3160:dbdc:3cd6:3a18)
[15:15:49] <nickel8448> Hey #programming, I have a simple grpc server and client application. The server is written in Python and the client is in Go. I realized yesterday that I am unable to log the requests to the server properly; things like how much time it took to process the RPC, RPC was received, etc. Do you guys know of any best practices around logging RPCs?
[15:16:07] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[15:17:37] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[15:22:55] *** Quits: _inky (inky_@gateway/vpn/protonvpn/inky) (Ping timeout: 256 seconds)
[15:24:03] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:25:02] *** Joins: random-nick (~random-ni@87.116.181.150)
[15:28:36] <mobidrop> I use nginx and it logs the http requests
[15:30:38] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[15:30:43] *** Joins: retux (~user@dyndsl-085-016-037-180.ewe-ip-backbone.de)
[15:31:30] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:32:33] <beaky> nice i like nginx my favorite http server for all purposes including serving static content and reverse proxying http application servers
[15:32:36] *** Joins: Emet-Selch (~haise01@user/haise01)
[15:32:47] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[15:32:54] *** Emet-Selch is now known as haise01
[15:32:58] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:32:59] <beaky> both the fastest web server as well as the easiest web server to configure and administer
[15:33:06] <DnzAtWrk3> enough bloody dist upgrades
[15:33:18] <DnzAtWrk3> I've barely used ubuntu for a few days until it's time for the next one
[15:33:22] <DnzAtWrk3> I'm sick of upgrades
[15:33:53] <beaky> yes i upgrade my os only once a month because it takes 2/3 of a day to finish compiling everything
[15:34:11] <beaky> it is now the first week of february so i am due for an upgrade
[15:34:15] <PlanckWalk> I upgrade about once per 4 years
[15:34:35] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[15:34:51] <beaky> exactly you dont need to upgrade so frequently if you only need to keep up with specific packages you really require to be the most up to date
[15:34:54] <mobidrop> I don't upgrade, if it aint broke don't fix it
[15:35:21] <beaky> yes if it works why ugprade 
[15:36:17] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[15:36:45] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[15:36:48] *** Joins: inky_ (~inky@178.78.151.145)
[15:37:36] *** Joins: _inky (~inky_@178.78.151.145)
[15:37:46] <beaky> ok maybe i should upgrade as frequently as possible to always stay ahead of security fixes
[15:40:09] *** Quits: inky (~inky@46.36.119.204) (Ping timeout: 256 seconds)
[15:40:55] <beaky> yes gotta keep the upstream of my tea database as up to date as possible to minimize any pain
[15:41:01] <smallville7123> imma just use rescan to alternate between action modes without duplicating grammar
[15:42:01] *** jazzy2 is now known as jazzy
[15:42:13] <DnzAtWrk3> linux is a joke
[15:42:21] <DnzAtWrk3> every time, it can never do anything right
[15:42:34] <DnzAtWrk3> no year will be the year of the linux desktop
[15:42:59] <nickel8448> Thanks mobidrop and beaky I will read more about nginx
[15:43:20] <smallville7123> DnzAtWrk3: why
[15:43:57] <DnzAtWrk3> crap drivers crap dependency hell crap package managers crap updates
[15:44:15] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[15:44:17] <DnzAtWrk3> not even 100% fresh linux installs can do anything right
[15:44:23] <DnzAtWrk3> like install a simple program
[15:44:42] <DnzAtWrk3> always some ****** excuse and some ****** unmet dependency or incompatible version
[15:45:08] <DnzAtWrk3> every bloody time
[15:45:21] <DnzAtWrk3> it's like linux has this own little ecosystem they expect you to use for everything to run smoothly
[15:45:26] <DnzAtWrk3> BUT DON'T YOU DARE STRAY TOO FAR
[15:47:19] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:3160:dbdc:3cd6:3a18) (Quit: Leaving)
[15:47:43] *** Joins: mspe (~user@tilde.team/user/mspe)
[15:47:47] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:48:10] <smallville7123> DnzAtWrk3: see #linux
[15:48:25] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[15:49:28] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[15:49:32] <DnzAtWrk3> fanboys
[15:49:57] <jelly> also, use decent distros and ask about the particular distro's best practices; the exact methods can and do vary
[15:50:24] <DnzAtWrk3> like say, ubuntu then
[15:50:24] <jelly> linux is not one ecosystem.  It's dozens.
[15:50:34] <DnzAtWrk3> but ubuntu of course can not install such strange software as mysql workbench
[15:50:52] <jelly> #ubuntu is right next door ->
[15:51:05] <DnzAtWrk3> This is not what I'm bloody doing today
[15:51:05] <smallville7123> lol
[15:51:08] <DnzAtWrk3> I will try another distro
[15:51:11] <DnzAtWrk3> I do not have time for this crap
[15:51:28] <jelly> > ask about the particular distro's best practices
[15:51:36] <DnzAtWrk3> nobody uses > anymore
[15:51:48] <DnzAtWrk3> that meme was dead in... 2005 or so
[15:51:48] <deniska> > not using ">" smh
[15:51:51] <mspe> →
[15:51:52] <jelly> skipping to another distro will just you a different set of issues
[15:52:22] <jelly> it's not a meme, it's a quote
[15:52:23] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:52:37] <deniska> I suggest you sticking with windows, it never experiences software dependency problems and all hardware ever released just works :P
[15:53:09] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:53:11] * jelly notes this is not a sarcasm-free zone
[15:53:19] <duuude> windows has its own dependency problems, ancient dlls
[15:53:22] <DnzAtWrk3> it's sarcasm?
[15:53:28] <DnzAtWrk3> windows is extremely backwards compatible
[15:53:41] <duuude> not a single mechanism to update stuff
[15:53:51] *** Quits: maxzor__ (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:53:58] <duuude> doesn't share deps
[15:54:05] <duuude> just different issues
[15:55:01] <jelly> DnzAtWrk3, adjust your expectations; lots of stuff is broken on Ubuntu or any other distro, but a) most of it can be fixed without reinstallation and b) some stuff works really well
[15:55:41] <duuude> and all hardware ever released is supported, if you just take stuff like gpu etc. not weak desktops
[15:55:46] <deniska> I am kinda tired of having similar conversation every other day :)
[15:56:04] <duuude> lol
[15:56:09] <jelly> if you want to minimize wasted time, it might be better to learn how one distro works
[15:56:21] <tomathy> it is important to value yourself more than the algorithm you execute
[15:56:22] <DnzAtWrk3> jesus christ I know what the deal is
[15:56:25] <DnzAtWrk3> download x y and z
[15:56:27] <DnzAtWrk3> compile from source
[15:56:30] <DnzAtWrk3> debug make file for 5 hours
[15:56:34] <DnzAtWrk3> No, I am not doing this
[15:56:41] * jelly shrugs
[15:57:06] <duuude> go win doves then
[15:57:08] <tomathy> algorithms are not solutions in themselves
[15:57:11] <duuude> and lose penguins
[15:57:19] <mspe> what was the root issue?
[15:57:34] <DnzAtWrk3> compilers and etc. are too new
[15:57:58] <duuude> you can compile old standards by simple flags
[15:58:01] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: Leaving)
[15:58:16] <duuude> new is better than old
[15:58:17] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[15:58:46] <tomathy> there is nothing like a good optician, but also, possibly nothing worse for your eyesight than perfectly corrective glasses
[15:58:54] *** Joins: Akronymus (~Akronymus@85.118.189.59)
[15:58:56] *** Joins: Leone (~Leo@108.175.224.215)
[15:58:58] *** Parts: Akronymus (~Akronymus@85.118.189.59) ()
[16:01:02] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:02:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:02:41] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[16:03:14] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 268 seconds)
[16:03:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[16:04:16] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:36bb:8b7:cefe:38a1)
[16:05:43] * smallville7123 wonders if i should rename my parser to Rescan Parser
[16:05:54] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: Leaving)
[16:05:56] * smallville7123 wonders if i should rename my parser to Rescan
[16:07:03] * smallville7123 wonders if i should rename my parser from CPP to Rescan  *
[16:08:51] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[16:09:43] <DnzAtWrk3> what would I use to export a sql database as a custom xml format
[16:10:03] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[16:10:08] <DnzAtWrk3> sql to xml that is
[16:10:23] <merijn> DnzAtWrk3: Lots of alcohol
[16:10:36] <DnzAtWrk3> come on, there have to be a tool for it
[16:10:37] *** Joins: biberu (~biberu@user/biberu)
[16:10:41] <DnzAtWrk3> with a format file or something
[16:10:53] <DnzAtWrk3> I need to recover data from a wordpress database
[16:11:32] <DnzAtWrk3> but only pure data, nothing else
[16:11:37] <DnzAtWrk3> no wierd settings
[16:12:10] *** Parts: nulleip (~luiz@user/nulleip) ()
[16:13:12] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[16:13:33] *** Joins: baracurda_ClassN (~baracurda@gateway/tor-sasl/parserblabla)
[16:13:48] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[16:14:24] *** Joins: operateur (~operateur@91.143.220.230)
[16:14:33] *** Joins: nulleip (~luiz@user/nulleip)
[16:14:57] *** Quits: baracurda_ClassN (~baracurda@gateway/tor-sasl/parserblabla) (Remote host closed the connection)
[16:15:40] *** Joins: robink_ (~robink@2a02:6ea0:dc05::a15d)
[16:15:53] <tomathy> is SQL a bad idea, sh9uld you always opt for NoSQL first?
[16:15:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[16:15:58] *** Joins: baracurda (~baracurda@gateway/tor-sasl/parserblabla)
[16:16:17] <mobidrop> SQL bad, XML good!
[16:16:19] <dodo> tomathy: no
[16:16:20] <tomathy> DnzAtWrk3: can't you just select every table and put it in a text file or something
[16:16:32] *** Quits: scabby (~scabby@user/scabootssca) (Quit: Leaving)
[16:16:49] <DnzAtWrk3> of course, but wordpress uses a custom xml format for importing data
[16:16:53] <Trashlord> why do you want to?
[16:16:56] <DnzAtWrk3> and I want to import the data into a fresh wordpress instance
[16:17:03] <DnzAtWrk3> a fresh clean instance
[16:18:00] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:18:06] <tomathy> start with your easiest table then do the next easiest
[16:18:18] <PlanckWalk> A lot of SQL servers can export your data as SQL INSERT commands
[16:18:21] <DnzAtWrk3> I know, but I need a tool for doing the conversion
[16:18:25] <DnzAtWrk3> converting rows into xml
[16:18:42] <DnzAtWrk3> preferably there would already be some wp database to xml script on github
[16:18:44] <DnzAtWrk3> but I can't find one
[16:18:47] <PlanckWalk> Oh, also CREATE TABLE I guess
[16:18:57] <tomathy> https://docs.microsoft.com/en-us/sql/relational-databases/xml/for-xml-sql-server?view=sql-server-ver15
[16:18:57] <bayaz> Title: FOR XML (SQL Server) - SQL Server 
[16:18:58] <DnzAtWrk3> I don't want to copy the database
[16:19:05] <PlanckWalk> So you can then just run that SQL file against your shiny new DB
[16:19:06] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[16:19:23] *** Quits: swp (~Thunderbi@143.176.249.0) (Remote host closed the connection)
[16:19:32] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Ping timeout: 250 seconds)
[16:19:39] *** Joins: monr0e (~monr0e@smtp.vixen.international)
[16:20:37] *** Joins: absc (~absc@81.31.144.28)
[16:20:37] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:20:47] <tomathy> what version of SQL are you using?
[16:21:06] <tomathy> i might have this problem very soon
[16:21:29] *** Joins: swp (~Thunderbi@143.176.249.0)
[16:22:02] *** Joins: DnzAtWrk3 (~DnzAtWrk@1408.pc.puv.fi)
[16:22:07] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:22:45] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[16:23:10] <darsie> TIL SQL has versions.
[16:23:28] <deniska> sql does have versions of a standard, but that's probably not what they meant :)
[16:23:58] <tomathy> i'm just asking because MSSQL as above shows has a simple export to xml option
[16:24:21] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[16:25:07] *** haise01 is now known as Azem
[16:26:34] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[16:27:02] <deniska> tomathy: most sql implementations come with utility to backup and restore a database, seems like it's sqldumper.exe for mssql
[16:27:47] <deniska> and a common backup format is a script with a series of statements, when rerun against an empty database, would recreate it
[16:27:59] <varaindemian> absentia: still here? :D
[16:28:27] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[16:28:47] <merijn> darsie: There are several different ISO specs and most mainstream databases deviate from, essentially all of them
[16:29:02] <merijn> darsie: So you got various dialects of "more or less" spec compliant implementations
[16:29:02] <darsie> thx
[16:30:02] <DnzAtWrk3> I don't just want to export it to xml
[16:30:07] <DnzAtWrk3> I want to export it into a custom xml format
[16:30:24] <DnzAtWrk3> https://wpcom-themes.svn.automattic.com/demo/theme-unit-test-data.xml
[16:30:25] <bayaz> Type: application/xml 
[16:30:25] <merijn> postgres (and, due to largely mimicing postgres, SQLite) are probably the "most" standard compliant in terms of SQL, but even those have non-standard extensions
[16:30:26] <DnzAtWrk3> this format
[16:30:45] <mobidrop> yeah you can probably create a query and build the XML format from there
[16:31:04] <merijn> tomathy: Your default is wrong. SQL is great and you should default to using that over NoSQL, tbh
[16:31:12] <deniska> DnzAtWrk3: that looks like rss
[16:31:23] <mobidrop> in postgres you can even do this: SELECT query_to_xml('SELECT * FROM users', true, false, '');
[16:31:28] <mobidrop> damn interesting
[16:31:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[16:31:49] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 256 seconds)
[16:32:24] <deniska> and RSS is a fairly standard format you can generate by many tools related to blogging and such
[16:32:27] <deniska> like wordpress :D
[16:32:44] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[16:32:48] <Trashlord> what about SentencePress?
[16:32:53] <Trashlord> LetterPress
[16:33:04] <deniska> I guess it has a bunch of wp: tags
[16:33:06] <DnzAtWrk> I want to export the data because a bunch of old sites have gotten compromised with some kind of malware
[16:33:15] <DnzAtWrk> and I need to migrate the actual data into new sites
[16:33:34] <DnzAtWrk> I hate wordpress so much
[16:34:15] <DnzAtWrk> and I hate php
[16:34:19] <DnzAtWrk> in equal measure
[16:34:26] <DnzAtWrk> god damn php security, nobody flying hell cares
[16:34:32] <DnzAtWrk> sandboxing websites, what is that?
[16:34:37] <DnzAtWrk> like for children?
[16:34:47] *** Joins: yelhamer (~yelhamer@41.98.30.118)
[16:35:11] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:35:13] *** Quits: DnzAtWrk3 (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[16:35:14] <DnzAtWrk> how about using suexec for literally every wordpress website
[16:35:16] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[16:35:18] *** Quits: yelhamer (~yelhamer@41.98.30.118) (Client Quit)
[16:36:21] <smallville7123> Trashlord: what about EncyclopediaPress ?
[16:37:19] <Trashlord> too long
[16:37:26] <smallville7123> DnzAtWrk: sandboxing websites is a way to prevent malware from comprimising the website host (depending on the sandbox security)
[16:37:32] <smallville7123> Trashlord: DictionaryPress
[16:37:52] <DnzAtWrk> it should damn well protect many websites from each other as well
[16:37:54] <smallville7123> Trashlord: RansomPress
[16:37:59] <DnzAtWrk> especially in an automated system like cpanel
[16:38:05] <smallville7123> DnzAtWrk: doesnt work that way lol
[16:38:06] <deniska> DePress
[16:38:11] *** Joins: ejjfunky (~ejjfunky@125.164.19.140)
[16:38:15] <DnzAtWrk> there is literally no reason it couldn't work that way
[16:38:30] <smallville7123> (well it can but it heavily depends on the website hosts)
[16:39:00] <rindolf> smallville7123: heh
[16:39:23] <smallville7123> DnzAtWrk: TmpPress
[16:39:43] <nickel8448> Regarding my nginx question earlier. I plan to have several grpc servers and clients in the backend. Can nginx help me with routing of those requests to the specific backends too?
[16:39:47] <smallville7123> a website that vanishes 5 seconds after you visit it :P
[16:40:06] <smallville7123> DnzAtWrk: also try ##networking
[16:40:13] <smallville7123> DnzAtWrk: or #networking
[16:40:14] <ejjfunky> Hi all. I just started learning typescript. Just want to ask, in the handbook here, it says "Don't limit yourself to TypeScript-specific resources". Isn't it the point of using TypeScript -> to do everything in TypeScript?
[16:40:34] <rindolf> SmallvillesCompendiumOfSesameStreetMuppetsPress ; smallville7123 
[16:40:49] <smallville7123> ejjfunky: they mean that things in another language could be applied to typescrypt
[16:41:10] <ejjfunky> ic
[16:41:19] <smallville7123> depending on the similarity between typescript and your reference language/source
[16:41:44] <smallville7123> eg you can port things from one language to typescript
[16:41:49] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:1498:75d8:5496:f62f) (Read error: Connection reset by peer)
[16:41:55] <smallville7123> attempt to port*
[16:42:11] <ejjfunky> ic. like if i say like using typescript with jquery?
[16:42:19] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:1498:75d8:5496:f62f)
[16:42:35] <deniska> ejjfunky: people writing about JS or web in general may write about something quite relevant to you
[16:42:43] <deniska> ejjfunky: like a new browser API or whatever
[16:42:51] <ejjfunky> oh ok
[16:43:02] <Naktibalda> ejjfunky: what kind of resources?
[16:43:03] <mobidrop> if I remember correctly typescript is compatible with js
[16:43:06] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:dd6e:d9a5:afdc:11dc)
[16:43:22] <deniska> typescript primary implementation is compiler targetting JS
[16:43:34] <deniska> and it has pretty much transparent JS interop
[16:43:35] <rindolf> ejjfunky: jquery has tsc bindings
[16:43:39] <ejjfunky> Naktibalda, not sure yet. just started learning
[16:44:03] <Naktibalda> was it about libraries or about books?
[16:44:35] <ejjfunky> it's at typescriptlang.org. https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-oop.html
[16:44:36] <bayaz> Title: Documentation - TypeScript for Java/C# Programmers 
[16:45:54] <Naktibalda> If you find yourself searching for something like “how to sort a list in TypeScript”, remember: TypeScript is JavaScript’s runtime with a compile-time type checker. The way you sort a list in TypeScript is the same way you do so in JavaScript. If you find a resource that uses TypeScript directly,
[16:45:54] <Naktibalda> ng you need TypeScript-specific answers for everyday questions about how to accomplish runtime tasks.
[16:45:54] <Naktibalda> that’s great too, but don’t limit yourself to thinki
[16:45:58] *** Quits: rsx (~dummy@ppp-188-174-147-214.dynamic.mnet-online.de) (Quit: rsx)
[16:45:59] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[16:46:16] *** Quits: chives (~chives@64.130.100.177) (Read error: Connection reset by peer)
[16:46:38] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[16:46:47] <ejjfunky> ic. makes sense. thanks, Naktibalda
[16:47:06] <Naktibalda> that's what you read, right?
[16:47:17] <ejjfunky> yea, still reading it.
[16:47:50] <ejjfunky> i know typescript was created by the same creator as c#. had been putting off learning it. so now i think it's time i learn it.
[16:47:53] <Naktibalda> ah, I found a different page using "Don't limit youself"
[16:48:41] <Naktibalda> the page you read said that you can use javascript examples in your typescript code.
[16:49:02] <ejjfunky> yea
[16:49:39] <Naktibalda> because typescript is javascript with types, basic syntax and functions are the same.
[16:50:19] <ejjfunky> Naktibalda, that's good news since i'm already been using javascript for years.
[16:52:39] <ejjfunky> it's like C# but not. lol C# but with javascript influence. lol i wonder how 'strict' this will be. lol
[16:54:30] <ejjfunky> like javascript, you don't have to define the return types.
[16:54:50] <deniska> I mean, isn't typescript made by pretty much the same people as C#? :P
[16:55:36] <ejjfunky> i don't know now. initially it was created by Anders Hejlsberg though.
[16:56:31] <ejjfunky> I wonder if he still is the lead architect though. wiki says it's designed by Microsoft.
[16:56:40] <mobidrop> I think you can plop js code into typescript and it works
[16:56:57] <mobidrop> so if you read something about js then you can use it for ts as well
[16:57:10] <deniska> well, imports work differently
[16:57:37] <ejjfunky> mobidrop, ic. cool.
[16:57:53] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 256 seconds)
[16:58:10] *** Joins: ethrl (~ethereal@user/doforlove33)
[16:58:36] <ejjfunky> heard from people here that it's easier to debug in TS. so that piqued my interest.
[16:59:26] *** Joins: operateur (~operateur@91.143.220.230)
[17:00:06] <joev> typed languages typically help find errors earlier in the development process.  That's no different for TS.
[17:00:52] <ejjfunky> Wow, in Wiki, Anders Hejlsberg's name isn't mentioned anymore. At least it should pay tribute to the one who started it all.
[17:02:41] <ejjfunky> at least Anders Hejlsberg github still says "Microsoft Technical Fellow and lead architect of TypeScript."
[17:02:57] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 240 seconds)
[17:03:53] <vukky> ejjfunky: I assume Wiki refers to Wikipedia? I see "Anders Hejlsberg, lead architect of C# and creator of Delphi and Turbo Pascal, has worked on the development of TypeScript." there
[17:04:00] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[17:04:20] <ejjfunky> vukky, yea. wikipedia. https://en.wikipedia.org/wiki/TypeScript
[17:04:20] <bayaz> Title: TypeScript - Wikipedia 
[17:06:17] *** Parts: rickame (~rickame@user/rickame) (part)
[17:06:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[17:06:44] *** Quits: SGautam (uid286066@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:08:35] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Quit: Stay safe!)
[17:09:56] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[17:10:18] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[17:10:40] *** Joins: biberu (~biberu@user/biberu)
[17:10:49] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: WeeChat 3.4)
[17:11:00] *** Joins: trevors (~trevors@user/trevors)
[17:11:41] *** Joins: qaph (~weechat@user/qaph)
[17:12:51] *** Joins: mrig (~mrig@user/mrig)
[17:12:52] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[17:14:19] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 256 seconds)
[17:14:21] *** qaph is now known as kron
[17:15:50] *** Quits: joev (~joev@user/joev) (Ping timeout: 250 seconds)
[17:15:54] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[17:16:46] *** Joins: joev (~joev@user/joev)
[17:23:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:27:43] *** Quits: kmh (~kmh@2a00:6020:5004:6800:460a:ef03:e89d:7820) (Quit: Leaving)
[17:28:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:29:33] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[17:30:53] *** Joins: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:33:09] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:dd6e:d9a5:afdc:11dc) (Quit: Textual IRC Client: www.textualapp.com)
[17:33:27] *** Quits: ethrl (~ethereal@user/doforlove33) (Remote host closed the connection)
[17:34:23] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[17:35:21] *** Joins: Pickchea (~private@user/pickchea)
[17:36:25] *** Joins: qaph (~weechat@user/qaph)
[17:36:55] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[17:38:47] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 250 seconds)
[17:38:49] *** qaph is now known as kron
[17:41:22] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[17:42:42] *** Joins: maxzor (~maxzor@2a01cb04054faa00ba55ec6489e8f679.ipv6.abo.wanadoo.fr)
[17:45:57] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[17:48:33] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[17:49:04] <user51> man, eliza feels more reliable than ai dungeon
[17:50:32] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[17:50:34] *** Joins: pulse (~pulse@user/pulse)
[17:51:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[17:53:13] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:55:48] *** Joins: kmh (~kmh@2a00:6020:5004:6800:9881:9737:5341:5446)
[18:00:49] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:05:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:08:21] *** Joins: node1 (~hex@user/node1)
[18:10:19] <beaky> nice they've finally finished rewriting all of c in rust it is now time to rewrite all the rest starting with c++ https://c2rust.com/
[18:10:20] <bayaz> Title: C2Rust Demonstration 
[18:10:39] *** Quits: greasybyte (~greasybyt@pool-98-116-192-195.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[18:11:05] <node1> What's this LLVM meant in compiler?
[18:14:21] <pulse> why is the rust version 3 times as ugly
[18:14:51] *** Quits: user51 (~user51@176.228.148.215) (Remote host closed the connection)
[18:15:33] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:15:44] <merijn> pulse: Because it's doing a fairly dumb translation from C to rust
[18:15:58] <pulse> that is just incredibly ugly
[18:18:37] <ProfSimm> Do we have a language where lines of code don't run in succession but in the way they refer to each other. 
[18:18:58] <ProfSimm> So "return b * b; var b = 10" just works
[18:19:54] <merijn> ProfSimm: Several
[18:20:45] <merijn> Well, also depending on how strict you interpret your question
[18:22:27] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[18:23:32] *** Quits: Kake (~Kake_Fisk@84.212.75.90) (Quit: Leaving)
[18:24:18] <merijn> Prolog and (to some extent) Haskell/OCaml spring to mind?
[18:24:58] <ski> hm .. more Mercury than Prolog, then, i'd say
[18:26:21] <pulse> mathematica :p
[18:26:34] <ski> (Prolog has left-to-right proving/execution of conjuncts, but Mercury does reorder (which it can do safely because of being purely declarative) them, according to the particular dataflow constraints of the mode in question (iow depending on which parameters are presently input, and which are to be output))
[18:26:45] *** Quits: node1 (~hex@user/node1) (Ping timeout: 256 seconds)
[18:27:23] <ski> .. i don't recall OCaml elaborating declarations in different orders, depending on the dataflow dependencies
[18:31:06] *** Joins: mspe (~user@tilde.team/user/mspe)
[18:31:44] <ProfSimm> merijn: I'm trying to combine this notion with imperative semantics in one language, and it's kinda confusing my brain
[18:32:04] <ProfSimm> merijn: out of order declarations imply either two-step parsing, or causal invariance.
[18:32:13] <ProfSimm> Sorry time invariance. 
[18:32:30] <ProfSimm> The moment you add mutable vars, it becomes a mess, you need to spell out the causation order
[18:32:32] <ProfSimm> Of mutations
[18:32:48] <ProfSimm> And reading those mutations.
[18:33:04] <ProfSimm> I guess you need both linear (serialized) code and non-serial parts.
[18:33:11] <beaky> yes you can do it like software transactional memory where they can have concurrent updates but you have to commit them
[18:33:58] <ProfSimm> I like the idea of transactions, but IO side-effects typically can't participate, so the notion becomes quite restricted
[18:34:23] <beaky> yes restricted is good you can have different effects at  once
[18:34:34] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[18:34:36] <beaky> like separate reads and writes effects
[18:35:45] <ProfSimm> Let's say I open a transaction and read 100 bytes from a stream I've opened. Then rollback, and open a new transaction. I can't read back the same 100 bytes. Well I can maybe emulate it in this case with cache. But writes are tougher. Like opening a tx and changing 100 bytes of a file.
[18:36:20] <merijn> ProfSimm: You are rediscovering why purity was crucial for Haskell to get laziness to work without making people insane ;)
[18:37:00] <merijn> ProfSimm: The IO type in haskell "solves" a lot of these issues by making "sequencing of side-effects" explicitly separate from "order of evaluation"
[18:37:06] <ProfSimm> Well I'm rediscovering it because I know why it exists, and I have this separation in my code (pure impure) but I want a more natural way of working with both
[18:37:37] <ProfSimm> Maybe every function has pure andimpure part I don't know
[18:37:58] <ProfSimm> I already encode types in pure code, so it'll be like my type system is all the pure code as is
[18:38:10] <ProfSimm> Hmm that's not bad actually
[18:38:49] <ProfSimm> every function is a list of instructions (impure, serial), and a map of associative pure expressions referring to each other 
[18:38:50] *** Joins: user51 (~user51@176.228.148.215)
[18:39:12] <ProfSimm> A pure function's list of instructions is a single reference to the second map
[18:39:17] <ProfSimm> Without further instructions
[18:39:22] <ProfSimm> And that gets returned
[18:40:08] <ProfSimm> So functions become a list + map
[18:40:15] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[18:40:28] <ProfSimm> Fits well with ordered/named params too, same data structure
[18:42:32] <FloridaMan> Hmmm I just realized I forgot about Intelo and his SQL query yesterday. Whoops.
[18:42:33] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:43:06] <FloridaMan> Are they a regular here?
[18:43:18] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[18:44:18] <merijn> ProfSimm: How familiar are you with Haskell's approach to it?
[18:44:25] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 256 seconds)
[18:45:08] <merijn> ProfSimm: In reality there's actually even multiple independent forms of mutability around and a fair amount of generic code that can work with all of them
[18:45:31] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[18:46:01] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[18:46:17] <ProfSimm> merijn: I'm superficially familiar with it. I know the multiple approaches too, as monads, streams and so on
[18:46:23] *** Quits: xff0x (~xff0x@2001:1a81:53e8:2500:31e6:f5f6:6492:6bc2) (Ping timeout: 250 seconds)
[18:46:30] <ProfSimm> merijn: I want a single approach that's pragmatic but simple and clear
[18:47:00] <ProfSimm> merijn: I don't need my final language to make claims it's pure. I'm not interested in that. But I want the separation to be clear and pragmatic. And useful
[18:47:08] *** Joins: xff0x (~xff0x@2001:1a81:53e8:2500:a7da:afdc:1a91:3063)
[18:47:28] *** Joins: duuude (~user@user/duuude)
[18:47:37] <ProfSimm> merijn: in a way most languages are a mix of pure and impure like that. Type systems and macros are pure, the code they build and define is not
[18:47:42] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:47:52] <merijn> ProfSimm: The Monad interface actually covers a whole bunch of independent forms of mutability, though. There's IO (essentially unlimited), STM (only allows transactional mutability), ST (only allows single-threaded mutability), which is kinda why that interface is so popular in Haskell. It's very general
[18:48:33] <tomathy> google should be arrested for destroying fitbit
[18:49:26] <ProfSimm> merijn: technically it's a DSL isn't it. We probably don't need it to be a monad.
[18:49:37] <ProfSimm> Set of DSLs
[18:51:54] <tomathy> they have just done a transfer of technoogy to google fit and abandoned all fitbit products
[18:52:07] <tomathy> basically
[18:52:25] <tomathy> well mine doesnt work
[18:53:47] <ProfSimm> tomathy: no one is forced to sell out. Blame fitbit
[18:54:08] <tomathy> everyone has a price
[18:54:12] <pulse> fitbit, that sounds like a silicon valley company
[18:54:44] <tomathy> but isnt it against the law to buy a company just to desotry it
[18:55:08] <ProfSimm> tomathy: no, there's no law mandating companies exist forever
[18:55:13] <ProfSimm> So destroying them is undefined
[18:55:26] <ProfSimm> If fitbit broke contract with you, you can sue them
[18:55:32] <tomathy> so if i keep all a sheep farmers sheep that's undefined
[18:55:45] <ProfSimm> PArdon?
[18:55:51] <tomathy> if i kill all sheep
[18:57:00] <tomathy> hash the company before sale, if its hash ever stops changing, it's abandoned
[18:57:07] <merijn> I do think we should have a law about "smart" product lifecycles and deprecation, tbh
[18:57:38] <ProfSimm> merijn: we should be careful with laws.
[18:57:41] <merijn> So far the only company that seems to have put any thought into it is the Philips Hue division
[18:58:19] <ProfSimm> merijn: see Apple for example, why is it supporting iPhones longer and longer all the time. iPhone 6S from 2015 still supports the latest iOS
[18:58:21] <merijn> ProfSimm: I mean, Sonos was selling several thousand euro devices built into houses and then with no warning blocked them from cloud services telling customers "tough luck, upgrade!"...that's...not ideal
[18:58:49] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[18:58:54] <merijn> ProfSimm: I'm not sayin we should have a law controlling lifecycles. But at least a law that requires committing to and advertising what the lifecycle/support actually is
[18:59:10] <merijn> At the moment people sell smart devices that can be turned into rocks at a moment's notice
[18:59:17] <ProfSimm> merijn: no it's not ideal but if you put in a law, without thinking through how to enforce is consistently, and what the repercussions are, now it becomes even less ideal
[18:59:43] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[18:59:48] <ProfSimm> merijn: the problem with companies is they'
[18:59:52] <ski> ProfSimm : "technically it's a DSL isn't it. We probably don't need it to be a monad." -- a monad is a way to specify a notion of "sequencing" (which could e.g. be short-circuiting, or be loop nesting, or callback-registering, or state-passing, &c.)
[18:59:52] <ProfSimm> are empty shells
[19:00:18] <ski> (and yea, what monads effect is a separation between pure and impure, so that they can both coexist)
[19:00:40] *** Joins: duuude (~user@user/duuude)
[19:00:47] <ProfSimm> merijn: let's say I make a company, advertise 20 year lifecycle on my tamagochis. Someone comes, they want my IP. I tell them "don't buy the company, I'll sell you the IP and then we pay investors and go bankrupt" How would you stop that
[19:01:33] <merijn> ProfSimm: Prosecute the board/CEO
[19:01:48] <ProfSimm> merijn: change the CEO before the deal
[19:02:12] <merijn> ProfSimm: You prosecute whoever was in charge when the paperwork is signed
[19:02:39] <ProfSimm> merijn: yes, so I find a loser to take the spot and bribe him into it
[19:02:48] <ProfSimm> I walk out and start a new company and do it again
[19:03:04] <tomathy> why use tamogochis
[19:03:15] <merijn> Ah, right, there is no absolutely perfect defense, so we should just not do anything
[19:03:17] <ProfSimm> tomathy: because they don't poop on my carpet
[19:03:27] <tomathy> as an example i mean
[19:03:32] *** Joins: Pickchea (~private@user/pickchea)
[19:03:39] <ProfSimm> merijn: maybe there should be no such thing as companies. It's all people.
[19:03:59] <ProfSimm> merijn: you start something in your name and you can't quit or sell your way out of it
[19:04:42] <ProfSimm> merijn: limited liability is basically a scam, isn't it
[19:04:48] <tomathy> i bought a fitbit and it tells me im at 200 hr when im playing chess this isnt fair just cause google hates everyone
[19:04:57] <tomathy> wahh waaaah
[19:05:04] <ProfSimm> tomathy: sorry for your fitbit. 
[19:05:25] <tomathy> he cant hear you he's being punished
[19:05:31] <merijn> ProfSimm: Limited liability already does not apply when committing crimes...
[19:05:32] <ProfSimm> tomathy: this is why I buy shit from companies who can't afford this crap. 
[19:05:46] <merijn> At least not in sane parts of the world >.>
[19:05:51] <ProfSimm> merijn: I don't think dropping support on a good is such a crime
[19:06:05] <merijn> ProfSimm: Right now it isn't
[19:06:06] <ProfSimm> merijn: not sure it's wise to classify it as such
[19:06:10] <ProfSimm> Well
[19:06:40] <merijn> ProfSimm: Well, what do you propose as method of making sure smart devices you buy now aren't useless in two months? :)
[19:06:51] <ProfSimm> ski: isn't a list also a notion of sequencing or I'm missing something
[19:06:56] <merijn> ProfSimm: And I'm not even saying you should support them indefinitely
[19:07:05] <merijn> ProfSimm: I'm saying "dropping support" should not make them stop functioning
[19:07:28] <tomathy> every company should be forced to supply minimal functional software to any hardware they sell and keep it updated indefinitely, easy
[19:07:28] <ProfSimm> merijn: I propose what I said. A company is the people who made it. You can join, you can't quit.
[19:07:39] <merijn> ProfSimm: Philips Hue dropped support for my original lights and hub and 95% of all features work fine, only cloud integration has stopped
[19:07:56] <merijn> Sonos dropped support for their devices and they became unusable
[19:08:07] <norias> What about insurance?
[19:08:18] <merijn> Clearly one of these two is preferable and we should force companies to think about this shit
[19:08:21] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[19:08:41] <ProfSimm> merijn: keep in mind that continued support implies paying for it. It's obvious you can't expect too long of a support on someone you paid for once and then the deal is done
[19:08:45] <norias> i feel like there's a reasonable financial model in here
[19:08:59] <norias> like support insurance
[19:09:14] <merijn> ProfSimm: You should design your devices such that turning off the servers (i.e. no longer paying for them) does not render those devices useless
[19:09:26] <ProfSimm> merijn: this is why Apple supports phones for so long. Because they're moving to services, they force themselves to have a business model that doesn't require people throwing out their phones every year
[19:09:43] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[19:09:45] <ProfSimm> merijn: sometimes you can do that, sometimes you can't
[19:09:55] <norias> so you buy thing A at X dollars plus Y per month, or thing B at X dollars plus Y+z per month, where the z goes to insurance
[19:10:04] <ski> ProfSimm : a list embodies sequencing, sure. (a list is a free monoid, and monoids express sequencing (and monads are monoids, hence ..)). but monads (as opposed to e.g. idioms / applicative functors) allow dynamic data-dependencies, so that later actions (what to do later, which action to perform, which branch to take) may depend on intermediate results of earlier actions
[19:10:10] <norias> if support dries up, the insurance policy pays someone else to support it
[19:10:33] <tomathy> well i informed fitbit
[19:10:47] <ProfSimm> ski: interpreters interpreting commands in a list allow the same no
[19:11:15] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[19:11:25] <tomathy> ProfSimm: do you like Apple?
[19:11:38] <tomathy> the laptop os specifically
[19:11:56] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[19:12:02] <tomathy> it reminds me of a shiney hooker after her heroin dose
[19:12:23] <ProfSimm> tomathy: yes. I'm typing this on Windows right now on a desktop, my laptop is an Apple tho
[19:12:29] <ski> ProfSimm : well, to some extent, but how do you express the branching there (iow, plain lists doesn't allow you to go eDSL, mixing the structuring of the DSL with the general constructs, like branching, of the embedding language)
[19:12:45] <ProfSimm> tomathy: good to have a mix for a dev
[19:12:52] <tomathy> if windows markets for beauty above glamour they can defeat apple
[19:13:15] <ProfSimm> ski: lists of ists
[19:13:17] <tomathy> macos is a polished turd
[19:13:26] <ProfSimm> ski: how do monads express it
[19:13:31] * tomathy knows nothing
[19:14:16] <ski> ProfSimm : by having the sequencing operation ("bind") take a callback function (in the embedding language) as an argument. this function may then inspect the intermediate result that it receives, and branch on that
[19:14:22] <ProfSimm> ski: also associative labels be it vars, or goto labels or whatever
[19:14:46] <ski> yea, but then it's no longer a simple "list = sequencing" formula
[19:14:57] <ProfSimm> ski: the intermediate result is then basically the state. So it's just mutable state
[19:15:04] <ski> (since you rewind at times, possibly also do forward jumps)
[19:15:31] <karstensrage> what are you guys using for deployment, im sick of upgrading OS's and packages all the time
[19:15:36] <ski> yes, but the question is whether you can incorporate embedding-language inspection of that state, into the "instruction sequence"
[19:15:55] <ski> (sometimes you do not want this, mind .. but it's an important distinction)
[19:15:58] <ProfSimm> ski: inspection in what sense
[19:16:17] <pulse> karstensrage, i just stare at the screen angrily until the computer does what i want
[19:16:32] <ski> take part of the state, pass it to an arbitrary embedding-language function, then branch on the result to decide what to do next
[19:16:40] <ski> (e.g.)
[19:17:29] <ProfSimm> ski: I think this is too abstract for me to differentiate it from a normal if/then/else
[19:19:06] <ski> (monads express "dynamic sequencing". one example would be a parser that first parses an integer, and then parses that many items. many parsing frameworks can't express this .. and in exchange, they get better efficiency, since they're able to statically analyze the whole of the parser, ahead of time. there's also examples of build systems where some build rule dependences may be computed as a result of 
[19:19:12] <ski> executing previous rules)
[19:19:23] <ski> `if'/`switch' is fine
[19:19:39] <karstensrage> pulse, ive tried that, doesnt work for me
[19:19:48] <pulse> keep trying
[19:20:32] <ProfSimm> ski: can you give an example of monads doing something an AST interpreter can't (easily)
[19:21:36] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[19:21:52] <ski> AST interpreters don't give you eDSLs
[19:22:13] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[19:22:20] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Read error: Connection reset by peer)
[19:22:21] <ski> the DSL and the hosting/embedding language are kept separate, not intermixed
[19:23:27] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[19:23:38] <ski> (this isn't really that much about monads, more about DSLs vs. eDSLs)
[19:23:40] <ProfSimm> ski: well they do if you provide context
[19:24:09] *** Quits: adder (~adder@user/adder) (Read error: Connection reset by peer)
[19:24:23] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[19:24:54] <ProfSimm> ski: what about if you need one eDSL in another eDSL in another eDSL does that still look legible or
[19:25:03] <ProfSimm> That's one problem i have with my current approach
[19:25:51] *** Joins: adder (~adder@user/adder)
[19:26:25] <ski> hm, do you mean intermixing different eDSLs ? or do you mean actually defining one eDSL inside another one ?
[19:28:15] <duuude> can someone controlling your dns hijack tls by simply getting a letsencrypt cert?
[19:28:40] <ProfSimm> ski: making them work together is the general notion. What I have is every expression is parsed through an interpreter. There's a default one. But you can replace it for part of the AST. And you can insert root interpret expressions in the AST with {} like in a template.
[19:29:08] <ProfSimm> skipper: this means it's easy to mix eDSL with the root interpreter, but mixing more becomes a verbose chore
[19:29:34] <ProfSimm> ski: I guess the {} syntax is basically my take on 'bind closures to the monad'
[19:29:57] <ski> ("parsed" or "passed" ?)
[19:30:30] <ProfSimm> well I mean interpreted actually I guess
[19:31:21] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[19:31:32] <ski> hm, this reminds me of attempts to make macros for different syntactic classes (some possibly user-defined), and how one might then want to have "call-by-value" macros (where macro operands may sometimes expand before the outer macro invocation expands), for orthogonality (avoiding horrible "code-walker" macros)
[19:31:44] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:32:04] <ski> (i suppose one could view what an interpreter does to the AST as a kind of parsing)
[19:32:25] <ski> hm, how do those "root interpret expressions" work ?
[19:32:58] <ProfSimm> ski: one think I want to do is allow {} or something like it to read implied context, so you open the bracket and you automatically type in an eDSL suitable for the context
[19:33:11] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[19:33:17] <ProfSimm> ski: without actually specifying it explicitly. But you can also build them explicitly as separate expressions
[19:33:38] <ProfSimm> ski: I've seen something like that in LISP DSLs but I don't know if it's what it looks like
[19:34:26] *** Joins: leonarth (~leonarth@user/leonarth)
[19:36:00] <ProfSimm> skipper: well let's say you type "foo bar baz * 2" then the eDSL gets [:foo, :bar, [:mul, :baz, 2]]  but if you type "foo bar {baz * 2}" and you have a variable baz set to 10, then the eDSL interpreter gets [:foo, :bar, 20]
[19:36:16] <ProfSimm> skipper: so it's a block of code evaluated on demand when the interpreter tries to read it
[19:36:41] * ski idly glances at skipper
[19:36:47] <ProfSimm> oops
[19:37:14] <ProfSimm> ski: sort of like a template engine, but it's not HTML text with inserted expressions, but LISP-ish AST with inserted expressions
[19:37:23] <ski> hmm .. so that sounds like staged / meta- programming, now
[19:38:19] *** Joins: password (~password8@user/password2)
[19:38:20] <ProfSimm> Sorts
[19:39:23] * ski . o O ( "A Taxonomy of meta-programming systems" by Tim Sheard at <https://web.cecs.pdx.edu/~sheard/staged.html> )
[19:40:09] <ski> ProfSimm : hm, so where does `baz' come from, how/where is it bound ?
[19:40:40] *** Joins: jj_attaq (~jj_attaq@95.180.91.76)
[19:41:12] <ski> and where do you type these eDSL expressions ? in some contexts, in your language ? parse them from separate files/streams ? write them inside strings or something ?
[19:41:26] *** Joins: tofran (~tofran@bl15-47-228.dsl.telepac.pt)
[19:41:28] <ProfSimm> skipper: well that's part of the root interpreter semantics
[19:41:30] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:41:47] *** Joins: mickey8 (~user@user/mickey)
[19:41:50] <ProfSimm> skipper: it has a symbol table, scopes etc
[19:42:27] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 256 seconds)
[19:42:38] <ProfSimm> ski: *
[19:42:40] <ProfSimm> damn it
[19:42:42] <ProfSimm> :D
[19:42:51] <ProfSimm> ski: sorry gotta go but thanks for taking interest in my bs
[19:43:03] <ProfSimm> ski: I keep feeling there's a better way
[19:43:14] <ProfSimm> too many things, can't fit all in head :P
[19:43:28] *** Joins: shamasu (~shamasu@2600:1700:697d:20::3f)
[19:44:13] *** Quits: zwr (~zwr@2804:d45:b966:fb00:35ea:d66c:6406:325c) (Ping timeout: 250 seconds)
[19:45:14] *** Joins: zwr (~zwr@2804:d45:b966:fb00:12d7:13aa:3127:57bc)
[19:45:59] *** Quits: ejjfunky (~ejjfunky@125.164.19.140) (Quit: Leaving)
[19:46:38] <ski> ProfSimm : .. i'm still wondering if you need to talk about interpreters at all, if you're thinking on the level of specifying a language
[19:46:51] <ski> (but perhaps you're using that word because it's a term you know)
[19:47:10] <ski> ProfSimm : np :)
[19:47:14] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:51:29] <Sqaure> So wierd. I do "ln -s <../Makefile> ./Makefile". Then i invoke make but all paths seems to be relative to the original makefile 
[19:52:57] *** Joins: ejjfunky (~ejjfunky2@125.164.16.196)
[19:53:07] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[19:53:58] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:55:06] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:55:25] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[19:55:32] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[19:58:07] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[19:58:28] *** Joins: james (~james@2607:b400:24:0:3bd7:69cf:d92b:a097)
[19:58:54] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[19:58:56] <ski> Sqaure : use full path ?
[19:59:31] <ski> hm, or maybe i misunderstood the issue
[20:00:09] *** Quits: baracurda (~baracurda@gateway/tor-sasl/parserblabla) (Ping timeout: 276 seconds)
[20:02:17] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[20:02:19] *** Quits: james (~james@2607:b400:24:0:3bd7:69cf:d92b:a097) (Quit: james)
[20:02:45] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[20:02:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:02:57] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[20:03:30] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[20:03:37] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[20:05:57] *** Joins: Atque (~Atque@user/atque)
[20:06:16] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Remote host closed the connection)
[20:06:39] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[20:08:20] <Sqaure> I soft link a Makefile in parent directory into current. Issue make. All paths specified in makefile are relative to parent directory.
[20:08:29] *** Quits: tangyQED (~tangy@user/tangy) (Remote host closed the connection)
[20:08:43] <adder> Sqaure, I think you want `-r`
[20:08:54] <adder> (+ -s)
[20:09:34] <Sqaure> ohok
[20:11:48] *** Quits: ejjfunky (~ejjfunky2@125.164.16.196) (Remote host closed the connection)
[20:11:49] *** Joins: sharky2 (~bc8147f2@83.167.180.121)
[20:12:43] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:14:01] <sharky2> hi. I am writing a web scraper and I wanted to use google's I'm feeling lucky to get to the page of interest, since website I'm scraping has no searching capability. but I'm having trouble using google's I'm feeling lucky page, because it requires cookies. I could use selenium, but if possible I'd rather not go that route. is there a way to use google search without cookies, make google's I'm feeling lucky directly redirect to the first hit, or is t
[20:14:09] *** Joins: duuude (~user@user/duuude)
[20:14:43] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[20:14:45] *** Quits: humanface (~humanface@20014C4E1C4D4700A82CE91D91A2788C.dsl.pool.telekom.hu) (Ping timeout: 256 seconds)
[20:15:03] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[20:15:32] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[20:17:39] *** Quits: Trashlord (~trash@user/trashlord) (Read error: Connection reset by peer)
[20:19:17] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[20:19:17] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[20:19:17] *** Joins: resamvi (~resamvi@user/resamvi)
[20:19:51] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[20:19:54] *** Joins: acidcrawl (~acidcrawl@184-155-39-91.cpe.sparklight.net)
[20:20:06] <DnzAtWrk3> you won't have much luck scraping google
[20:20:18] <DnzAtWrk3> it is very good at detecting bots
[20:20:34] <DnzAtWrk3> When I scraped it before I had to have a manual confirmation now and then with captchas
[20:21:05] <DnzAtWrk3> because the world exists for google to scrape, not the other way around
[20:21:17] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 240 seconds)
[20:21:26] <sharky2> how about 
[20:21:40] *** Joins: Trashlord (~trash@user/trashlord)
[20:21:43] <sharky2> how about https://duckduckgo.com/? 
[20:21:43] <bayaz> Title: DuckDuckGo ? Privacy, simplified. 
[20:23:01] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[20:23:12] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.4)
[20:23:35] <GeDaMo> You might also look at DDG lite which has no JS
[20:23:52] <DnzAtWrk3> otherwise you're forced to use something like selenium
[20:23:56] <DnzAtWrk3> which is like, infinitely slower
[20:24:20] <DnzAtWrk3> I assume hip people use chromium today
[20:24:34] <sharky2> with google or duckduckgo?
[20:24:56] <sharky2> if google requires captcha then I'm out of luck
[20:25:11] *** Quits: theglass (~glass@user/theglass) (Remote host closed the connection)
[20:25:20] <DnzAtWrk3> buy a cheap human captcha farm to solve it for you
[20:25:39] <DnzAtWrk3> I am joking
[20:25:47] <DnzAtWrk3> do not buy slave labour, that's uncool
[20:25:50] <acidcrawl> haha
[20:25:50] <sharky2> that actually exists, but what I'm doing doesn't warrant that
[20:26:36] <GeDaMo> https://www.theguardian.com/technology/2018/jul/06/artificial-intelligence-ai-humans-bots-tech-companies
[20:26:37] <bayaz> Title: The rise of 'pseudo-AI': how tech firms quietly use humans to do bots' work 
[20:27:43] <DnzAtWrk3> shit
[20:27:51] <DnzAtWrk3> I clicked "yes I'm happy" on a consent form
[20:27:58] <DnzAtWrk3> obviously that was not the right choice
[20:28:15] <DnzAtWrk3> tricky mind games
[20:28:17] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 240 seconds)
[20:28:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[20:29:15] <DnzAtWrk3> we need to generate AIs to generate puzzles which only humans can solve
[20:29:17] <DnzAtWrk3> lol
[20:29:24] <DnzAtWrk3> I mean, that's not even far fetched is it now
[20:29:36] <acidcrawl> You could get around it with this: https://arxiv.org/pdf/2006.08296.pdf
[20:29:37] <bayaz> Type: application/pdf Size: 7.8 MB 
[20:29:43] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[20:29:45] <DnzAtWrk3> a large pdf files?
[20:29:53] <DnzAtWrk3> Yes I could see how the robot uprising would be hesitant in that
[20:30:12] <acidcrawl> deep learning, captcha solver whitepaper 
[20:30:15] *** Joins: operateur (~operateur@109.92.177.112)
[20:30:23] <DnzAtWrk3> but yeah, I don't even see why machines would have issues with captchas in the first place
[20:30:28] <DnzAtWrk3> pattern find is THE strength in AI 
[20:30:32] <DnzAtWrk3> pattern finding*
[20:30:48] <DnzAtWrk3> they're way better at finding patterns than humans
[20:30:51] <DnzAtWrk3> just look at this
[20:31:07] <DnzAtWrk3> https://www.youtube.com/watch?v=wg3upHE8qJw
[20:31:08] <bayaz> Title: Can an AI Learn Lip Reading? 
[20:31:33] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[20:31:47] <DnzAtWrk3> soon enough AIs will be good enough to record sound from the vibrations in movies
[20:31:48] <koollman> DnzAtWrk3: captchas predate AI with 'not awful' pattern finding
[20:32:06] <sharky2> I think I'll go the dumb but sure to work route, and hardcode all the 100 links I'm interested in
[20:32:12] <koollman> you have to remember that this is pretty recent
[20:32:37] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[20:33:14] <koollman> DnzAtWrk3: like, litterally, one of the way IA got better at it was with captcha projects designed to use humans to improve AI models :)
[20:33:25] <koollman> *AI
[20:34:22] <koollman> because it is a human strength, and it took quite a bit of research and training time to get some models that were better than random guessing :)
[20:34:39] <DnzAtWrk3> wonder if they could have used self-reinforcement learning
[20:34:51] *** Joins: emf (~emf@2620:10d:c090:400::5:3e0a)
[20:34:55] *** Quits: operateur (~operateur@109.92.177.112) (Ping timeout: 256 seconds)
[20:35:04] <koollman> still need a tagged dataset
[20:35:05] <DnzAtWrk3> like that chess AI competing against itself
[20:35:22] <koollman> chess is trivial in comparison, there are rules and fixed positions
[20:35:24] <DnzAtWrk3> they could have made a seperate AI to generate the garbage text
[20:35:34] <DnzAtWrk3> well
[20:35:35] <DnzAtWrk3> hmm
[20:35:47] <DnzAtWrk3> not sure what the goals would be tho
[20:35:52] <koollman> look at the creation of recaptcha, and the early publications on human computation
[20:35:59] <DnzAtWrk3> just make a good algo for making more and more random text 
[20:36:01] <DnzAtWrk3> starting with clean text
[20:36:03] <DnzAtWrk3> and making it worse
[20:36:18] <DnzAtWrk3> and have an AI train on that
[20:36:29] <acidcrawl> yeah, and image recognition through deep learning has pretty much been solved.  The accuracy is soooo increadibly high now days.
[20:36:33] <koollman> DnzAtWrk3: this has been done. Which is why now many captcha ask to find objects in pictures :)
[20:36:58] <DnzAtWrk3> I thought that was because they wanted training data for their self-driving algos
[20:37:02] <koollman> (because text with squiggles is basically solved)
[20:37:14] <DnzAtWrk3> identify the bicycles in this image
[20:37:20] <DnzAtWrk3> identify the dongs in this image
[20:37:25] <acidcrawl> hahah
[20:37:25] <koollman> DnzAtWrk3: no. Before that, recaptcha worked on ... text. advanced OCR, basically
[20:37:35] <koollman> but now that works well enough, so other projects are used
[20:37:48] <DnzAtWrk3> you say that, but getting good OCR going is still a chore
[20:37:53] <acidcrawl> I haven't gotten a find all the dicks captcha, that would be awesome.
[20:38:00] <DnzAtWrk3> have you tried darknet?
[20:38:17] <DnzAtWrk3> I set it up on a tech fair for work a few months back
[20:38:17] <koollman> DnzAtWrk3: well, for regular humans, yes, but google has pretty good ocr, and some commercial OCR are incredibly good too
[20:38:29] <DnzAtWrk3> it's able to identify quite a lot of classes of objects in real time
[20:38:35] <DnzAtWrk3> like, some 1000 types of objects or something
[20:38:45] <DnzAtWrk3> and not only detect them but show you where they are
[20:39:03] <acidcrawl> oh yeah, a well trained neural network can detect objects quite easily.
[20:39:19] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:39:38] <DnzAtWrk3> this is something called
[20:39:41] <DnzAtWrk3> ... just in time?
[20:39:43] <DnzAtWrk3> umm
[20:39:58] <DnzAtWrk3> YOLO
[20:40:03] <DnzAtWrk3> you only look once
[20:40:08] <DnzAtWrk3> https://towardsdatascience.com/yolo-you-only-look-once-real-time-object-detection-explained-492dc9230006
[20:40:10] <bayaz> Title: YOLO ? You only look once, real time object detection explained 
[20:40:22] <DnzAtWrk3> https://pjreddie.com/darknet/yolo/
[20:40:22] <bayaz> Title: YOLO: Real-Time Object Detection 
[20:40:36] <DnzAtWrk3> Though I ask you
[20:40:39] <DnzAtWrk3> why the f darknet?
[20:40:49] <DnzAtWrk3> good job, scaring away potential researchers
[20:41:01] <DnzAtWrk3> hold on, going to the dark web to download darknet
[20:41:14] *** Parts: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com) ()
[20:41:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:42:02] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: REALITY.SYS Corrupted: Re-boot universe? (Y/N/Q))
[20:42:07] *** Joins: mickey8 (~user@user/mickey)
[20:42:24] <user51> speaking of captcha systems, anyone know how they work?
[20:42:32] <pulse> yes, they don't
[20:42:53] <pulse> if they worked i wouldn't have spam accounts on my forum :p
[20:43:37] <DnzAtWrk3> I assume they work using a series of different methods
[20:43:39] <acidcrawl> haha
[20:43:45] <DnzAtWrk3> probably start with randomly picking letters from fonts
[20:43:46] <DnzAtWrk3> adding noise
[20:43:50] <DnzAtWrk3> adding affine transforms
[20:43:54] <DnzAtWrk3> maybe even perspective transforms
[20:44:01] <DnzAtWrk3> warping the image using some kind of twisty filter
[20:44:08] <DnzAtWrk3> changing the colors at random
[20:44:11] <DnzAtWrk3> urinating on the text
[20:44:30] *** Quits: jj_attaq (~jj_attaq@95.180.91.76) (Read error: Connection reset by peer)
[20:44:41] <koollman> user51: there are many different ones, so many many answers
[20:45:22] <DnzAtWrk3> how about we make a retinal scanner which can detect emotions
[20:45:26] <DnzAtWrk3> and have humans watch a movie
[20:45:31] <DnzAtWrk3> to see if they're a robot
[20:46:04] <koollman> only if harrison ford is watching me watch the movie
[20:46:37] <pulse> recaptcha3 works not by making the user guess shit (because that doesnt' work at all, and bots get around anything easily), but by checking stuff like the way you move mouse, typing frequency and speed, scrolling habits etc
[20:46:42] <pulse> but even that doesnt' work
[20:46:50] <pulse> better than recaptcha2 and 1 though
[20:47:07] *** Joins: node1 (~hex@user/node1)
[20:47:39] <DnzAtWrk3> why don't we have a competition about making a new captcha system
[20:47:49] <DnzAtWrk3> where the price is like 1 million or something
[20:48:08] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[20:48:14] <GeDaMo> Why would I /want/ a captcha system?
[20:48:23] <DnzAtWrk3> because bots suck
[20:48:27] <pulse> GeDaMo, to prevent spambots on your website
[20:48:46] <GeDaMo> Do captchas actually prevent bots?
[20:48:55] <pulse> no, they reduce the numbers at best
[20:48:58] <pulse> of spambots
[20:49:09] <pulse> what i found works best is a security question
[20:49:43] <pulse> probably because the question is unique and if it's not easily googlable a bot can't automatically get past it
[20:50:03] <pulse> of course you can just hardcode it in the bot
[20:50:06] <jelly> the answer is orange
[20:50:23] <DnzAtWrk3> if you have a small site, the best system is to just make some silly form with a question or something
[20:50:28] <DnzAtWrk3> like say: Type "beer"
[20:50:29] <jelly> bots can't deal with orange
[20:50:39] <pulse> DnzAtWrk3, no, bots get past that
[20:50:43] <node1> Just wanted to know that if i have to draw state transition diagram for any function in C. Are they in nondeterministic state?
[20:50:45] <pulse> you need a unique question
[20:50:53] <pulse> and something not easily googlable
[20:50:58] <DnzAtWrk3> you name the input form "age"
[20:50:59] <pulse> "what color is a banana" -> bots get past it easily
[20:51:17] <pulse> "what color is water" bots may not get past it easily
[20:51:18] <GeDaMo> You should ask a much more vague question
[20:51:28] <GeDaMo> "Name a beverage" or something
[20:51:32] <pulse> yeah, the problem then becomes that not all humans can't answer it
[20:51:37] <pulse> can answer it*
[20:51:45] <DnzAtWrk3> just use a javascript input form
[20:51:52] <DnzAtWrk3> which isn't even a real input
[20:51:55] <DnzAtWrk3> see how well the bots get past that
[20:51:55] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[20:51:56] <DnzAtWrk3> hahahaha
[20:52:04] <pulse> hah
[20:52:10] <pulse> lichess has a chess captcha
[20:52:13] <pulse> that probably works
[20:52:17] <GeDaMo> I believe some sites have an invisible input which only the bots can see
[20:52:21] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[20:52:23] <DnzAtWrk3> I also argued before that we could develop a system which wouldn't even allow the screen to capture the question
[20:52:24] <pulse> yeah, like a honeypot input
[20:52:27] <pulse> that probably works too
[20:52:36] <DnzAtWrk3> by basically rendering the question inside a js canvas, 1 row at a time
[20:52:39] <pulse> but again it's a bandaid solution at best
[20:52:47] <DnzAtWrk3> making the image only visible if you look at it in fast motion
[20:53:09] <pulse> a towers of hanoi minigame captcha might work best :p
[20:53:22] <pulse> unfortunately it would annoy users
[20:53:35] <pulse> doom e1m1 captcha
[20:54:04] <node1> GeDaMo, Could we draw a state transition diagram for printf function?
[20:54:08] <DnzAtWrk3> hah, I know
[20:54:11] <DnzAtWrk3> maybe a god damn platformer game
[20:54:17] <DnzAtWrk3> which you have to jump up and find all the letters
[20:54:28] <DnzAtWrk3> the image is sent from the server
[20:54:36] <DnzAtWrk3> see how well the bastard bots complete that
[20:54:36] <pulse> the problem is, as soon as any captcha system sees worldwide adoption, bots would be written specifically for it
[20:54:45] <pulse> so i have no idea how google captcha remains relevant
[20:54:47] *** Joins: Akuli (~Akuli@82-203-167-197.bb.dnainternet.fi)
[20:54:49] <DnzAtWrk3> I mean really, try to make a bot complete a complex platformer level
[20:55:00] <pulse> i've seen neural networks do that relatively easy though
[20:55:04] <pulse> with super mario
[20:55:07] <DnzAtWrk3> you have seen simple levels
[20:55:10] <DnzAtWrk3> nothing remotely complex
[20:55:17] <pulse> yeah but complex levels might be hard for humans too, lol
[20:55:28] <DnzAtWrk3> then they do not deserve to enter
[20:55:31] <DnzAtWrk3> no better than bots
[20:55:32] <DnzAtWrk3> haha
[20:55:40] <pulse> how about just "count the number of trees on this photo"
[20:55:56] <pulse> although
[20:55:57] <DnzAtWrk3> but seriously
[20:56:00] <pulse> easy to just bruteforce
[20:56:15] <pulse> i really wonder what captcha of the future will look like
[20:56:16] <DnzAtWrk3> I think with the correct price, we could figure out a better system
[20:56:29] <DnzAtWrk3> give people an insentive to come up with something new
[20:56:37] <pulse> "send a dna sample through the pipenet to verify you are a human"
[20:56:46] <DnzAtWrk3> incentive*
[20:56:51] <GeDaMo> node1: uh, I'm not sure
[20:56:58] <user51> 19:15 < DnzAtWrk3> to see if they're a robot
[20:57:13] <user51> i wonder how likely it is to fail a voight-kampf test
[20:57:47] *** Quits: swp (~Thunderbi@143.176.249.0) (Quit: swp)
[20:57:54] <DnzAtWrk3> but were they really human then
[20:58:04] <DnzAtWrk3> or just a bunch of flesh beliving itself to be human
[20:58:10] <pulse> humans are very good at recognizing patterns, so use that i guess
[20:58:11] <DnzAtWrk3> oh pfef, flesh do not believe
[20:58:16] <DnzAtWrk3> it just acts
[20:58:18] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:58:21] *** Joins: swp (~Thunderbi@143.176.249.0)
[20:58:33] <GeDaMo> node1: what are you trying to achieve?
[20:58:56] <nomagno> A human is a complex I/O function.
[20:59:06] <pulse> nah, functions don't have souls(tm)
[20:59:10] *** Joins: Akiva (~Akiva@user/Akiva)
[20:59:27] <nomagno> I haven't really seen a soul.
[20:59:28] <DnzAtWrk3> humans have varying degrees of conciousness
[20:59:32] <DnzAtWrk3> that I truly believe
[20:59:42] <DnzAtWrk3> mine is getting lower
[20:59:48] <Rounin> You guys inventing general AI today?
[21:00:13] <nomagno> Consciousness is a scale
[21:00:13] <pulse> nomagno, i haven't seen a robot or an i/o function ever appreciate a pink floyd song ;)
[21:00:20] <Rounin> Do you reckon the robot rebellion will cause a rise or fall in the NASDAQ?
[21:00:21] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[21:00:28] <nomagno> Some gorillas aren't very far away from us in it.
[21:01:09] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[21:01:14] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[21:01:23] <DnzAtWrk3> I wonder what it is like being a cat or a dog
[21:01:30] <DnzAtWrk3> does the world feel less
[21:01:31] *** Joins: tavares (~tavares@user/tavares)
[21:01:35] *** Quits: swp (~Thunderbi@143.176.249.0) (Client Quit)
[21:01:43] <node1> Just wanted to draw/represent every possible state a function can output from the given set of input
[21:01:56] <nomagno> pulse: Input -> Complex synapse interactions between neurons that are not really necessary but has proven to work so not discarded by natural selection -> Output
[21:02:09] *** Joins: swp (~Thunderbi@143.176.249.0)
[21:02:11] <nomagno> In this case music -> brain gears -> smile
[21:02:13] <Rounin> It's also tempting to wonder... If one were to construct some artificial neurons out of origami... Would they also feel to some extent?
[21:02:24] <pulse> nomagno, complex functions don't appreciate music
[21:02:27] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[21:02:35] <Rounin> It's pretty interesting that we're still dealing with such basic questions
[21:02:36] <DnzAtWrk3> music is stimulating, complex but not chaotic repetitions and activations
[21:02:41] <DnzAtWrk3> we don't like chaos
[21:02:42] <pulse> complex functions also don't experience fear, panic, distress, or pain
[21:02:44] <DnzAtWrk3> we like patterns
[21:02:54] <pulse> see: hard problem of consciousness
[21:03:13] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:03:24] <DnzAtWrk3> I also love the way the echoy sounds reminds me of epic rooms
[21:03:27] <DnzAtWrk3> which reminds me of power
[21:03:48] <Rounin> Ah... That's an interesting observation, DnzAtWrk3 
[21:04:08] <nomagno> I don't really see a hard problem there, the issue is with a theoretical information asymmetry between your inner conciousness and the outside world
[21:04:14] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:04:17] <Rounin> Orchestral pieces do tend to have echo, for instance
[21:04:27] <nomagno> That information asymmetry only exists in philosophy, your senses are fairly trustworthy.
[21:04:33] <DnzAtWrk3> ambient soundscapes too
[21:04:41] <DnzAtWrk3> but in that case it's generally slower, more lonely
[21:04:44] <DnzAtWrk3> works great in space scenes
[21:05:18] <DnzAtWrk3> I'm sure there is a whole field in deconstruction sound 
[21:05:21] <DnzAtWrk3> deconstructing*
[21:05:38] <pulse> nomagno, then you haven't investigated philosophy deeply enough
[21:05:54] <pulse> the output to listening an enjoying a pink floyd isn't just smiling
[21:06:01] <pulse> it's feeling good. and feeling good isn't a mathematical function
[21:06:02] <nomagno> I don't really see a conflict between emotions and human consciousness being a residue of an open system functioning
[21:06:29] <tomathy> if something is possible in literature is it possible in code/algorithms?
[21:06:36] <nomagno> Feeling good is a useful by-product of the open system that is the human body functioning.
[21:06:47] <DnzAtWrk3> there are tons of different feeling good feelings
[21:06:50] <pulse> feeling good isn't always useful
[21:06:52] <tomathy> for example a story/novel can be self-aware
[21:06:59] <DnzAtWrk3> eating tasty food feels good
[21:07:00] <pulse> you're reducing qualia
[21:07:02] <DnzAtWrk3> having a **** feels good
[21:07:03] <pulse> rookie mistake
[21:07:12] <DnzAtWrk3> accomplishments feel good
[21:07:17] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:07:34] <DnzAtWrk3> and scary stuff feels good
[21:08:15] <tomathy> wtf are u on about
[21:08:54] <nomagno> A qualie refers to a specific experience. I don't see a conflict between a multilayered system existing, and patterns emerging to enable general emotions
[21:09:04] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:09:04] *** Quits: _inky (~inky_@178.78.151.145) (Read error: Connection reset by peer)
[21:09:45] <pulse> nomagno, why does qualia exist? why do we have feelings? why aren't we just automatons who are empty on the inside (even though on the outside we may showcase emotion) ?
[21:09:46] <DnzAtWrk3> I wonder how much of the emotions are just in the chemicals in the brain
[21:09:51] <pulse> basically, why aren't we p-zombies
[21:09:56] <DnzAtWrk3> like, are emotions just generalized hormones
[21:10:01] <DnzAtWrk3> as opposed to parts of the brain
[21:10:07] <pulse> if you investigate this question deeply enough, you'll realize the core issue of hard problem of consciousness
[21:10:18] <pulse> there's more to us than just "complex chemistry"
[21:10:28] <pulse> complex chemistry doesn't have a need to feel fear or joy
[21:10:28] <tomathy> feelings are about survival and giving our lives meaning
[21:10:41] <pulse> really, how do feelings help us survive?
[21:10:52] *** Joins: _inky (~inky_@178.78.151.145)
[21:10:56] <tomathy> reinforcement learning
[21:11:06] <DnzAtWrk3> they give us precognition pulse 
[21:11:34] <DnzAtWrk3> if you really think about it
[21:11:36] <DnzAtWrk3> that makes sense
[21:11:48] <DnzAtWrk3> we can determine what will happen with only our current state
[21:11:53] <DnzAtWrk3> by having a fluid state such as emotions
[21:12:00] <nomagno> pulse: they don't need to. Natural selection as a concept only requires an organisms functions well enough for its reproductive/survival capabilities to overtake that of its peets
[21:12:19] <tomathy> when you succeed you're happy, it's reinforcing in order to maximise the reward, leading to self training based on experience
[21:12:44] <pulse> DnzAtWrk3, so you're saying a p-zombie wouldn't be able to survive, having no emotions or "inner world" whatsoever?
[21:12:56] <nomagno> Humans are riddled with unnecessary complexity. That doesn't create any kind of conflict from a biological point of view
[21:13:03] <DnzAtWrk3> you can have emotions without an inner world
[21:13:06] <pulse> tomathy, if you're too happy you might miss that sabretooth tiger coming your way
[21:13:06] *** Joins: Skelyl (~viluz@user/Skelyl)
[21:13:11] <tomathy> reinforcement learning is the best machine learning tool we have, neural nets are a smokescreen
[21:13:22] <pulse> DnzAtWrk3, yes, p-zombies are indistinguishable from real humans. they just lack qualia
[21:13:26] <nomagno> You know how ancient bridges are hundreds of times stronger than they needed to be?
[21:13:34] <nomagno> Doesn't mean they don't work.
[21:13:55] <pulse> you're trying to reduce the problem
[21:13:58] <pulse> it doesn't work
[21:14:04] <pulse> philosophers have tried it every which way, they failed
[21:14:18] <pulse> qualia shows that humans are more than a sum of our parts
[21:14:25] <pulse> how you interpret that is up to you though
[21:14:29] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Ping timeout: 256 seconds)
[21:14:38] <DnzAtWrk3> mmmmaybe
[21:14:49] <nomagno> That's observing from inside your open system's border to the outside of another person's open system border
[21:15:00] <pulse> emotions aren't always rational either
[21:15:12] <pulse> and how do you define genius?
[21:15:13] <nomagno> A p-zombie is only created because there is an information asymmetry
[21:15:14] <tomathy> well we can be more than the sum of our parts without necessitating a soul or whatever you're trying to support
[21:15:15] <DnzAtWrk3> nobody said they were
[21:15:20] <pulse> certain chemical soup creates einstein? is that your take?
[21:15:27] <DnzAtWrk3> I mean, some would argue that emotionals are the antithesis of rationality
[21:15:28] <pulse> a certain other chemical soup creates beethoven?
[21:15:28] <nomagno> Don't need to be
[21:15:30] <DnzAtWrk3> emotions*
[21:15:37] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[21:15:42] <DnzAtWrk3> no
[21:15:51] <DnzAtWrk3> the chemicals are just a bit of a catalyst
[21:15:54] <DnzAtWrk3> the real stuff is in the neurons
[21:16:01] <pulse> neurons are chemicals too
[21:16:25] <DnzAtWrk3> you're right, let's form an akira monster
[21:16:35] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[21:16:35] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[21:16:35] *** Joins: tane (~tane@user/tane)
[21:16:51] *** Joins: joev (~joev@user/joev)
[21:16:51] <nomagno> You can't solve the hard consciousness problem just like you can't know your phone camera isn't hacked and the image is being streamed from a webcam in the other room.
[21:17:07] <pulse> physicalism falls apart when you realize what you're trying to do is reductio at absurdum
[21:17:25] <pulse> you can't reduce someone's fear of spiders to chemical interactions
[21:17:29] <pulse> doesn't work
[21:17:32] <pulse> if you claim it does, fine
[21:17:37] <pulse> i don't believe it though
[21:17:56] <pulse> you can't reduce memories either
[21:18:04] <DnzAtWrk3> we could study people with depersonalization
[21:18:06] <DnzAtWrk3> see what is going on
[21:18:32] <pulse> i remember an event that happened when i was 5 years old. all the chemicals in my body have recycled since then. yet i still remember that event, how?
[21:18:47] <nomagno> ... I am trying to figure out why it doesn't work. Hard. Sorry, we are on completely different wavelengths with this topic
[21:18:49] <pulse> the bottom line is we have no idea what consciousness is or how it works
[21:19:00] <DnzAtWrk3> because we are a continuation in space and time
[21:19:17] <DnzAtWrk3> why we don't disconnects between steps in time I don't know
[21:19:18] <pulse> to extend that point, we have no idea how universe works, either
[21:19:20] <DnzAtWrk3> disconnect*
[21:19:31] <DnzAtWrk3> are there steps in time? Is the universe discrete
[21:19:31] <pulse> like, it just randomly popped into existence at some point from nothing? lol
[21:19:35] <nomagno> I mean, not to sound patronizing but: Hurr durr, do you even know what an open system is?
[21:19:41] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[21:19:57] <pulse> nomagno, yeah, a reduction
[21:20:01] <tomathy> https://www.youtube.com/watch?v=pxxmSLJj8FQ
[21:20:02] <bayaz> Title: Scrum vs Kanban | Differences & Similarities Between Scrum & Kanban | Invensis Learning 
[21:20:08] <pulse> all rational inquiry is reductionist by nature
[21:20:21] <nomagno> Science falls apart there because we have a real information assymtry
[21:20:22] <pulse> tomathy, isn't scrum just an ... implementation of kanban? :p
[21:20:34] <nomagno> Just like with the p-zombie issue
[21:21:04] <pulse> you give science too much credit. it can't explain certain thins
[21:21:18] <nomagno> You can only go so far describing nature, or thinking, for that matter.
[21:21:22] <DnzAtWrk3> how would you even describe what it is like being concious
[21:21:30] <pulse> those things include, among others, consciousness, and ontology
[21:21:37] <DnzAtWrk3> "Yeah you see I see the world through my eyes, like if I was in the back of my head"
[21:21:39] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:f143:90e7:e058:c617) (Quit: fe23)
[21:21:56] <nomagno> Science can't explain many things, but that's just a given with anything
[21:22:01] <pulse> DnzAtWrk3, you can't, because it's irreducible. just like you can't explain to a person blind from birth what the color green is like
[21:22:05] <pulse> there is no way to do it
[21:22:10] <pulse> not even by analogy
[21:22:14] <GeDaMo> https://en.wikipedia.org/wiki/Solipsism
[21:22:14] <bayaz> Title: Solipsism - Wikipedia 
[21:22:23] <nomagno> Information asymmetry
[21:22:25] <pulse> or a deaf man how crickets sound
[21:22:27] <DnzAtWrk3> I am.. umm
[21:22:34] <nomagno> I don't really find a real issue there
[21:23:06] <nomagno> Solipsism I agree with.
[21:23:08] <tomathy> pulse: idk i never seen either implemented
[21:23:19] <nomagno> But I think it's utterly useless, it just halts discussion of this issue
[21:23:23] <tomathy> but scrum is linked to the sport of rugby isnt it?
[21:23:28] <pulse> GeDaMo, in a sense, solipsism is correct because the only thing you can ever be certain of is your own experience. you can't verify that other people exist and aren't simply your imagination
[21:23:34] <nomagno> I recognize I have no way to know anything but myself is real.
[21:23:36] <pulse> but you can verify your own perception
[21:23:47] <pulse> it's a deep metaphysical hole. probably made a lot of people crazy
[21:24:05] <pulse> nomagno, yeah, it's best not to take it too literally. it's a good thought experiment
[21:24:23] <nomagno> Yeah but it's the core of your argument, too
[21:24:30] <GeDaMo> You're all just figments of my diseased imagination :P
[21:24:37] <pulse> the core of my argument is simply "we don't know shit bruh"
[21:24:49] <pulse> we pretend we know shit but really we're clueless idiots
[21:25:00] <ski> sexual selection entangles consciousness with evolutionary development
[21:25:04] <nomagno> You're saying that since you can only explain your own consciousness as itself, it's above the outside world
[21:25:08] <nomagno> Your argument is solipsist
[21:25:10] <pulse> ski, does that explain the big bang, too? ;)
[21:25:21] <ski> who knows ?
[21:25:30] <pulse> maybe big bang is a result of gods having sex
[21:25:35] <DnzAtWrk3> well, that's enough philosophy for today
[21:25:45] <pulse> nomagno, no, that's ... an interpretation, but not the only one
[21:25:47] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Quit: Leaving)
[21:26:43] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 256 seconds)
[21:28:18] *** Quits: callq (~callq@2409:4062:2e9e:2081:3c70:5be0:414d:6151) (Quit: callq)
[21:30:18] *** Joins: operateur (~operateur@109-93-127-25.dynamic.isp.telekom.rs)
[21:30:50] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Quit: Stay safe!)
[21:31:38] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:31:50] *** Parts: Skelyl (~viluz@user/Skelyl) (Konversation terminated!)
[21:32:52] <ProfSimm> nomagno: emotions are "residue"?
[21:32:52] *** Quits: zwr (~zwr@2804:d45:b966:fb00:12d7:13aa:3127:57bc) (Quit: Lost terminal)
[21:33:18] <ProfSimm> Emotions are modes
[21:33:22] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:34:06] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:34:19] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:34:57] *** Quits: operateur (~operateur@109-93-127-25.dynamic.isp.telekom.rs) (Ping timeout: 250 seconds)
[21:35:22] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[21:36:08] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[21:36:33] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[21:36:39] <pyzozord> gah, must sign up for stack overflow again
[21:36:49] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[21:36:51] <pyzozord> Just last year I deleted my account
[21:37:23] <GeDaMo> Why do you need to sign up for it?
[21:37:28] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:37:38] <nomagno> How's your job going pyzozord? You learned to do even more aircraft carrier-level VM management?
[21:38:19] <pyzozord> I need to help about administrating kubernetes network access
[21:38:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:38:53] <pyzozord> nomagno: yes, I'm pretty happy about it, I'm starting to think that I could make some modern backend apps myself
[21:39:18] <nomagno> I'm honestly not convinced by 'modern' software architecturing at all
[21:39:47] <nomagno> Like... I guess something like kubernetes scales insanely well for it to be used?
[21:40:04] <pyzozord> that's the point of it
[21:40:06] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:40:06] <nomagno> I'm not convinced at all by this kind of VM instancing
[21:40:35] <nomagno> It seems to me like for anything other than a hosted server service, it just has too much overhead
[21:41:30] <pyzozord> this is definitely all designed with big scale in mind
[21:41:34] <nomagno> Like, am I supposed to be throwing in a whole Linux VM per-user nowadays?
[21:41:55] <pyzozord> it's actually using containers, they are processes on the host machine
[21:42:00] <koollman> nomagno: it doesn't scale 'insanely well'. But it does scale decently. and no, the point is to not use too many vm, but have them run many many many services well separated from each others
[21:42:51] <pyzozord> it's just very "enteprise grade" container orchestration system, that's it
[21:42:55] <nomagno> pyzozord: Well, container management. A per-user container model sounds pretty redundant to me, yet it seems to be used everywhere
[21:43:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[21:43:26] <koollman> nomagno: I haven't seen it used. 'per-user' in which kind of context ?
[21:43:53] <koollman> (actually, ok, I've seen it used, but it was 'per user account of a web hosting platform')
[21:44:00] <pyzozord> nomagno: I never met with "one container per one user", I think that's a very bad idea
[21:44:27] <koollman> one container per service, sure
[21:44:34] <nomagno> I have met it, can't share the most blatant example I know of unfortunately.
[21:45:07] <absentia> kubernetes is only worth it once you start running into organization problems that demand that kind of tool
[21:45:09] <pyzozord> that's definitely not, what virtual everybody does 
[21:45:18] <koollman> well, you can surely find bad usages and bad patterns in many situations. Or maybe it made sense for the problem being solved, I do not know
[21:45:21] <absentia> it's conway's law writ large
[21:45:21] <pyzozord> s/everybody/most people/
[21:45:25] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[21:45:43] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:45:51] <absentia> multiple teams, all need their own infra and independent SDLC?
[21:45:57] <absentia> containerize everything and ship it to a kubernetes fleet
[21:46:16] <absentia> if you're one of those foolish teams running unmanaged kubernetes for a 10-person monolith
[21:46:23] <absentia> well that's a different problem
[21:46:26] <koollman> I do have one env where we instantiate the whole application 'per user', but that's very different. It's to validate their code changes. so it's not the same application as everyone else, but their current last committed things
[21:46:31] <koollman> and it runs only when they need it
[21:49:05] <pyzozord> sounds like some of you guys actually know stuff about k8s, maybe you can help me. I have a problem with ArgoCD. I want to run it on local machine. I created a small service with nginx and a nodepath volume that acts as a git server. It works great, on host I can git clone http://localhost:nodeport and in containers I can git http://git-nginx. However it doesn't work in ArgoCD. It connects, but 
[21:49:08] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[21:49:11] <pyzozord> later during syncinc it says it cannot find "git-nginx" host. I also tried with cluster ip, but that just times out. It seems to me that some ArgoCD pods can't access in cluster ips and dns.
[21:49:48] <pyzozord> but I don't know how to manage networking and accesses like that, so I need help figuring out how to make sure all pods can access all in cluster ips
[21:49:51] <pyzozord> and dns
[21:50:20] <pyzozord> this is probably a devops level question, not dev-who-knows-k8s level question though
[21:51:04] <absentia> pyzozord: can you `dig +trace` or something from both your local container and argoCD container
[21:51:09] <absentia> would be interested to see which resolvers are being hit
[21:51:19] <absentia> you may also want to include pastes of /etc/resolv.conf, /etc/hosts
[21:51:33] <absentia> from both deployment environments
[21:52:26] <absentia> actually don't `+trace`
[21:52:37] <pyzozord> absentia: I tried but these argocd pods don't have dig, also are on non-root user and I can't apt install!
[21:52:53] <absentia> do they have nslookup?
[21:52:56] <pyzozord> nope
[21:53:37] <absentia> hard to say, need more info
[21:53:45] <absentia> some yml documents or /etc/ configs (above) or something
[21:53:57] *** Quits: emf (~emf@2620:10d:c090:400::5:3e0a) (Ping timeout: 240 seconds)
[21:54:43] <absentia> can you get access to one of the nodes?
[21:55:21] <absentia> ah wait - are you trying to access cluster services from outside the cluster?
[21:55:32] <absentia> because if so you must define an ingress
[21:55:37] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[21:56:12] <pyzozord> no no, oustide the cluster it works perfectly fine, this service is NodePort, so like I said I can do git clone http://localhost:nodeport, and it works perfectly fine
[21:56:34] <pyzozord> I can also create any number of random pods and inside them I can git clone http://service-name and that works too
[21:56:42] <pyzozord> it only doesn't work for argocd pods
[21:56:43] <absentia> but not the argoCD pods
[21:56:46] <pyzozord> yeah
[21:56:52] <absentia> they must be futzing with the resolver conf in /etc/resolv.conf
[21:56:56] <koollman> pyzozord: I'm not sure how those are set up. Are the argocd pod running in the same namespace ?
[21:57:08] *** Joins: emf (~emf@163.114.132.7)
[21:57:12] <pyzozord> koollman: no argocd has it's own namespace "argocd"
[21:57:18] <absentia> there is some funniness that k8s does to also append parent zones to names you try to resolve (`search` option in resolv.conf)
[21:57:22] <koollman> pyzozord: short names are 'per namespace'
[21:57:46] <absentia> if argoCD gets rid of that you won't get implied lookups for git-nginx.svc, git-nginx.svc.cluster, git-nginx.svc.cluster.local etc
[21:57:56] <koollman> pyzozord: it is looking for a git-nginx service in the argocd namespace, and not finding it
[21:57:57] <pyzozord> well to be precise the name is my-service.my-cluster
[21:58:21] <pyzozord> I think I checked from othernamespace and it worked
[21:58:33] <pyzozord> but here is another clue: the cluster ip also doesn't work from argocd pods
[21:58:38] <pyzozord> just times out
[21:58:52] <pyzozord> you can see how argocd is set up here https://github.com/argoproj/argo-cd/tree/master/manifests
[21:58:53] <bayaz> Title: argo-cd/manifests at master ? argoproj/argo-cd 
[21:59:23] <pyzozord> it's strange because I use argocd web ui and I can connect repo with http://my-service.my-cluster and it says connected
[21:59:37] <pyzozord> but later when I press "sync" it says "no such host my-service.my-cluster"
[21:59:49] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[21:59:59] <pyzozord> so it's like the repo connecting happened maybe on different pod with different permissions than syncing?
[22:00:11] <absentia> this is not a permissions issue
[22:00:12] <koollman> pyzozord: try git-nginx.svc.thenamespace.cluster.local
[22:00:25] <koollman> err, I mixed the order
[22:00:28] <pyzozord> I tried full host name too, the result was the same
[22:00:32] <absentia> "no such host" is raised by getaddrinfo I think
[22:00:47] <absentia> which is a failure of name resolution
[22:00:50] <koollman> git-nginx.thenamespace.svc.cluster.local (with thenamespace being the namespace git-nginx runs in)
[22:00:54] <absentia> (via DNS, or /etc/hosts, etc...)
[22:01:17] <absentia> what are the pod IPs of your test pods and the argocd pods?
[22:01:31] <nomagno> I think renaming 'subroutine start' (SUBS) and 'subroutine end' (SUBE) to 'FUNC' and 'RET' is less confusing, no?
[22:01:46] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[22:02:02] <pyzozord> absentia: just some random 10. ips
[22:02:02] <absentia> if; fe; fi; fo; fum; done
[22:02:23] *** Quits: anon__ (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Quit: Leaving)
[22:02:31] <absentia> lol
[22:02:34] <absentia> can you strace in the argo pods
[22:02:39] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[22:03:05] <absentia> would be interesting to look for those getaddrinfo calls
[22:03:14] <pyzozord> lemme check, I doubt it tho
[22:03:21] <absentia> oh right, non-root
[22:03:25] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[22:04:39] <pyzozord> no strace, there is nothing there
[22:05:19] *** Quits: vukky (~vukky@wikipedia/vukky) (Quit: Unfortunately, when Vukky saw your messages, his IRC client exploded into a million pieces.)
[22:05:52] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[22:06:37] *** Joins: vukky (~vukky@wikipedia/vukky)
[22:06:51] <absentia> what's the /etc/resolv.conf?
[22:06:56] <absentia> in both pods
[22:07:00] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[22:07:31] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:09:27] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:11:15] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:12:59] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[22:13:03] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:15:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:16:36] *** vukky is now known as vukkytoo
[22:17:12] *** vukkytoo is now known as vukky
[22:18:11] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7f5e:4f5a:9aa1:aae6)
[22:18:34] *** vukky is now known as weirdvukky
[22:18:41] *** weirdvukky is now known as vukky
[22:19:54] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:19:57] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[22:20:19] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Ping timeout: 256 seconds)
[22:23:00] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[22:23:40] <pulse> i find google's search console probably the least comprehensible website on the entire website
[22:24:03] <GeDaMo> What's a "search console"?
[22:24:05] <pulse> my exact feelings when using it are "who in the where and then what?"
[22:24:42] <pulse> GeDaMo, it's a thing that allows you to check your website's performance and tune stuff for usability
[22:24:48] <GeDaMo> Ah
[22:24:49] <pulse> but it's incomprehensible
[22:25:01] <pulse> it's designed in such a terrible way that i don't even know what to say about it
[22:25:17] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 240 seconds)
[22:25:21] <pulse> it gives you a sense that it is useful, but after trying to use it you realize you've accomplished nothing
[22:25:33] <pulse> and that's a consistent user experience it gives you
[22:25:49] <pulse> least comprehensible website on the entire internet*
[22:25:57] *** vukky is now known as vukkytwo
[22:25:59] *** vukkytwo is now known as vukkythree
[22:26:10] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Client Quit)
[22:26:42] *** vukkythree is now known as vukky
[22:27:14] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[22:28:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:28:27] <nomagno> If your website runs on your toaster and looks good on both your phone and your PC, I'd call it good to go
[22:28:38] *** Joins: vicfred (~vicfred@user/vicfred)
[22:28:42] <nomagno> AKA don't abuse JS frameworks.
[22:32:01] <beaky> what is the best linux distro to learn programming
[22:32:31] <EdFletcher> The one you’re already using 
[22:33:42] *** Joins: zwr (~zwr@2804:d45:b966:fb00:1c35:8f5c:4397:2de5)
[22:33:53] <pulse> you buntu
[22:34:06] <pulse> ok my debian vm works perfectly, xfce is nice and all
[22:34:19] <pulse> but of all the things that could fail, the scroll wheel does nothing
[22:34:21] <pulse> what gives
[22:34:39] *** Joins: Auron (Auron956@user/auron)
[22:35:05] <EdFletcher> Oh that’d be annoying indeed, you just expect the scroll wheel to always work. When it doesn’t the machine feels very broken. 
[22:35:06] <pulse> seems so random
[22:35:19] <EdFletcher> Xfce is really nice though, agreed 
[22:35:20] *** Quits: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f) (Quit: Client closed)
[22:35:23] <pulse> it kind of works if i try really hard
[22:35:32] <pulse> but i can see it works just fine on windows so it's not hardware
[22:35:47] <pulse> in the vm i have to really flick the wheel super hard in order to move by a tiny bit
[22:35:55] <pulse> hmm
[22:36:33] <pulse> it seems like it's ignoring 90% of scroll inputs
[22:36:40] <pulse> and occasionally an input gets past it and it works
[22:36:58] <EdFletcher> Yup definitely does sound like that, wonder if there’s a setting you can tweak to fix that 
[22:37:23] *** Joins: LiftLeft (~LiftLeft@187.170.244.154)
[22:37:39] <pulse> oh, hmm
[22:37:41] * wedr sighs
[22:37:43] *** Joins: LiftLeft2 (~LiftLeft@187.170.244.154)
[22:37:45] <pulse> seems to be connected to virtualbox
[22:37:50] <wedr> Why can't we have fun when at work?
[22:37:51] <pulse> if i turn off mouse integration then it works
[22:38:08] <pulse> hmm, ok so that's a thing. but mouse integration is kind of comfy
[22:38:12] <pulse> although i guess i can live without
[22:38:16] <pulse> wedr, who says we can't?
[22:38:22] <wedr> Sometimes, I wanted to put some meme images on our test homepages, and have fun parodying other competitors.
[22:38:55] <wedr> The best we can do is to put cat pictures and Pusheen on our live server instances
[22:38:57] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:39:02] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f)
[22:39:05] <EdFletcher> lol well there's a difference between _internal_ fun and _external_ "fun", what you're suggesting is more the latter and could actually have business consequences. that's not fun. 
[22:39:23] <wedr> Oh, it's already done
[22:39:32] <wedr> Pusheen on our live servers. That's already up there
[22:39:32] <pulse> yeah don't do memes when it comes to business
[22:39:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7f5e:4f5a:9aa1:aae6) (Ping timeout: 240 seconds)
[22:39:45] <pulse> you have to maintain a degree of professionalism
[22:39:52] <wedr> yeah
[22:40:03] <EdFletcher> yup exactly pulse 
[22:40:19] *** Joins: flakland (~flaknet99@32.211.211.39)
[22:40:43] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[22:41:12] *** Quits: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Quit: Leaving)
[22:41:17] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[22:41:43] <nomagno> pulse: that's a spice issue most likely
[22:42:08] <nomagno> (The scrollwheel thing)
[22:42:08] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[22:42:10] *** Joins: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[22:43:15] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Client Quit)
[22:43:22] <nomagno> Have had no real issues with development on: Manjaro (assuming it doesn't break, which is hard, Manjaro sucks), Fedora, Ubuntu, Debian, Devuan, FreeBSD
[22:43:34] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:43:53] <nomagno> I did have some issues on MacOS, but that's just me hating the GUI/UX flow
[22:44:09] *** Joins: pulse_ (~pulse@user/pulse)
[22:44:30] *** Quits: pulse_ (~pulse@user/pulse) (Read error: Connection reset by peer)
[22:44:35] <nomagno> (List ordered from less recently tried to most recently tried, in the span of about two years)
[22:45:11] <EdFletcher> i can second the "Manjaro sucks because it breaks often" sentiment: not an easy-to-live-with-distro _at all_ 
[22:46:08] *** Joins: pulse_ (~pulse@user/pulse)
[22:46:32] <pulse_> stupid virtualbox disconnected my mouse
[22:46:38] *** Quits: pulse (~pulse@user/pulse) (Killed (NickServ (GHOST command used by pulse_)))
[22:46:40] *** pulse_ is now known as pulse
[22:47:06] <pulse> nomagno, what is a "spice" issue?
[22:47:18] <pulse> it works if i turn off mouse integration
[22:47:25] <nomagno> Native Windows dev is just... Ugh
[22:47:29] *** Joins: Pickchea (~private@user/pickchea)
[22:47:39] <nomagno> Have never met an environment that is less friendly to C/C++ dev. Yes, I'm saying C/C++/
[22:47:46] <pulse> err
[22:47:51] <pulse> i feel the opposite
[22:47:59] <pulse> windows is super comfy for c++ dev, linux is a pain in the ol' arse
[22:48:00] <pulse> :D
[22:48:26] <nomagno> pulse: SPICE protocol, the thingy used to have non-hw-capturing I/O
[22:48:42] <pulse> i see, never heard of it
[22:48:51] <pulse> i know my other linux VMs didn't have this problem
[22:48:52] <EdFletcher> have to concur here with pulse in as much as visual studio is still the best ide out there, so by definition if you can use vs your experience will be more comfy 
[22:48:57] <pulse> it's a minor issue though
[22:49:14] <pulse> EdFletcher, yeah. the project setup is a pain in the butt but once you're past that, it's smooth sailing from there on
[22:49:17] <pulse> and VS is just fantastic
[22:49:31] <nomagno> Windows forces a very complex and non-transferrable-knowledge GUI onto you, and C/C++ development is fundamentally CLI-based
[22:49:33] <pulse> i tried deving with vim and gdb and it's such a subpar experience
[22:49:50] <flakland> kdevelop is respectably comfy for C++ if you can deal with cmake
[22:49:52] <pulse> nomagno, right, that's the "learning the IDE" part
[22:49:57] <pulse> nah, kdevelop isn't comfy at all
[22:50:01] <pulse> imo anyway
[22:50:03] <EdFletcher> pulse: exactamundo! a bit of annoying bringup but once you're moving, it's smooth as can be. really miss using VS regularly honest...  so much so i even tried the mac version for a time 😆 it's not even close 
[22:50:24] <pulse> EdFletcher, vs code isn't all that bad if you're not on windows
[22:50:24] <nomagno> pulse: Are you comfortable with vim?
[22:50:28] <pulse> nomagno, very
[22:50:35] *** Quits: dld (~davidlowr@73.61.8.20) (Ping timeout: 256 seconds)
[22:50:48] <pulse> i use vim every day, mostly for JS
[22:50:56] <pulse> for C++ i much prefer VS
[22:51:03] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:51:11] *** Joins: vrp2zqL7 (~v8XhLN3K@74.5.157.96)
[22:51:28] <nomagno> Then I don't really see an issue. I don't usually use gdb that much, I use -fsanitize=undefined,address then printf/assert
[22:51:37] <pulse> well, the issue is two-fold
[22:51:44] <nomagno> It's archaic but it's usually powerful enough
[22:51:52] <pulse> one, vim doesn't offer even 1% of what VS does, even with all the plugins you can imagine
[22:51:58] <pulse> two, gdb sucks compared to vsdb
[22:52:03] <pulse> just plain out not comparable
[22:52:12] <EdFletcher> pulse: yeah i use vscode for everything now, even on windows (i don't regularly write C++ or C# anymore, so VS itself is too heavyweight for my normal day-to-day... sadly) 
[22:52:14] <flakland> can vsdb step backwards?
[22:52:17] <pulse> i mean i respect the heck out of people who can use that env and get work done
[22:52:21] <pulse> flakland, idk
[22:52:29] *** Joins: dld (~davidlowr@73.61.8.105)
[22:52:37] <flakland> honestly i don't know enough about the MS tools but i think gdb is probably on another plane of existence
[22:52:45] <pulse> yeah, on a much worse plane
[22:52:59] <pulse> it's not comparable
[22:53:02] <pulse> it's worse, objectively
[22:53:18] <flakland> it's worse if you're used to visual studio clicking buttons and whatnot
[22:53:33] <pulse> no, it's worse in an objective sense of having debug capabilities
[22:53:40] <nomagno> I have honestly not uses Visual Studio's debugger at all
[22:53:43] <flakland> what capability is missing
[22:53:51] <nomagno> pulse: can you list examples?
[22:54:03] <pulse> i could, but i don't want to get into it
[22:54:06] <pulse> there's plenty of info online
[22:54:14] <pulse> and you can just use VS debugger for a day and see for yourself
[22:54:19] <pulse> it's vastly more powerful
[22:54:23] <pulse> not even in the same sphere of existence
[22:54:29] <flakland> because you don't have to type anything
[22:54:36] <flakland> thats the only reason i'm aware of
[22:54:57] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[22:55:12] *** Quits: peace-angel (uid530400@user/star1) (Quit: Connection closed for inactivity)
[22:55:46] <nomagno> I have looked online and found no comparisons that make such an outstanding differentiation
[22:56:52] <pulse> if it works for you, then use it. like i said i have nothing but respect for people who get work done with it
[22:56:57] <pulse> i've used both and honestly there's no comparison
[22:57:05] <pulse> visual dbg is light years ahead
[22:57:35] <flakland> http://sourceware.org/gdb/wiki/GDB%20Front%20Ends
[22:57:36] <bayaz> Title: GDB Front Ends - GDB Wiki 
[22:58:57] *** Quits: _inky (~inky_@178.78.151.145) (Ping timeout: 240 seconds)
[22:59:19] *** Joins: zaher (~zaher@37.48.176.215)
[22:59:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[23:01:57] *** Quits: inky_ (~inky@178.78.151.145) (Ping timeout: 240 seconds)
[23:02:52] <oldlaptop> EdFletcher: Serious question: Is the full-freight VS actually any heavier than firing up a dedicated copy of Chrome (which is what it amounts to) to run vscode?
[23:02:56] *** Joins: inky_ (~inky@46.36.113.221)
[23:02:57] <oldlaptop> If so, how much?
[23:03:31] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[23:04:04] <EdFletcher> oldlaptop: absolutely, it installs nearly at nearly 20 GIGS and takes tens of seconds to startup. vscode is nearly-instant now: they've optimized the _crap_ out of it and the underlying (custom!) electron implementation over the past few years 
[23:04:22] <oldlaptop> How's RAM consumption at runtime?
[23:05:14] *** Joins: tcsilver (~tcsilver@static-96-255-152-200.clppva.ftas.verizon.net)
[23:05:16] <tcsilver> hi
[23:05:20] <EdFletcher> vs is heavier than vscode on that too, though honestly i can't give you even close to concrete numbers because i don't even have full vs installed anymore (it was too big!) 
[23:05:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:05:25] <pulse> it's like having a few chrome tabs open
[23:05:28] <pulse> it's optimized well
[23:05:29] <tcsilver> #join gamedev
[23:05:32] <tcsilver> oops
[23:05:38] <EdFletcher> pulse might be able to give some ballpark numbers from a running system 
[23:05:42] <oldlaptop> A fair whack of that 20G is things like the various development toolchains, IIRC, which you really have to factor in/out as appropriate
[23:05:47] <EdFletcher> yeah there we go thanks pulse, i'm behind haha 
[23:05:50] <pulse> VS doesnt' _have_ to be 20gb
[23:05:56] <EdFletcher> very true 
[23:05:56] <pulse> it depends what you install
[23:06:09] <pulse> you can have a minimal install for just C++ and it will probably be about 5ish gb
[23:06:11] <oldlaptop> I *have* VS sitting on a VM somewhere for the horrific times when I need it. A question like this is *not* the kind of five-alarm fire that justifies firing all that up.
[23:06:12] <EdFletcher> a ton of that is optional during install, but the bare minimum is over 12gb iirc 
[23:06:18] <EdFletcher> oh 5? not bad 🙂 
[23:06:28] <pulse> with C# it gets bloated fast, and with other features it can reach even 100gb (not advisable, makes updates a pain)
[23:06:52] <EdFletcher> yeah that's probably why i think of it as being heavier, i always needed at least the full C# install 
[23:07:24] <pulse> on my windows system VS takes ~3 seconds to start, and vs code ~2
[23:07:45] <EdFletcher> hot or cold cache though? 
[23:07:46] <pulse> depends if you're opening a huge project or not though
[23:08:01] <pulse> i just timed how long it takes for it to appear
[23:08:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:d7ff:63b4:1db:f450)
[23:08:11] <pulse> and be ready to use
[23:08:22] <EdFletcher> wow well then VS is a lot quicker than i remember it being, that's fantastic 
[23:08:22] <pulse> now if you open an enormous project it may take a long time
[23:08:29] <pulse> depends on hardware too
[23:09:07] <pyzozord> absentia: tried few more things, I'm giving up for today
[23:10:49] <EdFletcher> one lovely thing about vscode that vs can't match is the cross-platform support. same dev env (plugins and all!) across all OSes i use, hard to beat that. 
[23:10:59] <GeDaMo> When QuickBasic was released it was 180K :P (Not QBasic, QuickBasic was a native code generating compiler)
[23:11:32] <GeDaMo> The original TurboPascal is even smaller
[23:11:36] <pulse> i like using vs code for c++ on linux because it comes with intellisense
[23:11:49] <EdFletcher> hell yeah exactly 
[23:11:55] <pulse> and i can't find anything on linux that offers even remotely the same level of autocomplete features
[23:12:02] <pulse> it's just fantastic to develop with it
[23:12:27] <pulse> maybe qt ide does, but i hate qt
[23:12:31] <deniska> good thing vs code uses language server protocol (they came up with it), so you can plug the same plugin into any editor supporting LSP
[23:12:34] <deniska> for example neovim :D
[23:12:36] <pulse> all the other i've tried are way worse though
[23:12:50] <pulse> maybe clion offers something, but it's not free so i'll probably never know
[23:12:51] <pyzozord> do you guys think language servers are good or bad?
[23:13:04] <pyzozord> I can't decide, Jon Blow thinks they are bad
[23:13:04] <pulse> probably good overall
[23:13:06] <EdFletcher> neither: they're a tool. 
[23:13:19] <EdFletcher> but overall the utility they provide, i think, is good. 
[23:13:21] *** Quits: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:13:23] <pyzozord> I kinda think they are at least not bad
[23:13:26] <deniska> pyzozord: any solution transforming n*m problem into n+m problem is good
[23:13:39] <oldlaptop> EdFletcher: Tools can be good or bad ways to solve the problems they're intended for
[23:13:58] *** Joins: vladoski (~foo@93-36-219-239.ip62.fastwebnet.it)
[23:14:09] *** Quits: dld (~davidlowr@73.61.8.105) (Ping timeout: 256 seconds)
[23:14:11] <EdFletcher> oldlaptop: agreed! but that's on the problem-solver, not the tool's fault! the tool itself isn't inherently good nor bad 
[23:14:15] <pyzozord> Jon Blow's opinion is that language servers are unnecessary and nonsensical, and rather a good compiler is enough
[23:14:24] <EdFletcher> who is Jon Blow? 
[23:14:36] <EdFletcher> sounds like a fake jokey name 
[23:14:45] <GeDaMo> Game developer who's working on his own language
[23:14:47] <pyzozord> he's the guy who made Braid and The Witness
[23:14:53] <pyzozord> it's his real name as far as I can tell
[23:15:01] <oldlaptop> A crescent wrench that breaks when you try to apply more than a few ounces of pressure to it is a bad tool
[23:15:08] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[23:15:14] <deniska> his opinions are… interesting
[23:15:25] <deniska> or maybe even unorthodox
[23:15:30] <EdFletcher> oldlaptop: badly-MADE tool, as not all crescent wenches should be indicted for that failure 
[23:15:42] <pyzozord> He comes from studios like Ion Storm and other oldschool tripple AAA crowd that's not far from John Carmack
[23:15:43] <Matt|home> braid was cool. never played the witness
[23:15:52] <EdFletcher> deniska: haha yeah sounds... interesting indeed 🙂 
[23:15:57] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[23:16:07] *** Joins: dld (~davidlowr@2601:197:600:1210:3c77:90a4:f938:18fe)
[23:16:15] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:16:17] <pyzozord> deniska: yeah that sounds interesting, how do you see this as a*b vs a+b, can you explain a bit more?
[23:16:21] <EdFletcher> but just because someone makes a couple good games does not make them an expert on languages, not even close... sounds like he's just opinionated? 
[23:16:49] *** Joins: ZeroDay (~ZeroDay@gateway/tor-sasl/zeroday)
[23:16:57] <pyzozord> yeah very opinionated but also you know working on his language over 5 years now, every day coding 8h a day
[23:16:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:d7ff:63b4:1db:f450) (Ping timeout: 240 seconds)
[23:16:57] <deniska> pyzozord: you have n languages and m editors, if you want every editor to support each language, you have to make n*m plugins
[23:17:28] <pyzozord> aah like this, yeah that makes sense
[23:17:39] <deniska> pyzozord: if all plugins share the same protocol, then you only need to make n plugins for each language, and support the protocol m times in each editor
[23:17:42] <EdFletcher> pyzozord: working hard in knowledge work means nothing, it's the output that matters. last company i was at fired outright one of the "hardest" workers because all his hard work was just spinning wheels and yak shaving, he never got anything actually done. 
[23:17:58] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[23:18:02] *** Joins: _inky (inky_@gateway/vpn/protonvpn/inky)
[23:18:19] <EdFletcher> he literally tried to argue "but i put in all these hours!" well, yeah, but it's junk that comes out of those hours, so your value is nil. 
[23:18:26] <deniska> if I make an LSP for a new language, it's basically automatically supported by vscode, nvim, and many other editors
[23:18:40] <pulse> the only potential problem is whether or not the generalized solution covers the same surface area as the narrow, specific solution
[23:18:41] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:18:56] <oldlaptop> EdFletcher: Ah, but we established previously that the purported authority we're discussing has results - literally the last objection you made was that said results don't matter
[23:18:58] <deniska> if I make a new editor and add LSP support to it, I automatically support fancy features for refactoring and navigating python, C#, JS and many other languages
[23:19:03] <pulse> if it does, it's good. if it doesn't, a specific implementation might still be way better
[23:19:04] *** Joins: terminalpusher (~terminalp@2a01:586:8e51:1:3197:8117:4d18:b86c)
[23:19:17] *** Quits: LiftLeft2 (~LiftLeft@187.170.244.154) (Ping timeout: 240 seconds)
[23:19:22] <pyzozord> LSP have other characteristics too. It has a continous memory of the code so it can perform incremental operations
[23:19:29] *** Quits: LiftLeft (~LiftLeft@187.170.244.154) (Ping timeout: 256 seconds)
[23:19:37] <deniska> pyzozord: I mean, IDE can do all that too
[23:19:55] <deniska> LSP is basically a standardized API for IDE plugins
[23:20:03] <EdFletcher> oldlaptop: huh?! i'm pretty baked but i don't think i said "results don't matter"... did i miss something? 
[23:20:07] <deniska> but DLLs are hard, so it's an IPC server instead :)
[23:20:15] <pyzozord> right but they cannot afford the amount of effort that goes into LSP because of that n+m vs n*m
[23:20:35] <deniska> pyzozord: well, if your m is 1, you can spend some effort on it
[23:20:39] <oldlaptop> EdFletcher: "just because someone makes a couple good games does not make them an expert" or so
[23:20:58] <oldlaptop> "don't matter" for the argument at hand, for clarity, not "don't matter" for anything, in any sense
[23:21:16] <pyzozord> I think Jons games were critically aclaimed
[23:21:33] <deniska> pyzozord: MS coming up with LSP is a bit of a long game, in short term it'd be easier just to make vscode work like any other editor with a proprietary API
[23:21:33] <pyzozord> he is a great engineer in my opinon
[23:21:46] <EdFletcher> oldlaptop: lol you cherry-picked well, missing two really important words "on languages". but i honestly think you're just trying to argue with me at this point, not sure why but since i respect you from past interactions i'm just going to shrug and move on. 
[23:22:03] <pyzozord> but he is very opinionated, that's kind of a pinch of salt I'm willing to swallow though to learn
[23:22:19] <oldlaptop> the argument pyzozord is making (if I understand correctly) is that this person's opinion is worth considering carefully, because the work necessary to produce those results implies a great deal of relevant experience
[23:22:24] <deniska> pyzozord: https://i.redd.it/p02yvc29p6141.jpg grain of salt :D
[23:22:24] <bayaz> Type: image/jpeg Size: 861.9 kB 
[23:22:35] <pyzozord> deniska: what do you think is the long term plan then?
[23:22:54] <pyzozord> heh, yeah the grain of salt of Jon Blow's opinons is not a small one for sure
[23:23:07] <deniska> pyzozord: they benefit from the ecosystem of plugins people may write targeting other editors
[23:23:18] <pulse> nice salt crystal
[23:23:41] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:23:48] <pulse> in any case, you don't _have_ to use LSP
[23:23:51] <oldlaptop> And I don't think expertise "on languages" is what is relevant here.
[23:24:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b6e6:595d:7721:df0a)
[23:24:11] <pulse> <deniska> LSP is basically a standardized API for IDE plugins <- this
[23:24:19] <pulse> it's a good idea imo
[23:24:43] <flakland> any programmer is qualified to write their own language, you don't need any titles of nobility or accredation
[23:25:00] <pyzozord> oldlaptop: yes, that's correct, great deal of experience as a software engineer in general, and then person like that putting in a extereme amount of work into some new project
[23:25:25] <pulse> flakland, yeah but to actually make a useful language you definitely need some uncommon skills
[23:25:49] <pulse> you can design a language, sure. but can you also make it perform well enough to be competitive?
[23:25:55] <pulse> the devil is in the details
[23:26:25] <flakland> these days, it only has to outperform JS and python
[23:26:31] <pyzozord> he's been streaming a lot earlier, every day, 3-4h stream and another 6 coding outside of the stream, he was doing at least 8-12h every day except vacation days. This is more effort then anyone I know
[23:26:47] *** Parts: tcsilver (~tcsilver@static-96-255-152-200.clppva.ftas.verizon.net) ()
[23:27:23] <nomagno> Yeah definitely can't put in that much work into my project
[23:27:47] <pulse> flakland, good luck outperforming JS
[23:28:04] <pulse> the main engines are optimized beyond what anyone could imagine is even possible a decade ago
[23:28:11] <oldlaptop> pyzozord: And one reasonable argument could be that he's unknowingly making things that hard on himself by not using things like LSP-enabled editors
[23:28:12] <pulse> V8 is pretty much a miracle in engineering
[23:28:19] <pulse> python, yeah, it's kinda slow
[23:28:24] <flakland> optimized for small sites
[23:28:38] <pulse> JS is used for a lot more than `small sites` :D
[23:28:53] <pulse> it runs servers, desktop apps, enormous webapps, etc
[23:28:54] <flakland> nobody is doing serious complex computing in a JS engine 
[23:28:58] <pulse> false
[23:29:09] <nomagno> I honestly think the JS engine race is/was a waste of resources
[23:29:09] <pulse> everyone and their pet parrot is doing serious complex computing in JS these days
[23:29:10] <flakland> so calling out to some vector processor works great for some cases, but not everything
[23:29:26] <pulse> JS is ridiculously fast, flakland 
[23:29:34] <flakland> lol show me some benchmarks
[23:29:42] <nomagno> JS isn't naturally fit to be performant
[23:30:03] <Decker> https://benchmarksgame-team.pages.debian.net/benchmarksgame/ 
[23:30:03] <bayaz> Title: Which programming language is fastest? 
[23:30:04] <nomagno> V8 makes it fast, but that effort could have been spent elsewhere
[23:31:26] <pulse> flakland, https://stackoverflow.com/questions/39360403/how-can-node-js-be-faster-than-c-and-java-benchmark-comparing-node-js-c-java/42814674
[23:31:26] <bayaz> Title: How can node.js be faster than c and java? Benchmark comparing node.js, c, java and python 
[23:31:28] <pulse> ;)
[23:31:35] <tomathy> what re the analogies in this video for software? https://www.youtube.com/watch?v=Mdyyyu41dZ4
[23:31:36] <bayaz> Title: Kanban and Pull Concept: A Pizza Example 
[23:31:38] <pulse> it's not a good fit for many problem domains
[23:31:41] <pyzozord> v8 kinda matches jre
[23:31:42] <pulse> but people use it anyway
[23:31:43] <pyzozord> https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/javascript.html
[23:31:43] <bayaz> Title: Node js?vs?Java - Which programs are fastest? (Benchmarks Game) 
[23:31:55] <oldlaptop> Languages are not fast or slow, implementations are fast or slow.
[23:32:02] <flakland> https://benchmarksgame-team.pages.debian.net/benchmarksgame/performance/binarytrees.html
[23:32:03] <bayaz> Title: binary-trees (Benchmarks Game) 
[23:32:04] <pulse> true but you can generalize
[23:32:14] <pulse> "python is slow" everyone knows what that means
[23:32:25] <oldlaptop> Languages can be easy or difficult to write fast implementations for - and I don't think anyone sane would argue that making V8 was "easy".
[23:32:25] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[23:32:33] <pyzozord> flakland: well you were the one asking for benchmarks
[23:32:38] <nomagno> JavaScript is definitely naturally not as fast as it is right now with V8
[23:32:49] <pulse> i've heard v8 dev described as the last circle of hell
[23:32:59] <nomagno> As in, it's very forced
[23:33:17] <oldlaptop> nomagno: In other words, Javascript is hard to write an implementation as fast as V8 for.
[23:33:24] <Decker> spidermonkey's not bad either; it just doesn't have a standalone version
[23:33:28] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:33:35] <flakland> wow this site is horrible how can i reach any definitive answers wth 9 different implementations to review
[23:33:39] <pulse> yeah, the only reason V8 exists is because of wide adoption of JS
[23:33:47] <pulse> if that didn't happen, there would be no incentive whatsoever for V8
[23:33:53] <pulse> but it did, so there was
[23:34:01] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:34:15] <pulse> but it's cool, we can write JS now and have it perform incredibly well
[23:34:34] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Read error: Connection reset by peer)
[23:34:40] <pyzozord> interesting that Racket is faster than php
[23:34:40] <pulse> and modern ES is kinda cool too. you can write very elegant programs with it
[23:34:43] *** Quits: retux (~user@dyndsl-085-016-037-180.ewe-ip-backbone.de) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[23:34:49] <pulse> pyzozord, php8 or 7
[23:34:50] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[23:34:59] <pulse> i heard php8 has gained a major speed boost
[23:35:02] <pyzozord> they don't say
[23:35:10] <pulse> php7 is supposed to be much slower
[23:35:14] <pyzozord> looking at https://benchmarksgame-team.pages.debian.net/benchmarksgame/box-plot-summary-charts.html
[23:35:15] <bayaz> Title: Box plot charts (Benchmarks Game) 
[23:35:35] <pulse> bechmarks are biased too btw
[23:35:42] <pyzozord> generally intersting that lisp is as fast as it is, considering it's all one big linked list
[23:35:51] <pulse> problem X might be faster with C++ but problem Y might actually be faster in JS
[23:36:13] <pulse> to benchmark properly you would have to run hundreds of cases on various machines
[23:36:17] <pulse> and then average it out
[23:36:18] <flakland> why is this guy using -O2, and show me the assembly to see hes not calling out to some sqrt function and it's actually SSE instructions
[23:36:41] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[23:37:27] <pyzozord> of course, few years ago I was compering golang and javascript on that benchmakr wesbite on some regex program they had. Go was much slower and I couldn't believe it, after I investigateded, the go version was implementing regex manually, meanwhile javascript was using native library which is written in highly optimized c++
[23:37:53] <pyzozord> so this benchmark is just a very rough idea, and not that useful
[23:38:05] <oldlaptop> flakland: on the off chance that wasn't knowing sarcasm, I think the benchmark game's operators consciously reject the idea that there are "definitive answers" here
[23:38:10] <pyzozord> I use it more for getting some general perspective
[23:38:25] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[23:38:32] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:38:41] <oldlaptop> in part because writing the program in different languages necessarily requires comparing *different programs*
[23:38:45] *** Quits: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[23:38:45] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[23:38:46] <pulse> pyzozord, yeah many benchmarks have bias one way or the other. have to be careful about it
[23:38:49] *** Quits: Leone (~Leo@108.175.224.215) (Read error: Connection reset by peer)
[23:38:50] *** Joins: operateur (~operateur@109-93-127-25.dynamic.isp.telekom.rs)
[23:39:14] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[23:39:30] <nomagno> Comparing languages is kinda pointless when you get into hard numbers
[23:39:34] <oldlaptop> (rigidly literal translation between languages is its own problem, because that can easily be accidentally optimal for one implementation and pessimal for another)
[23:39:41] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[23:40:36] <Decker> you can still get a general overview it's not that they're entirely useless either - but they're a light weight bag, so don't put too much weight in it?
[23:40:51] <oldlaptop> or even optimal or pessimal at the *language* level, when things like tailcall elimination are formally in a language's specification (and not in another)
[23:40:55] <vdamewood> Whenever I see a project with a terrible name, I should remember the names classical and baroque musicians gave to their compositions.
[23:42:03] <oldlaptop> vdamewood: (caveat: these are often not actually "names" that the composers gave their compositions in a meaningful sense)
[23:42:21] <Decker> I am surpised Java did so well though
[23:43:13] *** Quits: operateur (~operateur@109-93-127-25.dynamic.isp.telekom.rs) (Ping timeout: 250 seconds)
[23:43:15] <oldlaptop> BWV846 is not really a work named "Prelude and Fugue in C major", it is a component part of a work named "The Well-Tempered Clavier"
[23:43:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b6e6:595d:7721:df0a) (Quit: Leaving)
[23:43:34] *** Quits: terminalpusher (~terminalp@2a01:586:8e51:1:3197:8117:4d18:b86c) (Remote host closed the connection)
[23:43:47] <oldlaptop> which is admittedly not as cool a name as, say, The Art Of Fugue
[23:44:19] <pulse> i always thought nginx is a terrible name
[23:44:24] * ski . o O ( s/tailcall elimination/proper tail recursion/ )
[23:44:27] <oldlaptop> (especially in the original Deutcsh)
[23:44:34] <pulse> i know it stands for "engine x" but if you try to pronounce it as "nginx" you break your tongue
[23:45:02] <oldlaptop> Or even the Deutsch
[23:45:10] <pulse> well, maybe if you pronounce it as "n jinx", then it works
[23:45:36] <vdamewood> ŋiŋks
[23:46:03] *** Joins: cybercrysis (~cybercrys@190-198-104-174.dyn.dsl.cantv.net)
[23:46:27] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[23:46:30] <pyzozord> engine-x
[23:46:32] <pulse> ŋ_ŋ
[23:46:48] <vdamewood> oldlaptop: Actually, now that I think of it, quite a few compositions had decent names: The Magic Flute. A Little Nightmusic. etc.
[23:46:57] *** Quits: emf (~emf@163.114.132.7) (Ping timeout: 240 seconds)
[23:47:15] <oldlaptop> Operas sort of naturally attract real names
[23:47:24] <pyzozord> n-jin-x
[23:47:43] <pulse> i always wanted to name a program with a human name
[23:47:48] <pulse> James the web server
[23:47:53] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[23:47:56] <pulse> Tom the image viewer
[23:48:01] <pulse> it works in my mind
[23:48:04] <pyzozord> there is Tomcat
[23:48:05] *** Joins: flakland (~flaknet99@32.211.211.39)
[23:48:09] <vdamewood> But Toccata and Fugue in D Minor is a terrible name.
[23:48:17] *** Joins: joilerv (~joilerv@135.129.250.144)
[23:48:20] <GeDaMo> There's a TV channel in the UK called Dave :P
[23:48:28] <pulse> Ralph the XML parser
[23:48:32] <pyzozord> let's not forget Json
[23:48:33] <pulse> it works i swear
[23:48:39] <vdamewood> Ralph breaks the Internet
[23:48:42] <oldlaptop> vdamewood: It's not really a name.
[23:48:42] *** Quits: joilerv (~joilerv@135.129.250.144) (Client Quit)
[23:48:43] <pulse> Jason the json parser, yeah i guess
[23:49:07] <user51> at this rate, i'll name my language beef
[23:49:16] <pyzozord> there are only two things difficult in computer science
[23:49:28] <pulse> pyzozord, naming things, cache invalidation, and off by one errors
[23:49:33] <oldlaptop> I think of such things as, basically, untitled works.
[23:49:37] <pyzozord> precisely :)
[23:49:39] <vdamewood> oldlaptop: Is it more like someone found an old manuscript of collection, and said "This starts out with a toccata and goes into a fugue, and it's in D minor... so T&F in Dm"?
[23:49:49] <vdamewood> s/of collection/or collection/
[23:49:51] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:49:59] <user51> pulse: how many bits is that
[23:50:15] <oldlaptop> Indeed; in that particular case it's not really even *certain* who wrote the thing
[23:50:19] *** Joins: emf (~emf@2620:10d:c090:400::5:e4c1)
[23:50:31] <vdamewood> oldlaptop: Yeah, it was only 'probably' JS Bach.
[23:50:32] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[23:50:57] <oldlaptop> IIRC, if it was his, it's way ahead of its time
[23:51:16] *** Joins: tangy (~tangy@user/tangy)
[23:51:38] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[23:51:43] <oldlaptop> (we are, however, talking about the fellow who invented the solo keyboard concerto in... was that the 1730s?)
[23:52:14] <vdamewood> Yeah, so no surprise if JS Bach was ahead of his time here and there.
[23:52:26] <pulse> user51, i don't understand the q
[23:52:32] <oldlaptop> (Nope! Wikipedia, The Source Of All Knowledge: 1721 or earlier)
[23:52:42] <pulse> i wonder if i should install debian on my physical linux box too
[23:52:47] <pulse> it's kinda nice
[23:53:03] <vdamewood> So, even earlier.
[23:53:35] <vdamewood> mrig ... You're here?
[23:55:45] *** Quits: skipper (~whatsupbo@user/scobydoo) (Quit: quit quit quit)
[23:55:45] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[23:57:48] *** Joins: joilerv (~joilerv@135.129.250.144)
[23:58:25] <ski> "it stands for \"engine x\"" -- never heard before
[23:58:31] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
