[00:28:46] *** Joins: Lycurgus (~juan@98.4.112.204)
[00:34:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[00:36:56] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:47:18] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[00:55:29] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:00:12] <hayley> https://blog.rust-lang.org/2022/03/08/cve-2022-24713.html LMAO
[01:00:13] -ixelp- Security advisory for the regex crate (CVE-2022-24713) | Rust Blog
[01:00:24] <hayley> "Unfortunately a bug was discovered in the mitigations designed to prevent untrusted regexes to take an arbitrary amount of time during parsing, and it's possible to craft regexes that bypass such mitigations. This makes it possible to perform denial of service attacks by sending specially crafted regexes to services accepting user-controlled, untrusted regexes."
[01:04:21] <hayley> "The regex compiler will happily attempt to compile '(?:){294967295}' by compiling the empty sub-expression 294,967,295 times. Empty sub-expressions don't use any memory in the current implementation, so this doesn't trigger the pre-existing machinery for stopping compilation early if the regex object gets too big. The end result is that while compilation will eventually succeed, it takes a very long time to do so."
[01:04:26] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[01:06:30] <hayley> "Bro I'm Skipping 12:30 one will be down in vault working on my previous stuff a bit" Oh, fuck you too. /me has to look for yet another work partner.
[01:08:20] <shka> apparently Russian's moved in without signal platoons in their units
[01:08:29] <shka> ... impressive
[01:16:42] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[01:18:57] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 250 seconds)
[01:19:48] *** Quits: Brucio-61 (~Brucio-67@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 268 seconds)
[01:28:03] *** Quits: random-nick (~random-ni@87.116.176.196) (Quit: quit)
[01:30:54] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[01:31:07] *** Joins: random-nick (~random-ni@87.116.167.125)
[01:40:08] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:43:31] <waleee> shka: they went full soviet now, the banks were prohibited from selling foreign currency
[01:43:43] <shka> no wonder
[01:44:01] <shka> they are supposed to buy back bonds on 16
[01:44:41] <shka> and now they are in situation as Poland in the 80s
[01:49:04] <pjb>  /clear
[01:51:59] <hayley> ^[[H^[[2J^[[3J
[01:52:51] <waleee> vim-bindings is life
[01:53:19] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[01:59:31] *** Joins: Brucio-61 (~Brucio-67@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[02:06:16] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[02:12:29] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 252 seconds)
[02:19:52] *** Joins: Lycurgus (~juan@98.4.112.204)
[02:20:50] <waleee> 35
[02:20:53] <waleee> oops
[02:21:12] <waleee> (I follow to many channels)
[02:21:14] <gilberth> 36
[02:21:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[02:26:09] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[02:26:32] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[02:29:00] <hayley> https://twitter.com/bakerposting/status/1501331527317135362
[02:32:33] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[02:33:33] *** Joins: ln43 (~ln43@user/ln43)
[02:59:45] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[03:09:26] *** Quits: pjb (~pjb@user/pjb) (Read error: Connection reset by peer)
[03:11:21] *** Quits: neominimum (sid537410@user/neominimum) (Ping timeout: 252 seconds)
[03:11:21] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[03:11:54] *** Quits: dbotton (sid492350@id-492350.lymington.irccloud.com) (Ping timeout: 252 seconds)
[03:12:06] *** Joins: neominimum (sid537410@user/neominimum)
[03:12:25] *** Joins: dbotton (sid492350@id-492350.lymington.irccloud.com)
[03:12:34] *** Joins: pl (sid98063@id-98063.helmsley.irccloud.com)
[03:13:33] *** Quits: hayley (~theemacss@user/hayley) (Ping timeout: 252 seconds)
[03:19:30] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:26:51] *** Joins: hayley (~theemacss@user/hayley)
[03:30:19] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[03:31:24] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[03:33:45] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[03:34:27] <hayley> "Indexing an array is O(1)" you posted cache miss prepare to lose subscriber
[03:34:31] * hayley in algorithms class
[03:34:59] <pl> :D
[03:35:28] <moon-child> hayley: it's bounded, it still counts
[03:35:43] <hayley> ):<
[03:35:56] <hayley> It's O(sqrt(N)) for N words in your memory.
[03:36:06] <moon-child> dw when n gets big enough you get limited by the speed of light and how much memory you can cram into a given volume of space
[03:37:14] <hayley> "How's using both ends of a doubly linked list going to help?" "would it be o(n/2) because you have [sic] effectively the list"
[03:37:24] <hayley> Ah yes, O(n/2)
[03:37:29] <moon-child> lol
[03:38:03] <moon-child> you've heard of O(1), now get ready for O(1/2)
[03:38:15] <hayley> Boyer-Moore goes brrr
[03:39:44] <hayley> "What is the difference in efficiency between searching for the first element and counting all the matching elements?" What a stupid question, they do different things.
[03:39:55] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 240 seconds)
[03:40:12] <hayley> s/do different/produce different/ if you care.
[03:40:30] <moon-child> that doesn't mean you can't compare them
[03:40:46] <hayley> Think I might leave (more) early so I won't be late for the next class, which is on campus.
[03:41:48] <hayley> moon-child: I mean, I guess, but "efficiency" is poorly defined when one scans up to a match, and one scans every element. The units are different.
[03:42:17] <hayley> (When I think of efficiency, I think of the time / unit of work ratio, and scanning every element is more work.)
[03:43:59] <moon-child> well, how about this: is binary search more efficient than linear search?
[03:44:04] <gilberth> I'd rather go with O(1/n).
[03:44:20] <moon-child> on average, linear search is going to work on n elements, and binary search is only going to work on logn elements
[03:44:33] <moon-child> so in that respect you can't compare them.  But I think most people would agree binary search is more efficient
[03:44:46] <moon-child> I see early-exit as a similar sort of optimization
[03:44:50] <hayley> Yeah, but POSITION and COUNT produce different results, whereas (for sorted sequences) linear search and binary search are functionally equivalent.
[03:44:59] <Alfr> gilberth, hm ... just make your problem larger and win. :D
[03:45:06] * hayley asks the lecturer, "Does it make sense to compare these?" "Not really."
[03:45:49] <hayley> The only time POSITION can be substituted for COUNT is (ZEROP (COUNT e x)) == (NOT (NULL (POSITION e x))) but both have to scan all the sequence.
[03:45:56] <moon-child> sure, but they're related enough.  Imagine an implementation of POSITION which finds _all_ the positions and then takes the first, vs one which just stops at the first
[03:46:04] <hayley> Erm, (NULL (POSITION e x))
[03:46:06] <gilberth> In general you often find that say an O(log n) is because of all the administrative overhead smaller in practice than O(n) for very small n.
[03:46:11] <hayley> I guess.
[03:46:51] <moon-child> gilberth: constant factors kill
[03:46:59] <hayley> Onto the bus then.
[03:47:17] <moon-child> .oO(constant-time COUNT with multiprocessors?)
[03:47:27] <moon-child> hmm no that would be log
[03:47:35] <moon-child> but getting all the indices could be constant
[03:47:58] <gilberth> And one of my profs once said: "Even if you know some nifty O(log n) [or whatever] efficient algorithm, are you sure you could implement it correctly? In the middle of the night when I just threw you out of bed? Without coffee even?"
[03:48:25] <moon-child> well that's clearly bullshit
[03:48:51] <Alfr> I'm quite sure you could, gilberth. You're usually well rested in the middle of the night.
[03:48:55] <moon-child> the trees were a mistake, let's go back to the oceans; I can't trust myself to implement even the O(n) algorithm correctly
[03:49:26] <gilberth> Alfr: Perhaps. Then take a logical night.
[03:50:24] <Alfr> moon-child, off by n/2, because off by O(1) has become all to common? :)
[03:51:20] <moon-child>  hmm.  So if halving the runtime of your algorithm takes you from O(n) to O(n/2), then just do it twice and you can get all the way to O(0)!
[03:52:01] <Alfr> moon-child, in my universe O(n) and O(n/2) are the same.
[03:52:18] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[03:53:06] <gilberth> Alfr: You missed moon-child's hidden 'm'. He was talking about O(n/2^m). This even beats by O(1/n).
[03:53:39] <gilberth> my, rather.
[03:55:02] <Alfr> Blame it on a bad type setter and negligent proofreader!
[03:55:19] <gilberth> But it was fun to see how O calculus applies to solving jigsaw puzzles too.
[03:56:50] <gilberth> As my wife once asked me how long a 5,000 pieces puzzle would take based on the experience we had with 2,000 pieces puzzles.
[03:58:09] <gilberth> Jigsaw puzzles are O(n^2). At first she didn't believe me until we solved the new 5k puzzle.
[03:59:27] <gilberth> Same thing happened with Corona numbers. Calling me paranoid because I predicted infection counts she didn't believe at first.
[04:03:43] <GreaseMonkey> O(1) after applying an O(2^n) lookup
[04:03:56] <kakuhen> asymptotics are counterintuitive at times
[04:05:15] <Alfr> kakuhen, why?
[04:06:03] *** Quits: cyberbanjo (~user@2607:fb90:42b7:213f:732e:306d:a6f3:7f1) (Remote host closed the connection)
[04:06:21] <kakuhen> i mean it for prediction
[04:06:34] <gilberth> Well to some they are. I remember a fellow students struggled with O calculus.
[04:06:41] <kakuhen> most people are not good at reasoning about exponential or even cubic growth
[04:07:17] <kakuhen> or if you want my favorite contrived example: ask anyone new to math to compare n! and n^n
[04:07:48] <gilberth> In my experience most people have difficulties to believe that say n^3 outruns 10000 * n^2 eventually.
[04:09:28] *** Joins: lisp123 (~lisp123@120.154.103.52)
[04:09:59] <gilberth> Somehow the brain expects linear growth or something. So if something starts out huge but grows slowly, it's hard to see that something else which starts tiny but grows rapidly would outpace the former.
[04:12:55] <Alfr> kakuhen, why's that hard? For when both are defined: n^n >= n!
[04:13:44] <Alfr> gilberth, and most things also tend to have an upper bound.
[04:13:48] <kakuhen> ask that to the countless students ive tutored who struggle with thay comparison
[04:13:53] <kakuhen> that*
[04:14:48] <gilberth> Alfr: In nature, yes. When resources are exhausted.
[04:15:19] <Alfr> gilberth, not many people argue about maths for the sake of it.
[04:25:57] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[04:43:05] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[04:46:04] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[04:46:05] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[04:52:37] <gilberth> My first struggle with O calculus was as I wanted to implement a sort routine in BASIC. I had no formal education, no books, no other code to look at, no nothing, so I needed to come up with something on my own. I was rather disappointed that my sort routine didn't scale.
[04:56:41] <gilberth> I don't remember the algorithm I came up with. Must have been bubble sort or insertion sort or sth. It was clear to me that would needed to be more clever than that.
[04:59:31] <Alfr> There are still very fast compared to some described in: https://www.mipmip.org/tidbits/pasa.pdf
[04:59:46] <Alfr> s/There/These/
[05:05:43] <gilberth> Heh.
[05:11:35] <gilberth> Anyhow, my experience was very painful. I came up with radix-sort which helped a bit. Then I realized that some divide et impera approach should work.
[05:13:16] <moon-child> landed on mergesort?
[05:14:25] <gilberth> That's decades ago. I don't remember. But, yes, perhaps.
[05:41:24] *** Joins: Lycurgus (~juan@98.4.112.204)
[05:41:53] *** Joins: cyberbanjo (~user@2607:fb90:42b7:213f:db43:ae3e:7744:5cba)
[05:57:55] <gilberth> Oh dear, my cousin is concerned that we won't be able to heat the house by next week. Or something. *sigh*
[06:24:33] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[06:40:08] <gilberth> When I write a medium, which would just emit the drawing primitives invokes as s-expressions, would that be a good format for a vector graphics file? Hmm.
[06:42:08] <gilberth> Next question: When libX11 got away with .xbm as a file format, is there something similar for Lisp or the Lisp machine?
[06:42:50] <moon-child> ha!
[06:43:59] <gilberth> Yeah, I mean I could dump a lambda expression which when applied to a medium would draw the thing. It's easy. Not trivial, but easy.
[06:45:42] <gilberth> Well for font metrics you would need to make the usual bets, but that is just a minor detail.
[06:49:21] <gilberth> Forget Display PostScript! We just talk CLIM to the display server. Problem solved.
[06:49:55] *** Quits: notzmv (~zmv@user/notzmv) (Remote host closed the connection)
[06:52:12] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[06:56:30] *** Joins: notzmv (~zmv@user/notzmv)
[07:02:02] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[07:03:45] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:24:58] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[07:26:36] *** Joins: aeth (~aeth@user/aeth)
[07:47:55] *** Joins: semz_ (~semz@user/semz)
[07:50:38] *** Quits: semz (~semz@user/semz) (Ping timeout: 260 seconds)
[08:03:17] *** Joins: robin (~robin@user/terpri)
[08:07:24] * hayley back from university
[08:07:49] <hayley> The two hour workshop consisted of 0.5 hours of work, and 1.5 hours of telling stories about study last year.
[08:08:02] *** Quits: santiagopim (~user@90.167.66.93) (Ping timeout: 268 seconds)
[08:08:43] <hayley> (Half of the work was going through fuzz/property-based testing, as a non-answer to the question "How many test cases should you write?")
[08:09:28] <dave0> 69 !
[08:11:38] <hayley> Guess I should write a cover letter for that Ravenpack opening. In 4 + ε hours I want to show up for the MMTk porting meeting.
[08:12:45] <drakonis> ravenpack opening?
[08:14:03] <drakonis> data analytics company huh
[08:25:16] <hayley> How long's a CV to Europeans? I read it's what is often called a résumé in USA (and seemingly Australia).
[08:28:49] <moon-child> I heard somebody (american) complaining recently that he got 5-6 page CVs from brits
[08:28:55] <moon-child> but I think it's different in different eu countries
[08:31:05] <hayley> https://www.apple.com/newsroom/2022/03/apple-unveils-m1-ultra-the-worlds-most-powerful-chip-for-a-personal-computer/
[08:31:06] -ixelp- Apple unveils M1 Ultra, the world’s most powerful chip for a personal computer - Apple
[08:31:18] <hayley> "A CV for Spain is usually no longer than 2 pages. Any CV more than two pages is considered too long in Spain." Well.
[08:31:30] <hayley> Easy enough. As they mention distributed programming I better mention Netfarm then.
[08:32:00] <edgar-rft> if your CV is longer than 2 pages you clearly lived too long
[08:32:12] <dave0> put down "world record holder for speed running super mario bros"
[08:34:34] <edgar-rft> in germany a CV is from birth until today, but you usually write only things that are important for the particular job
[08:36:15] <edgar-rft> for example, I worked in over 30 different jobs, when I *don't* want a job I write really *everything* to drive them nuts
[08:39:31] <edgar-rft> I even was a goatherd for one-and-a-half year, what is a really important information when you apply for a tech job :-)
[08:46:11] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Read error: Connection reset by peer)
[08:49:55] <dave0> oh wow was there baby goats?
[08:51:14] <dave0> awwww https://i.ytimg.com/vi/YxEzN8SLqkk/hqdefault.jpg
[08:51:59] <edgar-rft> dave0: yes, once a year they had babies, but the babies and their mothers were at the farm in the stable, while I was out in the country with the herd
[08:52:21] <dave0> cool
[08:53:03] <dave0> babies are cute
[09:06:47] <moon-child> http://judy.sourceforge.net/application/shop_interm.pdf  'Hashing causes myopia and possibly even brain damage among programmers who use it frequently'
[09:11:34] <hayley> https://www.youtube.com/watch?v=BhYKN21olBw ← hayley after inventing 42nd-at-threadmill
[09:11:35] -ixelp- Brain Damage - YouTube
[09:11:46] * hayley now writes cover letter
[09:13:55] *** Quits: cyberbanjo (~user@2607:fb90:42b7:213f:db43:ae3e:7744:5cba) (Remote host closed the connection)
[09:37:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[09:37:49] <dave0> what's better? "I hereby place this file into the public domain." or "Unlimited distribution." ?
[09:38:47] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[09:55:55] <kakuhen> my friend's implicitly "all rights reserved" license but it's ok because he refuses to enforce copyright 
[09:56:17] <hayley> Sure your friend won't sue you?
[10:01:20] *** Joins: pjb (~pjb@user/pjb)
[10:10:05] <hayley> "[0309/174909.304409:ERROR:gl_implementation.cc(277)] Failed to load /usr/share/steam-games/GarrysMod/bin/linux64/swiftshader/libGLESv2.so: /usr/share/steam-games/GarrysMod/bin/linux64/swiftshader/libGLESv2.so: cannot open shared object file: No such file or directory" Hooray.
[10:10:41] <moon-child> isn't swiftshader a software implementation of vulkan?
[10:11:08] <hayley> Right.
[10:11:11] * hayley keeps reading logs
[10:11:18] <hayley> "gl::init::InitializeStaticGLBindingsOneOff failed"
[10:12:26] <moon-child> see, that's what comes of using a stateful graphics api, where you have to bind and unbind shit
[10:14:04] <hayley> I only pacman -Syu'ed yesterday, after not doing that for an unknown amount of time.
[10:14:47] <hayley> https://forums.gentoo.org/viewtopic-p-8680426.html claims correlation with updating libc. idk
[10:14:49] -ixelp- Gentoo Forums :: View topic - [SOLVED] Garry's Mod broken after updating glibc
[10:16:26] <hayley> Apparently it has to do with sandboxing too.
[10:19:43] *** Quits: robin (~robin@user/terpri) (Read error: Connection reset by peer)
[10:20:16] *** Joins: robin (~robin@user/terpri)
[10:30:51] * hayley got it working by using someone's patches.
[10:43:03] * hayley also spots pretty bad drift on Bakerposting-on-Twitter's posting. It should be every two hours. This seems to be like two hours + 7 minutes.
[10:44:58] *** Quits: robin (~robin@user/terpri) (Quit: Leaving)
[10:53:24] *** semz_ is now known as semz
[11:00:38] <hayley> Funny that people ask me why I bother with a degree, since I sound like I could get a job already. Thing is, I can't apply for most jobs without a degree in hand.
[11:07:21] <moon-child> I got a job with no degree
[11:07:46] <moon-child> granted, the reason is probably that I got very lucky by impressing the hell out of the first interviewer by namedropping c, common lisp, mathematica, and event-sourcing ... still
[11:09:24] <hayley> Yes, and I happened to know beach was hiring three days after I needed a job.
[11:09:39] <hayley> Anything else, well..
[11:13:24] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[11:16:12] *** Joins: lisp123 (~lisp123@120.154.103.52)
[11:21:50] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[11:27:57] * hayley overloads Python things in an offensive manner
[11:28:01] <hayley> all / (Op(lambda x: x % 2 == 0) < [2,4,6,8]) ⇒ True
[11:29:30] <hayley> Sadly Python does not accept ∧ as a function name. ):
[11:38:14] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[11:41:13] *** Joins: shka (~herr@109.231.3.55)
[11:52:12] *** Joins: robin (~robin@user/terpri)
[12:23:09] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[12:23:14] *** Joins: silasfox (~sbv@p548d123f.dip0.t-ipconnect.de)
[12:23:18] <qhong> I recall seeing a historical architecture design where you have one core per chip, and you can scale the computer by connecting chips in grids, with each one connecting to its neighbors
[12:23:31] <qhong> but I can't recall the name. any idea?
[12:23:54] <moon-child> that's still done
[12:24:35] <qhong> any name? I recall the historical design was advertised for its low cost
[12:24:41] <moon-child> https://regmedia.co.uk/2020/08/17/ibm_power10_summary.pdf  e.g.
[12:24:56] <moon-child> 'interconnect'?  I don't know of anything more specific than that
[12:25:23] <qhong> not exactly the kind of network described in that PDF
[12:25:48] <moon-child> they describe 3 different networks; none of those?
[12:26:08] <hayley> https://twitter.com/bakerposting is accumulating posting slowly.
[12:26:22] *** Joins: notzmv (~zmv@user/notzmv)
[12:26:24] <qhong> the CPUs form a lattice, so it is (from an hardware aspect) very modular and infinitely scalable
[12:26:36] <qhong> each CPU has only 4 (or 8?) connections
[12:26:48] <qhong> ofc there need to be work on software to make good use of this topology
[12:27:13] <moon-child> isn't that what they show on slide 10?
[12:28:20] <qhong> ah yes basically
[12:28:44] <qhong> the arrangement shown is permuted on slide 10, I assume it's to reduce boundary effect
[12:29:24] <qhong> I still want to find that historical design though, it's interesting because it's targeted for low cost ordinary computing rather than HPC
[12:29:35] <qhong> and in theory you can stack it at home like LEGO
[12:31:12] <silasfox> This sounds to me like Chuck Moore's Forth Chip design. I think his company's called "Green Chips" or "Green Arrays" or something like that.
[12:32:25] <moon-child> I don't think that's much different from an ordinary multiprocessor
[12:39:36] <qhong> silasfox: I think that's close, thanks. I digged around a bit and found Epiphany, but it's relatively new and not sure if it's what I once saw.
[12:40:44] <qhong> moon-child: I in general dislike integrating two much stuff into one chip, it's like programming with top-level definition as basic unit vs file as basic unit. I hope we can have more introspectable and hackable computers
[12:41:37] <qhong> Not sure if splitting up single chip into multiple really helps, though. The binary voltage levels on the wire is probably pretty unreadable from oscilliscope
[12:42:35] <moon-child> you have to balance
[12:42:37] <moon-child> always
[12:42:55] <moon-child> too much modularity, you get lost in a sea of abstraction.  Too much unification, you end up repeating yourself
[12:44:42] <qhong> moon-child: I don't think there's a dichotomy between modularity and abstraction on hardware level. You pretty much can't do any abstraction at all on hardware level 
[12:45:00] <moon-child> not between modularity and abstraction
[12:45:03] <qhong> There's no LAMBDA or even LET. You always have to make two copies of your circuit
[12:45:04] <moon-child> between modularity and unification
[12:45:19] <moon-child> and I'm talking generally
[13:07:01] *** Joins: CyberneticRev (~akshay@2600:1700:13d0:66b0:4f52:31c:642e:56c6)
[13:09:55] *** Joins: sthalik (~sthalik@tunnel146824-pt.tunnel.tserv28.waw1.ipv6.he.net)
[13:15:40] *** Quits: CyberneticRev (~akshay@2600:1700:13d0:66b0:4f52:31c:642e:56c6) (Remote host closed the connection)
[13:16:18] *** Joins: CyberneticRev (~akshay@2600:1700:13d0:66b0:4f52:31c:642e:56c6)
[13:17:01] <CyberneticRev> Hi
[13:21:00] <dave0> is it `systolic array` ? https://en.wikipedia.org/wiki/Systolic_array
[13:22:44] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[13:32:08] <qhong> dave0: I think the idea is similar, whil systolic array being a quite general term and nowadays typically refer to single chip for HPC.
[13:41:48] * hayley back from MMTk meeting
[13:50:19] <ck_> dave0: sounds very cardiological
[13:50:34] <dave0> o_O
[13:51:18] <ck_> "What's your array pressure bro?"  'Systolic or Diastolic?'
[13:52:16] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:f478:9921:6149:8ddc)
[14:30:48] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[14:31:13] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[14:35:20] * moon-child grumbles at firefox
[14:35:30] <moon-child> there is some race condition or something
[14:35:46] <moon-child> when I enter a uri, press enter, and then quickly open a new tab
[14:36:05] <moon-child> the uri is loaded in the newly opened tab
[14:37:04] <moon-child> I think this happens less often than the random scrolling bug, but it is more annoying
[14:37:56] <edgar-rft> conditional racism is bad
[14:38:08] <hayley> I think I have seen that, maybe.
[14:38:58] <moon-child> edgar-rft: is unconditional racism better?
[14:39:00] <moon-child> well, I guess it is
[14:39:04] <moon-child> hate all races equally
[14:39:07] <moon-child> ...
[14:40:57] <moon-child> I feel like a grumpy old man when I say: one of these days, I'll get around to switching to chrome
[14:42:35] <edgar-rft> in the modern internet days "old man yells a cloud" suddenly has a meaning :-) 
[14:42:56] <edgar-rft> *yells *at* cloud
[14:42:56] <moon-child> :D
[14:43:48] <moon-child> (I strongly suspect that my open tab count exceeds 1000, and that this has something to do with the bugs I encounter.  Still, no excuse)
[14:56:59] <selwyn> good morning everyone
[14:57:45] <Gnuxie> hello
[15:08:54] <hayley> Good morning beach!
[15:20:00] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:33:58] <SAL9000> moon-child: have you considered https://github.com/rNeomy/auto-tab-discard or similar?
[15:33:59] -ixelp- GitHub - rNeomy/auto-tab-discard: Use native tab discarding method to automatically reduce memory usage of inactive tabs
[15:36:08] <hayley> I still have to wonder who in marketing decided to come up with and/or allow calling it the C4 collector.
[15:36:14] <hayley> They use plastic explosives to reuse garbage memory?
[15:36:42] <shka> marketing was not involved :P
[15:36:54] <SAL9000> maybe it's actually C4 = CCCC = Charlie's Circular Collector Collection or something :D
[15:37:36] <hayley> It is "continually compacting concurrent collector" or something, but the abbreviation is...not the most fortunate.
[15:38:04] <SAL9000> agreed
[15:38:10] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:38:21] <SAL9000> not something to mention in an airport
[15:38:37] <hayley> shka: VM internals still call it "GPGC" (generational pauseless GC) or something, and I think that name came first, before the paper even. So I wonder why someone changed the name.
[15:51:00] <notzmv> good morning everyone ouo
[15:51:03] <hayley> A generational pauseless GC is apparently hard to grasp, with few exceptions (e.g. experimental forks of ZGC and Shenandoah, also OCaml). I would have stuck with GPGC.
[15:51:06] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[15:51:17] *** Joins: Lycurgus (~juan@98.4.112.204)
[15:51:28] <hayley> ouo
[15:52:22] <Lycurgus> ami
[15:55:24] <Lycurgus> TIL, you can run lw as an inferior lisp with slime, dunno about sly
[16:07:00] *** Quits: CyberneticRev (~akshay@2600:1700:13d0:66b0:4f52:31c:642e:56c6) (Ping timeout: 240 seconds)
[16:46:12] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[17:02:14] <gilberth> Good morning #lispcafe!
[17:03:12] <Lycurgus> yello gilberth 
[17:11:58] *** Joins: jeosol (~jeosol@user/jeosol)
[17:27:59] <ck_> yello o/~
[17:28:04] <ck_> the moon -- beautiful.
[17:28:08] <ck_> the sun -- even more beautiful
[17:31:25] <ck_> https://www.youtube.com/watch?v=ApIA3OQCQkQ
[17:31:26] -ixelp- Yello - Oh Yeah - YouTube
[17:33:00] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:37:27] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[17:37:35] *** Quits: Brucio-61 (~Brucio-67@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[17:39:58] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[17:41:32] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[17:53:31] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[17:59:16] <lagash> hayley: the explosive is always written as C-4 AFAIK
[18:08:59] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[18:20:57] <gilberth> When I open a .png with Firefox, Preview.app, or Safari I get different colours. Why? And which one is correct?
[18:32:38] <edgar-rft> welcome to the wonderful world of incompatible color models
[18:35:49] <gilberth> Indeed. Worse yet, I found two types of pixmaps with Cocoa. One distorts colour, the other does not. And surprisingly you don't find documentation about the colour space that Cocoa uses besides you could say you want "Calibrated RGB". Which one? sRGB? ITU-R BT.709? Adobe even?
[18:42:36] <edgar-rft> Even if you know that you would also need to know the color space and model the specific image file uses and this information is usually even less available.
[18:49:50] *** Joins: Brucio-61 (~Brucio-42@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[18:51:37] <gilberth> Perhaps.
[19:01:02] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[19:02:31] <edgar-rft> if it makes you happy: on linux it's even worse
[19:03:44] <gilberth> I guess so. But it's rather disappointing because I want to be correct with regard to colour spaces. Or at least I want to specify that I should be correct.
[19:06:30] <ck_> could it be the gamma correction?
[19:07:11] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[19:07:52] <gilberth> ck_: Perhaps. I need to have a look as the file in question has a gamma chunk. Or rather: I ought to craft pngs with different gamma chunks and see if that changes things.
[19:07:59] <edgar-rft> What I can tell is that professional TV broadcast has completely switched to Avid Media Composer mainly because the graphis hardware, the drivers, plus all video and image related software is from the same manufacturer and all are using the same color space an color model.
[19:10:29] <gilberth> Well, it puzzles me a bit. That's all. I lean towards a cheap solution and just state that CLIM:MAKE-RGB-COLOR refers to the common sRGB color space. I would like to make this linear but hesitate a bit because that's not common.
[19:10:30] <ck_> gilberth: can you point me to an example file? I only have screenshots in png lying around and they look the same on screen
[19:10:57] <ck_> previews info (cmd+i), then (i), shows a profile name
[19:12:16] <ck_> the profile name is "PHL 328P6VU", which is different form the colour profile set in the display system preference
[19:12:20] <ck_> well.. who knows
[19:12:43] <gilberth> Sure, I am looking at the "made with Lisp" logo. Here is the copy that I found on the internet: <http://clim.rocks/gilbert/some-copy-of-made-with-lisp.png>
[19:12:57] <edgar-rft> There are several dozen color spaces an even more different color models from many different manufactureres, it's pretty much a mess. mfiano is currently writing a CL library for transforming color spaces, he's usually available on #commonlisp and #clprojects
[19:13:52] <gilberth> The blue is a bit darker with Firefox than with Preview.app on my system.
[19:14:21] <ck_> interesting
[19:15:14] <gilberth> edgar-rft: Yep. Anyhow, I am not too concerned atm. I could fix glitches, bugs, conversion, etc. latter once I came up with a sane, feasible spec / API of what ought to happen.
[19:15:50] <ck_> https://imgur.com/a/g7319Sp
[19:15:50] -ixelp- Imgur: The magic of the Internet
[19:16:25] <ck_> (fltr: safari, ffox, preview), that's on macos 12.2.1
[19:17:30] <gilberth> It's an utter mess. When I use CGImage as off screen pixel storage I get different colours from using a CGLayer. So even Cocoa is inconsistent here.
[19:19:05] <gilberth> ck_: Looks like a gamma issue to me. Interesting.
[19:23:17] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:23:58] <gilberth> I mean the marked edge in <http://clim.rocks/gilbert/hmm.png> on the lhs has more contrast than in the middle. Hasn't it?
[19:24:49] <gilberth> I would need to play with the gAMA chunk I found. Perhaps this is the culprit.
[19:29:17] <ck_> gilberth: that seems to be an optical illusion, the "digital colour meter" says the values are identical
[19:30:55] <edgar-rft> do imperalists use "digital color feet"? :-)
[19:40:36] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[19:42:19] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:11:10] <gilberth> Anyhow. I manipulated the gAMA chunk. Here you go: <http://clim.rocks/gilbert/fun-with-png/> or <http://clim.rocks/gilbert/fun-with-png/index.html>
[20:11:11] -ixelp- /gilbert/fun-with-png/
[20:12:01] <gilberth> ck_: Oh dear, really? I shouldn't trust my eyes then.
[20:13:30] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[20:22:29] <gilberth> Here is what I see with a gamma of 9.6: <http://clim.rocks/gilbert/fun-with-png/screenshot.png>
[20:23:19] <gilberth> So there is some different handling here.
[20:25:59] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[20:27:54] *** Quits: X-Scale (~ARM@31.22.167.35) (Ping timeout: 272 seconds)
[20:27:55] *** X-Scale` is now known as X-Scale
[20:28:47] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Remote host closed the connection)
[20:34:20] <gilberth> Ok. When I tell netpbm to actually listen to the gAMA chunk it agrees with the darker rendering.
[20:38:24] <gilberth> Anyhow for this particular file: Is there any canonical source? Who made it?
[20:42:51] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[20:43:09] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[20:55:30] <ck_> Xah Lee says "Manfred Spiller"
[20:56:12] <ck_> https://web.archive.org/web/20051126033302/http://www.normal-null.de/lisp_logo.html
[21:00:03] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[21:01:16] <gilberth> ck_: Cool! Thanks a lot.
[21:16:14] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[21:18:06] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:21:45] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Client Quit)
[21:23:28] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:34:05] *** Quits: silasfox (~sbv@p548d123f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:15:40] *** Joins: silasfox (~sbv@p200300cec714c80015b1d3d0a473d324.dip0.t-ipconnect.de)
[22:27:12] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:f478:9921:6149:8ddc) (Remote host closed the connection)
[22:29:10] *** Joins: Lycurgus (~juan@98.4.112.204)
[22:42:24] <clothespin> hello
[22:53:51] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[22:59:25] <gilberth> o/
[23:03:48] *** Quits: silasfox (~sbv@p200300cec714c80015b1d3d0a473d324.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:19:18] <gilberth> Besides .gif, .png, and .jpeg what would be the most useful bitmap file formats to support?
[23:22:39] <gilberth> I really come across any different file formats.
[23:22:50] <gilberth> rarely
[23:23:12] <random-nick> webp?
[23:24:37] <GreaseMonkey> i'd support bmp way before i attempt to support webp
[23:24:57] <gilberth> IIRC there is some command line tool to unpack those. Easy.
[23:25:09] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[23:26:41] *** Joins: aeth (~aeth@user/aeth)
[23:26:59] <gilberth> BMP? Windows?
[23:27:06] <GreaseMonkey> yes
[23:27:09] <GreaseMonkey> ...why does WebP have an animated form
[23:27:25] <GreaseMonkey> WebP started out as literally "VP8, but in single image form"
[23:27:37] <gilberth> Perhaps because GIF has?
[23:28:05] <gilberth> Ok. I use netpbm anyway, so support for BMP or WEBP (w/o animation) will be easy.
[23:29:04] <GreaseMonkey> there is a lossless form for WebP which has its own modification of deflate
[23:29:35] *** Joins: bosonbear (~user@2a05:f480:1800:663:5400:3ff:fee5:48ad)
[23:34:44] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 250 seconds)
[23:36:39] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[23:41:22] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[23:45:54] <kakuhen> supporting webp will be annoying unless you only target lossless (so 0% of webps out there)
[23:46:57] <kakuhen> webp is basically "lets take vp9 and use it for image compression"
[23:47:47] <gilberth> Isn't the dwepb tool supposed to handle all of WEBP?
[23:48:06] <gilberth> dwebp, I guess :)
[23:48:40] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:49:51] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[23:52:01] <kakuhen> ah if you're calling into libwebp then it wont be an issue
[23:52:20] <kakuhen> i figured you were going to do this in lisp & without FFIs
[23:53:14] <kakuhen> <GreaseMonkey> "...why does WebP have an..." <- to be a "viable replacement" to GIF and APNG
[23:53:27] <gilberth> I don't have the time to re-implement everything. That's not my goal.
[23:53:27] <kakuhen> its the same idea behind animated heif
[23:53:56] <gilberth> And I prefer to spawn external decoders. This isn't any slower and way safer.
[23:55:01] <random-nick> yeah webp is actually just 2 different formats
[23:55:47] <random-nick> I don't understand why didn't they give them different file extensions since users probably want to differentiate between lossy and lossless anyway
[23:56:30] <random-nick> also, why didn't the browser vendors implement MNG?
[23:56:41] <kakuhen> CDNs saving on bandwidth matter more than end-users
[23:56:53] <kakuhen> i suppose that is what happened while designing webp
[23:57:04] <kakuhen> to be fair, jpeg also has a lossless mode
[23:57:26] <kakuhen> but i dont think anyone ever uses it
[23:57:54] <random-nick> yeah, it's called jpeg 2000
[23:58:25] <GreaseMonkey> put it this way, APNG eventually made it to Chrome after years of "we're not modifying libpng"
[23:58:33] <GreaseMonkey> MNG on the other hand got the boot
[23:58:58] <GreaseMonkey> also JPEG 2000 is completely different from JPEG
[23:59:10] <random-nick> MNG is PNG consortium approved, so why not MNG?
[23:59:20] <GreaseMonkey> it's heavier and it's also not backed by Google
[23:59:24] <GreaseMonkey> the only reason WebP is even in browsers is because it's backed by Google
[23:59:29] <kakuhen> same reason google blocked theora
[23:59:35] <kakuhen> not-invented-here
