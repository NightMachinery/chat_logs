[00:01:34] <jkordani> sorry this is taking me a minute to hash out
[00:05:59] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[00:06:23] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:06:40] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Remote host closed the connection)
[00:10:59] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[00:11:21] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:11:31] *** Quits: even4void (even4void@came.here.for-some.fun) (Quit: fBNC - https://bnc4free.com)
[00:12:08] *** Quits: robin (~robin@user/terpri) (Ping timeout: 268 seconds)
[00:13:36] *** Joins: Inline (~Inline@aftr-37-201-240-202.unity-media.net)
[00:17:25] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (Ping timeout: 240 seconds)
[00:19:32] *** Quits: Inline (~Inline@aftr-37-201-240-202.unity-media.net) (Ping timeout: 268 seconds)
[00:21:03] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[00:22:30] *** Joins: phantomics (~phantomic@97-118-135-6.hlrn.qwest.net)
[00:23:28] *** Joins: francogrex (~user@91.86.121.230)
[00:23:59] <francogrex> by mistake I first logged into freenode/lisp, can you imagine there are still a few losers there
[00:26:05] *** Quits: francogrex (~user@91.86.121.230) (Remote host closed the connection)
[00:26:37] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (Ping timeout: 240 seconds)
[00:27:23] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[00:27:43] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[00:28:15] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[00:28:22] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[00:29:59] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:31:10] *** Joins: Inline (~Inline@aftr-37-201-240-202.unity-media.net)
[00:31:51] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[00:32:21] *** Joins: Alfr (~Alfr@user/alfr)
[00:32:24] <jackdaniel> people who talk or rather bots / stall reconnecting sessions?
[00:33:17] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[00:33:47] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[00:34:06] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:34:08] <jkordani> of course my endpoint goes down while I'm testing against it....
[00:36:21] *** Quits: Inline (~Inline@aftr-37-201-240-202.unity-media.net) (Ping timeout: 252 seconds)
[00:37:35] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com) (Remote host closed the connection)
[00:38:02] *** Joins: even4void (even4void@came.here.for-some.fun)
[00:39:52] *** Joins: Inline (~Inline@aftr-37-201-240-202.unity-media.net)
[00:41:15] <jkordani> ok, does this constitute a sane approach to the issue? https://pastebin.com/f937snPh
[00:42:15] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:42:19] <wasamasa> the previous questions about the threat model apply
[00:42:46] <wasamasa> when I write software, it's typically for my own use and it retrieves authentication tokens from an environment variable or file
[00:43:11] <wasamasa> I'm the only one looking at it anyway and it's me who provides these
[00:43:37] <wasamasa> if I want to secure it against other users on the same machine, I run it under a dedicated user and make sure others cannot read environment variables/files
[00:43:50] <wasamasa> s/apply/applies/
[00:44:12] <wasamasa> now, you wrote something about distribution as an image being a problem, but why?
[00:44:53] <wasamasa> are you trying to distribute ready to run software that comes with its own credentials the users are not supposed to see?
[00:46:36] <jkordani> by sane I mean the passing of extra args from higher level wrappers
[00:47:09] *** Joins: karlosz (~karlosz@47.151.136.69)
[00:47:15] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[00:47:16] <jkordani> I didn't mean to imply I intended to ship this as an image.Â  I suppose we could drop the topic
[00:47:25] <jkordani> right now I'm at the point where only I am going to use this
[00:50:53] <pjb> jkordani: https://termbin.com/q45n
[00:51:19] <pjb> jkordani: you're not overriding any &rest argument list, so there's no need for apply!
[00:51:40] <jkordani> hmm
[00:51:45] <pjb> jkordani: and don't use def* forms inside bodies, only toplevel.
[00:52:02] <jkordani> i guess in this case I'm lucky in that the lower level function to be wrapped takes a list of parameters directly
[00:52:35] <pjb> Yes.
[00:54:30] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 265 seconds)
[01:16:57] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[01:18:03] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[01:19:40] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[01:19:49] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:20:23] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:21:45] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[01:25:06] *** Joins: Algernon91 (~Algernon6@88.124.69.179)
[01:25:33] *** Joins: Algernon666 (~Algernon6@2a04:cec0:11c9:46f0:fdbe:d59b:c078:c909)
[01:29:20] *** Quits: Algernon91 (~Algernon6@88.124.69.179) (Ping timeout: 252 seconds)
[01:30:59] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 252 seconds)
[01:31:52] <jkordani> pjb: bodies?
[01:32:16] <pjb> jkordani: what's inside defun for example.
[01:32:39] <jkordani> I don't think I've done that, unless you were just giving me a general reminder
[01:32:59] <pjb> jkordani: you've used defparameter inside defun.
[01:33:26] <jkordani> oh oops, its been a while since I've written common lisp and I'm clearly rusty
[01:39:55] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:40:10] *** Quits: Avichi (~Avichi@lithe.xs4all.nl) (Ping timeout: 256 seconds)
[01:41:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:41:44] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:42:16] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[01:42:37] *** Joins: taiju (~taiju@240b:253:ec40:2400:651e:f83b:5890:99a6)
[01:45:25] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[01:51:17] *** Joins: notzmv (~zmv@user/notzmv)
[01:53:53] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[01:54:54] *** Joins: pillton (~user@123-243-238-10.static.tpgi.com.au)
[01:56:35] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:57:15] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:59:01] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[01:59:26] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:00:12] *** Quits: strajder (~strajder@user/strajder) (Quit: nn)
[02:15:28] *** Quits: trip_fandango (~tripfanda@2a00:a040:19e:72a1:4501:4dfb:ee8d:2344) (Ping timeout: 268 seconds)
[02:15:55] *** Quits: monkey_ (~user@181.114.17.106) (Remote host closed the connection)
[02:16:31] *** Joins: mtreis (~mtreis@024-181-180-008.res.spectrum.com)
[02:19:28] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[02:19:48] *** Joins: trip_fandango (~tripfanda@2a00:a040:19e:72a1:688f:66f1:d486:f1e7)
[02:28:35] *** Joins: luis3 (~luis@lisp/luis)
[02:28:36] *** ChanServ sets mode: +o luis3
[02:30:23] *** Quits: luis (~luis@lisp/luis) (Ping timeout: 252 seconds)
[02:30:23] *** luis3 is now known as luis
[02:36:57] <jkordani> Thanks for the help everyone
[02:43:56] *** Joins: lisp123 (~lisp123@5.30.23.247)
[02:48:21] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[02:48:24] *** Quits: artchad (~user@public-gprs229282.centertel.pl) (Read error: Connection reset by peer)
[02:48:33] *** Joins: random-nickname (~random-ni@87.116.181.93)
[02:50:39] *** Quits: trip_fandango (~tripfanda@2a00:a040:19e:72a1:688f:66f1:d486:f1e7) (Quit: WeeChat 3.3)
[02:50:57] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:688f:66f1:d486:f1e7)
[02:51:49] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 240 seconds)
[02:52:26] *** Quits: mtreis (~mtreis@024-181-180-008.res.spectrum.com) (Ping timeout: 265 seconds)
[03:02:17] *** Quits: Algernon666 (~Algernon6@2a04:cec0:11c9:46f0:fdbe:d59b:c078:c909) (Ping timeout: 252 seconds)
[03:04:31] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 265 seconds)
[03:07:45] *** Joins: dra (~dra@2a04:4540:640e:a200:8c47:9799:e734:67e7)
[03:08:54] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[03:09:31] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[03:16:43] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[03:19:53] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[03:34:13] *** Quits: VincentVega (~user@212.241.25.167) (Ping timeout: 240 seconds)
[03:35:27] *** Quits: taiju (~taiju@240b:253:ec40:2400:651e:f83b:5890:99a6) (Ping timeout: 265 seconds)
[03:38:15] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[03:41:32] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[03:41:49] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 240 seconds)
[03:50:54] *** Quits: yewscion (~yewscion@52.94.133.131) (Quit: Connection closed)
[04:00:55] *** Joins: dra_ (~dra@2a04:4540:6408:da00:8c47:9799:e734:67e7)
[04:02:16] *** Joins: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com)
[04:03:02] *** Joins: livoreno (~livoreno@user/notzmv)
[04:03:35] *** Quits: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net) (Ping timeout: 256 seconds)
[04:03:54] *** Joins: blihp (~phil@c-68-43-233-92.hsd1.mi.comcast.net)
[04:04:00] *** Quits: dra (~dra@2a04:4540:640e:a200:8c47:9799:e734:67e7) (Ping timeout: 268 seconds)
[04:08:29] *** Quits: blihp (~phil@c-68-43-233-92.hsd1.mi.comcast.net) (Client Quit)
[04:26:12] *** Quits: jao (~jao@194.99.104.13) (Ping timeout: 265 seconds)
[04:34:23] *** Joins: galex-713 (~quassel@galex-713.eu)
[04:34:32] *** Quits: Colleen (~fermion@supersolid.equilibrium.tymoon.eu) (Read error: Connection reset by peer)
[04:35:43] *** Quits: dra_ (~dra@2a04:4540:6408:da00:8c47:9799:e734:67e7) (Remote host closed the connection)
[04:37:31] *** Quits: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[04:40:47] *** Joins: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com)
[04:44:57] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[04:45:27] *** Joins: lisp123 (~lisp123@5.30.23.247)
[04:49:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[04:55:01] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[04:55:31] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[04:56:13] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:688f:66f1:d486:f1e7) (Ping timeout: 240 seconds)
[04:58:14] *** Joins: Alfr (~Alfr@user/alfr)
[05:02:28] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Quit: Updating details, brb)
[05:02:43] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[05:07:51] *** Joins: xiews (~wxie@2409:8945:3000:1443:db06:ae7a:357d:f257)
[05:08:30] *** Joins: random-nick_ (~random-ni@87.116.181.93)
[05:09:57] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Quit: Client closed)
[05:10:17] *** Joins: [deleted] (~livoreno@user/notzmv)
[05:10:37] *** Quits: krid (~krid@102-10-133-N4.customer.vsm.sh) (Ping timeout: 240 seconds)
[05:12:05] *** Quits: random-nickname (~random-ni@87.116.181.93) (Ping timeout: 252 seconds)
[05:13:49] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[05:15:21] *** Quits: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[05:31:12] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[05:39:11] *** Quits: random-nick_ (~random-ni@87.116.181.93) (Ping timeout: 265 seconds)
[05:39:49] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[05:40:02] *** Joins: asarch (~asarch@187.143.46.224)
[06:06:58] *** Joins: sirquack (~sirquack@2601:643:8680:526:e42d:b9b7:d8c5:b17d)
[06:09:38] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[06:13:39] *** Joins: livoreno (~livoreno@user/notzmv)
[06:19:32] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[06:19:39] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[06:19:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:22:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[06:24:37] *** Joins: livoreno (~livoreno@user/notzmv)
[06:28:16] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[06:29:29] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[06:30:03] *** Quits: sander (~sander@user/sander) (Quit: So long! :))
[06:31:32] *** Joins: sander (~sander@user/sander)
[06:42:30] *** Quits: sirquack (~sirquack@2601:643:8680:526:e42d:b9b7:d8c5:b17d) (Ping timeout: 265 seconds)
[06:44:48] *** Joins: yewscion (~yewscion@c-73-214-119-161.hsd1.pa.comcast.net)
[06:46:56] *** Joins: lisp123 (~lisp123@5.30.23.247)
[06:51:27] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[06:54:12] *** Quits: asarch (~asarch@187.143.46.224) (Quit: Leaving)
[06:54:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[06:54:56] *** Quits: lisp123 (~lisp123@5.30.23.247) (Client Quit)
[06:56:51] *** Joins: karlosz (~karlosz@47.151.136.69)
[06:58:56] *** Quits: yewscion (~yewscion@c-73-214-119-161.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[07:04:39] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 252 seconds)
[07:08:42] *** Joins: Algernon666 (~Algernon6@88.124.69.179)
[07:12:26] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:01] *** Quits: Algernon666 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[07:14:17] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:26:37] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[07:28:43] *** Joins: livoreno (~livoreno@user/notzmv)
[07:38:02] *** Joins: sirquack (~sirquack@2601:643:8680:526:ec10:fb70:d703:512a)
[07:53:03] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[08:29:24] *** Quits: livoreno (~livoreno@user/notzmv) (Quit: Quit)
[08:29:41] *** Joins: livoreno (~livoreno@user/notzmv)
[08:29:59] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[08:30:45] *** Joins: livoreno (~livoreno@user/notzmv)
[08:42:42] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Read error: Connection reset by peer)
[08:58:04] *** Joins: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net)
[09:07:32] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[09:25:49] *** Quits: sirquack (~sirquack@2601:643:8680:526:ec10:fb70:d703:512a) (Ping timeout: 252 seconds)
[09:26:44] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[09:31:05] *** Joins: yewscion (~yewscion@c-24-131-220-23.hsd1.pa.comcast.net)
[09:41:43] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[09:47:25] *** Joins: Everything (~Everythin@37.115.210.35)
[09:50:54] *** Quits: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[10:00:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:05:38] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Ping timeout: 256 seconds)
[10:23:35] *** Joins: asarch (~asarch@187.143.46.224)
[10:25:39] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:25:49] *** Quits: fourier (~fourier@c-5eea21ee-74736162.cust.telenor.se) (Ping timeout: 240 seconds)
[10:27:09] *** Joins: fourier (~fourier@c-5eea2259-74736162.cust.telenor.se)
[10:32:13] *** Joins: fourier_ (~fourier@c-5eea2160-74736162.cust.telenor.se)
[10:32:34] *** Quits: fourier (~fourier@c-5eea2259-74736162.cust.telenor.se) (Ping timeout: 265 seconds)
[10:36:41] *** Quits: asarch (~asarch@187.143.46.224) (Quit: Leaving)
[10:38:03] *** Quits: yewscion (~yewscion@c-24-131-220-23.hsd1.pa.comcast.net) (Quit: Connection closed)
[10:44:05] *** Joins: shka (~herr@109.231.0.226)
[10:45:33] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[10:46:03] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[10:53:51] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:c5a0:6ed5:7827:1544)
[11:02:47] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:07:36] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[11:17:17] *** Quits: xiews (~wxie@2409:8945:3000:1443:db06:ae7a:357d:f257) (Ping timeout: 252 seconds)
[11:17:49] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[11:18:36] *** Joins: amb007 (~a_bakic@36.151.22.93.rev.sfr.net)
[11:40:07] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Remote host closed the connection)
[11:44:47] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[11:46:23] *** Joins: skapata (~Skapata@user/skapata)
[11:58:37] *** Quits: amb007 (~a_bakic@36.151.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[11:59:08] *** Joins: amb007 (~a_bakic@177.14.23.93.rev.sfr.net)
[12:05:39] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:07:53] *** Quits: amb007 (~a_bakic@177.14.23.93.rev.sfr.net) (Ping timeout: 252 seconds)
[12:08:32] *** Joins: amb007 (~a_bakic@145.148.22.93.rev.sfr.net)
[12:10:54] *** Joins: notzmv (~zmv@user/notzmv)
[12:11:52] *** Quits: amb007 (~a_bakic@145.148.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[12:13:44] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[12:14:17] *** Joins: Algernon91 (~Algernon6@2a04:cec0:11c9:46f0:81c8:22d1:4b3e:fb86)
[12:14:29] *** Quits: tsuru (~charlie@2600:1700:5d51:26ff:ff74:fdb8:a461:6cfa) (Ping timeout: 252 seconds)
[12:15:25] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 240 seconds)
[12:17:49] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:c5a0:6ed5:7827:1544) (Ping timeout: 240 seconds)
[12:17:57] *** Joins: Alfr (~Alfr@user/alfr)
[12:19:20] *** Joins: tsuru (~charlie@99-97-140-18.lightspeed.nsvltn.sbcglobal.net)
[12:30:08] *** Quits: psi[m] (~psikdeorg@2001:470:69fc:105::948f) (Quit: You have been kicked for being idle)
[12:30:54] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:d82b:5203:e894:5496)
[12:35:24] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[12:39:04] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: No Ping reply in 180 seconds.)
[12:40:33] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:48:02] *** Joins: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8)
[12:50:51] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:55:08] *** Quits: Inline (~Inline@aftr-37-201-240-202.unity-media.net) (Ping timeout: 256 seconds)
[13:02:53] *** Quits: dre (~dre@60.229.45.121) (Ping timeout: 265 seconds)
[13:06:02] *** Joins: krid (~krid@102-10-133-N4.customer.vsm.sh)
[13:16:27] *** Quits: madagest (~madage@user/madage) (Ping timeout: 276 seconds)
[13:17:56] *** Quits: Svjatoslav (~Svjatosla@62.210.108.187) (Quit: ZNC - https://znc.in)
[13:18:46] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:d82b:5203:e894:5496) (Read error: Connection reset by peer)
[13:20:05] *** Joins: tripfandango (~tripfanda@5.29.28.78)
[13:21:54] *** Joins: madage (~madage@user/madage)
[13:27:07] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[13:27:22] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[13:39:59] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:41:04] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[13:41:09] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:43:52] *** Lord_of_Life_ is now known as Lord_of_Life
[14:02:01] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (Ping timeout: 245 seconds)
[14:02:10] *** Joins: xiews (~wxie@2409:8945:3060:346:d646:8b2e:b577:c502)
[14:03:39] *** Joins: kennyd (~bc8165b6@cerf.good1.com)
[14:07:41] *** Quits: pillton (~user@123-243-238-10.static.tpgi.com.au) (Remote host closed the connection)
[14:08:42] *** Joins: VincentVega (~user@212.241.29.230)
[14:15:47] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[14:18:40] *** Joins: king (~king@123.118.74.105)
[14:24:17] *** Quits: galex-713 (~quassel@galex-713.eu) (Ping timeout: 252 seconds)
[14:24:19] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[14:29:56] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:33:23] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[14:36:18] *** Joins: random-nick_ (~random-ni@87.116.181.93)
[14:40:51] *** Quits: king (~king@123.118.74.105) (Quit: king)
[14:45:00] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:45:21] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 265 seconds)
[14:45:33] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[14:46:03] *** Joins: amb007 (~a_bakic@179.148.22.93.rev.sfr.net)
[14:46:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[14:48:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:50:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[14:50:18] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:53:06] *** Quits: amb007 (~a_bakic@179.148.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[14:53:20] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[14:53:54] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[14:54:47] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:20:32] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[15:20:41] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[15:20:45] *** Joins: madage (~madage@user/madage)
[15:25:53] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[15:26:19] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:38:04] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[15:38:33] *** Quits: xiews (~wxie@2409:8945:3060:346:d646:8b2e:b577:c502) (Read error: Connection reset by peer)
[15:39:10] *** Joins: parnikkapore (~parnikkap@user/parnikkapore)
[15:39:18] *** Joins: xiews (~wxie@2409:8945:3060:346:d646:8b2e:b577:c502)
[15:40:05] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[15:46:23] *** Quits: xiews (~wxie@2409:8945:3060:346:d646:8b2e:b577:c502) (Ping timeout: 268 seconds)
[16:00:49] *** Quits: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:01:56] *** Joins: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[16:03:52] *** Quits: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (Client Quit)
[16:05:34] *** Joins: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[16:19:10] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:9d3b:11aa:5f90:4aa5)
[16:20:43] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:28:35] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[16:37:34] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[16:38:27] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[16:39:20] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[16:57:11] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 252 seconds)
[16:58:10] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:02:46] *** Joins: simendsjo (~user@84.211.91.241)
[17:05:36] <simendsjo> I'm having some problems with my lisp setup. Trying `(ql:quickload :my-project)` fails as it tries to load the files starting from `/tmp` instead of the path of the asd. I have to set `:pathname /full/path/to/my-project` for it to work. Guess I have some wrong sly setup, but I cannot find it atm. Any ideas?
[17:06:17] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:9d3b:11aa:5f90:4aa5) (Quit: Client closed)
[17:15:49] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 240 seconds)
[17:16:36] <jackdaniel> did you just C-c C-c the defsystem firm?
[17:16:50] <jackdaniel> they are compiled in /tmp indeed
[17:17:08] <jackdaniel> try to c-c C-k for file compilation
[17:17:55] *** Joins: hisacro (~OBSD@my.displ.nl)
[17:24:37] *** Quits: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) (Ping timeout: 240 seconds)
[17:26:17] *** Quits: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Ping timeout: 268 seconds)
[17:27:14] *** Joins: xiews (~wxie@2409:8945:3060:346:14e0:7b98:3b53:cf5c)
[17:27:53] <simendsjo> Thanks! Yes, that was exactly what I was doing wrong. It makes sense :)
[17:34:03] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (Remote host closed the connection)
[17:36:14] *** Quits: payphone (dd09ba4109@2604:bf00:561:2000::20b) (Remote host closed the connection)
[17:36:14] *** Quits: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce) (Remote host closed the connection)
[17:36:14] *** Quits: zoglesby (f0f8ca1525@user/zoglesby) (Remote host closed the connection)
[17:36:14] *** Quits: Schnouki (e7aa4cfb39@user/schnouki) (Remote host closed the connection)
[17:36:14] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[17:36:14] *** Quits: sirufer (68f46fc7c3@user/sirufer) (Remote host closed the connection)
[17:36:14] *** Quits: j0ni (c79e08d4b1@2604:bf00:561:2000::2a) (Remote host closed the connection)
[17:36:35] *** Joins: sirufer (68f46fc7c3@user/sirufer)
[17:36:35] *** Joins: j0ni (c79e08d4b1@2604:bf00:561:2000::2a)
[17:36:35] *** Joins: Schnouki (e7aa4cfb39@user/schnouki)
[17:36:35] *** Joins: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce)
[17:36:43] *** Joins: payphone (dd09ba4109@2604:bf00:561:2000::20b)
[17:36:43] *** Joins: zoglesby (f0f8ca1525@user/zoglesby)
[17:36:49] *** Joins: sm2n (ae95cb1267@user/sm2n)
[17:36:50] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[17:37:57] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[17:38:40] *** Quits: parnikkapore (~parnikkap@user/parnikkapore) (Remote host closed the connection)
[17:39:15] *** Joins: parnikkapore (~parnikkap@user/parnikkapore)
[17:39:25] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[17:44:11] *** Quits: parnikkapore (~parnikkap@user/parnikkapore) (Ping timeout: 265 seconds)
[17:58:21] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[17:58:49] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:59:39] *** Quits: random-nick_ (~random-ni@87.116.181.93) (Ping timeout: 265 seconds)
[18:00:15] *** Joins: NetNoodler (~TwoNotes@99-184-79-0.lightspeed.jcvlfl.sbcglobal.net)
[18:01:09] <NetNoodler> Is there a notation to embed a control character within a string literal in CL?  (I am using SBCL)
[18:08:24] <amazigh> Try #commonlisp if nobody respond
[18:17:54] *** Quits: NetNoodler (~TwoNotes@99-184-79-0.lightspeed.jcvlfl.sbcglobal.net) (Quit: Leaving)
[18:24:43] *** Joins: Algernon666 (~Algernon6@2a04:cec0:11d8:819b:81c8:22d1:4b3e:fb86)
[18:28:10] *** Quits: Algernon91 (~Algernon6@2a04:cec0:11c9:46f0:81c8:22d1:4b3e:fb86) (Ping timeout: 265 seconds)
[18:33:06] *** Joins: Inline (~Inline@aftr-37-201-241-222.unity-media.net)
[18:35:13] *** Joins: monkey_ (~user@181.114.17.106)
[18:37:41] *** Joins: sirquack (~sirquack@2601:643:8680:526:ec10:fb70:d703:512a)
[18:38:06] <pdietz> No, because Common Lisp doesn't standardly have control characters.
[18:38:10] *** Joins: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net)
[18:38:58] *** Joins: thomasb06 (~thomasb06@leat141.unice.fr)
[18:40:06] <jkordani> Googling this is proving difficult, but isn't there a way to edit data when in the slime inspector?Â  I could have sworn I used to do it in the past but I can't seem to find how to do it anymore
[18:42:35] *** Quits: thomasb06 (~thomasb06@leat141.unice.fr) (Remote host closed the connection)
[18:42:37] <phadthai> it probably depends, for instance with the CL condition system applications or libraries can have restarts allowing to alter input
[18:44:59] <phadthai> then since slime is a layer depending on what swank provides, it probably also depends on the capabilities of the lisp and implementation
[18:45:59] <phadthai> unless you only mean the emacs buffer
[18:46:14] *** Quits: dash[m] (~washortgr@2001:470:69fc:105::8d8) (Quit: Reconnecting)
[18:46:30] *** Joins: dash[m] (~washortgr@2001:470:69fc:105::8d8)
[18:47:01] *** Quits: VincentVega (~user@212.241.29.230) (Ping timeout: 240 seconds)
[18:51:27] <jkordani> nope that makes sense
[18:52:07] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Quit: Client closed)
[18:52:18] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[18:55:00] *** Joins: parnikkapore (~parnikkap@user/parnikkapore)
[18:55:04] *** Quits: xiews (~wxie@2409:8945:3060:346:14e0:7b98:3b53:cf5c) (Remote host closed the connection)
[19:03:01] *** Quits: fourier_ (~fourier@c-5eea2160-74736162.cust.telenor.se) (Ping timeout: 240 seconds)
[19:03:22] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[19:04:27] *** Joins: fourier (~fourier@customer-89-255-226-149.stosn.net)
[19:14:53] *** Joins: contrapunctus (a75f5b1571@jabberfr.org)
[19:15:06] <contrapunctus> o/
[19:15:56] <contrapunctus> I have a generic protocol in Elisp. 1. Does it make sense to check for preconditions and raise errors in `:before` methods? 2. Is there any way I can have a `:before` method which is run before any and every method which accepts objects of a specific class?
[19:17:51] <pdietz> I don't know about Elisp, but in Common Lisp before methods run before any unqualified method in the standard method combination.
[19:19:52] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[19:22:40] *** Quits: sirquack (~sirquack@2601:643:8680:526:ec10:fb70:d703:512a) (Remote host closed the connection)
[19:22:45] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 252 seconds)
[19:23:02] *** Joins: sirquack (~sirquack@2601:643:8680:526:ec10:fb70:d703:512a)
[19:32:19] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Quit: Client closed)
[19:33:56] *** Quits: sirquack (~sirquack@2601:643:8680:526:ec10:fb70:d703:512a) (Ping timeout: 268 seconds)
[19:39:40] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[19:52:33] <contrapunctus> pdietz: I mean to say, I've got ~20 methods specializing on class A, and I want to add precondition checks to all of them - is there any way to do this? (other than, say, writing a `:before` method for each, or adding a function call to all of them...)
[19:53:26] <pdietz> Ah, so methods on different generic functions.Â  Not that I know of.
[19:54:35] <macaw> Maybe a metaclass approach? But that sounds iffy and I don't know enough about MOP to say more.
[19:55:09] <pdietz> Adding the :before method to each could be automated with a macro (that expands to defgeneric and a method definition).
[19:56:57] *** Joins: strajder (~strajder@user/strajder)
[19:58:04] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 265 seconds)
[19:59:59] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:05:52] *** Joins: pnkp (~parnikkap@user/parnikkapore)
[20:06:42] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[20:07:26] *** Quits: pnkp (~parnikkap@user/parnikkapore) (Client Quit)
[20:08:42] *** Quits: parnikkapore (~parnikkap@user/parnikkapore) (Ping timeout: 265 seconds)
[20:14:14] <contrapunctus> Ah, I could try that. Thanks. ðï¸
[20:30:12] *** Joins: makomo (~makomo@user/makomo)
[20:45:01] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[20:50:21] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:51:08] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[20:58:05] <jkordani> I haven't written macros in a while.Â  https://pastebin.com/hDjT1WAgÂ  When I go to compile the function, I get an error saying that the argument revision-list is not of type list, but how is that even being detected by the compiler, and also, what is it about what I wrote that specifies that that argument must be a list, aside from the convention
[20:58:05] <jkordani> that I use it as such?
[20:59:14] <pjb> Your macro doesn't return a valid form.
[20:59:34] <pjb> jkordani: you can check it with macroexpand
[20:59:34] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[20:59:42] <pjb> (this is how the compiler does it)
[21:00:15] *** Joins: amb007 (~a_bakic@128.148.22.93.rev.sfr.net)
[21:00:15] *** Quits: amb007 (~a_bakic@128.148.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[21:00:29] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[21:00:35] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[21:00:42] *** Joins: amb007 (~a_bakic@128.148.22.93.rev.sfr.net)
[21:00:42] *** Quits: amb007 (~a_bakic@128.148.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[21:00:44] <macaw> I agree with pjb - macroexpand is very, very useful in cases where you _can_ use it.
[21:00:56] <jkordani> so I'm not sure what to look at.Â  My aim is to produce a list, and the form of the list looks right.Â  I think I see that I am returning a form that is being evaluated as a function at compile time, is that what you mean?
[21:01:09] <pjb> jkordani: also, you expect a list in revision-list but you pass a symbol: REVISION-LIST
[21:01:11] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[21:01:11] <jkordani> I mean, when I call macroexpand I see the result I want but I guess I am making assumptions
[21:01:42] <pjb> jkordani: in general, an operator whose name starts with DEF is used to DEFINE stuff, and should not be used in other forms, but only on the toplevel.
[21:02:15] <pjb> jkordani: to be used as a subexpression, you can define a function named MAKE-something  and call it it instead of DEFsomething or DEFINE-something.
[21:02:30] <pjb> jkordani: see for example: DEFpackage vs. MAKE-package
[21:02:37] <yottabyte> hello, I was confused by this code example: https://lispcookbook.github.io/cl-cookbook/files.html#reading-a-file-one-line-at-a-time, why is (read-line stream nil) in there twice and why is ((null line)) there?
[21:02:45] <jkordani> I forgot the convention for naming macros
[21:03:15] <pjb> yottabyte: there are two optional parameters: eof-error-p and eof-value
[21:03:46] <pjb> yottabyte: sorry, you're asking about DO.
[21:04:08] <pjb> yottabyte: it's the syntax of DO: (do ((var initial-form increment-form) â¦) (stop-form result-form) . body)
[21:04:33] <pjb> result-form is optional so you can have (stop-form)  with stop-form = (null line)
[21:04:37] <pjb> hence ((null line)).
[21:04:44] <yottabyte> ohhhh, that makes sense
[21:05:25] <yottabyte> what is an example result-form?
[21:05:44] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 265 seconds)
[21:06:02] *** Joins: amb007 (~a_bakic@128.148.22.93.rev.sfr.net)
[21:06:14] <jkordani> so one question is that I want to pass an argument to a function which will be a list, down to a macro call that expects a list as an argument to be read at read time....
[21:06:36] <pjb> Any expression you want the result of to be the result of the do:  (let ((x (do ((i 1 (1+ i)) (p 1 (* p i))) ((< 10 i) p)))) x) #| --> 3628800 |# 
[21:06:52] <pjb> jkordani: forget about macros.
[21:07:01] <pjb> jkordani: macros are to transform CODE into CODE.
[21:07:09] <pjb> they're not for processing random data.
[21:07:25] <pjb> jkordani: data read at read time is random data.
[21:09:06] <jkordani> then I guess I'm looking for a convenient way to abstract out the construction of a list where some fields have default elements that I might want to change later, without having to touch every place where the list is constructed.Â  Oh I suppose this is why they always say "when you think you need a macro, you usually need a function"
[21:09:27] <jkordani> my c++ template braindeath is leaking I suppose
[21:09:40] <pjb> lists have slots.
[21:10:23] <pjb> fresh lists that you build with operators such as LIST, LIST*, CONS, etc, have mutable cons cells, so you can mutate any of them.
[21:11:06] <pjb> jkordani: now, your lists look more like structures, so you should use defstruct instead.
[21:11:20] <pjb> defstruct lets you specify default values.
[21:12:08] <jkordani> Its probably my lack of experience but it seems a little burdensome to search a template list for the right places to insert values, no?
[21:13:06] <pjb> of course. You want a structure!
[21:16:54] <pjb> jkordani: https://termbin.com/rvq5
[21:17:36] <jkordani> oh wow
[21:17:38] <jkordani> what would we do without you
[21:18:00] <pjb> You would read the books and the standard, and learn by yourself.
[21:19:24] <jkordani> well I guess I'm not sure what kind of answer I expected, but thank you for your help
[21:19:32] <pjb> jkordani: a little trick: you can use ERROR in the default value: https://termbin.com/fhxk5
[21:19:43] *** Quits: tripfandango (~tripfanda@5.29.28.78) (Ping timeout: 252 seconds)
[21:19:53] <jkordani> pjb: Hah!
[21:20:12] <pjb> jkordani: and note the use of &aux to bind an initial value for change-sets, computed from the argument of the BOA constructor.
[21:21:34] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:5877:91f7:f6d6:10e7)
[21:22:27] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:29:09] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:29:18] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[21:33:15] *** Joins: simendsjo (~user@84.211.91.241)
[21:39:05] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 265 seconds)
[21:39:41] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[21:42:29] *** Joins: georgy (~bc8165b6@cerf.good1.com)
[21:51:36] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[21:53:57] <contrapunctus> pdietz: on further contemplation, the issue with making a macro that expands to a defgeneric and a defmethod is that this wouldn't follow inheritance (short of the programmer exercising discipline)...is there something (in `cl-generic.el` , perhaps?) which I could extend so as to define a `:before` method which is called before every method specializing on a specific class?
[21:57:51] *** Quits: dbotton (sid492350@lymington.irccloud.com) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: victor_ (sid208353@tinside.irccloud.com) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: alanz (sid110616@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: lukego (sid312033@lymington.irccloud.com) (Ping timeout: 245 seconds)
[21:59:10] *** Joins: alanz (sid110616@id-110616.uxbridge.irccloud.com)
[21:59:20] *** Joins: lukego (sid312033@id-312033.lymington.irccloud.com)
[21:59:21] *** Joins: jsatk (sid304796@id-304796.helmsley.irccloud.com)
[21:59:50] *** Joins: victor_ (sid208353@id-208353.tinside.irccloud.com)
[22:00:02] *** Joins: dbotton (sid492350@id-492350.lymington.irccloud.com)
[22:04:53] *** Joins: Arw (~Arwalk@lfbn-dij-1-167-216.w109-215.abo.wanadoo.fr)
[22:05:55] *** Quits: Arw- (~Arwalk@lfbn-dij-1-959-87.w90-125.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[22:08:35] *** Quits: amb007 (~a_bakic@128.148.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[22:09:09] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[22:12:53] <Spawns_Carpeting> If I wanted to write a library with sbcl that needed to interface with low level system apis (libc), would it be best to use SBCL's FFI stuff or CFFI?
[22:13:12] <Spawns_Carpeting> i am also curious if CFFI is a known trustworthy project
[22:13:42] <Spawns_Carpeting> cffi=common foreign function interface 
[22:14:31] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (Ping timeout: 245 seconds)
[22:17:19] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[22:22:27] <jackdaniel> Spawns_Carpeting: cffi is widely used as the portability layer
[22:22:38] <jackdaniel> it builds on top of the implementation ffi
[22:23:13] <jackdaniel> so yes, it is very trustworthy (and you'll get better support from the community because more people are accustomed with cffi than sbcl-specific ffi)
[22:25:57] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:50d5:bcfc:15ee:afeb)
[22:33:10] *** Quits: letto (~letto@188.26.158.104) (Quit: Konversation terminated!)
[22:35:56] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:38:03] *** Joins: letto (~letto@188.26.158.104)
[22:39:02] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:39:51] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[22:41:01] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:42:59] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[22:43:40] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:51:15] <amazigh> how does CFFI interop with the CL implementation regarding errno?
[22:52:29] <amazigh> errno can be reset by the GC, if the GC interupts in CL before the CL code executed (errno) then the errno would be possibly wrong?
[22:55:58] *** Joins: munger[m] (~mungerenv@2001:470:69fc:105::1:4a77)
[23:06:07] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:06:28] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[23:09:07] *** Joins: Lycurgus (~juan@98.4.112.204)
[23:10:26] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 265 seconds)
[23:11:12] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[23:25:56] *** Quits: runejuhl (~runejuhl@user/runejuhl) (Read error: Connection reset by peer)
[23:29:52] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:31:09] *** Joins: mtreis (~mtreis@024-181-180-008.res.spectrum.com)
[23:35:55] *** Joins: rogersm (~rogersm@90.166.177.48)
[23:38:02] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[23:39:37] <mfiano> errno is a huge pain to work with, even in C
[23:39:40] <wasamasa> in scheme I'd just write a wrapper around C code that communicates errno by return value or such
[23:39:48] *** Joins: aoh__ (~aki@haltp.org)
[23:39:55] <wasamasa> and even that is far from fool proof
[23:40:06] <mfiano> The CFFI manual page for defcvar mentions it won't even work for all libc implementations.
[23:41:16] <mfiano> and, you only get generic libc error messages with strerror(), not with any context as to what function you are checking.
[23:41:24] <mfiano> I hate it. That is all
[23:42:51] *** Quits: simendsjo (~user@84.211.91.241) (Remote host closed the connection)
[23:43:44] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[23:44:30] *** Quits: matthewcroughan_ (~quassel@static.211.38.12.49.clients.your-server.de) (Remote host closed the connection)
[23:44:31] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: aoh (~aki@haltp.org) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: aaronm04 (~user@user/aaronm04) (Ping timeout: 260 seconds)
[23:45:27] *** Joins: Akiva (~Akiva@user/Akiva)
[23:48:06] <amazigh> ok, then I am not alone.
[23:48:20] <amazigh> wasamasa: I will do that.
[23:49:36] <jackdaniel> I've been once tracking an error in ffi
[23:49:44] <jackdaniel> errno: 0, message: operation successful
[23:49:51] <jackdaniel> always fun :)
[23:50:33] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[23:51:12] <amazigh> what I read suggest that according to the  C standard it is unlikely errno would be 0 except just after starting the thread, or they were no error since. According to spec none is supposed to reset errno to 0.
[23:51:13] *** Joins: aaronm04 (~user@user/aaronm04)
[23:51:54] <jackdaniel> that was windows, so perhaps that was one of its quirks? I don't remember, you'd need to dig up some closed issues in the ecl repository
[23:52:06] <amazigh> apparantly it is always set to something non-zero.
[23:54:46] <mfiano> errno being zero is UB
[23:56:38] *** Joins: VincentVega (~user@212.241.29.230)
[23:58:35] <mfiano> At least according to the fbsd implementation of libc. documentation for it in `man errno` says 0 is undefined.
