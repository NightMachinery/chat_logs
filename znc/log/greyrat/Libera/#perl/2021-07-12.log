[00:00:57] *** Joins: xenial-user5 (~androirc@20014C4C17E1D2005DF16E19F566FDF5.unconfigured.pool.telekom.hu)
[00:03:38] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 268 seconds)
[00:33:25] *** coroner is now known as JasperHartline
[00:41:05] *** Quits: sverzel (~sverzel@2001:9b1:26f8:3700:6d9:f5ff:fe82:7f8f) (Read error: Connection reset by peer)
[00:41:24] *** Joins: sverzel (~sverzel@2001:9b1:26f8:3700:6d9:f5ff:fe82:7f8f)
[00:46:14] *** Quits: xenial-user5 (~androirc@20014C4C17E1D2005DF16E19F566FDF5.unconfigured.pool.telekom.hu) (Ping timeout: 255 seconds)
[00:56:37] *** Joins: YaoNai (~YaoNai@user/yaonai)
[00:58:05] *** Joins: sverzel_ (~sverzel@2001:9b1:26ff:6100:6d9:f5ff:fe82:7f8f)
[01:00:38] *** Quits: sverzel (~sverzel@2001:9b1:26f8:3700:6d9:f5ff:fe82:7f8f) (Ping timeout: 255 seconds)
[01:11:14] *** Quits: JasperHartline (~autopsy@ip70-190-125-84.ph.ph.cox.net) (Remote host closed the connection)
[01:11:45] *** Joins: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net)
[01:15:10] *** sverzel_ is now known as sverzel
[01:23:39] *** Parts: YaoNai (~YaoNai@user/yaonai) ()
[01:27:31] *** Joins: nirnam (~nirnam@1.47.129.158)
[01:30:57] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[01:31:05] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[01:54:30] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 265 seconds)
[01:59:57] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:13:16] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[02:18:41] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[02:20:05] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[02:20:43] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[02:20:53] *** silverwhitefish is now known as Guest4772
[02:23:37] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[02:24:34] *** Quits: magla (~gelignite@55d42871.access.ecotel.net) (Quit: Stay safe!)
[02:25:42] <v`> congrats to italy on the, uh, soccer euro fifa euro championship
[02:28:11] <v`> i know it's a big championship, and its europe, and...
[02:28:42] <v`> and fifa was involved or at least, u know, bribed or something, because that's generallly what uget with fifa...
[02:29:07] <v`> or am i conflating that with the IOC
[02:31:02] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[02:31:06] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[02:32:07] *** Joins: anthk_ (~anthk_@92.176.105.30)
[02:32:54] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[02:34:53] <xenu> i think everyone is glad that england lost
[02:35:35] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 265 seconds)
[02:38:54] *** Quits: Guest4772 (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[02:47:48] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[02:47:56] *** silverwhitefish is now known as Guest1016
[02:49:09] *** Parts: Guest1016 (~hidden@47.202.102.10) ()
[02:51:08] *** Joins: akaWolf (~akaWolf@akawolf.org)
[02:58:32] *** Joins: whynot (~whynot@37.73.58.164)
[03:03:19] *** Joins: gry (~quassel@botters/gry)
[03:13:11] *** Joins: semeion (~semeion@user/semeion)
[03:21:49] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:22:08] *** Joins: JasonNYC (~JasonNYC@cpe-67-49-107-16.dc.res.rr.com)
[03:22:31] <JasonNYC> Hi all,
[03:22:45] <JasonNYC> is Fuse stable / reliable / great? https://metacpan.org/pod/Fuse
[03:22:47] <Paperbot> Link title(s): [ Fuse - write filesystems in Perl using FUSE - metacpan.org ]
[03:27:06] *** Quits: adherzog (uid387168@id-387168.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:27:28] <JasonNYC> also I cannot install it for some reasons. Fuse needs Unix::Mknod which doesn't compile on my distro (CentOs)  get an error
[03:29:22] <JasonNYC> https://pasteboard.co/KaK14ko.png  (sorry I couldn't copy text)
[03:29:23] <Paperbot> Link title(s): [ Pasteboard - Uploaded Image ]
[03:29:27] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Quit: leaving)
[03:34:56] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:48:59] <simcop2387> JasonNYC, just force install Unix::Mknod, the tests fail if you aren't root.
[03:50:11] <simcop2387> Wait, that's a different error than j see
[03:50:14] <JasonNYC> but I am root. How would I force install?
[03:50:21] <JasonNYC> ah :)
[03:56:11] *** Joins: seekr (~seekr@130.44.163.10)
[03:58:50] <simcop2387> The module needs an update for glibc 2.28+, you'll have to manually fix and build it at the moment.  By adding "#include <sys/sysmacros.h>" to the Mknod.xs file in the dist.  I thinj even cpan has a look command, if not grab the dist off metacpan.org for Unix::Mknod, and after patching it do: perl Makefile.PL && make && make test && make install
[03:59:30] <simcop2387> Don't know if that's been reported upstream or not
[04:01:22] <JasonNYC> ok thank you, but how can I get this Mknod.xs file? if I call cpan it makes the downloads my itself and then I don't know where the files are, they are proably deleted too?
[04:02:30] <JasonNYC> I guess it might be beyond my skills ;)  I understood half of what you wrote :D
[04:04:44] *** Quits: brtastic (~bartosz@185.24.91.138) (Ping timeout: 272 seconds)
[04:06:05] <simcop2387> https://metacpan.org/pod/Unix::Mknod doewload link on the left, grab it and extract it and it's in the root of the tarball
[04:06:06] <Paperbot> Link title(s): [ Unix::Mknod - Perl extension for mknod, major, minor, and makedev - metacpan.org ]
[04:07:32] <JasonNYC> ok thank you. That's what the cpan command does basically?
[04:07:44] <Grinnz> it's about 40% of what it does
[04:08:25] <Grinnz> the other 60% is installing configure dependencies, configuring, installing runtime+build+test dependencies, testing, and installing
[04:08:37] <JasonNYC> ok :)
[04:09:07] <Grinnz> this dist has no dependencies so you don't have to worry about most of that
[04:09:10] *** Quits: Pali (~pali@user/pali) (Ping timeout: 258 seconds)
[04:09:48] <JasonNYC> so after modifying the xs file I call make with what parameters?
[04:09:54] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[04:10:05] <Grinnz> perl Makefile.PL && make && make test
[04:10:10] <simcop2387> Wonder if I should take that modulemover and fix it.  2007...
[04:10:23] <Grinnz> yeah it's in a suboptimal state
[04:11:03] <JasonNYC> Grinnz: PASS :)
[04:11:23] <JasonNYC> so I did make install
[04:11:54] <JasonNYC> and now cpan Fuse worked :)  fantastic, thank you!
[04:13:33] <JasonNYC> So is this Fuse module great? Is it well written & reliable?
[04:22:59] *** Joins: pj (~pj@ghettoforge/pj)
[04:25:33] <mst> JasonNYC: #perl looks forward to your trip report
[04:26:21] <mst> xenu: I was, it meant everybody fucked off out of the pub
[04:35:24] *** Joins: diskin_ (~diskin@46.41.108.147)
[04:35:24] *** Quits: diskin (~diskin@109.165.84.214) (Killed (NickServ (GHOST command used by diskin_!~diskin@46.41.108.147)))
[04:37:25] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:38:17] *** pragma- is now known as garptastic
[04:38:25] *** garptastic is now known as pragma-
[04:48:26] *** Quits: nirnam (~nirnam@1.47.129.158) (Ping timeout: 252 seconds)
[04:55:19] *** Joins: nirnam (~nirnam@1.47.30.117)
[04:58:54] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[05:03:54] *** Joins: Martchus_ (~martchus@dynamic-095-117-063-172.95.117.pool.telefonica.de)
[05:04:45] *** Quits: Martchus (~martchus@dynamic-077-004-021-061.77.4.pool.telefonica.de) (Ping timeout: 258 seconds)
[05:08:15] *** Joins: Martchus (~martchus@dynamic-095-115-113-232.95.115.pool.telefonica.de)
[05:09:20] *** Quits: Martchus_ (~martchus@dynamic-095-117-063-172.95.117.pool.telefonica.de) (Ping timeout: 272 seconds)
[05:21:24] * GumbyPAN CPAN Upload: Vote-Count-2.01 by BRAINBUZ https://metacpan.org/release/BRAINBUZ/Vote-Count-2.01
[05:27:22] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 258 seconds)
[05:37:13] *** Joins: Martchus_ (~martchus@dynamic-095-115-100-061.95.115.pool.telefonica.de)
[05:38:28] *** Quits: Martchus (~martchus@dynamic-095-115-113-232.95.115.pool.telefonica.de) (Ping timeout: 272 seconds)
[05:46:26] *** Quits: whynot (~whynot@37.73.58.164) (Quit: leaving)
[05:47:07] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 268 seconds)
[05:52:32] *** Joins: gast0n (~g4570n@user/gast0n)
[05:52:56] *** Quits: judabuda (kowbunga@user/judabuda) (Quit: Gone.)
[06:11:33] <simcop2387> Mst, there's a report already 2 years old
[06:14:31] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:ec4e:24df:4152:cf57) (Remote host closed the connection)
[06:14:34] <mst> simcop2387: by trip report I meant -using- it
[06:16:35] *** Joins: Martchus (~martchus@2a01:c22:738c:2900:d250:99ff:fe49:3cce)
[06:17:44] *** Quits: Martchus_ (~martchus@dynamic-095-115-100-061.95.115.pool.telefonica.de) (Ping timeout: 272 seconds)
[06:20:19] <JasonNYC> I just tried the example.pl script, and I find this magical, really :D
[06:20:37] <JasonNYC> the number of possiblities from this FUSE library is unlimited
[06:26:03] *** Joins: Su-Shee_ (~Susanne@p4ffc7273.dip0.t-ipconnect.de)
[06:29:31] *** Quits: Su-Shee (~Susanne@p4ff4968e.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[06:32:35] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[06:37:22] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 272 seconds)
[06:41:55] *** Quits: averell (~averell@irc.nf3.eu) (Quit: .)
[06:42:12] *** Joins: averell (~averell@user/averell)
[06:42:18] *** Quits: Martchus (~martchus@2a01:c22:738c:2900:d250:99ff:fe49:3cce) (Ping timeout: 240 seconds)
[06:42:38] *** Joins: Martchus (~martchus@2a01:c22:7bd1:dd00:d250:99ff:fe49:3cce)
[06:44:09] *** Quits: perlmaros (~perlmaros@master.k-1.com) (Quit: Baba)
[06:44:43] <mst> JasonNYC: FUSE is ace, yes
[06:45:37] <mst> JasonNYC: what I'm primarily curious about is how well it'll work for you as compared to e.g. using FFI::Platypus to bolt the relevant C libraries in that way
[06:46:42] <Adura> Seems a bit dangerous to rely on unless you have a very specific use case that can't be remedied by invoking a script directly.
[06:46:59] <Adura> Pretty cool, though.
[06:50:20] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[06:50:33] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:50:33] *** FinnElija is now known as Guest8527
[06:50:34] *** Quits: Guest8527 (~finn_elij@user/finn-elija/x-0085643) (Killed (sodium.libera.chat (Nickname regained by services)))
[06:50:34] *** finn_elija is now known as FinnElija
[06:51:33] <mst> Adura: eh?
[06:51:51] <mst> Adura: point of FFI::Platypus is "we all suck at writing C, let's not'
[06:52:00] <Adura> Not that, the FUSE module.
[06:52:04] <mst> ohh right
[06:52:21] <mst> FUSE is definitely a trade-off
[06:58:29] * rindolf sees that both mst and him are up early or late
[07:06:46] *** Joins: gry (~quassel@botters/gry)
[07:07:43] * leont never assumes mst is up early ;-)
[07:09:05] *** Joins: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d)
[07:10:16] <mst> leont: generally a good guess
[07:10:42] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[07:11:41] <mst> 8am is about the earliest I get
[07:14:20] <fling> hi
[07:14:26] <mst> lo
[07:15:07] * v` claims the middle ground
[07:17:39] <rindolf> mst: good for you. recently i've been getting up early naturally (and inspired!) despite being happily "unemployed" (and living w my parents).
[07:20:42] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Quit: leaving)
[07:21:01] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[07:23:49] <rindolf> i feel like i've become jesus like: suffering for finding the truths and making the multiverse better for future generations: https://github.com/shlomif/shlomif-tech-diary/blob/master/why-the-so-called-real-world-i-am-trapped-in-makes-little-sense--2020-05-19.asciidoc . i might be wrong tho/
[07:23:50] <Paperbot> Link title(s): [ shlomif-tech-diary/why-the-so-called-real-world-i-am-trapped-in-makes-little-sense--2020-05-19.as... ]
[07:24:13] <mst> rindolf: oh, huh, thanks
[07:25:08] <rindolf> mst: what for?
[07:25:26] <mst> rindolf: you just reminded me to take my psych meds
[07:25:34] <mst> should've done that hours ago
[07:25:35] <mst> ta
[07:26:32] <rindolf> mst: i hate my psych meds, but - you're welcome /
[07:26:58] *** Quits: v` (~v@user/ctrl) (Ping timeout: 246 seconds)
[07:27:12] <mst> rindolf: can't say I love mine, but trade-offs
[07:27:34] <rindolf> mst: what are you diagnosed as?
[07:28:21] <rindolf> feel free to reply in private
[07:29:32] <mst> rindolf: my meds are for depression and anxiety - could probably get a spectrum and an ADHD diagnosis if I went to the trouble, but spectrum is shrug and the ADHD part is fine given my level of caffeine addiction which I need anyway
[07:29:59] <rindolf> mst: ah.
[07:32:10] <leont> The problem with adhd meds is that you need meds to remember the meds
[07:32:26] <mst> leont: I have that exact problem with caffeine ;)
[07:33:13] <mst> but also psych people will pretty much always try and argue against caffeine if they think you have anxiety issues
[07:33:48] <simcop2387> Leont, get a ccat.  Give it treats every morning when you take the meds.  The cat will never let you forget.
[07:33:50] <mst> which given if I wake up on the verge of a panic attack, the most reliable solution is to drink a pint of coffee and go back to sleep for an hour, isn't amazingly helpful
[07:34:30] <rindolf> mst: i didnt get into https://en.wikipedia.org/wiki/Major_depressive_disorder for a while after i read "neo-tech" and mashed it up w judaism/israelism and the muppets and stuff, but i had mild depressions
[07:34:31] <Paperbot> Link title(s): [ Major depressive disorder - Wikipedia ]
[07:35:19] <simcop2387> I wouldn't be shocked if I fall unser that one
[07:35:22] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 240 seconds)
[07:35:29] <mst> rindolf: both my parents died between my 29th birthday and my 30th birthday - it's been eight years now but my brain is still trying to be an ass about it
[07:36:22] <rindolf> well, FOSS / "open/free" / perl / etc too
[07:36:49] <simcop2387> Mst, brains are the worst.
[07:36:55] <rindolf> mst: oh, sorry to hear that
[07:37:00] <mst> it is what it is
[07:37:16] <leont> simcop2387: they are
[07:37:18] <mst> rindolf: eh
[07:37:29] <mst> rindolf: I did nearly punch gabor szabo though ;)
[07:39:27] <mst> he decided to compare my criticising his code to somebody shouting "fuck your mother" at him, three months after I'd buried her ... then when I pointed this out doubled down on the comparison
[07:41:59] <mst> (no, I haven't forgiven him for the double down, not unless he apologises, I'm fair game but she isn't)
[07:42:22] *** Joins: zgu|skaro (~zgu@96-3-133-29-dynamic.midco.net)
[07:42:44] *** Joins: Martchus_ (~martchus@2a01:c23:bc7a:c000:d250:99ff:fe49:3cce)
[07:43:17] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[07:43:23] *** Quits: Martchus (~martchus@2a01:c22:7bd1:dd00:d250:99ff:fe49:3cce) (Ping timeout: 255 seconds)
[07:44:54] <rindolf> mst: oh. "nearly" is good. i think you two should reconcile: https://twitter.com/shlomif/status/1190836549535109120
[07:44:55] <Paperbot> Shlomi Fish (@shlomif) 1y252d ago: "To err is human; to forgive—divine". #saladin forgave the KnightsTemplar 4their murders&vandalism cuz he knew they wouldnt do it again.https://shlomifishswiki.branchable.com/Saladin_Style/ .Why can't u forgive some1 who said sth bad about u or your work?https://en.wikipedia.org/wiki/Sticks_and_Stones #HakunaMatata
[07:45:23] <mst> rindolf: get him to apologise for what he said about her and I'm open to it
[07:47:22] *** Quits: edr (~edr@user/edr) (Ping timeout: 252 seconds)
[07:48:49] <Adura> What an odd story, what does code have to do with mothers...
[07:49:02] *** Joins: v` (~v@user/ctrl)
[07:49:03] *** Joins: edr (~edr@enlo.co)
[07:49:03] *** Quits: edr (~edr@enlo.co) (Changing host)
[07:49:03] *** Joins: edr (~edr@user/edr)
[07:49:21] <rindolf> mst: can you at least forgive him rationally? i may still be tired, but i don't follow your story
[07:49:25] <Adura> Wacky way of quantifying offense, hah.
[07:49:26] <mst> Adura: he takes bug reports really personally, this is not something I've ever been able to comprehend
[07:50:00] <Adura> Maybe his Mom taught him how to code, or something...
[07:51:17] <mst> rindolf: I told him why what he'd said had hurt, and he doubled down on the attack on my dead mother. I'll forgive him when he shows some sign of understanding why that was wrong, and not before.
[07:51:56] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 255 seconds)
[07:52:36] <rindolf> Adura: reminds me of "einstein's mother was a hell of a physicist" joke
[07:52:58] <Adura> Such a bizarre situation.
[07:53:44] <Adura> I've got to be careful to avoid spending too much brain power on easily offended individuals.
[07:53:49] <mst> Adura: I didn't get it at all tbh, I was just proud of myself for not punching him
[07:54:06] <Adura> Heh...
[07:54:36] <rindolf> Adura: also https://www.explainxkcd.com/wiki/index.php/Mrs._Roberts
[07:54:37] <Paperbot> Link title(s): [ Mrs. Roberts - explain xkcd ]
[07:55:15] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[07:55:21] <Adura> I usually don't care about easily offended groups, but sometimes individuals get to me because I get being an individual vs. what can be seen as an attack against me individually.
[07:55:32] <mst> Adura: note also that the triggering incident was him publishing a perlmaven.com article that was supposed to be a demo of a Dancer auth system ... that had *security* holes
[07:56:15] <Adura> Hah... eh... Security holes are fun to find.
[07:56:17] <mst> I feel like security holes in what's supposed to be password handling code should not be something you get angry at people for pointing out
[07:57:32] <Adura> Responsible disclosure should allow for both parties being happy.
[07:58:00] <mst> Adura: I just told him what the problems were, he fixed none of them and got angry at me for criticising his code
[07:58:24] <Adura> Makes you wonder about his motives...
[07:58:30] <mst> Adura: if he'd responsed with "you're a massive asshole" *and* fixed the problems I really wouldn't've minded
[07:58:50] <mst> it's not like I'm necessarily that nice
[07:59:08] <Adura> Certainly you're seen as the more prickly timezone.
[07:59:10] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 258 seconds)
[07:59:27] <mst> but stuff he was shopping around to newbies to use as a template that had security holes was just wrong
[07:59:55] <mst> he could've fixed that *and* criticised me
[08:00:06] <mst> instead he fixed nothing and attacked my dead mother
[08:00:17] <mst> not really a sensible response
[08:00:25] <rindolf> mst: well, you can post follow up posts pointing the technical issues eg like i did in https://shlomif-tech.livejournal.com/14671.html
[08:00:28] <Paperbot> Link title(s): [ Shell Variable Injection - Shlomif's Technical Posts Community — LiveJournal ]
[08:00:41] <mst> rindolf: I POINTED OUT THE TECHNICAL ISSUES
[08:01:11] <mst> rindolf: that's why I'm annoyed!
[08:01:15] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[08:04:39] <Adura> Guess you don't get CVE'd for examples, heh.
[08:06:04] <rindolf> mst: fine. i'll have to "walk away" from advising you - not saying it is yur fault - i just ran out of ideas: https://www.youtube.com/watch?v=_FCld2UJMRg
[08:06:04] <Paperbot> YouTube video linked by rindolf: First Aid Kit - The Gambler (Don Schlitz/Kenny Rogers cover) @ På Spåret - published by Patrik Ivarsson
[08:06:31] <mst> rindolf: totally fair, but at this point you need to talk to him first
[08:06:36] <mst> rindolf: I gave him enough chances
[08:06:52] <rindolf> mst: ok...
[08:06:53] <Adura> Or, just save your brain power and not bother, hah.
[08:07:06] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[08:07:12] <mst> Adura: rindolf can make -that- choice himself
[08:07:18] <mst> I'm just trying to be clear here
[08:07:29] <mst> I'm normally always in favour of forgiving people
[08:07:54] <mst> but gabor has to tell me he'd like to be forgiven first
[08:08:10] <Adura> That he can, maybe he likes a challenge.
[08:08:24] * mst shrugs
[08:08:33] <Adura> Good luck in whatever you try, rindolf .
[08:14:48] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Changing host)
[08:14:48] *** Joins: jmcgnh (~jmcgnh@user/jmcgnh)
[08:21:26] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[08:23:08] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 272 seconds)
[08:28:19] <genio> I think I'm going to have to remove several dists from Strawberry. Crypt::CBC has broken XS, MooseX::Devel is deprecated, Email::Abstract, Crypt::DSA, etc.
[08:28:38] <genio> soooo many things just plain fail on windows
[08:30:32] <genio> Crypt::OpenPGP, Alt::Crypt::RSA::BigInt, Spreadsheet::ParseXLSX, DBIx::Class, and on and on.
[08:31:08] <genio> File::Map, CPANPLUS
[08:31:22] <genio> anyway... bed time
[08:32:19] <leont> File Map should definitely work
[08:32:51] <rindolf> Adura: thank you! i need good luck: https://www.shlomifish.org/meta/FAQ/your_name.xhtml ; https://www.shlomifish.org/philosophy/philosophy/putting-cards-on-the-table-2019-2020/#fear-is-path-to-dark-side
[08:32:52] <Paperbot> Link title(s): [ Shlomi Fish’s FAQ - What can you say about your name? ] [ Putting Cards on the Table (2019-2021) - Shlomi Fish’s Homesite ]
[08:32:52] *** Quits: Affliction (~Afflictio@user/affliction) (Killed (NickServ (GHOST command used by Affliction`!affliction@user/affliction)))
[08:33:18] *** Joins: Affliction (affliction@user/affliction)
[08:34:10] *** Quits: bkhl (~bkhl@user/bkhl) (Quit: ZNC - https://znc.in)
[08:35:05] *** Joins: bkhl (~bkhl@user/bkhl)
[08:44:15] * rindolf has some aspirations of being 1/3rd of the greatest entity in the multiverse of imagination battling "science", "common sense" and prejudice [and other stuff] for great Saladin-style justice
[08:48:38] *** Quits: diskin_ (~diskin@46.41.108.147) (Ping timeout: 255 seconds)
[08:51:58] <rindolf> hopefully  be the 
[08:58:18] <rindolf> hopefully we'll be the 2nd greatest soon: https://github.com/shlomif/shlomif-tech-diary/blob/master/my-candidates-for-terran-leadership.asciidoc
[08:58:19] <Paperbot> Link title(s): [ shlomif-tech-diary/my-candidates-for-terran-leadership.asciidoc at master · shlomif/shlomif-tech-... ]
[09:00:57] *** Joins: Guest9 (~Guest9@103.240.204.23)
[09:04:46] *** Quits: solarbunny_ (~sol@2001:778:200:302:20c:29ff:fe8a:4af7) (Ping timeout: 246 seconds)
[09:04:54] *** Joins: solarbunny (~sol@2001:778:200:302:20c:29ff:fe8a:4af7)
[09:09:50] *** Quits: blinky42 (~quassel@user/blinky42) (Read error: Connection reset by peer)
[09:11:57] *** Joins: blinky42 (~quassel@206.245.174.16)
[09:11:57] *** Quits: blinky42 (~quassel@206.245.174.16) (Changing host)
[09:11:57] *** Joins: blinky42 (~quassel@user/blinky42)
[09:16:28] *** Quits: Guest9 (~Guest9@103.240.204.23) (Ping timeout: 252 seconds)
[09:24:14] *** Joins: diskin (~diskin@85.26.186.242)
[09:25:06] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:31:21] *** Joins: toddr_ (sid457681@id-457681.tinside.irccloud.com)
[09:31:21] *** Quits: jdrab (~jdrab@user/jdrab) (*.net *.split)
[09:31:21] *** Quits: integral (sid296274@user/integral) (*.net *.split)
[09:31:21] *** Quits: perigrin (sid218253@id-218253.tooting.irccloud.com) (*.net *.split)
[09:31:21] *** Quits: hquirinosmith (~hquirinos@hqs.rocks) (*.net *.split)
[09:31:21] *** Quits: toddr (sid457681@id-457681.tinside.irccloud.com) (*.net *.split)
[09:31:21] *** Quits: TrechNex (TrechNex@user/trechnex) (*.net *.split)
[09:31:21] *** toddr_ is now known as toddr
[09:31:28] *** Joins: TrechNex_ (TrechNex@2a01:7e00::f03c:92ff:febe:4d66)
[09:31:31] *** Joins: integral_ (sid296274@user/integral)
[09:31:33] *** Joins: jdrab (~jdrab@2a03:4000:48:1a8:44c5:2fff:fe15:f20d)
[09:31:38] *** Quits: jdrab (~jdrab@2a03:4000:48:1a8:44c5:2fff:fe15:f20d) (Changing host)
[09:31:38] *** Joins: jdrab (~jdrab@user/jdrab)
[09:31:46] *** Joins: hquirinosmith (~hquirinos@hqs.rocks)
[09:31:48] *** Joins: perigrin (sid218253@id-218253.tooting.irccloud.com)
[09:36:12] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[09:36:12] *** Quits: esh_ (~quassel@minnesota.heebs.ch) (*.net *.split)
[09:36:12] *** Quits: jercos (jercos@xyl.be) (*.net *.split)
[09:36:12] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[09:36:12] *** Quits: Stealth (stealth@sourcemage/archon/stealth) (*.net *.split)
[09:36:12] *** Quits: Richlv (~rich@nakts.net) (*.net *.split)
[09:36:12] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[09:36:12] *** Quits: digi__ (digi@tilde.team) (*.net *.split)
[09:36:12] *** Quits: cansada (~pervaya@ip250.ip-51-83-183.eu) (*.net *.split)
[09:36:12] *** Quits: buZz (~buzz@sky.thebigblue.tk) (*.net *.split)
[09:36:12] *** Quits: mjones (sid6844@id-6844.brockwell.irccloud.com) (*.net *.split)
[09:36:12] *** Quits: timeless (sid4015@id-4015.charlton.irccloud.com) (*.net *.split)
[09:36:12] *** Quits: patterner_ (sid212303@id-212303.charlton.irccloud.com) (*.net *.split)
[09:36:12] *** Quits: f3ew (~f3ew@2a01:4f9:4b:3b57::2) (*.net *.split)
[09:36:12] *** Quits: Skarn (~skarn@user/skarn) (*.net *.split)
[09:36:12] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[09:36:12] *** Quits: rba (~rba@static.115.140.203.116.clients.your-server.de) (*.net *.split)
[09:36:17] *** Joins: digi (digi@tilde.team)
[09:36:18] *** Joins: buZz_ (~buzz@sky.thebigblue.tk)
[09:36:20] *** Joins: jercos (jercos@xyl.be)
[09:36:23] *** Joins: Richlv (~rich@nakts.net)
[09:36:25] *** Joins: esh (~quassel@minnesota.heebs.ch)
[09:36:26] *** Joins: timeless (sid4015@id-4015.charlton.irccloud.com)
[09:36:26] *** Joins: f3ew (~f3ew@2a01:4f9:4b:3b57::2)
[09:36:34] *** Joins: patterner_ (sid212303@id-212303.charlton.irccloud.com)
[09:36:36] *** Joins: mjones (sid6844@id-6844.brockwell.irccloud.com)
[09:36:37] *** Joins: Hobbyboy|BNC (Hobbyboy@hobbyboy.co.uk)
[09:36:43] *** buZz_ is now known as Guest6760
[09:36:51] *** Joins: banshee (stealth@sourcemage/archon/stealth)
[09:37:02] *** Joins: rba_ (~rba@static.115.140.203.116.clients.your-server.de)
[09:37:04] *** Joins: skarn_ (~skarn@user/skarn)
[09:37:08] *** Joins: webstrand (~webstrand@user/webstrand)
[09:37:11] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[09:37:15] *** Joins: pervaya (~pervaya@2001:41d0:602:3007::641b:b74c)
[09:37:26] *** banshee is now known as Stealth
[09:37:27] *** rba_ is now known as rba
[09:37:33] *** skarn_ is now known as Skarn
[09:38:06] *** Joins: Ekho (~Ekho@user/ekho)
[09:40:36] *** Hobbyboy|BNC is now known as Hobbyboy
[09:41:21] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:41:25] *** Quits: R2robot (~R2robot@user/r2robot) (*.net *.split)
[09:41:25] *** Quits: mtj (quasselcor@2400:8902::f03c:91ff:fe93:b7f1) (*.net *.split)
[09:41:25] *** Quits: ggherdov (sid11402@id-11402.brockwell.irccloud.com) (*.net *.split)
[09:41:25] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (*.net *.split)
[09:41:25] *** Quits: davebaker (sid143727@id-143727.tooting.irccloud.com) (*.net *.split)
[09:41:25] *** Quits: leont (sid489095@id-489095.highgate.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: madduck (~madduck@user/madduck) (*.net *.split)
[09:41:26] *** Quits: rjbs (sid498898@id-498898.highgate.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: darxun (sid504814@id-504814.tinside.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: neilb___ (sid492745@id-492745.charlton.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (*.net *.split)
[09:41:26] *** Quits: metabot (~metabot@perlbot/bot/metabot) (*.net *.split)
[09:41:26] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: kawaii_ (sid345572@id-345572.stonehaven.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: Exodist (sid433366@id-433366.stonehaven.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: Nei (~ailin@user/nemui) (*.net *.split)
[09:41:26] *** Quits: Bluewind (~Bluewind@user/bluewind) (*.net *.split)
[09:41:26] *** Quits: confuseAcat (~confuseAc@h2728883.stratoserver.net) (*.net *.split)
[09:41:26] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: nrr (sid20938@id-20938.tooting.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: koolazer (~koo@212.47.237.37) (*.net *.split)
[09:41:26] *** Quits: Masklin (~joel@93.182.183.85) (*.net *.split)
[09:41:31] *** Joins: madduck_ (~madduck@matilda.madduck.net)
[09:41:35] *** Joins: confuseAcat (~confuseAc@h2728883.stratoserver.net)
[09:41:41] *** Joins: Nei (~ailin@yoshi.flupps.net)
[09:41:46] *** Joins: neilb___ (sid492745@id-492745.charlton.irccloud.com)
[09:41:47] *** Joins: koolazer (~koo@user/koolazer)
[09:41:49] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[09:41:58] *** Joins: davebaker (sid143727@2001:67c:2f08:4::2:316f)
[09:42:01] *** Joins: R2robot (~R2robot@2601:2c7:c301:ae0:479:90bb:8760:b25e)
[09:42:08] *** Joins: kawaii_ (sid345572@id-345572.stonehaven.irccloud.com)
[09:42:08] *** Quits: Nei (~ailin@yoshi.flupps.net) (Changing host)
[09:42:08] *** Joins: Nei (~ailin@user/nemui)
[09:42:17] *** Joins: ggherdov (sid11402@id-11402.brockwell.irccloud.com)
[09:42:21] *** Quits: R2robot (~R2robot@2601:2c7:c301:ae0:479:90bb:8760:b25e) (Changing host)
[09:42:21] *** Joins: R2robot (~R2robot@user/r2robot)
[09:42:21] *** Joins: leont (sid489095@id-489095.highgate.irccloud.com)
[09:42:21] *** Joins: itok (sid418430@2001:67c:2f08:3::6:627e)
[09:42:25] *** Joins: rjbs (sid498898@id-498898.highgate.irccloud.com)
[09:42:25] *** Joins: Exodist (sid433366@2001:67c:2f08:8::6:9cd6)
[09:42:27] *** Joins: nrr (sid20938@id-20938.tooting.irccloud.com)
[09:42:29] *** Joins: sa (sid1055@2a03:5180:f::41f)
[09:42:43] *** Joins: darxun (sid504814@id-504814.tinside.irccloud.com)
[09:43:00] *** Joins: Masklin (~joel@93.182.183.85)
[09:43:01] *** Joins: jakesyl (sid56879@stonehaven.irccloud.com)
[09:43:07] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[09:43:12] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[09:43:12] *** ChanServ sets mode: +v perlbot
[09:43:14] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[09:43:25] *** Joins: Bluewind (~Bluewind@user/bluewind)
[09:43:27] *** Joins: mtj (quasselcor@2400:8902::f03c:91ff:fe93:b7f1)
[09:44:58] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (*.net *.split)
[09:44:58] *** Quits: kcz (~quassel@2a01:430:12:ff11::1) (*.net *.split)
[09:44:58] *** Quits: ranguard_ (sid496095@id-496095.tooting.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: jfoutaise (~jef@lfbn-ann-1-16-242.w86-220.abo.wanadoo.fr) (*.net *.split)
[09:44:58] *** Quits: GumbyPAN (cpanbot@jingo.bingosnet.org) (*.net *.split)
[09:44:58] *** Quits: tm604 (~tom@perlsite.default.entitypark.uk0.bigv.io) (*.net *.split)
[09:44:58] *** Quits: karjala_ (sid176588@id-176588.tooting.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: gko (~user@user/gko) (*.net *.split)
[09:44:58] *** Quits: blo (~blo@user/blo) (*.net *.split)
[09:44:58] *** Quits: stephen87 (sid33834@user/stephen87) (*.net *.split)
[09:44:58] *** Quits: tnez (~el@user/tnez) (*.net *.split)
[09:44:58] *** Quits: vague (~vague@irssi/staff/vague) (*.net *.split)
[09:44:58] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[09:44:58] *** Quits: Kassandry (~Kassandry@kassandry.net) (*.net *.split)
[09:44:58] *** Quits: ssm (~ssm@shambler.fnord.no) (*.net *.split)
[09:44:58] *** Quits: Altreus (~altreus@2a03:b0c0:1:e0::439:5001) (*.net *.split)
[09:44:58] *** Quits: mstevens (sid285816@id-285816.tinside.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: kiwiroy (sid374179@id-374179.tooting.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: mruszczyk (sid160336@id-160336.tinside.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: skaji (sid178483@id-178483.tinside.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: tag (sid271787@id-271787.tooting.irccloud.com) (*.net *.split)
[09:44:58] *** Quits: cooper (~mitchell@user/cooper) (*.net *.split)
[09:45:03] *** Joins: Kassandr1 (~Kassandry@kassandry.net)
[09:45:04] *** Joins: ranguard__ (sid496095@id-496095.tooting.irccloud.com)
[09:45:04] *** Joins: Jonno_FT1 (~come@api.carswap.me)
[09:45:05] *** Joins: jfoutais1 (~jef@lfbn-ann-1-16-242.w86-220.abo.wanadoo.fr)
[09:45:14] *** Joins: GumbyPAN (cpanbot@jingo.bingosnet.org)
[09:45:15] *** Joins: blo (~blo@blo.ski)
[09:45:21] *** Joins: skaji (sid178483@id-178483.tinside.irccloud.com)
[09:45:23] *** Joins: stephen87_ (sid33834@id-33834.charlton.irccloud.com)
[09:45:23] *** Joins: tag (sid271787@id-271787.tooting.irccloud.com)
[09:45:27] *** Joins: cooper (~mitchell@205.185.116.128)
[09:45:34] *** Joins: mstevens (sid285816@id-285816.tinside.irccloud.com)
[09:45:35] *** Joins: tnez (~el@51.158.161.58)
[09:45:38] *** Joins: kcz (~quassel@2a01:430:12:ff11::1)
[09:45:45] *** Quits: cooper (~mitchell@205.185.116.128) (Signing in (cooper))
[09:45:45] *** Joins: cooper (~mitchell@user/cooper)
[09:45:48] *** Quits: tnez (~el@51.158.161.58) (Changing host)
[09:45:48] *** Joins: tnez (~el@user/tnez)
[09:45:50] *** Joins: karjala_ (sid176588@id-176588.tooting.irccloud.com)
[09:45:51] *** Joins: kiwiroy (sid374179@id-374179.tooting.irccloud.com)
[09:45:53] *** Joins: ssm (~ssm@shambler.fnord.no)
[09:46:04] *** stephen87_ is now known as stephen87
[09:46:07] *** Joins: marienz (~marienz@libera/staff/marienz)
[09:46:07] *** Quits: blo (~blo@blo.ski) (Changing host)
[09:46:07] *** Joins: blo (~blo@user/blo)
[09:46:08] *** Joins: gko (~user@user/gko)
[09:46:09] *** Joins: mruszczyk (sid160336@id-160336.tinside.irccloud.com)
[09:46:21] *** Joins: vague (~vague@irssi/staff/vague)
[09:46:44] *** Joins: Altreus (~altreus@2a03:b0c0:1:e0::439:5001)
[09:49:16] *** Quits: nirnam (~nirnam@1.47.30.117) (Ping timeout: 272 seconds)
[09:50:18] *** Quits: stephen87 (sid33834@id-33834.charlton.irccloud.com) ()
[09:50:29] *** Joins: stephen87 (sid33834@user/stephen87)
[09:50:34] *** Joins: jplesnik (~jplesnik@83.240.63.160)
[09:52:18] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[10:11:22] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:15:38] *** Joins: gry_ (~quassel@botters/gry)
[10:16:01] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 258 seconds)
[10:18:06] *** Joins: lesihctej (jetchisel@user/jetchisel)
[10:18:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[10:27:14] *** Joins: ufobat (~martin@dynamic-077-002-152-196.77.2.pool.telefonica.de)
[10:33:56] *** Quits: diskin (~diskin@85.26.186.242) (Ping timeout: 255 seconds)
[10:40:00] *** Joins: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[10:50:44] *** Joins: horsepatat (~horsepata@80.89.78.200)
[10:53:10] *** Quits: blo (~blo@user/blo) (Read error: Connection reset by peer)
[10:53:23] *** Joins: blo (~blo@blo.ski)
[10:53:23] *** Quits: blo (~blo@blo.ski) (Changing host)
[10:53:23] *** Joins: blo (~blo@user/blo)
[10:58:15] *** Quits: randir (~randir@95-25-235-134.broadband.corbina.ru) (Remote host closed the connection)
[10:58:29] *** Joins: art1 (~romeyke@p200300ccdf04b80050ed93f9cb45644f.dip0.t-ipconnect.de)
[11:08:19] *** Joins: randir (~randir@93.159.239.42)
[11:11:07] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[11:16:37] *** Quits: Sophira (~sophie@matrix.theblob.org) (Ping timeout: 265 seconds)
[11:16:43] *** Joins: Sophira (~sophie@matrix.theblob.org)
[11:23:38] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 272 seconds)
[11:23:57] *** Joins: crawlwer_ (~crawler@cable-89-216-138-36.dynamic.sbb.rs)
[11:24:18] *** Quits: crawlwer_ (~crawler@cable-89-216-138-36.dynamic.sbb.rs) (Remote host closed the connection)
[11:29:06] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 255 seconds)
[11:29:15] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Ping timeout: 276 seconds)
[11:30:34] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:32:11] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[11:42:40] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[11:44:34] *** Quits: ology (~gene@user/ology) (Quit: jesus motherfucking christ)
[11:51:39] *** Quits: Adura (~Adura@user/adura) (Quit: Quit)
[11:54:36] *** Joins: ology (~gene@user/ology)
[11:58:23] *** Joins: tm604 (~tom@perlsite.default.entitypark.uk0.bigv.io)
[11:58:38] *** Joins: Pali (~pali@user/pali)
[12:05:53] *** Quits: veesh (~veesh@5.28.166.155) (Ping timeout: 252 seconds)
[12:12:27] *** Joins: fstd (~fstd@xdsl-78-35-78-211.nc.de)
[12:12:41] *** Quits: fstd_ (~fstd@xdsl-78-35-206-188.nc.de) (Ping timeout: 265 seconds)
[12:17:05] *** Joins: choroba (~E.Choroba@88.146.255.106)
[12:22:10] * GumbyPAN CPAN Upload: Data-Properties-1.03 by JV https://metacpan.org/release/JV/Data-Properties-1.03
[12:28:46] *** Joins: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[12:29:20] *** Joins: lesihctej (jetchisel@user/jetchisel)
[12:36:43] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Quit: ZNC 1.8.2 - https://znc.in)
[12:37:04] *** Quits: lesihctej (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[12:38:29] *** Joins: crawlwer_ (~crawler@cable-89-216-138-36.dynamic.sbb.rs)
[12:38:34] *** Quits: crawlwer_ (~crawler@cable-89-216-138-36.dynamic.sbb.rs) (Remote host closed the connection)
[12:44:26] *** Joins: habamax (~habamax@user/habamax)
[13:01:03] *** Joins: veesh (~veesh@89.237.106.180)
[13:17:04] *** Joins: jaggz (~jaggz@user/jaggz)
[13:17:20] <jaggz> Imager's getscanline() returns an array of colors, like Imager::Color=SCALAR(0x560bee9cf478) Imager::Color=SCALAR(0x560bee9cf4a8)
[13:17:33] <jaggz> I don't know how to access them though
[13:17:35] <jaggz> $img->getscanline(y=>0)->[0] ?
[13:18:00] <Altreus> it returns a list (so it seems) so you'll have to put it in something
[13:18:03] <jaggz> ($img->getscanline(y=>0))[1]
[13:18:06] <jaggz> there we go
[13:18:09] <jaggz> Altreus, thanks
[13:18:17] <Altreus> yes this is the other way :)
[13:18:34] <Altreus> however, I'm guessing it's not cheap, so you might not want to run it multiple times to get multiple items out
[13:20:39] <jaggz> right, good point.. will read the whole scanline at once then access that
[13:29:38] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:31:11] *** DrHyde_ is now known as DrHyde
[13:56:55] *** Quits: horsepatat (~horsepata@80.89.78.200) (Read error: Connection reset by peer)
[13:58:48] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[14:00:08] *** Joins: woei (~woei@144.248.22.115)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:33] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Changing host)
[14:30:33] *** Joins: judabuda (kowbunga@user/judabuda)
[14:31:02] *** Joins: csrf (~csrf@user/csrf)
[14:32:44] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:42:42] *** Quits: randir (~randir@93.159.239.42) (Read error: Connection reset by peer)
[14:42:54] *** Joins: randir (~randir@93.159.239.42)
[14:43:09] *** Quits: JasonNYC (~JasonNYC@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[14:51:25] * GumbyPAN CPAN Upload: Mojolicious-Plugin-AutoRoutePm-0.14 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-AutoRoutePm-0.14
[14:57:41] *** gry_ is now known as gry
[15:03:18] *** Quits: Md (~md@libera/staff/md) (Quit: Mea navicula pendens anguillarum plena est)
[15:08:33] *** Joins: anthk_ (~anthk_@92.176.105.30)
[15:10:38] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 256 seconds)
[15:12:41] *** Joins: habamax (~habamax@user/habamax)
[15:16:28] * GumbyPAN CPAN Upload: Mojolicious-Plugin-AutoRoutePm-0.15 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-AutoRoutePm-0.15
[15:18:25] *** Joins: horsepatat (~horsepata@80.89.78.200)
[15:19:44] *** Quits: zakame (~zakame@user/zakame) (Remote host closed the connection)
[15:21:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:21:28] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Mongodbv2-0.06 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-Mongodbv2-0.06
[15:26:29] * GumbyPAN CPAN Upload: DNS-Oterica-0.313 by RJBS https://metacpan.org/release/RJBS/DNS-Oterica-0.313
[15:30:28] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 256 seconds)
[15:45:17] *** Joins: perlmaros (~perlmaros@master.k-1.com)
[15:52:36] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[15:56:42] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Remote host closed the connection)
[15:57:05] *** Joins: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it)
[16:02:28] *** Joins: ufobat_ (~martin@dynamic-077-002-069-014.77.2.pool.telefonica.de)
[16:02:37] *** Joins: woei (~woei@144.248.22.115)
[16:06:20] *** Quits: ufobat (~martin@dynamic-077-002-152-196.77.2.pool.telefonica.de) (Ping timeout: 272 seconds)
[16:21:53] *** Quits: anthk_ (~anthk_@92.176.105.30) (Quit: nyaa~)
[16:26:54] *** Joins: anthk_ (~anthk_@92.176.105.30)
[16:29:00] *** Quits: zgu|skaro (~zgu@96-3-133-29-dynamic.midco.net) (Ping timeout: 258 seconds)
[16:32:36] *** Joins: Nei_ (~ailin@user/nemui)
[16:32:41] *** Joins: yano1 (~yano@ircpuzzles/staff/yano)
[16:32:54] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Read error: Connection reset by peer)
[16:32:58] *** Quits: Nei (~ailin@user/nemui) (Remote host closed the connection)
[16:33:28] *** Quits: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it) (Changing host)
[16:33:28] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[16:33:31] *** Nei_ is now known as Nei
[16:33:34] *** Quits: m_athias1 (~mathias@comm.detonation.org) (Ping timeout: 246 seconds)
[16:33:43] *** Joins: Adura (~Adura@user/adura)
[16:33:53] *** Joins: m_athias1 (~mathias@comm.detonation.org)
[16:39:06] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:46:46] *** Joins: nirnam (~nirnam@1.47.30.117)
[16:50:11] *** Joins: cousteau (~cousteau@2a02:8084:90e2:5400:dc20:5fff:3407:e9e1)
[16:50:15] <cousteau> Hi! 
[16:50:33] *** Quits: cousteau (~cousteau@2a02:8084:90e2:5400:dc20:5fff:3407:e9e1) (Changing host)
[16:50:33] *** Joins: cousteau (~cousteau@user/cousteau)
[16:52:21] <cousteau> Is this the correct/recommended way to set a default value of 0 for a hash key?  $hash{$key} = 0 if !exists $hash{$key};
[16:52:37] <cousteau> Not sure if I should be using exists or defined 
[16:52:44] <Botje-> $hash{$key} //= 0
[16:52:57] <Botje-> unless you want to treat defined differently from exists.
[16:53:13] <cousteau> Ugh, now I feel like a non-wizard 
[16:53:21] <Botje-> (exists will return true for $hash{$key} = undefined, defined will not)
[16:54:13] <cousteau> Hm, what's the difference between a key being undefined and not existing?  I thought they were the same.  Or was that in Lua? 
[16:54:42] *** Kassandr1 is now known as Kassandry
[16:55:05] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[16:55:17] <cousteau> How do I Google what //= means? 
[16:56:06] <LeoNerd> I don't think you do. Google is terrible at finding anything with punctuation in
[16:56:47] <cousteau> Works with ++ and some other stuff.  But it doesn't for other stuff. 
[16:58:52] <cousteau> To not run into an XY problem: my goal is to do something like   $hash{$entry}{percent} = 100 * $hash{$entry}{count} / $hash{$entry}{total} 
[16:59:14] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[16:59:29] <cousteau> But if count is less than 1 then the {count} key won't exist in the subhash
[16:59:36] *** Joins: woei (~woei@144.248.22.115)
[17:00:37] <cousteau> Becauwe I'm counting just by doing ++ on a key I never initialize, and rely on undefined++ being treated as 0++
[17:01:02] <Altreus> cousteau: existing is different from not existing :)
[17:01:09] <cousteau> (that's OK to do, right?  I didn't get any warning with strict or warnings) 
[17:01:23] <Altreus> ++ is special-cased on undefined, and a non-existent key is undefined when you access it
[17:01:38] <cousteau> Altreus: well you see, in Lua and I think also in JavaScript... 
[17:01:41] <Altreus> So yes they are different but that gets hidden in this case
[17:02:11] <Altreus> cousteau: you can set foo.bar = null in JS
[17:02:18] <cousteau> OK but it's not bad practice to do that or something, right? 
[17:02:34] <Altreus> You can also look for whether foo has a member of 'bar'
[17:02:38] <cousteau> Altreus: but that's not an associative array 
[17:02:54] <Altreus> in JS, foo['bar'] and foo.bar are identical
[17:03:00] <cousteau> Oh
[17:03:17] <Altreus> the only difference is you can do spaces in something like foo['spaces in key']
[17:03:47] <Altreus> similarly to perl, foo can either not have a key of bar, or have a key of bar that is set to null
[17:03:58] <Altreus> foo = { "bar": null }; foo = {};
[17:04:20] <Altreus> my %foo = ( bar => undef ); my %foo;
[17:05:11] <cousteau> OK then it was only Lua where setting a table value to null was equivalent to deleting it 
[17:05:12] <simcop2387> cousteau: perldoc perlop; // is the "defined-or" operator, //= is the defined-or operator as part of an assignment, $x //= $y; ==>> $x = $x // $y; just like all the other contracted operators
[17:05:54] <cousteau> simcop2387: ok so maybe I wanted 100 * $whatever//0
[17:06:37] <cousteau> Yeah I get it now.  It's like a || but treating 0 as true 
[17:06:44] <simcop2387> pretty much
[17:06:52] <cousteau> When was // introduced? 
[17:06:55] <Adura> // is also an empty regex, but I doubt perl'd get confused.
[17:07:04] <Altreus> 5.10 maybe?
[17:07:05] <LeoNerd> // is 5.10
[17:07:07] <Altreus> ya
[17:07:57] <cousteau> OK, then I guess it's safe enough to use
[17:08:26] <cousteau> (well, this ancient machine uses 5.16 and maybe there's an ancienter machine somewhere...) 
[17:08:58] <Altreus> yep, I'm working against 5.14
[17:09:03] <Adura> Isn't anything newer than 5.8 considered shiny?
[17:09:09] <Altreus> a nice accidental double entendre there
[17:09:19] <cousteau> Also, //0 is kinda weird to read.  I don't understand what it means (well, I do right now, but I'll have forgotten in a future) 
[17:09:23] <LeoNerd> 5.16 is my current horizon
[17:09:32] <Altreus> cousteau: don't let that stop you
[17:09:42] <Altreus> cousteau: that was true about many other things you now understand perfectly, before you learned them
[17:10:08] <LeoNerd> Well, 5.16 + a working C compiler, thus meaning any XS modules are fair game
[17:10:10] <cousteau> The difference is that I didn't forgot those. 
[17:10:33] <Altreus> oh also I just came across yet another use of run-after-try-but-not-called-finally today
[17:10:39] <cousteau> Anyway, I'll use //=0 on a separate line as a compromise. 
[17:11:08] <Altreus> cousteau: // 0 is often supposed to be || 0 anyway
[17:11:19] <cousteau> That'll be readable enough, more than using // directly in an already long enough expression 
[17:11:22] <Altreus> after all, you want to turn undef, '', or 0 into 0
[17:11:28] <Altreus> rather than just undef
[17:11:33] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[17:12:10] <cousteau> Well this is never going to be "" nor 0 anyway 
[17:12:32] <cousteau> And //= will be more descriptive of why I'm doing it 
[17:13:12] <cousteau> ...I think I'll write a comment explaining what it does anyway 
[17:14:36] <Botje-> # the code below uses the * operator to 'multiply' numbers. This is like repeated addition but faster.
[17:15:29] <cousteau> OK yeah I get your point 
[17:15:30] <Botje-> cousteau: another way of doing the entire thing is something like %hash = (%defaults, %hash)
[17:15:48] <Botje-> where %defaults = (key => 0, ...)
[17:16:04] <Altreus> > Well this is never going to be "" nor 0 anyway # If you can control that, then just never have it be undef either
[17:16:17] <Altreus> If you can't, then defensive coding
[17:16:27] <cousteau> In fact you know what, I'll leave the expression as it was before, with the "set to 0 if it doesn't exist".  Much more self-descriptive 
[17:16:40] <Botje-> :+1:
[17:16:43] <Botje-> simpler is gooder.
[17:16:55] <Altreus> Yes, I am a proponent of making sure things are what they need to be BEFORE you use them, rather than DURING using them
[17:17:02] <Altreus> Params::ValidationCompiler is one way of going about this
[17:17:27] <cousteau> Altreus, Botje-: well, the thing is that I don't know the $entry's beforehand 
[17:17:29] <Altreus> It can either yell at the user or provide defaults for parameters, depending on what you want to see
[17:17:50] <Altreus> the whats? :)
[17:18:06] <Botje-> cousteau: but you know what to check for? or are the keys arbitrary and you want to constrain the values?
[17:19:04] <cousteau> So I just run some code in a loop, figure out the value of $entry for this iteration, increment $hash{$entry}{count} under some condition 
[17:19:51] <Botje-> $hash{$entry}{count}++ will do the right thing if the count key was not there previously.
[17:20:21] <Botje-> (assuming $hash{$entry} is undef or a hashref. otherwise you will have trouble)
[17:20:25] <cousteau> So if the condition is never met for any of the potential matches finding $entry, then its {count} subkey will never be ++'d and hence not set 
[17:20:48] <cousteau> OK let me grab a keyboard and explain; typing on a phone keyboard is a pain 
[17:21:08] <Botje-> I'm impressed you lasted this long on a phone. I often give up after two sentences
[17:21:13] <Botje-> especially when discussing code :)
[17:22:03] <cousteau> Yeah, swiftkey is well, not 100% awful for typing code
[17:22:08] <cousteau> only 90% or so
[17:22:29] *** Joins: zakame (~zakame@user/zakame)
[17:23:56] <cousteau> Anyway.  Code looks like:  for each line in file, extract $name and $condition, increment $hash{$name}{total}, and if $condition is true then also increment $hash{$name}{detected}
[17:24:53] <LeoNerd> .oO( does someone want structs? )
[17:25:30] <cousteau> Then I iterate along the keys of %hash, and calculate a percentage for each key as 100.0 * $hash{$name}{detected} / $hash{$name}{total}
[17:26:20] <LeoNerd> I think that sounds like a yes
[17:26:30] <Botje-> solution 1: do $hash{$name} ||= { total => 0, detected => 0 } before you increment total and/or detected
[17:26:42] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Obrazi-0.15 by BEROV https://metacpan.org/release/BEROV/Mojolicious-Plugin-Obrazi-0.15
[17:26:47] <Botje-> solution 2:  ($hash{$name}{detected} || 0) when you calculate the total
[17:27:01] <cousteau> so $hash{$name}{total} is always going to be defined for all defined keys, and be 1 or more, but $hash{$name}{detected} may not be defined if it's 0 (or should be 0)
[17:27:03] <Botje-> solution 3: $_->{detected} //= 0 for values %hash
[17:27:44] <Botje-> also known as "fix it up front", "ignore problems" and "fix it up later"
[17:27:50] <cousteau> I'm following solution 4: just add a line where I set $hash{$name}{detected} to 0 if it doesn't exist, which I believe is more readable, for me at least
[17:28:12] <cousteau> "fix it up immediately before using it"
[17:28:13] <Botje-> fair enough.
[17:28:14] <Botje-> :)
[17:28:28] <Botje-> I tend to separate data modification from reporting
[17:28:37] <cousteau> LeoNerd: now I'm curious about those structs...
[17:29:10] <cousteau> Botje-: fair enough, although this is the only time that array will be used, and its only reason to exist
[17:30:09] <cousteau> on an unrelated note, I used 100.0 instead of 100.  That's absolutely unnecessary, right?  I could have used 100 and Perl will do the right thing when it comes to divisions.
[17:30:20] <Botje-> yup. it's no python 2.
[17:31:02] <cousteau> nor tcl, nor lua above a certain version I believe
[17:31:53] <cousteau> I recall that Lua silently introduced integers (!= floats) in some version, and then some operations (which?) would be different
[17:33:25] <Botje-> some people just love their fixnum.
[17:33:32] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:34:42] <cousteau> Ah no, apparently Lua treats 1/2 as 0.5 even after it introduced integers
[17:35:14] *** Quits: karjala_ (sid176588@id-176588.tooting.irccloud.com) ()
[17:35:31] *** Joins: karjala_ (sid176588@id-176588.tooting.irccloud.com)
[17:36:04] *** karjala_ is now known as karjala
[17:36:13] *** Quits: karjala (sid176588@id-176588.tooting.irccloud.com) (Client Quit)
[17:36:27] *** Joins: karjala (sid176588@id-176588.tooting.irccloud.com)
[17:41:06] *** Quits: Dorward_ (~dorward@daviddorward.plus.com) (Ping timeout: 272 seconds)
[17:41:45] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[17:52:09] *** yano1 is now known as yano
[18:00:40] *** Quits: horsepatat (~horsepata@80.89.78.200) (Read error: Connection reset by peer)
[18:01:06] *** Quits: Juerd (juerd@computervrede.nl) (Ping timeout: 240 seconds)
[18:04:41] <LeoNerd> cousteau: https://metacpan.org/pod/Struct::Dumb or https://rt.cpan.org/Ticket/Display.html?id=137323
[18:04:42] <Paperbot> Link title(s): [ Struct::Dumb - make simple lightweight record-like structures - metacpan.org ] [ Bug #137323 for Object-Pad: Consider a "struct" mode/keyword <https://rt.cpan.org/Public/Bug/Display.html?id=137323> ]
[18:05:21] *** Joins: Juerd (~juerd@computervrede.nl)
[18:05:48] <cousteau> Thanks 
[18:09:43] *** Joins: gryphn (~gryphon@102.129.145.174)
[18:11:11] *** Quits: Juerd (~juerd@computervrede.nl) (Remote host closed the connection)
[18:12:19] *** Quits: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca) (Quit: clscott)
[18:13:08] *** Joins: Juerd (juerd@computervrede.nl)
[18:16:23] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[18:16:24] *** Joins: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca)
[18:16:47] * GumbyPAN CPAN Upload: Term-Choose-1.735 by KUERBIS https://metacpan.org/release/KUERBIS/Term-Choose-1.735
[18:16:47] * GumbyPAN CPAN Upload: Term-Form-0.537 by KUERBIS https://metacpan.org/release/KUERBIS/Term-Form-0.537
[18:16:49] * GumbyPAN CPAN Upload: App-DBBrowser-2.272 by KUERBIS https://metacpan.org/release/KUERBIS/App-DBBrowser-2.272
[18:19:25] *** Guest6760 is now known as buZz
[18:21:47] * GumbyPAN CPAN Upload: QRCode-Base45-0.01 by YENYA https://metacpan.org/release/YENYA/QRCode-Base45-0.01
[18:41:08] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d) (Quit: = "")
[18:45:28] *** Parts: art1 (~romeyke@p200300ccdf04b80050ed93f9cb45644f.dip0.t-ipconnect.de) ()
[18:47:50] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 272 seconds)
[18:49:28] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[18:53:54] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 256 seconds)
[18:54:59] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[18:58:05] *** Joins: gast0n (~g4570n@user/gast0n)
[18:59:33] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 255 seconds)
[19:04:01] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[19:12:34] * LeoNerd grumbles about Module::Build
[19:12:35] <LeoNerd> $build->$key( $key eq "include_dirs" ? [ @vals ] : @vals );
[19:12:51] <LeoNerd> ->include_dirs  takes an arrayref directly, but all the other "set a new value" mutator methods take a list
[19:13:32] <Botje-> boo.
[19:16:53] * GumbyPAN CPAN Upload: AnyEvent-FTP-0.17 by PLICEASE https://metacpan.org/release/PLICEASE/AnyEvent-FTP-0.17
[19:17:32] *** Joins: gareppa (~gareppa@user/gareppa)
[19:18:36] *** Joins: phr3ak (~noreply@gnet.hu)
[19:18:57] *** Joins: Manderson (~manderson@047-028-019-189.res.spectrum.com)
[19:19:36] *** Quits: gareppa (~gareppa@user/gareppa) (Client Quit)
[19:24:36] <gordonfish> LeoNerd: ..... why?
[19:25:16] <LeoNerd> gordonfish: I have no idea :/
[19:33:44] *** Joins: semeion (~semeion@user/semeion)
[19:36:48] *** Joins: thrig (~thrig@65.113.153.50)
[19:44:45] <LeoNerd> I have a perl value known at Build time. I want to inject it into a generated .pm file I am creating by running a .pm.PL script
[19:45:07] <LeoNerd> I suppose I -could- `Dumper` it myself, or I could do some other sort of serialialisation. Any other ideas?
[19:45:12] *** Joins: deadmarshal (~deadmarsh@95.38.115.95)
[19:46:21] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Ping timeout: 255 seconds)
[19:50:35] <thrig> we've got Object::Pad but still need an Object::Lead and probably Object::Mixer
[19:50:56] <LeoNerd> Hm?
[19:51:15] <thrig> perhaps with an Object::Synth bundle...
[19:51:51] <LeoNerd> Object::LFO
[19:53:47] <leont> LeoNerd: https://metacpan.org/dist/Module-Build/view/lib/Module/Build/Authoring.pod#SAVING-CONFIGURATION-INFORMATION
[19:53:48] <Paperbot> Link title(s): [ Module::Build::Authoring - Authoring Module::Build modules - metacpan.org ]
[19:53:57] <LeoNerd> Yeah thats' not quite what I'm after
[19:54:07] <leont> I hate the feature, but it exists
[19:54:09] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:54:47] <LeoNerd> The M:B running as XS::Parse::Keyword has to write out the Builder.pm file that modules which -use- XPK will use to set themselves up
[19:54:53] <LeoNerd> So they have to carry over the cflags etc. required
[19:55:22] <LeoNerd> https://metacpan.org/dist/XS-Parse-Keyword/source/lib/XS/Parse/Keyword/Builder.pm#L82  -- this bit
[19:55:23] <Paperbot> Link title(s): [ lib/XS/Parse/Keyword/Builder.pm - metacpan.org ]
[19:57:16] *** Joins: habamax_ (~habamax@vpn.avast.com)
[19:59:22] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:ddde:7281:8e88:676d)
[19:59:54] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[20:00:11] *** Joins: Aniar (~Aniar@23-116-8-40.lightspeed.cicril.sbcglobal.net)
[20:01:18] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 272 seconds)
[20:06:58] * GumbyPAN CPAN Upload: ExtUtils-CChecker-0.11 by PEVANS https://metacpan.org/release/PEVANS/ExtUtils-CChecker-0.11
[20:06:58] * GumbyPAN CPAN Upload: Mojolicious-Plugin-Model-0.13 by AVKHOZOV https://metacpan.org/release/AVKHOZOV/Mojolicious-Plugin-Model-0.13
[20:14:24] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[20:15:02] *** Joins: P1RATEZ (piratez@user/p1ratez)
[20:22:48] *** Quits: jplesnik (~jplesnik@83.240.63.160) (Quit: Leaving)
[20:25:08] *** Quits: aman (~aman@user/aman) (Ping timeout: 272 seconds)
[20:29:50] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:34:10] *** Joins: magla (~gelignite@55d4ea1a.access.ecotel.net)
[20:34:25] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[20:34:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[20:38:29] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:38:44] *** Quits: habamax_ (~habamax@vpn.avast.com) (Ping timeout: 256 seconds)
[20:38:51] *** Joins: randir (~randir@95-25-235-134.broadband.corbina.ru)
[20:39:18] *** Quits: ufobat_ (~martin@dynamic-077-002-069-014.77.2.pool.telefonica.de) (Ping timeout: 272 seconds)
[20:40:21] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[20:40:56] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[20:47:32] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[20:48:06] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:58:32] *** Quits: congratulated (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 255 seconds)
[21:02:05] *** Joins: mnemonic (~semeion@user/semeion)
[21:03:22] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[21:08:21] *** Joins: e1f (~user@141.117.1.143)
[21:12:06] * GumbyPAN CPAN Upload: CryptX-0.072_001 by MIK https://metacpan.org/release/MIK/CryptX-0.072_001
[21:19:57] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 255 seconds)
[21:23:12] *** Joins: orange97 (~quassel@ppp079166076079.access.hol.gr)
[21:24:45] <orange97> Hi there. I would like to find tricks on how to obfuscate a programme as well as make a JAPH. Do you have any or know where I could find? Thanks
[21:25:00] <simcop2387> Yay, the sff brackets and adapters have arrived.  Just need the chassis tomorrow to start assembling
[21:25:20] <simcop2387> perlbot, japh
[21:25:20] <perlbot> simcop2387: http://en.wikipedia.org/wiki/Just_another_Perl_hacker
[21:25:28] <simcop2387> Hrm no tips there
[21:25:35] <tm604> orange97: try https://metacpan.org/pod/Acme::EyeDrops or https://metacpan.org/pod/Acme::AsciiArtinator to start with
[21:25:36] <Paperbot> Link title(s): [ Acme::EyeDrops - Visual Programming in Perl - metacpan.org ] [ Acme::AsciiArtinator - Embed Perl code in ASCII artwork - metacpan.org ]
[21:26:08] <simcop2387> Yea a lot of the acme modules are probably good to look at for that.
[21:26:09] <orange97> Thank you =)
[21:26:10] <ology> Acme::Bleach
[21:26:33] <tm604> for JAPH, it's mostly a process of iteration - start with some bad code, and either try to make it shorter, or harder to read, until you give up
[21:26:50] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[21:27:48] <simcop2387> I once made one that used rand() and srand() for some but not all bits of the message.  Probably doesn't work anymore
[21:28:08] *** Quits: cousteau (~cousteau@user/cousteau) (Read error: Connection reset by peer)
[21:28:12] *** Joins: cousteau_ (~cousteau@2a02:8084:90e2:5400:dc20:5fff:3407:e9e1)
[21:28:26] <thrig> pretty sure people have (mostly) learned to seed RNGs properly these days
[21:28:48] * cousteau_ throws a dice 
[21:28:53] *** Joins: MichaelOF (~michael@p200300eb8f097301ed32edad0de92a4c.dip0.t-ipconnect.de)
[21:28:54] <cousteau_> I got 4
[21:29:09] <cousteau_> I'll seed my RNG with 4
[21:29:10] <thrig> oh wait https://www.techradar.com/news/kasperskys-random-password-generator-isnt-actually-random-at-all
[21:29:11] <Paperbot> Link title(s): [ Kaspersky's random password generator isn't actually random at all | TechRadar ]
[21:29:24] <cousteau_> Oh my god
[21:29:36] <ether> there's an Acme that encodes a module in "moo encoding", i.e. combinations of upper- and lower-cased "moo" strings, but I can't remember its name
[21:29:44] <simcop2387> Yea, it didn't even mix In a salt or anything
[21:29:50] <cousteau_> Hope that's not a cyber security company or something 
[21:30:05] <thrig> crap like that is why OpenBSD breaks POSIX in rand()
[21:30:28] <cousteau_> It baffles me that people insist in not salting hashes in this time and age 
[21:30:44] *** Joins: dvl (~dvl@user/dvl)
[21:30:57] <tm604> sweval: use Math::Random::Secure qw(irand); irand(1000); fork // die; print "[" . irand(1000) . "]"; ()
[21:30:59] <perlbot> tm604: [476][476]
[21:31:05] <simcop2387> ether, thinking of acme ook?
[21:31:13] <cousteau_> "X platform got user data and passwords compromised".  Like what, did they have a passwords.txt file with the passwords in the clear? 
[21:32:00] <thrig> yes? or something trivial to crack like DES or whatever that horrible Microsoft thing is
[21:32:04] <rewt> yeah, they put it right next to robots.txt
[21:32:35] <cousteau_> thrig: is that the thing ophcrack could figure out easily? 
[21:32:55] <cousteau_> It was a liveCD that would figure out windows xp passwords 
[21:33:12] <buZz> l0pht
[21:33:19] <cousteau_> Apparently they were stored in two 7-char blocks 
[21:33:21] <buZz> that was the name of that hackergroup that released it
[21:33:31] <buZz> yeah NTLM is very insecure
[21:33:41] <buZz> and still is use
[21:33:44] <buZz> in*
[21:33:58] <cousteau_> Oh god, really? 
[21:34:01] <buZz> afaik nearly every LDAP uses it internally
[21:34:09] <buZz> grab the db, have everyones account within minutes
[21:34:28] <thrig> I looked at putting passwords in LDAP and went nope nope nope nope
[21:34:35] <buZz> *insert catchy microsoft slogan*
[21:34:41] <cousteau_> I recall "cracking" the admin password at my uni's public pcs with that so that I could install whatever the heck I wanted 
[21:34:47] <simcop2387> Ldap *can* use it internally but it's not required.  I ththink openldap needs a config to enable it
[21:34:48] <thrig> "to sync with windows, plaintext passwords are ..." yeah how about no
[21:35:43] <simcop2387> Ldap cwn be set to use argon2id these days and when I dodo it I use it.  Nit sure how compatible that is though
[21:35:45] <buZz> simcop2387: yeah, but without it a lot wont work
[21:36:20] <simcop2387> I've never used it for ahything active directory like so I pprobably haven't seen it
[21:36:42] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[21:39:14] <pragma-> Okay. I'm going to be brave. I am immensely proud of this code, but I do want criticism so that I may improve in areas that I am ignorant. https://github.com/pragma-/pbot/blob/master/Plugins/Battleship.pm
[21:39:15] <Paperbot> Link title(s): [ pbot/Battleship.pm at master · pragma-/pbot · GitHub ]
[21:39:46] <pragma-> I know I should probably be using Moo or Object::Pad and I'm interested in hearing about the ways that could improve my code, sure.
[21:40:00] <pragma-> If you have time to read my code, I'd be grateful.
[21:40:25] <LeoNerd> BTW, all that IRC colour stuff could be neatened with String::Tagged::IRC
[21:40:37] * pragma- takes notes.
[21:40:44] <LeoNerd> Ohgod you're using given/when. Please don't. :)
[21:40:48] <pragma-> :(
[21:40:52] <pragma-> It seems nice.
[21:40:52] <LeoNerd> perlbot: given/when
[21:40:53] <perlbot> LeoNerd: No factoid found. Did you mean one of these: [given] [give me money] [hive mind] [go find it] [cpanminus] [cpan-nr] [daveman] [hypomania] [if anyone] [jkauffman]
[21:40:56] <LeoNerd> perlbot: given
[21:40:56] <perlbot> LeoNerd: Don't use given/when because it relies on ~~.  See smartmatch
[21:41:01] <LeoNerd> perlbot: smartmatch
[21:41:01] <perlbot> LeoNerd: broken because eval: use warnings; my @foo = 0..10; print "this matches" if "0 but true" ~~ @foo; ... too vague for predictable behavior, use the comparison you mean or try Smart::Match for explicit smartmatching | "Any non-trivial example of smartmatch usually does something other than the author intended."
[21:41:02] <pragma-> I'm avoiding the smartmatch features, aren't I?
[21:41:12] <pragma-> I use it minimally.
[21:41:16] <LeoNerd> No. any use of given/when necessarily uses smartmatch
[21:41:23] <pragma-> How is it potentially breaking my code?
[21:41:34] <pragma-> Is it really a huge code-smell?
[21:41:39] <pragma-> This saddens me.
[21:41:48] *** Joins: adherzog (uid387168@id-387168.tooting.irccloud.com)
[21:41:54] <LeoNerd> I'd suggest Syntax::Keyword::Match, or Switch::Plain.. but likely the former because with any luck that'll be what I move into perl core :)
[21:42:00] <pragma-> I will look at those.
[21:42:08] <pragma-> I do want to improve.
[21:42:57] <pragma-> (Does anybody disagree with LeoNerd about given/when? Be brave and speak up!)
[21:42:59] <pragma-> :p
[21:43:16] <LeoNerd> line 282 that `for` loop - that really wants to not be a C-style one ;)
[21:43:19] <thrig> nuke it from orbit
[21:43:21] <pragma-> It does?
[21:43:29] <LeoNerd> That doesn't need to be a C-style loop
[21:43:49] <LeoNerd> for my $i ( 0 .. $#{ $sel->{state_data}{players} } ) ...
[21:44:01] <LeoNerd> Or `foreach` if you prefer
[21:44:21] <pragma-> I thought it was safer to use C-style there due to the splice on line 287. Wouldn't that mess up the iterator for the foreach?
[21:44:38] <LeoNerd> Oh.. huh I see
[21:44:54] <LeoNerd> Oh in that case I'd rewrite the entire loop
[21:44:58] <pragma-> huh
[21:45:03] <pragma-> I'd be interested in howso
[21:45:04] <LeoNerd> You're splice'ing out a single maching element
[21:45:21] <pragma-> if the game is on-going i don't splice them out
[21:45:23] <thrig> $i would need to not ++ after a splice
[21:45:28] <LeoNerd> use List::Utils::extract_by;   extract_by { code to match this element } @some_array;
[21:45:32] <pragma-> because i don't want to mess up the index of the array because i cache the indices
[21:45:38] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[21:45:38] <LeoNerd> ^-- will splice out matching elements while not disturbing the rest
[21:45:49] <pragma-> line 290 is the else 
[21:46:02] <LeoNerd> Hmm
[21:46:05] <Grinnz> pragma-: given/when is about 300% more complex than the nice part of it, and then smartmatch happens... so yes i agree with LeoNerd 
[21:46:21] <pragma-> Okay, I'll look at replacing that.
[21:46:25] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[21:46:41] <pragma-> I kind of liked it, though.
[21:46:48] <pragma-> It seems concise at the surface level.
[21:46:50] <LeoNerd> OK -maybe- a C-style loop is applicable, but I'd consider putting a `redo` in there also, beacuse as thrig points out you don't want to ++ after splice
[21:46:54] <Grinnz> pragma-: in lieu of the new/experimental match keyword, you can just use if/elsif
[21:47:06] <Grinnz> pragma-: the important part is to use something which explicitly states what kind of comparison you're doing.
[21:47:11] *** Joins: krismatrix (~krismatri@38.80.149.51)
[21:47:21] <Grinnz> hence why Switch::Plain only does sswitch or nswitch (string or number)
[21:47:45] <LeoNerd> Line 379's `grep` could easily be `first` instead
[21:47:50] <pragma-> I use a list in a couple of "when" blocks
[21:48:02] <LeoNerd> Yah so already you're in non-simple territory
[21:48:15] <pragma-> I see
[21:48:49] <thrig> sort { $b->{health} <=> $a->{health} could instead be use List::UtilsBy
[21:48:54] <LeoNerd> Line 438's for loop can definitely be a foreach iteration - there's no splice or ++'ing in there
[21:49:12] <LeoNerd> Line 461's `grep` could be `any`
[21:49:13] <pragma-> I do not see anything for `perldoc -f first` and google isn't being helpful unless you mean https://perlmaven.com/first ?
[21:49:15] <Paperbot> Link title(s): [ Find the first element in an array in Perl that satisfies a condition ]
[21:49:31] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:49:34] <Grinnz> any and first are from List::Util
[21:49:35] <LeoNerd> List::Util::first
[21:49:38] <pragma-> Oh okay.
[21:49:42] <pragma-> That's core, right?
[21:49:46] <Grinnz> yeah
[21:49:46] <pragma-> Or should I be getting CPAN?
[21:49:47] <LeoNerd> perlbot: corelist List::Util
[21:49:49] <perlbot> LeoNerd: List::Util Added to perl core as of 5.007003
[21:49:54] <pragma-> It's dual-life, yeah?
[21:50:00] <pragma-> Is core good enough?
[21:50:02] <Grinnz> any requires List::Util 1.33 iirc
[21:50:11] <pragma-> Okay.
[21:50:13] <Grinnz> uh, yeah, that's why we're recommending it
[21:50:23] *** Joins: pj (~pj@ghettoforge/pj)
[21:50:25] <pragma-> Well, I had a conversation with LeoNerd a week or so ago about core vs CPAN
[21:50:29] <pragma-> that's why I ask
[21:50:39] <pragma-> He recommends CPAN
[21:50:43] <Grinnz> well, you should use CPAN modules where they solve more problems than they cause
[21:50:50] <Grinnz> there's no "vs"
[21:51:00] <Grinnz> core contains some tools, CPAN contains some tools, dual life are in both
[21:51:04] <xenu> core modules tend to suck but some of them alright
[21:51:10] <xenu> much like people on this channel
[21:51:19] <xenu> are alright*
[21:51:31] <tm604> there's an `lc ... == $id` on https://github.com/pragma-/pbot/blob/master/Plugins/Battleship.pm#L363, is that supposed to be `eq` or is `lc` redundant?
[21:51:31] <LeoNerd> Yah prettymuch -every- one of your C-style for loops ought to be a foreach iteration. Only that first one that involved a splice was a bit different. But most of them don't
[21:51:32] <Paperbot> Link title(s): [ pbot/Battleship.pm at master · pragma-/pbot · GitHub ]
[21:51:41] <pragma-> I prefer not to add another line to the list of dependencies. If the core version of the module isr eocmmended, I'd prefer to use that. But if CPAN offers significant improvements or updates, then I'd prefer that one.
[21:52:04] <LeoNerd> "the core version" verymuch depends on what version of perl you're running
[21:52:34] <Grinnz> if this is a CPAN module, just add an appropriate version of List::Util to your dependencies, and people on newer perls won't have to install it
[21:52:35] <LeoNerd> `any` needs 1.33, which was core as of perl 5.20.0 (well, midway in 5.19)
[21:52:38] *** Joins: yzhernand (~yzhernand@129.85.8.233)
[21:52:57] <pragma-> tm604: good catch. that lc shouldn't be there.
[21:53:06] <pragma-> I think the id used to be nicknames at one point.
[21:53:38] <LeoNerd> Those varions TYPE_* members appear to be contants. You should just  use constant  them
[21:53:53] <pragma-> doesn't that turn them into more expensive sub calls?
[21:54:01] <Grinnz> no, cheaper sub calls
[21:54:04] <pragma-> cheaper!
[21:54:10] <LeoNerd> It inlines them -as- constants
[21:54:15] <Grinnz> constant subs get inlined by the parser where possible
[21:54:16] <LeoNerd> Thus avoiding the  $self->{ ... }  lookups
[21:54:24] <pragma-> huh.
[21:54:26] <tm604> overall structure seems nice enough, and the level of comments makes it easy to read, nice work
[21:54:31] <pragma-> thanks
[21:55:05] <tm604> could move out a few of the common patterns to helper methods - looping over players or board squares, for example - but the repetition isn't too onerous
[21:55:24] <pragma-> i appreciate all this feedback
[21:55:44] *** Joins: zakame (~zakame@user/zakame)
[21:56:59] <pragma-> it occurs to me that lines 543 through 545 are better written as a single `sub { $self->run_one_state }` line
[21:58:02] *** gbristol_ is now known as gbristol
[21:59:31] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[22:00:12] <LeoNerd> Eh.. whitespace style. I don't usually fuss about that in other's code - everyone is different.
[22:00:20] <LeoNerd> I tend to look at larger code structure
[22:00:31] <pragma-> I am anal about my own style.
[22:00:52] <tm604> could also be replaced by `$self->curry::run_one_state`, via https://metacpan.org/pod/curry, but doesn't make a massive difference either way
[22:00:53] <Paperbot> Link title(s): [ curry - Create automatic curried method call closures for any class or object - metacpan.org ]
[22:00:56] <pragma-> Why does "anal" mean that. What a strange...
[22:01:51] <pragma-> Hm. I try not to add any more external dependencies. I find the sub { ... } syntax familiar and comforting.
[22:01:56] <thrig> perhaps alluding to a ponderosa pine lodged somewhere (see the Firefly episode with the chandelier)
[22:01:58] *** Joins: talexb (~tab@bras-base-toroon0335w-grc-24-174-95-206-118.dsl.bell.ca)
[22:02:45] <pragma-> I have way too many dependencies already. :(
[22:03:13] <pragma-> I added Import::Into a few weeks ago.
[22:03:17] <pragma-> That was a nice one.
[22:03:23] <pragma-> At least I think so.
[22:03:29] <tm604> with all those people giving away code for free, I feel it'd be rude /not/ to use as much of CPAN as possible!
[22:04:06] <pragma-> I've been actively avoiding more dependencies but Import::Into made the cut.
[22:04:06] <thrig> possibly stopping somewhere short of going fullauto
[22:04:54] <pragma-> Might play with Object::Pad in a few packages soon
[22:05:12] <pragma-> maybe even Battleship here.
[22:05:33] <thrig> https://github.com/thrig/ministry-of-silly-vaults/tree/master/bouncing-ball
[22:05:35] <Paperbot> Link title(s): [ ministry-of-silly-vaults/bouncing-ball at master · thrig/ministry-of-silly-vaults · GitHub <https://github.com/thrig/ministry-of-silly-vaults/blob/master/bouncing-ball> ]
[22:05:45] <pragma-> neat
[22:06:14] *** Joins: anglophilic (~seekr@130.44.163.10)
[22:06:17] *** Joins: jabberwok (~wlindley@75.105.20.104)
[22:10:23] *** Joins: cousteau (~cousteau@46.222.52.45)
[22:10:36] *** Quits: cousteau_ (~cousteau@2a02:8084:90e2:5400:dc20:5fff:3407:e9e1) (Read error: Connection reset by peer)
[22:11:32] *** Joins: cousteau_ (~cousteau@2a02:8084:90e2:5400:dc20:5fff:3407:e9e1)
[22:11:33] *** Quits: cousteau (~cousteau@46.222.52.45) (Read error: Connection reset by peer)
[22:14:24] *** Quits: anglophilic (~seekr@130.44.163.10) (Quit: Goodbye, cruel world.)
[22:14:24] *** Quits: seekr (~seekr@130.44.163.10) (Quit: Goodbye, cruel world.)
[22:21:53] *** Joins: kirch (~kirch@tilde.town)
[22:24:54] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[22:31:15] <Grinnz> pragma-: as long as you strongly consider any modules that we strongly recommend, make whatever tradeoffs you feel are appropriate
[22:31:36] <Grinnz> it is definitely possible to overuse CPAN (particularly the lesser quality modules)
[22:31:40] <pragma-> i am strongly considering them indeed
[22:32:06] <Grinnz> but unless your code is quite constrained, you're pretty far from that tipping point
[22:32:31] <Grinnz> (i agree with you about curry, though :)
[22:35:49] <japh> tm604, :(
[22:35:57] *** Quits: magla (~gelignite@55d4ea1a.access.ecotel.net) (Remote host closed the connection)
[22:41:22] *** Joins: Luks_Nuke (~LuksNuke@94.242.245.63)
[22:41:42] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 256 seconds)
[22:43:49] *** Quits: cousteau_ (~cousteau@2a02:8084:90e2:5400:dc20:5fff:3407:e9e1) (Quit: Bye)
[22:52:15] * GumbyPAN CPAN Upload: FFI-Platypus-1.53 by PLICEASE https://metacpan.org/release/PLICEASE/FFI-Platypus-1.53
[22:59:16] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 272 seconds)
[22:59:40] *** Quits: zakame (~zakame@user/zakame) (Quit: WeeChat 2.9)
[23:03:14] *** Joins: krismatrix (~krismatri@38.80.149.51)
[23:05:53] *** Quits: Luks_Nuke (~LuksNuke@94.242.245.63) (Quit: Leaving)
[23:09:02] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:10:28] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 246 seconds)
[23:13:24] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[23:14:19] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Client Quit)
[23:15:34] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[23:15:39] *** Joins: magla (~gelignite@55d4ea1a.access.ecotel.net)
[23:16:18] * GumbyPAN CPAN Upload: XS-Parse-Keyword-0.09 by PEVANS https://metacpan.org/release/PEVANS/XS-Parse-Keyword-0.09
[23:17:17] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Client Quit)
[23:21:18] * GumbyPAN CPAN Upload: Text-Tabs+Wrap-2021.0712-TRIAL by ARISTOTLE https://metacpan.org/release/ARISTOTLE/Text-Tabs+Wrap-2021.0712-TRIAL
[23:21:40] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[23:24:23] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[23:27:06] *** Joins: zakame (~zakame@user/zakame)
[23:27:36] *** Quits: yzhernand (~yzhernand@129.85.8.233) (Ping timeout: 256 seconds)
[23:36:50] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[23:56:06] *** Quits: deadmarshal (~deadmarsh@95.38.115.95) (Ping timeout: 255 seconds)
[23:56:20] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[23:58:46] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
