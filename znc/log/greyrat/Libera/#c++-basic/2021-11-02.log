[00:02:53] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[00:03:50] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[00:18:30] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[00:19:03] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:26:25] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:26:56] *** Joins: ali1234 (~al@user/ali1234)
[00:30:32] *** Quits: hsv1 (~weechat@gateway/tor-sasl/hsv-2) (Quit: WeeChat 3.1)
[00:32:02] *** Joins: hsv-2 (~weechat@gateway/tor-sasl/hsv-2)
[00:32:18] *** Joins: eruditehermit_ (~eruditehe@50.226.189.210)
[00:49:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[00:53:22] *** Quits: eruditehermit_ (~eruditehe@50.226.189.210) (Ping timeout: 260 seconds)
[00:54:23] *** Joins: eruditehermit (~eruditehe@50.226.189.210)
[01:06:01] *** Quits: magla (~gelignite@55d4d950.access.ecotel.net) (Quit: Stay safe!)
[01:11:18] *** Joins: eruditehermit_ (~eruditehe@50.226.189.210)
[01:13:50] *** Quits: eruditehermit (~eruditehe@50.226.189.210) (Ping timeout: 260 seconds)
[01:21:44] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[01:22:41] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[01:28:28] *** Quits: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[01:31:29] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[02:06:30] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[02:08:56] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[02:09:30] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:12:14] *** Joins: kariosfox (~kariosfox@176.221.124.50)
[02:17:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:86ce:9852:a68c:aeee) (Ping timeout: 268 seconds)
[02:19:21] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:37:22] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[02:44:45] *** Quits: kariosfox (~kariosfox@176.221.124.50) (Remote host closed the connection)
[02:56:13] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[02:57:11] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[02:57:54] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[03:09:02] *** Quits: eruditehermit_ (~eruditehe@50.226.189.210) (Ping timeout: 268 seconds)
[03:23:31] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 252 seconds)
[03:24:01] *** Joins: X-Scale` (~ARM@46.50.2.72)
[03:26:22] *** Quits: X-Scale (~ARM@92.250.98.212) (Ping timeout: 260 seconds)
[03:26:47] *** X-Scale` is now known as X-Scale
[03:27:31] *** Joins: Khoyo (~khoyo@user/khoyo)
[03:42:29] *** Joins: eruditehermit_ (~eruditehe@50.226.189.210)
[03:48:18] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[03:49:44] *** Joins: ferdna (~ferdna@user/ferdna)
[03:49:57] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:51:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:00:14] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[04:05:06] *** Quits: eruditehermit_ (~eruditehe@50.226.189.210) (Ping timeout: 260 seconds)
[04:08:09] *** Quits: DSpider (~DSpider@82.79.237.100) (Quit: Leaving)
[04:22:03] *** Quits: hsv-2 (~weechat@gateway/tor-sasl/hsv-2) (Ping timeout: 276 seconds)
[04:23:45] *** Joins: hsv-2 (~weechat@gateway/tor-sasl/hsv-2)
[04:40:04] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:44:16] *** Joins: ferdna (~ferdna@user/ferdna)
[05:10:29] *** Joins: cbreak_ (~cbreak@77-58-201-132.dclient.hispeed.ch)
[05:11:31] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[05:14:07] <bewees> Hi, yesterday I was recommended to pass by const-reference in: `void add_b1(const B2 & b) { m_b1.push_back(b); }`. Is that correct? I'm uncertain, because here https://stackoverflow.com/a/24543391 pass-by-value is used for a deep vector copy. Maybe I got it wrong 
[05:18:31] <Alipha> bewees: void add_b1(B2 b) { m_b1.push_back(std::move(b)); } // would be preferred
[05:22:57] *** Quits: cbreak_ (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[05:23:10] <bewees> Alipha, Got it thanks. I was slow, because I should have applied it to the method like you explained it to me as for the constructor https://dpaste.org/M5ft
[05:25:05] <Alipha> bewees: you should be using `for(const B2 &b : m_b1)` in your for loops so you don't make unnecessary copies
[05:25:08] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[05:25:33] <Alipha> And you can add std::move to line 69. Otherwise it looks good
[05:27:23] <Alipha> ... I would first opt for passing parameters by const reference, unless it's a primitive. But then after writing the function, reflect back on it and see if you're copying the parameter anywhere. If so, change the parameter to pass by value and add std::move
[05:28:36] <Alipha> That is, I would indeed first write add_b1 as `void add_b1(const B2 &b) { m_b1.push_back(b); }` but then realize that push_back makes a copy and then update the code to pass by value and move instead
[05:30:06] <bewees> Alipha, Hm when I  change for(..) to `for(const B2 &b : m_b1` I get "this argument to member function has 'const B2', but function is not marked const"
[05:31:12] <Alipha> bewees: that's a warning, right?
[05:31:53] <bewees> Hm compiling error too "Fehler: Die Übergabe von »const B2« als »this«-Argument streicht Qualifizierer [-fpermissive"
[05:32:20] <bewees> https://dpaste.org/TxNk
[05:32:27] <Alipha> Oh, because of b.name()
[05:33:00] <Alipha> Indeed, your code is not entirely const-correct yet. You need to think about whether or not member functions need to be const member functions.
[05:34:02] <Alipha> name() does not modify the state of the B2 object. So name() should be marked const
[05:34:12] <Alipha> std::string name() const { return m_name; }
[05:34:40] <bewees> Oh the trick was to add const after `std::string name() const`, now it compiled fine
[05:34:49] *** Joins: navidr (uid112413@id-112413.uxbridge.irccloud.com)
[05:34:51] <Alipha> Likewise, you should put const after i() and print()
[05:34:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:35:48] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:d29:7f9f:ec16:1313) (Ping timeout: 268 seconds)
[05:36:26] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 268 seconds)
[05:37:33] <bewees> "put const after i() and print()" Interesting, so not just for function who return anything, but const should be used for function that generally don't have write operations?
[05:38:05] <bewees> ehm s/write/copy/
[05:38:16] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[05:38:25] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:d29:7f9f:ec16:1313)
[05:38:50] <bewees> https://dpaste.org/tk21
[05:39:47] <Alipha> bewees: any function which doesn't modify the members of the object should be marked const
[05:40:26] *** Joins: Khoyo (~khoyo@user/khoyo)
[05:42:21] <bewees> Alipha, Assuming name() would modify member variables then I should use `for (B b: m_b1)`, because it requires a copy to modify it?
[05:43:36] <Alipha> bewees: or for(B &b : m_b1) depending upon if you want the modifications to affect the Bs in m_b1
[05:55:48] <bewees> Okay, now I got it. Thank you, I think it's good I asked, had many mistakes in it :-)
[05:57:32] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[06:06:01] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[06:20:15] *** Joins: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it)
[06:22:35] *** Quits: The_Jag_ (~The_Jag@host-87-16-87-93.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[06:24:34] *** Joins: Khoyo (~khoyo@user/khoyo)
[06:48:26] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 260 seconds)
[07:02:46] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[07:19:48] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[07:54:36] *** Quits: navidr (uid112413@id-112413.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:07:15] *** Joins: gggpkm (~gggpkm@111.63.44.13)
[08:09:19] *** Quits: bewees (~bewees@user/bewees) (Remote host closed the connection)
[08:09:31] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:09:54] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:11:02] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Remote host closed the connection)
[08:11:30] *** Joins: gggpkm (~gggpkm@60.10.23.160)
[08:12:32] *** Quits: gggpkm (~gggpkm@60.10.23.160) (Remote host closed the connection)
[08:12:57] *** Joins: gggpkm (~gggpkm@60.10.23.160)
[08:21:41] *** Joins: Khoyo (~khoyo@user/khoyo)
[08:29:14] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (Quit: WeeChat 3.2.1)
[08:40:54] *** Quits: engest (~engest@50.126.100.152) (Ping timeout: 260 seconds)
[08:41:56] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:42:46] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:47:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:48:19] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[08:49:48] *** Joins: eruditehermit_ (~eruditehe@157-131-196-31.fiber.dynamic.sonic.net)
[08:50:32] *** Quits: gggpkm (~gggpkm@60.10.23.160) (Remote host closed the connection)
[08:51:52] *** Joins: gggpkm (~gggpkm@111.63.44.13)
[08:52:32] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Remote host closed the connection)
[08:56:50] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 268 seconds)
[09:03:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:04:22] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:10:41] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[09:24:08] *** Parts: juanfra (~juanfra@user/juanfra) ()
[09:30:22] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:33:27] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Remote host closed the connection)
[09:33:52] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[09:34:02] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:35:04] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:37:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 264 seconds)
[09:38:50] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[09:44:51] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:46:06] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[09:46:47] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Read error: Connection reset by peer)
[09:47:10] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[09:47:30] *** Joins: kariosfox (~kariosfox@195.164.182.200)
[09:48:10] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[10:23:57] *** Quits: kariosfox (~kariosfox@195.164.182.200) (Read error: Connection reset by peer)
[10:25:27] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:26:45] *** Joins: gggpkm_ (~gggpkm@111.63.44.13)
[10:29:10] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[10:30:35] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 268 seconds)
[10:39:00] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:40:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:50:34] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[10:57:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:02:01] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[11:03:42] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[11:16:48] *** Joins: gggpkm__ (~gggpkm@60.10.23.160)
[11:20:31] *** Quits: gggpkm_ (~gggpkm@111.63.44.13) (Ping timeout: 268 seconds)
[11:24:49] *** Joins: gggpkm_ (~gggpkm@60.10.23.160)
[11:28:02] *** Quits: gggpkm__ (~gggpkm@60.10.23.160) (Ping timeout: 260 seconds)
[11:45:21] *** lkor is now known as lionkor
[11:55:29] *** Joins: gggpkm__ (~gggpkm@111.63.44.13)
[11:56:32] *** Quits: gggpkm__ (~gggpkm@111.63.44.13) (Remote host closed the connection)
[11:58:46] *** Quits: gggpkm_ (~gggpkm@60.10.23.160) (Ping timeout: 260 seconds)
[12:20:26] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:24:49] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:26:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[12:30:30] *** Quits: eruditehermit_ (~eruditehe@157-131-196-31.fiber.dynamic.sonic.net) (Ping timeout: 260 seconds)
[12:30:36] *** Joins: eruditehermit_ (~eruditehe@50.226.189.210)
[12:36:34] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[12:41:18] *** Quits: eruditehermit_ (~eruditehe@50.226.189.210) (Ping timeout: 268 seconds)
[12:44:38] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:17:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:22:47] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:39:56] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[13:41:18] *** Joins: supernova (~quassel@2405:9800:ba11:6207:360b:958:40f6:a5cf)
[13:53:24] *** Joins: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[13:53:39] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[13:55:52] *** Joins: riksu-raksu (riksteri@gateway/vpn/airvpn/riksteri)
[13:56:32] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Ping timeout: 268 seconds)
[14:06:24] *** Quits: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:43:50] *** Joins: DSpider (~DSpider@82.79.237.7)
[14:55:03] *** Joins: markong (~kvirc@213.146.188.203)
[14:56:48] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:01:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[15:01:58] *** Joins: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:03:10] *** Quits: gggp_ (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:03:47] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:13:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:23:07] *** very_sneaky_ is now known as very_sneaky
[15:26:27] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:36:44] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[15:50:50] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:55:33] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 268 seconds)
[16:01:23] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:25:09] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[16:28:55] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 265 seconds)
[16:30:11] *** Joins: bewees (~bewees@user/bewees)
[16:30:36] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:31:52] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:32:30] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:45:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:45:46] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[16:46:24] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:47:24] *** Quits: supernova (~quassel@2405:9800:ba11:6207:360b:958:40f6:a5cf) (Quit: No Ping reply in 180 seconds.)
[16:48:32] *** Joins: supernova (~quassel@2405:9800:ba11:6207:8f43:bde3:a0a9:65e2)
[16:48:46] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:49:54] <bewees> Hi, if you pass by reference to f(string& s) and from f pass also s further by reference to g(string& s) will there be a copy in g, because g takes a string to a reference or does the compiler figure it out and magically pass the reference without copies over to g? Test case: https://ideone.com/L8yBtb If it is fine to do and the compiler optimizes it then it is probably used if the goal is to change the original value in main, whereas you would use pass 
[16:49:54] <bewees> by value and std::move if the goal is that the nested objject/function steals from the variable in main
[16:51:54] *** Quits: supernova (~quassel@2405:9800:ba11:6207:8f43:bde3:a0a9:65e2) (Client Quit)
[16:53:13] *** Joins: supernova (~quassel@2405:9800:ba11:6207:8f43:bde3:a0a9:65e2)
[17:04:52] *** Quits: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it) (Read error: Connection reset by peer)
[17:05:21] <Alipha> bewees: I'm not sure what you think is magical about it, but indeed, there's no copies because you're just passing reference to reference. And it has nothing to do with "optimization"--everything here is the defined behavior of how c++ is supposed to be.
[17:05:55] *** Joins: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it)
[17:06:24] *** Joins: engest (~engest@50.126.101.161)
[17:07:16] <Alipha> And this example also illustrates that std::move doesn't actually do any moving--it's just a cast to an rvalue reference so that you can pass an lvalue to a function expecting an rvalue reference
[17:15:26] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[17:16:54] <Alipha> bar accepts a std::string&&, and so it's advertising that it's going to steal e's resources, but it never does. I mean, it overwrites e by doing `e = "bar";`, but that isn't really in the spirit of what an rvalue reference is for. That's behavior of what you use an lvalue reference for
[17:20:00] <Alipha> If you removed the `e = "bar";`, then bar doesn't change e at all, and illustrates that std::move doesn't actually do any moving. It's just required that you use std::move when you call a function taking an rvalue reference to clarify "hey, you're passing an lvalue to a function that claims its going to steal the lvalue's resources. Are you sure you want to do that?"
[17:28:06] <bewees> "overwrites e by doing `e = "bar" [..]. That's behavior of what you use an lvalue reference for" Is it the same cost as an lvalue reference, because there's no copying involved (memory stays in foo's lvalue)?
[17:30:11] <bewees> Is it enough to add bar(string && s) { `string new_s = s;` } to steal foo's lvalue memory?
[17:35:48] <Alipha> Cost of lvalue and rvalue references are the same
[17:36:08] <Alipha> `string new_s = std::move(s);`
[17:37:20] <Alipha> If a parameter is an rvalue reference, then you should use std::move on it somewhere inside the function
[17:37:43] <bewees> Right, without it I would end up with a copy
[17:39:19] <bewees> Got it, nevertheless I will use lvalue const if I don't move anything - rvalue ref only if performance is very important and instead call by value with move to spare n^2 function/constructor definitions
[17:39:33] <bewees> Thank you for taking the time
[18:01:54] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[18:11:47] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[18:40:35] *** Joins: meator (~meator@user/meator)
[18:48:14] *** Joins: markong (~kvirc@213.146.188.203)
[19:04:57] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[19:06:08] *** Joins: gggpkm (~gggpkm@111.63.14.119)
[19:26:05] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[19:31:03] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:31:10] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[19:32:38] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[19:43:07] *** Quits: gggpkm (~gggpkm@111.63.14.119) (Ping timeout: 268 seconds)
[20:03:35] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[20:04:06] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[20:17:59] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[20:18:16] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[20:23:06] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9e2e:d238:6ddc:c88f)
[20:42:26] *** Joins: kariosfox (~kariosfox@176.221.124.50)
[21:05:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:10:41] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[21:16:13] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 268 seconds)
[21:17:20] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[21:17:37] *** Joins: markong (~kvirc@213.146.188.203)
[21:23:45] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Remote host closed the connection)
[21:25:28] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[21:28:57] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[21:37:24] *** Quits: cow_2001 (~un@user/cow-2001/x-5712099) (Quit: cow_2001)
[21:42:24] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[21:43:30] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[21:44:30] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[21:47:18] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[21:54:27] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[21:54:42] *** Quits: kariosfox (~kariosfox@176.221.124.50) (Ping timeout: 260 seconds)
[21:58:35] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[22:10:38] *** Joins: magla (~gelignite@55d4b8af.access.ecotel.net)
[22:10:46] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[22:11:55] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[22:23:04] *** Joins: eruditehermit_ (~eruditehe@50.226.189.210)
[22:59:34] *** Quits: supernova (~quassel@2405:9800:ba11:6207:8f43:bde3:a0a9:65e2) (Ping timeout: 260 seconds)
[23:17:24] *** Quits: riksu-raksu (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksu-raksu)
[23:21:50] *** Joins: eruditehermit (~eruditehe@50.226.189.210)
[23:23:52] *** Quits: eruditehermit_ (~eruditehe@50.226.189.210) (Ping timeout: 268 seconds)
[23:31:50] *** Quits: eruditehermit (~eruditehe@50.226.189.210) (Ping timeout: 260 seconds)
[23:43:45] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:46:43] *** Quits: hsv-2 (~weechat@gateway/tor-sasl/hsv-2) (Remote host closed the connection)
[23:46:50] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:47:16] *** Joins: hsv-2 (~weechat@gateway/tor-sasl/hsv-2)
[23:48:53] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[23:49:16] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
