[00:01:53] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[00:02:31] *** Joins: AStorm (astralstor@bc01n02.hswaw.net)
[00:03:53] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[00:05:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[00:07:36] *** Joins: fikran (~fikran@user/fikran)
[00:07:49] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[00:08:18] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[00:08:25] <stwange> Ah I'm getting concurrent.futures._base.CancelledError that probably explains both of my errors
[00:10:25] *** Joins: sonny (~sonny@8.6.144.238)
[00:11:26] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:12:12] *** Parts: sonny (~sonny@8.6.144.238) ()
[00:14:04] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[00:14:29] *** Quits: arbitrandomuser (~antineutr@103.100.150.2) (Ping timeout: 264 seconds)
[00:16:37] *** Joins: Nspace (~Nspace@user/nspace)
[00:18:23] *** Quits: Jefren1 (~Jefren@206.253.157.206) (Ping timeout: 264 seconds)
[00:18:32] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[00:19:13] *** Quits: redoc (~redoc@user/redoc) (Read error: Connection reset by peer)
[00:19:21] *** Joins: redoc_ (~redoc@user/redoc)
[00:19:21] *** redoc_ is now known as redoc
[00:19:33] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[00:19:49] <aphysically> huh it looks like pylance isn't available in vscodium; only in vscode I guess
[00:20:22] *** Quits: Nspace (~Nspace@user/nspace) (Client Quit)
[00:21:41] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 264 seconds)
[00:21:41] <stwange> Is there a better way to run async code with semaphores than with await and gather? I think maybe I'm getting a timeout
[00:21:47] *** Joins: Jefren1 (~Jefren@206.253.157.220)
[00:21:53] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[00:23:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:23:08] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[00:23:24] *** Joins: Bakunin (~Lindis@user/lindis)
[00:24:31] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:24:31] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[00:24:40] *** Quits: raxor2k (~raxor2k@78.158.233.120) ()
[00:24:50] *** Joins: cheater (~Username@user/cheater)
[00:25:08] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:25:14] <aphysically> I wonder if there's an open source language server for vs code that can use pyright
[00:25:35] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[00:25:55] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[00:25:58] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:27:00] <zln> Is there a good way/algorithm to calculate how to put some entities with diffrerent widths and heights, on a say grid of 10x10 without overlapping on same coordinates
[00:27:05] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Ping timeout: 256 seconds)
[00:27:36] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:27:36] *** Quits: learner36 (~learner36@cpef81d0fa12c13-cmf81d0fa12c10.cpe.net.cable.rogers.com) (Ping timeout: 245 seconds)
[00:28:03] <BtbN> That sounds like one of the classic P vs. NP examples. So... probably not
[00:28:43] <zln> >)
[00:29:57] <braxas> in python regex, what is the difference between \u0001 and \U0001?
[00:30:18] *** Joins: znpy (~znpy@user/znpy)
[00:30:45] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[00:30:50] <zln> I was using a pandas dataframe to represent the grid but I couldn't find a good way go sample 'cells' according to entities width and height so I think I'm better off with a list of lists
[00:31:14] <zln> BtbN: I had to read on P vs NP Problem :D
[00:31:15] *** Joins: cheater (~Username@user/cheater)
[00:31:35] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 264 seconds)
[00:31:41] <znpy> hello, dumb question: what is one supposed to say for virtual environments nowadays? venv? virtualenv?
[00:32:17] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[00:32:58] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 258 seconds)
[00:33:05] <braxas> okay found it: https://docs.python.org/3/howto/unicode.html#unicode-literals-in-python-source-code
[00:33:06] <zln> BtbN: I was thinkink of creating a list of lists (10x10) where each element is a object, default value False, and when I put a entitiy on some consequitive cells, my idea is to make those 'cells' true and only sample False ones. Any feedback on that? :)
[00:33:07] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[00:33:44] <BtbN> That does not sound like a solution to the problem to me?
[00:34:20] <BtbN> Randomly filling it in until you can't fit another one is obviously not a huge challenge. But optimally filling it very much is.
[00:34:25] <zln> well, If I cannot sample cells that is true, then I cannot "put" other stuff on occupied ones I was reasoning
[00:34:48] <zln> Well, randomly is okay at this stage :)
[00:35:25] *** Quits: zava (~zava@ip5f5bdf0f.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[00:35:33] <moonmoon> are all of the elements rectangular, or are they oddly-shaped?
[00:35:42] <zln> BtbN: Is there a good way to pick 'cells' neighbouring each other in a set width or height?
[00:35:46] <moonmoon> is rotation allowed?
[00:35:50] <zln> moonmoon: rectangular
[00:35:58] <zln> rotation horizontally and vertically
[00:36:04] <zln> no diagonals
[00:37:09] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:38:03] <aphysically> jinsun: huh apparently there are some pyright lints that aren't surfaced by strict mode but do can be surfaced by things implementing pyright as language server
[00:38:10] <aphysically> probably there's a config for it somewhere....
[00:40:06] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[00:40:37] <jinsun> aphysically: oh example?
[00:41:56] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[00:42:21] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[00:42:33] *** Quits: Jefren1 (~Jefren@206.253.157.220) (Ping timeout: 258 seconds)
[00:42:50] <zln> moonmoon: you got my hopes high with your questions :p
[00:42:54] *** Joins: lastshell (~lastshell@user/lastshell)
[00:43:08] *** Joins: arinov (~arinov@213.194.126.155)
[00:43:15] <aphysically> jinsun: I had future.add_done_callback(lambda fut: fv.update_avail.set())
[00:43:21] <aphysically> there was a lint that was warning fut was unused
[00:43:22] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:14da:3bf0:27ee:7397) (Quit: Client closed)
[00:43:23] <jinsun> aphysically: there is an open source pyright extension too that should work with vscodium too https://open-vsx.org/extension/ms-pyright/pyright (I haven't used it though, I just use the proprietary stuff directly from MS)
[00:43:24] *** Joins: henistein (~henistein@2001:8a0:fc8f:9501:c3ad:15f:4fd1:4f31)
[00:43:58] <moonmoon> zln: I'm still thinking about it. My initial impression is that it is very unlikely that no efficient algorithm exists
[00:44:08] <aphysically> yeah maybe; vscodium is just easier to install from my distro jinsun
[00:44:08] <moonmoon> er
[00:44:12] <moonmoon> double negatie
[00:44:19] <moonmoon> *it is very likely that no efficient algorithm exists
[00:44:20] <aphysically> I'm mostly just playing around with it, I *probably* won't move from vim
[00:44:23] *** dre_ is now known as dre
[00:44:45] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[00:45:44] *** Joins: Jefren1 (~Jefren@208.104.190.12)
[00:46:01] <zln> moonmoon: is there a more dirty way that is sufficent :p I was thinking of randomly picking some cells from a list of lists (10x10), cells need to be picked neighbouring each other when the 'rectangle' is 5cells wide or hight for example.
[00:46:02] <jinsun> aphysically: oh yes variable is not accessed, pylance shows that, it is useful usually, annoying sometimes when you write a function to satisfy some API and don't really want to use the parameter
[00:46:22] <zln> Total 20 squares are going to get occupied
[00:46:25] <aphysically> I just changed fut to _ (that needs an argument to be compatible with the callback API)
[00:46:31] <zln> so it's not that much
[00:46:41] <aphysically> but yeah, it's generated by pyright but you must have to enable it separately
[00:46:48] <jinsun> yeah for single argument changing to _ works
[00:46:58] <zln> 5, 4, 3, 2, 2, 1, 1,
[00:47:11] <jinsun> won't help if the api cares about the names, or you have more than one unused parameter
[00:47:27] <aphysically> right now I'm playing with neovim (normally I use vim)
[00:47:29] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[00:48:01] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 245 seconds)
[00:48:25] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:49:02] <moonmoon> zln: if you know a priori what you're trying to populate the grid with, and that it will be very sparse (majority of cells unoccupied, as in your example), then you don't need anything clever
[00:49:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:49:05] *** Joins: ano (~ano@user/ano)
[00:49:29] <moonmoon> the hard part is solving it generically where you do not know anything about the shapes being put in (neither their size or their number)
[00:50:11] <moonmoon> like if you know it's always going to be those shapes in those quantities... just precompute it and hardcode the results
[00:50:11] *** Quits: emerent (~quassel@p200300cd574855b5ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[00:50:19] *** Joins: emerent (~quassel@p200300cd57485529ba27ebfffed28a59.dip0.t-ipconnect.de)
[00:50:33] <zln> Yeah, that's true. But in this case I have that information. I think itertools.islice and cycle could get usefull
[00:50:38] <moonmoon> or do a greedy approach, that'll probably work too
[00:51:11] <moonmoon> (put biggest thing at 0,0, skip to the next open block, put next-biggest thing that fits, and keep scanning through to put things that fit)
[00:51:11] <zln> yeah, I'll try with something that just works for my needs in this case >(
[00:51:40] <zln> thanks
[00:53:30] *** Quits: Jefren1 (~Jefren@208.104.190.12) (Ping timeout: 260 seconds)
[00:54:40] *** Joins: kurfen (~kurfen@45.152.181.20)
[00:54:41] *** Quits: stealth[] (~stealth]@2001:9e8:36d0:d300:c9c2:fb4b:7972:6b91) (Quit: Leaving)
[00:55:08] *** Joins: Jefren1 (~Jefren@70.35.66.216)
[00:58:45] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[00:59:53] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[00:59:56] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[01:00:06] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[01:01:16] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[01:02:29] <stwange> This code https://pastebin.com/fPLd35X1 is using async for DNS lookups and it's giving me a concurrent.futures._base.CancelledError every time (as soon as num executions go above num semaphores). Is there something I'm obviously doing wrong?
[01:03:08] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[01:03:41] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[01:03:53] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[01:04:38] <dman777> does python have a way to destructor a dictionary like JavaScript does for objects?
[01:05:01] <dman777> like in js.... const { foo } = foobar;
[01:05:51] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:06:05] <grym> dman777: you can del() but you rarely need to
[01:06:42] <ChrisWarrick> I think they meant destructure
[01:07:00] <ChrisWarrick> and there’s no way to do it in Python
[01:08:02] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[01:08:30] <dman777> ChrisWarrick: ok, thanks
[01:09:39] *** Joins: akk (~akk@75.161.146.115)
[01:09:54] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[01:09:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:11:53] *** Joins: grooverman (~grooverma@177.95.12.14)
[01:15:27] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[01:16:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:17:49] <whatsupdoc> can __next__ be defined using generators?
[01:18:17] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[01:18:46] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:19:09] <oprypin_> whatsupdoc, yea but just define __iter__ instead
[01:19:24] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:19:49] <nedbat> whatsupdoc: if you write a generator, you don't have to explicitly define __iter__ or __next__
[01:19:59] *** Joins: audiobirb (~audio@2603-8081-1800-1546-c8cf-4495-de94-b3f6.res6.spectrum.com)
[01:20:04] <nedbat> whatsupdoc: or, def __iter__(self): ... yield ...    and you have iteration
[01:20:39] <whatsupdoc> but i thought __iter__ is supposed to return an iterator object?
[01:20:50] <whatsupdoc> so why would it be yielding the next value?
[01:21:16] *** Joins: jazzy (~jaziz@user/jaziz)
[01:21:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[01:21:34] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:21:46] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 245 seconds)
[01:21:55] <nedbat> whatsupdoc: functions using yield are generators, so when you call them, you get an iterator
[01:22:01] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[01:22:28] <nedbat> whatsupdoc: if you need to define __iter__, the simplest way is to use yield to define the iteration right there.
[01:23:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[01:23:45] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[01:25:30] <whatsupdoc> oh i see, thanks!
[01:25:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:25:58] *** Joins: vlm (~vlm@user/vlm)
[01:26:01] <_Ev> https://bpa.st/BJCQ
[01:27:13] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:27:19] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[01:28:18] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:31:01] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[01:32:40] <ttys000> is there a reccomended webstack these days for hosting a python application?
[01:32:44] <ttys000> i mean, sure, nginx.
[01:32:52] <ttys000> and database is subjective, so not that
[01:33:09] <ttys000> i just mean, for the python itself. Flask? but flask shouldn't be run in production, so?
[01:33:24] <ttys000> gunicorn?
[01:33:30] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[01:34:01] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:35:11] *** Quits: yrlnry (~mjd@pool-74-109-22-90.phlapa.fios.verizon.net) (Ping timeout: 264 seconds)
[01:35:27] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[01:36:08] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[01:37:12] *** Joins: adder (~adder@user/adder)
[01:38:02] <nedbat> ttys000: you can use flask in production. other options are django or fastapi
[01:38:14] <nedbat> ttys000: gunicorn and flask are different levels in the stack
[01:38:32] <ttys000> i just mean i need something to that i proxy the requests to from nginx
[01:38:38] <ttys000> that will read those python files and run it
[01:38:39] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:38:46] <BtbN> I'm still trying to figure out how to migrate to the latest Flask version.
[01:38:58] <BtbN> Their "migration" document is just a huge wall of text with practically no guidelines
[01:39:01] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[01:39:04] *** Joins: wolfgang (~wolfgang@101.174.167.116)
[01:39:08] *** Quits: Akuli (~Akuli@82-203-161-22.bb.dnainternet.fi) (Quit: Leaving)
[01:39:16] <nedbat> ttys000: are you looking for a python web framework, or a web server to put in front of the application?
[01:39:19] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[01:40:53] <ttys000> my application is very simple. but certainly a bit of a framework wouldn't hurt, I have worked with Flask before but not many others. I once tried Django and found I did not like it much, it seemed to make simple things overly complicated.
[01:40:59] <ttys000> perhaps i should try it again.
[01:41:40] *** Quits: ubert (~Thunderbi@178.115.57.1.wireless.dyn.drei.com) (Remote host closed the connection)
[01:41:46] <ttys000> i have not yet built the application. so it's a good time to decide on a framework.
[01:42:29] <ttys000> but are you saying that these frameworks provide their own server? or would i still run them with wsgi or gunicorn or whatever that green one was?
[01:44:47] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Quit: No Ping reply in 180 seconds.)
[01:45:57] *** Quits: henistein (~henistein@2001:8a0:fc8f:9501:c3ad:15f:4fd1:4f31) (Quit: Client closed)
[01:46:12] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[01:46:39] *** Quits: aknot (~aknot@2603:900a:1503:17bb:2a53:ba8b:c58:98f1) (Ping timeout: 260 seconds)
[01:47:25] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[01:48:43] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[01:48:45] <nedbat> ttys000: the framework doesn't bring a server, you need something like gunicorn
[01:49:13] <dextercd> flask includes its own server for development but it's not supposed to be used in prod.
[01:49:22] <nedbat> dextercd: right, django does that too
[01:50:25] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:50:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:51:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:51:19] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Ping timeout: 260 seconds)
[01:51:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:52:18] *** Quits: wolfgang (~wolfgang@101.174.167.116) (Remote host closed the connection)
[01:52:31] <AhmedAmerican> when i open a url within Chrome and select `translate to English`, can i achieve the same using Python? is there a module for that
[01:52:57] <ttys000> aight, so if i just use gunicorn and flask that'll work fine?
[01:53:00] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 260 seconds)
[01:53:10] <ttys000> or is there something more popular these days that all the cool kids are using
[01:53:38] <jwhisnant_> ttys000: although most frameworks do have a dev server included, that you can develop against ...
[01:53:42] <RougeR> any sqla gurus about?
[01:53:48] <grym> ttys000: fastAPI is like flask but better
[01:53:51] <RougeR> got a quickie and duno if its expected behaviour
[01:54:02] <RougeR> grym, different*
[01:54:17] <RougeR> i do  like the look of fastAPI though and have used it a bit, want to more
[01:54:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:54:51] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:54:51] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[01:55:15] <RougeR> ttys000, cant go wrong with gunicorn and flask, running my code with it in my work project as we speak
[01:55:22] <jwhisnant_> RougeR: if you want to serve an API, its the way to go.
[01:55:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[01:55:32] <RougeR> but yeah fastAPI is neat
[01:55:43] <RougeR> jwhisnant_, eh its a way to go
[01:56:06] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[01:56:08] <RougeR> id encourage them to look at it and see if they like it and have the time to pick it up
[01:56:44] <RougeR> im looking to port our stuff at work to fastAPI when i get the time and can convince the manager
[01:56:58] <jwhisnant_> RougeR: best python one I have found ...
[01:57:05] <RougeR> i dont disagree
[01:57:22] <RougeR> its just more opinionated and takes a little more to get going
[01:57:37] <RougeR> its not just an asgi flask
[01:58:36] *** Joins: jwisbell35 (~jwisbell3@047-036-214-124.res.spectrum.com)
[01:58:43] <RougeR> anyway, go check out fastAPI ttys000 hope you like it, if not still cant go wrong with flask
[01:58:54] <ttys000> thanks guys
[01:59:12] <ttys000> and gunicorn or WSGI? or anything else there? or just go with gunicorn?
[02:00:59] <jwhisnant_> ttys000: uvicorn, hypercorn (but these are ASGI servers)
[02:01:06] <RougeR> gunicorn is a safe bet for wsgi
[02:02:14] <RougeR> yeah its worth looking at asgi
[02:02:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[02:03:29] <RougeR> guess thereis starlette as well
[02:03:35] <RougeR> which is what fastAPI is based off
[02:03:53] <RougeR> not tried it, but its closer to a true ASGI microframework
[02:04:13] <AhmedAmerican> when i open a url within Chrome and select `translate to English`, can i achieve the same using Python? is there a module for that
[02:04:30] <RougeR> i can almost certainly say yes
[02:04:34] *** Joins: jess (~jess@libera/staff/jess)
[02:04:47] *** Joins: ionface (~ionface@user/ionface)
[02:05:35] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:07:05] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:08:35] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 246 seconds)
[02:08:41] *** Quits: waynew (~wayne@user/waynew) (Quit: gopher://gopher.waynewerner.com)
[02:09:49] <ChrisWarrick> it’s trivial, as long as you have a translation API (google’s isn’t free)
[02:10:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[02:11:05] *** Quits: Jefren1 (~Jefren@70.35.66.216) (Ping timeout: 260 seconds)
[02:11:32] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[02:11:51] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:13:40] *** Joins: wolfgang (~wolfgang@101.174.167.116)
[02:15:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:15:22] <whatsupdoc> Is this common in Python? https://dpaste.com/9VKSXTE6Y
[02:15:40] <nedbat> whatsupdoc: which part of it?
[02:15:49] <whatsupdoc> ...where you have an event class and another class that fires off all the events
[02:16:34] <grym> whatsupdoc: inheriting from list is a bit dodgy in my book
[02:16:35] <whatsupdoc> Seeing it multiple times, but never seen it in C/C++
[02:16:57] *** Joins: fikran (~fikran@user/fikran)
[02:17:23] <whatsupdoc> (could be that I'm just a newb)
[02:17:49] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[02:18:14] <coc0nut> with open("file.txt", "r") as test_file:
[02:18:30] <coc0nut> this should read a file in the same folder of the .py document youre writing on right?
[02:18:49] <grym> coc0nut: in the directory in which the program is executed
[02:18:50] <whatsupdoc> yes
[02:18:58] <grym> not necessarily the directory in which the program itself exists
[02:19:37] <coc0nut> its the only code of the document right now. with some print("The file is opened") and so on... but it doesnt grip the file. like its not there
[02:19:58] <grym> coc0nut: open("./file.txt",'r') means "next to the .py file"
[02:20:13] <grym> but there are, in general, better ways to do this
[02:20:22] <whatsupdoc> Everyone is probably like "Java written in Python"
[02:20:49] <coc0nut> doesnt work either, but im very sure the file is in the same folder and everything should be okay
[02:20:54] <nedbat> whatsupdoc: it doesn't seem unusual to me
[02:21:04] <coc0nut> no modules to load or anything? the course im taking is python3.7 i have python3.9
[02:21:15] <nedbat> whatsupdoc: there might be better ways to do it, and the isinstance seems unfortunate
[02:22:05] <grym> coc0nut: can we see your code? https://bpa.st/+python+text
[02:22:07] <njt> aphysically: ah, thank you very much, that makes total sense, will unpack my arguments when calling the function
[02:22:10] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[02:22:29] <aphysically> (or make it a tuple)
[02:22:55] <aphysically> for tuple mypy will keep and understand the individual types so it doesn't have the same problem as the list with size
[02:23:00] *** Joins: jazzy2 (~jaziz@user/jaziz)
[02:23:04] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[02:23:05] <coc0nut> https://dpaste.com/H3KLWJ3KF
[02:23:22] <coc0nut> @ grym
[02:23:40] *** Joins: Roey (~Roey@user/Roey)
[02:24:00] <coc0nut> is there some ownership in linux that might be crashing this ?
[02:24:49] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Quit: Leaving)
[02:25:51] <coc0nut> nah, isnt ownership of files
[02:26:19] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:681f:dbec:e434:7504) (Ping timeout: 260 seconds)
[02:26:40] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[02:27:27] <nedbat> coc0nut: what happens when you run this?
[02:27:38] *** Joins: Nspace (~Nspace@user/nspace)
[02:27:57] <coc0nut> FileNotFoundError: [Errno 2] No such file or directory: 'cupcakes.txt'
[02:28:01] <coc0nut> but the file is there
[02:28:03] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:65f3:f1a8:ba50:30b4)
[02:28:10] <nedbat> coc0nut: how are you running the program?
[02:28:14] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Quit: Client closed)
[02:28:17] <coc0nut> inside vs code
[02:28:35] *** _subopt is now known as subopt
[02:28:42] <nedbat> coc0nut: add this as the first line:   import os; print("Current directory:", os.getcwd())
[02:29:13] <coc0nut> still the same error
[02:29:21] <nedbat> coc0nut: yes, but what does it print?
[02:29:56] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[02:29:59] <coc0nut> you mean what cupcakes.txt contains? or the traceback?
[02:30:20] <nedbat> coc0nut: the line I asked you to add to the program: it prints something.
[02:30:29] <coc0nut> nope, nothing
[02:30:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[02:30:37] <jinsun> scroll up
[02:30:38] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Remote host closed the connection)
[02:30:41] <nedbat> coc0nut: can you pastebin the full program again?
[02:30:48] <coc0nut> oh yeah
[02:30:51] <nedbat> coc0nut: ok
[02:30:55] <coc0nut> prints current directory
[02:31:00] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[02:31:05] <coc0nut> and yeah, theres the problem i guess
[02:31:40] <coc0nut> so i need to cd into the folder before i run it then?
[02:32:29] <coc0nut> yeah it works
[02:32:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:32:51] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:32:59] <jinsun> if it is in the same folder as the py file, then you can use pathlib.Path(__file__).parent.joinpath(filename) instead of filename
[02:33:17] <jinsun> then you won't have to cd
[02:34:06] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[02:34:30] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[02:34:30] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[02:34:45] *** Quits: nedbat (~nedbat@python/psf/nedbat) (Quit: ZNC - http://znc.in)
[02:35:02] *** Joins: elkclone (~elkclone@user/elkclone)
[02:35:40] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[02:36:09] <ezzieyguywuf> "TypeError: unsupported operand type(s) for +=: 'int' and 'Fraction'" what do I have to implement in Fraction to fix this?
[02:36:45] *** Quits: nedbat (~nedbat@python/psf/nedbat) (Remote host closed the connection)
[02:37:29] *** Joins: jay-m1262 (~jay-m@129.0.205.222)
[02:37:38] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[02:38:01] <coc0nut> nedbat, import os; print("Current directory:", os.getcwd()) only prints if its the only code i guess ?
[02:38:11] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:38:24] <coc0nut> or at the bottom ? :p
[02:38:32] <nedbat> ezzieyguywuf: sorry, dc
[02:38:34] <nedbat> coc0nut: it will print any time it's in a program
[02:38:36] <nedbat> any time it's run
[02:39:05] <ezzieyguywuf> nedbat: dc?
[02:39:18] <coc0nut> ok, because it doesnt print, but when I comment out the rest it does
[02:39:19] <nedbat> ezzieyguywuf: disconnected, if you answered i didn't see it
[02:39:34] <nedbat> coc0nut: hmm, that doesn't make sense, can you pastebin the program?
[02:40:21] <jinsun> ezzieyguywuf: += is `__iadd__`
[02:40:34] <ezzieyguywuf> jinsun: hrm, I tried that...
[02:40:37] <ezzieyguywuf> nedbat: I can, just a sec
[02:40:56] <ezzieyguywuf> nedbat: http://dpaste.com/HSXK94YUK
[02:41:04] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:41:10] <coc0nut> nedbat, https://dpaste.com/868YE2MBU <- this works, but doesnt print the current dir. if I comment out all except the import os: line, it prints
[02:41:33] *** Quits: jay-m1262 (~jay-m@129.0.205.222) (Read error: Connection reset by peer)
[02:41:57] *** Quits: greatgatsby_ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Remote host closed the connection)
[02:42:30] <jinsun> ezzieyguywuf: you can do your_class += some_int but not reverse, if you were trying that, you'll have to implement iadd for ints which you cannot do
[02:42:44] *** Joins: Jefren1 (~Jefren@70.35.66.68)
[02:43:14] <whatsupdoc> ezzieyguywuf: google question, i solved this a few days ago, just use numpy
[02:43:32] <ezzieyguywuf> jinsun: ah hah, that makes sense
[02:43:44] <ezzieyguywuf> whatsupdoc: numpy is not an option unfortunately.
[02:43:45] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[02:43:46] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:43:50] <whatsupdoc> worked for me
[02:44:00] <whatsupdoc> my solution was like 20 lines
[02:44:02] <ezzieyguywuf> jinsun: I can make my `total = Fraction(0, 1)` instead of `total = 0` and then I should be ok
[02:44:05] *** Joins: alzgh (~alzgh@user/alzgh)
[02:44:13] <whatsupdoc> Crazy that yours is like 200
[02:45:34] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[02:45:49] <whatsupdoc> I don't get why you are defined Fraction
[02:45:52] <whatsupdoc> Just use from fractions import Fraction
[02:46:47] *** Joins: mickey8 (~user@user/mickey)
[02:47:00] <nedbat> coc0nut: i think it prints the current directory, and then the contents of the file, so you might miss the current directory
[02:47:07] <whatsupdoc> idk, I don't believe in reinventing the wheel
[02:47:10] <ezzieyguywuf> whatsupdoc: hah! didn't know that was a thing
[02:47:12] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[02:47:15] <ezzieyguywuf> is it in py 2.7?
[02:47:24] <whatsupdoc> idk, i passed it using it
[02:48:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[02:48:28] <nedbat> whatsupdoc: what do you mean by "google question"?
[02:48:48] <whatsupdoc> Google's secret recruiting puzzle, Foobar
[02:48:56] <whatsupdoc> not-so-secret
[02:49:00] <nedbat> i see
[02:49:20] <whatsupdoc> I can send you an invite ;)
[02:49:20] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[02:49:25] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:49:26] <nedbat> nah
[02:49:28] <whatsupdoc> You'd probably finish it in like 1 hour lol
[02:49:38] <coc0nut> nedbat,  hehe youre right :p
[02:49:47] <whatsupdoc> It's fun
[02:49:59] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:50:06] *** Joins: Wulf (~Wulf@user/wulf)
[02:50:07] *** Quits: Jefren1 (~Jefren@70.35.66.68) (Ping timeout: 260 seconds)
[02:50:14] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:51:35] *** Joins: stavros (~stavros@pon1039.cpe.hcn.gr)
[02:51:36] <stavros> Hello
[02:51:59] <whatsupdoc> ezzieyguywuf: yep, my solution for that one was exactly 20 lines, but i used a lot of list comprehensions lol
[02:51:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[02:52:10] *** Joins: Jefren1 (~Jefren@70.35.67.153)
[02:52:22] <stavros> Is it possible to make a context manager with contextlib that will return something in the "as f" bit? I'd like to make a context manager that can be called to print something, so I'd do "`with mymanager as m: m.print("hello")`
[02:52:31] *** Joins: jay-m1262 (~jay-m@129.0.204.209)
[02:52:31] *** Joins: brettgilio (~brettgili@x-node.gq)
[02:53:10] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:53:59] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:54:46] *** Joins: Skyfire (~pyon@user/pyon)
[02:54:49] *** Quits: jwisbell35 (~jwisbell3@047-036-214-124.res.spectrum.com) (Read error: Connection reset by peer)
[02:54:55] <nedbat> stavros: @contextlib.contextmanager; def cm(): yield something
[02:55:58] <stavros> nedbat, ah, and the something can be the thing that prints?
[02:56:03] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[02:56:17] <nedbat> stavros: it's the "as m" yes
[02:56:22] <stavros> Great, thanks!
[02:56:39] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[02:56:46] *** Quits: Jefren1 (~Jefren@70.35.67.153) (Ping timeout: 245 seconds)
[02:58:31] *** Joins: Jefren1 (~Jefren@208.104.190.9)
[02:58:36] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:59:54] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:00:28] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:04:10] *** Quits: Jefren1 (~Jefren@208.104.190.9) (Ping timeout: 260 seconds)
[03:04:27] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[03:04:42] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[03:04:47] *** Quits: aztec (~Felipe@2804:2238:7de:d000:ed96:4863:5098:81e4) (Quit: I'm leaving, bye everyone.)
[03:05:03] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[03:05:54] *** Joins: Jefren1 (~Jefren@70.35.66.152)
[03:05:55] *** Quits: kostkon (~kostkon@2a02:587:a10a:f794:2241:1740:cc3e:322d) (Ping timeout: 260 seconds)
[03:06:38] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:07:23] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:09:30] <RougeR> woooo
[03:09:38] <RougeR> my code finally works...
[03:09:44] <RougeR> only took 4 days
[03:10:40] <nedbat> RougeR: you're ahead of schedule :)
[03:10:57] <RougeR> i wish...im so behind
[03:11:09] <RougeR> i duno if i massively overcomplicated this
[03:11:28] <RougeR> but its working and i think people are at the point where if it works then f it
[03:11:47] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 264 seconds)
[03:11:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:13:09] <RougeR> nedbat,
[03:13:13] <RougeR> its a monstrosity...
[03:13:14] <RougeR> https://dpaste.org/en5b
[03:14:01] <nedbat> RougeR: idk if you want commentary about this code
[03:14:14] <RougeR> nedbat, haha just moral support
[03:14:19] <RougeR> i think it could  be better
[03:14:22] <RougeR> and i dont like it
[03:14:23] <nedbat> RougeR: it looks great!
[03:14:32] <RougeR> it works!
[03:15:13] <RougeR> nedbat, i have to sync my database with a third party api and not overwrite existing data
[03:15:30] <RougeR> but the nested many to one relations might have new data even if the parent does not
[03:15:39] <RougeR> oh and ive got surrogate  primary keys
[03:16:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[03:18:57] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 258 seconds)
[03:19:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:19:58] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-554b-70ff-fc13-b93c.res6.spectrum.com) (Read error: Connection reset by peer)
[03:20:59] *** Joins: newpy (~newpy@206.168.231.90)
[03:22:25] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[03:23:15] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[03:24:35] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[03:25:56] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:26:52] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 244 seconds)
[03:27:06] *** Quits: waveform (~quassel@waveform.plus.com) (Remote host closed the connection)
[03:27:40] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[03:28:16] *** Joins: waveform (~quassel@waveform.plus.com)
[03:28:18] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Quit: Client closed)
[03:28:40] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 260 seconds)
[03:30:10] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[03:30:34] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[03:30:56] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:31:02] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[03:31:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[03:31:37] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[03:31:50] <ezzieyguywuf> whatsupdoc: 🤣
[03:31:55] <ezzieyguywuf> whatsupdoc: I'm mostly just doing it for fun
[03:32:24] *** Joins: brabrax (~brabrax@user/brabrax)
[03:32:41] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:9c7a:5e19:82a2:36d3)
[03:33:36] *** Quits: stavros (~stavros@pon1039.cpe.hcn.gr) (Quit: Leaving)
[03:34:04] *** Joins: \mSg (mSg@user/msg/x-0285936)
[03:34:13] <whatsupdoc> Same lol. I highly doubt anyone from Google will ever look up the personal info I submitted after level 3 and contact me
[03:35:30] *** Joins: duoi (~duoi@user/duoi)
[03:35:34] <ezzieyguywuf> I'm already interviewing with google on monday 😯
[03:35:37] <whatsupdoc> They should make it more challenging. The puzzles so far are all solvable in a day.
[03:35:43] <ezzieyguywuf> I'm not really getting my hopes up though
[03:35:48] <whatsupdoc> ezzieyguywuf: nice :)
[03:35:49] <ezzieyguywuf> (and it's not related to the foobar thing)
[03:35:58] <whatsupdoc> ezzieyguywuf: undergrad?
[03:36:03] *** Joins: analoq (~yashi@user/dies)
[03:36:10] <ezzieyguywuf> whatsupdoc: there's lots of programmers that couldn't solve those puzzles
[03:36:27] <ezzieyguywuf> whatsupdoc: nah, I graduated in 2011, but I'm a Mechanical Engineering, trying to transitioning into SWE
[03:36:29] <whatsupdoc> idk then you can't program at all lol
[03:36:35] *** Quits: Jefren1 (~Jefren@70.35.66.152) (Ping timeout: 258 seconds)
[03:36:45] <whatsupdoc> Oh lol, you're 7 years older than me
[03:36:54] <whatsupdoc> I graduated in 2018
[03:37:30] <ezzieyguywuf> whatsupdoc: dope.
[03:37:51] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[03:37:56] *** Quits: shan (shan@cyblog/maintainer/shan) (Quit: https://shantaram.xyz)
[03:37:58] *** Quits: Awoobis (A_D@libera/staff/dragon) (Quit: ZNC - https://znc.in)
[03:38:07] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[03:38:10] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[03:38:10] *** Joins: shan (shan@cyblog/maintainer/shan)
[03:38:12] <whatsupdoc> I studied computer science, so I've seen/programmed most of the algorithms used to answer those questions before
[03:38:31] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (Remote host closed the connection)
[03:38:42] *** Joins: Jefren1 (~Jefren@70.35.66.45)
[03:38:44] *** Quits: prime (~prime@user/prime) (Ping timeout: 244 seconds)
[03:38:50] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[03:39:17] <whatsupdoc> ezzieyguywuf: good luck on your interview! I'm sure you've been leetcoding like crazy lol
[03:39:40] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[03:39:46] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 244 seconds)
[03:40:01] <ezzieyguywuf> whatsupdoc: mostly I've been reading Introduction to Algorithms and Cracking the Coding Interview
[03:40:18] *** Quits: f8e4_ (~user@159.89.21.45) (Ping timeout: 244 seconds)
[03:40:24] <whatsupdoc> Nice, my favorite book: Introduction to Algorithms
[03:40:24] <ezzieyguywuf> I've been leetcoding a bit, but since I don't have a formal CS background I've been having to teach myself a lot about the different algos and data structures
[03:40:29] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[03:40:30] <ezzieyguywuf> whatsupdoc: yea great book.
[03:40:31] <whatsupdoc> The only book I bought lol
[03:41:02] *** Joins: f8e4_ (~user@159.89.21.45)
[03:41:05] *** Joins: prime (~prime@user/prime)
[03:41:24] <ezzieyguywuf> hah nice! yea I bought it the minute I got the "Hello from google! :)" email, lol
[03:41:26] <whatsupdoc> Yea, I had to implement pretty much every data structure in CS, so that really helps me understand them
[03:41:48] <ezzieyguywuf> yea for sure, I'm finding myself doing the same
[03:41:56] <ezzieyguywuf> just finished binary tree earlier, was about to get started on graphs
[03:42:05] <ezzieyguywuf> but I kind of want to finish this foobar problem :P
[03:42:20] <whatsupdoc> I wonder if what I did was cheating lol
[03:42:44] <ezzieyguywuf> how's that?
[03:42:54] <whatsupdoc> But I mean, I wasn't going to write an invert matrix function if I could just use numpy
[03:43:01] <whatsupdoc> Using libraries
[03:43:16] <ezzieyguywuf> ah, nah that's not cheating
[03:43:21] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:43:21] <ezzieyguywuf> I didn't think numpy would be available
[03:43:23] <InPhase> ezzieyguywuf: Algorithm analysis background/skill is one of the first things I am concerned about checking for in a candidate without a formal CS background, so it sounds like you're on the right track.
[03:43:39] <ezzieyguywuf> but now I'm pretty close to finishing, and it's been pretty rewarding learning how to code up a matrixInverse function
[03:43:49] <ezzieyguywuf> InPhase: sweet, thanks!
[03:44:09] <whatsupdoc> Well, if they're testing your algorithm ability, then it might defeat the purpose to use numpy
[03:44:15] *** Quits: Jefren1 (~Jefren@70.35.66.45) (Ping timeout: 258 seconds)
[03:44:15] <ezzieyguywuf> I've done some mock interviews on interviewing.io that went pretty well, and I have a mock interview with an actual googler tomorrew that the recruiter help me set up
[03:44:40] <ezzieyguywuf> whatsupdoc: it's a pretty silly problem, you pretty much have to figure out it's an absorbing markov chain or you're screwed
[03:44:53] <whatsupdoc> Nice, damn
[03:44:55] <ezzieyguywuf> I started it by doing, like, a graph traversal and adding up the probabilities
[03:45:05] <whatsupdoc> And I'm out here, can't land a CS job, so I moved on lol
[03:45:21] <ezzieyguywuf> *shrug* like I said I'm not getting my hopes up too much
[03:45:29] <InPhase> ezzieyguywuf: Second is architectural design.  "Here's a program subproblem.  How would you design a solution to this?"
[03:45:39] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[03:45:50] <ezzieyguywuf> got all the way to a job offer earlier this year with this defense contractor, but they gave me a junior role when I interviewed for senior and the salary was a fraction of what I make already
[03:45:59] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 264 seconds)
[03:46:04] *** Joins: Jefren1 (~Jefren@70.35.66.158)
[03:46:05] <ezzieyguywuf> InPhase: could you give an example?
[03:46:32] <whatsupdoc> Sounds like those black-box problems from theory of computation
[03:46:45] *** Quits: flokuehn (~flokuehn@87.123.247.74) (Ping timeout: 260 seconds)
[03:46:57] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[03:47:00] <grym> ezzieyguywuf: good riddance
[03:47:13] *** Joins: arinov (~arinov@213.194.126.155)
[03:47:19] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 258 seconds)
[03:47:30] <whatsupdoc> Hey, at least you don't get ghosted after an interview like I do lol
[03:48:02] <ezzieyguywuf> grym: after I got over the disappointment I felt the same. not only that, but they super dragged out the process after my final interview, it was over a month (maybe two...) before I got the crappy offer
[03:48:22] <grym> ezzieyguywuf: "oh, this is what it'd've been like every day huh"
[03:48:24] *** Joins: flokuehn (~flokuehn@87.123.247.90)
[03:48:59] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:49:01] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[03:49:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 264 seconds)
[03:49:35] <ezzieyguywuf> exactly
[03:50:35] <InPhase> ezzieyguywuf: Well I don't want to give away my pre-canned interview questions.  But here's a "make them think and see how they think out loud" question:  "We have a large rapid stream of data coming in from 128 channels, and for each channel we want to bin the data rate down, then process a wavelet transformation, then run the results through a classifier.  If performance is a concern, and data
[03:50:41] <InPhase> sequencing must be preserved, how would you design a solution to this?"
[03:50:58] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[03:51:47] *** Lord_of_Life_ is now known as Lord_of_Life
[03:51:51] <ezzieyguywuf> ah gotcha
[03:51:54] <InPhase> ezzieyguywuf: There are multiple right answers, some better than others, and many bad answers.  Any answer can get follow ups challenging it.
[03:51:59] <ezzieyguywuf> so more of a "big picture" sort of question
[03:52:33] <ezzieyguywuf> that actually sounds like a fun interview
[03:52:35] <ezzieyguywuf> lol
[03:52:35] <whatsupdoc> ezzieyguywuf: is this how you implemented matrix inversion? https://wikimedia.org/api/rest_v1/media/math/render/svg/be8419966809179aab9ca75dc761b582ffc0b569
[03:52:47] *** Joins: duoi (~duoi@user/duoi)
[03:53:07] *** Quits: jay-m1262 (~jay-m@129.0.204.209) (Ping timeout: 260 seconds)
[03:53:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[03:53:54] <ezzieyguywuf> whatsupdoc: yes. though implement*ing, not quite done yet.
[03:53:55] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:54:09] <mefistofeles> is there a way to have an expression for glob that matches digits (numbers) of any length?
[03:54:14] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[03:54:18] <introom> hi
[03:54:33] <whatsupdoc> calculating all those determinants, damn that must suck, it must get really slow
[03:54:40] <Jonno_FTW> mefistofeles: no, you'll have to regex. glob doesn't support that
[03:54:42] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Quit: Making like a hippie and blowin' this joint.)
[03:54:53] *** Joins: jay-m1262 (~jay-m@196.240.128.67)
[03:55:02] <introom> I saw some python code which has, cls.foobar(arg1, arg2), where inside the foobar method, arg1 is modified.
[03:55:10] <Jonno_FTW> mefistofeles: i'd suggest just writing a function that filters the glob output with a regex
[03:55:11] <mefistofeles> Jonno_FTW: hmm yeah, that's what I thought... damn
[03:55:13] <introom> i wonder how we can avoid this updating-the-argument style coding.
[03:55:20] <Jonno_FTW> it's like 2 extra lines, not hard
[03:55:38] <mefistofeles> Jonno_FTW: I hate re, but I guess I don't have a choice
[03:55:40] <ezzieyguywuf> whatsupdoc: I just did it recursively - I doubt there's any other way though
[03:55:46] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Client Quit)
[03:55:52] <Jonno_FTW> learn it, love it
[03:56:00] <ezzieyguywuf> whatsupdoc: lol, it'd be real funny if I finished and then my solution timed out
[03:56:06] <ezzieyguywuf> then I'd just use numpy 🤣
[03:56:08] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:65f3:f1a8:ba50:30b4) (Ping timeout: 258 seconds)
[03:56:15] <whatsupdoc> lol
[03:56:30] *** MrC is now known as MrSpooky
[03:56:42] <whatsupdoc> I'm sure it will be fine tbh
[03:57:16] <ezzieyguywuf> we'll know soon
[03:57:21] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:57:24] <ezzieyguywuf> doing the cofactor matrix atm
[03:57:36] <whatsupdoc> https://stackoverflow.com/a/62940942/5566250
[03:57:38] <ezzieyguywuf> something about modulo 2 I think to get the checkerboard +- pattern
[03:58:10] <whatsupdoc> yeah i could see that
[03:59:47] *** Quits: Jefren1 (~Jefren@70.35.66.158) (Ping timeout: 264 seconds)
[04:00:36] <ezzieyguywuf> dang what a bummer https://docs.quantifiedcode.com/python-anti-patterns/correctness/assigning_a_lambda_to_a_variable.html
[04:01:21] <whatsupdoc> why?
[04:01:22] *** Quits: RougeR (~rougex250@user/rouger) (Quit: Leaving)
[04:01:42] <ezzieyguywuf> I'm just used to being able to do such things from e.g. haskell
[04:01:56] <ezzieyguywuf> and c++
[04:02:11] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[04:02:59] <nedbat> ezzieyguywuf: sorry, what's the bummer?
[04:03:09] <whatsupdoc> syntax probably
[04:03:44] <ezzieyguywuf> nedbat: the 'anti-pattern' of `x = lambda v : doSomethingWithV`
[04:04:19] *** Joins: Jefren1 (~Jefren@70.35.67.121)
[04:04:34] <nedbat> ezzieyguywuf: you can do it if you want
[04:05:02] <nedbat> ezzieyguywuf: i just don't see the advantage over a def
[04:08:01] <ezzieyguywuf> I haven't really pythoned in a long time, it could just be my zen of python has worn off a bit
[04:09:17] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:09:41] *** Quits: Jefren1 (~Jefren@70.35.67.121) (Ping timeout: 245 seconds)
[04:10:30] *** Quits: nbao (~nbao@187.20.156.163) (Quit: leaving)
[04:10:58] <AhmedAmerican> how to `writer.writeheader()` at the first line of the csv file https://bpa.st/XHOA as it's currently write it at the end in my case.
[04:11:42] *** Joins: Jefren1 (~Jefren@206.253.157.215)
[04:12:52] <nedbat> AhmedAmerican: move the writeheader to before the loop that writes the lines
[04:13:10] <AhmedAmerican> it's gonna write it multiple times.
[04:13:14] <nedbat> AhmedAmerican: and only make the writer once, not every time around the loop
[04:13:38] <nedbat> AhmedAmerican: move line 20 to after line 12
[04:14:25] <AhmedAmerican> but am using `goal` variable which is collected by soup ?
[04:14:48] *** Joins: brookesy66 (~will@123-243-15-48.tpgi.com.au)
[04:15:24] <nedbat> AhmedAmerican: you have to rearrange the code to make one writer, and write the header first
[04:15:56] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (WeeChat 3.2)
[04:16:56] <nedbat> AhmedAmerican: the keys will be the same for every url, right?
[04:17:23] <AhmedAmerican> nedbat: yes
[04:17:23] *** Quits: Jefren1 (~Jefren@206.253.157.215) (Ping timeout: 260 seconds)
[04:17:58] *** stackswapper is now known as onelegend
[04:18:15] <nedbat> AhmedAmerican: read the first url, get the keys, make the writer, write the header, then loop over the urls
[04:18:15] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 260 seconds)
[04:18:22] *** Joins: ionface_ (~ionface@user/ionface)
[04:18:22] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[04:18:24] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[04:18:28] *** onelegend is now known as stackswapper
[04:19:06] *** Joins: Jefren1 (~Jefren@70.35.67.51)
[04:21:26] <AhmedAmerican> nedbat: solved via --> https://bpa.st/C3JQ
[04:21:51] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:22:01] <mefistofeles> Jonno_FTW: re: re ... I know it, hate it :)
[04:22:39] <nedbat> AhmedAmerican: ok, just move line 11 below line 12
[04:23:48] <AhmedAmerican> nedbat: got it. thank you.
[04:24:14] *** Joins: amo (~amogorkon@port-92-196-2-97.dynamic.as20676.net)
[04:24:18] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[04:24:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:25:05] *** stackswapper is now known as onelegend
[04:25:11] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[04:25:38] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:26:18] *** Joins: fikran (~fikran@user/fikran)
[04:26:40] <ezzieyguywuf> why is line 154 modifying the m matrix? http://dpaste.com/6L5WCWV49
[04:27:14] <ldericher> Anyone decent with decorators? Can help me clean these up? https://replit.com/@ldericher/decoratortest
[04:27:49] <aphysically> jinsun: looks like pyright vscode extension provides the lints but not the language server
[04:27:54] *** Quits: amogorkon (~amogorkon@port-92-196-20-142.dynamic.as20676.net) (Ping timeout: 265 seconds)
[04:28:02] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[04:29:21] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[04:29:37] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[04:29:53] *** Joins: kostkon (~kostkon@2a02:587:a10a:f794:2241:1740:cc3e:322d)
[04:29:55] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 260 seconds)
[04:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:40] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[04:31:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:31:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:33:08] <ezzieyguywuf> ah, it's because `col` is a shallow copy of the Fraction
[04:33:25] *** Joins: OPK (~OPK@user/opk)
[04:33:43] *** Quits: Jefren1 (~Jefren@70.35.67.51) (Ping timeout: 260 seconds)
[04:34:32] *** Joins: Andy_Flatline (~Andy_Flat@141.98.252.252)
[04:34:43] *** Joins: vlm (~vlm@user/vlm)
[04:35:23] <KirkMcDonald> ezzieyguywuf: Fraction objects are (effectively) immutable.
[04:35:38] *** Joins: Jefren1 (~Jefren@70.35.67.139)
[04:35:50] <KirkMcDonald> ezzieyguywuf: Oh! Sorry, this is a Fraction type that you defined.
[04:35:54] <KirkMcDonald> Not fractions.Fraction.
[04:35:55] *** Quits: Andy_Flatline (~Andy_Flat@141.98.252.252) (Client Quit)
[04:36:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[04:36:44] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[04:36:55] <ezzieyguywuf> KirkMcDonald: yea (imsodumb)
[04:37:13] *** Joins: llh (~llh@user/llh)
[04:39:46] *** Joins: jonthesnow (~xizhendu@240e:404:8511:3fc3:dadc::30c0)
[04:41:39] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[04:41:53] *** Joins: OPK (~OPK@user/opk)
[04:42:35] *** Quits: d0ku (~d0ku@178.43.15.137.ipv4.supernova.orange.pl) (Ping timeout: 246 seconds)
[04:42:45] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[04:43:25] *** Quits: Jefren1 (~Jefren@70.35.67.139) (Ping timeout: 268 seconds)
[04:45:03] *** Joins: Jefren1 (~Jefren@70.35.66.39)
[04:47:15] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[04:48:00] *** Joins: brabrax (~brabrax@user/brabrax)
[04:48:44] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[04:50:37] *** Quits: jim (~jim@about/linux/staff/jim) (Quit: Leaving)
[04:51:06] *** Joins: jim (~jim@about/linux/staff/jim)
[04:51:26] *** Quits: jonthesnow (~xizhendu@240e:404:8511:3fc3:dadc::30c0) (Ping timeout: 268 seconds)
[04:51:46] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[04:52:28] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Client Quit)
[04:52:42] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[04:52:46] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[04:53:23] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[04:55:26] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[04:55:35] *** Joins: The_Jag_ (~The_Jag@host-87-14-224-44.retail.telecomitalia.it)
[04:55:39] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 260 seconds)
[04:56:10] *** Quits: jay-m1262 (~jay-m@196.240.128.67) (Ping timeout: 260 seconds)
[04:56:25] *** Joins: OPK (~OPK@user/opk)
[04:56:59] *** Quits: Jefren1 (~Jefren@70.35.66.39) (Ping timeout: 268 seconds)
[04:57:42] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[04:58:05] *** Quits: reset (~reset@user/reset) (Quit: reset)
[04:58:30] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[04:58:30] *** Quits: The_Jag (~The_Jag@host-95-252-5-94.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[04:58:31] *** Joins: Jefren1 (~Jefren@70.35.67.12)
[04:59:24] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:59:33] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:00:53] *** Joins: jazzy (~jaziz@user/jaziz)
[05:00:58] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[05:02:24] *** Parts: onelegend (onelegend@wireguard/tunneler/onelegend) (WeeChat 2.8)
[05:04:13] *** Quits: pankid (~quassel@pankid.club) (Quit: No Ping reply in 180 seconds.)
[05:05:21] *** Joins: pankid (~quassel@pankid.club)
[05:07:36] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 245 seconds)
[05:07:37] *** Quits: sale (~sale@ypocit.initech.link) (Ping timeout: 244 seconds)
[05:08:17] *** Joins: sale (~sale@ypocit.initech.link)
[05:09:10] *** Quits: jug (~jug@user/jug) (Ping timeout: 244 seconds)
[05:09:37] *** Quits: taru9 (~realTaru9@user/taru9) (Quit: %xD%)
[05:09:56] *** Joins: taru9 (~realTaru9@user/taru9)
[05:13:07] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:15:06] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[05:15:06] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[05:16:38] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[05:18:36] <ezzieyguywuf> 😍 inverse works
[05:20:01] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[05:20:57] *** Joins: jug (~jug@user/jug)
[05:21:56] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[05:22:15] *** Joins: alzgh (~alzgh@user/alzgh)
[05:22:50] *** Joins: Whoopla (Whoopla@gateway/vpn/protonvpn/whoopla)
[05:23:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Quit: Client closed)
[05:23:59] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[05:25:43] *** Joins: OPK (~OPK@user/opk)
[05:27:52] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[05:28:44] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:30:44] *** Joins: RiFo (~RiFo@user/rifo)
[05:31:18] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:31:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[05:33:28] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:33:39] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:35:12] *** Joins: Bakunin (~Lindis@user/lindis)
[05:35:36] *** Joins: jonthesnow (~xizhendu@2409:8900:8d3f:72d5:903f:6f7d:fe15:374a)
[05:36:23] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[05:39:54] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[05:40:15] *** Quits: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Quit: Lost terminal)
[05:42:47] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[05:43:08] *** Joins: aknot (~aknot@2603:900a:1503:17bb:5339:b5e2:420e:12d9)
[05:43:31] *** Joins: OPK (~OPK@user/opk)
[05:44:25] *** Joins: lastshell (~lastshell@user/lastshell)
[05:46:31] *** Quits: Jefren1 (~Jefren@70.35.67.12) (Ping timeout: 260 seconds)
[05:47:23] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[05:48:36] *** Joins: Jefren1 (~Jefren@206.253.157.251)
[05:50:41] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:50:41] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[05:50:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:52:11] *** Quits: aknot (~aknot@2603:900a:1503:17bb:5339:b5e2:420e:12d9) (Ping timeout: 245 seconds)
[05:54:30] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Ping timeout: 260 seconds)
[05:55:22] *** Joins: bonestormii_ (~bonestorm@c-71-57-43-158.hsd1.il.comcast.net)
[05:58:57] *** Joins: iflema (~ian@user/iflema)
[06:00:10] *** Quits: bonestormii_ (~bonestorm@c-71-57-43-158.hsd1.il.comcast.net) (Quit: WeeChat 3.3)
[06:00:23] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (Ping timeout: 264 seconds)
[06:00:27] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[06:00:35] *** Joins: bonestormii_ (~bonestorm@c-71-57-43-158.hsd1.il.comcast.net)
[06:02:02] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[06:02:03] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[06:05:57] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[06:06:03] *** Quits: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0) (Ping timeout: 268 seconds)
[06:08:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:09:07] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[06:10:20] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:12:37] <whatsupdoc> ezzieyguywuf: nice
[06:20:47] *** Quits: Jefren1 (~Jefren@206.253.157.251) (Ping timeout: 264 seconds)
[06:21:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:22:24] *** Joins: Jefren1 (~Jefren@208.104.190.22)
[06:23:39] *** Joins: fikran (~fikran@user/fikran)
[06:23:49] <ezzieyguywuf> lol now the dot product is eluding me, but probs b/c I've just been staring at a screen so long
[06:24:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[06:24:54] <AhmedAmerican> is there a method to translate webpage while scraping ?
[06:25:59] *** Joins: Zenen (~Zenen@S0106e063da5e6a37.gv.shawcable.net)
[06:26:58] <Zenen> Hello! I'm trying to implement a LAN bridge over python
[06:30:13] <Zenen> Not sure if that makes complete sense or if I'm using the right terminology, but I'm basically looking to open a connection on my local machine, send a packet to it and send a response back. Does anyone know how to point me in the right direction?
[06:30:17] <ldericher> Can you look at if/how you would improve these decorators? https://replit.com/@ldericher/decoratortest
[06:30:36] <Bakunin> to find the dot product, lift up the dot's tail.
[06:34:08] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[06:48:57] *** Joins: cads (~cads@ip-64-72-99-234.lasvegas.net)
[06:49:17] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:57:15] <ezzieyguywuf> oh boy, fails all the hidden test cases
[06:59:16] *** Quits: jonthesnow (~xizhendu@2409:8900:8d3f:72d5:903f:6f7d:fe15:374a) (Ping timeout: 245 seconds)
[07:00:56] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[07:02:06] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[07:02:28] *** Joins: Axy (~Axy@user/axy)
[07:03:25] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[07:04:40] *** Joins: lint_coder (~lint_code@2405:201:f00c:805f:adbe:351d:bc1f:f647)
[07:05:15] *** Quits: lint_coder (~lint_code@2405:201:f00c:805f:adbe:351d:bc1f:f647) (Client Quit)
[07:05:42] *** Joins: lint_coder (~lint_code@2405:201:f00c:805f:adbe:351d:bc1f:f647)
[07:07:54] *** Joins: hoodwinked (~hoodwinke@user/hoodwinked)
[07:08:55] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[07:08:58] *** Quits: lint_coder (~lint_code@2405:201:f00c:805f:adbe:351d:bc1f:f647) (Client Quit)
[07:10:21] *** Quits: hexley (examknow@bitbot/launchd) (Quit: Lost terminal)
[07:15:35] *** Joins: launchd (examknow@bitbot/launchd)
[07:15:40] *** Joins: no-n (~ed@smol/hors)
[07:16:43] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:18:44] *** Joins: Viewday (~Viewday@user/viewday)
[07:21:47] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[07:24:10] <ezzieyguywuf> lol no wonder, my implementation (probs the determinant calculation) blows up in space complexity when the matrix gets bigger
[07:24:17] <ezzieyguywuf> 7 x 7 and i used all my ram nd swap
[07:24:52] *** Quits: launchd (examknow@bitbot/launchd) (Quit: K-Lined)
[07:26:07] *** Joins: launchd (examknow@bitbot/launchd)
[07:26:26] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[07:28:37] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[07:29:48] *** Joins: bpalmer (~user@user/bpalmer)
[07:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[07:30:56] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 245 seconds)
[07:31:11] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:32:22] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[07:33:19] *** Quits: catbeard (~noise@user/catbeard) (Quit: Bye!)
[07:34:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[07:38:49] *** Joins: debayer (~debayer@2603-8000-cf00-4c0a-514c-fad7-53d3-d912.res6.spectrum.com)
[07:39:01] *** Joins: OPK (~OPK@user/opk)
[07:39:29] *** Hash is now known as OpenSores
[07:39:35] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[07:40:14] *** Quits: genrand (~genrand@cpe-74-138-138-71.kya.res.rr.com) (Read error: Connection reset by peer)
[07:40:56] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[07:40:59] *** Quits: hoodwinked (~hoodwinke@user/hoodwinked) (Quit: Going offline, see ya! (www.adiirc.com))
[07:41:19] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[07:41:30] *** Quits: Zenen (~Zenen@S0106e063da5e6a37.gv.shawcable.net) (Quit: Client closed)
[07:41:54] *** Joins: catbeard (~noise@user/catbeard)
[07:41:58] *** Joins: tkazi (~tkazi@user/tkazi)
[07:42:03] *** Quits: tkazi (~tkazi@user/tkazi) (Remote host closed the connection)
[07:42:22] *** Joins: tkazi (~tkazi@user/tkazi)
[07:42:39] *** OpenSores is now known as OpenSource
[07:43:06] <ezzieyguywuf> hah, two of the hidden test cases pass now
[07:43:24] <ezzieyguywuf> now 5 pass!
[07:43:28] <ezzieyguywuf> grrrr just 3 more
[07:44:10] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 260 seconds)
[07:44:29] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[07:44:42] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:54:40] *** Quits: hacksword (~hacksword@173.244.209.142) (Ping timeout: 260 seconds)
[07:56:26] *** Joins: hacksword (~hacksword@ip68-231-215-184.oc.oc.cox.net)
[07:59:11] *** Quits: Linux77 (~Linux7_7@186.233.182.138) (Ping timeout: 264 seconds)
[08:03:19] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:06:46] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 245 seconds)
[08:08:35] *** Joins: analoq (~yashi@user/dies)
[08:08:47] *** Quits: Jefren1 (~Jefren@208.104.190.22) (Ping timeout: 264 seconds)
[08:10:26] *** Joins: Jefren1 (~Jefren@70.35.67.135)
[08:12:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[08:12:44] *** Quits: dre (~dre@120.156.30.159) (Quit: Leaving)
[08:13:14] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:13:25] *** Quits: jim (~jim@about/linux/staff/jim) (Quit: Leaving)
[08:13:35] *** Joins: tobybl (~tobybl@213.31.135.91)
[08:13:51] *** Joins: jim (~jim@about/linux/staff/jim)
[08:14:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:16:15] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[08:19:10] *** Quits: Jefren1 (~Jefren@70.35.67.135) (Ping timeout: 260 seconds)
[08:20:52] *** Joins: Jefren1 (~Jefren@70.35.67.223)
[08:20:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:21:42] *** Joins: Betal (~Betal@user/betal)
[08:29:59] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[08:30:08] *** OpenSource is now known as Hash
[08:30:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[08:31:09] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[08:33:00] *** Joins: fikran (~fikran@user/fikran)
[08:33:10] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[08:33:40] *** Joins: stranac (~stranac@195.29.239.126)
[08:34:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[08:37:11] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:38:03] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[08:39:53] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[08:40:12] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[08:42:53] *** Quits: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com) (Remote host closed the connection)
[08:43:34] *** Quits: subopt (~subopt@2603-8081-2302-459a-acac-3fb9-0b5d-718d.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:44:08] *** Joins: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com)
[08:46:37] *** veegee_ is now known as veegee
[08:50:19] *** Joins: computeiro (~Wender@191.54.168.114)
[08:51:48] *** Quits: wender (~Wender@191.54.178.132) (Ping timeout: 265 seconds)
[08:53:41] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-fc80-77d8-0740-03af.res6.spectrum.com)
[08:54:29] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[08:55:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[08:55:57] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: Ping timeout (120 seconds))
[08:56:20] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Read error: Connection reset by peer)
[08:56:24] *** Joins: stoneware (~stoneware@user/stoneware)
[08:56:26] *** Quits: km (9ab7146360@user/km) (Read error: Connection reset by peer)
[08:56:29] *** Quits: sharktamer (9bafe1e1bb@2604:bf00:710:0:5054:ff:feea:5006) (Read error: Connection reset by peer)
[08:56:31] *** Joins: newdimension2 (~newdimnes@user/newdimension)
[08:56:36] *** Joins: km (9ab7146360@user/km)
[08:56:36] *** Joins: sharktamer (9bafe1e1bb@chat.sr.ht)
[08:56:41] *** Quits: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576) (Remote host closed the connection)
[08:56:41] *** Quits: seabre (~seabre@user/seabre) (Quit: ZNC 1.8.2 - https://znc.in)
[08:56:43] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[08:56:47] *** Quits: Sario (sid356235@miraheze/Sario528) (Ping timeout: 264 seconds)
[08:56:47] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 264 seconds)
[08:56:53] *** Joins: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576)
[08:57:01] *** Joins: seabre (~seabre@user/seabre)
[08:57:06] *** Quits: debnet (sid330295@python/afpy/debnet) (Read error: Connection reset by peer)
[08:57:12] *** Joins: Sario (sid356235@miraheze/Sario528)
[08:57:15] *** Joins: debnet (sid330295@python/afpy/debnet)
[08:57:22] *** Joins: bjs (sid190364@user/bjs)
[08:57:23] *** Quits: EWDurbin (sid38710@tinside.irccloud.com) (Ping timeout: 264 seconds)
[08:57:23] *** Quits: Knyght (sid365271@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[08:57:23] *** Quits: matthewwilkes (sid500242@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[08:57:59] *** Quits: JayDoubleu (sid339529@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[08:57:59] *** Quits: circuitbone (sid355934@user/circuitbone) (Ping timeout: 264 seconds)
[08:57:59] *** Quits: chromis (sid150893@tinside.irccloud.com) (Ping timeout: 264 seconds)
[08:58:05] *** Quits: jposer (sid132110@uxbridge.irccloud.com) (Read error: Connection reset by peer)
[08:58:07] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[08:58:07] *** newdimension2 is now known as newdimension
[08:58:18] *** Joins: jposer (sid132110@id-132110.uxbridge.irccloud.com)
[08:58:26] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Ping timeout: 245 seconds)
[08:58:33] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Read error: Connection reset by peer)
[08:58:35] *** Quits: shawwwn (uid6132@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[08:58:44] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[08:58:51] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 245 seconds)
[08:58:51] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Ping timeout: 245 seconds)
[08:58:53] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[08:59:04] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[08:59:07] *** Joins: EWDurbin (sid38710@id-38710.tinside.irccloud.com)
[08:59:16] *** Joins: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com)
[08:59:18] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[08:59:27] *** Joins: circuitbone (sid355934@user/circuitbone)
[08:59:37] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[08:59:42] *** Joins: esaym153 (~esaym153@net153.net)
[08:59:42] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[08:59:44] *** Joins: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com)
[09:00:23] *** Quits: holbrode (sid339826@tinside.irccloud.com) (Ping timeout: 264 seconds)
[09:00:23] *** Quits: Pent (sid313808@lymington.irccloud.com) (Ping timeout: 264 seconds)
[09:01:20] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[09:01:42] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[09:03:23] *** Quits: graingert (sid128301@tinside.irccloud.com) (Ping timeout: 264 seconds)
[09:03:35] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[09:03:40] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[09:03:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[09:06:25] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[09:07:32] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[09:08:59] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Ping timeout: 256 seconds)
[09:10:03] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:11:46] *** Joins: rojiro (~rojiro@gateway/tor-sasl/rojiro)
[09:12:19] *** Joins: nomic (~nomic@185.198.243.251)
[09:13:55] *** Quits: mall_krampus (~mallkramp@89.187.182.122) (Ping timeout: 258 seconds)
[09:15:00] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:16:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:17:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:17:21] <tmart> How ought I enter and exit a context manager without "with" (and maybe not with dunder methods either)? I'm trying to create an http client with HTTPX as seen on https://www.python-httpx.org/async/#making-async-requests , and I want that client to be a class attribute that's "entered" for the lifetime of the program.
[09:17:47] *** Quits: computeiro (~Wender@191.54.168.114) (Ping timeout: 264 seconds)
[09:18:05] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[09:18:44] <tmart> Reason being, there's substantial performance overhead to creating a new client.
[09:21:11] *** Quits: Karel (~Karel@ptr-9091p56awpn0ku7z9a0.18120a2.ip6.access.telenet.be) (Ping timeout: 260 seconds)
[09:22:03] <supakeen> tmart: See the second example in the "usage" section: https://www.python-httpx.org/advanced/#usage, it describes how to use a `client` without the context manager.
[09:22:55] *** Joins: mrwick (~mrwick@user/mrwick)
[09:22:56] <tmart> gosh darnit. thanks @supakeen
[09:23:49] <supakeen> But to answer the question more generally, I don't think there's a way of doing that without calling the dunders.
[09:23:52] *** Quits: Dotz0cat (~Dotz0cat@h194.118.90.75.dynamic.ip.windstream.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:24:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:25:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:25:34] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:25:42] *** Joins: Dotz0cat (~Dotz0cat@h194.118.90.75.dynamic.ip.windstream.net)
[09:25:43] *** Joins: minip (~minip@user/minip)
[09:26:44] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:27:04] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:28:11] <raek> ldericher: one minor thing you can do is to replace the classes with functions: https://gist.github.com/raek/7696ca13c5e3edd91c923c8483ac0077
[09:28:13] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:ee69:2bd2:29dd:c21a)
[09:29:52] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[09:31:49] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[09:32:14] *** Joins: _xor (~xor@72.49.199.147)
[09:34:53] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[09:35:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:36:16] <raek> ldericher: another idea is to parameterize per_team to take the company as an argument: https://gist.github.com/raek/365ef487ecc551db4596ab44b2d72497
[09:36:41] <raek> that way per_team does not contain any "secret" references to objects
[09:36:52] *** Joins: kosh (~kosh@user/kosh)
[09:37:38] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 246 seconds)
[09:38:43] <raek> you could also make cmd() receive *args and **kwargs and then pass those to the wrapped function. though that gets a bit more complicated due to team having a default value
[09:39:05] <raek> (hmm. or maybe it works out fine)
[09:40:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[09:41:16] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[09:41:19] *** Joins: sagax (~sagax_nb@user/sagax)
[09:47:28] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:48:12] *** Joins: seednode4 (~seednode@user/seednode)
[09:49:33] *** Joins: Atque (~Atque@user/atque)
[09:53:17] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:53:47] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 264 seconds)
[09:55:53] *** Quits: Jefren1 (~Jefren@70.35.67.223) (Ping timeout: 264 seconds)
[09:57:21] *** Joins: Mulugruntz (~Mulugrunt@i125-204-128-137.s41.a040.ap.plala.or.jp)
[09:57:32] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:57:43] *** Joins: Jefren1 (~Jefren@70.35.66.120)
[10:00:01] *** Joins: Hammett (~Absolut@133.red-88-19-102.staticip.rima-tde.net)
[10:00:25] *** Quits: kostkon (~kostkon@2a02:587:a10a:f794:2241:1740:cc3e:322d) (Remote host closed the connection)
[10:01:49] *** Joins: parv (~quass@user/parv)
[10:02:15] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[10:02:21] *** Joins: kai7 (~kai@x50d24799.cust.hiper.dk)
[10:02:59] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 258 seconds)
[10:03:54] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[10:04:41] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[10:05:34] *** Joins: gusto (~Augustus@2620:149:e0:6003::3d)
[10:05:48] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[10:07:57] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[10:08:26] <mickey8> is there an easy way to create a pip requirements.txt for an existing project?
[10:08:54] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[10:09:20] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[10:09:48] *** Joins: srhm (~srhm@user/srhm)
[10:10:07] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:10:22] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[10:10:35] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:13:42] *** Joins: KombuchaKip (~kip@192.252.230.5)
[10:14:11] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[10:15:02] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 244 seconds)
[10:15:13] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[10:15:17] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[10:16:06] *** Joins: Joel (~jjshoe@user/joel)
[10:16:42] <The-Compiler> mickey8: pip freeze
[10:16:56] <dba> does anybody have an idea how timeit() works and is there any other sophisticated packages for getting the run time of a block of code?
[10:17:10] <The-Compiler> mickey8: at least if you have an existing virtualenv for that project
[10:17:26] <The-Compiler> dba: there are profilers, if you want an overview of the entire code
[10:17:38] <leduyquang753> dba It says clear in the docs.
[10:17:56] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[10:18:44] <dba> from what I read on the net timeit() run the block several times and gets you the best result, but I assume running the code for the second or third time would be for sure faster than thte first one. Please correct me if I am wrong
[10:21:29] <supakeen> Depends on what it does, run it enough times and it evens out.
[10:22:42] <dba> The-Compiler: I was about to mess with cProfile after timeit
[10:22:57] <dba> supakeen, what do you mean by evens out?
[10:23:05] <supakeen> It averages out.
[10:24:15] *** Joins: mallkrampus (~mallkramp@207.45.82.184)
[10:27:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:27:17] *** Joins: ravan (~ravan@user/ravan)
[10:29:41] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[10:31:21] *** Quits: mallkrampus (~mallkramp@207.45.82.184) (Ping timeout: 258 seconds)
[10:34:47] *** Joins: palasso (~palasso@user/palasso)
[10:35:01] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[10:36:48] <dba> another noob question: does python store all variable (list, str, set, obj, func...) in a table? and does the hash() return the index or the key value of that variable from that table?
[10:37:22] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[10:37:54] <KirkMcDonald> Not exactly, no.
[10:38:00] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[10:38:08] <The-Compiler> dba: no - if that was the case, two different variables with the same value would have a different hash()
[10:38:26] *** Joins: ravan (~ravan@user/ravan)
[10:38:44] <The-Compiler> dba: but on CPython, id() is based on the location in memory the value is stored
[10:39:17] <KirkMcDonald> And it's not entirely wrong to say that the allocation arenas are a big table.
[10:40:09] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[10:40:22] *** Joins: aphysically (~aphysical@user/aphysically)
[10:40:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[10:41:03] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:41:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:41:14] <KirkMcDonald> Though for many objects, it just calls malloc()
[10:41:20] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:42:21] *** Joins: fikran (~fikran@user/fikran)
[10:43:06] <dba> much appreciate all you answers, can you guys help me with a guide or docs that shows how python works behind the scene ?
[10:43:25] <leduyquang753> The source code itself. :)
[10:43:27] <supakeen> For CPython there's a decent book called 'CPython Internals'.
[10:43:47] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[10:44:49] <dba> Thanks supakeen
[10:45:04] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:45:21] *** Joins: mallkrampus (~mallkramp@94.140.9.119)
[10:46:17] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[10:47:32] <madprops> why does python json parsing use 'key': value with single quotes, that's not valid json
[10:47:38] <madprops> i have to replace them with " later
[10:47:50] <madprops> i mean if i print the json object
[10:47:51] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[10:48:02] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[10:48:03] <madprops> i guess i could save it to a file
[10:48:07] *** Joins: stardiviner (~stardivin@183.246.144.93)
[10:48:08] *** Joins: vit (~vit@chello085216193138.chello.sk)
[10:48:13] <stranac> madprops: there's no "json object", json.load() returns a python dict
[10:48:14] <tmart> that's not right. you're doing something wrong
[10:48:29] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[10:48:30] <stranac> madprops: if you want a json object, you use json.dump()
[10:48:35] <stranac> or dumps
[10:48:38] <madprops> oh yeah
[10:48:55] <leduyquang753> You were just doing str on the dict weren't you.
[10:49:13] <madprops> i was printing a response that uses .json()
[10:49:33] *** Joins: aphysically (~aphysical@user/aphysically)
[10:50:17] <stranac> madprops: if you need the actual body that was returned, you'd use response.content or reponse.text
[10:50:28] <madprops> json.dumps fixes that issue i had
[10:51:13] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[10:51:47] *** Joins: slav0nic (slav0nic@python.su)
[10:53:09] *** Joins: brelod (~me@90.244.150.142)
[10:53:30] <mickey8> The-Compiler i dont have a venv for the project, just a folder with everything. id hate to go through the imports and see what's actually needed directly
[10:55:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi)
[10:57:08] *** Joins: water_27300935_ (~water_273@182.90.160.19)
[10:57:21] *** Joins: vladoski (~vladoski@217.147.130.65)
[10:58:47] *** dcaro_away is now known as dcaro
[10:59:49] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[11:00:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:00:53] *** Joins: chele (~chele@user/chele)
[11:01:10] *** Joins: rendar (~rendar@user/rendar)
[11:02:05] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:02:47] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[11:02:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[11:03:02] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:03:17] <water_27300935_> I use pyyaml, how to determine item is 'scalars', is it have some method?
[11:03:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:04:03] <Lartza> mickey8, Run it in a venv and keep adding libraries to requirements.txt until it runs ;P
[11:04:21] <Lartza> Library names don't match import names so you can't really automate it in any way
[11:04:44] <Lartza> You could of course grep all the import lines too and handle that manually
[11:04:50] <Lartza> Lots of manual ways
[11:04:58] *** Quits: water_27300935_ (~water_273@182.90.160.19) (Quit: WeeChat 2.3)
[11:05:18] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-3400-d181-a553-020d.res6.spectrum.com) (Quit: jarthur)
[11:06:27] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[11:06:41] *** Joins: water_27300935_ (~water_273@182.90.160.19)
[11:06:59] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 264 seconds)
[11:07:59] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Ping timeout: 256 seconds)
[11:09:43] *** Parts: water_27300935_ (~water_273@182.90.160.19) ()
[11:10:42] *** Joins: kia (~kia@user/kia)
[11:11:17] *** Joins: manti7 (~manti7@176.10.104.94)
[11:11:40] *** Joins: usr123 (~usr123@49.37.153.10)
[11:12:08] *** Quits: launchd (examknow@bitbot/launchd) (Quit: K-Lined)
[11:12:31] <usr123> I'm getting this error when trying to use pip-compile https://dpaste.org/csDU
[11:13:42] <usr123> I got some advice here regarding installing python using brew and not using system installed python on mac about 2 days ago, just to confirm I haven't done that as of now as I don't really know anything about it.
[11:14:03] <usr123> So if something goes wrong I'll be stuck fixing my python, so gonna do it over some weekend.
[11:14:21] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[11:14:29] <usr123> "AttributeError: module 'enum' has no attribute '__version__'"
[11:14:45] *** Joins: Payam (~Payam@138.106.57.132)
[11:15:49] <Payam> Hi, In a json response I get "   "lastDownloaded": 1631544374285," which should be a date
[11:15:59] <Lartza> usr123, Have you manually installed enum or enum34 or something from pypi?
[11:15:59] <Payam> What kind of date is this and how do I convert it to normal date?
[11:16:23] *** Joins: aphysically (~aphysical@user/aphysically)
[11:17:06] <Lartza> Payam, Nano/milli/seconds from unix epoch, any date library you like can do that like datetime
[11:17:29] <Lartza> Or "unix timestamp" as you might call it too
[11:17:33] <usr123> Lartza, nope, let me paste the output of pip list as well.
[11:18:26] *** Joins: Klinda (~superleag@user/klinda)
[11:18:37] <usr123> Lartza, I added the pip3 list output to the above snippet https://dpaste.org/sz9T
[11:19:17] <Lartza> Is that the correct pip3 binary though?
[11:19:31] <Lartza> /Users/xx/xxx/xx/xx/xx/env/bin/pip3 ?
[11:20:03] <Lartza> Oh wait, do you have enum in your requirements.txt/in?
[11:20:06] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 245 seconds)
[11:20:50] <Lartza> Because you don't want that since Python 3.4
[11:21:27] *** Joins: pingpongball (~Guest18@103.94.252.87)
[11:21:47] <pingpongball> [1:49:50 PM] <pingpongball> how to install only conda package manager and do manually install inside linux?
[11:22:11] <pingpongball> pip install conda gives bin path warning
[11:23:01] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[11:23:02] <pingpongball> lithammer litharge @A
[11:23:09] <pingpongball> abraham
[11:23:35] *** Joins: launchd_ (znc@bitbot/launchd)
[11:24:00] <bookworm> pingpongball: stop random pinging people
[11:24:25] <bookworm> just install miniconda, there's installation instructions on their webpage
[11:24:46] <bookworm> miniconda == conda without all the scipy stack preinstalled
[11:24:56] <usr123> Lartza: yes I do, I have it in my requirements.in
[11:25:00] <usr123> Should I remove it and tryi?
[11:25:13] *** Joins: jazzy (~jaziz@user/jaziz)
[11:25:35] *** Quits: launchd_ (znc@bitbot/launchd) (Quit: K-Lined)
[11:25:39] <pingpongball> i fear if i break debian if i install from random .sh files. as your name bookworm , debian 12, i'm in debian 11 bullseye, i dont want to break debian by running random scripts and making frankeinstein debian
[11:26:02] *** Joins: launchd (launchd@bitbot/launchd)
[11:26:18] <pingpongball> i was trying if pip install conda works, but it gives warning like error
[11:27:12] <bookworm> conda isn't pip installable, least that would be  a new one for me
[11:27:24] <bookworm> why do you need conda anyhow?
[11:27:32] <Lartza> usr123, enum is in the standard library since 3.4
[11:27:35] <pingpongball> :)  starting machine learning
[11:27:41] <bookworm> you usually need that only on broken OSes without a sane compiler
[11:27:46] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:28:11] *** Joins: raxor2k (~raxor2k@78.158.233.120)
[11:28:27] *** Joins: ubert (~Thunderbi@178.165.162.187.wireless.dyn.drei.com)
[11:28:32] <usr123> Lartza: Yeah, I removed it and not it gives a different error. I'm having errors after errors from pip-compile for the past 3 days straight.
[11:28:35] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[11:28:35] *** Quits: stardiviner (~stardivin@183.246.144.93) (Ping timeout: 264 seconds)
[11:28:53] <bookworm> if you are that scared of breaking your system, shove everything in a container
[11:28:55] <usr123> And one of those errors magically disappeared when I restarted my system.
[11:29:08] <Lartza> *shrug* pip-compile should work just fine
[11:29:15] <Lartza> Restarting can change... plenty of things
[11:29:24] <pingpongball> how?
[11:29:49] <bookworm> docker / lxc / systemd-nspawn...
[11:29:58] <usr123> Lartza: any thoughts on this? https://dpaste.org/xnL7
[11:30:12] <usr123> the new error that I get that I was also getting prior to restarting my system.
[11:30:32] <gitesh> what is the need of session object in flask , when there is request object?
[11:30:39] <raxor2k> can someone plz help me with this? : https://bpa.st/PWMA      i can perfectly return (str(return_list), but returning the list itself gives error ..
[11:30:48] <The-Compiler> gitesh: e.g. storing cookies across multiple requests
[11:31:36] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:31:43] <gitesh> The-Compiler: but there is request object for that, then also session object?
[11:31:54] <The-Compiler> gitesh: no, a request is a single request
[11:31:59] <gitesh> cookies are store in headers
[11:32:07] <The-Compiler> no, cookies are set via headers
[11:32:28] <pingpongball> Is there any other package manager, so that i can isolate my newly install packages and just can run like "some activate base" like "conda activate base", and run newly installed packages inside that
[11:32:31] <gitesh> that's what i said The-Compiler
[11:32:32] <The-Compiler> but often you want to store them across multiple requests - e.g. do a login request, store the cookie, and then use the cookie to do an authenticated request
[11:32:33] <Lartza> usr123, git 128 is permission denied/unauthorized
[11:32:57] <Lartza> Usually at least
[11:32:58] <The-Compiler> gitesh: you said "stored" - a header doesn't store a cookie for you, it tells you to store it
[11:32:58] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[11:33:06] <bookworm> pingpongball: sure, python -m venv
[11:33:29] <pingpongball> is it systemwide , not only on specific project, i want systemwide
[11:33:39] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[11:33:40] <gitesh> The-Compiler: but cookies are store in browser, and browser send them to server with every request then what is the use of session?
[11:33:46] <The-Compiler> gitesh: exactly that
[11:33:57] <The-Compiler> gitesh: storing the cookies and sending them to the server with every request
[11:34:06] *** Quits: usr123 (~usr123@49.37.153.10) (Quit: Client closed)
[11:34:06] <bookworm> it's a folder on disc, you don't want to install ML packages system wide outside of apt really
[11:34:30] <The-Compiler> gitesh: see https://docs.python-requests.org/en/latest/user/advanced/#session-objects
[11:34:39] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[11:34:58] <bookworm> you can, but you need to be careful not to break the OS.
[11:36:15] <bookworm> fwiw conda uses a local folder as well, else you'd need to run it as root which considering the quality of conda is a very poor idea
[11:36:37] <The-Compiler> pingpongball: it sounds a bit like https://virtualenvwrapper.readthedocs.io/ - but you might as well just use normal virtualenvs in whatever location you want
[11:36:38] <raxor2k> no help to get? https://bpa.st/PWMA
[11:36:49] <gitesh> The-Compiler: session and coockies are similar?
[11:36:54] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[11:36:55] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:56] *** Joins: AlanMD_ (~AlanMD@86.121.179.183)
[11:36:56] <pingpongball>   WARNING: The script virtualenv is installed in '/home/pong/.local/bin' which is not on PATH.
[11:36:56] <pingpongball>   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
[11:36:59] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 264 seconds)
[11:37:05] <pingpongball> i installed and gives this , what should i do
[11:37:07] <The-Compiler> gitesh: storing cookies is one of the things a session does
[11:37:09] *** Joins: usr123 (~usr123@49.37.153.10)
[11:37:16] <The-Compiler> pingpongball: exactly what the message says
[11:37:21] <gitesh> The-Compiler: got it, thanks :)
[11:37:27] <usr123> Lartza: Let me see if I can find something in that direction
[11:37:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:37:35] <The-Compiler> gitesh: "The Session object allows you to persist certain parameters across requests. It also persists cookies across all requests made from the Session instance, and will use urllib3’s connection pooling."
[11:37:51] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[11:37:53] <pingpongball> so i need to add to path "/hom/pong/.local/bin" , how?
[11:38:04] <pingpongball> using alias="/home/pong/.local/bin"
[11:38:09] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:38:14] <bookworm> no
[11:38:24] <bookworm> path is an environment variable
[11:38:33] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:34] *** Quits: Saxtheowl (~roro@78.192.226.182) (Read error: Connection reset by peer)
[11:38:34] <bookworm> alias makes a new "command"
[11:38:48] <The-Compiler> pingpongball: what distribution are you running?
[11:38:56] <bookworm> debian
[11:38:57] <pingpongball> i'm running debian 11
[11:39:48] <pingpongball> if i was in other distro, i would just run , but i'll be more polite in debian.
[11:39:55] *** Quits: pingpongball (~Guest18@103.94.252.87) (Quit: Client closed)
[11:40:35] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 264 seconds)
[11:40:44] *** Joins: pingpongball (~pingpongb@103.94.252.87)
[11:40:45] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[11:41:07] <pingpongball> Hello
[11:41:09] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:42:11] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[11:44:07] <pingpongball> i think to add into enviroment variables i need to use export PATH=""
[11:44:35] <pingpongball> i think , pip install conda would work , did anybody tried and running
[11:44:38] *** Joins: d0ku (~d0ku@178.43.150.25.ipv4.supernova.orange.pl)
[11:45:43] <jinsun> no don't pip install conda, install it separately using the installer from anaconda website
[11:45:57] <bookworm> WARNING: Using pip install conda or easy_install conda will not give you conda as a standalone application. Currently supported install methods include the Anaconda installer and the miniconda installer. You can download the miniconda installer from https://conda.io/miniconda.html
[11:46:09] <bookworm> ^ docs, read them
[11:46:21] <pingpongball> yes it didnt worked
[11:46:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi)
[11:46:57] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[11:47:11] <bookworm> you run the miniconda installer and it didn't work?
[11:47:17] <bookworm> Doubtful
[11:47:42] <bookworm> you did set the prefix to something sane, did you?
[11:47:59] <pingpongball> no i didnt ran miniconda, of fearing of installing random scripts from their sites, i want to do manually instead. like just install barebone conda from pip or
[11:48:25] <pingpongball> i think i should forget conda and use virtualenv
[11:48:37] <bookworm> what's the difference for you?
[11:48:44] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[11:49:01] <bookworm> running the conda installer is not much worse than executing random binaries from pip
[11:49:19] <pingpongball> ahh you are right
[11:49:25] *** Joins: Atque (~Atque@user/atque)
[11:49:35] <bookworm> you can instruct the installer to install to say ~/.local and that won't break anything
[11:49:47] <pingpongball> really How?
[11:49:52] <bookworm> don't run it as root and you're fine
[11:50:38] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[11:51:11] <The-Compiler> not really, that can still break stuff
[11:51:23] <bookworm> not really no
[11:51:37] <The-Compiler> as a maintainer of an application where people often report bugs about this, yes
[11:51:47] <bookworm> least not in a way where root can't fix it
[11:52:07] <The-Compiler> well, yeah, "doesn't break" and "doesn't break in a way impossible to fix" are two very different things
[11:52:11] *** Joins: Metalsutton-alt (~Metalsutt@101.100.152.253)
[11:52:17] <pingpongball> as you told to is there any way to install that miniconda on specific folder like my ~/programs/miniconda   ?
[11:52:26] <bookworm> yes
[11:52:37] <pingpongball> and run all conda stuffs from there without affecting all ., How?
[11:52:40] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[11:52:41] *** Joins: mi6x3m (~mi6x3m@user/mi6x3m)
[11:52:42] <bookworm> look at the script / use the -h flag
[11:52:58] <pingpongball> :)
[11:52:59] <bookworm> there's an option like $PREFIX or some such
[11:53:05] <mi6x3m> Hey friends, is there a way to tell python not to use frozen modules but the python code of the standard lib?
[11:53:10] <mi6x3m> i specifically need importlib
[11:53:17] <pingpongball> ahh that would work thank you bookworm
[11:53:21] <mi6x3m> and my python installation includes the code
[11:53:24] *** Joins: mcpac82 (~textual@212.25.0.228)
[11:54:02] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:54:28] <bookworm> The-Compiler: as long as you shove the conda binary into your path *after* the system ones it can't interfere unless an env is activated
[11:54:36] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[11:55:06] <bookworm> putting the conda bin folder in front is not a good idea indeed
[11:56:22] <pingpongball> ah i installled thanks,
[11:56:29] <pingpongball> what bin folder?
[11:56:58] <bookworm> the one where conda reinstalls half your OS to ;)
[11:57:38] <pingpongball> are you graduated bachelor bookworm?
[11:57:38] <bookworm> the installer shoves everything in front so if I were you I'd get rid pf the conda magic you now probably have in your .bashrc
[11:58:16] *** Quits: raxor2k (~raxor2k@78.158.233.120) ()
[11:58:48] <bookworm> I really hate that thing, never seen a worse package manager. Alas I need to use the thing at work
[11:59:32] <mage> +1
[11:59:56] <pingpongball> bye guys, hope you have great day :)
[11:59:58] *** Parts: pingpongball (~pingpongb@103.94.252.87) ()
[12:01:02] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[12:03:29] *** Joins: csm3105 (~csm3105@static-26-27-230-77.ipcom.comunitel.net)
[12:03:43] *** Joins: water_27300935_ (~water_273@182.90.160.19)
[12:05:29] *** Joins: goldfish (~goldfish@user/goldfish)
[12:06:43] *** Quits: csm3105 (~csm3105@static-26-27-230-77.ipcom.comunitel.net) (Client Quit)
[12:07:59] <_Ev> Simple regex parsing and string manipulation (just a few lines).  An way to many this cleaner/minimal?:  https://replit.com/@evanesoteric/parse-better#main.py
[12:08:13] *** Quits: km (9ab7146360@user/km) (Remote host closed the connection)
[12:08:21] *** Joins: km (9ab7146360@user/km)
[12:08:35] *** Joins: plastico (~plastico@neomutt/plastico)
[12:09:00] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[12:09:34] <parv> _Ev, not going to bother with captcha there
[12:09:59] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[12:10:24] <_Ev> Ahh, thank you parv. Had never gotten hit with a capcha by them and I use one of the shadiest VPN providers.  reposting to bpa.st. Hate captchas.
[12:10:42] *** Joins: alzgh (~alzgh@user/alzgh)
[12:10:47] <_Ev> https://bpa.st/CIEA
[12:11:50] <_Ev> Maybe I should be using partition() instead.   /track, "  ?
[12:11:52] <stranac> _Ev: don't match everything with .*, match only what you want, e.g. \d+
[12:12:27] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[12:12:49] <stranac> _Ev: also, you can use a group such as (\d+) which would allow you to extract the data directly
[12:13:15] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[12:13:23] *** Joins: zamba (~marius@5.226.162.54)
[12:13:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:13:37] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:13:55] <_Ev> Ah ha   s = re.search(r'tra\.(\d+)', track).group()   works. Should I be adding a [^] in there?
[12:15:51] <stranac> _Ev: that depends on what exactly your text can contain, be as specific as you need to be to match your data
[12:16:45] <stranac> even something as simple as '\d+' would work for that specific example
[12:17:11] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 264 seconds)
[12:17:29] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:19:38] *** Parts: stranac (~stranac@195.29.239.126) (Leaving)
[12:19:45] *** Joins: stranac (~stranac@195.29.239.126)
[12:20:00] <parv> _Ev, I would go with r'\btra[.][0-9]+$'
[12:20:06] *** Parts: water_27300935_ (~water_273@182.90.160.19) (WeeChat 2.3)
[12:20:29] *** Joins: Payam (~Payam@138.106.57.132)
[12:21:35] <dminuoso> Hi. I have a poetry resolution error I cant quite make sense of: https://gist.github.com/dminuoso/fbd9c35601662d62e1a1d045ff99e964
[12:21:39] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[12:22:10] <dminuoso> poetry first tells me that my projects python requirement is (>=2.7,<2.8 || >=3.4), but then goes on saying: - drf-yasg requires Python >=3.6, so it will not be satisfied for Python >=2.7,<2.8 || >=3.4,<3.6
[12:22:17] <dminuoso> Where is that <3.6 requirement coming from?
[12:22:59] <Payam> is it possible to replace two chars from a string at the same time? like string.replace("a", "b" with "hh")
[12:22:59] <Payam> or should it be done one by one?
[12:22:59] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:24:41] <stranac> Payam: you can use re.sub() for that
[12:24:59] *** Joins: arinov (~arinov@213.194.126.155)
[12:25:01] <Payam> yeah
[12:25:03] <Payam> thanks
[12:26:55] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 260 seconds)
[12:28:14] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:29:37] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:34:08] *** Quits: mi6x3m (~mi6x3m@user/mi6x3m) (Quit: Leaving)
[12:34:29] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[12:34:41] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[12:36:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:36:49] <_Ev> Thank you
[12:37:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:39:09] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:41:13] *** Joins: dthpulse (~quassel@podciarou.sk)
[12:42:11] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[12:42:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[12:44:11] *** Joins: dthpulse_ (~quassel@podciarou.sk)
[12:44:49] *** Quits: dthpulse (~quassel@podciarou.sk) (Read error: Connection reset by peer)
[12:46:18] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:46:47] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:47:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[12:50:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[12:50:50] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:51:27] *** Joins: frost (~frost@user/frost)
[12:51:43] *** Joins: fikran (~fikran@user/fikran)
[12:55:05] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:8de0:171e:d78a:1ba8)
[12:55:15] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[12:55:57] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:55:57] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Remote host closed the connection)
[12:58:31] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[12:58:39] <Zweimer> https://bpa.st/6STQ << Consider this folder structure. Is it normal, that DoThis.py needs to have a "from .PackageB import  DoThat" (note: dot in front of packageB) in order to access this function?
[12:58:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:59:56] *** Joins: shad (~shad@user/shad)
[12:59:59] <ferros> Well, depends on your definition of normal, but yes it's expected
[13:00:17] *** Quits: shad (~shad@user/shad) (Client Quit)
[13:00:21] <ferros> That's how relative paths work in most filesystems
[13:00:24] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:168e:7b76:5917:4c68)
[13:00:32] *** Joins: shad (~shad@user/shad)
[13:00:51] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 258 seconds)
[13:01:12] <Zweimer> I would have thought that the projects folder is added to the sys.path (?) and therefore all packages are "visible"
[13:02:35] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[13:02:58] <Kim^J> They are
[13:03:08] <Kim^J> You just need to fully qualify them
[13:03:30] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[13:03:40] <Zweimer> What do you mean by "fully qualify" them? Kim^J
[13:03:48] <bjs> Zweimer: it's a bit weird that inside DoThis the . ("current") package is not PackageA
[13:03:49] <molt> does anyone know a way to batch resize SVG files? I have a ton of SVGs that need their longest side to be 100px
[13:03:58] <bjs> Zweimer: are you sure it wasn't .. ?
[13:05:00] *** kai7 is now known as kai
[13:05:14] <Zweimer> bjs, I want to use PackageB-functions inside my PackageA and have to write a "import .PackageB" instead "import PackageB"
[13:05:49] *** Quits: debayer (~debayer@2603-8000-cf00-4c0a-514c-fad7-53d3-d912.res6.spectrum.com) (Quit: Client closed)
[13:05:53] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[13:07:08] <bjs> Zweimer: if you're going `python3 main.py` then should be able to run `import PackageA` and `import PackageB`.  If that then imports something from PackageA then that file can also just `import PackageB`
[13:07:40] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[13:07:57] <bjs> Zweimer: `import .PackageB` isn't even valid syntax, so I'm not sure how that would work
[13:08:35] <braxas> is there some "archiver" for pypi
[13:08:41] <lambda> molt: SVGs don't really have pixels
[13:08:43] <braxas> which I can use in case someone removes their package from pypi
[13:08:46] <Zweimer> Well PyCharm is not executing my program until I add the . in front of the package name. I will create a minimal reproducible example
[13:09:10] <bjs> Zweimer: you're running it from inside PyCharm?  Maybe your run configuration needs to be fixed
[13:09:24] <KirkMcDonald> molt: An SVG file is just XML.
[13:09:24] <bjs> Zweimer: have you tried running it from the terminal directly so as to remove PyCharm from the equation just to make sure things work as you expect
[13:09:36] <molt> Yes, I know that. Thanks.
[13:09:43] <Zweimer> Yeah, I am running it inside Pycharm. I have not, but I will try it
[13:10:13] <KirkMcDonald> molt: Maybe I'm unclear on what you mean by resizing it, but if nothing else you can grab an XML parser.
[13:10:19] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[13:10:20] <lambda> molt: so what do you want to do? render them to 100px raster images?
[13:10:32] <molt> yes
[13:10:33] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:10:35] *** Joins: orbatos__ (~orbatos@user/orbatos)
[13:10:36] <KirkMcDonald> molt: And edit the relevant whatever. Or maybe just add some CSS with a transform.
[13:10:38] <lambda> ah, alright
[13:10:43] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 268 seconds)
[13:10:49] *** scoobydoob is now known as scoobydoo
[13:10:51] <KirkMcDonald> Ah, rendering is another matter.
[13:11:08] <molt> and I have a ton of them. Trying to find an automated solution
[13:11:20] <lambda> molt: have you tried inkscape?
[13:11:43] <molt> aha. No, I haven't... Was trying in Photoshop and Illustrator
[13:11:50] <molt> let me try Inkscape. Thanks
[13:12:51] <KirkMcDonald> Well, as far as Python is concerned, I think any approach to SVG rendering is just going to involve getting Python bindings to some other C or C++ library that can render SVGs.
[13:13:09] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[13:13:10] *** Quits: orbatos_ (~orbatos@user/orbatos) (Ping timeout: 260 seconds)
[13:13:21] <bjs> Zweimer: hmm, well that'd be my first step. Try running it directly in the terminal and see if things work as you expect there.  If they do, then you know the problem is your PyCharm run configuration
[13:13:32] <lambda> molt: the manpage has a bunch of examples
[13:14:10] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:15:12] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[13:15:15] <KirkMcDonald> It looks like pycairo is the thing.
[13:15:31] *** Joins: alzgh (~alzgh@user/alzgh)
[13:15:42] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:15:42] <KirkMcDonald> But Inkscape is a more specialized tool, and seems like a sensible place to start.
[13:15:46] *** Joins: rpkilby (~rpkilby@2600:100f:b11c:771b:c5b4:c6f2:2cdf:368f)
[13:17:26] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[13:17:26] *** Joins: cth (~Cthulchu@193.194.107.250)
[13:18:26] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 245 seconds)
[13:18:54] <rendar> beautifulsoup bug: if a node, let's say a html <a> has an href attribute, i access it like this: `node["href"]` but if i do `"href" in node`, it returns False, breaking the python protocol
[13:18:56] <rendar> why is that?!
[13:19:53] <supakeen> One would ask the BeautifulSoup creators.
[13:20:26] <supakeen> Likely they only implemented part of the protocol or whatever.
[13:25:11] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[13:25:35] *** Quits: Jefren1 (~Jefren@70.35.66.120) (Ping timeout: 264 seconds)
[13:25:43] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:26:35] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[13:27:25] *** Joins: Jefren1 (~Jefren@70.35.67.23)
[13:28:02] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:29:43] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[13:31:01] *** Joins: darksun (~darksun@user/darksun)
[13:32:15] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 260 seconds)
[13:32:41] *** Joins: Warped (~Warped@user/warped)
[13:32:43] *** Quits: OPK (~OPK@user/opk) (Quit: Textual IRC Client: www.textualapp.com)
[13:32:56] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:34:06] *** Joins: SuperLag (~akulbe@user/superlag)
[13:39:54] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:40:14] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:42:20] *** Quits: kindablue (znc@irc.tpurist.com) (Ping timeout: 260 seconds)
[13:42:27] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:43:59] *** Joins: Linux77 (~Linux7_7@186.233.182.138)
[13:49:02] *** Quits: dthpulse_ (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:51:23] *** Quits: baltazar (~baltazar@84-236-16-46.pool.digikabel.hu) (Ping timeout: 264 seconds)
[13:52:55] *** Joins: baltazar (~baltazar@193-110-63-186.cable-modem.hdsnet.hu)
[13:54:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:56:59] *** Joins: ninjaaron (~ninjaaron@ipservice-092-217-151-212.092.217.pools.vodafone-ip.de)
[13:57:02] *** Joins: reset (~reset@user/reset)
[13:57:41] <ninjaaron> Does asyncio have stuff for I/O with pipes and files?
[13:59:31] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-fc80-77d8-0740-03af.res6.spectrum.com) (Quit: Client closed)
[14:01:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi)
[14:05:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:06:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:07:15] *** Quits: et (~et@user/et) (Ping timeout: 260 seconds)
[14:08:24] <Yhg1s> ninjaaron: not files (on POSIX systems file I/O isn't really nonblocking, so it requires starting reader/writer threads to really unblock), but pipes, yes. https://docs.python.org/3/library/asyncio-eventloop.html#working-with-pipes for example.
[14:08:53] <Yhg1s> ninjaaron: for files, there's https://pypi.org/project/aiofiles/
[14:08:57] <ninjaaron> Yhg1s: thanks!
[14:09:18] <ninjaaron> Yhg1s: does this stuff with pipes include standard streams, or is that another thing?
[14:09:26] <ninjaaron> I just feel bad using `print`
[14:09:50] <Yhg1s> ninjaaron: yes, you can use it with sys.stdin/sys.stdout.
[14:10:08] *** Joins: kindablue (znc@irc.tpurist.com)
[14:10:13] <Yhg1s> there's also aioconsole, for example.
[14:10:24] <ninjaaron> Nice!
[14:10:49] <stwange> Is there any way to pass a nameserver object to dns.asyncresolver.Resolver() and have it use that instead of resolv.conf? It seems to take the argument (like resolver does) but doesn't seem to use it
[14:10:56] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[14:10:56] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[14:12:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:12:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:12:52] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Quit: Leaving)
[14:12:54] *** Joins: han-solo (~hanish@user/han-solo)
[14:12:55] *** A_Dragon is now known as Awoobis
[14:13:41] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 258 seconds)
[14:13:42] *** Quits: usr123 (~usr123@49.37.153.10) (Quit: Client closed)
[14:16:22] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[14:16:45] *** Quits: reset (~reset@user/reset) (Ping timeout: 260 seconds)
[14:17:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:18:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:18:06] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Quit: Leaving)
[14:20:15] *** Joins: reset (~reset@user/reset)
[14:20:21] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[14:21:25] *** Quits: daimbag (daimbag@2607:5300:60:21b::1) (Ping timeout: 260 seconds)
[14:23:15] *** Joins: usr123 (~usr123@49.37.153.10)
[14:23:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:23:58] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:24:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:24:23] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 264 seconds)
[14:25:51] *** dcaro is now known as dcaro_lunch
[14:25:55] *** Quits: ubert (~Thunderbi@178.165.162.187.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[14:26:02] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:26:10] *** Quits: ninjaaron (~ninjaaron@ipservice-092-217-151-212.092.217.pools.vodafone-ip.de) (Quit: WeeChat 2.8)
[14:28:57] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[14:30:13] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[14:32:32] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[14:33:23] *** Quits: rpkilby (~rpkilby@2600:100f:b11c:771b:c5b4:c6f2:2cdf:368f) (Ping timeout: 264 seconds)
[14:33:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:34:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi)
[14:34:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:34:47] *** Quits: vladoski (~vladoski@217.147.130.65) (Ping timeout: 246 seconds)
[14:35:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:35:55] *** Joins: withered_wolf (~withered_@2600:1008:b148:3218:7994:c364:67e7:f354)
[14:36:05] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi)
[14:37:26] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[14:37:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 258 seconds)
[14:40:06] *** Quits: withered_wolf (~withered_@2600:1008:b148:3218:7994:c364:67e7:f354) (Ping timeout: 245 seconds)
[14:41:01] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:41:14] <nedbat> am I missing a simple way to get the intersection of a list of sets?
[14:41:23] *** Joins: yte3 (~0@151.15.196.228)
[14:41:24] *** Quits: usr123 (~usr123@49.37.153.10) (Quit: Client closed)
[14:41:33] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[14:41:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:42:38] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:8de0:171e:d78a:1ba8) (Quit: Client closed)
[14:42:43] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[14:42:56] <bookworm> a.intersection or some such
[14:43:03] <bookworm> a list, nevermind
[14:43:24] <bookworm> but it reduces, so you can simply iterate
[14:43:53] <stranac> nedbat: set.intersection(*list_of_sets)
[14:43:55] <bookworm> did you try to explode it?
[14:43:59] <bookworm> that ^
[14:44:04] <nedbat> stranac: ah, thanks
[14:44:06] <bookworm> docs say *others
[14:44:17] <nedbat> stranac: now if only the intersection didn't turn out to be empty... :)
[14:44:26] <stranac> :)
[14:46:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:46:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:46:51] <nedbat> is there a way to do that accumulated intersection? I'd like to initialize my set to "everything", and then intersect down from there.
[14:46:56] *** Joins: nomic (~nomic@185.198.243.251)
[14:47:31] *** Joins: ubert (~Thunderbi@178.165.162.187.wireless.dyn.drei.com)
[14:48:08] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:48:13] <nedbat> i guess i could define `class Universe` with __rand__
[14:49:13] *** Joins: computeiro (~Wender@191.54.168.114)
[14:49:17] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[14:49:22] <diverdude> Hello, is there better way to do somefunc(a=b) if b is not None else somefunc() ? (and i cannot change somefunc)
[14:49:31] <bookworm> you can start with any of the sets, an intersection only ever looses elements never gains them. There's no point in inventing values
[14:50:31] <nedbat> bookworm: right, but that means treating the first one specially
[14:51:24] <nedbat> diverdude: what is the default value for a?
[14:51:51] <parv> diverdude, Does that function not deal with None value for `a`?
[14:51:54] <nedbat> diverdude: you could do:  kwargs = {"a":b} if b is not None else {};  somefunc(**kwargs)
[14:52:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:52:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:53:03] <diverdude> nedbat: ah thats a neat idea
[14:53:05] <diverdude> thanks :)
[14:53:21] *** Joins: usr123 (~usr123@49.37.153.10)
[14:55:47] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[14:57:06] *** Joins: frost (~frost@user/frost)
[14:57:07] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[14:57:52] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:58:39] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[14:59:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[14:59:59] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[15:00:03] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[15:01:03] *** Joins: fikran (~fikran@user/fikran)
[15:01:40] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[15:01:42] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[15:03:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:03:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:03:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:03:59] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:06:13] <_Ev> Having an iteration issues. I am updating a list of dictionaries. Must have my or loops wrong but have tried 3 combinations:   https://bpa.st/JKDA
[15:06:46] <_Ev> Goal is to have different  lists  "tracklists"  which get updated into each playlist list.  Working with lists of dictionaries.
[15:07:25] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:08:28] <_Ev> Ahh, think I see my mistake
[15:08:28] *** Quits: Metalsutton-alt (~Metalsutt@101.100.152.253) (Ping timeout: 260 seconds)
[15:09:49] <_Ev> maybe I need to use zip for this one, ah
[15:10:02] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[15:11:47] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 264 seconds)
[15:12:26] *** Quits: Echoz (~chris@user/echoz) (Ping timeout: 260 seconds)
[15:14:01] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[15:14:26] *** Joins: Echoz (~chris@user/echoz)
[15:16:05] *** Joins: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28)
[15:16:35] <d3x> _Ev, if I understand correctly and you each item in `playlists` has a corresponding track list in `all_tracks`, something like that should do the job: https://bpa.st/P7UA
[15:16:48] <ldericher> can I have an explicit keyword argument? as in `foo(my_arg="bar")` works but `foo("bar")` doesn't?
[15:17:22] <The-Compiler> ldericher: yes, place a "*" argument before my_arg
[15:17:28] <d3x> ldericher, https://www.python.org/dev/peps/pep-3102/
[15:17:39] <The-Compiler> ldericher: https://python-3-for-scientists.readthedocs.io/en/latest/python3_advanced.html
[15:18:19] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[15:18:27] <ldericher> The-Compiler, d3x: Thanks!
[15:18:28] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:18:48] <_Ev> Thank you so much d3x!
[15:18:55] <_Ev> Excellent, much appreciated
[15:19:45] *** Joins: withered_wolf (~withered_@2600:1008:b148:3218:2042:e451:a66b:3072)
[15:20:36] <_Ev> "playlist['tracklist']"  Why don't I need to update the list/dictionary? If tracklist doesn't exist in the dictionary or list, how is this getting added?
[15:20:42] <jim87> Hello! I'm developing a tool which has to interact with IP addresses in multiple subnets. For example, I've got 10.0.1.x and 192.168.1.x subnets, and I need to know the "right" own IP depending on another given IP, so that the subnets match. Is there anything I can use which does this for me?
[15:20:43] *** Joins: orange (~orangeext@user/orangeextract)
[15:20:56] <_Ev> playlist['tracklist'] is generating this list on the fly?
[15:22:34] <The-Compiler> jim87: https://docs.python.org/3/library/ipaddress.html I'm guessing
[15:24:06] <jim87> The-Compiler: yup, I was thinking about using something like (ipaddress) in (ip subnet), but I don't know the subnet (/16, /24 etc)
[15:24:33] <jim87> Or at least, is there a way to get the subnet, given an IP and something else from the network adapter / configuration somehow?
[15:24:36] *** Joins: daimbag (~bagdarrel@2607:5300:60:21b::1)
[15:25:00] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[15:25:59] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:27:32] <The-Compiler> jim87: for 192.168.* and 10.* the subnet size is fixed: https://en.wikipedia.org/wiki/Private_network#Private_IPv4_addresses
[15:28:09] *** Joins: upsala (~zcb@185.213.155.232)
[15:28:13] <The-Compiler> hm, though I suppose you could configure a smaller subnet. It's been a while since I've done network stuff.
[15:28:57] <jim87> The-Compiler: yup. I'm seeing there's a netifaces module which might do the thing
[15:29:19] <jim87> I'm trying to configure a network-unaware module, which doesn't restrict to LAN IPs
[15:29:33] <jim87> (even if the use-case will probably be 99% that case)
[15:31:32] *** Quits: helmet33 (~usetarmac@allpc.gmit.ie) (Quit: Leaving)
[15:31:50] *** Quits: PacKetIV (PacKetIV@user/packetiv) (Quit: *evaporates*)
[15:32:05] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[15:34:03] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[15:34:06] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[15:34:49] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[15:35:55] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:33] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[15:36:40] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:37:31] *** Joins: RiFo (~RiFo@user/rifo)
[15:38:59] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[15:39:41] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 264 seconds)
[15:39:52] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:40:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:40:30] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:41:07] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[15:41:22] *** Joins: upsala (~zcb@185.213.155.232)
[15:43:30] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:44:46] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[15:44:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[15:45:41] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[15:46:50] <_Ev> How do I generate a dictionary of dictionaries without having to covert?:   https://bpa.st/YV4Q
[15:52:11] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[15:54:50] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:57:39] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[15:58:00] <_Ev> Actually it seems to be working as intended. Thanks again d3x!!
[15:58:10] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[15:58:50] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 260 seconds)
[15:59:09] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[15:59:55] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi)
[16:02:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:02:09] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[16:03:04] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[16:03:37] *** Quits: gusto (~Augustus@2620:149:e0:6003::3d) (Quit: Textual IRC Client: www.textualapp.com)
[16:05:11] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 264 seconds)
[16:07:55] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[16:10:21] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:11:18] *** Quits: metaace_ (~metaace@user/metaace) (Remote host closed the connection)
[16:11:35] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:00] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:12:23] *** Joins: metaace (~metaace@user/metaace)
[16:13:12] *** Joins: wender (~Wender@189.37.69.145)
[16:13:56] *** Joins: dbristow (~dbristow@user/dbristow)
[16:13:57] *** dcaro_lunch is now known as dcaro
[16:14:00] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:15:25] *** Joins: RiFo (~RiFo@user/rifo)
[16:15:25] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[16:15:50] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[16:15:59] *** Quits: computeiro (~Wender@191.54.168.114) (Ping timeout: 264 seconds)
[16:16:59] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[16:18:05] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 260 seconds)
[16:18:05] *** Quits: c10l0 (~c10l@user/c10l) (Ping timeout: 260 seconds)
[16:18:31] *** Joins: ionface (~ionface@user/ionface)
[16:21:19] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[16:21:57] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[16:24:41] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 245 seconds)
[16:25:11] *** Quits: bigkerse (~theBigKer@173.170.105.38) (Remote host closed the connection)
[16:25:27] *** Joins: c10l (~c10l@user/c10l)
[16:25:34] *** Joins: kitzman (~kitzman@user/dekenevs)
[16:25:35] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[16:26:04] <kitzman> hm, not really python related - but i've figured this might be the best channel to ask in
[16:26:11] *** Quits: bonestormii_ (~bonestorm@c-71-57-43-158.hsd1.il.comcast.net) (Ping timeout: 264 seconds)
[16:26:38] *** Quits: withered_wolf (~withered_@2600:1008:b148:3218:2042:e451:a66b:3072) (Remote host closed the connection)
[16:26:40] <kitzman> i haven't used windows in ages, and for the first time i have to use it, and also to write some code which would work both on linux and windows
[16:26:55] *** Joins: withered_wolf (~withered_@2600:1008:b148:3218:2042:e451:a66b:3072)
[16:28:32] *** Joins: gusto (~Augustus@109.255.100.54)
[16:28:46] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[16:29:05] <Wooble> kitzman: if the code's in python, it's on-topic. if not, probably not the best channel to ask in :P
[16:29:49] <ouemt> kitzman: I write python on windows using WSL, and my Mac coworkers have no problem with it, so if it's python, just make sure you're using the Path library instead of treating paths like strings, and you'll probably be fine
[16:30:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:30:42] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[16:30:57] <Wooble> ouemt: if you're using WSL, treating paths like strings is also probably fine.
[16:31:09] <kitzman> alright so i was testing something
[16:31:15] <ouemt> Wobble: it needs to run on Windows, linux, and Mac
[16:31:29] <kitzman> no , the thing is : i looked in the socket.fromfd implementation. it seems to me that it will work on windows iff the fd supplied comes from a socket
[16:31:29] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[16:31:37] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Read error: Connection reset by peer)
[16:31:54] <ouemt> it's rare I have problems with paths-as-strings, but using the appropriate library just negates it alltogether
[16:31:59] <kosh> then just make to develop on wsl and on normal windows command line and it should be fine
[16:32:04] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[16:32:05] <Wooble> ideally avoid using the socket library directly even if you don't care about being cross-platform...
[16:32:05] <kosh> also use Pathlib
[16:32:31] <kitzman> i.e: if i have a function send_ssl_data(sockfd), and i try it with a normal fd, it won't work (when i recv).
[16:32:32] <kosh> if you work with paths directly as strings please hit your self with a frying pan until you stop doing
[16:32:40] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[16:32:49] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Max SendQ exceeded)
[16:32:58] <kitzman> tbh i'm programming some minimal bindings in C for another programming language
[16:33:15] <kitzman> but saw this implementation and thought "hey the python ppl managed to do this"\
[16:33:18] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[16:34:46] *** Joins: p-i- (~Ohmu@mx-ll-223.206.150-241.dynamic.3bb.co.th)
[16:35:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:36:11] <Wooble> kitzman: technically the fd is supposed to refer to a socket on any platform when you use .fromfd(); if it happens to work without a socket on unix and not windows that's *probably* because the underlying windows API won't let you do that at all.
[16:36:24] *** Quits: withered_wolf (~withered_@2600:1008:b148:3218:2042:e451:a66b:3072) (Remote host closed the connection)
[16:37:13] *** Quits: usr123 (~usr123@49.37.153.10) (Quit: Client closed)
[16:37:21] *** Joins: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb)
[16:37:38] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:38:08] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Ping timeout: 268 seconds)
[16:38:16] *** Joins: INeedAHandle_ (~INeedAHan@39.124.72.106)
[16:38:44] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Read error: Connection reset by peer)
[16:38:53] *** Joins: bloody (~bloody@user/bloody)
[16:41:05] <kitzman> aah! i was fearing that
[16:41:31] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[16:41:37] <kitzman> yeah on unix you can use a fd instead of a socket ( i guess unless you try to set options, haven't tried that, which the python init function might do)
[16:42:17] <kitzman> i guess my PR will end with "not supported on windows" xD
[16:42:28] <kitzman> anyway, thank you ^^
[16:43:08] *** Joins: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[16:43:51] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[16:43:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[16:44:25] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:45:39] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[16:46:54] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[16:46:57] <p-i-> VSCode makes me so angry sometimes. They try so hard but they miss the most BASIC operations sometimes.
[16:47:40] <p-i-> Python notebook. The first step MUST be to select a Python executable with which to execute the cells.
[16:47:41] <Wooble> You might need the VB.NET plugin turned back on?  *rimshot*
[16:48:18] <p-i-> So I create a .venv in the same folder.
[16:48:22] <p-i-> damn thing won't pick it up
[16:48:56] <dob1> does cherrypy support live reloading ?
[16:48:57] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[16:49:06] <p-i-> restart works meh
[16:51:22] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[16:51:59] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[16:52:08] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:52:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:52:46] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:ee69:2bd2:29dd:c21a) (Ping timeout: 258 seconds)
[16:53:09] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[16:53:25] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:8524:45d6:fc42:81aa)
[16:53:48] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[16:54:42] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[16:54:57] *** Joins: hendursa1 (~weechat@user/hendursaga)
[16:55:25] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[16:56:17] *** Quits: INeedAHandle_ (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:57:40] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[16:57:49] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[16:58:19] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[16:58:20] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:59:10] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[16:59:20] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[16:59:40] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[17:00:44] *** Joins: marcello42 (~mp@p5dedb36a.dip0.t-ipconnect.de)
[17:00:45] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[17:00:50] <dman777> does python have a array method like Javascript's array.find()?
[17:01:10] <hodapp> .index()?
[17:01:12] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[17:01:12] <Yhg1s> dman777: what does JavaScript's array.find() do?
[17:01:15] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:01:35] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 264 seconds)
[17:02:41] *** Joins: rany (~rany@user/rany)
[17:02:42] <dman777> Yhg1s: The find() method returns the value of the first element in the provided array that satisfies the provided testing function
[17:03:00] *** Joins: withered_wolf (~withered_@2600:1008:b148:3218:2042:e451:a66b:3072)
[17:03:04] *** Quits: withered_wolf (~withered_@2600:1008:b148:3218:2042:e451:a66b:3072) (Remote host closed the connection)
[17:03:17] <Yhg1s> dman777: do you actually want to pass a function to this, or are you just looking for equality?
[17:03:37] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[17:04:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[17:06:48] <Wooble> dman777: next(x for x in lst if test_func(x))
[17:07:59] <dman777> Yhg1s: well, most likely I would be passing a function to look for equality since it is a array of dictionaries. https://dpaste.org/3oah#L ... I would be testing the data structor to see if 'Consume api; exists in 'props': {'Consume api':  '/v1/bar'}}
[17:08:37] <Yhg1s> dman777: okay, then no, there isn't a method for that. You would write a loop, for example using a generator expression like Wooble showed.
[17:08:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[17:09:29] <grym> and specify a default in case there isn't one (or prepare to catch an exception)
[17:10:24] *** Joins: fikran (~fikran@user/fikran)
[17:13:06] *** Quits: Jong (~Jong@2620:10d:c090:400::5:7299) (Read error: Connection reset by peer)
[17:13:11] <dman777> Yhg1s: Wooble: thank you
[17:15:23] *** Joins: pro_z (~pro_z@37.214.77.123)
[17:15:28] *** Quits: marcello42 (~mp@p5dedb36a.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[17:16:52] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[17:17:19] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[17:18:59] *** Quits: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb) (Quit: Leaving)
[17:19:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Quit: restart)
[17:20:48] *** Joins: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb)
[17:21:43] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:23:24] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[17:23:47] *** Joins: portalrat (~portalrat@user/portalrat)
[17:24:20] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[17:25:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:26:21] *** Joins: vladoski (~vladoski@217.147.130.65)
[17:27:23] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 264 seconds)
[17:27:52] *** Quits: kia (~kia@user/kia) (Quit: kia)
[17:28:40] *** Quits: ubert (~Thunderbi@178.165.162.187.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[17:29:01] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:31:39] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[17:33:20] <vladoski> I'm using unittest, how can I assert that one dict has to have a subset of another dict?
[17:34:03] *** Joins: grooverman (~grooverma@177.95.12.14)
[17:34:23] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[17:36:20] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e55f-64e4-577d-9d7f.res6.spectrum.com)
[17:36:33] *** Joins: vince (~vince@75.127.14.76)
[17:36:50] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[17:37:00] <phy1729> Do the values have to match?
[17:37:15] <CrtxReavr> Can you compare they like ``dict0 == dict1[some_key]``?
[17:37:38] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[17:38:12] <phy1729> assert set(dict_smaller.items()) - set(dict_larger.items()) == set()     or    assert all(dict_smaller[k] == dict_larger[k] for k in dict_smaller)
[17:38:25] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:38:31] <grym> phy1729: there's set.issubset()
[17:38:50] <grym>  this requires your keys and values to both be hashable
[17:39:25] <phy1729> oh huh there's <= now
[17:39:49] <CrtxReavr> Or: if dict0.items() & dict1.items():
[17:40:19] <phy1729> huh been there since at least 3.0. I should read the docs more; thanks grym
[17:42:23] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[17:43:03] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[17:43:04] <vladoski> I'm on py2 unfortunately..
[17:43:16] <vladoski> i'll try with sets
[17:43:47] *** Quits: Linux77 (~Linux7_7@186.233.182.138) (Ping timeout: 260 seconds)
[17:43:55] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[17:44:01] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[17:44:10] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:8de0:171e:d78a:1ba8)
[17:44:42] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[17:45:16] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[17:47:07] <nedbat> vladoski: put the dict-comparing logic into a helper function, and test that helper
[17:47:11] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[17:48:13] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:48:13] *** Joins: cth (~Cthulchu@193.194.107.250)
[17:48:20] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[17:48:58] *** Joins: han-solo (~hanish@user/han-solo)
[17:49:23] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 246 seconds)
[17:50:20] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[17:50:31] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[17:51:04] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:59:19] <Stench> is there a way for me to ask pytest what part of the test lifecycle (setup, running, teardown) we're currently in?
[18:00:22] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:00:47] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[18:01:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi)
[18:02:51] <SnoopJ> Stench, there's some machinery related to this, although I suspect your question would be more clear if we knew more about the task you're addressing
[18:03:10] *** Joins: Atque (~Atque@user/atque)
[18:03:43] <Stench> SnoopJ: sure! So i've got end-to-end automated UI tests using ScreenPy, which allows you to write a custom adapter for the narrator's (the thing doing the logging) microphone. My adapter writes the actions to a file, which i can upload to a site i'm building.
[18:04:00] <Stench> SnoopJ: I currently have a problem where some of the logged actions are during setup and teardown, but i don't have a good way to tell the file that.
[18:04:21] <Stench> SnoopJ: If i knew from Pytest which part of the lifecycle i was in, i could just log a line that says "being setup" or "begin teardown" or whatever
[18:04:39] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:04:44] <Stench> SnoopJ: That's kind of distilled but i hope it gets the point across
[18:05:08] <SnoopJ> Stench, where are the logs being emitted from? I'm guessing it's some object that is active across all three of these phases
[18:06:19] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[18:06:20] <Stench> SnoopJ: Yeah, so... ScreenPy has Actions, which are things like "Click" and "Visit", and those have "perform_as" methods that are decorated with a "beat". The "beat" is what triggers the logs, so things like an Actor opening up their browser during setup or cleaning up during teardown are logged appropriately by pytest, but i want to also be able to tell my file when actions are happening.
[18:06:31] <Stench> SnoopJ: Obviously those same actions with that same "beat" mechanism are logged during test runs as well.
[18:07:27] <Stench> does that help, or is it too weedy?
[18:07:41] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Read error: Connection reset by peer)
[18:08:29] <Stench> SnoopJ: maybe i can use some of pytest's hooks to set an attribute on the Session object?
[18:08:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[18:10:20] <SnoopJ> Stench, it's a little weedy, it might be more clear to see an example test (and/or fixture), but I think I understand the context of the question a little better. Hooks might help, yea.
[18:10:49] <Stench> SnoopJ: Let me paste something up real quick
[18:11:27] <SnoopJ> Or perhaps using the unittest style would be helpful, since you could then notify your object(s) about the phase pretty explicitly with the structure those provide for moving between phases
[18:12:24] <axisys> what module to use to run commands on linux? subprocess.run([..]) or something else? how do I collect the output ?
[18:13:08] <han-solo> `.check_output` is there
[18:13:17] <SnoopJ> axisys, you can pass `capture_output=True` to subprocess.run(), and there's also subprocess.check_output()
[18:13:59] *** Quits: launchd (launchd@bitbot/launchd) (Quit: K-Lined)
[18:14:05] <SnoopJ> although I think check_output() is the older API, so doing it the way run() allows may be a better habit
[18:14:15] <axisys> SnoopJ: I did that output = subprocess.run(['ls', '-al'], capture_output=True) .. but output is all in one line.. with '\n' appended between lines.. not sure how to separate them .split('\n') did not seem to work
[18:14:29] *** Joins: stealth[] (~stealth]@2001:9e8:36f7:3b00:f1ab:72b9:58ea:9295)
[18:14:38] <Stench> SnoopJ: Here's an example test: https://bpa.st/7CWQ
[18:15:29] <Stench> SnoopJ: The bit about the narrator's adapter is kind of complicated, but suffice to say that the adapter has "beat" and "aside" etc. methods that the narrator calls for each of its adapters wherever the main "beat" annotation is used.
[18:15:32] <SnoopJ> Stench, where does pytest enter this picture?
[18:15:55] *** Joins: launchd (launchd@bitbot/launchd)
[18:15:59] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:8524:45d6:fc42:81aa) (Ping timeout: 260 seconds)
[18:16:09] <Stench> SnoopJ: Ah. I use pytest to run the file, sorry - the "setup" and "teardown" bits are inside of a fixture (with `yield` between) and the "test" bit is in a test function.
[18:16:30] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[18:16:32] <han-solo> axisys: do you need those other attributes of the files, or just a list of all files ?
[18:16:41] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[18:16:59] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:17:27] <axisys> han-solo: either way.. but output.splitlines() gave me similar output as linux
[18:17:47] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 265 seconds)
[18:17:56] <Stench> SnoopJ: It looks like i could use the `pytest_runtest_setup`, `pytest_runtest_call`, and `pytest_runtest_teardown` hooks to set a value on the session? Can i just "get" the session without using the fixture?
[18:18:07] <dman777> [num**2 for num in range(5)] does range() contain  a yield?
[18:18:12] *** Joins: frost (~frost@user/frost)
[18:18:36] <SnoopJ> Stench, I think you'd have to stash the state as you suggested earlier. Here's an example of that across contexts: https://docs.pytest.org/en/latest/how-to/writing_hook_functions.html#storing-data-on-items-across-hook-functions
[18:18:37] <axisys> han-solo: output = subprocess.check_output(['ls','-al']) and then output.splitlines() worked
[18:18:45] *** Joins: easter_egg (~jeffry@user/easter-egg/x-4406379)
[18:18:50] <Stench> perfect, thank you for your help SnoopJ :D
[18:19:18] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[18:19:20] <grym> dman777: i don't know what Range objects do on the inside, but they effectively have a yield
[18:19:31] <SnoopJ> Stench, a fixture-oriented version would be something like: `@pytest.fixture def actor(): actor.setstate("setup"); actor.do_setup() actor.setstate("test"); yield actor; actor.setstate("teardown"); actor.do_teardown()`
[18:19:40] <han-solo> axisys: i mean, if you only want the filenames, then you don't need to run a subprocess for that
[18:19:42] <SnoopJ> oops, missed a ; there
[18:19:47] <grym> dman777: range(1e9) and range(5)  take up the same (small) amount of space
[18:20:01] <grym> if you make a list out of both of them they'll take up very different amounts of space
[18:20:08] *** Joins: srhm (~srhm@user/srhm)
[18:20:35] <SnoopJ> Stench, there might be something that lets you query the state of pytest itself in the way you were originally asking about, though. I don't know off-hand either way, there's a lot of surface area in pytest
[18:20:38] <bpalmer> assuming python3
[18:20:43] <Stench> SnoopJ: Oh interesting, i hadn't thought about setting things on the Actor themself. I won't have access to the Actor within my Adapter, but that does open up some possibilities.
[18:20:57] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[18:20:58] <Stench> SnoopJ: Yeah, i appreciate your help though -- this hook approach will definitely work
[18:21:17] *** Joins: kindablue (~kindablue@irc.tpurist.com)
[18:21:23] <grym> bpalmer: yes, assuming supported pythons or with six
[18:21:26] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:21:45] <jinsun> dman777: it doesn't really have a yield, but it is lazy like a generator
[18:22:12] <jinsun> it is more fancy than a generator, you can even index into it
[18:22:36] <SnoopJ> Stench, if the fixture version feels a little wibbly to you, do consider the unittest spelling, which lets you break things apart more explicitly, but yea, it sounds to me like you're basically wanting to notify the object of changes to its state from the places that pytest lets you do this out of the can
[18:22:40] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[18:22:41] *** Joins: nomic (~nomic@185.198.243.251)
[18:23:52] *** Joins: antineutrino (~antineutr@14.139.190.82)
[18:24:00] <SnoopJ> Stench, this might also be worth looking at: https://docs.pytest.org/en/latest/example/special.html
[18:24:19] <Stench> SnoopJ: haha my keyword soup of a google search just led me here, too :D
[18:24:21] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[18:24:31] <antineutrino> is there a unicode for a python logo glyph ?
[18:24:33] <SnoopJ> the happy news is that pytest is extraordinarily customizable, so if you need to really roll up your sleeves and muck about in the details that's possible
[18:24:47] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[18:24:50] <grym> antineutrino: afaik no
[18:24:53] <antineutrino> im ricing my PS1
[18:24:57] <SnoopJ> antineutrino, nope, Unicode has no such codepoint (although 🐍 is nice)
[18:25:12] <antineutrino> any way i can get a python logo glyph ?
[18:25:21] <grym> antineutrino: you could i guess make a hacked font like the various -powerline ones
[18:25:27] <SnoopJ> if your term supports SVG, you could load the official logo that way?
[18:25:41] <SnoopJ> https://www.python.org/community/logos/
[18:25:58] <antineutrino> ah cool maybe that would work , but getting it into PS1 would be hard i guess
[18:26:01] <grym> ^ that's what my modeline in my editor does, i'm pretty sure
[18:26:15] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[18:26:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[18:26:51] <SnoopJ> I guess you could hack it into a private-use codepoint in a custom font, but I'd try the other way first if your terminal has functionality for it
[18:27:09] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[18:27:11] <grym> yeah.  despite the fact that i use powerline, it's still kind of gross
[18:27:27] <antineutrino> soo make a new font ? with an unused codepoint for the python glyph ?
[18:27:37] * SnoopJ doesn't really know how that works with e.g. fonts-noto-color-emoji
[18:27:46] <SnoopJ> antineutrino, I would try the other way first
[18:27:51] <antineutrino> okay
[18:27:54] <SnoopJ> refer to your terminal's documentation, and maybe ask #linux
[18:28:02] <antineutrino> cool
[18:28:03] <antineutrino> thanks
[18:28:57] <The-Compiler> antineutrino: https://www.nerdfonts.com/ has a Python logo
[18:29:08] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[18:29:19] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[18:29:22] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[18:29:33] <The-Compiler> antineutrino: https://i.imgur.com/BmZ9KPP.png
[18:29:42] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[18:30:03] <antineutrino> :O
[18:30:31] *** Quits: mcpac82 (~textual@212.25.0.228) (Read error: Connection reset by peer)
[18:30:51] <The-Compiler> (that's https://github.com/Peltoche/lsd/ with kitty configured to display nerd fonts correctly)
[18:31:40] <yourfate> I need to call a function for each item in a list, but don't car about the results. if I just do `map(func, mylist)` func never gets called.
[18:31:47] <yourfate> is there a nice way to do that?
[18:31:49] <grym> yourfate: map is lazy
[18:31:54] <yourfate> yes, can I make it eager
[18:31:57] <yourfate> ist he question
[18:31:59] <The-Compiler> yourfate: use a for loop instead
[18:32:00] <grym> yourfate: `for mything in thelist: f(mything)`
[18:32:10] <grym> comprehensions are meant to return collections that you use
[18:32:11] *** Quits: BlackBishop (dexter@user/blackbishop) (Ping timeout: 264 seconds)
[18:32:13] <grym> loops don't have to
[18:32:26] * antineutrino steals The-Compiler 's dotfiles 
[18:32:39] <The-Compiler> antineutrino: go ahead :D https://github.com/The-Compiler/dotfiles
[18:32:52] <yourfate> oh, I can do `list(map(...))` but that is ugly
[18:32:56] <MacGyver> YOU WOULDN'T STEAL A DOTFILE
[18:32:59] <MacGyver> (Sorry)
[18:33:14] <MacGyver> yourfate: Why are you trying to mix functional style with side effects?
[18:33:26] <yourfate> good point, idk.
[18:33:26] <MacGyver> Because I assume func doesn't do *nothing*.
[18:33:36] <yourfate> it add items to a gui thing
[18:33:51] <grym> yourfate: a simple for loop is quite clear, intent-wise
[18:33:55] <SnoopJ> The-Compiler, you might have something more helpful to say about the querying-pytest-state question back in scrollback (short version: they want to know if they're in setup, test, or teardown and wondering if there's a way to just ask pytest from user code)
[18:34:01] <yourfate> yes, I switched to for loop
[18:34:17] <The-Compiler> SnoopJ: I replied over in #pytest already
[18:34:24] *** Joins: portalrat_ (~portalrat@user/portalrat)
[18:34:44] <antineutrino> lol why is it called "sauce code pro" ?  adobe copyright ?
[18:35:04] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:4c6b:4c7f:4300:b7c)
[18:35:07] <SnoopJ> The-Compiler, aha :)
[18:35:10] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:35:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:36:03] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[18:36:49] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:36:50] <yourfate> I use pragmata pro and love it
[18:36:55] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 252 seconds)
[18:36:55] <yourfate> first font I ever paid for
[18:37:27] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:37:43] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:38:34] <The-Compiler> antineutrino: where?
[18:38:37] <dob1> given some files I want to create a zip file with them. I found several tutorial (some of them very old) what is the recommended way? maybe is best to copy/move them to a temp directory and zip che dir?
[18:38:45] <The-Compiler> https://typeof.net/Iosevka/ is my favourite font while we're at it
[18:38:57] <The-Compiler> dob1: https://docs.python.org/3/library/zipfile.html
[18:39:34] <The-Compiler> dob1: or shutil.make_archive() for trivial cases
[18:39:38] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[18:39:42] <The-Compiler> dob1: also see https://realpython.com/working-with-files-in-python/#archiving
[18:40:11] *** Quits: antineutrino (~antineutr@14.139.190.82) (Ping timeout: 256 seconds)
[18:40:47] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[18:41:28] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[18:41:38] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 258 seconds)
[18:42:00] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[18:42:02] *** Joins: alkino (~quassel@user/alkino)
[18:42:26] *** Joins: rpkilby (~rpkilby@2600:100f:b108:5280:c158:718f:b565:66d5)
[18:42:48] *** Parts: bpalmer (~user@user/bpalmer) (ERC (IRC client for Emacs 27.2))
[18:42:55] <DnzAtWrk> anyone got an example of a good guide written with jupyter
[18:42:59] <grym> zipfile's quite straightforward
[18:43:01] <DnzAtWrk> which I can take inspiration from
[18:43:20] <DnzAtWrk> I used zipfile the other day to extract netcdf data from sentinel 1 in a loop
[18:43:25] <DnzAtWrk> without using a temp file
[18:44:40] <dob1> The-Compiler, it's simple to create the zip file but, and it's a right behaviour, it store the path
[18:44:53] <dob1> I would like to store just the files
[18:45:20] <grym> dob1: writestr, then
[18:45:34] <grym> or specify arcname= with write
[18:45:57] <Stench> SnoopJ: https://bpa.st/YOAA !!
[18:45:58] <Stench> thanks again :D
[18:46:11] <Stench> SnoopJ: haha uh look for the "when" loglines
[18:47:39] <Stench> woops https://bpa.st/GA3A
[18:48:29] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[18:50:04] <SnoopJ> Stench, nicely done :)
[18:50:10] *** Joins: vlm (~vlm@user/vlm)
[18:50:23] <DnzAtWrk> https://github.com/xtreamsrl/jupytemplate
[18:50:25] <DnzAtWrk> that's cute
[18:50:35] <DnzAtWrk> are there more nice jupyter templates for doing data science
[18:50:38] <dob1> grym, new_zip.write(file, arcname=Path(file).name)      this?
[18:50:52] <dob1> it seems to work
[18:51:08] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[18:51:22] <grym> or any other arcname you wish, yeah
[18:51:50] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[18:52:02] *** Joins: akk (~akk@75.161.146.115)
[18:52:05] <SnoopJ> DnzAtWrk, I like the LIGO tutorials, e.g. https://www.gw-openscience.org/GW150914data/LOSC_Event_tutorial_GW150914.html
[18:52:18] <SnoopJ> catalog of a few here: https://www.gw-openscience.org/tutorials/
[18:52:34] <DnzAtWrk> Oh, a table of contents. I didn't even realize you could link to sections
[18:52:50] <DnzAtWrk> very nice
[18:53:08] <DnzAtWrk> the only thing I'd change is maybe the ending
[18:53:22] <DnzAtWrk> it just cuts off mid-code
[18:53:24] *** dcaro is now known as dcaro_away
[18:53:25] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[18:54:12] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:54:25] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[18:54:31] *** Joins: Atque (~Atque@user/atque)
[18:54:51] <Stench> SnoopJ: The end result was pretty simple, i just add my Adapter class to the Session object and set an attribute on the Adapter as we go through the lifecycle using those hooks. :D
[18:55:00] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[18:55:05] <Stench> SnoopJ: MyPy doesn't like what i did, but MyPy doesn't like a lot of what i do. :P
[18:56:11] *** Quits: rpkilby (~rpkilby@2600:100f:b108:5280:c158:718f:b565:66d5) (Ping timeout: 264 seconds)
[18:56:48] *** Joins: Akuli (~Akuli@82-203-166-92.bb.dnainternet.fi)
[18:56:48] *** Joins: mickey8 (~user@user/mickey)
[18:57:36] * SnoopJ nods
[19:00:24] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:00:48] <mawk> what does it smell like?
[19:01:40] <Stench> Elderberries
[19:01:42] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[19:02:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:02:13] <grym> skoal!
[19:02:24] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[19:04:07] *** Joins: NeoCore (~neocore@89.40.183.25)
[19:04:48] <merijn> If I want to know *exactly* what the close_fds argument to Popen does I'm stuck digging through the code, I guess?
[19:05:41] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 246 seconds)
[19:06:16] <MacGyver> What insight do you expect the code to give that the documentation doesn't?
[19:07:12] <MacGyver> (I guess what I'm asking is in what way is the documentation lacking your definition of exact)
[19:07:16] <Wooble> for some values of "*exactly*" that's pretty much true of any code.
[19:07:33] <merijn> MacGyver: I have code that uses it and behaves differently on linux and macOS
[19:07:56] <merijn> I'm trying to figure out whether this is 1) macOS and linux interpreting/implementing posix differently or 2) implementation difference inside python stdlib
[19:07:59] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:8de0:171e:d78a:1ba8) (Quit: Client closed)
[19:08:08] *** Joins: Payam (~Payam@138.106.57.132)
[19:08:42] <merijn> Specifically, if a python process open a TCP socket, Popen's a child process that connect to that socket then on linux it "Just Works" on macOS the TCP socket is closed and the subprocess can't connect to it
[19:09:26] <jdmark> so im going to go over automate the boring stuff udemy course with the pdf book open if needed
[19:09:59] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 264 seconds)
[19:10:11] <MacGyver> Then yes, probably.
[19:10:14] <jdmark> as a starting point for learning to code
[19:10:31] <grym> jdmark: there are worse starting points!
[19:10:39] <merijn> MacGyver: So I'm wondering if close_fs uses the "python file descriptors have a flag whether they're heritable" that I see described elsewhere to control how fd's are closed. Or whether it's using posix_spawn to close *everything* not explicitly kept open. But if the latter, then why is it keeping the socket open on linux and not macOS
[19:10:43] <SnoopJ> merijn, if you want to know *exactly* what any software does, the code is usually the thing you wanna look at. The docs could always be wrong or confusingly worded, for isntance.
[19:10:44] <jdmark> where should i start as python for a first language
[19:10:52] <grym> jdmark: have a tool that lets you run code at hand as well.  thonny.org is a nice one
[19:10:55] <grym> but there are others
[19:11:08] <jdmark> that would be the python interpreter?
[19:11:13] <grym> jdmark: then read a bit, write some code, evaluate it, repeat
[19:11:26] <SnoopJ> jdmark, this is a nice (and free) book: https://greenteapress.com/wp/think-python-2e/
[19:11:30] <merijn> SnoopJ: The stdlib docs don't make it particularly easy to figure out where said code even is, though
[19:11:32] <grym> jdmark: thonny gives you an interpreter and a beginner-friendly UI for using it
[19:11:44] <grym> SnoopJ: looks like automate the boring stuff is already in play there
[19:11:46] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[19:11:57] <SnoopJ> which is also a good book
[19:12:12] <jdmark> i have that one
[19:12:21] <SnoopJ> the #1 thing for a new programmer to understand about learning to program: write code, read code. The rest is just personal preference
[19:12:26] <jdmark> so the two best books to start with are automate the boring stuff and think python 2nd edition
[19:12:43] <MacGyver> merijn: For this kind of thing I usually first grab the manpage describing the mechanisms that Python is most likely using for this, like with sockets.
[19:13:02] <MacGyver> merijn: But in the case of Popen on different systems it's probably easier to go directly to the code.
[19:13:33] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:13:50] <grym> jdmark: they've both gotten a lot of love.  pick one that works for you, and then read a bit, write a bit, repeat
[19:13:52] <merijn> MacGyver: The docs suggest it's using execvpe (and thus fork) with "some implementation using posix_spawn as of 3.8" so, that seems I should lower my expectations of well-defined behaviour to "haha...no"
[19:14:03] *** Joins: mickey8 (~user@user/mickey)
[19:14:09] <SnoopJ> merijn, agreed, hopefully the docs workgroup addresses that. In the case of your question, the best jumping off point is the Popen class: https://github.com/python/cpython/blob/main/Lib/subprocess.py#L698
[19:14:13] <grym> jdmark: and to ask questions here, paste us the code at https://bpa.st/+python
[19:15:12] <SnoopJ> jdmark, it's hard to go wrong with books, but it's very easy to go wrong trying to find "the best" anything to the extent that it keeps you from writing programs, which is the main way to learn.
[19:15:20] <merijn> ANyway, sounds like a problem for monday...
[19:15:31] <SnoopJ> on Monday, you'll know where to begin, then
[19:15:39] <jdmark> what about video instruction?
[19:15:47] <jdmark> is there any good for a new to programming python beginner
[19:15:53] <SnoopJ> there are many
[19:16:05] * SnoopJ has no particular preference
[19:16:13] <grym> jdmark: personal preference.  my personal preference ranks it a distant third behind reading and writing
[19:16:15] <jdmark> how should learning python be structured?
[19:16:27] <grym> jdmark: read a bit, write a bit, repeat
[19:16:48] <jdmark> you need to know what to write before you write it and it needs to be functional
[19:16:53] <SnoopJ> if any structure doesn't spend a lot of your time writing programs, I would question it quite a lot
[19:16:54] <grym> jdmark: read a bit, write a bit, run what you wrote until it works and you have a decent understanding why, repeat *
[19:16:57] <Wooble> merijn: https://github.com/python/cpython/blob/main/Modules/_posixsubprocess.c#L269 suggests linux uses _close_open_fds_safe and OS X (or non-linux posix) uses _close_open_fds_unsafe (but I have no idea if that's your issue)
[19:17:19] <grym> jdmark: the extremely traditional first thing to do is figure out how to write the words 'hello, world!' to the screen
[19:17:19] <jdmark> should i think of a simple project and then focus my learning on that?
[19:17:26] <SnoopJ> there are 15 references to close_fds in subprocess.py, so a few places to look at
[19:17:35] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[19:17:36] <Wooble> merijn: errr "maybe_unsafe"
[19:17:45] <jdmark> writing a port scanner or web server from scratch?
[19:17:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[19:18:01] <jdmark> there is khan academy as well
[19:18:06] <SnoopJ> jdmark, that's one way to go, yep. There's a nice list of project ideas here: https://nedbatchelder.com/text/kindling.html
[19:18:23] <SnoopJ> but it's not a spectator sport: if you aren't writing programs, you're missing the most important part of the learning process
[19:18:30] <grym> jdmark: scratching your own itches, so to speak, is usually very rewarding
[19:18:31] <Payam> Hi, I cant find any example on authontication with token using httpx
[19:18:34] <SnoopJ> try a few approaches for the rest and see what you like
[19:18:37] <Payam> does anyone know ?
[19:18:43] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Ping timeout: 256 seconds)
[19:19:04] <Wooble> got to love a 10-year-old comment saying "I didn't feel like it but it should be easy to do this for other OSes"
[19:19:26] *** Quits: d0ku (~d0ku@178.43.150.25.ipv4.supernova.orange.pl) (Remote host closed the connection)
[19:19:45] *** Joins: fikran (~fikran@user/fikran)
[19:20:13] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:20:13] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[19:20:41] <SnoopJ> it's an operating system, michael, how much cyclomatic complexity could it have? 15?
[19:20:43] *** Joins: mickey8 (~user@user/mickey)
[19:20:49] *** Joins: driib (~driib@185.65.135.245)
[19:20:55] <SnoopJ> </TV_humor>
[19:22:46] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:23:28] <han-solo> Payam: basic auth ? `with httpx.Client() as client:..client.get(url, auth=(username, passwd))`
[19:23:44] <han-solo> they provide quite few ways
[19:24:03] <Payam> han-solo with token and not password and user
[19:24:25] <Payam> I have this : `async with httpx.AsyncClient(auth=(user, password)) as client` but I now got to know that I should use token
[19:24:41] *** Quits: Forty-Bot (~kvirc@pool-108-45-127-224.washdc.fios.verizon.net) (Ping timeout: 245 seconds)
[19:24:44] <han-solo> Authorization can be passed in header no ?
[19:25:07] <Payam> yes. that is true
[19:25:41] *** Joins: superboot (~agentgasm@user/superboot)
[19:25:57] *** Joins: rpkilby (~rpkilby@2600:100f:b106:1110:552f:2543:e3fc:b002)
[19:26:01] <han-solo> i'd assume, `with httpx.client(headers={'Authorization': 'Basic + token}) as client:...` or something like that
[19:26:43] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:27:19] *** Joins: magla (~gelignite@55d46190.access.ecotel.net)
[19:27:51] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[19:28:09] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:28:28] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[19:29:36] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[19:30:57] *** Joins: subopt (~subopt@2603-8081-2302-459a-9984-c9d8-6cdf-d389.res6.spectrum.com)
[19:31:08] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[19:31:44] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[19:31:47] *** Quits: vladoski (~vladoski@217.147.130.65) (Remote host closed the connection)
[19:32:58] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:33:05] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 264 seconds)
[19:33:26] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 245 seconds)
[19:33:41] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 246 seconds)
[19:35:15] *** Joins: ledtc (~ledtc@se1.eu.vpn.time4vps.cloud)
[19:35:19] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:35:47] *** Joins: xheimlic1 (~xheimlich@179.218.1.150)
[19:36:19] <xheimlic1> so I have a CSV that was exported (in the naive way, df.to_csv(filename)) to a CSV. Now it has two rows of headers, etc.
[19:36:58] *** Joins: jwisbell35 (~jwisbell3@047-036-214-124.res.spectrum.com)
[19:36:59] <xheimlic1> a multiindex dataframe that was exported to csv. How in the heck do I read this back into a pandas dataframe.
[19:37:29] <xheimlic1> I know, stupid format. It was a backup, I was reading live from a wire, so to say, but something's pfoofed)
[19:37:45] <grym> xheimlic1: pd.read_csv(... , header=[0,1]) perhaps
[19:37:51] <grym> looks like you can pass a list of row indexes
[19:37:54] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[19:38:57] *** Parts: joel135 (sid136450@hampstead.irccloud.com) ()
[19:38:58] <grym> or index_col= maybe
[19:39:37] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:39:41] *** Quits: ledtc (~ledtc@se1.eu.vpn.time4vps.cloud) (Ping timeout: 256 seconds)
[19:40:07] <xheimlic1> so you can imagine I have a set of species, and a set of measurements of them, say weight and wingspan.
[19:40:53] <xheimlic1> row 1 of my csv says ",MONKEY, MONKEY, CAT, CAT, DOG, DOG". row 2 says ", weight, wingspan, weight, wingspan, weight, wingspan"
[19:41:04] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:41:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb) (Quit: Leaving)
[19:41:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:42:59] *** Joins: MrBungle (~MrBungle@S01065c7695f92b2c.gv.shawcable.net)
[19:43:53] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[19:44:13] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:44:16] *** Quits: Hammett (~Absolut@133.red-88-19-102.staticip.rima-tde.net) (Quit: I feel like I could... like I could... like I could... TAKE ON THE WORLD!!)
[19:45:02] *** Joins: igghibu (~igghibu@37.120.201.125)
[19:45:47] *** Joins: Mr_Bungle (~MrBungle@2604:3d08:1788:dc00:50c2:3d32:57b1:578b)
[19:46:04] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[19:47:27] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[19:48:06] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:2281:6748:766d:ae06:6724:cf09)
[19:48:55] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:49:18] *** Quits: MrBungle (~MrBungle@S01065c7695f92b2c.gv.shawcable.net) (Ping timeout: 268 seconds)
[19:50:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[19:50:52] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:51:00] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:51:30] *** Joins: mickey8 (~user@user/mickey)
[19:51:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:53:11] *** Quits: igghibu (~igghibu@37.120.201.125) (Quit: Textual IRC Client: www.textualapp.com)
[19:54:26] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[19:55:33] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:56:46] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 245 seconds)
[19:57:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[19:57:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:57:41] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[19:58:25] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:59:09] *** Joins: srhm (~srhm@user/srhm)
[19:59:29] *** Joins: gohlzehn (~gohlzehn@user/gohlzehn)
[19:59:39] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[19:59:56] <purplex> can i use "if not x in list" and "if x not in list" are both same?
[20:00:08] <grym> purplex: `if x not in` is preferred
[20:00:13] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 258 seconds)
[20:00:18] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:00:32] <grym> i think it started being a warning lately, but i'm not sure
[20:00:33] <gohlzehn> Hi. I'
[20:00:38] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:00:40] <purplex> i accidently typed first one, is it same?
[20:00:55] <grym> purplex: they'll behave the same, i think
[20:01:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:01:34] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[20:01:38] *** Joins: han-solo (~hanish@user/han-solo)
[20:02:13] <gohlzehn> Hi, I'm getting an error on L25 here https://jinb.in/c78443 which is: Argument of type "str" cannot be assigned to parameter "args" of type "list[str]" in function "main", "str" is incompatiable with "list[str]"
[20:02:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[20:02:37] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[20:03:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:03:04] <jinsun_> it is same but latter is pep8 compliant
[20:03:58] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-fc80-77d8-0740-03af.res6.spectrum.com)
[20:04:07] *** Quits: lxdr (~lxdr@user/lxdr) (Quit: Ping timeout (120 seconds))
[20:04:09] *** Quits: Myst (~Myst@user/myst) (Quit: Ping timeout (120 seconds))
[20:04:25] <Soni> does python support "tagged unions"?
[20:04:27] *** Joins: Myst (~Myst@user/myst)
[20:04:28] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Quit: Leaving)
[20:04:32] *** Quits: Tips|Cloud (sid62231@ilkley.irccloud.com) (Ping timeout: 244 seconds)
[20:04:50] *** Joins: lxdr (~lxdr@user/lxdr)
[20:05:03] <phy1729> You can have unions of classes or different NamedTuples or TypedDicts
[20:05:09] *** Quits: roniez (~roniez@nixsec.se) (Quit: ZNC 1.8.2 - https://znc.in)
[20:05:09] *** Quits: Raichvent (~Raichvent@193.123.33.210) (Remote host closed the connection)
[20:05:26] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[20:05:27] <jinsun_> gohlzehn: the annotation for *args should be str
[20:05:36] *** Joins: roniez (~roniez@nixsec.se)
[20:05:45] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[20:05:48] <gohlzehn> jinsun_: what are you referring to with "annotation"?
[20:06:02] <gohlzehn> I do want to accept *args in the method
[20:06:14] <gohlzehn> and it does run, but it's just linter complaining
[20:06:37] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 244 seconds)
[20:06:37] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 244 seconds)
[20:06:44] *** Joins: Sadale (~Sadale@user/sadale)
[20:06:44] *** Joins: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com)
[20:06:52] <Soni> like, with data classes, you can do introspection stuff yeah?
[20:07:10] <phy1729> You can isinstance to pick apart the union
[20:07:17] <jinsun_> gohlzehn: that list[str] you have in line 6 is the annotation
[20:07:21] *** Quits: nvz (~user@nvz.farted.online) (Remote host closed the connection)
[20:07:29] *** Joins: nvz (~user@nvz.farted.online)
[20:07:55] <gohlzehn> jinsun_: but I do want *args, I don't want it to be str
[20:08:19] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:08:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:08:36] <Soni> like, you can use this https://docs.python.org/3/library/dataclasses.html#dataclasses.fields
[20:08:44] <grym> gohlzehn: but that's what *args is.  _args_ is a list[str],
[20:08:54] <Soni> but the issue is if you have a base class and inheritance, this gets really inconvenient
[20:09:16] *** Joins: rany (~rany@user/rany)
[20:09:51] <Soni> because you can't find the "tags" you need to use - you only see the base class, not the subclasses
[20:10:14] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 244 seconds)
[20:10:27] *** Quits: rany (~rany@user/rany) (Client Quit)
[20:10:39] *** Joins: rany (~rany@user/rany)
[20:10:45] *** Quits: tudor (~tudor@tomka.hu) (Ping timeout: 244 seconds)
[20:10:55] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[20:11:01] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[20:11:08] *** Joins: rany (~rany@user/rany)
[20:11:34] *** Joins: tudor (~tudor@tomka.hu)
[20:13:14] <jinsun> gohlzehn: that is how you annotate *args, you just have to specify the type of the contents of args, not of args, the type checker will add Tuple[...] automatically for you
[20:13:23] <jinsun> gohlzehn: https://www.python.org/dev/peps/pep-0484/#arbitrary-argument-lists-and-default-argument-values
[20:13:58] *** Joins: gizmo_ (~gizmo@45.91.125.2)
[20:14:04] <gohlzehn> jinsun: ahh, that's why
[20:15:18] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:15:19] <axisys> foo = defaultdict   foo['x'] += 1 gets keyerror. what am I doing wrong?
[20:15:29] <axisys> foo = defaultdict()   foo['x'] += 1 gets keyerror. what am I doing wrong?
[20:15:57] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-cd4-c07d-d850-8a02.fixed6.kpn.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:16:38] <jinsun> axisys: you need to give the default_factory to defaultdict(), without that it behaves like a normal dict
[20:17:21] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[20:17:33] <axisys> jinsun: hmm.. can you provide an example please?
[20:17:37] *** Joins: Sadale (~Sadale@user/sadale)
[20:18:06] *** Joins: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb)
[20:18:14] <jinsun> axisys: something like `foo = defaultdict(int);   foo['x'] += 1`
[20:18:36] <axisys> jinsun: gotcha. thanks
[20:18:38] *** Joins: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net)
[20:18:39] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[20:19:50] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:19:55] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[20:20:32] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[20:21:30] *** Joins: defsam (~defsam@cpc136884-bsfd10-2-0-cust642.5-3.cable.virginm.net)
[20:21:31] *** Quits: yac (~user@user/yac) (Ping timeout: 260 seconds)
[20:23:08] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[20:24:34] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[20:24:38] *** Joins: Sadale (~Sadale@user/sadale)
[20:24:44] *** Joins: stdout (~stdout@216.163.21.11)
[20:25:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df00b-72.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:25:13] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[20:25:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:26:00] *** Joins: stewie92_ (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[20:26:03] <gohlzehn> is there something like "as" in python with typings? I am using a lib that has an union return type, but I know it will always be a str type, so I just want to do something like: `return myVar as str` but what's the python way for this?
[20:26:36] *** Quits: stewie92_ (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Client Quit)
[20:26:44] <grym> gohlzehn: you can annotate the return as str, but if your library is handing you back strings, no need to do more
[20:27:22] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Quit: Client closed)
[20:27:38] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[20:28:02] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:28:02] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[20:28:23] <tdsmith> you can assert isinstance(myVar, str) and the typechecker should respect that
[20:28:27] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[20:29:05] *** Joins: hel0 (~hel0@user/redrum88)
[20:29:42] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[20:30:05] <gohlzehn> thanks
[20:30:14] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Client Quit)
[20:31:09] *** Joins: Sadale (~Sadale@user/sadale)
[20:33:12] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[20:34:01] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[20:34:08] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:17be:ce72:ef03:e767)
[20:34:58] *** Joins: richrd9 (~wavi@thelounge/maintainer/wavi)
[20:35:01] <stewie925> sorry off topic guys - anyone using IRC client for libera?   I keep disconnecting using the KiwiIRC
[20:35:12] *** Joins: BigShip6 (~BigShip@user/bigship)
[20:35:15] <grym> stewie925: all your favorite clients work fine with libera
[20:35:23] *** Joins: dohtem_ (uid524096@user/dohtem)
[20:35:26] *** Joins: yitz_ (~yitz@exercism/yitz)
[20:35:29] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:35:49] *** Joins: eichin_ (sid27120@id-27120.tinside.irccloud.com)
[20:35:51] *** Joins: ethrl_ (uid524335@user/doforlove33)
[20:35:51] <stewie925> gyro, what do you use? Limechat keeps disconnecting for me
[20:35:53] *** Joins: Jong (~Jong@2620:10d:c090:400::5:7299)
[20:36:01] *** Joins: Ekho- (~Ekho@user/ekho)
[20:36:03] <stewie925> grym: sorry
[20:36:15] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Ping timeout: 258 seconds)
[20:36:15] <grym> stewie925: i use irssi running on a VPS
[20:36:42] <stewie925> oh, hmm... thank you
[20:36:48] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:36:53] <stewie925> Hexchat doesn't have an OS X version too bad...
[20:36:54] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:36:59] <grym> (and then mosh + tmux to get to the VPS)
[20:37:13] <grym> if entire datacenters are going offline, i've got bigger problems than IRC d/cing
[20:37:15] *** Joins: carbolymer_ (~carbolyme@dropacid.net)
[20:37:16] <Swayze> why when screen does a fine job
[20:37:19] *** Joins: kantlive- (~kantlivel@octoprint/kantlivelong)
[20:37:21] *** Joins: e9 (tkk@cybertron.redlight.li)
[20:37:22] *** Joins: busybusybusy (~BUSY@user/busy)
[20:37:28] <grym> Swayze: taste, it doesn't really matter
[20:37:34] *** Joins: Keira (~k@lulzsec.co.uk)
[20:37:37] <Swayze> :p
[20:37:43] <han-solo> tmux <3
[20:37:45] *** Joins: Sadale (~Sadale@user/sadale)
[20:37:49] <Swayze> nerds :/
[20:37:50] *** Joins: mbarkhau1 (~mbarkhau@84.38.67.145)
[20:37:59] *** Joins: Spawns_Carpet (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[20:38:18] *** Joins: dhill__ (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[20:38:34] *** Joins: very_sneaky_ (~very_snea@user/very-sneaky/x-7432109)
[20:38:37] <grym> (some remote protocol) + (some terminal multiplexer) + (some irc client) = happy
[20:39:45] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:39:59] *** Quits: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[20:40:07] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[20:40:08] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Read error: Connection reset by peer)
[20:41:05] *** Joins: stewie92_ (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[20:41:18] <stewie92_> hope I dont disconnect...
[20:41:50] *** Quits: stewie92_ (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Client Quit)
[20:43:15] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2 - https://znc.in)
[20:43:19] *** Quits: emptynine (tkk@cybertron.redlight.li) (*.net *.split)
[20:43:19] *** Quits: dhill_ (~dhill@modemcable103.217-80-70.mc.videotron.ca) (*.net *.split)
[20:43:19] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (*.net *.split)
[20:43:19] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (*.net *.split)
[20:43:19] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[20:43:19] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (*.net *.split)
[20:43:19] *** Quits: richrd (~wavi@thelounge/maintainer/wavi) (*.net *.split)
[20:43:19] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[20:43:19] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[20:43:19] *** Quits: ethrl (uid524335@user/doforlove33) (*.net *.split)
[20:43:19] *** Quits: KeiraT (~k@lulzsec.co.uk) (*.net *.split)
[20:43:19] *** Quits: BigShip (~BigShip@user/bigship) (*.net *.split)
[20:43:19] *** Quits: mbarkhau (~mbarkhau@84.38.67.145) (*.net *.split)
[20:43:19] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (*.net *.split)
[20:43:19] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[20:43:20] *** Quits: dohtem (uid524096@user/dohtem) (*.net *.split)
[20:43:20] *** Quits: eichin (sid27120@tinside.irccloud.com) (*.net *.split)
[20:43:20] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[20:43:20] *** kantlive- is now known as kantlivelong
[20:43:20] *** richrd9 is now known as richrd
[20:43:20] *** BigShip6 is now known as BigShip
[20:43:20] *** dohtem_ is now known as dohtem
[20:43:20] *** eichin_ is now known as eichin
[20:43:20] *** ethrl_ is now known as ethrl
[20:43:21] *** e9 is now known as emptynine
[20:43:32] *** Joins: stewie92_ (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[20:44:16] *** Joins: Sadale (~Sadale@user/sadale)
[20:45:05] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[20:45:18] *** Joins: rany (~rany@user/rany)
[20:46:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:46:39] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[20:47:02] <stewie925> test
[20:47:38] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Quit: Client closed)
[20:48:10] *** Quits: schumaml (~schumaml@p200300e2ef0b030053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[20:48:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494)
[20:51:23] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 264 seconds)
[20:51:53] *** Joins: Sadale (~Sadale@user/sadale)
[20:52:04] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[20:52:05] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2 - https://znc.in)
[20:52:28] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:52:32] *** Joins: srhm (~srhm@user/srhm)
[20:53:11] *** Joins: Pickchea (~private@user/pickchea)
[20:53:25] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[20:53:41] *** Ekho- is now known as Ekho
[20:53:55] *** Quits: defsam (~defsam@cpc136884-bsfd10-2-0-cust642.5-3.cable.virginm.net) (Ping timeout: 256 seconds)
[20:54:06] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:54:07] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) (Quit: Client closed)
[20:54:12] *** Quits: stewie92_ (~stewie925@2600:1702:44f0:35c0:a8a4:141f:85ae:d494) ()
[20:54:18] *** ouemt is now known as ouemt_
[20:54:22] *** ouemt_ is now known as ouemt__
[20:54:24] *** ouemt__ is now known as cl
[20:54:27] *** cl is now known as ouemt
[20:54:34] *** Joins: mickey8 (~user@user/mickey)
[20:54:35] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[20:55:04] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:56:41] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df)
[20:57:05] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df) (Client Quit)
[20:57:31] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df)
[20:58:13] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[20:58:29] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[21:00:17] *** Joins: rany (~rany@user/rany)
[21:01:43] *** Quits: wender (~Wender@189.37.69.145) (Remote host closed the connection)
[21:01:53] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[21:03:29] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:2281:6748:766d:ae06:6724:cf09) (Quit: Leaving)
[21:04:11] *** Joins: jazzy (~jaziz@user/jaziz)
[21:05:51] *** Joins: Naan (~naan@user/naan)
[21:06:07] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:07:19] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:84fb:5024:2605:bd40) (Quit: Leaving)
[21:07:50] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2 - https://znc.in)
[21:09:29] *** Joins: stewie92518 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df)
[21:09:36] *** Joins: sandb0y (~pirate@user/sandb0y)
[21:10:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:10:23] *** Quits: stewie92518 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df) (Client Quit)
[21:10:31] *** Joins: dthpulse (~quassel@podciarou.sk)
[21:10:49] *** Joins: rany (~rany@user/rany)
[21:10:57] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[21:11:08] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 258 seconds)
[21:11:17] *** Joins: stewie92534 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df)
[21:11:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df) ()
[21:11:38] *** Quits: stewie92534 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df) (Client Quit)
[21:11:47] *** Quits: rpkilby (~rpkilby@2600:100f:b106:1110:552f:2543:e3fc:b002) (Ping timeout: 264 seconds)
[21:12:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:12:14] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dc8:2a02:1081:b8df)
[21:13:10] *** Joins: rany (~rany@user/rany)
[21:13:46] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:14:08] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-fc80-77d8-0740-03af.res6.spectrum.com) (Quit: Client closed)
[21:16:23] *** Joins: ocramoi (~ocramoi@143.107.231.30)
[21:17:58] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Ping timeout: 252 seconds)
[21:20:40] *** Joins: duoi (~duoi@user/duoi)
[21:20:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[21:22:38] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[21:23:37] *** Joins: jazzy (~jaziz@user/jaziz)
[21:23:55] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:25:07] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2 - https://znc.in)
[21:26:20] *** Joins: rany (~rany@user/rany)
[21:26:39] *** Joins: az (az@user/azz)
[21:26:56] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[21:27:19] <az> hi, is it adviced to use with statement with sql to manage commit or just use the explicit way?
[21:27:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[21:27:30] *** Joins: mickey8 (~user@user/mickey)
[21:27:36] <grym> context managers are nice
[21:27:59] <Ninpo> I don't think using with implies commit? It doesn't for me with sqlalchemy iirc
[21:28:17] <grym> check your ORM, yeah
[21:28:30] <grym> it'll clean up if something goes boom, though; or ought to
[21:28:41] <Ninpo> yeah it'll rollback transactions etc
[21:28:52] <Ninpo> assuming underlying db engine supports such
[21:29:06] *** Joins: fikran (~fikran@user/fikran)
[21:30:08] *** yitz_ is now known as yitz
[21:30:15] *** Quits: ocramoi (~ocramoi@143.107.231.30) (Quit: WeeChat 2.9)
[21:31:10] <az> ok thanks. so I'll go with it but I see I've to add close manually, didn't expect that
[21:32:24] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[21:33:28] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2 - https://znc.in)
[21:34:35] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[21:38:38] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[21:39:18] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:17be:ce72:ef03:e767) (Quit: Client closed)
[21:40:29] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:42:11] *** Parts: kitzman (~kitzman@user/dekenevs) (C-x k)
[21:42:52] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[21:44:10] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[21:44:10] <Ninpo> pretty sure the connection etc gets cleaned up if you've got a cursor in a with context (the cursor is closed etc) but it doesn't imply commit
[21:44:29] <Ninpo> commit should always be explicit imo
[21:47:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:49:25] <az> God, I'm confused. I read different things in different places
[21:49:45] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::60cb) (Quit: Leaving)
[21:50:06] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Remote host closed the connection)
[21:50:12] <az> seems like new versions do commit and close automatically like it does with files and json
[21:51:22] *** Joins: ttys000 (~ttys000@user/ttys000)
[22:01:40] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 268 seconds)
[22:02:34] *** Parts: gohlzehn (~gohlzehn@user/gohlzehn) (WeeChat 3.2)
[22:02:40] <deltab> note that connections and transactions are different things; you might want to do multiple transactions with the same connection
[22:02:52] *** Joins: SuperLag (~akulbe@user/superlag)
[22:03:00] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[22:04:11] <deltab> you might use a context manager to delimit a connection, and another one for each transaction
[22:04:15] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:06:24] <az> I'm using separate connection for each
[22:07:40] *** Joins: ubert (~Thunderbi@178.115.53.120.wireless.dyn.drei.com)
[22:09:13] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Remote host closed the connection)
[22:14:28] *** Joins: Deknos (~someone@user/menace)
[22:14:29] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[22:16:50] *** Joins: rany (~rany@user/rany)
[22:17:24] *** Joins: duskrat (~portalrat@user/portalrat)
[22:18:49] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[22:19:13] *** Joins: ubert1 (~Thunderbi@178.115.53.120.wireless.dyn.drei.com)
[22:19:53] *** Quits: portalrat_ (~portalrat@user/portalrat) (Ping timeout: 264 seconds)
[22:23:59] *** duskrat is now known as portalrat
[22:25:35] *** Quits: hel0 (~hel0@user/redrum88) (Ping timeout: 264 seconds)
[22:29:38] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 268 seconds)
[22:29:55] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[22:30:06] *** Quits: subopt (~subopt@2603-8081-2302-459a-9984-c9d8-6cdf-d389.res6.spectrum.com) (Ping timeout: 245 seconds)
[22:31:15] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[22:31:29] *** Joins: p-i-_ (~Ohmu@223.206.150.241)
[22:31:43] *** Joins: vicfred (~vicfred@user/vicfred)
[22:32:32] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[22:35:11] *** Quits: p-i- (~Ohmu@mx-ll-223.206.150-241.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[22:35:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:36:49] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[22:38:37] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[22:39:02] *** Joins: KombuchaKip (~kip@192.252.230.5)
[22:40:00] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[22:41:40] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:42:28] *** Joins: Auron (Auron956@user/auron)
[22:43:42] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Read error: Connection reset by peer)
[22:49:16] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:b5ea:9d67:614d:69e)
[22:50:49] *** Joins: BelZarath (~BelZarath@h-109-228-190-15.A400.priv.bahnhof.se)
[22:51:23] <BelZarath> I've been googling everywhere and can't really find a great answer. Is there a "max" recommended buffer size when receving a data stream with socket? (tcp)
[22:51:30] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[22:51:57] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:168e:7b76:5917:4c68) (Ping timeout: 258 seconds)
[22:52:15] <BelZarath> Would it be a stupid idea to find out the bw of the server and divide that by say 10 and use that as the buffer size?
[22:52:40] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[22:53:04] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[22:53:39] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[22:57:23] *** Quits: emf (~emf@2620:10d:c090:400::5:5ca4) (Ping timeout: 264 seconds)
[22:59:20] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:59:23] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[22:59:36] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Client Quit)
[23:01:44] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:01:53] <ChrisWarrick> BelZarath: https://docs.python.org/3/library/socket.html#socket.socket.recv
[23:06:06] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:06:36] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[23:07:11] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 246 seconds)
[23:09:29] *** Joins: uqlock (~uquenar@wireless-acad-11.nat.emory.edu)
[23:10:31] <BelZarath> 4096 damn thats slow so if you want to transfer big files how do people usually accomplish this?
[23:10:33] <BelZarath> several sockets?
[23:12:19] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:12:42] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Remote host closed the connection)
[23:14:40] *** Joins: Xasa (~Zeno@user/zeno)
[23:15:27] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Remote host closed the connection)
[23:17:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:17:05] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[23:17:11] *** Quits: pro_z (~pro_z@37.214.77.123) (Ping timeout: 264 seconds)
[23:18:44] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[23:19:20] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (Quit: Meeeelting)
[23:19:21] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[23:20:45] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[23:22:12] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[23:25:32] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[23:25:45] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[23:26:53] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[23:28:35] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 264 seconds)
[23:29:45] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[23:31:18] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 268 seconds)
[23:31:33] <zware> Can anyone give me a quick rundown (or point me to the right docs) differentiating `pip install`'s `--prefix`, `--root`, and `--target` options?
[23:32:16] <zware> (Usual uses should never use any of them, but I'm straying from the beaten path here :))
[23:32:38] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[23:33:59] *** Joins: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de)
[23:36:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[23:37:05] *** Joins: Joel (~jjshoe@user/joel)
[23:37:51] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[23:38:25] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[23:38:27] *** Joins: fikran (~fikran@user/fikran)
[23:39:09] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[23:41:29] <InPhase> zware: pip help install
[23:42:11] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 260 seconds)
[23:42:56] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 258 seconds)
[23:43:00] *** Joins: yac (~user@user/yac)
[23:43:04] <zware> InPhase: `help` isn't helpful enough
[23:43:24] <InPhase> zware: help install helps more than help.
[23:43:55] <zware> InPhase: `help install` isn't helpful enough
[23:44:28] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:44:49] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[23:45:10] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[23:47:29] <_Ev> [Django template]  I need to slice or truncatechars but I have tried all the combinations and am not getting the result I expect.    I have 39 chars ('http://api.blah-blah....') PLUS an additional 9 chars foo.12345).    How do I echo/print/get only the lat 9 chars?     {{ playlist.href|slice:39 }  {{ playlist.href|slice:-9 }
[23:48:14] *** Quits: jwisbell35 (~jwisbell3@047-036-214-124.res.spectrum.com) (Quit: Leaving)
[23:48:38] <InPhase> zware: If you read this, you will be demotivated to use any of them:  https://github.com/pypa/pip/issues/7829
[23:48:47] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[23:49:01] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[23:49:13] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[23:49:58] <ChrisWarrick> _Ev: slicing urls doesn’t make much sense to me
[23:50:54] <_Ev> ChrisWarrick: I am using the last string as an identifier for a loop of unique modals.
[23:51:12] <ChrisWarrick> _Ev: why not just use the entire URL?
[23:51:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[23:51:46] <_Ev> ChrisWarrick: Fair enough, getting picky I guess. I will do that.
[23:55:11] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[23:55:50] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[23:56:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:57:02] *** Joins: metaace (~metaace@user/metaace)
[23:57:17] *** Joins: Atque (~Atque@user/atque)
[23:57:19] *** Joins: fluffyballoon (~user@131.93.208.196)
[23:58:26] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 268 seconds)
[23:59:44] <_Ev> I don't think I can use full URL's for IDs. Dones't work with my {{ var.foo }}
