[00:27:29] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[00:31:58] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[00:35:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[00:39:51] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[00:40:52] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[00:58:31] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[00:58:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[01:00:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:02:42] *** Joins: fikran (~fikran@user/fikran)
[01:02:55] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[01:18:36] *** Quits: frozensoil (~frozensoi@bras-base-lnglpq1516w-grc-01-74-12-204-141.dsl.bell.ca) (Quit: Lost terminal)
[01:20:02] *** Quits: vandim (~vandim@93-78-13-165.dne.volia.net) (Remote host closed the connection)
[01:32:09] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[01:32:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:32:16] *** ChanServ sets mode: +v EvilDMP
[01:55:06] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[02:06:43] *** Quits: CodenameTim (~CodenameT@66.63.167.122) (Ping timeout: 265 seconds)
[02:13:50] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[02:13:55] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:14:07] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[02:23:44] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[02:27:42] *** Joins: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it)
[02:38:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:10:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[03:11:40] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:12:04] *** Joins: fikran (~fikran@user/fikran)
[03:20:09] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 268 seconds)
[03:21:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:27:27] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:def0:6996:2bb9:77) (Ping timeout: 256 seconds)
[03:40:52] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[03:43:42] *** Joins: Atque (~Atque@user/atque)
[04:17:00] *** Joins: easherma (~easherma@c-24-12-255-61.hsd1.il.comcast.net)
[04:17:46] <easherma> jinja has https://jinja.palletsprojects.com/en/2.11.x/templates/#none and im trying to figure out why that exists and why it might be preferred in a template vs != None or something similar. any ideas?
[04:17:47] <easherma> this is what their test does
[04:17:47] <easherma> https://github.com/pallets/jinja/blob/647677d37fd4d95d5fb1571a3120c8b185bad4bf/src/jinja2/tests.py#L91
[04:21:16] *** Quits: easherma (~easherma@c-24-12-255-61.hsd1.il.comcast.net) (Quit: Client closed)
[04:21:49] *** Joins: easherma (~easherma@c-24-12-255-61.hsd1.il.comcast.net)
[04:22:06] *** Quits: easherma (~easherma@c-24-12-255-61.hsd1.il.comcast.net) (Client Quit)
[04:23:52] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:29:41] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[04:30:38] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[04:41:10] <FunkyBob> explore: perhaps because None in python needs careful handling?
[04:41:33] <FunkyBob> in DTL you can at least use {% if somevar is None %}
[04:41:47] <FunkyBob> there's also https://docs.djangoproject.com/en/3.2/ref/templates/builtins/#default-if-none
[04:42:24] <FunkyBob> explore: but if jinja only supports equality testing, that's not always save with None
[04:46:11] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:49:16] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[04:59:20] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[05:19:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:21:26] *** Joins: fikran (~fikran@user/fikran)
[05:23:57] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:36:42] *** Joins: Matthias1 (~Matthias1@caseguest.CWRU.Edu)
[06:58:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[06:59:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:12:04] *** Parts: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it) ()
[07:29:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:30:47] *** Joins: fikran (~fikran@user/fikran)
[07:49:27] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: Leaving)
[07:50:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:05:40] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[08:17:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:55:33] *** Joins: audio (~audio@2603-8081-1800-6a6f-01cb-ecb6-e5c5-d0dc.res6.spectrum.com)
[09:30:23] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:32:33] *** Joins: mattil (~mattil@dy5-7jl29hvq0v90qkfmt-4.rev.dnainternet.fi)
[09:35:59] *** Quits: mattil (~mattil@dy5-7jl29hvq0v90qkfmt-4.rev.dnainternet.fi) (Client Quit)
[09:37:36] *** Quits: jasonbraganza (jasonbraga@user/jasonbraganza) (Quit: Au revoir ‚Ä¶)
[09:38:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[09:39:20] *** Joins: jasonbraganza (~jasonbrag@user/jasonbraganza)
[09:40:10] *** Joins: fikran (~fikran@user/fikran)
[09:51:18] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Remote host closed the connection)
[09:55:40] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[09:57:08] <serafeim> hello friends
[10:10:01] *** Joins: VaniaPy (~VaniaPy@adsl-28.176.58.193.tellas.gr)
[10:24:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:25:14] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[10:33:48] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:34:22] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[10:37:43] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[10:39:47] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[10:44:04] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:59:28] *** Joins: thiras (~thiras@user/thiras)
[11:05:13] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. √úberall.)
[11:05:33] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[11:10:34] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[11:10:53] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[11:27:13] *** Joins: slav0nic (slav0nic@python.su)
[11:31:12] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[11:37:40] *** Quits: ops (~ops@user/echelon) (Ping timeout: 252 seconds)
[11:42:44] *** Joins: tamere (~tamere@user/loodoons)
[11:43:13] <tamere> Hello guys, just a simple question :)  Do I have to push the migrations generated by "makemigrations" to Git ? :)
[11:44:10] <serafeim> tamere: yes
[11:44:26] <serafeim> tamere: but be careful if two people are generating migrations for the same app
[11:44:46] <serafeim> it will generate two conflicting migration files which will then need to be merged together
[11:45:47] <tamere> We are two people working on the project and at the moment the only things that we push are the migrations folders and the __init__.py inside them :)
[11:46:26] *** Quits: gitly (~gitly@85.255.235.113) (Ping timeout: 268 seconds)
[11:46:49] <serafeim> you many want to also take a look at thios https://docs.djangoproject.com/en/3.2/topics/migrations/#version-control
[11:47:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[11:48:14] *** Joins: gitly (~gitly@148.252.128.179)
[11:48:57] <tamere> Thanks guys ! üëç
[11:49:18] <serafeim> np
[11:49:42] *** Joins: fikran (~fikran@user/fikran)
[11:53:37] *** Quits: gitly (~gitly@148.252.128.179) (Ping timeout: 252 seconds)
[11:55:03] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[11:55:33] *** Joins: gitly (~gitly@148.252.128.33)
[12:10:56] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:15:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[12:18:30] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 268 seconds)
[12:22:28] *** Joins: Trieste (T@user/pilgrim)
[12:33:56] *** Joins: Atque (~Atque@user/atque)
[12:37:48] *** Joins: michelem (~Adium@51.154.167.11)
[12:38:10] <michelem> Hi folks! Can any expert with testing / patching help me understand why this exception? https://dpaste.org/Orzt
[12:38:38] <michelem> Notice that line 19 works, while patch()ing in line 21 fails with "ModuleNotFoundError"
[12:38:45] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:43:28] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:53:09] *** Joins: thiras (~thiras@user/thiras)
[12:59:28] <dodo> michelem: iirc needs an absolute python path
[13:00:08] <michelem> I have the same behavior also if I use "from dnsops_wrapper import function_name"
[13:01:18] *** Joins: ops (~ops@user/echelon)
[13:03:31] <michelem> ok, I see what you mean. The app name. That works, thanks dodo
[13:06:36] <dodo> great!
[13:07:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:07:18] *** ChanServ sets mode: +v EvilDMP
[13:12:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 252 seconds)
[13:13:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:13:06] *** ChanServ sets mode: +v EvilDMP
[13:14:19] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:18:43] *** Quits: rob4226 (~Thunderbi@136.144.35.61) (Ping timeout: 252 seconds)
[13:27:58] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[13:31:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:40:52] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[13:55:29] *** Joins: node1 (~node1@user/node1)
[13:57:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:59:05] *** Joins: fikran (~fikran@user/fikran)
[14:03:44] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[14:05:45] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[14:23:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[14:25:00] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[14:30:22] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[14:30:44] *** Quits: VaniaPy (~VaniaPy@adsl-28.176.58.193.tellas.gr) (Quit: Connection closed)
[14:37:38] *** Parts: spuc (~spuc@ns346943.ip-5-135-160.eu) (The Lounge - https://thelounge.github.io)
[15:01:23] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:01:39] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:01:40] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:14:02] *** Joins: VaniaPy (~VaniaPy@adsl-28.176.58.193.tellas.gr)
[15:17:12] *** Parts: VaniaPy (~VaniaPy@adsl-28.176.58.193.tellas.gr) ()
[15:23:01] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[15:25:30] *** Joins: VaniaPy (~VaniaPy@adsl-28.176.58.193.tellas.gr)
[15:25:43] <VaniaPy> hello, can i handle a request out of views?
[15:31:52] <GinFuyou> What do you mean?
[15:49:57] <nedbat> I know the web server should do this, but is there a django package or snippet for serving index.html files when a directory is requested?
[15:50:55] *** Quits: dre (~dre@2001:8003:c932:c301:3743:ee79:8c00:65b1) (Remote host closed the connection)
[15:55:51] <gcbirzan> nedbat: You can just have a url pattern that does that.
[15:57:29] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[15:58:09] <nedbat> gcbirzan: for particular directories, i could, but i'd like it for *all* directories, if that makes sense.
[16:00:38] <nedbat> i guess i'm imagining something like a last handler that would check if it's a directory
[16:01:57] *** Quits: VaniaPy (~VaniaPy@adsl-28.176.58.193.tellas.gr) (Quit: Connection closed)
[16:05:15] <gcbirzan> I mean, you're trying to serve files from django?
[16:05:20] <gcbirzan> Otherwise, what's the definition of a directory
[16:07:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:08:22] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:08:46] *** Joins: fikran (~fikran@user/fikran)
[16:09:32] *** Quits: gitly (~gitly@148.252.128.33) (Quit: WeeChat 3.2)
[16:15:31] *** Joins: dez (uid92154@user/dez)
[16:16:47] <nedbat> gcbirzan: yes, this is kind of strange arrangement....
[16:18:41] <gcbirzan> Then I guess you can just have a catch all ^(?:path.*)/$ and check there, yeah
[16:18:59] <nedbat> gcbirzan: think of it like this:  if "xyz/abc" would produce a 404, but "xyz/abc/index.html" would produce a 200, then serve it instead.
[16:19:42] <nedbat> maybe that's what i need is to add that to an except: clause somewhere....
[16:20:01] <gcbirzan> ah, so you want something like the / common middleware stuff
[16:20:08] <gcbirzan> Then a middleware could work
[16:20:31] <gcbirzan> You could even reuse the code
[16:20:39] <gcbirzan> Though, that'd be a redirect.
[16:28:05] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[16:29:39] *** Joins: gitly (~gitly@148.252.128.33)
[16:32:24] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:39:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:47:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:48:03] *** Joins: cusco (~tralala@neptune.tretas.eu)
[16:48:06] <cusco> hello sirs
[16:48:19] <cusco> say, if I have a big model, and a big form
[16:48:27] <cusco> is there a way to paginate fields of a single form?
[16:50:55] <GinFuyou> You can make a multi-step form
[16:51:12] <cusco> GinFuyou: what do you mean?
[16:51:37] <cusco> like creating several forms in forms.py ?
[16:52:32] <GinFuyou> Like form has several pages to submit, think of multi-step order placement
[16:52:51] <GinFuyou> There were packages allowing that iirc
[16:53:17] <GinFuyou> https://django-formtools.readthedocs.io/en/latest/wizard.html
[16:53:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[16:53:49] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[16:54:22] <cusco> yes I've come across this wizard formtools
[16:54:53] <cusco> so I read that I would create like 3 forms: fields 0..10 in first, 11..20 in second etc
[16:55:47] *** Joins: VaniaPy (~VaniaPy@adsl-28.176.58.193.tellas.gr)
[16:58:33] *** Parts: VaniaPy (~VaniaPy@adsl-28.176.58.193.tellas.gr) ()
[17:03:09] <cusco> I think I will use a single form and paginate in js
[17:10:42] <GinFuyou> Yeah, pagination on frontend sound legit. On backend it would be problematic if it's not like in wizard
[17:28:40] *** Quits: djacobs (~IceChat95@241.171-133-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[17:40:12] *** Joins: CodenameTim (~CodenameT@68.235.43.173)
[17:44:13] *** Quits: Matthias1 (~Matthias1@caseguest.CWRU.Edu) (Remote host closed the connection)
[17:49:40] <IceMichael> hi guys
[17:49:50] <IceMichael> can it lead to performance improvements to use only when afterwards only comes delete?
[17:49:51] <IceMichael> E.g.
[17:50:38] <IceMichael> SomeModel.objects.filter(something__related_id__in=ids).only('something').delete() ?
[17:51:04] <IceMichael> The docs were not helpful for me. From them, I would have assumed only has no sense here
[17:52:14] <CodenameTim> My gut says no, but if you're concerned about it, generate the both versions of the SQL the ORM would execute, run it through `explain analyze` and compare the results.
[17:52:56] <IceMichael> hm, how do I get the SQL from this line?
[17:54:07] <CodenameTim> There may be a better way, but I typically use the `print(SomeModel.objects.filter(...).query)`. You'll have to modify the query to do the delete though. Alternatively, if the delete occurs on a web request, you can use the Django Debug Toolbar's SQL Panel.
[17:55:12] <CodenameTim> The issue with printing the query as I showed is that it's not in the correct DB shell format. For example, timestamps are rendered without the wrapping quotes.
[17:56:24] <moldy> IceMichael: i'd be surprised if ".only()" does anything relevant here
[17:57:09] <moldy> IceMichael: to get the SQL, you can do `from django.db import connection` and then inspect `connection.queries`
[17:57:21] <IceMichael> moldy, ah, it has a history?
[17:57:26] <moldy> yup
[17:57:34] <IceMichael> cool! thanks, will check
[17:57:43] <CodenameTim> Thank you for sharing that. That's much easier
[17:57:48] <IceMichael> because doing code review and I questioned that only has an effect and a non-checking answer came back so NOW I want to be sure :)
[17:59:07] *** Joins: Matthias1 (~Matthias1@casewireless11.cwru.edu)
[18:02:00] *** Quits: Matthias1 (~Matthias1@casewireless11.cwru.edu) (Remote host closed the connection)
[18:12:28] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[18:16:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[18:18:10] *** Joins: fikran (~fikran@user/fikran)
[18:28:33] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[18:29:46] <blathijs> IceMichael: I would also expect that using only here does not affect the query. It probably affects performance, because using only when it is not actually used is fractionally slower, I'd expect :-p
[18:34:11] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[18:41:41] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[18:42:10] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[18:43:33] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[18:43:42] *** Joins: Matthias1 (~Matthias1@casewireless11.cwru.edu)
[18:44:48] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:47:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[18:48:35] *** Joins: koan (~laeruz@2a01:c23:700d:7c00:95a6:52df:58a0:7522)
[18:49:19] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:49:52] <koan> hello, is there a reason Django sets autocommit=0 at the start of an atomic transaction? i haven't explicitly set this in my settings
[18:53:26] *** Quits: Matthias1 (~Matthias1@casewireless11.cwru.edu) (Remote host closed the connection)
[18:54:52] *** Joins: Matthias1 (~Matthias1@caseguest2.CWRU.Edu)
[19:02:43] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:07:49] <duoi> koan maybe something to do with PEP249? https://www.python.org/dev/peps/pep-0249/#commit as far as I know django has autocommit set as True by default though
[19:10:02] <koan> duoi, thank you!
[19:11:05] *** Joins: blackout69 (~blackout6@mob-5-91-244-4.net.vodafone.it)
[19:15:02] *** Joins: jess (~jess@libera/staff/jess)
[19:15:23] *** Quits: Matthias1 (~Matthias1@caseguest2.CWRU.Edu) ()
[19:25:34] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[19:33:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:43:07] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: Ping timeout (120 seconds))
[19:43:55] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 260 seconds)
[19:52:44] *** Quits: tamere (~tamere@user/loodoons) (Quit: Client closed)
[19:53:01] *** Joins: Matthias1 (~Matthias1@casewireless10.CWRU.Edu)
[19:53:40] *** Quits: koan (~laeruz@2a01:c23:700d:7c00:95a6:52df:58a0:7522) (Quit: Leaving)
[19:54:18] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:55:22] *** Quits: CodenameTim (~CodenameT@68.235.43.173) (Ping timeout: 265 seconds)
[19:56:30] *** Joins: pro_z (~pro_z@37.214.34.140)
[19:59:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:00:24] *** Quits: Matthias1 (~Matthias1@casewireless10.CWRU.Edu) (Remote host closed the connection)
[20:06:54] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc)
[20:14:14] *** Quits: rwb (~augh@theguntretort.com) (Excess Flood)
[20:14:26] *** Joins: rwb (~augh@theguntretort.com)
[20:25:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[20:27:33] *** Joins: fikran (~fikran@user/fikran)
[20:38:19] *** Quits: znpy (~znpy@user/znpy) (Read error: Connection reset by peer)
[20:39:15] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[20:39:38] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Client Quit)
[20:40:17] *** Joins: znpy (~znpy@user/znpy)
[20:49:30] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[20:54:22] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:56:24] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 256 seconds)
[20:57:37] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:58:46] *** Joins: Elzington (~Elzington@68.235.43.22)
[20:59:10] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[21:03:27] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:17:45] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[21:17:50] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[21:20:45] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:25:40] *** Joins: zkanda (~zkanda@box.makean.art)
[21:29:30] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc) (Quit: Client closed)
[21:32:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:32:31] *** ChanServ sets mode: +v EvilDMP
[22:01:23] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:01:46] *** Quits: gitly (~gitly@148.252.128.33) (Ping timeout: 252 seconds)
[22:03:58] *** Joins: gitly (~gitly@148.252.132.147)
[22:15:26] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[22:35:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[22:36:08] *** Parts: blackout69 (~blackout6@mob-5-91-244-4.net.vodafone.it) ()
[22:36:42] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[22:36:55] *** Joins: fikran (~fikran@user/fikran)
[22:43:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:45:17] *** Joins: fikran (~fikran@user/fikran)
[22:47:17] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc)
[22:50:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[22:56:30] *** Joins: djapo (~archangel@user/djapo)
[23:02:50] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[23:07:01] *** Quits: gitly (~gitly@148.252.132.147) (Ping timeout: 268 seconds)
[23:07:25] *** Joins: gitly (~gitly@148.252.132.147)
[23:09:07] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[23:11:07] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc) (Quit: Client closed)
[23:27:22] *** Joins: bambanxx (~bambanx@207.248.194.206)
[23:28:17] *** Joins: Xof (~Xof@cpe-104-172-178-79.socal.res.rr.com)
[23:43:37] *** Quits: pro_z (~pro_z@37.214.34.140) (Ping timeout: 268 seconds)
