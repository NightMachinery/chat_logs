[00:00:00] <composite_higgs> Scheme, I should say.
[00:00:22] <composite_higgs> The problem with lambdas in untyped languages is that they are too opaque.
[00:00:41] <composite_higgs> You can use them to represent anything at all but they also are totally inscrutable as runtime or static values.
[00:01:00] <companion_cube> how dare you criticize lisp
[00:01:01] *** Quits: av (uid87081@id-87081.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:01:35] <composite_higgs> I'm not really criticizing Scheme or Lisp here but I reserve the right to.
[00:02:06] <composite_higgs> According to SLOC I've written 300,000 dollars worth of Scheme code at least.
[00:02:19] <companion_cube> so like 15 lines
[00:02:21] <companion_cube> :D
[00:02:46] <composite_higgs> Both Common Lisp and Scheme give the programmer plenty of other options for representing things in a more comprehensible way.
[00:05:12] *** Quits: lkhrs (~lkhrs@216-82-198-199.dyn.grandenetworks.net) (Quit: lkhrs)
[00:05:24] <composite_higgs> I'm deep into the 'deflationary theory of lisp' part of my career.
[00:05:37] *** Joins: lkhrs (~lkhrs@216-82-198-199.dyn.grandenetworks.net)
[00:07:05] <companion_cube> what does that mean?
[00:07:27] <manicennui> I think the solution for me is to decrease my involvement in corporate software development.
[00:09:40] *** Quits: dutchie (~dutchie@user/dutchie) (Ping timeout: 272 seconds)
[00:10:38] <riv> keyword arguments, are pretty damn ugly
[00:10:50] <riv> i think maybe keywords are better done as an IDE thing
[00:10:56] <riv> not that i have an IDE that can do that
[00:11:02] <companion_cube> > Alexandra Elbakyan has done more for society than the entire FSF
[00:11:06] <companion_cube> woah Hillel :D
[00:11:08] <riv> im not relaly sure
[00:11:08] <companion_cube> go go go
[00:12:05] <mgdm> companion_cube: Hah, yeah, I just pasted that quote in another channel here
[00:12:12] <companion_cube> :D
[00:13:07] <manicennui> Why are those two things even being compared?
[00:13:42] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 265 seconds)
[00:14:03] <manicennui> https://twitter.com/DeepSchneider/status/1417195426877431811
[00:14:04] <manicennui> Sweet.
[00:16:53] <composite_higgs> I think IDEs are basically the apotheosis of the sort of thinking that makes keyword arguments an anti-pattern.
[00:17:24] <composite_higgs> There are two kinds of solutions in the world: the right ones, and the ones that let you keep doing the wrong thing longer and more easily.
[00:17:32] <composite_higgs> IDEs are an example of the latter.
[00:17:48] <composite_higgs> But I admit this is sort of an insane hermit sort of idea.
[00:18:17] <companion_cube> I'd say copilot is the apotheosis of that now
[00:18:17] <geoffwozniak> I like keyword arguments. They can certainly be overused.
[00:18:29] <riv> :D
[00:18:44] <riv> I think you are right composite_higgs
[00:18:46] <manicennui> companion_cube: I'm with you.
[00:21:13] <manicennui> I find the positive feedback on copilot to be insane.
[00:21:39] <riv> i cant imagine why someone would think copilot is good, they must not understand programming
[00:21:43] <manicennui> The entire premise is flawed, as well as the implementation.
[00:21:53] <riv> something that produces code is bad
[00:21:56] <manicennui> It does a bad thing poorly.
[00:22:06] <companion_cube> people who write a lot of boring code I think
[00:22:07] <riv> what you want is something that deletes code
[00:22:17] <companion_cube> it comes with some jobs, it's not the people's fault necessarily
[00:22:30] <manicennui> companion_cube: That's the main problem though, "write a lot of [...] code".
[00:23:02] <manicennui> And I don't mean code should be more terse.
[00:23:03] <riv> autogenerate millions of lines of code: force people to maintain it
[00:23:11] <manicennui> Most people write far too much code.
[00:23:21] <riv> it's like auto**** mixed with the terminater
[00:23:33] <companion_cube> I mean I don't disagree
[00:23:42] <companion_cube> it's just, CRUD stuff come with a lot of code
[00:23:47] *** Quits: lkhrs (~lkhrs@216-82-198-199.dyn.grandenetworks.net) (Quit: lkhrs)
[00:23:56] <companion_cube> I had one internship, 9 years ago (😱) writing a bit of django
[00:23:59] <companion_cube> and I loathed it
[00:24:10] *** Joins: lkhrs (~lkhrs@216-82-198-199.dyn.grandenetworks.net)
[00:24:12] <companion_cube> I can imagine people wanting to just reduce the bore
[00:24:18] <manicennui> Also, if we assume that people are correct, and the code it handles well is basically snippets of often repeated stuff, why isn't that stuff in a library somewhere so it is a simple method/function call?
[00:24:43] <manicennui> I imagine a lot of it is the attitude I see, especially in the JS and Go communities, where people want to implement everything themselves.
[00:25:12] <manicennui> Would seem odd if those same people then argued for a tool to write it instead of just using some damn libraries.
[00:25:15] <riv> when the left pad thing happened, i was surprised how angry people were about the leftpad utility function being in its own library
[00:25:23] <companion_cube> I think you still need to adapt a few things, every time
[00:25:28] <riv> people don't seem to want to put too much into libs, and i dont really get why
[00:25:48] <companion_cube> the uncanny valley of code similar, but not equal to, other code
[00:25:56] <companion_cube> in a way that makes abstraction awkward
[00:26:32] <manicennui> Seems unlikely that copilot will be good at that either, since it has no understanding of the code.
[00:26:34] <riv> but yeah, these things should definitely be libraries - rather than re-typed automatically in lots of places... which then needs to be manually updated by programmers
[00:26:39] <companion_cube> indeed not
[00:26:57] <steenuil> it feels kinda silly to pull in a library for a three line function though
[00:27:02] <companion_cube> riv: it's stuff like django models, where you declare a bunch of fields that the framework magically turns to SQL declarations
[00:27:10] <manicennui> steenuil: Why?
[00:27:12] <companion_cube> at least from the snippets on copilot's announce
[00:27:43] <manicennui> steenuil: I trust widely used libraries more than most programmers.
[00:27:58] <manicennui> Most programmers aren't good for much beyond gluing things together frankly.
[00:28:03] <manicennui> So that's what they should be doing.
[00:28:04] <riv> steenuil, i mean definitely I think there should be more functions in there, like rightpad at minimum
[00:28:14] <companion_cube> and downpad
[00:28:24] <riv> hey, glueing is honest work!
[00:29:33] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[00:29:51] <steenuil> it depends on what you distrust the most, external libraries that might suddenly break, as happened with leftpad, or your own programmers
[00:30:01] *** Joins: adinf (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[00:30:03] <manicennui> Definitely the latter.
[00:30:33] <companion_cube> if you don't trust your programmers, still seems to me like you shouldn't hire them :/
[00:30:39] <steenuil> ^
[00:31:01] <riv> well there are significant structural problems with np,
[00:31:02] <riv> m
[00:31:37] *** Quits: supersandro2000 (~supersand@i5C7575CB.versanet.de) (Quit: Ping timeout (120 seconds))
[00:31:55] *** Joins: supersandro2000 (~supersand@i5C7575CB.versanet.de)
[00:32:41] <manicennui> companion_cube: We wouldn't have many employees if we didn't hire barely competent developers.
[00:32:44] <manicennui> Such is web developmennt.
[00:32:56] <c355e3b> This is why we've had a php rec open for so long
[00:33:06] <steenuil> I can see why you'd want some stuff to be moved into a library
[00:34:09] <manicennui> Even the competent developers doing web development have insane opinions for the most part.
[00:34:22] <companion_cube> everyone has some insane opinions
[00:34:28] <steenuil> because the other way's C, where you have your little zoo of functions and linked list implementations that you copied from various codebases over the years and never updated
[00:34:31] <companion_cube> even you, manicennui, i'm sure :p
[00:34:37] <manicennui> companion_cube: I don't force my insanity on anyone else.
[00:34:40] <manicennui> I'm paid to do a job.
[00:34:47] <companion_cube> ah I see what you mean
[00:34:55] <indigo> But Kafka makes everything better
[00:35:00] <manicennui> Not proselytize.
[00:35:09] <indigo> Can you even webdev without Kafka
[00:35:13] <companion_cube> not trying to move $dayjob to lisp?
[00:35:20] <manicennui> companion_cube: Nah.
[00:35:27] <meff[m]> > not rewriting everything at $job to Ada/SPARK
[00:35:36] <companion_cube> oh yeahhh
[00:35:49] <companion_cube> don't trust your developpers, have them write contracts and formally prove these
[00:35:51] <companion_cube> 💪
[00:35:56] <manicennui> We have a competitor in Chicago who uses Clojure.
[00:36:24] <manicennui> But they are far, far smaller than we are, and I'm sure I'd be trading tech stack preference for a bunch of other things.
[00:36:31] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:36:34] <meff[m]> Copilot has some interesting things to discuss wrt boiler plate, code generation, GPT-x, etc but it got caught in the "Github bad" fight so now discussion on it is pretty useless
[00:36:39] <manicennui> Ultimately I don't want to work for anyone.
[00:36:44] <meff[m]> well on online discussion sites at least
[00:36:59] <manicennui> meff[m]: I don't care about the GitHub/MS aspect.
[00:37:08] <manicennui> It doesn't understand code at all.
[00:37:34] <manicennui> It is basically a really sophisticated markov chain.
[00:37:40] <manicennui> (I know it is not actually that)
[00:37:47] <riv> it's not?
[00:38:06] <manicennui> Well, I don't actually know much about the internals.
[00:38:11] <meff[m]> no it's not a markov chain
[00:38:12] *** Joins: kriive (~kriive@user/kriive)
[00:38:13] <riv> i think that might be exactly what it is really
[00:40:30] <steenuil> does it work by giving it a description of what the function does, or a name of sorts?
[00:40:44] <manicennui> Either?
[00:40:50] <manicennui> Or a number of other things.
[00:41:16] <manicennui> That is my impression at least.
[00:43:17] *** ckie is now known as cookie
[00:43:58] <riv> https://thatsmathematics.com/mathgen/
[00:43:58] <mockturtle> [ Mathgen: Randomly generated math papers ] - thatsmathematics.com
[00:44:42] <manicennui> This leftpad issue seems more like an npm issue.
[00:45:14] <manicennui> Maven basically avoids that entire problem.
[00:47:21] <manicennui> rubygems has the same problem.
[00:47:43] <c355e3b> RubyGems has a slightly saner resolution algorithm though
[00:47:57] <companion_cube> talking about that, is there a good introduction to the JVM world
[00:48:02] <manicennui> cargo has the same problem.
[00:48:08] <companion_cube> like, build systems, etc. but not just "click in intellij"?
[00:48:13] <c355e3b> IMO DropWizard guide
[00:49:38] <manicennui> Why wouldn't everyone solve this problem the same way Maven did?
[00:49:58] <companion_cube> manicennui: for a start, is there a description of what the heck maven does
[00:50:03] <manicennui> Just namespace your damn packages.
[00:50:08] <companion_cube> a design document, a comparison to other systems, etc.
[00:50:14] <c355e3b> Shadowing is a big pain
[00:50:30] <manicennui> companion_cube: Probably, but in this case, namespacing packages would have solved the entire leftpad problem.
[00:50:53] <manicennui> companion_cube: pom.xml is heavily documented.
[00:51:17] <manicennui> companion_cube: There are a number of tools which rely on Maven, including Clojure tools, Scala tools, etc.
[00:51:35] <manicennui> Most of them just do what pom.xml does in a different format.
[00:51:43] <manicennui> Plus whatever other features they have.
[00:52:04] <manicennui> Cargo introducing the same problem seems like an oversight.
[00:52:04] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::9885) (Quit: Konversation terminated!)
[00:52:57] <companion_cube> "pom.xml is heavily documented" what about the design of maven
[00:52:59] <companion_cube> an overview
[00:53:04] <manicennui> I couldn't say.
[00:53:09] <companion_cube> ah well
[00:53:17] <manicennui> Probably is.
[00:53:36] <companion_cube> for rust, I guess the problem is that crates are not namespaced by organizations? you need to bake this into the language somehow
[00:53:43] <manicennui> https://maven.apache.org/
[00:53:43] <mockturtle> [ Maven – Welcome to Apache Maven ] - maven.apache.org
[00:53:48] <manicennui> There is tons of documentationn.
[00:53:54] <manicennui> companion_cube: Yes.
[00:53:55] <companion_cube> it's not like there's `org.serde.deser`
[00:54:06] <manicennui> companion_cube: Whoever gets the package name first on crates.io owns it.
[00:54:45] <companion_cube> I know
[00:54:47] <manicennui> Many links to various documentation on the front page of Maven's site.
[00:56:14] <companion_cube> alright https://maven.apache.org/pom.html#Introduction
[00:56:14] <mockturtle> [ Maven – POM Reference ] - maven.apache.org
[00:56:19] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[00:56:56] <manicennui> And some of the IDEs (all?) will write this file for you.
[00:57:53] <companion_cube> hopefully, cause it looks terrible
[00:58:04] <manicennui> And there are many tools which use the Maven repo, but not pom.xml.
[00:58:07] <manicennui> For instance: https://docs.gradle.org/current/userguide/declaring_dependencies.html
[00:58:07] <mockturtle> [ Declaring dependencies ] - docs.gradle.org
[00:59:00] <companion_cube> so how do you handle 2 packages with the same name but different, err, namespaces?
[00:59:07] <c355e3b> shadowing
[00:59:18] <manicennui> https://www.scala-sbt.org/1.x/docs/Basic-Def.html#Adding+library+dependencies
[00:59:19] <mockturtle> [ sbt Reference Manual — Build definition ] - www.scala-sbt.org
[00:59:19] * c355e3b hyperventilates 
[01:00:16] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Remote host closed the connection)
[01:00:21] <manicennui> companion_cube: In Java, import can be very specific.
[01:02:47] <companion_cube> right
[01:02:50] *** Joins: dutchie (~dutchie@user/dutchie)
[01:02:59] <manicennui> Other languages generally have better ways to alias imports.
[01:04:21] <manicennui> And you could always use the full package name.
[01:04:24] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:04:46] <manicennui> But the problem would not exist on the Maven repo side.
[01:04:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[01:05:07] <manicennui> Although some company could still try to claim trademark violations against other packages.
[01:06:50] <companion_cube> hmm ok
[01:06:55] <companion_cube> so the namespacing is a big difference indeed
[01:07:42] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:08:51] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[01:09:26] *** Quits: julienxx (~julienxx@87-231-19-8.rev.numericable.fr) (Ping timeout: 252 seconds)
[01:09:34] <manicennui> technomancy: What is the difference in Clojure between namespaced and non-namespaced dependencies?
[01:09:46] <manicennui> Seems like maybe clojars supports both?
[01:10:14] <manicennui> Are Maven dependencies always namespaced?
[01:10:46] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[01:14:23] <technomancy> manicennui: clojars used to; not any more
[01:14:25] <technomancy> but other than that yeah
[01:14:56] <technomancy> (technically there's always a namespace; when you omit the namespace it uses the dependency name itself as the namespace too)
[01:20:40] *** Quits: lexik (~lexik@171.25.222.217) (Ping timeout: 255 seconds)
[01:21:31] *** Joins: lexik (~lexik@171.25.222.217)
[01:21:58] *** Quits: timetoplatypus (~timetopla@static-108-31-239-210.washdc.fios.verizon.net) (Quit: leaving)
[01:29:13] *** Quits: composite_higgs (~user@dhcp-152-23-239-174.wireless-1x.unc.edu) (Ping timeout: 255 seconds)
[01:34:41] *** Joins: voltage (voltage@user/voltage)
[01:35:30] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[01:35:36] *** voltage is now known as voltage_
[01:41:26] *** dalurka_ is now known as dalurka
[01:42:30] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:45:09] *** Quits: adinf (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Ping timeout: 255 seconds)
[01:45:42] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[01:46:01] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[01:51:38] *** Quits: petar (~petar@87.116.183.184) (Quit: petar)
[01:51:39] <geoffwozniak> No conditional breakpoints and single stepping loops makes for a nicely tedious debugging experience
[01:52:24] *** Quits: lkhrs (~lkhrs@216-82-198-199.dyn.grandenetworks.net) (Remote host closed the connection)
[01:54:54] *** Joins: adinf (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[01:56:50] *** Joins: ur5us (~ur5us@203.86.198.200)
[02:00:31] *** Joins: lucf117 (~lucf117@user/lucf117)
[02:12:13] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:17:42] *** Joins: nickspoon (~nickspoon@user/nickspoon)
[02:27:35] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[02:46:58] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[02:48:32] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Quit: ERC (IRC client for Emacs 28.0.50))
[02:53:19] *** Joins: dre (~dre@2001:8003:c932:c301:117d:15f9:de03:4d49)
[02:56:34] <Church> c355e3b: I'm realizing the "joy" of debugging raw sql in Rust. Easier then an ORM. But I'd sure like to know why my update statements are silently failing...
[02:56:40] <c355e3b> Lmao
[02:57:26] <Church> c355e3b: I just gave up on using diesel.rs. Couldn't get it working for the life of me.
[02:59:20] <mockturtle> RadioGlobe - Spin to Search Over 2000 Web Radio Stations [hardware web] (breck) https://lobste.rs/s/5zti3l
[03:06:35] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Ping timeout: 258 seconds)
[03:07:02] *** Joins: bird (~bird@136.25.143.83)
[03:08:14] <indigo> IMO ORMs are fine as long as they have an easy escape hatech
[03:08:18] <indigo> *hatch
[03:09:44] <c355e3b> The escape hatch is to be F#
[03:09:51] <c355e3b> and to have that sql compiler
[03:12:00] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 255 seconds)
[03:12:33] *** Parts: nickspoon (~nickspoon@user/nickspoon) (offski)
[03:15:56] <mockturtle> GPU architecture types explained [graphics] (crazyloglad) https://lobste.rs/s/ez5pcu
[03:17:48] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[03:19:04] *** Quits: m3wzx5 (~m3wzx5@user/m3wzx5) (Remote host closed the connection)
[03:20:00] <Church> c355e3b: F# has a built in sql compiler?
[03:20:27] <c355e3b> its a lib
[03:22:22] *** Joins: m3wzx5 (~m3wzx5@user/m3wzx5)
[03:25:13] *** Quits: lucf117 (~lucf117@user/lucf117) (Quit: Leaving)
[03:27:30] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 265 seconds)
[03:30:59] *** Quits: kriive (~kriive@user/kriive) (Quit: WeeChat 3.0.1)
[03:32:49] *** Quits: voltage_ (voltage@user/voltage) (Remote host closed the connection)
[03:33:14] *** Joins: voltage_ (voltage@user/voltage)
[03:36:58] <Church> Ah nifty
[03:55:31] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 252 seconds)
[04:16:23] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 268 seconds)
[04:17:04] *** Joins: l__q (~modinfo@user/modinfo)
[04:23:27] *** Quits: SonOfSunTzu (~username@war.funkyjesus.org) (Ping timeout: 240 seconds)
[04:27:52] *** Quits: Maple (~Maple@user/maple) (Quit: WeeChat 3.2)
[04:31:19] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[04:41:27] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 265 seconds)
[04:42:25] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[04:44:54] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[04:45:17] *** Quits: h0m1 (~h0m1@user/h0m1) (Quit: WeeChat 3.2)
[04:45:42] *** Joins: h0m1 (~h0m1@user/h0m1)
[04:54:00] *** Joins: bunnies (~bunnies@136.49.180.253)
[05:12:15] *** Quits: bunnies (~bunnies@136.49.180.253) (Quit: Client closed)
[05:18:06] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[05:18:52] *** Joins: Preston (~liminalcr@024-181-005-175.res.spectrum.com)
[05:23:15] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 268 seconds)
[05:29:39] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[05:36:51] *** Quits: m3wzx5 (~m3wzx5@user/m3wzx5) (Remote host closed the connection)
[05:36:53] <mockturtle> Jumping into journald [linux systemd] (artemist) https://lobste.rs/s/cmnumm
[05:45:15] *** Quits: adinf (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Ping timeout: 255 seconds)
[05:46:19] *** Joins: supersandro20003 (~supersand@i5c7579d1.versanet.de)
[05:46:20] *** supersandro2000 is now known as Guest1170
[05:46:20] *** supersandro20003 is now known as supersandro2000
[05:48:52] *** Quits: Guest1170 (~supersand@i5C7575CB.versanet.de) (Ping timeout: 268 seconds)
[05:51:04] <mockturtle> A GPIO driver in Rust [linux rust] (bfiedler) https://lobste.rs/s/7o6dom
[05:54:54] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[05:57:51] *** Joins: califax- (~califax@user/califx)
[05:59:45] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 265 seconds)
[06:00:11] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[06:00:11] *** califax- is now known as califax
[06:01:00] *** Quits: h0m1 (~h0m1@user/h0m1) (Ping timeout: 255 seconds)
[06:03:02] *** Joins: h0m1 (~h0m1@user/h0m1)
[06:04:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:05:25] *** Quits: fro (fro@humpty.dance) (Quit: EPIC5-2.1.5[1945] - amnesiac : Are we there yet?)
[06:12:23] *** Joins: adinf (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[06:14:03] *** Joins: SonOfSunTzu (~username@war.funkyjesus.org)
[06:15:25] *** Joins: deivislk (~deivislk@189.7.117.212)
[06:19:35] *** Joins: fro (fro@humpty.dance)
[06:23:28] *** Joins: dre_ (~dre@2001:8003:c932:c301:117d:15f9:de03:4d49)
[06:24:25] *** Quits: dre (~dre@2001:8003:c932:c301:117d:15f9:de03:4d49) (Ping timeout: 246 seconds)
[06:25:56] *** Quits: deivislk (~deivislk@189.7.117.212) (Quit: deivislk)
[06:26:19] *** Joins: deivislk (~deivislk@189.7.117.212)
[06:32:30] *** Quits: adinf (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Quit: WeeChat 3.0.1)
[06:34:44] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[06:37:36] *** Quits: Syrup (uid10029@user/maple) (Quit: Connection closed for inactivity)
[06:39:26] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 268 seconds)
[06:43:44] *** Quits: deivislk (~deivislk@189.7.117.212) (Quit: deivislk)
[06:51:44] *** Joins: arischow (~arischow@103.97.201.36)
[07:12:55] *** Quits: arischow (~arischow@103.97.201.36) (Quit: Textual IRC Client: www.textualapp.com)
[07:32:35] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[07:36:40] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Client Quit)
[07:41:22] *** Joins: cturtle (~cturtle@66-219-235-76.dynamic.ip.veracitynetworks.com)
[07:47:32] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 252 seconds)
[08:01:22] *** Joins: ionface (~ionface@user/ionface)
[08:14:46] <mockturtle> A Serverless Event Collector [distributed] (bcongdon) https://lobste.rs/s/uigzuk
[08:15:12] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[08:17:11] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:19:29] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[08:20:00] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[08:20:01] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Killed (sodium.libera.chat (Nickname regained by services)))
[08:20:01] *** jmcantre2 is now known as jmcantrell
[08:20:15] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[08:21:11] *** Quits: cturtle (~cturtle@66-219-235-76.dynamic.ip.veracitynetworks.com) (Ping timeout: 268 seconds)
[08:23:55] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[08:30:40] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[08:31:16] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[08:38:11] *** Joins: thelazyoxymoron (~thelazyox@49.207.220.109)
[08:41:30] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[08:44:00] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 268 seconds)
[08:46:28] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 268 seconds)
[08:58:52] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[08:59:20] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:00:02] *** Quits: elegantmess (~chris@52.124.4.69) (Ping timeout: 265 seconds)
[09:03:44] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 268 seconds)
[09:09:51] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Read error: Connection reset by peer)
[09:10:32] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[09:23:34] *** Quits: AviKav (~avi@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[09:23:50] *** Joins: AviKav (~avi@pool-71-191-176-243.washdc.fios.verizon.net)
[09:23:59] *** Quits: AviKav (~avi@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[09:24:15] *** Joins: AviKav (~avi@pool-71-191-176-243.washdc.fios.verizon.net)
[09:25:29] *** Quits: AviKav (~avi@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[09:25:45] *** Joins: AviKav (~avi@pool-71-191-176-243.washdc.fios.verizon.net)
[09:26:49] *** Joins: timj (~timj@user/timj)
[09:28:00] *** Quits: timj1 (~timj@user/timj) (Ping timeout: 255 seconds)
[09:29:01] *** Quits: timj__ (~timj@41-252-142-46.pool.kielnet.net) (Ping timeout: 268 seconds)
[09:30:43] *** Joins: timj_ (~timj@150-252-142-46.pool.kielnet.net)
[09:37:23] *** Quits: tealbird (~pidgin@c-174-62-72-237.hsd1.ca.comcast.net) (Quit: Leaving.)
[09:44:29] *** Quits: hub (~hub@user/hub) (Quit: ZNC 1.8.2 - https://znc.in)
[09:45:01] <mockturtle> Identity Hash Code [java performance] (serce) https://lobste.rs/s/pjarss
[09:45:08] *** Joins: hub (~hub@user/hub)
[09:50:57] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 255 seconds)
[09:52:09] *** Joins: Guest79 (~Guest79@91-153-253-168.elisa-laajakaista.fi)
[09:53:24] *** Quits: Guest79 (~Guest79@91-153-253-168.elisa-laajakaista.fi) (Client Quit)
[10:05:53] *** sirmacik_ is now known as sirmacik
[10:17:52] *** sus is now known as zero
[10:17:57] *** zero is now known as sus
[10:36:14] *** Quits: af (~af@awalgarg.me) (Ping timeout: 268 seconds)
[10:37:37] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:48:19] *** Joins: af (~af@awalgarg.me)
[10:56:23] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 255 seconds)
[10:58:35] *** Quits: MerchantOfVenice (~patrick@user/merchantofvenice) (Quit: Konversation terminated!)
[11:00:45] <mockturtle> Sham: A DSL for Fast DSLs [compsci] (mpweiher) https://lobste.rs/s/lskcnb
[11:11:45] *** Joins: bauruine (~stefan@2001:8e0:146d:dead:6183:3791:4cb8:3be6)
[11:27:43] *** Quits: ionface (~ionface@user/ionface) (Quit: ionface)
[11:27:49] *** Quits: Preston (~liminalcr@024-181-005-175.res.spectrum.com) (Quit: WeeChat 3.2)
[11:49:19] *** Quits: supersandro2000 (~supersand@i5c7579d1.versanet.de) (Quit: The Lounge - https://thelounge.chat)
[11:49:59] *** Joins: supersandro2000 (~supersand@i5c7579d1.versanet.de)
[12:05:31] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[12:15:14] *** Quits: dre_ (~dre@2001:8003:c932:c301:117d:15f9:de03:4d49) (Quit: Leaving)
[12:19:00] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 255 seconds)
[12:28:08] *** Joins: julienxx (~julienxx@87-231-19-8.rev.numericable.fr)
[12:29:09] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[12:30:07] *** Quits: bleb (~cm@user/bleb) (Ping timeout: 240 seconds)
[12:31:48] *** Joins: bleb (~cm@user/bleb)
[12:33:32] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::9885)
[12:37:43] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[12:39:31] *** Quits: ols (~ols@nixers/ols) (Remote host closed the connection)
[12:41:38] <fedorafan> morning
[12:42:28] <pja> Someone needs to reset the topic.
[12:42:34] <pja> (morning all)
[12:42:39] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 268 seconds)
[12:44:16] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[12:44:32] *** Joins: califax (~califax@user/califx)
[12:47:08] *** Joins: pr0t07ype (~pr0t07ype@user/pr0t07ype)
[12:48:06] *** Joins: ols (~ols@nixers/ols)
[12:48:46] *** saorge_ is now known as saorge
[12:51:30] <mockturtle> Announcing tokio-uring: io-uring support for Tokio [rust] (adaszko) https://lobste.rs/s/uhzd5a
[12:57:38] <gerikson> pja: implying anyone reads the topic ;)
[13:00:48] <pja> gerikson: Fair.
[13:11:45] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Ping timeout: 252 seconds)
[13:21:33] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[13:27:14] *** Joins: kriive (~kriive@user/kriive)
[13:31:46] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 246 seconds)
[13:31:56] *** Joins: l__q (~modinfo@user/modinfo)
[13:36:35] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[13:37:22] *** Quits: maxie (~IceChat95@45.100.3.196) (Ping timeout: 246 seconds)
[13:45:38] <mockturtle> Cryptanalysis of Meow Hash [crypto] (soatok) https://lobste.rs/s/4156ko
[13:47:13] <mockturtle> Detecting Oxbow Code in Erlang Codebases with the Highest Degree of Certainty [erlang] (elbrujohalcon) https://lobste.rs/s/auugzf
[13:47:14] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 252 seconds)
[13:49:01] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[13:50:32] *** Joins: vernaz (~vernaz@148.63.127.167)
[13:54:24] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 258 seconds)
[13:56:23] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[14:01:38] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 265 seconds)
[14:02:46] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[14:07:51] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[14:08:07] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[14:08:22] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 268 seconds)
[14:10:49] *** Quits: daegalus (~yulian@user/daegalus) (Ping timeout: 265 seconds)
[14:15:33] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 255 seconds)
[14:19:13] *** Quits: l__q (~modinfo@user/modinfo) (Remote host closed the connection)
[14:19:42] *** Joins: l__q (~modinfo@user/modinfo)
[14:23:46] *** Joins: daegalus (~yulian@user/daegalus)
[14:28:47] *** Quits: klu (~klu@user/klu) (Ping timeout: 255 seconds)
[14:33:28] *** Joins: mercerist (~mercerist@user/mercerist)
[14:34:42] *** Joins: klu (~klu@c-73-109-252-21.hsd1.wa.comcast.net)
[14:34:42] *** Quits: klu (~klu@c-73-109-252-21.hsd1.wa.comcast.net) (Changing host)
[14:34:42] *** Joins: klu (~klu@user/klu)
[14:45:34] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Remote host closed the connection)
[14:49:14] <epilys> potential employer told me they "don't hire codemonkeys" when I asked if there's a list of tasks written down for the (part time) position
[14:49:23] <epilys> how red is this flag?
[14:50:00] <epilys> also, they downgraded compensation after I said I was interested
[14:53:19] *** ChanServ sets mode: +o c355e3b
[14:53:49] *** c355e3b changes topic to 'https://lobste.rs is a computing-focused community centered around link aggregation and discussion. mockturtle is the channel bot, see https://lobste.rs/chat for more. Don't publish channel logs without participants' permission.'
[14:54:01] *** ChanServ sets mode: -o c355e3b
[14:55:22] <af> epilys: "We'll be throwing a lot more work at you than you'd be willing to accept right now"
[14:55:47] <epilys> af, seems like it.
[14:56:28] <af> speaking of throwing
[14:56:55] <af> I don't like the way networking APIs are implemented
[14:56:56] <miklos> <mikee> epilys: for me "downgraded compensation" is the red flag, I see it as a test how desperate you want it
[14:57:46] <epilys> miklos, I'm desperate but I stopped replying to sleep on it after that
[14:57:52] <xcombelle> which network API? af
[14:58:58] <af> xcombelle: The whole stack (I'm looking at linux but it doesn't seem different across OSes much as everything derives from BSD). But thanks for asking - lemme vent some specifics out.
[14:59:51] <xcombelle> basically you hate TCP/IP ? af
[15:01:12] <epilys> tcp/ip: better to be feared than loved, to paraphrase Macchiaveli
[15:02:15] <af> xcombelle: I seriously don't see the point of putting NAT, firewall and TCP in kernel. I also don't like port numbers. It seems awfully paranoid and disingenious of the OS to not let userspace simply listen to everything that's happening on the network from the hardware pov. Without encryption and authentication at the packet level, the traffic is already insecure and a hostile party OUTSIDE the
[15:02:17] <af> host can listen to it - so for an unprivileged user INSIDE the host to not be able to listen to it is just a giant "lol fuck you".
[15:03:16] <epilys> af, should I sign you up for my future "user-oriented OS/kernel" project?
[15:03:29] <epilys> (very future)
[15:06:29] <iDrougge> af: Haha.
[15:06:59] <af> xcombelle: Coming to the first point about putting things in kernel, that also seems like the kernel gatekeeping-for-no-reason completely arbitrary parts of the network stack from userspace. iptables (or nftables or ufw or anything modern) is all arbitrary DSL buildup to allow what the kernel thinks are "valid usecases" and if userspace needs anything else, it can fuck right off. On top of this,
[15:07:01] <af> the interface around in-kernel firewalls is so drastically horrible that it feels like another "fuck you" from people who don't know how to do things but want to dictate how you do things.
[15:07:48] <c355e3b> nftables is so insane, I'm having to rewrite a large portion of our processing pipeline to get the data to parse properly in the backend
[15:07:50] <epilys> think it's mostly legacy architecture af
[15:08:15] <af> epilys: oh yes please I'd love that.
[15:08:26] *** Joins: rockorager (~rockorage@c-24-118-143-158.hsd1.mn.comcast.net)
[15:09:00] <epilys> af, made a mental note with your name
[15:09:53] <af> xcombelle: overall I feel that kernel's networking APIs, much like but perhaps even more so than the filesystem APIs, are a collection of layers of "fuck you"s to the userspace
[15:10:18] <epilys> sounds like your problem is mostly monolithic-ism?
[15:11:07] <af> I feel like kernel devs wake up in the morning and think "Hmm, how can I make the lives of these filthy mortal NON-KERNEL devs **EVEN MORE HARD** today?"
[15:11:24] <xcombelle> I would bet that network in kernel is an optimization does it still faster I don't know
[15:11:54] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[15:12:24] <epilys> it's possible to run a user-space tcp/ip in linux btw
[15:12:25] <mgdm> there are a few big CDNs that do a lot of userspace network offload to get better performance
[15:12:31] <af> xcombelle: putting it in kernel is worse for optimization because now it is limited to whatever the kernel devs could optimize and userspace can't innovate on top of that.
[15:12:45] <mgdm> it needs really specific network cards though, I think
[15:13:36] <af> epilys: yea but the API is not very nice and accessing raw sockets needs root
[15:15:30] <af> epilys: I think the root and user divide is an important one but unfortunately, requiring root for several things which shouldn't require root, practically dilutes down the divide and thus the security because now everything is running as root in some way.
[15:16:39] <epilys> you have to remember this stuff is based on 70s-80s-90s designs, some stuff is obvious in hindsight
[15:16:59] <epilys> I agree with what you're saying, but its important to view things with "compassion" rather than assuming the worst
[15:17:10] <af> That's true. I get it. I'm mostly just ranting.
[15:17:20] <af> I don't have anything person against any developer.
[15:22:04] <ignaloidas> don't some network adapters understand TCP now?
[15:23:13] <ignaloidas> Yes they do https://www.chelsio.com/nic/tcp-offload-engine/
[15:23:15] <mockturtle> [ 1Gb/10Gb/40GbE TCP Offload Engine (TOE) Solution for Ethernet | Chelsio Communications ] - www.chelsio.com
[15:24:22] <af> ignaloidas: huh, interesting. wonder what software is running on the card
[15:24:41] <ignaloidas> af, I think it's mostly an ASIC
[15:24:52] <ignaloidas> TCP at it's core is pretty simple
[15:25:18] <af> that's cool. so that's basically hardware acceleration for TCP.
[15:25:41] <ignaloidas> Looks like it's mighty old as well, with patents back to 2005
[15:26:30] <ignaloidas> but also linux doesn't support it lmao
[15:26:53] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[15:27:37] *** Quits: pr0t07ype (~pr0t07ype@user/pr0t07ype) (Ping timeout: 246 seconds)
[15:27:41] *** Quits: rockorager (~rockorage@c-24-118-143-158.hsd1.mn.comcast.net) (Quit: rockorager)
[15:29:33] <gerikson> the idea that a unix box primarily a multi-user system is eroding
[15:29:43] <gerikson> sure you have "processes" that are users
[15:30:16] <ignaloidas> unix boxes haven't been widely used for a multi-user system for 10 years at least
[15:31:00] <ignaloidas> it's users are now services
[15:35:14] <gerikson> yep
[15:36:54] <mgdm> most of the unix/linux machines I use these days are software appliances running single services on other bigger machines
[15:39:25] <letoram> yet the desktop side continues to trip over its own legs with near infinite amounts of crap to account for multiple users, and worse, swapping between them
[15:40:32] <letoram> one of the saner moves in android was to strip that away, yet every n years some aspiring manager comes back with 'wouldnt it be great to sha...' *sound of gun being cocked*
[15:40:53] <xcombelle> HFT i would say af
[15:41:06] <xcombelle> high frequency trading
[15:45:07] <af> letoram: yea I recently learned kernel isn't username aware and all of /etc/shadow crap can be done away by modifying userspace. I think in that aspect the android model is underappreciated.
[15:47:18] <mgdm> yeah you can make users on the fly without them being registered in /etc/passwd and /etc/shadow, systemd lets you do that, I'm sure there are other ways
[15:48:11] <af> yea you can just select random uids and gids
[15:48:23] <fedorafan> whats topic
[15:48:30] <af> that was the first thing I experimented with as soon as I found out
[15:50:14] <ignaloidas> fedorafan, hating on linux in any way possible it seems
[15:50:24] <fedorafan> hahahaha
[15:57:59] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::9885) (Quit: Konversation terminated!)
[15:58:26] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::9885)
[15:59:39] *** Joins: elegantmess (~chris@52.124.4.69)
[16:04:19] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::9885) (Quit: Konversation terminated!)
[16:04:41] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::9885)
[16:08:15] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:d80:fe67:785e:3eb1)
[16:08:34] *** Joins: rockorager (~rockorage@c-24-118-143-158.hsd1.mn.comcast.net)
[16:10:57] *** Parts: rockorager (~rockorage@c-24-118-143-158.hsd1.mn.comcast.net) ()
[16:16:44] *** Quits: Irenes (~ireneista@user/ireneista) (Ping timeout: 245 seconds)
[16:28:06] <mockturtle> How we improved the performance of our Rust app [Zellij] [rust performance] (kbknapp) https://lobste.rs/s/qbyvt3
[16:28:25] *** Joins: Irenes (~ireneista@user/ireneista)
[16:28:25] *** ChanServ sets mode: +o Irenes
[16:39:28] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[16:43:43] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 240 seconds)
[16:52:31] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[16:59:23] <mockturtle> Dependency Injection in Swift using latest Swift features [swift] (napkindrawing) https://lobste.rs/s/7edycs
[17:00:02] <gerikson> "we rewrote our Rust app in C" <- TWIST
[17:00:38] <iDrougge> An unexpected one at that.
[17:00:58] <mockturtle> My progress on real RISC-V hardware [osdev] (napkindrawing) https://lobste.rs/s/ggjwzc
[17:01:54] <epilys> gerikson, we rewrote our Rust to use more unsafe
[17:03:36] <ignaloidas> epilys, more like "we rewrote our Rust to actually work"
[17:04:03] <epilys> hostile tone!
[17:04:14] <epilys> rewrite in X folks going to get confused
[17:04:48] <mockturtle> FreeBSD TCP Performance System Controls [freebsd performance] (napkindrawing) https://lobste.rs/s/lcgoxw
[17:05:17] <gerikson> oh man my RISC-V hardware is FAKE
[17:05:28] <gerikson> oh I gues they mean "not emulated"
[17:06:02] <ignaloidas> is FPGA emulated?
[17:06:37] <ignaloidas> ^ that's a very difficult question actually, I don't have an answer myself
[17:06:54] <iDrougge> Using the E word around FPGA enthusiasts is a good way to make new enemies.
[17:08:18] <ignaloidas> I mean, if you really want to dig at it, silicon at it's heart is emulating an idealized machine operating on ones and zeros
[17:17:01] <epilys> it's emulation all the way down
[17:17:06] <epilys> In 1947 the transistor was invented. This has made a lot of people angry, and has been widely regarded as a bad move.
[17:21:48] *** Quits: l__q (~modinfo@user/modinfo) (Quit: internet)
[17:22:45] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:d80:fe67:785e:3eb1) (Quit: Textual IRC Client: www.textualapp.com)
[17:29:20] <mgdm> I recall when I was doing first line tech support for DSL back when it was new in the UK, someone took issue with the device being called a modem, because "it's all digital"... oh, if only they knew
[17:33:46] *** Joins: xkuru (~xkuru@user/xkuru)
[17:36:15] <epilys> a customer?
[17:36:32] <gerikson> ahahahahsa mgdm
[17:36:36] <gerikson> right
[17:36:36] <ignaloidas> everything is digital untill you need to switch it on and of frequently enough
[17:36:45] <mgdm> epilys: yeah
[17:36:54] <epilys> sounds like a monty python skit
[17:37:11] <epilys> dear sir, i wish to complain in the strongest possible terms
[17:37:32] <mgdm> it was less a complaint and more of a trying-to-appear-clever comment
[17:37:48] <epilys> same thing in this case
[17:39:16] <gerikson> I'm always respectful of the agent when I call in
[17:39:20] <gerikson> follow all the steips
[17:39:30] <gerikson> don't try to get ahead of them
[17:40:52] *** Joins: pacbard (~pacbard@user/pacbard)
[17:41:30] <mgdm> When I worked there (this was 2000-01) I was not very respectful of the steps and I would jump to the end if I thought I had a decent chance of fixing the problem. My scores on the reviews were low for that but I solved the problems, so...
[17:42:03] <gerikson> you weren't paid to think ;)
[17:42:41] <epilys> as long as there was personal growth that's alright mgdm
[17:43:00] <mgdm> gerikson: True, but I tried to do so anyway :-)
[17:43:32] <mgdm> epilys: yeah, it got to the point where they gave me the weird calls instead of general incoming ones, then I quit to go to uni
[17:43:48] <epilys> haha
[17:43:59] *** Quits: julienxx (~julienxx@87-231-19-8.rev.numericable.fr) (Read error: Connection reset by peer)
[17:44:04] <epilys> reserve agent for the demanding tasks
[17:44:16] *** Joins: julienxx (~julienxx@87-231-19-8.rev.numericable.fr)
[17:44:53] *** Quits: jaffachief (~magnus@192.248.157.160) (Quit: leaving)
[17:46:45] *** Quits: af (~af@awalgarg.me) (Ping timeout: 256 seconds)
[17:46:54] <ignaloidas> mgdm, you become https://xkcd.com/806/
[17:46:55] <mockturtle> [ Tech Support ] - xkcd.com
[17:47:19] <mgdm> haha, a little of that
[17:48:40] <epilys> the one time I tried to do that in a support call, my agent told me "yes sir, but see, sometimes your modem bridge and non-company router is the problem and not the connection"
[17:53:17] <mgdm> we were supposed to say that but I "sometimes forgot"
[17:57:54] <geoffwozniak> I love how, instead of doing the easy thing of making the terminal a little wider, we get commits like this: https://gcc.gnu.org/git/?p=gcc.git;a=commitdiff;h=b51de13d81920f92ebe067b9c76e9d2195685099
[17:57:54] <mockturtle> [ gcc.gnu.org Git - gcc.git/commitdiff ] - gcc.gnu.org
[17:58:31] *** Joins: voltage_ (voltage@user/voltage)
[17:58:56] <gerikson> geoffwozniak: the 10 commandments were printed on 80x24
[17:58:57] <epilys> xkcd "broke my workflow"
[17:59:02] *** Joins: af (~af@awalgarg.me)
[18:00:00] <geoffwozniak> Also, I laugh at the "coding convention" idea in GCC
[18:01:02] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[18:01:02] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[18:01:02] *** Joins: JordiGH (~jordi@user/jordigh)
[18:01:26] <mockturtle> Document Proxy Icons in MacOS 11 and 12 as an — Ahem — Proxy for Apple’s Current UI Design Sensibilities [design mac] (calvin) https://lobste.rs/s/juoijx
[18:01:59] *** Joins: mercerist (~mercerist@user/mercerist)
[18:02:44] *** Joins: paravida (~myChateau@user/paravida)
[18:04:00] <geoffwozniak> I think the obsession with the past and terminal configs is a major reason why I have little interest in ever contributing to projects that I like
[18:04:50] *** Joins: welshdave (~welshdave@cpc1-sket4-2-0-cust112.7-3.cable.virginm.net)
[18:10:12] <pushcx> The js codebase I work on has a strict 80 column limit and it frustrates the heck out of me how often I hit it. Feels like about one in ten lines.
[18:10:48] <rbasak> How many indent levels?
[18:10:54] <mgdm> my old team's JS was indented to 2 chars which I found quite weird to read after years of 4-space indents
[18:10:56] <rbasak> js might be prone to more I guess
[18:11:06] <rbasak> But in general, if too many indent levels, please be refactoring
[18:11:24] <ignaloidas> having a good formatter helps
[18:11:56] <gerikson> I use perltidy on my code
[18:11:57] <pushcx> rbasak: typically two right out of the gate, one for class/component and one for function. Two spaces.
[18:12:01] <ignaloidas> we use black at work, and while our code is quite prone at hitting the limit, I never felt presured by it
[18:12:01] <pushcx> (each)
[18:12:01] <gerikson> it really does funny things sometimes
[18:12:36] <ngoldbaum> does js have a black or gofmt-like auto-formatter?
[18:12:54] <ngoldbaum> after i started using black line length limits bothered me less
[18:12:55] <rbasak> pushcx: sure, but within a function, only two or three levels are really ever useful. For more, use the stack instead.
[18:14:34] *** Joins: jaffachief (~magnus@192.248.157.160)
[18:14:42] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[18:14:45] <pushcx> ngoldbaum: I'm a little tempted to put Standard on the Lobsters codebase. Every time I bump deps rubocop has some new rules to makde decisions about. I have plenty of decisions to make already thanks.
[18:17:29] <mgdm> ngoldbaum: prettier is the one I've seen used most
[18:24:42] <ignaloidas> off topic for the site, but this sounds kinda bad https://nuclearmonster.com/2021/07/ethan-flibitijibibo-lee-may-retire-from-programming-due-to-valves-proton/
[18:24:45] <mockturtle> [ Ethan “flibitijibibo” Lee May Retire from Programming Due to Valve’s Proton ] - nuclearmonster.com
[18:27:14] *** Quits: welshdave (~welshdave@cpc1-sket4-2-0-cust112.7-3.cable.virginm.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:29:58] *** Joins: timetoplatypus (~timetopla@static-108-31-239-210.washdc.fios.verizon.net)
[18:30:15] <timetoplatypus> V.v.V
[18:30:15] <mockturtle> v_!_!_v
[18:32:57] <ngoldbaum> ignaloidas: i irrationally hate the way whoever wrote that italicizes the names of operating systems and game consoles
[18:33:08] <steenuil> is getting people to use a compatiblity layer rather than target linux specifically such a bad thing?
[18:33:35] <ignaloidas> do you want interfaces that "linux" games use be dictated by windows steenuil
[18:33:58] <steenuil> I don't understand the question, what do you mean by interfaces?
[18:34:46] <ignaloidas> rendering, storage, sound APIs, etc
[18:35:01] <ngoldbaum> if that means more games are available on linux, sure
[18:35:13] <ngoldbaum> i don’t really care how the port or emulation works as long as the game works
[18:35:19] <steenuil> I don't particularly care about the OS interfaces the games I play uses, ignaloidas
[18:35:47] <ngoldbaum> also proton seems to work pretty well, except for games with DRM
[18:36:03] <c355e3b> ignaloidas, I feel like Windows is doing a better job at providing usable interfaces to these things than Linux
[18:36:06] <ignaloidas> if valve abandons proton, no more games will be available
[18:36:18] <c355e3b> Heck OSX is doing better at this point
[18:36:59] <steenuil> proton is open source just like wine, and I doubt valve will abandon it in the first place
[18:37:01] <ignaloidas> c355e3b, no? besides the major libc stuff a few years back no major breakages happened for games on linux AFAIK
[18:37:18] <c355e3b> Straight bullshit.
[18:37:36] <ignaloidas> c355e3b, please provide counterexamples then
[18:38:19] <c355e3b> Linux's driver interface is still crap and completely unstable if you try do push a significant amount of polygons or need access to encoders on die.
[18:39:30] <c355e3b> You can't acutaly get a stable or consistent dump from a Linux user and expect the debugger to load it when everyone has "tweaked" the setup instructions
[18:39:34] *** Joins: arcatech (~arcatech@user/arcatech)
[18:40:10] <c355e3b> If you need to use *any* form of third party graphics library which you install from the main package repository, you will be fucked come LTS time.
[18:40:20] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[18:40:51] <c355e3b> and if the driver *thinks* you are a server, it sizes up if you don't have a card it likes
[18:43:12] <steenuil> ot
[18:44:10] <steenuil> *also if a new platform comes up you'll only have to port the compatibility layer and you'll have all the games available
[18:44:43] <cb> i've been meaning to write a blog post about how Win32 is the linux stable userland ABI
[18:44:50] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 255 seconds)
[18:44:51] <cb> because it doesn't just cover pidly posix shit
[18:44:58] <iDrougge> Hihi.
[18:44:58] <cb> but the APIs a *real* application will use
[18:45:33] <cb> part of what Valve's doing is effectively going to mandate Windows ABI
[18:45:40] <cb> i.e. restoring saved memory images across devices
[18:46:17] <cb> anyways i think this artticle is OT
[18:46:23] <cb> thanks for sharing it
[18:46:23] <gerikson> and how
[18:46:29] <gerikson> wait
[18:46:33] <gerikson> O = off or on ?
[18:48:08] <cb> on-topic sorry
[18:49:22] <gerikson> haha ok
[18:49:51] <Brekkjern> I propose ⊤T and ⊥T to indicate on/off-topic respectively.
[18:50:24] <ngoldbaum> any takers? https://news.ycombinator.com/item?id=27894041
[18:50:24] <mockturtle> [ I met a dowser as a teenager on a school trip. He gave us pairs of L-shaped meta... | Hacker News ] - news.ycombinator.com
[18:51:03] <Brekkjern> I thought we got past that...
[18:51:09] <gerikson> wow, dowsing is really old school woo
[18:51:29] <fedorafan> ontopic = kicked
[18:51:30] <fedorafan> :D
[18:53:03] *** Quits: polve (~polve@user/polve) (Ping timeout: 250 seconds)
[18:53:15] <c355e3b> ngoldbaum: I'll send this to my old geology professor. the guy always loved to rip people apart in class over this.
[18:53:33] <ngoldbaum> but the ley lines
[18:54:02] <c355e3b> I have been able to blame ley lines to skip out on doing RAC reports though
[18:55:22] *** Joins: polve (~polve@user/polve)
[18:56:56] <ignaloidas> if you have enough straight lines from two datasets, some of them will roughly fit, and you can ignore all the other ones if you want
[18:57:59] <mockturtle> Ethan “flibitijibibo” Lee May Retire from Programming Due to Valve’s Proton [person linux practices games] (calvin) https://lobste.rs/s/v0nvbu
[18:58:40] <cb> i put a comment stating why i think it's interresting, anyways
[19:00:02] *** tachyon is now known as takyon
[19:00:33] <ignaloidas> and it imediatly get's 2 off-topics...
[19:01:24] <gerikson> it's borderline
[19:02:31] <cb> deleted, fair enough
[19:03:35] *** Joins: composite_higgs (~user@206.214.238.66)
[19:10:02] *** takyon is now known as tachyon
[19:15:12] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[19:20:13] *** cookie is now known as ckie
[19:21:39] <geoffwozniak> 2-3 days of trying to figure out why some expression is written the way it is and I finally got it.
[19:22:09] <geoffwozniak> Enlightenment is a wonderful thing
[19:23:25] <geoffwozniak> And now fixing the bug is harder...
[19:24:03] *** Quits: revilaika (~revilaika@151.144.8.109.rev.sfr.net) (Quit: nyaa~)
[19:24:45] <mockturtle> Why does the New menu even exist for creating new empty files? [design windows historical] (calvin) https://lobste.rs/s/tynoun
[19:26:25] <Church> ngoldbaum: Yeah I'm greatfull we have a bunch of nice opinionated code formatters for all the Lang's I use. Set to run on save and I'm in business.
[19:27:45] <mockturtle> 0x7FDE623822FC16E6 : a magic constant for double float reciprocal (2011) [math performance] (dbremner) https://lobste.rs/s/5oukok
[19:42:46] *** Quits: elegantmess (~chris@52.124.4.69) (Read error: Connection reset by peer)
[19:46:17] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[19:46:47] *** Quits: waldow (~waldow@echan.ninja) (Remote host closed the connection)
[19:46:50] *** Joins: voltage (voltage@user/voltage)
[19:47:36] *** Quits: voltage_ (voltage@user/voltage) (Remote host closed the connection)
[19:53:33] <JordiGH> Dangnabit, why does the EC2 AWS WUI not remember which colummns I want it to show me?
[19:53:42] <JordiGH> Every time I open it up it goes back to the default columns.
[20:04:37] <mockturtle> Cronic - A cure for Cron's chronic email problem [linux unix] (rafael) https://lobste.rs/s/nmh6pr
[20:06:16] <pushcx> Does anyone have an opinion on the book Secure by Design? https://www.manning.com/books/secure-by-design
[20:06:17] <mockturtle> [ Secure by Design ] - www.manning.com
[20:08:32] <mgdm> I do not, but it's the catchphrase for my department, maybe I should read it
[20:09:07] *** Joins: mercerist (~mercerist@user/mercerist)
[20:09:34] *** voltage is now known as voltage_
[20:09:52] <Ristovski> :/ https://www.openwall.com/lists/oss-security/2021/07/20/1
[20:09:53] <mockturtle> [ oss-security - CVE-2021-33909: size_t-to-int vulnerability in Linux’s filesystem layer ] - www.openwall.com
[20:11:41] *** Joins: l__q (~modinfo@user/modinfo)
[20:18:46] *** Joins: tealbird (~pidgin@c-174-62-72-237.hsd1.ca.comcast.net)
[20:23:13] <iDrougge> Hm, I wonder what programming language they used…
[20:24:30] <geoffwozniak> Must have been Brainfuck
[20:25:01] <indigo> Secure code is hard, let's go shopping
[20:25:39] *** Quits: bauruine (~stefan@2001:8e0:146d:dead:6183:3791:4cb8:3be6) (Remote host closed the connection)
[20:27:19] <manicennui> Let's continue to use C and C-like languages.
[20:30:29] <iDrougge> Secure code is hard, silent type conversions are easy.
[20:30:49] <companion_cube> bound checking is hard too it seems
[20:31:29] <geoffwozniak> too inefficient!
[20:31:43] <iDrougge> That's why we left it out of our new systems programming language.
[20:33:04] <companion_cube> I think Hare has bound checking
[20:33:08] <companion_cube> so we're safe
[20:33:08] *** Joins: jmw (~jmw@user/jmw)
[20:33:13] <iDrougge> I was just wondering.
[20:33:20] <companion_cube> no new system programming language makes that one mistake… afaik
[20:33:43] <mockturtle> Modeling mutual friendship [databases] (squadette) https://lobste.rs/s/wzb4gl
[20:34:12] *** Quits: polve (~polve@user/polve) (Ping timeout: 246 seconds)
[20:34:51] <iDrougge> It's a good thing no-one is doing systems work in some old language like C anymore.
[20:35:42] <technomancy> what a relief
[20:35:49] <technomancy> our long nightmare has finally come to an end
[20:36:26] <companion_cube> don't worry kids, people who still use C know what they're doing™
[20:36:42] <mgdm> A co-worker in a previous job once argued to me that Linux must be written in C++ because nobody wrote anything in C any more and everything had been "upgraded to the new version"
[20:36:44] *** Joins: polve (~polve@user/polve)
[20:36:48] <indigo> And if the code has bugs or security issues, it's because they weren't keeping it simple enough™
[20:37:04] <indigo> mgdm: Oh you sweet summer child
[20:37:13] *** Joins: seschwar (~seschwar@user/seschwar)
[20:38:23] *** Quits: resistite (~resistite@86.106.121.175) (Quit: Lost terminal)
[20:38:39] <technomancy> mgdm: that's amazing <3
[20:39:22] *** Joins: resistite (~resistite@86.106.121.175)
[20:43:30] <epilys> python can be so functional at times functools.reduce(lambda a,b: a|b, map(lambda has: has.vertices(), obj.taggregationhastag_set.all()))
[20:44:13] *** Quits: PiRATA (~weechat@user/pirata) (Quit: PiRATA)
[20:46:59] <companion_cube> kind of ironic you have to reach for functools
[20:47:04] <mockturtle> I ****ing hate Science [rant practices] (hwayne) https://lobste.rs/s/v4unx3
[20:48:19] <dutchie> "Alexandra Elbakyan has done more for society than the entire FSF. YEAH I WENT THERE" lol
[20:48:51] <technomancy> who?
[20:48:57] <epilys> companion_cube, is it? it's standard lib
[20:49:12] <dutchie> technomancy: the sci-hub founder
[20:49:24] <mockturtle> Coordination-free Database Query Sharding with PostgreSQL [databases performance] (relistan) https://lobste.rs/s/lvlmmj
[20:49:35] <technomancy> oh awesome. yeah that's not unreasonable.
[20:49:48] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 268 seconds)
[20:49:55] *** Quits: slycelote (~slycelote@user/slycelote) (Quit: Leaving)
[20:50:10] <companion_cube> epilys: python is one of the least functional languages I can think of these days
[20:50:15] <companion_cube> (for my definition of FP ofc)
[20:50:24] <epilys> obviously it is
[20:50:34] <epilys> otherwise i wouldn't share this snippet :p
[20:50:54] <epilys> I wouldn't say "wow this haskell foldl is so functional"
[20:52:14] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[20:52:55] <companion_cube> it only works for very small lambdas
[20:53:09] <companion_cube> and in python so many things are mutable
[20:53:23] <companion_cube> anyway. this discussion is at its 100th iteration at least
[20:53:30] <epilys> lambda is already miniscule, it's the capital Lambda you have to worry about
[20:53:39] *** ChanServ sets mode: -b *!~Dont@37.222.8.156
[20:53:40] * epilys is a Greek speaker
[20:53:42] <technomancy> I almost fell out of my chair when I read about the way default arguments are shared across all invocations
[20:53:56] *** Joins: pyrorock (~Dont@37.222.8.156)
[20:57:25] <companion_cube> :D
[20:57:34] <companion_cube> technomancy: have you looked at how capture works?
[20:57:43] <technomancy> I'm afraid to ask
[20:57:58] <companion_cube> look at that:
[20:58:00] <companion_cube> >>> l = [lambda :i for i in range(10)]
[20:58:02] <companion_cube> >>> [f() for f in l]
[20:58:04] <companion_cube> [9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
[20:58:18] <companion_cube> I hope you enjoy
[20:58:30] *** Joins: riv (~river@tilde.team/user/river)
[20:58:46] <technomancy> https://p.hagelb.org/smart.gif
[20:59:24] <companion_cube> iirc the "correct" way is `lambda i=i: i`
[20:59:43] <companion_cube> because python is a simple language
[21:02:39] <manicennui> (lambda (x) x) is the correct way.
[21:02:41] <manicennui> ;)))
[21:04:11] <lep> SKK
[21:05:07] <companion_cube> (fun x -> x)
[21:05:59] *** Quits: l__q (~modinfo@user/modinfo) (Read error: Connection reset by peer)
[21:06:41] *** Joins: l__q (~modinfo@user/modinfo)
[21:07:04] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[21:13:00] <mockturtle> Windows is not a Microsoft Visual C/C++ Run-Time delivery channel (2014) [api windows practices] (calvin) https://lobste.rs/s/df747m
[21:16:42] *** Joins: l__q (~modinfo@user/modinfo)
[21:17:21] *** Quits: l__q (~modinfo@user/modinfo) (Read error: Connection reset by peer)
[21:18:45] *** Joins: l__q (~modinfo@user/modinfo)
[21:19:02] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 252 seconds)
[21:19:24] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:21:18] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[21:21:21] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[21:21:57] *** Joins: MerchantOfVenice (~patrick@user/merchantofvenice)
[21:23:47] *** Joins: l__q (~modinfo@user/modinfo)
[21:25:26] <mockturtle> Julia used Multiple Dispatch! It's Super Effective [show programming compilers] (ThomasMoll) https://lobste.rs/s/xqazh2
[21:27:36] *** Quits: bird (~bird@136.25.143.83) (Quit: bird)
[21:27:41] *** Quits: avane (~avane@user/avane) (Quit: o/)
[21:28:11] *** Joins: arcatech (~arcatech@user/arcatech)
[21:28:49] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[21:29:25] *** Joins: avane (~avane@user/avane)
[21:29:54] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Ping timeout: 268 seconds)
[21:33:08] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:33:23] *** Quits: eroc1990 (~eroc1990@068-116-193-243.res.spectrum.com) (Ping timeout: 255 seconds)
[21:35:02] *** Quits: tealbird (~pidgin@c-174-62-72-237.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[21:35:05] *** Joins: delial (~delial@47.185.98.253)
[21:36:13] *** Joins: tealbird (~pidgin@c-174-62-72-237.hsd1.ca.comcast.net)
[21:40:28] *** Joins: alex11 (~alex11@user/alex11)
[21:40:51] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[21:44:47] *** Quits: hub (~hub@user/hub) (Quit: ZNC 1.8.2 - https://znc.in)
[21:45:27] *** Joins: hub (~hub@user/hub)
[21:53:42] <mockturtle> Custom eBPF Helpers [linux osdev] (carlmjohnson) https://lobste.rs/s/bzjqab
[22:04:21] *** Joins: bird (~bird@136-25-143-83.cab.webpass.net)
[22:11:18] <Ori_B> /win cat
[22:12:35] *** Quits: MerchantOfVenice (~patrick@user/merchantofvenice) (Quit: Konversation terminated!)
[22:15:46] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[22:15:56] *** Joins: arcatech (~arcatech@user/arcatech)
[22:17:13] *** Quits: tealbird (~pidgin@c-174-62-72-237.hsd1.ca.comcast.net) (Ping timeout: 255 seconds)
[22:17:28] *** Joins: milosz (~milosz@user/milosz)
[22:22:58] *** belak51 is now known as belak
[22:25:45] *** Quits: julienxx (~julienxx@87-231-19-8.rev.numericable.fr) (Ping timeout: 258 seconds)
[22:27:47] *** Joins: jmw (~jmw@user/jmw)
[22:28:44] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:32:53] *** Joins: hsiktas (uid224847@id-224847.tooting.irccloud.com)
[22:34:34] *** Joins: arcatech (~arcatech@user/arcatech)
[22:35:18] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[22:35:47] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[22:36:11] *** Joins: pyrorock (~Dont@37.222.8.156)
[22:42:47] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:42:47] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[22:43:19] *** Quits: kaivai (~kaivai@user/kaivai) (Ping timeout: 255 seconds)
[22:44:33] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[22:48:47] <meff[m]> yess time to play with io_uring
[22:49:30] <mgdm> I want to learn that, and eBPF, but it's not strictly in my job any more and so finding the spare brain power takes a bit
[22:49:47] <c355e3b> eBPF needs those warnings we put on nuclear waste.
[22:50:05] <c355e3b> not because it isn't cool, but the old versions of the verifier are painful.
[22:50:30] <c355e3b> also, PERF_EVENT_BUFFER is bad
[22:51:41] <meff[m]> it would be really cool to see if you can create an ocap system atop io_uring too
[22:51:53] <meff[m]> but first, lemme see what kind of perf I get on some of my scrapers haha
[22:51:53] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[22:52:10] *** Joins: pyrorock (~Dont@37.222.8.156)
[22:54:01] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[22:54:35] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[22:54:40] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[22:57:12] <meff[m]> eBPF is a someday thing for me, one day I'll get to it
[22:57:45] *** Joins: pyrorock (~Dont@37.222.8.156)
[22:58:39] *** Joins: mloki (~mloki@2806:102e:b:283e:7a71:53f2:73bb:7114)
[23:03:01] <mockturtle> SQLite is 35% Faster Than The Filesystem [c databases] (emilengler) https://lobste.rs/s/8ewehw
[23:03:49] <hsiktas> https://www.brendangregg.com/blog/2021-07-05/computing-performance-on-the-horizon.html On slide 72, they are predicting that eBPF will be used for safe kernel drivers that can't crash the kernel anymore. :)
[23:03:50] <mockturtle> [ USENIX LISA2021 Computing Performance: On the Horizon ] - www.brendangregg.com
[23:06:43] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[23:07:11] *** Joins: pyrorock (~Dont@37.222.8.156)
[23:12:31] *** Quits: composite_higgs (~user@206.214.238.66) (Ping timeout: 258 seconds)
[23:15:46] <l__q>  Offtopic: How exacly works Storyful? I today recive 3 paymant for my stupid 30 sec
[23:16:03] <l__q> https://www.youtube.com/watch?v=pMxRONRs-Uc
[23:16:04] <mockturtle> [ Clever hamster’s escape ] - www.youtube.com
[23:16:10] <l__q> not from yt, from storyful
[23:16:28] *** Joins: eroc1990 (~eroc1990@068-116-193-243.res.spectrum.com)
[23:16:34] <l__q> My 30sec movie has already earn 750 euro from storyful, but why?
[23:17:23] <l__q> how?!11one
[23:17:46] <riv> l__q, how much you get?
[23:17:51] <riv> is it worth it??
[23:17:53] <l__q> today 150 euro
[23:17:53] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[23:17:54] <riv> should I start writing stuff
[23:17:58] <riv> what! that's awesome
[23:18:06] <l__q> first time and secand 250euro
[23:18:12] *** Joins: pyrorock (~Dont@37.222.8.156)
[23:18:17] <l__q> but why?
[23:18:44] <l__q> first time was on 2019
[23:18:55] <l__q> how exacly works storyful?
[23:19:08] <riv> that is one smart hamster
[23:19:27] <l__q> is for 2 years dead :(
[23:19:35] <riv> :(
[23:19:37] <l__q> since*
[23:19:48] <riv> https://video.storyful.com/record/8454 rewatching on here so you get more money lol
[23:19:52] <mockturtle> [ Daring Hamster Makes Great Escape ] - video.storyful.com
[23:20:23] *** Joins: mercerist (~mercerist@user/mercerist)
[23:20:36] <l__q> Yes, we has a interview with storyful as well
[23:20:41] <l__q> per skype
[23:20:48] <l__q> on 2019
[23:21:07] <l__q> storyful has order special translator polish-japanse for us
[23:21:27] <l__q> also storyful is japanse?
[23:21:27] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[23:21:34] <riv> i have never heard of it before
[23:21:46] <riv> hsiktas, uh wait
[23:22:00] <riv> didn't eBPF have a kind of rocky start, and cause some crashes ?
[23:22:06] <riv> or am i misremembering
[23:22:11] *** Joins: pyrorock (~Dont@37.222.8.156)
[23:22:29] <l__q> its nice to get "free" money, but why?
[23:22:38] <l__q> my movie is no more licensed since 2020
[23:22:51] <l__q> but im still recived money
[23:23:03] <riv> i wouldn't be complaning
[23:23:33] <l__q> how earn storyful money with my movie?
[23:23:48] <l__q> this is what, im dosent undestand
[23:23:49] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[23:24:12] *** Joins: pyrorock (~Dont@37.222.8.156)
[23:24:17] <mockturtle> My Fanless OpenBSD Desktop [openbsd] (jturner) https://lobste.rs/s/dtkal8
[23:25:48] <l__q> https://licensed.storyful.com/videos/153058
[23:25:48] <mockturtle> [ Storyful Video ] - licensed.storyful.com
[23:26:04] <l__q> my video, but it not more licensed
[23:26:19] <l__q> but im still recived money
[23:26:33] <l__q> wierd
[23:26:53] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[23:26:57] <ario> anyone experience with protobuf? is it possible to store a 3-bit integer and have it only take up 3 bits of space?
[23:27:11] *** Joins: pyrorock (~Dont@37.222.8.156)
[23:27:13] <companion_cube> probably not, it's multiple bytes
[23:27:28] <companion_cube> an integer field might be like 2 bytes at the least (type+tag; 7-bit int)
[23:29:11] <ario> darn
[23:29:25] <companion_cube> I think it's quite rare to have the property you want
[23:29:32] <companion_cube> even binary formats tend to be at least byte-aligned
[23:29:35] *** Joins: kaivai (~kaivai@user/kaivai)
[23:30:03] <ario> i currently have a custom bit string that i've created with bit offset exactly as required
[23:30:18] <ario> but i wanted to use something more maintainable and still save as much space as possible
[23:30:47] <ario> and I save the bitstring into redis for retrieval
[23:31:24] *** Joins: mouseghost (~draco@user/mouseghost)
[23:31:26] <ario> but if protobuf stores everything in bytes, my bitstring will be large
[23:31:26] <manicennui> Why do you care how much space it takes up over the wire?
[23:33:18] <meff[m]> Another approach might be to compress your payloads and store compressed payloads into redis instead if you need the space
[23:33:28] <ario> manicennui: the bit string can grow very large
[23:33:29] * mouseghost eyes
[23:33:31] <meff[m]> But I guess it depends on why you need the space
[23:34:04] <ario> i think my concern is if the bit string grows too large then it will be slow over the wire
[23:34:14] <mouseghost> how so?
[23:34:45] *** Joins: drobilla (~user@104-195-158-248.cpe.teksavvy.com)
[23:34:49] <meff[m]> Remember, sockets use packets. You're going to need to slot your payload into packets anyway and packets have a minimum size and fixed overhead
[23:35:01] <ario> hmm this is a good point
[23:35:06] <meff[m]> Shaving bits from your payload won't necessarily meaningfully decrease network chatter
[23:35:47] <meff[m]> If you want to make things faster over the wire, you might want to make sure things fit in one packet, and further don't require an acknowledgement if you're okay with that. But I guess this all depends on the latencies you care about
[23:36:03] <meff[m]> and of course there's just raw RTT to consider
[23:36:35] <ario> what about the concern of how much space it will take up in redis
[23:37:35] <meff[m]> Well, you'll get slowdowns in Redis if you start getting lots of TLB misses, but as long as you're reading/writing to data that stays in the TLB and comfortably stays in memory, you should have no issues
[23:38:26] <meff[m]> Redis is just holding the data in memory so the usual caveats about CPU caches and TLB apply just as if you were reading a dataset from a global array or something
[23:39:01] *** Joins: cturtle (~cturtle@128.187.116.29)
[23:41:12] <ario> gotcha
[23:42:15] <ario> say i have a 1000 members and a set of properties (user_id, status, etc) that i want to store as a large bitstring using protobuf in redis
[23:42:41] <manicennui> You aren't even approaching anything that would be a cause for concern.
[23:42:48] <ario> so i can grab all members and their properties in one shot
[23:42:53] <manicennui> We store huge chunks of json in redis.
[23:43:48] <manicennui> I think you are prematurely optizing.
[23:43:51] <manicennui> optimizing
[23:44:06] <ario> and i want to update one members property in the bit string, will protobuf do that?
[23:44:11] <manicennui> Are you using redis as your database?
[23:47:06] <ario> nope, i store a large bit string of all members properties in redis
[23:47:11] <ario> for fast retrieval
[23:49:06] <ario> and i write to particular bitstring for update/append
[23:49:58] <manicennui> Why?
[23:50:03] <manicennui> Why are you doing all of this?
[23:50:12] <manicennui> Just curious.
[23:50:28] <manicennui> It's either something fairly interesting, or something pretty horrific.
[23:50:38] <manicennui> My money is on the latter.
[23:50:42] <mgdm> Schroedinger's architecture
[23:50:50] <ario> haha
[23:51:59] <ario> i need fast retrieval of all members and a set of their properties. So encoding/decoding them into redis instead of hitting the db makes it much faster
[23:53:44] <ario> i'm not saying this will scale haha
[23:53:53] <manicennui> Why not just hold them in memory?
[23:53:58] <manicennui> Why the additional layer?
[23:54:21] <manicennui> I assume they are retrieved from/persisted to the DB at some point.
[23:54:51] <ario> they are retrieved once and i update the DB/bitstring on changes
[23:54:51] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[23:55:13] *** Joins: pyrorock (~Dont@37.222.8.156)
[23:56:49] *** Joins: amvc (~amvc@89.36.78.150)
[23:59:40] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
