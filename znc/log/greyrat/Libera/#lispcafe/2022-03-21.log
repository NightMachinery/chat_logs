[00:01:16] <qhong> https://www.researchgate.net/publication/242608937_Reflection_in_prototype-based_object-_oriented_programming_languages
[00:01:17] -ixelp- (PDF) Reflection in prototype-based object- oriented programming languages
[00:01:48] <qhong> This talks about problem of MOP with prototype. It does mention the problem of merging two relations (class-of subclass-of) into one relation (parents-of)
[00:02:21] <qhong> The conclusion is it's unlikely to work. The whole prototype idea seems unfriendly to MOP
[00:02:50] <qhong> Should I yeet prototype? If I want a very extensible Lisp, should I just use class?
[00:04:43] *** Joins: Oddity (~Oddity@user/oddity)
[00:08:39] *** Joins: notzmv (~zmv@user/notzmv)
[00:27:17] *** Joins: tfeb (~tfb@88.98.95.237)
[00:30:25] <kakuhen> good morning
[00:33:23] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[00:33:47] <gilberth> kakuhen: Hi there!
[00:40:46] <moon-child> hmm
[00:40:58] <moon-child> what if we did idle-time sorting of freelists?
[00:42:42] <gilberth> No bump allocator for you?
[00:42:44] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 252 seconds)
[00:44:01] <moon-child> pourqois pas les deux?
[00:44:36] <gilberth> Ich spreche kein Franzöisch.
[00:45:15] <gilberth> Und meine Rechtschreibung lässt zu wünschen. :(
[00:47:59] <gilberth> But in general I believe systems could be more creative in good ways to spend idle time.
[00:54:44] <moon-child> agree
[00:55:06] <moon-child> dragonflybsd used to do idle-time memory zeroing, but they got rid of it
[00:56:19] <gilberth> I wonder with JS, some GC work is post-poned, or a minor GC done, between running JS. It's completely event oriented. By doing a minor GC when done handling an event you could perhaps reduce the latency of serving the next event.
[00:56:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:59:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:59:37] <moon-child> I proposed something similar in the past
[00:59:53] <moon-child> for a video game, do a minor gc every time through the game loop.  For a web server, do it after handling every request
[01:00:16] <moon-child> let the nursery size be tuned to the 99%ile (or w/e) per frame or request
[01:03:41] *** Parts: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de) (ERC (IRC client for Emacs 27.2))
[01:11:38] *** semz_ is now known as semz
[01:34:03] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[01:35:22] *** Quits: X-Scale (~ARM@92.250.103.201) (Ping timeout: 272 seconds)
[01:35:23] *** X-Scale` is now known as X-Scale
[01:37:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:47:48] <gilberth> CP/M is funny. When you access files you do so with file control block (FCBs). Files are organized in extents of upto 128 records of 128 bytes each. The file position is kept with a current record field (CR) and a current extent field (EX). This EX field runs to 31 and overflows to yet another field called S2. So far so good.
[01:48:07] <gilberth> Although the BDOS calls are called "Read Sequential" and "Write Sequential" you can actually seek. You just update the CR field. To seek to another extent, you need to open the file again and pass the correct value for EX to the "Open File" BDOS call. All fine. But: You can't seek past the 32th extent as S2 is ignored during "Open File".
[01:48:52] <gilberth> And files are actually sparse with CP/M.
[01:55:58] <hayley> gilberth: No, I can't get to ELS too cheaply from here.
[01:59:48] <moon-child> haha  'as in the case of sorting, we assume that each record includes a special field called its _key_; this terminology is especially appropriate, because many people spend a great deal of time every day searching for their keys'
[02:00:00] <hayley> Bakerposting didn't either, though I could theoretically just mail the server for cheap.
[02:00:00] -Bakerposting- Moon, D.  "Garbage collection in a large Lisp system". (Unify and Conquer (Garbage, Updating, Aliasing, ...) in Functional Languages <https://plover.com/~mjd/misc/hbaker-archive/Share-Unify.html>)
[02:00:20] <moon-child> Bakerposting: how verbose of you
[02:00:21] -Bakerposting- That such inefficiencies were tolerated for so long is a tribute to the elegance and productivity gained by programming in these languages. (List Processing in Real Time on a Serial Computer <https://plover.com/~mjd/misc/hbaker-archive/RealTimeGC.html>)
[02:00:36] <moon-child> oh it's the citation :P
[02:00:50] <hayley> Yes.
[02:01:12] <gilberth> Also note that unless you have written data, you don't need to close an FCB. And when you open "FOO.TXT" without giving a drive letter it refers to the current drive. Change what the current drive is, and you're bust as the FCB does not keep track of the drive it came from. You will read and write blocks to the wrong disk.
[02:02:10] <hayley> I was asked about supporting ^ and $ in one-more-re-nightmare. What's gilberth's favourite way to do lookbehind and lookahead now?
[02:02:11] <sm2n> anyone familiar with distributed gc?
[02:03:20] <moon-child> nope, why?
[02:03:22] <hayley> I think the usual technique is to use reference counts. Sorry.
[02:03:51] <sm2n> dang
[02:04:04] <sm2n> I was curious if there was anything interesting there
[02:04:17] <sm2n> don't know anything about it, but "distributed" is catnip for me
[02:05:08] <moon-child> I think there has been some work done on it, but I don't know of any references to it
[02:05:17] <moon-child> and yeah I have the impression that rc is common
[02:05:28] <hayley> moon-child: "any references to it" :|
[02:05:33] <hayley> Must all be garbage then.
[02:05:33] <moon-child> lol
[02:05:36] <sm2n> lol
[02:05:54] <sm2n> maybe it references itself
[02:06:55] <hayley> However, I think the Train/MOS algorithm has been used for distributed GC. 
[02:07:18] <hayley> https://cs.adelaide.edu.au/~idea/idea4/final/ron/ron.htm
[02:07:20] -ixelp- DistGC
[02:08:31] <sm2n> cool, will read, thanks
[02:09:02] <sm2n> tangentially, we discussed finalizers a while back, and I actually ran into an issue with them recently
[02:10:07] <sm2n> I was writing some awful code, which was "event-driven", by which I mean that objects can register callbacks on other objects that get called when the other object does stuff
[02:10:52] <sm2n> I was thinking about using finalizers to clean this up, but of course it doesn't work, as the callbacks store a reference to the original object, making them always reachable
[02:11:32] <sm2n> I suppose the "solution" in making the callback closures have weak references to the original object in their environment, or something like that
[02:11:39] <sm2n> s/in/is/
[02:14:21] <sm2n> Is there even a way to mark some closed-over reference as weak? I think I've only seen weak hashtables in practice
[02:14:45] <hayley> You can make weak pointer objects.
[02:15:49] <sm2n> Could you point me at any implementation that lets you do that? It makes sense, and I'd like to see how it looks in practice
[02:16:17] <sm2n> oh, I see sbcl has them
[02:16:28] <moon-child> trivial-garbage does it semi portably iirc
[02:16:46] <hayley> It's in trivial-garbage IIRC.
[02:17:30] <moon-child> bridge lag getting bad? :P
[02:17:45] <hayley> Maybe.
[02:18:09] <SAL9000> Duuqnd: would you be able to run the IRC-Twitch forwarding bot again this year? We haven't had a chance to figure out how to run it ourselves, unfortunately.
[02:18:25] <moon-child> sm2n: see, this is what happens when you try to distributed?
[02:18:32] <moon-child> s/?/!/
[02:19:03] <sm2n> heh, you got me
[02:19:05] <hayley> s/!/‽/
[02:19:20] * hayley 's laptop crashed after sending "Maybe."
[02:30:04] <hayley> https://www.youtube.com/watch?v=_lyTT-gdt1k
[02:30:05] -ixelp- Expired Macaroni Salad Sausage - YouTube
[02:32:58] <hayley> moon-child: We both Agner-posted. But I think that person thought you wanted to represent a 64-bit int by 3(?) doubles...somehow, based on their response to me.
[02:33:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[02:35:41] *** Joins: aeth (~aeth@user/aeth)
[02:42:06] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:28eb:5eb2:696a:77a)
[03:10:15] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[03:21:37] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 250 seconds)
[04:16:50] <SAL9000> Duuqnd: Looks like I have a solution for the relaying issue :-)
[04:25:48] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:28eb:5eb2:696a:77a) (Remote host closed the connection)
[04:29:44] *** Joins: X-Scale` (~ARM@46.50.5.55)
[04:30:12] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[04:30:13] *** X-Scale` is now known as X-Scale
[04:34:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[04:35:43] *** Joins: Lycurgus (~juan@98.4.112.204)
[04:36:48] *** Joins: aeth (~aeth@user/aeth)
[04:43:45] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (Remote host closed the connection)
[04:44:35] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[04:54:11] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[04:56:07] <hayley> https://www.youtube.com/watch?v=c0HoIqIT39Y
[04:56:08] -ixelp- Pink Floyd Fans - YouTube
[05:01:57] *** White__Flame is now known as White_Flame
[05:13:17] <moon-child> hayley: do you know if associative hash mixing functions are a thing?
[05:13:41] <hayley> I don't know too much about constructing hash functions, no.
[05:24:37] <hayley> "I didn't know we were trying to represent 64-bit integers with 64-bit floats" "I mean this whole thread is about implementing integers as floats" ??
[05:52:05] * hayley uploaded an image: (284KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/sVBwcNlSAHzyeunBEmSWnhxv/Screenshot_2022-03-21_13-18-45.png >
[06:05:40] *** Joins: dre (~dre@2001:8003:c932:c301:6340:c00d:1602:9f)
[06:05:52] *** Joins: Inline__ (~Inline@p200300cd470817006c1421c75266f737.dip0.t-ipconnect.de)
[06:08:13] *** Quits: Inline (~Inline@p200300cd473cb900eebf25766a02ea81.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:12:54] <moon-child> cons should not cons its arguments, part for: th
[06:14:13] <hayley> Done already: "Linear Logic and Permutation Stacks--The Forth Shall Be First"
[06:30:38] <kakuhen> i just learned the hard way sbcl doesnt run on windows 7
[06:30:56] <kakuhen> so i wasted time making a windows vm to retest an emacs+sly setup
[06:31:09] <kakuhen> all because my friend's too stubborn to move on to 11
[06:31:42] <hayley> welp
[06:31:45] *** Joins: Inline (~Inline@p200300cd4709f600befffe6df48235ec.dip0.t-ipconnect.de)
[06:32:08] <kakuhen> i like 11 in particular because wsl with graphical software actually works
[06:32:31] <kakuhen> then in person when i saw emacs stay within a tty...i decided "ok let me see if i can get xwindows working"
[06:33:15] <kakuhen> i found some guides online and they're probably longer than the arch linux install guide lol
[06:33:22] *** Quits: Inline__ (~Inline@p200300cd470817006c1421c75266f737.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:33:54] <kakuhen> so i decided to avoid trying that and just run emacs natively on windows... all fine until I ran sbcl and it couldnt find some function inside some DLL
[06:34:33] <kakuhen> i set up a windows 7 vm under the assumption "if i can get it working here then i hope 10 behaves identically"
[06:35:10] <kakuhen> oh well, time to suffer with WSL, again. finding the path to init.el was already hellish on native windows
[06:39:18] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[06:42:45] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[06:45:39] <gilberth> Why isn't it custom that source files have something like a title. It's very rare they say what they actually try to do.
[06:46:50] <kakuhen> people don't realize that things obvious to them may not be obvious three months from now
[06:47:13] <kakuhen> let alone, may not be obvious to other people at all
[06:48:46] <gilberth> Perhaps.
[06:49:15] <moon-child> I have heard people say that a lot, but don't really get it.  If I haven't looked at a project in a while, it might take me a bit of time to figure out how things fit together, but then I generally have no trouble figuring out what does what and why
[06:49:27] <kakuhen> key word: obvious
[06:49:37] <kakuhen> of course you can eventually figure it out given enough time, it's your own code
[06:49:41] <moon-child> _sometimes_ I have no idea what something is supposed to do, but that's just as likely to happen on something I wrote 5 minutes ago
[06:50:08] <moon-child> kakuhen: I mean, once I'm back in the headspace of the project, all the pieces generally make immediate sense, or close to
[06:50:15] <kakuhen> in any case, i think the other, more important factor would be the fact that documentation is a chore
[06:50:30] <kakuhen> i used to provide top level comments in my source files indicating what the entire file attempted to provide
[06:50:42] <kakuhen> then i stopped for some reason 
[06:51:02] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[06:51:06] <moon-child> j source has such comments
[06:51:11] <gilberth> All I am ask about is a single title line. Like "Reading foobaz files".
[06:51:20] <moon-child> which is nice considering it's otherwise somewhat obfuscated at times
[06:51:21] <hayley> https://www.youtube.com/watch?v=IGD8rd5LjHY
[06:51:22] -ixelp- Thanks But No Thanks - YouTube
[06:51:30] <hayley> It's also J source.
[06:51:31] <kakuhen> gilberth: i think in that case, people try to convey that with the filename (and probably fail at doing so)
[06:52:07] <kakuhen> that is largely why i stopped writing top-level comments for my own files, at least
[06:52:25] <gilberth> Well, they don't call it read_foobaz.c but rather reader.c. Useful.
[06:53:56] <gilberth> Anyhow, my files carry a "Title:" line. As well as an "Author", "Date:", and "License:" line. I have a macro for that.
[06:54:29] <gilberth> I usually start with that. And writing the title line and section names is the very first step in thinking about what you want to do.
[06:55:30] <kakuhen> hayley: btw i somehow stumbled on you linking one of alan kay's talks in #lisp on leenode years ago
[06:55:45] <kakuhen> i wonder how lispers take his rant about the MOP textbook
[06:56:15] <moon-child> I thought alan kay liked amop?
[06:56:22] <kakuhen> he likes what the text exposes about objects, but strongly dislikes the huge barrier to entry (i.e. the fact you need to be reasonably well-versed in lisp to appreciate the text)
[06:58:08] <kakuhen> er rather than appreciate, i guess to understand the examples in the text
[06:58:59] <moon-child> https://pbs.twimg.com/media/FOU2GHQXsAkqyPQ.jpg
[07:03:01] <semz> argh
[07:03:28] <kakuhen> ok I found the segment: 54:00 in https://www.youtube.com/watch?v=oKg1hTOQXoY
[07:03:28] -ixelp- Alan Kay at OOPSLA 1997 - The computer revolution hasnt happened yet - YouTube
[07:03:42] <kakuhen> "why the hell did you write it in such a lisp-centric, closed-club kind of way?"
[07:27:33] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[07:34:30] *** Joins: semz_ (~semz@user/semz)
[07:37:01] *** Quits: semz (~semz@user/semz) (Ping timeout: 245 seconds)
[07:42:10] <ck_> "the oop community" o_O
[08:09:57] *** semz_ is now known as semz
[08:14:12] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[10:01:43] *** Joins: shka (~herr@109.231.3.55)
[10:30:25] <kakuhen> oop mafia, the owners of cl-mafia and related communities
[10:30:39] <kakuhen> also i still havent gotten emacs to work properly on windows
[10:31:05] <kakuhen> err windows 10 that is
[10:31:17] <kakuhen> windows 10 is a fucking dumpster fire compared to 11
[10:40:47] <SAL9000> kakuhen: I've heard something about native x11 being a thing on a sufficiently up-to-date woe10
[10:51:25] *** Quits: dre (~dre@2001:8003:c932:c301:6340:c00d:1602:9f) (Ping timeout: 240 seconds)
[10:54:28] <kakuhen> it is there on windows 11, however
[10:54:29] <kakuhen> well, im running the latest windows 10, and it's not there.
[10:55:07] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 250 seconds)
[11:09:54] <SAL9000> :(
[11:36:29] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[11:37:12] <hayley> https://www.youtube.com/watch?v=OxfSC9GybPA
[11:37:12] -ixelp- Frame By Frame - YouTube
[11:41:49] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:57:11] *** Joins: random-nick (~random-ni@87.116.176.196)
[12:43:50] <hayley> https://www.twitch.tv/elsconf ELS
[12:43:50] -ixelp- Twitch
[12:47:24] *** Joins: lisp123 (~lisp123@143.238.164.103)
[12:48:35] <Gnuxie> ahh
[12:48:38] <Gnuxie> a pleasant surprise 
[12:59:35] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:01:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:15:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:16:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:26:18] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:30:13] <hayley> I wonder where the magic compiler that does Futamura projections is.
[13:30:27] <hayley> *magic C compiler, to be specific
[13:33:27] *** Joins: makomo (~makomo@user/makomo)
[13:33:39] <moon-child> graal sulong?
[13:33:47] <hayley> Very funny.
[13:34:15] <hayley> I mean that the C compiler has to convert an interpreter (CPython) to a compiler. So, second projection.
[13:34:56] <moon-child> I mean
[13:35:03] <moon-child> sulong lets you interop with java apis, no?
[13:35:07] <hayley> Context was that some Python program was slower when translated to Julia, because the latter couldn't "predict types" and isn't good with boxing. But neither is CPython, and it interprets too.
[13:35:17] <moon-child> so wouldn't that let you add truffle instrumentations to cpython?
[13:35:52] <hayley> idk, I haven't tried. But I thought Sulong used Graal to compile LLVM code. Whereas this would be more like PyPy generating a compiler from an interpreter.
[13:37:08] <moon-child> yeah, it compiles llvm.  But it compiles that llvm bc to jvm bc.  And doesn't truffle generate compilers from jvm bc interpreters?
[13:37:23] <hayley> That's an interesting point.
[13:39:58] <hayley> Still not exactly "CPython goes in, PyPy comes out", as I thought was initially implied, but it'd be an impressive feat still.
[13:47:40] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[13:54:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:55:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:59:42] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[14:00:32] *** Joins: Lycurgus (~juan@98.4.112.204)
[14:03:07] *** Quits: Lycurgus (~juan@98.4.112.204) (Client Quit)
[14:03:37] *** Joins: Lycurgus (~juan@98.4.112.204)
[14:09:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:11:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:15:33] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[14:24:39] <hayley> https://blog.bracha.org/illiterateProgramming/out/illiterateProgramming.html
[14:24:40] -ixelp- Illiterate Programming
[14:33:33] <moon-child> the pbr book was a literate program
[14:33:38] <moon-child> I thought that was cool
[14:33:51] <moon-child> (well ... still is)
[14:34:27] *** Joins: razetime (~quassel@117.193.0.187)
[14:35:01] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[14:38:39] <hayley> This problem in the current ELS talk appears almost verbatim in https://youtu.be/arMH5GjBwUQ?t=754
[14:38:40] -ixelp- Gerald Jay Sussman: The Role of Programming (Dan Friedman's 60th Birthday) - YouTube
[14:39:08] <pjb> Yes.
[14:39:31] <pjb> It's good that ideas are spreading.
[14:41:27] <hayley> David Byrne said it better than I could. "Say something once, why say it again?"
[15:02:03] <hayley> moon-child: Bracha doesn't really disagree with literate programming in the article, but he pulls out "live literate programming" where you have object inspectors and all that stuff embedded in the document. But I have to wonder how you would have less of a "document", as you approach more of a live system.
[15:02:36] <moon-child> there are 'notebooks'
[15:03:35] <moon-child> which seem to try to strike a middle ground
[15:04:02] <hayley> Sure. But IME the output of running code in notebooks is pretty boring, and is basically the output of PPRINT + whatever is written to standard output. Whereas the system presented is closer to CLIM presentations, or an object inspector (well, it literally is embedding the Newspeak inspector in code).
[15:05:06] <hayley> And how well does a linear story work with inspection? You might play around and work out one way, but the rest of the document pushes you another way. There might not be a good solution for that, since you can always come up with another path the author didn't imagine.
[15:06:07] <hayley> It shows that it's a dead transcript, rather than a conversation. But, again, I wouldn't be disappointed if getting "a conversation" degenerates to general AI and is impossible.
[15:10:47] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:35:28] <SAL9000> hayley: at the very least it'd take something more like a wiki than a book, lots of cross-references rather than The One True Reading Order(tm)
[15:35:37] * hayley nods
[15:40:45] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:a55f:87a8:b61f:d57b)
[15:43:15] *** Quits: razetime (~quassel@117.193.0.187) (Ping timeout: 256 seconds)
[15:43:37] *** Joins: razetime (~quassel@117.254.35.71)
[15:57:30] <ck_> do notebooks strike the middle ground first, and harder, and with no mercy?
[16:22:50] *** Joins: notzmv (~zmv@user/notzmv)
[16:35:54] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[16:36:20] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[16:37:49] *** Joins: makomo (~makomo@user/makomo)
[16:39:40] *** Joins: phantomics (~phantomic@71-218-229-123.hlrn.qwest.net)
[17:09:19] *** Joins: lisp123 (~lisp123@143.238.164.103)
[17:13:37] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 240 seconds)
[17:20:32] <sm2n> this els talk is pretty funny
[17:20:40] <sm2n> RPC via unix filesystem
[17:21:00] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[17:30:10] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:36:57] <ck_> you're saying I should've taken a vacation and watched them? sad face emoticon
[17:38:26] <semz> will they not be recorded?
[17:40:30] <ck_> I don't know, but from the fact that "online participation" tickets were sold for 50 eur (iirc), I think recordings won't be freely available
[17:40:49] <pjb> ck_: but you can assit for free on twitch! https://www.twitch.tv/elsconf
[17:40:50] -ixelp- Twitch
[17:44:31] *** Quits: Brucio-61 (~Brucio-21@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:46:11] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[17:55:13] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:59:09] <ck_> oh ok I didn't know that. thanks.
[18:00:29] <ck_> what did those online tickets get you then? I don't understand
[18:01:48] <SAL9000> ck_: as Didier stated in his email to the mailing list, we never wanted to have paid online attendance in the first place
[18:01:55] *** Joins: Lycurgus (~juan@98.4.112.204)
[18:05:22] <ck_> I see
[18:06:12] <ck_> and just in time for mgrs talk, nice. thanks again pjb 
[18:15:29] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[18:26:51] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[18:30:07] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[18:31:19] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[18:39:27] <lagash> moon-child: PBR book?
[18:40:11] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[18:40:49] <sm2n> https://www.pbrt.org/
[18:40:50] -ixelp- Physically Based Rendering: From Theory to Implementation
[18:42:10] <lagash> Ah yes, been meaning to go through that sometime..
[18:42:38] *** Joins: makomo (~makomo@user/makomo)
[18:52:07] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:a55f:87a8:b61f:d57b) (Remote host closed the connection)
[18:52:22] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:05:47] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:10:12] *** Joins: Brucio-61 (~Brucio-21@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[19:11:14] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[19:35:00] *** Joins: notzmv (~zmv@user/notzmv)
[19:52:09] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[20:01:08] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[20:12:18] *** Quits: rogersm_ (~rogersm@90.166.180.250) (Read error: Connection reset by peer)
[20:12:53] *** Joins: rogersm (~rogersm@90.166.180.250)
[20:13:04] *** Joins: shka (~herr@109.231.3.55)
[20:13:44] *** Joins: Catie (~user@user/catie)
[20:19:19] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Remote host closed the connection)
[20:25:27] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[20:27:01] *** Quits: phantomics (~phantomic@71-218-229-123.hlrn.qwest.net) (Quit: Ex-Chat)
[20:35:40] *** Quits: razetime (~quassel@117.254.35.71) (Ping timeout: 268 seconds)
[20:44:29] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[20:44:43] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[20:53:51] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[21:03:26] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[21:16:01] *** Quits: rogersm (~rogersm@90.166.180.250) (Read error: Connection reset by peer)
[21:21:16] *** Joins: rogersm (~rogersm@90.166.180.250)
[21:25:39] *** Quits: rogersm (~rogersm@90.166.180.250) (Read error: Connection reset by peer)
[21:25:52] *** Joins: rogersm (~rogersm@90.166.180.250)
[22:00:14] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:01:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[22:10:06] *** Joins: notzmv (~zmv@user/notzmv)
[22:14:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:16:52] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[22:16:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:41:47] *** Joins: Oddity (~Oddity@user/oddity)
[22:42:04] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[22:42:27] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[22:48:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[22:56:23] *** Joins: christophergray (~christoph@186.151.84.243)
[23:04:15] *** Quits: christophergray (~christoph@186.151.84.243) (Quit: WeeChat 3.4.1)
[23:06:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:09:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:12:35] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:30:39] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[23:58:57] *** Joins: CrashTestDummy (~CrashTest@ool-ad020ec7.dyn.optonline.net)
