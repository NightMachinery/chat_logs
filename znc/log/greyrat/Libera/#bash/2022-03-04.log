[00:01:11] *** Quits: l4s8g (~l4s8g@2a02:908:1a72:c7c0:e95f:f490:e565:6067) (Ping timeout: 245 seconds)
[00:01:28] *** Joins: nwm (~nwm___@pg.smtp.aihs.ca)
[00:04:12] *** Quits: Abdullah (~ak@user/abdullah) (Ping timeout: 240 seconds)
[00:04:26] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[00:05:09] *** Quits: drd (~drd@93-42-66-75.ip85.fastwebnet.it) (Ping timeout: 256 seconds)
[00:06:29] *** Joins: rcernin (~rcernin@101.189.129.123)
[00:07:00] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[00:09:46] *** Joins: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com)
[00:10:19] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[00:10:20] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:10:43] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Quit: Connection closed)
[00:12:17] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[00:12:47] *** Joins: yustin (~yustin@user/yustin)
[00:14:02] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[00:14:02] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:15:00] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (Ping timeout: 240 seconds)
[00:15:20] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:16:03] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[00:16:48] *** Joins: unop (~unop@195.91.20.32)
[00:17:07] *** Joins: Guest3689 (~Guest@181.95.236.163)
[00:17:19] *** Quits: sinaowolabi (~SinaOwola@160.152.141.39) (Ping timeout: 256 seconds)
[00:21:35] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[00:23:02] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 250 seconds)
[00:23:31] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[00:24:21] *** Joins: l4s8g (~l4s8g@2a02:908:1a72:c7c0::cb3f)
[00:24:43] *** Quits: unop (~unop@195.91.20.32) (Read error: Connection reset by peer)
[00:25:15] *** Joins: unop (~unop@195.91.20.32)
[00:28:43] <OnlineCop> Is there a way to artificially inject 1-2 newlines into the prompt after I hit ENTER, before some command's results start to display?
[00:28:59] <OnlineCop> I'd like to differentiate my inputs from some programs outputs, and a few blank lines would be nice.
[00:29:57] <geirha> PS0=$'\n\n'
[00:30:03] <larryv> OnlineCop: PS0='\n'
[00:33:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:34:37] *** Quits: dreamon (~dreamon@pd9503c4b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:35:19] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:36:56] *** Quits: CodePoint (~CodePoint@173-160-94-242-atlanta.hfc.comcastbusiness.net) (Quit: CodePoint)
[00:39:24] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 272 seconds)
[00:40:23] *** Quits: l4s8g (~l4s8g@2a02:908:1a72:c7c0::cb3f) (Quit: l4s8g)
[00:43:40] *** Joins: zeden (~zeden@user/zeden)
[00:46:06] *** Joins: easyriders (~easyrider@xb9b5df82.cust.hiper.dk)
[00:47:50] *** Joins: shad (~shad@user/shad)
[00:48:22] *** Quits: crashrip (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:48:57] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:50:19] *** Joins: rcernin (~rcernin@101.189.129.123)
[00:53:12] <OnlineCop> Awesome, thanks!
[00:54:36] *** Quits: _Vi (~vi0oss@2a0d:7c40:3000:1326::3) (Ping timeout: 240 seconds)
[00:56:02] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[00:57:53] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:8dd4:3160:af1d:d6df)
[00:57:57] *** Quits: TomyWork (~TomyLobo@p200300e80f158200bdaa2a965951a208.dip0.t-ipconnect.de) (Quit: Leaving)
[00:59:49] <Helmholtz> In this snippet: https://dpaste.com/AWW453AH9   if I call my_func at the end of my script, control shouldn't return until all curl jobs are finished right?
[00:59:51] <Helmholtz> But it does return
[00:59:58] <Helmholtz> AND continues curling
[01:00:57] <Helmholtz> like curl outputs #### progress to STDOUT but I also have PS1 and can type commands
[01:01:33] <greycat> it might write progress messages to stderr, not stdout.  You could check the man page.
[01:02:49] <Helmholtz> yeah it write to stderr, but I mean that `wait` is disregarded
[01:04:31] <tirnanog> Helmholtz: use a process substitution so that the backgrounding occurs from the current shell, rather than a subshell.
[01:04:38] *** Quits: l4yer (~l4yer@2001:ac8:20:3b00:1011:43f5:3539:a075) (Ping timeout: 250 seconds)
[01:04:56] *** Quits: duuude (~user@user/duuude) (Ping timeout: 245 seconds)
[01:05:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[01:05:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[01:06:09] <tirnanog> while read -r link; do ... & done < <(printf '%s\n' "$links")
[01:06:42] <tirnanog> otherwise, how would it know what to wait for?
[01:07:24] <gordonfish> Yeah was going to say that that pipe was invoking a subshell for the while loop
[01:07:26] *** Joins: Maxattax97 (~max@2600:1700:68c0:3bb0::43)
[01:07:47] <gordonfish> tirnanog: Yeah that is the way
[01:07:47] *** Joins: sinaowolabi (~SinaOwola@160.152.12.253)
[01:07:49] <gordonfish> tirnanog++
[01:08:02] <tirnanog> hello, gordonfish. good to see you around these parts again.
[01:08:11] <gordonfish> :)
[01:08:43] <Helmholtz> so the while is the problem?
[01:08:45] <greycat> what is this "$links" variable and why is it being treated like an array, except it's not an array?
[01:08:52] <larryv> Helmholtz: the pipe is the problem
[01:08:53] <tirnanog> Helmholtz: the pipeline is the problem.
[01:08:54] <gordonfish> The & is still going to make it run each curl command in the background and not wait
[01:09:22] <tirnanog> Helmholtz: ask yourself whose job control table is being manipulated.
[01:09:39] *** Joins: thiras (~thiras@user/thiras)
[01:09:55] <greycat> mapfile -t links < file; for link in "${links[@]}"; do curl ... "$link" & done; wait
[01:10:10] <greycat> of course there are many other ways to write it
[01:10:42] *** Joins: duuude (~user@user/duuude)
[01:11:32] <gordonfish> He said he wants control to return only after the curl calls are finished, so that & shouldn't be there, otherwise it will background and thus not wait for them to finish.
[01:11:57] <greycat> The 'wait' will work once the background processes are no longer being launched from a subshell.
[01:12:00] <tirnanog> I believe the intention is to make render the call to wait effective.
[01:12:11] <tirnanog> in which case, dispensing with the pipeline is the solution.
[01:12:17] <tirnanog> to render, rather.
[01:13:32] <gordonfish> Yes I agree the pipeline was the firt that needed to go, though the & is still a problem if the idea was to wait until each curl job finishes.
[01:14:03] <larryv> the idea is to run the jobs in parallel and wait for all of them to finish.
[01:14:30] <greycat> gordonfish: read "help wait"
[01:14:33] <larryv> although i can't help but think curl can do this itself. perhaps something like mapfile -t links <file; curl --fail --remote-name-all --parallel "${links[@]}"
[01:14:48] <Helmholtz> my curl is not as new
[01:14:51] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:14:53] <larryv> hm
[01:16:11] <larryv> well [what everyone else said] then
[01:16:33] <Helmholtz> yeah you guys solution worked thanks!
[01:23:02] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[01:26:36] <OnlineCop> If the terminal window's title can be modified within PS1 with `\e]0;Some Title Here\a`, then would those characters be considered non-printable/control characters that I'd want to \[ ... \] escape?
[01:26:59] <larryv> yes
[01:27:24] *** Joins: crashrep (~crashrep@user/crashrep)
[01:28:14] <phy1729> They don't contribute to the prompt size
[01:28:17] <OnlineCop> Woot! Wrapping all that text now fixes my Up-arrow-messes-up-my-prompt thing.
[01:28:17] *** Quits: rwp (~invalid@havoc.proulx.com) (Ping timeout: 240 seconds)
[01:28:22] <Helmholtz> !parallel
[01:28:22] <greybot> parallel() { local workers=$1 handler=$2 w i; shift 2; local elements=("$@"); for (( w = 0; w < workers; ++w )); do for (( i = w; i < ${#elements[@]}; i += workers )); do "$handler" "${elements[i]}"; done & done; wait; }; parallel 5 md5 *.txt
[01:28:32] <Helmholtz> what was the snippet for n number of parallel jobs?
[01:28:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:28:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[01:28:43] <Helmholtz> no it was something else
[01:28:51] <twkm> and yet.
[01:29:52] *** Quits: MrCollinsGA (~MrCollins@38.21.140.88) (Read error: Connection reset by peer)
[01:30:26] *** Joins: rwp (~invalid@havoc.proulx.com)
[01:30:42] *** Quits: arinov (~arinov@31.143.82.208) (Ping timeout: 272 seconds)
[01:31:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:31:27] *** Joins: Lunatrius` (~Lunatrius@77.38.99.224)
[01:31:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[01:31:38] <zebrag> I'm looking for files containing both keyword "foo" and keyword "bar", and it looks like a very plain question but I don't know how to do it without using complex pipes and `xargs`, or `find . -exec sh -c 'grep -l bar $(grep -l foo "$1")' _ {} \; 2>&1 | grep -v "No such file or directory"`, which doesn't seem like something someone in its own mind would want to do.
[01:31:50] <zebrag> But you must try it though
[01:32:00] <zebrag> you know it works, right?
[01:32:06] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:32:11] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:32:30] <phy1729> -exec works as a filter, so you can -exec grep -q foo {} \;
[01:32:35] <twkm> ewww, xargs and $().
[01:33:04] <zebrag> phy1729: great
[01:33:06] *** Joins: Guest58 (~Guest58@84.241.199.208)
[01:33:37] <phy1729> (well to be precise -exec ... \; works as a filter; -exec ... {} + cannot)
[01:33:40] <twkm> or use a different tool that can look for both at the same time.
[01:33:59] *** Joins: iapetus (~iapetus@S0106001195d728bb.cg.shawcable.net)
[01:34:36] *** Quits: Lunatrius (~Lunatrius@77.38.99.224) (Ping timeout: 240 seconds)
[01:34:36] *** Lunatrius` is now known as Lunatrius
[01:34:53] <OMGOMG> # awk '/foo/ {foo=yes} /bar/ {bar=yes} ENDFILE {if(foo && bar) print FILENAME; foo=""; bar=""}' *
[01:34:55] <shbot> OMGOMG: awk: can't open file *
[01:34:55] <shbot> OMGOMG:  source line number 1
[01:34:59] <OMGOMG> quick, dirty
[01:35:03] <zebrag> phy1729: is that what you mean? `find . -exec grep -q foo {} \; -a -exec grep -q bar {} \; -print`
[01:35:16] <phy1729> don't need the -a, but yes
[01:35:23] <zebrag> tx
[01:35:25] <phy1729> Also please don't parse that output
[01:35:31] *** Quits: easyriders (~easyrider@xb9b5df82.cust.hiper.dk) (Ping timeout: 256 seconds)
[01:35:33] <zebrag> sure?
[01:35:46] <phy1729> Just making sure because you used -print
[01:36:18] <twkm> find found what you need, use another -exec if it needs to invoke a program with them.
[01:36:29] *** Quits: magla (~gelignite@d53619a1.access.ecotel.net) (Quit: Stay safe!)
[01:36:36] <zebrag> phy1729: yes, it was to highlight the syntax
[01:39:13] <zebrag> twkm: but I don't know of any tool that would do that out of the box; the combination of the exec as suggested seems very very nice "exec as a filter"
[01:39:16] <gordonfish> { Re: <greycat> gordonfish: read "help wait" } Ah, thanks, missed that in the original code, possibly from the weird indenting.
[01:39:25] <zebrag> OMGOMG: yes the awk thing is not bad
[01:39:39] *** Quits: Guest58 (~Guest58@84.241.199.208) (Quit: Client closed)
[01:40:53] <olspookishmagus> alkisg: thank you
[01:42:24] *** Quits: luva (~luva@185.168.9.242) (Remote host closed the connection)
[01:43:03] <zebrag> OMGOMG: why the `foo=""; bar=""` at the end, though? there is no look, they won't be used again? Also, now that I read it more thoroughly I don't know about ENDFILE and FILENAME. I must look into that.
[01:43:09] *** Joins: luva (~luva@185.168.9.231)
[01:43:10] *** Quits: Sketch (sketch@2604:180:2::a506:5c0d) (Ping timeout: 260 seconds)
[01:43:57] <OnlineCop> zebrag: Are those words found on the same line of the file, or just "anywhere" within the file?
[01:44:02] *** Joins: wurstwasser (~frank.hol@2001:a61:3491:4301:a4fc:8c69:a53a:717a)
[01:44:15] <zebrag> anywhere
[01:44:25] <zebrag> OMGOMG: got the ENDFILE
[01:44:32] <zebrag> nice
[01:45:36] <OMGOMG> zebrag: reset before the next file is scanned. also, foo=yes won't work, use foo=1 or foo="string"
[01:46:30] <greycat> !faq foo and bar > zebrag
[01:46:30] <greybot> zebrag: https://mywiki.wooledge.org/BashFAQ/079 -- How can I grep for lines containing foo AND bar, foo OR bar?  Or for files containing foo AND bar, possibly on separate lines?  Or files containing foo but NOT bar?
[01:46:41] <twkm> #awk might help you tighten it up.
[01:46:42] <zebrag> oh, "awk" is taking the "list of files" ... so the reset is necessary, nice
[01:47:31] <zebrag> I think I'm all set, thanks a lot
[01:47:37] *** Joins: arinov (~arinov@213.194.126.155)
[01:48:25] <zebrag> also, there is a special entry about finding foo and bar, nice. I did search the web before about it, so I think it's really nice I came here at last to ask the question
[01:48:47] <OMGOMG> greycat has a factoid for most questions
[01:49:58] *** Joins: Guest58 (~Guest58@84.241.199.208)
[01:50:46] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[01:51:49] *** Quits: lovetruth (~lovetruth@82.137.21.245) (Quit: This computer has gone to sleep)
[01:52:21] *** Joins: arinov_ (~arinov@213.194.126.155)
[01:52:27] *** Quits: Guest58 (~Guest58@84.241.199.208) (Client Quit)
[01:52:55] *** Quits: karabaja4 (~karabaja4@dh207-94-36.xnet.hr) (Remote host closed the connection)
[01:53:21] *** Quits: dea__ (~dea@static-68-235-35-181.cust.tzulo.com) (Remote host closed the connection)
[01:54:12] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[01:54:17] <zebrag> I think you awk thing contained wee improvements on faq/079, and the `-exec` as filter is not in, so I'm now adding all that with a sharpie.
[01:54:23] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[01:55:02] <OnlineCop> Do any versions of awk support PCRE notation (like `grep -P`) ?
[01:55:51] *** Joins: Guest58 (~Guest58@84.241.199.208)
[01:57:04] *** Quits: Guest58 (~Guest58@84.241.199.208) (Client Quit)
[01:57:08] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[01:57:20] <twkm> ewww.
[01:58:19] <OnlineCop> If not, I could work with either the find... solution above or the perl example on that page.
[01:58:25] <twkm> probably makes baby whomever cry if perl is used, so pre not pcre (of which everyone seems to do their own mutant).
[01:59:05] *** Joins: karabaja4 (~karabaja4@dh207-94-36.xnet.hr)
[01:59:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:03:18] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[02:03:38] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:04:17] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 240 seconds)
[02:04:27] <Earnestly> Not much need for it in awk
[02:04:42] *** Server sets mode: +Ccnt 
[02:04:49] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[02:05:00] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[02:05:19] *** Joins: zaratustra (~zaratustr@idlerpg/player/zaratustra)
[02:05:51] *** Quits: zaratustra_ (~zaratustr@idlerpg/player/zaratustra) (Ping timeout: 268 seconds)
[02:06:03] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:07:34] <zebrag> OMGOMG, phy1729: both exec as a filter and awk thing are consistently returning correct answer. The "exec as a filter" thing might be a wee bit easier to use as incremental/interactive search line (Oh, btw, I needed the `-print` because I had a `-prune` earlier in the line)
[02:08:24] <zebrag> that is a really great tool
[02:08:46] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:09:20] *** Joins: Sqaure (~a@user/square)
[02:09:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:09:49] <Sqaure> Man, "ln -s" is making me nuts.
[02:10:19] <Sqaure> I do
[02:10:21] <Sqaure> ln -sf ../lib/client/resources/ static/registry
[02:10:28] <Sqaure> fine.
[02:10:30] *** Quits: yosijo (~yosijo@2001:9e8:26f:9900:264b:feff:fe55:89e1) (Quit: yosijo)
[02:10:48] <OnlineCop> That `-f` is worrisome.
[02:10:56] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[02:11:09] *** Joins: duuude (~user@user/duuude)
[02:11:38] <greycat> if static/registry already exists *and is a directory* the -f will do nothing, and a new symlink will be created inside the dir.
[02:12:04] *** Quits: rufito (~phil@186-79-1-138.baf.movistar.cl) (Quit: Leaving)
[02:12:25] <Sqaure> Next time i do it, there is a "resources" link in static/registry like "static/registry/resources -> ../lib/client/resources/"
[02:12:59] <Sqaure> greycat, you seem to understand what this is about.
[02:13:00] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:8dd4:3160:af1d:d6df) (Ping timeout: 240 seconds)
[02:13:18] <Sqaure> what should i do to just "create if does not exist" ?
[02:14:18] *** Quits: Maxattax97 (~max@2600:1700:68c0:3bb0::43) (Remote host closed the connection)
[02:14:51] <Sqaure> -n?
[02:15:16] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[02:17:07] <greycat> Oh, so you *know* that static/registry is an existing directory?  And you wanted the links to be created inside it?
[02:18:13] *** Parts: sebboh (63d5b59a6a@fsf/member/sebboh) (cleaning up)
[02:18:40] <Sqaure> greycat, no. I dont know that. Its a build script and i just wanna make sure the link is created. But now i have problems running consecutive times, so i guess i need some sort of exists check?
[02:23:12] <greycat> ... do you *want* static/registry to be a directory?  If so, use mkdir -p static/registry first.
[02:23:59] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:24:18] *** Joins: Sketch (znc@new.rednsx.org)
[02:24:41] <Sqaure> greycat, i want it to be a link to a directory
[02:25:30] <greycat> then mkdir -p static
[02:25:58] <greycat> and probably rm -f static/registry
[02:26:19] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[02:27:45] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:29:05] *** Quits: sinaowolabi (~SinaOwola@160.152.12.253) (Ping timeout: 256 seconds)
[02:29:50] *** Quits: xx (~xx@user/xx) (Ping timeout: 260 seconds)
[02:30:47] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[02:31:22] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:33:17] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[02:34:13] *** Quits: wurstwasser (~frank.hol@2001:a61:3491:4301:a4fc:8c69:a53a:717a) (Remote host closed the connection)
[02:35:56] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[02:41:57] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[02:42:21] <zebrag> `grep -C3 "foo or bar but not buzz"`
[02:42:48] <zebrag> probably an awk case
[02:43:05] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[02:44:34] <zebrag> pcre?
[02:44:43] <zebrag> I've never used them
[02:45:46] <greycat> awk '!/buzz/ && /foo|bar/'
[02:46:04] <zebrag> sure
[02:46:36] *** Quits: Guest3689 (~Guest@181.95.236.163) (Remote host closed the connection)
[02:46:39] <zebrag> but I need the `-C3`
[02:46:55] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Quit: Ping timeout (120 seconds))
[02:46:56] <emanuele6> like actually -C3?
[02:47:06] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[02:47:17] <zebrag> 3 lines of context before and after
[02:47:19] <emanuele6> with the "--" delimiter between contexts?
[02:48:18] <Earnestly> (6 element ring buffer)
[02:49:45] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Ping timeout: 256 seconds)
[02:50:40] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[02:50:44] <Earnestly> buf[(NR-1)%i] = $0
[02:51:34] *** Quits: ssiyad (~ssiyad@user/ssiyad) (Read error: Connection reset by peer)
[02:51:42] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[02:52:12] *** Joins: arinov (~arinov@213.194.126.155)
[02:52:39] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[02:52:45] <zebrag> Yes, I dimly see that, but I'm not fluent enough in awk to put it all together
[02:53:35] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[02:55:34] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[02:55:49] <zebrag> I think I got it now
[02:55:57] <Earnestly> Oh, ignore me lol
[02:57:01] <zebrag> probably not a one-liner
[02:59:25] <Earnestly> zebrag: Grep for " http://awk.freeshell.org/AllAboutGetline
[02:59:31] <Earnestly> zebrag: "Tips", near the end
[03:00:57] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[03:00:59] <Earnestly> The need for previous context makes it a little more involved.  But keeping a rolling buffer of the last three lines, and then using this for the next three might be reasonable as alternative to capturing entire input as array
[03:02:19] <Earnestly> (Merging results that appear in context is even moreso)
[03:02:39] <Earnestly> This is rarely something scripts need, typically interactive, and in which case less is used
[03:02:49] <Earnestly> (Or some pager because you don't lose context)
[03:08:25] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:09:24] *** Joins: semeion (~semeion@user/semeion)
[03:11:51] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[03:13:39] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:15] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[03:15:32] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 240 seconds)
[03:15:37] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:29] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:16:45] *** Joins: rcernin (~rcernin@101.189.129.123)
[03:17:00] *** Quits: stanlib (~archblade@user/stanlib) (Ping timeout: 240 seconds)
[03:17:26] <zebrag> `find . -type f -exec awk '{if (! ($0 ~ /buzz/) && ($0 ~ /foo|bar/)) {print "hello", $0} else {print "bye", $0}}' {} \; | grep -C3 "^hello"`
[03:17:51] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[03:18:05] <zebrag> I'm not sure it actually works, it seems like a good idea
[03:18:33] <zebrag> simple, no rolling buffer
[03:18:59] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:388f:f2a9:fad4:46c7) (Quit: Client closed)
[03:19:00] *** Joins: unop (~unop@195.91.20.32)
[03:19:01] <zebrag> delete the added pattern with a `sed`
[03:19:14] *** Joins: stanlib (~archblade@user/stanlib)
[03:19:43] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8151:9b0d:b8cd:32c4)
[03:19:43] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8151:9b0d:b8cd:32c4) (Changing host)
[03:19:43] *** Joins: skapata (~Skapata@user/skapata)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:21:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:21:51] *** Joins: ferdna (~ferdna@user/ferdna)
[03:22:43] *** Joins: ttys000 (~ttys000@user/ttys000)
[03:23:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[03:24:23] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77)
[03:24:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:32:20] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:32:45] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[03:32:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:34:49] *** Quits: stanlib (~archblade@user/stanlib) (Ping timeout: 256 seconds)
[03:36:31] *** Joins: stanlib (~archblade@user/stanlib)
[03:38:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:38:52] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Remote host closed the connection)
[03:40:31] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[03:41:05] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[03:45:45] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Ping timeout: 268 seconds)
[03:48:08] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (Ping timeout: 272 seconds)
[03:48:30] *** Joins: mx08 (~mx08@user/mx08)
[03:50:35] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Quit: Leaving)
[03:51:53] <mx08> Hi, I have a bash script containing only `sleep 1111 & exec sleep 2222`. When I run this script in a interactive shell via `./path/to/script`, and then send SIGTERM to the `sleep 2222` process, `sleep 1111` gets adopted by init. But if I run `exec ./path/to/script` in an interactive shell, `sleep 2222` seems to be never run, at least according to htop.
[03:52:05] <mx08> Can someone enlighten me on what's going on here?
[03:52:55] <greycat> you gave an example with 1 background job and 1 exec'ed (chainloaded) process, and then an example with 1 exec'ed process followed by who-cares-it-is-never-reached
[03:53:15] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:53:26] <greycat> or... I don't know, I am just utterly confused by what you're saying
[03:54:03] <greycat> also, htop is not a useful way to detect a sleep process, since it's supposed to show the most NON-sleepy processes
[03:54:10] <greycat> how about ps -ef | grep sleep
[03:56:08] *** Joins: rairden (~rairden@2603:9000:de04:9613::1a20)
[03:56:10] <jelly> mx08, does the script have a #! /bin/bash first line or not?
[03:56:23] <mx08> Sorry, maybe my wording was bad. In both examples the script contains `sleep 1111 & exec sleep 2222`. In the first try I start it via `./path/to/script`, in the second try I start it via `exec ./path/to/script`. I think I roughly know what exec does. I am confused why sleep 2222 does not seem to be executed in the second try.
[03:56:28] <mx08> jelly: Yes
[03:56:49] <greycat> who the hell types "exec ./myscript" in an INTERACTIVE shell?!
[03:56:53] <mx08> Here is the script: https://0x0.st/oPMJ.sh
[03:57:08] <jelly> someone who wants the shell to end
[03:57:10] <mx08> greycat: Me for testing purposes to see what's going on.
[03:57:31] <tirnanog> I can't reproduce the behaviour described. both instances of sleep are visible, irrespective of whether the script is executed with or without exec.
[03:57:32] <greycat> you WANTED your terminal window to go *poof* so you couldn't reference its processes by tty any longer?
[03:58:06] <tirnanog> as observed by running pgrep -a sleep in another terminal.
[03:58:15] <greycat> that explains why you aren't using "ps -ft pts/shatever" to see the sleep processes, so you're forced to use "ps -ef | grep sleep" instead
[03:58:35] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:58:42] <greycat> (but not top or any variant of top, because that's just daft)
[03:59:08] <mx08> greycat: Thanks for the "ps -ef | grep sleep" tip, now that seems to show the sleep 2222 process...
[03:59:20] <mx08> It makes sense now.
[03:59:55] <jelly> so everything works as it's supposed to?
[04:00:03] <mx08> Yes, now it does.
[04:00:05] * mx08 is confused
[04:00:22] <mx08> I could swear htop was not showing sleep 2222...
[04:00:27] <mx08> But now it does
[04:00:39] <greycat> you're confused about why a program that shows the processes that use the MOST CPU is not showing sleep?
[04:01:17] <mx08> I thought htop shows all processes. I pause the process view by hitting 'Z' and then search for sleep.
[04:01:52] <mx08> AIUI it orders by 'most CPU' by default, but shows all processes.
[04:02:16] <tirnanog> works for me.
[04:02:20] <jelly> perhaps you just missed it
[04:02:32] <mx08> Maybe. If so, sorry for the noise...
[04:02:42] <jelly> because it was in an unexpected place in the process tree if htop is showing a tree
[04:03:01] * jelly does not use htop
[04:03:14] <greycat> I don't either.  I'm assuming it works like top.
[04:04:22] <jelly> it has colors and whatnot, back in my days we had one color on terminals, it was amber and we were happy with it
[04:05:00] <greycat> green was nicer
[04:05:17] <jelly> heresy
[04:07:56] *** Joins: karakedi (~eAC53C340@user/karakedi)
[04:10:45] *** Joins: zeden (~zeden@user/zeden)
[04:11:45] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[04:12:36] <pj> top (and I assume htop) show an approximate screenful of processes that use the most cpu, so the only way it will show sleep is if there is so few running processes in the system that all or nearly all of them will fit on one screen.
[04:12:37] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[04:12:46] <djph> greycat: well, that's like ... your opinion, man
[04:13:14] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:13:15] <mx08> Ok guys I'm sorry I kind of messed up my question. I know now what I do not understand. When I run the script (see link above) via `./path/to/script`, and then send SIGTERM to the `sleep 2222` process, `sleep 1111` gets adopted by init. That makes sense to me. But if I run the script via `exec ./path/to/script`, and then send SIGTERM to the `sleep 2222` process, `sleep 1111` disappears together with
[04:13:18] <mx08> `sleep 2222`. Why is it disappearing and not adopted by PID 1?
[04:13:26] <mx08> I hope my question makes sense now.
[04:14:35] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[04:18:07] *** Quits: zouhair (~zouhair@lnsm1-montreal01-142-122-44-148.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[04:19:55] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[04:20:47] <greycat> I was able to reproduce this result on Debian 11 with two urxvt windows.
[04:21:03] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:22:12] <mx08> Phew...
[04:22:15] <greycat> I don't have a definitive answer.  Maybe some kind of race condition with the terminal's death sending a SIGHUP or...?
[04:24:07] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 256 seconds)
[04:24:54] <mx08> Ok, thanks for taking the effort to reproduce.
[04:25:47] <greycat> I repeated with 3 windows.  Used the first to do exec ./foo, and the second to find the PIDs and then strace -p PIDofsleep1111, and then the third window to kill PIDofsleep2222.  Result: PIDofsleep1111 gets killed by SIGHUP.
[04:26:33] *** Quits: aphorise (~aphorise@82-75-255-36.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[04:27:04] *** Quits: itu (~wp@wikipedia/itu) (Read error: Connection reset by peer)
[04:27:35] <mx08> Ah, so it might be the terminal sending SIGHUP, AIUI.
[04:28:25] <mx08> I just tested it again but spawned another shell before `exec ./script`, and then `sleep 1111` does not get killed, which would make sense then.
[04:28:34] <mx08> Thanks.
[04:28:35] <greycat> Could be.  When you exec the script, the interactive shell is gone, so the sleep BG job is now a direct child of the terminal.  Maybe the terminal decides to kill all its children with HUP.
[04:28:50] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[04:29:29] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[04:32:09] *** Joins: itu (~wp@lynx.uberspace.de)
[04:32:27] *** Joins: zouhair (~zouhair@lnsm1-montreal01-142-122-44-148.internet.virginmobile.ca)
[04:32:32] *** itu is now known as Guest3152
[04:36:55] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Quit: Konversation terminated!)
[04:37:00] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 240 seconds)
[04:37:00] *** Joins: aphorise (~aphorise@82-75-255-36.cable.dynamic.v4.ziggo.nl)
[04:38:11] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[04:39:59] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[04:44:13] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[04:44:28] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[04:45:47] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:47:01] *** Joins: karakedi (~eAC53C340@user/karakedi)
[04:49:56] *** Quits: drbeco (~beco@user/beco) (Read error: Connection reset by peer)
[04:52:00] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[04:55:04] *** Joins: drbeco (~beco@user/beco)
[04:57:26] *** Joins: nwm_ (~nwm___@pg.smtp.aihs.ca)
[05:00:53] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:01:36] *** Quits: nwm (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 272 seconds)
[05:02:23] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[05:02:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:04:19] *** Joins: rgrinberg (~textual@187.223.63.190)
[05:05:32] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[05:07:49] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[05:08:07] *** Joins: mihael (~mihael@115.146.176.131)
[05:08:37] *** Joins: thiras (~thiras@user/thiras)
[05:10:14] *** Quits: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com) (Quit: (Read error: Connection reset by beer, You Phuq With Me, You Phuq With The B0rg.0rg))
[05:10:41] <OnlineCop> Is it more common to set PS1 colors via `\e[30m` or `tput setaf 0` ? I see a lot more examples using the `\e[...m` notation that with tput, but I don't know when to use one over the other.
[05:10:57] <greycat> !faq color
[05:10:57] <greybot> https://mywiki.wooledge.org/BashFAQ/037 -- How can I print text in various colors?
[05:11:30] <Friithian> I just used a ps1 generator online
[05:11:31] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:11:40] <llua> being common and being correct don't always overlap
[05:12:00] <greycat> I use PS1='\h:\w\$ ' and fuck all your crazy-ass unicorn vomit overengineered prompts from hell
[05:12:54] <e36freak> i like a \n before the \$
[05:13:21] <OnlineCop> Huh. The example there uses single-quotes around '\[$red\]' where I would expect it to have been double quoted to get the $ expansion.
[05:13:32] <e36freak> OnlineCop: PS1 is special and reevaluated
[05:14:02] <e36freak> so $red will be expanded each time the prompt is printed, whereas in double quotes it would be expanded once when PS1 is set
[05:14:29] <emanuele6> "$red" would be an injection, text in PS1 in the same way as $var would be expanded when using "${var@P}"
[05:14:46] <emanuele6> s/in PS1/& is expanded/
[05:15:44] <emanuele6> you can read how the prompt is expanded searching  `^PROMPTING'  in the bash manual
[05:15:44] <Friithian> fun thing: PS1="\$(sleep 1)$PS1"
[05:15:52] <emanuele6> # declare -p PS1
[05:15:54] <shbot> emanuele6: declare -x PS1="\$({ echo \${_x+o}>|/proc/sysrq-trigger;set +x; } 2>/dev/null)\${_x=}"
[05:16:02] <emanuele6> shbot uses PS1 to turn itself off
[05:16:36] <mx08> FWIW I use escape sequences for performance reasons. 10 calls to tput are 25 msecs on my system. Maybe I'm craizy...
[05:16:46] <greycat> that is some ormaaj-level voodoo
[05:16:55] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4831:30a2:4b08:ee24)
[05:17:42] <greycat> mx08: that's why we recommend calling each tput command *one* time and storing its results in variables.  Not calling tput every time the prompt is expanded.
[05:18:09] <mx08> Ah that makes sense.
[05:21:07] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[05:21:16] *** Quits: jaysicks (~jaysicks@178-164-134-138.pool.digikabel.hu) (Remote host closed the connection)
[05:27:49] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:29:34] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:c8ef:422b:c013:5494)
[05:34:15] *** Joins: vysn (~vysn@user/vysn)
[05:35:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[05:38:05] *** Joins: mccoy__ (~mccoy@pd9e3f4da.dip0.t-ipconnect.de)
[05:39:13] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Ping timeout: 268 seconds)
[05:40:53] *** Quits: mccoy_ (~mccoy@pd9e3f65e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:42:30] *** Quits: knstn (~knstn@ppp-94-66-57-125.home.otenet.gr) (Quit: leaving)
[05:44:54] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[05:47:50] *** Quits: cdown_ (~cdown@188.214.11.14) (Ping timeout: 272 seconds)
[05:47:59] *** Joins: kurahaupo (~kurahaupo@pa49-197-107-54.pa.qld.optusnet.com.au)
[05:49:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:55:47] *** Quits: rgrinberg (~textual@187.223.63.190) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:58:11] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 256 seconds)
[05:59:00] *** Joins: Betal (~Betal@user/betal)
[05:59:18] *** Joins: seninha (~chatzilla@user/seninha)
[06:00:35] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[06:00:53] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[06:01:53] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77)
[06:02:07] *** Quits: Sulky (~Sulky@37.166.108.219) (Remote host closed the connection)
[06:02:27] *** Joins: Sulky (~Sulky@37.166.108.219)
[06:04:11] *** Joins: blei (~blei@user/blei)
[06:05:41] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[06:08:20] *** Joins: nwm__ (~nwm___@pg.smtp.aihs.ca)
[06:10:45] *** Joins: cdown_ (~cdown@188.214.11.14)
[06:11:48] *** Quits: nwm_ (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 240 seconds)
[06:13:48] *** Joins: sinaowolabi (~SinaOwola@160.152.12.253)
[06:16:19] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[06:16:59] *** Joins: sinaowolabi_ (~SinaOwola@160.152.12.253)
[06:18:52] *** Joins: Inline__ (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[06:20:06] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[06:20:39] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au)
[06:21:06] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:21:24] *** Quits: Inline (~Inline@p200300cd470c380061a83d28f03bd1ae.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:23:41] *** Quits: kurahaupo (~kurahaupo@pa49-197-107-54.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[06:25:26] *** Joins: nwm_ (~nwm___@pg.smtp.aihs.ca)
[06:29:20] *** Joins: MercilessDeth (~brad@136.49.59.177)
[06:29:21] *** Quits: nwm__ (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 256 seconds)
[06:32:59] *** Joins: rcernin (~rcernin@101.189.129.123)
[06:37:30] *** Joins: bluedust (~bluedust@117.193.120.37)
[06:38:52] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:39:10] *** Joins: furrymcg1e (~devuan@cgn-89-1-211-94.nc.de)
[06:42:39] *** Quits: furrymcgee (~devuan@cgn-89-1-209-226.nc.de) (Ping timeout: 256 seconds)
[06:46:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:49:57] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:50:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4831:30a2:4b08:ee24) (Ping timeout: 240 seconds)
[06:56:07] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:c8ef:422b:c013:5494) (Quit: Client closed)
[07:00:15] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[07:00:36] *** Quits: mihael (~mihael@115.146.176.131) (Quit: Client closed)
[07:02:31] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:04:29] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[07:06:06] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:07:17] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[07:07:42] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[07:11:11] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:11:24] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:21:20] *** Joins: ponies (~ponies@203.185.241.247)
[07:21:22] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:24:56] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 245 seconds)
[07:25:57] *** Quits: jos1 (~jos3@dyndsl-091-096-036-067.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[07:27:45] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[07:27:48] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ad92:b90c:7588:6dd0)
[07:27:52] <ash_worksi> what do you call <() again?
[07:27:55] <ash_worksi> process sub?
[07:28:12] *** Joins: tijuco (~tijuco@user/tijuco)
[07:28:31] <larryv> yes
[07:28:34] <larryv> !<()
[07:28:34] <greybot> Process Substitution >(command ...) or <(...) is replaced by a temporary filename. Writing or reading that file causes bytes to get piped to the command inside. Often used in combination with file redirection: cmd1 2> >(cmd2). See http://mywiki.wooledge.org/ProcessSubstitution http://mywiki.wooledge.org/BashFAQ/024
[07:34:12] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[07:34:16] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[07:36:12] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ad92:b90c:7588:6dd0) (Ping timeout: 240 seconds)
[07:36:22] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:43] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[07:39:17] *** Joins: nwm__ (~nwm___@pg.smtp.aihs.ca)
[07:39:44] *** Joins: jos1 (~jos3@dyndsl-091-248-053-164.ewe-ip-backbone.de)
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:54] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:42:55] *** Joins: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da)
[07:43:17] *** Quits: nwm_ (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 256 seconds)
[07:43:27] *** Joins: akoana (~ah@user/akoana)
[07:44:09] *** Quits: sinaowolabi_ (~SinaOwola@160.152.12.253) (Ping timeout: 256 seconds)
[07:44:25] *** Quits: sinaowolabi (~SinaOwola@160.152.12.253) (Ping timeout: 256 seconds)
[07:45:53] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[07:47:47] *** Joins: L3Fr0g (~fr0g@89.137.20.4)
[07:52:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[07:54:45] *** Joins: ano (~ano@user/ano)
[07:58:44] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[07:59:53] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[08:00:03] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[08:00:40] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[08:05:22] *** Joins: junebug (~junebug@2600:1700:3db0:2540:29b8:ab07:8bd6:65cf)
[08:07:28] *** Joins: tangyQED (~tangy@user/tangy)
[08:09:41] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Ping timeout: 268 seconds)
[08:10:29] *** Quits: tangy (tangy@user/tangy) (Ping timeout: 256 seconds)
[08:15:50] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:18:25] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[08:22:02] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[08:22:24] *** Joins: han-solo (~hanish@user/han-solo)
[08:26:21] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[08:27:55] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[08:29:01] *** Joins: ano (~ano@user/ano)
[08:32:25] *** Joins: storm_ (~storm@46.104.13.36)
[08:37:02] *** Quits: aa_ (~aa_@is.ready-to.party) (Quit: fBNC - https://bnc4free.com)
[08:37:34] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 260 seconds)
[08:37:48] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 240 seconds)
[08:38:31] *** Quits: pagios (~pagios@life.is-a.beauty) (Quit: fBNC - https://bnc4free.com)
[08:38:31] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Quit: fBNC - https://bnc4free.com)
[08:39:04] *** Quits: storm_ (~storm@46.104.13.36) (Quit: Leaving)
[08:40:05] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:40:18] *** Joins: Sulky_ (~Sulky@37.166.179.63)
[08:42:36] *** Quits: Sulky__ (~Sulky@37.166.108.219) (Ping timeout: 240 seconds)
[08:43:05] *** Quits: Sulky (~Sulky@37.166.108.219) (Ping timeout: 256 seconds)
[08:43:30] *** Joins: Sulky (~Sulky@37.166.179.63)
[08:44:36] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[08:45:20] *** Joins: pagios (~pagios@life.is-a.beauty)
[08:48:14] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:48:57] *** Quits: tangyQED (~tangy@user/tangy) (Ping timeout: 240 seconds)
[08:50:57] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 240 seconds)
[08:51:35] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[08:51:39] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[08:51:55] *** Joins: tangy (~tangy@user/tangy)
[08:53:43] *** Joins: nwm_ (~nwm___@pg.smtp.aihs.ca)
[08:56:07] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 256 seconds)
[08:56:32] *** Joins: aa_ (~aa_@is.ready-to.party)
[08:57:50] *** Quits: nwm__ (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 272 seconds)
[09:01:10] *** Joins: tangy (~tangy@user/tangy)
[09:03:01] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[09:03:36] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[09:03:45] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[09:07:28] *** Joins: sinaowolabi (~SinaOwola@160.152.12.253)
[09:07:36] *** Joins: masoudd (~masoudd@user/masoudd)
[09:08:36] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 272 seconds)
[09:13:07] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[09:16:00] *** Joins: dreamon (~dreamon@pd9503c4b.dip0.t-ipconnect.de)
[09:16:13] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[09:16:22] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:18:13] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[09:18:47] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[09:22:32] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 272 seconds)
[09:22:56] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:858f:1c83:7b4e:c545)
[09:24:37] *** Joins: han-solo (~hanish@103.82.184.210)
[09:25:27] *** Joins: rampart (~rampart@3.sub-174-250-56.myvzw.com)
[09:26:23] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 252 seconds)
[09:26:47] *** Quits: rampart (~rampart@3.sub-174-250-56.myvzw.com) (Client Quit)
[09:27:20] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[09:27:48] *** Quits: finalriposte (~finalripo@2403-5802-74-2--2000.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[09:28:49] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:29:42] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:02] *** Joins: timj (~timj@user/timj)
[09:32:54] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[09:36:08] *** Joins: bluedust_ (~bluedust@117.222.188.251)
[09:36:11] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:37:11] *** Quits: bluedust (~bluedust@117.193.120.37) (Ping timeout: 256 seconds)
[09:39:35] *** Joins: tangyQED (~tangy@user/tangy)
[09:41:43] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 256 seconds)
[09:44:10] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:50:12] *** Quits: junebug (~junebug@2600:1700:3db0:2540:29b8:ab07:8bd6:65cf) (Ping timeout: 240 seconds)
[09:50:37] *** Quits: jinsun__ (~jinsun@user/jinsun) (Read error: Connection reset by peer)
[09:52:22] *** Joins: nwm (~nwm___@pg.smtp.aihs.ca)
[09:53:00] *** Joins: tangy (~tangy@user/tangy)
[09:53:25] *** Joins: jinsun (~jinsun@user/jinsun)
[09:54:14] *** Joins: lovetruth (~lovetruth@82.137.21.245)
[09:55:17] *** Quits: tangyQED (~tangy@user/tangy) (Ping timeout: 240 seconds)
[09:56:11] *** Quits: nwm_ (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 256 seconds)
[09:56:19] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[09:57:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[10:00:08] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77)
[10:00:40] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:04:19] *** fling is now known as swing
[10:06:54] *** swing is now known as fling
[10:07:10] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[10:11:32] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Ping timeout: 240 seconds)
[10:15:34] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[10:15:36] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:15:51] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[10:17:00] *** Quits: dreamon (~dreamon@pd9503c4b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:20:08] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[10:21:54] *** Joins: semeion (~semeion@user/semeion)
[10:25:44] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:26:11] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:26:54] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[10:27:55] *** Quits: sinaowolabi (~SinaOwola@160.152.12.253) (Ping timeout: 256 seconds)
[10:32:24] *** Joins: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr)
[10:37:21] *** Joins: Mo (~Mo@dynamic-002-247-241-246.2.247.pool.telefonica.de)
[10:39:16] *** Quits: lovetruth (~lovetruth@82.137.21.245) (Quit: Leaving)
[10:41:31] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[10:41:42] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 272 seconds)
[10:42:18] *** Joins: dongigs (~dondon@212.237.59.71)
[10:42:36] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[10:44:07] *** Quits: dongigs (~dondon@212.237.59.71) (Quit: Quit)
[10:47:08] *** Joins: guesswhat (~guesswhat@ip-89-176-236-197.net.upcbroadband.cz)
[10:54:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:57:42] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:00:00] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[11:00:19] *** Joins: unop (~unop@195.91.20.32)
[11:01:30] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[11:04:18] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:2db4:71f1:a9ae:8fba)
[11:04:22] *** Joins: ekathva (~ekathva@2001:999:51:19b8:36a1:fe41:db45:b13f)
[11:04:55] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[11:12:11] *** Quits: Mo (~Mo@dynamic-002-247-241-246.2.247.pool.telefonica.de) (Quit: Leaving)
[11:12:12] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:2db4:71f1:a9ae:8fba) (Ping timeout: 240 seconds)
[11:12:49] *** zer0bitz_ is now known as zer0bitz
[11:15:01] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[11:16:03] *** Joins: unop (~unop@195.91.20.32)
[11:17:29] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Quit: rairden)
[11:17:57] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[11:21:41] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[11:22:21] *** Joins: tobybl (~tobybl@252.193.115.87.dyn.plus.net)
[11:23:23] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[11:28:05] *** Joins: guesswhat24 (~guesswhat@ip-89-176-236-197.net.upcbroadband.cz)
[11:28:12] *** Quits: guesswhat (~guesswhat@ip-89-176-236-197.net.upcbroadband.cz) (Quit: Client closed)
[11:28:19] *** Quits: guesswhat24 (~guesswhat@ip-89-176-236-197.net.upcbroadband.cz) (Client Quit)
[11:29:23] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:30:37] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:30:46] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:2db4:71f1:a9ae:8fba)
[11:31:32] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Ping timeout: 240 seconds)
[11:31:32] *** Joins: alesan (~root@c-73-158-143-8.hsd1.ca.comcast.net)
[11:31:36] <alesan> hello
[11:33:26] *** Joins: Lope (~lope@user/lope)
[11:33:33] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:33:35] <alesan> I am reading a "textfile" line by line with the "usual" while IFS=" " read a b c; do echo $a $b $c; done <file.txt; however I cannot assume the last line has a newline. Note, I asked something UNRELATED a couple of days ago, in that case I had a single line and no while. I am trying to use POSIX shell
[11:33:51] <alesan> how can I make sure I read all lines, even if the las line might not have a newline?
[11:33:57] <alesan> *last
[11:34:45] <Soliton> check a for empty in the loop condition.
[11:35:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:36:07] <Lope> how can I split my terminal into 4 shells (quadrants) with tmux and asynchronously run unique commands in each one, let's use this as an example, (they can be foo bar baz qux respectively): for i in {1..10}; do echo "foo $i"; sleep 1; done
[11:36:32] <alesan> Soliton, won't the loop exit when it encounters that last line?
[11:36:48] <alesan> Soliton, or, I did not understand what you mean
[11:36:56] <Soliton> how can it be empty?
[11:37:15] *** Joins: rendar (~rendar@user/rendar)
[11:37:18] <Soliton> no newline and no content how can you call it the last line??
[11:37:27] <Lope> If they need to be scripts, I can live with that. But would be cool if I can just pass in bash commands as above.
[11:37:58] *** Joins: 074AAKBON (~l4s8g@2a02:908:1a72:c7c0:e95f:f490:e565:6067)
[11:38:16] *** Quits: skered (~dereks@user/skered) (Quit: ircII EPIC5-2.1.6 -- Are we there yet?)
[11:38:36] <Soliton> Lope: surely you need tmux commands to create the windows etc. the documentation presumably tells you how.
[11:38:44] <alesan> Soliton, the last line does not have a terminating "LF" character
[11:39:14] <Soliton> but it has content thus a cannot be empty.
[11:39:14] <alesan> so read will return 1 and the while loop will finish before processing it
[11:39:28] <Soliton> hence you check a.
[11:39:36] *** Joins: skered (~dereks@user/skered)
[11:40:10] <alesan> do you have an example or...?
[11:40:21] <Soliton> [ "$a" ]
[11:40:24] <Lope> Soliton, yes, I was just hoping someone here would be very familiar with tmux and could recommend the best way to do it.
[11:42:03] <alesan> with the while loop and the read
[11:42:17] <alesan> thanks :)
[11:43:03] <Soliton> while read -r a b c || [ "$a" ]; do ...
[11:43:35] <alesan> OK! now I understand
[11:43:58] <alesan> any reason why you prefer [ over [[ ?
[11:44:13] <Soliton> you said POSIX.
[11:44:18] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[11:44:23] <alesan> :O
[11:44:32] <alesan> I was... thinking [[ was indeed POSIX
[11:44:34] *** Joins: unop (~unop@195.91.20.32)
[11:44:36] <alesan> dam
[11:44:39] <alesan> OK thanks
[11:46:50] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:46:52] <alesan> and, why [ $a ] instead of... [ -n $a ] ? I did not know one could do [ $a ]
[11:47:23] <geirha> "$a", no $a
[11:47:46] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[11:47:49] <alesan> with IFS=" " is there a difference?
[11:48:29] <alesan> as $a has just been "read"'d, it should be guaranteed it has no white spaces
[11:48:54] <geirha> # a=/*; [ $a ]
[11:48:56] <shbot> geirha: bash: [: too many arguments
[11:51:41] <Masklin__Gurder> How do you add manual entries from non-standard directories?
[11:51:46] <Masklin__Gurder> Is there a MAN_PATH variable or some such?
[11:52:21] <geirha> yes
[11:52:37] <Masklin__Gurder> geirha: What is its name?
[11:53:57] *** Quits: jensen (~jensen@65.78.100.184) (Remote host closed the connection)
[11:54:15] <geirha> Look it up yourself. It's not that hard.  ''man man''
[11:54:39] <alesan> I was under the impression man only had an info page
[11:55:07] <alesan> :)
[11:55:56] *** Quits: ekathva (~ekathva@2001:999:51:19b8:36a1:fe41:db45:b13f) (Ping timeout: 250 seconds)
[11:56:00] *** Joins: jaysicks (~jaysicks@178-164-134-138.pool.digikabel.hu)
[11:56:49] *** Joins: duuude (~user@user/duuude)
[11:56:59] <Masklin__Gurder> MANPATH \o/
[11:57:15] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[11:57:44] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:59:17] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[11:59:23] <alesan> how can I find the difference between [ -n "$a" ] and [ "$a" ]
[11:59:24] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[12:00:11] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:00:13] <Soliton> there is none.
[12:01:30] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 272 seconds)
[12:01:37] <alesan> so, why use the second when the intent is less explicit?
[12:01:42] <alesan> *where
[12:01:49] <alesan> is it common?
[12:02:02] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[12:02:18] <alesan> it seems to make the operator -n without value
[12:02:21] <Soliton> because it is more explicit to me.
[12:02:36] <geirha> alesan: https://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html
[12:02:37] <Soliton> sure, no idea why it exists.
[12:02:55] <geirha> look at the last part of the OPERANDS section
[12:04:55] <alesan> when it lists the number of arguments?
[12:05:01] <geirha> yes
[12:05:21] <geirha> that's why [ "$a" ] and [ -n "$a" ] are the same
[12:07:26] *** Joins: timm (~timm@user/timm)
[12:08:02] <geirha> (while [ $a ] and [ -n $a ] are only sometimes the same)
[12:09:21] *** Joins: Mo (~Mo@dynamic-002-247-241-246.2.247.pool.telefonica.de)
[12:10:03] <alesan> OK
[12:11:00] *** Quits: demonbane (~demonbane@pool-108-54-156-90.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[12:11:04] *** Joins: xx (~xx@user/xx)
[12:11:15] *** Joins: demonbane (~demonbane@pool-108-54-156-90.nycmny.fios.verizon.net)
[12:12:37] *** Quits: han-solo (~hanish@103.82.184.210) (Ping timeout: 240 seconds)
[12:12:53] *** Joins: han-solo (~hanish@103.82.184.210)
[12:14:47] *** Joins: yustin (~yustin@user/yustin)
[12:15:52] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[12:17:00] *** Quits: richardm645 (~quassel@2600:8801:c507:b200:f001:80e8:7da0:3d78) (Ping timeout: 240 seconds)
[12:17:39] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[12:20:57] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[12:21:20] *** Joins: bluedust (~bluedust@103.165.167.61)
[12:24:17] *** Quits: bluedust_ (~bluedust@117.222.188.251) (Ping timeout: 240 seconds)
[12:33:09] *** Quits: Mo (~Mo@dynamic-002-247-241-246.2.247.pool.telefonica.de) (Ping timeout: 256 seconds)
[12:33:12] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[12:33:19] <Helmholtz> !wait-n
[12:33:19] <greybot> Run up to 5 processes in parallel (bash 4.3): i=0 j=5; for elem in "${array[@]}"; do (( i++ < j )) || wait -n; my_job "$elem" & done; wait
[12:33:26] *** Joins: sinaowolabi_ (~SinaOwola@160.152.12.253)
[12:34:24] <Helmholtz> How can I clean up (kill sub processes) spawned by this method in my script clean_up function in TRAP EXIT handler?
[12:34:56] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:2db4:71f1:a9ae:8fba) (Ping timeout: 250 seconds)
[12:40:03] *** Joins: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com)
[12:40:11] <Soliton> kill 0
[12:41:00] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[12:41:10] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Ping timeout: 260 seconds)
[12:41:33] *** Joins: nwm_ (~nwm___@pg.smtp.aihs.ca)
[12:44:57] *** Quits: nwm (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 240 seconds)
[12:46:05] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:49:49] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:2db4:71f1:a9ae:8fba)
[12:50:04] *** Joins: Night-Shade (~Tim@ip1f11e523.dynamic.kabel-deutschland.de)
[12:51:06] <alesan> what are the implications of a bash script that is written on a window computer, with a program that ends lines with CRLF instead of only LF?
[12:51:39] <alesan> can it run safely or it needs to be sanitized? The script is run on a POSIX system, not on bash for windows
[12:52:21] *** Joins: shad (~shad@user/shad)
[12:52:55] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:53:04] <Soliton> last character of each line will be CR so that is not going to go well.
[12:53:24] *** Quits: sinaowolabi_ (~SinaOwola@160.152.12.253) (Ping timeout: 240 seconds)
[12:53:33] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[12:53:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:53:56] <alesan> is there a recommended course of action to go back to nominal?
[12:54:30] <osse> do a line ending conversion
[12:54:44] <alesan> autogenous?
[12:54:45] *** Joins: Mo (~Mo@dynamic-002-247-241-246.2.247.pool.telefonica.de)
[12:54:51] *** Parts: Nod0n[m] (~nod0nmatr@2001:470:69fc:105::211) ()
[12:55:02] <alesan> like, can a script perform such conversoin on itself
[12:55:14] <osse> no
[12:55:18] <alesan> when executed? or it's unlikely
[12:55:31] <alesan> yeah that's what I feared :(
[12:56:53] *** Joins: ProperN[out] (~holyShizn@user/propernoun)
[12:56:54] <osse> any reasonable editor, also in windows, can do the conversion for you
[12:57:30] <osse> e.g Notepad++: Edit -> EOL Conversion
[12:57:47] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 256 seconds)
[13:00:56] <alesan> oh I do not fear editors, but users
[13:01:20] <alesan> :D
[13:01:27] <alesan> it's late here, I will go to bed now, thanks!
[13:04:53] <Helmholtz> Soliton, here is what I mean. Ctrl+C does not seem to be catched even. I should open htop and kill each process manually: https://dpaste.com/9VBNYPADJ
[13:05:37] *** Joins: The_Blode (uid537595@user/the-blode/x-7164444)
[13:05:51] <Soliton> so you're not even going to try kill 0, ok.
[13:05:58] <Helmholtz> I tried
[13:06:01] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[13:06:03] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[13:06:15] <Soliton> and?
[13:06:45] *** Joins: sinaowolabi (~SinaOwola@160.152.12.253)
[13:06:48] <Helmholtz> Ctrl+C is not catched: https://i.imgur.com/1lY87BO.png
[13:07:19] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[13:07:24] <Soliton> it looks more like it is caught. so who knows what you're doing.
[13:07:28] <Helmholtz> You mean putting kill 0 in cleanup() right?
[13:07:34] <Soliton> yes.
[13:07:45] *** Joins: b0b (~bob@user/b0b)
[13:07:56] <Kartagis> why can't I use something like alias creqen='composer require $1 && drush -y en $(echo $1 | cut -d / -f 2)'?
[13:08:04] <Soliton> !aliases
[13:08:04] <greybot> Aliases suck. They don't work in scripts. They can't take arguments. They have special evil magical powers that break all expectations. See http://mywiki.wooledge.org/BashFAQ/080 for starters.
[13:08:15] <Helmholtz> `./code main` wait until doing task 6 appears...
[13:08:17] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[13:08:34] <Soliton> creqen() { composer require "$1" && drush -y en "$(echo "$1" | cut -d / -f 2)"; }
[13:08:50] <Soliton> and fix the echo|cut nonsense.
[13:09:57] <mimorek> aliases can take arguments.
[13:10:18] <Soliton> nope.
[13:10:25] <Kartagis> Soliton: what do you mean echo | cut nonsense? should I do something like ${$1/.}? I can never remember how.
[13:10:46] <Soliton> they might expand in a way that following words may be at the right place if you're lucky.
[13:11:06] <Soliton> Kartagis: yes, use parameter expansions.
[13:11:09] <Soliton> !faq 100
[13:11:10] <greybot> https://mywiki.wooledge.org/BashFAQ/100 -- How do I do string manipulations in bash?
[13:11:13] *** Quits: alesan (~root@c-73-158-143-8.hsd1.ca.comcast.net) (Quit: Leaving)
[13:14:38] <Helmholtz> Soliton, `trap "exit" INT TERM` this is also needed
[13:14:55] <Helmholtz> https://stackoverflow.com/a/22644006
[13:15:00] <Soliton> not at all.
[13:15:01] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:2db4:71f1:a9ae:8fba) (Ping timeout: 240 seconds)
[13:15:18] <Soliton> maybe you're not talking about bash.
[13:15:35] <Soliton> bad form either way.
[13:15:36] <Soliton> !int
[13:15:37] <greybot> How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
[13:18:41] *** Quits: han-solo (~hanish@103.82.184.210) (Changing host)
[13:18:41] *** Joins: han-solo (~hanish@user/han-solo)
[13:19:17] <geirha> Not a single good answer on that SO question
[13:20:47] *** Quits: Mo (~Mo@dynamic-002-247-241-246.2.247.pool.telefonica.de) (Ping timeout: 256 seconds)
[13:20:51] <Earnestly> The top rated one would run twice under bash
[13:21:26] *** Joins: Abdullah (~ak@user/abdullah)
[13:21:31] *** Joins: nwm__ (~nwm___@pg.smtp.aihs.ca)
[13:21:32] *** Joins: Lebela (~Lebela@85.187.219.32)
[13:21:34] <Lebela> hello
[13:22:03] <Lebela> I have many scripts that call other scripts and so on.
[13:22:11] <Lebela> in order to save the output to a file,  I am using  &>
[13:22:17] <Kartagis> creqen() { composer require "$1" && drush -y en "${1##*/}"; } gives me syntax error near unexpected token (
[13:22:34] <Lebela> namely:  `/path/to/script  &>  output.txt`
[13:22:41] <Soliton> no ( anywhere.
[13:22:52] <Lebela> I would, however, like to preserve the colors,  especially the red colors are important
[13:22:54] <Soliton> oh, you have the alias still.
[13:22:58] <Helmholtz> guys I'm really confused. https://dpaste.com/GD37THJT9  ...wait 10 sec and Ctrl+C...one process consumes 100% CPU!
[13:23:02] <Soliton> unalias creqen
[13:23:11] <Lebela> according to my google research, there are many options to do so:
[13:23:13] <Helmholtz> run with `./code main`
[13:23:14] <geirha> Kartagis: run ''unalias creqen''  and try again
[13:23:16] <Lebela> https://www.baeldung.com/linux/write-stdout-to-file-with-colors
[13:23:34] <geirha> err, I'm too slow
[13:23:50] <Lebela> Unfortunately, I fail to make use of what the pages online tell me to do
[13:23:50] <Kartagis> thanks geirha, that worked
[13:24:16] <Kartagis> and Soliton
[13:24:20] <Lebela> e.g.  `/path/to/script | ansi2html > ansi_output.html`
[13:24:41] <Soliton> so now you want html output?
[13:24:55] <Lebela> Soliton, it can be HTML, but it's not a necessity
[13:25:07] <Lebela> I just see some red lines but they are gone so quickly I cannot read them in time
[13:25:15] <Lebela> so I want to save it to a text file or html file
[13:25:25] <Soliton> if you're saying that simply redirecting to a file does not onclude colors then the program producing the colors turned it off.
[13:25:31] <Lebela> unfortunately, it does not say "error" so I cannot search for it but by color
[13:25:43] <Soliton> so piping to ansi2html will not get any colors either.
[13:25:44] *** Quits: nwm_ (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 272 seconds)
[13:26:03] <Lebela> but the shell gets colors
[13:26:10] <Soliton> figure out how to convince the programs to output color even if stdout is not a terminal.
[13:26:10] <Lebela> I can see colors in my normal shell output
[13:26:16] <Soliton> sure.
[13:26:22] <Lebela> Soliton, I found something about that online, too.
[13:26:24] <Soliton> because there stdout is a terminal.
[13:26:25] <Lebela> one moment
[13:26:38] <Lebela> https://stackoverflow.com/a/27399198
[13:26:44] <Lebela> Soliton, ^ this is exactly what you described
[13:26:51] <Soliton> if you cannot convince the programs then you can fake a terminal.
[13:26:57] <Lebela> the problem is:  Even when seeing the command, I fail to use it.
[13:27:00] <Soliton> yes, with script is one way.
[13:27:03] <Lebela> no idea how to put what I see into use
[13:27:04] <Soliton> !faketty
[13:27:04] <greybot> Quick way to make programs believe that they're reading/writing from/to a terminal: faketty() { script -eqfc "$(printf '%q ' "$@")" /dev/null; }
[13:27:28] <Soliton> faketty cmd arg1 arg2 ...
[13:27:33] <Lebela> Soliton, please help me come up with a working solution with "script" - I cannot think of a syntax
[13:27:46] <Lebela> the example of stackoverflow reads:  "script -q -c "vagrant up" filename.txt"
[13:27:47] <Soliton> define the given function and use the above.
[13:27:52] <geirha> Helmholtz: Unable to reproduce; works fine here
[13:27:53] <Lebela> but where would my script go in this?
[13:28:35] <Soliton> i would only fake a tty for the programs that need it but sure you can do it for the whole script as well.
[13:28:51] <Lebela> I am just reading the faketty() function - I think I get it now
[13:28:52] <Lebela> let me try:
[13:28:58] <Soliton> so then you would replace vagrant up with your script invocation.
[13:29:08] <Lebela> script -eqfc /path/to/script &> out.txt
[13:29:10] <Lebela> like this?
[13:29:41] <Soliton> i wouldn't leave out parts.
[13:29:50] *** Quits: hid3 (~arnoldas@78.157.71.116) (Read error: Connection reset by peer)
[13:29:54] <Lebela> the arguments, you mean?
[13:29:55] <Soliton> perhaps just define the function exactly as is.
[13:30:25] <Lebela> ok, I paste the function into my .bashrc
[13:30:28] <Soliton> the /dev/null argument you left out, yes.
[13:30:43] *** Quits: marcel (~marcel@user/marcel) (Quit: The Lounge - https://thelounge.chat)
[13:30:57] *** Joins: marcel (~marcel@user/marcel)
[13:31:01] <Helmholtz> geirha, here is a screencast: https://transfer.sh/2u0ryg/Peek%202022-03-04%2013-29.mp4
[13:31:20] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[13:31:36] <Lebela> Soliton, I placed  faketty() { script -eqfc "$(printf '%q ' "$@")" /dev/null; }  into my .bashrc
[13:31:53] <Lebela> Soliton, faketty /path/to/script
[13:31:58] <Lebela> where will the output be?
[13:32:05] <Lebela> can I now use &> out.html ?
[13:32:10] <Soliton> do you just want to use it from an interactive shell?
[13:32:25] <Soliton> the output is not suddenly going to be html.
[13:32:27] <Lebela> what is interactive?
[13:32:38] <Lebela> I mean a normal shell that I can type stuff in
[13:32:50] <Soliton> that is what interactive means.
[13:32:56] <Lebela> oh, good to know :)
[13:33:10] <Lebela> Soliton, the perks of being a non-native speaker
[13:34:14] <Soliton> you can pipe to ansi2html now if you want html.
[13:34:30] <Soliton> or just redirect to a file if you want terminal escape sequences.
[13:34:35] <Lebela> $ faketty
[13:34:35] <Lebela> faketty: command not found
[13:34:52] <Soliton> did you start a new shell that read the new .bashrc?
[13:35:14] <Lebela> I started a new shell.  I think I forgot that I had to somehow read the .bashrc
[13:35:18] <Lebela> it was the source command?
[13:35:22] <Lebela> source .bashrc  I believe?
[13:35:29] *** Joins: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk)
[13:35:33] <Soliton> it should be read by your new shell.
[13:35:45] <Lebela> nope, not there
[13:35:48] <Lebela> I will just type it
[13:36:06] <Soliton> is it a login shell and you don't source .bashrc then?
[13:36:07] <Lebela> script -eqfc /path/to/script /dev/null &> out.txt
[13:36:13] <Soliton> !dotfiles
[13:36:13] <greybot> Set up your environment (PATH, LANG, EDITOR, ...) in ~/.bash_profile. Set up your bash shell (PS1, functions, shopts, ...) in ~/.bashrc. Then source .bashrc from .bash_profile. See <http://mywiki.wooledge.org/DotFiles>. For GUI logins, SEE YOUR DOCUMENTATION or ask your OS channel because they're all different and we don't know.
[13:36:32] <Lebela> Soliton, it's an "ALT + F2"  =>  "konsole"  shell on KDE 3
[13:36:42] <Soliton> (i would fix your dotfiles then because that is confusing.)
[13:38:15] <Lebela> Soliton, I am afraid of upsetting you,  but I have no idea what I am doing
[13:38:28] <Lebela> Soliton, I am as far away from a colored output as before
[13:38:52] <Soliton> so if you do  cat out.txt  then you see no colors?
[13:39:51] <Lebela> my script won't run because the parameter count is wrong
[13:40:01] <Lebela> my script expects 1 parameter and the parameter count is wrong
[13:40:03] <Soliton> you didn't give any parameters...
[13:40:18] <Soliton> script -eqfc '/path/to/script arg1' /dev/null &> out.txt
[13:40:18] <Lebela> script -eqfc my_test_script config.sh /dev/null &> out.txt
[13:40:38] <Lebela> this is how I call my script  (I only renamed the command to "my_test_script")  but the rest is identical
[13:41:03] <Soliton> do it as i showed instead.
[13:41:08] <Lebela> and my script runs into the "else" routine telling me I passed in too many or too few arguments
[13:41:37] <Lebela> oh the quotes
[13:41:40] <Lebela> sure - trying
[13:42:07] *** Quits: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl) (Quit: The Lounge - https://thelounge.chat)
[13:42:22] <geirha> but you've overwritten config.sh now, I think
[13:42:27] *** Joins: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl)
[13:42:29] <Helmholtz> greybot, sorry, but I still haven't figured it out
[13:43:06] <Soliton> yeah, check config.sh
[13:43:41] *** Quits: andre144k (~andre144k@213.221.88.82) (Read error: Connection reset by peer)
[13:44:09] <Lebela> I see colors,  but the script produces errors.  Something is wrong
[13:44:18] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:7576:1d0d:f98:c178:948d)
[13:44:27] <Lebela> FUCK
[13:44:29] <Lebela> not for real
[13:44:29] <geirha> The synopsis on linux is  script [options] [file]   and in your failed attempt you passed config.sh as the optional file argument, meaning it wrote the terminal output to config.sh
[13:44:35] <Lebela> I worked on that config for HOURS
[13:44:39] <Lebela> guys, what did you do ?!?
[13:44:41] <Lebela> why?!
[13:44:43] <Lebela> I trusted you!
[13:44:44] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[13:44:54] <Lebela> I t
[13:45:01] <Lebela> I trusted you !!!  my config is gone!!!!
[13:45:12] <geirha> sure, blame everyone else
[13:45:15] <Soliton> if you had used the function you would have called script correctly.
[13:45:38] <Soliton> if you do it yourself in a way that no one here even told you that's clearly on you.
[13:45:46] <Lebela> :-(
[13:46:05] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[13:46:08] <Lebela> bye
[13:46:10] <Lebela> thank you
[13:46:11] *** Quits: Lebela (~Lebela@85.187.219.32) (Quit: Leaving)
[13:46:11] <Earnestly> Fortunately you used git and had backups
[13:47:13] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[13:47:19] <geirha> the trick is to keep vim open and use Ctrl+Z instead of :wq
[13:47:46] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[13:47:58] <Earnestly> I admit, I have once recovered a file from vim's /proc/../fd
[13:48:46] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[13:48:56] <Soliton> hmm, faketty expects bash but script seems to call $SHELL.
[13:50:12] <Earnestly> I still think unbuffer is a "clever" approach here
[13:51:04] *** Parts: nova (~novasenco@user/nova) (♥☺)
[13:51:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:54:25] *** Joins: Mo (~Mo@dynamic-002-247-240-078.2.247.pool.telefonica.de)
[13:55:15] <Soliton> !forget faketty
[13:55:16] <greybot> OK, Soliton
[13:55:25] <Soliton> !learn faketty Quick way to make programs believe that they're reading/writing from/to a terminal: faketty() { SHELL=/bin/bash script -eqfc "$(printf '%q ' "$@")" /dev/null; }
[13:55:25] <greybot> OK, Soliton
[13:56:23] *** Joins: labrador (~labrador@user/labrador)
[13:57:15] <Soliton> if unbuffer is installed, sure.
[13:57:44] <geirha> maybe SHELL=$BASH instead
[13:58:11] <geirha> SHELL=${BASH:-/bin/bash}
[13:58:23] <Soliton> yeah, that.
[13:58:46] *** Joins: Adoi (~Adoi@user/adoi)
[13:58:58] <Soliton> !forget faketty
[13:58:58] <greybot> OK, Soliton
[13:58:59] *** Quits: Mo (~Mo@dynamic-002-247-240-078.2.247.pool.telefonica.de) (Ping timeout: 256 seconds)
[13:59:01] *** Joins: bluedust (~bluedust@103.165.167.61)
[13:59:02] <Soliton> !learn faketty Quick way to make programs believe that they're reading/writing from/to a terminal: faketty() { SHELL=${BASH:-/bin/bash} script -eqfc "$(printf '%q ' "$@")" /dev/null; }
[13:59:02] <greybot> OK, Soliton
[13:59:18] *** Quits: maledictium (~crux@bl11-67-234.dsl.telepac.pt) (Ping timeout: 272 seconds)
[13:59:43] *** Parts: roadie (~user@2a02:8108:5a40:1d87:3942:af28:94ec:15b0) (ERC (IRC client for Emacs 25.3.50.1))
[14:00:33] *** Joins: maledictium (~crux@dsl-90-228.bl26.telepac.pt)
[14:01:05] *** Joins: tmm88 (~tmm88@user/tmm88)
[14:01:11] <tmm88> heyho
[14:04:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[14:05:10] <llua> !hi
[14:05:10] <greybot> <Guest39402> hi. *5 minute pause* <Guest39402> how do I [insert confusing question about a convoluted piece of code to solve an imaginary problem here] ?
[14:11:14] *** Joins: Mo (~Mo@dynamic-077-008-071-239.77.8.pool.telefonica.de)
[14:15:09] *** Quits: sinaowolabi (~SinaOwola@160.152.12.253) (Ping timeout: 252 seconds)
[14:16:15] *** Joins: retux (~user@dyndsl-091-096-139-208.ewe-ip-backbone.de)
[14:17:16] *** Joins: han-solo_ (~hanish@178.248.114.123)
[14:17:31] *** Quits: han-solo (~hanish@user/han-solo) (Killed (NickServ (GHOST command used by han-solo_!~hanish@178.248.114.123)))
[14:17:53] *** Quits: han-solo_ (~hanish@178.248.114.123) (Changing host)
[14:17:53] *** Joins: han-solo_ (~hanish@user/han-solo)
[14:18:03] *** han-solo_ is now known as han-solo
[14:19:28] <retux> I'm looking for a convenient command to assign the first match of a wildcard extension to a variable. My current solution is `TMP=(lib/*a)`. But his doesn't work recursively.
[14:20:15] <Soliton> !caps
[14:20:15] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[14:20:28] <Soliton> what does recursively mean?
[14:20:31] <geirha> enable globstar with ''shopt -s globstar''  then you can use /lib/**/*a
[14:20:35] <Soliton> maybe you want globstar.
[14:23:15] <retux> geirha: Thanks. globstar is what I was looking for.
[14:25:00] *** Quits: xx (~xx@user/xx) (Quit: xx)
[14:26:53] *** Joins: sinaowolabi (~SinaOwola@169.159.107.1)
[14:26:55] *** Joins: xx (~xx@user/xx)
[14:28:57] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[14:30:24] *** Joins: otmi (~mito@5.149.156.76)
[14:33:24] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 240 seconds)
[14:33:49] *** Quits: liam__ (sid7517@id-7517.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:34:12] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[14:35:35] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[14:37:04] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[14:37:25] *** Joins: thiras (~thiras@user/thiras)
[14:37:30] *** Joins: labrador (~labrador@user/labrador)
[14:37:30] <retux> `shopt -s globstar` doesn't work on MacOS... I really hate MacOS :D.
[14:38:16] *** Joins: Tach (~Tach@user/tach)
[14:38:36] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:40:54] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[14:41:48] *** Quits: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt) (Ping timeout: 240 seconds)
[14:42:58] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[14:43:52] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[14:45:16] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[14:45:18] *** Quits: john1_ (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[14:46:03] <Masklin__Gurder> Is the history file wiped automatically somehow?
[14:46:06] <Masklin__Gurder> It is so small...
[14:46:40] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[14:46:49] <selckin> its not
[14:47:25] <selckin> you can configure a max size tho
[14:48:13] <emanuele6> !faq losing
[14:48:13] <greybot> https://mywiki.wooledge.org/BashFAQ/088 -- How can I avoid losing any history lines?
[14:49:15] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[14:49:25] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[14:54:38] <Masklin__Gurder> I followed those instructions already... hm
[14:54:56] <retux> I now use `TMP=$(find lib -type f -name "*a")` because I can be sure that there is exactly one .a file.
[14:55:52] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[14:55:55] <Earnestly> :(
[14:57:43] <emanuele6> but that matches any regular file that ends with "a", not .a
[14:59:01] <Earnestly> This entire thing is dismal
[14:59:02] <OMGOMG> emanuele6: don't let perfect be the enemy of good
[15:01:47] *** Joins: nwm_ (~nwm___@pg.smtp.aihs.ca)
[15:02:11] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 256 seconds)
[15:03:01] *** Quits: Abdullah (~ak@user/abdullah) (Ping timeout: 256 seconds)
[15:05:51] *** Quits: nwm__ (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 256 seconds)
[15:05:57] *** Joins: Adois (~Adoi@user/adoi)
[15:07:42] *** Quits: otmi (~mito@5.149.156.76) (Quit: Leaving)
[15:08:12] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[15:09:28] <retux> Thanks for the hint. Apparently I should match against .a.
[15:12:59] *** Joins: rcernin (~rcernin@101.189.129.123)
[15:13:09] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[15:16:00] <Earnestly> Almost everything is wrong, from uppercase vars, to needing vars at all, to using find to produce vars, etc.
[15:16:44] <Earnestly> To the idea that only one static library exists, or that the first just so happens to be the one, etc.
[15:16:50] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[15:16:57] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 256 seconds)
[15:17:06] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[15:18:12] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:7576:1d0d:f98:c178:948d) (Ping timeout: 240 seconds)
[15:18:32] *** Joins: arinov (~arinov@213.194.126.155)
[15:18:53] <duuude> why doesn't it show the outputs of commands I run in the function. https://termbin.com/0l2w
[15:18:59] * duuude makes suffering noises
[15:19:04] <emanuele6> !check
[15:19:04] <checkbot> duuude: Line 3: Use array+=("item") to append items to an array. Line 9: Declare and assign separately to avoid masking return values. Line 20: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb94544 for all 8 issues.
[15:19:34] <Soliton> some crazy shell injection going on there.
[15:20:05] <Soliton> probably easier to explain in words what that is trying to do.
[15:20:15] <duuude> emanuele6: what is the command for !check?
[15:20:24] <Soliton> !shellcheck
[15:20:25] <greybot> ShellCheck is a shell linting/suggestion tool. Information and online checker: http://www.shellcheck.net/ . Can also be installed locally as a CLI tool.
[15:20:26] <Earnestly> url is...
[15:20:32] <Earnestly> What the hell is going on
[15:21:37] <Earnestly> I think today, I have no patience lol
[15:22:10] *** Adois is now known as Adoi
[15:22:32] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[15:24:24] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:25:45] *** Joins: Payam (~Payam@138.106.57.131)
[15:25:52] *** Joins: _sa0sin_ (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[15:26:15] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[15:26:28] <duuude> Soliton: I want to run the function 30 times concurrenctly
[15:26:51] <duuude> I want to get the pid of the proxy first
[15:26:52] <Soliton> and you're doing it!
[15:26:55] <Soliton> !next
[15:26:55] <greybot> Another satisfied customer! Next please!
[15:26:59] <duuude> run that python thing
[15:27:05] <duuude> then kill the pid
[15:27:19] <duuude> and it doesn't give me the output of the python thing
[15:27:24] <Soliton> of course wtf knows what that function does. probably nobody.
[15:27:49] <phogg> duuude: kill does not know what to do with pid. Did you mean "$pid"?
[15:28:18] <Soliton> crazy injection, exec of some non-standard command output, also injected of course...
[15:28:51] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Ping timeout: 256 seconds)
[15:28:54] <duuude> that was the only way I found to get the pid of something I run
[15:29:00] <phogg> duuude: start with shellcheck and fix *EVERYTHING* it tells you to fix. Come back when it doesn't complain any more.
[15:29:05] *** Joins: cryptone1tor (~nico@24.28.108.183)
[15:31:01] <duuude> what was the qoute that allowed no special characters?
[15:31:14] <Soliton> !'
[15:31:14] <greybot> EVERYTHING inside single quotes (') is taken literally by bash. If you want to embed a ' inside '...', write it as the four characters '\'' or use $'...' quoting instead.
[15:31:41] <Soliton> what is the dash -c line supposed to do?
[15:31:56] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[15:32:17] <Soliton> what does ss-local output?
[15:32:36] *** Quits: cryptonector (~nico@24.28.108.183) (Ping timeout: 240 seconds)
[15:32:58] <duuude> "that was the only way I found to get the pid of something I run"
[15:33:17] <duuude> it is done for the sake of echo $$
[15:33:18] <phogg> duuude: I can only imagine why you found that to be the case
[15:33:23] <Soliton> ok, you have no idea, we have no idea. the end.
[15:33:30] <phogg> why don't you just 'echo $$' without all of that?!
[15:34:00] <duuude> because the shell process becomes the one called with exec
[15:34:08] <Soliton> if you want to put $$ in a variable you do: var=$$
[15:34:15] <duuude> I want to get the pid of something I run, not my script
[15:34:20] <phogg> duuude: only *after* you echo. The $$ is expanded by the parent shell.
[15:34:27] <Soliton> why do you think that means anything to us?
[15:34:35] <phogg> pid=$$; dash -c 'whatever crazy thing'
[15:34:46] *** Quits: _sa0sin_ (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Ping timeout: 260 seconds)
[15:34:51] <phogg> ^that's the same thing
[15:35:06] <Soliton> do you think the pid is the injected $$?
[15:35:06] <phogg> duuude: that echo $$ does not get you the pid of the program run via exec on that line'
[15:35:11] <duuude> yeah, I'm gonna fix that
[15:35:50] <Soliton> is  exec $(cmd)  just random nonsense or does cmd output a command name?
[15:36:45] <Soliton> if you do not know what that line is supposed to do you cannot write code to do it. simple as that.
[15:37:09] <phogg> obviously it's supposed to do magic
[15:37:10] <duuude> I'm trying to fix the thing, wait a bit
[15:37:35] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[15:39:08] <Soliton> as a wild guess maybe you want: ss-local -c "ss-config/$(( $(tr -cd 1-9 </dev/urandom | head -c 3))).json" -l "200$i" & pid=$!
[15:39:37] <duuude> doesn't dash have $((?
[15:39:44] <Soliton> sure.
[15:40:03] <Soliton> why do you call dash?
[15:40:49] <Soliton> if you think in your script dash executes $(()) you're mistaken.
[15:41:37] <Soliton> the dash you explicitely call anyway. i'm guessing the script is run with dash as well.
[15:41:39] <duuude> because the guy on stackoverflow called "sh -c", there was no "sh -c", man sh showed the manpage for dash, and there was "dash -c" so I logically concluded that dash was meant
[15:41:48] *** Quits: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt) (Ping timeout: 240 seconds)
[15:41:59] <Soliton> you have a system with no sh?
[15:42:22] <duuude> no, sh didn't seem to have a -c option
[15:42:23] <Soliton> either way why do you call another shell AT ALL?
[15:42:33] <Soliton> what, of course it does.
[15:42:41] *** Quits: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[15:42:46] *** Joins: dante-as (~dante-as@188.24.161.140)
[15:43:10] <duuude> so probably another random problem I monkeypatched this way
[15:43:32] <Soliton> that is why we cannot guess what that code is supposed to.
[15:43:50] <Soliton> you must know what it is supposed to do and that is the important part we need to know.
[15:44:01] <Soliton> you want to call ss-local, yes?
[15:44:09] <duuude> https://termbin.com/wgif
[15:44:10] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[15:44:13] <duuude> Soliton: yes
[15:44:24] <duuude> and expand the dollars in sh
[15:44:25] <Soliton> and what does it output?
[15:44:33] <Soliton> do you really want to execute its output??
[15:44:53] <duuude> hmm... just itself. not its outputs
[15:45:11] <Soliton> and you want it to run in the background surely.
[15:45:19] <duuude> I want sh to echo its pid
[15:45:23] <duuude> then exec that
[15:45:24] <Soliton> no you don't…
[15:45:31] <duuude> I want
[15:45:35] <Soliton> you want the pid of the background process.
[15:45:47] <duuude> I want pid of ss-local
[15:45:50] <Soliton> stop telling us your guesses. tell us what you WANT to do.
[15:46:12] <Soliton> right, so you call it with & and get it's pid in $!.
[15:46:13] <duuude> I talked about what I "want"ed
[15:46:37] <duuude> hmm... let me try
[15:46:37] <Soliton> but wanting $$ sh is nonsense. it is a guess towards the real goal.
[15:47:02] <Soliton> replace your line with:  ss-local -c "ss-config/$(( $(tr -cd 1-9 </dev/urandom | head -c 3))).json" -l "200$i" & pid=$!
[15:47:12] <Soliton> also remove the export command.
[15:47:53] <duuude> I don't want the pid of the connect_or_die function
[15:47:59] <duuude> I want the pid of ss-local
[15:48:05] <duuude> that is the thing I want to kill
[15:48:07] <Soliton> and that is what you get..
[15:48:17] <duuude> hmm... nice
[15:49:10] <Tach> what is the tab size for bash these days ? I see 2 spaces insteaf of 4 in beautifiers
[15:49:24] <Soliton> what you should have explained from the start: 1) i want to run ss-local in the background 2) then run some python command 3) then kill ss-local
[15:49:33] <Soliton> that is something one could have understood.
[15:49:52] *** Joins: rufito (~phil@186-79-1-138.baf.movistar.cl)
[15:50:31] <Soliton> why do you want to call connect_or_die in the background?
[15:50:43] <duuude> so they all run together
[15:51:14] <Soliton> you want 30 concurrent processes that call ss-local and python in an infinite loop??
[15:51:22] <duuude> yes
[15:51:36] <Soliton> is this some dos attack tool?
[15:51:44] <duuude> no
[15:52:03] <duuude> maybe I should reduce that to 10
[15:52:14] <Soliton> why is one not enough?
[15:52:23] <duuude> proxies may not be reliable
[15:52:42] <Soliton> which part is the proxy?
[15:52:47] <duuude> ss-local
[15:53:06] <Soliton> and there is no way to figure out if it works or not?
[15:53:21] <duuude> by the python script failing
[15:53:39] <Soliton> so why do you kill it unconditionally and not only if python fails?
[15:53:47] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[15:54:01] <duuude> the python thing goes on until the proxy doesn't work
[15:54:42] <Soliton> and how does it help to run more python processes in parallel?
[15:55:38] <Soliton> also your random number generation may generate the same number in multiple processes. probably not good.
[15:55:39] *** Joins: zoe (~zoe@fsf/member/zoe)
[15:55:53] <duuude> It gathers more stuff
[15:55:54] <duuude> maybe
[15:56:38] <Soliton> if one python process runs, what good do the others do? surely they just fail all the time?
[15:57:25] <duuude> they send different stuff to some api and save that so we don't need to flood their apis all the time
[15:57:51] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[15:58:07] <duuude> It just randomly picks stuff, see if we have that, then requests
[15:59:30] <Soliton> but only one proxy can run at a time and thus just one python process?
[16:00:35] *** Joins: _Vi (~vi0oss@2a0d:7c40:3000:1326::3)
[16:00:37] <duuude> no, 10 of them run on different ports
[16:00:43] <duuude> 2001 through 20010
[16:01:43] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[16:02:37] <duuude> one thing I am stuck in it, how to kill all these?
[16:02:51] <duuude> kill $(jobs -p) doesn't work
[16:02:53] <Soliton> kill 0
[16:03:06] <Masklin__Gurder> How does /usr/bin/env mycmd work?
[16:03:09] <Soliton> there are no jobs unless you turned on monitor mode.
[16:03:22] <Masklin__Gurder> Does it just search my PATH for mycmd?
[16:03:23] <duuude> 0 is shell itself?
[16:03:41] <Soliton> kill 0 kills the current process group.
[16:04:05] <Soliton> unless you turned monitor mode on all processes are in the same process group.
[16:05:21] *** Joins: Adoi (~Adoi@user/adoi)
[16:06:39] <Soliton> you may want to call wait at the end of your script so it blocks and you can also kill the whole thing with ^C.
[16:06:52] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[16:08:09] *** Joins: unop (~unop@195.91.20.32)
[16:09:52] *** Quits: timm (~timm@user/timm) (Ping timeout: 250 seconds)
[16:10:16] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:d670:6242:84ac:67cd:b737)
[16:11:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[16:11:19] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[16:14:54] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[16:17:14] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[16:19:08] *** Quits: Mo (~Mo@dynamic-077-008-071-239.77.8.pool.telefonica.de) (Quit: Leaving)
[16:20:03] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[16:23:46] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[16:24:01] *** Joins: unop (~unop@195.91.20.32)
[16:25:12] *** Joins: zeden (~zeden@user/zeden)
[16:25:25] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[16:25:25] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[16:25:50] *** Joins: nyex (~Thunderbi@177.84.107.26)
[16:25:55] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[16:26:03] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[16:26:07] *** Joins: arinov__ (~arinov@45.86.202.135)
[16:26:19] *** Quits: dante-as (~dante-as@188.24.161.140) (Ping timeout: 256 seconds)
[16:26:58] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[16:27:45] *** Joins: zeden (~zeden@user/zeden)
[16:28:17] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[16:31:53] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[16:32:33] *** Quits: arinov__ (~arinov@45.86.202.135) (Ping timeout: 256 seconds)
[16:32:34] *** Joins: arinov (~arinov@45.86.202.135)
[16:33:33] *** Joins: tejr (~tejr@user/tejr)
[16:34:11] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8da:5468:d39:d983)
[16:34:11] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8da:5468:d39:d983) (Changing host)
[16:34:11] *** Joins: skapata (~Skapata@user/skapata)
[16:36:26] *** Quits: arinov (~arinov@45.86.202.135) (Read error: Connection reset by peer)
[16:37:02] *** Joins: arinov (~arinov@194.169.217.81)
[16:39:25] <Masklin__Gurder> How do I... mmh, "restart" my shell session without having to close and re-open?
[16:39:43] <Masklin__Gurder> Writing "bash" just seems to load things on top of the current session
[16:40:01] <Soliton> exec bash
[16:40:53] *** Quits: arinov (~arinov@194.169.217.81) (Read error: Connection reset by peer)
[16:41:24] <Masklin__Gurder> Hmm nope, my PATH just keeps growing
[16:41:28] *** Joins: arinov (~arinov@213.194.126.155)
[16:42:46] *** Joins: bluedust (~bluedust@103.165.167.61)
[16:42:56] <Soliton> sure the environment is not replaced. where would it come from...
[16:43:32] <Soliton> if you want to inherit the env of your parent again then you need to make the parent call the shell again.
[16:44:35] <Soliton> perhaps you should fix your dotfiles to only set env variables in login shells.
[16:44:41] <Soliton> !dotfiles
[16:44:41] <greybot> Set up your environment (PATH, LANG, EDITOR, ...) in ~/.bash_profile. Set up your bash shell (PS1, functions, shopts, ...) in ~/.bashrc. Then source .bashrc from .bash_profile. See <http://mywiki.wooledge.org/DotFiles>. For GUI logins, SEE YOUR DOCUMENTATION or ask your OS channel because they're all different and we don't know.
[16:45:21] *** Joins: darkbit (~db@136.158.8.67)
[16:45:56] *** Quits: darkbit (~db@136.158.8.67) (Client Quit)
[16:47:57] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[16:48:15] *** Joins: darkbit (~db@136.158.8.67)
[16:48:21] *** Quits: mort (~mort@188.166.114.29) (Quit: Ping timeout (120 seconds))
[16:50:49] *** Quits: 074AAKBON (~l4s8g@2a02:908:1a72:c7c0:e95f:f490:e565:6067) (Remote host closed the connection)
[16:51:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[16:53:22] *** Quits: nyex (~Thunderbi@177.84.107.26) (Quit: nyex)
[16:54:41] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[16:54:56] *** Joins: malina (~malina@user/malina)
[16:55:03] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[16:55:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:58:15] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[16:59:28] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:01:32] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Client Quit)
[17:03:07] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:03:12] *** Joins: kurahaupo (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au)
[17:03:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:04:14] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 272 seconds)
[17:05:00] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Client Quit)
[17:06:13] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:06:41] <Masklin__Gurder> Oh
[17:06:53] <Masklin__Gurder> Damn I had no idea
[17:06:55] <Masklin__Gurder> Nice
[17:07:08] <Masklin__Gurder> But wait, doesn't that mean I have to close and re-open a session for PATH to be updated?
[17:07:17] <Masklin__Gurder> Assuming I update PATH in .bash_profile
[17:09:43] <geirha> profile should ideally only be read when you log in
[17:10:12] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 240 seconds)
[17:11:24] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[17:12:46] *** furrymcg1e is now known as furrymcgee
[17:14:41] *** Quits: sinaowolabi (~SinaOwola@169.159.107.1) (Remote host closed the connection)
[17:15:13] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:15:14] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[17:16:19] *** Joins: cdown (~cdown@188.214.11.14)
[17:17:19] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[17:18:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[17:20:33] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[17:20:54] *** Joins: mort (~mort@188.166.114.29)
[17:21:30] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Max SendQ exceeded)
[17:21:55] *** Quits: Inline__ (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de) (Quit: Leaving)
[17:21:58] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[17:22:13] <Soliton> if you constantly change PATH then maybe you want to do it differently. you could for example check before adding more stuff to it.
[17:22:31] *** Joins: sinaowolabi (~SinaOwola@169.159.107.1)
[17:22:46] *** Quits: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net) (Remote host closed the connection)
[17:22:51] *** Joins: sinaowolabi_ (~SinaOwola@169.159.107.1)
[17:23:08] *** Joins: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net)
[17:23:14] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Max SendQ exceeded)
[17:23:43] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[17:24:07] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:25:54] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[17:26:24] *** Joins: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[17:27:56] <n-st> Hi :) I've got one of everyone's favourites here: encoding problems ;)
[17:28:20] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[17:28:36] <n-st> I want to diff two file lists. One has filenames as proper Unicode (e.g. NetLock_Arany_=Class_Gold=_Főtanúsítvány.pem), the other has special characters escaped (e.g. NetLock_Arany_=Class_Gold=_Főtanúsítvány.crt)
[17:28:53] <n-st> * NetLock_Arany_=Class_Gold=_F\305\221tan\303\272s\303\255tv\303\241ny.crt
[17:29:21] <n-st> How can I convert those escape sequences to allow diff to recognise the two strings as identical?
[17:30:08] *** Quits: Masklin_Gurder (~joel@eduroam-rs-06.wireless.lu.se) (Quit: Konversation terminated!)
[17:30:15] <geirha> # printf '%b\n' 'NetLock_Arany_=Class_Gold=_F\305\221tan\303\272s\303\255tv\303\241ny.crt'
[17:30:17] <shbot> geirha: NetLock_Arany_=Class_Gold=_Főtanúsítvány.crt
[17:31:05] <Earnestly> Random challenge, a nice way to extract the license from comments: https://github.com/nicm/fdm/blob/master/fdm.c => one of my attempts: sed -n '/Copyright/,/SOFTWARE\.$/s/ \* \{0,1\}\(.*\)/\1/p'
[17:31:09] <duuude> !stderr
[17:31:09] <greybot> Standard Error is the secondary file descriptor to which commands print to the terminal. It's meant for messages that shouldn't be parsed by default. Redirect to stderr: '>&2'. See !stdout !stdin and !redirtut for more info.
[17:31:30] <Earnestly> Could use awk, but awk's range handling makes it difficult
[17:31:36] <phy1729> Earnestly: don't and have humans verify and use SPDX or whatever it is
[17:31:38] <duuude> does &>> redirect stderr output to a file?
[17:31:59] <Earnestly> phy1729: I know, I think there was an issue with this repo about it, but nothing came of it
[17:32:29] <Earnestly> phy1729: https://github.com/nicm/fdm/pull/69
[17:32:45] <Soliton> !&>>
[17:32:45] <greybot> ''&>file'' is equivalent to ''>file 2>&1'' and is bash/ksh specific. In bash 4, there is also ''&>>file''. For portability, it is a good idea to just write it out fully.
[17:33:06] <n-st> geirha: Neat! Is there a way to apply that line-wise to stdin?
[17:33:12] <Soliton> !faq 1
[17:33:12] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[17:33:20] <jelly> is everyone replacing their procmail today, or what
[17:33:20] <Earnestly> I could yoink this pull
[17:33:22] <phy1729> Earnestly: I don't think there's an SPDX identifier for the OpenBSD version of ISX
[17:33:34] <Earnestly> phy1729: I don't particularly care
[17:33:35] <geirha> while read -r line ; do printf -v line %b "$line"
[17:33:56] <Soliton> perhaps with IFS=''
[17:34:28] <Earnestly> n-st: Fortunately for you those are octal escapes, which means POSIX printf %b can work with them
[17:34:33] <geirha> right, to avoid whitespace trimming   while IFS= read -r line ; do printf -v line %b "$line"
[17:34:37] <Earnestly> bash supports \x
[17:34:47] <Earnestly> Why -v line?
[17:35:02] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:35:12] <Soliton> not sure either. they seem to want a stream out again.
[17:35:14] <geirha> could use another variable name, if it needs to have the original name around too
[17:35:20] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[17:35:37] <Earnestly> I mean, why capture it as a variable at all?
[17:35:56] <Earnestly> But nevermind, I assume they're intelligent enough to see the structure
[17:36:28] <n-st> Not sure about the variable, when I use `-v line` it doesn't output anything at all…
[17:36:42] <geirha> it's bash's "sprintf"
[17:36:51] <geirha> it writes the "output" to the line variable instead
[17:36:55] <Soliton> just remove the -v part.
[17:37:00] <n-st> Ah :)
[17:38:30] <Earnestly> n-st: find the definition of printf in the bash(1) manual, it'll provide a quick overview
[17:39:45] <geirha> PAGER='less +/printf.\\[' man bash
[17:39:48] <n-st> Fun fact: zsh doesn't do the %b expansion, not even in `emulate sh` mode \o/
[17:40:17] <geirha> good thing you're using bash then, since you're asking in #bash and not #zsh :p
[17:40:24] * n-st wraps it in a `bash -c` call
[17:40:50] * Earnestly takes back assumption
[17:41:10] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[17:41:19] <n-st> My interactive shell is a zsh (most of the time, anyway), but I'm trying to keep my scripts POSIX or at least bash
[17:41:59] * n-st start 9.8M line diff job and considers going for lunch
[17:44:39] <osse> n-st: "${(g:o:)line}"
[17:45:49] *** Joins: remirol (~lorimer@user/lorimer)
[17:45:49] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[17:45:51] *** remirol is now known as lorimer
[17:47:11] <n-st> Hmm. Even directly in bash, `while IFS="" read -r line ; do printf "%b\n" "$line"; done` only does about 10k to 25k lines per second…
[17:47:51] <Friithian> maybe bash isn't the language you want for parsing tens of thousands of lines
[17:49:02] <geirha> yeah, bash is slow, especially if it's reading from a pipe
[17:49:17] <Friithian> what is that factoid…
[17:49:17] <Friithian> !graduated
[17:49:17] <greybot> Congratulations! You've graduated to needing to use a real language!
[17:49:28] <n-st> Nooooooooooo…
[17:49:51] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[17:49:52] <n-st> Can sed or awk do it, maybe? :/
[17:49:52] <Friithian> https://www.cplusplus.com/doc/tutorial/files/ :P
[17:50:08] *** Joins: selckin (~selckin@user/selckin)
[17:53:00] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[17:54:12] <Earnestly> osse: (fwiw, zsh's print does this by default)
[17:54:48] <n-st> If it's any consolation, zsh's `while … printf` isn't any faster ;)
[17:55:51] <osse> Earnestly: huh, interesting
[17:55:57] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[17:55:59] <Earnestly> I have no patience today
[17:56:27] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[17:56:31] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[17:56:31] *** Joins: iliv (~iliv@user/iliv)
[17:57:40] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:d670:6242:84ac:67cd:b737) (Remote host closed the connection)
[17:57:53] <acidsys> hi, does someone happen to have a clean way to apply the users $DISPLAY value (which is set in their shell environment) inside a shell script? I know I can extract it from `w` using awk, but that seems ugly given $DISPLAY is already defined "outside" the shell script
[17:57:57] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:d670:6242:84ac:67cd:b737)
[17:59:18] <Earnestly> Don't write code that works this way
[18:00:25] <Earnestly> If you have permission to do this, xauth list with -f set can give you display names
[18:01:01] <nazarewk[m]> while `*.py` is a glob pattern, what would i call `x-{1,2,3}.py` ?
[18:01:01] <Earnestly> xauth extract and xauth merge typically exists for this
[18:01:15] <Earnestly> nazarewk[m]: brace expansion
[18:01:58] <nazarewk[m]> any idea if there is some Python module to do just that?
[18:02:10] <Earnestly> #python
[18:02:33] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:02:37] <n-st> > /home/nst/.java/.userPrefs/com/_!'`!cw"w!$g!:g!2!$}!.g"y!(`=/prefs.xml
[18:02:41] <n-st> Okay, now that's just rude…
[18:02:57] <Earnestly> !evilnames
[18:02:59] *** Joins: kj (~kj@kj.aerisnetwork.net)
[18:03:00] <Earnestly> Hm
[18:03:14] <Soliton> !evilfiles
[18:03:14] <greybot> collection of files that break your wrong assumptions about filenames https://bitbucket.org/emg/tidbits/src/master/evilfiles/
[18:04:13] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Ping timeout: 240 seconds)
[18:04:48] <Distemper> Has anyone actually taken a look at the shell scripts distributed with Java/Tomcat and thought any of this was a good idea
[18:05:01] <Soliton> !crap
[18:05:01] <greybot> The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
[18:07:33] <Distemper> I once got a weird look from my colleague when I said there wasn't a single Bash book that was worth the time to study/learn from. If I were to explain every single bad practice I wouldn't have got any work done
[18:07:59] <n-st> And now the encoding of one file list is utf8 and the other is latin1 -.-
[18:08:04] <phy1729> Well there's the man page. One could print that.
[18:08:07] *** Joins: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com)
[18:08:33] <n-st> And FreeBSD find and GNU find format dates differently
[18:08:34] <Led_Zeppelin2> what is the best way to parse for system process stat. I am doing ps aux | grep "D". Is there a better more preferred way?
[18:08:35] <Distemper> Yeah they were asking about the usual printed books one could find and I said there weren't any
[18:08:37] <Earnestly> Distemper: There is wooledge
[18:08:42] <Soliton> n-st: iconv -f latin1 -t utf8
[18:09:19] <Distemper> Earnestly: I'm well aware, I pointed them that way but of course they thought I was lying when I said no decent printed book existed. Maybe it does but I haven't found one yet.
[18:09:30] <n-st> FreeBSD find: "Sep 3 08:40" (because it's less than a year ago). GNU find: "Sep 3 2021" (because it's not in the current year)
[18:09:33] <Distemper> s/printed/published/
[18:10:14] <Earnestly> n-st: So what?  You're not going to rely on such features anyway
[18:10:26] *** Joins: blei (~blei@user/blei)
[18:10:35] <Earnestly> Akin to complaining about ls's formatting.  So what, it's interactive and you're not going to parse it
[18:10:35] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[18:10:51] <wiscii> evilfiles is evil!
[18:10:56] <n-st> Earnestly: I'm diffing file lists to check for (potentially) missing files
[18:11:13] <n-st> (And changed mtime, perms, etc)
[18:11:36] <Earnestly> mtree on FreeBSD can do this
[18:12:13] <n-st> One system is FreeBSD, one is Linux. That makes this comparison business a bit tricky :/
[18:12:25] <Earnestly> mtree exists for linux
[18:12:25] *** Joins: dea_ (~dea@static-68-235-39-125.cust.tzulo.com)
[18:12:38] <Soliton> is it about actual existing files? perhaps use rsync.
[18:12:41] <Earnestly> I'm not sure how 'diffing' does anything for missing files though
[18:12:48] <acidsys> Earnestly: thanks, but unfortunately xauth is not available
[18:13:42] <Earnestly> acidsys: So you have users running X11 sessions without any xauthority?
[18:15:11] <Earnestly> You might as well just query the sockets directly in /tmp based on user ownership
[18:15:11] <acidsys> it's a live environment, I'm not sure the authority file is always readable
[18:15:25] <Earnestly> Yeah, this bad idea keeps getting worse
[18:16:15] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[18:16:35] <acidsys> the reason I want to apply the outside $DISPLAY in the shell script is for xdg-open to work with a X application. is there a better way?
[18:16:57] <Friithian> inb4 xy
[18:17:17] <acidsys> I intended to keep it relatively simple and not build a lot of logic just for it
[18:17:30] <Soliton> why is DISPLAY not set? is your script running from cron or something?
[18:17:37] <acidsys> hence I figured somehow applying the outside environment in the shell script was a thing. but maybe it's not intended that way
[18:17:53] <Earnestly> environments are inherited
[18:17:53] <acidsys> I'm not sure, $DISPLAY is in the shell environment, but inside a shell script, it returns empty
[18:18:01] <acidsys> is that not expected?
[18:18:04] <Soliton> no.
[18:18:11] <acidsys> oh
[18:18:13] <acidsys> now I get it
[18:18:15] <Soliton> it's not expected that env variables vanish.
[18:18:28] <acidsys> I totally get it now
[18:18:32] <acidsys> thanks a lot
[18:22:39] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[18:23:01] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[18:23:04] *** Joins: Philonous (~Philonous@user/philonous)
[18:23:10] *** Joins: Dotz0cat_ (~Dotz0cat@98.19.249.252)
[18:23:17] *** Joins: Masklin_Gurder (~joel@bioinf-serv.biol.lu.se)
[18:23:26] *** Joins: magyar_ (~magyar@user/magyar)
[18:23:27] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:23:34] *** Joins: vishal_ (~vishal@fedora/vishal)
[18:23:41] *** Joins: Nahra` (~user@static.161.95.99.88.clients.your-server.de)
[18:23:48] *** Joins: whaa_ (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[18:24:04] *** Server sets mode: +Ccnt 
[18:24:10] *** Joins: [RMS] (~rs@genoce.org)
[18:24:26] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[18:24:29] *** Joins: Tristam_ (~tristam@user/tristam)
[18:24:42] *** Joins: selckin (~selckin@user/selckin)
[18:24:51] *** Joins: LuKaRo_ (~LuKaRo@p200300dfa712f19d00000000000001f9.dip0.t-ipconnect.de)
[18:24:54] *** Joins: Bombo_ (atom@p4ff00b5d.dip0.t-ipconnect.de)
[18:25:01] *** Joins: mns_ (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[18:25:06] *** Joins: zaden_ (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[18:25:06] *** Joins: ncrowl_ (~ncrowl@89-160-77-219.cust.bredband2.com)
[18:25:11] *** Joins: Soliton_ (soliton@wesnoth/developer/soliton)
[18:25:19] *** Joins: finstern1s (~X@23.226.237.192)
[18:25:21] *** Quits: kj- (~kj@kj.aerisnetwork.net) (Client Quit)
[18:25:21] *** Joins: invra_ (~invra@mail.aletheianature.es)
[18:25:25] *** Joins: Earnest (~earnest@user/earnestly)
[18:25:25] *** Joins: herjazz_ (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[18:25:28] *** Joins: Tadgy_ (~tadgy@slackware.uk/founder/tadgy)
[18:25:28] *** Joins: tolecnal_ (tolecnal@login.xiro.net)
[18:25:29] *** Joins: jp11_ (~jp@87-198-216-242.ptr.magnet.ie)
[18:25:29] *** Joins: wiscii_ (~tct@user/wiscii)
[18:25:30] *** Joins: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[18:25:35] *** Joins: ponies_ (~ponies@203.185.241.247)
[18:25:37] *** Joins: rs_ (~rs@50.47.103.19)
[18:25:38] *** Joins: chronon_ (~chronon@user/chronon)
[18:25:46] *** Joins: redo_ (~redo@193.191.4.173)
[18:25:46] *** Joins: cjohnson_ (~cjohnson@li133-72.members.linode.com)
[18:25:47] *** Joins: overrider_ (~overrider@user/overrider)
[18:25:47] *** Joins: rdrg109_ (~rdrg109@user/rdrg109)
[18:25:51] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[18:25:53] *** Joins: sebastorama_ (~sebastora@104.131.87.249)
[18:25:54] *** Joins: simplici1y (~yti@user/simplicity)
[18:25:58] *** Joins: SuperL4g (~akulbe@user/superlag)
[18:26:09] *** Joins: KevinX_ (~KevinX@user/KevinX)
[18:26:16] *** Joins: chodonne_ (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[18:27:18] *** Joins: lechner_ (~lechner@debian/lechner)
[18:28:48] *** Joins: iliv_ (~iliv@93-77-147-152.lvv.volia.net)
[18:28:49] *** Quits: iliv_ (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[18:28:49] *** Joins: iliv_ (~iliv@user/iliv)
[18:28:50] *** Joins: phogg` (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[18:29:02] *** Joins: L3Fr0g2 (~fr0g@89.137.20.4)
[18:29:52] *** Quits: kj (~kj@kj.aerisnetwork.net) (*.net *.split)
[18:29:52] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[18:29:52] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[18:29:52] *** Quits: zoe (~zoe@fsf/member/zoe) (*.net *.split)
[18:29:52] *** Quits: nwm_ (~nwm___@pg.smtp.aihs.ca) (*.net *.split)
[18:29:52] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (*.net *.split)
[18:29:52] *** Quits: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[18:29:52] *** Quits: jaysicks (~jaysicks@178-164-134-138.pool.digikabel.hu) (*.net *.split)
[18:29:52] *** Quits: iliv (~iliv@user/iliv) (*.net *.split)
[18:29:52] *** Quits: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (*.net *.split)
[18:29:52] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (*.net *.split)
[18:29:52] *** Quits: ponies (~ponies@203.185.241.247) (*.net *.split)
[18:29:52] *** Quits: MercilessDeth (~brad@136.49.59.177) (*.net *.split)
[18:29:52] *** Quits: aphorise (~aphorise@82-75-255-36.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[18:29:52] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (*.net *.split)
[18:29:52] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[18:29:52] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[18:29:52] *** Quits: karabaja4 (~karabaja4@dh207-94-36.xnet.hr) (*.net *.split)
[18:29:52] *** Quits: luva (~luva@185.168.9.231) (*.net *.split)
[18:29:52] *** Quits: iapetus (~iapetus@S0106001195d728bb.cg.shawcable.net) (*.net *.split)
[18:29:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[18:29:52] *** Quits: Lantizia (~Lantizia@195.62.201.126) (*.net *.split)
[18:29:52] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[18:29:52] *** Quits: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se) (*.net *.split)
[18:29:52] *** Quits: vishal (~vishal@fedora/vishal) (*.net *.split)
[18:29:52] *** Quits: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d) (*.net *.split)
[18:29:52] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (*.net *.split)
[18:29:52] *** Quits: wiscii (~tct@user/wiscii) (*.net *.split)
[18:29:52] *** Quits: stevenm__ (~stevenm@stevenm.keele.netcentral.co.uk) (*.net *.split)
[18:29:52] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[18:29:52] *** Quits: nq (~nq@82.78.22.133) (*.net *.split)
[18:29:52] *** Quits: lechner (~lechner@debian/lechner) (*.net *.split)
[18:29:52] *** Quits: Soliton (soliton@wesnoth/developer/soliton) (*.net *.split)
[18:29:52] *** Quits: invra (~invra@mail.aletheianature.es) (*.net *.split)
[18:29:52] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[18:29:52] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[18:29:52] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (*.net *.split)
[18:29:52] *** Quits: sebastorama (~sebastora@104.131.87.249) (*.net *.split)
[18:29:52] *** Quits: Philonous_ (~Philonous@user/philonous) (*.net *.split)
[18:29:52] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[18:29:52] *** Quits: MDingas- (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[18:29:53] *** Quits: KevinX (~KevinX@user/KevinX) (*.net *.split)
[18:29:53] *** Quits: Dotz0cat (~Dotz0cat@98.19.249.252) (*.net *.split)
[18:29:53] *** Quits: Earnestly (~earnest@user/earnestly) (*.net *.split)
[18:29:53] *** Quits: led_belly (~led_belly@37.120.197.46) (*.net *.split)
[18:29:53] *** Quits: nortoh (~nortoh@user/nortoh) (*.net *.split)
[18:29:53] *** Quits: Naib (~j@user/naib) (*.net *.split)
[18:29:53] *** Quits: haniaF (~haniaF@83.24.224.152.ipv4.supernova.orange.pl) (*.net *.split)
[18:29:53] *** Quits: useretail (~useretail@185.132.19.151) (*.net *.split)
[18:29:53] *** Quits: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl) (*.net *.split)
[18:29:53] *** Quits: DonRichie (~DonRichie@ricl.de) (*.net *.split)
[18:29:53] *** Quits: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de) (*.net *.split)
[18:29:53] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (*.net *.split)
[18:29:53] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[18:29:53] *** Quits: kilobyte_ch (~kbch@77.109.171.24) (*.net *.split)
[18:29:53] *** Quits: kewl_fft (~kewl_fft@82-65-252-209.subs.proxad.net) (*.net *.split)
[18:29:53] *** Quits: at_work (~at_work@user/at-work/x-5282331) (*.net *.split)
[18:29:53] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[18:29:53] *** Quits: fstd (~fstd@xdsl-78-34-125-135.nc.de) (*.net *.split)
[18:29:53] *** Quits: magyar (~magyar@user/magyar) (*.net *.split)
[18:29:53] *** Quits: DPA (~DPA@94.16.128.75) (*.net *.split)
[18:29:53] *** Quits: drewlander (~drewlande@74.196.20.3) (*.net *.split)
[18:29:53] *** Quits: ncrowl (~ncrowl@89-160-77-219.cust.bredband2.com) (*.net *.split)
[18:29:53] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[18:29:53] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (*.net *.split)
[18:29:53] *** Quits: cjohnson (~cjohnson@li133-72.members.linode.com) (*.net *.split)
[18:29:53] *** Quits: ntwk (~ntwk@user/ntwk) (*.net *.split)
[18:29:53] *** Quits: Bombo (atom@user/bombo) (*.net *.split)
[18:29:53] *** Quits: foul_owl (~kerry@23.82.193.89) (*.net *.split)
[18:29:53] *** Quits: bulletxt (~kvirc@2-229-64-180.ip195.fastwebnet.it) (*.net *.split)
[18:29:53] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (*.net *.split)
[18:29:53] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[18:29:53] *** Quits: rs (~rs@user/rs) (*.net *.split)
[18:29:53] *** Quits: jp11 (~jp@87-198-216-242.ptr.magnet.ie) (*.net *.split)
[18:29:53] *** Quits: phogg (~phogg@user/phogg) (*.net *.split)
[18:29:53] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[18:29:53] *** Quits: SuperLag (~akulbe@user/superlag) (*.net *.split)
[18:29:53] *** Quits: damyan (damyan@159.69.176.219) (*.net *.split)
[18:29:53] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[18:29:53] *** Quits: tolecnal (tolecnal@login.xiro.net) (*.net *.split)
[18:29:53] *** Quits: Tristam (~tristam@user/tristam) (*.net *.split)
[18:29:53] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[18:29:53] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[18:29:53] *** Quits: greybot (~greybot@remote.wooledge.org) (*.net *.split)
[18:29:53] *** Quits: woky (~woky@li1651-31.members.linode.com) (*.net *.split)
[18:29:53] *** Quits: redo (~redo@193.191.4.173) (*.net *.split)
[18:29:53] *** Quits: setesat (~setesat@94.4.156.220) (*.net *.split)
[18:29:53] *** Quits: voldial (~user@195.179.201.175) (*.net *.split)
[18:29:53] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[18:29:53] *** Quits: Tadgy (~tadgy@slackware.uk/founder/tadgy) (*.net *.split)
[18:29:53] *** Quits: Tahvok (~Tahvok@user/tahvok) (*.net *.split)
[18:29:53] *** Quits: ori (~atdt@user/ori) (*.net *.split)
[18:29:53] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[18:29:53] *** kewl_fft_ is now known as kewl_fft
[18:29:53] *** csmiga1 is now known as csmiga
[18:29:53] *** Lord_of_Life_ is now known as Lord_of_Life
[18:29:53] *** yuckey2d9 is now known as yuckey2d
[18:29:53] *** setesat1 is now known as setesat
[18:29:54] *** wolfdale8 is now known as wolfdale
[18:29:54] *** luva2 is now known as luva
[18:29:54] *** DonRichie2 is now known as DonRichie
[18:29:57] *** EerdAppel3 is now known as EerdAppel
[18:29:57] *** vishal_ is now known as vishal
[18:29:57] *** Dotz0cat_ is now known as Dotz0cat
[18:29:57] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[18:29:58] *** Soliton_ is now known as Soliton
[18:30:21] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[18:30:36] *** yitz_ is now known as yitz
[18:30:50] *** Joins: led_belly_ (~led_belly@37.120.197.46)
[18:31:00] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[18:31:12] *** Quits: duuude (~user@user/duuude) (Quit: Konversation terminated!)
[18:31:43] *** Quits: herjazz_ (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:33:20] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:34:05] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:34:07] *** Quits: tercaL (~tercaL@user/tercal) (Remote host closed the connection)
[18:35:40] *** Joins: jaysicks (~jaysicks@178-164-134-138.pool.digikabel.hu)
[18:35:46] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 245 seconds)
[18:35:48] *** cdown_ is now known as cdown
[18:36:22] *** Joins: foul_owl (~kerry@23.82.193.89)
[18:36:38] *** Joins: bulletxt (~kvirc@2-229-64-180.ip195.fastwebnet.it)
[18:36:48] *** Joins: damyan (~damyan@mail.0x4711.org)
[18:36:58] *** Joins: koolazer (~koo@user/koolazer)
[18:37:02] *** Joins: Naib (~j@97e43ab1.skybroadband.com)
[18:37:02] *** Quits: Naib (~j@97e43ab1.skybroadband.com) (Changing host)
[18:37:02] *** Joins: Naib (~j@user/naib)
[18:37:09] *** Joins: karabaja4 (~karabaja4@dh207-94-36.xnet.hr)
[18:37:10] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[18:37:14] *** L3Fr0g2 is now known as L3Fr0g
[18:37:32] *** Joins: kilobyte_ch (~kbch@77.109.171.24)
[18:37:56] *** Joins: ntwk (~ntwk@user/ntwk)
[18:38:10] *** Joins: voldial (~user@195.179.201.175)
[18:38:11] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[18:38:15] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[18:38:20] *** Joins: crashrep (~crashrep@user/crashrep)
[18:39:29] *** Quits: Lope (~lope@user/lope) (Ping timeout: 256 seconds)
[18:41:26] *** Joins: zebrag (~chris@user/zebrag)
[18:41:45] *** Joins: tobybl_ (~tobybl@252.193.115.87.dyn.plus.net)
[18:43:12] *** Joins: greybot (~greybot@remote.wooledge.org)
[18:43:17] *** Quits: tobybl (~tobybl@252.193.115.87.dyn.plus.net) (Ping timeout: 240 seconds)
[18:44:27] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[18:45:19] *** Joins: selckin (~selckin@user/selckin)
[18:46:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:da3:37eb:76e1:ffc0) (Ping timeout: 240 seconds)
[18:47:28] *** jp11_ is now known as jp11
[18:48:01] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:49:04] *** Quits: selckin (~selckin@user/selckin) (Remote host closed the connection)
[18:49:12] *** Joins: selckin (~selckin@user/selckin)
[18:54:36] *** Joins: junebug (~junebug@2600:1700:3db0:2540:78f9:493d:7ef1:f2c7)
[18:54:37] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[18:55:52] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Quit: WeeChat 3.4)
[18:56:50] *** Joins: k8yun (~k8yun@user/k8yun)
[18:56:57] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[18:59:55] *** Joins: tangy (~tangy@user/tangy)
[19:00:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:78f9:493d:7ef1:f2c7) (Ping timeout: 240 seconds)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:03:22] *** Joins: Minvera (~Minvera@user/Minvera)
[19:03:23] *** Joins: fef (~thedawn@user/thedawn)
[19:03:32] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:06:23] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[19:06:42] *** Joins: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl)
[19:13:32] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 240 seconds)
[19:13:52] *** Joins: k8yun_ (~k8yun@user/k8yun)
[19:13:59] *** Joins: cdown_ (~cdown@188.214.11.14)
[19:15:29] *** Quits: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt) (Ping timeout: 256 seconds)
[19:15:36] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:15:48] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[19:16:24] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:16:37] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[19:16:45] *** cdown_ is now known as cdown
[19:17:17] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[19:18:47] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[19:21:49] *** cryptone1tor is now known as cryptonector
[19:23:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:24:28] *** Joins: richardm645 (~quassel@2600:8801:c507:b200:4dce:b65:f52:b920)
[19:26:47] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[19:26:53] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[19:29:49] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77)
[19:30:12] *** Joins: crashrep (~crashrep@user/crashrep)
[19:31:18] *** Joins: nwm_ (~nwm___@pg.smtp.aihs.ca)
[19:31:21] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:31:29] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[19:31:35] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:32:51] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[19:33:26] *** Joins: han-solo (~han-solo@user/han-solo)
[19:33:30] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[19:34:09] *** Quits: The_Blode (uid537595@user/the-blode/x-7164444) (Quit: Connection closed for inactivity)
[19:34:27] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:34:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:35:01] *** Quits: nwm__ (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 256 seconds)
[19:35:22] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:d670:6242:84ac:67cd:b737) (Remote host closed the connection)
[19:36:16] *** Joins: crashrep (~crashrep@user/crashrep)
[19:36:22] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Client Quit)
[19:36:44] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[19:36:45] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:36:53] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:37:16] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77) (Ping timeout: 268 seconds)
[19:37:26] <Led_Zeppelin2> is there a best practices method to parse ps output?
[19:37:53] <emanuele6> what is there to parse?
[19:38:36] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[19:38:42] <Soliton> best to not do it.
[19:39:10] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:39:40] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Client Quit)
[19:39:40] <Led_Zeppelin2> i would like to get all processes in "D" state.
[19:39:55] <emanuele6> just use `ps -o whatyounned= -p "$pid"', if you are trying to parse `ps -p "$pid', just don't do that
[19:40:19] <Led_Zeppelin2> why not use ps aux | awk '?
[19:40:28] <emanuele6> why would you do that??
[19:40:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:40:37] <emanuele6> that is insane, lol
[19:40:38] <Friithian> why use 1 command when 2 do the job but worse
[19:40:49] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:40:56] <Led_Zeppelin2> well, I take the output and do some statistics to it.
[19:41:33] <OnlineCop> Statistically speaking, of course.
[19:41:41] <Led_Zeppelin2> i suppose I am asking what is more reliable ps -o stat or ps aux | awk ... ?
[19:41:47] <Friithian> ok let's step back, what are you trying to do in general and why
[19:41:51] *** Joins: Adoi (~Adoi@user/adoi)
[19:42:07] <OnlineCop> pgrep
[19:42:07] *** Joins: bluedust (~bluedust@103.165.167.61)
[19:42:12] <emanuele6> ps a -ostate=,pid= | sed -n 's/^D[[:blank:]]*//p'
[19:42:23] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:43:04] *** Joins: crashrep (~crashrep@user/crashrep)
[19:43:14] <emanuele6> or (awk '$1 == "D" { print $2 }')
[19:43:22] *** Quits: zoe` (~zoe@xdsl-31-164-51-195.adslplus.ch) (Read error: Connection reset by peer)
[19:44:07] <emanuele6> parsing `ps aux' is kind of insane
[19:44:25] <Led_Zeppelin2> besides inefficiency. Why is it?
[19:44:25] <emanuele6> get the fields you need an make ps print them in the order you specify
[19:44:47] <emanuele6> because why would you do that?
[19:45:22] <Friithian> why use find's ability to use regex when you can do `find . | grep $stuff`
[19:45:25] <Led_Zeppelin2> habbit of running ps aux, instead of ps a -o=state
[19:45:37] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:45:50] <OnlineCop> why use find if `grep -r --include=` can do it for you? :P
[19:46:07] <Friithian> if you wanted to use -exec ?
[19:46:28] <emanuele6> also the output of `ps aux' is unparsable because it contains fields that may have spaces and the some fields are hard trimmed at a fixed width even when not outputting to a terminal
[19:46:33] <Friithian> I usually use `locate`
[19:46:39] <emanuele6> it just doesn't make any sense to use it in a script
[19:46:54] <OnlineCop> My trouble with find is writing up the syntax for multiple files: `a.txt or b.txt or cde.txt or abc.txt or ...` with all those `-o -name a.txt -o -name b.txt -o ...`
[19:47:29] <emanuele6> also, i don't think the default output format is specified
[19:47:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:47:53] <Soliton> grep --include also uses a glob. if your grep even has that.
[19:48:09] <OnlineCop> Yeah; the grep --include globs are nice.
[19:48:28] <Soliton> -name takes a glob just the same.
[19:48:35] <llua> if your pgrep has -r, that can select a process state.
[19:48:47] <Led_Zeppelin2> is ps -o can you have a seperator?
[19:49:11] <OnlineCop> `grep -r --include=\*.{c,cpp,h,hpp,txt,md,yml,yaml,txt,foo,bar,baz}`
[19:49:24] <OnlineCop> Not exactly sure how I'd do that same kind of line with `find`
[19:49:28] *** Joins: zoe (~zoe@fsf/member/zoe)
[19:49:28] *** Joins: Kyuzo68 (~Kyuzo@host-95-233-88-216.retail.telecomitalia.it)
[19:49:36] <Friithian> I usually use `locate` for locating files
[19:49:46] <OnlineCop> Maybe `-o\ -name\ {...,...,...}` ?
[19:50:04] <llua> !arguments > OnlineCop
[19:50:04] <greybot> OnlineCop: Understanding Arguments and Word Splitting: http://mywiki.wooledge.org/Arguments
[19:50:06] <OnlineCop> My container doesn't have `locate` unfortunately.
[19:50:12] <Friithian> oof
[19:50:19] <Friithian> so dang useful
[19:50:43] <emanuele6> also, it should be  ps -e -ostate=,pid= | awk '$1 ~ /D/ { print $2 }'
[19:51:18] <Soliton> state should just be D.
[19:51:26] <emanuele6> but `a' would only include your users processes and is not portable
[19:51:31] <Soliton> stat adds more stuff.
[19:51:59] *** Joins: Liblx (~Liblx@77.21.255.67)
[19:52:06] <emanuele6> s/but //
[19:52:14] <OnlineCop> !autocomplete
[19:52:21] <OnlineCop> !bash-completion
[19:52:22] <greybot> The "elders" in this channel mostly don't use tab completion, so can't help you, but a few of us do, so you may need to wait a while for help. See also !completion2 and !completion3
[19:53:41] <emanuele6> oh, yeah. it is more correct with `$1 == "D"', not `$1 ~ /D/'
[19:53:42] <OnlineCop> Looks like the url for !completion3 returns a bad gateway...
[19:53:54] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[19:54:01] <emanuele6> <Led_Zeppelin2 > is ps -o can you have a seperator?
[19:54:03] <emanuele6> what do you mean?
[19:54:43] <Soliton> fields seperated by something other than spaces, i guess.
[19:54:43] <Led_Zeppelin2> emanuele6, ps -Ao user,state  how can I get user and state be seperated by comma?
[19:54:51] *** Joins: crashrep (~crashrep@user/crashrep)
[19:54:57] <Led_Zeppelin2> exactly what Soliton  said
[19:55:06] <Earnest> You can't, -o is space separated
[19:55:06] <emanuele6> why are you printing the header?
[19:56:31] <Led_Zeppelin2> i can remove those. not needed. =
[19:56:47] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[19:56:48] <emanuele6> use `=', otherwise you will print `USER<padding>S' at the top, and that is problematic since 1) you probably don't need it, 2) if you grep for 'S$', you will also get the header
[19:58:30] <llua> !b20
[19:58:30] <greybot> The newbie will always have some excuse for doing it wrong.
[19:59:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:59:58] <emanuele6> also, i you should probably use `uid=' instead of `user=' since procps-ng's `ps' trims the username if it is longer than 8 characters and it's outputting multiple columns
[20:00:17] <emanuele6> e.g. i get emanuel+ instead of emanuele6 on my pc
[20:00:36] <Friithian> I still don't get the bigger picture of why we're doing this
[20:00:47] *** Quits: dsrt^ (~dsrt@207.243.108.170) (Remote host closed the connection)
[20:00:54] <emanuele6> but that should show that you should really stop thing about "parsing" ps and just use pgrep
[20:01:02] *** Quits: Kyuzo68 (~Kyuzo@host-95-233-88-216.retail.telecomitalia.it) (Quit: Konversation terminated!)
[20:01:17] <Led_Zeppelin2> can I use pgrep to get all processes in "R" state?
[20:01:18] <emanuele6> especially since pgrep and ps are from the same package on linux.
[20:01:25] <emanuele6> wasn't it D?
[20:01:25] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:01:30] <Soliton> pgrep -r R
[20:01:36] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[20:01:41] <kurahaupo> emanuele6: what about if the UID is 9 or 10 digits?
[20:01:43] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[20:01:43] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[20:01:49] <Led_Zeppelin2> emanuele6, "D" or "R" just was giving an example.
[20:01:56] <emanuele6> kurahaupo: i have not tried
[20:02:00] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:02:01] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:02:11] *** Joins: fef (~thedawn@user/thedawn)
[20:02:50] <emanuele6> but it also aligns numbers to the right and strings to the left when you have multiple columns
[20:03:06] <emanuele6> so ps with multiple columns should really not be used
[20:03:29] *** Joins: travisghansen (~travisgha@192.74.130.86)
[20:03:57] *** Joins: knstn (~knstn@ppp-94-66-57-125.home.otenet.gr)
[20:04:34] <kurahaupo> #  chown 1234567890 /bin/ps ; chmod u+s ps ; exec ps -o pid,uid,cmd -p $$
[20:04:41] <shbot> kurahaupo: chmod: cannot access 'ps': No such file or directory
[20:04:41] <shbot> kurahaupo:  PID   UID CMD
[20:04:41] <shbot> kurahaupo: etc... ( http://ix.io/3Rll )
[20:05:01] <kurahaupo> #  chown 1234567890 /bin/ps ; chmod u+s /bin/ps ; exec ps -o pid,uid,cmd -p $$
[20:05:03] <shbot> kurahaupo:  PID   UID CMD
[20:05:03] <shbot> kurahaupo:   44 1234567890 ps -o pid,uid,cmd -p 44
[20:05:03] <shbot> kurahaupo: (shell exited with 0)
[20:05:29] *** Quits: Guest3152 (~wp@lynx.uberspace.de) (Changing host)
[20:05:29] *** Joins: Guest3152 (~wp@wikipedia/itu)
[20:05:29] *** Guest3152 is now known as itu
[20:05:50] <kurahaupo> that doesn't look truncated
[20:06:46] *** ghost4096 is now known as pranshukhandal
[20:06:51] *** Quits: Liblx (~Liblx@77.21.255.67) (Remote host closed the connection)
[20:07:28] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:08:22] *** Quits: wwilliam (~afernande@user/wwilliam) (Quit: Konversation terminated!)
[20:10:28] <jelly> what if you had a user for that uid? # useradd -u 1234567890 foobarbaz; chown 1234567890 /bin/ps ; chmod u+s /bin/ps ; exec ps -o pid,uid,cmd -p $$
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:10:46] *** Quits: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net) (Ping timeout: 245 seconds)
[20:11:10] <llua> i mean, you had the command right there to try out
[20:11:21] <llua> # type useradd
[20:11:23] <shbot> llua: bash: type: useradd: not found
[20:11:26] <llua> guess not
[20:11:43] <llua> # ls /etc/passwd
[20:11:45] <shbot> llua: /etc/passwd
[20:12:57] <emanuele6> yes, uid don't get truncated, but is right aligned; username gets truncated to 7 characters (and a `+' gets added to the end) if it's 9 or more characters long
[20:13:10] *** Joins: L3Fr0g2 (~fr0g@89.137.20.4)
[20:13:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b3ce:33e4:7f1c:9233)
[20:13:38] <emanuele6> $ ps -o user=,uid= -p 3901196,3901339
[20:13:41] <emanuele6> abcdefgh 632139821
[20:13:45] <emanuele6> abcdefg+ 632139822
[20:14:01] *** Joins: ryzendar (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:14:01] <emanuele6> ( 3901339 is run by `abcdefghi' )
[20:14:04] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[20:14:35] *** iliv_ is now known as iliv
[20:14:59] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (Ping timeout: 256 seconds)
[20:17:29] <kurahaupo> that looks like truncated to 8 characters
[20:18:18] *** Joins: crashrep (~crashrep@user/crashrep)
[20:18:19] <kurahaupo> or more likely 8 bytes, if you have the misfortune to have UTF-8 encoded usernames
[20:19:03] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[20:20:15] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[20:21:43] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b3ce:33e4:7f1c:9233) (Remote host closed the connection)
[20:21:51] *** Joins: Masterphi (~Masterphi@user/masterphi)
[20:21:59] <jelly> I'm not sure that's legal, have you seen those anywhere
[20:22:08] *** Joins: junebug (~junebug@2600:1700:3db0:2540:8136:88ae:5eca:c31b)
[20:22:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:22:58] *** Joins: crashrep (~crashrep@user/crashrep)
[20:30:21] <kurahaupo> jelly: usernames are heavily restricted in theory (only lower alpha followed by any lower alpha-numeric), but in practice that doesn't stop people bending the rules.
[20:30:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:30:56] *** Quits: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk) (Remote host closed the connection)
[20:31:20] *** Joins: at_work (~at_work@user/at-work/x-5282331)
[20:32:12] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[20:32:39] *** Joins: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk)
[20:33:00] *** Joins: Girl-JJDa (~Girl-JJDa@112.45.55.79)
[20:33:02] *** Joins: k8yun (~k8yun@user/k8yun)
[20:33:50] *** Joins: lungaro (~sig@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[20:34:10] <lungaro> can I read 2 variables in order separated by whitespace somehow? I thought I could just do this
[20:34:15] <lungaro> echo "1 2" | read foo bar
[20:34:18] <lungaro> and foo=1 and bar=2
[20:34:23] <phy1729> !faq disappear
[20:34:23] <greybot> https://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop that's in a pipeline. Why do they disappear after the loop terminates? Or, why can't I pipe data to read?
[20:35:49] *** Joins: crashrep (~crashrep@user/crashrep)
[20:38:10] <kurahaupo> lungaro: use « read var1 var2 var3 … <<<"$stuff" » rather than « echo "$stuff" |  read var1 var2 var3 … »
[20:38:54] *** L3Fr0g2 is now known as L3Fr0g
[20:39:06] <kurahaupo> also, « IFS=' ' read -r » to be explicit about the field separator
[20:40:19] *** Joins: Sulky__ (~Sulky@37.173.160.88)
[20:40:26] *** Joins: dreamon (~dreamon@pd9503c4b.dip0.t-ipconnect.de)
[20:40:51] <lungaro> Ah, thanks. I just realized my delim is a tab instead
[20:41:01] *** Joins: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr)
[20:41:02] <lungaro> Is tab represented better than this somehow?  FS="$(echo -ne "\t")" r
[20:41:07] <lungaro> FS=IFS*
[20:41:19] <Soliton> !$'
[20:41:19] <greybot> bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
[20:42:28] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[20:43:01] *** Quits: Sulky_ (~Sulky@37.166.179.63) (Ping timeout: 256 seconds)
[20:43:12] *** Joins: Sulky_ (~Sulky@37.173.160.88)
[20:43:19] *** Quits: Sulky (~Sulky@37.166.179.63) (Ping timeout: 256 seconds)
[20:43:53] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[20:44:39] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[20:46:15] <OnlineCop> !<
[20:46:16] <greybot> Redirections: http://mywiki.wooledge.org/Redirection
[20:49:08] *** Quits: tobybl_ (~tobybl@252.193.115.87.dyn.plus.net) (Remote host closed the connection)
[20:50:19] <lungaro> Nice
[20:52:16] *** Quits: Girl-JJDa (~Girl-JJDa@112.45.55.79) (Quit: Client closed)
[20:53:17] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[20:53:28] *** Quits: zaden_ (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:53:35] *** Joins: tradar (~tradar@user/tradar)
[20:53:48] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[20:55:45] *** Joins: lavaball (felix@31.204.155.215)
[20:55:55] *** Joins: tangy (~tangy@user/tangy)
[20:56:46] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[20:57:35] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:58:07] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[20:58:15] <OnlineCop> If I've got IFS=$'\n' and want to print the newline as the two literal characters '\n', can `tr` do that?
[20:58:35] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[20:58:39] <phogg`> no
[20:58:44] <phogg`> tr translates characters one to one
[20:58:53] <OnlineCop> sed then?
[20:59:14] <Soliton> not in that format, no.
[20:59:24] <Soliton> sed -n l displays that as $.
[20:59:40] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[21:00:48] <phogg`> I am unclear on the scenario where you would need to translate it
[21:02:14] <OnlineCop> I've got `printf "%s='%s'\n" "$myvar" "${!myvar}"` in a function to print out the contents of a given variable. I'd like to translate the newline within 'myvar' to display as '\n' instead of a literal newline.
[21:02:19] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:03:36] <Soliton> what are you going to do with the output?
[21:03:40] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:04:19] <phogg`> how about printf '%s=%q\n' ?
[21:04:38] <phogg`> depending on what you're doing that might be what you really wanted
[21:05:09] <OnlineCop> Soliton: The output is only for my interactive shell, so I can inspect what it contains. It's not being piped anywhere else.
[21:05:28] *** Quits: bunny (~bunny@user/bunny) (Remote host closed the connection)
[21:05:34] <Soliton> i would still use %q as suggested then.
[21:05:48] <Soliton> no need to guess if the pseudo quoting doesn't work out.
[21:05:50] *** Joins: bunny (~bunny@user/bunny)
[21:06:37] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:07:00] <OnlineCop> Ah, gotcha.
[21:07:01] <phogg`> # a=$'foo\nbar\n'; ref=a; printf '%s=%q\n' "$ref" "${!ref}"
[21:07:03] <shbot> phogg`: a=$'foo\nbar\n'
[21:07:13] <phogg`> look about right?
[21:07:36] <OnlineCop> Yep, that looks good.
[21:12:26] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[21:13:09] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 252 seconds)
[21:13:59] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[21:14:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[21:15:46] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 245 seconds)
[21:20:01] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[21:20:10] *** sebastorama_ is now known as sebastorama
[21:22:14] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[21:22:23] *** Joins: rgrinberg (~textual@2806:101e:7:cba4:b560:bad3:e7c6:5293)
[21:22:56] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[21:23:14] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.5-dev)
[21:23:37] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[21:24:00] *** Joins: Sulky (~Sulky@37.173.160.88)
[21:24:20] *** phogg` is now known as phogg
[21:24:26] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (Changing host)
[21:24:26] *** Joins: phogg (~phogg@user/phogg)
[21:24:54] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:25:17] *** Quits: Sulky__ (~Sulky@37.173.160.88) (Ping timeout: 256 seconds)
[21:26:12] *** Quits: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[21:28:54] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:30:01] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:30:40] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Quit: WeeChat 3.4)
[21:31:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[21:31:46] *** Quits: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de) (Quit: Leaving)
[21:31:50] *** Joins: bluedust (~bluedust@103.165.167.61)
[21:32:02] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.231)
[21:33:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:34:11] *** Joins: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[21:35:02] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[21:35:46] *** Joins: tmm88 (~tmm88@user/tmm88)
[21:36:38] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:37:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[21:37:52] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070) (Remote host closed the connection)
[21:37:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:38:05] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b872:ce5f:cbfa:4070)
[21:38:40] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.5-dev)
[21:39:10] *** Joins: zaden (~maddx@73.92.207.228)
[21:47:56] *** Joins: arinov (~arinov@212.156.215.30)
[21:50:10] <OnlineCop> I like what %q is doing for things containing tabs and newlines, although it makes most of the other characters harder to read due to \e\s\c\a\p\i\n\g each of the special characters. I might have to detect whether a string contains [\t\n] and `printf %q` those and then `printf '%s'` the remainders.
[21:52:33] <phogg> # a=$'foo\nbar\n'; ref=a; printf '%s=%s\n' "$ref" "${!ref@Q}"
[21:52:34] <shbot> phogg: a=$'foo\nbar\n'
[21:52:35] <phogg> OnlineCop: ^
[21:52:40] <phogg> see if that works better for you
[21:53:00] <OnlineCop> ${!ref@Q} ?
[21:53:59] <OnlineCop> That's quite a bit cleaner.
[21:54:05] *** Joins: justanotheruser (~justanoth@gateway/tor-sasl/justanotheruser)
[21:56:18] <phogg> it also does quoting, but the semantics can be a bit different
[21:56:25] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[21:58:21] *** SuperL4g is now known as SuperLag
[21:58:52] *** Joins: tangyQED (~tangy@user/tangy)
[21:59:25] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[22:00:20] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 268 seconds)
[22:00:50] *** Quits: tangyQED (~tangy@user/tangy) (Read error: Connection reset by peer)
[22:01:06] *** Joins: tangy (tangy@user/tangy)
[22:01:47] *** Quits: fling (~fling@user/fling) (Ping timeout: 256 seconds)
[22:01:48] *** Quits: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk) (Quit: Connection closed)
[22:03:17] <Friithian> lmao I just had someone say that dash is faster than bash, and less bloated
[22:03:45] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[22:04:03] *** Quits: Dotz0cat (~Dotz0cat@98.19.249.252) (Ping timeout: 256 seconds)
[22:05:17] <phogg> one man's more features is another man's more bloat
[22:05:30] <Friithian> another man is stupid
[22:05:46] <phy1729> less bloated is kinda the whole point for dash
[22:05:51] <phy1729> faster could be measured
[22:05:59] <phogg> standards conformance is kind of the whole point of dash
[22:07:27] <NRK> dash isn't fully standard conformant and has a couple extensions
[22:07:35] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[22:08:39] *** Joins: keypusher (keypusher@user/keypusher)
[22:10:14] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:10:22] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[22:10:42] <emanuele6> BUGS    It's too big and too slow.
[22:11:34] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:11:37] <Earnest> NRK: extensions are fine, it's whether it implements the posix bits "correctly"
[22:11:58] *** Joins: somlis (~somlis@user/somlis)
[22:12:39] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[22:12:58] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:13:29] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:13:36] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:14:11] *** Joins: thiras (~thiras@user/thiras)
[22:14:29] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:16:12] *** Joins: taupiqueur_ (~taupiqueu@130.247.204.77.rev.sfr.net)
[22:17:46] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[22:19:13] <Tach> Is it possble to do this ? if [[ "${VAR:0:11}" != "THIS from*=" ]]; then.... but where the * is do something like 0-9, maybe even 2 digits ?
[22:19:51] <tangy> dash is a bit faster than bash in my experience, running `dd` for example
[22:20:23] <Soliton> [[ supports pattern matching, yes.
[22:20:38] <phogg> tangy: that doesn't make sense
[22:20:40] <Soliton> don't quote glob characters or they will just match literally.
[22:21:27] <tangy> phogg: yeah, I expected someone would probably say that.
[22:22:45] *** Joins: ChmEarl (~chmearl@user/chmearl)
[22:23:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:23:13] <tangy> "experience says that proper filesystem benchmarking is hard to do right; it's also highly workload- and hardware-dependent." -- lwn.net, 2013. Maybe things have changed since then, though
[22:24:44] <phogg> the shell should make essentially no difference since it will not do much except parse and exec, the first part of which will probably be faster in dash
[22:24:52] <Soliton> the parent process of dd will not change how fast or slow dd runs.
[22:24:55] <phogg> but we're talking measurements in CPU cycles not milliseconds
[22:25:24] *** Quits: dea_ (~dea@static-68-235-39-125.cust.tzulo.com) (Ping timeout: 240 seconds)
[22:25:49] <phogg> if you are "benchmarking" disks by writing shell loops and using dd... that's still not likely to be faster in dash. but now you're talking more sense
[22:26:07] *** Joins: ekathva (~ekathva@2001:999:51:19b8:f2b5:31fb:6c84:f10)
[22:26:16] <Tach> Soliton yes but how between "" ?
[22:26:38] <Soliton> do NOT quote the glob characters.
[22:26:42] *** Tadgy_ is now known as Tadgy
[22:26:51] <Soliton> like, don't put them between "".
[22:27:03] <Tach> good one
[22:27:13] <Soliton> !quotes
[22:27:13] <greybot> https://mywiki.wooledge.org/Quotes
[22:27:54] *** tolecnal_ is now known as tolecnal
[22:29:34] *** nwm_ is now known as nwm
[22:30:11] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Quit: Client closed)
[22:30:13] <tangy> oh, I see. okay
[22:30:16] <tangy> thx
[22:31:53] <OnlineCop> Is there a practical reason why, within the ASCII range, it defines the sequences `<=>` and `[\]` instead of grouping '<>' or '[]' together? Is it to avoid behaviors that could occur if y
[22:32:02] <OnlineCop> s/Is it to avoid.*//
[22:32:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:33:16] <edk> i wouldn't be at all surprised if they just thought it looked nicer this way
[22:33:22] *** Quits: taupiqueur_ (~taupiqueu@130.247.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[22:33:48] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[22:35:40] <Inline> will you complete your question too ?
[22:38:19] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[22:39:46] <OnlineCop> I exported all values from {1..255} to see whether those `printf %q "${!var}"` vs. `printf %s "${!var@Q}"` would display differently. I'd expect that '<' and '[' can be used as some kind of sh/bash expansion that could occur if you accidentally printed the raw values, so they separated them from their closing counterparts to avoid that kind of mistake.
[22:40:19] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:40:34] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[22:41:02] <OnlineCop> I like the $'...' output that either %q or @Q was doing, but it only appears to come into effect when certain ranges of values are being displayed (control characters, \t, \r, \n, etc.)
[22:42:01] <Soliton> quite the foresight they had to design ASCII based on shells that will be developed later.
[22:42:02] <OnlineCop> I was hoping to find something that would simply wrap ANY contents in $' strings, but haven't found one.
[22:43:24] *** Joins: Lope (~lope@user/lope)
[22:44:33] <OnlineCop> I might cheat, inject an artificial `\t` in there, then sed it back out... :P
[22:45:46] <Earnest> Fwiw, easy way to get url encoded for you with curl without connecting to resource: curl --unix-socket /dev/null -w '%{url_effective}\n' --data-urlencode foo=bar url
[22:46:29] <phogg> OnlineCop: when in doubt about motivation I suggest looking at the bit patterns
[22:47:31] <phogg> Earnest: neat trick, I like it. Thanks.
[22:47:39] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[22:47:41] <Earnest> Also a note, curl probably wants -q and -g every time you use it
[22:50:17] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:51:36] *** Quits: sinaowolabi_ (~SinaOwola@169.159.107.1) (Ping timeout: 245 seconds)
[22:51:59] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:55:21] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 245 seconds)
[22:55:50] <phogg> Earnest: when I try it I always just get back 'url' unencoded. Does this depend on a specific version of curl?
[22:56:48] <Earnest> phogg:  ~ curl -G --unix-socket /dev/null -sw '%{url_effective}\n' --data-urlencode foo='bar=baz' blahblah
[22:56:51] <Earnest> http://blahblah/?foo=bar%3Dbaz
[22:56:52] <phogg> this does the trick for me (although it is full URL encode, not component encode): curl -g -q --unix-socket /dev/null -w '%{url_effective}\n' -G --data-urlencode a="some data" '' 2>/dev/null | cut -c 5-
[22:56:56] <Earnest> On curl 7.81.0
[22:57:11] <phogg> yeah, as I suspected: need -G to make it tick
[22:57:30] <Earnest> -G makes it a GET request such as the query parameters end up in the URL rather than POST body
[22:57:43] <phogg> yep, just wasn't in your original example
[22:57:53] <Earnest> Oh, true it wasn't
[22:57:55] <Earnest> derp
[22:58:12] *** Joins: taupiqueur_ (~taupiqueu@182.245.204.77.rev.sfr.net)
[22:58:14] <Earnest> I had to write my own httpd to understand GET vs POST ._.
[22:58:30] <phogg> actually looks like you can omit the key=content and and just send content directly: curl -g -q --unix-socket /dev/null -w '%{url_effective}\n' -G --data-urlencode "some data" '' 2>/dev/null | cut -c3-
[22:58:37] *** Joins: greentree (~greentree@user/greentree)
[22:58:41] <phogg> Earnest: I only had to write my own version of CGI.pm
[22:58:55] * phogg shakes fist at x-www-form-urlencoded
[22:59:21] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:59:26] <Earnest> Yeah I've done a few of those to understand it, coincidently this curl faffery is implementing oauth2 because gmail threats.  So this is to generate auth url
[22:59:44] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[23:00:12] <Earnest> Which looks like this https://0x0.st/oPjU.sh
[23:00:22] <phogg> Earnest: I have had an encodeURIComponent shell script in my scripts library for a long time and just use that
[23:00:41] <Earnest> Yeah, sort of avoid that if I can
[23:00:57] <Earnest> I do not want to create one of those "library" type things, done that before
[23:01:53] <greentree> not sure if this is the right place to inquire, but what could be a way to ensure my py scripts persist running all the time, e.g system reboot/process crash?
[23:01:58] <greentree> i was throwing hacky stuff like this before into cron: ps auxww | pgrep python3.6 || nohup python3.6 run.py >> /tmp/script.log 2>&1 &
[23:01:58] <Earnest> But creating a simple percent-encoder in 4 or so lines of awk has been useful once or twice; once for djview history configs (subsequently became python so non-issue now) and once for xsltproc and its xsl:document href=...
[23:02:02] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.231) (Ping timeout: 252 seconds)
[23:02:09] <phogg> greentree: use a service supervisor
[23:02:12] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[23:02:27] <phogg> greentree: if on Linux systemd can do this and is currently popular. I like daemon(1) for this anywhere.
[23:02:28] <Earnest> Yeah use a supervisor, be it systemd, runit, s6, openrc, whatever
[23:02:31] *** Joins: oilt^ (~oilt@50.224.20.226)
[23:03:02] <Soliton> ps | pgrep that's a new one.
[23:03:11] <Earnest> :D
[23:03:19] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.235)
[23:03:41] <phogg> greentree: in general you should not need to scrape strings out of the ps stdout.
[23:03:57] <phogg> if you find yourself here you have become lost, seek help
[23:04:10] <greentree> now that i think about it ps seems superfluous
[23:04:14] <phogg> it is
[23:04:29] <DPA-> I think inittab can start & keep restarting stuff too, but I never used it for this.
[23:04:43] <phogg> it can, but you probably don't want to use it for that
[23:04:52] <greentree> https://stackoverflow.com/a/62643730/13063855
[23:04:56] <Soliton> for restarting just run in an infinite loop.
[23:04:57] <greentree> so something like this could work then?
[23:05:00] <phogg> tl;dr service supervisor. If your initd doesn't bundle one it can still launch one
[23:05:21] <phogg> greentree: I don't know, I stay as far away from systemd as I can
[23:09:22] <phogg> world's simplest sysvinit "supervisor": printf '#!/bin/sh\n[ "$1" = start ] && while true; python run.py; done >> /tmp/script.log &\n' > /etc/init.d/runpy
[23:09:32] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:09:34] <phogg> paths obviously not correct
[23:10:30] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[23:11:15] <znf> sysvinit, what year is this
[23:11:43] <DPA> 2022
[23:11:54] <DPA> Still good
[23:12:08] *** Quits: Strom (strom@fedora/strom) ()
[23:12:43] <cryptonector> how do I make shellcheck understand that a variable set in one script is used by another sourced by the first?
[23:12:52] <phogg> sysvinit scripts still work on systemd systems, as well as lots of others
[23:13:10] <cryptonector> I'm using # shellcheck source=...
[23:13:52] <DPA> I'm still writing regular init scripts in yaml, like any normal person does
[23:14:04] <phogg> cryptonector: can I convince you to avoid composing together such a scenario?
[23:14:17] *** Joins: Strom (~strom@fedora/strom)
[23:15:53] <cryptonector> phogg: maybe?  try
[23:15:55] *** KevinX_ is now known as KevinX
[23:16:24] <larryv> cryptonector: so you're saying you have something like ''var=blah; . foo.sh'' and foo.sh uses var but shellcheck is saying var is unused?
[23:16:50] <cryptonector> correct
[23:17:01] <cryptonector> and it complains about it not being set in foo.sh too
[23:18:01] <cryptonector> seems silly -- what's the point of telling shellcheck how to follow a source command if it won't do this?  (the obvious answer may be that no one has contributed that logic to shellcheck, which would be fair)
[23:18:01] *** Quits: stanlib (~archblade@user/stanlib) (Ping timeout: 256 seconds)
[23:18:36] *** Quits: junebug (~junebug@2600:1700:3db0:2540:8136:88ae:5eca:c31b) (Ping timeout: 240 seconds)
[23:19:52] *** Joins: stanlib (~archblade@user/stanlib)
[23:19:55] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 240 seconds)
[23:21:08] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:21:41] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[23:21:57] <phogg> cryptonector: I would do it this way: source foo.sh before assigning the variable, be sure that it only defines functions, call those functions after the variable is defined, and then shellcheck -x original.sh so it follows sourcing as needed.
[23:22:52] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:22:53] *** Joins: nwm_ (~nwm___@pg.smtp.aihs.ca)
[23:23:41] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:23:55] <cryptonector> ohh, crap, -x -- I forgot the -x
[23:24:03] <cryptonector> lol; nvm
[23:25:38] *** Lord_of_Life_ is now known as Lord_of_Life
[23:26:47] *** Quits: nwm (~nwm___@pg.smtp.aihs.ca) (Ping timeout: 252 seconds)
[23:27:11] *** Joins: crashrep (~crashrep@user/crashrep)
[23:33:02] *** Quits: YHVH (~yhvh@2601:982:8300:8090:b149:e0b9:1c7e:7f61) (Ping timeout: 240 seconds)
[23:33:48] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[23:34:07] *** Joins: gjvc (~gjvc@user/gjvc)
[23:34:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:39:05] *** Joins: lispy (~lispy@user/lispy)
[23:42:55] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[23:43:00] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[23:43:33] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:45:13] *** Quits: stanlib (~archblade@user/stanlib) (Ping timeout: 256 seconds)
[23:46:30] *** Joins: YHVH (~yhvh@2601:982:8300:8090:31c1:b472:f49e:8a92)
[23:46:57] *** Joins: ano (~ano@user/ano)
[23:47:12] *** Joins: stanlib (~archblade@user/stanlib)
[23:51:08] *** Quits: rgrinberg (~textual@2806:101e:7:cba4:b560:bad3:e7c6:5293) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:53:08] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Quit: Client closed)
[23:54:34] *** Joins: yustin (~yustin@user/yustin)
[23:57:15] *** Quits: mooz (~none@173.208.98.70) (Quit: leaving)
[23:58:00] *** Joins: Betal (~Betal@user/betal)
[23:59:27] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
