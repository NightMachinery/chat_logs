[00:03:58] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 256 seconds)
[00:05:19] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:08:57] *** Quits: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es) (Quit: ¡Hasta luego! See you!)
[00:09:04] *** Quits: bmodotdev (~bmo@user/bmodotdev) (Ping timeout: 256 seconds)
[00:09:18] *** Joins: bmodotdev (bmo@user/bmodotdev)
[00:09:43] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:10:00] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:13:02] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:13:21] *** Quits: Su-Shee (~Susanne@p4ff49fb1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:14:29] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[00:15:02] *** Joins: Su-Shee (~Susanne@p4ffc79c5.dip0.t-ipconnect.de)
[00:15:48] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:19:25] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:22:45] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:24:00] *** Joins: AntonSpain (~Materazzi@24.135.203.113.dynamic.jazztel.es)
[00:26:39] *** Quits: AntonSpain (~Materazzi@24.135.203.113.dynamic.jazztel.es) (Client Quit)
[00:32:36] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:35:08] *** Joins: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es)
[00:36:57] *** Quits: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es) (Client Quit)
[00:39:08] *** Joins: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es)
[00:39:20] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:40:20] *** Joins: xenial-user5 (~androirc@20014C4C17E1D200D0FE926A52D4B285.catv.pool.telekom.hu)
[00:41:22] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[00:44:29] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:44:45] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:46:19] *** Quits: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es) (Quit: ¡Hasta luego! See you!)
[00:51:32] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[00:52:07] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:54:36] *** Joins: proller (~p@2a02:6b8:b081:1214::1:2)
[01:03:47] *** Joins: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es)
[01:11:55] * GumbyPAN CPAN Upload: App-SpamcupNG-0.006 by ARFREITAS https://metacpan.org/release/ARFREITAS/App-SpamcupNG-0.006
[01:11:56] *** Quits: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es) (Quit: ERC (IRC client for Emacs 27.1))
[01:13:56] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[01:17:20] *** Quits: magla (~gelignite@55d4a165.access.ecotel.net) (Quit: Stay safe!)
[01:19:57] *** Joins: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es)
[01:21:54] *** Joins: humky (~humky@user/humky)
[01:26:57] * GumbyPAN CPAN Upload: Alien-proj-1.16 by SLAFFAN https://metacpan.org/release/SLAFFAN/Alien-proj-1.16
[01:53:31] *** Joins: cfr (~cfr@ip-109-43-113-0.web.vodafone.de)
[02:05:19] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 252 seconds)
[02:05:45] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[02:07:50] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[02:12:43] *** Joins: fwg (~fwg@user/fwg)
[02:15:41] *** Quits: proller (~p@2a02:6b8:b081:1214::1:2) (Ping timeout: 268 seconds)
[02:17:56] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) ()
[02:27:51] *** Joins: proller (~p@80.240.216.69)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.111.164)
[02:34:10] *** Quits: pizdets (~pizdets@183.182.110.248) (Ping timeout: 268 seconds)
[02:38:46] *** Quits: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es) (Quit: ERC (IRC client for Emacs 27.1))
[02:46:32] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[02:47:59] <aquanight> wild and random idea that will never happen because it'll probably break everything: (@array, $var) = (list...) should be equivalent to: (@array) = (list...); $var = pop @array;
[02:51:13] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:51:31] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 252 seconds)
[02:59:02] <krismatrix> what would you guys recommend for a simple database to work along with mojo.pl ? Currently, I use a flat file for storing data. I don't have anything complex right now, but I'd like to use a database that I can scale easily with perhaps a simple gui. I know companies use Oracle SQL, PostgreSQL, etc., and they are usually huge. My needs are usually not that massive.
[03:02:15] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:04:57] *** Joins: proller (~p@80.240.216.69)
[03:06:10] <aquanight> krismatrix: sqlite I think would make for a good launching point. I don't think it provides a GUI but it can be used as an early DB that can migrate to postgre
[03:06:27] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[03:07:06] <aquanight> if "simple gui" is in your needs... dare I say MS Access?
[03:07:12] <krismatrix> and how would you connect mojo with sqlite? Use DBI ?
[03:07:19] <krismatrix> Running on linux. So MS Access won't work.
[03:07:35] <aquanight> yeah DBI I think
[03:08:03] <x5c30> krismatrix: Mojo::SQLite is a good choice if you're in mojo-land
[03:08:20] <krismatrix> great. didn't find that module when I searched.
[03:08:41] <x5c30> if and when you need to scale, Mojo::Pg is nice for postgres and you'll have a good start
[03:08:41] <aquanight> https://metacpan.org/pod/DBD::SQLite is the DBI driver module
[03:08:42] <Paperbot> Link title(s): [ DBD::SQLite - Self-contained RDBMS in a DBI Driver - metacpan.org ]
[03:08:57] <aquanight> but yeah also Mojo
[03:09:06] <aquanight> https://metacpan.org/pod/Mojo::SQLite
[03:09:07] <Paperbot> Link title(s): [ Mojo::SQLite - A tiny Mojolicious wrapper for SQLite - metacpan.org ]
[03:10:12] <krismatrix> umm..basic question. I imagine, I need to install sqlite (something like sudo apt install sqlite) on my machine to create and edit a sqlite database. Or does Mojo::SQLite somehow automatically install it for me, but is local to my project?
[03:10:58] <x5c30> DBD::SQLite (required by Mojo::SQLite deps) will build its own version of sqlite, but you should be able to use distro-provided package to access the database as well
[03:11:57] <aquanight> you would actually install libsqlite and libsqlite-dev
[03:12:17] <aquanight> rembmer on debian-like systems you usually need a -dev package to get headers
[03:12:28] <x5c30> the dbd driver will still end up building its own packaged version
[03:12:35] <x5c30> it has to be patched to use the system libs
[03:12:42] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[03:12:49] <aquanight> or just cpan it and see what happens
[03:13:03] <x5c30> or you could search your distro packages for dbd-sqlite if you're using system perl, they are likely to do that for you
[03:13:50] <krismatrix> I am not sure i follow completely, but I will try it out. I think my decision now is whether I go with sqlite or skip that and just do postgresql.
[03:14:41] <x5c30> "database" and "simple" don't often go hand-in-hand :) i'm sure people will be helpful if you have more questions
[03:15:51] <ilmari> krismatrix: the "sqlite" packages on debian are the old sqlite 2.x, you need sqlite3 to access databases creted with DBD::SQLite
[03:15:56] <krismatrix> well..i have done simple flat files, and berkely db which i connect with Tie File. They are easy to implement. But when I dealt with larger databases, I never had to set up them. I just do simple SELECT queries, and modifications.
[03:16:10] <krismatrix> ok.
[03:16:14] <krismatrix> noted on sqlite3.
[03:22:09] * GumbyPAN CPAN Upload: App-Greple-8.5205 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-8.5205
[03:25:59] *** Quits: Russell (russell@bnc4free/staff/russell) (Ping timeout: 250 seconds)
[03:26:31] *** Joins: Russell (russell@bnc4free/staff/russell)
[03:27:05] *** Quits: ilmari (~ilmari@user/ilmari) (Ping timeout: 252 seconds)
[03:27:13] *** Joins: ilmari (~ilmari@user/ilmari)
[03:34:48] *** Quits: fstd (~fstd@xdsl-85-197-54-43.nc.de) (Read error: Connection reset by peer)
[03:35:55] *** Joins: fstd (~fstd@xdsl-85-197-54-43.nc.de)
[03:39:57] *** Quits: averell (~averell@user/averell) (Remote host closed the connection)
[03:43:12] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[03:44:14] *** Joins: tejr (~tejr@user/tejr)
[03:45:50] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[03:53:17] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200D0FE926A52D4B285.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[03:55:14] <Grinnz> krismatrix: only advantage of sqlite is you dont have to set up the database service first. if you're alright doing that then go pg
[03:59:45] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:00:37] *** Joins: whynot (~whynot@37.73.106.62)
[04:04:00] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:09:36] <aquanight> I feel like sqlite3 would be ideal for dev/debug mode. You can target prebuilt test databases at the drop of a hat and such like.
[04:09:48] <Grinnz> it would be, if sqlite and pg were compatible
[04:09:56] <aquanight> production you switch to pg
[04:10:05] <Grinnz> but they're incompatible enough that it's not really helpful for testing
[04:10:13] <aquanight> bleh
[04:10:22] <Grinnz> particularly in how sqlite doesn't have types
[04:10:24] <aquanight> why can't everone just agree on one SQL dialect
[04:10:34] <Grinnz> it's more than just sql syntax
[04:11:08] <Grinnz> you're gonna run into a lot of type conflicts if you try to deploy a schema you only tested on sqlite
[04:11:10] <aquanight> or just serialize a hash and have done with it
[04:18:25] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[04:20:37] *** Quits: scotticles (~TheScotti@h96-60-193-167.cdcyut.broadband.dynamic.tds.net) (Read error: Connection reset by peer)
[04:20:49] *** Joins: scotticles (~TheScotti@h96-60-193-167.cdcyut.broadband.dynamic.tds.net)
[04:22:15] * GumbyPAN CPAN Upload: SPVM-0.9018 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9018
[04:23:40] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[04:24:11] *** Joins: tejr (~tejr@user/tejr)
[04:27:43] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[04:29:42] *** Quits: krismatrix (~krismatri@38.80.149.51) (Remote host closed the connection)
[04:30:00] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[04:30:04] *** Joins: krismatrix (~krismatri@38.80.149.51)
[04:30:24] <krismatrix> is Grinnz saying that it is better to use postgresql and not bother with sqlite or something?
[04:34:53] <Grinnz> generally, yes
[04:34:54] <ology> sqlite is good for prototyping and simplistic databases for me. I'd develop with pg if you are planning to use pg.
[04:35:31] <Grinnz> sqlite is best for applications which need to be deployed without a database server or will always be simple single user hobby projects
[04:35:56] <Grinnz> if you think you'll be better off switching to pg at some point, just start with pg
[04:39:44] <krismatrix> Ok. I already have a flat file that works for my minimalist needs. But since I want to practice creating a more scalable system, i think your suggestion might work.
[04:40:35] <krismatrix> I have heard of other databases (but no nothing of) like mongo DB, something about noSQL, firestore, etc., and presently do not have the knowledge background of what is useful for what purpose.
[04:42:05] <krismatrix> and if I use postgresql, will just carton install of Mojo::Pg be enough to get me doing for my project? Does postgresql need to be installed and set up initially? 
[04:42:38] <krismatrix> naturally, I do know that Mojo::Pg is the module I need to interact with the pg database. But wondering if the initial set up of the database is doing outside of mojo::Pg?
[04:43:36] <x5c30> you will have to get a postgres server up and running yourself, yes. if you're wanting to learn and practice more "real" things, it's probably well worth it.
[04:43:47] <x5c30> it's not too terrible to just get it running and learn as you go
[04:45:15] <krismatrix> acknowledged.
[04:45:25] <krismatrix> alright..stepping out. Thank you.
[04:46:12] <Grinnz> right, for real database servers, you need to install and run the service. that's separate from perl
[04:46:20] <Grinnz> same with mongodb or redis or etc
[04:47:41] <Grinnz> you'll want to create a postgres user in the db specifically for your app, and create a db owned by that user so it can create whatever tables it needs there (usually via migrations with Mojo::Pg)
[04:48:05] <Grinnz> setting up user connections is the trickiest part for postgres
[04:49:57] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 252 seconds)
[04:50:07] <Grinnz> after the initdb (which only has to be done once after installing postgres) i usually do: `createuser myapp_user -lP` which will then have you enter a password for that user to log in with - generate one randomly, and put it in your app's config - and then `createdb myapp_db -O myapp_user` to create the db owned by that user
[04:50:21] <Grinnz> myapp_user and myapp_db would be adjusted to whatever names you want
[04:51:27] <Grinnz> and you may have to mess with the pg_hba.conf in the pg install to allow logging in via md5 on localhost
[04:51:29] *** Joins: hethw (~heth@46.238.32.56)
[04:54:23] *** Quits: Pali (~pali@user/pali) (Ping timeout: 250 seconds)
[04:54:46] <pragma-> sqlite is great if you just want to have a small self-contained app and use a small yet extremely efficient database without all the bells and whistles
[04:55:23] <xenu> my favourite thing about sql is that it costs like 200 bucks and unlike C/C++ there are no public drafts and it's very hard to pirate
[04:55:32] <xenu> i meant the standard
[04:55:54] <Grinnz> lol what
[04:56:02] <xenu> it's not surprising no one is implementing it properly
[04:56:20] <Grinnz> is it some shareware windows app from 1995
[04:57:59] <pragma-> android apps, games, irc bots, etc. there are lots of use cases for sqlite where you don't need a full production sql server but you do want sql.
[05:03:44] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:06:12] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[05:09:26] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 265 seconds)
[05:11:55] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[05:12:58] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[05:16:21] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[05:24:16] <treefrob> how get I get the current byte offset when reading a large file from an IO::FILE handle?
[05:25:56] <Grinnz> well first of all, that's just "a filehandle" - you generally don't interact with them via IO::File, you just get that when you use open()
[05:26:21] * GumbyPAN CPAN Upload: MarpaX-ESLIF-6.0.3-TRIAL by JDDPAUSE https://metacpan.org/release/JDDPAUSE/MarpaX-ESLIF-6.0.3-TRIAL
[05:26:27] <Grinnz> but you either use https://perldoc.perl.org/functions/tell or https://perldoc.perl.org/functions/sysseek depending if you're using read/readline or sysread
[05:26:27] <Paperbot> Link title(s): [ tell - Perldoc Browser ] [ sysseek - Perldoc Browser ]
[05:26:53] <Grinnz> since they are two separately-maintained byte positions
[05:29:34] <aquanight> do not use sysseek unless you are also using sysread/syswrite or directly after a flush (print with a newline or any print with $| set to true)
[05:29:51] <aquanight> if you are using standard read/readline/print you should use tell or seek
[05:30:03] *** Norkle is now known as sickjoke
[05:30:49] *** sickjoke is now known as NOrkle
[05:30:54] <aquanight> note that tell is literally
[05:30:56] *** Joins: BSaboia (~bsaboia@177.51.33.61)
[05:30:57] *** NOrkle is now known as Norkle
[05:31:03] <aquanight> sub tell :prototype(*) ($fh) { seek $fh, 0, 1; }
[05:33:21] <aquanight> so if you do in fact need to use sysseek, you can make your own 'systell' with the same pattern
[05:34:22] <Grinnz> like the docs i linked say
[05:36:22] * GumbyPAN CPAN Upload: Web-MarketReceipt-0.07 by MACOPY https://metacpan.org/release/MACOPY/Web-MarketReceipt-0.07
[05:36:34] <xenu> *IO::Seekable::systell = sub { seek $_[0], 0, 1 }; $filehandle->systell();
[05:36:38] <xenu> this probably will work too :P
[05:37:23] <xenu> er s/seek/sysseek/
[05:38:02] <Grinnz> still super weird that nobody ever just wrote a systell function in core
[05:38:30] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:39:54] <buu> AUGH KUBERNETES
[05:41:26] *** Quits: BSaboia (~bsaboia@177.51.33.61) (Quit: This computer has gone to sleep)
[05:42:05] <buu> Well, kubernetes is great
[05:42:08] <buu> It's the freaking netlayer
[05:42:22] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[05:43:58] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[05:44:17] <buu> Because arp and layer2 is the devil
[05:44:44] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:44:45] <aquanight> 19:06:35/CBD66 < xenu> *IO::Seekable::systell = sub { seek $_[0], 0, 1 }; $filehandle->systell(); ## why
[05:44:57] <aquanight> can you not: sub IO::Seekable::systell { ... } ?
[05:46:18] <Grinnz> you can, and then it would also be named properly
[05:46:35] <Grinnz> also $_[0] is a bug if that's a method
[05:46:47] *** Quits: Su-Shee (~Susanne@p4ffc79c5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:46:49] <Grinnz> oh no it isn't, tell takes no args, right
[05:47:08] <xenu> i forgot you can fully qualify sub declaration :P
[05:48:28] *** Joins: Su-Shee (~Susanne@p50894771.dip0.t-ipconnect.de)
[06:05:16] <aquanight> sweval: use Object::Pad; class Foo { } class Bar { method Foo::bark { } }
[06:05:17] <perlbot> aquanight: ERROR: syntax error at (IRC) line 1, near "method Foo::" syntax error at (IRC) line 1, near "bark { " 
[06:19:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:21:00] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:25:48] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:31:20] *** Quits: whynot (~whynot@37.73.106.62) (Quit: leaving)
[06:34:39] *** Joins: krismatrix (~krismatri@38.80.149.51)
[06:36:27] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[06:36:58] *** Joins: tejr (~tejr@user/tejr)
[06:38:53] *** Quits: krismatrix (~krismatri@38.80.149.51) (Client Quit)
[06:40:27] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:40:27] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:40:27] *** finn_elija is now known as FinnElija
[06:52:56] <buu> Goddamn it how does layer2 even work
[06:53:15] <buu>   192.168.3.1           00-02-c9-55-11-ac     dynamic
[06:53:20] <buu>   192.168.1.151         00-02-c9-55-11-ac     dynamic
[06:53:32] <buu> How come I can ping 1.151 and not 3.1 ?
[06:57:39] <buu> oih askdaskdasldaks
[06:57:44] <buu> ping doesn't work but curl does
[06:57:49] <buu> I hate you internets
[07:11:32] * GumbyPAN CPAN Upload: MarpaX-ESLIF-6.0.4-TRIAL by JDDPAUSE https://metacpan.org/release/JDDPAUSE/MarpaX-ESLIF-6.0.4-TRIAL
[07:17:51] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:18:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[07:21:53] *** Quits: scotticles (~TheScotti@h96-60-193-167.cdcyut.broadband.dynamic.tds.net) (Remote host closed the connection)
[07:22:06] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Client Quit)
[07:22:08] *** Joins: scotticles (~TheScotti@h96-60-193-167.cdcyut.broadband.dynamic.tds.net)
[07:22:26] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[07:28:43] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[07:28:56] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[07:30:30] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[07:33:34] *** Quits: Peppaq (~quassel@2a01:c23:b8af:5e00:b020:fa11:6533:b6b0) (Ping timeout: 260 seconds)
[07:33:49] *** Joins: Peppard (~quassel@2a01:c22:73b8:8c00:6d7d:b614:191d:d272)
[07:35:24] *** Joins: zgu|skaro (~zgu@2602:252:d1e:f710:b5d5:7acb:5792:5419)
[07:41:32] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[07:44:34] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[07:51:27] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[07:56:48] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[07:57:43] *** Joins: tejr (~tejr@user/tejr)
[07:59:53] *** Quits: zgu|skaro (~zgu@2602:252:d1e:f710:b5d5:7acb:5792:5419) (Ping timeout: 252 seconds)
[08:12:15] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:12:41] *** Joins: splatt990 (4b25e29db1@198.108.77.17)
[08:17:06] *** Joins: krismatrix (~krismatri@38.80.149.51)
[08:19:12] <krismatrix> When trying to install DBD::Pg, I get an error about missing directory. No /usr/include/postgresql.
[08:19:20] <krismatrix> is this a common error? How do I work around this?
[08:20:24] <krismatrix> Is did a whereis on postgresql and I get: postgresql: /usr/lib/postgresql /etc/postgresql /usr/share/postgresql
[08:20:52] *** Joins: Martchus (~martchus@2a01:c23:c00b:ba00:d250:99ff:fe49:3cce)
[08:21:27] <krismatrix> POSTGRES_INCLUDE points to a non-existent directory
[08:21:46] <krismatrix> oops..sorry the last statement wasn't meant for the channel. 
[08:22:35] *** Quits: Martchus_ (~martchus@2a01:c23:bcbc:9d00:d250:99ff:fe49:3cce) (Ping timeout: 268 seconds)
[08:25:26] <Adura> Sounds like you need the -dev package of it, or some shit.
[08:26:24] <krismatrix> hmm.
[08:26:44] <x5c30> krismatrix: did you install devel packages for postgres? i don't know for your distro but maybe libpq-devel or so?
[08:26:59] <krismatrix> I don't think I did that manually no.
[08:27:04] <Adura> Yeah, -devel is also a suffix to look for.
[08:28:47] <krismatrix> thank you. It seems it is specifically libpq-dev
[08:30:01] <x5c30> cool, that gets the headers so it can build to interface with postgres client library (in the missing directory you referenced)
[08:31:05] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:31:06] <krismatrix> When you say headers.....do you mean like C code headers?
[08:31:19] <x5c30> yup
[08:31:24] *** Joins: deadmarshal (~deadmarsh@95.38.117.193)
[08:31:36] <krismatrix> thx u.
[08:32:02] <krismatrix> alright...I spent some time messing around with pgamin and create dummy database. Now off to figuring out mojo::pg.
[08:32:12] <x5c30> have fun! :)
[08:34:01] <krismatrix> in the mojo::pg docs, I see this line: my $pg = Mojo::Pg->new('postgresql://postgres@/test'); Can anyone tell me what the string represents? I assume the test is the database name. postgres@ is username?
[08:35:44] <x5c30> correct
[08:36:14] <x5c30> there's some documentation down by the from_string method on the connection string
[08:38:30] <krismatrix> thx u
[08:38:49] <krismatrix> It was my next question, because I get authentication issues.
[08:42:03] <x5c30> there was some advice i think you disconnected and missed out on earlier, i'll paste cause it was good suggestions...
[08:42:07] <x5c30> 13.01:17:42 < Grinnz> you'll want to create a postgres user in the db specifically for your app, and create a db owned by that user so it can create whatever tables it needs there (usually via migrations with Mojo::Pg)
[08:42:11] <x5c30> 13.01:18:06 < Grinnz> setting up user connections is the trickiest part for postgres
[08:42:17] <x5c30> 13.01:20:08 < Grinnz> after the initdb (which only has to be done once after installing postgres) i usually do: `createuser myapp_user -lP` which will then have you enter a password for that user to log in with - generate one randomly, and put it in your app's config - and then `createdb myapp_db -O myapp_user` to create the db owned by that user
[08:42:22] <x5c30> 13.01:20:22 < Grinnz> myapp_user and myapp_db would be adjusted to whatever names you want
[08:42:25] <x5c30> 13.01:21:29 < Grinnz> and you may have to mess with the pg_hba.conf in the pg install to allow logging in via md5 on localhost
[08:42:28] <x5c30> (sorry for the multi-line splat)
[08:45:45] <krismatrix> ah rats.
[08:51:14] <krismatrix> I take it dbname is not the same as servername right. 
[08:52:30] <x5c30> right, that'll be the name of the database
[08:52:48] <x5c30> createdb if you used that, or whatever you created in pgadmin
[08:53:31] <krismatrix> doing things in pgadmin.
[08:58:22] <x5c30> i'm off to sleep, remember to look in pg_hba.conf in postgres data directory (as mentioned above), that's where access permissions are defined
[08:58:51] <krismatrix> nope. I got it working. I was just mixing up the schema and database names. I got a test output. I am turning in as well. I will mess with it more later.
[08:58:54] <krismatrix> thx for your help.
[09:12:27] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[09:12:30] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 256 seconds)
[09:14:50] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 260 seconds)
[09:16:45] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 250 seconds)
[09:31:10] *** Quits: deadmarshal (~deadmarsh@95.38.117.193) (Ping timeout: 260 seconds)
[09:45:21] *** Parts: tusko (~yeurt@copyfree/advocate/tusko) (Byeee)
[10:07:45] *** Joins: disconnect_me (~marcin@gl87-41.master.pl)
[10:08:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:08:16] *** Joins: diskin (~diskin@5.139.138.52)
[10:12:02] *** Quits: randir (~randir@95-25-138-85.broadband.corbina.ru) (Remote host closed the connection)
[10:12:41] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:16:51] * GumbyPAN CPAN Upload: Avatica-Client-0.001 by LOGIONIZ https://metacpan.org/release/LOGIONIZ/Avatica-Client-0.001
[10:19:53] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:20:09] *** Joins: tejr (~tejr@user/tejr)
[10:26:30] *** Joins: randir (~randir@93.159.239.42)
[10:27:13] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:27:52] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[10:31:53] * GumbyPAN CPAN Upload: Unknown-Values-0.006 by OVID https://metacpan.org/release/OVID/Unknown-Values-0.006
[10:36:19] *** Joins: joakimk (~joakimk@ti0004q160-3453.bb.online.no)
[10:36:27] *** Joins: hudo (~hhudo_@mail.allm-elektro.de)
[10:36:52] *** Joins: hudo_ (~hhudo_@mail.allm-elektro.de)
[10:36:59] *** Quits: hudo_ (~hhudo_@mail.allm-elektro.de) (Client Quit)
[10:41:27] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:42:25] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[10:52:35] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 252 seconds)
[10:54:21] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[11:04:41] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[11:11:39] *** Quits: disconnect_me (~marcin@gl87-41.master.pl) (Ping timeout: 252 seconds)
[11:16:27] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[11:17:28] *** Joins: pj (~pj@ghettoforge/pj)
[11:19:58] *** Joins: rgrinberg (~textual@187.223.209.106)
[11:24:24] *** Joins: disconnect_me (~marcin@gl87-41.master.pl)
[11:25:22] *** Joins: fwg (~fwg@user/fwg)
[11:29:38] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[11:36:34] *** Joins: tobybl (~tobybl@213.31.132.151)
[11:46:32] *** Joins: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net)
[11:47:46] *** Joins: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es)
[11:48:00] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:57:10] *** Quits: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es) (Quit: ERC (IRC client for Emacs 27.1))
[11:58:01] *** Joins: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es)
[12:05:47] *** Joins: Pali (~pali@user/pali)
[12:08:23] *** Quits: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es) (Quit: ERC (IRC client for Emacs 27.1))
[12:09:41] *** Joins: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es)
[12:26:47] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[12:30:59] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[12:32:01] *** Quits: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es) (Quit: ERC (IRC client for Emacs 27.1))
[12:38:37] *** Joins: art1 (~romeyke@p200300ccdf078d00f9f9210a5bd499a6.dip0.t-ipconnect.de)
[12:39:23] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:50:49] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:52:56] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:57:08] * GumbyPAN CPAN Upload: Google-Ads-GoogleAds-Client-9.3.0 by WFANSH https://metacpan.org/release/WFANSH/Google-Ads-GoogleAds-Client-9.3.0
[13:14:16] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[13:17:11] * GumbyPAN CPAN Upload: NOLookup-1.23 by TROHAU https://metacpan.org/release/TROHAU/NOLookup-1.23
[13:17:18] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 256 seconds)
[13:21:16] *** Quits: diskin (~diskin@5.139.138.52) (Ping timeout: 256 seconds)
[13:24:45] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[13:33:50] *** Joins: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es)
[13:39:25] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:3de8:a69b:aa58:cd19) (Ping timeout: 252 seconds)
[13:42:16] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:f932:61b4:5ed3:3368)
[13:50:59] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Remote host closed the connection)
[13:52:30] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:f932:61b4:5ed3:3368) (Ping timeout: 268 seconds)
[13:55:10] *** Quits: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es) (Quit: ERC (IRC client for Emacs 27.1))
[14:02:16] * GumbyPAN CPAN Upload: DBD-Phoenix-0.01.0 by LOGIONIZ https://metacpan.org/release/LOGIONIZ/DBD-Phoenix-0.01.0
[14:04:17] <art1> Moin, I am wondering, why modules under [Prereqs / Recommends] section in related Dist::Zilla config dist.ini results in hard module dependencies in CPAN. I wonder if I made a mistake in dist.ini or it is desired behavior?
[14:06:34] <Altreus> without reading the docs I'd say you have to configure that section to be recommendations
[14:06:41] <Altreus> It's probably not magic based on the name
[14:07:20] <Altreus> Guess I'm wrong: If the name is the CamelCase concatenation of a phase and relationship (or just a relationship), it will set those parameters implicitly
[14:07:29] <choroba> I guess you want [Prereqs / RuntimeSuggests]
[14:07:38] <Altreus> art1: in any case if you set -relationship = recommends that might sort it out
[14:08:12] <art1> check this: https://git.fsfe.org/art1pirat/Archive-BagIt/src/branch/master/dist.ini#L55 
[14:08:13] <Paperbot> Link title(s): [ art1pirat/Archive-BagIt: the 'official' Archive::BagIt repository. Contains patches to update Arc... ]
[14:09:05] <art1> the modules under [Prereqs / Recommends] resulting in hard dependencies in CPAN, see https://cpants.cpanauthors.org/release/ART/Archive-BagIt-0.086/prereq
[14:09:06] <Paperbot> Link title(s): [ CPANTS ]
[14:09:26] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[14:11:09] <choroba> <Grinnz> though it doesn't happen in practice yet, the idea is recommends are modules the installer should try to install but it's ok if they fail, suggests are "optional"
[14:11:26] <choroba> (probably in some other channel)
[14:12:12] <art1> This sounds like what I expected
[14:17:19] *** Joins: deadmarshal (~deadmarsh@95.38.114.19)
[14:20:16] <Altreus> ah, wrong one then :)
[14:21:08] *** Joins: tobybl (~tobybl@213.31.132.151)
[14:22:15] <haarg> art1: @Author::DOHERTY includes AutoPrereqs
[14:22:55] <daemon> morning Altreus 
[14:23:41] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[14:24:09] <art1> thx for the hint
[14:24:43] <Altreus> hullo daemon 
[14:24:48] <daemon> how goes
[14:24:49] <Altreus> is this how you take time off?
[14:24:51] <Altreus> :P
[14:24:57] <daemon> yep lol
[14:25:06] <Altreus> counting the days til I leave for 2 weeks :D
[14:25:06] <daemon> I had a ton of holidays and had to take them :|
[14:25:09] <daemon> lol
[14:25:18] <daemon> anywhere nice?
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:31:10] *** Joins: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[14:32:21] <Altreus> hope so
[14:32:25] <Altreus> up near skipton
[14:32:50] <daemon> nice for a change of scenary :) 
[14:35:33] <ilmari> whoa, I didn't realise (north) yorkshire stretched that far west
[14:35:48] <rindolf> hi all
[14:35:54] <ilmari> only 15km short of the west coast
[14:36:19] * GumbyPAN CPAN Upload: Bio-MUST-Apps-Physeter-0.213470 by DBAURAIN https://metacpan.org/release/DBAURAIN/Bio-MUST-Apps-Physeter-0.213470
[14:36:19] * GumbyPAN CPAN Upload: DBD-Avatica-0.01.0 by LOGIONIZ https://metacpan.org/release/LOGIONIZ/DBD-Avatica-0.01.0
[14:38:31] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:42:34] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:43:18] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:43:48] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[14:44:30] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[14:48:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[14:49:09] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:52:34] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:fd72:8298:af69:cded)
[14:56:13] *** Quits: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[14:58:10] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[15:01:35] *** Quits: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[15:02:41] *** Quits: WinterStar (~IceLight@user/icelight) (Remote host closed the connection)
[15:05:16] *** Joins: WinterStar (~IceLight@user/icelight)
[15:21:44] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:22:45] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:26:58] <Altreus> yup, gonna do a week of work and a week of not work
[15:30:07] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:30:21] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:30:25] *** Joins: tobybl (~tobybl@213.31.132.151)
[15:30:37] <simcop2387> Altreus: i'm working on that myself right now.  though mostly it's been reading manuals and trying to understand how the hell to setup LACP/LAG on mikrotik switches.
[15:30:45] <simcop2387> and how vlans work on that
[15:37:55] <daemon> always fu
[15:37:56] <daemon> b
[15:37:58] <daemon> fun*
[15:38:14] <daemon> I neea new a new keyboard or new fingers :)
[15:39:47] <Altreus> I think I'd rather deal with the fallout from bad third-party APIs than try to read documentation that doesn't teach me anything
[15:41:21] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[15:45:05] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[15:49:32] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 240 seconds)
[15:50:13] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[15:53:28] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:54:01] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:54:08] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[15:54:56] <El_Che> I was looking how to implement guest wifi at home and create vlans (a cheapo lowend tplink with openwrt and am unify AP), but with L2 isolation VLAN may nog be needed
[15:55:35] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:55:47] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:56:07] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[16:00:38] <daemon> might be easier just getting a cheap access point that can do Client Isolation :P
[16:00:56] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[16:02:52] *** Joins: tobybl (~tobybl@213.31.132.151)
[16:08:01] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Quit: This computer has gone to sleep)
[16:09:32] <Altreus> I think my edgemax can just have more than one wifi network set up on separate subnets
[16:09:46] <Altreus> I suppose that's different from client isolation
[16:09:49] <Altreus> maybe it does that too!
[16:10:46] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:11:47] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:13:10] <daemon> hmm
[16:13:33] <daemon> with io::async could I open up a loop and pass off the loopto mojo::ua
[16:13:48] <daemon> kind of want a loop that is a http connection with keep-alive
[16:14:04] <daemon> not sure which modules are correct for doing such a thing
[16:14:14] <LeoNerd> ??
[16:14:31] <daemon> I want to connect to a http service and never disconnect
[16:14:37] <daemon> just keep the connection open with keep-alive
[16:14:43] <LeoNerd> so, NaHTTP
[16:14:49] *** Joins: proller (~p@2a02:6b8:0:40c:440:1ebd:fa63:be89)
[16:14:55] <daemon> NaHTTP never heard of it let me take a look cheers
[16:15:08] <LeoNerd> https://metacpan.org/pod/Net::Async::HTTP
[16:15:09] <Paperbot> Link title(s): [ Net::Async::HTTP - use HTTP with IO::Async - metacpan.org ]
[16:15:17] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Client Quit)
[16:15:27] <daemon> that looks like it could work has pooling and such perfect
[16:15:29] <daemon> cheers LeoNerd 
[16:15:59] *** Quits: gabiruh (~gabiruh@vps19177.publiccloud.com.br) (Ping timeout: 252 seconds)
[16:16:33] *** Joins: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es)
[16:16:34] *** Quits: joakimk (~joakimk@ti0004q160-3453.bb.online.no) (Quit: Client closed)
[16:20:03] <simcop2387> daemon: i do Client Isolation and VLAN for my IoS devices, at least the ones that I don't control the firmware on
[16:22:27] <daemon> makes sense
[16:24:29] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:27:13] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Read error: Connection reset by peer)
[16:27:45] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[16:29:56] *** Joins: BSaboia (~bsaboia@177.51.33.2)
[16:31:48] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:31:51] *** Joins: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com)
[16:32:19] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:33:23] *** Quits: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com) (Client Quit)
[16:33:44] *** Quits: BSaboia (~bsaboia@177.51.33.2) (Client Quit)
[16:39:48] <daemon> anyone have any clue what is going on here: https://dpaste.org/szwr
[16:39:49] <Paperbot> Link title(s): [ dpaste/szwr (Plain Text) ]
[16:40:01] <daemon> I export'ed PATH to put /home/paulg/.sys/bin first
[16:40:09] <daemon> and that worked ... but whereis still thinks the system path is first?
[16:40:58] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 260 seconds)
[16:41:18] <simcop2387> daemon: what does: command -v cpan
[16:41:19] <simcop2387> say
[16:41:21] <Altreus> doesn't whereis use a database, while which just sees what is going to be run?
[16:41:41] <daemon>  /home/paulg/.sys/bin/cpan
[16:41:44] <daemon> for command -o
[16:42:10] <simcop2387> Altreus: could be, i'd trust the command output since it's supposed to be doing the proper POSIX lookup
[16:42:12] *** Joins: KnoP (~KnoP@p4ff56d9d.dip0.t-ipconnect.de)
[16:42:30] <daemon> its weird on BSD whereis shows it correctly using the same config
[16:42:33] <daemon> on linux it does not
[16:42:38] <daemon> can't see what would cause such a thing
[16:43:17] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:45:07] <Altreus> WHEREIS_DEBUG=all
[16:45:09] <Altreus> apparently
[16:45:31] <simcop2387> along with that it apparently hard-codes some paths, likely /bin, /usr/bin and /usr/local/bin
[16:45:51] <aquanight> sweval: my $x = [ 9 .. 12 ]; scalar $x->@*;
[16:45:53] <perlbot> aquanight: 4
[16:45:55] <aquanight> sweval: my $x = [ 9 .. 12 ]; scalar $x->$#;
[16:45:57] <perlbot> aquanight: ERROR: $# is no longer supported as of Perl 5.30 at (IRC) line 1. 
[16:45:57] <daemon> ok
[16:46:00] <daemon> so this is what is going on
[16:46:01] <aquanight> sweval: my $x = [ 9 .. 12 ]; scalar $x->$#*;
[16:46:02] <perlbot> aquanight: 3
[16:46:08] <daemon> if I do 'perl -V' I get 5.34.0
[16:46:09] <aquanight> ... weird.
[16:46:12] <daemon> which is correct, that is the one in ~/.sys
[16:46:18] <daemon> but if I do something like bootstrap local::lib
[16:46:21] <daemon> it uses the system perl
[16:46:23] <daemon> ignoring my PATH
[16:46:33] * GumbyPAN CPAN Upload: App-Greple-8.53 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-8.53
[16:47:02] <simcop2387> daemon: how are you bootstrapping?
[16:47:10] <daemon> download the .tar.gz
[16:47:20] <daemon> because I have my own perl compiled in ~/.sys/bin
[16:47:34] <daemon> and according to cpan --version and perl -V PATH is setcorrectly
[16:47:43] <daemon> paulg@Paul-Desktop:~/.sys/tmp$ set| grep -i perl
[16:47:44] <daemon> PATH='/home/paulg/.sys/bin:
[16:47:44] <daemon> etc..
[16:47:55] <daemon> but somehow the bootstrap is strapping against the system perl before my perl
[16:48:04] <daemon> it does recognize both of them
[16:48:40] <simcop2387> daemon: again how are you doing the bootstrap, "i downloaded a file" doesn't say how you're doing the bootstrap.  how are you running it?
[16:48:55] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[16:49:02] <daemon>  perl Makefile.PL --bootstrap
[16:49:05] <daemon> make install
[16:49:43] <Altreus> What's wrong with perlbrew
[16:49:50] <daemon> its pointless
[16:49:53] <Altreus> clearly not
[16:50:00] <daemon> clearly so
[16:50:03] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:50:15] <simcop2387> daemon: check the contents of the Makefile, see if it's referring to any specific perl?
[16:50:27] <daemon> simcop2387, for fun, this one machine (of three) is the only one doing this
[16:50:27] <simcop2387> it should, and it should be your .sys/bin one
[16:50:29] <Altreus> Mate every time I ask you why you're not doing something the easy way that's designed for your situation you say something like, I don't see the point
[16:50:34] <Altreus> And every time you end up seeing the point
[16:50:45] <Altreus> Obviously perlbrew is not useless because you're doing it manually and it's not working
[16:50:45] <daemon> I jsut don't like perbrew
[16:50:48] <daemon> it feels awkward and hacky
[16:50:54] <Altreus> You didn't like Mojolicious or IO::Async either
[16:50:58] <Altreus> for the exact same reasons
[16:51:07] <daemon> no the reason was I preffered POE for those
[16:51:10] <Altreus> *This* is awkward and hacky, because you have no tools to assist you
[16:51:22] <daemon> dood compiling stuff into userdir is literally what configure --prefix is for
[16:51:26] <Altreus> right
[16:51:26] <daemon> something that has been done since the early days
[16:51:32] <Altreus> But it doesn't protect you from the /other/ problems
[16:51:38] <daemon> like linux
[16:51:56] <simcop2387> daemon: perl predates configure scripts
[16:52:00] <Altreus> You're going to accidentally install something with the wrong perl, or into the wrong dir, or something, because you haven't got tools and scripts in place to just set it all up in an isolated fashion all at once
[16:52:20] <Altreus> We get people in here *all the time* with problems caused by manually installing a perl and forgetting one variable or another
[16:52:40] <daemon> simcop2387, yep SITELIBEXP = /home/paulg/.sys/lib/perl5/site_perl/5.34.0
[16:52:43] <Altreus> there is no problem with perlbrew that's not in your head
[16:52:57] <Altreus> there are many problems with this method, and they're all over IRC :P
[16:52:59] <daemon> simcop2387, no mention of the system per at all
[16:53:29] <simcop2387> daemon: now what makes you think it's using the system perl then?
[16:53:35] <Altreus> why are you helping him :P there's tools for this
[16:53:43] <Altreus> it's like he came in not using strict and warnings
[16:53:51] <daemon> simcop2387, cpanm -V notes in its libs 5.32
[16:53:52] <Altreus> use the tools, then complain about those
[16:53:55] <daemon> before 5.34
[16:53:55] <simcop2387> Altreus: i want to find out what he did wrong so i can point it out to him next time he does it again
[16:54:06] <simcop2387> daemon: which cpanm are you using?
[16:54:15] <daemon> path states I am using the one from ~/.sys/bin
[16:54:44] <simcop2387> daemon: check it's shebang line.  you probably installed it with system perl then.  this is something that perlbrew fixes for you;  perlbrew install-cpanm
[16:55:02] * Altreus popcorn
[16:55:07] <daemon> why would it fail on one of three systems again?
[16:55:14] <simcop2387> daemon: check it's shebang line.  you probably installed it with system perl then.  this is something that perlbrew fixes for you;  perlbrew install-cpanm
[16:55:16] <daemon> exactly same tools exact same setup
[16:55:24] <Altreus> cos you didn't use the scripts designed for it
[16:55:31] <daemon> and the other fucking 2 systems?
[16:55:31] <Altreus> who knows what you accidentally skipped?
[16:55:52] <simcop2387> all it would take is doing something in the wrong order, or accidentally using the wrong perl when installing cpanm
[16:56:05] <daemon> simcop2387, hence why I was a little weirded out with the report from whereis
[16:56:10] <daemon> on the other two the personal perl is first
[16:56:17] <Altreus> You're using a homegrown alternative to perlbrew, so you've got your own homegrown bugs to solve :P
[16:56:27] *** Joins: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com)
[16:56:57] <simcop2387> daemon: whereis isn't designed for checking PATH order though, it's for findind binaries and their documentation.  the command command is for doing that
[16:57:27] <simcop2387> you should learn how to use a POSIX compatible operating system :p
[16:58:31] <daemon> still getting no luck from this explicitly using the correct perl
[16:59:13] <simcop2387> daemon: what was the shebang line on the cpanm script?
[17:00:22] <daemon> one mo, just double checking none of perlbrew is lurking about 
[17:01:05] <Altreus> why would it be :P
[17:01:16] <daemon> from when I uninstalled it 4 or 5 months ago
[17:01:31] <Altreus> wait you used it and still thought you could do better manually? :D
[17:01:45] <daemon> I know I can do better manually I have almost an entire system in ~/.sys on my bsd boxes
[17:01:47] <daemon> and there perfectly happy
[17:02:04] <Altreus> I still have to ask why
[17:02:15] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[17:02:16] <daemon> because I do not want perlbrew for a single copy of perl, its just silly
[17:02:23] <daemon> and totally unrequired
[17:02:28] <daemon> the work box which is linux (though not debian)
[17:02:29] <Altreus> the whole point is it's never just a single copy of perl
[17:02:31] <daemon> is setup the same way
[17:02:35] <Altreus> and why are you worried about taking up space?
[17:02:35] <daemon> and that is perfectly happy to
[17:02:42] <Altreus> how big is perlbrew anyway?
[17:02:50] <Altreus> I'm sure we've had this conversation xD
[17:03:05] <simcop2387> perlbot: plenv
[17:03:05] <perlbot> simcop2387: A perl installation manager like perlbrew, lets you switch between multiple local perls, but runs via shell scripts instead of perl. https://github.com/tokuhirom/plenv and see https://github.com/miyagawa/plenv-contrib for "perlbrew exec" and "perlbrew lib" analogues.
[17:03:32] <simcop2387> daemon: you might like that better then.  automates a lot of this while not getting in the way or being very heavy.  can install to basically anywhere
[17:03:42] <Altreus> just use docker :)
[17:04:02] <simcop2387> that reminds me, anyone here ever put a minecraft server into podman?
[17:04:31] <daemon> simcop2387, I have run an oldschool minecraft server, never in podman - actually I already have plenv :P
[17:05:07] <simcop2387> daemon: yea i'm just looking to add another layer of security restrictions to mine, esp since i'm going to "open" it up to more general users than just me and my nephew and a few people
[17:05:33] <daemon> software level auth like white lists and stuff or does podman do firewall things?
[17:05:38] <LeoNerd> Make sure it can't connect outbound, just in case someone decided to eval() strings passed to a logging function
[17:06:15] <simcop2387> my goal is to go set up a new VPS for my VPN and a few things like the minecraft server, but I'm going to run the actual server still on my home system so i don't need $$$ storage on the cloud for it.
[17:06:19] <daemon> route less container and nat people in from outside, should totally disconnect it - but I think the server needs to contact mojang/microsoft to validate people have legit accounts
[17:06:21] <Altreus> LeoNerd: who would do a thing like that ahaha
[17:06:36] <simcop2387> LeoNerd: yea that's one of the things that made me go, "ok i probably should take it a bit more seriously"
[17:07:44] <simcop2387> daemon: my plan is to use Velocity (minecraft server proxy) to do the auth part and forward it from the VPS to my local server here.  doesn't give me the ability to let more people on at once but it does give me a lot of flexibility in what i can do.
[17:08:12] <daemon> I would never imagine a minecraft proxy was even a thing :P
[17:09:01] <daemon> OMG I fixed the problem
[17:09:03] * daemon hits head on desk
[17:09:10] <simcop2387> daemon: what problem did you cause?
[17:09:18] <simcop2387> or what did you do to cause it
[17:09:19] <daemon> simcop2387, so when you run debian in WSL2
[17:09:23] <daemon> WSL2 caches in the enviroment
[17:09:24] <daemon> ...
[17:09:28] <daemon> so no matter what you change
[17:09:34] <daemon> you have to restart the container
[17:09:58] <simcop2387> i'm not entirely sure if perlbrew would have properly worked around *that*
[17:10:03] <daemon> oh really
[17:10:17] <daemon> :0-(
[17:10:19] <simcop2387> daemon: yea it's mainly so you can do some fun stuff like throwing people into "limbo" where they aren't on any actual server, or have multiple servers behind one address.  my use is for some additional security and also to have a modded and unmodded server going at once that you can portal between
[17:10:19] <daemon> :-)
[17:10:33] <simcop2387> a broken operating system is hard to work around
[17:10:48] <Altreus> but daemon never has any problems with windows :)
[17:12:38] <daemon> so now jsut nuke the install and do it cleanly
[17:15:03] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[17:15:22] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:15:54] <daemon> and fully working :)
[17:19:34] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:19:44] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:20:16] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:21:32] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[17:24:21] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:24:33] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:29:40] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:32] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:33:15] *** Joins: Colt (~Colt@user/colt)
[17:35:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[17:35:39] <jadesoturi> what is the most cost effective way to search for a string in a file with perl ? 
[17:36:22] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:36:27] <LeoNerd> cost-effective? I imagine it depends on what you're being charged for
[17:37:20] <jadesoturi> LeoNerd: time and resources.. :P e.g. if i want to check 10 files then open file and do a regex match is fine, but if i need to check 1000000 files then suddenly its a bit more resources used, no? 
[17:37:21] <ilmari> what do you want to know? whether the file contains the string? which line contains it? which byte offset?
[17:37:57] <jadesoturi> i need to check if files contain a certain string and if they do, print the filename with full path to a /tmp/results.txt 
[17:38:35] *** Joins: mattil (~mattil@d13bhctmcvzvkpxsvjf-4.rev.dnainternet.fi)
[17:38:52] *** Quits: mattil (~mattil@d13bhctmcvzvkpxsvjf-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:39:02] <Altreus> can you do it with grep -l, and pipe the file list into perl?
[17:39:04] <rindolf> jadesoturi: "grep -Fl ..."?
[17:39:09] <jadesoturi> essentially  need to do this: https://gist.github.com/jadesoturi/677da1c1b705211d276f69a4a82620a2 in perl 
[17:39:09] <Paperbot> Link title(s): [ gist:677da1c1b705211d276f69a4a82620a2 · GitHub ]
[17:39:20] *** Joins: mattil (~mattil@d13bhctmcvzvkpxsvjf-4.rev.dnainternet.fi)
[17:40:38] <Altreus> binary files then, since you're piping through strings
[17:40:49] <jadesoturi> i got the first part down finding all files with log4j in name if its a .jar file.. its teh second part im having a hard time translating to perl .
[17:41:18] *** Quits: mattil (~mattil@d13bhctmcvzvkpxsvjf-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:44:12] <Altreus> The way you've got it being unzipped and piped through strings as well as grep makes me wonder if translating it to perl is a good idea
[17:45:07] <jadesoturi> hehe it does not have to be this way. but i do need to check if the jar files contain the string in the bash script. 
[17:45:26] <Altreus> this seems appropriate tbh
[17:45:36] <LeoNerd> Personally I'd have typed that as   find -name \*.jar | xargs grep log4j
[17:45:38] <LeoNerd> but maybe that's me
[17:45:48] <Altreus> well there's the unzip step
[17:45:56] <Altreus> can zgrep do zip?
[17:45:58] <LeoNerd> OK well insert that
[17:46:25] <Altreus> not sure what the awk does at the end though
[17:46:29] <alh> zipgrep is a thing apparently
[17:46:38] <Altreus> so is ripgrep
[17:46:41] <LeoNerd> There'll be tools for this I'm sure
[17:47:01] <alh> (zgrep = gzip not zip)
[17:47:11] <jadesoturi> Altreus: awk just cuts redundant shit from the answer before its returned.. 
[17:47:16] <Altreus> can gzip not cope with zip?
[17:47:52] <Altreus> apparently only sometimes
[17:47:56] *** Joins: krismatrix (~krismatri@38.80.149.51)
[17:48:27] <alh> They are entirely different compression algorithms IIRC
[17:48:44] <LeoNerd> My overall point being: This doesn't feel like a perl problem. So don't make it
[17:48:59] <jadesoturi> hmm zipgrep might work here... 
[17:49:41] <alh> Yeah this feels entirely suited to how you're doing it - command line tools made for this stuff
[17:51:37] <jadesoturi> yeah its justthat i need this in a perl script so i can push it to many servers through our monitoring solution. 
[17:52:12] <alh> perl -e `find / -name ...`
[17:52:34] <alh> Well, point is, perl can execute other things, including your actual solution 
[17:52:37] <jadesoturi> nah. would not work with the agent/monitoring 
[17:53:01] <alh> Your agent/monitoring prevents perl from executing other code and understanding its output? 
[17:53:53] <jadesoturi> alh: the monitorings solution sanitzes the "command" before its sent to the agent and removes anyting that does not look like a reference to an actuall perl script with a .pl extension 
[17:54:26] <jadesoturi> so perl -e 'find / -name ..." will just be perl -e once it arrives at the agent:/ lame, iknow but it is what i have to work with 
[17:54:36] <alh> Yeah, your .pl program can be a perl script that internally executes your bash commands and does something with the output
[17:55:41] <Altreus> an excuse for perl -x? :D
[17:55:46] <simcop2387>  hrm
[17:56:16] <Altreus> call it .pl but put bash in the shebang :)
[17:56:56] <jadesoturi> :D
[17:56:59] <simcop2387> hrm
[17:57:52] <LeoNerd> exec "bash", "-e", <<'EOF' ...  shell script here
[17:57:53] <Altreus> simcop2387: hrm
[17:59:18] *** Joins: mattil (~mattil@176-93-132-92.bb.dnainternet.fi)
[17:59:58] *** Joins: mattil_ (~mattil@d13bhctmcvzvkpxsvjf-4.rev.dnainternet.fi)
[18:03:33] *** Quits: mattil_ (~mattil@d13bhctmcvzvkpxsvjf-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:04:01] *** Joins: mattil_ (~mattil@d13bhctmcvzvkpxsvjf-4.rev.dnainternet.fi)
[18:04:02] *** Quits: mattil (~mattil@176-93-132-92.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[18:05:36] <krismatrix> question, what would be a good short way to refer to a linux server on the cloud that would make sense to ppl? The word server is ubiquitous, what with app server, web server, db server. What do you call the server that is the machine?
[18:06:18] <Adura> The... box?
[18:06:30] <ilmari> the VM? the instance?
[18:06:57] <LeoNerd> machine
[18:08:05] <krismatrix> let me post my actual question/discussion: and maybe the context will make sense. hold on. 
[18:08:30] <krismatrix> x5c30...i have a conceptual question on databases. It seems that a postgres database is not merely a file. You have to have a db_server with an active listening port and communications to this server to access the tables/db occur across this port. Presently, I am doing all of this in my desktop/development machine for tinkering. I take it that means for production, much like the mojo application server, whick listens to a port, the postgresql server 
[18:08:30] <krismatrix> also listens through another port.
[18:08:30] <krismatrix> Previously, my databases/flat files, were in the same machine (or cloud server), however, it seems that ppl recommend spinning up another machine (or cloud server), and then set up the postgresql dbserver
[18:08:31] <krismatrix> there. Does this sound like the right move?
[18:08:33] <krismatrix> And if so, how would I use Mojo::Pg, to connect to this new machine (or cloud server) and the db server within it.
[18:08:33] *** Quits: mattil_ (~mattil@d13bhctmcvzvkpxsvjf-4.rev.dnainternet.fi) (Ping timeout: 252 seconds)
[18:08:53] <Altreus> host
[18:09:03] <vague> aws instance
[18:09:27] <Altreus> I think the general idea is it doesn't matter how you do it because systems can be configured
[18:09:37] <krismatrix> ok
[18:09:44] <Altreus> you put the hostname in the host part of the config and make sure that means something when the network gets involved
[18:09:58] <Altreus> localhost, IP address, AWS instance name, whatever
[18:10:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:10:12] <Altreus> But I'd just call it the host
[18:10:18] <krismatrix> ok.
[18:10:31] <Altreus> Then it doesn't even have to be *a* VM or *a* server of any type
[18:10:39] <Altreus> it could be a gateway!
[18:10:39] <krismatrix> ok.
[18:10:47] <Altreus> :)
[18:10:49] *** Quits: jplesnik (~jplesnik@nat-pool-brq-u.redhat.com) (Quit: Leaving)
[18:11:57] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[18:12:08] <krismatrix> ok...well. if I have a dbserver on a separate host vs. the mojo app server, I assume I can connect to the db_server from the app server still?
[18:12:35] *** Joins: diskin (~diskin@5.139.138.52)
[18:12:45] <Altreus> as long as you ... can
[18:12:52] <Altreus> as in they are connected
[18:13:01] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 240 seconds)
[18:13:13] <Altreus> as long as where you run the app can connect to the db via the name you give it
[18:13:16] <krismatrix> and I guess all that would change is, instead of my $pg = Mojo::Pg->new('postgresql://postgres@localhost/test'); , the localhost would be replaced with the actual domain ip?
[18:13:24] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Ping timeout: 265 seconds)
[18:13:28] <Altreus> yes probably
[18:13:41] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 252 seconds)
[18:13:41] <Altreus> You'd want to start using config to fetch those values though
[18:13:53] *** Quits: perldoc (~perldoc@24.88.49.194) (Ping timeout: 265 seconds)
[18:13:53] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 265 seconds)
[18:13:53] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 265 seconds)
[18:14:36] <krismatrix> config? I don't know what you are referring to here. But on the main comment of not hardcoding sensitive data into the scripts, yes, I follow that concern. At this point, it is more for understanding.
[18:15:25] *** Quits: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[18:15:39] <Altreus> mojo supports a fairly easy config system so instead of putting anything at all in the script you put it in a file next to the script - one that you can supply on each installation so you can easily switch things like this
[18:16:05] <Altreus> It's usually a good idea because it also means that when you eventually screw something up you can run a second postgres database on localhost and point at that temporarily
[18:16:13] *** Quits: deadmarshal (~deadmarsh@95.38.114.19) (Ping timeout: 240 seconds)
[18:16:41] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[18:16:46] <krismatrix> So...a flat file in my model/ with the config settings is enough...is what you mean
[18:16:47] <krismatrix> ?
[18:17:06] <krismatrix> referring to the mojo model/
[18:17:08] <Altreus> you get this by default: https://metacpan.org/pod/Mojolicious::Plugin::JSONConfig
[18:17:08] <Paperbot> Link title(s): [ Mojolicious::Plugin::JSONConfig - JSON configuration plugin - metacpan.org ]
[18:17:49] <krismatrix> umm..no i don't have this file by default (unless you mean the module). I only have myapp.yml by default.
[18:18:19] <Altreus> ah yeah that's probably doing it
[18:18:26] <Altreus> and yeah I mean that plugin is available by default
[18:18:52] <Altreus> So you can configure your DB connection via the config just by pulling values out of the config when constructing that Mojo::Pg
[18:20:08] <krismatrix> got it. you are saying, don't bother to create a separate flat file with the configuration details that I need to read. Just use the standard .yml (which is a config file) to do so.
[18:20:28] <Altreus> I've just discovered I'm not using config myself :D
[18:20:45] <Altreus> yeah - you're free to structure your yaml file as you like :)
[18:20:58] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[18:20:59] <krismatrix> ok
[18:21:43] <krismatrix> I guess...what I am now thinking is...how is the new host for the db_server secured? I suppose the security is simply the fact that the db_server on the new host needs a username and password?
[18:22:25] <krismatrix> wonder if I can change it to use ssh keys (or if that is considered better)
[18:23:04] <LeoNerd> keys are almost always preferrable, yes
[18:23:07] <Altreus> so you might do: helper db => sub ($c) { state $db = Mojo::Pg->new('postgresql://' . $c->config->{pg}->{username} . '@' . $c->config ... ) } etc
[18:23:24] <Altreus> krismatrix: that is what I call Somebody Else's Problem
[18:23:29] <Altreus> This may, indeed, be you in the future
[18:23:40] <Altreus> But you are currently writing the app; assume it can connect, and make that true later
[18:23:50] <Altreus> (but handle the exception)
[18:24:13] <Altreus> Nothing worse (except many things) than trying to set up a deployment system with an app that won't tell you what's wrong
[18:24:33] <Altreus> Normally one secures it by not letting anything else connect to it in the first place :)
[18:24:34] <krismatrix> I am more specifically, connecting the logical dots so that I can break it down into steps.
[18:24:45] <Altreus> i.e. routing
[18:25:06] <Altreus> I don't know whether a postgres instance can use ssl to connect
[18:25:57] <krismatrix> i'll look into that..i don't know how, but i think i saw something about it.
[18:26:41] <krismatrix> Need to step away. Thanks for the info. I'll get back later.
[18:27:05] *** Parts: disconnect_me (~marcin@gl87-41.master.pl) ()
[18:27:23] *** Joins: tobybl (~tobybl@213.31.132.151)
[18:30:15] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[18:31:37] *** Joins: mattil (~mattil@87-92-14-145.bb.dnainternet.fi)
[18:32:39] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:35:55] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:36:14] *** Quits: mattil (~mattil@87-92-14-145.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[18:36:21] *** Joins: randir (~randir@93.159.239.42)
[18:36:30] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:42:05] *** Parts: art1 (~romeyke@p200300ccdf078d00f9f9210a5bd499a6.dip0.t-ipconnect.de) ()
[18:42:53] *** Quits: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:45:55] *** Joins: mattil (~mattil@87-92-14-145.bb.dnainternet.fi)
[18:45:56] *** Quits: mattil (~mattil@87-92-14-145.bb.dnainternet.fi) (Remote host closed the connection)
[18:45:57] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[18:46:44] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:47:54] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[18:48:09] *** Joins: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de)
[18:48:54] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[18:49:24] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[18:49:55] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[18:50:27] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[18:50:27] *** ChanServ sets mode: +v perlbot
[18:51:26] *** Joins: perldoc (~perldoc@24.88.49.194)
[18:52:26] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[18:54:29] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 265 seconds)
[18:56:02] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 240 seconds)
[18:58:39] <simcop2387> alright there we go, loops fixed
[18:58:44] <simcop2387> now to go make some more
[19:00:35] <Altreus> loops n beats
[19:01:30] <simcop2387> and there we go, switches are all happy now with LAG configured and enabled
[19:02:28] <simcop2387> i now have a 16 port 10G switch, and 10+10G between it and my 24 port 1G switch.  and 10G to the rest of the house, 10+1+1G to my big server, and 10G to my second server.
[19:02:39] <simcop2387> so now I can do 10G iscsi between the servers!
[19:03:33] *** Joins: randir (~randir@95-25-138-85.broadband.corbina.ru)
[19:04:35] *** Joins: deadmarshal (~deadmarsh@95.38.114.19)
[19:09:22] *** Quits: deadmarshal (~deadmarsh@95.38.114.19) (Ping timeout: 260 seconds)
[19:09:25] *** Quits: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es) (Quit: ERC (IRC client for Emacs 27.1))
[19:10:21] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[19:12:18] <simcop2387> and sweet, the pcie coral ai device arrives today.  can only use half of it (need special adapters) so i can start getting a peephole door cam going, with facial recognition!
[19:13:28] <aquanight> sweeval: @ARGV = (5 .. 9); @_ = (2 .. 4); our $x; BEGIN { $x = shift; } say $x;
[19:13:45] <aquanight> sweval: @ARGV = (5 .. 9); @_ = (2 .. 4); our $x; sub foo { BEGIN { $x = shift; } } foo; say $x;
[19:13:51] <perlbot> aquanight: Use of uninitialized value $x in say at (IRC) line 1.  
[19:14:02] <aquanight> oh right
[19:14:04] <simcop2387> evalpb: 1
[19:14:10] <aquanight> sweval: BEGIN { @ARGV = (5 .. 9); @_ = (2 .. 4); } our $x; sub foo { BEGIN { $x = shift; } } foo; say $x;
[19:14:11] <perlbot> aquanight: 5 
[19:14:16] <aquanight> huh
[19:14:32] <aquanight> never knew that shift() hits @ARGV in BEGIN even inside a sub
[19:14:46] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:14:52] <simcop2387> perlbot: evalpb: 1
[19:14:53] <perlbot> simcop2387: Couldn't pastebin output
[19:15:18] <simcop2387> perlbot: evalpb: 1
[19:15:20] <perlbot> simcop2387: Output at: http://perl.bot/p/3akvcu
[19:15:24] <simcop2387> sweet
[19:15:25] <simcop2387> fixed
[19:15:50] <Altreus> aquanight: @_ doesn't exist yet - the sub is a red herring
[19:16:03] <Altreus> if you put the sub in the begin you'd have an @_
[19:16:08] <Altreus> but not this way around
[19:16:15] <aquanight> Altreus: except it did because I set @_ in BEGIN
[19:16:33] <Altreus> It's not global, it's localised
[19:17:26] <Altreus> I see what you were expecting, and honestly this looks like it works correctly by accident because nobody would do that... right?
[19:18:09] <Altreus> I wonder what it sees if...
[19:18:20] <aquanight> Altreus: nah this was just me learning something by way of LeoNerd from another channel. That apparently shift's default is @ARGV in some contexts other than just file scop
[19:18:36] <aquanight> specifically
[19:18:50] <Altreus> eval: @ARGV = "ARGV"; sub foo { eval 'BEGIN { say shift }' }; foo("underscore")
[19:18:51] <perlbot> Altreus: ARGV 
[19:18:52] <aquanight> inside phaser blocks (BEGIN/INIT/etc) and inside string evals, do, and require
[19:19:04] <aquanight> the latter two of course are file scopes but even string eval is considered "file scope"
[19:19:17] <Altreus> so it's actually built-in that it picks @ARGV in there and @_ in the sub scope
[19:19:41] <aquanight> eval: @ARGV = "ARGV"; sub foo { eval 'say shift'; } foo("_")
[19:19:42] <perlbot> aquanight: ARGV 
[19:19:53] <aquanight> but:
[19:20:00] <aquanight> eval: @ARGV = "ARGV"; sub foo { eval {say shift}; } foo("_")
[19:20:02] <perlbot> aquanight: _ 
[19:20:18] <aquanight> hmm
[19:20:22] <aquanight> eval: @ARGV = "ARGV"; sub foo { eval 'say shift @_'; } foo("_")
[19:20:24] <perlbot> aquanight: _ 
[19:20:38] <aquanight> eval: @ARGV = "ARGV"; sub foo { my $x = shift; eval 'say shift $x'; } foo("_") # and just because
[19:20:39] <perlbot> aquanight: No output.
[19:20:43] <aquanight> wait what
[19:20:48] <aquanight> I thought lexicals were visible in string evals
[19:20:58] <aquanight> oh
[19:21:02] <aquanight> eval: @ARGV = "ARGV"; sub foo { my $x = shift; eval 'say $x'; } foo("_") # and just because
[19:21:04] <perlbot> aquanight: _ 
[19:21:12] <aquanight> nvm I just dumbz
[19:21:29] <aquanight> why in the hell is shift $scalar not an error?!
[19:21:39] <aquanight> unless...
[19:21:46] <LeoNerd> eval
[19:21:54] <LeoNerd> It was an error. eval complained but got ignored
[19:21:54] <aquanight> fuck
[19:21:56] <aquanight> that too
[19:22:03] <LeoNerd> What you wanted was  compile_and_run_and_die_if_it_fails
[19:22:06] <LeoNerd> See my p5p thread
[19:22:24] <aquanight> eval: @ARGV = "ARGV"; sub foo { my $x = shift; eval 'say shift $x; 1;'//die; } foo("_") # and just because
[19:22:26] <perlbot> aquanight: ERROR: Experimental shift on scalar is now forbidden at (eval 7) line 1, at EOF 	...propagated at (IRC) line 1. 
[19:22:31] <aquanight> there it is
[19:22:34] *** Quits: zkrd (~xdg@2a02:587:de00:400:f4ab:2db4:2d71:c63e) (Read error: Connection reset by peer)
[19:22:59] <aquanight> I was thinking maybe it just parsed it as
[19:22:59] <Altreus> LeoNerd: ah, another one for the builtin.pm
[19:23:06] <Altreus> can we have a better.pm
[19:23:08] <Altreus> use better 'eval'
[19:23:10] <aquanight> *shift->say($x)
[19:23:15] <aquanight> indirect-object say
[19:23:22] <Altreus> might have done
[19:23:28] <Altreus> deparse: say shift $x;
[19:23:29] <perlbot> Altreus: ERROR: Experimental shift on scalar is now forbidden at (IRC) line 1, near "$x;" 
[19:23:33] <aquanight> no
[19:23:35] <Altreus> nope
[19:23:39] <aquanight> it's trying to do shift($x)
[19:23:45] <aquanight> which I think used to be interpreted as shift(@$x)
[19:23:56] <aquanight> and then it was decided that was stupid
[19:23:59] <Altreus> correct
[19:24:10] <Altreus> autoderef turned out to break things in the same way that smartmatch did
[19:24:33] <aquanight> I'd say can we next kill autoviv
[19:24:41] <LeoNerd> Nooo.. autoviv is nice
[19:24:45] <aquanight> but I think too many things (including myself recently) take advantage of autoviv
[19:25:04] <aquanight> among other things
[19:25:09] <aquanight> open my $fd is autoviv
[19:25:13] <revhippie> "taking advantage of language features" ... ?
[19:25:17] <aquanight> how would we open lexical fh without it
[19:25:21] <huf> why not kill variables?
[19:25:24] <huf> i use them
[19:25:28] <huf> they should be done away with
[19:25:44] <aquanight> just go back to turing machines
[19:25:51] <LeoNerd> ("autoviv" is, of course, a contraction of "Autotuned Vivian Stanshall", the MC voice used at the end of Mike Oldfield's Tubular Bells)
[19:25:54] <revhippie> hell with that, i'm'a just start banging rocks together.
[19:26:25] <aquanight> > > > > 1 < < 0 > [ 1 > ]
[19:27:15] <aquanight> I honestly have no idea wtf that even is.
[19:28:20] <aquanight> but I mean
[19:28:23] <aquanight> at the very least
[19:28:59] <aquanight> sweval: my $x; my $z = defined $x->{hello}[7]{wtf}[4]{bbq}; \$x;
[19:29:01] <perlbot> aquanight: \{hello => [undef,undef,undef,undef,undef,undef,undef,{wtf => [undef,undef,undef,undef,{}]}]}
[19:29:11] <aquanight> should still be undef
[19:30:52] <aquanight> I'm not sure how you would resolve that.
[19:31:33] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[19:31:55] <huf> LeoNerd: no it isnt, it's Otto Vivian
[19:32:04] <daemon> perlbot deparse: $x->{hello}[7]{wtf}[4]{bbq}
[19:32:05] <perlbot> daemon: No output.
[19:40:08] <aquanight> perlbot: deparse2 $x->{hello}[7]{wtf}[4]{bbq}
[19:40:10] <perlbot> aquanight: Output at: http://perl.bot/p/hi4r4s
[19:51:36] <Altreus> looks like brainfuck no?
[19:55:36] *** Joins: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[19:55:36] *** Quits: diskin (~diskin@5.139.138.52) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[19:55:36] *** diskin_ is now known as diskin
[19:58:02] *** Joins: jmdaemon (~anon@user/jmdaemon)
[19:58:53] *** Quits: APic (~apic@apic.name) (Quit: [TLS] Client upgrade)
[19:59:03] *** Joins: APic (apic@apic.name)
[19:59:05] *** Quits: jmdaemon (~anon@user/jmdaemon) (Client Quit)
[19:59:27] *** Joins: jmdaemon (~anon@142.207.63.60)
[19:59:49] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:03:43] *** Quits: jmdaemon (~anon@142.207.63.60) (Client Quit)
[20:04:20] *** Joins: jmdaemon (~anon@142.207.63.60)
[20:04:51] *** Quits: jmdaemon (~anon@142.207.63.60) (Client Quit)
[20:05:07] *** Joins: jmdaemon (~anon@142.207.63.60)
[20:07:00] *** Quits: jmdaemon (~anon@142.207.63.60) (Client Quit)
[20:07:49] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[20:08:01] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[20:11:17] *** Joins: jmdaemon (~anon@142.207.63.60)
[20:15:14] *** Quits: jmdaemon (~anon@142.207.63.60) (Client Quit)
[20:15:32] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[20:16:06] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Changing host)
[20:16:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:18:40] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Remote host closed the connection)
[20:18:52] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[20:19:16] *** Parts: jiggawatt (jiggawatt@runs.on.ubuntu.crapping.cricket) (tschüß!)
[20:19:49] <simcop2387> daemon: i think buzz has found a place to hide that i can't see
[20:20:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[20:20:36] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[20:22:21] <buZz> ?
[20:22:24] <buZz> oh
[20:22:31] <daemon> :-)
[20:22:34] <buZz> simcop2387: its funny
[20:22:37] <buZz> we BOTH have green eyes
[20:22:41] <buZz> such rare!
[20:22:58] <buZz> not sure how rare it is for cats though, but humans its kinda rare
[20:23:05] <daemon> I have greeny~blue~hazel eyes
[20:23:07] <daemon> maybe its a perl thing
[20:23:42] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Remote host closed the connection)
[20:23:53] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[20:23:54] *** Quits: proller (~p@2a02:6b8:0:40c:440:1ebd:fa63:be89) (Ping timeout: 265 seconds)
[20:24:21] <buZz> hehe
[20:24:47] <buZz> there's some brown in my eyes too , but green mostly
[20:24:48] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[20:25:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:25:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[20:25:32] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:25:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:26:54] * GumbyPAN CPAN Upload: ExtUtils-MakeMaker-7.63_10 by BINGOS https://metacpan.org/release/BINGOS/ExtUtils-MakeMaker-7.63_10
[20:27:10] *** Quits: solarbunny (~sol@2001:778:200:302:20c:29ff:fe8a:4af7) (Ping timeout: 268 seconds)
[20:27:47] *** Joins: solarbunny (~sol@2001:778:200:302:20c:29ff:fe8a:4af7)
[20:29:33] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[20:35:35] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[20:35:47] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[20:39:01] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:39:15] *** Joins: e1f (~user@141.117.1.175)
[20:42:02] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[20:42:12] *** Joins: proller (~p@2a02:6b8:0:40c:df9a:5d06:33ea:266f)
[20:47:41] *** Quits: proller (~p@2a02:6b8:0:40c:df9a:5d06:33ea:266f) (Ping timeout: 252 seconds)
[20:48:52] <simcop2387> buZz: ha.  yea sorry that's going to happen a lot so you'll see all the updates about my new cat
[20:49:08] <buZz> ;) dont worry, its fine
[20:50:07] <simcop2387> oh i was just saying sorry because there's no way i was going to stop
[20:50:27] <buZz> ^_^
[20:50:42] <buZz> maybe i can make a cat outfit with my face on it
[20:52:13] <simcop2387> it's funny, i knew i'd end up dredging up some grief over my old cat.  it hasn't even been a year since she passed, but i didn't expect to feel such a relief of loneliness in my apartment just having had him here for two days.
[20:53:27] <buZz> :)
[20:53:35] <buZz> we buzz-es have that effect on people, yes
[20:58:33] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:00:29] *** Quits: Peppard (~quassel@2a01:c22:73b8:8c00:6d7d:b614:191d:d272) (Ping timeout: 250 seconds)
[21:01:00] *** Joins: Peppard (~quassel@2001:470:1f0b:751:5c72:e3df:8cee:d391)
[21:02:50] *** Joins: Guest34 (~Guest34@bras-base-mtrlpq2763w-grc-33-70-52-17-42.dsl.bell.ca)
[21:05:07] *** Joins: proller (~p@2a02:6b8:0:40c:4654:87f9:4630:168e)
[21:07:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:07:54] *** Joins: deadmarshal (~deadmarsh@95.38.114.19)
[21:09:24] *** Quits: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com) (Remote host closed the connection)
[21:09:42] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:10:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[21:10:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:13:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Remote host closed the connection)
[21:13:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:14:48] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:15:02] *** Joins: Falconer (~ronnyma@227.84-48-191.nextgentel.com)
[21:31:08] *** pflanze_ is now known as pflanze
[21:35:44] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:36:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:36:06] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[21:36:25] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:37:02] * GumbyPAN CPAN Upload: Mojo-Darkpan-0.06 by RES https://metacpan.org/release/RES/Mojo-Darkpan-0.06
[21:40:04] *** Joins: ovid__ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[21:40:04] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Read error: Connection reset by peer)
[21:44:13] *** Joins: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es)
[21:47:47] <Altreus> we had a meal at the farm shop yesterday and their cat hung out with us the entire time :D
[21:48:03] <Altreus> she was in my seat so I put her on the one next to me
[21:49:53] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[21:50:13] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:50:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[22:02:51] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:04:31] *** Quits: ovid__ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[22:05:25] *** Quits: proller (~p@2a02:6b8:0:40c:4654:87f9:4630:168e) (Ping timeout: 252 seconds)
[22:07:09] *** Joins: magla (~gelignite@55d43df6.access.ecotel.net)
[22:08:13] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[22:32:17] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[22:34:08] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Quit: Leaving...)
[22:35:00] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[22:43:25] *** Quits: deadmarshal (~deadmarsh@95.38.114.19) (Ping timeout: 250 seconds)
[22:47:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:49:00] *** Joins: mattil (~mattil@87-92-14-145.bb.dnainternet.fi)
[22:50:58] *** Joins: jpmh (uid510532@id-510532.helmsley.irccloud.com)
[22:53:25] <jpmh> I'm a huge fan of Tie::File and use it all the time.  I seem to have run into an issue though.  I have a provess that ties an array and sometimes forks() children.  It seems that the tied array is NOT ALWAYS passed in tact.  In this application the tied file does not change.  The tie is at the main:: level - any ideas.  For the moment I have switched to open..,my @array =<FD>;chomp @array - but I would like to understand this.  Any 
[22:53:25] <jpmh> ideas?
[22:54:00] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[22:58:23] <Botje> how do you determine it is not passed "intact"?
[22:58:32] *** Quits: mattil (~mattil@87-92-14-145.bb.dnainternet.fi) (Remote host closed the connection)
[22:58:35] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[22:58:38] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[23:00:05] <ilmari> jpmh: can you write a minimal reproducing example? (even if it only fails occasionally)
[23:00:17] *** Joins: mattil (~mattil@87-92-14-145.bb.dnainternet.fi)
[23:03:48] <jpmh> Botje: I added logging to the code that writes to a temp file IF the size of the array is not as expected, $#devices, in fact.   I have seen it -1, the correct 82, numbers slightly less than 82 and 64
[23:04:23] <jpmh> ilmari: the problem is that 99% of the time it works fine, so I'm note sure that I can write a degenerate test - but I will try
[23:05:01] <ilmari> jpmh: the great thing a bout computers is they're really good at doing the same thing over and over again
[23:05:29] <ilmari> write a minimal script that you think should trigger the error (and dies if it does), and run it in a loop
[23:05:32] <jpmh> ilmari: sadly in this case I suspect we have a timing issue and so it is BY NO MEANS consistent
[23:06:07] <jpmh> ilmari: I agree - setting up the script now - although - een if I can trigger the issue - then what?
[23:06:38] <ilmari> once you can reproduce it (even if only 1% of the time), we can instrument the script further
[23:07:10] *** Quits: MaterazziSan (~user@24.135.203.113.dynamic.jazztel.es) (Quit: ERC (IRC client for Emacs 27.1))
[23:07:11] * GumbyPAN CPAN Upload: Test2-Harness-1.000088 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000088
[23:08:23] <Botje> jpmh: forks don't randomly corrupt memory. unless the file is changing underneath the process?
[23:08:36] *** Quits: mattil (~mattil@87-92-14-145.bb.dnainternet.fi) (Remote host closed the connection)
[23:08:45] *** Joins: krismatrix (~krismatri@38.80.149.51)
[23:10:20] <jpmh> Botje: I don't actually suspect a correcption of memory.  I suspect that Tie::File is possibly somehow re-reading the file.  The fact that the sall change to load the array from opening and reading the file rather than the tie demonstrates to me that we are nit corrupting memory
[23:11:18] *** Quits: krismatrix (~krismatri@38.80.149.51) (Client Quit)
[23:11:21] *** Quits: bluray (~bluray@user/zapdos) (Ping timeout: 250 seconds)
[23:11:43] *** Joins: mattil (~mattil@87-92-14-145.bb.dnainternet.fi)
[23:13:13] <buu> This sounds horrifying
[23:13:18] <Botje> no; as said: forks don't corrupt memory.
[23:13:23] <Botje> something else must be going on.
[23:13:39] <Botje> it is trivial to check the re-reading behavior on fork: just run your code under strace -e file.
[23:14:18] <ilmari> re-reading doesn't matter unless something else is modifying the file concurrently
[23:14:22] <jpmh> Botje: I would agree that fork() is VERY robust.  I do not suspec6 fork() - again the fact that changing that tie to a read has solved it further convinces me that there is something in Tie::File
[23:14:47] <jpmh> ilmari: and indeed there is NOTHN else that modifies it in production
[23:15:33] <jpmh> actually, I'm not really sure why I used tie in the first place.  I just tend to use it since I like Perl - just as I use RegEx to do things that probably culd be done better other ways
[23:15:42] *** Quits: jaytee80 (~jaytee80@206.208.33.20) (Quit: Client closed)
[23:16:10] <jpmh> when you have a hammer, everything looks like a nail.  When you have Perl, RegEx  and Tie::File seem the way to do so many things
[23:16:45] *** Joins: krismatrix (~krismatri@38.80.149.51)
[23:16:50] <gordonfish-> [OT] Anyone here using ZNC?
[23:16:58] <jpmh> and of course my degenerate test script is running like a charm.  No issues
[23:18:16] <jpmh> the array is as I said 82 entries  - before changing to read I had a test of $#array right after the fork and the parent always saw 82 and the child USUALLY did - literally the first statement after the if (!fork())   - AND YES I KNOW I should be better testing the return from fork()
[23:22:30] <Botje> I don't see how that is possible.
[23:24:28] *** Quits: mattil (~mattil@87-92-14-145.bb.dnainternet.fi) (Remote host closed the connection)
[23:25:20] <jpmh> HA!  I have a degenerate script that shows it - the problem is caused by a grep against the array - will upload the script to pastebin
[23:27:23] *** Joins: monkey_ (~user@181.114.17.106)
[23:29:18] <jpmh> https://l.perl.bot/p/8xdsyx
[23:29:19] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[23:29:59] <jpmh> with loading with the `cat ..` all remains clean - with the tie, all is clean UNTIL I add the grep / s
[23:30:33] <jpmh> note that the greps for NOT change the @d - they merely make a new array from it
[23:31:04] <jpmh> I should add that the string that I look for with the grep IS not found so the returned array is empty and in fact I get warnings
[23:31:05] <buu> Why is your paste so weird
[23:31:20] <jpmh> buu: what is weird aboiut it?
[23:31:43] <MikeGeorge[m]> It repeats itself and has a shell prompt in it.
[23:32:05] <jpmh> buu - never mind I do see a duplication there - let me re-submit
[23:33:44] <jpmh> OK - I read my paste this time: https://l.perl.bot/p/s39h5v
[23:33:45] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[23:34:31] <jpmh> MikeGeorge[m]: YEP - I see that - oops - hence the new paste
[23:35:08] <MikeGeorge[m]> I'm on Matrix, so I'm guessing there was a delay in my comment.
[23:36:31] <buu> jpmh: Are you saying the grep is changing the array count
[23:36:35] <jpmh> ilmari: I am so thankful for your pushing me to write the degenerate script - now I know what the issue was and so the fact that my code now works does not worry me.  I never like zombie code where it works and I have fixed and issue and do not know why.
[23:37:26] *** Quits: Guest34 (~Guest34@bras-base-mtrlpq2763w-grc-33-70-52-17-42.dsl.bell.ca) (Quit: Client closed)
[23:37:53] <jpmh> buu: it sure seems so, doesn't it.  And really the problem is that grep is not correct.  So, I am going to say that this is a bug in the Tie::File implementation of grep.
[23:38:54] <jpmh> I probably should read the docs more carefully to check what they say about grep on a ttied file - I have always used Tie::File as though it was an array
[23:38:57] *** Quits: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[23:39:22] <buu> I don't think grep knows about tie file
[23:39:26] *** Joins: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de)
[23:40:18] <e1f> i just noticed the header; is there an obit for dha?
[23:40:21] <jpmh> buu as I remmber it, and I did write a tie for my own files once (a long time ago) I have to create a grep if I want it to be supported
[23:41:17] <jpmh> buu: so my understanding is that Tie::File neds to implement grep
[23:41:45] <ilmari> jpmh: there's no special handling for grep, it just iterates over the array
[23:42:47] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:42:52] <jpmh> ilmari: well why then does the grep generating warning when it is on a tied file and non when on an array that is the same that I loaded?
[23:47:06] <jpmh> even more degenerate script now: https://l.perl.bot/p/8bei8y
[23:47:06] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[23:47:36] <jpmh> with the fork() the tied version generates the errors/warnings - the array version does not  - with no fork all is clean
[23:48:04] <ilmari> what are the errors and warnings?
[23:48:17] <jpmh> so, to generate the error I need BOTH a fork and a grep that finds no matches
[23:48:23] <revhippie> jpmh: this is neat -- https://l.perl.bot/p/medqye
[23:48:24] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[23:48:44] <jpmh> ilmari: Use of uninitialized value $_ in pattern match (m//) at test17.pl line 16, <$fh> line 124.
[23:49:37] <jpmh> revhippie: and what new do we learn ftom that?
[23:49:50] <revhippie> jpmh: it's not the grep, i'd guess?
[23:50:05] <jpmh> revhippie: good point
[23:50:06] <revhippie> one of the process saw $d[0] as undef, somehow
[23:51:04] <jpmh> revhippie: I agree - it is the iteration over the array that seems to be the issue
[23:51:11] <ilmari> jpmh: filehandles are shared between forked processes
[23:51:18] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 268 seconds)
[23:51:51] <ilmari> jpmh: so if one process reads the file to the end (e.g. grep with no match), the other will get eof
[23:52:09] <jpmh> ilmari: GREAT!  That;s it.  The forked proess is needing to read the file and use the handle.  
[23:52:21] *** Joins: jaytee80 (~jaytee80@206.208.33.20)
[23:52:59] <jpmh> YEP - and I can confirm that is indeed it because if I untie and re-tie the file in the child all is clean
[23:53:27] <jpmh> now I understand it - it is obvious - thanks to you all - 
[23:53:52] <jpmh> I can't say that I like it though.  The fact that a tied array is NOT the same as a regular array is sort of not nice
[23:54:21] <ilmari> well, the whole point of it is to lazily access lines of the file without reading the whole thing into memory
[23:54:33] <ilmari> of course it's going to have to keep the file handle open and seek around the file
[23:54:43] <jpmh> ilmari: YEP - and that's why I use it all the time
[23:55:33] <jpmh> ilmari: YEP - as I say - now we understand it it is obvious.  It is the fact that the tie sort of hides the handle that is the issue
[23:55:52] <ilmari> it could be made fork-safe by having it store $$ (and threads->tid()) and check if it's changed on every access
[23:57:41] *** Joins: deadmarshal (~deadmarsh@95.38.114.19)
[23:57:56] *** Joins: proller (~p@80.240.216.69)
