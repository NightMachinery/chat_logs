[00:00:06] *** Quits: jao (~jao@37.120.199.42) (Remote host closed the connection)
[00:01:21] *** Quits: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065) (Changing host)
[00:01:21] *** Joins: saltrocklamp[m] (~elementio@user/hexology)
[00:03:18] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[00:13:02] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[00:13:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[00:16:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Remote host closed the connection)
[00:17:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80:aa94:ac75:d11d:97b0)
[00:17:50] *** Joins: klovett (~klovett@mobile-166-170-40-35.mycingular.net)
[00:29:21] *** Joins: jao (~jao@37.120.199.42)
[00:51:32] *** Quits: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03) (Quit: Leaving)
[00:58:43] *** Quits: aportnoy (~aportnoy@user/aportnoy) (Quit: Leaving)
[01:02:30] *** Joins: aportnoy (~aportnoy@user/aportnoy)
[01:14:48] *** Joins: cjb (~cjbayliss@user/cjb)
[01:40:45] *** Quits: aportnoy (~aportnoy@user/aportnoy) (Remote host closed the connection)
[01:41:04] *** Joins: aportnoy (~aportnoy@user/aportnoy)
[01:42:05] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[01:51:23] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[01:52:50] *** Quits: wnklmnn (~wnklmnn@2a02:908:4e2:9740:ae17:65f0:eba4:a543) (Ping timeout: 260 seconds)
[01:54:29] *** Joins: pony (~ed@smol/hors)
[02:30:16] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 265 seconds)
[02:35:23] *** Quits: aportnoy (~aportnoy@user/aportnoy) (Remote host closed the connection)
[02:35:47] *** Joins: aportnoy (~aportnoy@user/aportnoy)
[02:39:14] *** Quits: Psybur (~Psybur@mobile-166-170-29-12.mycingular.net) (Remote host closed the connection)
[03:32:09] *** Joins: klovett_ (~klovett@mobile-166-170-40-35.mycingular.net)
[03:32:10] *** Quits: taiju (~taiju@m014013236064.v4.enabler.ne.jp) (Ping timeout: 244 seconds)
[03:33:51] *** Quits: klovett (~klovett@mobile-166-170-40-35.mycingular.net) (Ping timeout: 245 seconds)
[03:46:33] *** Quits: robin (~robin@user/terpri) (Quit: Leaving)
[03:46:50] *** Joins: robin (~robin@user/terpri)
[03:58:40] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[04:03:18] *** Joins: Guest-liao (~Guest-lia@101.86.103.113)
[04:05:57] *** Quits: Guest-liao (~Guest-lia@101.86.103.113) (Client Quit)
[04:08:53] *** Joins: Guest-liao (~Guest-lia@101.86.103.113)
[04:34:31] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (Ping timeout: 252 seconds)
[04:36:08] *** Joins: ahlk (~user@2600:1700:31c0:3a10::43)
[04:39:59] *** Quits: aportnoy (~aportnoy@user/aportnoy) (Ping timeout: 264 seconds)
[04:42:51] *** Quits: manumanumanu (~mio@c-2cbf225c.028-87-6e6b701.bbcust.telenor.se) (Ping timeout: 265 seconds)
[04:55:33] *** Joins: aportnoy (~aportnoy@user/aportnoy)
[04:55:46] *** Quits: aportnoy (~aportnoy@user/aportnoy) (Client Quit)
[04:57:26] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:09:25] *** Quits: jao (~jao@37.120.199.42) (Ping timeout: 260 seconds)
[05:11:30] *** Joins: jao (~jao@45.152.183.53)
[05:18:00] *** Quits: lampilelo (~lampilelo@user/lampilelo) (Ping timeout: 258 seconds)
[05:41:34] *** Joins: seninha (~seninha@user/seninha)
[06:02:12] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:31:24] *** Quits: Guest-liao (~Guest-lia@101.86.103.113) (Quit: Client closed)
[06:33:52] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[06:36:17] *** Joins: Guest-liao (~Guest-lia@101.86.103.113)
[07:00:55] *** Quits: sdu (~doo@185.44.146.22) (Ping timeout: 244 seconds)
[07:03:00] *** Joins: sdu (~doo@185.44.146.22)
[07:05:24] *** Joins: evdubs_ (~evdubs@172.94.44.189)
[07:07:47] *** Quits: evdubs (~evdubs@cpe-66-8-236-219.hawaii.res.rr.com) (Ping timeout: 260 seconds)
[07:09:17] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:10:57] *** Quits: jao (~jao@45.152.183.53) (Remote host closed the connection)
[07:12:03] *** Joins: jao (~jao@45.152.183.53)
[07:13:51] *** Quits: jao (~jao@45.152.183.53) (Remote host closed the connection)
[07:17:40] *** Joins: jao (~jao@45.152.183.53)
[07:27:51] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 260 seconds)
[07:29:47] *** Quits: jao (~jao@45.152.183.53) (Ping timeout: 264 seconds)
[07:31:49] *** Joins: jao (~jao@45.152.183.62)
[07:37:39] *** Quits: cjb (~cjbayliss@user/cjb) ()
[08:09:34] *** Quits: klovett_ (~klovett@mobile-166-170-40-35.mycingular.net) (Quit: ZZZzzz…)
[08:15:35] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:22:09] *** Joins: piliplaker (~piliplake@213.173.35.227)
[08:22:34] *** Quits: Guest-liao (~Guest-lia@101.86.103.113) (Quit: Client closed)
[08:24:34] *** Joins: zacque (~zacque@5.102.49.60.klj04-home.tm.net.my)
[08:25:20] *** Joins: Guest-liao (~Guest-lia@101.86.103.113)
[08:56:12] *** Joins: silasfox (~sbv@p200300fb27055f598afb1d001f710e59.dip0.t-ipconnect.de)
[09:00:16] *** Quits: silasfox (~sbv@p200300fb27055f598afb1d001f710e59.dip0.t-ipconnect.de) (Client Quit)
[09:41:53] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[09:49:56] *** Quits: piliplaker (~piliplake@213.173.35.227) (Quit: Connection closed)
[09:56:18] *** Joins: manumanumanu (~mio@c-2cbf225c.028-87-6e6b701.bbcust.telenor.se)
[09:58:07] *** Quits: jao (~jao@45.152.183.62) (Ping timeout: 260 seconds)
[10:06:24] *** Quits: mala (~mala@user/malaclyps) (Read error: Connection reset by peer)
[10:08:39] *** Joins: mala (~mala@user/malaclyps)
[10:18:43] *** Quits: Guest-liao (~Guest-lia@101.86.103.113) (Quit: Client closed)
[10:44:24] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:48:08] *** Joins: silasfox (~sbv@p200300fb27055fc99d3f76e47cb96727.dip0.t-ipconnect.de)
[10:51:01] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[11:12:44] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[11:23:10] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:35:49] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:43:13] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[11:55:08] *** Joins: civodul (~user@guix/contributor/civodul)
[11:57:19] *** Joins: Guest-liao (~Guest-lia@101.86.103.113)
[12:02:59] *** Joins: pony (~ed@smol/hors)
[12:08:34] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[12:15:58] *** Joins: pony (~ed@smol/hors)
[12:20:06] *** Quits: pony (~ed@smol/hors) (Client Quit)
[12:30:06] *** Quits: Wezl[m] (~wezlpriva@2001:470:69fc:105::d90b) (Quit: You have been kicked for being idle)
[12:41:25] *** Joins: livoreno (~livoreno@user/notzmv)
[12:44:31] *** Joins: mdhughes_ (~mdhughes@user/mdhughes)
[12:48:23] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Ping timeout: 264 seconds)
[12:48:31] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:49:12] *** Joins: lampilelo (~lampilelo@user/lampilelo)
[12:49:53] *** Joins: pony (~ed@smol/hors)
[12:52:56] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:55:28] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[13:07:36] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 245 seconds)
[13:29:19] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[13:30:01] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[13:38:42] *** mdhughes_ is now known as mdhughes
[14:17:41] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[14:21:48] *** Joins: seninha (~seninha@user/seninha)
[14:25:59] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 260 seconds)
[14:27:51] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:31:45] *** Joins: klovett (~klovett@mobile-166-170-40-35.mycingular.net)
[14:32:42] *** Quits: Guest-liao (~Guest-lia@101.86.103.113) (Quit: Ping timeout (120 seconds))
[14:33:49] *** Joins: Guest-liao (~Guest-lia@101.86.103.113)
[14:49:29] *** Joins: civodul (~user@guix/contributor/civodul)
[15:10:36] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[15:10:56] *** Joins: madage (~madage@user/madage)
[15:40:02] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 260 seconds)
[16:03:11] *** Joins: civodul (~user@guix/contributor/civodul)
[16:14:11] *** Quits: Guest-liao (~Guest-lia@101.86.103.113) (Quit: Client closed)
[16:22:37] *** Quits: phoebos (~phoebos@kisslinux/phoebos) (Quit: connection reset by purr)
[16:38:59] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 260 seconds)
[16:47:09] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:2111:1b2c:6ebe:efdf)
[16:47:09] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:2111:1b2c:6ebe:efdf) (Changing host)
[16:47:09] *** Joins: skapata (~Skapata@user/skapata)
[16:58:24] *** Joins: Guest-liao (~Guest-lia@101.86.103.113)
[17:19:43] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[17:23:11] *** Joins: jao (~jao@89.45.90.66)
[17:30:01] *** Quits: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Quit: Leaving)
[17:31:22] *** Quits: zacque (~zacque@5.102.49.60.klj04-home.tm.net.my) (Quit: Goodbye :D)
[17:48:15] *** Quits: Guest-liao (~Guest-lia@101.86.103.113) (Quit: Client closed)
[18:24:57] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:25:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:33:35] *** Joins: Psybur (~Psybur@mobile-166-170-34-121.mycingular.net)
[18:39:43] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[18:46:23] *** Joins: kayprish (~kayprish@46.240.130.158)
[18:52:43] *** Quits: klovett (~klovett@mobile-166-170-40-35.mycingular.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:52:54] *** Quits: kayprish (~kayprish@46.240.130.158) (Quit: leaving)
[18:53:05] *** Joins: kayprish (~kayprish@46.240.130.158)
[18:56:56] *** Joins: evdubs__ (~evdubs@cpe-66-8-236-219.hawaii.res.rr.com)
[18:59:18] *** Quits: evdubs_ (~evdubs@172.94.44.189) (Ping timeout: 260 seconds)
[19:00:29] *** Joins: kayprish_ (~kayprish@46.240.130.158)
[19:00:43] *** Quits: kayprish_ (~kayprish@46.240.130.158) (Client Quit)
[19:00:47] *** Quits: kayprish (~kayprish@46.240.130.158) (Quit: leaving)
[19:00:57] *** Joins: kayprish (~kayprish@46.240.130.158)
[19:07:14] *** Quits: jao (~jao@89.45.90.66) (Ping timeout: 260 seconds)
[19:09:11] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[19:15:50] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[19:15:57] *** Joins: civodul (~user@guix/contributor/civodul)
[19:21:55] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a08e:2845:2bb:1c33)
[19:21:55] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a08e:2845:2bb:1c33) (Changing host)
[19:21:55] *** Joins: skapata (~Skapata@user/skapata)
[19:22:35] *** Joins: klovett (~klovett@mobile-166-170-40-35.mycingular.net)
[19:34:00] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[19:34:27] *** Quits: X-Scale (~ARM@31.22.144.14) (Ping timeout: 260 seconds)
[19:35:05] *** X-Scale` is now known as X-Scale
[19:48:27] *** Quits: Psybur (~Psybur@mobile-166-170-34-121.mycingular.net) (Ping timeout: 260 seconds)
[20:26:45] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Quit: Leaving)
[20:30:04] <dpk> re the current srfi-discuss thread, i'm considering an iteration SRFI wherein the consumer can choose whether to consume in pure-functional or mutational style
[20:31:28] <dpk> so you'd have cursor-next and cursor-next!, and the design of the API for producers of streams is such that whether the cursor is mutated or not is handled by those procedures in the cursor implementation
[20:32:57] <dpk> (i admit have only the vaguest sketch in my head of how/whether this might work)
[20:33:09] *** Joins: klovett_ (~klovett@mobile-166-170-40-35.mycingular.net)
[20:36:23] *** Quits: klovett (~klovett@mobile-166-170-40-35.mycingular.net) (Ping timeout: 264 seconds)
[20:36:47] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:37:41] <gwatt> do you know how you want the interface to look? Or does that full under the umbrella of "vaguest sketch"?
[20:37:56] <gwatt> fall, not full
[20:38:53] *** Joins: klovett (~klovett@mobile-166-170-40-35.mycingular.net)
[20:40:15] <dpk> roughly, yes
[20:40:43] <dpk> my problem is that i'm pretty sure my current idea can't be done in syntax-rules
[20:41:47] <dpk> will write up a draft and maybe a sketch implementation later
[20:42:10] <gwatt> well, the good news there is that syntax-case looks likely to be standardized in the yellow ballot
[20:42:23] *** Quits: klovett_ (~klovett@mobile-166-170-40-35.mycingular.net) (Ping timeout: 264 seconds)
[20:54:58] *** Joins: wnklmnn (~wnklmnn@2a02:908:4e2:9740:8da9:2b5d:1249:baf0)
[21:08:24] *** Joins: phoebos (~phoebos@kisslinux/phoebos)
[21:12:46] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[21:17:38] <Zipheir> dpk: Why would it be a macro interface as opposed to a procedural one?
[21:18:03] <Zipheir> Sounds a bit like a traversable typeclass to me.
[21:21:53] <Zipheir> OK, reading the thread helps.
[21:24:15] <Zipheir> I still think streams/other lazy structures are a perfectly good alternative for this sort of thing.  I'm not convinced the performance hit of consing is really much of a problem.
[21:26:09] <dpk> M N-W pointed out that streams memoize, which is additional overhead
[21:26:25] <dpk> (so really what we need is non-memoizing streams? great)
[21:26:27] <Zipheir> lseqs, then.
[21:26:38] <dpk> lseqs are based on generators!
[21:26:45] <Zipheir> Already in R7RS-large, in fact.
[21:26:51] <dpk> yes, alas
[21:27:04] <Zipheir> I agree that generators are a bit of a kludge.
[21:28:33] <Zipheir> Non-memoizing SRFI 41 would be an easy project.  Maybe the SRFI 41 stream model has other opportunities for memory-use optimization.
[21:31:27] <Zipheir> Interestingly, this seems to be the approach Idris takes (as opposed to Haskell's memoized lazy structures): https://github.com/idris-lang/Idris2/issues/1013
[21:31:41] <Franciman> hi Zipheir!
[21:32:51] <Zipheir> Hi Franciman!
[21:35:28] <gwatt> In all the talk about how to represent the end of the generator, I'm slightly surprised no one suggested returning (values)
[21:36:37] <Zipheir> This reminds me of the SRFI 189 discussion of all the many "bottom" values and pseudo-values out there.
[21:37:45] <Zipheir> dpk: I guess my question is, why do we need something between lazy structures and (syntactic) loop abstractions?
[21:41:44] <dpk> Zipheir: hmm, i think a procedural interface would be possible …
[21:43:04] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[21:52:39] <dpk> i need to think about this more. the idea is to encapsulate the state of iteration and provide a function argument to advance it forward. that function can either mutate or cons
[21:52:55] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[22:01:16] <Zipheir> Again, this sounds a lot like the traversable abstraction that Gibbons (I think?) came up with. (https://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf)  Maybe if we were to figure out and adapt Oleg's typeclasses-as-macros model (https://okmij.org/ftp/Computation/typeclass.html) we could provide something similar via syntax-case (i.e. without the overhead of dictionary-passing typeclasses à la 
[22:01:22] <Zipheir> comparators).
[22:04:59] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[22:05:00] <Zipheir> Just thinking out loud.  I haven't actually made sense of Oleg's work on this.
[22:21:20] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[22:24:55] *** Joins: klovett_ (~klovett@mobile-166-170-40-35.mycingular.net)
[22:28:35] *** Quits: klovett (~klovett@mobile-166-170-40-35.mycingular.net) (Ping timeout: 264 seconds)
[22:41:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80:aa94:ac75:d11d:97b0) (Ping timeout: 245 seconds)
[22:45:14] *** Joins: aportnoy (~aportnoy@user/aportnoy)
[22:45:59] *** Quits: klovett_ (~klovett@mobile-166-170-40-35.mycingular.net) (Ping timeout: 264 seconds)
[22:52:34] *** Quits: aportnoy (~aportnoy@user/aportnoy) (Quit: Leaving)
[23:09:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 245 seconds)
[23:10:16] *** Joins: X-Scale` (~ARM@31.22.167.71)
[23:10:52] *** X-Scale` is now known as X-Scale
[23:17:44] <amazigh> (I had this conversation in my head a few month ago... it is far fetched... it started with `match` then matching over arbitrary sequence, then matching arbitrary graphs. I figured matching arbitrary graph is not practical).
[23:19:05] <amazigh> also the cursor api looks nice, but forward-only cursor does not looks nice.
[23:19:33] <Zipheir> I think the right model is to think of "cursing" as an effectful computation.
[23:19:58] <amazigh> at least current generators have a good "hello world". 
[23:20:37] <amazigh> MNW proposal with two procedures looks good; it is unclear what are the disavantages, except slightly more complex "hello world"
[23:20:55] <Zipheir> What is a "hello world"?
[23:21:16] <amazigh> simple program that demonstrate the basic capability of a system: a hello world program.
[23:21:45] <Zipheir> (generator->list (generator "hello" "world"))
[23:22:25] <Zipheir> Sure, but even a completely broken concept might have a simple demo.
[23:22:52] <amazigh> yes
[23:22:54] <Zipheir> Perl is known for its terseness and easy examples. :)
[23:23:36] <amazigh> that is why I said "at least" in the message "at least current generators..."
[23:23:44] <Zipheir> Ah, sorry.
[23:23:55] <amazigh> but there slightly more complex generator that show the inner working for building custom generators
[23:24:05] <xaltsc> Hey, sorry for interrupting with my noob question, but, regarding (hygenic, as provided by gauche) macros, does syntax-rules provide another form of matching than by arity and eq?/eqv?/equal? ? My concrete problem is that I want to have a pattern [_ a] match, first, when a is a bounded integer, and [_ b] match when b is a true list.
[23:24:24] *** Joins: pony (~ed@smol/hors)
[23:24:34] <Zipheir> xaltsc: syntax-rules has no notion of eq?, etc.  It's purely token-matching.
[23:24:38] <amazigh> (generator->list (generator ...)) does not help to understand how to build your own generators, unlike say the definition genumerate
[23:24:49] <Zipheir> True, it was a poor example.
[23:25:11] <xaltsc> Zipheir: yeah, right, I meant "lol" matches "lol"
[23:25:20] <Zipheir> xaltsc: You do that with syntax-rules by matching on "shape".
[23:25:24] <amazigh> no, it is not a poor example according to some people, those that just "want to get things done"
[23:25:36] <xaltsc> Zipheir: shape ?
[23:25:59] <Zipheir> xaltsc: e.g. ((_ (x ...)) #| list case |#) ((_ a) #| atom case |#) ...
[23:26:04] <amazigh> Your example is necassrym in any case.
[23:26:40] <xaltsc> Zipheir: but there's no way to tell if a number is bounded by min/max ?
[23:26:46] <Zipheir> No.
[23:27:09] <Zipheir> That would require semantic-rules, not syntax-rules. :)
[23:27:15] <xaltsc> Won't the atom case match a list as well ? (unless lists are matched before the atom case) 
[23:27:20] <Zipheir> We don't have dependent types yet.
[23:27:29] <xaltsc> *yet*
[23:27:44] <gwatt> xaltsc: match order in syntax-rules is first to last
[23:27:51] <Zipheir> xaltsc: Think of the list case as a guard.  The clauses are processed in order, so it should catch the right one.
[23:28:23] <xaltsc> ok thanks
[23:28:23] <Zipheir> It's a bit clumsy.
[23:29:22] <Zipheir> Felleisen and someone proposed a "shape system" for syntax-rules that would allow explicit "type signatures" for patterns, but AFAIK no-one has implemented it.
[23:31:19] <Zipheir> amazigh: I notice you mentioned Maybe as a way to fix generators.
[23:31:23] <gwatt> I know syntax-case has the notion of guards. If you provide three items in a clause the middle one is a guard
[23:33:47] <Zipheir> xaltsc: I think the idea of working on numeric literals as syntax is not so far out.  I'm sure there are papers about the possibility.
[23:34:16] *** Quits: silasfox (~sbv@p200300fb27055fc99d3f76e47cb96727.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[23:35:29] <Zipheir> A hilarious, easy-ish possibility is a macro that takes a natural number and expands to different things depending on the number.
[23:42:12] <xaltsc> Zipheir: I kind of was thinking about making a sup-macro to evaluate inside define-syntax to generate the necessary matches
[23:45:23] <xaltsc> Also, is it possible to have a macro be called in such a way that the, say, first, argument is automatically transformed in a symbol without having to quote it ?
[23:47:27] <gwatt> xaltsc: "without having to quote it" Does that mean the call er of the macro doesn't have to quote it or that the definer of the macro doesn't have to quote it?
[23:48:40] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[23:50:10] <xaltsc> gwatt: that the definer doesn't have to it, for instance with the macro ->string, (->string foo) produces "foo" even when foo isn't bound.
[23:52:21] <gwatt> probably impossible, at least portably.
[23:53:34] <dpk> ((_ sym) (symbol->string (quote sym))), syntax-rules pattern that does that, but produces the string at runtime
[23:54:20] <dpk> something like that is possible in syntax-case producing the string at compile time, probably
[23:54:53] <gwatt> but that's the macro definer explicitly quoting the symbol, which xaltsc said they didn't want
[23:56:34] <xaltsc> That's actually what I want, I guess, the user of the macro won't notice it
[23:56:43] <xaltsc> But what is the status of sym here ?
[23:56:53] <xaltsc> status/type/token/idk
[23:57:16] <gwatt> it's literally anything. there are no guarantees with that syntax-rules pattern
[23:57:39] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:1849:4f5f:1c0b:e16f)
[23:57:39] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:1849:4f5f:1c0b:e16f) (Changing host)
[23:57:39] *** Joins: skapata (~Skapata@user/skapata)
[23:57:41] <xaltsc> can I apply some predicate on it ?
[23:58:01] <gwatt> not at expand-time with syntax-rules
[23:59:50] <xaltsc> ok thanks :)
