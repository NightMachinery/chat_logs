[00:00:09] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Client Quit)
[00:02:09] *** Joins: alx741 (~alx741@157.100.93.160)
[00:02:46] *** Quits: max22- (~maxime@2a01cb088335980008f67ae5de220faa.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[00:03:15] <joeyh> oh, and withOS is an alternative to pickOS that does support more options
[00:03:32] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[00:03:53] <joeyh> gotta run
[00:06:32] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[00:06:54] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[00:07:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:07:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:07:25] *** Joins: wroathe (~wroathe@user/wroathe)
[00:08:17] *** Quits: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 240 seconds)
[00:11:33] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[00:12:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:13:59] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[00:14:15] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[00:14:19] *** Joins: deadmarshal (~deadmarsh@95.38.119.69)
[00:19:25] *** Quits: deadmarshal (~deadmarsh@95.38.119.69) (Ping timeout: 268 seconds)
[00:20:08] *** Joins: max22- (~maxime@2a01cb0883359800b9c0eef0c2aecb73.ipv6.abo.wanadoo.fr)
[00:21:47] *** Joins: enoch (~enochthec@115-188-139-239-vdsl.sparkbb.co.nz)
[00:21:53] *** Quits: enoch (~enochthec@115-188-139-239-vdsl.sparkbb.co.nz) (Changing host)
[00:21:53] *** Joins: enoch (~enochthec@user/enochthechronoco)
[00:22:34] *** Quits: alp (~alp@user/alp) (Remote host closed the connection)
[00:22:55] *** Joins: alp (~alp@user/alp)
[00:25:06] <ix> I did try withOS but hit other type errors that i couldn't figure out due to not being familiar
[00:27:53] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:29:40] *** Joins: alx741 (~alx741@157.100.93.160)
[00:30:52] *** Joins: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[00:31:17] *** Quits: enoch (~enochthec@user/enochthechronoco) (Ping timeout: 240 seconds)
[00:32:15] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[00:34:14] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[00:36:09] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[00:37:18] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[00:38:03] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-33.dsl.bell.ca)
[00:38:39] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[00:38:55] *** Quits: fendor (~fendor@91.141.78.76.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[00:44:07] *** Quits: _ht (~quassel@2a02:a468:b619:1:aa62:dbcc:166b:da6a) (Remote host closed the connection)
[00:48:24] *** Joins: lispy (~lispy3@84.69.59.93)
[00:51:36] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:52:12] *** Joins: alx741 (~alx741@157.100.93.160)
[00:54:56] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[00:55:25] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:01:50] <EvanR> hmm, having trouble using an emoji as the name of a function
[01:02:09] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[01:02:25] <EvanR> is that not supported
[01:02:35] <EvanR> has emojihaskell twitter been lying to me all these years
[01:02:44] * ix resists the urge to say "good"
[01:03:52] <ix> joeyh: second suggestion, would it be ok to shift your config outside the "Propellor" Module? I feel like that's the very wrong place for it
[01:05:34] <geekosaur> > generalCategory 'ðŸ˜€'
[01:05:36] <lambdabot>  OtherSymbol
[01:06:08] <geekosaur> > let x ðŸ˜€ y = x * 2 + 5 * y in 3 ðŸ˜€ 7
[01:06:10] <lambdabot>  41
[01:07:38] *** Joins: Topsi (~Tobias@dyndsl-095-033-026-019.ewe-ip-backbone.de)
[01:07:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[01:07:47] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[01:07:47] *** finn_elija is now known as FinnElija
[01:08:02] <pavonia> Let's put even more fun in functional programming
[01:08:11] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[01:08:30] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[01:08:46] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[01:10:41] *** Joins: fr33domlover (~fr33@2.55.162.28)
[01:11:15] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[01:11:29] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[01:12:17] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[01:13:47] *** Joins: alx741 (~alx741@157.100.93.160)
[01:14:00] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[01:15:20] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:16:41] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:18:00] *** Quits: benin (~benin@183.82.31.24) (Quit: The Lounge - https://thelounge.chat)
[01:19:16] *** Joins: themc47 (~mc47@xmonad/TheMC47)
[01:21:32] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Ping timeout: 240 seconds)
[01:22:30] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:23:05] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:25:08] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[01:31:06] <hpc> pavonia: lisp puts defun in functional programming :D
[01:33:53] <ix> i asked earlier, nobody responded, thoughts on fused-effects vs polysemy preferences?
[01:33:53] <monochrom> haha
[01:34:05] <ix> lol
[01:34:17] *** Joins: alx741 (~alx741@157.100.93.160)
[01:35:40] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:38:13] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[01:39:25] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3) (Remote host closed the connection)
[01:39:36] <byorgey> ix: the very high-level view is that fused-effects is the better choice if performance is important, but polysemy is much more flexible.
[01:39:57] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:40:16] <byorgey> with polysemy it is very easy to define your own new effects, and to do things like dispatch selected effects locally, reinterpret effects in terms of other effects, etc.
[01:40:34] <ix> and it's not easy to do that with fused-effects?
[01:41:25] <ix> (i have used polysemy once before, i just saw the new note about f-e being more performant and wondered if the hype had shifted to that)
[01:44:36] <ix> tbh i might just use f-e anyway, to gain the experience
[01:48:24] <byorgey> It might be possible to do local dispatch and reinterpreting with f-e, I'm not 100% sure.  I just know it is very easy to do those things with polysemy, and for some projects that really matters.  But for others it doesn't so much.
[01:48:52] <byorgey> We do use f-e in https://github.com/byorgey/swarm/ but someone else did the work to port it to f-e so I'm not super familiar with it.
[01:49:40] <byorgey> It seems that 'capability' may be even faster than f-e, but is definitely more limited in what it can do.
[01:49:43] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:50:25] <EvanR> is f-e like free monads on acid
[01:51:06] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:58a2:2ee7:7301:3a35) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:51:55] *** Quits: max22- (~maxime@2a01cb0883359800b9c0eef0c2aecb73.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[01:52:56] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:58a2:2ee7:7301:3a35)
[01:56:22] *** Joins: alx741 (~alx741@157.100.93.160)
[01:56:27] <byorgey> EvanR: yeah, pretty much
[02:00:49] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[02:01:58] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[02:02:16] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[02:04:49] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[02:13:53] <hololeap> it looks like a cabal file extracted directly from a tarball from hackage.haskell.org uses unix line terminators, but the same cabal file, extracted using `cabal unpack`, uses dos line terminators. any ideas why this is?
[02:14:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:14:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:14:27] *** Joins: wroathe (~wroathe@user/wroathe)
[02:14:36] <hololeap> the specific package I'm looking at is: fourmolu-0.4.0.0
[02:15:26] <hololeap> oh, maybe I should mention that I'm using an old Cabal: 3.2
[02:15:54] *** Quits: themc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[02:16:23] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:18:15] <geekosaur> I note there's a revision, which exists as a separate cabal file. cabal unpack uses the revision, but iirc if you just get a raw tarball from hackage it's on you to get the revision separately. (see https://hackage.haskell.org/package/fourmolu-0.4.0.0/revisions/ and check the shasum)
[02:19:07] *** Joins: alx741 (~alx741@157.100.93.160)
[02:19:33] <geekosaur> (nice. cabal unpack isn't documentedâ€¦)
[02:20:53] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[02:21:05] <byorgey> geekosaur: I think 'unpack' is just an alias for 'get'
[02:21:40] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[02:22:15] *** Quits: mmhat (~mmh@55d4e57c.access.ecotel.net) (Quit: WeeChat 3.4)
[02:24:54] <geekosaur> yeh, I also had to allow access to the search js as it turned out
[02:26:04] *** Joins: Pickchea (~private@user/pickchea)
[02:26:27] <geekosaur> forgot I'd only allowed access for v3.6
[02:28:10] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[02:28:44] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[02:28:55] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:29:00] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[02:36:17] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:36:53] *** Quits: cosimone (~user@93-47-231-147.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:39:48] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3)
[02:41:15] *** Joins: alx741 (~alx741@157.100.93.160)
[02:42:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:43:42] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[02:43:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3) (Ping timeout: 240 seconds)
[02:44:56] *** Quits: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Read error: Connection reset by peer)
[02:45:02] *** Joins: Morrow_ (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[02:46:16] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Quit: ZNC 1.8.2 - https://znc.in)
[02:46:26] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[02:46:35] *** Joins: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[02:49:13] *** Quits: Morrow_ (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 256 seconds)
[02:49:25] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 256 seconds)
[02:50:55] *** Quits: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 256 seconds)
[02:51:28] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Remote host closed the connection)
[02:51:31] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:54:43] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[02:55:30] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[02:55:43] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[02:59:49] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[03:00:19] *** Joins: alx741 (~alx741@157.100.93.160)
[03:00:38] <d34df00d> Is there a way to use ghc 9.2 with a stack-based project?
[03:01:06] <d34df00d> IIRC there is a repo with resolvers for newer ghc versions for which no official stackage resolvers were released, but I can't find that.
[03:01:08] *** Hash_ is now known as Hash
[03:01:21] *** Joins: son0p (~ff@181.136.122.143)
[03:01:33] *** Joins: AlexNoo_ (~AlexNoo@178.34.150.81)
[03:02:59] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[03:03:35] *** Quits: Alex_test (~al_test@94.233.241.14) (Ping timeout: 256 seconds)
[03:03:53] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[03:04:16] *** Quits: AlexZenon (~alzenon@94.233.241.14) (Ping timeout: 250 seconds)
[03:04:33] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[03:04:37] *** Quits: AlexNoo (~AlexNoo@94.233.241.14) (Ping timeout: 240 seconds)
[03:08:02] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[03:08:02] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[03:08:05] *** allbery_b is now known as geekosaur
[03:08:14] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:58a2:2ee7:7301:3a35) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:09:02] *** Joins: Alex_test (~al_test@178.34.150.81)
[03:09:09] *** Joins: AlexZenon (~alzenon@178.34.150.81)
[03:10:57] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[03:11:25] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[03:16:00] *** Joins: Guest|8 (~Guest|8@47.211.207.56)
[03:16:06] *** Quits: Guest|8 (~Guest|8@47.211.207.56) (Client Quit)
[03:17:44] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[03:18:38] *** Joins: Constraintegic (~thomasbul@2001:a61:1300:6601:cc3f:6a1f:a742:f56f)
[03:22:41] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[03:22:54] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[03:26:17] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[03:26:35] *** Quits: dudek (~dudek@185.150.236.105) (Read error: Connection reset by peer)
[03:30:17] *** Quits: vglfr (~vglfr@88.155.24.103) (Ping timeout: 240 seconds)
[03:30:59] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[03:31:53] *** Joins: vglfr (~vglfr@88.155.24.103)
[03:32:12] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Client Quit)
[03:35:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:36:02] *** Joins: alx741 (~alx741@157.100.93.160)
[03:38:46] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[03:44:02] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3)
[03:44:32] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 240 seconds)
[03:46:10] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[03:46:54] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:47:23] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[03:47:24] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[03:47:52] *** Joins: jespada (~jespada@87.74.36.188)
[03:47:52] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[03:48:15] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Client Quit)
[03:48:53] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[03:49:12] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:49:45] <d34df00d> Also, is there a way to use a -XCPP macro in an instance declaration?
[03:49:46] *** Quits: Constraintegic (~thomasbul@2001:a61:1300:6601:cc3f:6a1f:a742:f56f) (Ping timeout: 250 seconds)
[03:50:10] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Client Quit)
[03:50:16] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[03:50:32] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[03:50:35] <d34df00d> I have #if MIN_VERSION_GLASGOW_HASKELL(9,2,0,0) \n #define #define REP(older, newer) newer ..., and I'm trying to use it as `instance AsmArg Int8 'IntRep REP(Int#, Int8#) where â€¦`
[03:50:45] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:50:53] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[03:50:54] <d34df00d> This gives me `Not in scope: type constructor or class â€˜REPâ€™`
[03:51:20] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Client Quit)
[03:52:02] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[03:52:04] <int-e> d34df00d: there's nothing special about instances here; is the CPP language extension actually enabled?
[03:52:24] <d34df00d> int-e: yep.
[03:52:41] <d34df00d> And doing `type Foo = REP(Int#, Int8#)` works as expected.
[03:53:04] <geekosaur> are you on os x?
[03:53:46] <geekosaur> if so, use cpphs; os xs's cpp will have stopped parsing at the '
[03:53:48] <d34df00d> Nope.
[03:53:59] <geekosaur> (or otherwise using clang instead of gcc)
[03:54:03] <int-e> oh, the '
[03:54:12] <d34df00d> But that's a good advise, I probably need to support os x, thanks.
[03:54:32] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Client Quit)
[03:55:05] <geekosaur> hm, come to think of it I'm not sure gcc's cpp will do any better with that single quote
[03:55:41] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[03:55:47] <geekosaur> you might in any case see if cpphs works better
[03:55:52] *** Quits: simpleauthority (~simpleaut@user/simpleauthority) (Quit: ZNC 1.8.2 - https://znc.in)
[03:55:58] <int-e> you can maybe do silly things like {-'-}'
[03:56:22] <int-e> instead of just '
[03:56:25] <EvanR> {-'-}' looks like one of those escher drawings right now
[03:56:44] *** Joins: alx741 (~alx741@157.100.93.160)
[03:56:49] <d34df00d> I think I'll just conditionally define some type aliases.
[03:56:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:00:26] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[04:00:50] *** Quits: fr33domlover (~fr33@2.55.162.28) (Quit: fr33domlover)
[04:01:56] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[04:02:43] *** Joins: simpleauthority (~simpleaut@user/simpleauthority)
[04:02:48] *** Quits: CHUD (~CHUD@cpc142034-slou6-2-0-cust488.17-4.cable.virginm.net) (Remote host closed the connection)
[04:04:24] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[04:08:06] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:08:43] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Quit: Leaving.)
[04:09:07] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[04:09:18] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[04:09:28] *** Quits: Axman6 (~Axman6@user/axman6) (Remote host closed the connection)
[04:11:41] *** Joins: zebrag (~chris@user/zebrag)
[04:15:21] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:17:32] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[04:17:45] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[04:18:20] *** Joins: alx741 (~alx741@157.100.93.160)
[04:18:53] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[04:19:15] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[04:20:05] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:20:44] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[04:20:58] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:92cd:1cec:76b4:462b) (Ping timeout: 250 seconds)
[04:21:23] *** Joins: nitrix (~nitrix@user/nitrix)
[04:21:43] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:bacd:f4ac:13db:1a99)
[04:21:43] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[04:24:18] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[04:25:34] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[04:28:44] *** Joins: akurilin_ (uid322841@id-322841.ilkley.irccloud.com)
[04:30:58] *** Joins: lechner (~lechner@debian/lechner)
[04:31:50] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:32:47] *** Joins: califax (~califax@user/califx)
[04:32:56] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Remote host closed the connection)
[04:36:16] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:39:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:39:58] *** Joins: alx741 (~alx741@157.100.93.160)
[04:41:17] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[04:41:38] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:42:11] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[04:42:13] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[04:42:27] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[04:43:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[04:44:53] *** Joins: CHUD (~CHUD@cpc142034-slou6-2-0-cust488.17-4.cable.virginm.net)
[04:46:01] *** Quits: CHUD (~CHUD@cpc142034-slou6-2-0-cust488.17-4.cable.virginm.net) (Remote host closed the connection)
[04:47:00] *** Joins: CHUD (~CHUD@cpc142034-slou6-2-0-cust488.17-4.cable.virginm.net)
[04:47:23] *** Joins: wolftivystan (~wolftivys@31.6.41.128)
[04:47:45] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:48:06] *** Joins: Tomtesting (~Tomtestin@2600:1700:4012:180::40)
[04:48:29] <wolftivystan> hi yall
[04:49:13] *** Joins: benin (~benin@183.82.31.24)
[04:52:54] <EvanR> hi
[04:54:25] *** Joins: fryguybob (~fryguybob@cpe-74-67-169-145.rochester.res.rr.com)
[04:55:12] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:58:09] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 268 seconds)
[04:58:18] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[04:59:26] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:59:46] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[05:00:09] *** Quits: wolftivystan (~wolftivys@31.6.41.128) (Quit: Client closed)
[05:01:20] *** Joins: alx741 (~alx741@157.100.93.160)
[05:02:55] *** Quits: Tomtesting (~Tomtestin@2600:1700:4012:180::40) (Quit: Client closed)
[05:10:25] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[05:10:39] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[05:14:46] *** Joins: vysn (~vysn@user/vysn)
[05:15:24] *** Joins: Tomtesting (~Tomtestin@2600:1700:4012:180::40)
[05:15:40] *** Quits: Tomtesting (~Tomtestin@2600:1700:4012:180::40) (Client Quit)
[05:15:46] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[05:15:57] *** Quits: CHUD (~CHUD@cpc142034-slou6-2-0-cust488.17-4.cable.virginm.net) (Remote host closed the connection)
[05:23:32] *** Joins: tommd (~tommd@67-42-147-226.ptld.qwest.net)
[05:24:22] *** Joins: unyu (~pyon@user/pyon)
[05:27:28] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:31:27] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:31:27] *** Quits: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 268 seconds)
[05:32:03] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[05:32:30] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[05:33:18] *** Joins: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[05:35:37] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[05:35:52] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[05:39:13] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[05:41:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[05:44:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:46:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[05:47:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:54:55] *** Joins: justache (~justache@user/justache)
[05:55:11] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[05:55:17] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:bacd:f4ac:13db:1a99) (Ping timeout: 240 seconds)
[05:57:17] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[05:57:25] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:27a3:a6cb:e9bf:c60f)
[05:59:49] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[06:02:20] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Remote host closed the connection)
[06:02:34] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[06:03:13] *** Joins: Akiva (~Akiva@user/Akiva)
[06:04:12] *** Joins: cassaundra (~cassaundr@c-71-59-237-188.hsd1.or.comcast.net)
[06:05:00] *** cassaundra is now known as cynomys
[06:05:00] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Read error: Connection reset by peer)
[06:05:10] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[06:05:10] *** Quits: cynomys (~cassaundr@c-71-59-237-188.hsd1.or.comcast.net) (Client Quit)
[06:06:12] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[06:07:19] *** Joins: zaquest (~notzaques@5.130.79.72)
[06:08:57] *** Joins: cynomys (~cassaundr@c-71-59-237-188.hsd1.or.comcast.net)
[06:09:18] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:11:02] *** Quits: polyphem (~rod@2a02:810d:840:8754:b6f3:5141:3b3:83de) (Ping timeout: 240 seconds)
[06:13:19] *** Quits: cynomys (~cassaundr@c-71-59-237-188.hsd1.or.comcast.net) (Changing host)
[06:13:19] *** Joins: cynomys (~cassaundr@user/cynomys)
[06:13:23] *** Quits: cynomys (~cassaundr@user/cynomys) (Quit: leaving)
[06:15:19] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Remote host closed the connection)
[06:16:34] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:17:07] *** Joins: cynomys (~cassaundr@user/cynomys)
[06:18:15] *** Joins: polyphem (~rod@2a02:810d:840:8754:b6f3:5141:3b3:83de)
[06:26:15] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:27:48] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:68c5:7698:b1fb:66cc)
[06:27:56] *** Joins: califax- (~califax@user/califx)
[06:28:13] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[06:30:24] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:30:24] *** califax- is now known as califax
[06:31:23] *** Joins: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[06:34:07] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[06:34:16] *** Quits: Topsi (~Tobias@dyndsl-095-033-026-019.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[06:34:23] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[06:36:07] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Client Quit)
[06:36:26] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[06:38:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[06:39:03] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Client Quit)
[06:39:25] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[06:42:19] *** Quits: cynomys (~cassaundr@user/cynomys) (Quit: leaving)
[06:42:22] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:45:22] *** Quits: alx741 (~alx741@157.100.93.160) (Quit: alx741)
[06:45:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[06:45:55] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:46:21] *** Joins: cynomys (~cassaundr@user/cynomys)
[06:47:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:47:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:47:05] *** finn_elija is now known as FinnElija
[06:50:49] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:52:20] *** Joins: boxscape_ (~boxscape_@p4ff0b9d5.dip0.t-ipconnect.de)
[06:55:02] <boxscape_> hm so you can't use callbacks to Haskell in unsafe FFI calls, AFAIU. I wonder, is it possible to set up a Haskell thread that waits until it's woken up by a callback written in C that's passed to the FFI call instead? (Ideally without the haskell thread periodically having to poll a global pointer or something, since that would introduce a delay)
[06:57:14] <boxscape_> I suppose, worst-case scenario, you could set up a socket in haskell and in C and wait for a connection on the haskell side
[06:57:55] <boxscape_> (what I mean to say by that is that even the worst-case scenario seems alright)
[07:00:11] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[07:00:27] *** Quits: td_ (~td@94.134.91.124) (Ping timeout: 256 seconds)
[07:00:29] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[07:01:21] *** Joins: mbuf (~Shakthi@223.184.116.99)
[07:02:11] *** Joins: td_ (~td@94.134.91.105)
[07:02:23] <monochrom> That sounds like more coding and no less overhead than safe FFI.
[07:05:24] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[07:07:15] <boxscape_> monochrom trouble is, I'm not in control of that, because I'm using a library that provides Haskell bindingss
[07:07:34] *** Quits: cynomys (~cassaundr@user/cynomys) (Quit: Lost terminal)
[07:08:07] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[07:12:32] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:46] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:17:03] *** Joins: cynomys (~cynomys@user/cynomys)
[07:19:16] <EvanR> boxscape_,  in the words of Lt. Barclay from "The Nth Degree" TNG episode: "I need a better interface"
[07:19:45] <EvanR> (you should be barclay)
[07:25:00] <boxscape_> I'll probably shelve this for now, because what I'm trying to accomplish is mostly optional in the context of the application as a whole
[07:28:04] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[07:28:17] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[07:29:43] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 256 seconds)
[07:37:40] *** Joins: zebrag (~chris@user/zebrag)
[07:43:19] *** Quits: vglfr (~vglfr@88.155.24.103) (Ping timeout: 256 seconds)
[07:47:17] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 256 seconds)
[07:49:11] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 256 seconds)
[07:50:07] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[07:56:12] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 276 seconds)
[07:56:55] *** Quits: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[07:57:20] *** Joins: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[07:57:50] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[08:02:33] *** Joins: deadmarshal (~deadmarsh@95.38.228.242)
[08:17:55] *** Quits: deadmarshal (~deadmarsh@95.38.228.242) (Read error: Connection reset by peer)
[08:22:34] *** Joins: deadmarshal (~deadmarsh@95.38.228.242)
[08:24:15] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:26:14] *** Quits: xff0x (~xff0x@2001:1a81:5332:3500:27a3:a6cb:e9bf:c60f) (Ping timeout: 250 seconds)
[08:27:00] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:12ba:a184:ba98:5b9c)
[08:31:01] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[08:32:02] *** Joins: img (~img@user/img)
[08:43:17] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:43:50] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[08:45:14] *** Joins: img (~img@user/img)
[08:47:11] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[08:52:08] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[08:52:21] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[08:52:53] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[08:56:30] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[08:58:37] *** Joins: raym (~raym@user/raym)
[09:06:16] *** Joins: vglfr (~vglfr@88.155.24.103)
[09:08:59] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[09:09:12] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[09:15:30] *** Quits: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato) (Ping timeout: 276 seconds)
[09:19:06] *** Quits: xff0x (~xff0x@2001:1a81:5332:3500:12ba:a184:ba98:5b9c) (Ping timeout: 250 seconds)
[09:19:37] *** Joins: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[09:19:59] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:cae3:31:4918:e255)
[09:20:12] *** Joins: ksqsf (~user@2001:da8:d800:611:4ed:dff2:5312:7ded)
[09:20:41] *** Joins: Guest35 (~Guest35@mobile-user-c3a5cc-243.dhcp.inet.fi)
[09:21:16] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[09:21:37] *** Quits: Guest35 (~Guest35@mobile-user-c3a5cc-243.dhcp.inet.fi) (Client Quit)
[09:22:34] *** Quits: tommd (~tommd@67-42-147-226.ptld.qwest.net) (Ping timeout: 250 seconds)
[09:27:04] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:c16c:1790:8bf6:b4b5)
[09:29:15] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:31:37] *** Quits: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab) (Ping timeout: 240 seconds)
[09:31:50] <EvanR> cool https://www.seas.upenn.edu/~cis120/archive/16sp/hw/hw05/
[09:33:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[09:33:21] <ski> oh, OCaml
[09:34:32] <EvanR> your mission, if you choose to accept it, is to do this in haskell
[09:34:42] <EvanR> and reveal how the ****
[09:35:04] *** Quits: prasad (~user@c-73-170-49-136.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:35:32] <EvanR> I got close to this at one point using a cocoa front-end and IPC to the haskell program
[09:35:46] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[09:36:04] <energizer> that is too pixellated for me in 2022 
[09:37:12] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:37:24] <EvanR> good for pixel art xD
[09:37:34] <EvanR> anyway, ocaml has "a graphics module" and we do not
[09:38:49] <energizer> for gui i really enjoy reading https://raphlinus.github.io/
[09:38:52] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[09:39:05] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[09:39:22] <energizer> he's building a gui in rust
[09:39:40] <EvanR> vulkan omg
[09:44:48] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[09:46:09] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[09:48:04] <EvanR> suspicious of "the stack monoid" I had to click, then assured yes we're talking about monoids of the form (a -> a) where a = list
[09:52:56] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[09:56:02] *** Quits: xff0x (~xff0x@2001:1a81:5332:3500:cae3:31:4918:e255) (Ping timeout: 240 seconds)
[09:57:14] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:8d55:d8c4:1b30:723c)
[09:57:37] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[10:02:20] <EvanR> k that blog is a rabbit hole energizer 
[10:02:46] <energizer> iknowrite
[10:03:39] <energizer> those people hang in https://xi.zulipchat.com/
[10:24:18] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[10:27:57] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[10:32:17] *** Quits: deadmarshal (~deadmarsh@95.38.228.242) (Ping timeout: 240 seconds)
[10:35:22] *** Quits: ksqsf (~user@2001:da8:d800:611:4ed:dff2:5312:7ded) (Ping timeout: 250 seconds)
[10:44:40] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:51:51] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[10:52:17] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:53:13] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[10:53:26] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[10:54:20] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Client Quit)
[10:55:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[10:56:10] *** Quits: iteratee (~kyle@162.218.222.107) (Ping timeout: 250 seconds)
[11:00:03] *** Joins: iteratee (~kyle@162.218.222.107)
[11:01:57] *** Joins: ksqsf (~user@2001:da8:d800:611:4ed:dff2:5312:7ded)
[11:04:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:06:17] *** Quits: ksqsf (~user@2001:da8:d800:611:4ed:dff2:5312:7ded) (Ping timeout: 240 seconds)
[11:09:16] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[11:10:03] *** Quits: foul_owl (~kerry@94.140.8.106) (Ping timeout: 250 seconds)
[11:10:33] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[11:11:31] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[11:14:07] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:17:51] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:17:53] *** Joins: ksqsf (~user@2001:da8:d800:611:4ed:dff2:5312:7ded)
[11:19:02] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:19:10] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:22:57] *** Quits: ksqsf (~user@2001:da8:d800:611:4ed:dff2:5312:7ded) (Ping timeout: 268 seconds)
[11:25:07] *** Joins: foul_owl (~kerry@174-21-143-101.tukw.qwest.net)
[11:26:57] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:30:28] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[11:30:51] *** Joins: max22- (~maxime@2a01cb0883359800bdabf9fff345f0d6.ipv6.abo.wanadoo.fr)
[11:34:26] *** Joins: ksqsf (~user@2001:da8:d800:611:4ed:dff2:5312:7ded)
[11:35:34] *** Quits: boxscape_ (~boxscape_@p4ff0b9d5.dip0.t-ipconnect.de) (Quit: Connection closed)
[11:37:28] *** Joins: deadmarshal (~deadmarsh@95.38.228.242)
[11:39:04] *** Quits: ksqsf (~user@2001:da8:d800:611:4ed:dff2:5312:7ded) (Ping timeout: 250 seconds)
[11:39:43] *** Joins: ardell (~ardell@user/ardell)
[11:42:57] *** Joins: ksqsf (~user@2001:da8:d800:611:7dfb:bd19:a073:ff4e)
[11:43:29] *** Quits: ardell (~ardell@user/ardell) (Client Quit)
[11:47:44] *** Quits: ksqsf (~user@2001:da8:d800:611:7dfb:bd19:a073:ff4e) (Ping timeout: 250 seconds)
[11:49:52] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:50:30] *** Joins: mmhat (~mmh@55d48476.access.ecotel.net)
[11:50:35] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[11:51:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[11:54:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 250 seconds)
[11:58:33] *** Joins: ksqsf (~user@222.195.66.54)
[12:01:21] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Ping timeout: 257 seconds)
[12:02:57] *** Quits: ksqsf (~user@222.195.66.54) (Ping timeout: 240 seconds)
[12:11:58] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[12:12:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[12:15:08] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[12:15:31] *** Joins: ksqsf (~user@222.195.66.54)
[12:18:21] *** Quits: ksqsf (~user@222.195.66.54) (Remote host closed the connection)
[12:18:41] *** Joins: ksqsf (~user@222.195.66.54)
[12:19:52] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[12:23:17] *** Quits: ksqsf (~user@222.195.66.54) (Ping timeout: 240 seconds)
[12:24:58] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[12:26:30] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[12:30:34] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:31:43] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Remote host closed the connection)
[12:33:17] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:68c5:7698:b1fb:66cc) (Ping timeout: 240 seconds)
[12:36:56] *** Joins: Constraintegic (~thomasbul@2001:a61:1307:2b01:b1e2:16ab:18b4:8efc)
[12:38:02] *** Joins: _ht (~quassel@82-168-34-160.fixed.kpn.net)
[12:39:34] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[12:39:41] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3) (Remote host closed the connection)
[12:41:16] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[12:46:02] *** Joins: califax- (~califax@user/califx)
[12:47:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[12:47:24] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[12:47:24] *** califax- is now known as califax
[12:47:43] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[12:51:24] *** Joins: ksqsf (~user@2001:da8:d800:611:e57c:4d5c:cbc6:ba78)
[12:53:26] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[12:55:14] *** Joins: klf (~klf@66.220.205.98)
[12:56:02] *** Quits: ksqsf (~user@2001:da8:d800:611:e57c:4d5c:cbc6:ba78) (Ping timeout: 240 seconds)
[12:56:18] <klf> need a refresher.
[12:56:18] <klf> foldr f 4 (1:2:3:[])
[12:57:35] <klf> What is the order of operation here?  Does the concatenation occur  before everything else?
[12:57:35] <polyphem> klf: == (1 `f` 2 `f` 3 `f` 4)
[12:58:57] <polyphem> klf: == (1 `f` (2 `f` (3 `f` (4))))
[13:00:04] <xsperry> > foldr f z [a,b,c]
[13:00:07] <lambdabot>  f a (f b (f c z))
[13:00:40] <xsperry> > foldr f z [1,2,3]
[13:00:42] <lambdabot>  f 1 (f 2 (f 3 z))
[13:00:44] <xsperry> > foldl f z [1,2,3]
[13:00:46] <lambdabot>  f (f (f z 1) 2) 3
[13:00:57] *** Quits: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 240 seconds)
[13:03:02] <klf> thank you
[13:07:06] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[13:07:21] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[13:11:22] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Ping timeout: 250 seconds)
[13:21:30] *** Joins: ksqsf (~user@2001:da8:d800:611:39cc:7ba1:9b3b:186e)
[13:21:38] *** Joins: svi (~svi@2a01:e0a:3cc:4590:e6e2:2da1:f754:c5d8)
[13:21:45] <svi> hello
[13:21:59] <svi> I just started mingling with type families
[13:22:17] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[13:23:38] <svi> I have this class : https://pastebin.com/RDX7Ld6E
[13:24:25] <svi> but whenever i try to write instances i get "couldnt match type InstancedType with Frozen InstancedType"
[13:24:27] <svi> ie
[13:27:22] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:27:49] <svi> https://pastebin.com/WByGz6RA
[13:27:59] <svi> god lol this is the worst syntax highlighting sorry
[13:28:28] <svi> but yeah I feel like there is something I haven't gotten at all about type families, is the inner type supposed to not be exposed at all ?
[13:28:45] <[exa]> svi: there's a friendly pastebin in topic but worry not
[13:29:27] <svi> woo thanks
[13:29:27] <[exa]> the inner type may be exposed; check out e.g. what the type-family-based transformers do
[13:31:20] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:25:3430:6d5f:c01)
[13:31:49] <[exa]> svi: if I replace `data` by `type` there, it seems to start working
[13:32:08] <[exa]> (on a very reduced example)
[13:32:56] <svi> it works !
[13:34:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[13:34:29] <[exa]> the underlying problem is that in the previous case the typesystem has no way to see the equality of `Frozen x ~ x` because it can't just "evaluate" the type synonym, but it technically _should_ work with data, except I have no idea how to
[13:35:35] <klf> what is an usual way to execute putStrLn "hello world!" 10 times?
[13:36:06] <[exa]> :t replicateM_
[13:36:06] <polyphem> > :t replicateM
[13:36:07] <lambdabot> Applicative m => Int -> m a -> m ()
[13:36:08] <lambdabot>  <hint>:1:1: error: parse error on input â€˜:â€™
[13:36:24] <[exa]> klf: replicateM_ 10 $ whateverMonadAction
[13:37:50] <[exa]> if you're new to monads, a less confusing intermediate step would be something like `mapM (\_ -> putStrLn "hello") [1..10]`
[13:40:04] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3)
[13:40:15] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:40:36] <klf> what is \_ ?
[13:41:09] <[exa]> klf: a lambda with discarded value name
[13:41:18] <klf> yea... that's what I thought.
[13:41:27] <[exa]> :]
[13:42:53] <[exa]> svi: anyway, with `data` families you need to provide actual data constructors there in `data`
[13:44:04] <[exa]> svi: this kinda compiles here: https://paste.tomsmeding.com/Ufg4pnIi   (I omitted the From/To JSON from the context tho)
[13:44:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3) (Ping timeout: 240 seconds)
[13:47:42] <svi> ohhh I see ty ty
[13:48:08] <svi> that is helpful, actually. you can derive inside the instance
[13:48:50] <[exa]> yeah that actually saves you there, otherwise you couldn't use `data` because the instance would miss half of the prerequisities
[13:50:27] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:51:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:54:14] <ephemient> you can think of it as sequence_ [putStrLn "hello" | _ <- [1..10]] == sequence_ (replicate 10 (putStrLn "hello")) == replicateM_ 10 (putStrLn "hello"), or as == sequence_ (map (const (putStrLn "hello")) [1..10]) == mapM_ (const (putStrLn "hello")) [1..10], but either wayâ€¦
[13:58:54] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[14:01:54] *** Quits: svi (~svi@2a01:e0a:3cc:4590:e6e2:2da1:f754:c5d8) (Quit: Client closed)
[14:03:29] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[14:03:30] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[14:05:20] *** Joins: img (~img@user/img)
[14:06:49] <klf> By putting '_' at the end of a function name suppresses the value of the function from being returned, right?
[14:07:03] <klf> e.g. replicateM_
[14:07:28] <Rembane> klf: It's a convention in some places. 
[14:07:38] <kitzman> hmm... 90% chance I don't know how to look for this - is there a way to display the data constructor of the type? i.e: X = A | B, typeOf shows X, typeRepTyCon shows X as well
[14:07:56] *** Joins: Cheery (~cheery@7-239-179-185.static.tentacle.fi)
[14:09:30] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[14:09:59] *** Quits: vglfr (~vglfr@88.155.24.103) (Ping timeout: 256 seconds)
[14:10:01] <Rembane> klf: Look at the type signature to get more reliable data of if the function evaluates to something more exciting than unit. 
[14:12:01] <ephemient> sequence_ and mapM_ can more efficient than sequence and mapM, but the other reason to use them is to avoid -Wunused-do-bind :)
[14:13:17] <ephemient> actually seems that mapM/mapM_ is the example used in https://downloads.haskell.org/ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wunused-do-bind
[14:15:34] *** Joins: fendor (~fendor@91.141.78.76.wireless.dyn.drei.com)
[14:16:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:16:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:17:49] *** Lord_of_Life_ is now known as Lord_of_Life
[14:21:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:26:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[14:27:25] <ephemient> kitzman: something along these lines? https://stackoverflow.com/a/48179707
[14:27:42] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[14:27:56] *** Joins: califax (~califax@user/califx)
[14:30:53] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[14:31:05] *** Joins: alx741 (~alx741@157.100.93.160)
[14:31:14] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[14:32:20] *** Quits: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato) (Remote host closed the connection)
[14:32:28] *** Joins: HotblackDesiato_ (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[14:33:48] *** Joins: vglfr (~vglfr@88.155.24.103)
[14:35:37] <klf> >  sequence_ [putStrLn i | i <- [1..10]
[14:35:39] <lambdabot>  <hint>:1:37: error:
[14:35:39] <lambdabot>      parse error (possibly incorrect indentation or mismatched brackets)
[14:35:58] <klf> >  sequence_ [putStrLn i | i <- [1..10]]
[14:35:59] <lambdabot>  error:
[14:35:59] <lambdabot>      â€¢ No instance for (Enum String)
[14:35:59] <lambdabot>          arising from the arithmetic sequence â€˜1 .. 10â€™
[14:36:11] <ephemient> > sequence_ [print i | i <- [1..10]]
[14:36:12] <lambdabot>  <IO ()>
[14:36:26] <ephemient> mapM_ print [1..10]
[14:36:39] <ephemient> (lambdabot won't do IO)
[14:37:09] <klf> can you point out what I did wrong here: ' sequence_ [putStrLn i | i <- [1..10]]'
[14:37:13] <geekosaur> % sequence_ [print i | i <- [1..10]]
[14:37:13] <yahb> geekosaur: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10
[14:37:27] <geekosaur> klf, a number is not a string
[14:37:31] <ephemient> klf: putStrLn :: String -> IO (), i is not a String
[14:37:40] <geekosaur> putStrLn, as its name suggests, prints Strings
[14:38:25] <klf> I see.
[14:39:10] <geekosaur> % sequence_ [putStrLn (show i) | i <- [1..10]]
[14:39:11] <yahb> geekosaur: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10
[14:39:20] <geekosaur> which is the same as `print i`
[14:39:26] <geekosaur> :t print
[14:39:26] <lambdabot> Show a => a -> IO ()
[14:41:40] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:554b:fd6:4afe:d593)
[14:42:28] <klf> re: "lambda won't do IO", which is in reference to '>' 
[14:42:41] <klf> Who is '%"?
[14:42:47] <klf> he is more cooperative.
[14:43:21] <geekosaur> yahb does IO, but is sandboxed. it's also actual ghci instead of mueval
[14:43:26] <ephemient> yahb is yet another haskell bot
[14:43:37] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:43:45] <geekosaur> % :!ls
[14:43:45] <yahb> geekosaur: Eval; Eval.hi; Eval.hs; Eval.o; Eval.prof; Example; Example.hi; Example.hs; Example.o; Foo.hi; Foo.hs; Foo.o; Mod.hi; Mod.hs; Mod.o; Print; Print.hi; Print.hs; Print.o; Print.prof; a.out; example.txt; file; file.sh; file.txt; goobytest; hello; test; test.txt; tmp; x
[14:44:03] <geekosaur> o.O
[14:44:56] <klf> okay.
[14:45:34] <geekosaur> oh, also if you expect a lot of output you can use %% instead of % and the output will be put in a pastebin
[14:46:05] <geekosaur> (useful for things like :info)
[14:46:33] <stilgart_> wow, that's good to know
[14:53:12] *** Quits: polyphem (~rod@2a02:810d:840:8754:b6f3:5141:3b3:83de) (Ping timeout: 250 seconds)
[14:53:57] *** Joins: polyphem (~rod@2a02:810d:840:8754:224e:f6ff:fe5e:bc17)
[14:56:08] *** Joins: fef (~thedawn@user/thedawn)
[14:57:12] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[14:59:57] *** Quits: polyphem (~rod@2a02:810d:840:8754:224e:f6ff:fe5e:bc17) (Ping timeout: 240 seconds)
[15:01:17] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[15:01:57] *** Quits: mbuf (~Shakthi@223.184.116.99) (Quit: Leaving)
[15:04:12] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:04:32] *** Joins: polyphem (~rod@2a02:810d:840:8754:8362:a27b:a8a2:5eea)
[15:11:45] *** Joins: Vajb (~Vajb@2001:999:50:e6be:1e98:9376:d93e:4506)
[15:16:37] *** Quits: polyphem (~rod@2a02:810d:840:8754:8362:a27b:a8a2:5eea) (Ping timeout: 240 seconds)
[15:17:46] *** Joins: polyphem (~rod@2a02:810d:840:8754:f8cc:a01b:29d5:d0e1)
[15:19:50] *** Joins: python476 (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[15:27:18] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[15:28:30] <kitzman> ephemient: yes, thank you. i'll look into how that works.
[15:29:36] *** Parts: python476 (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[15:29:58] <int-e> % readFile "goobytest"
[15:29:58] <yahb> int-e: "Test1\nTest2\nTest3\n"
[15:34:22] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[15:35:44] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:38:23] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 256 seconds)
[15:43:50] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[15:47:16] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[15:47:26] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[15:48:10] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[15:48:57] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[15:51:19] *** Quits: tomjaguarpaw (~tom@li367-225.members.linode.com) (Quit: leaving)
[15:53:43] *** Joins: __monty__ (~toonn@user/toonn)
[15:54:32] *** Quits: ksqsf (~user@2001:da8:d800:611:39cc:7ba1:9b3b:186e) (Ping timeout: 240 seconds)
[15:57:50] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:00:21] <ephemient> kitzman: https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/exts/generics.html https://wiki.haskell.org/GHC.Generics https://hackage.haskell.org/package/base/docs/GHC-Generics.html they're kinda denseâ€¦ but basically Generic/Generic1 lets you work with the representation of a data type
[16:01:25] *** Quits: _ht (~quassel@82-168-34-160.fixed.kpn.net) (Ping timeout: 256 seconds)
[16:01:49] *** Joins: _ht (~quassel@37.120.218.148)
[16:02:00] *** Quits: fendor (~fendor@91.141.78.76.wireless.dyn.drei.com) (Remote host closed the connection)
[16:04:38] *** Joins: ksqsf (~user@2001:da8:d800:611:9c6a:d03:2f58:45c)
[16:05:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:07:57] <jackdk> https://www.youtube.com/watch?v=yiT3fAA-BDo is a good introduction
[16:08:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:08:54] *** Joins: gensyst (gensyst@user/gensyst)
[16:09:57] <gensyst> Why was System.IO.openFile and Handle not made to automatically hClose the Handle upon the garbage collection of Handle?
[16:10:02] *** Quits: ksqsf (~user@2001:da8:d800:611:9c6a:d03:2f58:45c) (Ping timeout: 240 seconds)
[16:10:02] <gensyst> Just out of curiosity.
[16:10:46] <gensyst> I see no harm in it and only benefits. (However we still of course would have hClose if we really want to do it as early as possible.)
[16:12:04] <gensyst> (well, there is one downside: overhead of registering the GC cleanup action)
[16:12:35] *** Joins: ksqsf (~user@2001:da8:d800:611:c8a:43ed:910:2896)
[16:13:33] *** AlexNoo_ is now known as AlexNoo
[16:15:26] <maerwald> gensyst: I believe there was a similar discussion in libraries list once
[16:16:32] <ephemient> there is `withFile` that will close the file descriptor at the end of the given action
[16:18:43] <gensyst> ephemient, sure
[16:18:50] <maerwald> gensyst: afair some people said using GC hooks in general is an anti-pattern
[16:19:34] <ksqsf> imo gc is not deterministic enough for such scarce resources
[16:19:46] <maerwald> however, streamly does use GC hooks that way
[16:19:57] <gensyst> ksqsf, i agree actually. sometimes it happens way too late and unpredictably.
[16:20:10] <gensyst> (s/it happens/it would happen)
[16:20:24] <gensyst> maerwald, yeah exactly.
[16:20:48] *** Joins: briandaed (~root@185.234.208.208.r.toneticgroup.pl)
[16:20:51] <maerwald> well, I think because the only alternative solutions would be linear types
[16:21:14] *** Joins: Axman6 (~Axman6@user/axman6)
[16:22:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:23:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[16:23:52] *** Joins: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374)
[16:24:21] <gensyst> maerwald, i feel like Haskell/streamly is the way man was supposed to write programs
[16:24:25] <gensyst> it's heaven
[16:24:31] <ephemient> I think it could be useful to log a warning about leaked resources from the GC finalizer, similar to android's CloseGuard, but yeah. having actual program behavior depend on GC feels questionable to me
[16:24:40] <maerwald> I use streamly, but the performance is VERY unpredictable
[16:24:58] <maerwald> it can go from outperforming bytestring to being slower than conduit
[16:25:32] <maerwald> requires a lot of knowledge about streamly itself and inlining 
[16:25:55] <maerwald> while with something like conduit you get ok performance and that rather consistently
[16:26:16] <gensyst> maerwald, have you found any good tricks to find where bottlenecks appear? (if they are due to streamly or not). i wonder if it could be useful to learn how to read core lang to check if it got inlined into a tight loop
[16:26:28] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[16:27:46] <maerwald> there are no general tricks other than https://github.com/composewell/streamly/blob/master/docs/optimizing.md
[16:27:54] <maerwald> and that's usually not enough
[16:28:15] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[16:28:17] <maerwald> you have to know which parts of the API perform better in cetrain circumstances etc
[16:28:41] <maerwald> that kind of makes it dangerous to refactor your code
[16:29:08] <maerwald> (as well as bumping GHC versions, because the inliner is not stable)
[16:29:09] <gensyst> so one has got to profile all the time :)
[16:30:30] <maerwald> I'd probably pick streamly for things, simply because I enjoy tinkering. But I'm not sure that's a good choice for a large codebase lots of people with different levels of performance-optimizing skills work on
[16:31:13] <gensyst> perhaps profiling/timing ought to be part of a good CI
[16:31:45] <maerwald> well, CI failing because of perfomance issues is another round-trip time slowing down development 
[16:31:54] *** Quits: max22- (~maxime@2a01cb0883359800bdabf9fff345f0d6.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[16:32:16] <maerwald> depends on cost-benefit
[16:32:44] <maerwald> probably most people don't care and don't need to. That's why conduit is still the most popular streaming library
[16:32:55] <maerwald> although it's definitely not the most performant
[16:33:10] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[16:33:29] <gensyst> maerwald, could this be because a program's bottleneck is usually not the conduit vs. streamly performance difference?
[16:33:41] <gensyst> so even if they would have used streamly, it would not have made any perf diff
[16:34:10] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:34:30] *** Quits: beepsort (~beepsort@31.205.108.155) (Quit: client terminated!)
[16:35:09] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[16:35:22] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[16:37:17] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[16:38:26] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Remote host closed the connection)
[16:38:42] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[16:40:25] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:3c42:1d7a:5c49:19d9)
[16:43:42] *** Quits: Constraintegic (~thomasbul@2001:a61:1307:2b01:b1e2:16ab:18b4:8efc) (Ping timeout: 250 seconds)
[16:45:34] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[16:45:47] *** Joins: shapr (~user@c-68-35-49-128.hsd1.al.comcast.net)
[16:50:02] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 240 seconds)
[16:51:38] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[16:52:00] <maerwald[m]> gensyst: depends. I mean the reason we have tricks like bytestring, lazy IO or use C ffi for eg yaml parsing is exactly because we don't have a native haskell streaming solution that can deliver all that. streamly could, but it has a long way to go
[16:53:31] *** Joins: shapr` (~user@2601:7c0:c37c:46d0:edc9:85cc:b84c:4613)
[16:54:10] *** Joins: goodtimeswithtom (~goodtimes@2600:1700:4012:180::40)
[16:55:15] *** Quits: shapr (~user@c-68-35-49-128.hsd1.al.comcast.net) (Ping timeout: 256 seconds)
[16:56:22] *** Joins: notzmv (~zmv@user/notzmv)
[16:58:20] *** Quits: kmein (~weechat@user/kmein) (Quit: ciao kakao)
[16:58:41] *** Joins: kmein (~weechat@user/kmein)
[16:58:59] *** Quits: goodtimeswithtom (~goodtimes@2600:1700:4012:180::40) (Client Quit)
[16:59:20] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[16:59:25] *** Quits: deadmarshal (~deadmarsh@95.38.228.242) (Ping timeout: 256 seconds)
[17:01:20] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:02:28] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[17:10:00] *** Quits: raym (~raym@user/raym) (Remote host closed the connection)
[17:13:21] *** Joins: vysn (~vysn@user/vysn)
[17:16:44] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[17:16:44] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[17:16:47] *** allbery_b is now known as geekosaur
[17:16:52] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[17:19:24] *** Joins: raym (~raym@user/raym)
[17:20:01] *** Quits: shapr` (~user@2601:7c0:c37c:46d0:edc9:85cc:b84c:4613) (Remote host closed the connection)
[17:21:02] *** Parts: SquidDev (~SquidDev@autoclave.squiddev.cc) (Bye!)
[17:21:19] *** Quits: mvk (~mvk@173.33.176.132) (Ping timeout: 256 seconds)
[17:24:02] *** Quits: klf (~klf@66.220.205.98) (Quit: Leaving)
[17:26:41] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:31:46] *** Joins: shapr (~user@2601:7c0:c37c:46d0:edc9:85cc:b84c:4613)
[17:32:09] *** Joins: FragByte_ (~christian@user/fragbyte)
[17:35:00] <ldlework> gentauro: hey did you ever figure out how to get libssl working on that app you were stuck on with Nix?
[17:35:02] *** Quits: FragByte (~christian@user/fragbyte) (Ping timeout: 240 seconds)
[17:35:02] *** FragByte_ is now known as FragByte
[17:35:25] <ldlework> 21:16 <gentauro> I still get the "No usable version of libssl was found"
[17:35:26] <ldlework> 21:16 <gentauro> :(
[17:35:29] <ldlework> last march >_>'
[17:37:17] *** Quits: ksqsf (~user@2001:da8:d800:611:c8a:43ed:910:2896) (Ping timeout: 240 seconds)
[17:39:13] *** Joins: lispy (~lispy3@84.69.59.93)
[17:39:50] *** Quits: lispy (~lispy3@84.69.59.93) (Remote host closed the connection)
[17:40:24] *** Joins: deadmarshal (~deadmarsh@95.38.228.242)
[17:41:06] *** Joins: machinedgod (~machinedg@24.105.81.50)
[17:41:17] *** Quits: shapr (~user@2601:7c0:c37c:46d0:edc9:85cc:b84c:4613) (Ping timeout: 240 seconds)
[17:41:30] *** Joins: shapr`` (~user@2601:7c0:c37c:46d0:edc9:85cc:b84c:4613)
[17:41:50] *** Joins: lispy (~lispy3@84.69.59.93)
[17:42:12] *** Joins: max22- (~maxime@2a01cb08833598005b5f19f76fc72686.ipv6.abo.wanadoo.fr)
[17:43:42] *** Joins: Pickchea (~private@user/pickchea)
[17:46:06] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Ping timeout: 250 seconds)
[17:49:17] *** Quits: shapr`` (~user@2601:7c0:c37c:46d0:edc9:85cc:b84c:4613) (Ping timeout: 240 seconds)
[17:49:30] *** Joins: shapr```` (~user@2601:7c0:c37c:46d0:edc9:85cc:b84c:4613)
[17:49:34] *** Quits: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[17:50:09] *** Joins: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374)
[17:52:14] *** Quits: lispy (~lispy3@84.69.59.93) (Remote host closed the connection)
[17:52:30] *** Joins: lispy (~lispy3@84.69.59.93)
[17:55:17] *** Quits: shapr```` (~user@2601:7c0:c37c:46d0:edc9:85cc:b84c:4613) (Ping timeout: 240 seconds)
[17:55:30] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[17:57:03] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[17:57:35] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 256 seconds)
[18:00:07] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Remote host closed the connection)
[18:00:23] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[18:01:29] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[18:01:44] *** Joins: ksqsf (~user@2001:da8:d800:611:8107:9924:1608:4322)
[18:02:51] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[18:03:25] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:03:37] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[18:04:08] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[18:04:09] *** Joins: alp (~alp@user/alp)
[18:06:02] *** Quits: ksqsf (~user@2001:da8:d800:611:8107:9924:1608:4322) (Ping timeout: 250 seconds)
[18:07:32] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Remote host closed the connection)
[18:08:17] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[18:11:37] *** Quits: deadmarshal (~deadmarsh@95.38.228.242) (Ping timeout: 240 seconds)
[18:16:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[18:18:21] *** Joins: ksqsf (~user@222.195.66.54)
[18:19:38] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[18:22:43] *** Quits: ksqsf (~user@222.195.66.54) (Ping timeout: 256 seconds)
[18:28:17] *** Joins: jakalx (~jakalx@base.jakalx.net)
[18:29:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[18:29:50] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[18:32:04] *** Joins: alp (~alp@user/alp)
[18:32:33] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[18:34:52] *** Quits: gensyst (gensyst@user/gensyst) (Quit: Leaving)
[18:35:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[18:38:05] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[18:38:33] *** Quits: raym (~raym@user/raym) (Quit: leaving)
[18:41:08] *** Quits: _ht (~quassel@37.120.218.148) (Ping timeout: 250 seconds)
[18:41:32] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Quit: WeeChat 2.8)
[18:41:33] *** Joins: _ht (~quassel@2a02:a468:b619:1:7ee4:4b51:626d:e55)
[18:42:24] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[18:43:46] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[18:44:12] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:45:00] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3)
[18:45:28] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:49:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3) (Ping timeout: 240 seconds)
[18:49:22] *** Joins: tavares (~tavares@user/tavares)
[18:50:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:51:27] *** Joins: raym (~raym@user/raym)
[18:53:59] *** Joins: ksqsf (~user@2001:da8:d800:611:89fb:49eb:d2b2:f4b1)
[18:55:12] *** Joins: fef (~thedawn@user/thedawn)
[19:02:32] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:11:41] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[19:11:57] *** Quits: rembo10 (~rembo10@remulis.com) (Quit: ZNC 1.8.2 - https://znc.in)
[19:12:50] *** Joins: rembo10 (~rembo10@remulis.com)
[19:14:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:14:44] *** Joins: rusty (~rustyboy@2a02:2f0e:6209:3600:b8f6:c621:17f1:c195)
[19:17:27] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[19:17:33] *** Joins: cheater (~Username@user/cheater)
[19:19:42] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[19:21:36] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[19:22:37] *** Joins: mmohammadi9812 (~Mohammad@2.178.202.163)
[19:23:20] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[19:23:34] *** Joins: shapr (~user@2601:7c0:c37c:46d0:bf33:7711:bc65:c365)
[19:23:37] *** Quits: ksqsf (~user@2001:da8:d800:611:89fb:49eb:d2b2:f4b1) (Ping timeout: 240 seconds)
[19:25:47] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:27:10] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[19:30:51] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:31:03] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[19:31:19] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[19:33:33] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Ping timeout: 256 seconds)
[19:37:46] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:37:46] *** Quits: Vajb (~Vajb@2001:999:50:e6be:1e98:9376:d93e:4506) (Read error: Connection reset by peer)
[19:38:56] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[19:40:43] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[19:40:48] *** Joins: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977)
[19:44:34] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf)
[19:46:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:47:17] *** Joins: ksqsf (~user@2001:da8:d800:611:89fb:49eb:d2b2:f4b1)
[19:49:48] *** Quits: EvanR (~EvanR@user/evanr) (Remote host closed the connection)
[19:51:34] *** Joins: EvanR (~EvanR@user/evanr)
[19:51:36] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Quit: WeeChat 2.2-dev)
[19:52:02] *** Quits: ksqsf (~user@2001:da8:d800:611:89fb:49eb:d2b2:f4b1) (Ping timeout: 240 seconds)
[19:52:15] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[19:52:34] *** Quits: iteratee (~kyle@162.218.222.107) (Remote host closed the connection)
[19:52:44] *** Joins: iteratee (~kyle@162.218.222.107)
[19:52:57] *** Joins: ksqsf (~user@2001:da8:d800:611:95f9:c68e:df5d:9a46)
[19:53:52] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[19:55:01] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3)
[19:55:11] *** Quits: nattiestnate (~nate@2001:448a:20a0:2d74:df0e:2d0:816:6977) (Quit: WeeChat 3.4)
[19:56:37] *** Quits: shapr (~user@2601:7c0:c37c:46d0:bf33:7711:bc65:c365) (Ping timeout: 240 seconds)
[19:57:24] *** Quits: ksqsf (~user@2001:da8:d800:611:95f9:c68e:df5d:9a46) (Ping timeout: 250 seconds)
[19:58:28] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:59:06] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:c16c:1790:8bf6:b4b5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:03:59] *** Quits: whatif (~user@123.123.223.41) (Quit: ERC (IRC client for Emacs 26.3))
[20:05:48] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3) (Remote host closed the connection)
[20:06:52] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[20:07:20] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[20:08:01] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[20:09:03] *** Joins: ksqsf (~user@2001:da8:d800:611:69cf:4a16:9a7:fdb)
[20:09:29] *** Joins: razetime (~quassel@49.207.209.26)
[20:10:01] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[20:11:14] *** Quits: rusty (~rustyboy@2a02:2f0e:6209:3600:b8f6:c621:17f1:c195) (Quit: Leaving)
[20:11:57] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Ping timeout: 240 seconds)
[20:12:26] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3)
[20:13:32] *** Quits: ksqsf (~user@2001:da8:d800:611:69cf:4a16:9a7:fdb) (Ping timeout: 240 seconds)
[20:13:55] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[20:14:36] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[20:16:15] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[20:19:32] *** Quits: tavares (~tavares@user/tavares) (Ping timeout: 240 seconds)
[20:24:48] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[20:24:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:24:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:24:50] *** Joins: wroathe (~wroathe@user/wroathe)
[20:26:04] *** Joins: ksqsf (~user@2001:da8:d800:611:b95c:c03a:1129:794a)
[20:26:21] <__monty__> Is there a way to specify a dependency on non-Haskell executables in a cabal file.
[20:27:47] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[20:27:53] *** Joins: gehmehgeh_ (~user@user/gehmehgeh)
[20:31:38] *** Quits: ksqsf (~user@2001:da8:d800:611:b95c:c03a:1129:794a) (Ping timeout: 250 seconds)
[20:31:54] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:31:58] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:33:57] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf) (Ping timeout: 240 seconds)
[20:34:03] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:34:57] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[20:35:27] *** Quits: briandaed (~root@185.234.208.208.r.toneticgroup.pl) (Remote host closed the connection)
[20:36:07] <maerwald> with a custom Setup.hs you can
[20:36:14] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[20:38:29] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf)
[20:38:38] <Hecate> __monty__: what do you need to be done with this dependency?
[20:38:41] <Hecate> like, ensure it's present?
[20:38:44] <Hecate> build it?
[20:39:21] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[20:39:48] *** Quits: razetime (~quassel@49.207.209.26) (Ping timeout: 268 seconds)
[20:40:01] <[itchyjunk]> I would like to write a partial function. :x
[20:40:02] <[itchyjunk]> https://bpa.st/TA5A
[20:40:04] *** Joins: Constraintegic (~thomasbul@2001:a61:1307:2b01:758:22d1:74ab:3b31)
[20:40:08] <[itchyjunk]> But I feel all sorts of confused.
[20:40:54] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf) (Read error: Connection reset by peer)
[20:41:09] <EvanR> the type should make you feel uncomfortable
[20:41:28] <EvanR> partial functions aren't great when they can easily be avoided
[20:41:47] <[itchyjunk]> How can they be avoided when they are the goal? :x
[20:41:48] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf)
[20:42:06] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[20:42:07] <EvanR> your goal is to write any partial function?
[20:42:42] <monochrom> I thought you solved this one last time. Use pattern matching.
[20:42:54] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Ping timeout: 250 seconds)
[20:43:15] <[itchyjunk]> No, I filed it under `learn more pattern matching to solve this`.
[20:43:27] <monochrom> OK, learn "case-of".
[20:43:28] *** Joins: ksqsf (~user@2001:da8:d800:611:7d7c:8716:8858:5abe)
[20:43:43] *** Joins: zebrag (~chris@user/zebrag)
[20:43:52] <[itchyjunk]> Oh, i thought i could use case or use pattern matching :x maybe i misunderstood.
[20:43:58] * [itchyjunk] looks up case-of
[20:44:02] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[20:45:48] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:46:57] *** Quits: mmohammadi9812 (~Mohammad@2.178.202.163) (Ping timeout: 240 seconds)
[20:47:46] <dsal> :t (fromJust .)  -- [itchyjunk] 
[20:47:47] <lambdabot> (a -> Maybe c) -> a -> c
[20:48:06] *** Quits: ksqsf (~user@2001:da8:d800:611:7d7c:8716:8858:5abe) (Ping timeout: 250 seconds)
[20:49:14] <dsal> Though avoiding partial functions is better.
[20:49:41] <[itchyjunk]> I was just curious about them. :D
[20:52:29] <__monty__> Hecate: Just declare it's necessary at run-time really.
[20:53:46] <dsal> [itchyjunk]: `f True = 3` -- that's a simpler partial function.  :)
[20:54:53] <hpc> f = undefined -- also technically a partial function :D
[20:56:45] <dsal> Oh yeah, and that one has a more flexible type signature.
[20:56:57] <[itchyjunk]> So it's partial because it doesn't map the False to anything?
[20:57:03] <dsal> Right.
[20:57:15] <[itchyjunk]> But what about the `f = undefined` case?
[20:57:19] <dsal> If you have a function that only works for some inputs, it's partial.  You shouldn't do that.
[20:57:21] <[itchyjunk]> Can't tell why that's partial
[20:57:24] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67)
[20:57:32] *** aku_ is now known as eagleflo
[20:57:35] <dsal> :t undefined
[20:57:37] <lambdabot> a
[20:57:53] <dsal> heh.  undefined can be any type, and is always a failure.
[20:58:19] <dsal> It's a slightly different concept.  In one case, you only consider some inputs and implicitly fail on others.  In the other case, you explicitly wrote a failure.
[20:59:43] *** gehmehgeh_ is now known as gehmehgeh
[20:59:58] <Gurkenglas> A measure on X has type signature (X->R)->R. What it does is it integrates a function. A kernel between X and Y is a function X->(Y->R)->R. A derivative between two kernels f,g::X->(Y->R)->R is a function h::X->Y->R such that f x yr = g x yr * g x (h x). When I try to figure out what the composition X->Z->R of two derivatives X->Y->R and Y->Z->R is, I find that I am missing a (Y->R)->R to combine them. Is there 
[20:59:58] <Gurkenglas> some alternative definition of derivative which composes properly?
[21:00:03] *** Joins: bash69 (~bash69@d24-141-9-87.home.cgocable.net)
[21:00:22] *** Quits: bash69 (~bash69@d24-141-9-87.home.cgocable.net) (Client Quit)
[21:01:07] *** Joins: ksqsf (~user@2001:da8:d800:611:bd11:5994:94ee:a92c)
[21:03:23] <Gurkenglas> I *suppose* that the X->Z->R could acquire a (Y->R)->R by plugging the X into either of the two X->(Y->R)->R. But which?
[21:03:40] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[21:04:29] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:05:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:06:18] *** Quits: ksqsf (~user@2001:da8:d800:611:bd11:5994:94ee:a92c) (Ping timeout: 250 seconds)
[21:06:29] <Gurkenglas> ...oh, it will of course turn out that both will produce the same X->Z->R. Thanks everyone :P?
[21:06:59] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[21:08:56] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:09:41] <EvanR> [itchyjunk], you're right, undefined isn't partial in the sense that *something* works. Because in that case nothing works. But it's still a form of "partiality"
[21:10:13] <EvanR> maybe we can invent the jargon "properly partial" in that *something* works xD
[21:10:22] <EvanR> but that's usually little consolation
[21:12:08] <EvanR> the bad news is your program just self destructed because it tried to do `head []'. The good news is that head [3] would've worked?
[21:12:16] *** Joins: ksqsf (~user@222.195.66.54)
[21:12:59] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:13:22] *** Quits: Constraintegic (~thomasbul@2001:a61:1307:2b01:758:22d1:74ab:3b31) (Remote host closed the connection)
[21:13:34] *** Joins: Constraintegic (~thomasbul@2001:a61:1307:2b01:758:22d1:74ab:3b31)
[21:14:29] *** Joins: deadmarshal (~deadmarsh@95.38.228.242)
[21:15:35] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[21:16:23] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:16:42] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:17:00] *** Joins: zincy__ (~zincy@host86-151-99-97.range86-151.btcentralplus.com)
[21:17:43] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67) (Read error: Connection reset by peer)
[21:17:49] *** Quits: ksqsf (~user@222.195.66.54) (Ping timeout: 256 seconds)
[21:17:52] *** Quits: zincy (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684) (Remote host closed the connection)
[21:17:54] *** Joins: tom_ (~tom@host86-151-99-97.range86-151.btcentralplus.com)
[21:19:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:21:57] *** Quits: benin (~benin@183.82.31.24) (Ping timeout: 240 seconds)
[21:23:33] *** Quits: kuribas (~user@ptr-25vy0i8mxo9em8d53n7.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[21:24:02] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:24:37] *** Joins: benin (~benin@183.82.31.24)
[21:25:02] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[21:25:09] *** Joins: econo (uid147250@user/econo)
[21:25:30] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[21:25:30] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:25:49] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:27:02] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:29:02] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:29:21] <Sqaure> Is there some package that provides time formats for different locales (however that is defined... country and/or language )? 
[21:30:05] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[21:30:43] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[21:30:45] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:32:08] <dsal> Every time something tries to provide me a time format based on my country and/or language, it's not the one I want.  Google has a bunch of bugs open for that.  (Temperature as well.  I'm in the US, so clearly I want to see Fahrenheit)
[21:33:05] <EvanR> Sqaure, hmm https://hackage.haskell.org/package/current-locale-0.2.0.1/docs/System-CurrentLocale.html
[21:33:27] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:33:46] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:33:59] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[21:34:07] <EvanR> nvm that is 1. old and 2. for getting the current system time locale
[21:34:36] <EvanR> not providing a smorgasbord to choose from 
[21:34:37] <Sqaure> Thanks for trying
[21:35:11] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Ping timeout: 256 seconds)
[21:35:28] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[21:35:29] *** Quits: litharge (litharge@libera/bot/litharge) (*.net *.split)
[21:38:01] *** Quits: benin (~benin@183.82.31.24) (Ping timeout: 256 seconds)
[21:38:05] <EvanR> do you want linux or windows
[21:40:11] *** Quits: zincy__ (~zincy@host86-151-99-97.range86-151.btcentralplus.com) (Remote host closed the connection)
[21:41:07] *** Joins: neceve (~quassel@2.26.93.228)
[21:45:38] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: sjdvjsk)
[21:46:05] *** Joins: litharge (litharge@libera/bot/litharge)
[21:49:31] *** Joins: lispy (~lispy3@84.69.59.93)
[21:53:45] <[itchyjunk]> I am trying to write a helper function of type Maybe a -> Maybe b so that i can test my function
[21:54:31] <[itchyjunk]> My function compiled but i am not sure what it does. so i wanted a helper to test it xD
[21:54:31] <[itchyjunk]> https://bpa.st/NZTQ
[21:55:33] *** Joins: edrx (~Eduardo@2804:56c:d2f8:7700:812f:d393:2bf3:f7a6)
[21:56:53] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[21:56:58] <[itchyjunk]> Ah i kinda did it
[21:57:00] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:57:08] <[itchyjunk]> i made go an identity function `Maybe a -> Maybe a`
[21:57:19] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:57:45] <[itchyjunk]> So `f` here is a partial function?
[21:57:46] <[itchyjunk]> https://bpa.st/G4MQ
[21:57:58] <[itchyjunk]> If so, this was less exciting that I was expecting it to be.
[22:00:09] <polyphem> [itchyjunk]: Maybe is usually used as a way to make partial functions total
[22:00:28] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[22:00:29] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67)
[22:00:34] *** ChanServ sets mode: +o geekosaur
[22:00:54] <geekosaur> (just in case; they're restarting services)
[22:01:14] <edrx> hi all, I'm struggling trying to prove a basic (?) equality in Agda... I guess that this should be obvious to people who know the material here - https://plfa.github.io/Equality/ - but I'm stuck =(. In english my question would be "how do I prove that if f â‰¡ f' and g â‰¡ g' then f âˆ˜ g â‰¡ f' âˆ˜ g'?", and my question in Agda is here: https://0x0.st/ooyP.txt
[22:01:24] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:01:37] <edrx> (the question in Agda is slightly simpler)
[22:01:41] <polyphem> [itchyjunk]: you want to avoid partial functions, they introduce possible bugs in your code
[22:01:49] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[22:02:10] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67) (Remote host closed the connection)
[22:02:39] *** Joins: tavares (~tavares@187.19.212.26)
[22:02:44] *** Quits: tavares (~tavares@187.19.212.26) (Changing host)
[22:02:44] *** Joins: tavares (~tavares@user/tavares)
[22:03:11] *** Joins: zincy (~zincy@host86-151-99-97.range86-151.btcentralplus.com)
[22:03:39] <polyphem> [itchyjunk]: why not take the partial function head, and try to implement a total version safeHead . i think it'll help you to grasp the concept and braden your understanding
[22:04:01] <polyphem> *broaden
[22:04:17] *** Quits: ridcully_ (~ridcully@p57b52a9a.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[22:05:12] *** Quits: robertm (robertm@lattice.rojoma.com) (Quit: WeeChat 3.0)
[22:05:31] <agumonkey> polyphem: such as ?
[22:05:31] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[22:05:47] *** Joins: ridcully_ (~ridcully@p508ac987.dip0.t-ipconnect.de)
[22:05:56] <zzz> list fusion is the process by which (f p = length . filter p) is optimized, right?
[22:06:13] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[22:06:19] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Remote host closed the connection)
[22:07:27] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[22:07:38] *** Joins: robertm (robertm@lattice.rojoma.com)
[22:07:50] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:09:24] <dsal> [itchyjunk]: Your `go` function is `id`  Your `g` function is `(fromJust .)`  -- but if you see `fromJust` in code, you can often just go ahead and file a bug.
[22:09:59] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[22:13:50] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:13:56] *** Quits: zincy (~zincy@host86-151-99-97.range86-151.btcentralplus.com) (Remote host closed the connection)
[22:14:08] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:14:13] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Remote host closed the connection)
[22:15:37] *** Joins: log101 (~log101@212.125.22.146)
[22:16:40] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[22:17:18] *** Joins: lispy (~lispy3@84.69.59.93)
[22:17:44] *** Joins: akegalj (~akegalj@141-136-204-193.dsl.iskon.hr)
[22:19:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[22:19:12] *** Parts: akegalj (~akegalj@141-136-204-193.dsl.iskon.hr) ()
[22:19:42] *** Quits: alp (~alp@user/alp) (Ping timeout: 268 seconds)
[22:20:06] *** Joins: akegalj (~akegalj@141-136-204-193.dsl.iskon.hr)
[22:20:16] <[itchyjunk]> :D
[22:20:30] <[itchyjunk]> I'll look at fromJust at some point, then.
[22:21:46] <EvanR> oof... 
[22:22:03] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:22:07] <EvanR> fromJust defeats the purpose of Maybe
[22:22:40] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:22:40] <EvanR> it's probably a code smell
[22:25:07] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:554b:fd6:4afe:d593) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:25:29] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:26:52] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[22:28:54] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:554b:fd6:4afe:d593)
[22:30:55] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Remote host closed the connection)
[22:31:09] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[22:32:01] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:34:07] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[22:34:46] *** Quits: ChanServ (ChanServ@services.libera.chat) (shutting down)
[22:34:57] *** Joins: Sgeo (~Sgeo@ool-18b9875e.dyn.optonline.net)
[22:35:18] *** Joins: ChanServ (ChanServ@services.libera.chat)
[22:35:18] *** erbium.libera.chat sets mode: +o ChanServ
[22:36:02] <dsal> @src fromJust
[22:36:02] <lambdabot> fromJust Nothing  = undefined
[22:36:02] <lambdabot> fromJust (Just x) = x
[22:37:12] <EvanR> toJust undefined = Nothing
[22:37:18] <EvanR> toJust x = Just x
[22:37:35] *** Quits: max22- (~maxime@2a01cb08833598005b5f19f76fc72686.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[22:37:53] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[22:38:27] <EvanR> (javascript beats haskell again)
[22:39:02] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 240 seconds)
[22:40:17] *** Quits: deadmarshal (~deadmarsh@95.38.228.242) (Ping timeout: 240 seconds)
[22:41:21] *** Quits: Constraintegic (~thomasbul@2001:a61:1307:2b01:758:22d1:74ab:3b31) (Remote host closed the connection)
[22:41:23] *** Joins: Erutuon (~Erutuon@user/erutuon)
[22:41:34] *** Joins: Constraintegic (~thomasbul@2001:a61:1307:2b01:3d2f:ad9e:d1f8:1d5d)
[22:41:35] *** Joins: lispy (~lispy3@84.69.59.93)
[22:43:45] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:554b:fd6:4afe:d593) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:46:16] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[22:46:30] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:554b:fd6:4afe:d593)
[22:46:52] *** geekosaur sets mode: -o geekosaur
[22:47:54] *** Joins: mmohammadi9812 (~Mohammad@188.210.110.121)
[22:49:00] *** Quits: xff0x (~xff0x@2001:1a81:5332:3500:8d55:d8c4:1b30:723c) (Ping timeout: 250 seconds)
[22:49:54] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[22:50:00] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:b49d:8e28:9fba:6720)
[22:51:53] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[22:52:14] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67)
[22:57:02] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67) (Remote host closed the connection)
[22:59:03] *** Quits: mmohammadi9812 (~Mohammad@188.210.110.121) (Ping timeout: 256 seconds)
[22:59:03] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 256 seconds)
[22:59:44] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[23:01:51] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[23:02:59] <energizer> i am reading this post https://alessandrovermeulen.me/2013/07/13/the-difference-between-shallow-and-deep-embedding/
[23:03:24] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[23:03:30] <energizer> i tried copying the first block but ghci says The type signature for â€˜constâ€™ lacks an accompanying binding
[23:03:49] <geekosaur> ghci needs you to do grouping manually
[23:04:02] <geekosaur> it can't tell the next thing you'll type will be the binding
[23:04:22] <geekosaur> so use :{ and :} to type the declaration and definition as a group
[23:04:32] <geekosaur> or load the whole thing from a file instead of typinjg it into ghci
[23:05:11] <energizer> i did
[23:05:24] <energizer> didnt help
[23:05:45] *** Joins: max22- (~maxime@2a01cb0883359800e05a099bb642ef66.ipv6.abo.wanadoo.fr)
[23:05:51] *** Quits: log101 (~log101@212.125.22.146) (Ping timeout: 256 seconds)
[23:06:03] *** Joins: neurocyte0917090 (~neurocyte@IP-045014188253.dynamic.medianet-world.de)
[23:06:03] *** Quits: neurocyte0917090 (~neurocyte@IP-045014188253.dynamic.medianet-world.de) (Changing host)
[23:06:03] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:06:12] <geekosaur> oh, I see. thst whole thing is incomplete
[23:06:22] <geekosaur> you're not supposed to type it in and evaluate it
[23:06:59] <EvanR> heh, tutorial style where 1 line of code floats in isolation while they go on and on. Later you have no idea how it fits together
[23:07:24] <geekosaur> they don't even define the 'âŠ¨' thye use later on
[23:07:34] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:07:39] <energizer> grrr
[23:08:22] <monochrom> This is why when I do this I include "-- mock code"
[23:09:00] <geekosaur> right, it's all mock, none of it is complete or usable
[23:10:27] *** Joins: log101 (~log101@212.125.22.146)
[23:10:28] <zzz> can anyone cnofirm that list fusion is the process by which (f p = length . filter p) is optimized (by avoiding going thruogh the list twice)?
[23:15:17] <[exa]> zzz: IMO in this case it might be just a simple case of inlining (not sure if there is a proper "definition" for fusion). I thought that list fusion is something where RULES hints trigger stuff like `map f . map g ===> map (f.g)`.
[23:15:56] <[exa]> this looks comprehensive: https://stackoverflow.com/a/38910170/1043097
[23:16:58] *** Joins: cynomys (~cynomys@user/cynomys)
[23:21:00] *** Joins: alp (~alp@user/alp)
[23:21:05] <zzz> thanks [exa]
[23:22:15] <EvanR> hmm going through the list twice?
[23:22:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[23:22:51] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Remote host closed the connection)
[23:22:53] <EvanR> or just skipping a cons decons
[23:23:23] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[23:25:24] *** Quits: tavares (~tavares@user/tavares) (Ping timeout: 250 seconds)
[23:25:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:26:24] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:554b:fd6:4afe:d593) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:26:32] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[23:26:57] *** Joins: alp (~alp@user/alp)
[23:27:15] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:554b:fd6:4afe:d593)
[23:27:37] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Ping timeout: 240 seconds)
[23:29:17] *** Quits: log101 (~log101@212.125.22.146) (Ping timeout: 256 seconds)
[23:35:19] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 256 seconds)
[23:35:27] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:37:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:37:06] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[23:41:59] *** Joins: Guest|92 (~Guest|92@198.217.30.212)
[23:42:06] *** Quits: Guest|92 (~Guest|92@198.217.30.212) (Client Quit)
[23:43:58] *** Quits: imalsogreg (~imalsogre@2601:147:300:f930::5d55) (Remote host closed the connection)
[23:47:03] *** Joins: ksqsf (~user@2001:da8:d800:611:68c0:1790:f3ba:1b01)
[23:47:29] *** Joins: imalsogreg (~imalsogre@2601:147:300:f930::5d55)
[23:47:51] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[23:51:24] *** Quits: ksqsf (~user@2001:da8:d800:611:68c0:1790:f3ba:1b01) (Ping timeout: 250 seconds)
[23:57:48] *** ddb1 is now known as ddb
[23:58:16] *** Quits: Constraintegic (~thomasbul@2001:a61:1307:2b01:3d2f:ad9e:d1f8:1d5d) (Remote host closed the connection)
[23:58:33] *** Joins: Constraintegic (~thomasbul@2001:a61:1307:2b01:3d2f:ad9e:d1f8:1d5d)
