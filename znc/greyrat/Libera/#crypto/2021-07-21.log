[00:01:39] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[00:02:18] *** Joins: kulak1 (~kulak@user/kulak)
[00:23:45] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[00:23:51] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[00:23:57] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[00:24:19] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[00:24:32] *** Joins: kish` (~aqua@user/aqua)
[00:25:45] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Read error: Connection reset by peer)
[00:25:51] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[00:26:04] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Read error: Connection reset by peer)
[00:26:37] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[00:26:48] *** Joins: eck (~root@user/eck)
[00:26:53] *** Quits: t0x0sh (~tosh@176.158.137.106) (Ping timeout: 258 seconds)
[00:27:28] *** Quits: kish` (~aqua@user/aqua) (Client Quit)
[00:27:37] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[00:27:43] *** Joins: kish` (~aqua@user/aqua)
[00:27:58] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:28:02] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[00:28:09] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[00:32:45] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[00:33:54] *** Joins: kish` (~aqua@user/aqua)
[00:36:09] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[00:42:26] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:42:37] *** Quits: s8n (~s8n@user/s8n) (Quit: The Lounge - https://thelounge.chat)
[00:43:23] *** Joins: s8n (~s8n@user/s8n)
[01:11:17] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[01:14:11] *** Joins: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9)
[01:22:56] <TimMc> I'm looking through https://www.cse.msu.edu/~alexliu/publications/Cookie/cookie.pdf "A Secure Cookie Protocol" because I see it inspired a particular implementation, and I'm getting some uneasiness about the paper.
[01:23:22] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[01:23:24] <TimMc> In section 2.3 they discuss a "Denning-Sacco Attack" and describe it as an attacker capturing a cookie, but also intercepting enough SSL sessions to somehow derive the SSL session key... and then says that this could be foiled by putting the session key into the HMAC inputs. But doesn't the attacker know the SSL session key, by prior assumption?
[01:23:36] <TimMc> And then I looked up the paper it refers to: https://faculty.nps.edu/dedennin/publications/TimestampsKeyDistribution.pdf -- but this appears to cover something entirely different, involving a central auth server that hands out communication keys to parties who wish to communicate with each other, and a way to harden that system against stolen key replays using timestamps.
[01:23:50] <riv> i thoguth cookies were already secure
[01:26:47] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[01:28:13] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:29:17] <TimMc> riv: Some implementations achieve many security properties, sure. :-)
[01:30:01] <danieldg> cookies are secure if you only visit one website per browser
[01:30:16] <riv> huh??
[01:30:31] <TimMc> This paper is trying to address authentication of the user, confidentiality (of cookie contents), integrity of the cookie, and replay attack prevention (for stolen cookies).
[01:30:50] <TimMc> danieldg: It does not try to address user tracking. :-P
[01:30:59] <TimMc> This is just about first-party session cookies.
[01:31:34] <riv> whats the issue with going to 2 sites?
[01:32:07] <danieldg> riv: site1: <img src="site2.com/protected/page">
[01:32:25] <danieldg> site2 has to deliberately protect against that, since it'll get its cookie
[01:32:31] <jds> the security of cookies is multi-faceted, depends on other things than just the encoding and contents, which could be encrypted or not
[01:32:43] <riv> interesting, so is site1 able to capture that image somehow?
[01:32:46] <jds> particularly cross origin as you're describing
[01:33:20] <danieldg> riv: browsers put a lot of work into papering over the issue, so "mostly no"
[01:33:36] <jds> but cross origin stuff doesn't matter to an attacker sniffing sessions and analyzing valid cookies
[01:33:40] <riv> what kind of attack would be done with this?
[01:34:17] <jds> riv: router reconfiguration for one, changing dns server to a hostile dns
[01:34:23] <jds> that returns attacker controlled IPs for all name resolution
[01:34:24] <TimMc> Oh man, CORS and all that is just a whole 'nother thing.
[01:34:54] <jds> riv: REST services are also often vulnerable to this 'confused deputy' XSRF
[01:35:34] <riv> O_O
[01:35:35] <riv> WTF
[01:35:46] <riv> I hate this!
[01:35:55] <jds> there is no winning in security :)
[01:36:56] <danieldg> bolting on security after designing something results in a huge mess
[01:37:18] <TimMc> riv: XSRF (CSRF) is pretty awful, but browsers vendors are sloooowly trying to fix it.
[01:37:27] <TimMc> see the SameSite cookie property
[01:37:53] <TimMc> https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
[01:38:12] <jds> i thought the generation of mitigations that rails et al used was pretty interesting, randomized form tokens. fairly effective
[01:38:14] <danieldg> modern http has mostly fixed the problems if you use content-security-policy and enforce cookie attributes like that
[01:39:50] <jds> and of course JWT fixed all authentication token problems - obviously
[01:40:51] <danieldg> yep, everything except that pesky 'logout' button
[01:40:54] <danieldg> who needs that
[01:41:06] <TimMc> This author is also concerned that issuing too many HMACs with the same server key could eventually lead to an attacker discovering the server key. >_>
[01:41:29] <jds> credentials live forever and things never change in the world
[01:41:44] <danieldg> and no server ever has a desynced clock
[01:42:58] <jds> TimMc: i should be careful about going on too many walks, i might get struck by lightning
[01:43:25] <int-e> there's always a thunderstorm on the internet
[01:44:57] <TimMc> and then they say that simply rotating the server key periodically isn't a good idea because « server program has to be manually up-dated and recompiled during key exchanges »
[01:45:13] <int-e> huh
[01:45:24] <jds> ratcheting considered harmful
[01:45:26] <int-e> that sounds like a "them" problem
[01:45:47] <danieldg> compiling your keys into your server... interesting security mechanism
[01:46:10] <TimMc> I shouldn't make fun of someone using the tools they had however long ago and in whatever situation... but I think some design assumptions have changed since this paper was written, and it should not be as strongly considered as a source of authority. :-X
[01:46:44] <int-e> I can understand not having a key reloading mechanism, but not having a key loading mechanism seems a step too far :)
[01:47:58] <int-e> (I've done the former; the main reason was that it interfered with dropping privileges)
[01:49:27] <TimMc> heh
[01:49:31] <jds> things would be so nice without having to worry about i/o
[01:51:23] <TimMc> I feel like these authors just don't trust HMAC.
[01:52:11] <ericonr> suckless http server :)
[01:52:16] <ericonr> drop the cert in your config.h
[01:53:03] <jds> haha
[01:55:01] <int-e> It's not even wrong; it just feels weird to bake moving parts into the binary.
[01:55:24] <jds> "not even wrong" is my favorite category
[01:55:59] <TimMc> What's even weirder is that their test implementation was in PHP, where you don't compile, and it gets read from disk each time anyhow...
[01:56:17] <ericonr> now that I remember it, bearssl's brssl utility has a command to convert CAs into code
[01:56:20] <jds> who writes PHP by choice?
[01:56:33] <wasamasa> happens more often than you'd think
[01:56:48] <jds> i hear they're finally considering getting enums
[01:56:51] <ericonr> jds: supposedly modern PHP is "ok"
[01:57:08] <TimMc> Hey, for a long time it was *the* accessible way to get server-side logic.
[01:57:09] <jds> more power to 'em i guess
[01:57:28] <jds> it's true, especially for attackers :)
[01:57:35] <ericonr> lmao
[01:57:40] <TimMc> hahaha
[01:57:42] * TimMc cries
[01:58:10] *** Quits: archenoth (~archenoth@S0106889e6827f474.cg.shawcable.net) (Quit: Leaving)
[02:02:57] *** Joins: archenoth (~archenoth@s0106889e6827f474.cg.shawcable.net)
[02:03:03] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[02:03:29] *** Joins: kulak1 (~kulak@user/kulak)
[02:12:26] *** Joins: chomwitt (~chomwitt@2a02:587:dc0e:ef00:12c3:7bff:fe6d:d374)
[02:13:31] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:14:32] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[02:15:18] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[02:17:14] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[02:17:43] *** Joins: kulak1 (~kulak@user/kulak)
[02:20:43] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 252 seconds)
[02:25:25] <TimMc> oh no, they used ECB in their implementation
[02:25:36] <jds> no way
[02:27:52] <wasamasa> who are they?
[02:27:53] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[02:28:58] <jds> Purveyors of Bad Ideas, from the sounds of it
[02:29:14] <jds> i'm also curious 
[02:31:08] <TimMc> https://www.cse.msu.edu/~alexliu/publications/Cookie/cookie.pdf
[02:32:40] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[02:32:57] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[02:33:29] <TimMc> This paper is from 2005, but there appears to be a later one, published 2021, that I haven't read but that at least drops the bogus Denning-Sacco reference: https://www.cse.msu.edu/~alexliu/publications/Cookie/Cookie_COMNET.pdf
[02:34:59] <TimMc> Apparently the protocol got used in Wordpress.
[02:35:23] <TimMc> It's not actually a *bad* protocol, as far as I can tell, just maybe overengineered in a few places.
[02:35:55] <TimMc> (ECB was not part of the protocol, just part of their performance testing setup.)
[02:37:08] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[02:37:15] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[02:37:28] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[02:38:30] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[02:43:37] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 255 seconds)
[02:46:28] *** Joins: pncl (~pncl___@5.245.211.197)
[02:47:28] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[02:51:53] *** Quits: pncl (~pncl___@5.245.211.197) (Quit: Leaving)
[02:54:36] *** Joins: pncl (~pncl___@5.245.211.197)
[02:54:50] *** Quits: pncl (~pncl___@5.245.211.197) (Remote host closed the connection)
[02:55:11] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[03:07:35] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[03:12:14] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 255 seconds)
[03:20:22] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[03:21:02] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[03:23:57] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[03:24:08] *** Quits: lampilelo (~user@user/lampilelo) (Quit: ERC (IRC client for Emacs 27.2))
[03:24:47] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[03:25:05] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[03:26:32] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[03:27:34] *** Quits: Elzington (~Elzington@68.235.43.172) (Remote host closed the connection)
[03:27:45] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[03:29:50] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 256 seconds)
[03:29:59] *** Joins: Elzington (~Elzington@68.235.43.172)
[03:30:50] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[03:34:52] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[03:38:01] *** Quits: chomwitt (~chomwitt@2a02:587:dc0e:ef00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[03:40:40] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[03:40:44] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[03:40:54] *** Joins: rtypo (~alex@user/rtypo)
[03:59:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 255 seconds)
[04:00:53] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 245 seconds)
[04:06:11] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[04:12:55] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[04:22:57] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:23:54] <onelegend> hello Wulf
[04:25:39] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[04:25:39] *** Wulf4 is now known as Wulf
[04:30:38] <onelegend> So 256 bit encryption has 2^256 different keys no?
[04:31:03] <danieldg> that's the definition
[04:31:05] <jds> insallah
[04:31:10] <onelegend> so in that case, does that mean I will most likely find the key after searching through 2^128 keys?
[04:31:17] <onelegend> uhh nvm
[04:31:19] <onelegend> wtf
[04:31:23] <onelegend> am I thinking
[04:31:31] <onelegend> fuck
[04:31:35] <jds> :)
[04:31:41] <sarnold> you're probably thinking of the birthday paradox
[04:32:36] <danieldg> if 2^128 people use AES-256 then some key will likely be reused
[04:32:55] <linear_cannon> 2^128 is not half of 2^256
[04:33:03] <ms7821> onelegend, 2^127
[04:33:10] <ms7821> (on average)
[04:33:52] <onelegend> linear_cannon: yeah I was dumb
[04:34:22] <onelegend> thank god
[04:34:25] <linear_cannon> that's an easy accidental logical leap to make though
[04:34:31] <onelegend> ye
[04:34:36] <onelegend> I'm relived that I was wrong tho
[04:34:47] <ms7821> I've done it before on this channel :D
[04:35:06] <onelegend> *relieved
[04:35:26] <jds> may all be correct depending on the underlying algebras, all good!
[04:36:18] <jds> after all, it's all relative
[04:36:30] <jds> modulo n
[04:43:21] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[04:45:35] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[04:55:11] *** Joins: gggp (~gggp@123.116.88.127)
[04:57:14] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:59:58] <gggp> is it possible to reverse md5 crypto
[05:00:27] <sarnold> it's possible to collect giant tables of inputs and what they hash to
[05:00:38] <sarnold> it's possible to create multiple inputs that have the same output
[05:01:53] <cehteh> md5 is just a hash, pretty broken for cryptographic applications nowadays
[05:02:23] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[05:03:11] *** Joins: kish` (~aqua@user/aqua)
[05:10:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[05:14:11] <Alipha> But not so broken that you can "reverse" it
[05:14:40] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:21:39] <onelegend> idk if you can reverse this or not 1a918190a15209c4b5089bc8c06b5efe
[05:21:57] <onelegend> this is more easily reversable c652076704f4c1d4ea6dd75adac850ff
[05:22:37] <onelegend> Alipha: try reversing the first one
[05:24:42] <Peng> fe5e6b...
[05:24:50] * Peng shows self out
[05:25:43] *** Joins: gggp_ (~gggp@123.118.15.132)
[05:26:42] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[05:29:02] *** Quits: gggp (~gggp@123.116.88.127) (Ping timeout: 255 seconds)
[05:29:41] <Alipha> onelegend: I did say md5 is NOT reversible
[05:30:13] *** Quits: imi (~imi@catv-80-99-194-58.catv.broadband.hu) (Quit: Leaving)
[05:32:46] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[05:34:43] <onelegend> well crap
[05:35:04] <onelegend> what about short ones
[05:37:44] <int-e> you can attempt brute force, obviously
[05:37:53] <onelegend> speaking of hashing
[05:38:00] *** Quits: phebus_ (~phebus@fsf/member/phebus) (Quit: POKE 1,0)
[05:38:04] <onelegend> I'm planning on generating a vanity SSH key fingerprint
[05:38:12] <onelegend> or SSH public key, with my name on it
[05:38:20] <int-e> why do these two hashes bring up DMCA claims on google...
[05:38:38] <onelegend> int-e: the first hash is "MacGyveriscrazy"
[05:38:47] <onelegend> the second hash is a swear word
[05:39:09] <onelegend> but nah I don't pirate shit lmfao
[05:39:11] <onelegend> never
[05:39:13] <onelegend> :)
[05:42:14] *** Joins: gggp__ (~gggp@111.63.14.119)
[05:43:24] <onelegend> any of you here in #networking as well?
[05:43:28] <onelegend> I got banned there lmfao
[05:45:06] *** Quits: gggp_ (~gggp@123.118.15.132) (Ping timeout: 246 seconds)
[05:45:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[05:52:25] *** Joins: gggp_ (~gggp@60.10.194.43)
[05:54:52] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[06:02:20] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[06:03:47] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[06:04:53] *** Quits: lord| (~lordpipe@user/lordpipe) (Remote host closed the connection)
[06:09:34] *** Joins: lord| (~lordpipe@user/lordpipe)
[06:11:47] *** Joins: gggp__ (~gggp@111.63.14.119)
[06:15:07] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[06:19:37] *** Joins: gggp_ (~gggp@60.10.194.43)
[06:21:26] *** Joins: gggp (~gggp@123.116.73.194)
[06:21:41] *** Quits: ua__ (~ua@public-gprs226951.centertel.pl) (Ping timeout: 250 seconds)
[06:21:55] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[06:22:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[06:23:30] *** Joins: ua__ (~ua@public-gprs226951.centertel.pl)
[06:23:45] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:24:18] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[06:25:48] *** Joins: andreasbuhr_ (~quassel@p548ddcb1.dip0.t-ipconnect.de)
[06:29:35] *** Quits: andreasbuhr (~quassel@p548ddc3d.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[06:32:37] *** Quits: ua__ (~ua@public-gprs226951.centertel.pl) (Ping timeout: 268 seconds)
[06:34:45] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[06:36:32] *** Quits: gggp (~gggp@123.116.73.194) (Remote host closed the connection)
[06:36:56] *** Joins: gggp (~gggp@60.10.194.43)
[06:43:48] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[06:46:03] *** Joins: ua__ (~ua@public-gprs231942.centertel.pl)
[06:50:57] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 245 seconds)
[06:59:03] *** Joins: ionface (~ionface@user/ionface)
[07:10:59] *** Quits: ua__ (~ua@public-gprs231942.centertel.pl) (Ping timeout: 255 seconds)
[07:18:24] <TimMc> Peng: Why, that's my favorite color!
[07:25:17] *** Joins: ua__ (~ua@public-gprs232859.centertel.pl)
[07:34:09] <TimMc> (oh lol, just got it)
[07:36:19] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[07:41:42] *** Joins: gggp (~gggp@123.113.186.67)
[07:44:04] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[07:47:13] *** Joins: arvind_s (~arvind_s@2402:3a80:10da:57ff:b142:be28:6804:4d2f)
[08:02:27] *** Quits: arvind_s (~arvind_s@2402:3a80:10da:57ff:b142:be28:6804:4d2f) (Remote host closed the connection)
[08:07:24] *** Joins: gggp_ (~gggp@60.10.194.43)
[08:10:39] *** Joins: gggp__ (~gggp@60.10.194.43)
[08:10:40] *** Quits: gggp (~gggp@123.113.186.67) (Ping timeout: 252 seconds)
[08:11:44] *** Quits: gggp__ (~gggp@60.10.194.43) (Remote host closed the connection)
[08:13:30] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[08:20:12] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-0c88-90bf-c374-a374.res6.spectrum.com)
[08:27:32] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:40:17] *** Parts: fatal (0x00@user/fatal) ()
[08:51:20] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:55:04] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[09:25:21] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[09:25:51] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[09:27:11] *** Joins: kish` (~aqua@user/aqua)
[09:31:26] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 252 seconds)
[09:48:27] *** Joins: gggp_ (~gggp@123.113.187.192)
[09:49:15] <gggp_> can nonce be absolutely resolved ?
[09:53:01] <Peng> What
[09:55:06] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[09:59:44] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 255 seconds)
[10:04:38] *** Joins: Nightrain (~Night@125.162.212.72)
[10:04:56] *** Parts: Nightrain (~Night@125.162.212.72) ()
[10:07:52] *** Joins: gggp__ (~gggp@123.113.187.192)
[10:08:14] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[10:10:56] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[10:13:51] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[10:17:00] *** Joins: frost (~frost@59.71.241.179)
[10:18:27] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 255 seconds)
[10:18:38] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[10:31:52] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[10:35:08] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-0c88-90bf-c374-a374.res6.spectrum.com) (Quit: jarthur)
[10:36:18] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 240 seconds)
[10:41:22] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:44:50] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[10:46:51] *** Quits: echoreply (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d) (Quit: WeeChat 2.8)
[10:47:21] *** Joins: echoreply (~echoreply@45.32.163.16)
[10:51:20] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:54:27] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 255 seconds)
[11:14:18] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:26:01] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[11:32:26] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 255 seconds)
[11:35:35] *** Joins: gggp__ (~gggp@60.10.194.43)
[11:37:23] *** Joins: chomwitt (~chomwitt@2a02:587:dc0e:ef00:12c3:7bff:fe6d:d374)
[11:42:38] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[11:45:54] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 252 seconds)
[11:46:57] *** Joins: frost (~frost@59.71.241.179)
[11:53:43] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[11:55:59] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[12:04:18] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[12:10:52] *** Quits: frdy (~mcfrdy@user/mcfrdy) (Ping timeout: 246 seconds)
[12:16:05] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 255 seconds)
[12:17:08] *** Joins: Oshawott (~archenoth@s0106889e6827f474.cg.shawcable.net)
[12:17:48] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[12:20:00] *** Quits: archenoth (~archenoth@s0106889e6827f474.cg.shawcable.net) (Ping timeout: 252 seconds)
[12:21:22] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 245 seconds)
[12:21:25] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:22:29] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[12:31:00] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[12:43:29] *** gggp__ is now known as gggp
[12:46:06] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[13:03:47] *** Quits: rio (~rio@2601:345:4203:41c0:1b83:5855:3366:1bff) (Ping timeout: 255 seconds)
[13:11:15] *** Joins: vernaz (~vernaz@148.63.127.167)
[13:13:04] *** Joins: gggp_ (~gggp@123.113.187.192)
[13:16:06] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[13:16:25] *** Joins: gggp__ (~gggp@123.113.187.192)
[13:19:24] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[13:21:23] *** Joins: gggp_ (~gggp@60.10.23.160)
[13:24:32] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[13:29:11] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:31:42] *** Quits: Tom (~Tom@82-64-144-132.subs.proxad.net) (Ping timeout: 256 seconds)
[13:48:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:48:51] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[13:51:07] *** Lord_of_Life_ is now known as Lord_of_Life
[13:55:30] *** Quits: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:103d:2cb1:5ca3:cb0f) (Ping timeout: 256 seconds)
[14:02:49] *** Joins: lampilelo (~user@user/lampilelo)
[14:13:57] *** Quits: Colti (Miramar-FL@user/host-pond) (Excess Flood)
[14:15:35] *** Joins: Colti (Miramar-FL@user/host-pond)
[14:22:55] *** Joins: gggp__ (~gggp@123.113.187.192)
[14:26:06] *** Quits: gggp_ (~gggp@60.10.23.160) (Ping timeout: 256 seconds)
[14:43:10] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[14:48:14] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 252 seconds)
[14:49:56] *** gggp__ is now known as gggp
[14:57:09] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:a999:ec99:9fca:a94d) (Quit: WeeChat 3.2)
[15:04:17] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:2011:5d6c:99d4:7d8b)
[15:05:46] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 244 seconds)
[15:05:58] <elichai2> I'm reading the ring signatures paper by Yael et al. And I don't get why not just use SIGMA OR protocols? It seems to me that you can easily provide a schnorr ring signature using that
[15:06:14] *** Joins: kish` (~aqua@user/aqua)
[15:15:42] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:2011:5d6c:99d4:7d8b) (Quit: WeeChat 3.2)
[15:19:29] *** Joins: gggp_ (~gggp@111.63.14.119)
[15:20:36] *** Joins: gggp__ (~gggp@111.63.14.119)
[15:22:36] *** Quits: gggp (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[15:24:11] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[15:32:54] *** Joins: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[15:44:06] <ldm> Are there any schemes other than RSA that rely on the factoring problem?
[15:44:14] <ldm> *asymmetric schemes
[15:45:23] *** Joins: gggp_ (~gggp@123.113.187.192)
[15:45:26] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[15:46:32] <wasamasa> https://en.wikipedia.org/wiki/Rabin_cryptosystem
[15:46:47] <ldm> Ah thank you!
[15:47:14] <wasamasa> https://en.wikipedia.org/wiki/Schmidt-Samoa_cryptosystem
[15:47:23] <wasamasa> https://en.wikipedia.org/wiki/Blum%E2%80%93Goldwasser_cryptosystem
[15:48:12] <wasamasa> oh and scroll down to the bottom of the page, there's a box linking to more things related to integer factorization
[15:48:29] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[15:48:53] <ldm> Oh lol, completely missed that box
[15:49:41] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[15:50:06] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 255 seconds)
[15:50:24] <MacGyver> (Technically RSA doesn't rely on the factoring problem)
[15:50:43] <MacGyver> (But if factoring is easy, so is the RSA problem)
[15:51:53] <MacGyver> (Rabin *does* have a proof of full equivalence to the factoring problem I think?)
[16:02:01] *** Joins: AkechiShiro (~licht@user/akechishiro)
[16:04:37] <ldm> Yeah that's what I'm reading
[16:06:10] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[16:06:49] <snappy> let's not forget cohen's cryptosystem: https://en.wikipedia.org/wiki/Cohen%27s_cryptosystem
[16:07:07] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:f965:e444:a004:b205)
[16:08:23] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[16:10:35] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 265 seconds)
[16:10:39] *** Joins: ionface_ (~ionface@user/ionface)
[16:18:26] *** Quits: chomwitt (~chomwitt@2a02:587:dc0e:ef00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[16:25:20] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 244 seconds)
[16:26:56] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[16:43:23] *** Joins: gggp__ (~gggp@123.113.178.180)
[16:45:07] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[16:46:34] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[16:51:00] *** Joins: dez (uid92154@user/dez)
[16:53:06] *** Joins: BOKALDO (~BOKALDO@81.198.23.184)
[16:56:16] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[16:59:21] <int-e> Finding the secret exponent is as hard as factoring.
[17:01:15] *** Quits: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Remote host closed the connection)
[17:03:04] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[17:05:54] *** Joins: mikail (~mikail@90.212.77.3)
[17:10:14] <int-e> Hmm maybe that's only true for small public exponents? It's trickier than I thought.
[17:12:08] <snappy> i think if you can compute the secret exponent you can compute phi(n) which can be used to factor n
[17:12:32] <MacGyver> int-e: No I think that's true, but finding the secret exponent is only *one* potential way of solving the RSA problem.
[17:12:50] <int-e> snappy: ed = 1 (mod phi(n))  doesn't exactly give you phi(n).
[17:13:28] <int-e> MacGyver: yes indeed... though it's hard to imagine what cursed magic would allow that
[17:13:41] <snappy> right, there's more math involved, but i think there's an algorithm/formula to go from knowledge of (n,e,d) to (n,e,d,phi(n)) and then from there the factors
[17:13:47] <MacGyver> int-e: Iirc factoring is currently the best *known* way of solving the RSA problem.
[17:14:29] <MacGyver> int-e: The point I was making is that the RSA problem is not *equivalent* to, and in fact, quite possibly weaker than, factoring.
[17:15:12] <MacGyver> I guess you could argue that that means RSA still "relies" on factoring being hard though.
[17:15:55] *** Quits: BOKALDO (~BOKALDO@81.198.23.184) (Quit: Leaving)
[17:16:43] <int-e> snappy: phi(n) is close to n so you can estimate, say, k = ed/(N-2sqrt(N)) and hope that (ed-1) is divisible by a number close to k and that the division gives you phi(n). This works well when one of e or d is small (and the other is more or less reduced modulo phi(n))... but ed could be much larger than N^2 even and then I think you'll have many candidates for k. So that's where I'm stuck.
[17:18:15] <int-e> snappy: sorry. the *real* k I'm trying to find is k = (ed - 1)/phi(n). k ~ ed/(N-2sqrt(N)) is the estimate (and a lower bound on k)
[17:19:31] <int-e> Anyway, maybe I'm missing something clever. I should look up the paper(s).
[17:21:16] <onelegend> so many fuckers on youtube thinking the US government already "cracked" encryption
[17:22:51] <int-e> snappy: Oh, maybe we break the system several times for different public exponents? having several values ed - 1 all divisible by phi(n) would allow us to narrow things down with gcd computations.
[17:23:28] <int-e> Anyway. As I said, it's trickier than I thought.
[17:24:23] <int-e> Err, if we get to pick the public exponent (and why not?), we can just pick a small one.
[17:36:52] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[17:37:03] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[17:37:13] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[17:37:24] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Read error: Connection reset by peer)
[17:37:57] *** Joins: RickSanchez (~RickSanch@172.58.121.209)
[17:38:07] *** Quits: RickSanchez (~RickSanch@172.58.121.209) (Read error: Connection reset by peer)
[17:38:15] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[17:38:23] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[17:38:51] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[17:39:00] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[17:39:09] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[17:39:16] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Read error: Connection reset by peer)
[17:41:00] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:42:36] *** Joins: RickSanchez (~RickSanch@172.58.121.209)
[17:43:02] *** Quits: RickSanchez (~RickSanch@172.58.121.209) (Read error: Connection reset by peer)
[17:47:08] *** Joins: RickSanchez (~RickSanch@172.56.11.92)
[17:53:58] *** Joins: chomwitt (~chomwitt@ppp-94-67-220-135.home.otenet.gr)
[17:54:56] *** Quits: ericonr (~ericonr@voidlinux/docs/ericonr) (Ping timeout: 255 seconds)
[17:56:48] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[17:57:00] *** Joins: ericonr (~ericonr@voidlinux/docs/ericonr)
[17:58:12] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[17:59:43] *** Joins: maroon (tinycrypt@user/maroon)
[18:00:09] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 255 seconds)
[18:06:02] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:f965:e444:a004:b205) (Ping timeout: 268 seconds)
[18:06:06] *** Quits: RickSanchez (~RickSanch@172.56.11.92) (Ping timeout: 258 seconds)
[18:07:39] *** gggp__ is now known as gggp
[18:18:09] *** Quits: mikail (~mikail@90.212.77.3) (Ping timeout: 255 seconds)
[18:19:31] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[18:21:54] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:23:13] *** Joins: RickSanchez (~RickSanch@172.56.11.92)
[18:29:36] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 252 seconds)
[18:30:18] *** Joins: BOKALDO (~BOKALDO@81.198.23.184)
[18:36:55] *** Joins: gggp_ (~gggp@111.63.14.119)
[18:40:04] *** Quits: gggp (~gggp@123.113.178.180) (Ping timeout: 246 seconds)
[18:50:05] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[18:53:52] *** Joins: gggp__ (~gggp@123.113.187.192)
[18:56:56] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 268 seconds)
[18:57:00] *** Joins: r-ush (~quassel@2405:201:301b:900d:a0db:8d7b:8f3b:113c)
[19:13:41] <onelegend> cool stuff
[19:14:52] *** onelegend is now known as OneLegend
[19:15:02] <ldm> On wiki, it claims that Camellia and chacha20 are used in TLS1.0-1.2, however I can't find any mention of them in the RFCs for TLS1.0-1.2. Am I missing something?
[19:15:08] <ldm> https://en.wikipedia.org/wiki/Cipher_suite#In_TLS_1.0%E2%80%931.2
[19:15:18] <ldm> TLS 1.2: https://datatracker.ietf.org/doc/html/rfc5246
[19:15:29] *** Quits: ua__ (~ua@public-gprs232859.centertel.pl) (Ping timeout: 258 seconds)
[19:17:43] <MacGyver> ldm: https://datatracker.ietf.org/doc/html/rfc7905
[19:18:07] <MacGyver> Camellia I don't know, but chacha20-poly1305 was "tacked on" to TLS 1.2 with that RFC.
[19:18:42] <MacGyver> It's basically the "Oh shit everything is broken we need SOMETHING as a drop-in until TLS 1.3 is a thing" RFC.
[19:19:06] <OneLegend> thank god for TLS 1.3
[19:19:08] <OneLegend> glorious TLS
[19:19:37] <ldm> MacGyver: ah right thanks!
[19:19:52] <ldm> TLS 1.3 looks a lot cleaner lol
[19:20:53] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[19:21:52] <Peng> Check the IANA cipher suite registry, it should have links to the RFCs where things were added
[19:22:13] <OneLegend> sup Peng
[19:22:20] <ldm> ah that's perfect Peng
[19:22:27] <ldm> was looking for a big list of them
[19:22:35] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:23:25] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 250 seconds)
[19:23:34] *** Guyver2_ is now known as Guyver2
[19:24:35] *** Quits: madage (~madage@user/madage) (Quit: leaving)
[19:25:16] <ericonr> MacGyver: what kind of "everything's broken" was it?
[19:25:27] *** gggp__ is now known as gggp
[19:25:47] <ldm> AES-CBC for a start?
[19:25:49] * ericonr is sad BearSSL doesn't do TLS 1.3 yet
[19:26:06] <OneLegend> I use LibreSSL
[19:26:08] <ldm> aiui GCM is the only recommended AES mode right now
[19:26:26] <MacGyver> ericonr: Well, on the one hand RC4 was broken because of the biases, and on the other hand everything CBC was "broken", and then all that was left was AES-GCM.
[19:26:27] <OneLegend> for anything related to networking and transport encryption, stream ciphers rock
[19:26:34] <MacGyver> Which is not a nice situation to be in.
[19:26:44] <OneLegend> I'd prefer ChaCha20 over AES GCM
[19:27:17] <ericonr> oh dear, RC4 was in TLS 1.2 still
[19:27:22] <ldm> Chacha looks nice from my brief look at it
[19:27:31] <ericonr> MacGyver: ok, that makes sense
[19:27:33] <MacGyver> So would Google; there's a reason Langley is at the top of that author list.
[19:28:04] <ldm> also discovered that a web server of mine was still using TLS 1.0 and 1.1 😬
[19:28:09] <ericonr> especially cause AES sucks without hw
[19:28:42] *** Joins: madage (~madage@user/madage)
[19:30:10] *** Joins: ua__ (~ua@public-gprs231723.centertel.pl)
[19:31:24] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[19:33:25] *** Joins: gggp_ (~gggp@111.63.14.119)
[19:34:12] *** Quits: r-ush (~quassel@2405:201:301b:900d:a0db:8d7b:8f3b:113c) (Ping timeout: 255 seconds)
[19:36:42] *** Quits: gggp (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[19:37:39] <ericonr> MacGyver: ah, I could just have read through the RFC intro before asking too, they present the motivation :)
[19:38:01] *** Joins: Guest25 (~Guest25@148.252.129.145)
[19:38:27] <Guest25> how do I encrypt a text in a file with gpg - in a way that i can copy paste it??
[19:38:49] <ericonr> pipe into base64 ?
[19:39:06] <MacGyver> I think you'll want to ask it for ascii-armor.
[19:39:25] <ericonr> or that, I have no idea how to use gpg cli heh :p
[19:40:29] <Guest25> MacGyver probably
[19:40:34] *** Quits: RickSanchez (~RickSanch@172.56.11.92) (Remote host closed the connection)
[19:41:25] <Guest25> checking
[19:41:36] *** Joins: RickSanchez (~RickSanch@static-68-235-48-19.cust.tzulo.com)
[19:44:56] <Guest25> done
[19:47:26] *** Joins: gggp__ (~gggp@60.10.23.160)
[19:51:12] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 268 seconds)
[19:51:51] *** Quits: rqsd (~rqsd@user/rqsd) (Remote host closed the connection)
[19:52:16] *** Joins: gggp_ (~gggp@123.118.15.132)
[19:55:15] *** Quits: gggp__ (~gggp@60.10.23.160) (Ping timeout: 252 seconds)
[19:55:23] *** Joins: rqsd (~rqsd@user/rqsd)
[19:55:57] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:08:42] *** Quits: Guest25 (~Guest25@148.252.129.145) (Quit: Client closed)
[20:11:03] *** Joins: tradar (~tradar@user/tradar)
[20:18:17] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[20:20:04] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:22:21] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[20:28:57] *** Joins: MaxFury (~MaxFury@139.5.251.79)
[20:32:43] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[20:58:25] <OneLegend> lol GPG
[21:02:28] *** Quits: RickSanchez (~RickSanch@static-68-235-48-19.cust.tzulo.com) (Remote host closed the connection)
[21:03:35] *** Quits: chomwitt (~chomwitt@ppp-94-67-220-135.home.otenet.gr) (Ping timeout: 258 seconds)
[21:09:47] *** Joins: RickSanchez (~RickSanch@172.58.121.209)
[21:15:22] *** Joins: MaxFury16 (~MaxFury@139.5.251.79)
[21:15:40] *** Joins: r-ush (~quassel@2405:201:301b:900d:a0db:8d7b:8f3b:113c)
[21:18:37] *** Quits: MaxFury (~MaxFury@139.5.251.79) (Ping timeout: 246 seconds)
[21:22:06] *** MaxFury16 is now known as MaxFury
[21:22:24] <ioxzev1z> what's wrong with gee pee gee?
[21:22:54] <wasamasa> usability
[21:23:05] <ioxzev1z> Such as?
[21:23:34] <ioxzev1z> gpg -[s]e file isn't really painfully difficult
[21:23:35] <wasamasa> I have to struggle every time I have to extend my public key and publish the latest version on my website
[21:23:48] <wasamasa> openssl is bad, but gpg is worse
[21:23:53] <ioxzev1z> wasamasa, I don't think key distribution is easy anywhere
[21:24:16] <wasamasa> putting it on my website is the easiest aspect
[21:24:27] *** Quits: MaxFury (~MaxFury@139.5.251.79) (Quit: Client closed)
[21:24:39] *** Joins: MaxFury (~MaxFury@139.5.251.79)
[21:24:46] <wasamasa> I'm talking about navigating the interactive UI to pick the correct key, then the subkey, then extend it, then extend another one (why are there even several), then export the public part of it
[21:25:20] <wasamasa> in fact, gpg's UI is so bad there are papers about it
[21:25:32] <ioxzev1z> iirc gpg has --armor --export <name<
[21:25:34] <ioxzev1z> >
[21:26:21] <wasamasa> bonus: how do you verify a key is valid without importing it?
[21:26:39] <wasamasa> yes, this is not a trick question
[21:26:49] <ioxzev1z> yeah that's true my G, iirc you need to import all keys before use
[21:26:54] <ioxzev1z> Let me check man gpg
[21:27:25] <MaxFury> hi mr wasamasa
[21:27:38] <MaxFury> i am Mr MaxFury, and I am back to learn your discipline
[21:28:32] <wasamasa> at least you're not calling me sir
[21:28:55] <MaxFury> why would I call you sir?!
[21:28:59] <wasamasa> I've come across a bunch of Indians doing that
[21:29:07] <MaxFury> that's deplorable
[21:29:13] <wasamasa> no, that's part of their culture
[21:29:16] *** Joins: Tom (~Tom@2a01:e0a:2de:8130:6c87:9224:dba5:3b6a)
[21:29:26] <MaxFury> deplorable indeed
[21:29:27] <wasamasa> former British colony and all that
[21:29:35] <ioxzev1z> wasamasa, man gpg actually doesn't mention verifying keys if you search /verify , only messages
[21:30:04] <wasamasa> anyone else who wants to defend gpg's UI?
[21:30:19] <ioxzev1z> wasamasa, I defend it for "muh crypto", not the UI
[21:30:21] <wasamasa> before I go and reveal the solution
[21:30:27] <wasamasa> the crypto isn't good either, lol
[21:30:49] <wasamasa> have you actually looked at the PGP RFC?
[21:30:58] <ioxzev1z> wasamasa, seems to have decent (but outdated) algorithms, no? e.g. aes, sha2, so on
[21:31:06] <wasamasa> it's 90ies crypto, back when it wasn't clear that it's a bad idea to have extensibility built in
[21:31:17] <wasamasa> 3DES
[21:31:20] <ioxzev1z> But muh options
[21:31:31] <wasamasa> nobody cares about being able to use 3DES
[21:32:11] <ioxzev1z> wasamasa, iirc every program written will eventually evolve to read email (not sure if quoted correctly), for crypto every program will evolve to the point of implementing 3DES
[21:32:28] <wasamasa> that is a quote, but it doesn't apply to cryptography
[21:32:37] <wasamasa> look at SSH, TLS and whatnot
[21:32:39] <ioxzev1z> I added the crypto part
[21:32:49] <wasamasa> they remove obsolete algorithms
[21:33:28] <ioxzev1z> wasamasa, the problem is that gpg evolved over time. If you rewrite GPG today you would only use what is a good idea
[21:33:36] <ioxzev1z> GPG was written when we really knew nothing about crypto
[21:34:08] <wasamasa> the only thing it has going for it is that it's available everywhere
[21:34:23] <ioxzev1z> The options came over time. No one realistically said "lets implement 3DES" without needing to be compatible with old stuff using 3DES
[21:35:57] <wasamasa> see https://latacora.singles/2019/07/16/the-pgp-problem.html for further arguments
[21:36:24] <ioxzev1z> I don't need to, [PG]GP are outdated, but that doesn't mean GPG is unusable
[21:36:27] <ioxzev1z> Though will bookmark link
[21:37:36] <ioxzev1z> If you only need gpg -se file, with decent algorithms selected, I see no problem with gpg
[21:38:21] <ioxzev1z> Though it's reasonable to expect a new program at some point, considering gpg's age and so forth
[21:38:30] <ioxzev1z> But who will write it?
[21:38:45] <wasamasa> go programmers most likely
[21:38:58] <wasamasa> they have TLS APIs that don't look completely awful
[21:39:14] <ioxzev1z> iirc a lot of people complain about gpg not having a usable API
[21:39:17] <wasamasa> there are enough of them to rewrite everything in a very java-like manner
[21:39:37] <wasamasa> the worst API I've dealt with so far is openssl, don't even want to consider gpg being worse
[21:40:47] <ioxzev1z> Doesn't openssl use -arg rather than --arg? That just looks damn wrong
[21:40:52] <wasamasa> gnutls is bad from a user perspective (cannot keep up a TLS connection without errors, lol) and outsider perspective (embarassing CVEs despite a lot less people looking at it)
[21:40:58] <MaxFury> #cryptoi agree whole heartedly
[21:41:00] <wasamasa> by that argument C compilers are damn wrong
[21:41:09] <wasamasa> and the entire BSD ecosystem
[21:41:27] <wasamasa> how dare they not use GNU-style long options
[21:41:32] <ioxzev1z> wasamasa, gimme that sweet sweet --option-name over -option-name any day
[21:41:46] <wasamasa> -funroll-loops
[21:41:48] <MaxFury> ioxzev1z, it does look wrong but it's also better for the compiler's usability
[21:42:10] <ioxzev1z> I actually think they should use + and -, e.g. +funroll-loops to enable, -funroll-loops to disable
[21:42:25] <wasamasa> that's how you get imagemagick
[21:42:57] <wasamasa> or do they, hm
[21:43:05] <ioxzev1z> imagemagick actually uses "convert" as a name of a program, thereby implying that imagemagick is the only set of tools to ever convert anything
[21:43:16] <wasamasa> sure and postgres uses `createdb`
[21:43:26] <ms7821> imagemagick is the absolute worst
[21:43:26] <ioxzev1z> Same with updatedb, should be [m]locate --update, or [m]locate-update
[21:43:29] <wasamasa> anyway: https://github.com/FiloSottile/age
[21:43:45] <wasamasa> here's a go programmer who rewrote the encryption part of gpg
[21:43:58] <MaxFury> interesting, i'll take a look
[21:44:22] <wasamasa> https://github.com/FiloSottile/age/issues/65 points towards the signing part of the story
[21:44:27] <rqsd> PostgreSQL's createdb dates back to at least 1994, it's allowed some namespace pollution(TM)
[21:45:05] <wasamasa> if age actually works with SSH keys, that would be very cool
[21:47:38] *** Quits: MaxFury (~MaxFury@139.5.251.79) (Quit: Client closed)
[21:52:15] *** Quits: tolarz (bfa39a78db@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 2.3)
[21:55:40] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[21:56:52] *** Joins: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[22:02:50] *** Joins: chomwitt (~chomwitt@ppp-94-67-220-135.home.otenet.gr)
[22:03:45] *** Joins: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[22:07:16] *** Quits: gggp_ (~gggp@123.118.15.132) (Ping timeout: 246 seconds)
[22:07:39] *** Quits: thekingofbandit (tkob@user/thekingofbandit) (Ping timeout: 255 seconds)
[22:12:33] *** Joins: thekingofbandit (tkob@user/thekingofbandit)
[22:22:30] *** Joins: aleck1 (~aleck@user/aleck)
[22:24:39] <ericonr> wasamasa: I think gpgv is for verification without importing
[22:25:05] <wasamasa> oh, I forgot giving the answer
[22:25:14] <wasamasa> --list-packets
[22:25:30] <ericonr> and yes gpg wants you to call it inside your programs instead of exposing a library, I think the sequoia-pgp stuff has a library tho?
[22:25:38] <ericonr> only rust ofc
[22:25:49] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 246 seconds)
[22:26:37] <wasamasa> gpg --verbose --list-packets publickey.txt
[22:26:59] <wasamasa> works for encrypted files, too
[22:27:32] <wasamasa> another pain point I've found was debugging why looking up keys on a key server always failed
[22:27:48] <wasamasa> it turned out to be DNS
[22:28:19] <wasamasa> but since this is crypto software, it only gives you useful errors if you crank up debugging options
[22:28:40] <wasamasa> spent way too much time figuring this out
[22:28:53] <wasamasa> and these days the most important key servers are dead anyway
[22:29:15] *** Quits: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Quit: Leaving)
[22:29:51] <ioxzev1z> are there actually any real key servers or are they all abandoned?
[22:29:54] <wasamasa> first because of DoS, now because of GDPR
[22:30:00] <ioxzev1z> I doubt there are many listing 10M+ keys
[22:30:16] <wasamasa> I might as well disable automatic gpg key fetching in mutt
[22:34:24] <TimMc> GDPR, really?
[22:34:28] <wasamasa> inorite
[22:34:45] <TimMc> sus
[22:37:06] <wasamasa> https://gist.github.com/rjhansen/67ab921ffb4084c865b3618d6955275f#a-personal-postscript and https://sks-keyservers.net/
[22:37:12] <wasamasa> > Update 2021-06-21: Due to even more GDPR takedown requests, the DNS records for the pool will no longer be provided at all.
[22:38:18] <wasamasa> the thing is that back in the 90ies it seemed a good idea to have an append-only, censorship-resistant index of personal identifying data linked to public keys
[22:38:36] <wasamasa> someone take down every blockchain with GDPR requests plz
[22:41:00] <menace> there's already commercial or childporn in the blockchain encoded as far as i remember
[22:41:52] <TimMc> That's even more potent than PII.
[22:42:03] <TimMc> Strict liability in the US.
[22:44:09] <menace> i think it's not easy to find nowadays as some people made it a hushhush thingie
[22:52:10] *** Quits: r-ush (~quassel@2405:201:301b:900d:a0db:8d7b:8f3b:113c) (Ping timeout: 240 seconds)
[22:55:43] *** Joins: r-ush (~quassel@2405:201:301b:900d:a0db:8d7b:8f3b:113c)
[23:07:27] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-a526-3669-b829-020d.res6.spectrum.com)
[23:13:29] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[23:16:41] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[23:17:47] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 268 seconds)
[23:23:03] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-0828-a8d3-d830-5275.res6.spectrum.com)
[23:24:15] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-a526-3669-b829-020d.res6.spectrum.com) (Ping timeout: 252 seconds)
[23:24:27] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[23:24:56] *** Quits: RickSanchez (~RickSanch@172.58.121.209) (Remote host closed the connection)
[23:25:31] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:27:43] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Quit: Klotz)
[23:29:57] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[23:30:05] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:30:07] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[23:30:16] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[23:30:44] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:31:14] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[23:31:25] *** Joins: rtypo (~alex@user/rtypo)
[23:31:52] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:33:52] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[23:33:59] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:34:12] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[23:34:39] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:34:41] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[23:39:54] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 240 seconds)
[23:46:47] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:47:01] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[23:47:29] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:49:41] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[23:49:46] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:50:00] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[23:50:30] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:50:44] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Read error: Connection reset by peer)
[23:50:51] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:51:00] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Remote host closed the connection)
[23:51:27] *** Joins: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c)
[23:52:46] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 244 seconds)
[23:56:45] *** Joins: akaWolf (~akaWolf@akawolf.org)
[23:57:00] *** Quits: RickSanchez (~RickSanch@2607:fb90:33:6bdc:a6:7143:8208:e39c) (Ping timeout: 255 seconds)
[23:59:20] *** Joins: mouseghost (~draco@user/mouseghost)
