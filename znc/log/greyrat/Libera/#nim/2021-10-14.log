[00:22:13] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[00:38:16] *** Quits: adg (~adam@62.252.18.98) (Quit: WeeChat 3.2)
[00:57:41] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[00:57:41] *** Joins: greaser|q (greaser@user/greasemonkey)
[00:57:43] *** greaser|q is now known as GreaseMonkey
[01:19:14] <nrds> <06Prestige99> Is there a safe way to access variables outside the scope of a {.cdecl.} callback? This is what I'm trying (but isn't safe) https://play.nim-lang.org/#ix=3BFC
[01:19:44] <nrds> <06Prestige99> I want to pass "this" into the callback so I can affect the object during the callback. I'm not entirely sure how else I could interact with the data
[01:22:35] <FromDiscord> <impbox [ftsf]> globals?
[01:23:04] <FromDiscord> <impbox [ftsf]> Depends what you mean by _safe_
[01:23:08] <nrds> <06Prestige99> Well they're instance objects so I'm not sure how that'd work
[01:23:13] <nrds> <06Prestige99> uh well, compiling would be nic
[01:23:15] <nrds> <06Prestige99> nice*
[01:23:29] <nrds> <06Prestige99> `physicsbody.nim(102, 10) Error: illegal capture 'this' because ':anonymous' has the calling convention: <cdecl>`
[01:23:42] <FromDiscord> <impbox [ftsf]> Assign it to a global
[01:23:49] <FromDiscord> <impbox [ftsf]> Then access it via the global
[01:23:56] <FromDiscord> <impbox [ftsf]> It's ugly but it should work
[01:24:10] <FromDiscord> <impbox [ftsf]> Unless you're threading etc
[01:24:21] <FromDiscord> <impbox [ftsf]> Or calling the function again before it exits
[01:24:32] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[01:25:03] <FromDiscord> <impbox [ftsf]> It doesn't take a userdata: pointer you can use?
[01:25:30] *** Joins: arkurious (~arkurious@user/arkurious)
[01:25:39] <FromDiscord> <impbox [ftsf]> A lot of c api stuff takes a second void argument for passing whatever you want in
[01:25:46] <nrds> <06Prestige99> oh, it may. I could probably use that.. it's just an odd convention I haven't seen/used
[01:26:03] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[01:26:16] <nrds> <06Prestige99> ah it doesn't
[01:26:36] <nrds> <06Prestige99> The global idea may work but it is scary lol
[01:28:12] <FromDiscord> <impbox [ftsf]> I'm not aware of another option other than changing the c side
[01:28:35] <FromDiscord> <impbox [ftsf]> Well you could write to disk and then read it back =)
[01:28:41] <nrds> <06Prestige99> Well I've considered that too, if I can deploy a static binary it might not be a bad idea
[01:28:46] <nrds> <06Prestige99> altering the c lib I mean
[01:29:25] <FromDiscord> <impbox [ftsf]> Or just include the library next to your app
[01:29:45] <nrds> <06Prestige99> or rewrite it in Nim
[01:29:55] <nrds> <06Prestige99> that'd be.. fun
[01:34:36] <NimEventer> New thread by ErikWDev: Nanim: Inspired by 3b1b's manim, I created a GPU-accelerated framework for smooth animations in Nim!, see https://forum.nim-lang.org/t/8499
[01:57:00] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:58:53] <FromDiscord> <satyrn> how do i replace the first occurance of something in a string
[01:59:00] <FromDiscord> <satyrn> (edit) "how do i replace ... the" 03added "only"
[02:06:48] <FromDiscord> <enthus1ast> replace from strutils
[02:07:28] <FromDiscord> <enthus1ast> It takes an additional int parameter how many replaces should be done
[02:10:27] <FromDiscord> <impbox [ftsf]> Docs are unclear about whether it replaces more than once, reading the code it looks like all occurrences
[02:22:06] *** Joins: rockcavera (~rc@192.12.113.67)
[02:22:07] *** Quits: rockcavera (~rc@192.12.113.67) (Changing host)
[02:22:07] *** Joins: rockcavera (~rc@user/rockcavera)
[02:43:47] *** Quits: max22- (~maxime@2a01cb0883359800e21c21519a7e8938.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[02:59:36] <FromDiscord> <konsumlamm> In reply to @impbox "Docs are unclear about": it replaces all occurences, the devel docs are clearer there: https://nim-lang.github.io/Nim/strutils.html#replace%2Cstring%2Cstring%2Cstring
[02:59:44] <FromDiscord> <Elegantbeef> It replaces all, there doesnt seem to be a replace once
[02:59:49] <FromDiscord> <Elegantbeef> old
[02:59:51] <FromDiscord> <gogolxdong (liuxiaodong)> Nim release 0.20 Part 1.mp4
[02:59:52] <FromDiscord> <gogolxdong (liuxiaodong)> What does Nim 0.20 mean?
[03:00:03] <FromDiscord> <konsumlamm> it means version 0.20
[03:10:26] <FromDiscord> <Yardanico> wow, it's 2021 and Windows still has the 256 char path limit by default which you can disable by either: enabling an option in the registry and opting in to long paths in your app's manifest file, or using the `\\?\` prefix before the path
[03:27:01] <FromDiscord> <gogolxdong (liuxiaodong)> so the news is cpp is going to be the default compile backend
[03:29:17] <FromDiscord> <Yardanico> no?
[03:29:22] <FromDiscord> <Yardanico> There's no such news
[03:29:56] <FromDiscord> <Yardanico> If you're watching that 0.20 video, it's quite outdated with latest Nim release being 1.4.8 and 1.6.0 coming soon
[03:31:18] <FromDiscord> <Yardanico> And C backend is still the default
[03:47:58] <FromDiscord> <gogolxdong (liuxiaodong)> @stefanbacon you can deploy contracts using https://github.com/status-im/nim-web3
[03:48:01] <nrds> <12R2D299> 4GitHub: 7"<No Description>"
[03:48:17] <FromDiscord> <gogolxdong (liuxiaodong)> and interact with contract
[03:52:17] <FromDiscord> <sheldon>  https://media.discordapp.net/attachments/371759389889003532/898002740221988884/message.txt
[05:44:14] <FromDiscord> <satyrn> what would be the nim equivalent of python `var[:num]`
[05:46:12] <FromDiscord> <satyrn> actually nvm ill probably just write a proc to do that
[05:46:34] <FromDiscord> <Rika> var[var.low..<num]
[05:47:17] <FromDiscord> <satyrn> oh ok thanks
[06:09:04] <FromDiscord> <satyrn> how would i do something like kwargs in nim
[06:09:49] <FromDiscord> <impbox [ftsf]> you can pass keyword arguments in nim
[06:10:30] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3BGp
[06:11:19] <FromDiscord> <satyrn> alright thanks
[06:11:50] <FromDiscord> <Rika> Variable keyword arguments not possible though, I believe
[06:12:22] <FromDiscord> <impbox [ftsf]> as in passing in a table of keyword arguments?
[06:12:45] <FromDiscord> <Rika> As in keyword arguments not existing on the explicit function signature
[06:12:50] <FromDiscord> <Rika> kwargs
[06:13:08] <FromDiscord> <Rika> Possible but with much pain
[06:13:19] <FromDiscord> <Rika> Make a macro if you really want it, and even then it’s a lot of work
[06:14:32] <FromDiscord> <satyrn> i just need to make it so i can have 3 mandatory args and 1 optional arg, and do different stuff in the proc if the optional arg isnt set
[06:16:22] <FromDiscord> <Rika> you can do that with overloading
[06:24:15] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3BGs
[06:36:01] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:38:51] *** Quits: asd (~noname@user/asd) (Ping timeout: 245 seconds)
[06:40:43] *** Joins: asd (~noname@user/asd)
[07:09:52] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:41:21] *** Quits: andinus (andinus@tilde.institute) (Remote host closed the connection)
[09:43:38] <FromDiscord> <codic> If you look at the original pascal sources of the compiler (<https://github.com/nim-lang/Nim/tree/ea1f1ec6d4d6c776eb0f81c2bebdd4cb4c817ebe/nim>)  you can really see just how much nim is like kinda a successor in the Pascal family, a lot of that stuff has rubbed off on modern Nim, I'm pretty sure most of that pascal should be readable to any nim programmer
[09:43:41] <FromDiscord> <codic> just found that interesting
[09:47:32] <FromDiscord> <impbox [ftsf]> oh wow
[09:48:22] <FromDiscord> <Elegantbeef> Yep it really feels/looks like a modern wirth language
[09:50:10] <FromDiscord> <impbox [ftsf]> i did a tiny bit of pascal in school i think, the only bit i remember was `:=`
[09:59:43] <NimEventer> New thread by Miran: Nim 1.6.0 RC3, see https://forum.nim-lang.org/t/8500
[10:06:57] <FromDiscord> <Kiloneie> When is type casting a good idea, or any good example of when type casting is useful ?
[10:07:14] <FromDiscord> <impbox [ftsf]> when you want to pretend one type is another
[10:08:01] <FromDiscord> <impbox [ftsf]> eg. I want to write some bytes to a file, but I have an object
[10:08:13] <FromDiscord> <impbox [ftsf]> I can cast it to an array of bytes
[10:09:10] <FromDiscord> <Kiloneie> so instead of extracting the fields, just cast it in there and the data is there right ?
[10:09:47] <FromDiscord> <Kiloneie> type casting it back would work right ?
[10:10:55] <FromDiscord> <Elegantbeef> Are we talking about `cast` or type conversions?
[10:12:18] <FromDiscord> <Kiloneie> cast, i haven't used it yet, and i gotta bundle it with a video since it's probably too short of a topic to just make a video on it's own on it(of course i wanna know first what their use cases with concrete examples)
[10:12:19] <FromDiscord> <impbox [ftsf]> think of cast as a "view" more so than a conversion
[10:12:41] <FromDiscord> <impbox [ftsf]> it's still pointing at the same memory, but treating it differently
[10:13:21] <FromDiscord> <Kiloneie> basically it's still the same data, bit pattern preserved, but you use it differently after the cast... yeh i okay i get it
[10:13:57] <FromDiscord> <Kiloneie> Any actual reasons where it is neccessary to use them though ? like with C or smthing ?
[10:14:35] <FromDiscord> <Elegantbeef> Well cast is typically reserved for low level operations, so if you're making a stream library you'd probably want to cast
[10:14:50] <FromDiscord> <impbox [ftsf]> interacting with C is a common case
[10:15:53] <FromDiscord> <Kiloneie> they are faster im assuming, especially your example of casting an object to a file into an array ?
[10:16:00] <FromDiscord> <Elegantbeef> The reason to use cast is you have data in a type that you know the layout/size and want it as a different type, it's purely a type system and is free
[10:16:20] <FromDiscord> <Kiloneie> okay thank you both
[10:16:34] <FromDiscord> <impbox [ftsf]> https://play.nim-lang.org/#ix=3BH0
[10:18:13] <FromDiscord> <Elegantbeef> A lovely contrived example here https://play.nim-lang.org/#ix=3BH1
[10:19:44] <FromDiscord> <Kiloneie> i think imma put this into a pointer video or after it
[10:19:58] <FromDiscord> <Kiloneie> haven't covered ptr besides in the SDL video
[10:20:02] <FromDiscord> <Kiloneie> a brief one
[10:20:15] <FromDiscord> <Elegantbeef> You had a video about references and didnt cover pointers?
[10:20:39] <FromDiscord> <Kiloneie> yep :P, i tried to cut it down to be as simple as possible
[10:20:46] <FromDiscord> <Kiloneie> i did talk about pointers as well
[10:20:47] <FromDiscord> <Kiloneie> some
[10:20:54] <FromDiscord> <Elegantbeef> But references are more complicated imo
[10:20:59] <FromDiscord> <Kiloneie> but the main topic was on references
[10:21:15] <FromDiscord> <Kiloneie> well references are safe though, pointers are not
[10:21:37] <FromDiscord> <Kiloneie> so if i teach someone to use references, they can't really memory leak etc
[10:21:42] <FromDiscord> <Kiloneie> but with pointers they can
[10:21:55] <FromDiscord> <impbox [ftsf]> much more dangerous things than leaking memory =)
[10:22:34] <FromDiscord> <Elegantbeef> Like using any of my code
[10:22:49] <FromDiscord> <Kiloneie> xD
[10:25:11] <NimEventer> New Nimble package! easy_sqlite3 - Yet another SQLite wrapper for Nim., see https://github.com/codehz/easy_sqlite3
[10:25:20] <FromDiscord> <Elegantbeef> Speaking of my code guess i should look at nicoscripter again \:P
[10:27:28] <FromDiscord> <impbox [ftsf]> mmm any ideas on what do next or at a loss?
[10:27:43] <FromDiscord> <Elegantbeef> Probably fix this
[10:27:44] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/898102255973179422/image.png
[10:34:10] <FromDiscord> <Elegantbeef> Dont know exactly what needs fixed, since fixing the os module doesnt make it work, so fun game of follow compiler logic until something make sense
[10:37:48] <NimEventer> New thread by Lachu: Ref.sizeof error?, see https://forum.nim-lang.org/t/8501
[10:38:44] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[10:41:21] *** Quits: asd (~noname@user/asd) (Ping timeout: 245 seconds)
[10:42:14] *** Joins: asd (~noname@user/asd)
[10:42:32] *** Joins: Vladar (~Vladar@46.162.2.53)
[10:50:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[10:50:53] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:59:15] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:21:56] <FromDiscord> <enthus1ast> ah true, i mistake this for split which has this feature
[11:23:09] <FromDiscord> <enthus1ast> would be a nice addition to replace imho
[11:36:54] <PMunch> @Yardanico, did you ever get any further with your sciter wrapping?
[11:37:18] <FromDiscord> <Yardanico> not sure what you mean, it's pretty low-level but as far as I can tell most stuff will already work
[11:37:27] <FromDiscord> <Yardanico> the "main" thing - bridging native functions to sciter side - works
[11:37:36] <FromDiscord> <Yardanico> also I updated it to the Sciter.JS yesterday
[11:37:44] <PMunch> You where trying to wrap it using Futhark, no?
[11:37:50] <PMunch> But ran into some issues
[11:38:00] <FromDiscord> <Yardanico> yeah, but I didn't go far sadly, it still doesn't like the headers
[11:38:11] <FromDiscord> <Yardanico> the problem with Sciter headers is that they have C++ code under cplusplus defines
[11:38:13] <FromDiscord> <Yardanico> or CPP11
[11:38:19] <PMunch> Do you have a sample?
[11:38:30] <PMunch> Those should be fine
[11:38:49] <PMunch> Futhark should handle those without any trouble
[11:39:46] <FromDiscord> <Yardanico> you can try to download https://github.com/c-smile/sciter-js-sdk/archive/refs/heads/main.zip (quite a big download), then go to `include` folder, and try to compile this sample:
[11:39:53] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3BHo
[11:40:22] <FromDiscord> <Yardanico> i mean if you want to check that it compiles
[11:40:31] <FromDiscord> <Yardanico> I compiled with `gcc -I/usr/include/gtk-3.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/atk-1.0 -I/usr/include/harfbuzz -Dchar16_t=uint16_t -lgtk-3 -lglib-2.0 -I/home/dian/Projects/nsciter/sdk/include -ldl sciter-gtk-main.c`
[11:40:38] <FromDiscord> <Yardanico> without makefiles, the hard way, just for quick testing
[11:41:57] <FromDiscord> <Yardanico> and yeah, by default now futhark errors out about 1mil VM iterations, after changing to 10mil it takes quite a while but then crashes with an assertion about length of hashset being changed while iterating over it
[11:42:12] <FromDiscord> <Yardanico> with
[11:42:20] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3BHq
[11:43:01] <FromDiscord> <Yardanico>  https://media.discordapp.net/attachments/371759389889003532/898121199379415050/unknown.png
[11:43:04] <FromDiscord> <Yardanico> the error is indeed pretty weird
[11:47:59] <FromDiscord> <Yardanico> also the json output from opir is 8.3 million chars long, so it's indeed pretty big :)
[11:48:43] <FromDiscord> <Yardanico> ok, I found where it errors in futhark code - line 543 `for name in state.used`
[11:48:56] <FromDiscord> <Yardanico> ahh right you're adding to the hashset while iterating over it
[11:50:21] <FromDiscord> <Yardanico> i'll try to use a temp hashset instead, will see how far that goes
[11:50:58] <FromDiscord> <Yardanico> now it's `error: Unknown kind in findAlias: {"kind":"invalid","value":"func_noproto?"}`
[11:51:48] <FromDiscord> <Yardanico> sent a code paste, see https://paste.rs/N0A
[11:52:09] <FromDiscord> <Yardanico> ill make a small pr
[11:53:16] <PMunch> Huh, curious that I've never run into that hashset error before
[11:53:30] <PMunch> And the func_noproto is simply something I haven't seen before
[11:53:36] <FromDiscord> <Yardanico> heh
[11:53:38] <PMunch> Very interesting
[11:53:44] <PMunch> I'll try to see if I can get it to work
[11:53:50] <FromDiscord> <Yardanico> there are 3 of those apparently https://media.discordapp.net/attachments/371759389889003532/898123925375025182/unknown.png
[11:54:00] <PMunch> And 8.3 million lines of Opir output, yikes
[11:54:18] <PMunch> Do you have a file and location for those objects?
[11:54:28] <FromDiscord> <Kiloneie> the default iterator is called items right ? foggy memory
[11:54:34] <FromDiscord> <Yardanico> not lines, but characters, yeah @PMunch
[11:54:42] <FromDiscord> <Yardanico> @Kiloneie if you mean the default iterator that's called when using `for`, yes
[11:54:49] <FromDiscord> <Yardanico> @PMunch yeah, opir has that info
[11:54:52] <FromDiscord> <Kiloneie> yes, thanks
[11:54:56] <PMunch> items is the default one, yes
[11:55:12] <PMunch> Oh characters, that's slightly better at least :P
[11:55:33] <FromDiscord> <Kiloneie> some of my videos i improvized more so i don't know what's in the video xD...
[11:55:42] <PMunch> Yeah I know Opir has that info, I was wondering if you could share them so I could have a look at the C that generated it
[11:56:16] <FromDiscord> <Yardanico> i think it shows that invalid thing for `typedef struct _ISciterAPI { a lot of stuff} ISciterAPI;`
[11:56:21] <FromDiscord> <Yardanico> one of func_noproto at least
[11:56:32] <FromDiscord> <Yardanico> sciter-x-api.h line 300
[11:56:53] <FromDiscord> <Yardanico> wait sorry that's the wrong one
[11:56:56] <PMunch> Hmm, that should be handled just fine
[11:56:58] <FromDiscord> <Yardanico> it's confused for `typedef ISciterAPI (SCAPI SciterAPI_ptr)();`
[11:57:01] <FromDiscord> <Yardanico> line 302
[11:57:10] <FromDiscord> <Yardanico> `{"kind":"typedef","file":"/home/dian/Projects/nsciter/sdk/include/sciter-x-api.h","position":{"column":29,"line":302},"name":"SciterAPI_ptr","type":{"kind":"invalid","value":"func_noproto?"}`
[11:58:05] <FromDiscord> <Yardanico> SCAPI is defined just as `#define SCAPI` on linux  and `#define SCAPI stdcall` on windows
[11:58:32] <PMunch> Man, the libclang documentation is so bad..
[11:59:40] <PMunch> https://kdevelop-devel.kde.narkive.com/pCHZr4QN/review-request-127027-add-support-for-cxtype-functionnoproto <- Seems like NoProto could possibly be handled the same way as Proto
[12:00:12] <FromDiscord> <Yardanico> i'll try to patch opir to do that
[12:00:35] <FromDiscord> <Yardanico> i mean it's a single line patch, but "I'll check if it works"
[12:03:23] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[12:04:09] <PMunch> Hmm, I'm unable to compile the C snippet you sent me
[12:04:10] *** Joins: max22- (~maxime@2a01cb0883359800f335681c9791beec.ipv6.abo.wanadoo.fr)
[12:04:16] <PMunch> Complains that SAPI is undefined
[12:05:36] <FromDiscord> <Yardanico> are you compiling with that gcc command? hmm
[12:05:44] <PMunch> Yup
[12:05:53] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[12:06:04] <PMunch> Oh wait..
[12:06:54] <FromDiscord> <Yardanico> oh yeah I fixed it before, lemme remember how I did that
[12:07:02] *** Joins: xet7 (~xet7@user/xet7)
[12:07:25] <PMunch> Yardanico, you seem to have an include for /home/dian/Projects/nsciter/sdk/include, which I obviously don't have on my machine
[12:07:41] <FromDiscord> <Yardanico> oh, well, I assumed you downloaded that sciter archive
[12:07:49] <FromDiscord> <Yardanico> that's the path to the include folder inside of it
[12:08:26] <PMunch> No it's not
[12:08:34] <PMunch> That's a path to nsciter
[12:08:40] <FromDiscord> <Yardanico> nsciter doesn't matter
[12:08:49] <FromDiscord> <Yardanico> I just unpacked the sciter sdk to sdk folder inside of nsciter folder :)
[12:09:08] <PMunch> Ah right
[12:09:30] <FromDiscord> <Yardanico> ahh right @PMunch I remember what I did to fix it, it seems a bug in sciter headers themselves
[12:09:47] <PMunch> Fixed it so it points to my include folder, still same issue
[12:09:48] <PMunch> Aha
[12:09:57] <FromDiscord> <Yardanico> on line 454 and 507 add `extern` before the `inline`
[12:10:04] <FromDiscord> <Yardanico> sciter-x-api.h
[12:10:05] <PMunch> Which file?
[12:10:08] <PMunch> Okay
[12:10:10] <FromDiscord> <Yardanico> need to PR that probably
[12:11:10] <PMunch> Right, managed to compile it now
[12:11:45] <FromDiscord> <Yardanico> yeah, all good, you don't need to run it to confirm that it works
[12:12:30] <PMunch> There's an annoying bug in the Discord bot by the way @dom96, whenever something gets turned into a paste the * character gets turned into a 
[12:12:46] <PMunch> ref.: https://play.nim-lang.org/#ix=3BHo
[12:12:58] <PMunch> Okay, so now to check if Futhark can do this
[12:13:33] <FromDiscord> <Yardanico> @PMunch that should be reported to me, not him :)
[12:14:09] <FromDiscord> <Yardanico> hmm, actually I'm not sure why it is doing that
[12:14:11] <PMunch> Oh really?
[12:14:21] <FromDiscord> <Yardanico> yeah, ircord is the bridge bot
[12:14:28] <PMunch> Ah right, you're maintaining that!
[12:14:58] <PMunch> I have no idea why it does that either, I'm guessing it's Discord turning it into that before it gets sent at all
[12:15:07] <PMunch> Like when you paste code into their GUI
[12:19:15] <PMunch> Hmm, I didn't get the hashSet issue
[12:19:54] <FromDiscord> <Yardanico> weird, are you on devel?
[12:20:29] <PMunch> Nope 1.4.8
[12:20:40] <FromDiscord> <Yardanico> oh yeah, that change was added in devel
[12:20:45] <PMunch> Right
[12:20:50] <FromDiscord> <Yardanico> https://github.com/nim-lang/Nim/issues/15767
[12:20:53] <FromDiscord> <Yardanico> https://github.com/nim-lang/Nim/pull/16959
[12:22:41] <FromDiscord> <Yardanico> ok got further, now futhark fails with `Error: unhandled exception: key not found: LPCWSTR`
[12:23:08] <PMunch> Yeah I got the same issue
[12:23:59] <FromDiscord> <Yardanico> maybe it's because LPCWSTR is defined as an alias to WCHAR ?
[12:24:21] <PMunch> Nope, that shouldn't be an issue
[12:25:00] <PMunch> It's probably because LPCWSTR wasn't marked as being used, so it's not included in the list of identifiers Futhark knows
[12:25:57] <PMunch> Ah
[12:26:30] <PMunch> Looking at the stack-trace you can see that LPCWSTR occurred as the return value of a procedure defined within a struct
[12:32:53] <PMunch> Hmm, if I re-raise an exception I seem to lose the original stack-trace..
[12:38:33] <PMunch> I just wanted to add some more context to an already existing exception..
[12:40:53] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 264 seconds)
[12:42:10] *** Joins: [R] (~rs@genoce.org)
[12:44:21] <PMunch> The actual error should be easy enough to fix though Yardanico. I'll ping you when I'm done, but first I need to get some lunch
[12:46:26] <FromDiscord> <Yardanico> yeah, no worries, it's not a big deal :)
[13:15:55] <FromDiscord> <Yardanico> seems like the creator of the  https://forum.nim-lang.org/t/8497 thread now basically replies "why you disagree that nim is python?" to everyone
[13:28:33] <FromDiscord> <dom96> I mean... why do you disagree? Nim is the closest to a compiled Python there is
[13:30:56] <FromDiscord> <Yardanico> the closest to compiled python is Cython :)
[13:31:10] <FromDiscord> <Rika> Nim is not Python, in the sense that Nim should not bend to what Python people want unless it’s a good design idea and it fits what Nim is supposed to be as decided by the designers
[13:31:14] <FromDiscord> <Yardanico> exactly
[13:33:42] <FromDiscord> <dom96> In reply to @Yardanico "the closest to compiled": Meh, Cython doesn't count 🙂
[13:33:47] <FromDiscord> <xflywind> Now cython supports type annotation, really nice to use
[13:35:10] <FromDiscord> <xflywind> it is
[13:35:20] <FromDiscord> <Rika> In reply to @dom96 "Meh, Cython doesn't count": Why would Nim count then
[13:35:21] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3BHO
[13:36:28] <FromDiscord> <dom96> Maybe you're right, but then why aren't I using Cython? It seems like a hack on top of Python not its own language
[13:36:47] <FromDiscord> <dom96> When I started using Nim I literally searched for a "compiled Python"
[13:38:54] <FromDiscord> <Rika> It is only coincidentally a “compiled Python”
[13:39:38] <FromDiscord> <dom96> no it isn't, the motto was something like "fast as C, expressive as Python, extensible as Lisp"
[13:39:49] <FromDiscord> <dom96> so the Python influence was very much intentional
[13:42:55] <FromDiscord> <Rika> Was the offside rule developed after the motto or before?
[13:44:12] <FromDiscord> <xflywind> In reply to @dom96 "I mean... why do": now a new language written in V (generate V codes) claiming they are more close(compatible) to Python.
[13:45:38] <FromDiscord> <xflywind> https://github.com/peregrine-lang/Peregrine/tree/main
[13:51:41] <FromDiscord> <xflywind> > Peregines syntax is very similar to Python's, and it gets trans-compiled to C, thus making it as fast as C.
[13:51:50] <FromDiscord> <dom96> In reply to @flywind "https://github.com/peregrine-lang/Peregrine/tree/ma": bleh https://github.com/peregrine-lang/Peregrine/blob/main/Peregrine/builtin.pe
[13:52:04] <FromDiscord> <dom96> `const str`? that's not Pythonic at all
[13:52:28] *** Joins: andinus (andinus@tilde.institute)
[13:52:52] <FromDiscord> <dom96> in any case, anything associated with V makes me suspicious.
[13:53:02] <FromDiscord> <Yardanico> In reply to @dom96 "`const str`? that's not": this language is not really working anyway, so nothing to compare with
[13:53:15] <FromDiscord> <Yardanico> i mean at this point in time
[13:53:23] <FromDiscord> <Yardanico> i think it was botted or something
[13:53:32] <FromDiscord> <Yardanico> 1.3k stars with literally _no_ actual working language
[13:53:42] <FromDiscord> <dom96> that's the V way
[13:53:47] <FromDiscord> <Yardanico> yess
[13:53:54] <FromDiscord> <xflywind> I'm curious why they can always get so many stars
[13:54:30] <FromDiscord> <xflywind> (edit) "I'm curious why they can always get so many stars ... " 03added "and attentions"
[13:54:35] <FromDiscord> <dom96> it's easy, just say you're doing something that most people want
[13:54:44] <FromDiscord> <dom96> people will star even if the repo is empty
[13:55:16] <FromDiscord> <Yardanico>  https://media.discordapp.net/attachments/371759389889003532/898154480657375252/unknown.png
[13:55:25] <FromDiscord> <xflywind> But people need to know the project first
[13:55:26] <FromDiscord> <dom96> sometimes you might even get millions of VC funding
[13:55:28] <FromDiscord> <dom96> see Theranos
[13:56:13] <FromDiscord> <Yardanico> XDD these comparisons https://media.discordapp.net/attachments/371759389889003532/898154719254556732/unknown.png
[13:56:27] <FromDiscord> <Yardanico> https://dev.to/saptakbhoumik/swallow-a-new-programming-language-with-python-like-syntax-but-as-fast-as-c-currently-under-devolopment-2of4
[13:56:33] <FromDiscord> <Yardanico> but yeah, this is more for #offtopic
[13:57:09] <FromDiscord> <xflywind> They wrote an advertising article and attracted many people to read and review it.
[13:58:07] <FromDiscord> <xflywind> Maybe Nim team can publish article for blogs/ to dev.to too.
[14:22:55] <PMunch> It's on-topic enough for this channel when no one is trying to get help :P
[14:23:08] <FromDiscord> <Yardanico> https://www.youtube.com/watch?v=d2VRuZo2pdA
[14:23:12] <FromDiscord> <Yardanico> reposted from offtopic as well
[14:23:20] <FromDiscord> <Yardanico> seems like no one posted it before
[14:23:32] <PMunch> Haven't seen that at all
[14:23:39] <PMunch> Or anyone mentioning it
[14:24:18] <FromDiscord> <Yardanico> it's by deech who's active in this discord server sometimes
[14:24:34] <PMunch> Yeah I was surprised I hadn't seen before
[14:24:58] <FromDiscord> <Rika> Oh nice
[14:25:08] <FromDiscord> <Yardanico> maybe it's time to create a fork of that nim youtube playlist and make a forum thread to publish all new nim videos :D
[14:25:12] <FromDiscord> <Yardanico> (manually of course, no bots)
[14:25:20] <FromDiscord> <Rika> How do you guys even write or make a presentation on these thing
[14:25:22] <FromDiscord> <Yardanico> well, not all, but the more serious ones like talk
[14:25:23] <FromDiscord> <Rika> Things
[14:25:37] <PMunch> What do you mean Rika?
[14:26:01] <FromDiscord> <Rika> I have difficulty writing about my projects, as in, what is there to write about exactly
[14:26:11] <FromDiscord> <xflywind> In reply to @Yardanico "maybe it's time to": forum thread cannot attract new users 😜
[14:26:21] <FromDiscord> <Yardanico> that's not about new users, it's about existing users :)
[14:26:24] <FromDiscord> <Rika> In reply to @flywind "forum thread cannot attract": Repost on HN
[14:26:49] <PMunch> @Rika, I just imagine myself explaining the project to someone. Formulating why it's a good idea, what it achieves, and how it compares to other things
[14:27:01] <PMunch> Once you've done it a couple of times its almost automatic :P
[14:27:07] <FromDiscord> <Yardanico> @dom96 what do you think about making a new forum thread for posting new nim videos/talks/etc from youtube or other websites?
[14:27:10] <FromDiscord> <Yardanico> idk if it's a good idea to do
[14:27:37] <PMunch> Oops, gotta run to a meeting..
[14:27:56] <FromDiscord> <Yardanico> hmm, yeah, on the forum it'll be a bit uncomfortable since we don't have threads that only the creator or moderator can write in
[14:40:35] <FromDiscord> <Yardanico> started adding some vids to https://www.youtube.com/playlist?list=PLnthTbhS8ZO9_X9XQOX9-zhg3AIOsmfpU , i think I won't be adding nim tutorial videos
[14:40:38] <FromDiscord> <Yardanico> only talks and similar stuff
[14:44:32] <FromDiscord> <Yardanico> but sometimes it's hard to differentiate between a talk and a tutorial :)
[14:45:20] <FromDiscord> <xflywind> https://piped.kavin.rocks/watch?v=WdL-doqxXyo
[14:45:49] <FromDiscord> <xflywind> I encounter this video yesterday
[14:45:51] <FromDiscord> <Yardanico> https://www.youtube.com/watch?v=WdL-doqxXyo
[14:46:01] <FromDiscord> <Yardanico> ah it's a invidio.us instance
[14:46:06] <FromDiscord> <Yardanico> I thought it was peertube or something
[14:46:15] <FromDiscord> <Yardanico> thanks for the link
[14:51:44] <FromDiscord> <Yardanico> already 52 videos (around half are nimconf)
[15:15:25] *** Quits: max22- (~maxime@2a01cb0883359800f335681c9791beec.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[15:26:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[15:29:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:11:32] <PMunch> @Yardanico, I was right about the Futhark issue. Got that fixed, but now I've gotten another bug which will need some tweaking.. They have defined an alias for "void" which breaks a couple things in interesting ways
[16:12:51] <FromDiscord> <Yardanico> interesting, thanks for fixing it! you don't have to rush though :)
[16:13:06] <PMunch> I'm not rushing :P
[16:13:34] <PMunch> These are fairly simple fixes, I just hadn't come across the usecases before :P
[16:14:27] *** Joins: rockcavera (~rc@192.12.113.67)
[16:14:27] *** Quits: rockcavera (~rc@192.12.113.67) (Changing host)
[16:14:27] *** Joins: rockcavera (~rc@user/rockcavera)
[16:16:09] *** Parts: jfinkhaeuser (~jfinkhaeu@user/jfinkhaeuser) ()
[16:31:59] *** Joins: arkurious (~arkurious@user/arkurious)
[16:48:38] <FromDiscord> <dom96> In reply to @Yardanico "<@!132595483838251008> what do you": Think bigger: a section on the nim-lang.org front page showcasing the videos would be awesome 🙂
[16:50:06] <FromDiscord> <konsumlamm> we can go even bigger and say that Nim has a zero-cost (WIP) garbage collector
[16:50:15] <FromDiscord> <konsumlamm> and no (WIP) bugs
[16:50:43] <FromDiscord> <konsumlamm> the sad thing is, it would probably work
[16:50:57] *** Joins: max22- (~maxime@2a01cb0883359800f362ea56be7f8960.ipv6.abo.wanadoo.fr)
[16:54:37] <FromDiscord> <dom96> What I think would work is to create an alternate persona for Nim. Set up a fancy marketing page for a programming language that is fast, expressive, etc etc. Then at the end redirect people to the Nim repo 😛
[16:55:21] <FromDiscord> <konsumlamm> that sounds pretty funny
[16:56:02] <FromDiscord> <haxscramper> Best-in-class metaprogramming, effortless zero-cost abstractions
[16:56:06] <FromDiscord> <haxscramper> Well, we don't really need to even add WIP things
[16:56:38] <FromDiscord> <haxscramper> Of course, average joe schmoe "case insensetivity is bad" is going to be offended at everything anyway
[16:57:18] <FromDiscord> <haxscramper> what else
[16:58:16] <FromDiscord> <haxscramper> There was an article on HN where some person complained about ... nothing specific I guess, but one of the things they mentioned was reliance of language users on compiler developers to implement very basic stuff
[16:58:33] <FromDiscord> <haxscramper> We can probably play around this somehow as well
[16:58:55] <FromDiscord> <everyon> In reply to @haxscramper "Best-in-class metaprogramming, effortless zero-cost": The richest collection of libraries
[16:59:03] <FromDiscord> <everyon> (you can use C libraries)
[16:59:14] <FromDiscord> <haxscramper> also C++ and JS
[16:59:16] <FromDiscord> <haxscramper> yeah
[17:00:54] <FromDiscord> <Rika> `reliance of language users on compiler developers to implement very basic stuff` ???
[17:00:58] <FromDiscord> <Rika> what?
[17:02:59] <FromDiscord> <haxscramper> You need random feature X
[17:03:13] <FromDiscord> <haxscramper> that nobody else needs, but you think it is super important
[17:03:16] <FromDiscord> <Rika> .... i still dont get it
[17:03:19] <FromDiscord> <haxscramper> some random-ass syntax sugar
[17:03:36] <FromDiscord> <haxscramper> The only option in 99% of the languages is to wait for compiler devs to implement it
[17:03:39] <FromDiscord> <Rika> oh this isnt a criticism of nim
[17:03:54] <FromDiscord> <haxscramper> they don't have a macro system good enough anyway
[17:04:05] <FromDiscord> <haxscramper> in nim you can do this by writing a macro, most of the time
[17:04:26] <FromDiscord> <haxscramper> of course we have unspecified typed AST and other things, but overall this is still better compared to the other languages
[17:06:52] <FromDiscord> <konsumlamm> "best-in-class metaprogramming" is gonna provoke some lispers
[17:07:18] <FromDiscord> <haxscramper> flamebait is good
[17:07:24] <FromDiscord> <haxscramper> flamebaits create attention, discussion
[17:07:38] <FromDiscord> <haxscramper> and to be honest I think we can prove this
[17:07:58] <FromDiscord> <haxscramper> well, except someone brings reader macros, but those are kind of useless
[17:08:04] <FromDiscord> <konsumlamm> (most?) lisps don't have typed macros though, tbf
[17:08:27] <FromDiscord> <Rika> reader macros would be cool though
[17:08:30] <FromDiscord> <Kiloneie> I need a NON video series video on Nim, with a catchy title, my current ones just get traffic from people already using Nim mostly.
[17:08:42] <FromDiscord> <Rika> though yeah it would be useless technically
[17:10:25] <FromDiscord> <Kiloneie> im trying to get a udemy course up, though their bulk uploader is buggy, last i tried it got stuck at 99%, now my internet is 40 mbit, was 100 mbit for upload so this will take a while.
[17:44:28] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[17:50:46] <FromDiscord> <haxscramper> nanim project is just so good
[17:50:48] <FromDiscord> <haxscramper> things just work
[17:51:45] <FromDiscord> <haxscramper> Maybe it does not have a thousand man-hours put in the development of some obscure arrangement algorithms, but not a lot of people would end up using them anyway
[17:51:49] <FromDiscord> <haxscramper> I'm talking about https://forum.nim-lang.org/t/8499
[17:52:10] <FromDiscord> <haxscramper> fuck facebook though
[17:52:39] <FromDiscord> <haxscramper> facebook/instagram shit. Can't even scroll to the end to see all animations
[17:55:22] <FromDiscord> <dom96> maybe we should try submitting that thread to HN
[17:57:24] <FromDiscord> <reilly> Getting this g++ compiler error with Nim-generated C++ code: `/Users/reillymoore/Documents/Repos/nanolab-gui/gui/.nimcache/@mgui.nim.cpp:241:12: error: flexible array member 'Data' of type 'ImGuiTable []' with non-trivial destruction`↵I have no idea how to make this go away.
[17:57:59] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3BJb
[17:58:13] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[17:58:21] <FromDiscord> <reilly> The command being run is: https://hastebin.com/oveyafativ.apache
[18:00:53] <FromDiscord> <reilly> I don't even know where to begin with this one...
[18:04:05] *** Joins: rockcavera (~rc@192.12.113.67)
[18:04:05] *** Quits: rockcavera (~rc@192.12.113.67) (Changing host)
[18:04:05] *** Joins: rockcavera (~rc@user/rockcavera)
[18:08:00] <FromDiscord> <haxscramper> You might need to look into what non-trivial destructor is, to begin with. But my guess is that nim generated code that C++ does not allow
[18:08:11] <FromDiscord> <haxscramper> Well, that much you have figured out yourself probably
[18:08:42] <FromDiscord> <haxscramper> But it sounds like some absolutely cursed Cxx trick that was used just in this library
[18:10:27] <FromDiscord> <reilly> In reply to @haxscramper "But it sounds like": Well, it's just ImGui...
[18:12:27] <FromDiscord> <Kiloneie> I can't get more than a single video onto Udemy, using their bulk uploader picking 1 or more files it will upload, say it uploaded successfully, but there isn't any video anywhere, switching between settings... nothing... -.- Shiete site
[18:13:55] <FromDiscord> <haxscramper> Last person who honestly believed that he is working with "just " now works only if fire extinguisher is present, in fear or computer spontaneously catching fire
[18:16:05] <FromDiscord> <haxscramper> Can you show generated cxx code around this part maybe?
[18:16:37] <FromDiscord> <haxscramper> Or if this is easy to reproduce I might try to look at it now
[18:21:06] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3BJl
[18:21:23] <FromDiscord> <reilly> (edit) "https://play.nim-lang.org/#ix=3BJl" => "https://play.nim-lang.org/#ix=3BJm"
[18:32:52] <FromDiscord> <haxscramper> well https://github.com/status-im/nimbus-eth1/issues/2
[18:34:14] <FromDiscord> <haxscramper> and https://github.com/nimgl/nimgl/issues/38
[18:34:56] <FromDiscord> <haxscramper> tldri `#define SEQ_DECL_SIZE` in nimbase.h leads to `ImGuiTable Data[];` which is not allowed due to `ImGuiTable` destructor
[18:35:39] <FromDiscord> <haxscramper> Why nim sequence uses flexible array instead of actual pointer is something I don't really know
[18:35:51] <FromDiscord> <haxscramper> I mean, `size + capacity + pointer-to-start`
[18:35:52] <FromDiscord> <haxscramper> done
[18:36:02] <FromDiscord> <haxscramper> and no, it seems like this is not fixable
[18:36:36] <FromDiscord> <reilly> Well, yay, at least it's not just a me problem. I'm compiling and linking everything manually, so it's definitely a relief knowing that it's not a problem with that.
[18:39:04] <FromDiscord> <reilly> Could I just... Edit nimbase.h, or is that a bad idea?
[18:39:39] <FromDiscord> <Ricky Spanish> sent a code paste, see https://play.nim-lang.org/#ix=3BJH
[18:39:44] <FromDiscord> <haxscramper> No, you would have to edit codegen for sequence type
[18:40:12] <FromDiscord> <haxscramper> Because it still generates code using seq decl size https://github.com/nim-lang/Nim/search?q=SEQ_DECL_SIZE
[18:41:11] *** Quits: robertmeta_ (sid514@2a03:5180:f:5::202) ()
[18:41:27] *** Joins: robertmeta_ (sid514@id-514.uxbridge.irccloud.com)
[18:41:50] <FromDiscord> <haxscramper> Try running code with `{.passc:"-v".}` to see include paths passed to the C compiler↵(@Ricky Spanish)
[18:42:15] *** robertmeta_ is now known as robertmeta
[18:43:40] *** Quits: robertmeta (sid514@id-514.uxbridge.irccloud.com) (Changing host)
[18:43:40] *** Joins: robertmeta (sid514@user/robertmeta)
[18:45:08] <FromDiscord> <demotomohiro> stdio.h and string.h are standard C library headers.
[18:46:58] <FromDiscord> <demotomohiro> I don't know much about clang but these files should be installed when you install C compiler.
[18:50:18] <FromDiscord> <reilly> In reply to @haxscramper "and no, it seems": Could I just replace the type definitions in the generated C++ with constants instead of SEQ_DECL_SIZE?
[18:51:37] <FromDiscord> <reilly> Cause, I have to make this work. I am not doing this just for fun.
[18:52:05] <FromDiscord> <reilly> This may be the last hurdle I need to solve to get it working.
[18:53:42] <FromDiscord> <haxscramper> you need to have a `seq[T]` of things, correct?
[18:53:50] <FromDiscord> <haxscramper> or this is something other than that
[18:54:04] <FromDiscord> <haxscramper> you can, technically just write definition manually
[18:54:19] <FromDiscord> <haxscramper> and then `importcpp`, I think
[18:54:38] <FromDiscord> <haxscramper> not enough italic, it this does not really show how uncertain I am
[18:54:53] <FromDiscord> <haxscramper> like, what is the end goal
[18:58:15] <FromDiscord> <reilly> The end goal is to use ImGui extensions with NimGL's ImGui.↵- I can't use the C backend because the extensions are written in C++.↵- I have to compile and link everything manually (nakefile) because the Nim compiler on its own erroneously uses the `-std:g++14` flag when compiling Objective-C, which ObjC does not support and causes compilation to fail.↵- It's trying to compile ObjC because I'm on MacOS, and it needs the Cocoa librarie
[18:58:18] <FromDiscord> <haxscramper> also need minized example
[18:58:31] <FromDiscord> <Ricky Spanish> ok its mac being a nightmare, i suddenly dont have /usr/local/include  which is where the compiler is looking for string.h, but when i use clang i can actually import string.h from another directory -.-
[18:58:40] <FromDiscord> <Ricky Spanish> thanks @haxscramper
[19:00:18] <FromDiscord> <reilly> I'm not really sure I can give you a minimal example, since it's kind of a convoluted setup...
[19:03:56] <FromDiscord> <reilly> I don't know what ImGuiTable or any of those other types are. I don't know what the objects they're being nested in are. All I know is that SEQ_DECL_SIZE is preventing it from compiling, and I want the problem to go away.
[19:04:09] <FromDiscord> <haxscramper> no, this does not work
[19:04:23] <FromDiscord> <haxscramper> fuck, why does cxx backend inherit from generic seq
[19:04:29] <FromDiscord> <haxscramper> And C puts all fields inside
[19:04:36] <FromDiscord> <haxscramper> I wanted to make like
[19:04:47] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3BJM
[19:04:51] <FromDiscord> <haxscramper> This is a valid nim
[19:04:54] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3BJN
[19:05:27] <FromDiscord> <haxscramper> but this is not valid cxx because I can't add to sequence size
[19:05:56] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3BJO
[19:07:04] <FromDiscord> <haxscramper> @reilly)
[19:07:17] <FromDiscord> <haxscramper> SEQ\_DECL\_SIZE itself is not preventing anything from compiling
[19:07:33] <FromDiscord> <haxscramper> I it is a `ImGuiTable Data[]` being used instead of `ImGuiTable Data`
[19:07:51] <FromDiscord> <reilly> You're right, poor phrasing.
[19:08:02] <FromDiscord> <haxscramper> and that one I don't think can be fixed in a sane manner, or you need someone from #internals to look at this
[19:10:56] <FromDiscord> <reilly> In reply to @haxscramper "I it is a": Surely it can't be as simple as rewriting `ImGuiTable Data[SEQ_DECL_SIZE]` as `ImGuiTable Data`, right?
[19:11:25] <FromDiscord> <haxscramper> That would've worked
[19:11:37] <FromDiscord> <haxscramper> `  ImSeq {.importcpp, header: "flexible_array.hpp".} = seq[ImGuiTable]` is basically all you need to define your own sequence
[19:11:43] <FromDiscord> <haxscramper> on C backed
[19:11:49] <FromDiscord> <haxscramper> cxx backend works differently
[19:11:59] <FromDiscord> <haxscramper> well, let me try to be completely sure
[19:23:24] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3BJU
[19:23:55] <FromDiscord> <haxscramper> Well, it fully compiles, but still crashes because `newSeqRC1` does not create a valid sequence (does not polulate `.data` with anything
[19:24:33] <FromDiscord> <haxscramper> I don't know how `N_LIB_PRIVATE N_NIMCALL(void, newSeqRC1)(TNimType typ, NI len) {` is supposed to function nor what `TNimType` really is
[19:25:31] <FromDiscord> <reilly> This definitely seems to me like something for #internals, because we're really getting down to the nitty-gritty now.
[19:25:48] <FromDiscord> <reilly> Man, I just wish I could `.replace()` something and have it work...
[19:38:51] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Quit: Bridge terminating on SIGTERM)
[19:38:55] *** Quits: Theodore[m] (~h4n1virus@2001:470:69fc:105::f391) (Quit: Bridge terminating on SIGTERM)
[19:42:34] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[19:53:58] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[19:54:10] *** Joins: Theodore[m] (~h4n1virus@2001:470:69fc:105::f391)
[20:23:43] <FromDiscord> <haxscramper> @reilly
[20:23:58] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3BKi
[20:24:03] <FromDiscord> <haxscramper> `@[(field: 0), (field: 0), (field: 0), (field: 12)]`
[20:24:05] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3BKj
[20:24:20] <FromDiscord> <haxscramper> I still don't know how to replicate nontrivial destructor
[20:24:38] <FromDiscord> <haxscramper> but this POS works at least
[20:25:09] <FromDiscord> <haxscramper> so you can substitute nim sequence with this contraption and still trick nim into thinking it is a valid `seq[T]`
[20:25:31] <FromDiscord> <haxscramper> I would be very careful around generics though
[20:32:19] <FromDiscord> <reilly> I've just set the array size to 1, and unbelievably, it fucking works.
[20:32:49] <FromDiscord> <reilly> By "set," I mean I'm `.replace()`ing on the generated C++ code. And it works.
[20:33:22] <FromDiscord> <haxscramper> you can try and subtitute `nimbase.h` with your own then
[20:33:38] <FromDiscord> <haxscramper> where `SEQ_DECL_SIZE` is defined to be `1`
[20:35:16] <FromDiscord> <reilly> I'd honestly rather leave nimbase.h alone. I just need a workaround for this one thing.
[20:38:06] <FromDiscord> <Hamid Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3BKq
[20:39:33] <FromDiscord> <Hamid Bluri> it's just a macro that converts `route(...) as <NAME>: <PROC>` to `Table[<NAME>, <PROC>]`
[20:41:06] <FromDiscord> <Hamid Bluri> 😄 i just forgot to add `async` to type def in `Table[string, proc()]`
[20:42:12] <FromDiscord> <Hamid Bluri> but it should gave me a reasonable error
[20:51:50] <FromDiscord> <reilly> In reply to @hamidb80 "but it should gave": 🥲
[20:52:24] <FromDiscord> <reilly> Giving reasonably errors is not something that Nim likes to do, just in general.
[21:26:58] *** Joins: Guest98 (~Guest98@136.244.100.23)
[21:27:54] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Ping timeout: 265 seconds)
[21:31:25] <NimEventer> New thread by Orlean: Is there more simple way to solve this task?, see https://forum.nim-lang.org/t/8502
[21:32:21] *** Quits: Guest98 (~Guest98@136.244.100.23) (Quit: Client closed)
[21:50:48] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3BKK
[21:54:47] <FromDiscord> <exelotl> weird, mine looks just like that and doesn't have any problem 🤔
[21:55:16] <FromDiscord> <exelotl> https://github.com/exelotl/natu/blob/devel/tools/templates/backgrounds.c.template
[21:56:58] <NimEventer> New post on r/nim by Pcarbonn: Nim to write Python modules ? What about memory management ?, see https://reddit.com/r/nim/comments/q85mih/nim_to_write_python_modules_what_about_memory/
[21:59:23] <FromDiscord> <haxscramper> I swear if I see nim and python in one sentence one more time today
[21:59:56] <FromDiscord> <konradmb> nim python nim python nim python nim python nim python nim python 😁
[22:00:58] <FromDiscord> <haxscramper> Well, not like we can change the public perception of this anyway, so most likely it would be an eternal curse of nim - random people would come in numbers to complain about nim not actually being a python
[22:02:44] <FromDiscord> <konradmb> no ; or {} - neuron activation - "Hey, that's Python!"
[22:02:54] <FromDiscord> <haxscramper> I know this particular one does not complain about it
[22:05:12] <FromDiscord> <haxscramper> I think there is a number of python RFCs like https://www.python.org/dev/peps/pep-0636/ https://www.python.org/dev/peps/pep-0638/ and features (like type annotations) that would allow us to argue that it is actually python is trying to be closer to nim
[22:05:21] <FromDiscord> <konradmb> Well, from what I see it's the only popular one with this kind of syntax
[22:06:03] <FromDiscord> <haxscramper> indentation + `:` for block delimiting is not really common, so similarity does really force people to jump to conclusions sometimes
[22:07:08] <FromDiscord> <konradmb> yeah, that's what I mean + Pascal or Lua has those begin/end, so they're not similar to Python
[22:08:43] <FromDiscord> <haxscramper> I think we should put mention of the C++ somewhere as well, considering it had certain degree of influence
[22:08:52] <FromDiscord> <haxscramper> But this would most likely just scare people away
[22:09:16] <FromDiscord> <haxscramper> Just like LISP thing I guess
[22:11:49] <FromDiscord> <konradmb> I see more of C than C++, but it's like saying that Nim is influenced by assembler, because it has multiplication
[22:12:44] <FromDiscord> <haxscramper> Nim generic system is very C++-like
[22:13:58] <FromDiscord> <haxscramper> But of course there is much more C in nim than `++` part
[22:14:15] <FromDiscord> <geekrelief> In reply to @exelotl "https://github.com/exelotl/natu/blob/devel/tools/te": maybe because I'm trying this from nimble?
[22:15:44] <FromDiscord> <konradmb> C# has <T>, so similar 🙃   you are doing the same thing that you frowned upon lately 😀
[22:16:58] <FromDiscord> <haxscramper> I also mean parametrization of generic types/procedures with value-as-a-type
[22:17:07] <FromDiscord> <haxscramper> `static[int]` as a generic parameter
[22:17:47] <FromDiscord> <haxscramper> `<T>` is not really hard to find, but static parametrization is less frequent
[22:18:03] <FromDiscord> <konradmb> you mean like System.Collections.Generic.List<T>?
[22:18:05] <FromDiscord> <haxscramper> for example rust only got it this year and it was "the big thing" IIRC
[22:19:48] <FromDiscord> <haxscramper> No, I mean `type Image[W, H: static[int]]` to move part of the image type properties at compile-time with zero overhead
[22:21:38] <FromDiscord> <konradmb> hmm, then I don't know if that's possible in C#
[22:21:54] <FromDiscord> <konradmb> but you are doing the same thing that you hate
[22:21:54] <FromDiscord> <haxscramper> Thankfully nim does not adopt ALL C++ features, like SFINAE
[22:22:18] <FromDiscord> <konradmb> "I swear if I see nim and C++ in one sentence one more time today" 😀
[22:23:05] <FromDiscord> <haxscramper> I don't hate the thing, I hate thundering crowds repeating the same basic nonsense
[22:23:18] <FromDiscord> <konradmb> but it's not nonsense
[22:23:47] <FromDiscord> <konradmb> because Python has the same syntax as Nim and it is the most popular languages some months - the comparison is bound to happen
[22:24:51] <FromDiscord> <konradmb> and it is right because you see many languages with ; and {} but only one with : and <space> during your typical IT career
[22:25:04] <FromDiscord> <haxscramper> yes, and usually very first thing this comparison leads to discussions about how to make nim more python-like
[22:25:28] <FromDiscord> <haxscramper> Like style insensetivity being bad for people coming from python, or lack of list comprehensions
[22:25:34] <FromDiscord> <haxscramper> this is not a singular case
[22:26:14] <FromDiscord> <haxscramper> They are similar enough so people not only consider moving from one another, but also want to turn one into another
[22:26:40] <FromDiscord> <haxscramper> This is bound to happen to any newcomer from any language, but python has very large community
[22:26:48] <FromDiscord> <haxscramper> And very high syntactic similarity
[22:27:06] <FromDiscord> <haxscramper> So it amplifies the annoyance
[22:27:11] <FromDiscord> <konradmb> hmmm theres something in it
[22:27:31] <FromDiscord> <konradmb> but then you can send them to https://github.com/juancarlospaco/cpython XD
[22:28:20] <FromDiscord> <ErikW> In reply to @haxscramper "nanim project is just": Hey thanks 🙂 I've spent a lot of time in both linux on debian, Windows 10 nad my Mac to make sure it works everywhere
[22:28:56] <FromDiscord> <ErikW> In reply to @haxscramper "facebook/instagram shit. Can't even": Yeah it's pretty shitty xD
[22:30:26] <FromDiscord> <haxscramper> But generally speaking, yes, you are partially correct and could say I'm doing the same thing I hate, but just with smaller footrpint. There are seveal RFCs that could be attributed to the same line of thought I mentioned - https://github.com/nim-lang/RFCs/issues/362, https://github.com/nim-lang/RFCs/issues/252 (because cxx allows inti)
[22:30:53] <FromDiscord> <haxscramper> https://github.com/nim-lang/RFCs/issues/245 because everyone else has pattern matching
[22:31:48] <FromDiscord> <konradmb> In reply to @haxscramper "Like style insensetivity being": list comprehensions are sooooo complicated that nim-way™ is just better, but it requires a change of thinking
[22:32:11] <FromDiscord> <konradmb> the same for case insensitivity and module imports
[22:34:11] <FromDiscord> <haxscramper> Also, we need to remember that syntactic nitpicks cause largest discussions, period
[22:34:28] <FromDiscord> <konradmb> but the advantage of nim in the case of RFCs you mentioned are that it could(?) be implemented with macro - something that would be impossible in other languages
[22:34:45] <FromDiscord> <haxscramper> 252 is not implementable with macros
[22:34:55] <FromDiscord> <haxscramper> 245 is implemented in macos, by me
[22:35:28] <FromDiscord> <haxscramper> 362 is partially impelementable using std/typetraits and tuple unpacking, but this solution is extremely ugly
[22:35:37] <FromDiscord> <haxscramper> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/898285257319665664): 245 is implemented in macros, by me
[22:37:37] <FromDiscord> <konradmb> I've only glanced, but wouldn't 252 be possible with macro creating fake proc accessor that inits it on first access?
[22:40:45] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3BKY
[22:41:17] <FromDiscord> <haxscramper> Sometimes `nimZeroMem` might really mess up the default state of the imported class
[22:41:44] <FromDiscord> <haxscramper> I can already deal with non-defaultable types via `{.requiresinit.}`, but that is just an intermediate step
[22:42:01] <FromDiscord> <konradmb> ok, I see
[22:47:15] <FromDiscord> <konradmb> hey, so it's not "other language has it, so I want it in nim", but it has a real use-case consistent with nim-way ™️
[22:54:11] <FromDiscord> <exelotl> In reply to @geekrelief "maybe because I'm trying": so it's attempting to use the filter in a nimscript environment?
[22:55:15] <FromDiscord> <geekrelief> Yeah, I ended creating a separate generator file instead of trying to do it from nimble/nimscript.
[22:55:23] <FromDiscord> <geekrelief> (edit) "Yeah, I ended ... creating" 03added "up"
[22:55:50] <FromDiscord> <exelotl> ah, yeah I've been there before x)
[22:55:51] <FromDiscord> <geekrelief> But I just avoid the emit and returned a string to write out
[22:55:58] <FromDiscord> <geekrelief> (edit) "avoid" => "avoided"
[22:59:56] <FromDiscord> <tandy> is anyone here familiar with xml? how can i parse a list as a seq?
[23:19:51] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[23:21:17] <FromDiscord> <exelotl> In reply to @geekrelief "Yeah, I ended up": I really wanted to have config files written in nimscript for my game's assets. The config data needed to be read by a tool that converts images, generates C code etc. Running nimscript from the tool turned out bad because the startup time for `nim e` was too long (I think there were other issues too but don't remember). I ended up having nimscript write out TSV files before invoking the tool.
[23:22:03] <nrds> <06Prestige99> tandy: https://nim-lang.org/docs/parsexml.html
[23:22:06] <FromDiscord> <exelotl> This turned out great because TSV is easy to generate and parse with no dependencies, and the whole process is super fast - if there are no new assets to convert, I don't even notice that the tool ran at all.
[23:23:07] <FromDiscord> <geekrelief> In reply to @exelotl "I really wanted to": How do you have nimscript write out files?  I didn't see a proc for that in  https://nim-lang.github.io/Nim/nimscript.html
[23:23:31] <FromDiscord> <geekrelief> I thought opening files was prevented because it's an importc thing
[23:24:05] <FromDiscord> <exelotl> you can `import os` - not all the functions are available (most annoyingly there's no time functions) but writeFile does work
[23:25:36] <FromDiscord> <geekrelief> ok thanks for the tip.  hmm I think I still need to create a separate nim file to generate my plugin scaffolding because I can't seem to use `include` in nimscript with source code filters.
[23:26:23] <FromDiscord> <geekrelief> I'll try fiddling with it a little more.
[23:34:06] <FromDiscord> <tandy> hmm↵(<@709044657232936960_nrds=5b=49=52=43=5d>)
[23:34:08] <FromDiscord> <geekrelief> @exelotl huh 😄 that worked! So `writeFile` works but `open(path, fmWrite)` doesn't
[23:34:11] <FromDiscord> <tandy> how does this work?
[23:34:24] <FromDiscord> <tandy> the code im using atm uses this but also xmltree
[23:34:34] <FromDiscord> <tandy> and xmltree doesnt output seqs
[23:37:21] <FromDiscord> <tandy> oh i need to use findAll from xmltree
[23:42:08] *** Joins: neurocyte0132889 (~neurocyte@213.188.113.91)
[23:42:08] *** Quits: neurocyte0132889 (~neurocyte@213.188.113.91) (Changing host)
[23:42:08] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:46:12] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[23:46:50] <Mister_Magister> tfw you see project name nimble and files with name nimble and nim and turns out its not nim-lang
[23:47:03] <Mister_Magister> Apache NimBLE is an open-source Bluetooth 5.1 stack (both Host & Controller) that completely replaces the proprietary SoftDevice on Nordic chipsets. It is part of Apache Mynewt project.
