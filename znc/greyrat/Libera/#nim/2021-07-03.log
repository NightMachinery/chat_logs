[00:29:14] <FromDiscord> <Ayy Lmao> @haxscramper For whatever reason, I am getting `Error: undeclared identifier: 'SslError'` when trying to import `hnimast/compiler_aux`
[00:29:41] <FromDiscord> <haxscramper> `-d:ssl`
[00:30:04] <FromDiscord> <haxscramper> I need to finally fix this, it happens because I depend on nimble
[00:30:09] <FromDiscord> <haxscramper> Whoch requires this
[00:30:18] <FromDiscord> <haxscramper> (edit) "Whoch" => "Which"
[00:30:38] <FromDiscord> <Ayy Lmao> I've been trying `nimble run -d:ssl` and I still get the error
[00:32:31] <FromDiscord> <haxscramper> Seems like nimble incorrectly passes this to the compiler or something like that
[00:32:45] <FromDiscord> <haxscramper> Well, the ide is that you need to define 'ssl'
[00:32:55] <FromDiscord> <Ayy Lmao> I put a config.nims file with `switch("define", "ssl=true")` and it seems to work
[00:33:10] <FromDiscord> <haxscramper> Yes, that is a solution
[00:43:40] <FromDiscord> <konsumlamm> In reply to @haxscramper "Seems like nimble incorrectly": that's intentional
[00:44:07] <FromDiscord> <konsumlamm> In reply to @Ayy Lmao "I've been trying `nimble": `nimble run -- -d:ssl` should work as well
[00:44:38] <FromDiscord> <konsumlamm> `--` is for separating nimble args from compiler args
[00:44:45] <FromDiscord> <haxscramper> In reply to @konsumlamm "that's intentional": Intentional how?
[00:44:48] <FromDiscord> <dom96> `nimble -d:ssl run` might work too
[00:45:07] <FromDiscord> <haxscramper> In reply to @konsumlamm "`--` is for separating": Then it should error our on incorrect -d passed
[00:45:14] <FromDiscord> <dom96> after run it passes args to the executable it's running
[00:45:20] <FromDiscord> <dom96> (edit) "run" => "`run`"
[00:46:18] <FromDiscord> <konsumlamm> see also https://github.com/nim-lang/nimble/pull/896
[00:47:36] <FromDiscord> <dom96> unfortunately I think we might need to rethink: https://github.com/nim-lang/nimble/issues/923
[00:47:56] <FromDiscord> <konsumlamm> wait nvm
[00:48:02] <FromDiscord> <konsumlamm> i got it wrong
[00:48:18] <FromDiscord> <konsumlamm> the part after -- is for program arguments, not for compiler arguments
[00:48:32] <FromDiscord> <dom96> but personally I just use `nimble c -r ...` . It's consistent with `nim`
[00:52:39] <fn> <11ForumUpdaterBot99> New thread by Mildred: Cannot make async futures work with the fidget GUI toolkit, see https://forum.nim-lang.org/t/8185
[00:53:05] <FromDiscord> <konsumlamm> In reply to @dom96 "unfortunately I think we": huh, i'll take a look
[00:58:40] <fn> <11ForumUpdaterBot99> New thread by Mildred: Pragma to restrict procedure to main thread?, see https://forum.nim-lang.org/t/8186
[01:00:32] <FromDiscord> <TennisBowling> is compiling to c or c++ more recommended?
[01:01:18] <FromDiscord> <dom96> C
[01:02:31] <fn> <11ForumUpdaterBot99> New post on r/nim by RattleyCooper: The nim-lang blog has jokes, see https://reddit.com/r/nim/comments/ociqiu/the_nimlang_blog_has_jokes/
[01:08:55] <FromDiscord> <kaushalmodi> In reply to @fn "<ForumUpdaterBot> New post on": Yeah, that's an unfortunate package name.
[01:11:32] <FromDiscord> <TennisBowling> In reply to @dom96 "C": ok
[01:32:39] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3rLU
[01:33:39] <FromDiscord> <haxscramper> No, it just calls into compiler API. If you need additional configuration you can copy it's internal implementation and run the compiler
[01:34:02] <FromDiscord> <haxscramper> I could add define support though, it should be pretty easy.
[01:35:28] <FromDiscord> <Ayy Lmao> That would be awesome. Also, do you happen to know if there is some proc or something to automatically mangle the symbol names, or do I need to go through the node and do it manually?
[01:36:40] <FromDiscord> <Ayy Lmao> Or maybe I would just handle that when I transfer to the Lua AST
[01:37:10] <FromDiscord> <haxscramper> sighash
[01:37:29] <FromDiscord> <haxscramper> In reply to @haxscramper "yes, `compileString` returns semchecked": I was talking about it here
[01:37:47] <FromDiscord> <haxscramper> If you need prettier mangling you need to do it manually though
[01:37:54] <FromDiscord> <Ayy Lmao> Are you talking about in std/macros? Because I see ` signatureHash` and `symBodyHash` but no `sighash`
[01:43:45] <FromDiscord> <haxscramper> No, we are in compiler API right now, I'm talking about sighash in the compiler. It has to be somewhere in the compiler/? (Don't remember exact module, sorry)
[01:44:29] <FromDiscord> <haxscramper> Well, actually digging through the compiler is very annoying thing to do, but I can make a simple example on the PNode codegen tomorrow
[01:45:00] <FromDiscord> <haxscramper> Wanted to do something like that anyway
[01:47:55] <FromDiscord> <Ayy Lmao> In reply to @haxscramper "Well, actually digging through": That would be very helpful.
[02:01:44] <FromDiscord> <Ayy Lmao> It looks like it's in `compiler/sighashes.nim`
[02:11:48] *** Quits: notchris (sid181145@id-181145.stonehaven.irccloud.com) (Ping timeout: 250 seconds)
[02:18:27] *** Joins: notchris (sid181145@stonehaven.irccloud.com)
[02:19:00] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[02:19:01] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Changing host)
[02:19:01] *** Joins: beshr (~beshr@user/beshr)
[02:30:05] <FromDiscord> <reilly> Would anything in NimGL let me run my own code on the GPU?
[02:30:16] <FromDiscord> <reilly> I doubt it, but it doesn't hurt to ask.
[02:34:52] <FromDiscord> <ElegantBeef> Shaders
[02:35:05] <FromDiscord> <ElegantBeef> You do know how a gpu works right? 😄
[02:36:03] <FromDiscord> <Jasmine and Don't Forget!~> Hi everyone! I just got a job
[02:36:24] <FromDiscord> <ElegantBeef> You typically just use opengl, vulkan, opencl, cuda or similar to run operations on the gpu, considering the last question you had, you dont need to use any other language you can transpile to Glsl, HLSL or similar
[02:36:26] <FromDiscord> <ElegantBeef> Congrats
[02:36:43] <FromDiscord> <Jasmine and Don't Forget!~> Thank you!
[02:38:44] <FromDiscord> <exelotl> yo nice!
[02:39:54] <FromDiscord> <ElegantBeef> In reply to @reilly "Would anything in NimGL": What do you mean by "own code" though
[02:42:38] <FromDiscord> <ElegantBeef> Cause if you're still on the path to wanting to use Nim as a gpu language you'd probably want to look into shader compilation to learn how to generate code from it, or transpile to the language you need like nimsl does
[02:42:45] <FromDiscord> <ElegantBeef> But anywho i'll shush
[03:09:05] *** Quits: max22- (~maxime@2a01cb0883359800f59d90bf8f7d5ba4.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:23:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:24:35] <FromDiscord> <Bung> does the job allow you write nim in commpany's procs ?
[03:24:54] <FromDiscord> <Bung> (edit) "procs" => "projects"
[03:36:09] <FromDiscord> <ElegantBeef> If not you best quit 😛
[03:43:43] <FromDiscord> <Bung> lol
[04:01:09] *** Quits: iortega (~inigo@217.113.248.254) (Remote host closed the connection)
[04:02:16] *** Quits: beshr (~beshr@user/beshr) (Read error: Connection reset by peer)
[04:56:14] <FromDiscord> <juan_carlos> How can I assert that a nnkIdent is a mutable var ?.
[05:00:52] <FromDiscord> <ElegantBeef> You cannot since idents dont carry anything
[05:01:01] <FromDiscord> <ElegantBeef> You'd have to bind the sym or get it typed
[05:01:54] <FromDiscord> <juan_carlos> Yep, I remember now, thanks.
[05:25:04] *** Joins: cyraxjoe (~joe@201.159.96.1)
[05:59:23] <fn> <11ForumUpdaterBot99> New thread by Stu002: Associating a constant with a concept?, see https://forum.nim-lang.org/t/8187
[06:21:33] <FromDiscord> <hamidb80> sent a code paste, see https://play.nim-lang.org/#ix=3rMP
[06:28:12] <FromDiscord> <ElegantBeef> sent a code paste, see https://play.nim-lang.org/#ix=3rMQ
[06:28:48] <FromDiscord> <ElegantBeef> Though without a test cannot confirm if that works for you
[06:35:05] <FromDiscord> <ElegantBeef> @hamidb80 did that work?
[06:35:23] <FromDiscord> <ElegantBeef> If not give me a usable example i'm too lazy to make one for you 😛
[06:38:34] <FromDiscord> <hamidb80> sent a code paste, see https://play.nim-lang.org/#ix=3rMS
[06:39:17] <FromDiscord> <hamidb80> i dont know why  mapIt filterIt, ... just works with pars () 
[06:40:00] <FromDiscord> <hamidb80> In reply to @hamidb80 "why do i have": even if you want pass a block of code to it, you should pass it with pars ()
[06:40:11] <FromDiscord> <hamidb80> (edit) "it," => "them,"
[06:40:23] <FromDiscord> <ElegantBeef> Ah i see
[06:40:39] <FromDiscord> <ElegantBeef> sent a code paste, see https://play.nim-lang.org/#ix=3rMU
[06:41:24] <FromDiscord> <ElegantBeef> https://nim-lang.org/docs/manual_experimental.html#do-notation
[06:42:24] <FromDiscord> <hamidb80> "do with parentheses is an anonymous proc; however a do without parentheses is just a block of code."
[06:42:38] <FromDiscord> <hamidb80> Haha, i didn't know that, thank u
[06:43:45] <FromDiscord> <ElegantBeef> Now the reason why it needs the pars is probably just due to how the evaluation works but idk
[06:46:35] <FromDiscord> <hamidb80> yeah i think `do` notation distinguishes a untyped parameter for a macro to a block of code
[06:51:36] <FromDiscord> <ElegantBeef> Yea the block there just doesnt work there, the parse just doesnt like it 😄
[06:59:00] *** Quits: cyraxjoe (~joe@201.159.96.1) (Quit: I'm out!)
[07:16:18] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:21:58] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:25:22] <FromDiscord> <@bracketmaster-5a708063d73408ce4> do macros make nim homoiconic?
[07:26:38] <FromDiscord> <ElegantBeef> Well they're homoiconic macros
[07:36:04] <FromDiscord> <Rika> what would disqualify a language from being homoiconic
[07:39:56] <FromDiscord> <Rika> p.sure you can wrap a whole nim file in a macro and it would work so i guess?
[07:43:42] *** Joins: cyraxjoe (~joe@201.159.96.1)
[07:53:10] <FromDiscord> <RattleyCooper> I'm pretty new to nim and I'm wondering if there is a concrete type like a `seq` that can contain a variety of types?
[07:54:01] <FromDiscord> <RattleyCooper> types would be arbitrary and inconsistent
[07:54:01] <FromDiscord> <Rika> no, you have to box the variety
[07:54:14] <FromDiscord> <Rika> totally arbitrary is impossible without type elision
[07:54:22] <FromDiscord> <Rika> ...i believe
[07:55:23] <FromDiscord> <Rika> if you know the subset of types you want to store you can use the boxing (variant type) method
[07:56:11] <FromDiscord> <Rika> otherwise i dont know of more methods but storing it in a `pointer` (equiv. C void)
[07:57:04] <FromDiscord> <Rika> are you sure the types are totally arbitrary?
[07:57:53] <FromDiscord> <RattleyCooper> Yes
[07:58:55] <FromDiscord> <Rika> what are you aiming to do?
[07:58:56] <FromDiscord> <RattleyCooper> I mean, I suppose.  I was just thinking about how RPC works and was wondering how someone would create a way to register RPC procedures
[07:59:28] <FromDiscord> <RattleyCooper> And so if someone wanted to create a RPC how would you deal with the variety of types they might be using in their procedure calls?
[07:59:41] <FromDiscord> <Rika> register RPC procedures? you cant exactly make procedures anyway so it is done in macro i believe?
[07:59:42] <FromDiscord> <RattleyCooper> I'm not actually doing this, it's more of an exercise
[07:59:58] <FromDiscord> <Rika> so youre trying to implement closures
[07:59:59] <FromDiscord> <Rika> ?
[08:00:39] <FromDiscord> <Rika> i dont understand the relation of storing types in a heterogeneous seq and RPC
[08:00:53] <FromDiscord> <RattleyCooper> Well more of a dispatcher.  Register RPCs to some kind of container and then send/receive the RPC info over network and run the RPC and send the result back
[08:01:29] <FromDiscord> <Rika> huh?
[08:01:37] <FromDiscord> <Rika> container as in docker?
[08:01:37] <FromDiscord> <RattleyCooper> remote procedure call
[08:01:39] <FromDiscord> <RattleyCooper> over the network
[08:01:42] <FromDiscord> <Rika> i know what RPC means
[08:01:49] <FromDiscord> <Rika> but how are you implementing that exactly
[08:02:03] <FromDiscord> <RattleyCooper> So the user defines their procedures and labels them as a RPC
[08:02:12] <FromDiscord> <ElegantBeef> Basically by doing it completely wrong
[08:02:17] <FromDiscord> <Rika> so you want an evaluation system as well?
[08:02:21] <FromDiscord> <ElegantBeef> You dont need to capture any variables yourself
[08:02:23] <FromDiscord> <Rika> that doesnt sound like rpc
[08:02:32] <FromDiscord> <Rika> that just sounds like a remote repl
[08:02:45] <FromDiscord> <ElegantBeef> Well anyway a p2p "rpc" can be seen here https://github.com/beef331/nettyrpc
[08:02:46] <FromDiscord> <Rika> im honestly absolutely confused
[08:02:47] <fn> <12R2D299> 4GitHub: 7"Implements an RPC like system using netty."
[08:03:19] <FromDiscord> <ElegantBeef> It captures the to/from inside of a lambda
[08:03:38] <FromDiscord> <Rika> you handle this beef ive stuff to do right now lol
[08:03:40] <FromDiscord> <ElegantBeef> Actually iirc it adds the `from` into the procedure
[08:03:49] <FromDiscord> <ElegantBeef> Will do 😄
[08:03:56] <FromDiscord> <RattleyCooper> So, I'm not so much worried about making my own RPC...
[08:04:34] <FromDiscord> <ElegantBeef> Well you're worried about holding heterogeneous types together which requires boxing
[08:05:13] <FromDiscord> <Rika> boxing in either variant types (known subset) or total type erasure (unknown subset)
[08:05:14] <FromDiscord> <ElegantBeef> I have this library that aids in that but it's not overly great https://github.com/beef331/nettyrpc
[08:05:16] <fn> <12R2D299> 4GitHub: 7"Implements an RPC like system using netty."
[08:05:22] <FromDiscord> <Rika> you sent that already
[08:05:25] <FromDiscord> <ElegantBeef> god damn it
[08:05:27] <FromDiscord> <Rika> lol
[08:05:30] <FromDiscord> <ElegantBeef> https://github.com/beef331/sumtypes
[08:05:32] <fn> <12R2D299> 4GitHub: 7"Easy to use Nim sum type library"
[08:05:32] <FromDiscord> <ElegantBeef> There we go
[08:06:21] <FromDiscord> <Rika> @ElegantBeef the issue is he does not know the types
[08:06:26] <FromDiscord> <Rika> so thats not feasible
[08:07:12] <FromDiscord> <ElegantBeef> Let's look at this rpc example, you're wanting to hold a bunch of procedures in a list right?
[08:07:58] <FromDiscord> <RattleyCooper> Yeah, I have a template that can handle most of it
[08:08:01] <FromDiscord> <ElegantBeef> got a bit of a headache so probably going to be loopy 😄
[08:08:08] <FromDiscord> <Rika> when are you not
[08:08:16] <FromDiscord> <ElegantBeef> No clue
[08:08:24] <FromDiscord> <RattleyCooper> I'm just struggling with a container with varying types on my custom type
[08:08:40] <FromDiscord> <RattleyCooper> Can I paste small snippets in here?
[08:08:47] <FromDiscord> <ElegantBeef> Yep or on the playground
[08:08:49] <FromDiscord> <Rika> sure y noty
[08:08:52] <FromDiscord> <Rika> (edit) "noty" => "not"
[08:09:15] <FromDiscord> <RattleyCooper> sent a long message, see http://ix.io/3rN7
[08:09:26] <FromDiscord> <RattleyCooper> I put `rpc_args` as `int` so it will compile
[08:09:44] <FromDiscord> <RattleyCooper> I am not going to register the varargs
[08:09:58] <FromDiscord> <RattleyCooper> Just showing what I want for my `rpc_args`
[08:10:03] <FromDiscord> <ElegantBeef> Yea this just seems like the wrong way about
[08:10:04] <FromDiscord> <RattleyCooper> something like `varargs`
[08:10:09] <FromDiscord> <RattleyCooper> How should I do it?
[08:10:26] <FromDiscord> <Rika> uh no
[08:10:30] <FromDiscord> <Rika> you cannot
[08:10:31] <FromDiscord> <RattleyCooper> I'm coming from much looser languages lol
[08:10:37] <FromDiscord> <ElegantBeef> Well you can rika
[08:10:41] <FromDiscord> <RattleyCooper> Well I don't know any better
[08:10:47] <FromDiscord> <ElegantBeef> Yea it's fine what you attempted
[08:10:48] <FromDiscord> <Rika> put it in a `pointer` and figure out how to make the proc accept it
[08:10:52] <FromDiscord> <ElegantBeef> Nah
[08:10:57] <FromDiscord> <Rika> wdym then
[08:11:03] <FromDiscord> <Rika> wait
[08:11:05] <FromDiscord> <ElegantBeef> Let's use nettyrpc as an example
[08:11:05] <FromDiscord> <Rika> varargs
[08:11:15] <FromDiscord> <Rika> that means its still homogeneous isnt it
[08:11:43] <FromDiscord> <ElegantBeef> I assume you want all your args to be anything?
[08:11:47] <FromDiscord> <RattleyCooper> Yeah
[08:11:57] <FromDiscord> <ElegantBeef> Then yea you can make an inbetween lambda
[08:12:00] <FromDiscord> <ElegantBeef> Like i do with netty
[08:12:01] <FromDiscord> <ElegantBeef> (edit) "netty" => "nettyrpc"
[08:12:03] <FromDiscord> <Rika> the only method i know is what lua's c integration does or so i believe
[08:12:04] <FromDiscord> <ElegantBeef> Will show an example
[08:12:08] <FromDiscord> <RattleyCooper> 😄
[08:14:21] <FromDiscord> <ElegantBeef> sent a code paste, see https://play.nim-lang.org/#ix=3rN8
[08:14:35] <FromDiscord> <ElegantBeef> that event table is an `array[id, proc(s: var Stream)`
[08:14:43] <FromDiscord> <Rika> oh you're making it a stream
[08:14:54] <FromDiscord> <Rika> so basically kinda what i was thinking of as well
[08:15:09] <FromDiscord> <Rika> a proc that receives a pointer and handles the parameters itself
[08:15:13] <FromDiscord> <ElegantBeef> Well it's the best way to do it, have each procedure read the stream
[08:15:21] <FromDiscord> <Rika> just more nim like, i think in c i guess
[08:15:23] <FromDiscord> <ElegantBeef> Yea that'd work aswell ofc but isnt as nice
[08:15:46] <FromDiscord> <ElegantBeef> (edit) "https://play.nim-lang.org/#ix=3rN8" => "https://play.nim-lang.org/#ix=3rN9"
[08:15:48] <FromDiscord> <RattleyCooper> I will have to look into streams
[08:15:58] <FromDiscord> <ElegantBeef> Well look at nettrpc it's not a large library, though uses macros
[08:16:11] <FromDiscord> <ElegantBeef> the main module is 100 loc
[08:16:26] <FromDiscord> <RattleyCooper> I read up on the AST and a little bit on macros, but to be honest most of my programming experience is in python and PHP
[08:16:30] <FromDiscord> <RattleyCooper> and gdscript lol
[08:17:29] <FromDiscord> <ElegantBeef> Well the beauty is you can rip the entire macro apart putting in `treeRepr` or compile with `--expandMacro:networked`
[08:17:29] <FromDiscord> <RattleyCooper> So I have a lot to learn.  A lot of stuff goes over my head but I am trying lol
[08:17:43] <FromDiscord> <RattleyCooper> Oh wow
[08:18:04] <FromDiscord> <ElegantBeef> `treeRepr(someNode)` will output the ast
[08:19:21] <FromDiscord> <ElegantBeef> and `--expandMacro:networked` will show you the generated AST of that macro, so you can see what i do and understand it hands on
[08:19:34] <FromDiscord> <ElegantBeef> I do have two examples that work
[08:19:59] <FromDiscord> <ElegantBeef> I guess it's generated code, not AST, but meh
[08:20:07] <FromDiscord> <RattleyCooper> lol
[08:20:35] <FromDiscord> <ElegantBeef> I'm also almost always here if you need to talk about what i do
[08:22:04] <FromDiscord> <RattleyCooper> Thanks!  I am still trying to figure this out.  I haven't gotten this far out of my comfort zone in a while lol
[08:22:45] <FromDiscord> <RattleyCooper> I am just trying to figure out all the different types and how templates/proc/func work
[08:23:32] <FromDiscord> <Bung> pmunch's jsonschema dont do export types ?
[08:23:41] <FromDiscord> <ElegantBeef> `func` is just a `proc`
[08:23:48] <FromDiscord> <ElegantBeef> `templates` are code subsitution
[08:24:12] <FromDiscord> <ElegantBeef> Though a `func` cannot have side effects so anything that mutates variables not passed in as `var`
[08:24:25] <FromDiscord> <RattleyCooper> Yeah, I am just not used to compiled languages so I don't understand why you can't have something like `varargs` outside of a template
[08:24:34] <FromDiscord> <ElegantBeef> You can though
[08:24:43] <FromDiscord> <RattleyCooper> Oh?
[08:24:46] <FromDiscord> <ElegantBeef> `proc a(args: varargs[int])` works
[08:24:55] <FromDiscord> <RattleyCooper> Oh sorry, `untyped`
[08:25:15] <FromDiscord> <RattleyCooper> `proc a(args: varargs[untyped])` doesn't work does it?
[08:25:21] <FromDiscord> <ElegantBeef> No cause it's not semantically checked
[08:25:33] <FromDiscord> <RattleyCooper> Yeah, this is the stuff I'm missing haha
[08:25:34] <FromDiscord> <Bung> you should use template
[08:25:54] <FromDiscord> <RattleyCooper> Been reading but there is so much.  Just going to take precious time
[08:26:48] <FromDiscord> <ElegantBeef> Well we're here so can always ask 😛
[08:28:24] <FromDiscord> <RattleyCooper> I appreciate it!  I'm sure I'll have more questions.  I'm looking through `nettyrpc` right now
[08:28:33] <FromDiscord> <Bung> @PMunch  jsonschema dont do export types ?
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:02:35] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3rNg
[09:03:11] <FromDiscord> <reilly> (edit) "https://play.nim-lang.org/#ix=3rNg" => "https://play.nim-lang.org/#ix=3rNh"
[09:03:19] <FromDiscord> <reilly> (edit) "https://play.nim-lang.org/#ix=3rNh" => "https://play.nim-lang.org/#ix=3rNi"
[09:04:30] <FromDiscord> <reilly> If not, I could always just walk the directory at runtime... but that seems so much slower.
[09:05:46] <FromDiscord> <ElegantBeef> look at `walkdir` and `static`
[09:07:52] <FromDiscord> <ElegantBeef> sent a code paste, see https://paste.rs/mAN
[09:08:00] <FromDiscord> <ElegantBeef> May need to use a macro to make it an array
[09:21:10] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3rNl
[09:22:00] <FromDiscord> <reilly> This isn't super flexible, since it assumes that there will always be 635 files in the directory, but it works for now.
[09:29:05] <FromDiscord> <ElegantBeef> It takes like 2 seconds to make the macro 😄
[09:31:01] <FromDiscord> <reilly> Bold of you to assume I have the slightest understanding of macros.
[09:33:51] <FromDiscord> <ElegantBeef> I'll get it to you in a minute 😄
[09:40:15] <FromDiscord> <ElegantBeef> @reilly https://play.nim-lang.org/#ix=3rNt here?
[09:42:30] <FromDiscord> <ElegantBeef> Now all you need to do is make a seq then pass it to that macro and boom
[09:46:56] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3rNu
[09:47:17] <FromDiscord> <ElegantBeef> just do the logic in a `nodeNames = static:` 😛
[09:50:30] <FromDiscord> <reilly> I don't really understand how to use `static:`.
[09:51:09] <FromDiscord> <reilly> The manual isn't much help in that regard. (Wow, compile-time `echo`s! ...and only compile-time `echo`s.)
[09:51:23] <FromDiscord> <ElegantBeef> well it runs code at compile time
[09:51:32] <FromDiscord> <ElegantBeef> So if you put getNodenames in there hten call `asArray it'll be fine
[09:53:41] <FromDiscord> <ElegantBeef> Unless you want that procedure to be cleaner 😄
[09:58:21] <FromDiscord> <reilly> I'm having a hard time putting into words why that doesn't make sense to me. You already have everything I've written, and you obviously know better than I do, so could you just show me?
[09:58:46] <FromDiscord> <reilly> It'll click when I actually see it, I'm sure.
[10:01:18] <FromDiscord> <ElegantBeef> https://play.nim-lang.org/#ix=3rNy
[10:05:11] <FromDiscord> <reilly> That doesn't work. `res` gets filled just fine, but `asArray` spits out an `array[0..-1, empty]`, which is obviously not correct.
[10:05:50] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I've heard that nim can automatically insert free calls during compilation when the compiler is able to determine an object goes out of scope
[10:05:57] <FromDiscord> <@bracketmaster-5a708063d73408ce4> what is this behavior called?
[10:08:16] <FromDiscord> <RattleyCooper> https://nim-lang.org/blog/2020/10/15/introduction-to-arc-orc-in-nim.html
[10:08:25] <FromDiscord> <RattleyCooper> ^ this?
[10:09:00] <FromDiscord> <RattleyCooper> scope based memory management?
[10:13:15] <FromDiscord> <ElegantBeef> @reilly works fine it was cause it was an empty array
[10:13:21] <FromDiscord> <ElegantBeef> https://play.nim-lang.org/#ix=3rNz
[10:14:25] <FromDiscord> <reilly> I had tested it on my actual machine, not on the site, so the array should have been anything but empty. Well, now we have an "it works on my machine" problem.
[10:15:35] <FromDiscord> <ElegantBeef> Ah nvm the adding is different
[10:15:40] <FromDiscord> <ElegantBeef> So disregard jusut use the proc 😄
[10:16:36] <FromDiscord> <reilly> You know what they say, if it ain't broke, don't fix it.
[10:25:28] <FromDiscord> <Rika> "witchcraft"
[10:25:31] <FromDiscord> <Rika> not really...
[11:05:09] *** Joins: max22- (~maxime@2a01cb0883359800b251f3ec08798e49.ipv6.abo.wanadoo.fr)
[11:11:53] *** Quits: max22- (~maxime@2a01cb0883359800b251f3ec08798e49.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[11:37:57] <fn> <11ForumUpdaterBot99> New thread by Arnetheduck: Safe `enum` conversion, see https://forum.nim-lang.org/t/8188
[11:53:44] *** Joins: max22- (~maxime@2a01cb0883359800413ac30aab6e9f20.ipv6.abo.wanadoo.fr)
[11:54:57] *** Joins: beshr (~beshr@user/beshr)
[12:03:11] <FromDiscord> <ElegantBeef> I cant way to see arne's negative feedback for my response on that post! 😄
[12:03:41] <FromDiscord> <Rika> Cursed macro
[12:04:02] <FromDiscord> <ElegantBeef> I think timothee one lined it
[12:04:05] <FromDiscord> <ElegantBeef> I dont recall
[12:04:47] <FromDiscord> <ElegantBeef> Or maybe i did it, cause i regret the `result =` there
[12:05:05] <FromDiscord> <Rika> Well IMO it’s a bad solution because does everyone now need to copy that macro and proc
[12:05:15] <FromDiscord> <ElegantBeef> Well no cause you put it in a module 😄
[12:05:20] <FromDiscord> <ElegantBeef> It's also the safest way
[12:05:45] <FromDiscord> <Rika> In reply to @ElegantBeef "Well no cause you": Still a lot of duplication across programmers
[12:06:09] <FromDiscord> <ElegantBeef> Well this is arne so probably status, and they run their own stdlib
[12:07:09] <FromDiscord> <ElegantBeef> It probably needs to be included somewhere considering the complexity i agree though
[12:07:27] <FromDiscord> <ElegantBeef> But it's the only way to safely generate a range for the holey enums
[12:08:14] <FromDiscord> <Rika> Praying to one of my enums right now
[12:08:31] <FromDiscord> <ElegantBeef> hey i said holey not holy
[12:20:00] <FromDiscord> <Rika> “I realize now this is probably too much for your style guide :D” lol
[12:21:00] <FromDiscord> <ElegantBeef> Well it's the only safe way i can see to do it, so who wants to PR into  `enumutils`? 😄
[12:21:15] <FromDiscord> <Rika> Why don’t you
[12:21:48] <FromDiscord> <ElegantBeef> smokebomb
[12:32:40] *** Joins: xet7 (~xet7@user/xet7)
[13:03:21] <FromDiscord> <haxscramper> In reply to @Ayy Lmao "That would be very": https://github.com/haxscramper/hnimast/blob/master/tests/tCompilerAux.nim#L15
[13:03:44] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3rO1
[13:04:08] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3rO2
[13:04:18] <FromDiscord> <haxscramper> It does work, but it is not pretty by any means
[13:04:47] <FromDiscord> <haxscramper> You can implement own mangling scheme to have something adequate, right now I just convert `nkSym` to sighash directly
[13:05:40] <FromDiscord> <haxscramper> NIm compiler also generates intermediate variables like `_T90` to guarantee order of argument evaluation
[13:05:53] <FromDiscord> <haxscramper> IIRC C does not enforce it, maybe lua does, so it is not necessaary
[13:06:13] <FromDiscord> <haxscramper> But lua does not have support for `if` expressions etc.
[13:06:39] <FromDiscord> <haxscramper> You don't need to worry about macros and templates, they are handled by `compilestring`
[13:06:50] <FromDiscord> <haxscramper> I also added `symDefines` to pass `define` flags to compilation
[13:07:07] <FromDiscord> <haxscramper> Pushed new version - `0.3.31` for hnimast, it has these changes
[13:08:09] <FromDiscord> <haxscramper> Right now I just generate string with almost no control over indentation etc. You can use https://haxscramper.github.io/hmisc/src/hmisc/other/blockfmt.html to make it better-looking
[13:11:41] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3rO4
[13:13:25] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3rO5
[13:14:35] <FromDiscord> <haxscramper> For some things - IDK how I'm supposed to handle them exactly. Like `nkHiddenDeref` https://github.com/haxscramper/hnimast/blob/ece4676973258330e323fefe15ea81f39ab2ed18/tests/tCompilerAux.nim#L64 etc.
[13:15:07] <FromDiscord> <haxscramper> Not sure what they are responsible for on the nim side and I don't know enough lua to correctly convert them
[14:26:12] <FromDiscord> <haxscramper> In reply to @haxscramper "It does work, but": https://github.com/nim-lang/Nim/pull/14632/files had more readable manging scheme implemented
[15:35:13] *** Quits: max22- (~maxime@2a01cb0883359800413ac30aab6e9f20.ipv6.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[15:44:41] <FromDiscord> <gerwy> Hi so i was wondering
[15:44:46] <FromDiscord> <gerwy> because basically i have a list of some youtubers i like to watch when i am bored and i loop through all of them to see if some new video appeared, but i don't always remember all of them so i would like to automate this thing
[15:44:54] <FromDiscord> <gerwy> do anyone know any resource for that? Like Youtube API or or something like ths?
[15:44:59] <FromDiscord> <gerwy> (edit) "ths?" => "this?"
[15:46:15] <FromDiscord> <gerwy> its probably possible to do it in python easily, but i wonder if i could do something like this in nim too, but idk how to work with API's in nim or if there is a way for me to check videos of youtuber from outside of youtube without going full page fetch path
[15:48:56] <FromDiscord> <gerwy> TLDR↵How to use API's with Nim
[15:49:36] <FromDiscord> <gerwy> (edit) "TLDR↵How" => "TL;DR↵How"
[15:50:56] <FromDiscord> <Kermithos> I think youtube has an RSS feed
[15:51:05] <FromDiscord> <Kermithos> would probably be the easiest way
[15:52:00] <FromDiscord> <Rika> wouldnt be surprised if they removed it sooner or later though
[15:52:46] <FromDiscord> <Kermithos> yea, there are still other ways but Im not sure how they work
[15:53:07] <FromDiscord> <Kermithos> but projects like FreeTube, newpipe or Inviodious can get the feed without the rss endpoint
[15:53:39] <FromDiscord> <gerwy> In reply to @Kermithos "I think youtube has": it has, i should probably even use it because i heard that if you fetch big amount of channels videos then you can get banned (im using FreeTube)
[15:54:39] <FromDiscord> <gerwy> but yeah, i don't need it to be seconds or minutes precise, i just want to know if new video is out so yeah, hmm could be useful↵hmmm, RSS Feed is just XML? Right? or HTML?
[15:54:45] <FromDiscord> <Kermithos> not sure what ratelimits youtube has for RSS but if you dont spam it should be fine
[15:55:03] <FromDiscord> <Kermithos> In reply to @Life Sucks "but yeah, i don't": xml
[15:55:16] <FromDiscord> <gerwy> i have more than 200 subscribers, probably less than 100 is the limit
[15:55:56] <FromDiscord> <gerwy> oh okay and i saw that nim has xml parser in std, nice i could now receive it, store it and look for changes right?
[15:56:53] <FromDiscord> <Kermithos> yea
[15:57:01] <FromDiscord> <Kermithos> you could check the upload date too
[15:57:58] <FromDiscord> <gerwy> Okay thanks i forgot about the RSS feed↵i will make something with it, after that i would like to make it so that i type command into the terminal instead of typing to execute the script
[15:58:14] <FromDiscord> <gerwy> but i guess it could be just an alias so yeah hmm doesn't seem as hard as i thought thaaanks<3
[15:58:42] <FromDiscord> <Kermithos> In reply to @Life Sucks "but i guess it": if you are on linux you can just write it in your ~/.bashrc
[15:59:11] <FromDiscord> <gerwy> well im basically on linux kinda
[15:59:30] <FromDiscord> <gerwy> and im using zsh, soo, yeah in ~/.zshrc
[15:59:40] <FromDiscord> <Rika> i'd love to make a program for my sub feed too, but i unfortunately want precise timing and also have almost 1000 subscriptions so i dont think i can...
[16:01:42] <FromDiscord> <gerwy> i hate it that youtube now doesn't show precise sub count,
[16:02:56] <FromDiscord> <gerwy> but if you log into YT and use it's API i think its possible, you can do (or even use if he shared the code) carykh sub counter, but change some things because he fetches sub count like every second or every minute and just lerp to the next value he got
[16:04:31] <FromDiscord> <gerwy> hmm something like this
[16:04:31] <FromDiscord> <gerwy> https://www.youtube.com/watch?v=JNBsdSsAmYQ
[16:04:34] <fn> <12R2D299> 4Youtube: 7"JACKNJELLIFY HITTING ONE MILLION STREAM!"
[16:06:04] <FromDiscord> <gerwy> can't find code for it tho ://
[16:07:45] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[17:00:00] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[17:22:30] *** Joins: arkurious (~arkurious@user/arkurious)
[17:28:38] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[17:48:06] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[18:16:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:23:42] <FromDiscord> <zevv> treeform#3712\: ping
[18:26:23] <FromDiscord> <Rika> @treeform
[18:38:29] *** Joins: max22- (~maxime@2a01cb088335980063147acdea5ffcbd.ipv6.abo.wanadoo.fr)
[18:42:10] *** Parts: dbohdan (~dbohdan@user/dbohdan) ()
[18:48:22] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3rPA
[18:50:19] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3rPC
[18:50:36] <FromDiscord> <haxscramper> yes, that's how you should be doing this
[18:51:07] <FromDiscord> <Ayy Lmao> I think the JS backend does something similar, is there any way to tap into what the compiler does there or do I need to implement it manually?
[18:52:00] <FromDiscord> <Ayy Lmao> Because there are a lot of edge cases that are a bit annoying
[19:02:31] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 256 seconds)
[19:04:32] <FromDiscord> <Ayy Lmao> @haxscramper Oh yeah, I was also wondering if it is possible to have compileString to tell you line numbers when there are errors in the nim code. Right now it just says the error with no context.
[19:11:10] *** Quits: max22- (~maxime@2a01cb088335980063147acdea5ffcbd.ipv6.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[19:12:32] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[19:12:56] *** Joins: supakeen (~user@python/site-packages/supakeen)
[19:13:16] <FromDiscord> <haxscramper> There is a `optionsConfig` for `compileString` that accepts `ConfigRef`
[19:13:27] <FromDiscord> <haxscramper> it has `.structuredErrorHook` callback field
[19:13:47] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3rPI
[19:13:50] <FromDiscord> <haxscramper> but you can change to different implementation if you want
[19:14:22] <FromDiscord> <haxscramper> also, in general you would want to use compiler passes instead of `compileString` because you might also need to compile a part of stdlib
[19:14:25] <FromDiscord> <haxscramper> and things like that
[19:14:38] <FromDiscord> <haxscramper> `compileString` does not return other module bodies
[19:16:40] <fn> <11ForumUpdaterBot99> New Nimble package! pl0t - Plot and visualize data, see http://pl0t.com
[19:19:54] *** Quits: koltrast (cf6babc4@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 240 seconds)
[19:20:00] <FromDiscord> <Ayy Lmao> In reply to @haxscramper "also, in general you": Yeah I was wondering about what happens when importing stdlib stuff. So you mean I should be doing the stuff that `compileString` is doing manually?
[19:21:51] *** Joins: koltrast (32216d47@h77-53-57-114.cust.a3fiber.se)
[19:22:00] <FromDiscord> <haxscramper> In reply to @Ayy Lmao "Yeah I was wondering": yes, second argument for `makePass` should generate necessary code
[19:27:48] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[19:28:52] <FromDiscord> <Ayy Lmao> In reply to @haxscramper "yes, second argument for": Alright, cool. I have a lot of research ahead of me haha. There's a lot of stuff in there I have no idea what it's doing
[19:38:11] <fn> <11ForumUpdaterBot99> New thread by Pedroos: Nested string format error: , see https://forum.nim-lang.org/t/8189
[19:41:03] *** Joins: pgimeno (~pgimeno@user/pgimeno)
[19:50:49] <pgimeno> I'm trying to run a network-less build, but it's crashing when attempting to clone Nimble, even though it is already present in the dir. Should I place it somewhere other than the main Nim git directory? This worked with csources_v1.
[19:54:59] <FromDiscord> <Recruit_main707> Programming language battle Royale, let’s go https://m.youtube.com/watch?v=↵You can submit  solutions and I bet you can improve them
[19:55:09] <FromDiscord> <Recruit_main707> bruh
[19:55:50] <FromDiscord> <Recruit_main707> https://m.youtube.com/watch?v=pv4Yq35Chx0
[19:55:52] <fn> <12R2D299> 4Youtube: 7"45 Computer Languages Compared: Which is FASTEST?"
[19:55:57] <FromDiscord> <Rika> eh
[19:56:20] <FromDiscord> <Recruit_main707> Sorry discord is shit on phone
[20:00:36] *** Quits: vsantana (~Thunderbi@fttx-177136148192.usr.predialnet.com.br) (Quit: vsantana)
[20:02:04] <FromDiscord> <treeform> In reply to @zevv "treeform#3712\: ping": Yes?
[20:02:06] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[20:02:50] *** Joins: xet7 (~xet7@user/xet7)
[20:47:15] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:48:37] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Remote host closed the connection)
[20:49:48] *** Joins: greaser|q (greaser@antihype.space)
[20:58:05] *** Joins: Vladar (~Vladar@46.162.2.53)
[20:58:40] <FromDiscord> <levovix> How to get varargs len staticly?↵For example, to pass it to generic
[21:00:11] <FromDiscord> <haxscramper> You can't statically get number of varargs for a `proc`, they are passed as an array internallly
[21:00:25] <FromDiscord> <haxscramper> You would need to write a macro/template that counts arguments
[21:13:55] <FromDiscord> <konsumlamm> the length of varargs isn't always known statically, since you can also pass a `seq` (or any `openArray`)
[21:25:25] <FromDiscord> <treeform> In reply to @reilly "I'd gladly port Pixie": I started with this: https://www.shadertoy.com/view/ldXyRn
[22:14:29] <fn> <11ForumUpdaterBot99> New thread by Scotpip: Parsecsv crashing witn OverflowDefect error, see https://forum.nim-lang.org/t/8190
[22:22:52] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:23:16] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:58:35] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[23:15:26] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[23:19:42] <fn> <11ForumUpdaterBot99> New question by SlightlyKosumi: Convert uint8 to int, see https://stackoverflow.com/questions/68237261/convert-uint8-to-int
[23:21:45] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[23:24:31] <FromDiscord> <RayPals> Hello, Does anyone know of a good starter tutorial for Nim?
[23:34:29] <FromDiscord> <haxscramper> https://nim-by-example.github.io/getting_started/
[23:35:40] <FromDiscord> <Zoom> @RayPals\: How "sarter" are we talking? The [official ones](https://nim-lang.org/docs/tut1.html) are fine. You can also try [learn Nim in x minutes](https://github.com/adambard/learnxinyminutes-docs/blob/master/nim.html.markdown). Nim wiki has good pages for users with experience in other languages\: https://github.com/nim-lang/Nim/wiki
[23:37:00] <FromDiscord> <dain> question: in a nim macro am I able to "peek inside" a function
[23:37:27] <FromDiscord> <dain> like, if a function is used in the body of the macro, inspect and possibly modify it's AST as if it were inlined
[23:37:37] <FromDiscord> <dain> (edit) "it's" => "its"
[23:39:01] <FromDiscord> <dain> (why i want to do this: I want to make a DSL that is basically nim but you can only use a restricted subset of functions, or [recursively] functions that only use those functions)
[23:39:33] <FromDiscord> <dom96> no, you cannot do this, but you can generate a new function based on the one that's called and then rewrite the ast to call it instead
[23:40:49] <FromDiscord> <dain> hmm
[23:41:47] <FromDiscord> <dain> can I stick attributes onto functions? like how one might use `setattr` in python
[23:42:54] <FromDiscord> <dom96> don't think so
[23:44:44] <FromDiscord> <haxscramper> You might try something with `getInst` for proc symbol
[23:44:59] <FromDiscord> <haxscramper> I'm not sure but maybe this would store all pragma annotations in the implementation
[23:45:21] <FromDiscord> <haxscramper> This works for objects, so you can add custom annotations to types and then check for them via`getTypeInst`
[23:45:29] <FromDiscord> <haxscramper> that returns original source
[23:45:43] <FromDiscord> <haxscramper> maybe it would work the same way for procedures, but I'm not sure
[23:45:45] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3rRq
[23:47:40] <FromDiscord> <dain> btw my goal for this is to have a text language for defining excel models. it would eventually all compile to an excel spreadsheet. so the only stuff you could use is stuff that has an analogue as an excel formula
[23:49:16] <FromDiscord> <dain> kind of like how you can replace a wysiwyg word processor with LaTeX/markdown and compile it. separation of layout and content
[23:49:52] <FromDiscord> <dain> i tried doing this in python but it was awful looking
[23:53:23] <FromDiscord> <demotomohiro> In reply to @treeform "I started with this:": You might already know, but this looks like efficient way to rendering fonts or some 2D curves on GPU:↵https://steamcdn-a.akamaihd.net/apps/valve/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf
