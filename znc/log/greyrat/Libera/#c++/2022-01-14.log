[00:00:07] <PJBoy> { new T; } using T = alignas(128) int; void* operator new(size_t, align_val_t) { BARK; return {}; }
[00:00:10] <geordi> operator new(size_t, align_val_t)
[00:01:09] <anyone> IOW, one should use  new alignas(128) int; rather than new(std::align_val_t{128}) int;, yeah that makes sense..
[00:01:34] <anyone> (also plays a lot nicer with make_unique)
[00:04:49] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 256 seconds)
[00:05:15] <PJBoy> hm
[00:05:33] <PJBoy> I thought new always aligned to at least alignof(max_align_t)
[00:05:41] <PJBoy> but I'm not so sure now
[00:05:49] <anyone> http://eel.is/c++draft/expr.new#16 I'd be inclined to think so too, but the wording is a bit convoluted
[00:05:54] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:06:31] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:06:45] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[00:06:59] <PJBoy> operator new is like malloc in that it doesn't know the alignment it should align to
[00:07:03] <ville> this is one of those areas where it's funny to compare what c gives you and then what c++ gives you.
[00:07:16] <PJBoy> not unless it's given the alignment via the align_val_t overload
[00:07:44] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:07:44] <PJBoy> so all new calls align to at minimum __STDCPP_­DEFAULT_­NEW_­ALIGNMENT__
[00:08:04] <PJBoy> and actually that's expressly guaranteed http://eel.is/c++draft/cpp.predefined#:__STDCPP_DEFAULT_NEW_ALIGNMENT__
[00:08:05] <ville> you'll look at the c specification and should come off thinking it's something you can work with. then you go read the c++ specification and just give up
[00:08:29] <PJBoy> but __STDCPP_­DEFAULT_­NEW_­ALIGNMENT__ doesn't seem to be related to max_align_t as far as I can tell
[00:09:19] <PJBoy> http://eel.is/c++draft/basic.align#3 would be the relevant wording there http://eel.is/c++draft/basic.align#3
[00:09:23] *** Quits: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[00:11:26] <AliceMeows> Is there any reason to prefer regular algorithms over ranges?
[00:13:19] *** Quits: ville (~ville@user/ville) (Quit: ville)
[00:14:33] <PJBoy> as for the if-else, you can factor out the duplicated part with a generic lambda https://wandbox.org/permlink/HNPhOJCFjXpah1Ak
[00:15:31] <Alipha> AliceMeows: you need pre-c++20 compatibility? or you're accustomed to the regular algorithms and aren't used to ranges yet?
[00:15:56] *** Joins: ville (~ville@user/ville)
[00:15:56] <Alipha> i suspect the regular algorithms might optimize better because there's not as much going on under the hood
[00:16:27] <AliceMeows> I don't need pre c++20 compatibility
[00:16:57] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:17:21] <PJBoy> potentially being able to specify an execution policy
[00:17:38] <AliceMeows> That is a good point
[00:17:40] <PJBoy> absent in the ranges library for some reason...
[00:17:57] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Ping timeout: 240 seconds)
[00:18:08] <Alipha> the projection parameter in ranges is definitely a good addition though
[00:18:30] <PJBoy> it's the best thing ever
[00:19:06] *** Quits: proller (~p@2a02:6b8:b081:9::1:2b) (Ping timeout: 245 seconds)
[00:23:25] <AliceMeows> What are projections and what are they good for?
[00:24:07] <PJBoy> they're a function applied on the elements before the [operation] is applied
[00:24:34] *** Joins: Betal (~Betal@user/betal)
[00:25:02] <PJBoy> e.g. if you wanted to sort by some member of a struct, you could specify a projection function that takes the struct type as parameter and returns that member
[00:25:19] <AliceMeows> Interesting
[00:25:25] <PJBoy> and due to the magic of std::invoke, that function can actually be expressed as a pointer to data member
[00:26:22] *** Joins: walterwhip (~www@user/walterwhip)
[00:26:45] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:27:15] <PJBoy> { array data{pair(3, 'a'), pair{2, 'z'}, pair{0, 'b'}}; ranges::sort(data, {}, &pair<int, char>::first); SHOW(data); }
[00:27:16] <geordi> data = {{0, 'b'}, {2, 'z'}, {3, 'a'}}
[00:27:24] *** jkaye_ is now known as jkaye
[00:27:26] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[00:27:35] <PJBoy> { array data{pair(3, 'a'), pair{2, 'z'}, pair{0, 'b'}}; ranges::sort(data, {}, &pair<int, char>::second); SHOW(data); }
[00:27:36] <geordi> data = {{3, 'a'}, {0, 'b'}, {2, 'z'}}
[00:27:43] <PJBoy> I love it
[00:28:11] *** Quits: lais (~lais@110.red-88-21-181.staticip.rima-tde.net) (Quit: Leaving)
[00:28:50] <PJBoy> << ranges::equal(a, b, {}, ::toupper); string a("abcd"), b("ABCD"); // another toy example
[00:28:51] <geordi> true
[00:30:29] <AliceMeows> This is pretty cool
[00:31:49] *** Joins: proller (~p@2a02:6b8:b081:7212::1:5)
[00:34:54] *** Quits: BurumaSerafuku (~sjw@69.206.48.64) (Remote host closed the connection)
[00:35:35] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 252 seconds)
[00:36:06] *** Joins: BurumaSerafuku (~sjw@69.206.48.64)
[00:36:15] *** Quits: jokoon (~eio@2a01:e0a:542:e160:3593:d827:e797:b7d9) (Read error: Connection reset by peer)
[00:36:25] <AliceMeows> Apparently they ran out of time which is why execution policy wasn't included
[00:36:57] *** Joins: martinrame (~leonardo@186.13.48.64)
[00:38:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:dd90:3cd1:7391:6edb) (Ping timeout: 240 seconds)
[00:38:47] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[00:38:50] *** Joins: rajkohaxor (~rajkosto@178.220.243.118)
[00:39:43] *** Quits: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca) (Quit: WeeChat 3.2)
[00:40:00] <PJBoy> I could believe that actually
[00:41:08] <AliceMeows> Maybe next time
[00:41:26] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:43:03] <martinrame> Hi, could you take a look at this: https://pastebin.com/cxP6rsRB
[00:43:21] *** Quits: clime (~clime@37-48-61-114.nat.epc.tmcz.cz) (Ping timeout: 256 seconds)
[00:43:59] <AliceMeows> You should ask in general
[00:45:00] <martinrame> AliceMeows: sorry
[00:45:41] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Quit: Leaving)
[00:45:49] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:47:09] *** Joins: walterwhip (~www@user/walterwhip)
[00:53:00] *** Joins: Joss (~joss@user/Joss)
[01:01:09] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[01:02:12] *** Quits: Joss (~joss@user/Joss) (Quit: Leaving.)
[01:12:24] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:13:57] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[01:14:00] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[01:15:07] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[01:17:42] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[01:18:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c4b8:6209:10f:d3e4)
[01:18:43] *** Joins: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[01:18:45] *** Joins: glestrade (~glestrade@rrcs-66-27-63-181.west.biz.rr.com)
[01:19:46] <glestrade> Hi folks - Visual Studio isn’t letting me see errors because it doesn’t have permission to write to the log file
[01:20:05] <glestrade> I’ve tried running as admin and messing with the project directory settings to no avail
[01:21:01] <glestrade> It compiles fine on clang on mac but I’d rather not spend time setting up an ide over here if it can be avoided
[01:21:29] <PJBoy> try closing VS
[01:21:33] <glestrade> any thoughts?
[01:21:44] <PJBoy> then check if there's like a ghost VS process open in task manager
[01:21:50] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[01:21:52] <glestrade> okay
[01:22:05] *** Joins: Tokamak_ (~Tokamak@172.58.188.35)
[01:22:07] <PJBoy> I guess a full computer restart would be simpler
[01:22:49] <BurumaSerafuku> fap
[01:23:00] <glestrade> :| I’m remoting into it from the Mac
[01:23:05] <glestrade> I hope I don’t have to
[01:23:10] <PJBoy> ah
[01:24:31] *** Joins: henbruas_ (~henbruas@ti0003a400-4203.bb.online.no)
[01:24:43] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 256 seconds)
[01:24:47] *** Quits: Tokamak_ (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[01:25:05] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[01:25:11] *** henbruas_ is now known as henbruas
[01:27:22] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[01:27:50] <glestrade> well, I don’t see anything like vs_ or Visual Studio in the process list
[01:28:08] <PJBoy> devenv is the name of the VS process
[01:29:05] *** Joins: jsbach (~jsbach@2a01:c23:6442:c300:9b5f:f3b9:5c34:fa84)
[01:29:08] <PJBoy> worth checking if the log file accessible now though
[01:30:29] <glestrade> don’t see any devenv
[01:30:51] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:31:28] *** Joins: walterwhip (~www@user/walterwhip)
[01:31:40] <glestrade> and the log doesn’t exist yet, so it’s also trying to create it on write
[01:31:57] <PJBoy> ah ok
[01:32:11] *** Quits: martinrame (~leonardo@186.13.48.64) (Quit: leaving)
[01:32:13] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[01:32:51] *** Quits: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Quit: Leaving)
[01:33:00] <glestrade> yep access denied
[01:33:57] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Remote host closed the connection)
[01:34:08] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[01:34:21] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[01:34:52] *** Joins: beco (~DrBeco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[01:34:56] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[01:35:42] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[01:36:36] <ville> have you tried copypasting the error message into a search engine with your machine specific parts removed?
[01:37:16] <glestrade> yes that’s how I came across the advice to run as admin and mess with the project dir
[01:37:26] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[01:37:30] <ville> chances are other people have run into the same problem before. also have you checked there's space left on the device
[01:37:54] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[01:38:01] <glestrade> they have, and there is :)
[01:38:34] <glestrade> I’ll be able to restart when I go in later I guess
[01:38:42] *** Joins: Tokamak_ (~Tokamak@172.58.188.35)
[01:38:42] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[01:39:00] *** Joins: bebyx (~Thunderbi@user/bebyx)
[01:40:07] <glestrade> I know that it was working at one time
[01:40:22] <AliceMeows> https://godbolt.org/z/TqWKha6zs this is a bug, right?
[01:40:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:02] <jkaye> The template is never instantiated
[01:41:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:03] *** ChanServ sets mode: +v npaperbot
[01:42:01] <AliceMeows> Yes but []<typename T>(auto n) { lol; } will error
[01:42:07] <AliceMeows> And no other compiler accepts this code
[01:42:44] <kalven> msvc has a tradition of allowing garbage in templates
[01:43:18] <jancoow> When using macros, how can I actually debug the result is is generating?
[01:43:40] <ville> jancoow: your compiler usually has an option to spit out the preprocessed file...
[01:43:45] <ville> !give jancoow general
[01:43:46] <nolyc> jancoow: #C++-general for algorithms, libraries, practices, projects, tools etc.
[01:44:04] <jancoow> Ville oh okay
[01:44:09] <AliceMeows> If only we had declarative macros...
[01:44:27] <jancoow> A what?
[01:44:55] <AliceMeows> declarative macros, c++ does not have them
[01:52:30] <AliceMeows> At least template<typename> void func() { lol; } wont be accepted so that's a start
[02:02:57] *** Quits: beco (~DrBeco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Quit: Leaving)
[02:03:17] *** Quits: walterwhip (~www@user/walterwhip) (Ping timeout: 240 seconds)
[02:08:40] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[02:10:27] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (Ping timeout: 256 seconds)
[02:10:31] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:11:25] *** Joins: bdt (~bdt@2a01:799:39c:7600:e65f:1ff:fe08:8a88)
[02:13:11] *** Joins: pulse (~pulse@user/pulse)
[02:18:26] *** Quits: Tokamak_ (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:18:57] *** hexeme is now known as ldlework
[02:20:59] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[02:23:04] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:26:35] *** Quits: calm-steam (calm-steam@user/calm-steam) (Quit: WeeChat 2.8)
[02:29:38] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[02:30:51] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[02:30:52] *** Joins: wre^ (~wre@wsip-98-188-242-61.mc.at.cox.net)
[02:31:08] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[02:31:12] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[02:31:54] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[02:33:41] *** Quits: pizdets (~pizdets@183.182.114.39) (Ping timeout: 256 seconds)
[02:34:05] *** Quits: causative_ (~halberd@98.118.7.200) (Changing host)
[02:34:05] *** Joins: causative_ (~halberd@user/causative)
[02:34:14] *** Joins: pizdets_ (~pizdets@183.182.110.146)
[02:36:03] *** Joins: pulse (~pulse@user/pulse)
[02:40:37] *** Quits: blackhole (~blackhole@2601:600:9f80:2aa0:cf7:e488:baea:da58) (Ping timeout: 240 seconds)
[02:43:01] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:45:32] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Quit: Leaving.)
[02:48:07] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:12] *** Quits: moberg1 (~moberg@luke.millenniumfalcon.org) (Quit: quit)
[02:49:45] *** Joins: moberg (~moberg@luke.millenniumfalcon.org)
[02:52:14] <pa> in context of templates/template specialization, a plain enum (not an enum class) is like an int, right? so it could be like an N?
[02:53:35] <pa> like template <N> void foo() {...}; and then template<> void foo<1>() {...} ?
[02:54:11] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Remote host closed the connection)
[02:57:21] *** Joins: blackhole (~blackhole@2601:600:9f80:2aa0:f4df:e19a:2cc0:748a)
[02:57:22] <Alipha> {} enum N {A, B}; template<N> void foo() {} template<> void foo<1>() {}
[02:57:23] <geordi> error: template-id 'foo<1>' for 'void foo()' does not match any template declaration
[02:57:40] <Alipha> {} enum N {A, B}; template<N> void foo() {} template<> void foo<A>() {}
[02:57:41] <geordi>  
[02:58:00] <Alipha> {} enum N {A, B}; template<N> void foo() {} template<> void foo<static_cast<N>(1)>() {}
[02:58:01] <geordi>  
[02:58:41] <Alipha> pa: you need to use one of the enum constants or static_cast to the enum type when you're specifying the template parameter ^
[02:59:21] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[02:59:24] <pa> ah i see thanks
[02:59:41] *** Quits: jsbach (~jsbach@2a01:c23:6442:c300:9b5f:f3b9:5c34:fa84) (Ping timeout: 252 seconds)
[02:59:48] *** Quits: glestrade (~glestrade@rrcs-66-27-63-181.west.biz.rr.com) (Quit: glestrade)
[02:59:50] <pa> and i guess the int can't be a variable, even if in theory deductible at compile time?
[03:00:30] <pa> (like a constant that goes through a function parameter first)
[03:01:47] <pa> what i mean is that i wanted to have a void fooCaller(int i) { foo<i>(); } and then call fooCaller(1);
[03:02:30] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:04:08] *** Quits: cosimone (~user@93-47-228-11.ip115.fastwebnet.it) (Ping timeout: 250 seconds)
[03:04:10] <Alipha> pa: nope. You'll need a switch statement or such
[03:04:23] <pa> ah i get it, thanks
[03:06:02] <pa> a related question: can i use an enum value as template argument? f ex enum Foo{ bar = 0, baz }; std::array a<int, int(Foo::baz)>;
[03:06:28] <pa> (+1 maybe)
[03:06:32] <Alipha> pa: should work
[03:06:43] <kalven> no need to cast there either
[03:08:12] <Alipha> And regarding my suggestion to use a switch statement, you could use template metaprogramming to generate a lookup table or iterate using recursive function calls
[03:10:53] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[03:11:26] <pa> Alipha: that would be interesting, but idk how to do that..
[03:12:01] <pa> i mean, i was planning to create a lookup table, but to generate it through TMP no idea ..
[03:13:43] <Alipha> pa: do all the enum values have sequential integer values (starting from 0)?
[03:13:55] <pa> yes
[03:16:53] *** Joins: kit_ten (~u0_a391@2600:380:a452:c043:6563:21d7:2ac:40fb)
[03:16:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:20:43] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[03:21:02] *** Quits: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 250 seconds)
[03:25:37] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 240 seconds)
[03:26:33] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[03:27:16] *** hasuTMK is now known as hasu
[03:28:12] *** Joins: ferdna (~ferdna@user/ferdna)
[03:30:21] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[03:32:13] *** Quits: roadt (~roadt@60.168.93.178) (Ping timeout: 256 seconds)
[03:35:02] <Alipha> pa: I'm a little busy right now to write up an example, but I can do it in a bit
[03:36:47] *** Joins: AmR (~AmREiSa@41.36.185.103)
[03:43:39] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:44:41] <jkaye> Here's a dumb version: https://godbolt.org/z/bc451x1Yb
[03:44:50] <jkaye> Pretty tired, I'm sure this could be way better
[03:45:03] *** Joins: roadt (~roadt@114.97.240.218)
[03:46:21] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Quit: ZNC 1.8.2 - https://znc.in)
[03:47:52] *** Quits: magla (~gelignite@55d4b5f5.access.ecotel.net) (Quit: Stay safe!)
[03:55:07] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:56:01] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[03:58:24] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[04:00:10] *** Joins: jkaye_ (~qicruser@2605:ef80:c:803f::60:fe3)
[04:00:10] *** Quits: jkaye_ (~qicruser@2605:ef80:c:803f::60:fe3) (Client Quit)
[04:00:14] *** Joins: jkaye__ (~qicruser@2605:ef80:c:803f::60:fe3)
[04:00:14] *** Quits: jkaye__ (~qicruser@2605:ef80:c:803f::60:fe3) (Client Quit)
[04:00:17] <Alipha> Yeah, that's the "iterate using recursive function calls" solution
[04:00:25] *** Joins: jkaye_ (~qicruser@2605:ef80:c:803f::60:fe3)
[04:01:18] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[04:02:28] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[04:03:04] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 250 seconds)
[04:03:18] *** Quits: jkaye_ (~qicruser@2605:ef80:c:803f::60:fe3) (Read error: Connection reset by peer)
[04:08:10] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:12:30] *** Joins: chozorho (~chozorho@2601:146:300:c30::f5f4)
[04:14:33] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[04:17:47] *** Quits: proller (~p@2a02:6b8:b081:7212::1:5) (Ping timeout: 252 seconds)
[04:19:25] *** Joins: kaph_ (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[04:19:49] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:8634:97ff:fe6e:86ac) (Quit: Leaving)
[04:21:37] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[04:23:59] <jkaye> Yep
[04:29:23] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Quit: ZNC 1.8.2 - https://znc.in)
[04:30:51] *** Joins: proller (~p@80.240.216.69)
[04:34:16] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 250 seconds)
[04:34:57] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:34:58] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[04:36:02] *** Quits: Pook (~Pook@2001:8a0:f996:1400:d1b3:184f:4798:31ec) (Quit: Leaving)
[04:36:20] <Alipha> pa: https://godbolt.org/z/vv9qrKETj
[04:36:43] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[04:37:14] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[04:38:40] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[04:38:57] *** Quits: blackhole (~blackhole@2601:600:9f80:2aa0:f4df:e19a:2cc0:748a) (Ping timeout: 240 seconds)
[04:39:25] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:42:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:42:58] *** anyone is now known as zz
[04:43:57] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c4b8:6209:10f:d3e4) (Ping timeout: 240 seconds)
[04:51:57] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[05:01:01] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[05:04:23] *** Joins: blackhole (~blackhole@2601:600:9f80:2aa0:522:b004:a579:c68a)
[05:05:02] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[05:08:17] *** Quits: jkaye (~jkaye@2601:281:8300:7530:8293:8dc5:8087:f321) (Ping timeout: 240 seconds)
[05:08:37] *** Quits: blackhole (~blackhole@2601:600:9f80:2aa0:522:b004:a579:c68a) (Ping timeout: 240 seconds)
[05:10:29] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[05:15:52] *** Joins: frost (~frost@user/frost)
[05:16:24] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[05:16:53] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 256 seconds)
[05:19:40] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[05:21:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[05:23:11] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[05:23:13] *** Joins: jkaye_ (~qicruser@2601:281:8300:7530:ad17:6976:1a41:d704)
[05:23:54] *** Joins: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[05:24:50] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:27:08] *** Quits: kit_ten (~u0_a391@2600:380:a452:c043:6563:21d7:2ac:40fb) (Ping timeout: 250 seconds)
[05:35:15] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[05:36:12] *** Quits: kaichiuc1u (~kaichiuch@144.202.8.127) (Remote host closed the connection)
[05:36:24] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Remote host closed the connection)
[05:37:50] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[05:37:51] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[05:40:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:04] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:04] *** ChanServ sets mode: +v npaperbot
[05:41:15] *** Quits: N4buc0 (~N4buc0@191.250.99.50) (Ping timeout: 256 seconds)
[05:43:05] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[05:49:38] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[05:51:33] *** Quits: jkaye_ (~qicruser@2601:281:8300:7530:ad17:6976:1a41:d704) (Read error: Connection reset by peer)
[05:56:09] *** Quits: highrate (~presonic@user/highrate) (Ping timeout: 256 seconds)
[05:57:48] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[05:57:48] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Changing host)
[05:57:48] *** Joins: highrate (~presonic@user/highrate)
[05:58:33] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[05:59:25] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[05:59:53] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[06:05:01] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[06:06:24] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:06:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:07:28] *** Joins: pulse_ (~pulse@user/pulse)
[06:08:16] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[06:09:56] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:10:07] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[06:10:19] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[06:10:19] *** Quits: vfeenstr (vfeenstr@nat-pool-brq-t.redhat.com) (Ping timeout: 256 seconds)
[06:12:05] *** Joins: vfeenstr (vfeenstr@redhat/evilissimo)
[06:16:06] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[06:17:52] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[06:18:43] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[06:19:38] *** Joins: frost (~frost@user/frost)
[06:21:32] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4)
[06:24:34] *** Joins: nostar (~nostar@68.51.221.108)
[06:29:02] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Remote host closed the connection)
[06:30:13] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:32:26] *** Joins: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011)
[06:36:51] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[06:37:25] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[06:38:14] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:50:32] *** Joins: kaiseisei (~Thunderbi@171.116.100.151)
[06:51:13] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[06:51:54] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[06:52:57] *** Joins: Atque (~Atque@user/atque)
[06:53:58] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:58:16] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:58:30] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:04:37] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Ping timeout: 240 seconds)
[07:05:09] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:06:15] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 256 seconds)
[07:06:49] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[07:11:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[07:15:16] *** Quits: kaiseisei (~Thunderbi@171.116.100.151) (Quit: kaiseisei)
[07:22:14] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:27:26] *** Quits: DrMax_ (~DrMax@132.215.96.36) (Ping timeout: 245 seconds)
[07:29:46] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 250 seconds)
[07:39:42] *** Joins: frost (~frost@user/frost)
[07:44:21] *** Joins: DrMax_ (~DrMax@132.215.96.30)
[07:46:42] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:48:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[07:49:00] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[07:49:20] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[07:51:27] *** Joins: fluter (~fluter@user/fluter)
[07:52:25] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:52:32] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[07:52:32] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[07:52:32] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:53:48] *** Joins: rvalue (~rvalue@user/rvalue)
[07:54:05] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:57:35] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:59:40] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 250 seconds)
[08:00:59] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[08:01:23] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[08:02:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:09:27] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.241) (Remote host closed the connection)
[08:12:26] *** Quits: taiyu (~taiyu@user/taiyu) (Ping timeout: 245 seconds)
[08:14:12] *** Joins: taiyu (~taiyu@user/taiyu)
[08:14:42] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[08:15:01] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[08:15:42] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a6600c1b293496b9bcf03.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[08:16:24] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[08:16:27] *** Quits: rajkohaxor (~rajkosto@178.220.243.118) (Quit: Leaving)
[08:16:37] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[08:19:57] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Read error: Connection reset by peer)
[08:21:37] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[08:21:40] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:26:56] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Read error: Connection reset by peer)
[08:38:16] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[08:41:27] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[08:42:50] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[08:42:50] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[08:42:50] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[08:43:12] *** Joins: bindu (~bindu@user/bindu)
[08:43:37] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[08:45:37] *** Joins: teepee (~teepee@openscad/teepee)
[08:52:42] *** Joins: rvalue (~rvalue@user/rvalue)
[08:55:37] *** Joins: Burgundy (~yomon@82.76.72.88)
[08:59:01] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[08:59:11] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Read error: Connection reset by peer)
[09:00:07] *** Joins: rvalue (~rvalue@user/rvalue)
[09:00:13] *** Quits: r6ix (~r6ix@2607:fea8:5e0:82a0:42:1918:7b45:f3f3) (Read error: Connection reset by peer)
[09:01:24] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:04:42] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[09:05:30] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[09:05:51] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[09:06:24] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[09:06:34] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[09:06:49] *** Joins: malloy (~jimery@113.116.52.211)
[09:07:06] *** Joins: zalt (~zalt@user/zalt)
[09:07:39] <zalt> Will this be the same pointer across translation units? (it's defined in a header)
[09:07:44] <zalt>   template <typename T>
[09:07:46] <zalt>   static void *getTag() { static int tag; return &tag; }
[09:13:43] <zalt> Hmm, never mind, found a counter example by testing
[09:24:20] <Alipha> zalt:   perhaps: template<typename T> void *getTag() { static int tag; return &tag; }
[09:24:30] <Alipha> ie, no static
[09:25:06] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Ping timeout: 256 seconds)
[09:25:20] <zalt> wouldn't that violate the one definition rule, and you'd end up with linker errors?
[09:25:52] <ville> no. functions generated from function templates are marked so the linker won't complain
[09:27:04] <ville> http://www.eelis.net/c++draft/basic.def.odr#13.4
[09:27:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:27:21] <zalt> interesting, i do remember something like that in C++
[09:28:30] <zalt> thanks
[09:29:21] <zalt> what i posted is from clang's codebase, maybe it's a mistake? and they meant to not use static
[09:29:23] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[09:34:21] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[09:35:26] *** Quits: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011) (Ping timeout: 250 seconds)
[09:35:35] <zalt> this partly explains why C++ object files can be gigabytes in total but the final executable is relatively small, templates get deduplicated
[09:36:09] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[09:40:57] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:04] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:04] *** ChanServ sets mode: +v npaperbot
[09:42:13] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[09:46:07] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[09:48:34] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:49:39] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[09:49:40] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[09:50:21] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[09:54:04] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[09:55:36] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[09:56:04] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[10:03:31] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[10:05:12] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[10:08:10] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[10:08:53] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[10:09:45] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[10:17:50] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[10:18:09] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[10:19:12] *** Quits: pulse_ (~pulse@user/pulse) (Ping timeout: 250 seconds)
[10:31:26] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:32:01] *** Quits: chozorho (~chozorho@2601:146:300:c30::f5f4) (Ping timeout: 245 seconds)
[10:32:27] *** Joins: JohnMS_AWAY (~kvirc@89-64-83-123.dynamic.chello.pl)
[10:32:58] *** Joins: chozorho (~chozorho@2601:146:300:c30::7a99)
[10:38:38] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:40:26] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[10:48:46] <ville> it seems curious at least. perhaps they have their reasons
[10:53:52] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[10:56:44] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:01:40] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:02:43] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[11:07:54] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[11:10:25] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[11:11:27] *** Joins: wyre (~wyre@user/wyre)
[11:12:43] *** Quits: martiert (~martiert@ti0185q160-2775.bb.online.no) (Quit: leaving)
[11:13:00] *** Joins: martiert (~martiert@ti0185q160-2775.bb.online.no)
[11:13:30] *** Joins: namo (~nomo@95.87.208.95)
[11:14:30] *** Quits: BluesBoy (~bboy@user/bluesboy) (Quit: leaving)
[11:19:03] *** Quits: c4017w (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[11:20:59] *** Joins: Xardas (~Xardas@149.233.51.127)
[11:21:25] <Xardas> Hi.
[11:21:57] *** Joins: BluesBoy (~bboy@user/bluesboy)
[11:22:15] <Xardas> int i = 1;
[11:22:22] <Xardas> int *p1 = &i;
[11:22:28] <Xardas> int *p2 = p1;
[11:22:45] <Xardas> How comes we can initialiaze a pointer without the & ?
[11:23:00] <Xardas> What does the p2 pointer mean ?
[11:23:00] <osse> Because the value you set it to is already a pointer
[11:23:39] <osse> The value of p2 is the same as p1, so both point to the same int
[11:24:14] <Xardas> So p2 is just a copy of p1
[11:24:19] <osse> yes
[11:24:58] <osse> If you drink too much coffee you can also write  int **p2 = &p1
[11:25:11] <osse> it makes sense sometimes, but not very often
[11:25:12] <Xardas> Haha ! I've just done that
[11:26:35] <Xardas> Thanks for helping osse
[11:26:39] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[11:28:02] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[11:28:21] *** Joins: Xardas (~Xardas@149.233.51.127)
[11:28:47] *** Quits: chozorho (~chozorho@2601:146:300:c30::7a99) (Quit: WeeChat 3.0)
[11:31:11] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:16c8:3b32:c4e0:b680:cc8f)
[11:32:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011)
[11:33:08] *** Joins: dwt__ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[11:33:18] *** Joins: dansan_ (~daniel@75.81.148.51)
[11:33:23] *** Quits: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (Ping timeout: 252 seconds)
[11:33:30] *** Quits: dansan (~daniel@75.81.148.51) (Ping timeout: 260 seconds)
[11:33:39] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[11:42:59] *** Joins: jsbach (~jsbach@2a01:c22:b0ac:9600:1cd7:52ec:6b1a:4d40)
[11:44:19] *** Joins: frost (~frost@user/frost)
[11:46:44] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[11:46:55] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 256 seconds)
[11:47:29] *** Joins: teepee (~teepee@openscad/teepee)
[11:47:30] *** Quits: martiert (~martiert@ti0185q160-2775.bb.online.no) (Remote host closed the connection)
[11:49:11] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:49:44] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[11:49:47] *** Quits: jbalint_ (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7) (Read error: Connection reset by peer)
[11:49:57] *** Joins: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7)
[11:49:58] *** Joins: Karyon_ (~Karyon@user/karyon)
[11:50:26] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (Ping timeout: 252 seconds)
[11:51:36] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[11:54:09] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[11:54:47] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:55:18] *** Joins: frost (~frost@user/frost)
[11:59:14] *** Joins: hehehe9 (~hehehe9@149.6.151.74)
[12:00:21] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[12:01:37] *** Quits: dextaa (~DV@user/dextaa) (Ping timeout: 240 seconds)
[12:04:05] *** Joins: dextaa (~DV@user/dextaa)
[12:04:05] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[12:06:09] <ville> Xardas: if you're new and learning then paying lot of attention to what type any expressions you see is useful
[12:07:39] <Xardas> Yeah, i'm reading a book explaining stuff like low-level top-level const
[12:08:13] <Xardas> like this pointer for ex: const int *const p = &i;
[12:08:46] <Xardas> I would have never figured it out alone without reading this book
[12:09:18] *** Joins: martiert (~martiert@ti0185q160-2775.bb.online.no)
[12:09:41] <Xardas> ville : which made me gave up on the idea learning cpp from the doc :p
[12:10:14] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[12:10:33] <ville> well i don't mean just types when you declare a variable. i mean every expression. from your example: "int *p2 = p1;" just "p1" it self is an expression. so you could wonder then what is the type of that expression
[12:11:50] <ville> or if you had int x = 0; int* y = new int{-1}; x + *y; then what is the type of the "*y" expression?
[12:13:00] <Xardas> an int.
[12:13:14] <Xardas> y is a pointer *y is an int
[12:14:05] <ville> yes, just saying applying that kind of slow process to your own code solves lot of compiler errors you are going to face down the road
[12:15:09] <ville> a fair share of them will be mismatched types that are sovled by taking the address of something, dereferencing something, not dereferencing something and so on
[12:15:30] <ville> or sticking the const in the right spot
[12:15:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:16:00] <Xardas> You make a good point.
[12:16:08] <Xardas> That makes things easier.
[12:16:31] *** Joins: rendar (~rendar@user/rendar)
[12:18:30] <Xardas> Check this out : int *const ptr = &i;  and int const *ptr1 = &i; to make things easier here read it from right to left :D
[12:19:28] <Xardas> Thats helpful tip, i've read in a book.
[12:19:31] <ville> yes the short-and-wrong way to read c++ types is right-to-left, but it breaks down fairly fast: int xs[10]
[12:20:14] <ville> but by all means use it as your first approximation and if it fails then prepapre to pay more attention
[12:21:37] <ville> if you're on linux then your distro may package a tool called cdecl or you can access it on the web https://cdecl.org
[12:22:45] <Xardas> What a great tool. That's creative.
[12:25:15] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[12:26:36] *** Quits: bdt (~bdt@2a01:799:39c:7600:e65f:1ff:fe08:8a88) (Ping timeout: 250 seconds)
[12:32:16] *** Quits: mitch0 (~mitch@193-226-249-203.pool.digikabel.hu) (Quit: leaving)
[12:32:33] *** Joins: mitch0 (~mitch@193-226-249-203.pool.digikabel.hu)
[12:33:18] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:34:57] *** Cyp_ is now known as Cyp
[12:38:40] *** Joins: N4buc0- (~N4buc0@191.250.99.50)
[12:38:58] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:16c8:3b32:c4e0:b680:cc8f) (Remote host closed the connection)
[12:39:41] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[12:40:24] *** Joins: evelyette (~Eleanor@178.79.105.181)
[12:42:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[12:47:39] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:52:20] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c57b:af89:b9b2:8139)
[12:56:50] *** Joins: stonkey (~stonkey@user/stonkey)
[12:57:18] *** Quits: wre^ (~wre@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[12:58:36] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[13:02:56] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[13:03:26] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[13:06:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:09:27] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:11:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646)
[13:13:02] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:15:05] *** Joins: plastico (~plastico@neomutt/plastico)
[13:18:52] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[13:19:51] *** Joins: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de)
[13:21:06] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[13:21:37] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Client Quit)
[13:21:47] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[13:22:32] *** Joins: shanto05 (~shanto05@103.118.76.134)
[13:24:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:28:30] *** Quits: shanto05 (~shanto05@103.118.76.134) (Quit: Leaving)
[13:29:33] *** Quits: PJBoy (~PJBoy@user/pjboy) (Client Quit)
[13:33:14] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:59] *** Quits: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011) (Ping timeout: 250 seconds)
[13:37:50] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:40:57] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:05] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:05] *** ChanServ sets mode: +v npaperbot
[13:42:52] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:43:35] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[13:47:20] *** Joins: bdt (~bdt@155.51-174-24.customer.lyse.net)
[13:47:24] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:49:01] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[13:49:52] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[13:50:13] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[13:52:18] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[13:58:16] *** Joins: magla (~gelignite@55d475f4.access.ecotel.net)
[14:01:59] *** Quits: peeps (~peepsalot@openscad/peepsalot) (Read error: Connection reset by peer)
[14:02:09] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[14:02:53] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[14:03:03] *** Quits: bzyx_ (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:04:51] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[14:05:51] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[14:06:53] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[14:08:52] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[14:09:30] *** Joins: costanza (~i.am@user/heineken)
[14:14:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[14:15:43] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[14:23:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:24:08] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:24:30] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[14:25:05] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[14:25:17] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[14:25:59] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[14:26:12] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[14:27:13] *** Joins: proller (~p@80.240.216.69)
[14:30:58] *** Quits: malloy (~jimery@113.116.52.211) (Quit: WeeChat 3.0)
[14:41:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646) (Read error: Connection reset by peer)
[14:42:29] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:43:02] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646)
[14:45:52] *** Joins: bebyx1 (~Thunderbi@user/bebyx)
[14:46:57] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Ping timeout: 256 seconds)
[14:47:05] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[14:47:05] *** ChanServ sets mode: +v npaperbot
[14:47:30] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:47:31] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[14:47:31] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Ping timeout: 256 seconds)
[14:47:31] *** bebyx1 is now known as bebyx
[14:47:49] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a66003dc9c095b214cf35.ipv6.abo.wanadoo.fr)
[14:48:11] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[14:52:22] *** Joins: sigma_ (~sigma@164.215.255.32)
[14:53:31] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[14:54:16] *** Joins: Perry (~perry@coffee-break.at)
[15:00:09] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[15:02:44] *** Quits: Byteflux (~byte@byteflux.net) (Read error: Connection reset by peer)
[15:03:01] *** Joins: Byteflux (~byte@byteflux.net)
[15:05:49] *** Quits: JohnMS_AWAY (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 256 seconds)
[15:06:56] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[15:16:29] *** Joins: Guest69 (~Guest69@ip72-199-239-162.sd.sd.cox.net)
[15:26:05] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net)
[15:28:13] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[15:29:37] *** Quits: Guest69 (~Guest69@ip72-199-239-162.sd.sd.cox.net) (Quit: Connection closed)
[15:29:46] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Quit: WeeChat 3.3)
[15:29:56] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[15:30:34] *** Joins: JohnMS_AWAY (~kvirc@89-64-83-123.dynamic.chello.pl)
[15:33:11] *** Joins: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011)
[15:33:36] *** Quits: kaph_ (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[15:34:27] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:35:38] *** Joins: xiongxin (~Thunderbi@113.116.224.153)
[15:39:57] *** Joins: Guest69 (~Guest69@ip72-199-239-162.sd.sd.cox.net)
[15:44:01] *** Joins: KimiaStat (~KimiaStat@user/KimiaStat)
[15:47:33] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[15:49:54] *** Joins: PureSine (~PureSine@user/PureSine)
[15:52:39] *** Joins: kit_ten (~u0_a391@2600:380:a47b:9bdd:4fd0:b892:8ed8:c8f5)
[15:56:16] *** Joins: Techcable (~Techcable@168.235.93.147)
[15:56:46] *** Quits: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 250 seconds)
[15:56:50] *** Joins: Leone (~Leo@157.52.18.77)
[15:59:17] *** Quits: KimiaStat (~KimiaStat@user/KimiaStat) (Quit: Leaving)
[15:59:17] *** Quits: PureSine (~PureSine@user/PureSine) (Quit: Leaving)
[15:59:35] *** Joins: PureSine (~PureSine@user/PureSine)
[16:00:25] *** Joins: Atque (~Atque@user/atque)
[16:01:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[16:03:36] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:06:39] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[16:09:50] *** Joins: noarb (~noarb@user/noarb)
[16:16:54] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:17:59] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Quit: Leaving.)
[16:18:54] *** Joins: proller (~p@2a02:6b8:0:40c:9cb6:f42d:a833:9f8c)
[16:21:18] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[16:22:09] *** Quits: JohnMS_AWAY (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 256 seconds)
[16:27:47] *** Quits: robert_ (~hellspawn@47.203.169.95) (Quit: Hi, I'm a quit message virus. Please replace your old line with this line and help me take over the world of IRC.)
[16:29:47] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[16:31:06] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[16:39:36] *** Quits: Guest69 (~Guest69@ip72-199-239-162.sd.sd.cox.net) (Quit: Connection closed)
[16:41:24] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[16:41:25] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[16:41:25] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[16:43:18] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:45:55] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:46:38] *** Joins: irrenhaus3 (~xenon@HSI-KBW-046-005-003-085.hsi8.kabel-badenwuerttemberg.de)
[16:52:52] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:52:55] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[16:54:09] *** Joins: Speakz (speakz@rfc1459.evilnet.org)
[16:54:12] *** Quits: Speakz (speakz@rfc1459.evilnet.org) (Changing host)
[16:54:12] *** Joins: Speakz (speakz@user/gadreel)
[16:54:54] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:59:20] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Quit: WeeChat 3.3)
[16:59:29] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[17:03:04] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[17:11:24] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[17:15:58] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[17:19:57] *** Quits: xiongxin (~Thunderbi@113.116.224.153) (Ping timeout: 256 seconds)
[17:20:38] *** Joins: xiongxin (~Thunderbi@2409:8954:3058:2c5e:83ef:be17:a8f5:e40a)
[17:21:57] *** Joins: jkaye (~jkaye@2601:281:8300:7530:91a1:7dca:589a:aaae)
[17:27:45] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:27:53] *** Quits: hehehe9 (~hehehe9@149.6.151.74) (Quit: Client closed)
[17:29:00] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[17:29:03] *** Karyon_ is now known as Karyon
[17:29:40] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Quit: Konversation terminated!)
[17:31:26] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[17:40:58] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:05] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:05] *** ChanServ sets mode: +v npaperbot
[17:43:15] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:46:02] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[17:48:27] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[17:51:36] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Ping timeout: 250 seconds)
[17:56:35] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[17:58:10] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[17:59:20] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[17:59:57] *** Joins: jplejacq (~jplejacq@68.71.169.160)
[18:02:48] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[18:04:44] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (Quit: leaving)
[18:05:14] <GyrosGeier> hm
[18:05:28] <GyrosGeier> is there something like weak_ptr, but with a notification mechanism?
[18:06:29] <ville> the notification is when the conversion to shared_ptr fails
[18:07:55] <GyrosGeier> like, I have a component that should clean up other objects as soon as no "real" references remain
[18:08:22] <GyrosGeier> the closest I can see is a custom deleter
[18:12:48] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[18:14:04] <cbreak> GyrosGeier: How about the destructor of your owner class?
[18:15:54] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[18:16:56] <GyrosGeier> there are multiple
[18:17:13] <GyrosGeier> basically, this is a shared resource that should go away when it's no longer used
[18:17:36] <GyrosGeier> but the GUI overview should list it while it still exists
[18:18:10] <cbreak> so ... make an owner that owns it exclusively
[18:18:18] <cbreak> give that owner some callback functionality
[18:18:26] <GyrosGeier> ah, basically wrapping everything
[18:18:29] <cbreak> and use shared_ptr to this notifying-destructor owner
[18:18:38] <cbreak> you can use CRTP for this if you want
[18:18:44] <cbreak> as kind of a mixin-pattern
[18:19:02] <cbreak> ... yay for buzzwords :D
[18:19:55] <GyrosGeier> mh
[18:20:13] <GyrosGeier> this could even delay the actual destruction if the GUI classes need more time
[18:20:24] *** Joins: xkuru (~xkuru@user/xkuru)
[18:22:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:22:24] *** Joins: pulse_ (~pulse@user/pulse)
[18:24:40] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[18:24:58] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:25:05] <cbreak> got Qt?
[18:25:12] <cbreak> got multithreading?
[18:28:10] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:31:03] <GyrosGeier> unclear, that should be pluggable
[18:31:13] <GyrosGeier> otherwise I'd have gone with standard Qt signal/slot
[18:31:41] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:31:48] <GyrosGeier> IIRC there is a mechanism in there for "source has gone away"
[18:31:54] <cbreak> if you use Qt, there's https://doc.qt.io/archives/qt-4.8/qobject.html#destroyed
[18:32:55] <cbreak> also, for QObjects specifically there's QPointer, which is similar to a weak pointer
[18:34:09] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[18:34:15] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[18:34:22] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[18:34:46] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:36:57] *** Joins: karakedi (~eAC53C340@user/karakedi)
[18:38:36] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[18:39:16] *** Quits: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de) (Ping timeout: 250 seconds)
[18:39:50] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:40:01] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[18:44:55] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:749d:daa8:d51c:47ce)
[18:44:55] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:749d:daa8:d51c:47ce) (Changing host)
[18:44:55] *** Joins: skapata (~Skapata@user/skapata)
[18:47:20] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:50:45] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[18:50:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:53:20] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:00:57] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[19:01:06] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:04:04] *** Joins: sabry (~sabry@197.37.4.159)
[19:08:25] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[19:18:13] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[19:18:22] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[19:19:24] *** Quits: mitch0 (~mitch@193-226-249-203.pool.digikabel.hu) (Quit: leaving)
[19:25:19] *** Joins: mitch0 (~mitch@193-226-249-203.pool.digikabel.hu)
[19:26:09] *** Joins: NiD27 (~nid27@49.205.146.21)
[19:26:59] *** Quits: jplejacq (~jplejacq@68.71.169.160) (Quit: Leaving.)
[19:31:02] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:31:35] *** Joins: jplejacq (~jplejacq@68.71.169.160)
[19:32:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[19:35:04] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:39:16] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[19:39:43] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[19:43:03] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[19:43:50] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[19:46:37] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[19:46:56] <mike18> hi can you use const int size = numeric_limits<int>::max(); std::bitset<size> ids; ?
[19:47:25] <mike18> or thats not allowed?
[19:49:28] <mike18> oh its a template arg
[19:49:57] <BurumaSerafuku> { const int size = numeric_limits<int>::max(); std::bitset<size> ids; }
[19:49:58] <geordi> Undefined behavior detected.
[19:50:04] <BurumaSerafuku> :)
[19:50:13] <BurumaSerafuku> too big
[19:50:41] <BurumaSerafuku> answer is yes, but use a smaller value for bitsets
[19:52:03] <mike18> or allocate on heap?
[19:53:11] <mike18> using const int i get: template argument 1 is invalid
[19:57:44] <PJBoy> { const int size = numeric_limits<int>::max(); auto* p = new std::bitset<size>; }
[19:57:44] <geordi>  
[19:57:49] * PJBoy shrugs
[19:59:00] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[20:09:10] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[20:09:42] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[20:11:06] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:13:46] *** Joins: Betal (~Betal@user/betal)
[20:15:43] <Alipha> !give mike18 testcase
[20:15:44] <nolyc> mike18: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[20:16:08] *** Joins: cosimone` (~user@93-44-186-159.ip98.fastwebnet.it)
[20:16:10] <Alipha> mike18: is the `const int i;` a member variable? or is the value it's initialized to not visible where you're trying to use it?
[20:16:22] <mike18> global const int
[20:16:59] <Alipha> mike18: any reason you're not using constexpr instead of const?
[20:17:22] <mike18> no
[20:19:01] *** Joins: PointThink (~PointThin@acbh87.neoplus.adsl.tpnet.pl)
[20:19:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[20:19:54] <Alipha> mike18: does constexpr work?
[20:21:20] <mike18> no: https://wandbox.org/permlink/W16VDQjETTVdGX6G
[20:23:44] *** Joins: kit-ten (~u0_a391@64.85.173.130)
[20:25:18] *** Joins: snowyforest (~snowyfore@snowbank1.student.rit.edu)
[20:27:37] *** Quits: kit_ten (~u0_a391@2600:380:a47b:9bdd:4fd0:b892:8ed8:c8f5) (Ping timeout: 240 seconds)
[20:28:42] *** Joins: vicfred (~vicfred@user/vicfred)
[20:30:38] *** Quits: sigma_ (~sigma@164.215.255.32) (Ping timeout: 250 seconds)
[20:30:38] *** Joins: sigma__ (~sigma@164.215.234.46)
[20:31:25] *** Joins: AmR (~AmREiSa@41.36.185.103)
[20:34:02] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[20:35:48] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Quit: WeeChat 3.3)
[20:35:50] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[20:38:38] <ville> std::numeric_limits::max() is not constexpr
[20:39:42] <Eelis> geordi -c constexpr auto damn = numeric_limits<int>::max(); // i guess this is gcc QoI?
[20:39:42] <geordi> Success
[20:39:52] <mike18> static constexpr T max() noexcept;
[20:39:53] <mike18> ?
[20:40:28] <Eelis> http://eel.is/c++draft/numeric.limits.members#lib:numeric_limits,max yeah definitely constexpr
[20:40:36] <ville> err yeah misread
[20:41:30] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[20:45:41] <ville> it's because of the "using namespace std;"
[20:46:16] <ville> https://wandbox.org/permlink/sZqCvrAZrC413TDa
[20:47:04] *** Quits: xiongxin (~Thunderbi@2409:8954:3058:2c5e:83ef:be17:a8f5:e40a) (Remote host closed the connection)
[20:47:41] <ville> when you do that using-directive and use the name "size" in global scope
[20:47:42] *** Joins: c4017w (~c4017@209.52.68.8)
[20:48:27] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[20:48:47] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[20:48:48] *** Quits: magla (~gelignite@55d475f4.access.ecotel.net) (Quit: Stay safe!)
[20:49:42] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[20:51:35] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[20:52:55] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[20:53:00] *** Quits: kit-ten (~u0_a391@64.85.173.130) (Read error: Connection reset by peer)
[20:53:47] *** Quits: sabry (~sabry@197.37.4.159) (Quit: Client closed)
[20:54:52] <PJBoy> incredible
[20:55:06] <PJBoy> that's gonna be my new goto for why using namespace std can be bad
[20:55:44] <PJBoy> { bitset<size> bs; } const int size = numeric_limits<int>::max();
[20:55:44] <geordi> error: template argument 1 is invalid
[20:55:46] <PJBoy> woo
[20:56:37] <PJBoy> or `constexpr size_t size = 8;` would be reasonable too
[20:57:04] <Eelis> 'size' is indeed a name in std:: that's very likely to conflict. "max" and "min" are, too
[20:57:39] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[20:58:35] <Eelis> but yeah, the fault of resulting conflicts is on the person foolishly doing "using namespace std;"
[20:59:33] <PJBoy> the "template argument is invalid" is a really unhelpful error
[20:59:41] <ville> it's the best
[20:59:44] <PJBoy> it swallows up the more useful error
[20:59:48] <Eelis> could be geordi cutting something off
[20:59:53] <PJBoy> { auto t = size; } constexpr size_t size = 8;
[20:59:53] <geordi> error: reference to 'size' is ambiguous
[21:00:01] <PJBoy> nah it's the same output on wandbox
[21:00:03] <ville> Eelis:  you get the same on wandbox
[21:00:06] <Eelis> oh ok
[21:01:05] *** pulse_ is now known as pulse
[21:02:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[21:02:45] *** Joins: plastico (~plastico@neomutt/plastico)
[21:11:22] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 250 seconds)
[21:14:21] *** Joins: fivegruel (~fivegruel@HSI-KBW-109-192-195-167.hsi6.kabel-badenwuerttemberg.de)
[21:16:54] *** Quits: snowyforest (~snowyfore@snowbank1.student.rit.edu) (Quit: WeeChat 3.4)
[21:23:25] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Remote host closed the connection)
[21:24:09] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:24:38] <theseb> https://pastebin.com/VEeN46Bg <--- why last 2 outputs are not BOTH +1?
[21:25:48] <theseb> maybe using unsigned ints?
[21:26:44] <theseb> yup that was it..nm ;)
[21:27:11] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[21:33:09] *** Joins: snowyforest (~snowyfore@snowbank1.student.rit.edu)
[21:33:47] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Quit: Leaving)
[21:38:12] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[21:39:26] *** Joins: Cyp_ (~cyp@213.237.88.120)
[21:40:58] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:06] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:06] *** ChanServ sets mode: +v npaperbot
[21:41:58] <CarloWood> If I do this:
[21:42:01] <CarloWood>   std::string const& name = render_pass->name();
[21:42:01] <CarloWood>   auto res = std::find_if(m_render_passes.begin(), m_render_passes.end(), [name](RenderPass* render_pass){ return render_pass->name() == name });
[21:42:17] <CarloWood> is `name` inside the lambda still a reference?
[21:42:32] <kalven> no
[21:42:42] <CarloWood> [&name] ?
[21:42:46] <kalven> yes
[21:42:50] <CarloWood> thx
[21:43:15] <CarloWood> And my library might be 100k lines, but when using it you'll end up with a very FEW lines.
[21:43:16] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c57b:af89:b9b2:8139) (Ping timeout: 245 seconds)
[21:43:37] *** Quits: Cyp (~cyp@213.237.85.9) (Ping timeout: 256 seconds)
[21:44:18] <kalven> word
[21:44:30] <CarloWood> What does that mean?
[21:45:51] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:15f6:fe0e:3dfb:7d89)
[21:46:14] <kalven> well said
[21:46:51] <CarloWood> I looked it up in the dictionary: used to express agreement or affirmation.
[21:47:21] <CarloWood> I didn't know that.
[21:47:31] *** Joins: chozorho (~chozorho@2601:146:300:c30::6b8f)
[21:47:41] <N`aZ> its size is also platform specific
[21:47:41] <Eelis> i guess it's short for "you're speaking the LORD's word!"
[21:48:47] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[21:49:54] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:50:07] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[21:52:25] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:54:21] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[21:56:08] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:01:51] *** Quits: cosimone` (~user@93-44-186-159.ip98.fastwebnet.it) (Remote host closed the connection)
[22:02:18] *** Joins: cosimone (~user@93-44-186-159.ip98.fastwebnet.it)
[22:02:40] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[22:09:22] *** Quits: sigma__ (~sigma@164.215.234.46) (Quit: Konversation terminated!)
[22:13:26] *** Quits: snowyforest (~snowyfore@snowbank1.student.rit.edu) (Quit: WeeChat 3.4)
[22:13:45] *** Joins: snowyforest (~snowyfore@snowbank1.student.rit.edu)
[22:15:17] *** Quits: martiert_work (~martiert@173.38.220.37) (Ping timeout: 240 seconds)
[22:17:23] *** Joins: martiert_work (~martiert@173.38.220.42)
[22:17:58] *** Joins: magla (~gelignite@55d475f4.access.ecotel.net)
[22:18:53] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:15f6:fe0e:3dfb:7d89) (Quit: Konversation terminated!)
[22:24:02] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9f5:eb51:8b61:96ab)
[22:24:46] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[22:31:46] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:31:59] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[22:32:01] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Remote host closed the connection)
[22:32:07] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[22:32:56] *** Joins: Perry (~perry@coffee-break.at)
[22:33:45] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[22:35:18] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[22:38:17] *** Quits: proller (~p@2a02:6b8:0:40c:9cb6:f42d:a833:9f8c) (Ping timeout: 240 seconds)
[22:42:41] *** luca0N_ is now known as luca0N
[22:46:49] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[22:47:34] *** Quits: PureSine (~PureSine@user/PureSine) (Ping timeout: 250 seconds)
[22:47:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:51:59] *** Joins: jw4 (~Thunderbi@user/jw4)
[22:54:25] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Quit: leaving)
[22:55:51] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[22:57:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[22:58:38] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Client Quit)
[23:00:05] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[23:06:09] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[23:13:09] *** Quits: snowyforest (~snowyfore@snowbank1.student.rit.edu) (Ping timeout: 256 seconds)
[23:16:31] *** Quits: kit_ten (~u0_a391@64.85.173.130) (Read error: Connection reset by peer)
[23:16:41] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[23:17:51] <PJBoy> CarloWood, https://s3.amazonaws.com/v.comb.io/VTOG1LHB/r5Ykbt.mp4?1532721042347
[23:20:41] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Quit: leaving)
[23:22:17] *** Quits: baltazar (~baltazar@193-226-249-203.pool.digikabel.hu) (Ping timeout: 240 seconds)
[23:22:37] *** Quits: mitch0 (~mitch@193-226-249-203.pool.digikabel.hu) (Ping timeout: 256 seconds)
[23:22:50] *** Quits: NiD27 (~nid27@49.205.146.21) (Remote host closed the connection)
[23:24:22] *** Joins: mitch0 (~mitch@84-236-20-10.pool.digikabel.hu)
[23:24:29] *** Joins: baltazar (~baltazar@84-236-20-10.pool.digikabel.hu)
[23:29:30] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:30:54] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[23:32:21] *** Joins: snowyforest (~snowyfore@snowbank1.student.rit.edu)
[23:32:38] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[23:36:11] *** Joins: arinov (~arinov@213.194.126.155)
[23:41:13] <AliceMeows> https://godbolt.org/z/Wz6YheMqe is this code illegal or is msvc's stl broken?
[23:46:26] <cbreak> AliceMeows: https://godbolt.org/z/WM5a5KhTs ?
[23:46:36] <BurumaSerafuku> yup :)
[23:46:40] <cbreak> it complains something about destructible, but that error makes no sense
[23:46:48] <BurumaSerafuku> C arrays aren't stdlib containers friendly
[23:47:10] <AliceMeows> That still doesn't explain the error and gcc accepts the code
[23:47:21] <BurumaSerafuku> { variant<string, char[10]> x; }
[23:47:22] <geordi>  
[23:47:24] <ville> what would make that illegal in articular?
[23:47:29] <AliceMeows> Something has to be wrong
[23:47:43] <BurumaSerafuku> { map<int,char[10]> x; }
[23:47:44] <geordi>  
[23:47:56] <BurumaSerafuku> o_O
[23:48:32] <BurumaSerafuku> { map<int,char[10]> x; x[1] = "huhu"; x[10] = "haha"; cout << x; }
[23:48:32] <geordi> error: incompatible types in assignment of 'const char [5]' to 'map<int, char [10]>::mapped_type' {aka 'char [10]'}
[23:48:35] <TinoDidriksen> "A variant is not permitted to hold references, arrays, or the type void."
[23:48:44] <Alipha> gcc/clang are wrong then
[23:49:03] <BurumaSerafuku>  { variant<string, char[10]> x;  x = "huhu"; cout << x; }
[23:49:04] <geordi> error: use of deleted function 'variant<_Types>& variant<_Types>::operator=(variant<_Types>&&) [with _Types = {string, char [10]}]'
[23:49:07] <BurumaSerafuku> lol
[23:49:31] <BurumaSerafuku> msvc wins. flawless victory
[23:49:41] <AliceMeows> { variant<int, char[10]> x;  x = "huhu"; cout << x; }
[23:49:42] <geordi> error: no match for 'operator=' in 'x = "huhu"' (operand types are 'variant<int, char [10]>' and 'const char [5]')
[23:49:56] <cbreak> BurumaSerafuku: "huhu" is not an array, and even if it was, arrays are not assignable
[23:50:06] <Alipha> https://en.cppreference.com/w/cpp/utility/variant says "All types must meet the Destructible requirements (in particular, array types and non-object types are not allowed)", which apparently msvc checks for that requirement but gcc/clang don't
[23:50:36] <cbreak> Alipha: so... destructible means more than being destructible?
[23:51:01] <Alipha> { using A = int[10]; A x; x.~A(); }
[23:51:01] <geordi> error: expected class-name before '(' token
[23:51:15] <TinoDidriksen> https://eel.is/c++draft/variant#variant.general-2
[23:51:33] <Alipha> { foo<int[10]>(); } template<typename T> void foo() { A x; x.~A(); }
[23:51:33] <geordi> error: 'A' was not declared in this scope
[23:51:40] <cbreak> ah, manually destructible
[23:51:40] <Alipha> { foo<int[10]>(); } template<typename A> void foo() { A x; x.~A(); }
[23:51:40] <geordi> error: request for member '~int [10]' in 'x', which is of non-class type 'int [10]'
[23:51:44] <TinoDidriksen> https://eel.is/c++draft/utility.arg.requirements#tab:cpp17.destructible - "Array types and non-object types are not Cpp17Destructible."
[23:52:07] <TinoDidriksen> QED.
[23:52:56] <Alipha> it's kinda weird that you can't call the destructor on an array
[23:53:41] <BurumaSerafuku> { int x; x.~int(); }
[23:53:41] <geordi> error: expected identifier before 'int'
[23:53:52] <BurumaSerafuku> { using A = int; A x; x.~A(); }
[23:53:53] <geordi>  
[23:53:53] <Alipha> { foo<int>(); } template<typename A> void foo() { A x; x.~A(); }
[23:53:54] <geordi>  
[23:54:00] <AliceMeows> Technically native types aren't objects
[23:54:26] <BurumaSerafuku> it works with int
[23:54:28] <Alipha> it's also weird that x.~int() isn't allowed, but x.~A() is if A = int
[23:54:40] <BurumaSerafuku> for templates. it helps, Alipha
[23:55:01] <ville> AliceMeows: everything's an object except references and functions
[23:55:04] <Alipha> BurumaSerafuku: well, i was intending to imply that i think `x.~int();` should be allowed
[23:55:35] <BurumaSerafuku> I think they wanted to give the tokenizer/parser a break :-)
[23:55:39] <PJBoy> void is also not an object
[23:56:12] *** Quits: sebbu (~sebbu@user/sebbu) (Read error: Connection reset by peer)
[23:56:20] <AliceMeows> ville: but then I can't really derive from int for example
[23:56:35] <ville> AliceMeows: that's not the definition of object in c++
[23:56:50] <Alipha> AliceMeows: in c++, "object" means "a value with storage" more or less
[23:57:09] <ville> http://www.eelis.net/c++draft/intro.object
[23:57:17] <PJBoy> what about empty classes? >_>
[23:57:23] *** Joins: sebbu (~sebbu@user/sebbu)
[23:57:24] <PJBoy> or references that take storage >_>
[23:57:46] <ville> types aren't objects
[23:57:55] <ville> so void or an empty class is not an object
[23:58:07] <PJBoy> an instance of an empty class then
[23:58:08] <ville> but you can make an object of an empty class at least
[23:58:21] <PJBoy> particularly one that's a base class subobject of a derived class
[23:58:28] <ville> and yeah that's still an object, but there's ebo
[23:58:38] *** Quits: snowyforest (~snowyfore@snowbank1.student.rit.edu) (Ping timeout: 250 seconds)
[23:58:49] <PJBoy> I don't really understand the spec's definition
[23:59:25] <PJBoy> an object is something that's created?
[23:59:32] <PJBoy> by one of a few different means
[23:59:50] <Eelis> yep, can't have objects that don't exist, because they don't exist
[23:59:59] <Alipha> does "storage" need to "occupy space" to be considered "storage"? heh
