[00:03:51] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:45c3:5c27:1a55:12c6) (Remote host closed the connection)
[00:04:27] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:45c3:5c27:1a55:12c6)
[00:08:42] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:45c3:5c27:1a55:12c6) (Ping timeout: 255 seconds)
[00:14:32] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 258 seconds)
[00:18:26] *** Joins: mikail_ (~mikail@90.212.77.3)
[00:20:57] *** Quits: mikail (~mikail@90.212.77.3) (Ping timeout: 245 seconds)
[00:42:30] *** Quits: andreasbuhr_ (~quassel@p549dbe0f.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:50:32] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 245 seconds)
[00:59:19] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[01:52:09] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[01:54:52] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[01:57:23] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 268 seconds)
[02:18:33] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[02:28:43] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[02:30:59] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:31:16] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[02:31:25] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Read error: Connection reset by peer)
[02:31:43] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:32:24] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:33:02] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[02:34:08] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:42:52] *** Joins: szarkaorg (~szarka@2001-48F8-9004-E05-353E-C045-6E85-3C42-dynamic.midco.net)
[02:45:56] *** Quits: szarka (~szarka@2001-48F8-9004-E05-8EA-C1C4-A485-6287-dynamic.midco.net) (Ping timeout: 255 seconds)
[03:07:37] *** Quits: esses (uid38151@id-38151.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:23:44] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 255 seconds)
[03:31:25] *** Quits: Iryon (~Iryon@185-12-21-77.sigma.jaslo.pl) (Read error: Connection reset by peer)
[03:33:43] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[03:36:20] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[03:50:29] *** Joins: Sasazuka__ (~Sasazuka@user/sasazuka)
[03:50:38] *** Joins: akaWolf (~akaWolf@akawolf.org)
[03:52:19] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Ping timeout: 265 seconds)
[04:12:09] *** Quits: mikail_ (~mikail@90.212.77.3) (Quit: Leaving)
[04:24:34] *** Joins: X-Scale` (~ARM@132.102.108.93.rev.vodafone.pt)
[04:26:26] *** Quits: X-Scale (~ARM@46.207.28.37.rev.vodafone.pt) (Ping timeout: 272 seconds)
[04:26:26] *** X-Scale` is now known as X-Scale
[04:27:16] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:27:27] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 255 seconds)
[04:30:52] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[04:30:52] *** Wulf4 is now known as Wulf
[04:35:18] *** Quits: gabriel1_ (~gabriel1@ip49.ip-37-59-91.eu) (Read error: Connection reset by peer)
[04:40:28] *** Quits: Sasazuka__ (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:55:57] *** Joins: gabriel1 (~gabriel1@5.170.108.54)
[05:02:14] *** Quits: gabriel1 (~gabriel1@5.170.108.54) (Remote host closed the connection)
[05:06:23] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net)
[05:13:29] *** Joins: szarka (~szarka@2001-48F8-9004-E05-353E-C045-6E85-3C42-dynamic.midco.net)
[05:14:48] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[05:24:22] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[05:34:06] *** Quits: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:f836:f768:acfb:1b9a) ()
[05:37:44] *** Joins: pete443 (~pete@user/pete443)
[05:39:13] *** Quits: pete443_ (~pete@user/pete443) (Ping timeout: 258 seconds)
[05:40:05] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net) (Quit: Client closed)
[05:41:32] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[05:46:47] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 268 seconds)
[05:50:45] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:1608:5ddb:ace2:2fb3) (Ping timeout: 268 seconds)
[06:03:15] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[06:19:31] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[06:20:38] *** Joins: markizano (markizano@2600:3c00::f03c:92ff:fe86:b66e)
[06:23:44] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 255 seconds)
[06:45:34] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[06:51:40] *** Joins: frost (~frost@59.71.241.179)
[07:02:20] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[07:13:47] *** Quits: ua_ (~ua@public-gprs232354.centertel.pl) (Quit: Leaving)
[07:50:03] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Quit: Leaving)
[07:50:44] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 268 seconds)
[07:56:17] *** Joins: instantp10neer (~instantp1@user/instantp10neer)
[08:23:20] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-6c53-2ea3-89b4-023b.res6.spectrum.com)
[08:24:42] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-3440-ee66-189d-dbb7.res6.spectrum.com) (Ping timeout: 245 seconds)
[08:30:36] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Read error: Connection reset by peer)
[08:30:40] *** Joins: instantp10neer_ (~instantp1@user/instantp10neer)
[08:41:56] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:45:28] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[08:47:08] *** Joins: gggpkm (~gggpkm@221.219.77.161)
[08:47:20] *** Quits: gggpkm (~gggpkm@221.219.77.161) (Remote host closed the connection)
[08:49:38] *** Joins: gggp (~gggp@60.10.194.47)
[09:05:23] *** Joins: gggp_ (~gggp@60.10.194.47)
[09:08:19] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 246 seconds)
[09:11:49] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Ping timeout: 246 seconds)
[09:18:41] *** Joins: gggp (~gggp@60.10.23.164)
[09:19:22] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[09:48:06] *** Joins: ua_ (~ua@public-gprs229313.centertel.pl)
[09:51:19] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[09:53:31] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[10:05:44] *** Joins: andreasbuhr (~quassel@p549dbb60.dip0.t-ipconnect.de)
[10:09:32] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[10:10:05] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Client Quit)
[10:35:33] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-6c53-2ea3-89b4-023b.res6.spectrum.com) (Ping timeout: 255 seconds)
[10:41:08] *** Quits: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9) (Remote host closed the connection)
[10:41:28] *** Joins: d34dh0r53 (~d34dh0r53@104-191-10-248.lightspeed.snantx.sbcglobal.net)
[10:50:05] *** Joins: qbt (~edun@user/edun)
[10:59:36] *** Joins: zegalch (~zegalch@178.128.75.133)
[11:02:41] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b887-749f-7796-49c4.res6.spectrum.com)
[11:04:54] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:34:06] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[11:36:45] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 255 seconds)
[12:01:30] *** Quits: gggp (~gggp@60.10.23.164) (Ping timeout: 255 seconds)
[12:03:04] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 272 seconds)
[12:12:23] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[12:21:00] *** Joins: Warped (~Warped@user/warped)
[12:22:42] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (Ping timeout: 252 seconds)
[12:23:26] *** Quits: Brnocrist (~spartak@user/brnocrist) (Ping timeout: 252 seconds)
[12:23:41] *** Joins: Brnocrist (~spartak@user/brnocrist)
[12:24:10] *** Quits: ericnoan (~en@user/ericnoan) (Ping timeout: 252 seconds)
[12:24:25] *** Joins: rudi_s (~simon@user/rudi-s/x-7673890)
[12:25:23] *** Joins: ericnoan (~en@user/ericnoan)
[12:30:24] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b887-749f-7796-49c4.res6.spectrum.com) (Quit: jarthur)
[12:32:03] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 244 seconds)
[12:34:13] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[12:34:52] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:694c:cc5c:55d8:63b)
[12:34:58] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:a5e1:e5e5:58a5:f9f9)
[12:35:57] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:a5e1:e5e5:58a5:f9f9) (Remote host closed the connection)
[12:36:32] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:a5e1:e5e5:58a5:f9f9)
[12:37:14] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:a5e1:e5e5:58a5:f9f9) (Remote host closed the connection)
[12:37:30] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:a5e1:e5e5:58a5:f9f9)
[12:38:19] *** Joins: vernaz_ (~vernaz@148.63.127.167)
[12:42:04] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:a5e1:e5e5:58a5:f9f9) (Ping timeout: 268 seconds)
[12:42:56] *** Joins: gareppa (~gareppa@user/gareppa)
[12:43:29] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[12:50:00] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[12:56:42] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:58:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 255 seconds)
[12:58:23] *** Lord_of_Life_ is now known as Lord_of_Life
[13:11:19] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:17:25] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[13:20:26] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 255 seconds)
[13:29:54] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (Ping timeout: 265 seconds)
[13:34:44] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[13:37:21] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Ping timeout: 255 seconds)
[13:49:43] *** Joins: laguneucl (~Pitsikoko@2a02:587:dc04:e00:12c3:7bff:fe6d:d374)
[13:52:58] *** Joins: frost (~frost@59.71.241.179)
[14:03:42] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[14:03:48] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[14:05:56] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[14:06:25] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Remote host closed the connection)
[14:06:49] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[14:07:06] *** Joins: Ohlov31153402689 (~Ohlov3@dyndsl-095-033-063-232.ewe-ip-backbone.de)
[14:10:32] *** Quits: Ohlov3115340268 (~Ohlov3@dyndsl-085-016-104-101.ewe-ip-backbone.de) (Ping timeout: 245 seconds)
[14:11:58] *** Joins: gggp (~gggp@60.10.194.47)
[14:12:28] *** Quits: laguneucl (~Pitsikoko@2a02:587:dc04:e00:12c3:7bff:fe6d:d374) (Ping timeout: 246 seconds)
[14:13:10] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc04:e00:12c3:7bff:fe6d:d374) (Ping timeout: 246 seconds)
[14:14:57] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:16:42] *** Joins: gggp_ (~gggp@125.33.91.236)
[14:18:15] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[14:19:52] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[14:28:45] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Quit: Client closed)
[14:28:50] *** Joins: gabriel1 (~gabriel1@5.170.128.57)
[14:33:29] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[14:49:41] *** Quits: gggp_ (~gggp@125.33.91.236) (Ping timeout: 258 seconds)
[14:52:48] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 272 seconds)
[15:00:59] *** Joins: aravk_ (~aravk@user/aravk)
[15:02:40] *** aravk_ is now known as aravk
[15:31:45] *** Joins: gggp (~gggp@60.10.23.164)
[15:33:10] *** Joins: kish` (~aqua@user/aqua)
[15:41:18] *** Quits: vernaz_ (~vernaz@148.63.127.167) (Remote host closed the connection)
[15:44:15] *** Joins: vernaz (~vernaz@148.63.127.167)
[15:48:43] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Ping timeout: 246 seconds)
[16:19:59] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:24:39] *** Quits: gggp (~gggp@60.10.23.164) (Remote host closed the connection)
[16:25:25] *** Joins: gggp (~gggp@60.10.194.47)
[16:25:39] *** Quits: gggp (~gggp@60.10.194.47) (Remote host closed the connection)
[16:26:25] *** Joins: gggp (~gggp@60.10.194.47)
[16:32:27] *** Joins: gggp_ (~gggp@60.10.194.47)
[16:35:44] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[16:41:22] *** Quits: gggp_ (~gggp@60.10.194.47) (Read error: Connection reset by peer)
[16:44:15] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-21.prtc.net)
[16:57:31] *** Joins: esses (uid38151@id-38151.stonehaven.irccloud.com)
[16:57:56] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[17:01:14] *** Joins: Elzington (~Elzington@68.235.43.172)
[17:07:58] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[17:09:49] *** Quits: vernaz (~vernaz@148.63.127.167) (Remote host closed the connection)
[17:27:56] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 255 seconds)
[17:28:19] *** Joins: Wulf (~Wulf@user/wulf)
[17:36:20] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[17:36:40] *** Joins: gggp (~gggp@60.10.23.164)
[17:39:49] *** Joins: gggp_ (~gggp@60.10.23.164)
[17:40:05] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[17:40:27] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[17:41:05] *** Joins: vernaz (~vernaz@148.63.127.167)
[17:41:05] *** Joins: KeterClass3 (~KeterClas@vm0.max-p.me)
[17:41:15] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[17:41:31] *** Joins: jhed9 (~jhed9@113.189.225.35.bc.googleusercontent.com)
[17:41:56] *** Joins: TheCoffeMaker_ (~TheCoffeM@125-121-245-190.fibertel.com.ar)
[17:42:36] *** Quits: gggp (~gggp@60.10.23.164) (Ping timeout: 255 seconds)
[17:43:58] *** Joins: ChoHag_ (~mking@81.187.183.71)
[17:44:23] *** Joins: kulak1 (~kulak@user/kulak)
[17:44:36] *** Joins: ericonr- (~ericonr@voidlinux/docs/ericonr)
[17:45:51] *** Joins: edun (~edun@user/edun)
[17:46:21] *** Joins: phebus_ (~phebus@fsf/member/phebus)
[17:46:51] *** Quits: ericonr (~ericonr@voidlinux/docs/ericonr) (Killed (osmium.libera.chat (Nickname regained by services)))
[17:46:52] *** ericonr- is now known as ericonr
[17:47:23] *** Joins: alexbobp_ (~alex@meowface.org)
[17:47:24] *** Joins: voiceofreason_ (~voiceofre@207.148.10.181)
[17:48:18] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 252 seconds)
[17:48:48] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (*.net *.split)
[17:48:48] *** Quits: zegalch (~zegalch@178.128.75.133) (*.net *.split)
[17:48:48] *** Quits: qbt (~edun@user/edun) (*.net *.split)
[17:48:48] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[17:48:48] *** Quits: chowmeined (~chowmeine@user/chowmeined) (*.net *.split)
[17:48:48] *** Quits: kulak (~kulak@user/kulak) (*.net *.split)
[17:48:48] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (*.net *.split)
[17:48:49] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (*.net *.split)
[17:48:49] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[17:48:49] *** Quits: EmmyNoether (~EmmyNoeth@oasys.ch0wn.org) (*.net *.split)
[17:48:49] *** Quits: lizzie (~alex@meowface.org) (*.net *.split)
[17:48:49] *** Quits: jhed9_ (~jhed9@113.189.225.35.bc.googleusercontent.com) (*.net *.split)
[17:48:49] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (*.net *.split)
[17:48:49] *** Quits: KeterClass (~KeterClas@vm0.max-p.me) (*.net *.split)
[17:48:49] *** Quits: ChoHag (~mking@81.187.183.71) (*.net *.split)
[17:48:49] *** Quits: elichai2 (sid212594@stonehaven.irccloud.com) (*.net *.split)
[17:48:49] *** Quits: _0ne (~one@user/0ne/x-2101768) (*.net *.split)
[17:48:49] *** Quits: phebus (~phebus@fsf/member/phebus) (*.net *.split)
[17:48:49] *** Quits: Ori_B (~ori@mimir.eigenstate.org) (*.net *.split)
[17:48:49] *** KeterClass3 is now known as KeterClass
[17:48:51] *** edun is now known as qbt
[17:48:56] *** Guyver2_ is now known as Guyver2
[17:49:01] *** Joins: zegalch (~zegalch@178.128.75.133)
[17:49:07] *** Joins: hardtotell (~hardtotel@satyr.seedboxes.cc)
[17:50:17] *** Joins: Ori_B (~ori@mimir.eigenstate.org)
[17:50:48] *** Joins: elichai2 (sid212594@id-212594.stonehaven.irccloud.com)
[17:55:54] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[17:56:17] *** Joins: _0ne (~one@user/0ne/x-2101768)
[17:58:04] *** Joins: OneLegend (~OneLegend@wireguard/tunneler/onelegend)
[17:58:25] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-21.prtc.net) (Quit: Client closed)
[18:06:42] *** Quits: OneLegend (~OneLegend@wireguard/tunneler/onelegend) (Quit: Connection closed)
[18:13:22] *** Joins: vernaz (~vernaz@148.63.127.167)
[18:16:27] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[18:18:30] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[18:21:41] *** Joins: aqua (~aqua@user/aqua)
[18:23:58] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[18:26:24] *** beard_ is now known as beard
[18:26:37] *** Quits: beard (sid110468@id-110468.tinside.irccloud.com) (Changing host)
[18:26:37] *** Joins: beard (sid110468@user/beard)
[18:27:45] *** aqua is now known as kish`
[18:29:21] *** Joins: gggp__ (~gggp@221.219.77.161)
[18:30:22] *** Quits: zinc (~zdleaf@163.ip-51-254-203.eu) (Quit:  )
[18:32:33] *** Quits: gggp_ (~gggp@60.10.23.164) (Ping timeout: 255 seconds)
[18:33:03] *** Joins: zinc (~zinc@163.ip-51-254-203.eu)
[18:40:34] *** gggp__ is now known as gggp
[18:48:36] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[18:48:52] *** Quits: ericonr (~ericonr@voidlinux/docs/ericonr) (Ping timeout: 245 seconds)
[18:50:57] *** Joins: ericonr (~ericonr@voidlinux/docs/ericonr)
[18:52:49] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 246 seconds)
[18:54:20] *** Joins: lampilelo (~user@user/lampilelo)
[19:10:22] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:11:00] <aczid_> Security Analysis of Telegram (Symmetric Part) https://mtpsym.github.io/
[19:11:32] *** Quits: ua_ (~ua@public-gprs229313.centertel.pl) (Ping timeout: 268 seconds)
[19:12:15] <wasamasa> what, IGE doesn't actually do what it's designed to do?
[19:12:18] <wasamasa> color me surprised
[19:21:42] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[19:24:58] *** Joins: ua_ (~ua@public-gprs227821.centertel.pl)
[19:26:04] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 246 seconds)
[19:42:18] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:43:59] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[19:45:53] *** Quits: andreasbuhr (~quassel@p549dbb60.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:46:26] *** Joins: gggp_ (~gggp@60.10.23.164)
[19:49:03] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 255 seconds)
[19:49:27] *** Quits: gggp (~gggp@221.219.77.161) (Ping timeout: 258 seconds)
[19:57:32] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[20:01:47] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[20:04:05] <kish`> https://mtpsym.github.io/
[20:04:28] <kish`> We performed a detailed security analysis of the encryption offered by the popular Telegram messaging platform.
[20:05:10] <riv> kish`++
[20:05:20] <kish`> don't thank me!
[20:05:24] <riv> thank you
[20:05:39] <kish`> I do recall earlier something about obvious backdoors in telegrams crypto
[20:05:43] <kish`> it was a detailed analysis
[20:06:20] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 255 seconds)
[20:10:10] <ericonr> was it the weird RNG thing?
[20:16:06] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:17:46] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[20:23:53] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (Remote host closed the connection)
[20:26:08] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 255 seconds)
[20:28:48] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[20:30:54] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[20:34:43] *** Joins: gabriel1_ (~gabriel1@5.170.128.94)
[20:36:58] *** Quits: gabriel1 (~gabriel1@5.170.128.57) (Ping timeout: 252 seconds)
[20:41:31] *** Quits: ua_ (~ua@public-gprs227821.centertel.pl) (Ping timeout: 265 seconds)
[20:47:03] *** Joins: ua_ (~ua@public-gprs227821.centertel.pl)
[20:56:02] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[21:00:13] *** Joins: gggp__ (~gggp@60.10.23.164)
[21:00:38] *** gggp__ is now known as gggp
[21:02:48] *** Quits: gggp_ (~gggp@60.10.23.164) (Ping timeout: 250 seconds)
[21:03:58] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[21:04:30] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:07:17] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[21:12:03] *** Joins: peterhil (~peterhil@mobile-access-bceec8-93.dhcp.inet.fi)
[21:21:57] *** Joins: jbis (~jbis@pool-71-190-180-229.nycmny.fios.verizon.net)
[21:22:02] <jbis> hi
[21:23:13] <jbis> Are stream or block ciphers preferred over UDP (unstable connection where packet loss may occur)? 
[21:23:40] <jbis> Or doesn't matter
[21:24:06] <danieldg> doesn't matter if you use authenticated ciphers like you should be
[21:24:56] <jbis> For block, is each packet encrypted separately? 
[21:25:08] <danieldg> after all, ipsec supports them all and it's a packet-based protocol
[21:25:37] <ioxzev1z> ... wat
[21:25:56] <jbis> was 'wat' to me?
[21:25:57] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[21:26:07] <ioxzev1z> UDP is a protocol for sending and receiving data. It has nothing to do with cryptography.
[21:26:27] <ioxzev1z> Actually I re-read the question, you were asking about using crypto over UDP
[21:26:38] <jbis> Yes
[21:27:31] <jbis> Why is it important to authenticate symmetrically encrypted data?
[21:27:41] <MacGyver> Depends *entirely* on the application layer protocol you want to carry.
[21:28:11] <MacGyver> And even then, the distinction isn't so much "stream vs block cipher"
[21:28:20] <MacGyver> As it is "individual packets encrypted or application-layer stream"
[21:28:34] <MacGyver> Re: authenticating encrypted data, google.
[21:28:43] <jbis> so why does wireguard use stream cipher?
[21:28:53] *** Joins: riv (~river@tilde.team/user/river)
[21:28:58] <MacGyver> Suffice to say that unauthenticated encryption can be attacked in fun and interesting ways.
[21:29:11] <TimMc> jbis: Authenticated encryption provides tamper-resistance and preventing certain kinds of decryption attacks.
[21:29:22] <Alipha> jbis: you should just use an authenticated encryption algorithm (e.g., xchacha20-poly1305 or AES-GCM), where each packet has an IV/nonce and authentication tag, and it doesn't matter if it's stream cipher or block cipher 
[21:29:22] *** Quits: fatal (0x00@user/fatal) (Ping timeout: 265 seconds)
[21:29:51] <Alipha> note that those two examples (xchacha20-poly1305 and AES-GCM are authenticated stream ciphers
[21:31:13] <jbis> Alipha hmm i  will take a look, I didn't know you could tamper with encrypted data...well now that I think about it, that makes sense
[21:31:25] <jbis> I mean even simply, you can simply delete bytes
[21:31:33] <Alipha> jbis: if you're not authenticating your encrypted data, then you might as well just send plaintext because non-authenticated encrypted data provides no meaningful security
[21:31:36] <MacGyver> Yes, or add them, or flip bits at the end.
[21:32:07] <jbis> Alipha, well the person maybe able to tamper, but not read the data
[21:32:08] <MacGyver> Search for "padding oracle" and read a bit for one class of attacks.
[21:32:24] <Alipha> jbis: padding oracle attacks allow you to decrypt messages
[21:32:36] <jbis> MacGyver, funny enough I'm one challenge away from the padding oracle ones
[21:32:42] <jbis> I guess I will learn more about it there
[21:34:11] <jbis> https://cryptopals.com/sets/2/challenges/16
[21:34:25] <jbis> https://cryptopals.com/sets/3/challenges/17
[21:34:25] <Alipha> jbis: in addition to using an authenticated cipher, you also need to prevent replay attacks
[21:34:43] <jbis> incrementing nonce?
[21:34:52] <aczid_> there is a revamped cryptopals at https://cryptohack.org/
[21:35:10] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 265 seconds)
[21:35:38] <jbis> aczid_ Yes, I plan on looking at that after. 
[21:35:56] <jbis> cryptohack seems more complicated for no reason
[21:36:46] <danieldg> jbis: that works if your connection never reorders packets, but for UDP that's not a good assumption
[21:36:46] <aczid_> the free stanford crypto course on coursera also has some fun challenges about unauthenticated encryption https://www.coursera.org/learn/crypto
[21:36:50] <riv> solve a thing ot register, so annoying :/
[21:37:12] <danieldg> so you need a window of acceptable sequences and a list of already-seen ones
[21:37:26] <danieldg> just like a TCP stack, really
[21:37:39] <jbis> But still sequential right? 
[21:37:49] <jbis> I don't want to have to store every nonce for the past year
[21:38:27] <Alipha> jbis: yes, though with UDP, you also need to account for packets arriving out of order, so you probably need some kind of sliding window where the receiver accepts nonces in range [x, x+n] and keeps track of which of those n packets have already been received. also, you should use different symmetric keys for each direction of communication so a packet that was sent A->B can't be reused and sent back to A,
[21:38:29] <Alipha> pretending it came from B
[21:38:33] <jbis> >  A 64bit counter is used, and cannot be wound backward. UDP, however, sometimes delivers messages out of order. For that reason we use a sliding window, in which we keep track of the greatest counter received and a window of roughly 2000 prior values, checked after verifying the authentication tag
[21:38:48] <ioxzev1z> jbis, look at how openvpn works over UDP
[21:39:11] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:694c:cc5c:55d8:63b) (Ping timeout: 268 seconds)
[21:39:39] <aczid_> you can prevent message reordering attacks if you chain the authentication tag of the next message to the last
[21:40:02] <jbis> like a blockchain? xD
[21:40:09] <aczid_> like in GCM iirc
[21:40:29] <Alipha> aczid_: sounded like jbis wanted to allow for packetloss
[21:40:38] <MacGyver> That doesn't really work for a protocol where you accept loss though, like wireguard.
[21:40:39] <aczid_> oh, nevermind then :)
[21:41:06] <MacGyver> But the fact that a protocol uses UDP does not automatically mean it accepts loss.
[21:41:26] <jbis> Sure. Stable protocol can be built on top of UDP.
[21:41:56] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[21:43:22] *** Joins: akaWolf (~akaWolf@akawolf.org)
[21:43:31] <ioxzev1z> jbis, much easier to use tcp over udp than like openvpn than to use tcp over encrypted tcp
[21:43:59] <jbis> From what I understand tcp over tcp never works well
[21:44:25] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[21:44:54] <ioxzev1z> s/than//
[21:45:00] <MacGyver> It works well on a perfect network.
[21:45:14] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-f52d-d440-e265-bac9.res6.spectrum.com)
[21:45:32] <MacGyver> As soon as you encounter any of the issues TCP is supposed to solve, it starts to break.
[21:46:03] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 255 seconds)
[21:46:38] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-50.prtc.net)
[21:47:02] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-50.prtc.net) (Client Quit)
[21:47:12] <jbis> So is there any benefit or drawback to use stream vs block cipher in any situation?
[21:47:12] *** Quits: qbt (~edun@user/edun) (Ping timeout: 245 seconds)
[21:47:52] <MacGyver> The distinction nowadays is practically meaningless.
[21:48:13] <MacGyver> All the sensible modes of operation for blockciphers *are* streaming modes.
[21:48:24] <MacGyver> And a lot of stream ciphers are built from "block-cipher"-like building blocks.
[21:50:29] <Alipha> jbis: for drive encryption, where the assumption is that the ciphertext can't be larger than the plaintext, then block ciphers are safer because they're more resistant to analysis or modification.
[21:50:46] <ioxzev1z> iirc stream ciphers work for pretty much anything other than things such as drives, where you cannot store information about encryption in the block itself
[21:51:24] <ioxzev1z> e.g. file encryption can store whatever information it wants, whereas a drive mapping 4096-byte blocks cannot store encryption information in that 4096-bytes
[21:51:24] <Alipha> Format Preserving Encryption (FPE) is based upon block ciphers
[21:51:46] <jbis> > then block ciphers are safer because they're more resistant to analysis or modification
[21:51:47] <jbis> why?
[21:53:28] <Alipha> jbis: with a stream cipher, any modifications only affect the specific bits which are modified. with block ciphers, whole blocks end up changing, plus potentially any blocks following the altered block, for propogating cipher modes
[21:54:04] <Alipha> though block ciphers can be vulnerable to padding oracle attacks, if not properly mitigated
[21:54:42] <ioxzev1z> Alipha, wrt a stream cipher, addition of encrypted data into the middle of the ciphertext (via plaintext) happens how exactly?
[21:54:47] <jbis> hmm
[21:54:53] <jbis> drive encryption is an interesting problem
[21:55:49] <danieldg> you can do authenticated drive encryption, but you basically need a journal like a filesystem at that point
[21:56:10] <Alipha> ioxzev1z: you can't insert encrypted data in the middle?
[21:56:37] <ioxzev1z> Alipha, was that a rhetorical question?
[21:57:09] <Alipha> ioxzev1z: yes
[21:57:17] <jbis> How does one create a hardware encryption chip? 
[21:57:34] <danieldg> mostly the same as you create any other chip
[21:57:45] *** Quits: gggp (~gggp@60.10.23.164) (Ping timeout: 255 seconds)
[21:57:49] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[21:57:52] <jbis> What makes a chip designed for AES better than a standard CPU/GPU chip? 
[21:58:26] <ioxzev1z> jbis, ( ._.)
[21:58:27] <danieldg> it will have the algorithm implemented in transistors and so will be faster
[21:58:42] <danieldg> though modern CPUs often have an AES engine in them
[21:58:49] <MacGyver> jbis: Most people will say speed, but imo the main advantage is side-channel resistance. AES is very hard to get side-channel resistant in software.
[21:58:58] <ioxzev1z> danieldg, pretty much all have AES-NI, for example
[21:59:02] <aczid_> also lower power use :)
[21:59:04] <jbis> and the "aes engine" is transistor optimized?
[21:59:11] <danieldg> yep
[21:59:31] <jbis> hmm
[21:59:43] <jbis> I don't know enough about electrical engineering to delve deeper 
[21:59:56] <jbis> Interesting
[22:00:45] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 258 seconds)
[22:00:50] *** Guyver2_ is now known as Guyver2
[22:00:57] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[22:00:58] <danieldg> basically if you have a modern CPU you won't get faster than the dedicated instructions for AES
[22:01:47] <Alipha> unless you use like xchacha20 or such instead and we develop dedicated chacha instructions :-)
[22:02:03] <jbis> thats coming right?
[22:02:07] <danieldg> well, that's cheating by using a different algorithm :p
[22:03:14] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 258 seconds)
[22:04:13] <jbis> i feel like if i ever say "chacha20" out lound i'm going to sound like an idiot XD
[22:04:37] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[22:05:40] <MacGyver> Why?
[22:06:32] <jbis> funny name
[22:07:06] <jbis> lastly, it seems that the consensus is "Encrypt-then-MAC" instead of "MAC-then-encrypt", why not both? 
[22:07:30] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:07:33] <jbis> MAC-encrypt-MAC
[22:07:36] <danieldg> having two MACs is a waste of time and space
[22:07:47] <MacGyver> MAC-encrypt-MAC doesn't really give you any desirable properties.
[22:07:55] *** Joins: kulak1 (~kulak@user/kulak)
[22:07:59] <MacGyver> Sign-encrypt-MAC would be the thing you want in such a scenario.
[22:08:06] <jbis> well then why "Encrypt-then-MAC" over "MAC-then-encrypt"
[22:08:24] <MacGyver> Because MAC-then-encrypt has all the problems unauthenticated encryption does.
[22:08:31] <MacGyver> Because it's unauthenticated encryption.
[22:08:41] <danieldg> iirc the two are proven security-equivalent if the encryption is size-preserving
[22:08:58] <ms7821> well that can't be true
[22:09:02] <jbis> but you can't change the plaintext
[22:09:08] <MacGyver> Usually those proofs ignore side-channels.
[22:09:24] <MacGyver> So maybe it can be.
[22:09:29] <jbis> if you preform any ciphertext modification, when it's decrypted, HMAC wont work
[22:09:36] <jbis> MAC*
[22:09:55] <danieldg> well, yes, but in reality decryption and mac verification happen in parallel
[22:10:04] <danieldg> so you already have the side channel issues
[22:10:27] <jbis> hmm i'm not too familiar with side channels, other than timing attacks
[22:10:32] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:11:11] *** Joins: kulak1 (~kulak@user/kulak)
[22:11:53] <riv> power consumption is another side channel
[22:13:06] <Alipha> jbis: https://moxie.org/2011/12/13/the-cryptographic-doom-principle.html
[22:13:46] *** Joins: kish` (~aqua@user/aqua)
[22:15:11] <Alipha> jbis: https://en.m.wikipedia.org/wiki/Lucky_Thirteen_attack is an attack against MAC-then-encrypt
[22:15:26] <jbis> Thank you
[22:17:51] <Alipha> For attacks against MAC-then-encrypt for stream ciphers, if you know the entirety of the message that is being encrypted (which happens surprisingly often in practice), you can replace that message with any other message you want (of the same length) without knowing the encryption key
[22:18:03] <Alipha> (assuming an unkeyed MAC)
[22:21:58] <MacGyver> An unkeyed MAC isn't.
[22:22:26] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:22:48] *** Joins: kulak1 (~kulak@user/kulak)
[22:23:02] <Alipha> Am unkeyed MAC isn't a MAC? I suppose
[22:23:27] <MacGyver> Yeah, that's just a hash, right. At most you could call it an integrity check, but not an authentication code.
[22:23:49] <jbis> what is "unkeyed MAC "?
[22:23:49] <MacGyver> I'm not familiar with any literature that actually calls an unkeyed MAC algorithm a MAC.
[22:24:13] <Alipha> Yeah, an unkeyed MAC would just be a hash
[22:24:14] <MacGyver> jbis: It's where you use a MAC algorithm but set it to a publicly known predefined key.
[22:24:31] <jbis> that's useless
[22:24:37] <MacGyver> jbis: Like, HMAC with all-zeroes as a key.
[22:24:51] <jbis> i guess useful for networking, not for cryptio
[22:24:57] <jbis> crypto*
[22:25:07] <danieldg> do you call AES with an all-zero key encryption too?
[22:25:20] <jbis> yes
[22:25:59] <Alipha> I imagine there's "(unkeyed) hash-then-encrypt" code out there though because "why bother using a MAC when it's already encrypted?"
[22:28:14] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[22:28:42] <jbis> How would one crack AES if someone used the same iv and key for multiple messages?
[22:28:49] *** Joins: aleck (~aleck@user/aleck)
[22:29:18] <yawkat> well that depends on what you mean by "crack"
[22:29:33] <jbis> Find the key
[22:29:53] <Alipha> Not possible (that we know of)
[22:30:28] <MacGyver> Alipha: Urgh, it's Friday evening, why do you have to say these terrible things.
[22:30:35] <MacGyver> Alipha: Depress me *after* the weekend please.
[22:30:50] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[22:30:56] <jbis> So why not use the key and and iv for multiple messages?
[22:30:57] <Alipha> Key-IV reuse potentially allows attackers to recover the plaintext of messages encrypted with the same key-IV pair
[22:31:10] <jbis> Oh. How?
[22:31:18] *** Joins: zro (~zro@user/zro)
[22:31:30] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 255 seconds)
[22:31:40] <danieldg> it's a two-time pad
[22:31:53] <wasamasa> lol
[22:32:15] <jbis> https://crypto.stackexchange.com/a/2250/87286
[22:32:26] <ioxzev1z> danieldg, iirc E(m, k) where k is all 0 is fine, though you would probably check k before using it for that situation
[22:32:51] <ioxzev1z> danieldg, iirc 00 ... 01 is also a perfectly fine key if chosen randomly
[22:33:20] <yawkat> very unlikely to be chosen randomly if it's all 0...
[22:33:36] <danieldg> ioxzev1z: true, but my point was basically that any encryption or MAC with a well-known key isn't secure
[22:34:25] <ioxzev1z> Also note that 10 ... 00 or any other variation is a bad idea even though technically speaking a brute force would need to go though all 2^127 before getting to a possible key, because an adversary that knows you always use 1x would just set the left most bit to 1, therefore halving the keyspace
[22:35:02] <ioxzev1z> I think halving, maybe my math is off... 2^128 bit key with 1 set on left becomes 2^127, no
[22:35:03] <ioxzev1z> ?
[22:35:19] <danieldg> yep
[22:35:21] <jbis> sounds right
[22:35:53] <danieldg> feel free to write out 1 followed by 127 x's to verify that there are 128 bits :)
[22:36:05] <ioxzev1z> hah
[22:37:09] <jbis> cool
[22:37:15] <jbis> thanks for y'all help
[22:37:27] <jbis> have a good weekend o/
[22:37:30] *** Quits: peterhil (~peterhil@mobile-access-bceec8-93.dhcp.inet.fi) (Ping timeout: 268 seconds)
[22:40:17] *** Quits: jbis (~jbis@pool-71-190-180-229.nycmny.fios.verizon.net) (Quit: Leaving...)
[22:44:39] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Quit: Klotz)
[22:45:25] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[22:47:34] *** Quits: Fluxx (~Fluxx@user/fluxx) (Read error: Connection reset by peer)
[22:47:53] *** Joins: Fluxx (~Fluxx@user/fluxx)
[23:09:10] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 258 seconds)
[23:11:29] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-dcfa-1836-6c8e-0e77.res6.spectrum.com)
[23:12:31] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-f52d-d440-e265-bac9.res6.spectrum.com) (Ping timeout: 246 seconds)
[23:12:33] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[23:18:43] *** Joins: OneLegend (~OneLegend@wireguard/tunneler/onelegend)
[23:20:07] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[23:26:59] *** Quits: instantp10neer_ (~instantp1@user/instantp10neer) (Read error: Connection reset by peer)
[23:27:48] *** Joins: instantp10neer_ (~instantp1@user/instantp10neer)
[23:52:25] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[23:55:34] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[23:58:36] *** Joins: schubisu (~schubisu@dgplug/schubisu)
