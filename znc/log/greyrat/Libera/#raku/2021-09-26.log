[00:22:45] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[00:23:01] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[01:23:01] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:01] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:23:24] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[01:23:50] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[01:23:57] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[01:24:09] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[01:24:20] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[01:24:22] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[01:25:03] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[01:25:10] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[01:25:10] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[01:25:51] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[01:26:06] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[01:47:09] *** Joins: mlepnos[m] (~mlepnosma@2001:470:69fc:105::1:1c4)
[01:47:54] *** Parts: mlepnos[m] (~mlepnosma@2001:470:69fc:105::1:1c4) ()
[01:53:43] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[02:07:19] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[02:08:22] *** Joins: tejr (~tejr@user/tejr)
[02:19:52] *** Joins: holyghost (~holyghost@109.136.39.83)
[02:23:25] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[02:23:34] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[02:23:37] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[02:26:02] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[02:40:34] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:02:40] *** Quits: holyghost (~holyghost@109.136.39.83) (Quit:  bbl)
[03:06:25] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[03:24:44] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[03:33:08] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:34:07] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:23:41] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[04:25:05] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[04:28:56] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[04:30:52] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[04:45:17] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 265 seconds)
[04:45:35] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[04:54:20] *** gordonfish- is now known as gordonfish
[05:13:18] *** Joins: Eddward (~Eddward@207.138.204.132)
[05:14:00] <Eddward> m: 3**2
[05:14:00] <camelia> rakudo-moar ba15173fd: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "**" in expression "3**2" in sink context (line 1)␤»
[05:14:09] <Eddward> m: day 3**2
[05:14:09] <camelia> rakudo-moar ba15173fd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    day used at line 1. Did you mean 'say'?␤␤»
[05:14:12] <Eddward> m: say 3**2
[05:14:12] <camelia> rakudo-moar ba15173fd: OUTPUT: «9␤»
[05:14:34] <Eddward> m: say [1, {$_*2} ... 10]
[05:14:37] <camelia> rakudo-moar ba15173fd: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 1355392 bytes␤»
[05:14:47] <Eddward> m: say [1, { $_ * 2 } ... 10]
[05:14:49] <camelia> rakudo-moar ba15173fd: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 1355392 bytes␤»
[05:15:08] <Eddward>  5, { $_ * 2 } ... 40
[05:15:17] <Eddward> m: say  5, { $_ * 2 } ... 40
[05:15:17] <camelia> rakudo-moar ba15173fd: OUTPUT: «(5 10 20 40)␤»
[05:15:37] <Eddward> m: say  [ 5, { $_ * 2 } ... 40 ]
[05:15:37] <camelia> rakudo-moar ba15173fd: OUTPUT: «[5 10 20 40]␤»
[05:15:45] <Eddward> m: say  [ 5, { $_ * 2 } ... 10 ]
[05:15:45] <camelia> rakudo-moar ba15173fd: OUTPUT: «[5 10]␤»
[05:16:20] <Eddward> m: say  [ 1, { ($_+1) * 2 } ... 10 ]
[05:16:20] <camelia> rakudo-moar ba15173fd: OUTPUT: «[1 4 10]␤»
[05:16:43] <Eddward> m: say  [ 1, { ($_+1) ** ($_+1) } ... 10 ]
[05:17:05] <camelia> rakudo-moar ba15173fd: OUTPUT: «(timeout)»
[05:23:59] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[06:17:28] <gfldex> m: my &min-prime = -> $_, *%_ { .first(&is-prime, |%_) }; say min-prime [10..42], :end;
[06:17:28] <camelia> rakudo-moar ba15173fd: OUTPUT: «41␤»
[06:17:33] <gfldex> codesections: ^^^
[06:22:11] *** Joins: keutoi (~keutoi@157.47.70.207)
[07:22:11] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:22:11] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:11] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:22:12] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:22:12] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[07:22:33] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[07:23:09] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[07:23:20] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[07:23:28] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[07:23:34] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[07:23:39] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[07:24:46] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[07:25:11] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[07:25:12] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[07:46:34] <codesections> gfldex, yeah, I know.  Or even better with &first instead of .first:my &min-prime = -> |c {first(&is-prime, |c)}; say min-prime [10..42], :end 
[07:46:39] <codesections> m: my &min-prime = -> |c {first(&is-prime, |c)}; say min-prime [10..42], :end 
[07:46:39] <camelia> rakudo-moar ba15173fd: OUTPUT: «41␤»
[07:47:17] <codesections> but, still, that's not quite as nice as Whatever currying
[07:47:21] <codesections> (imo)
[07:49:57] <codesections> m: my &min-prime = &first ∘ ->|c {\(&is-prime, |c)}; say min-prime [10..42], :end  # also works, and a bit clearer (again, imo)
[07:49:57] <camelia> rakudo-moar ba15173fd: OUTPUT: «41␤»
[08:23:03] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[08:23:49] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:23:58] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:24:17] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[08:25:01] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[08:25:07] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[08:43:16] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:22:36] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:23:01] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[09:25:15] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[09:33:05] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:49:56] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[09:59:44] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:12:30] *** Quits: Eddward (~Eddward@207.138.204.132) (Ping timeout: 265 seconds)
[11:04:32] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:09:24] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[11:55:53] *** Joins: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[11:56:25] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 265 seconds)
[11:56:25] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 265 seconds)
[11:56:29] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 252 seconds)
[11:58:08] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 252 seconds)
[12:35:26] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[12:38:53] *** Joins: holyghost (~holly@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749)
[12:43:17] *** Quits: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:43:34] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[12:43:47] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[12:44:37] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[12:45:28] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[13:25:55] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[14:25:55] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[14:25:55] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[14:25:55] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:55] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[14:25:55] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[14:25:55] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[14:25:55] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[14:25:55] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:25:56] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[14:25:56] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[14:25:56] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[14:26:34] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[14:26:44] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[14:26:45] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[14:27:05] *** Joins: immediate (~immediate@5.177.204.124)
[14:27:28] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[14:27:49] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[14:28:17] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[14:28:29] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[14:28:44] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[14:38:53] <immediate> I make typos and pass unwanted named arguments to methods. Because of `%_` I don't get errors as I would with a subroutine. I write `die "..." if %_` to the beginnings of each method. Is there a way I can automate this for each method defined in a class
[14:50:50] *** Quits: immediate (~immediate@5.177.204.124) (Ping timeout: 252 seconds)
[14:51:10] *** Joins: immediate (~immediate@5.177.204.124)
[15:26:13] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[15:26:39] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[15:26:52] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:28:02] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[15:28:37] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[15:32:49] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:48:39] *** Quits: charsbar (~charsbar@ik1-311-15861.vs.sakura.ne.jp) (Quit: ZNC - http://znc.in)
[15:54:26] *** Joins: charsbar (~charsbar@ik1-311-15861.vs.sakura.ne.jp)
[15:58:13] *** Joins: Guest92 (~Guest92@2402:e280:2117:297:f5a4:1339:fd63:345a)
[16:00:53] *** Parts: Guest92 (~Guest92@2402:e280:2117:297:f5a4:1339:fd63:345a) ()
[16:13:33] *** Quits: holyghost (~holly@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749) (Quit: This computer has gone to sleep)
[16:13:48] *** Joins: holyghost (~holly@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749)
[16:17:52] <gfldex> immediate: https://raku.land/github:nxadm/StrictNamedArguments
[16:19:04] <immediate> oh thanks a lot
[16:24:52] <holyghost> immediate, as gfldex says, I only use them in my sub method BUILD. Didn't understand your question.
[16:26:37] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[16:26:40] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[16:26:50] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[16:27:23] <holyghost> I am on vacation tomorrow, I am going to make some AI agent system out of  my module AI-Agent, probably client-serverwise
[16:27:50] <holyghost> So you can send out intelligent agents from phone to phone for example
[16:27:59] <holyghost> The sky's the limit :-)
[16:29:09] <holyghost> So one just automates searches of agents on your phone and invites them etc without use input then you get e.g. mails/messages what others have of freeware or music (e.g. from your friends) etc
[16:29:22] <holyghost> S/use/user/
[16:29:37] <holyghost> The system should be fully automated
[16:29:45] <holyghost> AI as if it were 
[16:30:52] <phogg> this works as expected: my $s = "<[ of ]>"; "foolish".match(/ ^ <$s> + /); but...
[16:30:56] <phogg> m: my $s = "of"; "foolish".match(/ ^ <[ <$s> ]>  + /)
[16:30:56] <camelia> rakudo-moar ba15173fd: ( no output )
[16:30:57] <holyghost> I guess there's raku for android/iPhone/nokias. Needs e.g. a binary which can be run as a server or client
[16:31:12] <phogg> where am I going wrong here?
[16:31:47] <MasterDuke> you can't interpolate into character classes
[16:32:06] <phogg> I noticed. Supposing I want to, how can I get around that?
[16:32:31] <phogg> I can dump my chars into a string "<[ $s ]>" first, but then they are not escaped properly
[16:32:36] <MasterDuke> you'd have to build the regex and then EVAL it
[16:33:02] <phogg> Makes sense.
[16:34:12] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[17:08:48] <discord-raku-bot> <Anton Antonov#7232> @holyghost I am using Raku to translate natural language specifications of computational workflows into executable code (mostly R and Mathematica, sometimes Raku and Python.) I assume I should be able to hook up that to the AI-Agent client-server idea you describe?
[17:10:11] <discord-raku-bot> <Anton Antonov#7232> @holyghost Or maybe your AI-Agent framework is more "specialized", for some industry standard agents, say, from gaming?
[17:11:12] <holyghost> It can be used for all of that, yes
[17:11:27] <holyghost> OO and AI generally
[17:11:39] <holyghost> OO <-> OOP
[17:12:31] <holyghost> It was brought to me for making actor-objects in Scheme and LISP (without CLOS)
[17:24:58] <discord-raku-bot> <Anton Antonov#7232> @holyghost I looked into the AI-Agent GitHub repositories — I think more explanations and/or links are needed.(Sorry, if that seems too negative of a feedback…)
[17:26:34] <holyghost> I will take care of it next week, I am going to do real AI agents with it then
[17:26:46] <holyghost> Should be easy enough
[17:27:51] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[17:28:47] <holyghost> discord-raku-bot, take a look at : https://scsh.net/resources/sunterlib.html, there's the same things programmed in Scheme in some of the packages
[17:29:50] <discord-raku-bot> <Anton Antonov#7232> @holyghost  Sounds good, thanks!
[17:35:51] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[17:36:50] *** Joins: tejr (~tejr@user/tejr)
[17:44:01] *** Quits: immediate (~immediate@5.177.204.124) (Ping timeout: 252 seconds)
[17:49:59] <codesections> m: my $s = "of"; say "foolish".match(/ ^ <{"<[ $s ]>"}>  + /)
[17:50:00] <camelia> rakudo-moar ba15173fd: OUTPUT: «｢foo｣␤»
[17:50:16] <codesections> phogg ^^^ I think that might do what you want
[17:50:37] <codesections> see https://docs.raku.org/language/regexes#Regex_interpolation
[17:51:51] *** Joins: immediate (~immediate@5.177.204.124)
[17:52:10] <discord-raku-bot> <Anton Antonov#7232> @codesections You might be interested to see this Raku package `ML::TriesWithFrequencies` : https://github.com/antononcube/Raku-ML-TriesWithFrequencies .
[17:54:36] <phogg> codesections: seems to work!
[18:00:39] <discord-raku-bot> <Anton Antonov#7232> @codesection This is a great read: https://news.perlfoundation.org/post/grant_proposal_persistent_data_structures_for_raku
[18:01:07] <phogg> codesections: it's not quite perfect, though. I still need to escape each char of $s to avoid breaking on e.g. $s = ']>'; Still nicer than EVAL.
[18:01:54] *** Quits: immediate (~immediate@5.177.204.124) (Quit: Connection closed)
[18:11:45] <codesections> phogg, good point.  Here's a different approach with slightly different semantics: 
[18:11:46] <codesections> m: my $s = "of]"; say "foolish".match(/ ^ @($s.comb) + /)       
[18:11:47] <camelia> rakudo-moar ba15173fd: OUTPUT: «｢foo｣␤»
[18:13:10] <codesections> It uses https://docs.raku.org/language/regexes#Quoted_lists_are_LTM_matches and gets the same result in these cases, but technically expands to /^ [ o | f | ']' ]+ /
[18:13:48] <codesections> instead of /^ <[of\]]>+ / 
[18:23:17] <phogg> I don't think that matters
[18:27:01] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[18:28:00] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[19:01:32] *** Quits: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net) (Quit: Ĝis revido!)
[19:03:00] *** Joins: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net)
[20:03:01] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:03:01] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:01] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[20:03:33] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[20:03:42] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[20:03:49] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[20:03:54] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[20:04:09] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[20:04:39] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[20:04:57] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[20:05:03] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[20:06:16] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[20:26:18] *** Joins: Sgeo (~Sgeo@user/sgeo)
[20:58:26] *** Quits: keutoi (~keutoi@157.47.70.207) (Quit: leaving)
[21:04:11] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[21:05:21] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[21:05:25] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[21:05:32] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[21:14:04] *** Quits: eseyman (~manu@lfbn-idf1-1-2271-214.w92-151.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[21:16:02] *** Quits: holyghost (~holly@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749) (Quit: This computer has gone to sleep)
[21:16:17] *** Joins: holyghost (~holly@2a02:a03f:64c8:9200:4eb:e0c0:3a5:b494)
[21:16:37] *** Quits: holyghost (~holly@2a02:a03f:64c8:9200:4eb:e0c0:3a5:b494) (Client Quit)
[21:19:12] *** Joins: eseyman (~manu@lfbn-idf1-1-2271-214.w92-151.abo.wanadoo.fr)
[22:05:15] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[22:05:46] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[22:05:58] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[22:33:04] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:48:14] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c922:9c5f:802e:695a)
[23:04:33] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[23:15:15] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:30:11] *** Quits: clarkema (clarkema@tilde.club) (Quit: WeeChat 3.2)
[23:30:30] *** Joins: clarkema (~clarkema@ipv6two.tilde.club)
[23:31:26] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[23:33:09] *** Quits: clarkema (~clarkema@ipv6two.tilde.club) (Client Quit)
[23:33:27] *** Joins: clarkema (~clarkema@ipv6two.tilde.club)
