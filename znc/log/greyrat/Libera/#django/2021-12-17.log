[00:03:06] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[00:10:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:29:07] *** Joins: bambanxx (~bambanx@181-163-43-138.baf.movistar.cl)
[00:40:24] *** Joins: luigibu (~luigi@80.30.201.209)
[00:43:41] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 245 seconds)
[00:49:30] *** Quits: bmispelon (~bmispelon@195.25.242.122) (Quit: Leaving)
[00:52:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:54:40] *** Joins: fikran (~fikran@user/fikran)
[01:04:29] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:16:34] <Staunch> what is the "right" way to have set groups in Django? Can i create a `groups.py` file that spells out what groups are available and what permissions they have?
[01:16:44] <Staunch> or are they mostly expected to be created through the admin?
[01:19:50] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:35] *** Joins: Guddu (~Guddu@pc-51-79-83-200.cm.vtr.net)
[01:36:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[01:40:18] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[01:40:34] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[02:11:32] *** Quits: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03) (Read error: Connection reset by peer)
[02:11:52] *** Joins: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03)
[02:12:02] *** Joins: audiobirb (~audio@user/audio)
[02:12:30] *** Parts: evidlo (~evidlo@2001:470:69fc:105::7fc) ()
[02:16:52] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[02:20:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:20:13] *** ChanServ sets mode: +v EvilDMP
[02:40:59] *** Quits: bambanxx (~bambanx@181-163-43-138.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:43:16] <FunkyBob> Staunch: sounds like you want a data migration
[03:01:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:03:10] *** Joins: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1)
[03:03:42] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[03:04:00] *** Joins: fikran (~fikran@user/fikran)
[03:07:25] *** Joins: vladoski (~foo@2001:b07:add:d406:78f9:8795:af3e:8ae4)
[03:07:27] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[03:12:37] <vladoski> I'm a django newbie and I'm trying to understand better how it works. I'm seeing the newbie django tutorial and I've seen this: self.assertQuerysetEqual(response.context['latest_question_list'], [])
[03:12:55] <vladoski> how does the response.context know that queryset
[03:18:02] <mattcen[mx]> I assume you're referring to this: https://docs.djangoproject.com/en/4.0/intro/tutorial05/#testing-our-new-view. If I understand correctly, the view you're accessing has generated a queryset and passed it to the context.
[03:28:02] <FunkyBob> vladoski: if it's a TemplateResponse class, they are passed their context
[03:29:05] <vladoski> mattcen[mx] the view generates that queryset just because there's get_queryset defined, right?
[03:29:19] <FunkyBob> in class based views, yes
[03:29:29] <FunkyBob> but more because something in the view class called that
[03:29:41] <FunkyBob> vladoski: have you done the basic django tutorial?  the one in the docs?
[03:30:00] <vladoski> FunkyBob yes I'm doing it
[03:30:04] <FunkyBob> ok
[03:30:10] <vladoski> that line is from tutorial4
[03:30:15] <FunkyBob> I see it now
[03:31:16] <FunkyBob> the view puts that queryset into the context... the context is passed to the TemplateResponse class...
[03:31:19] <FunkyBob> that's why it knows it
[03:31:59] <mattcen[mx]> vladoski: it took me a while to get the hang of class-based views; I ended up digging into the code (e.g. https://github.com/django/django/blob/main/django/views/generic/list.py#L194) to understand them better
[03:32:16] *** Joins: pembo13 (~pembo13@47.196.95.206)
[03:32:24] <FunkyBob> class-based generic views are an excellent example of interfaces
[03:32:38] <vladoski> FunkyBob okay but without that get_queryset defined in IndexView
[03:32:52] <vladoski> django can't really know that right?
[03:33:11] <FunkyBob> vladoski: it's a ListView, so if that sub-class didn't implement get_queryset... ListView has its own
[03:33:59] <pembo13> Howdy FunkyBob
[03:34:21] <FunkyBob> https://github.com/django/django/blob/main/django/views/generic/list.py#L139
[03:34:52] <FunkyBob> vladoski: so... the view function calls dispatch, dispatch calls get, get calls get_queryset... and get_context_data adds it to the context
[03:35:30] <FunkyBob> (the view function being the one returned by as_view() )
[03:39:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:40:00] <vladoski> ahh okay understood
[03:40:18] <vladoski> okay nice
[03:41:30] <vladoski> thanks for helping me
[03:41:34] <mattcen[mx]> I'm trying to define a constraint here (https://dpaste.org/pheZ#L90), and getting "models.E041: constraints refers to the joined field <field name>." I have an Event which has a Session, a Patrol, a Location, and a Destination, and Patrol, Location, and Destination *also* have (one or more) Sessions, and I only want a given Event to allow Patrols, Locations, and Destinations that each have the Session the Event specifies. What's the best way to
[03:41:34] <mattcen[mx]> do this?
[03:42:47] <mattcen[mx]> Do I need to forego doing it in the Meta class's constraints and instead try to do it in clean() or something?
[03:43:08] <mattcen[mx]> (I want to enforce this constraint at the lowest possible level)
[03:45:51] <mattcen[mx]> It's been quite hard getting enough info about how Constraints work.
[03:58:04] <gkarthik> dodo: because invitation and email change are handled by separate models. Email verification model, creates unique token, tracks the validity of the links and also sends mail on object create.
[03:58:05] <gkarthik> Since all user reg, invite, pass reset and email change require email verification, so I thought of using Generic Foreign Key
[04:23:05] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:26:58] *** Quits: vladoski (~foo@2001:b07:add:d406:78f9:8795:af3e:8ae4) (Quit: Textual IRC Client: www.textualapp.com)
[04:47:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:51:36] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[04:55:27] *** Joins: theprophet (~theprophe@85.114.228.184)
[04:55:51] *** Quits: pembo13 (~pembo13@47.196.95.206) (Quit: Leaving)
[05:04:59] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:10:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[05:11:50] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[05:13:20] *** Joins: fikran (~fikran@user/fikran)
[05:21:15] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7)
[05:47:38] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[06:26:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:26:57] *** Quits: himcesjf (uid409730@id-409730.tinside.irccloud.com) (Ping timeout: 268 seconds)
[06:27:34] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[06:28:32] *** Joins: himcesjf (uid409730@id-409730.tinside.irccloud.com)
[06:34:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:38:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[07:02:57] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:07:29] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7)
[07:07:33] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7) (Client Quit)
[07:09:28] *** Quits: nathanhi (~nathanhi@user/nathanhi) (Quit: bye)
[07:09:47] *** Joins: nathanhi (~nathanhi@user/nathanhi)
[07:10:49] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[07:44:48] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[07:55:42] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[07:55:58] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[08:11:49] *** Quits: Guddu (~Guddu@pc-51-79-83-200.cm.vtr.net) (Quit: Leaving)
[08:12:44] *** Joins: Guddu (~Guddu@2800:150:120:2f13:391c:36a2:6700:b2fe)
[08:19:00] *** Quits: sreve (~quassel@p4ff44859.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:19:47] *** Joins: sreve (~quassel@p4ff44eaf.dip0.t-ipconnect.de)
[08:20:50] *** Quits: gkarthik (~gkarthik@2402:3a80:1919:4aed::2) (Quit: Quit)
[08:30:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:35:12] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 268 seconds)
[08:40:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[08:55:01] *** Quits: Guddu (~Guddu@2800:150:120:2f13:391c:36a2:6700:b2fe) (Read error: Connection reset by peer)
[09:05:46] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:06:44] *** Joins: djapo (~archangel@user/djapo)
[09:28:16] *** Joins: Atque (~Atque@user/atque)
[09:30:13] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[09:50:11] *** Joins: gkarthik (~gkarthik@2402:3a80:1919:4aed::2)
[09:54:15] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:14:59] <serafeim> hello friends
[10:15:36] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[10:22:01] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[10:22:16] *** Joins: pepper (~pepper@user/pepper)
[10:23:35] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[10:23:56] *** Joins: pepper (~pepper@user/pepper)
[10:28:10] *** Joins: rusrushal13 (~rusrushal@2401:4900:5d10:8:2e39:1dd0:db33:2f3b)
[10:30:16] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:38:59] *** Quits: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Read error: Connection reset by peer)
[10:39:09] *** Joins: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[10:45:37] *** Quits: gkarthik (~gkarthik@2402:3a80:1919:4aed::2) (Ping timeout: 240 seconds)
[10:54:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:00:21] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 256 seconds)
[11:02:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[11:03:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:06:29] *** Quits: rusrushal13 (~rusrushal@2401:4900:5d10:8:2e39:1dd0:db33:2f3b) (Ping timeout: 256 seconds)
[11:09:07] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[11:11:32] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[11:14:48] *** Joins: mattil (~mattil@d4yfc6hcw3j76jt6w-4-4.rev.dnainternet.fi)
[11:16:17] *** Joins: djapo (~archangel@user/djapo)
[11:18:22] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:8c4f:7977:cc39:4ca9)
[11:18:57] *** Quits: mattil (~mattil@d4yfc6hcw3j76jt6w-4-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:34:22] *** Joins: mattil (~mattil@d4yfc6hcw3j76jt6w-4-4.rev.dnainternet.fi)
[11:35:25] *** Quits: mattil (~mattil@d4yfc6hcw3j76jt6w-4-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:35:51] *** Joins: mattil (~mattil@d4yfc6hcw3j76jt6w-4-4.rev.dnainternet.fi)
[11:36:00] *** Joins: luigibu (~luigi@80.30.201.209)
[11:40:21] *** Quits: mattil (~mattil@d4yfc6hcw3j76jt6w-4-4.rev.dnainternet.fi) (Ping timeout: 245 seconds)
[11:41:26] <pycode1> hello everybody i am creating a custom aggregate (first/last) the code of the First is: https://bpa.st/6LWQ
[11:42:13] <pycode1> it is working if i do .annotate(first_value=First(F('my_field'), order_by='"core_model"."field"'))
[11:42:28] <pycode1> so basically the order_by must be a string
[11:42:36] <pycode1> why can i not use for example F('pk') ?
[11:42:48] <pycode1> if i do that i see F('pk') as string in the order_by
[11:42:59] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[11:43:15] <pycode1> FIRST("core_model"."field" ORDER BY F(pk))
[11:43:16] *** Joins: luigibu (~luigi@80.30.201.209)
[11:43:17] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 240 seconds)
[11:43:19] <pycode1> why?
[11:45:11] *** Joins: thiras_ (~thiras@user/thiras)
[11:50:40] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[11:50:41] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[11:54:39] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[11:54:55] *** Joins: luigibu (~luigi@80.30.201.209)
[12:02:41] <pycode1> i need to find a way to compile the expression
[12:06:36] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 240 seconds)
[12:10:52] <pycode1> easy: https://bpa.st/565A
[12:10:53] <pycode1> done
[12:10:56] <pycode1> nevermind
[12:10:57] <pycode1> :)
[12:10:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:22:33] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[12:33:42] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[12:36:08] *** Joins: luigibu (~luigi@80.30.201.209)
[12:38:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:38:43] *** ChanServ sets mode: +v EvilDMP
[12:54:19] <enkrypt> there's a newline in a string, and I want to replace it with a <br/> html wise, what's the recommended way of doing such things in a django view (not a template!)
[12:54:45] <enkrypt> I mean I know I can do a .replace() or whatnot but I seem to remember there's django utility functions for this type of thing
[12:58:16] *** Quits: iomari891 (~iomari891@197.210.53.158) (Ping timeout: 245 seconds)
[12:59:33] *** Joins: iomari891 (~iomari891@197.210.52.72)
[13:00:25] <FunkyBob> enkrypt: there's a built in template tag to do that
[13:00:34] <FunkyBob> in a view,  you should be able to access the same tools
[13:01:16] <FunkyBob> django.utils.html.linebreaks is where to look
[13:02:23] <FunkyBob> actually, the filter is even simpler : https://github.com/django/django/blob/main/django/template/defaultfilters.py#L463
[13:06:09] *** Quits: iomari891 (~iomari891@197.210.52.72) (Ping timeout: 256 seconds)
[13:06:48] *** Joins: iomari891 (~iomari891@197.210.52.72)
[13:06:51] *** Bitflux is now known as Byteflux
[13:06:57] *** Quits: goutly (~gitly@85.255.233.150) (Ping timeout: 240 seconds)
[13:16:38] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[13:17:41] *** Joins: goutly (~gitly@185.69.144.130)
[13:17:42] <enkrypt> great, thanks!
[13:23:35] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Quit: Leaving)
[13:23:40] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:24:30] *** Joins: FishyCoder (~FishyCode@2409:4043:2d9c:f586:653f:f72:790b:d7be)
[13:25:01] *** Quits: goutly (~gitly@185.69.144.130) (Ping timeout: 240 seconds)
[13:25:58] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:26:15] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[13:26:29] *** Quits: FishyCoder (~FishyCode@2409:4043:2d9c:f586:653f:f72:790b:d7be) (Quit: Client closed)
[13:27:26] *** Joins: FishyCoder (~FishyCode@2409:4043:2d9c:f586:653f:f72:790b:d7be)
[13:27:32] *** Quits: FishyCoder (~FishyCode@2409:4043:2d9c:f586:653f:f72:790b:d7be) (Client Quit)
[13:30:32] *** Joins: gitly (~gitly@148.252.133.243)
[13:32:54] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:34:36] *** Joins: mattil (~mattil@d4yfc76h-bss0gn2bhk-4.rev.dnainternet.fi)
[13:39:51] *** Quits: mattil (~mattil@d4yfc76h-bss0gn2bhk-4.rev.dnainternet.fi) (Ping timeout: 268 seconds)
[13:40:28] <luigibu> hi! im having issues running django 4 with python 3.10.1, should i rollback python to 3.9? thanks
[13:40:46] <FunkyBob> what issues?
[13:41:09] <FunkyBob> (iirc 4 only oficially supports 3.9, but it would be useful to know what issues 3.10 is presenting)
[13:41:36] <luigibu> cannot import name 'Mapping' from 'collections'
[13:41:43] <FunkyBob> dpaste the full traceback, please
[13:41:48] <luigibu> ok
[13:42:13] <FunkyBob> nope, 3.10 is oficially supported
[13:43:41] <luigibu> https://dpaste.com/284ZL5QE6
[13:43:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:45:21] *** Quits: gitly (~gitly@148.252.133.243) (Ping timeout: 245 seconds)
[13:46:08] <FunkyBob> seems 'mapbox' is importing types from the wrong place
[13:46:58] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[13:47:06] <luigibu> extrange that was working.. the only thing has change was python version+
[13:47:31] <FunkyBob> it's possible it was relying on an incidental import from collections
[13:47:37] *** Joins: gitly (~gitly@85.255.233.150)
[13:47:54] <FunkyBob> which version did you change _from_?
[13:49:00] <luigibu> im not sure.. i just did the arch update.. last time (5 days ago) it was working.. but to be honest.. i dont really remember it
[13:50:05] <FunkyBob> from the django docs:
[13:50:05] <FunkyBob> from collections.abc import Mapping, Sequence
[13:50:21] <FunkyBob> so, yeah, they're importing from the wrong place
[13:50:24] <FunkyBob> report it to mapbox
[13:50:41] <luigibu> thanks for that!
[13:50:42] <FunkyBob> this can happen sometimes because a lib incidentally exposes its own imports
[13:50:44] <luigibu> i will
[13:51:24] <FunkyBob> you might even consider submitting a PR to fix it
[13:51:29] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[13:51:32] <FunkyBob> most OSS maintainers LOVE that
[13:51:34] <FunkyBob> og well
[13:52:02] *** Quits: gitly (~gitly@85.255.233.150) (Ping timeout: 252 seconds)
[13:52:47] <luigibu> :D
[13:53:42] <FunkyBob> oh, you didn't lag out... good :)
[13:53:58] *** Joins: gitly (~gitly@85.255.233.150)
[13:54:36] <luigibu> FunkyBob: the repo says: This repository has been archived by the owner. It is now read-only.
[13:55:38] <luigibu> what thats it mean? is not beeing manteinded anymore?
[13:56:52] <ktosiek[m]> luigibu: the "About" says "DEVELOPMENT IS TEMPORARILY PAUSED, SEE CONTRIBUTING.md"
[13:57:16] <luigibu> Thanks!
[13:57:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:57:58] *** ChanServ sets mode: +v EvilDMP
[13:58:17] *** Joins: gkarthik (~gkarthik@2402:3a80:1918:6ce4::2)
[13:59:11] *** Quits: gitly (~gitly@85.255.233.150) (Ping timeout: 252 seconds)
[14:00:24] *** Joins: gitly (~gitly@85.255.233.150)
[14:00:48] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:8c4f:7977:cc39:4ca9) (Remote host closed the connection)
[14:02:07] <LordKalma> what development is paused?
[14:02:17] *** Quits: gkarthik (~gkarthik@2402:3a80:1918:6ce4::2) (Ping timeout: 240 seconds)
[14:02:43] *** Joins: gkarthik (~gkarthik@2402:3a80:1918:6ce4::2)
[14:04:37] *** Quits: gitly (~gitly@85.255.233.150) (Ping timeout: 240 seconds)
[14:07:36] *** Joins: gitly (~gitly@148.252.133.169)
[14:10:49] <luigibu> FunkyBob: https://dpaste.com/HJJFXQB4W
[14:11:01] <luigibu> so.. i think.. the issue is with my enviroment
[14:12:10] *** Quits: gitly (~gitly@148.252.133.169) (Ping timeout: 260 seconds)
[14:13:47] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:19:19] *** Joins: gitly (~gitly@148.252.133.169)
[14:20:59] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[14:22:26] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Client Quit)
[14:23:37] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[14:24:21] *** Quits: gitly (~gitly@148.252.133.169) (Ping timeout: 256 seconds)
[14:25:40] *** Joins: gitly (~gitly@148.252.129.7)
[14:29:57] *** Quits: gitly (~gitly@148.252.129.7) (Ping timeout: 240 seconds)
[14:30:16] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5811:de23:be7e:4944)
[14:30:17] <pycode> hello
[14:30:24] <pycode> is it possible to get the query from the paginator?
[14:30:32] <pycode> i mean the query of the page i requested
[14:32:01] *** Joins: gitly (~gitly@85.255.236.137)
[14:46:47] <dang`r`us> pycode, https://github.com/django/django/blob/main/django/core/paginator.py#L81 seems to be the effective query construction
[14:47:15] <dang`r`us> so it's essentially an indexing operation on a queryset
[14:48:25] <pycode> dang`r`us, thank you!
[14:49:05] <pycode> dang`r`us, so basically django execute the query when i call that slice right?
[14:59:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:02:06] *** Joins: gulzar (~gulzar@14.139.123.36)
[15:04:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[15:05:20] <gulzar> Hi. I need to send multiple dictionaries to the template. I can send only as render(request, page.html, dict1)     but how to send more variables and more dicts?  I tried     request(request, page.html, dict1, {var1, var2, dict2, dict3})   . It doesn't render html, it's just text
[15:11:19] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7)
[15:11:45] <gulzar> got it
[15:13:37] *** Quits: gkarthik (~gkarthik@2402:3a80:1918:6ce4::2) (Quit: Quit)
[15:14:47] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7) (Client Quit)
[15:16:16] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:16:32] *** Joins: luigibu (~luigi@80.30.201.209)
[15:16:45] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[15:19:22] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[15:19:38] *** Joins: luigibu (~luigi@80.30.201.209)
[15:25:54] *** Quits: gulzar (~gulzar@14.139.123.36) (Ping timeout: 268 seconds)
[15:27:45] *** Quits: iomari891 (~iomari891@197.210.52.72) (Ping timeout: 268 seconds)
[15:27:56] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7)
[15:29:01] *** Joins: iomari891 (~iomari891@197.210.77.160)
[15:31:25] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:37:12] *** Joins: rusrushal13 (~rusrushal@2401:4900:5d2b:a314:2a87:36ac:e031:bd1b)
[15:43:36] *** Joins: pepper (~pepper@user/pepper)
[15:47:47] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:48:03] *** Joins: luigibu (~luigi@80.30.201.209)
[15:53:56] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:54:53] *** Joins: luigibu (~luigi@80.30.201.209)
[15:55:05] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:55:40] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:01:49] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[16:02:15] *** Joins: luigibu (~luigi@80.30.201.209)
[16:02:57] *** Quits: gitly (~gitly@85.255.236.137) (Ping timeout: 256 seconds)
[16:03:32] *** Quits: iomari891 (~iomari891@197.210.77.160) (Ping timeout: 240 seconds)
[16:03:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[16:03:47] *** Joins: Ilyu (~quassel@78.202.228.230)
[16:04:47] *** Joins: gitly (~gitly@148.252.129.19)
[16:05:09] *** Joins: iomari891 (~iomari891@197.210.77.17)
[16:11:50] *** Joins: dez (uid92154@user/dez)
[16:17:17] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7)
[16:24:29] *** Quits: gitly (~gitly@148.252.129.19) (Ping timeout: 268 seconds)
[16:26:23] *** Joins: gitly (~gitly@148.252.129.19)
[16:29:57] *** Joins: slav0nic (slav0nic@python.su)
[16:31:37] *** Quits: gitly (~gitly@148.252.129.19) (Ping timeout: 240 seconds)
[16:35:07] *** Joins: gitly2 (~gitly@148.252.129.62)
[16:43:48] *** Joins: READ10 (~dallan@user/read10)
[16:44:37] *** Quits: gitly2 (~gitly@148.252.129.62) (Ping timeout: 240 seconds)
[16:49:25] *** Joins: gitly2 (~gitly@148.252.129.19)
[16:52:46] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[16:56:19] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:57:55] *** Quits: gitly2 (~gitly@148.252.129.19) (Ping timeout: 256 seconds)
[16:58:15] *** Joins: gitly2 (~gitly@85.255.236.137)
[17:02:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:07:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[17:09:41] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[17:12:41] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Quit: brsc2909)
[17:17:57] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[17:20:55] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:31:49] *** Quits: rusrushal13 (~rusrushal@2401:4900:5d2b:a314:2a87:36ac:e031:bd1b) (Ping timeout: 256 seconds)
[17:37:03] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[17:42:11] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 268 seconds)
[17:57:54] <ktosiek[m]> I have a QuerySet of User, filtered by userrole__organization_id=5, and then do another .filter(userrole__is_active=True, userrole__organization_id=5) - this causes Django to generate 2 inner joins with UserRole. Can I somehow make it reuse the first join? Second inner join can't change semantics, but does change performance.
[17:58:47] <ktosiek[m]> I mean, I know I could move everything into one .filter() call, but that would need some reorganization in my code - I'm looking for a lazy fix :-)
[18:06:19] <GinFuyou> select_related() perhaps?
[18:10:12] <ktosiek[m]> I can see how that could help, let's see
[18:11:33] *** Joins: slav0nic (slav0nic@python.su)
[18:13:12] <ktosiek[m]> for some reason select_related says 'userrole' (and 'userrole_set') is not a valid field name - it's a reverse relation of a ForeignKey, I think that should be selectable?
[18:15:24] <ktosiek[m]> oh no, it doesn't work with reverse FKs :-C
[18:21:13] <GinFuyou> yeah, that right, reverse only works with prefetch_related, but it probably won't help with your case
[18:24:38] *** Joins: thiras_ (~thiras@user/thiras)
[18:37:38] *** Joins: imakestuff (~imakestuf@196.190.154.216)
[18:40:20] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[18:54:03] <ktosiek[m]> I've refactored the code, seems like I can't get the ORM to act like a sufficiently smart compiler :-)
[18:58:07] <LordKalma> you wrote your backend in Python and are worried about query performance=? :p
[18:58:09] <LordKalma> jk jk
[18:58:15] <LordKalma> please don't burn me in a fire
[19:06:42] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:15:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:17:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[19:19:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:24:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[19:25:17] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 240 seconds)
[19:32:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:35:28] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:37:34] <ktosiek[m]> yeah, that's why I didn't write the database in Python (or even myself, for that matter ^_^)
[19:44:25] *** Quits: imakestuff (~imakestuf@196.190.154.216) (Remote host closed the connection)
[19:51:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:52:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:57:12] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:58:12] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[20:00:06] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[20:23:52] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:27:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:28:27] *** Joins: xkuru (~xkuru@user/xkuru)
[20:34:16] *** Joins: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net)
[20:35:29] <Guest00> Does anyone know of a way I could test rate limiting on localhost? Do I need to use nginx/apache/gunicorn or can I use regular runserver? Is there a rate limiting software I could download to overload it?
[20:45:39] <Staunch> FunkyBob: Hm, yes, a data migration. Thanks for the keywords! :D
[20:57:02] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[21:06:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:08:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:08:44] *** ChanServ sets mode: +v EvilDMP
[21:09:22] <dlam> doex model field...   index=True   like add a "fulltext" index?
[21:10:05] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:11:42] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:15:44] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[21:18:27] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Client Quit)
[21:21:00] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:21:05] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[21:30:55] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: Textual IRC Client: www.textualapp.com)
[21:31:57] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[21:35:24] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[21:42:41] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5811:de23:be7e:4944) (Ping timeout: 268 seconds)
[21:44:45] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8176:6507:4aab:61a7)
[21:46:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:50:33] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:53:14] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[21:55:49] <LuxuryMode> I am experiencing a strange error where I initialize a few model objects (just plain Python objects without using `Model.objects.create`). I then call insert them into the DB with `Model.objects.bulk_create(objects)`. Then for each, I am trying to set a `ManyToManyField` on each of them with `model.some_m2m_field.set(list_of_related_objects)`. The error I'm seeing is that `id` field of the row for the join table/model is null. The
[21:55:49] <LuxuryMode> null `id` field is on the automatically-generated join table that just contains a `id`, `table_a_id`, and `table_b_id` fields. Any ideas what I might be doing wrong here?
[21:56:19] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:58:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:58:28] *** ChanServ sets mode: +v EvilDMP
[22:08:31] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[22:10:09] *** Quits: iomari891 (~iomari891@197.210.77.17) (Ping timeout: 256 seconds)
[22:11:02] *** Joins: iomari891 (~iomari891@197.210.77.160)
[22:16:23] *** Quits: iomari891 (~iomari891@197.210.77.160) (Ping timeout: 252 seconds)
[22:17:12] *** Joins: pycode (~pycode3@2001:b07:5d28:551:d8d4:fd2a:21e2:9bca)
[22:19:01] *** Joins: iomari891 (~iomari891@197.210.53.158)
[22:28:17] *** Quits: lucascastro (~lucascast@192-140-51-187.static.oncabo.net.br) (Ping timeout: 256 seconds)
[22:31:10] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:40:39] *** Quits: pycode (~pycode3@2001:b07:5d28:551:d8d4:fd2a:21e2:9bca) (Ping timeout: 268 seconds)
[22:45:20] *** Quits: READ10 (~dallan@user/read10) (Quit: WeeChat 3.3)
[22:46:22] <nbjoerg> LuxuryMode: which django version are you using?
[22:47:50] <LuxuryMode> Regrettably, Django 3.1.7
[22:51:52] *** Joins: lucascastro (~lucascast@45-167-143-6.netfacil.inf.br)
[22:53:09] <nbjoerg> with MySQL or SQLite?
[22:56:04] <LuxuryMode> nbjoerg: Postgres.
[22:56:12] <LuxuryMode> Apologies, should've offered more detail.
[22:56:40] <LuxuryMode> nbjoerg: here is a full stack trace if it helps https://dpaste.org/zSG0
[22:57:06] <nbjoerg> hm. bulk_create with Postgres should give you the updated auto fields
[23:00:19] <LuxuryMode> Yeah, the issue here doesn't seem to be the initial bulk_create. Because, as you can see in the stack trace, the offending row is on the *join table*, i.e. `DETAIL:  Failing row contains (null, 2298, 7)`
[23:00:33] <LuxuryMode> 2298 is model a's `id` and `7` is model b's `id`
[23:01:02] <LuxuryMode> the null is the pk `id` of the new join row it's trying to insert
[23:02:42] <LuxuryMode> By looking at the stack trace, I guess the `set` call also internally uses `bulk_create`, but I just wanted to clarify that the null `id` isn't on the model I am trying to set M2M field on.
[23:02:54] <LuxuryMode> It's on that join table itself.
[23:08:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:12:19] *** Quits: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[23:12:55] *** Joins: Guest24 (~Guest24@pool-96-253-74-73.rcmdva.fios.verizon.net)
[23:15:59] <Guest24> Hi I am trying to override a third party model field or entire model completely. I do not want the attribute of the field to change, I need the whole field of the model to change to another data type.
[23:16:04] <Guest24> I found https://stackoverflow.com/questions/55625385/how-to-overriding-model-in-django-third-party-app
[23:16:15] <Guest24> but that only addresses an attribute not the entire field
[23:17:40] <Guest24> Another one I found https://code.djangoproject.com/ticket/14969
[23:18:41] <Guest24> but I get a problem when I try to add the meta model = third_party_model_classname
[23:20:15] <Guest24> I want to be able to do it from my own code and not the third party code itself so that way the third party code can get updates and I don't have to keep overriding the model each time the third party code updates
[23:22:36] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[23:22:53] <Guest24> Do I have to do this but I have to rename the class? I cannot use the same class name for overriding just 1 field? https://stackoverflow.com/questions/2344751/in-django-model-inheritance-does-it-allow-you-to-override-a-parent-models-a/2357942#2357942
[23:23:40] *** Joins: audiobirb (~audio@user/audio)
[23:24:11] <GinFuyou> Guest24, I'm in doubt it's possible at all. Even if technically doable it sounds very risky
[23:24:31] <Guest24> hmm what makes you think that?
[23:24:46] <GinFuyou> migrations system
[23:24:52] <Guest24> oh
[23:25:11] <GinFuyou> Why are fiddling with third-party model? Can not it have some other solution?
[23:25:28] <Guest24> I need to change a whole number to a decimal
[23:25:44] <Guest24> and in another place change an unencrypted field to an encrypted on
[23:26:30] <GinFuyou> can't you just add those fields instead of replacing? Changing datatype in side module and then expect it to be properly updated is fundamentally wrong
[23:26:54] <Guest24> ok i did not think about doing that
[23:27:15] <Guest24> hmm but that will create a null column for the old field then?
[23:27:28] <Guest24> can I add the new field to the same third party database?
[23:28:17] <GinFuyou> You can add own model which has one-to-one relationship with third-party one, so you don't touch third-party code at all
[23:28:50] <GinFuyou> You could use proxy model in your code if you need to change some of it's logic in your part
[23:29:51] <GinFuyou> Surely, it doesn't solve every possible problem. But at least it's trivial and safe.
[23:30:07] <Guest24> Ok so like this? https://docs.djangoproject.com/en/4.0/topics/db/models/#proxy-models
[23:30:22] <Guest24> What problems does it not solve?
[23:31:10] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:31:49] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[23:32:14] <GinFuyou> Well, e.g. when you *have* to change model base fields. Not sure I can come with good example. Suppose you have to use longer CharFields, and it's not for your code but for side module to handle them
[23:33:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:33:33] *** ChanServ sets mode: +v EvilDMP
[23:34:22] <Guest24> oh interesting that kind of sounds a bit scary
[23:34:24] <GinFuyou> I'm not sure if there are good solutions for such cases. Models have some magic, but you could probably handle it. But then what happens to migrations? You basically breaking the sequence
[23:35:22] <Guest24> Good points
[23:36:06] *** Joins: cyphase (~cyphase@user/cyphase)
[23:36:33] *** Joins: coldmountain (sid484352@2a03:5180:f:1::7:6400)
[23:37:06] <Guest24> If the 3rd party model updates, there won't be problems due to the 1 to 1 relationship?
[23:37:52] <GinFuyou> Unless it's removed or renamed - I can't think of any problem
[23:38:07] <Guest24> ok that is good then
[23:39:04] <GinFuyou> if it's PK changed, you will have to migrate your referencing model as well I think, but it's again an edge case
[23:40:22] <GinFuyou> Before it's was recommended way to extend django built-in user model - by one-to-one profile model.
[23:41:29] <GinFuyou> with select_related() queries are neglectably slower
[23:41:38] <Guest24> ok makes sense
[23:41:48] <GinFuyou> So if it does a trick, it should be solid
[23:41:52] <GinFuyou> *the
[23:42:42] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:43:22] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[23:44:57] *** Quits: lucascastro (~lucascast@45-167-143-6.netfacil.inf.br) (Ping timeout: 240 seconds)
[23:59:17] *** Joins: stdout (~stdout@216.163.21.11)
