[00:24:37] <thumbs> doug16k: let's drop the subject, thanks.
[01:04:40] *** Joins: mthall (~quassel@mail.thalliman.com)
[01:50:41] *** Quits: mthall (~quassel@mail.thalliman.com) (Ping timeout: 256 seconds)
[01:51:19] *** Joins: mthall (~quassel@mail.thalliman.com)
[02:34:28] *** kevr` is now known as kevr
[02:39:25] *** Quits: intx (intx@user/intx) (Ping timeout: 256 seconds)
[02:39:30] *** Joins: ferdna (~ferdna@user/ferdna)
[03:03:32] *** Quits: Terlisimo (~Terlisimo@ns3077160.ip-147-135-129.eu) (Quit: Connection reset by beer)
[03:06:52] *** Joins: Terlisimo (~Terlisimo@outofband.ozna.net)
[03:15:43] *** Joins: tex (~super@user/dix)
[03:25:01] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[04:02:47] *** Quits: tex (~super@user/dix) (Quit: tex)
[04:36:06] *** Quits: Bitflux (~byte@byteflux.net) (Quit: ZNC - https://znc.in)
[04:36:18] *** Joins: Byteflux (~byte@byteflux.net)
[04:38:01] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[04:38:21] *** Joins: youmustrust (~nobody@ec2-18-182-239-10.ap-northeast-1.compute.amazonaws.com)
[04:59:09] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[05:07:08] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[05:17:48] *** Quits: ikwyl6 (~ikwyl6@142.167.173.36) (Ping timeout: 256 seconds)
[05:19:37] *** Joins: ikwyl6 (~ikwyl6@195.206.105.47)
[05:54:46] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[06:36:58] *** Joins: naimz82 (~naim@175.143.179.255)
[07:00:34] *** Quits: Vacuity (~Vacuity@user/vovo) (Ping timeout: 272 seconds)
[07:01:38] *** Joins: Vacuity (~Vacuity@user/vovo)
[07:07:29] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:10:51] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:12:34] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[07:15:09] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[07:18:42] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[07:55:23] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[08:02:01] *** Joins: toastloop (~toastloop@user/toastloop)
[08:32:32] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: WeeChat 3.5-dev)
[08:32:53] *** Joins: toastloop (~toastloop@user/toastloop)
[08:59:27] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:10:18] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[09:13:15] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[09:28:15] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[09:31:06] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[09:33:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[09:47:21] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[09:48:36] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[09:57:55] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[09:59:17] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[10:02:20] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 272 seconds)
[10:02:55] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Client Quit)
[10:19:09] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:21:37] *** Quits: Yoda-BZH (~yoda-bzh@user/yoda-bzh) (Ping timeout: 240 seconds)
[10:57:08] *** Quits: tercaL (~tercaL@user/tercal) (Remote host closed the connection)
[11:00:48] *** Joins: Yoda-BZH (~yoda-bzh@spiderman.pulsation.fr)
[11:02:45] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[11:40:56] *** Quits: naimz82 (~naim@175.143.179.255) (Quit: Leaving)
[12:03:21] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:08:09] <KnowledgeShark> Isotopp: Your loader ran 100% and completed just minutes ago. Besides an an additional Thank you; for everything. Do you know what could cause a mysqldump from a Jailed "Exact" install w/ matching revisions of MariaDB "10.5.12" on Debian 11 Bullseye. I run a standard "mysqldump -u username -p harvardmetaUS > harvardmetaUS.sql" ; it creates the .sql. Then I copy it to my host machine (the new mysqldump created .sql) -- same revisions of MariaDB
[12:08:09] <KnowledgeShark> and OS. Import it to the host MariaDB 10.5.12 and wait for it to complete. The databases don't match. I can't make this up. I will have take a screenshot. I am quite puzzled at this. The host version has more rows in "analysis" than jailed; yet it has less rows on "us_case" than the jailed "1.2GB vs. 939mb" and analysis "275.8mb vs. 284.8mb". How is that even possible?
[12:12:10] *** Quits: benl90 (benl90@stable.bnc.by.bnc4you.xyz) (Quit: Stable ZNC by #bnc4you)
[12:14:38] <Naktibalda> don't compare disk usage
[12:14:45] <KnowledgeShark> Jailed MariaDB (1.7 GB) DB vs. Host MariaDB (1.4 GB)
[12:14:51] <KnowledgeShark> Naktibalda: Why not?
[12:14:59] <KnowledgeShark> Row count is off also. o_O
[12:15:07] <Naktibalda> alright, that's more important
[12:15:28] <KnowledgeShark> This is quite the phenomenon to me.
[12:16:15] <Naktibalda> mysql does not freeup unused space, so it is normal for live database to consume more space than necessary if deletions happen
[12:16:53] <KnowledgeShark> Naktibalda: What is a live database (being used read/write/update) ?
[12:17:07] <Naktibalda> yes
[12:17:34] <KnowledgeShark> oh; both of these I am referring to are not being used. Conversion/Parsing
[12:18:10] <KnowledgeShark> It took several days to process the python MariaDB parsing script that Isotopp wrote.
[12:18:12] <Naktibalda> what command did you use for import?
[12:18:58] *** Joins: benl90 (benl90@stable.bnc.by.bnc4you.xyz)
[12:19:09] <KnowledgeShark> Naktibalda: I used the command - "mysql -u username -p NewlyCreatedDB < import.sql"
[12:21:19] <Naktibalda> import it to a different database on original server and find a difference
[12:26:11] <KnowledgeShark> Naktibalda: Good problem solving! Appreciate it.
[12:26:46] *** Quits: lamneth (~IceChat9@modemcable213.189-81-70.mc.videotron.ca) (Ping timeout: 256 seconds)
[12:32:22] <KnowledgeShark> Naktibalda: The original server imported the .sql exactly as the second server did. 100% identical.
[12:33:19] <KnowledgeShark> Naktibalda: I am going to try a different dump with utf8mb4_general_ci instead of utf8mb4_unicode_ci and see if the results are the same.
[12:36:06] *** Joins: [Brain] (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net)
[12:39:14] *** Quits: Brain (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net) (Ping timeout: 256 seconds)
[12:42:44] <KnowledgeShark> Naktibalda: That's the craziest thing I have ever seen. I imported it a second time; but in utf8mb4_general_ci and it has less rows than utf8mb_unicode_ci (import #1).
[12:42:56] <KnowledgeShark> One of the strangest computer anomalies I've ever seen.
[12:47:26] *** Joins: Guest6792 (~vit@chello085216193138.chello.sk)
[12:59:03] <Isotopp> KnowledgeShark: there is a thing called percona toolkit
[12:59:12] <Isotopp> it has a database diff program
[12:59:16] <Isotopp> called pt-table-suync
[12:59:19] <Isotopp> called pt-table-sync
[13:00:09] <Isotopp> it can connect to two servers, and will partition the primary keys of each table, then calculate checksums for each row, then checkums of blocks of row checksums and so on. it will compare the top level checksums for each table, and if they differ, dive down the tree to find the sets of changed rows
[13:00:22] <Isotopp> it will then emit sql statements that transform one server into another server
[13:00:43] <Isotopp> KnowledgeShark: you say the row counts differ. do the row counts differ in show table status, or did you run actual select count(*) on the tables?
[13:01:00] <Isotopp> the numbers shows by show table status, or information_schema.tables are estimates, they are never identical.
[13:01:15] <Naktibalda> this is rally odd, if INSERT failed, import should fail too, unless you use --force or your dump consists of INSERT IGNORE statements
[13:01:32] <Isotopp> https://www.percona.com/doc/percona-toolkit/3.0/pt-table-sync.html
[13:01:43] <Isotopp> percona toolkit page, manpage for pt-table-sync
[13:01:44] <Naktibalda> it is more likely that INSERT statements are missing in the dump, but it is hard to explain too
[13:02:42] <KnowledgeShark> Isotopp: Thank you. I will download percona toolkit and attempt this. I used a GUI in Wine "HeidiSQL Portable 9.5.0.5196" to view it. Let me snap the screenshots and show you. I like your idea better, percona toolkit (sounds like the only way to go).
[13:02:43] <Isotopp> use --dry-run first, later avoid -execute, that will actually run the commands instead of printing the diff
[13:03:09] <Isotopp> KnowledgeShark: using a gui is fine only if you actually understand what commands it runs to get the numbers it shows you
[13:03:41] <Isotopp> you need to run the command SELECT count(*) as cnt from table to actually get a row count. on large tables that is not fast.
[13:04:00] *** Joins: KnowledgeShark- (~Knowledge@50.34.198.222)
[13:04:07] <KnowledgeShark> Isotopp: The GUI outputs a console on the bottom with the actual commands.
[13:04:09] <Isotopp> because of that, many tools use show table status or select ... from information_schema.tables instead, but these two things use estimates and not exact numbers.
[13:04:16] <KnowledgeShark> Let me check.
[13:04:18] <Isotopp> that is why they are fast
[13:05:58] <KnowledgeShark> Isotopp: "SELECT *, EVENT_SCHEMA AS DB, EVENT_NAME AS Name FROM Information_schema Events WHERE EVENT_SCHEMA = DBNAME" <---- similiar without proper quoting and commas.
[13:06:07] <KnowledgeShark> That's what the output says in the console when hitting refresh in HeidiSQL
[13:07:52] <Isotopp> that is a weird thing that is in this form unrelated to table sizes.
[13:08:17] <Isotopp> the events table in i_s is the config for the event scheduler, a cron like facility inside the database server
[13:08:24] <Isotopp> it can run code in the database on a times schedule.
[13:08:31] <Isotopp> "ever 5 minutes, delete this"
[13:09:05] <Isotopp> anyway, using a mysql command line client, preferably, select count(*) from <tablename>; and record the output.
[13:09:08] <Isotopp> do this on both instancees.
[13:09:38] <Isotopp> 1. write a doit.sql file. put in select count(*) as <tablename>_count from <tablename>; statemments for each of your tables.
[13:09:45] <Isotopp> 2. enter mysql command line client.
[13:09:49] <Isotopp> 3. source doit.sql.
[13:09:53] <Isotopp> 4. record the output.
[13:10:07] <Isotopp> after having done that on all relevant instances, compare the output.
[13:12:30] <KnowledgeShark> Isotopp: Jail [MariaDB 10.5.12] : https://ibb.co/sgTMV8F && Host [MariaDB 10.5.12] : https://ibb.co/Fn6Fx8c (Screenshots)
[13:12:38] <KnowledgeShark> Isotopp: 10-4
[13:14:08] <Isotopp> KnowledgeShark: https://pastebin.com/SnVxCX23
[13:14:11] <Isotopp> the script i used
[13:14:40] <KnowledgeShark> Isotopp: Sweet! ty :)
[13:14:59] <Isotopp> KnowledgeShark: this does not look like select count(*) output what you pasted.
[13:15:14] <Isotopp> and i still maintain that these numbers are row count estimates from i_s_tables.
[13:15:22] <Isotopp> the columns of the output suggest that, too
[13:15:51] <KnowledgeShark> Isotopp: What do you mean?
[13:16:08] <Isotopp> i mean that you tool lies to you, because it did not actually count the fucking rows,
[13:16:22] <Isotopp> but loaded data from i_s.tables, which is an estimate and therefore unfit to compare two servers
[13:16:22] <KnowledgeShark> Isotopp: I would have written that .sql wrong. Thanks for the paste.
[13:16:44] <KnowledgeShark> Isotopp: I can understand that! :)
[13:16:49] <KnowledgeShark> Let me run that on both.
[13:18:16] <Isotopp> KnowledgeShark: mysql innodb is an engine that uses mvcc (multivalue concurrency control). each transaction sees the database in a way that is consistent with it's current viewpoint in transaction history. that implies that two threads in two different transactions see different row counts, possibly. hence there is no way to get accurate row counts short of actually counting all rows, which for large
[13:18:22] <Isotopp> tables takes time.
[13:18:44] <Isotopp> the server maintains a cached estimate of the row count for each table that is deemed good enough for planning work for the optimizer. that cached value is not an actual row count.
[13:18:52] <Isotopp> you cannot use it to compare two servers.
[13:19:01] <Isotopp> only select count(*) can do that
[13:19:19] <Isotopp> gui tools are harmful because they show you numbers but do not tell you how they get them.
[13:19:30] <Isotopp> so you do not know if there mean anything unless you know how they get them.
[13:19:53] <Isotopp> that is one of multiple reasons why here in this channel we urge people to use the command line client when trying to get data for debug
[13:20:13] <Isotopp> you can use the gui tool when you do not need it any more.
[13:20:29] <KnowledgeShark> Isotopp: fair enough!
[13:22:12] <Isotopp> there is also phpmyadmin, which deserves a special place in hell for other reasons. https://blog.koehntopp.info/2020/07/28/mysql-connection-scoped-state.html
[13:23:08] <KnowledgeShark> Isotopp: I've had dump problems with phpmyadmin in the past. Lost data, etc.
[13:23:11] <Isotopp> (it is a web based mysql admin tool, and the way web servers work, each time you click you get a new database connection, then the next one and so on. pma cannot do anything with transactions, variables, session scope annd so on)
[13:23:39] <KnowledgeShark> Isotopp: Good to know!
[13:23:42] <Isotopp> (it is also subject to php size limits in the web server and databases tend to be unwieldy, so you lose data or do not get dumps)
[13:23:56] <KnowledgeShark> Isotopp: CLI is truly the only way to properly manage MySQL/MariaDB?
[13:24:18] <KnowledgeShark> Isotopp: Right, having to change the php_max_filesize, etc.
[13:24:36] <Isotopp> but many gui tools ALSO disconnnect and reconnect a lot, on every click or similar. they, too, suffer from connection scoped state problems. that is reason #2 in a long list of reasons why we ask people here to use the command line
[13:24:55] <KnowledgeShark> Isotopp: 10-4
[13:25:05] <Isotopp> KnowledgeShark: no, there are many ways to manage mysql. cli is just the easiest for support to ask for
[13:25:12] <Isotopp> 1. we know it works properly
[13:25:17] <Isotopp> 2. it does not do things you cannot see
[13:25:25] <Isotopp> 3. it is easy to cut and paste, no screenshots needed
[13:25:36] <Isotopp> 4. it is always available.
[13:25:49] <Isotopp> 5. no use in trying to help anyone who cannot get on a shell on the server
[13:25:54] <KnowledgeShark> Isotopp: Thank you for being my Mentor and writing that Script.
[13:26:03] <Isotopp> yw
[13:26:07] <KnowledgeShark> :)
[13:26:11] <Isotopp> anyway, get your counts, compare and see
[13:26:20] <Isotopp> my money is on "they are identical"
[13:26:31] <KnowledgeShark> o_O
[13:26:39] <Isotopp> https://knowyourmeme.com/memes/theyre-the-same-picture
[13:26:58] <KnowledgeShark> Isotopp: Okay. I'll be back. Just a "use DATABASE;" then run each of those commands in the paste .sql 1 after the other? Do this on both?
[13:28:17] <Isotopp> precisely
[13:28:30] <Isotopp> or add 'use database' at the beginning
[13:28:35] <Isotopp> put the sql file into place
[13:28:43] <Isotopp> and in the cmdline client "source doit.sql" on each server
[13:29:18] <KnowledgeShark> Isotopp: ohhh... that's how you can run a .sql INSIDE CLI? o_O
[13:29:22] <KnowledgeShark> Very cool!
[13:29:43] <KnowledgeShark> Do I have to put the path?
[13:30:41] <Isotopp> https://kris.home.koehntopp.de/keks/Screen%20Shot%202022-02-22%20at%2010.59.06.png
[13:30:51] <Isotopp> that depends on where it is.
[13:31:00] <Isotopp> if it is in current dir, that is not required.
[13:31:12] <Isotopp> (note that I did not run a full load of the jsonl)
[13:32:05] <KnowledgeShark> Isotopp: So if I am in /home/brandon/CLI/ and have doit.sql in there; I can login to mysql -u brandon -p and then "use database;" and then run "source doit.sql" and bam it works?
[13:32:17] <Isotopp> yes
[13:32:40] <Isotopp> assuming you are in /home/brandon/CLI when you start  mysql
[13:32:44] <KnowledgeShark> Isotopp: Very cool! Once I figure out how to offload it; you will be the first to get the URL of the .sql.
[13:34:02] <KnowledgeShark> Isotopp: I also would like to learn how to use Github correctly and on my Sharpen Your Sword fork; I wanted to do a pull request and update the modified .py on your Git account if that's okay with you.
[13:34:58] <Isotopp> That would be quite welcome, actually
[13:35:19] <KnowledgeShark> Isotopp: Awesome :)
[13:46:47] *** Joins: bytestream (~bytestrea@user/bytestream)
[13:47:57] *** Quits: bytestream2 (~bytestrea@user/bytestream) (Ping timeout: 240 seconds)
[13:54:42] <KnowledgeShark> Isotopp: You are correct good Sir! 100% identical.
[13:56:12] <Isotopp> yes, Naktibalda was on to something here.
[13:57:22] <Naktibalda> so the problem was to find the right way to compare results, right?
[13:57:50] <KnowledgeShark> Isotopp: Yes Naktibalda was right.
[13:57:58] <KnowledgeShark> Naktibalda: Thank you!
[15:40:45] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Read error: Connection reset by peer)
[15:47:51] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[16:41:41] *** Joins: lacrymology (~lacrymolo@static-57-7-25-46.ipcom.comunitel.net)
[17:20:36] *** Quits: brentaarnold (~brentaarn@24.112.56.42) (Ping timeout: 240 seconds)
[17:26:16] *** Joins: brentaarnold (~brentaarn@24.112.56.42)
[17:51:24] *** Quits: toastloop (~toastloop@user/toastloop) (Ping timeout: 240 seconds)
[17:53:41] *** Joins: toastloop (~toastloop@user/toastloop)
[18:26:01] *** Joins: timetraveler_ (sid527600@id-527600.lymington.irccloud.com)
[18:37:08] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[18:38:36] <k_sze> It seems that MySQL's LIKE does not support Unicode?
[18:40:48] <Naktibalda> it absolutely does, but behaviour of string comparison depends on collation of the field
[18:48:19] <k_sze> I have a column that is `varchar(300) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL`
[18:48:49] <Naktibalda> why do you think that LIKE doesn't support unicode?
[18:48:56] <k_sze> Yet I can't search it with something like `LIKE '%バーナ%'`
[18:49:13] <Naktibalda> do you set connection charset to utf8?
[18:49:15] <k_sze> Even though I'm 100% certain there are rows that contain 'バーナ'.
[18:49:34] <k_sze> How do I tell?
[18:49:57] <Naktibalda> PDO uses charset parameter in DSN
[18:50:06] <Naktibalda> oh, wait, we are in mysql
[18:50:14] <Naktibalda> SET NAMES 'utf8';
[18:56:07] <k_sze> Is it always possible to convert a utf8mb3 column to utf8mb4? What if the column is currently referenced by another table's FK?
[18:56:30] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:56:39] <k_sze> The devops who set up the databases for me did a really half-assed job.
[18:59:35] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Client Quit)
[19:03:33] <Naktibalda> SET FOREIGN_KEY_CHECKS=0;
[19:09:32] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[19:26:05] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[19:26:58] <Isotopp> k_sze: utf8mb4 is a superset of utf8 alias utf8mb3,so they are convertible
[19:27:13] <Isotopp> k_sze: you can check the literal encoding of a thing using the hex() function
[19:27:24] <Isotopp> select hex(somecol) from sometable where id = 3;
[19:27:32] <Isotopp> this will tell you what bytes there are in the column
[19:27:48] <Isotopp> these are different from the bytes you receive if the SET NAMES and the column diagree on the charset
[19:28:12] <Isotopp> because mysql converts the bytes from the columns charset to the connections charset
[19:28:36] <Isotopp> for example you can have a column name that contains a name such as Köhntopp, and that will contain the o-umlaut as c3b6 for utf8mb4.
[19:28:58] <Isotopp> of you SET NAMES latin1, selecting that name will send the umlaut as f6 to your terminal.
[19:31:06] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[19:32:44] <k_sze> I see.
[19:32:48] <k_sze> Thanks.
[19:33:08] <k_sze> I forget what the 'ai' in 'utf8mb4_0900_ai_ci' stands for.
[19:33:22] <Isotopp> accent insensitive
[19:33:29] <Isotopp> it will treat ö and o the same
[19:33:33] <Isotopp> ci is case
[19:33:37] <Isotopp> it will trest O and o the same
[19:33:51] <k_sze> I see. Thanks.
[19:56:12] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[19:57:35] *** Quits: ketas (~ketas@0011-0000-0000-0000-d7dc-830e-07d0-2001.dyn.estpak.ee) ()
[19:57:38] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[20:05:05] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[20:06:12] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[20:15:00] *** Quits: Yoda-BZH (~yoda-bzh@spiderman.pulsation.fr) (Ping timeout: 240 seconds)
[20:18:27] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[20:18:46] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[20:20:26] *** Quits: Terlisimo (~Terlisimo@outofband.ozna.net) (Quit: Connection reset by beer)
[20:23:41] *** Joins: Terlisimo (~Terlisimo@outofband.ozna.net)
[20:32:40] *** Joins: ketas (~ketas@0011-0000-0000-0000-d7dc-830e-07d0-2001.dyn.estpak.ee)
[20:51:37] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Few women admit their age.  Few men act theirs.)
[21:11:44] *** Joins: Yoda-BZH (~yoda-bzh@2a01:e34:ecb0:2b10:e4a5:caa6:6f85:13ff)
[22:11:38] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: WeeChat 3.5-dev)
[22:24:37] *** Quits: GiverOfDomani (sid538075@id-538075.tinside.irccloud.com) ()
[23:26:55] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:29:16] *** Quits: doug16k (~doug16k@172-97-224-241.cpe.distributel.net) (Read error: Connection reset by peer)
[23:43:47] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:47:36] *** Quits: David- (~none@5750ac6d.skybroadband.com) (Ping timeout: 252 seconds)
[23:58:06] <mickey8> how do i need select from t1, where t1.price > avg(t2.paidprice)? left join didnt help much
[23:59:13] <mickey8> is cte the right approach?
