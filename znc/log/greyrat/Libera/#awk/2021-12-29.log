[00:10:14] *** Quits: junebug (~junebug@2600:1700:3db0:2540:128d:5e50:6657:edb) (Quit: Leaving)
[00:31:22] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:00:24] *** Quits: user51 (~user51@176.228.148.215) (Remote host closed the connection)
[01:10:36] *** Joins: regexfreak (~regexfrea@2405:201:c034:3a50:783b:7563:6c49:415e)
[01:52:37] *** Joins: seninha (~seninha@user/seninha)
[02:08:05] *** Quits: regexfreak (~regexfrea@2405:201:c034:3a50:783b:7563:6c49:415e) (Ping timeout: 256 seconds)
[02:48:42] *** Joins: kensanata (~user@user/kensanata)
[02:49:25] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Remote host closed the connection)
[02:55:14] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[03:12:58] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 260 seconds)
[03:13:37] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[03:45:45] *** Quits: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net) (Remote host closed the connection)
[04:29:19] *** Joins: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net)
[04:46:30] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[05:33:04] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[08:18:37] *** Quits: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[08:50:00] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[08:51:32] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Remote host closed the connection)
[08:55:49] *** Joins: demonbane (~demonbane@71.247.72.217)
[09:17:45] *** Joins: regexfreak (~regexfrea@2405:201:c034:3a50:a967:223:585a:742)
[09:18:14] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.4)
[09:20:39] *** Joins: treble (~treble@user/treble)
[09:49:31] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 245 seconds)
[09:56:28] <Celmor[m]> I'm trying "group" lines by the first field and print the last item of each group. I can print the first item using `gawk -F @ '!s[$1]++'` so the "only" difference I'd need is printing the last and I'm not sure if this could even be easily accomplished (since it would need to hold off the printing till all lines have been read)
[09:56:54] *** Joins: seninha (~seninha@user/seninha)
[09:57:59] <Celmor[m]> guess I'll use powershell...
[10:02:16] <yeti> $NF   ?
[10:02:45] <Celmor[m]> not the last field, the last occurance
[10:04:59] <yeti> then I need to wake up ma babel fish 1sz with some caffeine
[10:06:07] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[10:06:12] <tirnanog> so "item" is a line?
[10:06:46] <yeti> you could collect    s[$1]=$0   without printing.  that would overwrite previou matches
[10:07:04] <Celmor[m]> no, item is the occurrence if there are multiple after grouping
[10:07:13] <Celmor[m]> I've already solved it using pwsh at least
[10:07:36] <Celmor[m]> yeti: that ... could work
[10:07:45] *** Joins: user51 (~user51@176.228.148.215)
[10:08:31] <Celmor[m]> damn, now I'm missing the field separator again
[10:08:49] <tirnanog> but s[$1]=$0 would imply yes to that question ($0 being the line).
[10:09:06] <tirnanog> rather than no?
[10:09:36] <yeti> put it in {...}
[10:09:51] <yeti> scan thru the array in END{...}
[10:10:18] <Celmor[m]> the result isn't the same
[10:10:40] <Celmor[m]> it shows duplicates
[10:11:16] <Celmor[m]> I don't quite follow 'put it in {...}' though I did get the END part
[10:11:33] <Celmor[m]> ah, it's supposed a statement without "evaluation" I suppose
[10:11:54] <Celmor[m]> how do I scan through an array though...
[10:12:21] <yeti> for( i in s ) do_something
[10:12:54] <Celmor[m]> `for( i in s ) { i }` ?
[10:13:06] <yeti> print s[i]
[10:13:33] <yeti> you have some test not too private data?
[10:13:48] <Celmor[m]> I thought `i` assumes the value of the _item_ in `s`
[10:14:08] <yeti> I'm just too undercaffeinated...
[10:14:10] <Celmor[m]> sure
[10:15:19] <Celmor[m]> damn, github keeps signing me out
[10:15:42] <Celmor[m]> https://pastebin.com/raw/2xqa2Z2n where @ is the field separator
[10:16:07] <yeti> ai wei wei
[10:17:52] <Celmor[m]> example "solution" https://pastebin.com/raw/0mgiwhyj
[10:19:31] <yeti> how many lines should remain?
[10:20:05] <Celmor[m]> 111
[10:20:19] <yeti> $ awk -F@ '{s[$1]=++N}END{for(i in s)print s[i],i}' 2xqa2Z2n | wc -l
[10:20:21] <yeti> 111
[10:20:47] <Celmor[m]> other than `s[i],i` I had it
[10:21:02] <yeti> the order is relevant?
[10:21:03] <Celmor[m]> unfamiliar with that syntax though
[10:21:08] <Celmor[m]> now
[10:21:10] <Celmor[m]> no*
[10:21:21] <yeti> ok, then strip that N stuff
[10:21:36] <Celmor[m]> which N?
[10:21:39] <yeti> I thought I need to sort it back into the original order
[10:21:43] <Celmor[m]> ah, just saw it
[10:22:04] <Celmor[m]> so `,i` isn't needed either?
[10:22:24] <yeti> only printing i
[10:22:59] <Celmor[m]> I was close in the end anyway
[10:23:12] <Celmor[m]> gawk -F @ '{s[$1]=$0} END {for( i in s ) { print s[i] } }'
[10:23:52] <yeti> and {s[$1]=1} may be enough
[10:24:15] <Celmor[m]> without the END block?
[10:24:29] <yeti> awk -F @ '{s[$1]=1} END {for( i in s ) { print s[i] } }'
[10:25:11] <Celmor[m]> so only replaced `$0` with `1`
[10:25:38] <yeti> you want the "index" only or the whole line?
[10:25:52] <Celmor[m]> the line
[10:25:56] <tirnanog> so, the answer was yes. ok.
[10:26:14] <yeti> then let  {s[$1]=$0}  in there
[10:26:42] <Celmor[m]> ok, that makes more sense then
[10:27:05] <yeti> <--- undercaffeinatedly slow...
[10:27:21] <Celmor[m]> it's fine and my pwsh solution would've worked as well
[10:27:26] <Celmor[m]> thanks though
[10:27:39] <yeti> I dont know pwsh
[10:27:57] <yeti> I'm an alien from an other planet... we dont have wondows
[10:27:58] <Celmor[m]> powershell, the "modern" cli on windows that's cross-platform now
[10:29:20] <yeti> 40 light years away we are still in MS's CP/M days...  M80, L80, F80, MBASIC, ...
[10:29:22] <yeti> :-D
[10:29:24] <Celmor[m]> I kinda like it, might retain parts of that solution just to "objectify" and perhaps make scripting easier on basis of those "properties"
[10:30:13] <Celmor[m]> for scipting by itself it's quite nice but once you need to interact with the system it's still crap as you often rely on those old concepts
[10:31:01] <Celmor[m]> wscript *shudder*
[10:32:01] <yeti> i remember 4dos.  used it to make a menu for all the utils I needed for fidonet
[10:32:25] <yeti> but I never did dive deep into DOS or windows
[10:32:26] <Celmor[m]> wonder if I need gawk for this solution, last time people were complaining that I've used awk instead of gawk but not sure what made the difference where I needed to start using gawk anymore (which feature was gnu version specific)
[10:32:43] <Celmor[m]> who would want to anyway
[10:33:41] <yeti> gawk adds muc stuff.  so if your code runs in plain awk, saying that by using awk as interpreter name is a gint for all readers
[10:34:15] <yeti> gawk program should be clearly branded as that in a comment or with .gawk extension
[10:34:24] <Celmor[m]> ik that much, I just don't know what made my line gawk specific last time so I've just reused the "gawk" invocation from last time
[10:34:51] <yeti> I hope gawk will diverge more from awk until it finally is really incompatible
[10:35:14] <yeti> then there will be no ambiguity any more
[10:35:29] <Celmor[m]> my last gawk solution was: gawk -F / -v RS="\0" '{l=$2; for (i=3; i<NF; i++) l=l"/"$i; }!s[l]++ {print l}'
[10:35:57] <yeti> can standard awk use RS="\0"?
[10:36:05] <Celmor[m]> dunno
[10:36:46] <Celmor[m]> the line used to work fine in awk but people vere saying I was using features specific to the gnu version
[10:37:48] <Patsie> without gawk I couldn't have made this -> https://github.com/patsie75/awk-chip8
[10:38:04] <Patsie> or pretty much any of my 'fancy' awk programs
[10:38:21] <yeti> then it is gawk-chip8
[10:38:24] <yeti> :-P
[10:38:48] <yeti> and the others are gawk programs
[10:38:54] <Patsie> github says: Languages: Awk 93.7%
[10:39:01] <yeti> I just demand labelling them correctly
[10:39:28] <Patsie> isn't it? -> main.gawk
[10:39:37] <Celmor[m]> so to be safe, why not always using gawk if my toolchain always uses the gnu version
[10:40:00] <Patsie> you could, just be aware that not everybody has gawk available
[10:40:17] <Celmor[m]> not like that affects me, lol
[10:40:19] <Patsie> or the version of gawk in which the feature you use is there
[10:40:36] <Celmor[m]> my lines usually aren't that fancy
[10:42:23] <Celmor[m]> damn, I wanted to go to sleep like an hour ago but that problem kept me awake
[10:43:38] <yeti> me fell out of dreams far too early which adds to not yet having had caffeine
[10:43:52] <yeti> my default awk is mawk
[10:44:08] <Patsie> lean and fast
[10:44:12] <yeti> I dont want to get used to gawkisms without noticing it
[10:44:14] <Patsie> (in most cases)
[10:45:00] <yeti> gawk is installed for occasionally playing with it
[10:45:26] <yeti> but my stuff shall run in  busybox awk  and  mawk
[10:45:42] <Patsie> so nothing fancy then ;P
[10:46:01] <yeti> I like it boring
[10:46:03] <yeti> :-P
[10:46:08] <Celmor[m]> the issue to me is that there's no difference to whichever tool I use since it tell me that my feature that I use is gnu specific 
[10:46:12] <Patsie> just regular ol' { print $1,$2 } :)
[10:46:49] <yeti> 2 or 3 lines longer
[10:46:52] <yeti> sometimes
[10:46:53] <Patsie> Celmor[m]: there isn't as long as you use it only yourself
[10:46:55] <yeti> https://gitlab.com/-/snippets/1668424
[10:47:31] <yeti> https://gitlab.com/-/snippets/1886921
[10:47:36] <Patsie> as soon as you start to share scripts, then you need to keep track of which interpreter and what features to make sure it still works at other users platform
[10:48:09] <yeti> when i need bignums I use dc or python
[10:48:23] <yeti> just to get as few gawk into muscle memory as possible
[10:48:44] <Patsie> yeti: c="sort | cut -d/ -f2-" <- that's not awk ;P
[10:49:09] <yeti> then it is not bash if someone uses sort?
[10:49:12] <yeti> :-Þ
[10:49:22] <yeti> it just is plausible scripting
[10:50:05] <yeti> decorate, sort, undecorate is sooooo unix oldtime
[10:50:44] <yeti> and why should I install gawk on my router if busybox awk can do it that way?
[10:53:42] <yeti> someday I'll add the missing parts to DC  :-P
[10:54:51] <yeti> yay!    UUCP job killed (From: uucp ...)
[10:55:27] <yeti> 1st time expire proved to work
[10:56:37] <yeti> ok... time for caffeine now!
[10:56:39] <yeti> _o/"
[10:58:10] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[10:58:59] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[11:02:26] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 260 seconds)
[11:05:55] *** Quits: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[11:15:03] *** Joins: lavaball (aj@31.204.155.215)
[11:19:32] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 240 seconds)
[12:15:59] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[12:18:16] *** Joins: epony (epony@user/epony)
[12:24:57] *** Quits: lavaball (aj@31.204.155.215) (Ping timeout: 240 seconds)
[12:39:39] <pagios> hello emanuele6
[12:41:23] <pagios> cat users.ldap  | awk '/^dn:/ { in_dn = 1 } in_dn && /^zimbraMailDeliveryAddress:/ { mail = $0 } in_dn && /^userPassword:/ { pass = $0 } in_dn && /^displayName:/ { display = $0 } mail && pass && in_dn && display { record="${mail}\,${pass}\,${display}"; print $record ; display = mail = pass = in_dn = 0 }' > users_hash.txt.        <-- i am trying to print the values in CSV format but it is not working for me,    i need it to be email,name,pass of 
[12:41:23] <pagios> each record on a line
[12:42:00] <emanuele6> what is "${mail}" supposed to mean?
[12:42:21] <pagios> the email address we extracted yesterday
[12:42:31] <pagios> the mail variable
[12:42:33] <emanuele6> ${mail} means nothing
[12:42:49] <pagios> $mail
[12:43:02] <emanuele6> that print the mail-th field of the current line
[12:43:54] <pagios> the printout is not consistent anymore i get multiple displayName lines and then some userPass etc, it is not in seq like yesterday
[12:44:04] <emanuele6> # echo 'a b c d' | awk '{ mail = 2; print $mail }'
[12:44:05] <shbot> emanuele6: b
[12:44:27] <pagios> i see
[12:44:46] <pagios> how can i fix it ?
[12:44:46] <emanuele6> # echo 'a b c d' | awk '{ mail = 2; print ${mail} }'
[12:44:52] <shbot> emanuele6: awk: syntax error at source line 1
[12:44:52] <shbot> emanuele6:  context is
[12:44:52] <shbot> emanuele6: etc... ( http://ix.io/3JUi )
[12:44:55] <emanuele6> and ${mail} is just nonsense
[12:45:42] <emanuele6> pagios:   print mail "," pass "," display
[12:46:21] <emanuele6> or if you want to use a useless "record" variable:   record = mail "," pass "," display; print record
[12:46:22] <pagios> thanks it works :) 
[12:46:41] <emanuele6> your code didn't even make sense
[12:48:10] <pagios> i have one last thing to do to close this subject, i  have now each line with this syntax:     zimbraMailDeliveryAddress: user@domain.com ,userPassword:: fdsdfs =,displayName: blah.       i need to make it user@domain,fdsdfs,blah
[12:53:35] <pagios>  print ${mail#*: }  ?
[12:59:25] <emanuele6> pagios: once, again $NUMBER gets the NUMBER-th field of the current record; and ${...} is totally invalid
[12:59:55] <pagios> display = display | sed 's/displayName://g' emanuele6 ? 
[13:00:12] <emanuele6> ...
[13:04:37] <pagios> ?
[13:05:10] <pagios> i will do it programatically i guess
[13:06:04] <emanuele6> whatever that means
[13:06:09] <pagios> in javascript
[13:06:14] <pagios> not scripting
[13:06:22] <Patsie> stick to what you know best
[13:07:22] <emanuele6> right, don't use ksh syntax in awk. that clearly show you don't know anything about awk
[13:09:11] <emanuele6> i would personally use `match($0, /pat/) { var = substr($0, RLENGTH + 1) }' instead of `/pat/ { var = $0 }' but there is no point in telling you if you don't understand anything about awk's syntax
[13:09:41] <emanuele6> (e.g. with /^mail: */ as pat)
[13:10:41] <pagios> ` and ' ? 
[13:11:28] <pagios>  `match($0, /^mail/) { var = substr($0, RLENGTH + 1) }'      why do we have one ` and the closing is ' ? 
[13:11:41] <emanuele6> also it is very annoying helping you: you keep changing your question; you post your questions to multiple channels; two people have replied to you in #bash even before you asked your question here and you just ignored them
[13:11:56] <pagios> ok thanks
[13:11:58] <emanuele6> and you clearly want us to do all your work
[13:12:01] <pagios> i will stop asking
[13:12:06] <pagios> not really
[13:16:42] <aetnaeus> this is getting awkward
[13:17:18] <aetnaeus> (see what I did there)
[13:17:37] * emanuele6 sees what aetnaeus did there
[13:17:52] * aetnaeus dances awkwardly
[13:22:54] <user51> my awk dialect will be called forward
[13:25:39] *** Joins: lavaball (~Melissa@31.204.155.215)
[13:27:42] <epony> user count will start from 51 ;-)
[13:36:09] *** Quits: lavaball (~Melissa@31.204.155.215) (Ping timeout: 256 seconds)
[13:39:56] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[14:34:35] *** Quits: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de) (Quit: lavaball)
[14:36:10] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[14:42:10] *** Quits: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[14:43:06] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[14:47:12] *** Joins: bluedust (~bluedust@103.165.167.220)
[14:55:29] *** Joins: bluedust_ (~bluedust@117.204.159.226)
[14:58:17] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[15:39:23] *** Parts: pagios (~pagios@life.is-a.beauty) (Leaving...)
[15:42:57] *** Quits: regexfreak (~regexfrea@2405:201:c034:3a50:a967:223:585a:742) (Ping timeout: 256 seconds)
[16:16:39] *** Quits: bluedust_ (~bluedust@117.204.159.226) (Remote host closed the connection)
[17:08:38] *** Joins: seninha (~seninha@user/seninha)
[17:22:17] *** Quits: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:26:48] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[17:33:37] *** test_ is now known as _flood
[17:54:17] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[17:57:34] *** Joins: bluedust (~bluedust@117.204.159.226)
[18:08:03] *** Joins: kensanata (~user@user/kensanata)
[18:10:58] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:33:36] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:40:14] *** Joins: bluedust_ (~bluedust@89.238.130.72)
[18:43:32] *** Quits: bluedust (~bluedust@117.204.159.226) (Ping timeout: 240 seconds)
[18:45:14] *** Joins: bluedust (~bluedust@117.204.159.226)
[18:48:57] *** Quits: bluedust_ (~bluedust@89.238.130.72) (Ping timeout: 256 seconds)
[19:19:54] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[19:34:35] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[19:39:00] *** Joins: seninha (~seninha@user/seninha)
[19:53:03] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[20:03:12] *** Joins: yitz (~yitz@exercism/yitz)
[20:23:59] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:5d5c:8c41:79c4:9b80) (Ping timeout: 250 seconds)
[20:27:16] *** Joins: euandreh (~euandreh@191.181.59.160)
[20:39:05] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[20:39:28] *** Quits: bluedust (~bluedust@117.204.159.226) (Remote host closed the connection)
[21:22:52] *** Joins: bluedust (~bluedust@117.204.159.226)
[21:28:51] *** Quits: bluedust (~bluedust@117.204.159.226) (Remote host closed the connection)
[23:17:08] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:54:42] *** Joins: kensanata (~user@user/kensanata)
