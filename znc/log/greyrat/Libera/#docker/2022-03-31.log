[00:00:34] *** Joins: blei (~blei@user/blei)
[00:01:35] <ash_worksi> ah well, there I have it
[00:02:34] *** Quits: nosolls (~nosolls@user/nosolls) (Quit: WeeChat 3.4.1)
[00:02:38] *** Quits: setesat (~setesat@94.4.156.220) (Quit: The Lounge - https://thelounge.chat)
[00:02:46] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[00:03:59] *** Joins: setesat (~setesat@94.4.156.220)
[00:06:51] *** Joins: Enitin (~Enitin@82.180.145.226)
[00:07:54] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[00:10:46] *** Quits: lithium (~lithium@user/lithium) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:15:08] *** Quits: qwd (~qwd@185.203.114.234) (Quit: bye!)
[00:17:29] *** Joins: qwd (~qwd@185.203.114.234)
[00:24:38] <ash_worksi> okay, so the question I asked earlier was, since I can't use -p 127.0.0.1:... with docker swarm, how can I make a container accessible by swarm nodes but not by the public?
[00:24:47] <ash_worksi> the answer I was given was to make an internal network
[00:25:05] <ash_worksi> I was able to accomplish that using `docker network create --internal -d overlay test_internal`
[00:25:15] *** Quits: cmagina (sid286142@user/cmagina) ()
[00:25:18] <ash_worksi> and then I could use `--network` in `docker service create`
[00:27:43] <ash_worksi> so I tried this on a docker-machine; I started an nginx container on swarm and curl'ed 127.0.0.1 from the `docker-machine ssh` and it worked (yay), but then I tried from my regular machine curling 192.168.x.x and it also worked (boo)
[00:28:06] <ikke> I have not used swarm, so not really able to help you there
[00:29:56] <ash_worksi> darn
[00:34:08] *** Joins: drillbyt (drillbyt@user/drillbyt)
[00:35:14] <jjakob> so I have a docker-compose service that defines a volume "./app/config.json:/usr/src/app/config.json", on the host it doesn't exist yet, inside the image it exists (created in Dockerfile with "RUN touch /usr/src/app/config.json"). When I "docker-compose up -d", the service container doesn't start with that volume erroring by trying to mount a directory to a file, because docker created "./app/config.json" as a directory, not by copying out the file from 
[00:35:14] <jjakob> inside the container
[00:35:57] <ash_worksi> jjakob: if /foo doesn't exist on the host and is mounted to a container, it will be created as a directory
[00:36:12] <ash_worksi> created on the host I mean
[00:36:28] <jjakob> ah, darn. well, I'll just move the touch to the host side
[00:36:49] <ada_> jjakob: if you're using a bind-mount, it will never copy the file from the container to the host
[00:36:52] <ash_worksi> jjakob: or, mount the parent directory
[00:37:01] <ada_> jjakob: if you used a named volume instead, then it will copy the file from the container to the _named volume_
[00:37:15] <ash_worksi> jjakob: or create a new directory in the existing on that expects to have config.json placed in it at some point
[00:37:15] <ikke> ash_worksi: that would shadow the directory in the container
[00:37:46] *** Joins: vlm (~vlm@user/vlm)
[00:37:50] <ash_worksi> maybe I'm confused as to what the goal is
[00:38:22] <ada_> https://docs.docker.com/storage/volumes/#populate-a-volume-using-a-container
[00:38:34] <ash_worksi> I mean... is that the goal?
[00:38:41] <ash_worksi> I guess it is
[00:38:56] <jjakob> yeah, workarounds. the directory inside the container /usr/src/app already has contents that should not get copied out to the host, so I'm left with bond mounting a subdir, or bind mounting a file from the host (which is what I'm leaning to)
[00:39:45] <ikke> jjakob: why are you using bind mounts if the content should not come from, neither end up on the host
[00:39:54] <ash_worksi> jjakob: if it were me, I would either (1) read the link ada just pasted or (2) if I didn't think of that, I would mount the host directory someplace else and copy it
[00:40:21] <ikke> jjakob: (the latter would never happen anyway as ada_ mentioned)
[00:41:10] <jjakob> ikke: I'm only using bind mounts in a development environment where devs run everything on their local host, no swarm or anything
[00:41:18] <ash_worksi> ada_: any advice on my original question?
[00:41:45] <ash_worksi> jjakob: so a container has a baked in config.json and you want to copy that to a dev environment to help people get started?
[00:41:47] <jjakob> in production it gets geherated inside from templates in the entrypoint
[00:42:20] <ash_worksi> jjakob: it seems to me like whatever you used to originally produce the config.json is a good idea use to create your base system or mounting
[00:42:31] <jjakob> ash_worksi: yeah. well, I don't need it to get copied out, I have a whole Makefile system that does things on the host
[00:43:03] <ada_> ash_worksi: what is the objective
[00:43:15] <jjakob> in both cases the initial config.json is completely empty, it gets generated by jq in the entrypoint
[00:43:21] <ash_worksi> jjakob: so if I am _totally guessing_ correctly, then I would say check-in a dev environment to git; when devs want to work on the container, they can pull, use compose to mount, develop, the build and deplo
[00:43:25] <ash_worksi> deploy*
[00:43:37] <jjakob> only in the dev environment I also want devs to be able to read and edit that
[00:43:56] <ash_worksi> ada_: in concrete terms, I want to run redis in swarm allowing connections from the local network but not from the internet
[00:44:01] <jjakob> ash_worksi: that all already exists
[00:44:26] <ikke> ash_worksi: I'm not sure how swarm works, but in general in docker services are provide unless you expose ports
[00:44:35] <ikke> s/provide/private
[00:44:37] <ash_worksi> jjakob: so then config.json should be in the repo, if you pull, you can mount it over the existing config.json that's in the container
[00:45:06] <jjakob> ash_worksi: config.json can't be a static commited file because it contains runtime settings like database connection parameters, etc. passwords get read in from secrets files
[00:45:08] <ash_worksi> ada_: the redis container is a session store that's bridging sessions between a container and a local legacy instance of PHP
[00:45:31] <jjakob> that's why I generate it in the entrypoint script with jq
[00:45:43] <ash_worksi> jjakob: then that should be created wherever the container is deployed; commit a general purpose config and let the developers configure it
[00:45:50] <ada_> ash_worksi: what does "the local network" mean in this context - from other hosts on your LAN but not the WAN?
[00:45:59] <ada_> or does it mean "from other containers on the overlay network"?
[00:46:21] <jjakob> yes, there is a jq filter template file commited into the repo that is used by jq
[00:46:43] <ash_worksi> ada_: in all seriousness, it's either a server called web5 or web6... only web5 is in the swarm at the moment
[00:47:30] <ash_worksi> jjakob: my point is, you can commit a nonsense.config.json to your repository; that can hookup DSNs used in docker-compose
[00:47:54] <jjakob> delivery status notifications?
[00:48:33] <ash_worksi> I... never thought about about what it's an abbr for, but like `postgres://user:pass@host:port`
[00:48:47] <ash_worksi> data source name
[00:48:54] <jjakob> yes, I could commit a empty file, or put a touch command in the makefile... both are equal
[00:49:24] <ikke> ash_worksi: connection string
[00:49:47] <ada_> ash_worksi: iptables block connections to published port from all except LAN
[00:49:48] <ash_worksi> my point is, let the "default config.json" override the one in the container, and just keep the default committed
[00:49:54] <ada_> ash_worksi: probably the most straightforward way 
[00:49:58] <ash_worksi> ikke: oh
[00:49:58] <ikke> Hmm, no, connection strings are different
[00:50:04] <ash_worksi> ikke: serves me right
[00:50:06] <ikke> uri
[00:50:57] <ikke> ash_worksi: for reference, these are connection strings: https://www.connectionstrings.com/postgresql/
[00:51:15] <ash_worksi> ada_: yeah, that's what's going on, I just thought it'd be nice to have a similar thing to -p 127.0.0.1:... on swarm for that extra bit of, "only local things here"
[00:51:16] <jjakob> ash_worksi: this is config.json.jqfilter: https://termbin.com/psft
[00:51:41] <jjakob> it's all json populated from the envirronment
[00:51:47] <ada_> ash_worksi: iirc, --internal doesnt attach the network to the `docker_gwbridge` so prevents the containers from reaching out
[00:52:10] <ada_> but of course, the hosts themselves should be able to reach teh containers because the hosts are routers to the overlay network
[00:52:12] <jjakob> ash_worksi: anyway, my question is answered, thanks everyone
[00:52:18] <ash_worksi> jjakob: I would parse all that from environment variables so you can just set the enviroment variables differently when you go to deploy
[00:52:45] <jjakob> yes, look at that termbin paste, it's already like that
[00:52:57] <ada_> jjakob: if you're using swarm somewhere in your pipeline, you can also mount a config file as a swarm "config" object
[00:53:06] <ada_> idk test/prod/dev whatever
[00:53:20] <ada_> I like this feature of swarm even for single-node environments
[00:53:29] <ash_worksi> jjakob: if we're on the same page then you don't need to mount a non-existent file
[00:53:31] <ada_> https://docs.docker.com/engine/reference/commandline/config/
[00:53:44] <ash_worksi> ada_: so, I tried that....
[00:53:58] <jjakob> not using swarm yet, I did want to try it but didn't have time yet (primarily because of much better secrets permission management)
[00:54:17] <ash_worksi> ada_: I used `docker service create test_internal --internal -d overlay` on a docker-machine
[00:54:27] <ash_worksi> oops
[00:54:32] <ash_worksi> ada_: ignore that... gisting..
[00:54:58] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[01:00:28] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 272 seconds)
[01:00:43] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[01:02:41] <ash_worksi> ada_: https://gist.github.com/ash-m/84b6bb9ab1e382e2c537cdb3e943e81e
[01:05:09] <ash_worksi> ada_: (I omitted quite a few results
[01:07:01] *** Joins: jazzy (~jaziz@user/jaziz)
[01:10:41] <ash_worksi> I updated it with the full output
[01:10:57] <ash_worksi> maybe I need to "disconnect" services from another network?
[01:16:31] <ada_> check with 'docker service inspect' and ensure that it's only connected to `test-network` 
[01:16:46] <ada_> buuut, because you're publishing a port, it's also going to be connected to `ingress` to service the published port
[01:16:58] *** Quits: philipp64 (~philipp64@65.129.128.199) (Quit: philipp64)
[01:17:18] <ada_> now, because you have the port published, the host is always going to act as a router to that port, so traffic is definitely going to go to the container
[01:18:07] <ada_> --internal only really makes sense if the network is truly internal and you don't want traffic getting IN or OUT, iirc.  a different service, say, nginx-proxy or traefik might sit on the --internal network and a non--internal network to provide access to what's inside it
[01:18:25] <ada_> but the only real way I know of to prevent a request from accessing a published port is through iptables rules
[01:18:53] *** Joins: puppetmasterr (~gigachad4@2a02:908:237:d420:c1eb:4dd8:9622:5ac1)
[01:19:35] *** Quits: MikeBux (~MikeBux@host-091-097-125-139.ewe-ip-backbone.de) (Quit: IRC is just multiplayer notepad)
[01:19:48] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[01:22:21] *** Quits: puppetmasterr (~gigachad4@2a02:908:237:d420:c1eb:4dd8:9622:5ac1) (Changing host)
[01:22:21] *** Joins: puppetmasterr (~gigachad4@user/puppetmasterr)
[01:22:53] *** Quits: puppetmasterr (~gigachad4@user/puppetmasterr) (Quit: Leaving)
[01:23:16] *** Joins: jazzy2 (~jaziz@user/jaziz)
[01:25:15] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[01:26:30] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[01:34:10] *** Joins: drillbyt_ (drillbyt@user/drillbyt)
[01:34:58] *** Quits: drillbyt (drillbyt@user/drillbyt) (Ping timeout: 246 seconds)
[01:40:42] *** Joins: nosolls (~nosolls@user/nosolls)
[01:45:20] *** Joins: MaxLeiter (~6820a170@thelounge/maintainer/MaxLeiter)
[01:46:20] *** Joins: pvdp403 (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au)
[01:46:43] *** Parts: MaxLeiter (~6820a170@thelounge/maintainer/MaxLeiter) (The Lounge - https://thelounge.chat)
[01:49:29] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[01:53:49] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[01:55:14] *** Joins: ExeciN (~ExeciN@user/nicexe)
[01:56:11] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:88a0:fb04:2d2:c434) (Ping timeout: 245 seconds)
[02:07:19] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[02:12:28] *** Quits: optiz0r (~quassel@lenore.sihnon.net) (Remote host closed the connection)
[02:13:43] *** Joins: optiz0r (~quassel@lenore.sihnon.net)
[02:14:38] *** Quits: Enitin (~Enitin@82.180.145.226) (Read error: Connection reset by peer)
[02:14:59] *** Joins: Enitin (~Enitin@82.180.145.226)
[02:23:55] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:25:32] *** Joins: _0x00 (~0x00@user/0x00/x-6246543)
[02:29:56] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:29] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:35:52] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[02:44:25] *** Quits: Nightah (~Nightah@user/nightah) (Quit: ZNC - https://znc.in)
[02:45:33] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:51:46] *** Quits: dfee (~dfee@ew4-143.ewnet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:51:52] *** Joins: Nightah (~Nightah@user/nightah)
[02:53:27] *** Joins: dfee (~dfee@ew4-143.ewnet.net)
[02:55:13] *** Joins: ajfriesen9 (~ajfriesen@cable-78-35-98-50.nc.de)
[02:57:11] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Ping timeout: 256 seconds)
[02:57:11] *** ajfriesen9 is now known as ajfriesen
[03:01:16] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:15:55] *** Joins: rageshkrishna_ (~rageshkri@122.162.198.225)
[03:16:09] *** Quits: rageshkrishna (~rageshkri@124.40.245.74) (Read error: Connection reset by peer)
[03:20:25] *** Quits: Windy (~windy@user/windy) (Read error: Connection reset by peer)
[03:20:50] *** Joins: Windy (~windy@user/windy)
[03:22:50] *** Joins: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945)
[03:23:16] *** Quits: Nightah (~Nightah@user/nightah) (Read error: Connection reset by peer)
[03:30:42] *** Joins: Nightah (~Nightah@user/nightah)
[03:31:16] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:33:53] *** Quits: DoofusCanadensis (~DoofusCan@node-1w7jr9yercvgg9802q2wcpik5.ipv6.telus.net) (Quit: So as you can see from this flowchSQUIRREL!!)
[03:36:16] *** Quits: tex (~dix@user/dix) (Ping timeout: 272 seconds)
[03:37:13] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:43:11] *** Quits: Optimus (~risto@87.227.227.147) ()
[03:45:15] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:45:31] *** Joins: Atque (~Atque@user/atque)
[03:45:41] *** Joins: itsalexjones_ (~itsalexjo@82.4.99.241)
[03:47:35] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Ping timeout: 240 seconds)
[03:48:37] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Ping timeout: 240 seconds)
[03:48:43] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[03:48:56] *** Quits: luva (~luva@185.168.9.235) (Ping timeout: 272 seconds)
[03:50:42] *** Joins: tiferrei (~tiferrei@user/tiferrei)
[03:56:35] *** Joins: luva (~luva@37.120.197.53)
[04:00:32] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[04:06:08] *** Quits: itsalexjones_ (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[04:11:33] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-546d-a2a7-eb54-e4bc.res6.spectrum.com) (Ping timeout: 260 seconds)
[04:15:50] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[04:26:48] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[04:27:01] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[04:37:28] *** Quits: drillbyt_ (drillbyt@user/drillbyt) (Quit: Leaving)
[04:37:32] *** Joins: minimal (~minimal@user/minimal)
[04:39:01] *** Quits: Bebef (sbreit@phobos.bebef.de) (Quit: bye)
[04:40:18] *** Quits: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945) (Quit: Leaving)
[04:41:33] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[04:43:12] *** Joins: Bebef (sbreit@phobos.bebef.de)
[04:45:04] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[04:49:53] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 250 seconds)
[04:50:31] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[04:52:54] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Quit: bye)
[04:53:04] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[04:53:13] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[05:00:27] *** Quits: jaysicks (~jaysicks@91-82-251-185.pool.digikabel.hu) (Remote host closed the connection)
[05:07:33] *** Quits: dfee (~dfee@ew4-143.ewnet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:16:07] *** Joins: vlm (~vlm@user/vlm)
[05:17:36] *** Joins: dfee (~dfee@ew4-143.ewnet.net)
[05:27:31] <genio> When using FROM something_above as this_thing      then doing stuff, it seems to run   something_above and this_thing in parallel, not waiting for something_above to complete first. Is that not really good practice and should I instead  COPY --from=something_above and use the data from it that way?
[05:27:55] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[05:28:00] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[05:32:38] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[05:35:05] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:37:18] *** Quits: tsal (~tsal@user/tsal) (Ping timeout: 260 seconds)
[05:37:52] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 272 seconds)
[05:38:57] *** Joins: mutefall (~hi@user/mutefall)
[05:39:39] *** Quits: dfee (~dfee@ew4-143.ewnet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:42:49] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[05:43:59] *** Joins: tsal (~tsal@user/tsal)
[05:45:18] <minimal> genio: those are 2 completely different things. Using "FROM something_above" means you are using "something_above" as a layer to then add stuff on top of, whereas "COPY --from=something_above" is only copying the specified file(s) from that image and not layering on top of it
[05:46:13] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[05:48:09] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[05:50:33] <Jonno_FTW> how do I make a service accessible on localhost with docker compose? I have ports: 18081:8081, but I always get a connection refused error when trying to curl localhost:8081
[05:52:36] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[05:53:03] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[05:55:24] *** Quits: platta (~platta@pool-98-110-52-37.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[05:57:15] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[05:57:25] *** Joins: platta (~platta@pool-98-110-52-37.cmdnnj.fios.verizon.net)
[06:00:19] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Ping timeout: 260 seconds)
[06:06:51] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[06:10:23] *** Quits: Nightah (~Nightah@user/nightah) (Quit: ZNC - https://znc.in)
[06:14:41] *** Joins: luckiswithme (~luckiswit@110-175-171-214.static.tpgi.com.au)
[06:15:56] *** Joins: Nightah (~Nightah@user/nightah)
[06:28:04] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[06:29:46] *** Joins: clueminati (~clueminat@gateway/tor-sasl/clueminati)
[06:31:38] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[06:35:30] *** Quits: acovrig (~acovrig@host-173-247-7-127.JENOLT2.epbfi.com) (Quit: Ping timeout (120 seconds))
[06:35:41] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::23f5)
[06:35:53] *** Joins: acovrig (~acovrig@host-173-247-7-127.JENOLT2.epbfi.com)
[06:41:31] <_0x00> Jonno_FTW, ThatÂ´s because port definition works like HOST:CONTAINER
[06:41:55] <_0x00> You should be doing `curl localhost:18081` outside the container
[06:42:53] <_0x00> There is also a long syntax definition of ports if you want it to be more readable. https://github.com/compose-spec/compose-spec/blob/master/spec.md#ports
[06:45:34] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Quit: .)
[06:49:21] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[06:52:30] *** Quits: myselfs (daomeng@216.240.140.49) (Quit: The Lounge - https://thelounge.chat)
[06:53:21] *** Joins: myselfs (daomeng@216.240.140.49)
[06:58:55] *** Quits: acovrig (~acovrig@host-173-247-7-127.JENOLT2.epbfi.com) (Ping timeout: 256 seconds)
[06:59:20] *** Joins: acovrig (~acovrig@host-173-247-7-127.JENOLT2.epbfi.com)
[07:09:55] *** Joins: dfee (~dfee@ew4-143.ewnet.net)
[07:10:20] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[07:12:30] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[07:25:33] *** Quits: luckiswithme (~luckiswit@110-175-171-214.static.tpgi.com.au) (Remote host closed the connection)
[07:29:42] *** Quits: rageshkrishna_ (~rageshkri@122.162.198.225) (Quit: ZNC 1.8.2 - https://znc.in)
[07:29:45] *** Joins: millido (~millido@84.210.150.128)
[07:30:05] *** Joins: rageshkrishna (~rageshkri@122.162.198.225)
[07:30:07] *** Joins: philipp64 (~philipp64@65.129.128.199)
[07:40:43] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 246 seconds)
[07:40:50] *** Joins: keypushe- (keypusher@user/keypusher)
[07:44:08] *** keypushe- is now known as keypusher
[07:52:07] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[07:52:47] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[07:59:06] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[08:00:10] *** Quits: dfee (~dfee@ew4-143.ewnet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:01:46] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Quit: Connection closed)
[08:03:43] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[08:09:36] *** Joins: dfee (~dfee@ew4-143.ewnet.net)
[08:10:03] <Jonno_FTW> _0x00: thanks, I fixed it
[08:10:13] *** Quits: dfee (~dfee@ew4-143.ewnet.net) (Client Quit)
[08:26:25] *** Quits: _0x00 (~0x00@user/0x00/x-6246543) (Quit: Leaving)
[08:27:44] *** Joins: zumba_addict (~zumba_add@12.202.91.140)
[08:37:51] *** Joins: tassee (~tasse@user/tasse)
[08:39:00] *** Quits: tasse (~tasse@user/tasse) (Ping timeout: 272 seconds)
[08:39:01] *** tassee is now known as tasse
[08:46:07] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[08:50:18] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::23f5) (Quit: So as you can see from this flowchSQUIRREL!!)
[08:52:54] *** Quits: nosolls (~nosolls@user/nosolls) (Quit: WeeChat 3.5)
[09:08:33] *** Quits: toulene (~toulene@user/toulene) (Quit: The Lounge - https://thelounge.chat)
[09:17:58] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:26:27] *** Joins: dfee (~dfee@ew4-143.ewnet.net)
[09:26:38] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:37:05] *** Quits: dfee (~dfee@ew4-143.ewnet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:43:06] *** Joins: kostkon_ (~kostkon@athedsl-254924.home.otenet.gr)
[09:44:36] *** Quits: kostkon (~kostkon@2a02:587:a106:f8d0:28a:a3d5:fa76:ae0a) (Ping timeout: 240 seconds)
[09:52:19] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 246 seconds)
[10:06:57] *** Joins: dob1 (~dob1@user/dob1)
[10:07:58] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[10:09:56] *** Quits: Thanzex (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[10:10:32] *** Joins: Thanzex (~Thanzex@37.103.241.128)
[10:13:13] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 260 seconds)
[10:17:26] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:17:58] *** Joins: rvalue (~rvalue@user/rvalue)
[10:22:07] *** Quits: Herve (~RV@lfbn-nic-1-430-119.w90-116.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[10:28:45] *** Joins: jdvr (~jdvr@user/jdvr)
[10:37:50] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[10:40:38] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[10:41:12] *** Joins: Enitin (~Enitin@82.180.145.230)
[10:41:17] *** Joins: rpthms (~rpthms@user/rpthms)
[10:44:15] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[10:50:07] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 260 seconds)
[10:56:01] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 246 seconds)
[10:56:54] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[10:59:03] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[11:00:24] *** Joins: cliluw (~cliluw@47.147.77.43)
[11:00:43] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[11:04:31] *** Quits: ultima (~ultima@23.81.113.229) (Ping timeout: 256 seconds)
[11:06:16] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Remote host closed the connection)
[11:07:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:08:40] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[11:11:49] *** Joins: Optimus (~risto@87.227.227.147)
[11:12:04] *** Joins: tex (~dix@user/dix)
[11:12:34] *** Joins: ultima (~ultima@23.81.113.229)
[11:15:26] *** Quits: Optimus (~risto@87.227.227.147) (Read error: Connection reset by peer)
[11:15:43] *** Joins: Optimus (~risto@87.227.227.147)
[11:16:07] *** Joins: Enitin (~Enitin@82.180.145.226)
[11:19:13] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:21:51] *** Quits: emerent (~quassel@p200300cd5743c3afba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:22:00] *** Joins: emerent (~quassel@p200300cd5743c3dfba27ebfffed28a59.dip0.t-ipconnect.de)
[11:25:11] *** Joins: Tach (~Tach@user/tach)
[11:28:02] *** Joins: Herve (~RV@92.173.180.89)
[11:29:13] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:32:22] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:32:33] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[11:33:46] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[11:36:38] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[11:43:43] *** Joins: lithium (~lithium@user/lithium)
[11:44:19] *** Quits: zumba_addict (~zumba_add@12.202.91.140) (Quit: Client closed)
[11:49:36] *** Joins: dob1 (~dob1@user/dob1)
[11:49:41] *** Quits: Czernobog (~Czernobog@user/czernobog) (Quit: ZNC 1.8.2 - https://znc.in)
[11:50:19] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[11:51:40] *** Joins: Czernobog (~Czernobog@user/czernobog)
[11:55:58] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 272 seconds)
[11:56:18] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:57:38] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 260 seconds)
[12:08:37] *** Joins: cim2 (~cim@205.185.117.110)
[12:09:54] *** Quits: cim (~cim@205.185.117.110) (Read error: Connection reset by peer)
[12:09:54] *** cim2 is now known as cim
[12:11:55] *** Joins: dob1 (~dob1@user/dob1)
[12:16:42] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[12:22:34] *** Joins: OsteHovel (~OsteHovel@ti0056a400-1679.bb.online.no)
[12:23:15] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[12:26:05] *** Joins: [diablo]3 (~diablo]@user/diablo/x-9068044)
[12:28:14] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 260 seconds)
[12:28:14] *** [diablo]3 is now known as [diablo]
[12:28:15] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6b0b:c7cf:b14f:9717:d7fe)
[12:29:52] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[12:34:54] *** Joins: AnapodoPsalidi (~AnapodoPs@195.46.31.29)
[12:37:10] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 246 seconds)
[12:37:27] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6b0b:c7cf:b14f:9717:d7fe) (Ping timeout: 250 seconds)
[12:41:19] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[12:44:39] *** Joins: trafficjam (~trafficja@2001:8004:1500:2574:5b3f:d734:ffca:9054)
[12:45:03] *** Joins: fandre1986 (~fandre198@78.10.85.96)
[12:45:22] <trafficjam> what causes this error? requests.exceptions.ConnectionError: ('Connection aborted.', PermissionError(13, 'Permission denied'))
[12:48:21] *** Joins: fillx (~fillx@user/fillx)
[12:50:28] *** Quits: fillx (~fillx@user/fillx) (Client Quit)
[12:53:57] *** Parts: trafficjam (~trafficja@2001:8004:1500:2574:5b3f:d734:ffca:9054) ()
[12:53:58] <geirha> trafficjam: I've seen that on ubuntu
[12:54:04] <geirha> ah well
[12:54:34] <pidroid> Hello
[12:55:16] <pidroid> i installed docker in user namespace mode (subuid:!guiid) and i don't understand very well how it works
[12:55:27] <pidroid> (it works fine but...)
[12:55:36] *** Quits: bolt (~r00t@user/bolt) (Remote host closed the connection)
[12:56:41] <pidroid> Then whe i have a container that required a storage volume (for config ou documents), i have to create a dedicated user or i have to use the namespaced user (ex : "231072:231072") ?
[12:56:54] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[12:57:36] <pidroid> and if i can/have to use the first option (dÃ©dicated user), how can i set it in docker-compose (user directive ?)
[13:00:41] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[13:01:02] *** Joins: bolt (~r00t@user/bolt)
[13:01:05] *** Joins: Enitin (~Enitin@82.180.145.224)
[13:07:48] *** Quits: Enitin (~Enitin@82.180.145.224) (Ping timeout: 260 seconds)
[13:09:00] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:11:20] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 272 seconds)
[13:12:48] *** Joins: rsx (~dummy@ppp-188-174-147-44.dynamic.mnet-online.de)
[13:14:25] *** Joins: cart_ (~cart@185.191.86.4)
[13:15:21] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:16:11] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[13:16:24] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:16:55] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[13:21:13] *** Joins: dfee (~dfee@ew4-143.ewnet.net)
[13:30:49] *** Joins: kitzman (~kitzman@user/dekenevs)
[13:32:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[13:34:00] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:34:23] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:c06:c5f:5435:411f)
[13:36:00] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[13:36:43] *** Quits: dfee (~dfee@ew4-143.ewnet.net) (Ping timeout: 256 seconds)
[13:37:02] *** Quits: travisghansen (~travisgha@192.74.130.86) (Quit: Ping timeout (120 seconds))
[13:38:21] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[13:38:33] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[13:40:14] *** Quits: nuala (~nuala@user/nuala) (Read error: Connection reset by peer)
[13:40:16] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[13:41:31] *** Joins: evilpyro (~evilpyro@user/evilpyro)
[13:42:50] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6b0b:bb01:c68a:fefd:7e8e)
[13:44:22] *** Quits: AnapodoPsalidi (~AnapodoPs@195.46.31.29) (Ping timeout: 260 seconds)
[13:44:34] <evilpyro> Hello I'm having problems running posgresql on docker. On my laptop which has an updated version of docker it works, while on a server with version 18 it fails. I use docker-compose, hopefully you guys can help me: https://pastebin.com/AJQTr9hk
[13:45:26] <evilpyro> this is the error reported by posgresql https://pastebin.com/pKMLU1KZ
[13:45:45] *** Joins: nuala (~nuala@user/nuala)
[13:46:54] *** Joins: AnapodoPsalidi (~AnapodoPs@195.46.31.29)
[13:47:11] <selckin> sounds like you don't have the env vars set
[13:49:06] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6b0b:bb01:c68a:fefd:7e8e) (Ping timeout: 245 seconds)
[13:49:20] *** Quits: Church (~aleph@68.161.207.188) (Ping timeout: 272 seconds)
[13:49:30] <evilpyro> they are set in a .env
[13:50:06] <evilpyro> POSTGRES_NAME="postgres"
[13:50:06] <evilpyro> POSTGRES_USER="postgres"
[13:50:06] <evilpyro> POSTGRES_PASSWORD="postgres"
[13:50:06] <evilpyro> POSTGRES_HOST="db"
[13:51:09] <geirha> according to the error message, those quotes are taken literally. Remove them
[13:51:19] <geirha> POSTGRES_NAME=postgres
[13:52:00] <geirha> I guess docker-compose changed how it parsed .env files at some point; now doing quote removal in newer versions
[13:54:12] <evilpyro> I did what you said, but it stills reports the same error
[13:54:14] <evilpyro> https://pastebin.com/yS7TbJx4
[13:54:56] <evilpyro> let me change the user env variable to see if it changes in the error
[13:57:12] <evilpyro> okay, it was totaly my fault
[13:57:25] <evilpyro> for some reason my rsync wanst updating the .env
[13:57:33] <evilpyro> thankyou guys
[13:57:58] *** Quits: Herve (~RV@92.173.180.89) (Quit: Leaving)
[14:00:19] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:01:30] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[14:02:48] *** Joins: keypushe- (~keypusher@user/keypusher)
[14:03:38] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 260 seconds)
[14:05:23] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[14:06:09] *** keypushe- is now known as keypusher
[14:08:57] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[14:09:23] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:09:39] *** Joins: Enitin (~Enitin@82.180.145.228)
[14:14:16] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[14:18:03] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[14:19:56] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6b0b:19e7:c73e:8f99:3521)
[14:20:55] *** Joins: ivii (~ivan@user/ivii)
[14:21:43] *** Quits: AnapodoPsalidi (~AnapodoPs@195.46.31.29) (Ping timeout: 260 seconds)
[14:24:13] *** kostkon_ is now known as kostkon
[14:24:31] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[14:31:55] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:32:17] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[14:35:42] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:b015:3d2c:aba1:e095)
[14:38:59] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:43:31] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[14:45:38] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:58:25] *** Joins: AnapodoPsalidi (~AnapodoPs@195.46.31.29)
[14:58:31] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:b015:3d2c:aba1:e095) (Ping timeout: 250 seconds)
[14:58:43] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 250 seconds)
[14:58:55] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:00:46] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6b0b:19e7:c73e:8f99:3521) (Ping timeout: 245 seconds)
[15:01:31] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[15:05:40] *** Joins: minimal (~minimal@user/minimal)
[15:06:04] *** Joins: keypushe- (keypusher@user/keypusher)
[15:08:23] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 260 seconds)
[15:09:20] *** keypushe- is now known as keypusher
[15:18:13] *** Joins: thiras (~thiras@user/thiras)
[15:24:34] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[15:25:02] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[15:27:51] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 245 seconds)
[15:29:00] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 240 seconds)
[15:30:10] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[15:36:13] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[15:41:29] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[15:45:29] *** Quits: evilpyro (~evilpyro@user/evilpyro) (Quit: Leaving)
[15:45:31] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:11:55] <stutz> anyone having issues in docker-compose containers w/ the kernel 5.17? since (I think anyway) the last kernel update I can jump into a container but not do anything inside of it
[16:12:12] <stutz> weirdly enough though everything else seems to work just fine 
[16:24:53] <jjakob> with docker build with buildkit enabled is there a way to set --progress=plain like there is for buildkit build?
[16:28:05] *** Joins: toulene (~toulene@user/toulene)
[16:29:12] <kitzman> not really docker related, as i'm not even using docker in this case: how do you usually go about setting capabilities in rootless containers?
[16:29:31] <kitzman> for example, --cap-add=XXX should work iff the current cap set allows it.
[16:31:22] <kitzman> i.e: i should only be able to set caps with `# capsh --user=x ...`, only if the capability set of the process (which runs as uid 0) allows it (which i find a bit weird)
[16:31:56] <kitzman> i imagine in the case of rootless docker people (still) use setuid or set the caps for the docker binary 
[16:35:47] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:37:11] *** Quits: mutefall (~hi@user/mutefall) (Quit: WeeChat 3.4.1)
[16:46:02] *** Quits: fandre1986 (~fandre198@78.10.85.96) (Quit: Connection closed)
[16:47:31] *** Joins: Lokie (~aaa@user/lokie)
[16:48:17] <Lokie> hello, in docker-compose.yml setting version: "3" does it mean 3.0 or latest 3.x ?
[16:54:30] <tabakhase> 3.0 pretty sure
[16:55:23] <tabakhase> shouldnt rly make a difference in the end, as thats kinda a version YOU define based on features used in the dockerfile, so "3.0" will be "fine forever", not like those need to be updated or anything like that^^
[16:56:54] <jjakob> you might want to use newer features in which case you need to explicitly specify the exact version
[16:57:02] <tabakhase> (there is even a point to "stick to 2.x if its compose and not swarm...")
[16:57:29] <jjakob> secrets are useful in compose
[16:58:20] <jjakob> from a quick search of moby source I can't find a way to specify build --output=plain
[16:59:17] <tabakhase> jjakob is that a question? isnt it progress not output...
[16:59:28] <jjakob> yes
[17:00:38] <tabakhase> Lokie and I can confirm its .0 " When specifying the Compose file version to use, make sure to specify both the major and minor numbers. If no minor version is given, 0 is used by default and not the latest minor version." https://docs.docker.com/compose/compose-file/compose-versioning/#versioning
[17:01:46] <jjakob> I think it's just a yaml value, not interpreted as a string version
[17:02:47] <jjakob> scratch that, it is a string since it's quoted, duh
[17:04:04] <jjakob> well, it does exist in compose "docker-compose build --progress=plain" which is good enough for me
[17:04:41] <Lokie> ok thank you very much !
[17:04:48] *** Quits: theo (~theo@user/theo) (Quit: Ping timeout (120 seconds))
[17:05:07] *** Joins: theo (~theo@user/theo)
[17:05:37] <jjakob> whoever thought truncating build progress and not saving it anywhere to be able to be looked at later...
[17:16:31] <BtbN> There is a lot of horrible decisions and designs with the new buildkit stuff
[17:16:48] <BtbN> like... no easy way to limit how much stuff it does in parallel. It truncating the logs after X MB...
[17:17:03] <BtbN> You can change both things, but only if you launch a custom builder instance and write a config file for it
[17:17:19] <BtbN> If you depend on running on the default builder, you just can't change either. It's super dumb.
[17:17:43] *** Quits: jdvr (~jdvr@user/jdvr) (Ping timeout: 256 seconds)
[17:26:50] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:28:43] *** Joins: Church (~aleph@68.161.207.188)
[17:32:20] *** Joins: wakeup (~wakeup@user/wakeup)
[17:42:19] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[17:43:02] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:48:28] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:b015:3d2c:aba1:e095)
[17:49:09] *** Joins: mutefall (~hi@user/mutefall)
[17:50:38] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[17:52:23] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:54:02] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[17:54:48] *** Joins: almostdvs1 (~almostdvs@074-135-071-059.res.spectrum.com)
[17:55:02] *** almostdvs1 is now known as almostdvs
[18:01:17] *** Quits: AnapodoPsalidi (~AnapodoPs@195.46.31.29) (Quit: Leaving)
[18:16:42] *** Quits: qilx (~quassel@62.201.21.8) (Ping timeout: 252 seconds)
[18:17:18] *** Joins: qilx (~quassel@62.201.21.8)
[18:17:22] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[18:20:56] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[18:22:20] *** Joins: Tach (~Tach@user/tach)
[18:22:49] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Remote host closed the connection)
[18:23:54] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:25:28] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Ping timeout: 272 seconds)
[18:27:39] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[18:37:20] *** phalanx71 is now known as phalanx
[18:39:06] *** Joins: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com)
[18:42:39] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[18:59:56] *** Joins: drocan (~drocan@user/drocan)
[19:00:12] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[19:00:19] *** Joins: jaysicks (~jaysicks@BC9CB35B.mobile.pool.telekom.hu)
[19:04:18] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:13:20] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Quit: Konversation terminated!)
[19:20:41] *** Joins: masber (~masber@2001:620:808:1200:8000::19)
[19:34:30] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[19:37:12] *** Joins: DoofusCanadensis (~DoofusCan@node-1w7jr9yercvgfcuf7yjuhqtcj.ipv6.telus.net)
[19:37:16] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:42:46] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:44:25] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:b015:3d2c:aba1:e095) (Read error: Connection reset by peer)
[19:44:38] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[19:47:48] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[19:48:53] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:54:49] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:56:10] *** Quits: nickel715 (~nickel715@user/nickel715) (Read error: Connection reset by peer)
[19:58:06] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[19:58:20] *** Joins: nickel715 (~nickel715@user/nickel715)
[19:59:20] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[19:59:55] *** Joins: ARoxdale (~ARoxdale@ip-84-203-27-228.broadband.digiweb.ie)
[20:02:12] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[20:03:49] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:07:30] *** Quits: rsx (~dummy@ppp-188-174-147-44.dynamic.mnet-online.de) (Quit: rsx)
[20:12:52] *** Quits: jaysicks (~jaysicks@BC9CB35B.mobile.pool.telekom.hu) (Ping timeout: 246 seconds)
[20:13:01] *** Quits: mutefall (~hi@user/mutefall) (Quit: WeeChat 3.4.1)
[20:22:42] *** Joins: TomyWork (~TomyLobo@p200300e80f158200e43262fee561722d.dip0.t-ipconnect.de)
[20:23:17] *** Quits: eldereko (~eldereko@user/eldereko) (Ping timeout: 240 seconds)
[20:32:46] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 272 seconds)
[20:33:09] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[20:33:33] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[20:34:06] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:37:21] *** Joins: jaysicks (~jaysicks@BC9CB35B.mobile.pool.telekom.hu)
[20:37:35] *** Quits: Nightah (~Nightah@user/nightah) (Ping timeout: 250 seconds)
[20:37:45] *** Joins: Nightah|A (~Nightah@user/nightah)
[20:38:01] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 250 seconds)
[20:38:09] *** Nightah|A is now known as Nightah
[20:40:10] *** Quits: DoofusCanadensis (~DoofusCan@node-1w7jr9yercvgfcuf7yjuhqtcj.ipv6.telus.net) (Quit: So as you can see from this flowchSQUIRREL!!)
[20:41:18] *** Joins: Gamara (~Gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[20:44:10] *** Joins: Klinda (~superleag@user/klinda)
[20:45:25] <Klinda> hello, why in the tutorial https://docs.docker.com/get-started/05_persisting_data/ we need to run tail -f /dev/null ?  because in this way there is a process always running? so the container is running forever? 
[20:45:30] *** Joins: eldereko (~eldereko@user/eldereko)
[20:46:16] <cim> Klinda: yes
[20:46:26] <cim> something has to be running in the foreground to keep the container alive
[20:49:16] <programmerq> Klinda: yeah, in practice, doing a long running tail isn't really a good practice, but it's sufficient for focusing on the storage part of the tutorial. Personally, I'm a fan of just using a webserver for stuff like that since it's a long running process and it can show you the persistent data via a web browser or curl.
[20:49:28] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:49:29] *** Quits: eldereko (~eldereko@user/eldereko) (Client Quit)
[20:49:46] <programmerq> but the downside is that for absolute beginner tutorials, it's better to intro one concept at a time and not mix storage and networking.
[20:50:04] <sudomann> How come in kubernetes, the ContainerSpec field: `command` is expected to be an array?
[20:50:31] <sudomann> like command: ["echo"], args: ["hi", "there"]
[20:51:28] <ikke> exec format, it's most likely not interpreted by a shell
[20:51:35] <sudomann> It's not like you could pass two commands, eh?   command: ["ls", "echo"]
[20:51:50] <ikke> ["ls", "-al"]
[20:52:10] <sudomann> But then what would be the use of args in that case?
[20:52:23] <programmerq> sudomann: that'd be like running "ls echo" in your shell. if you wanted to call two commands, you'd have to wrap it: ["/bin/sh", "-c" "ls; echo"]
[20:52:38] <programmerq> sudomann: docker has entrypoint and command, and those map into command and args
[20:52:46] <programmerq> on the kube side
[20:53:04] <programmerq> I'm not 100% sure what the historical difference in terminology came from
[20:53:13] <programmerq> but that's basically how I think of it.
[20:53:20] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[20:53:26] <sudomann> This exec vs shell format thing confused me even with docker
[20:53:47] <sudomann> So many way to get roughly the same execution but with subtleties
[20:53:55] <programmerq> yeah, it just boils down to how much control you want. Sometimes you really don't want a shell, so you want to call exec at the lowest level possible.
[20:55:56] <programmerq> https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#entrypoint - it looks like the k8s 'args:' will try to resolve variables for you even without a shell.
[20:56:37] *** Quits: ARoxdale (~ARoxdale@ip-84-203-27-228.broadband.digiweb.ie) (Ping timeout: 240 seconds)
[21:01:16] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:01:24] *** Quits: masber (~masber@2001:620:808:1200:8000::19) (Ping timeout: 250 seconds)
[21:01:47] *** Joins: Enitin (~Enitin@82.180.145.223)
[21:05:02] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[21:15:57] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[21:26:21] <ash_worksi> when I deploy redis to swarm, it always pulls an image with no tag (<none>) despite having declared :6-alpine in the stack file. That is, when I stop the service and delete the tag and run deploy again, it comes back
[21:31:33] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[21:31:50] <programmerq> when you create a swarm service, it calculates the digest of the image since tags can be ephemeral. That way you don't end up with different versions of images across your nodes. You can influence the behavior of the digest calculation. 'docker service create --no-resolve-image' there's also 'docker stack deploy --resolve-image [always|changed|never]'
[21:31:57] <programmerq> by default, it is set to always
[21:32:27] <programmerq> so depending on what you mean by "stopped the service and run deploy again", you may want to change that value.
[21:32:32] <programmerq> docker service --help
[21:33:12] <programmerq> are you doing the 'docker service scale foo=0' to stop the service?
[21:33:20] <programmerq> because the service object still exists with the resolved digest
[21:33:52] <programmerq> and then I believe a subsequent 'docker stack deploy' would just go with the existing service and only update the replica count.
[21:35:08] <ash_worksi> I see
[21:35:59] <ash_worksi> programmerq: I am using `docker service rm`
[21:36:52] <ash_worksi> programmerq: are you suggesting I use `docker service scale` instead or are you thinking I might be doing that when I should not be
[21:36:55] <ash_worksi> ?
[21:38:40] <programmerq> no I was more trying to figure out what sequence of commands might produce what result you are reporting.
[21:41:26] <ash_worksi> programmerq: does a similar thing happen regarding leaving service objects around if you remove the service but not the "stack" ?
[21:41:38] <ash_worksi> programmerq: because doing `docker stack rm` seemed to resolve the issue
[21:44:05] <ash_worksi> weird
[21:44:19] <programmerq> so when I do a 'docker stack deploy' for an image that isn't present, I get the <none> image
[21:44:24] <programmerq> so you must have had something else pull the specific tag
[21:44:45] <programmerq> so the service at create calculates the digest and then pulls by digest instead of by tag, and that's why you see the <none> in there.
[21:45:00] <programmerq> if you already have that tagged image, the tag will point to the same digest
[21:45:15] <programmerq> but removing the tag won't remove the <none> image
[21:45:33] <programmerq> that's what I'm seeing locally with a super simple test with a single service running the 'nginx:1.15' image
[21:46:09] <programmerq> removing the service won't remove the digest image
[21:46:45] <programmerq> and there is no "stack" object. 'docker stack' simply labels your swarm objects a certain way.
[21:48:41] <ash_worksi> actually
[21:48:47] <ash_worksi> I am misleading you apparently
[21:49:31] <ash_worksi> so, when I do `docker service ls` I see under "image": redis:6-alpine
[21:50:03] <ash_worksi> when I run `docker image ls` I see that `redis    <none>    398...` again
[21:50:38] <ash_worksi> when I try `docker image rm 398` it says it can't remove it because container dc9... is using it
[21:51:05] <ash_worksi> an when I do `docker ps` I see dc9... is using image redis:6-alpine
[21:53:39] <ash_worksi> so, even if I remove the service and image using `docker service rm my_redis; docker image rm 398` and then re-deploy it, that 398 image comes back
[21:55:07] *** Quits: l4yer (~l4yer@user/l4yer) (Read error: Connection reset by peer)
[21:55:36] *** Quits: pvdp403 (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au) (Remote host closed the connection)
[22:00:57] <ash_worksi> I mean, even if in building the image (which docker service doesn't seem to do anyway) once that's all done, you can run your built image and remove the base image, right?
[22:06:09] <ash_worksi> programmerq ? anyone ?
[22:07:46] *** Quits: tasse (~tasse@user/tasse) (Quit: Bye)
[22:07:56] <programmerq> that just sounds like the behavior of pulling by digest. The service object knows the original tag that was used, but it still resolves and pulls by digest and not by tag.
[22:08:15] <programmerq> docker ps would show that same image id without the tag
[22:08:29] <ash_worksi> programmerq: so, for some reason, even though it's running redis:6-alpine, it wants to keep around redis:none ?
[22:08:34] *** Joins: tasse (~tasse@user/tasse)
[22:08:56] <programmerq> that none image with that particular digest is the redis:6-alpine image's digest at the time the service was created
[22:09:06] <programmerq> so it isn't "keeping it around" -- that's actually the image that's being used.
[22:09:33] <ash_worksi> programmerq: the digests are the hashes right?
[22:09:48] <ash_worksi> because none is  398... and 6-alpine is 390
[22:09:50] <programmerq> the cryptographic checksum, yes-- not the same as the image id.
[22:09:58] <ash_worksi> oh
[22:10:00] <programmerq> docker image inspect to see the digest
[22:11:10] <ash_worksi> programmerq: they're different
[22:11:17] <programmerq> what are different?
[22:12:01] <ash_worksi> the digests
[22:12:08] <programmerq> which digests? what commands are you running?
[22:12:31] <programmerq> remember there can be multiple <none> with different digests
[22:13:37] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[22:13:59] <programmerq> swarm looks up the digest and then creates tasks that essentially do "docker run ... image@sha256:111222333..." so if that image isn't present, it'll pull it. You can use github.com/genuinetools/reg to grab a digest from a tag: "reg digest redis:6-alpine"
[22:14:08] <programmerq> that returns sha256:ca38cddd6694826520a51fc00e252acd3f5b66bfb4c208ad9548cbbe76d1a929
[22:14:29] <programmerq> so then to simulate what swarm is doing when it creates a task, it'd be "docker run --name redisfoo -d redis@sha256:ca38cddd6694826520a51fc00e252acd3f5b66bfb4c208ad9548cbbe76d1a929"
[22:14:33] <programmerq> then I get that <none> image
[22:14:58] <programmerq> I can then explicitly pull by tag, and the <none> will then show the tag assuming it's the same digest
[22:15:02] <programmerq> which is what happens in my case.
[22:15:07] <programmerq> that particular digest is 2 days old
[22:15:12] *** Quits: cart_ (~cart@185.191.86.4) (Ping timeout: 260 seconds)
[22:15:18] <programmerq> so if you originally created that service more than 2 days ago, then you'd have a different digest
[22:15:32] <ash_worksi> I see
[22:15:36] <programmerq> that's kind of the whole point of grabbing the digest-- it ensures that your service will have that specific version of the image
[22:15:49] <programmerq> so if a node dies and new one replaces it, it'll download exactly the same thing
[22:16:28] <programmerq> since tags can float around, this is important so you don't get weird situations with different images when you think they'll be the same.
[22:17:31] *** Joins: ARoxdale (~ARoxdale@ip-84-203-27-228.broadband.digiweb.ie)
[22:17:35] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[22:17:35] <ARoxdale> Hello, I'm trying to get docker to work behind a http proxy. It has been a very frustrating experience. The single biggest issues are to do with any "sudo" commands in the dockerfile. These do not seem to be able to use the httpProxy settings specified in the .docker/config.json file.
[22:17:48] *** Joins: RoyK (~roy@user/royk)
[22:17:52] <ash_worksi> programmerq: I see, I don't even see 6-alpine in images if I delete and redeploy
[22:18:03] <ash_worksi> delete that image I mean
[22:18:26] *** Quits: tasse (~tasse@user/tasse) (Quit: Bye)
[22:18:32] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[22:18:34] <programmerq> that is expected unless you explicitly do a pull by tag since swarm does a pull by digest unless you change the default behavior with one of the resolve image options I mentioned earlier.
[22:19:04] <RoyK> hm - I'm quite new to docker, but I installed it on this pi4 and installed a container, esphome, and started it and the network dropped like an egg - stopping the container, the network was up again. Any ideas?
[22:19:15] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[22:19:28] <ikke> RoyK: o/
[22:19:30] <ash_worksi> programmerq: so if I remove everything, pull first and the redeploy, `docker images` will only show the 6-alpine, right?
[22:19:36] <RoyK> ikke: \o
[22:19:44] *** Joins: tasse (~tasse@user/tasse)
[22:20:20] <ash_worksi> programmerq: I mean, it's not a huge deal, but it'd confuse me in the future so I appreciate you laying it out there for me
[22:20:36] <ash_worksi> ARoxdale: can you share a dockerfile with us?
[22:21:16] <programmerq> RoyK: you'd need to set your sudo config to allow the HTTP_PROXY and similar variables
[22:21:23] <programmerq> by default, sudo only preserves some vars
[22:21:32] <programmerq> and I think those are ones that aren't included
[22:22:08] <programmerq> RoyK: env_keep is the search term
[22:22:24] <ash_worksi> programmerq: oh wow, I just pulled the image without removing anything and it relabeled <none>
[22:22:38] <ikke> programmerq: I assume you mean ARoxdale 
[22:22:43] <ikke> instead of RoyK 
[22:22:45] <RoyK> programmerq: I just ran 'docker run esphome' and the connection to the pi dropped
[22:22:58] <programmerq> err, yes-- ARoxdale was who I meant to address for the proxy question.
[22:23:15] <programmerq> I saw the "Ro" part of the string and my brain went "good 'nuff"
[22:23:20] <programmerq> sorry for the confusion, lol
[22:23:28] *** Joins: wakeup (~wakeup@user/wakeup)
[22:23:38] <RoyK> this is a very basic install, so I just don't understand
[22:23:48] <ARoxdale> programmerq: I can't share the  docker file, sorry
[22:24:01] <programmerq> ARoxdale: I didn't ask you to share the Dockerfile. See my comment about env_keep and sudo
[22:24:03] <ash_worksi> all kinds of names getting mixed up
[22:24:12] <ash_worksi> I was the one who asked
[22:24:20] <jjakob> when combining multiple docker-compose.yml files (with docker-compose -f docker-compose.*.yml config) is it possible to unset a "image" set in a previous file
[22:24:30] <jjakob> just "image;" ?
[22:24:44] <ash_worksi> i dont think so
[22:24:57] <ash_worksi> pretty sure they just stack
[22:25:08] <RoyK> and btw, after starting docker, the host doesn't reply to ipv6
[22:25:24] <ikke> RoyK: oh
[22:25:27] <programmerq> jjakob: you can't unset values when specifying multiple files as far as I know.
[22:25:40] <ikke> RoyK: can you check if your ipv6 default route is gone?
[22:25:48] <programmerq> RoyK: can you share the output of 'ip config sh' before and after starting the container?
[22:26:01] <programmerq> use a paste service
[22:26:04] <ikke> cat /proc/sys/net/ipv6/conf/all/
[22:26:07] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:f42c:839a:a15e:7902)
[22:26:10] <programmerq> routes are also handy to share too.
[22:26:15] <jjakob> seems like you can't unset bt you can set it to a null string, probably won't work though
[22:26:17] *** Joins: tyson2 (~user@cpec4411eab32aa-cm64777d9876e0.sdns.net.rogers.com)
[22:26:19] <ikke> cat /proc/sys/net/ipv6/conf/all/accept_r
[22:26:24] <ikke> accept_ra, sorry
[22:26:49] <programmerq> I'm a fan of gist since it lets you edit after creating, and supports multiple files in one gist.
[22:27:00] <ash_worksi> ^ <3
[22:27:41] <ikke> docker enables forwarding
[22:27:54] <ikke> if accept_ra is set to 1, it will ignore router advertisements when forwarding is enabled
[22:28:03] <ikke> you need to set it to 2 to accept it irregardless
[22:28:12] *** Quits: phenom (~primus@user/phenom) (Ping timeout: 240 seconds)
[22:28:37] <ash_worksi> ikke: I think you meant regardless*
[22:28:42] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[22:28:44] <ikke> probably
[22:28:54] <programmerq> ARoxdale: https://gist.github.com/hindol/4483374 - I found this by doing a quick google search. Put that in your Dockerfile above any other RUN sudo lines
[22:29:47] <ash_worksi> ikke: in my face; it's on tfd.com:  The word was coined in the United States in the early 1900s, presumably from a blend of irrespective and regardless. Many critics have complained that it is a redundancy, the negative prefix ir- duplicating the negativity of the -less suffix.
[22:30:40] <ikke> It's like for emphasis
[22:31:23] <RoyK> programmerq: https://paste.debian.net/1236300/
[22:31:43] <ikke> RoyK: ip -6 route
[22:31:45] <ash_worksi> ikke: though we also have flammable and inflammable ... 
[22:31:59] <ikke> both meaning the same :)
[22:32:44] *** Joins: DoofusCanadensis (~DoofusCan@node-1w7jr9yercvgfcuf7yjuhqtcj.ipv6.telus.net)
[22:33:07] <programmerq> RoyK: it looks like you must have changed the docker default configuration? what does your /etc/docker/daemon.json look like? and what is your ExecStart line in the docker.service unit?
[22:33:40] <RoyK> programmerq: nothing's changed - I just installed it ;)
[22:33:49] <RoyK> directly from docker
[22:33:52] <programmerq> show anyway
[22:34:34] <ash_worksi> I think it might be against the law now to label flammable gases with the `in-` prefix due to confusion with words having a negative suffix like `inedible`
[22:34:35] <RoyK> /etc/docker/daemon.json is empty
[22:34:48] <ikke> RoyK: what does `ip -6 route` return
[22:35:13] <programmerq> the bigger problem is that the veth device that appears after the container is created has the same ip as the wlan0 interface
[22:35:20] <tabakhase> ARoxdale also https://github.com/tianon/gosu (and its readme for details on "why" and "what else?")
[22:35:35] <tabakhase> sudo is just a mess to skipp :P
[22:36:13] <ash_worksi> I wish I could update my prompt every time I change docker contexts
[22:39:40] <RoyK> sorry - seems there was something installed from packages here
[22:39:58] <ash_worksi> I feel like `docker stack deploy` should default to a root filename like `docker-compose` does
[22:41:34] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:44:50] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[22:45:13] *** Joins: phenom (~primus@user/phenom)
[22:45:37] <RoyK> no - those installed with dpkg/apt were from that installer
[22:45:53] <RoyK> and it works, until I start a container
[22:46:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:52:51] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Ping timeout: 245 seconds)
[22:55:31] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[22:55:57] *** Quits: lithium (~lithium@user/lithium) (Quit: Textual IRC Client: www.textualapp.com)
[22:57:44] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Quit: ezakimak)
[22:59:36] *** Joins: dan101 (~dan01@2a02:2f0f:311c:1500:b116:10:ea5c:8139)
[23:00:23] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[23:00:41] *** Joins: drillbyt (drillbyt@user/drillbyt)
[23:01:11] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Max SendQ exceeded)
[23:03:12] <RoyK> I can see that veth6e8fee6@if5 has showed up in 'ip a' with the same addresses as the host
[23:03:24] <RoyK> that is, wlan0
[23:03:25] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:f42c:839a:a15e:7902) (Ping timeout: 250 seconds)
[23:07:34] <ikke> that's what programmerq mentioned before
[23:08:05] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[23:13:29] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Max SendQ exceeded)
[23:14:48] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[23:16:16] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[23:19:24] *** Quits: dan101 (~dan01@2a02:2f0f:311c:1500:b116:10:ea5c:8139) (Ping timeout: 240 seconds)
[23:20:11] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[23:22:31] *** Quits: tyson2 (~user@cpec4411eab32aa-cm64777d9876e0.sdns.net.rogers.com) (Remote host closed the connection)
[23:26:53] *** Quits: DoofusCanadensis (~DoofusCan@node-1w7jr9yercvgfcuf7yjuhqtcj.ipv6.telus.net) (Quit: So as you can see from this flowchSQUIRREL!!)
[23:39:07] <Klinda> if you are using a volume, are you not modyfing the container filesystem right? 
[23:40:51] <ikke> correct
[23:41:12] <Klinda> with the volume you are using the "hd" of the host inside the container, sort of that
[23:42:17] <ikke> both would, but a volume is stored separately from the container
[23:43:35] <Klinda> is like you insert a cd with that file when you are running the container
[23:43:42] <Klinda> I mean mount isn't something like that?
[23:44:31] <ikke> everything (except bind mounts) is stored in /var/lib/docker/ with the overlay storage driver
[23:45:28] <Klinda>  "Mountpoint": "/var/lib/docker/volumes/todo-db/_data",
[23:45:29] <Klinda> yes 
[23:45:50] <Klinda> so this is a host file
[23:46:54] <Klinda> I don't understand the keyword mount
[23:47:02] <Klinda> why should we use that to let see this file?
[23:53:22] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Ping timeout: 246 seconds)
[23:57:41] <programmerq> ikke: volumes are not in the layer storage backend.
[23:59:05] <ikke> right, a sloppy use of the term storage driver
[23:59:06] <programmerq> Klinda: a volume or bind mount (in the docker terminology) is achieved with a linux bind mount. You can think of those like a symlink, but instead of a symlink, you have a directory that gets mounted to another directory. you can test out a bind mount on a linux host by doing this: mkdir red blue && date > red/now.txt && mount -o bind ./red/ ./blue/ && ls -lahi ./red/ ./blue/
[23:59:35] <programmerq> the -i on the last ls should show that they are the exact same inodes, just seen in both locations.
