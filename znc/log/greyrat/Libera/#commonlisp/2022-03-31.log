[00:04:13] *** Quits: Brucio-61 (~Brucio-59@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 260 seconds)
[00:04:15] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 260 seconds)
[00:06:35] *** Quits: poselyqualityles (~whirl@user/poselyqualityles) (Ping timeout: 260 seconds)
[00:07:55] *** Joins: kpoeck (~kpoeck@2a01:598:89fa:265f:d91f:2d34:c879:7cd7)
[00:13:15] <CodeBitCookie[m]> I was wondering, now that I know a bit about CL. What is the easiest way to contribute to Common Lisp?
[00:15:44] <Bike> what kind of contribution are you talking about?
[00:21:11] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[00:21:18] *** Joins: Brucio-61 (~Brucio-61@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[00:24:21] *** Quits: wacki (~wacki@87.123.136.47) (Quit: Leaving.)
[00:43:18] *** Quits: kpoeck (~kpoeck@2a01:598:89fa:265f:d91f:2d34:c879:7cd7) (Ping timeout: 250 seconds)
[00:43:19] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:43:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:44:37] *** Lord_of_Life_ is now known as Lord_of_Life
[00:51:32] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 250 seconds)
[00:53:26] *** Joins: kevingal (~quassel@37.228.201.223)
[00:53:28] *** Joins: kpoeck (~kpoeck@2a01:598:91b3:9338:c4fe:1305:26d8:2e24)
[00:56:18] *** Quits: karlosz (~karlosz@hub.hrl.com) (Ping timeout: 250 seconds)
[00:57:19] *** Joins: lisp123 (~lisp123@143.238.171.43)
[01:02:09] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 256 seconds)
[01:03:01] <Shinmera> one easy way is to throw money at existing developers so they can spend more (or any!) time working on lisp stuff.
[01:04:11] <Guest74> throw money?  I hear it's nicer just to stick it in their thong.
[01:04:57] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[01:06:08] <Guest74> I thought somebody was working on a site to keep track of which areas/projects could use help?
[01:06:23] <Shinmera> As always with lisp, I'm sure there's multiple of those already.
[01:06:42] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:07:40] <Guest74> though it probably works best to just look at the area you're interested in and the candidates show themselves.
[01:10:03] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[01:15:31] <Guest74> out of curiousity.  Do people run multiple repls when developing?
[01:20:26] <Shinmera> I don't, but some do.
[01:20:30] *** Joins: poselyqualityles (~whirl@user/poselyqualityles)
[01:27:18] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[01:28:56] <Guest74> I'm trying to decide whether my hacked together project manager should just change to a new desktop, or start another repl, and/or start a completely new emacs client for each project.
[01:29:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[01:29:56] *** Quits: kpoeck (~kpoeck@2a01:598:91b3:9338:c4fe:1305:26d8:2e24) (Quit: Client closed)
[01:31:05] <pjb> Guest74: with slime, you have virtually an infinite number of REPLs since each C-x C-e in a lisp buffer forks a new thread. So you can have several expressions evaluating in parallel.
[01:31:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:31:43] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 260 seconds)
[01:32:46] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[01:33:57] <pjb> Guest74: let the user decide!
[01:35:57] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[01:39:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[01:40:01] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Quit: ZNC - https://znc.in)
[01:40:43] *** Quits: eddof13 (~textual@189.178.17.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:41:16] *** Quits: nature (~nature@mail.blazebone.com) (Ping timeout: 246 seconds)
[01:42:01] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:43:23] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[01:43:50] *** Joins: eddof13 (~textual@189.178.17.205)
[01:43:54] <Guest74> what do you do pjb:
[01:46:32] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[01:47:51] *** Quits: yewscion (~yewscion@72-21-196-67.amazon.com) (Quit: Connection closed)
[01:51:27] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[02:00:45] *** Joins: karlosz (~karlosz@hub.hrl.com)
[02:07:12] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:11:11] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 260 seconds)
[02:12:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:14:18] *** Quits: karlosz (~karlosz@hub.hrl.com) (Ping timeout: 250 seconds)
[02:15:07] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:16:01] <pjb> Guest74: surviving so far?
[02:31:12] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 260 seconds)
[02:41:36] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[02:45:08] *** Joins: igemnace (~ian@user/igemnace)
[02:45:39] *** Joins: lisp123 (~lisp123@143.238.171.43)
[02:50:23] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 260 seconds)
[02:52:31] *** Joins: pillton (~user@110-175-40-138.static.tpgi.com.au)
[02:52:36] *** Joins: karlosz (~karlosz@hub.hrl.com)
[03:02:22] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[03:02:58] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[03:08:07] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[03:30:07] *** Quits: poselyqualityles (~whirl@user/poselyqualityles) (Ping timeout: 246 seconds)
[03:36:32] *** Joins: dre (~dre@2001:8003:c932:c301:ddea:d36a:75bb:2e08)
[03:39:14] *** Quits: karlosz (~karlosz@hub.hrl.com) (Ping timeout: 250 seconds)
[03:41:59] *** Quits: eddof13 (~textual@189.178.17.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:22:42] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[04:25:25] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[04:27:10] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[04:28:39] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Client Quit)
[04:33:53] *** Joins: lisp123 (~lisp123@143.238.171.43)
[04:36:53] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 250 seconds)
[04:38:13] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 240 seconds)
[04:47:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[04:48:23] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[04:49:52] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[04:51:06] *** Quits: zoglesby (f0f8ca1525@user/zoglesby) (Remote host closed the connection)
[05:01:25] *** Joins: usermain (~usermain@fixed-187-190-158-31.totalplay.net)
[05:02:42] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[05:27:55] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[05:45:09] *** Joins: zacque (~zacque@1.32.90.32)
[05:46:37] *** Joins: Madsy (~madsy@223.239.164.82.customer.cdi.no)
[05:58:10] *** Joins: karlosz (~karlosz@hub.hrl.com)
[06:01:15] *** Joins: livoreno (~livoreno@user/notzmv)
[06:05:18] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[06:07:25] *** Quits: phantomics (~phantomic@71-218-229-123.hlrn.qwest.net) (Ping timeout: 240 seconds)
[06:14:19] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 260 seconds)
[06:17:24] *** Quits: karlosz (~karlosz@hub.hrl.com) (Ping timeout: 250 seconds)
[06:21:52] *** Joins: lisp123 (~lisp123@143.238.171.43)
[06:22:20] *** Joins: Inline (~Inline@p200300cd470e1300a84f1effc05ae732.dip0.t-ipconnect.de)
[06:25:03] *** Quits: Inline__ (~Inline@p200300cd470a540051f7a3750a30b01e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:26:51] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 256 seconds)
[06:33:36] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[06:33:43] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Client Quit)
[06:36:21] *** Joins: poselyqualityles (~whirl@user/poselyqualityles)
[06:42:41] *** Quits: usermain (~usermain@fixed-187-190-158-31.totalplay.net) (Quit: Quit)
[06:53:05] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[06:56:26] *** Joins: karlosz (~karlosz@hub.hrl.com)
[06:57:40] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[07:09:52] *** Joins: Guest52 (~Guest52@45.72.131.89)
[07:11:24] <Guest52> Hey there, is there a way to get the line number of a source file during macro expansion time?
[07:12:03] <Guest52> I'd like to write a dead simple macro that spits out the line number it's on
[07:13:00] <masinter> macro expansion happens at a different time than read/load
[07:13:22] <Guest52> ah, then I guess I mean read time
[07:18:18] <masinter> by the time you get to a macro expansion there aren't any lines
[07:19:21] <zacque> How can I use cl-ppcre to match newline character with "." operator?
[07:19:44] <zacque> Something like "/s" modifer? But I couldn't get it to work
[07:21:26] <Guest52> masinter: yeah, so read time would be the time to store a line number? I'm lost as to how to go about doing so
[07:22:27] <masinter> why do you need a line number anyway? who counts lines?
[07:30:15] <beach> Good morning everyone!
[07:33:21] *** Quits: kevingal (~quassel@37.228.201.223) (Remote host closed the connection)
[07:35:22] <Guest52> mastinter: it's not a REAL reason. A friend mentioned they wanted a language feature where they can write something like `@@@' and have it print the line number. I know it's dumb for lisp anyway because of slime & whatnot.
[07:36:04] <Guest52> I just wanted to show them how lisp lets you alter the language to do such things (but alas my knowledge can't prove it)
[07:36:31] <Guest52> s/mastinter/masinter/
[07:44:15] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[07:45:36] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[07:49:56] <masinter> i don't know anything about slime
[07:50:19] *** Joins: semz_ (~semz@user/semz)
[07:50:29] *** Quits: poselyqualityles (~whirl@user/poselyqualityles) (Ping timeout: 256 seconds)
[07:52:45] *** Quits: semz (~semz@user/semz) (Ping timeout: 256 seconds)
[07:53:58] <pillton> Guest52: SBCL has the macro (SB-EXT:COMPILE-FILE-LINE).
[07:58:50] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[08:00:14] *** Joins: Bike (~Bike@71.69.170.70)
[08:04:46] <Guest52> pillton: ah, that's neat! thanks
[08:08:16] <pillton> Guest52: I don't think it matters whether it is a macro or a reader macro as both still need to interact with the environment which is processing the file.
[08:10:14] *** Joins: lisp123 (~lisp123@143.238.171.43)
[08:14:04] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:14:43] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 260 seconds)
[08:16:39] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[08:24:56] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[08:28:28] *** Joins: Lord_Nightmare (~Lord_Nigh@user/lord-nightmare/x-3657113)
[08:30:45] *** Joins: yauhsien_ (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[08:30:45] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[08:34:55] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:35:38] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[08:39:19] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Client Quit)
[08:41:43] *** Quits: yauhsien_ (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:42:20] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[08:47:13] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[09:08:34] *** Quits: karlosz (~karlosz@hub.hrl.com) (Ping timeout: 250 seconds)
[09:09:13] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[09:23:54] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[09:26:38] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:30:43] *** Quits: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[09:46:46] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[09:51:47] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[09:58:33] *** Joins: lisp123 (~lisp123@143.238.171.43)
[09:59:00] *** Joins: occ (~occ@user/occ)
[10:02:49] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 246 seconds)
[10:04:58] *** Quits: attila_lendvai (~alendvai@2a02:ab88:7509:f780:ed82:a496:f55:e07b) (Ping timeout: 260 seconds)
[10:13:15] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[10:14:38] *** Quits: ssafar (~simon@c-73-158-251-170.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[10:15:48] *** Joins: ssafar (~simon@c-73-158-251-170.hsd1.ca.comcast.net)
[10:23:16] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[10:28:22] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[10:34:19] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 246 seconds)
[10:35:00] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:41:13] *** Quits: Guest52 (~Guest52@45.72.131.89) (Quit: Client closed)
[10:41:35] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[10:47:02] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[10:49:36] *** Joins: igemnace (~ian@user/igemnace)
[10:50:36] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:50:53] *** Joins: pjb (~pjb@user/pjb)
[10:51:13] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[10:52:04] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:52:10] *** Quits: frgo (~frgo@p548a3b78.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[10:56:12] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[11:01:53] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu)
[11:02:18] *** Joins: treflip (~user@user/treflip)
[11:06:21] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[11:09:18] *** Quits: Josh_2 (~user@197.184.168.137) (Remote host closed the connection)
[11:12:35] *** Joins: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de)
[11:14:43] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[11:46:50] *** Joins: lisp123 (~lisp123@143.238.171.43)
[11:49:02] *** Joins: shka (~herr@109.231.3.55)
[11:51:19] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 246 seconds)
[11:58:01] *** Joins: Josh_2 (~user@197.184.168.137)
[11:58:26] <Josh_2> CLHS entry a day on email list
[11:58:28] <Josh_2> that would be cool
[12:00:21] <flip214> Josh_2: better clus... reading one, extending one
[12:00:52] <beach> Josh_2: I don't understand what you are suggesting.
[12:00:57] <beach> Did I miss something?
[12:01:06] <Josh_2> No you didn't miss anything
[12:01:19] <Josh_2> I think it would be cool to send a link to a random CLHS article each day via email
[12:03:14] <rotateq> ehm
[12:07:46] <pjb> Josh_2: not a link, but the contents directly in the email.
[12:07:55] <Josh_2> If you are allowed to do that, then sure
[12:08:06] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[12:08:51] <jackdaniel> or even not the directly but by an intermediate
[12:10:28] *** Joins: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl)
[12:12:19] <pjb> Josh_2: you are allowed to do it, if you do it locally :-)
[12:12:52] <pjb> Josh_2: so now, we have the specs: write a crontab CL program that selects a random clhs page, format it, and send it to yourself by email.
[12:13:11] <jackdaniel> or even not by email but by snailmail, and not the spec but a random cookie
[12:14:02] <pjb> With a little robot, yes, you can send random cookies.  Subscribe to monthly cookie boxes from Japan, and let the robot hand unpack them and forward them one per day.
[12:14:12] <pjb> https://tokyotreat.com
[12:14:35] *** Quits: trocado (~uiop9@bl18-243-251.dsl.telepac.pt) (Ping timeout: 260 seconds)
[12:17:51] *** Quits: occ (~occ@user/occ) (Remote host closed the connection)
[12:21:27] *** Joins: occ (~occ@user/occ)
[12:22:59] *** Joins: lisp123 (~lisp123@143.238.171.43)
[12:23:43] <Josh_2> What happened to cl-http?
[12:26:02] <Josh_2> oh its proprietary software, rip guess thats what happened to it
[12:26:19] *** Joins: Oddity (~Oddity@user/oddity)
[12:31:24] <Josh_2> Is there an example of &whole anywhere?
[12:32:29] <beach> Compiler macros and ordinary macros might use &whole.
[12:33:17] <beach> When a compiler macro declines, it must return the original form, and the easiest way to do that is to use &whole.
[12:34:35] <Josh_2> Scrolling through this is nice http://www.lispworks.com/documentation/HyperSpec/Front/X_AllSym.htm
[12:38:57] *** Andrew is now known as fadsfdsafdsa
[12:39:34] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[12:39:41] *** fadsfdsafdsa is now known as Andrew
[12:42:34] <pjb> Josh_2: grep -nHRi '&whole' ~/quicklisp
[12:43:03] *** Quits: dre (~dre@2001:8003:c932:c301:ddea:d36a:75bb:2e08) (Ping timeout: 260 seconds)
[12:43:08] <pjb> more often used with compiler macros than with macros, it seems.
[12:44:31] *** Quits: ssafar (~simon@c-73-158-251-170.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[12:45:30] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[12:46:24] *** Joins: ssafar (~simon@c-73-158-251-170.hsd1.ca.comcast.net)
[12:46:39] <rotateq> or having a robot that brings the butter for baking the cookies
[12:51:36] *** Quits: shka (~herr@109.231.3.55) (Quit: Konversation terminated!)
[12:51:52] *** Joins: shka (~herr@109.231.3.55)
[12:54:15] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:05:34] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[13:11:28] <hayley> Josh_2: every compiler macro in https://github.com/telekons/one-more-re-nightmare/blob/master/Code/Interface/interface.lisp uses &whole
[13:11:39] * hayley is celebrating 200th commit today
[13:11:56] <beach> Congratulations!
[13:13:31] *** Joins: trocado (~uiop9@183.49.54.77.rev.vodafone.pt)
[13:15:20] <hayley> Thanks!
[13:15:26] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[13:17:05] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[13:19:48] <rotateq> Yesterday I thought again on something, about how to build something on top to maybe define compiler macros more modularly if needed.
[13:20:21] <rotateq> So that it collects part definitions and puts them together in the final macro.
[13:22:01] <hayley> What sort of "parts" would you use for a compiler macro?
[13:22:45] <rotateq> For mathematical definitions such as identities.
[13:23:18] <rotateq> Just playing around in my head from what I had last year.
[13:23:22] <hayley> Right. So you propose generating compiler macros from rewrite rules?
[13:24:05] <rotateq> maybe yes
[13:24:38] <rotateq> many possibilities of course so don't take it too seriously :)
[13:26:01] <hayley> Well, most of the efficiency of my regular expression compiler comes from clever application of rewrite rules.
[13:26:36] <rotateq> macros are anyway nice as we don't have to define everything verbose, like when it's commutative if a thing for fulfilling the identity even is something simple as '(1+ x) or '(+ 1 x) or '(+ x 1)
[13:26:52] <rotateq> hayley: nice, can learn much from that
[13:28:26] *** Quits: X-Scale (~ARM@231.197.28.37.rev.vodafone.pt) (Ping timeout: 272 seconds)
[13:41:55] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 246 seconds)
[13:48:33] *** Joins: nature (~nature@mail.blazebone.com)
[13:51:40] *** Quits: occ (~occ@user/occ) (Ping timeout: 260 seconds)
[13:51:42] *** Joins: treflip (~user@user/treflip)
[13:58:23] *** Quits: trocado (~uiop9@183.49.54.77.rev.vodafone.pt) (Ping timeout: 260 seconds)
[14:00:27] <dbotton> is there a way to force a new recompile of packages in quicklisp?
[14:03:35] <dbotton> found cache, nevermind
[14:05:12] <Nilby> dbotton: If it's already downloaded there's :force t and :force :all to asdf:load-system
[14:05:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:06:16] <dbotton> thanks
[14:07:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:25:37] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 240 seconds)
[14:27:38] *** Joins: amk (~amk@109.255.169.126)
[14:28:54] *** Joins: amk_ (~amk@109.255.169.126)
[14:32:29] *** Quits: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[14:33:37] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:34:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:35:40] *** Joins: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl)
[14:37:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:44:15] *** Quits: OlCe`` (~user@lfbn-nic-1-449-48.w90-116.abo.wanadoo.fr) (Remote host closed the connection)
[14:47:47] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[14:50:53] *** Quits: ssafar (~simon@c-73-158-251-170.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[14:51:21] *** Joins: occ (~occ@user/occ)
[14:57:56] *** Joins: OlCe (~user@lfbn-nic-1-449-48.w90-116.abo.wanadoo.fr)
[15:03:16] *** Joins: ssafar (~simon@c-73-158-251-170.hsd1.ca.comcast.net)
[15:06:30] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 250 seconds)
[15:06:57] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:07:31] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[15:09:43] *** Quits: lisp123 (~lisp123@143.238.171.43) (Quit: Leaving...)
[15:12:51] <jackdaniel> http://turtleware.eu/static/paste/5a166347-foo.svg  -- image being an ink of the indexed pattern which in turn is made a rectangular tile
[15:12:55] <jackdaniel> basically a result of this: http://turtleware.eu/static/paste/aa7a18a4-foo.lisp
[15:16:06] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 272 seconds)
[15:19:11] *** Joins: s-liao (~s-liao@101.86.164.158)
[15:23:17] *** Quits: livoreno (~livoreno@user/notzmv) (Remote host closed the connection)
[15:30:17] *** Joins: livoreno (~livoreno@user/notzmv)
[15:35:13] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:35:58] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 250 seconds)
[15:37:41] *** Joins: wacki (~wacki@87.123.129.87)
[15:45:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:51:08] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[15:51:55] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[16:00:02] *** Joins: razetime (~quassel@117.193.2.164)
[16:00:17] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu) (Ping timeout: 260 seconds)
[16:06:36] *** Quits: pillton (~user@110-175-40-138.static.tpgi.com.au) (Quit: ERC (IRC client for Emacs 27.2))
[16:12:04] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu)
[16:14:23] <Nilby> imagine s/SYCL/(SICL|SBCL)/ s/C++/Lisp/ s/Template/CLOS/ in this picture: https://www.khronos.org/assets/uploads/apis/2020-05-sycl-landing-page-01_3.jpg
[16:15:26] *** Joins: kevingal (~quassel@149.157.108.66)
[16:15:30] <hayley> Yes, if you replace all the bad things in a bad diagram with good things, then you get a good diagram.
[16:16:42] <Nilby> i think it would mostly just require a SPIR-V backend to some CL
[16:17:11] <hayley> I think drmeister mentioned a Cleavir to OpenCL(?) pass in a talk, still, but he said it didn't get very far. So far I'm beginning to prefer APL for array munging though; and having a pure language probably helps for optimisations around parallelism and loop fusion.
[16:19:28] <random-nick> isn't it more appropriate to generate kernel code from some DSL than to compile CL to kernel code?
[16:19:56] <hayley> Auto-vectorisation for C is just plain scary, honestly. And I don't think CL fares better there.
[16:19:58] <random-nick> since existing CL code probably isn't appropriate for running on the GPU
[16:20:15] <Nilby> If the DSL can just be like this: (if (> (mod y 100) 50) (if (> (mod x 100) 50) (px .5 0 0) (px .5 .5 .5)) (a x y\
[16:20:21] <Nilby> ))
[16:20:26] <Nilby> then sure
[16:21:01] <hayley> I don't see why SICL or SBCL compiler hackers would be useful for another DSL.
[16:21:27] *** Quits: kevingal (~quassel@149.157.108.66) (Ping timeout: 260 seconds)
[16:21:29] *** Joins: kevingal_ (~quassel@2001:770:c0:401:796b:1764:27f3:4411)
[16:22:19] <hayley> There are also two ports of Petalisp on GPGPU, which is a sort of array munging DSL, though mine is awful and isn't faster than CPU still.
[16:23:40] <random-nick> hmm, I wonder, would it be possible to hook up april and petalisp together?
[16:23:41] <Nilby> most of CL can run on the GPU just fine, just leave out File(names)/System Contruction/Environment
[16:24:19] *** semz_ is now known as semz
[16:24:29] <hayley> Anything involving branching and pointers will be slow enough that you shouldn't bother.
[16:24:43] <random-nick> don't GPUs really don't like many staples of CPU programming such as branching and function calls?
[16:24:52] <hayley> Garbage collection on a GPU would be interesting in a terrifying way, too.
[16:25:17] <hayley> random-nick: Branching more than function calls. I think it's called "wavefront divergence".
[16:25:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:25:52] <Nilby> ok, but it's allready done for C++ code which has all that
[16:27:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:28:32] <random-nick> from what I understand it's really a small subset of c++, at least in the case of opencl
[16:34:44] <Nilby> unfortunately I feel like the % of silicon CL can run on will keep steadily decreasing unless someone does CL targeting the GPU/FPGA/DSP/Tensor etc. now I can use less the .5 the compute power in any typical system
[16:35:52] <hayley> GPUs are quite bad for general purpose computing though. It's only a tiny bit of compute if you measure by peak FLOPS, or something like that.
[16:35:53] *** Joins: s-liao (~s-liao@101.86.164.158)
[16:37:03] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[16:37:33] <hayley> I write GPGPU code occasionally, but that is only when the only appropriate algorithm is a "brute force" algorithm, or is purely numeric. Note that very little of what I do is purely numeric.
[16:38:12] <hayley> And, to my knowledge, the only exposed interface for tensor hardware is purely dataflow. So C++ is equally hopeless for that.
[16:38:52] *** Joins: aeth (~aeth@user/aeth)
[16:42:03] *** Joins: frgo (~frgo@p548a3b78.dip0.t-ipconnect.de)
[16:50:57] *** Joins: phantomics (~phantomic@71-218-248-44.hlrn.qwest.net)
[16:57:32] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:57:38] *** Joins: kevingal (~quassel@hamilton-nat.nuim.ie)
[16:58:08] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[16:59:08] *** Quits: kevingal_ (~quassel@2001:770:c0:401:796b:1764:27f3:4411) (Ping timeout: 252 seconds)
[16:59:10] * Nilby sighs in *Lisp
[16:59:50] *** Quits: kevingal (~quassel@hamilton-nat.nuim.ie) (Remote host closed the connection)
[17:02:49] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[17:05:53] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[17:12:11] *** Quits: wacki (~wacki@87.123.129.87) (Quit: Leaving.)
[17:15:17] *** Joins: wacki (~wacki@87.123.129.87)
[17:23:31] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 260 seconds)
[17:29:06] *** Joins: Bike (~Glossina@71.69.170.70)
[17:32:27] *** Joins: prxq (~quassel@dynamic-077-179-153-065.77.179.pool.telefonica.de)
[17:33:03] *** Quits: zacque (~zacque@1.32.90.32) (Quit: Goodbye :D)
[17:48:06] *** Quits: luis (~luis@lisp/luis) (Ping timeout: 252 seconds)
[17:49:09] *** Joins: cage (~cage@dynamic-adsl-94-34-56-60.clienti.tiscali.it)
[17:54:02] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[17:59:09] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:59:45] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[18:05:12] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[18:22:10] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[18:32:12] *** Quits: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de) (Remote host closed the connection)
[18:42:40] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[18:48:14] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[18:52:43] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[18:59:20] *** Joins: lispy (~lispy@82.212.115.165)
[19:00:13] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[19:20:29] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[19:22:32] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[19:40:48] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:41:47] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[19:42:17] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:42:46] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:45:36] *** Joins: rawley (~rawley@142.99.241.242)
[19:46:37] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[19:47:48] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[19:51:38] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[19:53:32] <Josh_2> Is there a good tutorial on writing a DSL anywhere?
[19:57:16] <Josh_2> With reader macros
[20:03:32] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[20:08:03] <Guest74> depends on what you mean by dsl.  There's that morse code video.
[20:09:22] <beach> I suspect Josh_2 doesn't want a DSL with S-expression surface syntax.  But then, all the advantages of that syntax are lost.
[20:09:39] <Josh_2> ^
[20:10:03] <beach> As in "but my users can't be taught to use that syntax!".
[20:10:24] <Josh_2> Nay
[20:14:42] <beach> "Nay" as in "they CAN be taught to use that syntax"?
[20:15:07] <beach> If so, all you need is ordinary macros and On Lisp is a good source for how to do that.
[20:16:07] *** Joins: Oddity (~Oddity@user/oddity)
[20:18:59] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[20:20:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:22:07] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[20:24:06] <Guest74> I figure any text on parsing would be helpful, as that's the missing step between reader macro dsl and normal macros. Then just design your dsl to be easily parsed.
[20:25:49] <beach> The easiest syntax to parse is S-expression syntax, and you can use READ to parse it.
[20:26:17] <Guest74> but some people just have to do it the way they need to do it.
[20:26:32] <Guest74> ...to usually learn why they shouldn't have.
[20:27:25] <beach> The creators of Multics Emacs wrote an essay on how it was no big deal to teach admin staff to write Emacs customizations as S-expressions.  I think we tend to underestimate what people are capable of.
[20:27:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:27:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[20:28:56] <yitzi> I've taught Intro Physics students (non-calc based) LaTeX before. Not easy, but it can be done.
[20:29:42] <splittist> Millions of people build Excel spreadsheets that basically work, with no training.
[20:33:27] <Guest74> though I wonder when the parentheses are necessary.
[20:33:48] <beach> Er, READ kind of depends on them.
[20:33:54] <Guest74> do you give people a command interface? or just a repl.
[20:34:06] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:35:01] <Nilby> you don't need parens to do a read based repl or dsl
[20:37:05] <jackdaniel> > "Thou shalt do something"
[20:37:06] <Guest74> what's clim's reasoning behind the no parens?
[20:37:08] <jackdaniel> minion> YES
[20:37:57] <jackdaniel> I'm sure that you'd find some parens in clim
[20:38:04] *** Joins: heisig (~heisig@p579c8d35.dip0.t-ipconnect.de)
[20:38:06] <jackdaniel> I saw two at the same time the other day
[20:39:39] *** Joins: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de)
[20:39:42] <Guest74> so..., do you know?
[20:39:59] <jackdaniel> do I know what?
[20:40:47] <jackdaniel> why clim provides *also* parsers that do not rely on READ?
[20:41:09] <jackdaniel> well, probably because it is a convenient feature to define interfaces targetting people who are not sex-pression nerds
[20:41:40] <Nilby> Guest74: Typing efficiency. CLIM command input is supposed to support typing the fewest unambiguous letters, space, then arguments, etc..
[20:41:48] <Guest74> who would honestly think I meant clim has no parens whatsoever?
[20:42:07] <jackdaniel> nobody, but it was funny how silly it was phrased
[20:42:48] <yitzi> I thought it was funny.
[20:44:40] <Guest74> nilby: so are they restricted in what they accept/can accept?
[20:44:47] <Nilby> my main repl is parenless for at least 20 years
[20:45:23] <Nilby> Guest74: Usually yes, but of course you can have them take any sexp
[20:46:29] <Nilby> Guest74: the normal listener isn't restricted, but other command inputs are or can be
[20:47:57] <Nilby> like the difference between M-x and M-Esc in emacs
[20:48:06] <jasom> Josh_2: There are many ways to do DSLs with reader macros; an easy way to do an arbitrary (i.e. non-s-expression) DSL is to use reader macros to implement tokenization and then a regular macro to implement parsing and code-gen.
[20:48:38] <Guest74> I've often wondered if I should drop the parens in my turtle-graphics so you can just copy any logo stuff.
[20:49:08] <Guest74> then I think it's a good way to teach sexps.
[20:51:15] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:03:58] *** Joins: tane (~tane@user/tane)
[21:08:45] *** Joins: karlosz (~karlosz@hub.hrl.com)
[21:12:58] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[21:13:25] *** Quits: razetime (~quassel@117.193.2.164) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:17:55] *** Joins: karlosz_ (~karlosz@47.151.152.149)
[21:18:23] *** Quits: karlosz_ (~karlosz@47.151.152.149) (Remote host closed the connection)
[21:21:29] *** Quits: phantomics (~phantomic@71-218-248-44.hlrn.qwest.net) (Read error: Connection reset by peer)
[21:25:41] *** Joins: eddof13_ (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[21:35:13] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:41:46] *** Quits: rawley (~rawley@142.99.241.242) (Ping timeout: 246 seconds)
[21:43:48] *** Quits: eddof13_ (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:46:00] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[21:58:16] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 245 seconds)
[21:58:51] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[22:02:31] *** Joins: phantomics (~phantomic@71-33-133-243.hlrn.qwest.net)
[22:02:47] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[22:04:09] *** Joins: rawley (~rawley@142.99.241.242)
[22:08:52] <jasom> Is there an easy way to convert old-style enable-foo-readtable functions to named-readtable, or do I just have to go character by character?
[22:09:51] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[22:14:01] <Guest74> When bugs are pretty. https://imgur.com/a/oBiD9nA
[22:15:54] <Guest74> I don't see how any of the refactoring I've been doing can affect line drawing, but apparently it does.  That or another case of losing code between computer transfers after one dies.
[22:26:17] *** Joins: tyson2 (~user@cpec4411eab32aa-cm64777d9876e0.sdns.net.rogers.com)
[22:28:55] <jackdaniel> http://turtleware.eu/static/paste/e2f3299e-foo.svg <- on the left composing "in" the mask, on the right composing "out" of the mask
[22:29:56] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 272 seconds)
[22:30:01] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[22:30:09] *** Quits: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:30:12] <jackdaniel> (and code http://turtleware.eu/static/paste/962f6e76-foo.lisp)
[22:30:55] *** Joins: ns12 (~ns12@user/ns12)
[22:35:58] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[22:48:39] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[22:51:19] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[22:53:36] *** Quits: heisig (~heisig@p579c8d35.dip0.t-ipconnect.de) (Quit: Leaving)
[23:12:22] *** Quits: rawley (~rawley@142.99.241.242) (Ping timeout: 272 seconds)
[23:21:48] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 250 seconds)
[23:22:31] *** Quits: tyson2 (~user@cpec4411eab32aa-cm64777d9876e0.sdns.net.rogers.com) (Remote host closed the connection)
[23:24:46] *** Joins: eddof13 (~textual@2806:102e:12:64:fc28:4274:975a:af3c)
[23:47:04] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[23:53:19] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[23:55:40] *** Joins: eddof13_ (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[23:56:53] *** Joins: poselyqualityles (~whirl@user/poselyqualityles)
[23:59:01] *** Quits: cage (~cage@dynamic-adsl-94-34-56-60.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
