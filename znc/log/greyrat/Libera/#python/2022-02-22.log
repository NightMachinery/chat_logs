[00:04:11] *** Quits: Talla (~Intan@120.188.78.85) (Ping timeout: 252 seconds)
[00:04:25] *** Quits: junebug (~junebug@2600:1700:3db0:2540:240a:eb7a:6461:3400) (Remote host closed the connection)
[00:04:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:04:50] *** Joins: junebug (~junebug@2600:1700:3db0:2540:8a3d:f502:2d89:6a3a)
[00:05:06] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[00:05:27] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:06:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com)
[00:08:24] *** Quits: yac (~user@user/yac) (Ping timeout: 256 seconds)
[00:09:17] *** Joins: Vonter (~Vonter@user/vonter)
[00:09:20] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:09:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[00:10:06] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[00:10:19] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[00:10:48] *** Quits: faris (~faris@lfbn-idf1-1-963-34.w86-238.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[00:10:54] *** Joins: rajkosto (~rajkosto@178.220.66.235)
[00:12:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:14:21] *** Quits: mattypants (~quassel@136.62.184.132) (Ping timeout: 256 seconds)
[00:17:32] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[00:17:58] *** Joins: Barones (~Barones@user/Barones)
[00:19:17] *** Joins: hiroshi_ (~freedom@ge-19-99-251.service.infuturo.it)
[00:19:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[00:19:28] *** Quits: Croves (~Croves@192.34.198.23) (Quit: Client closed)
[00:22:07] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:3d7f:bf10:7923:9c50)
[00:23:32] *** Joins: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net)
[00:23:54] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:8a6:a8d3:62c4:7875) (Ping timeout: 260 seconds)
[00:25:54] *** Quits: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1) (Remote host closed the connection)
[00:26:03] *** Quits: pipapipapibo (~w@c-67-160-123-241.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:26:07] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:26:18] *** Joins: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1)
[00:30:35] *** Quits: aslicedbanjo (~aslicedba@host31-52-125-126.range31-52.btcentralplus.com) (Quit: Leaving.)
[00:30:55] *** Joins: fluiD (~fluiD@161.97.225.170)
[00:31:30] *** Quits: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1) (Remote host closed the connection)
[00:31:37] <fluiD> good morning! I'm hoping someone in here will help me with some fundamentals that I seem to have missed. I seem to get a lot done by googling examples but am not very good at figuring things out on my own. I'm hoping someone can help me learn to help myself.
[00:31:56] *** Joins: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1)
[00:32:05] *** Joins: Arw| (~Arwalk@lfbn-dij-1-1509-150.w109-221.abo.wanadoo.fr)
[00:32:41] <ztrawhcse> fluiD: most probably (there are lots of helpful people here) but first you should ask your question :)
[00:32:50] <fluiD> For instance, I have typed "from astropy.io import fits". I know that "fits" is now equivalent to astropy.io.fits. I want to load a file. I can type "help(fits)" and it gives me pages and pages of stuff but weeding through it to figure out what I can do is more difficult.
[00:33:23] *** Quits: Arw- (~Arwalk@lfbn-dij-1-1509-26.w109-221.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[00:33:26] <fluiD> The fastest way is to google the answer, but I want to learn how to figure it out myself.
[00:33:34] <ztrawhcse> the help() system shows you the builtin documentation which is going to generally be a subset or equal of the project's HTML website docs
[00:33:44] <bjs> fluiD: I'd google "astropy io fits" to get the docs (if I didn't already know where they were) and use that
[00:34:08] <bjs> fluiD: help() can be nice in a pinch, but properly written human-readable documentation is always preferable
[00:34:17] <fluiD> what about in instances where I don't have an internet connector for google to hold my hand?
[00:34:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:34:42] <bjs> fluiD: well the library you are using on your not-internet-connected machine must've come from somewhere, and you should obtain a copy of the docs when you did so
[00:34:44] <ztrawhcse> the HTML docs are generally a lot better, unless a lot of effort went into making the help() version *very good* (builtin docs mostly equals the inline comments)
[00:35:25] *** Quits: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48) (Read error: Connection reset by peer)
[00:35:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:8a3d:f502:2d89:6a3a) (Quit: Leaving)
[00:35:56] <bjs> fluiD: sadly it's not required to distribute the docs at the same time,  but I cannot understate the importance of having a copy of the libraries human-readable documentation available to use.  The built-in introspection utilities (like help) are good,  and you can always read the code but they'll never be as good as the purposefully written documentation
[00:36:03] *** Joins: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48)
[00:36:17] <fluiD> Alrighty
[00:36:20] *** Joins: crashrep (~crashrep@user/crashrep)
[00:36:28] <ztrawhcse> e.g. the python standard library docs are generally pretty good, because they are worth putting in the effort -- they have, ehm, very broad usage
[00:36:29] *** Quits: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48) (Read error: Connection reset by peer)
[00:36:47] <fluiD> is there anything besides help() that I can use? I'm sure there's a fits.openfileforme() method somewhere. Any easy way to list just methods?
[00:37:06] *** Joins: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48)
[00:37:15] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[00:37:16] <bjs> fluiD: print(dir(obj)) and help(obj) and the `inspect` library can all be useful
[00:37:22] <bjs> but they're pretty brutal to use
[00:37:35] <Repiphany> I like using IPython to play around/explore more than the default repl
[00:37:56] <Repiphany> ? and ?? better shortcuts than help()
[00:38:12] <fluiD> bjs, ah, print(dir(fits)) is what I was looking for. Thanks!
[00:38:15] <Repiphany> and tab autocompletion to see all of the methods
[00:38:42] <ztrawhcse> the dir(fits) method will list all attributes of fits, which is a succinct way to see all method names, though not the context for those methods of course :)
[00:39:22] <fluiD> ztrawhcse, yes. However, in a pinch, it allowed me to quickly find that fits.open() is what I'm looking for.
[00:39:25] <ztrawhcse> (also things that aren't methods)
[00:39:54] <fluiD> I'm trying to get better at figuring things out for myself rather than depending on others to have done it for me.
[00:40:09] <ztrawhcse> yeah, assuming the names alone are usefully descriptive, which ideally they are, often you can get by on that alone
[00:40:32] <Repiphany> Docs aren't "depending on others to have done it for you"
[00:40:52] <fluiD> Repiphany, sure it is. Somebody had to write those docs for me.
[00:40:59] <bjs> fluiD: someone wrote the library
[00:41:07] <bjs> so this seems like a weird line to draw,  but sure.
[00:41:29] <ztrawhcse> an argument could be made that "learn how to deduce information without the docs" is still useful information for when you desperately need to code something new while the internet is having an outage.
[00:41:29] <Repiphany> Completely self-explanatory code is nigh-impossible for anything remotely complex
[00:41:40] <bjs> Developers certainly don't write docs because they enjoy doing it so much,  although the world would be better if they did :D
[00:41:54] <fluiD> I had to spend three weeks on a remote island with no internet access. In instances like that, getting hung up on something as simple as not remembering the method name can be excruciating
[00:41:56] <ztrawhcse> also some projects are very badly documented, regrettably :p
[00:42:28] <bjs> fluiD: well those cases are very atypical,  and in those cases actually reading the source code is advisable
[00:43:00] <hodapp> has Dask any way to express the notion of workers having state that is effectively pinned to that worker, e.g. a large ML model that needs to be loaded/initialized?
[00:43:48] <fluiD> ok, thanks everyone for your input! I have learned new things today and hopefully I will retain them.
[00:46:52] <dademurphy> Anyone have a recommendation on a good Python beginner level course/book? Was thinking of taking a course at a local community college as well.
[00:47:07] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:47:31] *** Quits: magla (~gelignite@d5361f17.access.ecotel.net) (Quit: Stay safe!)
[00:47:37] <ChrisWarrick> dademurphy: can you program in another language?
[00:47:56] <fluiD> dademurphy, can I message you in private?
[00:47:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:49:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:50:02] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[00:50:28] <fluiD> well nevermind. I thought I had some references to share but now I can't find them.
[00:51:21] <dademurphy> ChrisWarrick: Sorry, should have mentioned-- limited to no programming experience.
[00:51:33] <dademurphy> No worries, fluiD-- thanks for checking.
[00:51:56] <bjs> dademurphy: the /TOPIC has a link to a nice book for beginner programmers, called ThinkPython (2nd edition), there's a free copy on the authors webpage at https://j.mp/23X7emF
[00:52:09] <ChrisWarrick> yeah, you might want think python
[00:52:46] <dademurphy> Thanks, bjs
[00:52:57] <dademurphy> You mean rethink, ChrisWarrick? As in Python is not a language to start with?
[00:53:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:53:05] <ChrisWarrick> dademurphy: "think python" the book
[00:53:06] <bjs> dademurphy: the name of the book is "ThinkPython"
[00:53:09] <ChrisWarrick> dademurphy: as bjs mentioned
[00:53:15] <dademurphy> Ah, sorry. Perfect. Thank you both!
[00:53:24] *** Quits: greentree (~greentree@user/greentree) (Quit: greentree)
[00:54:38] <bjs> dademurphy: it's not a comprehensive everything-in-Python book, nor is it a comprehensive how-to-program book but it starts at the beginning and builds up.  There are other books that take other approaches, like Automate the Boring Stuff with Python which I'm told is a bit more practical focused
[00:54:50] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:52] *** Quits: Deneb (~johnch@245.82.159.143.dyn.plus.net) (Quit: Leaving)
[00:54:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:55:16] *** Joins: Deneb (~johnch@245.82.159.143.dyn.plus.net)
[00:55:36] *** Quits: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1) (Remote host closed the connection)
[00:55:58] *** Joins: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1)
[00:56:44] <jazzy> so default arguments aren't accessible outside of function scope, but remain in the outer scope anyway? How does that work?
[00:57:40] <dademurphy> bjs, understood. That's what i'm looking for: foundation focused. I'll look at Automate the Boring Stuff with Python next. Really appreciate it!
[00:57:43] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[00:57:48] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[00:57:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[00:58:42] *** Quits: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1) (Client Quit)
[00:59:01] *** Joins: georgios (~georgios@user/georgios)
[00:59:07] *** Joins: crashrep (~crashrep@user/crashrep)
[00:59:17] *** Quits: Deneb (~johnch@245.82.159.143.dyn.plus.net) (Client Quit)
[00:59:53] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:59:55] *** Joins: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1)
[01:00:29] <ChrisWarrick> jazzy: what do you mean?
[01:00:49] <bjs> jazzy: I'm not really sure what kind of answer you're looking for, they're evaluated when the function is defined and kept with the function. They're not really part of any "scope"
[01:00:51] <foo> Is there any "best practice" on nesting modules? eg. we currently have myapp/skills/maps.py (let's call this OPTION A) ... this is a Flask blueprint. All routes, various help functions, all stuffed in that file. myapp/models.py contains any database models for that (every DB model is stuck in myapp/models.py 1600 lines in there...). It's proposed that we move that to myapp/skills/maps/ and break everything
[01:00:57] <foo> out into blueprint.py, models.py, utils.py ... this would break everything up and be a bit more organized I think. I think we'll refactor into the OPTION B method... I think that's more common. Agree?
[01:01:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[01:01:37] <bjs> foo: this is the same argument as breaking up skills.py into skills/maps.py and skills/whatever.py really
[01:02:01] <bjs> I don't think there's any hard rule: once it makes more sense to split things up, then do so.
[01:02:10] *** Joins: tomg (~tomg@user/tomg)
[01:02:40] <bjs> You don't have to "break" anything when you do this, __init__.py can just import everything you need so from the outside it behaves as if nothing changed.
[01:03:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[01:04:17] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:04:20] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[01:05:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:06:02] <fluiD> I feel a little foolish calling it numpee for years now not realizing that it probably stands for Number Python NumPy
[01:06:12] <jazzy> bjs, I see, thanks
[01:06:19] <jazzy> ChrisWarrick, I just meant the phenomenon occurring here: https://bpa.st/WX5A
[01:06:21] *** Joins: crashrep (~crashrep@user/crashrep)
[01:06:34] *** Quits: paul424 (~tom@ip-5-172-235-10.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[01:06:46] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 256 seconds)
[01:06:54] <ChrisWarrick> jazzy: the default [] value is stored somewhere in the function object, it does not belong in the global scope
[01:07:03] *** Joins: tim__ (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net)
[01:07:03] <jazzy> got it
[01:07:09] <jazzy> bad assumption on my part
[01:07:12] <ChrisWarrick> jazzy: function arguments definining names outside of the function would be pretty terrible
[01:07:16] <foo> bjs: I see, the question then becomes: "once it makes more sense to split things up" -> what is the determining factor for this? eg. most of our modules in skills/ are 1000 lines or less. One dev made the argument that it's "more pythonic" to break things up - it's easier to read code, things are more organized, etc. I realize there is no "hard and fast rule" -> I'm halfway curious what's most common. If
[01:07:22] <foo> anything.
[01:07:25] <jazzy> ChrisWarrick, yeah haha, felt very early-js-y
[01:07:27] *** Joins: syrius (~syrius@titan.stormtek.net)
[01:07:39] <jazzy> the idea, anyway
[01:07:46] *** Joins: tomg (~tomg@user/tomg)
[01:08:07] <ChrisWarrick> foo: long files are hard to navigate
[01:08:27] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[01:08:41] <ChrisWarrick> foo: on the other hand, Java-style one-class-per-file setups might be difficult to navigate as well, and Python’s import system doesn’t help with such setups
[01:08:47] <fluiD> ok, next generic python question. I did a google search and found documentation for a method called "center_of_mass" here - https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.center_of_mass.html#scipy.ndimage.center_of_mass
[01:09:03] <foo> ChrisWarrick: is your answer OPTION B, split things up - for readability? etc. myapp/skills/maps.py becomes myapp/skills/maps/__init__.py, models.py, (flask) blueprint.py, utils.py?
[01:09:08] <ztrawhcse> fluiD: just so long as you don't feel like a numpty
[01:09:18] <fluiD> "import scipy" and "scipy.ndimage.center_of_mass()" gives me "module 'scipy' has no attribute 'ndimage'"
[01:09:21] <bjs> foo: to me "lines" doesn't feel like the right metric, surely it's a part of it
[01:09:28] <foo> ChrisWarrick: right, that's the flip side - if we're going to do this, I'd like it to be consistent. And having a ton of files with only a few lines seems like the trade off
[01:09:29] <ChrisWarrick> foo: for example, yes
[01:09:30] <bjs> but probably some kind of hard-to-define measure of "complexity"
[01:10:12] <foo> I'd like to definfe a rubric for either going all in on this, or not.
[01:10:22] *** Joins: p-i-_ (~Ohmu@183.89.27.225)
[01:10:27] <fluiD> I'm trying to understand why "import scipy" doesn't give me "scipy.ndimage" and how I would know that
[01:10:30] <ChrisWarrick> foo: I like django’s default-and-heavily-encouraged structure. But I would also sometimes replace views.py with a views package if it becomes too larg.e
[01:10:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[01:10:36] <foo> Most maps.py-like files are 500 lines or less, even. A few routes, a few functions. We have about 35 files like.
[01:10:44] *** Quits: tmart (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[01:11:01] *** Joins: tmart (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net)
[01:11:06] <foo> ChrisWarrick: what do you define as "too large" ? I realize this is subjective, trying to make up my mind here.
[01:11:06] <ChrisWarrick> foo: precise rubrics on file/function length and argument count are difficult to define
[01:11:13] <ztrawhcse> fluiD: import foo doesn't recursively import foo.*
[01:11:19] <ztrawhcse> which can potentially be slow
[01:11:19] <ChrisWarrick> foo: I don’t have a good definition
[01:11:36] *** Quits: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net) (Ping timeout: 272 seconds)
[01:11:48] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 240 seconds)
[01:11:52] *** Quits: tim__ (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[01:12:06] <ztrawhcse> however, sometimes foo/__init__.py takes its own prerogative to import subpackages, in which case it will be imported after all
[01:12:14] <foo> I think what we're talking about here is "when does a module become a package" ? Is that a safe way to "sum this up" ? Hmph.
[01:12:16] <ChrisWarrick> foo: and I might have a few files at $DAYJOB that tell our linter to happily ignore a large file, since splitting them (a) doesn’t make much sense (b) doesn’t work well with $LANGUAGE (I think the linter’s set at some point above 1k, I don’t really remember)
[01:12:47] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[01:13:03] <foo> Thanks, I've got one guy who's pro-this approach. I see the value of it, sort of. But not sure I see the value enough to refactor 35 modules.
[01:13:07] *** Joins: tim__ (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net)
[01:13:15] <ChrisWarrick> foo: when? when the dev team feels it needs to be broken up into smaller parts, hopefully in parts which make sense as one thing
[01:13:17] <bjs> foo: I think if the files you get are "small" then I tend to dislike this approach personally
[01:13:24] <bjs> I think lots of tiny files are a pain to navigate
[01:13:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:7799:fd4a:71a0:8bdb:db3d) (Ping timeout: 240 seconds)
[01:13:50] <foo> ChrisWarrick: yeah, having trouble getting my head around "when the dev team feels it needs" -> largely my call here.
[01:14:00] <foo> bjs: exactly my hesitation.
[01:14:04] <foo> bjs: what do you definfe as "small" ?
[01:14:36] <bjs> foo: if it entirely fits on my screen :P
[01:14:52] *** Joins: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net)
[01:15:24] *** Quits: tmart (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[01:15:31] *** Joins: damonlynch_ (~ngaio@static-68-235-44-21.cust.tzulo.com)
[01:15:39] <foo> bjs: ha! That's 30 lines.
[01:15:41] *** Parts: wholesomedonut (~wholesome@2607:fb90:46c:5900:8144:d9ae:9f0b:2ee1) ()
[01:15:46] <foo> Or so, on my screen.
[01:16:01] <foo> I'm not opposed to this, I'm simply trying to define standard operating protocol here so that we have some consistency in our codebase.
[01:16:04] <bjs> foo: VSCode on my screen can comfortably fit ~50
[01:16:11] <bjs> with my current settings
[01:16:21] * foo lets his vim "off the leash" to go fight with bjs's "VS Code"
[01:17:20] <bjs> foo: I think if I got something that was like 20 lines, I'd be questioning why it's its own file unless it's really unrelated to the other stuff
[01:17:25] *** Joins: tmart (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net)
[01:17:27] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[01:17:28] *** Joins: crashrep (~crashrep@user/crashrep)
[01:17:43] * ChrisWarrick turns his screens sideways and gets $MANY_LINES
[01:17:57] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[01:18:00] <CrtxReavr> And $FEW_COLUMNS
[01:18:02] * foo falls over from ChrisWarrick's play
[01:18:10] <foo> ChrisWarrick: thanks for sharing. :)
[01:18:14] <foo> I wish PEP would tell me what to do.
[01:18:49] *** Joins: PurpleBo_ (~purpleboo@047-040-214-188.res.spectrum.com)
[01:18:57] <Timvde> I can't get the csv module (using DictWriter) to *not* try to escape a field with quotes in it. I set QUOTE_NONE and am using a delimiter that's not in any data.
[01:19:26] <ChrisWarrick> foo: setting hard rules with regard to counts of things in a program sounds good on paper, but tends to break down fast (maybe except line length)
[01:19:39] *** Joins: tomg (~tomg@user/tomg)
[01:19:50] *** Quits: damonlynch (~ngaio@static-68-235-44-10.cust.tzulo.com) (Ping timeout: 272 seconds)
[01:20:08] <foo> ChrisWarrick: Yeah. I'm open to that.
[01:20:22] *** Quits: tim__ (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[01:20:39] <foo> ChrisWarrick: for example, we have one project that has various long hard coded constants with data that populats a page. That file is at 4399 and could probably be converted to a package
[01:20:53] *** Joins: Vonter (~Vonter@user/vonter)
[01:22:04] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Ping timeout: 256 seconds)
[01:22:17] <ztrawhcse> attempting to strictly define CSV is a recipe for disaster, best fix is to use something well defined :(
[01:22:36] *** Quits: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:501:c69e:9615:f10) (Ping timeout: 240 seconds)
[01:23:32] *** Joins: yac (~user@user/yac)
[01:24:00] *** Joins: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net)
[01:24:23] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:24:28] <Timvde> Okay, I managed to do it by setting quotechar=None
[01:24:31] <EdFletcher> so very true http://thomasburette.com/blog/2014/05/25/so-you-want-to-write-your-own-CSV-code/
[01:24:54] *** Quits: sanmingzhi1 (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net) (Ping timeout: 250 seconds)
[01:25:28] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[01:25:28] <Timvde> EdFletcher: if that's a reaction to me: I very much try to avoid it, and I am very annoyed by the requirements of the other party reading our CSV files
[01:25:42] <Timvde> They can't handle quoted fields or non-latin1 characters
[01:26:37] <EdFletcher> you should send them this article then force them to use a proper CSV parsing library 😆
[01:28:34] <Timvde> EdFletcher: Do you think I'd really be trying to work this out if I had a chance of them adapting *their* side? :)
[01:28:55] *** Joins: tomg (~tomg@user/tomg)
[01:28:56] *** Joins: hays (rootvegeta@fsf/member/hays)
[01:29:09] *** Joins: ice9 (~ice9@user/ice9)
[01:29:27] *** Quits: ice9 (~ice9@user/ice9) (Client Quit)
[01:29:39] *** Joins: ice9 (~ice9@user/ice9)
[01:29:55] <EdFletcher> Timvde: hahaha no of course, sorry was being overly idealistic. sorry to hear it, what you're going through is textbook example of the pain that comes from not using a proper parser.
[01:30:24] <Timvde> EdFletcher: I'm happy that at least our in-house software is pretty decent quality :)
[01:30:56] <EdFletcher> hahaha yup and i was just typing that your side of this will be very robust when you're done, so at least there's that win
[01:31:11] <Henry151> howdy folks
[01:31:30] *** Quits: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[01:31:42] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[01:31:42] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[01:31:47] <Timvde> Python 3.9 (update to 3.10 planned), microservices on k8s, very good test coverage, generally a strong team that produces good code, fun colleagues to work with
[01:31:57] *** Joins: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[01:32:00] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[01:32:23] <Timvde> Having to deal with silly CSV formats from time to time is a relatively small price to pay for that :)
[01:32:30] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 272 seconds)
[01:32:37] <Timvde> Oh, almost forgot: decent typing coverage with mypy!
[01:33:53] <Henry151> anybody link me to some good tutorial or something like that, to help me learn here? I'm trying to solve a challenge and super stumped. The challenge is, you're given a matrix such as [[1,2,7],[4,5,6],[8,8,9]] and you need to inspect each value and compare it to its neighbors. If the value is greater than the values of any of its neighbors, we add one to our counter. we're counting "cells in the matrix
[01:33:59] <Henry151> which have a value higher than any of the neighboring cells' values"
[01:34:08] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Read error: Connection reset by peer)
[01:34:09] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Read error: Connection reset by peer)
[01:34:13] *** Joins: slowtype- (~slowtyper@2a02:214c:840d:cd00:225:64ff:feb7:4668)
[01:34:24] *** Quits: MeanEYE (~Mladen@87.116.177.143) (Ping timeout: 272 seconds)
[01:34:29] *** Joins: moose` (~moose@user/moose)
[01:34:29] <Henry151> i'm thinking something like numpy should have some builtin tools that should make this way easier
[01:34:34] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[01:34:36] <bjs> Henry151: it's a little hard to recommend something given we don't know you or what level you're at
[01:34:37] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[01:34:40] <bjs> do you know about for loops?
[01:34:41] <Henry151> but i haven't been able to quite wrp my head around what to do
[01:34:46] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[01:34:54] <Henry151> bjs: yeah i'm pretty comfortable with for loops
[01:35:06] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:35:13] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Read error: Connection reset by peer)
[01:35:27] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[01:35:40] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 272 seconds)
[01:35:53] <bjs> Henry151: okay,  then I'd write some for loops that loop over each position (0,0), (0,1), (0,2) etc and then for each position get its neighbours and then check if any are smaller
[01:36:07] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:36:24] <Henry151> and i imagine that i've got to do something like, "for each row in the matrix, for each value in that row, look at all the neighbors, and if any are bigger, add one to our counter variable" or something about like that
[01:36:41] <Henry151> yeah, i've got that as a general idea but not doing to well implementing it
[01:36:56] <bjs> Henry151: does `for i in range(3): for j in range(3): print((i,j))` help as a starting place?
[01:37:20] <Henry151> sure does!
[01:37:59] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[01:38:23] *** Joins: kubast2 (~kubast2@user/kubast2)
[01:38:47] *** Quits: i2t (~i2t@69.54.152.9) (Ping timeout: 256 seconds)
[01:39:05] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:e8ba:13ba:f86b:c895)
[01:39:07] <kubast2> How can I concate 2 numpy arrays together[varying size(0, 1152) and type(None, int16)]?
[01:39:31] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 245 seconds)
[01:39:33] <kubast2> The concated arrays are then a multiple of 1152 and the same type
[01:39:43] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:40:38] <kubast2> I basically want to load multiple files into a single array
[01:40:44] <kubast2> that's all
[01:41:40] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[01:41:48] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:42:14] <kubast2> it was a bad idea anyway, I will just use a single file
[01:42:16] *** Quits: kubast2 (~kubast2@user/kubast2) (Client Quit)
[01:43:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:43:36] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[01:44:15] *** Quits: spithash_ (~spithash@user/spithash) (Ping timeout: 240 seconds)
[01:45:32] *** Joins: spithash (~spithash@user/spithash)
[01:45:40] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Client Quit)
[01:46:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:47:12] <Henry151> bjs: so, I've got it printing me out / individually selecting each element in my grid now, thanks to your little bit of helpful prompting
[01:47:42] <Henry151> i'm doing something like for e in grid: for f in e: print(f) and it prints me out each element in the grid individually
[01:47:50] <Henry151> which is excellent
[01:47:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[01:48:17] <nedbat> Henry151: i recommend choosing more descriptive variable names :)
[01:48:32] <Henry151> now i think i need to do something like "for each of those f, inspect neighbors to see if they're bigger or smaller"
[01:48:38] <Henry151> nedbat: probably very sound advice
[01:48:55] <Henry151> e was short for element in my mind :)
[01:48:58] <Henry151> "
[01:49:03] <Henry151> for each element in the grid"
[01:49:15] <Henry151> and then f was just next alphabetically
[01:49:28] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:49:35] <bjs> Henry151: i think looping over the indices (like `for i in range(3)`) will be useful for finding neighbours
[01:49:41] <bjs> as you can go `i-1` and `i+1` etc :)
[01:50:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:51:54] <Henry151> hmm i see... but the matrices can be varying sizes, they're not always to be 3x3, so i would need to maybe do something like `for i in range(len(grid))` instead of i in range(3) i think, am i thinking clearly?
[01:52:40] <bjs> Henry151: yes you are thinking clearly and that's exactly the line you need
[01:53:19] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:53:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:54:01] <Henry151> indeed
[01:54:05] <jazzy> why can I manipulate arr here, but not val?
[01:54:06] <jazzy> https://bpa.st/N2UA
[01:54:17] <Henry151> but that only accounts for how many rows, not how many columns (or vice-versa?)
[01:54:28] <bjs> jazzy: why do you say you can't "manipulate val" ?
[01:54:39] <jazzy> bjs, I can't reassign it I suppose
[01:54:40] <bjs> Henry151: well `for j in range(len(grid[i])):` might be the next line :)
[01:54:46] <bjs> jazzy: you suppose?
[01:54:53] <bjs> I can't see why not, are you getting an error?
[01:54:54] <jazzy> I can't :(
[01:55:03] <jazzy> one sec
[01:55:05] <bjs> jazzy: oh you're getting UnboundLocalError ?
[01:55:16] <jazzy> bjs, yes
[01:55:26] <bjs> jazzy: you might want to put `nonlocal val` at the top of your access function
[01:55:34] <bjs> to tell Python you mean the "val" in the outer function, not a local val
[01:55:51] <jazzy> bjs, I see
[01:56:05] <jazzy> what's the justification behind being able to append to the arr there?
[01:56:15] <jazzy> without getting the same error
[01:56:36] *** freeworld is now known as Guest6792
[01:56:40] <bjs> jazzy: you're not reassigning
[01:56:44] <bjs> like you are with val
[01:57:12] <Henry151> bjs: i'm almost there! so i'm gonna do for i in ... for j in.. : if grid[i][j] > grid[i][j-1]: increment my counter
[01:57:16] <jazzy> got it
[01:57:38] <Henry151> to check if the neighbor on the same row but one column over is greater than the one we're inspecting, for example
[01:57:46] <bjs> Henry151: something like that,  don't forget to check all the neighbours (Dont forget any) and make sure to check that the neighbour actually exists before you try read its value
[01:58:07] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[01:58:13] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:58:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:59:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:59:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:00:06] *** Joins: audiomouse (~audio@2603-8081-1800-4ee1-4356-668f-837f-de3f.res6.spectrum.com)
[02:00:40] <Henry151> ok so i'm going to want to do something like "if grid[i][j-1]: if grid[i][j] > grid[i][j-1]: my_counter += 1" to check the neighbor to the right, for example, and then continue to do that for each of the neighbors
[02:00:52] <Henry151> does that sound about right?
[02:01:39] <bjs> Henry151: `if grid[i][j-1]` doesn't check if the neighbour exists, you want to check if j-1 is greater than or equal to 0, and less than 3 (len(...))
[02:03:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f863-5727-5d9c-7f8d.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:03:58] <Henry151> so something like if j-1 >= 0 and < len(grid): if grid[i][j] > grid[i][j-1]: my_counter += 1 ?
[02:05:17] <Repiphany> `0 <= j-1 < len(grid)` btw
[02:06:14] <sveinse> When writing py2 & py compatible code, are there any py2 objects that can be used for in-order iteration of dicts? I'm using python-future. OrderedDict() is a candidate, but this class does not behave exactly like dict in py3. E.g. comparing two objects is false if the order is different in OrderedDict, while for dict it is not.
[02:06:53] <Henry151> this somehow intuitively feels to me like the sort of thing that someone else has solved a million times over; i would think i could do some magic like "from numpy import neighbors" and then have access to something that would just let me do this without manually doing it, i.e. say "for element in grid if element > element.neighbors .... " or whatever
[02:07:31] <ali1234> Henry151: i used roll for that before
[02:07:45] <Henry151> not that i mind doing it, i'm learning for sure, but it feels like there should be a way to do it more easily
[02:07:54] <Henry151> ali1234: roll ?
[02:07:54] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:07:58] * Henry151 goes googling
[02:08:29] <ali1234> Henry151: https://gist.github.com/ali1234/6b019867d61c1ac2d916ca10ec720d2a
[02:08:36] <ali1234> line 17 and 18
[02:09:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:09:48] <ali1234> if you are looking for less than/greater than you can also use np.diff
[02:09:50] <Henry151> looks like more the kind of solution i had in mind, but a little hard for me to grasp, not sure that i can look at it and then do it in my context here
[02:10:08] <ali1234> basically roll shifts the whole array by however much
[02:10:23] <ali1234> then you do whatever operation on the original and the rolled version eg rolled > orig
[02:10:31] <ali1234> this gives you a boolean array
[02:10:36] <Henry151> i see
[02:10:46] <ali1234> then you can use np.count to count how many places it is true
[02:10:53] <Henry151> this is the kind of solution i was imagining yep
[02:10:55] <ali1234> but for > you can just use np.diff and it is probably faster
[02:11:06] <ali1234> and then np.count(result > 0)
[02:11:24] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Ping timeout: 240 seconds)
[02:11:33] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:11:48] <ali1234> apparently np.count doesn't actually count like that, but you can use np.sum(boolean * 1) which is i think what i did in that life example
[02:13:10] <ali1234> count_nonzero() would also work i guess
[02:13:26] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[02:13:39] <Henry151> i think i will try to implement this type of solution, thanks ali1234
[02:13:41] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 245 seconds)
[02:13:46] <Henry151> also thanks bjs for your inputs
[02:13:52] <ali1234> working this way is preferred in numpy, because it is much faster than python loops over the array
[02:14:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:14:40] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[02:14:50] <bjs> Henry151: I'd be a little surprised if you can follow ali1234's numpy way but struggle to do the "loop over the neighbours and check each" way
[02:14:55] <ali1234> note that the roll method will wrap at the borders. np.diff has different modes, some give you a smaller array than the input
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:15:27] <ali1234> oh yeah, if you've never done the looping method, at least try to implement it :)
[02:16:01] <ali1234> if nothing else, you can use it to test the array ops method
[02:16:06] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:47] <Henry151> i will try to implement both. whole thing is a learning exercise anyway, but i do have a tendency to skip over fundamentals and try to do things that are a bit of a reach with my lack of foundational knowledge, i admit
[02:19:32] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[02:20:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:20:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:21:14] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[02:23:04] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[02:25:41] *** Joins: zuplex (~zuplex@202.51.76.195)
[02:26:00] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[02:26:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:26:22] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:27:34] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:921a:3b05:ee59:6305) (Quit: Konversation terminated!)
[02:27:48] *** Joins: dez (uid92154@user/dez)
[02:28:41] <ali1234> i've been trying out csnake all day
[02:28:50] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b54c:f832:91af:f6f2) (Ping timeout: 252 seconds)
[02:28:55] <ali1234> i can't figure out how to make it wrap :(
[02:29:07] <ali1234> i think it is possible with GenericModifier?
[02:30:40] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[02:30:42] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[02:30:56] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[02:31:08] <TML> sveinse: wouldn't it be easier to write the code so that the order of the dict isn't significant?
[02:32:02] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 272 seconds)
[02:32:11] <TML> sveinse: For example, if you actually need to iterate the keys in some stable manner, sorted(dict.keys())
[02:33:20] <sveinse> TML: I'm interfacing external file formats, like json, which rely on dict-like object types. The requirement is that these formats are stable, meaning they provide the same order after load, modification and then save. Python 3 dicts provide that guarantee.
[02:33:22] *** Joins: moog (~moog@107.77.244.141)
[02:33:41] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[02:33:45] <sveinse> But I can make due with OrderedDict, even thou testing with pytest is a slightly more cumbersome
[02:34:00] *** Joins: ednash (~ednash@c-98-210-100-113.hsd1.ca.comcast.net)
[02:34:09] *** Joins: thevar1able (~textual@46.39.45.122)
[02:34:19] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[02:34:28] *** kevr` is now known as kevr
[02:34:57] <sveinse> (In the long term, I hope to rid this project of python2.)
[02:35:08] *** Quits: The_Loko (~The_Loko@86.127.255.193) (Quit: Leaving)
[02:35:49] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:37:24] *** flooded is now known as _flood
[02:37:49] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:38:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:38:11] <TML> you should also hope to rid the project of such requirements, given that JSON explicitly does NOT support stable ordering of object keys :)
[02:38:19] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[02:38:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:39:30] <ali1234> is there a way to determine is a np.dtype is an integer type, and whether it is signed?
[02:40:45] *** Joins: jdmark (~jdmark@user/jdmark)
[02:41:06] *** Joins: djapo (~archangel@user/djapo)
[02:42:20] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[02:43:44] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:43:56] <sveinse> TML: The JSON format might not be stable, true, but the python json module can be made stable and that enough for this. The functionalty doesn't change if data is unordered, so technically it's complient. For e.g. diffing it is a desire to make the json stable if possible.
[02:44:45] <TML> sveinse: Just saying that expecting Python to be more strict about the data than the source format supports seems like setting yourself up for a terrible time
[02:45:07] <sveinse> TML: that's fine. thanks.
[02:45:22] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[02:45:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[02:47:00] *** Quits: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[02:47:04] <ali1234> i've dealt with this before, where loading in some format, changing one key, writing it out again completely changes the file
[02:47:12] <ali1234> it is extremely annoying
[02:47:38] *** Quits: ionelmc (uid20175@id-20175.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:47:42] <sveinse> Yep, have some pesky XML files that change all the time to the point that everything is undiffable
[02:47:45] <ali1234> it affects json, yaml, and xml
[02:47:47] *** Quits: hiroshi_ (~freedom@ge-19-99-251.service.infuturo.it) (Quit: hiroshi_)
[02:48:10] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[02:48:12] <ali1234> inkscape used to have this fun bug where every time you load and save the file, it exactly reverses all the attributes
[02:48:40] <ali1234> this caused various projects to have multi-megabyte diffs every time someone edited an icon
[02:48:46] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[02:49:38] *** Quits: ednash (~ednash@c-98-210-100-113.hsd1.ca.comcast.net) (Remote host closed the connection)
[02:49:47] *** Joins: thiras (~thiras@user/thiras)
[02:50:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:50:55] *** Joins: matsaman (~matsaman@user/matsaman)
[02:51:41] *** Joins: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[02:52:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:52:15] <sveinse> It's precisely this type of change that is wanted for this package for that exact reason. As long as one don't write the data files with other tools, it should be maintaiable to assert some order stability.
[02:52:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:53:01] <ali1234> it is a lot of effort to make it work... whichi guess is precisely why the specs don't mandate it
[02:53:58] <sveinse> It hasn't been that difficult really. Not for json.
[02:54:14] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[02:54:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:55:01] <sveinse> But yes, the best thing is to alter the format to not rely on dict-like object stores. In my case this is not an option.
[02:56:16] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:57:24] <ali1234> ah here we go: isinstance(x.dtype.type, np.integer)
[02:57:26] *** Quits: maxzor_ (~maxzor@2a01cb04054faa003bb34ce3f734fa22.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[02:57:50] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[02:57:54] <ali1234> can also look at dtype.kind
[02:57:57] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:58:08] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:02:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:02:44] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[03:03:08] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:03:53] *** Quits: cosimone (~user@93-34-132-33.ip49.fastwebnet.it) (Ping timeout: 250 seconds)
[03:04:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[03:04:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[03:04:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:06:34] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:07:36] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:08:01] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:08:36] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:51fc:97ba:a6e:6a15) (Ping timeout: 240 seconds)
[03:09:31] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 245 seconds)
[03:10:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:10:43] *** Joins: SOMBRIO (~SOMBRIO@177.137.119.132)
[03:10:54] *** Quits: PrinceMyshkin (~PrinceMac@user/PrinceMachiavell) (Read error: Connection reset by peer)
[03:11:07] *** Joins: PrinceMyshkin (~PrinceMac@user/PrinceMachiavell)
[03:11:24] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:11:57] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[03:12:02] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[03:13:21] *** Joins: Vonter (~Vonter@user/vonter)
[03:14:31] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[03:14:57] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:e8ba:13ba:f86b:c895) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:15:17] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[03:15:57] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[03:16:48] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[03:17:19] *** Joins: newdimension (~newdimens@user/newdimension)
[03:17:40] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[03:17:49] *** Joins: CombatVet (~c4@user/combatvet)
[03:18:25] *** Joins: s1gyn (~s1gyn@user/s1gyn)
[03:19:28] <s1gyn> I'm having a regex issue trying to isolate a section of json before feeding it into json.loads
[03:20:01] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Client Quit)
[03:20:10] <meejah> parsing with reg-ex's can be problemmatic .. why are you only loading a section?
[03:20:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:20:50] *** Quits: PrinceMyshkin (~PrinceMac@user/PrinceMachiavell) (Quit: The Lounge - https://thelounge.chat)
[03:21:22] *** Joins: PrinceMyshkin (~PrinceMac@user/PrinceMachiavell)
[03:22:03] <s1gyn> I am trying to pull it from a list of json objects in a <script> element on a web page
[03:22:20] <s1gyn> hold on, one minute while I get a paste bin thing ready
[03:22:22] *** Joins: giusb (~giusb@user/giusb)
[03:22:44] *** Quits: PrinceMyshkin (~PrinceMac@user/PrinceMachiavell) (Read error: Connection reset by peer)
[03:22:57] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[03:23:11] <s1gyn> https://bpa.st/BNUQ
[03:23:12] *** Joins: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[03:23:22] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:24:00] <s1gyn> So I am not sure why it is giving me menuItemPictureIndexMap when that is outside the first capture group
[03:24:03] <meejah> so you're trying to extract some json out of a html document?
[03:24:05] <TML> s1gyn: why not just json.loads() the thing and then only process the keys you're interested in?
[03:24:16] <s1gyn> meejah: yeah
[03:24:19] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:24:33] <meejah> i would load the HTML with an html-parsing library (maybe BeautifulSoup)?
[03:24:53] *** Quits: SOMBRIO (~SOMBRIO@177.137.119.132) (Quit: Client closed)
[03:25:02] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[03:25:09] <meejah> oh, wait, but it's javascript not html ... mmm
[03:25:16] *** Joins: SOMBRIO (~SOMBRIO@177.137.119.132)
[03:25:20] <TML> They said it's in a <script> tag
[03:25:30] <meejah> i don't know if there's a javascript parsing library for python...?
[03:25:30] <s1gyn> meejah: I am using that to get the right <script> element
[03:25:33] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:25:57] <meejah> right okay .. so then you want to extract some of the js source ... mmmm
[03:26:03] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[03:26:20] *** Joins: jorj (~jorj@212.70.119.14)
[03:26:20] <TML> s1gyn: Would be easier if we could see/execute the full context
[03:27:10] <s1gyn> Yeah only part of this one line, within the contents of the script tag is valid json, and there are multiple objects. So no matter how much I sucked in, I'd have to regex before I can loads
[03:27:28] *** test_ is now known as _flood
[03:27:48] <matsaman> meejah: pretty sure there's at least one big scraping engine that does JS
[03:28:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[03:29:35] <nedbat> s1gyn: change .* to .*? and see if it's better
[03:30:01] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[03:30:36] *** Joins: masoudd (~masoudd@user/masoudd)
[03:30:45] <ztrawhcse> meejah: beautifulsoup doesn't care whether it's javascript in html, just soup.find('script')
[03:31:23] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[03:31:26] <matsaman> s1gyn: and to be clear, do you meant first capture group, or 1-th (vs 0-th)?
[03:31:57] *** Quits: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[03:31:58] <s1gyn> nedbat: first capture group, afaik using groups(0) returns the entire match, not the first capture group
[03:32:07] <s1gyn> nedbat: running with that change now
[03:32:12] *** Joins: MeanEYE (~Mladen@87.116.177.143)
[03:32:23] <s1gyn> sorry, the thing about the capture groups was meant for matsaman
[03:33:03] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:33:17] <ztrawhcse> s1gyn: grab the script tag with e.g. beautifulsoup, parse the script contents with something like duktape (python-dukpy) and run whatever js is needed to select/output the contents you actually need, then json.loads that
[03:33:19] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[03:33:22] *** Joins: zumba_addict65 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[03:33:34] <matsaman> s1gyn: hrmm, not sure but you might be confusing groups and group
[03:33:36] <matsaman> or something else <shrug>
[03:33:53] <ztrawhcse> you don't *need* to regex anything
[03:33:57] *** Joins: blei (~blei@c-73-153-189-5.hsd1.co.comcast.net)
[03:34:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:34:59] *** Joins: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[03:35:12] <blei> looking for a way to plot an array of 2d arrays, maybe more advanced than matplotlib if that's available this year
[03:35:17] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:35:27] <blei> something that does something intuitive with your data when you say to plot it?
[03:36:14] <s1gyn> ztrawhcse: I'll look into that for future revisions
[03:36:23] <s1gyn> nedbat: bingo
[03:36:26] *** Parts: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com) ()
[03:36:27] <s1gyn> that did the trick
[03:36:31] *** Joins: ExpiredKebab (~sgreadly@47-72-197-36.dsl.dyn.ihug.co.nz)
[03:36:31] <BtbN> No idea what kind of intuitive stuff you expect. But there's a million different ways to visualize data.
[03:36:35] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:36:47] <BtbN> There is no magic bullet to perectly visualize whatever you throw at it without context
[03:36:58] <blei> given an array of 2d arrays, show the matrices in a grid when handed such a data structure
[03:37:02] <blei> ^ intuitive
[03:37:13] <nedbat> ztrawhcse: running a js engine to get this seems like a lot of bother
[03:37:21] <BtbN> Sounds like a very simple matplotlib usecase
[03:37:36] <blei> "no magic bullet" -> no free lunch theorem -> can be used as an answer to every possible question, definitionally, fyi
[03:37:50] <blei> matplotlib doesn't handle it intuitively.
[03:37:52] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[03:37:53] <s1gyn> thanks nedbat
[03:37:55] <blei> you can't just pass it the structure and get a grid
[03:37:57] <s1gyn> and everyone
[03:38:10] <BtbN> So you are asking for a library that handles your exact specific usecase. That's not how things work.
[03:38:18] <blei> yeah, no, thats not what i'm asking for
[03:38:22] <blei> i'm asking for a well designed library
[03:38:34] <blei> and indicated that i was aware of the fact that, to my knowledge, as of last year, one didn't exist
[03:38:39] <BtbN> What if the array of 2d arrays was something else?
[03:38:44] <blei> borg
[03:39:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[03:39:30] <BtbN> It can represent a ton of different things, so there cannot be a generic "one fits all" function/library to visualize it. You'll have to put the plumbing in that fits your data.
[03:40:05] <blei> got that, looking for something better than that, i'm sure you do not have a proof that such a thing can't exist
[03:40:12] *** Joins: vakera_pingveno_ (~dan@static-198-54-135-59.cust.tzulo.com)
[03:40:12] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::30) (Ping timeout: 240 seconds)
[03:40:20] <BtbN> ah yeah, asking for proof for a negative. Classic.
[03:40:36] <BtbN> I'm sure there can be a library that given an array of 2d arrays, renders it the way you want.
[03:40:48] <BtbN> But someone else, also having an array of 2d arrays, could be wholly disappointed by it.
[03:40:55] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[03:40:56] <blei> what we need is an automagic tensor viewifier
[03:40:58] <puff> Anyone really good at a) korean food, b) seasoning cast iron pans?
[03:41:07] <nedbat> puff: wrong channel?
[03:41:08] <puff> Dammit, wrong channel, sorry.
[03:41:09] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[03:41:13] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:41:23] <blei> puff make sure to use dish soap on your cast iron pan after every meal
[03:41:27] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:41:49] <puff> nedbat: Yeah. I use emacs as my irc client and for some reason when I change buffers it doesn't default to taking me back to the buffer I was just on.
[03:42:35] <puff> blei: What's the difference between "an array of 2d arrays" and a 3d array?
[03:42:36] *** Quits: flower_ (~debian@46.244.61.4) (Ping timeout: 256 seconds)
[03:42:58] <blei> its just a bit of clarification that its a list of 2d matrices
[03:43:12] <puff> Aha.
[03:44:54] <blei> we used to season them by using them. to season it intentionally, i think you would use butter + spices
[03:45:56] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[03:46:02] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[03:46:25] <Jenna16bit> I've never understood the cult of cast iron. But when it comes to 2D arrays, numpy is my fav.
[03:46:46] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:47:56] <puff> Jenna16bit: Happy to talk about it over in ##cooking sometime.
[03:48:02] *** Quits: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953) (Ping timeout: 252 seconds)
[03:48:20] *** Joins: Wulf (~Wulf@user/wulf)
[03:48:47] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[03:49:12] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d5a0:edd8:6280:59e9)
[03:49:12] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d5a0:edd8:6280:59e9) (Changing host)
[03:49:12] *** Joins: skapata (~Skapata@user/skapata)
[03:50:20] *** Joins: mmercer (daemoen@hanzo.neo-zeon.de)
[03:51:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:52:28] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 272 seconds)
[03:54:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:55:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:56:29] *** Joins: asix (~Anders@user/asix)
[03:56:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[03:57:02] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:57:49] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[03:58:17] *** Quits: vakera_pingveno_ (~dan@static-198-54-135-59.cust.tzulo.com) (Ping timeout: 240 seconds)
[03:58:37] *** Joins: vakera_pingveno_ (~dan@2600:1700:21f9:b150::30)
[04:00:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:01:24] *** Quits: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net) (Ping timeout: 240 seconds)
[04:03:06] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:03:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:04:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[04:04:38] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[04:04:42] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[04:04:45] *** Quits: jorj (~jorj@212.70.119.14) (Quit: Textual IRC Client: www.textualapp.com)
[04:05:23] *** Joins: brookesy66 (~will@203.220.123.174)
[04:05:58] *** Joins: Barones (~Barones@user/Barones)
[04:06:26] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:07:04] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00289c6fc482adfe76.ipv6.abo.wanadoo.fr)
[04:07:50] *** Joins: crixet (~crixet@63.208.139.61)
[04:08:30] *** Quits: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Quit: I'm off to hail the VOID. (WeeChat 3.0))
[04:09:19] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Ping timeout: 250 seconds)
[04:10:22] *** Joins: esther (~esther@136.62.7.216)
[04:10:26] <crixet> I'm learning to use API's and I am trying to pull a user image. It will show up in chrome if I have ModHeader running but other than that it doesn't show. I've verified I am sending an Authorization header with my request. Any ideas why this is happening? Should I be asking this here?
[04:11:30] *** Joins: purple_cthulhu (~rax@185.108.96.25)
[04:11:31] <TML> crixet: Hard to provide much advice without being able to see your python code. Check channel topic for a link on where to share.
[04:13:32] <blei> prototype that with curl
[04:14:00] *** Joins: Vonter (~Vonter@user/vonter)
[04:16:13] *** Joins: minip (~minip@user/minip)
[04:18:43] *** Joins: dme86 (~dan@user/dan86)
[04:20:14] *** Joins: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net)
[04:20:53] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[04:21:22] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:22:15] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[04:23:15] <purple_cthulhu> Hi. Type[BaseCls] type hint matches all subclasses of BaseCls and the base class itself. How to exclude the base class and only match subclasses?
[04:24:49] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[04:24:59] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Client Quit)
[04:25:16] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:25:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:25:56] <nedbat> purple_cthulhu: that seems like an odd thing to want? The base class is what they all have in common
[04:26:15] <phy1729> And in that case the param will just always be BaseCls
[04:26:42] <phy1729> I think one could Final[Literal[BaseCls]] ?
[04:27:13] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b54c:f832:91af:f6f2)
[04:28:47] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[04:30:07] *** Joins: devish (~devish@54-240-198-39.amazon.com)
[04:30:58] *** Quits: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[04:31:35] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[04:32:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:32:11] *** Quits: Guest6792 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[04:32:22] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:32:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:33:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:36:05] *** Quits: queue- (~nerd@user/queue/x-7267619) (Remote host closed the connection)
[04:36:06] *** Quits: Bitflux (~byte@byteflux.net) (Quit: ZNC - https://znc.in)
[04:36:08] <ztrawhcse> nedbat: running a js engine to avoid regular expression parsing of a javascript snippet isn't "a lot of bother", it's "doing it right the first time"
[04:36:14] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Quit: fBNC - https://bnc4free.com)
[04:36:18] *** Joins: Byteflux (~byte@byteflux.net)
[04:36:36] *** Quits: ybonatakis (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz) (Ping timeout: 240 seconds)
[04:36:39] *** Joins: ejjfunky (~ejjfunky@125.164.23.55)
[04:36:46] <nedbat> ztrawhcse: i think it's fine to understand the format of data you're expecting, and extra info from it with a regex.
[04:36:47] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[04:37:06] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[04:37:11] <nedbat> ztrawhcse: trying to execute the javascript could lead you down a ton of ratholes
[04:37:25] *** Joins: queue (~nerd@rektnet.com)
[04:37:29] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[04:37:45] *** Joins: ybonatakis (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz)
[04:38:18] <ztrawhcse> so much for "format of data you're expecting"
[04:38:37] <nedbat> ztrawhcse: i don't understand what you mean
[04:39:07] <ztrawhcse> oh well, please let's at least not use regex on HTML+JS, but stick to regex on JS extracted using sane methods from HTML
[04:39:19] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[04:39:26] <nedbat> ztrawhcse: i think people overreact to using regex to get information from html
[04:39:44] <nedbat> ztrawhcse: you can't fully parse arbitrary html with regex, but if you know what forms to expect, it is fine.
[04:40:20] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00289c6fc482adfe76.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[04:40:39] *** Joins: maxzor_ (~maxzor@2a01cb04054faa0008f4fbcc9937e1dd.ipv6.abo.wanadoo.fr)
[04:40:47] <ztrawhcse> and beautifulsoup is fine too! finer, in fact. That being the case, the fact that there is a better method actually causes the regex method to become actively worse
[04:40:52] <nedbat> if you use regex, and the HTML changes, then your code is broken, but lots of "real HTML parsing" can also be broken if the HTML changes.
[04:40:54] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[04:40:58] <ztrawhcse> it's the reason why perl is such a horrible programming language
[04:41:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:41:27] <nedbat> regex parsing can break, and beautifulsoup parsing can break.
[04:41:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:41:35] <ztrawhcse> https://nibblestew.blogspot.com/2020/03/its-not-what-programming-languages-do.html
[04:41:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:42:06] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:42:59] *** Joins: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a)
[04:43:17] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[04:44:00] <FunkyBob> AIUI one of  the major improvements in HTML5 was a consistent, defined, standardised way of reacting to non-compliant source... essentially eliminating the randomness of the dreaded 'quirks mode'
[04:44:07] <ztrawhcse> if beautifulsoup parsing breaks, there's an obvious way to fix it. If a regex breaks, prepare for many sleepless nights as you track down edge cases
[04:44:21] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:44:42] <nedbat> ztrawhcse: what is the obvious way to fix bs4 parsing? It will depend on how the HTML has changed, right?
[04:44:49] <ztrawhcse> using broken methodologies is broken, and furthermore, leads you to normalize broken methodologies
[04:44:59] <nedbat> ztrawhcse: you have a very absolute view of things
[04:45:01] <blei> you can write a more legible regex with re.MULTILINE
[04:45:21] <blei> triplequotes, indenting, comments, f-strings
[04:45:25] <nedbat> ztrawhcse: i have a text file, there's something in the middle i want to extract.  a regex isn't "wrong".
[04:45:29] <purple_cthulhu>  nedbat, phy1729, Thanks for answering. There is function that gets a subclass of BaseCls and returns an instance of the class. The idea behind the type hint I want is to annotate that all subclasses of the base class are allowed except the base class itself because it is an ABC class and would not be instantiated. Of course, a TypeError exception will be raised at runtime by attempting to instantiate an ABC class. However, I think by sp
[04:45:29] <purple_cthulhu> ecifying the mentioned type hint the IDE would could me if BaseCls passed mistakenly to the function.
[04:45:34] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:45:47] <blei> you can automatically generate a regex for your data with grex in some cases
[04:46:18] *** Quits: randombrain (~rbrain@user/randombrain) (Ping timeout: 272 seconds)
[04:46:23] <phy1729> I think you want a TypeVar bound=BaseCls   but TypeVars are a little fuzzy in my head honestly
[04:46:25] <purple_cthulhu> * the IDE could want
[04:46:37] *** Quits: maxzor_ (~maxzor@2a01cb04054faa0008f4fbcc9937e1dd.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[04:46:44] <purple_cthulhu> My bad! * the IDE could warn me
[04:48:12] *** Quits: flokuehn (~flokuehn@87.123.247.39) (Ping timeout: 272 seconds)
[04:48:45] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:49:04] <purple_cthulhu> phy1729, I also tried to use a TypeVar but did not work, Observed the same behaviour as Type[BaseCls].
[04:49:20] *** Joins: flokuehn (~flokuehn@87.123.247.65)
[04:49:55] <nedbat> ztrawhcse: i don't mean to be hard-headed about this. I just don't think bs4 is a panacea for dealing with data embedded in HTML, and it doesn't keep you from dealing with breakage due to changes.
[04:50:10] *** Joins: parv (~quass@user/parv)
[04:50:27] <twb> nedbat: using a regular expression to parse an irregular language is _by definition_ wrong.  Or at least extremely ill-advised.
[04:50:30] <Jenna16bit> I get you, I don't think anything really can fix the latter concern.
[04:50:34] *** Joins: XV9 (~XV8@2601:5cb:c001:50::5524)
[04:50:36] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Ping timeout: 240 seconds)
[04:50:50] <nedbat> twb: maybe "parse" is a misleading word. I don't need to parse it. I need to extract data from the middle of it.
[04:50:57] *** Quits: XV9 (~XV8@2601:5cb:c001:50::5524) (Read error: Connection reset by peer)
[04:51:07] <twb> That would traditionally be a job for a parser :-)
[04:51:16] <nedbat> twb: i don't need to parse it.
[04:51:27] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[04:51:30] <twb> nedbat: did you pastebin the HTML you're trying to work on?  I don't see a link
[04:51:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:51:35] *** queue is now known as queue-
[04:51:43] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[04:51:43] *** Joins: queue- (~nerd@user/queue/x-7267619)
[04:51:47] <nedbat> twb: it's a hypothetical situation. we're debating something based on someone else's question.
[04:51:53] <twb> oh
[04:52:06] <twb> Well in that case I'll just invoke jwz's second law, and leave you to it
[04:52:30] *** Quits: esther (~esther@136.62.7.216) (Read error: Connection reset by peer)
[04:53:09] <blei> jquery is definitely best for this
[04:53:46] <dale> "It's not dumb if it works"
[04:53:46] *** Joins: korg815 (~korg815@user/korg815)
[04:53:48] <blei> you can compile it down to LLVM IR and from there over to BF
[04:54:08] <blei> after which you can run it in BF in BF which is best for debuggabilification
[04:55:24] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[04:55:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[04:55:52] <twb> dale: I believe the usual form of that is a US military thing: "if it's stupid and it works, it's not stupid"
[04:55:52] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:55:59] *** Quits: crixet (~crixet@63.208.139.61) (Ping timeout: 256 seconds)
[04:56:19] <twb> dale: but that's usually meant for things like "I called an airstrike on a friendly and accidentally only killed Bad Guys"
[04:56:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:56:51] <dale> lol
[04:56:55] *** Joins: esther (~esther@136.62.7.216)
[04:57:17] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[04:57:34] <blei> what they say in the military is "good enough for government work"
[04:58:06] <TML> or SNAFU
[04:58:15] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[05:00:18] *** Joins: cdown (~cdown@188.214.11.14)
[05:01:16] *** Joins: kingofcsu (~kingofcsu@114.249.132.226)
[05:01:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:03:08] *** Joins: a210222 (~alex@218-215-213-197.sta.wbroadband.net.au)
[05:05:39] *** Joins: frost (~frost@user/frost)
[05:06:03] *** Quits: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[05:06:45] *** Joins: sbrown (~sbrown@66.44.16.44)
[05:07:21] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[05:07:45] <ztrawhcse> nedbat: I don't think bs4 keeps you from dealing with breakage due to changes either. I just said that bs4 will *always* be easier to adapt to changes than regex. Regex is not ergonomic for dealing with tree syntax at the best of times. Any changes will likely require a full rewrite. It is vulnerable to all changes that bs4 is vulnerable to, plus a whole additional host of changes any time e.g. a
[05:07:47] <ztrawhcse> backend HTML generator changes the *whitespace* emission. Even when a regex is correct, it generally takes far more analysis to actually tell the difference. Using a proper parser may not be *perfect*, but it is always *better*.
[05:07:52] <ztrawhcse> So all that being said -- why ever use regex?
[05:08:17] <ztrawhcse> regex is the dirty hack, and on top of that, it's the thing that conditions you to solve your future problems in regex too
[05:08:25] <nedbat> ztrawhcse: the problem at hand was to get a json blob from inside a <script> tag.  none of that needs to involve trees.
[05:08:39] <nedbat> ztrawhcse: and if you did use bs4, you'd still need some regex to get the json out of the javascript.
[05:09:14] <nedbat> ztrawhcse: the html structure is just irrelevant.
[05:09:52] <ztrawhcse> and I do believe proper analysis of the js is likely the superior solution there too :)
[05:09:59] *** Quits: NealRame (~a@122-199-48-238.ip4.superloop.com) (Quit: Konversation terminated!)
[05:10:16] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[05:10:18] <ztrawhcse> anyway, if you want to be perl and shepherd people into solving all their problems with regex, go right ahead
[05:10:21] <blei> one liners are pretty cool man
[05:10:44] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:10:48] <nedbat> ztrawhcse: can we agree there are tradeoffs here? It's not a slippery slope to perl-hell, it's choosing a tool for the job.
[05:11:04] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[05:11:17] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[05:11:32] <twb> ztrawhcse: to be fair, WHATWG made the html serialization bloody ridiculous also.  It's not like XHTML where you can use an existing parser.  You need a special parser written specifically for HTML.
[05:11:59] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:12:05] *** Parts: bloody (~bloody@user/bloody) (WeeChat 3.4)
[05:14:17] *** Joins: cdown_ (~cdown@163.114.131.1)
[05:14:18] *** Quits: kingofcsu (~kingofcsu@114.249.132.226) (Quit: kingofcsu)
[05:14:38] <ztrawhcse> I think if there are two easy tools for the job, and one of them is using a parser while the other is using a regex, then choosing the latter is in fact choosing the *bad* tool for the job
[05:15:04] <ztrawhcse> it's not a tradeoff if one side has all positives, one side has all negatives, and you choose the side with the negatives :/
[05:15:58] <blei> a regex is a parser
[05:16:36] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[05:16:38] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[05:16:38] <nedbat> ztrawhcse: the bs4 solution will involve more details from the page, plus some regex at the end. It will be *more* fragile than a regex.
[05:16:41] <blei> its the right tool for almost every job, from an ergonomics perspective
[05:16:41] *** cdown_ is now known as cdown
[05:16:51] <blei> they are extremely easy to write, once you get comfortable with sed
[05:17:02] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[05:17:02] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[05:17:16] <nedbat> ztrawhcse: i don't think you can make a blanket statement, it all depends on the details of the job.
[05:17:52] <nedbat> ztrawhcse: but i think we've probably both said all we have to say about it
[05:17:53] <blei> bs4 is also sometimes used via python -c for quick one-liners, but not as often
[05:18:02] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 250 seconds)
[05:18:39] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Ping timeout: 256 seconds)
[05:18:43] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:19:12] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:19:25] <blei> the right place to have this argument is with the author of pandoc
[05:19:33] <blei> on github. good luck
[05:19:51] <nedbat> pandoc is great, i use it in my release-notes toolchain
[05:20:00] <ztrawhcse> blei: I am very comfortable with sed, it's the reason I feel qualified to say people should not use it if there is a better way :p
[05:20:20] <nedbat> ztrawhcse: i agree with you: they shouldn't use regex if there is a better way.
[05:22:25] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 272 seconds)
[05:22:29] *** cdown_ is now known as cdown
[05:23:15] <ztrawhcse> incidentally, in any situation where sed might be used, it's probably a shell and not python. So with that in mind, https://github.com/coderobe/hq is *very* cool for grabbing nodes out of an HTML input.
[05:24:16] <blei> YADSL
[05:24:22] *** Quits: nomic (~nomic@185.198.243.172) (Quit: Leaving)
[05:24:35] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[05:25:15] <twb> If you want "sed for HTML" that's called xmlstarlet.  Although you'll need to pipe it through tidy first, because HTML is a dumpster fire.
[05:25:43] <blei> not/a/bad/*
[05:26:37] <twb> hq appears to be doing broadly the same thing; I hadn't seen that before; thanks
[05:27:02] <nedbat> my latest find like that was jless, for exploring json files in a TUI
[05:28:42] <twb> https://cyber.com.au/~twb/.bin/fortune-snarf  is a simple horrible example
[05:28:55] <twb> Obviously these days I'd use python lxml
[05:29:39] <twb> Oh look, I already did: https://cyber.com.au/~twb/.bin/fortune-snarf.py
[05:29:59] *** Joins: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:57] *** Quits: luciusf1 (~luciusf@46.23.90.165) (Quit: WeeChat 3.2.1)
[05:33:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:33:11] *** Joins: white2 (~mahengrui@110.253.208.80)
[05:33:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:33:43] *** Joins: luciusf1 (~luciusf@46.23.90.165)
[05:34:45] *** Quits: white2 (~mahengrui@110.253.208.80) (Changing host)
[05:34:45] *** Joins: white2 (~mahengrui@user/mahengrui1)
[05:35:00] *** Joins: stockh0lm (~Andreas@p200300d2c7075000addd60e21c36287a.dip0.t-ipconnect.de)
[05:35:25] *** Joins: radu242407821 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[05:36:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:37:16] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7d00:994:fd3c:897e)
[05:37:55] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[05:38:35] *** Quits: stockholm (~Andreas@p200300d2c70393000030926e442b207a.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:39:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:39:21] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:39:26] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[05:41:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:41:19] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:41:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:43:03] *** Joins: sh0ne (~sh0ne@178.237.217.108)
[05:44:39] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[05:51:11] *** Joins: ejjfunky2 (~ejjfunky@125.164.19.196)
[05:52:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:53:03] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[05:54:12] *** Quits: ejjfunky (~ejjfunky@125.164.23.55) (Ping timeout: 240 seconds)
[05:54:46] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[05:55:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:55:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:56:54] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[05:58:47] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Read error: Connection reset by peer)
[05:59:47] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[06:00:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:01:43] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7d00:994:fd3c:897e) (Quit: Leaving)
[06:03:38] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 260 seconds)
[06:03:54] *** Quits: SOMBRIO (~SOMBRIO@177.137.119.132) (Quit: Client closed)
[06:03:58] *** Quits: sh0ne (~sh0ne@178.237.217.108) (Quit: Leaving)
[06:06:06] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 252 seconds)
[06:06:12] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[06:07:30] *** Joins: justAstache (~justache@user/justache)
[06:08:17] *** Joins: aknot (~aknot@2603:900a:1503:17bb:28c8:8367:d701:4e2d)
[06:09:31] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 245 seconds)
[06:13:43] *** Joins: Syzygy_ (~Syzygy@178-190-76-245.adsl.highway.telekom.at)
[06:14:25] *** Quits: Syzygy__ (~Syzygy@2001:871:265:1cdc:6de7:2cf3:5788:567b) (Remote host closed the connection)
[06:16:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:17:59] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[06:18:57] *** Quits: d3x (michal@bielaw.ski) (Quit: Lost terminal)
[06:20:58] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Quit: beli6147)
[06:21:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:21:53] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:22:39] *** Joins: kwakattak (~dogworm@2404:440c:1312:6c00:39c1:4e3d:9600:6c4b)
[06:23:58] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:f054:52da:d736:2045)
[06:24:06] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:25:23] *** Joins: Roey (~Roey@user/Roey)
[06:25:23] *** Roey is now known as HisTrudolfColors
[06:27:30] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:cc30:b0dd:74b7:eb58)
[06:27:47] *** Quits: devish (~devish@54-240-198-39.amazon.com) (Quit: Client closed)
[06:28:06] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:29:18] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:cc30:b0dd:74b7:eb58) (Quit: Quit)
[06:30:17] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b54c:f832:91af:f6f2) (Ping timeout: 240 seconds)
[06:30:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:31:48] *** HisTrudolfColors is now known as His
[06:31:52] *** His is now known as HisTrudeaulfColo
[06:32:07] *** HisTrudeaulfColo is now known as TrudeaulfColors
[06:35:09] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:37:28] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Quit: Leaving)
[06:40:11] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[06:40:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:42:50] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 272 seconds)
[06:45:05] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:45:22] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[06:45:39] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:48:12] *** Quits: martti (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[06:48:18] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:51:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[06:52:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:52:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:52:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:53:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:53:57] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[06:55:35] *** Quits: white2 (~mahengrui@user/mahengrui1) (Remote host closed the connection)
[06:55:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:55:57] *** Joins: white2 (~mahengrui@110.253.208.80)
[06:56:12] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:56:27] *** Quits: white2 (~mahengrui@110.253.208.80) (Changing host)
[06:56:27] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:58:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:59:12] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[07:00:02] *** Quits: zuplex (~zuplex@202.51.76.195) (Read error: Connection reset by peer)
[07:00:48] *** Joins: hwdyki (~hwdyki@user/hwdyki)
[07:01:02] *** Joins: prexe (~prexe@185.198.243.155)
[07:01:24] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[07:02:02] *** Quits: Deaygo (~Deaygo@let.deaygo.in) (Quit: Ping timeout (120 seconds))
[07:02:16] *** Joins: Deaygo (~Deaygo@let.deaygo.in)
[07:02:31] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:02:38] *** Joins: rajkohaxor (~rajkosto@178-221-217-125.dynamic.isp.telekom.rs)
[07:02:39] *** Quits: rajkohaxor (~rajkosto@178-221-217-125.dynamic.isp.telekom.rs) (Remote host closed the connection)
[07:03:28] *** Joins: adeliktas2 (~adeliktas@i59F4A44B.versanet.de)
[07:04:03] *** Quits: Socra (~Socra@206.217.216.21) (Ping timeout: 256 seconds)
[07:04:36] *** Quits: rajkosto (~rajkosto@178.220.66.235) (Ping timeout: 240 seconds)
[07:05:05] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Remote host closed the connection)
[07:05:11] *** Quits: adeliktas (~adeliktas@i59F5279A.versanet.de) (Ping timeout: 256 seconds)
[07:05:11] *** adeliktas2 is now known as adeliktas
[07:05:27] *** Joins: Socra (~Socra@206.217.216.21)
[07:05:27] *** Joins: prexe61 (~prexe@185.198.243.155)
[07:05:37] *** Joins: skapata (~Skapata@user/skapata)
[07:05:43] *** Quits: fluiD (~fluiD@161.97.225.170) (Quit: Leaving)
[07:05:56] *** Quits: prexe61 (~prexe@185.198.243.155) (Client Quit)
[07:06:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:06:07] *** Joins: millido (~millido@84.210.150.128)
[07:06:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:06:12] *** Parts: prexe (~prexe@185.198.243.155) ()
[07:06:38] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:07:29] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:44] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 256 seconds)
[07:08:16] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Remote host closed the connection)
[07:08:40] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[07:09:18] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:10:27] *** TrudeaulfColors is now known as Roey
[07:10:51] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:11:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:12:34] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[07:13:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:14:45] *** Joins: julius (~jully@95.74.77.25)
[07:15:09] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[07:15:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:15:36] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Remote host closed the connection)
[07:16:00] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:16:42] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Remote host closed the connection)
[07:17:58] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:18:37] *** Quits: esther (~esther@136.62.7.216) (Ping timeout: 240 seconds)
[07:19:23] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:19:24] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[07:19:58] *** Joins: NealRame (~a@122-199-48-238.ip4.superloop.com)
[07:23:26] *** Joins: NiD27 (~nid27@49.205.148.49)
[07:24:13] *** Parts: capjack[m] (~raffaem@2001:470:69fc:105::393) ()
[07:24:17] *** Telvana is now known as yuuup
[07:24:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:24:59] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Remote host closed the connection)
[07:25:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:25:18] *** Joins: oncall-pokemon (uid134758@id-134758.uxbridge.irccloud.com)
[07:25:24] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:25:47] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[07:26:51] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:26:54] <oncall-pokemon> Can somebody help me. I have a list of class instance objects. I want to iterate all of them and check of a value like self.name is a duplicate. Does anybody have something to get me going. I'm having trouble even starting.
[07:27:00] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 240 seconds)
[07:27:43] *** yuuup is now known as Telvana
[07:28:08] <twb> oncall-pokemon: for klass in klasses: if klass.getattr('name').is_duplicate(): fart()
[07:28:29] <twb> oncall-pokemon: not sure how you define "duplicate".
[07:28:47] <oncall-pokemon> just meaning it's the same value
[07:28:53] <twb> same as what
[07:29:30] <oncall-pokemon> as another one. Like if instance A had A.name = "Peter" and B.name = "Peter" then they are the same
[07:30:06] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:07] *** Quits: not_not (~not_not@193.178.220.11) (Ping timeout: 256 seconds)
[07:30:19] <twb> well the naive way would be to iterate over it twice
[07:30:45] <oncall-pokemon> it's a ton of data. I mean a lot. so any efficiencies would be good.
[07:30:52] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Quit: WeeChat 3.4)
[07:31:27] *** Joins: saroy (~Sandipan@43.252.250.104)
[07:31:27] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:31:28] <twb> do you just want to know which names occur more than once?
[07:31:34] <twb> Or do you want the objects that applies to?
[07:31:59] <twb> Do you want only the 2nd/3rd/4th object that has a duplicate name, or also the 1st object?
[07:32:04] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Remote host closed the connection)
[07:32:10] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:33:01] <twb> acc = set(); for x in xs: if x.name in acc: print('SKIP', x); else print('KEEP', x); acc.add(x.name)
[07:33:16] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:33:25] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[07:33:56] <oncall-pokemon> yeah all of them actually. so no shortcirtcuit
[07:33:57] <oncall-pokemon> let me see
[07:34:07] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Remote host closed the connection)
[07:34:23] *** Quits: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a) (Quit: Leaving)
[07:34:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:34:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:34:32] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:34:49] <oncall-pokemon> i see what you did there twb
[07:35:13] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 256 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:46] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Remote host closed the connection)
[07:37:09] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:37:19] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Client Quit)
[07:37:42] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:38:03] <twb> itertools.groupby(xs, lambda x: x.name)
[07:38:07] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:38:27] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[07:38:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:39:00] <twb> for k, g in itertools.groupby(xs, lambda x: x.name): if len(g) > 1: print('SKIP', g)
[07:39:29] <twb> Oh note tht this is like uniq(1) so you need something like
[07:39:44] <twb> for k, g in itertools.groupby(sorted(xs, key=lambda x: x.name), key=lambda x: x.name): if len(g) > 1: print('SKIP', g)
[07:39:56] <twb> hence O(n log n) at the very least
[07:40:30] <BrenBarn> I don't think you want groupby, as that only finds consecutive groups
[07:40:35] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[07:40:35] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[07:40:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:41:13] <twb> hence sort
[07:41:30] <twb> If you want to write it using a right fold, go nuts
[07:41:38] <twb> That's beyond my ICBF factor :-)
[07:42:13] <BrenBarn> you could use `collections.defaultdict` to do `dd = defaultdict(list)` and then like `for item in list: dd[item.name].append(item)`
[07:42:26] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[07:42:55] *** Quits: sreve (~quassel@p549d70f4.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:43:00] *** Joins: sreve_ (~quassel@p4ff44fcc.dip0.t-ipconnect.de)
[07:43:14] <BrenBarn> er, I mean like `for item in list_of_items` there, bad choice of variable name
[07:43:35] <oncall-pokemon> all good advice. let me tinker. Thank you both
[07:46:57] *** Quits: purple_cthulhu (~rax@185.108.96.25) (Quit: Leaving.)
[07:48:55] *** Joins: jim (~jim@about/linux/staff/jim)
[07:50:10] *** Joins: cul8r (~cul8r@76.113.95.199)
[07:50:18] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[07:50:32] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[07:52:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:52:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:53:03] *** Quits: zumba_addict65 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[07:53:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:53:37] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:56:10] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:dd2f:82db:948a:3ff7)
[07:56:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:56:12] *** Quits: nehsou^ (~nehsou@50.233.120.162) (Ping timeout: 240 seconds)
[07:56:36] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Ping timeout: 240 seconds)
[07:56:43] *** Joins: SaltHilStroller_ (~SaltHillS@198-84-207-146.cpe.teksavvy.com)
[07:56:43] *** Joins: SaltHillStroller (~SaltHillS@198-84-207-146.cpe.teksavvy.com)
[07:57:00] *** Quits: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net) (Ping timeout: 240 seconds)
[07:57:32] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[07:58:15] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[07:58:16] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[07:58:16] *** Joins: nortoh (~nortoh@user/nortoh)
[07:58:29] *** Joins: julius2 (~jully@95.74.77.25)
[07:59:25] *** Quits: julius2 (~jully@95.74.77.25) (Client Quit)
[08:00:00] *** Joins: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net)
[08:00:05] *** Quits: julius (~jully@95.74.77.25) (Quit: Leaving)
[08:00:27] *** Joins: julius (~jully@95.74.77.25)
[08:00:36] *** Joins: julius2 (~jully@95.74.77.25)
[08:00:46] *** Quits: julius2 (~jully@95.74.77.25) (Client Quit)
[08:01:28] *** Quits: saroy (~Sandipan@43.252.250.104) (Remote host closed the connection)
[08:02:26] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[08:02:32] *** Joins: ali12341 (~al@user/ali1234)
[08:03:50] *** Quits: SaltHilStroller_ (~SaltHillS@198-84-207-146.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[08:03:50] *** Quits: SaltHillStroller (~SaltHillS@198-84-207-146.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[08:04:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:05:31] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:dd2f:82db:948a:3ff7) (Quit: I have gone to sleep. ZZZzzz…)
[08:05:35] *** Quits: julius (~jully@95.74.77.25) (Remote host closed the connection)
[08:05:58] *** Joins: julius (~jully@95.74.77.25)
[08:06:57] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 256 seconds)
[08:08:01] *** Joins: Elodin (~elodin@user/elodin)
[08:08:35] *** Quits: NiD27 (~nid27@49.205.148.49) (Remote host closed the connection)
[08:09:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:10:39] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[08:10:52] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.4)
[08:11:21] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[08:12:54] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[08:13:45] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[08:13:57] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[08:14:57] *** Quits: aknot (~aknot@2603:900a:1503:17bb:28c8:8367:d701:4e2d) (Ping timeout: 240 seconds)
[08:17:54] *** Joins: txtsd (~txtsd@user/txtsd)
[08:18:00] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[08:20:05] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[08:21:38] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[08:22:29] *** Joins: saroy (~Sandipan@43.252.250.104)
[08:22:32] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[08:23:52] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Quit: WeeChat 3.4)
[08:24:15] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[08:24:21] *** Joins: matsaman (~matsaman@user/matsaman)
[08:25:39] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Quit: WeeChat 3.3)
[08:25:47] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:26:17] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[08:27:20] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b54c:f832:91af:f6f2)
[08:27:59] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Client Quit)
[08:28:01] *** Quits: sbrown (~sbrown@66.44.16.44) (Quit: Leaving…)
[08:28:21] *** Joins: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[08:28:52] *** Quits: blei (~blei@c-73-153-189-5.hsd1.co.comcast.net) (Quit: Client closed)
[08:30:11] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[08:33:56] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:34:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:36:18] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[08:37:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:37:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:38:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:38:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:39:17] *** Joins: Limits (~Limits@user/Limits)
[08:40:02] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[08:40:03] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[08:40:46] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[08:43:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[08:44:06] *** Joins: pepper (~pepper@user/pepper)
[08:44:18] *** Joins: alxndr (~alexander@ybti.net)
[08:45:39] <hwdyki> why am i getting FAILED! => {"msg": "Unexpected templating type error occurred on ({%- set size = (item.value.size_bytes / 1024 / 1024 / 1024 ) | round( 0, 'ceil' ) | int -%}\n{{ total_size | default(0) + size }}\n): can only concatenate str (not \"int\") to str"} when trying add up numbers? https://pastebin.com/hau2yqcx
[08:45:53] <hwdyki> sorry wrong channel
[08:47:03] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:47:45] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:48:02] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[08:48:29] *** Joins: bluedust (~bluedust@103.165.167.221)
[08:49:19] *** Joins: thiras (~thiras@user/thiras)
[08:51:21] *** Joins: crashrep (~crashrep@user/crashrep)
[08:53:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:53:54] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[08:54:27] *** Joins: CrossWorry (~ace@43.231.28.166)
[08:57:06] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:57:43] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:00:30] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:01:01] *** Joins: dvx (~dvx@5.181.92.64)
[09:02:36] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[09:02:49] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[09:03:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:03:51] *** Quits: CrossWorry (~ace@43.231.28.166) (Quit: Leaving)
[09:05:00] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[09:09:58] *** Quits: s1gyn (~s1gyn@user/s1gyn) (Quit: WeeChat 3.0.1)
[09:12:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[09:12:09] *** Joins: jmd (~user@de.cellform.com)
[09:12:41] *** Joins: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net)
[09:14:17] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[09:14:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[09:15:22] *** Quits: nuclearg2 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Quit: WeeChat 3.4)
[09:22:26] *** Quits: jrjsmrtn (~jrjsmrtn@ip-213-49-42-24.dsl.scarlet.be) (Ping timeout: 272 seconds)
[09:24:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:26:18] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be)
[09:27:37] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[09:29:12] *** Joins: crashrep (~crashrep@user/crashrep)
[09:29:37] *** Joins: thiras (~thiras@user/thiras)
[09:30:37] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:32:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:32:49] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.231)
[09:32:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:33:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[09:33:29] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[09:33:32] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.231) (Max SendQ exceeded)
[09:34:03] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.255)
[09:35:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.255) (Max SendQ exceeded)
[09:35:59] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.231)
[09:36:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:36:27] *** Joins: rajkosto (~rajkosto@178.220.244.219)
[09:36:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:37:10] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[09:37:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.231) (Max SendQ exceeded)
[09:37:21] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[09:37:44] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.231)
[09:37:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[09:39:02] *** Joins: mexen (uid495612@user/mexen)
[09:39:57] *** Joins: newpy (~newpy@2601:280:4381:1390:2081:1321:5668:533c)
[09:40:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:41:24] <stockh0lm> http://paste.debian.net/1231827/
[09:41:55] <stockh0lm> this works on my windows machine, but not on my linux machine. both run python 3.7
[09:42:11] <newpy> I'm trying to reshape b (and/or p) to broadcast such that each row of b is added to each row of p: https://paste.ee/p/G38Q0
[09:42:55] <stockh0lm> why would it not work?! i does not seem to receive any keyboard events at all.
[09:43:16] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:43:56] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:2e1e:4720:c56a:816f)
[09:47:13] *** Joins: zerok (~zerok@user/zerok)
[09:47:47] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[09:47:49] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[09:48:26] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[09:48:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:49:24] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 252 seconds)
[09:49:48] *** Quits: Lucanis (~Lucanis@user/lucanis) (Ping timeout: 256 seconds)
[09:50:32] <newpy> stockh0lm, your code is different from the docs: https://pynput.readthedocs.io/en/latest/keyboard.html
[09:51:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:51:28] <newpy> oh n/m it has a non-blocking version too
[09:51:44] <stockh0lm> newpy, that is correct. and that is because the docs say to use a queue for long running processes.
[09:51:49] *** Joins: Pixi (~Pixi@user/pixi)
[09:51:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:53:20] <Repiphany> newpy: b + p[:,:,np.newaxis]
[09:53:30] <stockh0lm> is there a better way to achive that, newpy?
[09:54:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:54:28] <Repiphany> Wait, that's not what you wanted
[09:54:29] <newpy> stockh0lm try adding listener.wait()
[09:54:43] <stockh0lm> where?
[09:55:11] <newpy> after start()
[09:56:07] *** Joins: kts (~kts@103.73.237.124)
[09:56:09] *** Joins: AlanMD_ (~AlanMD@86.124.30.89)
[09:56:27] <stockh0lm> that did it, newpy! thank you!
[09:56:38] <stockh0lm> why does it help?
[09:56:41] <Repiphany> newpy: b + p[:, np.newaxis, :]
[09:56:49] <newpy> stockh0lm, because you need to wait for the listener thread to set up
[09:57:05] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[09:57:20] <newpy> Repiphany, I'll try it, I was thinking I might have to somehow make the columns of b the rows of a 3d array
[09:57:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:57:56] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[09:58:18] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 256 seconds)
[09:58:29] *** Joins: jmd (~user@de.cellform.com)
[09:58:29] *** Joins: blei (~blei@c-73-153-189-5.hsd1.co.comcast.net)
[10:00:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[10:00:36] <newpy> Repiphany, hmm, only odd part is the way it prints out (not that that matters really)
[10:00:47] <newpy> ty
[10:01:07] <newpy> oh wait, maybe it does matter
[10:01:30] <Repiphany> What shape were you expecting
[10:01:32] <newpy> I thought it was nesting all the b[0] additions on the left-hand column
[10:01:42] <newpy> and all the b[1] additions on the right-hand column
[10:02:03] <newpy> but it seems to just alternate between two b[0] additions and two b[1] additions
[10:02:11] <Repiphany> (b + p[:, np.newaxis, :])[i] == b + p[i]
[10:02:18] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:02:44] <newpy> hmm
[10:03:17] <Repiphany> All sorts of ways to reshape it depending on what you need to do later
[10:03:28] <newpy> afterwards I'd like to do a calculation using all the b[0]+p values
[10:03:36] <newpy> (and another using all the b[1]+p values)
[10:03:39] <newpy> I see
[10:03:57] *** Joins: manti7 (~manti7@176.10.104.94)
[10:04:21] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[10:06:01] <Repiphany> You could use rollaxis too, `np.rollaxis(b + p[:, np.newaxis, :],  1) # (2,5,2)`
[10:07:14] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[10:07:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:07:39] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:07:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:08:16] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 245 seconds)
[10:08:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:09:24] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:09:41] *** Joins: masoudd (~masoudd@user/masoudd)
[10:09:49] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:12:07] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:12:08] <newpy> Repiphany, I think rollaxis works, docs say I should prefer moveaxis?
[10:12:29] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[10:12:56] *** Joins: white2 (~mahengrui@110.253.208.80)
[10:13:57] *** Joins: han-solo (~hanish@user/han-solo)
[10:14:47] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[10:15:44] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[10:15:48] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[10:15:49] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[10:16:06] *** Joins: upsala (~zcb@185.213.155.232)
[10:17:50] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[10:17:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:18:46] *** Quits: rajkosto (~rajkosto@178.220.244.219) (Read error: Connection reset by peer)
[10:18:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[10:21:13] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:21:26] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[10:21:45] *** Quits: blei (~blei@c-73-153-189-5.hsd1.co.comcast.net) (Quit: Client closed)
[10:22:14] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[10:22:39] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[10:22:39] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[10:25:17] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[10:27:46] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:27:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:28:14] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:28:29] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[10:29:00] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b54c:f832:91af:f6f2) (Ping timeout: 240 seconds)
[10:32:19] *** Quits: white2 (~mahengrui@110.253.208.80) (Changing host)
[10:32:19] *** Joins: white2 (~mahengrui@user/mahengrui1)
[10:33:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:33:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:34:10] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:34:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[10:34:48] *** Quits: ybonatakis (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz) (Ping timeout: 250 seconds)
[10:35:25] *** Quits: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[10:36:23] *** Quits: Strom (strom@fedora/strom) ()
[10:36:27] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:36:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:36:57] *** Joins: ybonatakis (~iob@90-182-197-112.rcp.o2.cz)
[10:38:25] *** Joins: Strom (strom@fedora/strom)
[10:39:28] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[10:40:22] *** Quits: Strom (strom@fedora/strom) (Client Quit)
[10:40:29] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:41:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:41:29] *** Joins: tejr (~tejr@user/tejr)
[10:41:52] *** Quits: p-i-_ (~Ohmu@183.89.27.225) (Remote host closed the connection)
[10:42:02] *** Joins: Strom (~strom@fedora/strom)
[10:42:41] *** Quits: montpol (montpol@fine.mouses.xyz) (Remote host closed the connection)
[10:42:41] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:5848:e615:a642:6b3d)
[10:43:06] *** Joins: montpol (montpol@fine.mouses.xyz)
[10:43:07] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:43:12] *** Quits: montpol (montpol@fine.mouses.xyz) (Client Quit)
[10:43:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:44:24] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:e2fe:45df:a7bb:da81)
[10:45:06] *** Quits: shantaram (shan@cyblog/maintainer/shan) (Remote host closed the connection)
[10:45:37] *** Joins: trannus_aran (~sammi@c-98-244-55-191.hsd1.ca.comcast.net)
[10:45:51] *** Joins: montpol (montpol@fine.mouses.xyz)
[10:47:43] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[10:49:34] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: quick everyone outta the universe)
[10:49:57] *** Joins: mrwick (~mrwick@user/mrwick)
[10:50:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:51:47] *** Joins: fdan (~fdan@103.215.168.1)
[10:51:47] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[10:53:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:53:49] *** Joins: superaga (~superaga@mob-194-230-155-117.cgn.sunrise.net)
[10:54:17] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[10:54:17] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[10:54:17] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[10:54:31] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[10:54:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:54:37] *** Quits: Strom (~strom@fedora/strom) ()
[10:54:38] *** Joins: xa0s (~xa0s@mab.sdf.org)
[10:55:21] *** Joins: parv (~quass@user/parv)
[10:55:22] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[10:56:00] *** Joins: shan (shan@cyblog/maintainer/shan)
[10:58:12] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[10:58:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:58:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:02:45] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[11:04:24] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[11:05:16] *** Joins: vanessa (~vanessa@103.160.128.7)
[11:05:40] *** Quits: audiomouse (~audio@2603-8081-1800-4ee1-4356-668f-837f-de3f.res6.spectrum.com) (Quit: Leaving)
[11:05:50] *** Joins: audio (~audio@user/audio)
[11:07:35] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[11:07:41] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:09:18] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[11:10:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[11:10:18] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:10:20] *** Quits: ybonatakis (~iob@90-182-197-112.rcp.o2.cz) (Ping timeout: 250 seconds)
[11:10:53] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[11:11:36] *** Joins: ybonatakis (~iob@90-182-197-112.rcp.o2.cz)
[11:11:37] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[11:11:51] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[11:12:22] <stockh0lm> Now i integrated my code (that worked as intended in the small demo program) into my bigger project. Now it stopped working in a weired way: What could be the reason why my pynput keyboard listener does not receive events when run from the terminal, but does get events when run within pycharm?
[11:12:41] *** Joins: skapata (~Skapata@user/skapata)
[11:13:12] *** Joins: cosimone (~user@93-34-132-33.ip49.fastwebnet.it)
[11:13:29] <stockh0lm> in the bigger project, run from within pycharm it works, but not when run from the command line
[11:13:52] <stockh0lm> same python version, same pyenv
[11:16:36] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[11:16:47] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[11:18:01] <bookworm> stdin not pointing to what you think it does?
[11:18:09] <bookworm> or the terminal swallowing the keys?
[11:18:56] <stockh0lm> how can i check that?
[11:19:00] <stockh0lm> this is on linux
[11:20:11] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.231) (Ping timeout: 256 seconds)
[11:20:32] <stockh0lm> what is the standard way of receiving input from the keyboard in python? read()? surely there is something better?
[11:22:11] *** Joins: rendar (~rendar@user/rendar)
[11:22:18] *** Joins: maxzor_ (~maxzor@2a01cb04054faa0015c316badb20e25a.ipv6.abo.wanadoo.fr)
[11:22:19] *** Joins: gusto (~Augustus@109.255.100.54)
[11:22:41] <bookworm> depends on what you are doing, there's no standard
[11:22:56] *** Joins: pycode (~pycode3@2001:b07:5d28:551:8cd3:c6f7:4118:8d3b)
[11:23:11] <bookworm> for quick input, input() is fine, for more involved things read or something like ncurses is more suitable
[11:23:21] <bookworm> really depends on what you are doing
[11:23:27] *** Joins: palasso (~palasso@user/palasso)
[11:24:10] <stockh0lm> i will try input(), this is just for testing if *anything* comes through.
[11:24:16] <Repiphany> https://github.com/boppreh/keyboard just needs to run as root on linux
[11:24:45] *** Joins: tWqaq_ (~tWqaq@101.93.138.74)
[11:24:53] <bookworm> If you are on xorg anything can do that without root as well
[11:25:02] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: Leaving)
[11:25:19] <bookworm> if you are on Wayland it's slightly more complicated than that as only the compositor can do that
[11:25:49] *** Parts: zazoon (~dev@213.133.91.246) (Leaving)
[11:26:09] *** Joins: MajorBiscuit (~MajorBisc@c-001-029-040.client.tudelft.eduvpn.nl)
[11:26:34] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[11:27:00] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:f054:52da:d736:2045) (Ping timeout: 240 seconds)
[11:27:30] *** Joins: Strom (strom@fedora/strom)
[11:28:18] <stockh0lm> so input() is able to receive stuff.
[11:28:29] <stockh0lm> wtf
[11:28:35] *** Joins: ice9 (~ice9@user/ice9)
[11:28:47] <bookworm> how are you capturing the input in your actual code?
[11:29:09] <stockh0lm> with pynput, i create GlobalHotKeys()
[11:29:41] <stockh0lm> i have debug output within the functions that process the HotKeys
[11:29:43] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:19] <stockh0lm> that is not reached in the progam, if started from the terminal. i run in gnome.
[11:30:33] <stockh0lm> i will try to start it on a bare metal terminal
[11:30:42] <stockh0lm> outside wayland or X
[11:31:37] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:06] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (Excess Flood)
[11:32:17] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[11:32:23] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:32:32] *** Quits: kwakattak (~dogworm@2404:440c:1312:6c00:39c1:4e3d:9600:6c4b) (Remote host closed the connection)
[11:32:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.255)
[11:32:47] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[11:32:53] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[11:32:54] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[11:33:12] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Client Quit)
[11:33:32] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:34:11] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:37:57] *** Joins: jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch)
[11:41:43] *** Joins: otmi (~mito@5.149.156.72)
[11:41:44] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[11:42:58] *** H4Z3 is now known as help
[11:43:06] *** help is now known as snowtie
[11:43:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:43:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:44:17] *** Quits: Limits (~Limits@user/Limits) (Ping timeout: 240 seconds)
[11:44:33] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[11:44:45] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:45:02] *** Quits: maxzor_ (~maxzor@2a01cb04054faa0015c316badb20e25a.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[11:45:44] *** Joins: nomic (~nomic@185.198.243.172)
[11:46:24] *** Joins: Limits (~Limits@user/Limits)
[11:47:27] *** Joins: chele (~chele@user/chele)
[11:48:00] <mcon1> second attempt: I have a complex application using, among others, PyQt5 and pyqtlet2 with all their dependencies. It works as expected under Linux. Now I need to pack it to have it work on a Win10 desktop for "non programmer" users. How should I proceed? I see there are several alternatives but I know none of them and I would like to avoid "false starts" as much as possible.
[11:48:08] *** Quits: otmi (~mito@5.149.156.72) (Quit: Ухожу я от вас (xchat 2.4.5 или старше))
[11:48:34] <twb> stockh0lm: input() just talks to /dev/stdin or /dev/tty
[11:48:43] *** snowtie is now known as H4Z3
[11:49:01] *** Joins: otmi (~mito@5.149.156.78)
[11:49:02] *** Quits: H4Z3 (~H4ZE@165.227.36.29) (Changing host)
[11:49:02] *** Joins: H4Z3 (~H4ZE@user/H4Z3)
[11:49:13] *** Quits: otmi (~mito@5.149.156.78) (Client Quit)
[11:50:48] <Repiphany> mcon1: Try PyInstaller
[11:50:54] <apollo13> mcon1: I had good experience (well somewhat) with pyinstaller
[11:50:58] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:51:37] <audio> anyone have any idea why invoice.is_paid (and invoice.date_paid) never get set? https://bpa.st/5DUQ
[11:51:57] <twb> can pyinstaller cross-build or would you have to run it on a w11 system
[11:52:47] <Repiphany> You can't cross-build from linux to windows if that's what you mean
[11:53:20] <Repiphany> (maybe messing around with wine or something but that seems like a bucket of trouble)
[11:53:31] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:7799:3815:c396:4ca9:5cba)
[11:54:01] *** Joins: otmi (~mito@5.149.156.73)
[11:54:12] <mcon1> apollo13: Any specific pitfalls to guard from?
[11:54:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:54:44] <apollo13> mcon1: plenty :D The more you know about python module loading and dll loading the better
[11:55:03] *** Quits: oncall-pokemon (uid134758@id-134758.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:55:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:55:10] <twb> Repiphany: that's what I meant, yeah
[11:55:20] <twb> Repiphany: I don't care if my users run windows, so long as *I* don't have to
[11:56:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:57:02] *** Quits: p-i- (~Ohmu@2403:6200:8978:7799:5848:e615:a642:6b3d) (Ping timeout: 240 seconds)
[11:57:40] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:58:13] <mcon1> apollo13: That is exactly what I didn't want to hear ;( I'm mostly a Linux guy so I have a afir understanding of Python module loading, but I know very little about .dll (beside they have the same role as .so files)
[11:58:23] *** Quits: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48) (Read error: Connection reset by peer)
[11:58:39] <apollo13> mcon1: well knowing about .so files helps as well. Personally I'd start small
[11:58:43] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:58:55] *** Joins: savolla (~quassel@95.10.204.117)
[11:58:55] <apollo13> ie start a python project with just a pyqt mainwindow and then package that
[11:59:00] <apollo13> then add the rest of your deps
[11:59:01] *** Joins: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48)
[11:59:27] *** Quits: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48) (Read error: Connection reset by peer)
[12:00:04] *** Joins: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48)
[12:00:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:01:23] <audio> anyone have any idea why invoice.is_paid (and invoice.date_paid) never get set? https://bpa.st/5DUQ
[12:01:47] <mcon1> apollo13: To be very clear: you are saying there is no (semi)automated way to take a python project, complete with its venv, and "repackage" it to make it Windows-friendly, right?
[12:02:03] <apollo13> mcon1: I would call pyinstaller semi-automated
[12:02:21] <apollo13> but depending on your code and the dependencies you use it can still be some work
[12:02:24] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[12:03:21] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:03:40] <mcon1> apollo13: Ok. Thanks. I will give it a spin... expect further questions though ;)
[12:03:44] *** Joins: kosh (~kosh@user/kosh)
[12:03:49] <apollo13> mcon1: I don't use windows, so…
[12:04:16] <mcon1> apollo13: I also TRY not to use it...
[12:04:17] <apollo13> but pyinstaller already can be a pain on linux, I don't expect it to be easier on windows :D
[12:04:19] *** Joins: elnino (~elnino@41-184-174-159.rv.ipnxtelecoms.com)
[12:05:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:05:53] *** Joins: Klinda (~superleag@user/klinda)
[12:06:04] <twb> apollo13: nothing obviously wrong there at the python syntax level (e.g. scoping)
[12:06:07] <twb> er, @audio
[12:06:30] <twb> audio: I guess talk to the paypal library owner and ask them how to debug it
[12:06:50] <apollo13> audio: most likely because the if above does not match
[12:07:02] *** Joins: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net)
[12:07:11] <twb> apollo13: +1 good guess
[12:07:22] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:07:30] <twb> audio: add "else: logging.warning('DERP?')" guards
[12:07:34] *** Joins: frost (~frost@user/frost)
[12:08:02] *** Quits: a210222 (~alex@218-215-213-197.sta.wbroadband.net.au) (Quit: Leaving.)
[12:09:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:10:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:11:26] *** Joins: Barones (~Barones@user/Barones)
[12:11:50] *** Quits: CrypticSquared (~CrypticSq@user/crypticsquared) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[12:12:02] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:12:02] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:12:02] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:12:05] *** Quits: rddd (~user@c-407ce255.012-81-73746f39.cust.ownit.se) (Read error: Connection reset by peer)
[12:13:09] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:13:44] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 256 seconds)
[12:13:58] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[12:14:06] *** Joins: CrypticSquared (~CrypticSq@115.69.19.26)
[12:15:45] *** Joins: rajkosto (~rajkosto@93-86-12-136.dynamic.isp.telekom.rs)
[12:17:04] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:17:27] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:17:34] <vanessa> hello everybody
[12:18:10] <vanessa> what could be the reason for python segfaulting when I import a library?
[12:18:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:18:51] <bjs> vanessa: the obvious reason is the library code segfaults
[12:18:55] <bjs> which library?
[12:19:05] <apollo13> and how did you install the library
[12:19:27] <apollo13> also it must be a library containing c code, python does not (often) segfault
[12:19:32] <vanessa> I used conda to install pytorch and if I import the library it segfaults
[12:19:38] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:7799:3815:c396:4ca9:5cba) (Remote host closed the connection)
[12:19:46] <apollo13> what happens if you just pip install it?
[12:19:50] *** Joins: faris (~faris@lfbn-idf1-1-963-34.w86-238.abo.wanadoo.fr)
[12:19:59] <twb> That looks like some kinda CUDA stuff
[12:20:11] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:bd02:d02c:e3df:fcf1)
[12:20:21] <twb> vanessa: did you make sure to install the flavour of torch that works on your particular GPU?
[12:20:25] <apollo13> I guess conda redistributes that pre-packaged which means your system has to match the expected environment properly
[12:20:37] <twb> I vaguely recall there's separte "nvidia" and "everyone else" packages
[12:20:52] <vanessa> the exact error is `fish: Job 1, 'time python renderer.py' terminated by signal SIGSEGV (Address boundary error)`
[12:21:41] *** dcaro_away is now known as dcaro
[12:21:56] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[12:22:00] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[12:22:02] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[12:23:02] <white2> try pip install command
[12:23:48] <vanessa> twb: when I create a new file and import pytorch, the code runs without any error.
[12:24:04] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[12:24:14] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[12:24:25] <twb> vanessa: so the problem is in your own existing code?
[12:24:43] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[12:24:51] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:25:22] <vanessa> yes, I guess my own code is the culprit
[12:25:27] *** Joins: darksun (~darksun@user/darksun)
[12:25:46] <vanessa> where should I be looking ?
[12:25:53] *** Quits: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48) (Read error: Connection reset by peer)
[12:26:21] <twb> I would start with a simple !bisect
[12:26:27] <twb> !bisect
[12:26:31] *** Joins: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48)
[12:26:36] *** Quits: kts (~kts@103.73.237.124) (Quit: Konversation terminated!)
[12:26:53] *** Quits: onichomp (~onichomp@2806:264:4408:1f2:e911:cc31:4d8c:5e48) (Read error: Connection reset by peer)
[12:26:54] <vanessa> twb: ok.
[12:26:56] <twb> OK, I don't know how to drive #python's bot.  Comment out half your code, see if the problem still occurs.  If not, it's in the half you commented out
[12:27:08] <twb> Keep halving until you've conquered Gaul or whatever
[12:27:16] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b54c:f832:91af:f6f2)
[12:27:24] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[12:27:46] *** Joins: martti (~martti@46-126-48-136.dynamic.hispeed.ch)
[12:28:21] <vanessa> I have seen my fair share of segfaults in C, but never seen in Python before.
[12:29:28] *** Joins: XV9 (~XV8@2601:5cb:c001:50::5524)
[12:30:03] <vanessa> I never thought segfault are possible in interpreted languages since the interperter should keep track of ownership, garbage collection, heap allocation and stuffs
[12:30:09] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Quit: You have been kicked for being idle)
[12:30:12] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Ping timeout: 240 seconds)
[12:30:43] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[12:30:44] <Repiphany> PyTorch isn't pure python
[12:30:57] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[12:30:57] *** Parts: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) ()
[12:31:01] <bjs> vanessa: for sure the library you're using isn't written in Python
[12:32:40] *** Quits: trannus_aran (~sammi@c-98-244-55-191.hsd1.ca.comcast.net) (Quit: Client closed)
[12:33:13] *** Quits: faris (~faris@lfbn-idf1-1-963-34.w86-238.abo.wanadoo.fr) (Quit: Lost terminal)
[12:33:17] *** Quits: kujo1 (~kujo@188.166.12.52) (Ping timeout: 256 seconds)
[12:34:12] <bjs> Python on its own shouldn't segfault,  but you can write libraries for Python in C and then import them. Lots of libraries do this internally, e.g. numpy and pytorch and such, so if the installation goes wrong or if you use the library wrong or if the library just has bugs it can segfault
[12:34:17] <vanessa> yes PyTorch is written in CUDA C
[12:34:41] <bjs> (there are also some cases where Python alone can segfault but they are weird edge cases that probably don't apply here)
[12:35:19] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[12:35:44] <KirkMcDonald> e.g. You can convince ctypes to segfault pretty trivially. But maybe that's cheating.
[12:35:51] <twb> vanessa: pytorch at least *supports* builds that work with no GPU installed.  This is what Debian ships
[12:35:59] *** Joins: paul424 (~tom@ip-5-172-234-175.multi.internet.cyfrowypolsat.pl)
[12:37:07] <twb> KirkMcDonald: also clearly-stupid things along the lines of os.exec('/', ['/']) can probably be convinced to segfault
[12:37:22] <p-i-> VSCode is being awkward again. I've created a .venv in my project root folder and activated it on the CLI. VSCode confirms (bottom left) it's using that .venv. I've done `pip install arrow`. But the hilighter isn't picking up `pip import arrow`.
[12:37:33] *** Joins: zaz\ (~zaz@poneybl.eu)
[12:37:41] <bjs> p-i-: pip import?
[12:37:50] <p-i-> sorry, pip install
[12:37:53] *** Joins: kujo1 (~kujo@188.166.12.52)
[12:37:58] <twb> I don't know offhand if you can use os to simply read from a really high memory address
[12:38:14] <p-i-> It was working fine yesterday before I create a fresh project dir and copied files over
[12:38:25] *** Joins: kts (~kts@103.73.237.124)
[12:38:28] <bjs> twb: ctypes can,  but these kind of things are the cheating/trivial variety
[12:38:54] <twb> I was trying to be generous and find an attack that would work in pypy and ironpython, not just cpython
[12:38:57] <bjs> there are also ways to crash the interpreter directly, generally with infinitely recursive structures
[12:39:14] *** Parts: hwdyki (~hwdyki@user/hwdyki) ()
[12:39:18] <bjs> that eventually smash the stack I guess
[12:39:28] <vanessa> twb: I think that is the default for pytorch to use the CPU version unless I ask GPU execution
[12:39:28] <twb> Does python have a syntax for a literal that includes itself?  Or do you have to construct it by mutation?
[12:39:44] <bjs> twb: no syntax
[12:39:52] <amogorkon> the return of the barber
[12:39:57] <twb> vanessa: oh OK.  I thought cuda had like "USE flags" for that
[12:40:14] <twb> in Lisp it's simply #1=(#1#)
[12:40:49] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[12:40:57] <amogorkon> what if the barber doesn't want to shave himself because he wants to become a lumberjack :o
[12:41:06] *** Joins: tejr (~tejr@user/tejr)
[12:41:14] *** Joins: tobybl_ (~tobybl@229.193.115.87.dyn.plus.net)
[12:41:35] <vanessa> so I found this page https://docs.python.org/3/c-api/stable.html it is pretty cool that I can write my code in C and call it from Python
[12:42:01] <bjs> vanessa: see also cffi, which lets you basically call any C code from Python
[12:42:21] <p-i-> There's quite a lot of choice for inlining C/C++ these days
[12:42:37] *** Quits: kts (~kts@103.73.237.124) (Client Quit)
[12:42:38] <twb> oh let's not bring up C++
[12:43:12] <KirkMcDonald> vanessa: The C API is rather tedious to use.
[12:43:12] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 272 seconds)
[12:43:20] <kosh> I like C++
[12:43:25] <p-i-> https://github.com/Lnk2past/copperhead <-- nice C++ inliner
[12:43:34] <p-i-> I like it when it behaves
[12:43:39] <vanessa> bjs: that seems even cool and do without ABI
[12:43:54] <p-i-> I like it less when it spits out a 300 line Template Exception traceback
[12:44:02] <bjs> vanessa: without ABI?
[12:44:23] <bjs> Oh you mean the CPython ABI, yeah.
[12:44:28] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 272 seconds)
[12:44:36] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[12:44:58] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[12:45:00] <KirkMcDonald> vanessa: A great deal of any C code that uses CPython's API has to concern itself with error handling and the management of reference counts, and especially with doing both of those things at the same time. It's enough that I strongly recommend avoiding it if at all possible.
[12:45:05] *** Joins: shad (~shad@user/shad)
[12:45:31] *** Quits: davor (~davor@user/davor) (Ping timeout: 256 seconds)
[12:45:40] *** Joins: davor_ (~davor@user/davor)
[12:45:44] <amogorkon> cython \o/
[12:46:03] <KirkMcDonald> It's ornery and often goes wrong in a way that is not immediately obvious.
[12:46:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:46:16] <KirkMcDonald> Cython is a superior option, yes.
[12:47:06] <kosh> I also like numba
[12:47:26] *** Joins: Guest6792 (~vit@chello085216193138.chello.sk)
[12:47:34] <amogorkon> funnily it seems numba is faster than cython in some cases
[12:47:41] <amogorkon> very weird
[12:48:05] <amogorkon> in other cases it can even be faster than numpy
[12:48:21] <amogorkon> numba is such a strange creature
[12:49:01] <amogorkon> i was baffled when i saw a plain python loop faster than vectorized numpy
[12:49:22] <vanessa> amogorkon: I don't believe you
[12:49:36] <amogorkon> try it yourself
[12:49:54] <bjs> amogorkon: it's not that surprising, jits can be incredibly powerful things
[12:50:30] <bjs> and "vectorized numpy" can be one of many things, including numpy resorting to just looping in cases where it can't apply anything fancier
[12:50:31] <amogorkon> yeah, but being faster than precompiled c is something else
[12:50:37] <bjs> not really
[12:50:43] <KirkMcDonald> I am not very familiar with numba, but it sounds like a successor to psyco, and in a sense it sounds like what Unladen Swallow set out to do.
[12:51:25] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[12:51:33] <amogorkon> bjs> and "vectorized numpy" can be one of many things, including numpy resorting to just looping in cases where it can't apply anything fancier <- iirc it was a simple math op on an array i tested
[12:51:37] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[12:51:40] <kosh> amogorkon, that is fairly normal with numba
[12:51:41] <vanessa> are you saying that the loop was faster or that the ABI overhead was really bad
[12:51:57] <bjs> amogorkon: remember that numba jits specifically for that kind of workload, i'd not be surprised if it outperforms numpy in specific tasks
[12:51:58] *** Quits: newpy (~newpy@2601:280:4381:1390:2081:1321:5668:533c) (Quit: Leaving)
[12:52:01] <amogorkon> the jitized loop was faster
[12:52:04] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:52:17] *** Quits: Limits (~Limits@user/Limits) (Ping timeout: 240 seconds)
[12:52:33] <KirkMcDonald> vanessa: The loop, written in Python and JITed through numba, was faster.
[12:52:37] <amogorkon> yup
[12:53:00] <kosh> KirkMcDonald, just a decorator you put on a function and if it can figure out all the types it will compile the code, there is even an option for the decorator to only work if all types can be determined so it can compile to code with no calls back into python during the running
[12:53:30] <kosh> it also understand a lot of numpy calls and can replace them automatically
[12:54:20] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[12:54:34] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:54:41] <kosh> and some are some operations that numpy as just not as fast at and can never be as fast at, even something simple like squaring many numbers and adding them up is done as two separate steps wth numpy which is also going to lower your calculation density
[12:55:11] <kosh> while more optimized code can square each entry in a cacheline and keep a running sum
[12:55:22] <kosh> that is faster because it reduces memory movement and raises calculation densty
[12:55:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:55:39] <KirkMcDonald> I believe that Unladen Swallow had higher ambitions, which it could not meet within the timeframe within which it existed, of being a much more generalized JIT for the Python language as a whole.
[12:56:07] <amogorkon> yeah, unladen swallow was too early for its time
[12:56:13] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:56:18] <kosh> numba is pretty narrowly designed just for numeric stuff
[12:56:24] <amogorkon> it could be successful nowadays with type annotations
[12:56:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[12:56:35] <p-i-> yoiks. This is painful. I've got a {PROJ_ROOT}/_common/ folder containing HelperA.py which imports HelperB.py. If I run `python HelperA.py` from that folder, FINE. But now I symlink ../_common/ into {PROJ_ROOT}/proj1/ And from the proj1/ folder run `python myproj.py` which imports `common.HelperA`, and now it complains that HelperA can't find HelperB.
[12:56:36] <KirkMcDonald> Yeah, I think the smaller scope is a credit to numba.
[12:56:39] <kosh> number is vectoriation, parallelization and gpu stuff
[12:56:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:57:18] <p-i-> numba's useful for stuff that doesn't quite fit into numpy's API.
[12:57:41] <amogorkon> actually i'd say the other way round
[12:57:49] <KirkMcDonald> p-i-: The modules within the package need to import the package.
[12:58:01] <KirkMcDonald> p-i-: The import path has to be rooted somewhere.
[12:58:23] <kosh> numba is for anything numeric, it doesn't matter if it fits numpy api
[12:58:35] <bjs> p-i-: when you do an import like `import name` rather than as a package `from . import name` then you're relying on the paths that things get executed at/from, which often leads to inconsistent results
[12:58:40] <KirkMcDonald> p-i-: If you're running a file that's inside of that directory, then the import path is rooted there; hence why `import HelperB` works when you run HelperA.py.
[12:58:45] <kosh> even if something does fit with numpy I still managed to get it to runs tens to hundreds of times faster in some cases
[12:59:01] <amogorkon> yeah
[12:59:07] <KirkMcDonald> p-i-: But if you're running some other thing, and it's importing that package, then that implies the import path is rooted somewhere outside of that directory.
[12:59:16] <p-i-> KirkMcDonald: ok I see it's nothing to do with symlinking
[12:59:36] *** Joins: plastico (~plastico@neomutt/plastico)
[12:59:40] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:59:48] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[13:00:07] <amogorkon> but i think numpy ndarrays are still the datastructure you want in many cases
[13:00:09] <bjs> p-i-: i'd recommend just importing from the top-level package everywhere.  So `from . import HelperB` (or even `import common.HelperB`) inside HelperA.py
[13:00:39] <kosh> amogorkon, yeah you should use ndarray,they are memory contiguous typed arrays, exactly what you need for numba
[13:00:47] <p-i-> I'm not aware of even using Package construct. I just got Python files foo/main.py which imports foo/helper/1.py which imports 1a.py (from same folder)
[13:00:54] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Remote host closed the connection)
[13:01:21] <amogorkon> so ndarray as datastructure but numba for operations
[13:01:50] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[13:01:52] <bjs> p-i-: the problem is that in Python you don't import paths, instead you import modules
[13:01:54] <amogorkon> there's one thing i never figured out how to do with numpy even
[13:02:04] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[13:02:12] <p-i-> Basically from my rootdir I want several projects to share utils in a a _common/ folder. They're also all sharing a .venv
[13:02:18] <amogorkon> that is to implement something like the game of life just with array ops
[13:02:25] *** Joins: ano (~ano@user/ano)
[13:02:48] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:02:57] <bjs> p-i-: the 'best' way to do this is to actually `pip install` the things inside _common into the venv
[13:02:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:03:11] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[13:03:31] <bjs> then any code using the venv can just import them directly
[13:03:43] <p-i-> bjs: oh, so just `pip install _common/1.py`? Do I need boilerplate to make 1.py "installable"?
[13:03:46] <amogorkon> checking the rules for every cell iteratively.. no clue
[13:03:55] <bjs> p-i-: yes, for a start "1.py" isn't a valid module name
[13:04:00] *** Joins: KnowledgeShark- (~Knowledge@50.34.198.222)
[13:04:00] <bjs> you can't `import 1` it's invalid syntax
[13:04:12] <amogorkon> easy with a for-loop though
[13:04:27] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 256 seconds)
[13:04:28] <bjs> p-i-: https://packaging.python.org/en/latest/tutorials/packaging-projects/  I think is a nice overview,  although I've not read in detail
[13:04:50] <p-i-> amogorkon: I think that's quite easy. You can np.roll to LRUD-shift your matrix by 1
[13:04:56] <bjs> p-i-: setup.cfg is probably all you need
[13:05:33] <p-i-> ok maybe it's time I made a proper package for my helpers that I keep using in multiple projects
[13:05:56] <amogorkon> p-i-, isn't that just hiding the loop?
[13:06:26] <p-i-> amogorkon: Well, numpy _is_ looping anyway. It's not doing it on the GPU. It's just looping very fast.
[13:07:21] *** Joins: icy_hot (~icy_hot@61.34.190.190)
[13:07:32] <p-i-> amogorkon: I had to dig into this when I was doing some image processing and wanted to remove "straggler" pixels from a binary bitmap
[13:08:06] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[13:08:13] <p-i-> So I wanted to count neighbours for each pixel and only '1' the pixels with 2+ neighbours
[13:08:13] <kosh> the issue is that python is slow and the more time you spend in the python interpreter the slower the program is, numba allows you to push large amounts of work out at a time while numpy is basically one call and then stack the next one on that but it does come back after each one
[13:09:09] <p-i-> I've never written code where more than a tiny fraction needed un-bottlenecking via numba
[13:09:43] <p-i-> Writing time-profiling debug code early in is really useful to remain productive
[13:10:04] <p-i-> see where it's chewing
[13:10:39] <amogorkon> do you use any special trick to profile?
[13:10:53] <bjs> p-i-: I'd put a setup.cfg and a pyproject.toml like described in that link inside _common/  and then list all the "folders" (packages) and/or files (modules) you want to make visible
[13:11:00] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:12:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:12:08] <amogorkon> profiling is a fairly under-communicated topic imo
[13:12:26] <amogorkon> aside from using timeit
[13:12:36] <Repiphany> cProfile or line_profiler
[13:12:48] <p-i-> I'll bet pycharm has some decent tooling that shows time spent inside various functions. But I just wrote it by hand using currying.
[13:13:08] <KirkMcDonald> cProfile with a custom timing function can achieve many things.
[13:13:38] <KirkMcDonald> You can stick any monotonic counter in there and get useful per-function information about it.
[13:13:47] <kosh> it is remarkably difficult to do really good profiling in python, you can do okay though fairly easily
[13:14:42] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 250 seconds)
[13:14:43] <kosh> but if you want to profile across multiprocessing, track memory usage and see where time is being spent at a line level that is quite difficult to do well
[13:15:10] <p-i-> I'm trying to find a minimal setup.cfg + pyproject.toml template to work off
[13:15:33] <amogorkon> you'd need to kind of track back from runtime behaviour over bytecode to ast
[13:15:56] <KirkMcDonald> line_profiler does exist.
[13:16:08] <p-i-> ok if I `import .Foo` instead of `import Foo` that seems to do the trick.
[13:16:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:16:50] <kosh> KirkMcDonald, it does exist but profilers in python are still provide much less information than what is standard for profiling in c,c++ etc. type languages
[13:17:01] <bjs> p-i-: so me personally would add a setup.cfg to _common/ which contained something like "py_modules = find:" and then if I `path/to/venv/pip install -e .` inside _common/ then this will install all the .py files in _common/
[13:17:33] <bjs> p-i-: then I can just `import HelperA` and `import HelperB` to get the _common/HelperA.py and _common/HelperB.py files no matter where I am, so long as I am using the same venv.
[13:18:07] <amogorkon> KirkMcDonald, do you use line_profiler often? how good is it?
[13:18:14] *** Quits: NealRame (~a@122-199-48-238.ip4.superloop.com) (Quit: Konversation terminated!)
[13:18:28] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[13:18:48] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:18:52] <bjs> p-i-: see also the "packages = find:" option for directories inside _common ("packages") rather than individual .py files
[13:19:14] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[13:20:07] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[13:21:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:22:29] *** davor_ is now known as davor
[13:23:19] *** Joins: jinie (~jimmy@195.254.169.70)
[13:23:49] *** Quits: jinie (~jimmy@195.254.169.70) (Client Quit)
[13:25:33] *** Joins: goldfish (~goldfish@user/goldfish)
[13:26:42] *** Joins: sh0ne (~textual@2a06:5b00:6fb:2a00:1173:1c43:74a8:c329)
[13:28:20] *** Quits: icy_hot (~icy_hot@61.34.190.190) (Quit: WeeChat 3.4)
[13:28:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:28:51] <mawk> can I have a class attribute that is actually defined by a method? a bit like @property
[13:29:21] <Repiphany> Like @property but different how
[13:29:32] <mawk> @property is for instance attributes
[13:29:43] <mawk> @property and then @classmethod maybe? I don't know if you can compose them
[13:30:17] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[13:30:23] *** Quits: sh0ne (~textual@2a06:5b00:6fb:2a00:1173:1c43:74a8:c329) (Client Quit)
[13:30:33] *** Joins: flower_ (~debian@46.244.61.4)
[13:30:46] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:1173:1c43:74a8:c329)
[13:30:57] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[13:31:17] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[13:32:02] <bjs> mawk: yes you can have a @property on the metaclass :)
[13:32:37] <mawk> ah that sounds like what I need
[13:32:39] <mawk> thanks
[13:33:24] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[13:33:30] *** Quits: paul424 (~tom@ip-5-172-234-175.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[13:34:29] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[13:34:48] *** Joins: cdown (~cdown@188.214.11.14)
[13:34:56] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:35:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:35:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:35:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:36:20] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Read error: Connection reset by peer)
[13:37:03] *** Quits: death916 (~death916@user/death916) (Ping timeout: 272 seconds)
[13:37:03] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 272 seconds)
[13:37:33] *** Quits: elnino (~elnino@41-184-174-159.rv.ipnxtelecoms.com) (Remote host closed the connection)
[13:38:13] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[13:38:27] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:38:50] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[13:39:09] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-3498-71fb-df6e-0b01.res6.spectrum.com) (Quit: jarthur)
[13:39:30] *** Joins: frost (~frost@user/frost)
[13:43:19] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[13:44:01] <gurkenglas> How do I go about finding the simple formula that probably generated my data? (it's rounded at the end.)
[13:44:27] *** Joins: slav0nic (slav0nic@python.su)
[13:44:32] *** Joins: kts (~kts@103.73.237.124)
[13:48:04] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:b499:2e2d:5a8b:934e)
[13:49:11] <white2> scipy.optimize.curve_fit
[13:49:13] *** Quits: asix (~Anders@user/asix) (Ping timeout: 256 seconds)
[13:49:23] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[13:49:30] *** Quits: tnez (~el@user/tnez) (Ping timeout: 256 seconds)
[13:50:16] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:50:25] *** Quits: sreve_ (~quassel@p4ff44fcc.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:50:57] *** Joins: tnez (~el@user/tnez)
[13:51:07] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[13:51:29] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 256 seconds)
[13:52:09] *** Joins: Limits (~Limits@user/Limits)
[13:52:09] *** Joins: sreve (~quassel@p4ff44fcc.dip0.t-ipconnect.de)
[13:52:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[13:53:28] *** Joins: vanessa (~vanessa@103.160.128.7)
[13:54:12] <mawk> do you have some apriori idea on what the function might look like gurkenglas ?
[13:54:24] <mawk> you can fit a straight line, a parabola, a cubic, a quartic; but also a bunch of other stuff
[13:54:53] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[13:55:34] *** Joins: Z-cat (~Z-cat@user/z-cat)
[13:56:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:56:43] *** Quits: tobybl_ (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[13:58:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:58:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:58:26] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:59:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:59:53] *** Joins: rsx (~dummy@ppp-188-174-148-71.dynamic.mnet-online.de)
[14:02:34] *** Joins: asix (~Anders@user/asix)
[14:02:39] *** Joins: twice (~twice@173.82.153.50)
[14:02:41] *** Joins: georgios (~georgios@user/georgios)
[14:03:43] <mawk> I didn't really understand how to use @property in the metaclass
[14:03:55] <mawk> but in the __new__ I can customize the new class and that seems to be good enough
[14:04:10] <bjs> mawk: https://bpa.st/7JBA
[14:04:18] *** Joins: dme86 (~dan@user/dan86)
[14:06:43] <lericson> strictly a matplotlib question, but does anyone know if it's possible to move a histogram x-wise?
[14:06:53] <lericson> i can't just shift the data because that would result in a different histogram
[14:06:56] <gurkenglas> mawk, my prior is that it fits on one line, with a complexity similar to definitions of... arithmetic mean, geometic mean, harmonic mean, etc
[14:07:00] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 240 seconds)
[14:07:04] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.255) (Ping timeout: 256 seconds)
[14:07:24] <lericson> just realized i absolutely can just move the data
[14:07:43] <gurkenglas> it's not guranteed to be polynomial or anything.
[14:08:14] <mawk> ah I had forgotten to make the metaclass descend from type bjs, that was why it wasn't working, thanks
[14:08:28] *** Joins: icy_hot (~icy_hot@61.34.190.190)
[14:08:33] *** Quits: Limits (~Limits@user/Limits) (Quit: WeeChat 3.4)
[14:08:55] <mawk> gurkenglas: I guess try it with a polynomial fit first and see what happens
[14:14:20] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:15:06] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:ff81:13cb:b328:d3b6)
[14:16:38] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[14:19:08] *** Joins: adhawkins (~adhawkins@user/adhawkins)
[14:19:28] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[14:19:51] <adhawkins> I have two tests in a pytest run called 'test_sipi_passwords_no_block' and 'test_sipi_passwords'. How can I use '-k' to specify that it only runs the second test. It seems to be a substring match, so matches both?
[14:20:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:21:14] *** Quits: icy_hot (~icy_hot@61.34.190.190) (Quit: WeeChat 3.4)
[14:21:35] *** Joins: sixie6e (~sixie6e@2600:1000:b06b:d422:d426:9f8b:563:7a83)
[14:22:09] *** Joins: dme86 (~dan@user/dan86)
[14:23:16] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:ff81:13cb:b328:d3b6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:23:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:23:31] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:ff81:13cb:b328:d3b6)
[14:23:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[14:24:21] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:1173:1c43:74a8:c329) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:24:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:27:20] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:27:23] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[14:27:39] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[14:28:36] *** Quits: foul_owl (~kerry@23.82.193.88) (Ping timeout: 256 seconds)
[14:28:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:28:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:29:23] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:30:35] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[14:30:40] *** Joins: darksun_ (~darksun@62.98.30.229)
[14:31:25] *** Joins: d3x (michal@bielaw.ski)
[14:31:29] *** Joins: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[14:32:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:32:48] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[14:32:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:33:25] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[14:33:25] *** Quits: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[14:34:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:34:41] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:34:50] *** Joins: ice9 (~ice9@user/ice9)
[14:35:18] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:35:56] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[14:39:06] *** Parts: sixie6e (~sixie6e@2600:1000:b06b:d422:d426:9f8b:563:7a83) ()
[14:39:12] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:39:29] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[14:40:31] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[14:40:31] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[14:40:31] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Remote host closed the connection)
[14:40:58] *** dcaro is now known as dcaro_away
[14:41:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[14:42:03] *** Joins: zuplex (~zuplex@202.51.76.195)
[14:42:42] *** Joins: luva4 (~luva@45.141.152.62)
[14:43:16] *** Joins: foul_owl (~kerry@23.82.193.89)
[14:43:48] *** Quits: ybonatakis (~iob@90-182-197-112.rcp.o2.cz) (Ping timeout: 240 seconds)
[14:44:06] *** Quits: Ingvix (~Ingvix@user/ingvix) (Read error: Connection reset by peer)
[14:44:12] *** Quits: luva (~luva@185.168.9.231) (Ping timeout: 252 seconds)
[14:44:12] *** luva4 is now known as luva
[14:44:17] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:ff81:13cb:b328:d3b6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:46:09] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:46:13] <taeaad> I have a jupyter notebook that I exported to a Python file, but await/async functions are not working as is.
[14:46:16] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:46:17] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:46:41] *** Joins: Ingvix (~Ingvix@user/ingvix)
[14:46:43] *** Quits: led_belly (~led_belly@37.120.197.44) (Read error: Connection reset by peer)
[14:47:00] *** Quits: slisnake (~slisnake@103.107.198.142) (Ping timeout: 240 seconds)
[14:47:04] <taeaad> SyntaxError: 'await' outside function
[14:47:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:47:46] <jinsun> you can't await at the top level normally, jupyter has a event loop running always, that's why it works there
[14:47:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:47:54] <taeaad> "result_temp = await query_func()" gives this error. In Jupyter it doesn't give an error; I guess cells are like functions?
[14:47:55] *** Quits: grimvar (~grimvar@i5C75F5D3.versanet.de) (Ping timeout: 256 seconds)
[14:48:01] *** darksun_ is now known as darksun
[14:48:04] *** Parts: lkthomas_ (~lkthomas@host81-149-79-114.in-addr.btopenworld.com) (Leaving)
[14:48:17] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:48:22] <taeaad> jinsun: Is there a standard solution? I would prefer to not switch to Jupyter.
[14:48:47] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:e48e:fd0f:75d4:bf32)
[14:49:00] <jinsun> instead of await you would have to use asyncio.run to start a event loop, so something like `result_temp = asyncio.run(query_func())`
[14:49:12] *** Quits: darksun (~darksun@62.98.30.229) (Changing host)
[14:49:12] *** Joins: darksun (~darksun@user/darksun)
[14:49:15] <jinsun> but you can do that in jupyter
[14:49:22] *** Joins: slisnake (~slisnake@103.107.198.140)
[14:49:40] <jinsun> because asyncio.run will complain that event looop is already running
[14:49:42] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:49:49] <jinsun> s/can/can't
[14:49:50] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[14:50:02] <taeaad> So "asyncio.run(<thing>)" replaces "await <thing>"?
[14:50:11] <jinsun> only at the top level
[14:50:28] <jinsun> inside async defs you would await normally in both cases
[14:51:09] <taeaad> OK.
[14:51:20] *** Quits: nomic (~nomic@185.198.243.172) (Quit: Leaving)
[14:51:31] <taeaad> I understand. I only do the replacement at the final call.
[14:51:39] <jinsun> yes
[14:52:06] <taeaad> Thanks, looks like it works!
[14:52:22] *** Joins: MrWu (~wu@35.red-88-24-200.staticip.rima-tde.net)
[14:53:00] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:53:02] *** Quits: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[14:53:08] *** Joins: ybonatakis (~iob@90-182-197-112.rcp.o2.cz)
[14:53:24] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:53:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[14:53:49] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 256 seconds)
[14:53:49] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[14:54:11] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:54:27] *** Joins: arinov (~arinov@213.194.126.155)
[14:54:34] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:55:13] *** Joins: dme86 (~dan@user/dan86)
[14:55:14] *** Quits: julius (~jully@95.74.77.25) (Quit: Leaving)
[14:55:59] *** Joins: mugwort (~mugwort@host86-187-226-210.range86-187.btcentralplus.com)
[14:56:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:56:17] *** Joins: led_belly (~led_belly@37.120.197.44)
[14:56:29] *** Quits: MrWu (~wu@35.red-88-24-200.staticip.rima-tde.net) (Client Quit)
[14:56:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:56:37] *** Joins: Wu (~wu@35.red-88-24-200.staticip.rima-tde.net)
[14:59:22] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[15:00:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[15:00:14] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[15:00:24] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:02:53] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:ff81:13cb:b328:d3b6)
[15:03:27] *** Quits: mugwort (~mugwort@host86-187-226-210.range86-187.btcentralplus.com) (Ping timeout: 256 seconds)
[15:03:36] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[15:04:05] <kek_> hi, if I use vlines() from matplotlib, how can I tell it to just take maximal ymin, ymax?
[15:04:12] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[15:04:32] *** Joins: Limits (~Limits@user/Limits)
[15:04:38] *** Joins: grimvar (~grimvar@i5C75FE34.versanet.de)
[15:05:05] *** Quits: Limits (~Limits@user/Limits) (Client Quit)
[15:05:17] *** Joins: Limits (~Limits@user/Limits)
[15:05:43] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:06:29] *** Quits: sh0ne (~sh0ne@178.237.217.167) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:07:50] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:08:50] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[15:11:33] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[15:12:08] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[15:12:22] *** Joins: Cell20 (~Guest7@47.9.121.229)
[15:14:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[15:14:34] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[15:15:22] *** Joins: raym (~raym@user/raym)
[15:15:28] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b50d:b0f2:35af:3ee8)
[15:16:12] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[15:16:29] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[15:16:46] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[15:18:11] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[15:18:32] *** Quits: pycode (~pycode3@2001:b07:5d28:551:8cd3:c6f7:4118:8d3b) (Ping timeout: 240 seconds)
[15:18:42] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[15:20:18] *** Joins: arinov (~arinov@213.194.126.155)
[15:21:35] *** Quits: Cell20 (~Guest7@47.9.121.229) (Ping timeout: 256 seconds)
[15:21:48] *** Joins: zeden (~zeden@user/zeden)
[15:22:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:27:50] *** Quits: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[15:28:10] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[15:29:42] *** Joins: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de)
[15:29:52] *** Joins: dez (uid92154@user/dez)
[15:30:11] *** Joins: euri10[m] (~euri10m]@2a01cb00107fff000178daddf6c3f414.ipv6.abo.wanadoo.fr)
[15:32:36] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[15:33:45] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:1173:1c43:74a8:c329)
[15:34:36] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:21] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[15:38:34] *** Quits: dxrt (~dxrt@user/dxrt) (Ping timeout: 250 seconds)
[15:38:36] *** Quits: steam (~steam@user/steam) (Ping timeout: 240 seconds)
[15:38:47] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[15:38:58] *** Joins: angelacrust (~angelacru@122.161.32.177)
[15:40:00] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 256 seconds)
[15:40:33] *** Quits: rb (~augh@209.141.39.190) (Ping timeout: 272 seconds)
[15:43:05] <white2> idk matplotlib.pyplot.vlines however u may try vlines([1,2,3],-10000,1000,...)
[15:43:07] *** Quits: sawk (~quassel@151.81.119.74) (Ping timeout: 256 seconds)
[15:43:10] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[15:43:48] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:1173:1c43:74a8:c329) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:44:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:44:39] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[15:45:05] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:ff81:13cb:b328:d3b6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:45:14] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[15:45:19] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[15:47:00] *** Joins: ArtfulDodger (~ArtfulDod@81.126.81.79.rev.sfr.net)
[15:49:41] *** Quits: Throgkt (~Throgkt@user/throgkt) (Read error: Connection reset by peer)
[15:50:11] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[15:51:05] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:d5eb:6a5b:4a46:4794)
[15:52:53] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[15:53:50] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:54:34] *** Joins: pycode (~pycode3@2001:b07:5d28:551:8c1a:86c1:2b50:13d9)
[15:54:42] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[15:54:55] *** Joins: Throgkt (~Throgkt@user/throgkt)
[15:56:00] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:d5eb:6a5b:4a46:4794) (Quit: Leaving)
[15:56:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:56:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:56:35] *** Joins: sawk (~quassel@78.6.80.66)
[15:56:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:57:02] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:1173:1c43:74a8:c329)
[15:57:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:57:33] *** Joins: shad (~shad@user/shad)
[15:59:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:59:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:00:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[16:02:16] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Remote host closed the connection)
[16:04:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[16:06:35] *** Joins: thevar1able (~textual@46.39.45.122)
[16:09:36] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (Quit: ZNC 1.8.2 - https://znc.in)
[16:10:41] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[16:10:43] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:11:25] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 240 seconds)
[16:11:57] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 240 seconds)
[16:13:36] *** Joins: mxp (~mxp@185.16.205.131)
[16:14:20] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:14:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[16:15:52] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (Quit: ZNC 1.8.2 - https://znc.in)
[16:16:17] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[16:17:08] *** Quits: pycode (~pycode3@2001:b07:5d28:551:8c1a:86c1:2b50:13d9) (Ping timeout: 252 seconds)
[16:18:38] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:19:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[16:20:00] *** Joins: Enitin (~Enitin@82.102.22.86)
[16:23:04] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[16:23:18] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[16:24:20] *** Joins: mugwort (~mugwort@host86-187-225-174.range86-187.btcentralplus.com)
[16:24:56] *** Quits: superaga (~superaga@mob-194-230-155-117.cgn.sunrise.net) (Quit: Client closed)
[16:25:47] *** Joins: ianliu (~ianliu@189-19-111-179.dsl.telesp.net.br)
[16:26:02] *** Joins: l4yer (~l4yer@84.69.191.245)
[16:27:10] *** Quits: monchi (~joints@143.198.92.132) (Remote host closed the connection)
[16:27:14] <ianliu> When dealing with argparse, is it possible to add an ArgumentParser instance object as a subparser of another ArgumentParser? Or the only way to create subparsers are via add_subparser(s) api?
[16:27:22] *** Joins: makrada (~makrada@185.30.89.80)
[16:28:23] <ianliu> I'm asking this because I was thinking about organizing my code as each subcomand creating its own ArgumentParser, and passing those to my main CLI program
[16:28:32] <makrada> https://gurushots.com/photo/1d933856eb3253f85560eb0c23d8f1f2
[16:34:10] *** Joins: thiras (~thiras@user/thiras)
[16:36:06] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[16:36:10] *** Joins: monchi (~joints@143.198.92.132)
[16:37:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:37:17] *** Joins: julius (~jully@95.74.77.25)
[16:37:18] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:37:26] *** Joins: bahamas (~lucian@84.232.140.52)
[16:37:27] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:37:29] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[16:37:44] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[16:37:47] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[16:37:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:37:54] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[16:38:21] *** Joins: vladoski (~vladoski@2001:b07:add:d406:674:d163:1ccf:ebf1)
[16:39:27] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[16:39:44] *** Quits: dme86 (~dan@user/dan86) (Quit: Lost terminal)
[16:41:41] *** Joins: lacrymology (~lacrymolo@static-57-7-25-46.ipcom.comunitel.net)
[16:42:11] *** Quits: makrada (~makrada@185.30.89.80) (Remote host closed the connection)
[16:42:57] <lacrymology> https://bpa.st/FF3A pylance is complaining that "Cannot create consistent method ordering" with the ABC inheriting from two other ABCs, what's the right way to write this?
[16:43:12] *** Joins: dob1 (~dob1@user/dob1)
[16:44:25] *** Joins: goldfish (~goldfish@user/goldfish)
[16:46:08] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[16:46:22] <bjs> lacrymology: the ABC should be the last thing in `HandleStoreInventory`s list of base classes
[16:46:26] <bjs> or probably just not there at all
[16:47:06] *** Quits: PurpleBo_ (~purpleboo@047-040-214-188.res.spectrum.com) (Remote host closed the connection)
[16:47:21] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:47:57] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[16:48:11] *** Quits: kts (~kts@103.73.237.124) (Quit: Konversation terminated!)
[16:48:17] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[16:48:17] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[16:48:27] *** Quits: rajkosto (~rajkosto@93-86-12-136.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[16:48:53] *** dcaro_away is now known as dcaro
[16:49:07] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:49:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:51:29] *** Joins: PurpleBooger (~purpleboo@047-040-214-188.res.spectrum.com)
[16:52:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:53:13] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[16:53:37] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[16:54:01] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[16:54:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Remote host closed the connection)
[16:54:26] *** Quits: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0::f824) (Quit: Leaving)
[16:55:07] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824)
[16:55:24] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:56:22] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Remote host closed the connection)
[16:56:29] *** Joins: kek_1 (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[16:57:02] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Read error: Connection reset by peer)
[16:57:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:58:47] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[17:00:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:00:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[17:01:14] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:01:43] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[17:01:52] <mawk> if type(C) is different from type then C has a metaclass?
[17:01:57] *** Quits: saroy (~Sandipan@43.252.250.104) (Read error: Connection reset by peer)
[17:02:04] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:02:12] *** Joins: bloody (~bloody@user/bloody)
[17:02:23] *** Joins: nomic (~nomic@185.198.243.172)
[17:02:45] <mawk> if C is a class
[17:03:19] <Wooble> yes
[17:04:07] *** Quits: julius (~jully@95.74.77.25) (Quit: Leaving)
[17:04:27] *** Joins: julius (~jully@95.74.77.25)
[17:05:07] *** Quits: aposm (~andrew@107.174.64.146) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[17:05:53] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.255)
[17:05:55] <angelacrust> how do I read both the parts separately? `harry 12299933` so that s = 'harry' and n = '12299933'
[17:06:11] <bjs> angelacrust: s, n = that_string.split()
[17:06:13] <lericson> s, n = 'harry 122999333'.split()
[17:06:16] <lericson> shet
[17:06:21] *** Joins: saroy (~Sandipan@43.252.250.104)
[17:06:21] <angelacrust> thanks
[17:06:25] <stockh0lm> https://pynput.readthedocs.io/en/latest/limitations.html#linux This is the description for using pynput under Wayland, which is my case. when running my code with sudo, it does not find the x-server (or Xwayland, rather) and says "Please make sure that you have an xserver running and that the DISPLAY environment variabels is set correctly"
[17:06:50] *** Joins: aposm (~aposm@relay.posmontier.com)
[17:07:59] <stockh0lm> how can i use my pynput code under Wayland? i have been searching, but beyond the fact that it should work, i draw a blank
[17:09:05] <stockh0lm> pypi keyboard needs root, too, which is not really good for my program, because it will generate files with the wrong permissions
[17:09:56] *** Quits: frost (~frost@user/frost) (Ping timeout: 245 seconds)
[17:10:58] <Wooble> stockh0lm: sudo -E to preserve environment, maybe, although I don't know what the rest of your issue might be
[17:11:48] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[17:12:12] *** Parts: siege (~obriencj@bouncer.preoccupied.net) (Ping timeout: -1 seconds)
[17:12:33] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[17:12:37] <stockh0lm> Wooble, that does not seem to change anything... same error
[17:12:42] <EtherMan> Is there any way to give python a max time that a function could possibly take?
[17:13:05] *** Quits: drbeco (~beco@2804:351c:dd03:3500:e47a:cfbe:a980:776b) (Remote host closed the connection)
[17:13:30] *** Joins: drbeco (~beco@2804:351c:dd03:3500:e47a:cfbe:a980:776b)
[17:13:45] <Wooble> EtherMan: several approaches at https://stackoverflow.com/questions/492519/timeout-on-a-function-call
[17:15:01] *** Quits: zuplex (~zuplex@202.51.76.195) (Remote host closed the connection)
[17:15:53] *** Quits: drbeco (~beco@2804:351c:dd03:3500:e47a:cfbe:a980:776b) (Read error: Connection reset by peer)
[17:16:00] *** Joins: beco (~beco@2804:351c:dd03:3500:e47a:cfbe:a980:776b)
[17:16:40] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:18:02] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[17:18:12] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[17:18:42] <EtherMan> Wooble: signal relies on linux, and I'm not using threading for this so that's also not an option. The exit_after decorator interrupts the whole python app, not just that specific function. Seems every solution there is pretty reliant on specific workflows rather than a more generic "this function returns after X amount of time regardless of state"
[17:18:42] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 272 seconds)
[17:18:53] *** flooded is now known as _flood
[17:20:25] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[17:20:36] *** Quits: brentaarnold (~brentaarn@24.112.56.42) (Ping timeout: 240 seconds)
[17:20:41] <Wooble> EtherMan: well, sure, it's not an easy problem to solve in a generalized way
[17:20:48] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[17:21:55] <Wooble> I'd note that you can use threading *just* for the timeout bit, even if you're not using multiple threads in the rest of the program.
[17:22:23] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[17:22:48] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[17:23:02] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[17:23:26] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[17:24:24] *** Quits: angelacrust (~angelacru@122.161.32.177) (Quit: Client closed)
[17:24:53] <EtherMan> True, but seems excessive :/
[17:25:37] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[17:26:16] *** Joins: brentaarnold (~brentaarn@24.112.56.42)
[17:26:27] *** Quits: Balzy (~Balzy@host-82-59-89-26.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[17:27:54] <apollo13> EtherMan: not really, it is not an easy problem that you are trying to solve
[17:27:55] *** Joins: Balzy (~Balzy@host-79-24-139-85.retail.telecomitalia.it)
[17:28:25] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:28:31] <apollo13> most programming languages will require you to use threads or so
[17:28:38] *** Joins: SaltHillStroller (~SaltHillS@198-84-207-146.cpe.teksavvy.com)
[17:28:38] *** Joins: SaltHilStroller_ (~SaltHillS@198-84-207-146.cpe.teksavvy.com)
[17:28:38] <apollo13> you can't just simply kill off a function
[17:28:53] *** Joins: Klinda (~superleag@user/klinda)
[17:29:11] *** Joins: aknot (~aknot@2603:900a:1503:17bb:82d3:d799:e6f2:4d4f)
[17:29:33] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:29:39] *** Quits: mugwort (~mugwort@host86-187-225-174.range86-187.btcentralplus.com) (Ping timeout: 256 seconds)
[17:29:54] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[17:30:51] *** Joins: bluedust (~bluedust@103.165.167.221)
[17:31:12] <Wooble> if the function is basically a loop, you can check the time every iteration. if not, and it doesn't do anything that blocks inside, you could check the time after every cpu-intensive line, maybe.
[17:31:33] <Wooble> if it can just freeze somewhere you can't check the time, well... you're stuck.
[17:31:55] <lericson> there are sampling profilers
[17:32:11] <lericson> basically they check the call stack at regular intervals and lets you know where the program spends most time
[17:32:15] <Wooble> lericson: they're not sampling, they want the function to timeout
[17:32:22] <lericson> oh
[17:32:34] <lericson> can't be done
[17:32:41] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:e48e:fd0f:75d4:bf32) (Quit: Konversation terminated!)
[17:33:16] <EtherMan> It's not. It's a series of http gets, and if too many times out, then it's too slow to finish in time and causes issues, so it's simply better to return early without having gone through all, than having it keep going.
[17:33:18] *** Quits: jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch) (Read error: Connection reset by peer)
[17:33:23] <Wooble> I mean you could set up a signal handler and have an external program tracing it and send the signal but uh... that's real messy :)
[17:33:50] <lericson> EtherMan: if you use async, then i know trio has stuff for cancelling after some time
[17:33:55] *** Joins: pycode (~pycode3@2001:b07:5d28:551:be0a:f2b0:2882:ab8a)
[17:34:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b54c:f832:91af:f6f2) (Ping timeout: 240 seconds)
[17:35:21] <EtherMan> It's a bit annoying how urllib doesn't listen to its own timeout setting for some reason. Then I could set a 1s timeout rather than having it wait for sometimes 10minutes before finally giving a timeout error :/
[17:35:57] *** Quits: SaltHillStroller (~SaltHillS@198-84-207-146.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[17:35:57] *** Quits: SaltHilStroller_ (~SaltHillS@198-84-207-146.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[17:36:13] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[17:36:13] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[17:37:44] <bahamas> EtherMan: you could save those time outs somewhere externally (database, file) and check in your program before sending a new request. if you see too many timeouts, you stop sending requests
[17:37:57] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[17:38:20] *** Joins: Jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch)
[17:38:54] <jinsun> I used that exit_after decorator from that  stackoverflow post in the past, seemed to work fine for me
[17:39:36] <EtherMan> bahamas: Well sure, but I'd have to take a pretty conservative measure then since I don't know how long before the ones that succeed took and we're talking baout 5000 http fetches total here ^_^;
[17:41:38] <bahamas> EtherMan: wouldn't you have to do that anyway? namely, have an algorithm to decide when to stop
[17:42:47] <EtherMan> bahamas: Not if there was a way to just say "If this function has not returned after 6h, then just raise an exception" or return or something and stop processing that function.
[17:42:56] *** Joins: Cell2036 (~Cell20@47.15.135.217)
[17:43:18] <bahamas> EtherMan: you could register the time you sent the request and then check these times when sending new requests
[17:43:51] <bahamas> or have a background task check the times and set a flag when a certain threshold is reached
[17:43:52] *** Joins: Cell209 (~Cell20@47.15.135.217)
[17:44:57] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[17:45:04] <EtherMan> Actually you know what... I just realized I could perhaps fix the actual issue instead if I just don't have the same in memory sqlite db name... That way it wouldn't cause any direct issues if one is still running when the second comes along and opens a new connection, because that will now be a new DB :/
[17:45:23] *** Joins: Croves (~Croves@2804:58:c0e1:9500:4d:6a89:d03b:138a)
[17:45:56] <Wooble> the real issue may be that you're trying to use urllib, when it's own documentation says it's not good and you shouldn't use it. :P
[17:46:08] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[17:46:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:46:13] <EtherMan> Wooble: So what should I use?
[17:46:13] *** Cell209 is now known as Cell20
[17:46:17] *** Joins: komikat (~komikat@183.82.154.239)
[17:46:46] <Wooble> requests is what urllib recommends; something fancy and async might solve your problems better. httpx?
[17:46:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:47:13] *** Quits: Cell2036 (~Cell20@47.15.135.217) (Ping timeout: 256 seconds)
[17:47:30] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[17:48:02] <Wooble> at the very least timeout in requests definitely works :)
[17:48:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:48:11] *** Joins: chris_pcguy (~chris_pcg@i.broke-the-inter.net)
[17:48:13] <EtherMan> Right, I don't have the option of requests unfortunately. Well I do on my dev machine but not on the machine that is going to be running the script >_<
[17:48:17] *** Joins: akaWolf (~akaWolf@akawolf.org)
[17:48:40] <bahamas> EtherMan: how so?
[17:49:04] *** Joins: acer (~quassel@78.6.80.66)
[17:49:12] <Wooble> even cpython ships requests hidden in the stdlib because urllib is so bad :P
[17:49:15] *** Quits: acer (~quassel@78.6.80.66) (Client Quit)
[17:49:29] <Pi-sistance> when im defining a class and I have used the init constructor to take a couple of arguments for the second lione of the constructor after the : if I enter self.input_argument 1.  does this just mean im turning the input argument into a data attribute?
[17:49:30] <EtherMan> bahamas: It's a dreambox running OpenATV6.5, so it's a mips machine with some very... Shall we say limited resources.
[17:49:47] <Pi-sistance> damnit i missed out a comma there
[17:50:15] <bahamas> EtherMan: as in RAM? I'm not familiar with the terms you used
[17:50:32] <chris_pcguy> Hi. Is it intended that a list-type attribute can be re-used over different instances? "count" is initialized again, as expected. But what about "msgs"? When I move the initialization inside a __init__, both work as I expected. https://bpa.st/NU7Q
[17:50:46] <Wooble> Pi-sistance: can you bpaste your code? I'm not following what any of that means.
[17:50:57] *** Joins: Barones (~Barones@user/Barones)
[17:51:09] <bjs> chris_pcguy: msgs is an attribute on the class, not on an instance
[17:51:12] <Pi-sistance> class sts:
[17:51:12] <Pi-sistance>     def __init__(self, sidests, stsColor):
[17:51:13] <Pi-sistance>         self.sidests = sidests
[17:51:23] <bjs> chris_pcguy: so yes it's intended
[17:51:34] <Pi-sistance> does the last line mean im just trunbing the inout argument into a data characteristic
[17:51:35] <chris_pcguy> Thank you very much.
[17:51:45] <Pi-sistance> turning* the inpout argument
[17:51:53] <Wooble> Pi-sistance: (use a pastebin like https://bpa.st/+python next time), and yes, it's setting an attribute on the instance.
[17:52:00] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[17:52:06] <bjs> chris_pcguy: note that when you go `self.count += 1` you're assigning to `self.count` which is *creating* a new instance attribute which didnt exist before
[17:52:13] <Pi-sistance> ok thanks wooble
[17:52:15] *** Joins: Sadale (~Sadale@user/sadale)
[17:52:16] <EtherMan> bahamas: As in https://pastebin.com/nVdTB8GV are all the python modules available. Ram is one one issue with it though not really the issue here. But it's also lacking compile environments and because it's MIPS based I can't compile on my workstation or server to get it to run on it or anything.
[17:52:17] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:52:25] <bjs> chris_pcguy: so you end up with 2 counts, ClassListTest.count and self.count
[17:52:36] *** Joins: kek_2 (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-02c8.v6.ethz.ch)
[17:52:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:53:04] <chris_pcguy> bjs: Thank you. In over 13 years of using python, there's always something new to learn.
[17:53:45] <EtherMan> bahamas: And before you say anything about running as root in that paste... There isn't anything else there... That's the only available account and it lacks the normal apps for adding other accounts... So yea....
[17:54:22] *** Quits: efil4cri_ (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[17:54:48] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[17:54:52] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:54:57] <Wooble> EtherMan: oof. a distro that packages the io module as a separate package from the "core modules" sounds... fun?
[17:55:18] *** Quits: kek_1 (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Ping timeout: 260 seconds)
[17:55:18] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[17:56:08] *** Joins: interweb (~interweb@user/interweb)
[17:56:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[17:56:31] <EtherMan> Python2.7 support is actually better, and is the default... But 2.7 >_<
[17:56:39] *** Quits: monchi (~joints@143.198.92.132) (Remote host closed the connection)
[17:56:50] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:58:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:58:14] *** Joins: Cell2046 (~Cell20@47.9.114.252)
[17:58:26] *** Joins: Sadale (~Sadale@user/sadale)
[17:59:02] <chris_pcguy> bjs: And thank you very much for your gist "python weirdos". That's certainly something to keep in mind.
[17:59:10] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:59:28] <bjs> chris_pcguy: I'm always looking for more examples!
[17:59:55] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:00:49] *** Quits: Cell20 (~Cell20@47.15.135.217) (Ping timeout: 256 seconds)
[18:01:32] *** Joins: byeliad (~byeliad@12.238.230.210)
[18:01:45] *** Quits: Sadale (~Sadale@user/sadale) (Client Quit)
[18:01:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[18:01:53] <Wooble> bjs: surprised it's missing https://docs.python.org/3/faq/programming.html#why-does-a-tuple-i-item-raise-an-exception-when-the-addition-works :)
[18:02:08] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Quit: WeeChat 2.8)
[18:02:11] *** Joins: Guest7 (~Guest7@7.red-79-146-73.dynamicip.rima-tde.net)
[18:02:11] *** Parts: byeliad (~byeliad@12.238.230.210) ()
[18:02:29] *** Joins: Sadale (~Sadale@user/sadale)
[18:02:52] *** Quits: Guest7 (~Guest7@7.red-79-146-73.dynamicip.rima-tde.net) (Client Quit)
[18:02:56] <bjs> Wooble: hmm
[18:03:04] <chris_pcguy> bjs: Is mine too ovbious or do I have to look for something else. It mislead others and my testsuite for over two weeks, I had to look into the logfile by myself. You're never testing hard enough.
[18:03:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:03:28] <chris_pcguy> *misled
[18:04:08] <bjs> chris_pcguy: there are a few ones about class attrs there, but perhaps a mutable class attr might be nice to include, same with Wooble's tuple update
[18:04:22] *** Cell2046 is now known as Cell20
[18:04:43] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[18:04:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[18:04:53] <Wooble> bjs: to be fair the ones you have are a lot more likely to bite people :)
[18:05:19] <Wooble> also to never be a problem again if everyone would just watch ned's names talk when they start using python
[18:05:57] <bjs> Wooble: I've been considering writing something about how Python's attribute lookup works
[18:06:12] <bjs> because I've never found anything that explains it properly
[18:06:55] <Wooble> I've always enjoyed that any discussion ends up pointing to the python 2.3 docs on descriptors because the explanation wasn't found in the docs for any later version :)
[18:07:19] *** Joins: Vonter (~Vonter@user/vonter)
[18:07:50] <bjs> Wooble: enjoy is not the word I'd use
[18:08:31] <Wooble> there should be one obvious place to look for information, and it should never change. clearly.
[18:08:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:08:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:08:55] <bjs> Wooble: maybe we could make it a website and put it somewhere on python.org
[18:08:57] <bjs> we can dream
[18:09:15] <chris_pcguy> There is one already, the IRC channel.
[18:09:22] *** Quits: savolla (~quassel@95.10.204.117) (Ping timeout: 272 seconds)
[18:09:46] <stockh0lm> apparently my keyboard input problem under Wayland could be solved, if my program was an X-app. how could i accomplish that easiest?
[18:09:55] <Wooble> to be fair at some point they added a descriptors howto to the py3 latest docs
[18:10:13] <bjs> Wooble: i think the explanation about MROs still is in the 2.3 docs
[18:10:15] <bjs> to this day
[18:10:38] <stockh0lm> i want it to be a simple text based application, with a terminal look and feel.
[18:10:38] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[18:11:19] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:11:38] <stockh0lm> but i guess it needs an own window. how can i do that?
[18:12:05] <stockh0lm> AND it should run on linux and windows
[18:12:06] <Pi-sistance> I had it repeated multiple times that the print function returns nothing. but when I use the def__str__ command I AM making it return something for that specific class?
[18:12:13] <stockh0lm> bah, all so complicated.
[18:12:53] <bjs> Pi-sistance: __str__ isn't print,  so I'm not sure what the question is
[18:13:00] *** Quits: vakera_pingveno_ (~dan@2600:1700:21f9:b150::30) (Ping timeout: 240 seconds)
[18:13:00] <SnoopJ> Pi-sistance, print() will always return None. __str__ on a class will return whatever the method returns, which is usually a string.
[18:13:31] <bjs> Pi-sistance: print(x) returns None,  but print might call x.__str__() to get the thing to print out.
[18:13:56] <Pi-sistance> my notes are telling that its passing an argument to the print function
[18:13:58] <Pi-sistance> ok
[18:14:09] <bjs> Pi-sistance: what is "it" ?
[18:14:11] <bjs> in your notes
[18:14:20] <Wooble> print(instance) calls instance.__str__()
[18:14:37] *** Quits: euri10[m] (~euri10m]@2a01cb00107fff000178daddf6c3f414.ipv6.abo.wanadoo.fr) (Quit: Client closed)
[18:14:50] <Pi-sistance> "the method determines what happens when an argument is passed to the print function"
[18:14:54] <bjs> Pi-sistance: the definition is something like `def print(x): s = x.__str__(); sys.stdout.write(s + "\n")`
[18:15:14] <bjs> if you want to imagine it like that (the real print is obviously far more complex...)
[18:15:28] <burakcank> hi everyone ! Just wanted to ask here if we really need end-to-end testing for an application using Selenium for instance. There are clearly advantages of implementing such tests, such as testing the actual functionality from a customer's perspective. But I really wonder, for python especially, how can we avoid this overhead maybe ? Do you have any suggestions, easier way of handling this task ?
[18:15:33] <Wooble> Pi-sistance: more like the str() function, but sure, print() uses it too
[18:15:59] <Wooble> Pi-sistance: thing of it as defining how to turn your object into a user-friendly string for display
[18:16:09] <sawk> hello guys, Im trying to write a test for a service I wrote using asyncore.file_dispatcher. It seems that it only works with sys.stdin but not file descriptors open with os.open. When I do os.write in it, the handler inheriting asyncore.file_dispatcher doesn't recognize any buffer wrote in the file
[18:16:14] *** Joins: donnib (~donnib@154.14.4.222)
[18:16:21] <Pi-sistance> ok, so its returned BEFORE going to print, ok thanks.
[18:16:23] <SnoopJ> burakcank, if you don't want to test the bits that are running in the browser (or if you have a way to test them that lives closer to your front-end), you can test just the routes you're providing, perhaps?
[18:16:40] <SnoopJ> Pi-sistance, yes, `print(something)` will be more like `print(str(something))` if `something` is not already a string.
[18:17:25] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[18:18:09] <donnib> Hi, i have following binary value : 0011110000110010 and i only need 0011110000, what can i do to convert that to a decimal number, it should return 240 ?
[18:18:16] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[18:18:21] <Wooble> (presumably typing purists somewhere get sad every time you don't explicitly make the string.)
[18:18:54] <burakcank> SnoopJ: so it really comes down to how much of the app I am willing to test. Even I completely cover all of the routes, there might still be browser problems.
[18:19:12] <Wooble> donnib: you have a str object containing "0011110000110010", or an int object containing 15410?
[18:19:29] <bjs> donnib: do you mean you have a string of 0s and 1s or do you have an actual integer?  and what you mean is you have a 16-bit number and want the most-significant 10 bits?
[18:19:39] <SnoopJ> burakcank, I wouldn't say "willing" so much as "want" but yes.
[18:19:58] <exarkun> sawk: I assume that when it works with sys.stdin, stdin is a pipe or a pty
[18:20:00] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[18:20:32] <exarkun> sawk: most file descriptor readiness polling/notification APIs don't support normal filesystem files
[18:20:46] <exarkun> sawk: also I guess asyncore is deprecated
[18:21:00] <bjs> donnib: if so and if so, then `0b0011110000110010 >> 6 == 240`
[18:21:15] *** Quits: sawk (~quassel@78.6.80.66) (Read error: Connection reset by peer)
[18:21:17] <Wooble> or int(n[:10], 2) for the former
[18:22:04] <exarkun> Wooble: print :: Printable -> IO ()
[18:22:08] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[18:22:17] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[18:22:17] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[18:22:22] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[18:22:48] <exarkun> Wooble: "typing purists" would have to be just as angry about str(o) as print(o) if it were a problem, good thing it isn't :)
[18:23:00] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[18:24:08] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[18:24:24] *** Joins: interweb (~interweb@user/interweb)
[18:24:48] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[18:24:51] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[18:24:56] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[18:24:57] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:27:03] *** Joins: daevski (~daevski_@76-253-184-89.lightspeed.rlghnc.sbcglobal.net)
[18:27:40] <donnib> bjs i do actualy have a real integer and documentation specifies to use U6 , U for usigned and 6 for the Binary Point Location
[18:27:53] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[18:28:05] <bjs> donnib: documentation... of what?
[18:28:23] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.255)
[18:28:43] <donnib> it's a value i read from modbus and the value is documented to be U6
[18:29:20] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[18:30:01] *** Joins: ali1234[m] (~ali1234@user/ali1234)
[18:30:16] *** Quits: Seto_Kaiba (~hunterkll@remote.kisaracorporation.com) (Ping timeout: 272 seconds)
[18:30:21] <bjs> donnib: binary point?  I'm not entirely sure what you mean. If you just want to remove the lower 6 bits, then `>> 6` works as per my example
[18:30:36] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.255) (Ping timeout: 240 seconds)
[18:32:21] *** Joins: interweb (~interweb@user/interweb)
[18:32:30] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[18:34:09] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:7799:3815:c396:4ca9:5cba)
[18:34:49] *** Quits: Cell20 (~Cell20@47.9.114.252) (Ping timeout: 256 seconds)
[18:34:52] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[18:35:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:35:23] <SnoopJ> argparse question: is there a public API for querying an ArgumentParser about the values of `dest` that will be in the resulting Namespace? This works, but uses implementation details: https://bpa.st/6JKA
[18:35:49] <SnoopJ> (I know about subparsers but I am drafting a patch for something upstream that doesn't use them)
[18:36:28] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:37:08] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[18:37:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:7799:bd02:d02c:e3df:fcf1) (Ping timeout: 240 seconds)
[18:37:37] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 240 seconds)
[18:37:39] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Ping timeout: 256 seconds)
[18:37:43] *** Quits: komikat (~komikat@183.82.154.239) (Remote host closed the connection)
[18:38:12] *** Quits: capn (~capn@user/capn) (Ping timeout: 240 seconds)
[18:38:18] *** Quits: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net) (Quit: Leaving.)
[18:39:00] *** Joins: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net)
[18:39:01] *** Quits: qlixed (~qlixed@181.44.129.13) (Read error: Connection reset by peer)
[18:39:21] *** Quits: Croves (~Croves@2804:58:c0e1:9500:4d:6a89:d03b:138a) (Ping timeout: 256 seconds)
[18:39:56] *** Joins: bahamas (~lucian@84.232.140.52)
[18:40:09] *** Quits: CrypticSquared (~CrypticSq@115.69.19.26) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:40:11] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[18:40:17] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:40:25] *** Joins: CrypticSquared (~CrypticSq@115.69.19.26)
[18:40:32] *** Joins: capn (~capn@user/capn)
[18:40:53] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[18:41:04] *** Joins: moog_ (~moog@107.77.244.141)
[18:41:15] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[18:42:26] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[18:42:42] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[18:43:25] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[18:43:36] *** Quits: moog (~moog@107.77.244.141) (Ping timeout: 256 seconds)
[18:43:43] *** Joins: interweb (~interweb@user/interweb)
[18:44:39] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[18:44:53] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[18:45:07] *** Joins: dante-as (~dante-as@188.24.161.140)
[18:45:41] *** Joins: ice9 (~ice9@user/ice9)
[18:46:49] *** Quits: jringstad__ (~Amadiro@31.11.55.179) (Quit: Leaving)
[18:46:57] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Read error: Connection reset by peer)
[18:47:17] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[18:47:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:48:14] *** Joins: bluedust_ (~bluedust@61.3.164.166)
[18:48:35] *** Quits: _wovixo_ (~wovixo@128.104.205.49) (Quit: Leaving)
[18:48:43] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[18:48:50] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:49:00] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:49:19] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[18:49:19] *** Joins: menace (~someone@user/menace)
[18:49:23] *** menace is now known as Deknos
[18:49:34] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[18:49:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:49:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[18:50:53] <EtherMan> Oh yea, this is gonna be popular with my iptv provider. Currently three instances of the script checking every channel running. But it works! No more issues with multiple scripts... I hope >_<
[18:50:57] *** Quits: bluedust (~bluedust@103.165.167.221) (Ping timeout: 240 seconds)
[18:51:15] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:53:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:53:15] *** Joins: jmd (~user@de.cellform.com)
[18:53:57] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:54:34] *** Joins: nre (~nre@55d496b8.access.ecotel.net)
[18:55:34] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (Remote host closed the connection)
[18:56:30] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:57:50] *** julius is now known as raffaem
[18:58:26] *** Joins: waynew (~wayne@user/waynew)
[18:58:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:59:35] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Client Quit)
[19:01:25] <bahamas> EtherMan: what limits you from using requests? the fact that you can only use packages provided by the distro? or the fact that requests needs compiling? (I never noticed a compilation step when installing it, but I never paid attention either)
[19:02:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[19:02:35] *** Quits: luva (~luva@45.141.152.62) (Ping timeout: 272 seconds)
[19:02:52] <EtherMan> bahamas: There is no requests in dist repos, and there is no pip. And I've tried putting the requests module in manually with disasterous results (it crashed Enigma2, which is the UI used to actually watch the stuff on the box)
[19:03:18] *** Joins: luva (~luva@45.141.152.52)
[19:04:47] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:7799:3815:c396:4ca9:5cba) (Remote host closed the connection)
[19:04:49] <bahamas> ah, I see. pip is the missing piece
[19:05:26] <EtherMan> There is pip... For 2.7... But not py3 >_<
[19:05:30] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:9041:8dee:7588:a871)
[19:05:44] <bahamas> EtherMan: but you have virtualenv. maybe the env that you create comes with pip
[19:06:09] *** Joins: kts (~kts@103.73.237.103)
[19:06:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:fde8:44d1:927a:3cf9)
[19:06:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:fde8:44d1:927a:3cf9) (Changing host)
[19:06:32] *** Joins: skapata (~Skapata@user/skapata)
[19:07:36] <EtherMan> No idea how to even use that. The package is installed, but meh. This worked now so it's fine :)
[19:07:41] *** Quits: dante-as (~dante-as@188.24.161.140) (Ping timeout: 256 seconds)
[19:07:56] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[19:09:32] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[19:09:33] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[19:09:50] *** Joins: dante-as (~dante-as@188.24.161.140)
[19:11:00] *** Joins: Scarecr0- (scarecr0w@user/scarecr0w)
[19:11:30] *** Quits: Scarecr0- (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[19:11:55] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[19:12:53] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[19:13:00] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[19:13:53] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[19:14:02] *** Joins: crashrep (~crashrep@user/crashrep)
[19:14:07] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:15:35] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[19:15:41] <zware> Hi folks.  My search-fu is failing me; is there any way to tell pip that it's ok to install ~=5.0 or ~=6.0 other than >=5,<7?
[19:16:11] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[19:16:15] <exarkun> Why don't you want to use `>=5,<7`?
[19:16:28] <zware> Probably no good reason :)
[19:18:16] <trace987> if you have a matrix of strings that is large enough: Does it make sense to exchange this with a numpy datastructure for speed improvement?
[19:18:36] <zware> We're using compatibility pins everywhere else, and I'd rather stick with them if it makes sense, but I'm starting to think it just doesn't make sense and I need to get over it
[19:19:24] <zware> Or maybe it's more that I don't want to explicitly cap it at 7 when I don't know whether 7 will actually break us or not
[19:19:39] <exarkun> trace987: fixed-length strings of the same size?
[19:20:04] *** Joins: jmd (~user@de.cellform.com)
[19:20:13] <exarkun> zware: in my experience, it will.
[19:20:46] <exarkun> zware: But "should I pin" seems like a very different question
[19:21:14] <zware> exarkun: Except in this particular case, v6 made absolutely no difference to us :).  And other packages have made a royal mess of things for us by explicitly pinning the max version unnecessarily
[19:21:18] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[19:22:12] <exarkun> zware: pinning choices by your dependencies have no bearing on whether /you/ benefit from pinning or not - unless you're thinking about the impact of some other codebase which depends on yours?
[19:23:10] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[19:23:50] <exarkun> and "vN didn't break anything so vN+1 won't break anything" also has a suspicious smell to it
[19:23:53] <SnoopJ> trace987, numpy can represent strings fairly well if there's an upper bound on their size. Probably worth at least doing a numerical experiment.
[19:25:38] <SnoopJ> probably depends on what you're doing, but if that includes mutation of the strings, getting away from the builtin type (which is immutable!) has good odds of avoiding some copies.
[19:26:05] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[19:27:21] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[19:28:59] <Masklin_Gurder> set.difference(a,b,c)   means a-b-c ?
[19:29:11] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.255) (Ping timeout: 272 seconds)
[19:29:21] *** Joins: xkuru (~xkuru@user/xkuru)
[19:29:37] <Klinda> is there some channels about spark?
[19:30:01] *** Quits: kts (~kts@103.73.237.103) (Quit: Konversation terminated!)
[19:30:05] *** Joins: jmd (~user@de.cellform.com)
[19:30:19] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[19:30:22] <SnoopJ> Masklin_Gurder, yes, those are synonyms
[19:30:59] <SnoopJ> Klinda, in general you can `/msg alis list <query>` to look for channels on this network. I see #apache-spark exists, but has only two users in it.
[19:31:06] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[19:31:44] *** Joins: ELw38 (~Adium@2a01:e0a:94a:4e20:292c:75e1:95f:5791)
[19:32:07] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[19:32:25] <Klinda> thanks
[19:33:00] *** Joins: zebrag (~chris@user/zebrag)
[19:33:03] *** Quits: beco (~beco@2804:351c:dd03:3500:e47a:cfbe:a980:776b) (Quit: Leaving)
[19:33:28] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:33:33] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:2cff:243d:4d15:5c99)
[19:33:37] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[19:34:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:35:25] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[19:35:27] *** Joins: cdown_ (~cdown@163.114.131.1)
[19:35:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[19:35:34] *** Quits: KevinX (~KevinX@user/KevinX) (Remote host closed the connection)
[19:36:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:36:09] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[19:36:11] *** Parts: ELw38 (~Adium@2a01:e0a:94a:4e20:292c:75e1:95f:5791) ()
[19:36:20] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[19:36:45] *** Joins: paul424 (~tom@apn-95-41-195-37.dynamic.gprs.plus.pl)
[19:37:09] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[19:37:59] <cren> hey, is it OK to send questions about third-party packages here?
[19:38:17] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[19:38:17] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[19:38:18] *** cdown_ is now known as cdown
[19:38:44] *** Joins: admin123 (~harrymore@47.23.53.26)
[19:40:22] <SnoopJ> cren, yes, anything Python is on-topic
[19:40:46] *** Quits: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net) (Quit: Leaving.)
[19:41:12] *** Joins: mugwort (~mugwort@host86-187-225-222.range86-187.btcentralplus.com)
[19:42:38] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[19:42:55] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:44:06] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:44:24] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[19:44:25] *** Quits: dante-as (~dante-as@188.24.161.140) (Quit: Client closed)
[19:47:18] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[19:47:50] *** Quits: MeanEYE (~Mladen@87.116.177.143) (Quit: So long and thanks for all the fish...)
[19:47:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[19:48:00] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[19:50:13] *** Joins: drbeco (~beco@2804:351c:dd03:3500:e47a:cfbe:a980:776b)
[19:50:42] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[19:50:44] *** Joins: vlm (~vlm@user/vlm)
[19:51:48] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[19:52:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[19:52:42] *** Joins: sawk (~quassel@78.6.80.66)
[19:52:50] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[19:53:53] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[19:54:07] *** Parts: adhawkins (~adhawkins@user/adhawkins) (The Lounge - https://thelounge.chat)
[19:54:12] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Read error: Connection reset by peer)
[19:54:12] <sleepingforest> say i have two pydantic BaseModels, ModelA and ModelB, with subclasses ModelAXYZ ModelBXYZ.  How can i defined a pydantic model that is a typed 2 tuple bound to ModelA and ModelB? e.g. Pair[ModelA_T, ModelB_T]
[19:54:31] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[19:54:31] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:55:19] *** launchd is now known as l
[19:55:58] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[19:56:12] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[19:56:24] *** Joins: jmd (~user@de.cellform.com)
[19:57:38] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[19:57:50] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 256 seconds)
[19:57:51] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b50d:b0f2:35af:3ee8) (Ping timeout: 245 seconds)
[19:57:58] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[19:58:08] *** Joins: jamea (~jamea@189.237.20.19)
[19:58:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.63)
[19:58:19] *** Joins: dthpulse (~quassel@podciarou.sk)
[19:58:47] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:1173:1c43:74a8:c329) (Ping timeout: 252 seconds)
[19:58:59] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:59:01] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:59:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:59:05] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[19:59:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[19:59:15] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 256 seconds)
[19:59:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[19:59:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:00:14] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[20:00:24] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[20:00:35] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[20:00:52] *** Quits: Limits (~Limits@user/Limits) (Quit: WeeChat 3.4)
[20:01:03] *** Quits: mugwort (~mugwort@host86-187-225-222.range86-187.btcentralplus.com) (Quit: Client closed)
[20:01:05] *** Joins: Limits (~Limits@user/Limits)
[20:01:07] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[20:01:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[20:01:39] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:01:47] *** Joins: LordKalma (~LordKalma@server.portaldoradioamador.pt)
[20:01:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[20:02:03] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[20:02:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[20:02:17] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[20:02:47] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[20:03:47] *** Joins: DaPinkOne (~Dap@user/dap)
[20:04:55] *** Quits: jamea (~jamea@189.237.20.19) (Ping timeout: 256 seconds)
[20:05:05] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[20:06:12] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[20:06:24] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:06:28] *** Joins: Talla (~Talla@114.5.111.244)
[20:07:02] *** Quits: Limits (~Limits@user/Limits) (Quit: WeeChat 3.4)
[20:07:17] *** Joins: Limits (~Limits@user/Limits)
[20:07:26] *** Quits: Limits (~Limits@user/Limits) (Client Quit)
[20:07:28] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[20:08:05] *** Joins: jmd (~user@de.cellform.com)
[20:08:44] *** Quits: PurpleBooger (~purpleboo@047-040-214-188.res.spectrum.com) ()
[20:08:49] *** Joins: magla (~gelignite@55d4d6c3.access.ecotel.net)
[20:10:57] *** Joins: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[20:10:58] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 272 seconds)
[20:11:36] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 272 seconds)
[20:12:39] *** Quits: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Quit: WeeChat 3.4)
[20:12:54] *** Joins: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[20:12:59] *** Joins: sinan (~sinan@85-76-76-29-nat.elisa-mobile.fi)
[20:13:20] <cren> okay, so does anyone know how I can filter the rows of a pandas DataFrame by the contents of one of the rows? It sounds simple but I can't find the method to do it
[20:13:47] *** Joins: mugwort (~mugwort@host86-187-225-222.range86-187.btcentralplus.com)
[20:13:52] <SnoopJ> cren, can you elaborate on what "contents of one of the rows" means?
[20:14:13] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:2080:525:cc66:e930)
[20:15:05] <cren> SnoopJ: I've read a CSV into a DataFrame and I now want to filter out all the rows which don't have a certain value for one of the columns
[20:15:15] *** Joins: MeanEYE (~Mladen@87.116.162.168)
[20:15:28] <cren> ah, make that a value which follows specific rules, not a specific value
[20:15:35] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:15:47] *** Quits: nomic (~nomic@185.198.243.172) (Quit: Leaving)
[20:15:54] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[20:15:57] *** Quits: XV9 (~XV8@2601:5cb:c001:50::5524) (Ping timeout: 240 seconds)
[20:15:58] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[20:16:13] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[20:16:22] <SnoopJ> the certain-value spelling would be something like: `row_idx = (df.colname == certain_value); filt_df = df.iloc[row_idx, :]`
[20:16:59] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:17:03] <SnoopJ> for "follows specific rules" you'd probably do `row_idx = rules_func(df.colname)` where `rules_func()` eats the Series object corresponding to that column and spits out a Series object of booleans
[20:17:06] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[20:17:38] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[20:17:38] *** Joins: DaPinkOne (~Dap@user/dap)
[20:17:43] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[20:18:27] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[20:18:27] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[20:18:46] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[20:19:15] <SnoopJ> oh sorry, I guess that should be .loc, not .iloc
[20:19:33] <ianliu> When using Sphinx, is it possible to have some python code generate images for the documentation? I would like to generate a plot with matplotlib and include the image.
[20:20:08] <mawk> how do I create a new class using type(), that uses a given metaclass?
[20:20:18] <mawk> I call the metaclass instead of calling type() ?
[20:20:25] <mawk> that sounds about right
[20:20:30] <SnoopJ> cren, here's an example where the rules function is "contains a lowercase 'a'": https://bpa.st/OIWQ
[20:20:38] *** Joins: rwb (~augh@209.141.39.190)
[20:21:23] <SnoopJ> I think you need to use .loc and not .iloc there because the resulting Series is still associated with the name "first_name"
[20:22:02] *** Quits: tWqaq_ (~tWqaq@101.93.138.74) (Quit: Leaving)
[20:22:33] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[20:23:07] *** Quits: chris_pcguy (~chris_pcg@i.broke-the-inter.net) (Quit: Leaving)
[20:25:07] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[20:25:12] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:25:17] *** Joins: bluedust (~bluedust@89.45.90.217)
[20:25:27] *** Quits: bluedust_ (~bluedust@61.3.164.166) (Read error: Connection reset by peer)
[20:25:50] *** Joins: cutotopo (~cutotopo@151.51.213.208)
[20:26:02] *** Joins: bluedust_ (~bluedust@61.3.164.166)
[20:26:25] *** Quits: cutotopo (~cutotopo@151.51.213.208) (Remote host closed the connection)
[20:26:44] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 256 seconds)
[20:27:13] *** Quits: paul424 (~tom@apn-95-41-195-37.dynamic.gprs.plus.pl) (Quit: Leaving)
[20:28:26] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 256 seconds)
[20:28:39] *** Joins: Dap (~Dap@user/dap)
[20:28:48] *** Joins: bluedus__ (~bluedust@89.46.114.243)
[20:29:07] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[20:29:21] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:29:26] *** Joins: esv (~esv@74.124.178.154)
[20:29:58] *** Quits: bluedust (~bluedust@89.45.90.217) (Ping timeout: 272 seconds)
[20:30:14] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:7799:3815:c396:4ca9:5cba)
[20:30:26] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:31:01] *** dcaro is now known as dcaro_away
[20:31:24] *** Quits: dayimproper (amit@2a01:7e00::f03c:91ff:fe08:f7b7) (Ping timeout: 240 seconds)
[20:32:03] *** Joins: stblaha (~stblaha@user/stblaha)
[20:32:03] *** Quits: stblaha (~stblaha@user/stblaha) (Client Quit)
[20:32:09] *** Joins: stblaha_ (~stblaha@user/stblaha)
[20:32:29] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:32:41] *** Quits: bluedust_ (~bluedust@61.3.164.166) (Ping timeout: 256 seconds)
[20:33:15] *** Quits: mugwort (~mugwort@host86-187-225-222.range86-187.btcentralplus.com) (Ping timeout: 256 seconds)
[20:33:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:7799:9041:8dee:7588:a871) (Ping timeout: 240 seconds)
[20:36:05] *** Quits: nre (~nre@55d496b8.access.ecotel.net) (Ping timeout: 256 seconds)
[20:37:22] *** Quits: stblaha_ (~stblaha@user/stblaha) (Quit: leaving)
[20:37:24] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:38:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:39:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:39:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:39:29] *** Joins: RedAero (~RedAero@20014C4E20706500FDBE9C0086EE679F.dsl.pool.telekom.hu)
[20:39:46] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[20:40:01] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:40:10] <jinsun> ianliu: looks like matplotlib has a sphinx extension https://matplotlib.org/sampledoc/extensions.html
[20:40:33] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00156861a741d5de6c.ipv6.abo.wanadoo.fr)
[20:43:22] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[20:43:24] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:e8ba:13ba:f86b:c895)
[20:43:55] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 272 seconds)
[20:44:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:44:18] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Remote host closed the connection)
[20:44:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:44:31] *** Quits: parv (~quass@user/parv) (Quit: parv)
[20:44:54] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[20:44:58] *** Joins: dayimproper (amit@2a01:7e00::f03c:91ff:fe08:f7b7)
[20:45:09] *** Quits: Dap (~Dap@user/dap) (Ping timeout: 256 seconds)
[20:45:30] *** Joins: bluedust (~bluedust@61.3.164.166)
[20:45:53] *** Joins: szymon (~ugh@37.120.211.198)
[20:46:36] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:e8ba:13ba:f86b:c895) (Client Quit)
[20:47:26] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[20:47:37] *** Joins: KevinX (~KevinX@user/KevinX)
[20:48:14] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[20:48:34] *** Joins: szymon_ (~ugh@37.120.211.204)
[20:48:44] *** Joins: DaPinkOne (~Dap@user/dap)
[20:48:54] *** Joins: snalty (~Shhh@user/snalty)
[20:49:17] *** Joins: nomic (~nomic@185.198.243.172)
[20:49:22] *** Joins: Moosadee (~Moosadee@216.185.233.27)
[20:49:23] *** Quits: Moosadee (~Moosadee@216.185.233.27) (Read error: Connection reset by peer)
[20:49:36] *** Quits: bluedus__ (~bluedust@89.46.114.243) (Ping timeout: 272 seconds)
[20:50:25] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:51:30] *** Quits: szymon_ (~ugh@37.120.211.204) (Client Quit)
[20:51:40] *** Quits: szymon (~ugh@37.120.211.198) (Ping timeout: 256 seconds)
[20:51:40] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:51:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:52:02] *** Joins: Pixi (~Pixi@user/pixi)
[20:52:04] <hodapp> ooh, that could be handy
[20:52:15] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[20:52:22] *** Quits: sawk (~quassel@78.6.80.66) (Remote host closed the connection)
[20:52:25] *** Joins: bluedust_ (~bluedust@static-198-54-134-121.cust.tzulo.com)
[20:52:30] <hodapp> it's almost always nice when plots can be generated along with the rest of the documentation they belong in
[20:52:39] *** Joins: Moosadee (~Moosadee@216.185.233.27)
[20:52:49] <SnoopJ> I think that might be how matplotlib themselves do it
[20:52:59] *** Quits: sco1 (~sco1@charon.whatbox.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[20:53:01] *** Quits: Moosadee (~Moosadee@216.185.233.27) (Read error: Connection reset by peer)
[20:53:12] *** Joins: jamea (~jamea@189.237.25.111)
[20:53:13] *** Quits: jamea (~jamea@189.237.25.111) (Read error: Connection reset by peer)
[20:53:19] *** Joins: Moosadee (~Moosadee@216.185.233.27)
[20:53:43] *** Quits: snalty (~Shhh@user/snalty) (Client Quit)
[20:54:13] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[20:54:28] *** Joins: mattfoxxx (~mattfoxxx@200116b822640300aca7387ac9215c19.dip.versatel-1u1.de)
[20:54:30] *** Joins: jamea (~jamea@189.237.25.111)
[20:54:37] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[20:55:03] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (Quit: ZNC 1.8.2 - https://znc.in)
[20:55:15] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[20:55:22] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[20:55:37] *** Quits: bluedust (~bluedust@61.3.164.166) (Ping timeout: 240 seconds)
[20:55:45] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:b499:2e2d:5a8b:934e) (Remote host closed the connection)
[20:56:18] *** Joins: ThatOtherGuy (~LogicAsid@user/logicaside)
[20:56:34] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 272 seconds)
[20:56:37] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 240 seconds)
[20:56:44] *** Quits: dude-x_ (~textual@72.76.74.165) (Read error: Connection reset by peer)
[20:56:52] *** Joins: dude-x (~textual@72.76.74.165)
[20:57:14] *** ThatOtherGuy is now known as LogicAside
[20:57:20] *** Quits: ejjfunky2 (~ejjfunky@125.164.19.196) (Ping timeout: 256 seconds)
[20:57:44] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:57:49] *** Joins: DaPinkOne (~Dap@user/dap)
[20:58:03] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[20:58:06] *** Joins: paul424 (~tom@ip-5-172-233-54.multi.internet.cyfrowypolsat.pl)
[20:58:33] *** Quits: dude-x (~textual@72.76.74.165) (Read error: Connection reset by peer)
[20:58:52] *** Joins: dude-x (~textual@72.76.74.165)
[20:59:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:01:09] *** Joins: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it)
[21:01:47] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[21:02:06] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[21:02:57] *** Joins: pepper (~pepper@user/pepper)
[21:03:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:04:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:05:08] *** Joins: bluedust (~bluedust@61.3.164.166)
[21:05:09] <ianliu> jinsun: thanks!
[21:05:31] *** Joins: bahamas (~lucian@84.232.140.52)
[21:05:59] *** Joins: georgios (~georgios@user/georgios)
[21:06:43] *** Joins: matsaman (~matsaman@user/matsaman)
[21:08:14] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[21:08:16] *** Joins: Cera (~Cera@user/Cera)
[21:08:40] *** Quits: bluedust_ (~bluedust@static-198-54-134-121.cust.tzulo.com) (Ping timeout: 256 seconds)
[21:09:49] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[21:10:06] *** Joins: thevar1able (~textual@46.39.45.122)
[21:10:38] *** Joins: oncall-pokemon (uid134758@id-134758.uxbridge.irccloud.com)
[21:11:30] *** Quits: jamea (~jamea@189.237.25.111) (Ping timeout: 256 seconds)
[21:13:46] *** Quits: rsx (~dummy@ppp-188-174-148-71.dynamic.mnet-online.de) (Quit: rsx)
[21:14:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:14:18] *** Joins: TIMER (~TIMER@90.68.87.93)
[21:14:31] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:14:31] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[21:15:23] *** Joins: Auron (Auron956@user/auron)
[21:15:26] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[21:16:39] *** Quits: esv (~esv@74.124.178.154) (Remote host closed the connection)
[21:17:23] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[21:20:57] *** Quits: MajorBiscuit (~MajorBisc@c-001-029-040.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[21:21:24] *** Quits: saroy (~Sandipan@43.252.250.104) (Ping timeout: 240 seconds)
[21:21:43] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[21:25:09] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[21:29:00] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.63) (Ping timeout: 240 seconds)
[21:30:10] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[21:31:28] *** Joins: B4re (~l4yer@84.69.191.245)
[21:31:37] *** Quits: l4yer (~l4yer@84.69.191.245) (Ping timeout: 240 seconds)
[21:33:36] *** Joins: jamea (~jamea@189.237.25.111)
[21:33:37] *** Quits: jamea (~jamea@189.237.25.111) (Read error: Connection reset by peer)
[21:33:58] *** Joins: jamea (~jamea@189.237.25.111)
[21:34:26] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[21:35:10] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Remote host closed the connection)
[21:35:10] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[21:35:10] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[21:35:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:35:17] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-218.range86-150.btcentralplus.com)
[21:35:25] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:2cff:243d:4d15:5c99) (Ping timeout: 240 seconds)
[21:35:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:37:31] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[21:39:58] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[21:40:02] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[21:40:37] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[21:41:35] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[21:41:51] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[21:43:37] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[21:44:17] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[21:44:33] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[21:44:39] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[21:45:29] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[21:47:56] *** Joins: onichomp (~onichomp@2806:264:4408:55:40f3:bd5f:4b18:7f92)
[21:49:46] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[21:49:46] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[21:51:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:51:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:51:40] *** Quits: raffaem (~jully@95.74.77.25) (Ping timeout: 272 seconds)
[21:52:37] *** Joins: snalty (~Shhh@user/snalty)
[21:52:39] *** Quits: stockh0lm (~Andreas@p200300d2c7075000addd60e21c36287a.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[21:52:54] *** Joins: dob1 (~dob1@user/dob1)
[21:54:17] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[21:54:19] *** Joins: skapata (~Skapata@user/skapata)
[21:54:36] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[21:56:27] *** Quits: dob1 (~dob1@user/dob1) (Client Quit)
[21:56:54] *** Parts: sinan (~sinan@85-76-76-29-nat.elisa-mobile.fi) ()
[21:57:23] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[21:57:24] *** Quits: Moosadee (~Moosadee@216.185.233.27) (Ping timeout: 256 seconds)
[21:57:38] *** Joins: dob1 (~dob1@user/dob1)
[21:58:39] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:e987:1d72:fb71:bc22)
[21:58:54] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[22:00:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:00:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:00:39] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[22:00:39] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[22:00:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:01:48] *** Joins: julius (~raffaem@45.91.20.167)
[22:02:08] *** Quits: magla (~gelignite@55d4d6c3.access.ecotel.net) (Read error: Connection reset by peer)
[22:02:27] *** Joins: magla (~gelignite@55d4d6c3.access.ecotel.net)
[22:03:04] *** Joins: Midjak (~Midjak@82.66.147.146)
[22:03:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[22:04:09] *** julius is now known as raffaem
[22:04:28] *** Quits: TIMER (~TIMER@90.68.87.93) (Quit: Client closed)
[22:04:32] *** Joins: nizzan (~nizzan@static.203.116.201.138.clients.your-server.de)
[22:05:05] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[22:06:12] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[22:06:12] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[22:07:04] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:07:06] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[22:07:21] *** Joins: Vonter (~Vonter@user/vonter)
[22:07:22] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[22:08:12] *** Quits: Talla (~Talla@114.5.111.244) (Ping timeout: 240 seconds)
[22:11:44] *** Joins: crashrep (~crashrep@user/crashrep)
[22:11:50] *** Joins: TIMER (~TIMER@90.68.87.93)
[22:12:00] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[22:12:02] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[22:12:53] *** Joins: frmlof (~frmlof@2607:fb90:d7e:42e4:44c3:c69e:c3ce:631f)
[22:13:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[22:13:44] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[22:14:16] *** Joins: Staunch (~Staunch@150.93.99.34.bc.googleusercontent.com)
[22:14:22] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:15:03] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Quit: Leaving)
[22:15:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:17:14] *** Quits: B4re (~l4yer@84.69.191.245) (Ping timeout: 250 seconds)
[22:17:33] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:19:17] *** Quits: frmlof (~frmlof@2607:fb90:d7e:42e4:44c3:c69e:c3ce:631f) (Ping timeout: 240 seconds)
[22:19:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[22:21:06] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:2e1e:4720:c56a:816f) (Quit: pvergain)
[22:22:40] *** Quits: Cera (~Cera@user/Cera) (Quit: Client closed)
[22:22:56] *** Joins: trace987 (~trace@user/trace)
[22:24:37] *** Quits: GiverOfDomani (sid538075@id-538075.tinside.irccloud.com) ()
[22:28:15] *** Joins: dez (uid92154@user/dez)
[22:30:21] *** Joins: Cera (~Cera@user/Cera)
[22:30:37] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Ping timeout: 240 seconds)
[22:31:08] <Cera>  why does nothing show up here? https://i.imgur.com/V5k5ROv.png I am trying to set up my Pycharm to use my WSL anaconda environment
[22:32:40] *** Joins: mexen (uid495612@user/mexen)
[22:32:51] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[22:33:08] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[22:33:59] *** Joins: nomic2 (~nomic@185.198.243.172)
[22:34:16] <Wooble> Cera: how did you get to that screen?
[22:34:20] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[22:35:10] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[22:36:19] *** Parts: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it) ()
[22:36:35] <matsaman> Cera: what OS?
[22:36:56] <Wooble> umm, is WSL available for OSes other than windows? :P
[22:37:43] <Cera> ctrl-alt-s for settings. But maybe I need to make a Project first?
[22:37:43] <Cera> Now I try to make a Project and select my python path, but I do not see my python executable. Here is the path https://i.imgur.com/DpJ3YSP.png and here is what I see https://i.imgur.com/SaqawJi.png
[22:37:55] *** Quits: nomic (~nomic@185.198.243.172) (Ping timeout: 256 seconds)
[22:38:00] *** nomic2 is now known as nomic
[22:38:05] <matsaman> oh WSL you said
[22:38:28] <matsaman> Cera: see if moving your .idea dir elsewhere & restarting pycharm fixes it
[22:38:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:38:37] <Cera> my what
[22:38:48] <matsaman> pycharm uses '.idea' directories for configurations
[22:39:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:40:12] <Cera> so what do you want me to do?
[22:40:23] <matsaman> find it, move it/back it up somewhere else, restart pycharm
[22:41:12] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[22:41:20] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:41:35] *** Quits: admin123 (~harrymore@47.23.53.26) (Ping timeout: 252 seconds)
[22:41:46] <Cera> what would that do
[22:41:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:42:25] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:44:54] <matsaman> avoid a bad config
[22:45:03] *** Quits: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:05] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[22:45:22] <jinsun> are you using PyCharm Professional?, this says using WSL interpreters is a Pro feature https://www.jetbrains.com/help/pycharm/using-wsl-as-a-remote-interpreter.html
[22:45:27] <Cera> oh...
[22:45:31] <Cera> dangit
[22:45:37] *** Joins: l4yer (~l4yer@84.69.191.245)
[22:45:57] *** Joins: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com)
[22:46:04] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[22:47:30] *** Joins: vicfred (~vicfred@user/vicfred)
[22:47:51] *** Quits: pycode (~pycode3@2001:b07:5d28:551:be0a:f2b0:2882:ab8a) (Ping timeout: 245 seconds)
[22:48:03] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 272 seconds)
[22:48:14] <Cera> thanks jinsun. I guess I'll go back to ramming my head into a wall with trying to learn vim
[22:48:25] *** Joins: Betal (~Betal@user/betal)
[22:48:34] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:48:38] <jinsun> with the new wslg in windows 11 you might be able to just install pycharm in linux and use from there, https://www.hanselman.com/blog/can-you-really-develop-with-linux-gui-apps-on-windows-10-with-wslg-how-about-pycharm
[22:48:58] <NoImNotNineVolt> ah that sounds fun.
[22:49:18] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[22:49:21] <Repiphany> There are also other xservers that you can user with wsl
[22:50:19] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[22:50:39] *** Joins: newpy (~newpy@2601:280:4381:1390:ae69:e6d2:88cb:5d3c)
[22:50:43] <NoImNotNineVolt> vgpu seems interesting.
[22:50:52] <matsaman> should work fine natively without WSL also...
[22:51:03] <newpy> scipy.stats.norm().pdf(...) is returning nan, is there a way to avoid this?
[22:51:43] <newpy> when I divide the return value by its sum
[22:52:06] *** Joins: tracey (~trace@user/trace)
[22:52:10] <SnoopJ> newpy, can you clarify whether the *output* is nan, or you are creating nans by dividing by the sum (which can create them) ?
[22:52:18] <NoImNotNineVolt> jinsun: thanks for the link.
[22:52:27] <newpy> SnoopJ, yes I divided by the sum which created them
[22:52:33] <newpy> is there another way to normalize?
[22:52:38] *** Joins: Roey (~Roey@user/Roey)
[22:52:38] *** Roey is now known as FascistCanada
[22:52:39] *** Quits: TIMER (~TIMER@90.68.87.93) (Ping timeout: 256 seconds)
[22:53:10] <SnoopJ> newpy, I would guess that some of that division is 0/0 then
[22:53:30] <newpy> SnoopJ, ah ok I think it's a corner case, I'll just use an if
[22:54:31] *** Quits: trace987 (~trace@user/trace) (Ping timeout: 245 seconds)
[22:54:37] *** Joins: bahamas (~lucian@84.232.140.52)
[22:54:49] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[22:54:53] <SnoopJ> newpy, it may be better to replace or drop the NaN values after the fact
[22:55:01] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[22:55:12] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 256 seconds)
[22:55:21] <newpy> SnoopJ, ah good call
[22:55:52] <jinsun> pdf will give zero only for infinity I think? so could remove those too
[22:56:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[22:56:35] <newpy> SnoopJ, jinsun, is np.nan_to_num() the best method?
[22:56:47] <jinsun> I mean just for this norm() case, other pdfs might give zero in other places too
[22:57:45] <SnoopJ> newpy, nan_to_num() is the conventional way to turn NaNs into a particular number. Whether or not that's sensible depends on your application.
[22:58:27] <jinsun> for removing nans instead of turning to zero you can use np.isnan and boolean indexing
[22:58:30] *** Joins: junebug (~junebug@2600:1700:3db0:2540:6db1:890f:f238:6b46)
[22:59:26] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[22:59:31] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[23:00:05] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[23:00:35] *** Quits: ybonatakis (~iob@90-182-197-112.rcp.o2.cz) (Ping timeout: 256 seconds)
[23:00:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:00:37] <ELFrederich> I spent way to much time on trying to figure out why this code wasn't working... return x.get_minimum_protocol_version() not in ('TLSv1.2_2021')
[23:00:59] <Togra> are you wanting that to return a bool?
[23:01:30] <ELFrederich> Someone, not knowing Python very well, made a simple edit to an existing file.  It used to contain two different strings in that tuple.  They changed it to just one but didn't provide a comma.
[23:01:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:01:56] <ELFrederich> Now it's checking whether is a substring rather than if it's in the tuple.
[23:02:08] <Togra> oooh
[23:02:31] *** Joins: qlixed (~qlixed@181.44.129.13)
[23:02:33] <Togra> it might fix if you change it to a list
[23:02:40] <Togra> so ['TLS...']
[23:02:44] *** Quits: jamea (~jamea@189.237.25.111) (Ping timeout: 250 seconds)
[23:03:09] <Togra> but in this particular situation, could you do x.get_min.. == 'TLS..' ?
[23:03:15] <Togra> or !=?
[23:03:25] *** Joins: ybonatakis (~iob@90-182-197-112.rcp.o2.cz)
[23:03:36] <ELFrederich> in this case, but when a new version comes out it'll probably go back to a list again
[23:03:37] <Togra> of course if you come back around and add more items to the tuple you'd need to change this back
[23:03:40] <Togra> ah ok
[23:03:56] <ELFrederich> I'll flip a coin whether I change it to a {} or a []
[23:03:58] <Togra> I don't work with tuples super often so someone else may know more, or a solution that keeps you using a tuple
[23:04:04] <Togra> yeah, whichever one works
[23:04:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:04:35] <ELFrederich> Just an annoying part of Python that parenthesis are used for multiple things.
[23:04:39] *** Quits: junebug (~junebug@2600:1700:3db0:2540:6db1:890f:f238:6b46) (Quit: Leaving)
[23:04:49] <Togra> oh- yeah that must be it, it must stop being a tuple?
[23:04:52] <ELFrederich> ... that and implicit string concatenation are terrible
[23:04:52] *** Joins: crashrep (~crashrep@user/crashrep)
[23:05:06] <SnoopJ> Togra, `(obj)` isn't a tuple, but `(obj,)` is
[23:05:07] <Togra> it looks like ("stringhere",) works, even with just one element
[23:05:19] <Togra> ha! ok yeah, I just realized it
[23:05:28] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:05:37] <Togra> so now it's just a string, but if you put a comma in there it turns back into a tuple
[23:05:38] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[23:06:03] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[23:06:21] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[23:06:45] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[23:06:57] <Togra> just like Snoop says
[23:07:16] <ELFrederich> now... let's combine my two least favorite parts of Python... "xy" not in ("x" "y" "z")
[23:09:41] *** Joins: krishnac (krishnac@c-73-189-104-236.hsd1.ca.comcast.net)
[23:09:53] <Togra> comma delimit them and it looks like it behaves how you'd expect with a tuple
[23:09:54] <ELFrederich> You can either add commas, or make that a list and it'll behave like you'd think (like a non-python person reading pseudocode would think)
[23:10:19] <Togra> it seems to concatenate them together with a list as well.. I've never set up a list or anything like this before without comma delimiting them
[23:10:20] <exarkun> () are not used to build tuples, fwiw
[23:10:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:11:01] <ELFrederich> Togra, correct, but then it's at least checking whether it's in the list, with parenthesis it's checking for a substring of the concatenation
[23:11:22] <ELFrederich> exarkun, yeah... I never thought of it that way.  It's really the comma
[23:11:37] <meejah> ELFrederich: quoted strings "beside" each other get automatically smashed together (is what's happening above)
[23:12:17] <ELFrederich> meejah, I'm aware of what's happening.  Just venting my frustration.
[23:13:22] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[23:13:54] *** Quits: nkiz (~nki@adsl-89-217-141-227.adslplus.ch) (Ping timeout: 256 seconds)
[23:14:08] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-6d72-f335-2f9d-689a.res6.spectrum.com)
[23:15:05] *** Joins: jamea (~jamea@189.237.20.19)
[23:15:14] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:15:19] *** Joins: nkiz (~nki@adsl-89-217-141-227.adslplus.ch)
[23:15:39] *** Quits: ATAD (~ATAD@user/atad) (Read error: Connection reset by peer)
[23:15:46] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:16:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:16:31] *** Lord_of_Life_ is now known as Lord_of_Life
[23:17:36] <ELFrederich> out of curiosity, any idea where those progress bars come from within pip?  Is it internal to pip or do they use a library?
[23:18:13] *** Quits: onichomp (~onichomp@2806:264:4408:55:40f3:bd5f:4b18:7f92) (Read error: Connection reset by peer)
[23:18:52] *** Joins: onichomp (~onichomp@2806:264:4408:55:40f3:bd5f:4b18:7f92)
[23:19:11] <jinsun> the use a library (rich) but they vendor it, so it internal to pip too I guess
[23:20:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[23:21:33] *** Quits: tracey (~trace@user/trace) (Read error: Connection reset by peer)
[23:21:56] *** Joins: trace987 (~trace@user/trace)
[23:23:55] *** Joins: pgr (~pgr@37.120.156.250)
[23:24:04] <ELFrederich> jinsun, the library is called rich?  I see something called "progress"
[23:24:46] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Ping timeout: 260 seconds)
[23:24:53] <jinsun> yes it is rich.progress
[23:24:55] *** Quits: paul424 (~tom@ip-5-172-233-54.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:24:57] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:25:57] <jinsun> oh there is progress too
[23:26:04] *** Joins: jamea22 (~jamea@189.237.20.19)
[23:26:18] *** Joins: crashrep (~crashrep@user/crashrep)
[23:26:29] <jinsun> they are importing both here https://github.com/pypa/pip/blob/main/src/pip/_internal/cli/progress_bars.py
[23:26:39] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:26:45] <ELFrederich> oh wow... just looked at rich.  That looks nice.  Didn't realize terminals could have blinking text
[23:26:59] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:27:56] *** Quits: jamea (~jamea@189.237.20.19) (Ping timeout: 272 seconds)
[23:28:20] *** Quits: RedAero (~RedAero@20014C4E20706500FDBE9C0086EE679F.dsl.pool.telekom.hu) (Quit: Client closed)
[23:28:42] *** Joins: sudorm (~sudorm@abordeaux-654-1-103-197.w92-162.abo.wanadoo.fr)
[23:29:31] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[23:29:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[23:29:54] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:30:02] *** Quits: NovaXrine_ (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:30:21] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[23:31:05] *** Quits: _VanCity (~Sixx@S0106d850e6cdc670.vs.shawcable.net) (Ping timeout: 252 seconds)
[23:32:10] <jinsun> the other progress is for the legacy progress bar styles I think, they will remove those in a later version
[23:32:19] *** Quits: krishnac (krishnac@c-73-189-104-236.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:32:33] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:2cff:243d:4d15:5c99)
[23:33:03] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:34:02] *** Joins: jwdungeon (~quassel@2601:44:4380:4a10:239b:31bf:2030:811f)
[23:34:29] *** Joins: bahamas (~lucian@84.232.140.52)
[23:34:46] *** Quits: jwdungeon (~quassel@2601:44:4380:4a10:239b:31bf:2030:811f) (Client Quit)
[23:35:02] *** Joins: Viewday11 (~Viewday@user/viewday)
[23:35:28] *** Joins: jwdungeon (~quassel@2601:44:4380:4a10:239b:31bf:2030:811f)
[23:35:39] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:36:14] <exarkun> ELFrederich: https://www.youtube.com/watch?v=koEwVBM4a3U
[23:36:14] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[23:36:36] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[23:36:41] *** jwdungeon is now known as jw_dungeon
[23:36:42] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[23:37:10] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:37:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:38:56] *** Joins: whistl (~whistl@172-125-148-108.lightspeed.tukrga.sbcglobal.net)
[23:39:04] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:39:20] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[23:39:55] *** Quits: pgr (~pgr@37.120.156.250) (Quit: leaving)
[23:40:15] *** Joins: MasterK (~MK@86.124.223.63)
[23:40:22] *** Quits: MasterK (~MK@86.124.223.63) (Remote host closed the connection)
[23:41:21] *** Joins: MasterK (~MK@86.124.223.63)
[23:41:41] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:42:01] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[23:42:26] *** Joins: jamea (~jamea@189.237.20.19)
[23:42:53] *** Joins: navigator (~Navigator@2605:6440:3008:d001::a39)
[23:42:53] *** Quits: MasterK (~MK@86.124.223.63) (Remote host closed the connection)
[23:43:48] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:44:06] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[23:45:40] *** Quits: jamea22 (~jamea@189.237.20.19) (Ping timeout: 272 seconds)
[23:46:19] *** Quits: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[23:46:30] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[23:47:37] *** Joins: d2ed (~d2ed@d-24-145-28-165.paw.cpe.atlanticbb.net)
[23:48:40] *** Joins: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[23:48:45] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:49:06] *** Joins: skapata (~Skapata@user/skapata)
[23:49:37] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 240 seconds)
[23:51:54] *** Joins: upsala (~zcb@185.209.196.137)
[23:52:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:52:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:53:06] *** Joins: jazzy (~jaziz@user/jaziz)
[23:53:57] *** Joins: jamea22 (~jamea@189.237.20.19)
[23:54:11] *** Joins: rsync (~rsync@93.122.248.20)
[23:54:34] *** Quits: Throgkt (~Throgkt@user/throgkt) (Read error: Connection reset by peer)
[23:54:37] <ELFrederich> exarkun, that's pretty cool.  I remember back 20 years ago in college you could do "mplayer -vo aa" or something like that to play movies in ascii art.
[23:56:50] *** Quits: alex11 (~alex11@user/alex11) (Remote host closed the connection)
[23:57:15] *** Joins: arinov (~arinov@213.194.126.155)
[23:57:42] *** Quits: jamea (~jamea@189.237.20.19) (Ping timeout: 272 seconds)
[23:57:54] <aandrew> hey everyone, have any of you ever run across "some_var = []" causing an "OSError: [Errno 22] Invalid argument" error on Windows with Python 3.8?
[23:58:11] <aandrew> it's unfortunately part of a rather large program using dash and this is within a dash callback
[23:58:21] <Wooble> no, almost certainly the wrong line.
[23:58:25] <aandrew> so I can't easily separate it to create a test case
[23:58:38] <aandrew> Wooble: that's what I thought too, but I'm not sure how to help figure out which line it is
[23:59:00] <Wooble> if it's not a call to open() i'd be shocked
[23:59:06] <matsaman> check your inputs, breakpoint() etc
[23:59:34] <aandrew> there should't be any file I/O here but I will dig through some more
[23:59:34] *** Joins: kek_1 (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
