[00:00:43] *** Joins: elisescu (~elisescu@83-93-98-125-cable.dk.customer.tdc.net)
[00:02:04] *** Quits: anotheruser (~user@45.130.86.11) (Ping timeout: 252 seconds)
[00:03:30] *** Quits: Arifd (~Arifd@2a0c:5a80:360e:fa00:c08f:234c:794c:f565) (Quit: Client closed)
[00:04:28] *** Quits: elisescu (~elisescu@83-93-98-125-cable.dk.customer.tdc.net) (Client Quit)
[00:05:12] *** Joins: someuser (~user@41.239.8.171)
[00:08:11] *** Joins: anotheruser (~user@154.6.17.190)
[00:08:49] *** Joins: demon__ (~user@41.239.8.171)
[00:11:21] *** Quits: someuser (~user@41.239.8.171) (Ping timeout: 245 seconds)
[00:12:05] *** Joins: Vall (~durval@plexus.tmp.com.br)
[00:12:34] *** Quits: anotheruser (~user@154.6.17.190) (Ping timeout: 252 seconds)
[00:12:59] <Vall> Hello everyone. I have a bunch of action-camera-generated MP4 H.264 files, and I want to convert them to H.265 the fastest and best quality possible way
[00:14:00] <Vall> My goal is to reduce their size by 1/3 (they are 1080p/30fps files encoded at ~18Mbps, which is really wasteful in my experience -- even for X264)
[00:14:42] *** Joins: anotheruser (~user@185.152.67.131)
[00:14:45] *** Quits: durandal_1707 (~computer@212.15.178.109) (Read error: Connection reset by peer)
[00:14:48] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[00:15:03] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[00:15:15] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Remote host closed the connection)
[00:15:24] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:15:39] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[00:15:59] *** Joins: nillyhan3 (~00000000@user/nillyhan)
[00:16:32] <Vall> I have hardware acceleration (VAAPI) and, with a previous camera, used to run `-c:v hevc_vaapi -vf 'format=nv12,hwupload' -b:v 5900` which transcoded at about 3x speed, and produced very reasonable quality
[00:17:04] *** Joins: durandal_1707 (~computer@95.168.116.161)
[00:17:04] <Vall> This previous camera encoded at ~12Mbps
[00:17:22] *** Quits: nillyhan (~00000000@user/nillyhan) (Ping timeout: 260 seconds)
[00:17:22] *** nillyhan3 is now known as nillyhan
[00:17:36] *** Quits: demon__ (~user@41.239.8.171) (Ping timeout: 245 seconds)
[00:18:10] <Vall> With the new camera (the one which encodes at ~18Mbps), I get only ~2x speed (perhaps because of the increased bitrate on the input?) but the real problem is, quality is horrendous
[00:18:14] <Vall> Any tips?
[00:23:07] <BtbN> If you want to go for maximum quality, you got no other choice than x265
[00:23:17] <BtbN> And it'll take forever to encode
[00:23:22] <BtbN> otherwise, just stick with h264
[00:23:34] <JEEB> generally unless you really must, don't re-encode
[00:23:49] <JEEB> keep it as you got it, since no re-encode other than lossless will keep the quality the same
[00:23:56] <JEEB> and lossy to lossless just makes no sense
[00:25:26] *** Joins: wyatt8740 (~wyatt8740@149.164.111.65)
[00:26:18] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:29:10] <hyrcanus> Vall: if you go h264 to h265 do you want to reduce by 1/3 (= 2/3 size result), or *to* 1/3 original size?
[00:29:12] <softworkz> Vali: why are you using hwupload? you should be using hw acceleration for both, decoding and encoding for better speed (not better quality, though)
[00:30:01] <BtbN> The VAAPI hwencoders are also generally quite terrible. Wouldn't use them if the goal is anything but encode speed
[00:31:02] <softworkz> right. QSV can provide better results
[00:31:53] <Vall> hyrcanus: to 1/3 original size, sorry for not being clear
[00:33:07] <Vall> softworkz: re hwupload, it was part of a recipe ;-) I'm no FFMPEG expert
[00:33:22] <furq> at a guess you should probably do some preprocessing
[00:33:41] <BtbN> Quality will suffer, a lot, with that much compression
[00:33:44] <furq> deshaking/denoising/deblocking or removing whatever the camera is doing that's causing reencoding to go badly
[00:33:56] <Vall> BtbN: speed is important. Every day I have like 12 hours of video to encode, but only about 6 hours of time to encode them in
[00:34:05] <furq> quality won't necessarily suffer that much if you're going from camera asic h264
[00:34:20] <Vall> furq: yeah, camera ASIC H264
[00:34:25] <BtbN> going from already bad hwencoded h264 won't ever get better
[00:34:31] <furq> sure but it might get smaller
[00:34:31] <BtbN> and all the garbage usually in there amplifies
[00:34:48] <furq> and if it's e.g. very noisy then it might look better if you denoise and then reencode
[00:34:51] <Vall> BtbN: the result was much worse than the camera's h264
[00:35:13] *** Quits: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua) (Read error: Connection reset by peer)
[00:35:28] <furq> subjectively better obviously you'll lose detail
[00:35:48] *** Joins: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua)
[00:36:06] <Vall> this is the camera in question: https://www.campark.net/products/campark-v30-native-4k-20mp-eis-touch-screen-wifi-action-camera
[00:36:50] <BtbN> x264 might also still be the best choice here
[00:36:55] <BtbN> it's fast and gives good quality
[00:37:16] <furq> yeah
[00:37:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[00:37:33] <softworkz> for hwa, I would try hevc_qsv
[00:37:47] <furq> if you want fast encoding then x265 isn't really worth it
[00:37:57] <Vall> this is the previous camera, which also recorded in H264 (albeit at ~12MBps) but whose MP4 files I managed to reencode to X265 with much better speed and quality: http://www.soocooplus.com/soocoo-c10s-sports-camera-1080p-wifi
[00:38:15] <Vall> softworkzL is hevc_qsv hardware accelerated?
[00:38:21] <softworkz> yes
[00:38:22] <BtbN> qsv and vaapi use the same hardware, so that's pointless
[00:38:29] <softworkz> no it's no
[00:38:40] <softworkz> qsv is faster and provides better quality
[00:38:41] <BtbN> it's not like QSV will magically make the same encoder chip perform better
[00:38:44] <softworkz> and encoder options
[00:38:54] <furq> qsv has more intel-specific features enabled doesn't it
[00:38:56] <Vall> I was under the impression that only hevc_vaapi was hardware accelerated
[00:39:02] <softworkz> it's not only about encoder chips
[00:39:05] <BtbN> qsv sits on top of vaapi
[00:39:16] <furq> if you're on intel then vaapi is using quicksync
[00:39:18] <softworkz> yes, for accessinf the hw
[00:39:18] <hyrcanus> can you discard segments with no-motion?
[00:39:23] <BtbN> it might have better defaults then, but it being just better than vaapi makes no sense
[00:39:37] <softworkz> qsv has its own gpu kernels
[00:39:53] <softworkz> many more encoding options
[00:39:54] <BtbN> The encoder is dedicated silicion
[00:40:11] <softworkz> certain functions
[00:40:15] <softworkz> but not all
[00:40:26] <softworkz> it's called VEBox
[00:40:31] <Vall> Quicksync is the hw accel buit into Intel CPUs from Skylake on, right?
[00:40:34] <furq> yes
[00:40:43] <furq> on intel that's what vaapi is using
[00:40:47] <Vall> here's my CPU: https://ark.intel.com/content/www/us/en/ark/products/89610/intel-xeon-processor-e3-1535m-v5-8m-cache-2-90-ghz.html
[00:41:04] <furq> qsv is just an intel-specific driver for it
[00:41:11] <BtbN> The encoder quality in a 2015 CPU will be horrible
[00:41:18] <Vall> Will try with hevc_qsv
[00:41:21] <BtbN> If at all, you want to do that with a very recent one
[00:41:47] <Vall> I have ffmpeg 4.4, good enough?
[00:41:52] <furq> like i said if you had good results with this pipeline with one camera and bad results with another then it's probably down to the camera
[00:42:02] <softworkz> yes, but you need to install the Intel Media SDK
[00:42:07] <furq> you probably want to look into filtering
[00:42:37] <Vall> furq: never dealt with filtering. Any good references?
[00:43:39] <furq> it depends what you need to do really
[00:43:55] <furq> is the source file noticeably noisy/blocky/shaky
[00:44:27] <furq> moreso than the old camera
[00:44:37] <Vall> furq: the source file looks good to me. It's the result of ffmpegging it into x265 that looks terrible (but only with that camera)
[00:44:55] <furq> if it's an action camera then maybe different image stabilisation is causing issues
[00:45:02] <Vall> here's what I get with hevc_qevc
[00:45:03] <Vall> [AVHWDeviceContext @ 0x55ec91f6a7c0] Failed to initialise VAAPI connection: -1 (unknown libva error).
[00:45:04] <furq> which is something i've never really had to mess with
[00:45:07] <Vall> [hevc_qsv @ 0x55ec91270180] Failed to create a VAAPI device.
[00:45:19] <Vall> furq: good info re: image stabilisation
[00:45:31] <Vall> the old camera didn't have it, the new one has it
[00:45:40] <furq> there are deshake filters in ffmpeg but i've never had cause to use them
[00:45:40] <Vall> Perhaps I should disable it?
[00:46:26] <furq> i'd expect it being on to be better but who knows
[00:46:36] <Vall> BtbN: > The encoder quality in a 2015 CPU will be horrible -> It was OK with the previous camera
[00:47:03] <Vall> furq: my thoughts exactly (image stabilization on -> better)
[00:47:51] <softworkz> here's an example command line I just found:
[00:47:52] <softworkz> ffmpeg -init_hw_device "qsv=vad:hw_any,child_device=/dev/dri/renderD128" -filter_hw_device vad -f matroska,webm -c:v:0 h264_qsv -hwaccel:v:0 qsv -i "input.mkv" -map 0:0 -map 0:1 -sn -c:v:0 hevc_qsv -g:v:0 150 -maxrate:v:0 3795935 -bufsize:v:0 7591870 -sc_threshold:v:0 0 -keyint_min:v:0 150 -c:a:0 copy out.mkv
[00:47:58] <BtbN> How "okay" it is depends entirely on the material
[00:48:04] <softworkz> the values are probably not suitable
[00:48:10] <BtbN> if you film a chess match, any old decoder will get the job done
[00:48:16] <Vall> BtbN: action camera material ;-)
[00:48:33] <BtbN> that can still be high motion or very low motion
[00:49:24] <Vall> furq: belay that, just checked and image stabilization is off on the new camera, same as in the old (which didn't have it at all)
[00:49:51] <Vall> BtbN: does anyone actually use an action camera to record very low motion material? ;-)
[00:50:05] <Vall> Anyway, it's high-motion
[00:50:17] <Vall> softworkz: thanks
[00:50:19] <BtbN> What an encoder understands as high-motion can vary A LOT from what you perceive as it
[00:50:54] <softworkz> for hwa encoding, it's important to check out the parameters: libx264 provides good quality by default, but hw encoders are usually fast by default and need to be configured
[00:51:15] <softworkz> for good quality
[00:54:13] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[00:54:17] <Vall> softworkz: same error with the above command-line:  [AVHWDeviceContext @ 0x55b3ab1aa040] Failed to initialise VAAPI connection: -1 (unknown libva error).
[00:54:20] <Vall> Device creation failed: -5.
[00:54:22] <Vall> Failed to set value 'qsv=vad:hw_any,child_device=/dev/dri/renderD128' for option 'init_hw_device': Input/output error
[00:54:25] <BtbN> That GPU might just be too old
[00:54:32] <Vall> perhaps I don't have Intel SDK installed?
[00:54:41] <softworkz> no, it's not too old
[00:55:05] <softworkz> you need the latest Intel Media driver, libva and Intel Media SDK installed
[00:55:24] <BtbN> oh, you still need to patch your kernel for that stuff?
[00:55:27] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[00:55:28] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[00:55:30] <softworkz> no
[00:55:58] <softworkz> we are shipping a custom ffmpeg in a package with all that stuff included for Linux
[00:57:46] <softworkz> minimum supported cpu for MSDK is broadwell
[01:01:12] <Vall> OK, just found out there's a package for my distro: libmfxhw
[01:01:20] <Vall> libmfx1 - Intel Media SDK -- shared library
[01:01:41] <softworkz> right, that's it
[01:01:44] <Vall> already installed
[01:01:52] <Vall> so that's not it
[01:02:05] <Vall> anyway to fund exactly what error libav is returning?
[01:02:35] <Vall> fund -> find
[01:03:01] *** Quits: Buster_ (~Buster@buster-net.ru) (Ping timeout: 245 seconds)
[01:03:01] <softworkz> run ffmpeg with -loglevel verbose
[01:03:36] <softworkz> you also need this: https://github.com/intel/media-driver
[01:07:11] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 245 seconds)
[01:07:51] <Vall> softworkz: thanks
[01:10:51] <softworkz> docs are here: https://github.com/Intel-Media-SDK/MediaSDK#documentation
[01:10:59] <softworkz> but these are for the low-level MSDK api
[01:11:29] <softworkz> you need to get this together with the parameters of hevc_qsv
[01:11:36] *** Quits: durandal_1707 (~computer@95.168.116.161) (Read error: Connection reset by peer)
[01:11:39] <softworkz> ffmpeg -h encoder= hevc_qsv
[01:12:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com)
[01:12:06] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[01:12:09] <BtbN> I'm still very much doubting a 2015 hwenc will be at all useful for this
[01:12:10] *** Joins: durandal_1707 (~computer@95.168.116.161)
[01:12:28] <BtbN> It's only a very recent development that some consumer available ones got somewhat non-shit
[01:12:46] <softworkz> it has been a separate product for quite some time and hasn't got much in common with the VAAPI encoder
[01:13:15] <BtbN> It's still a 2015 encode asic
[01:13:31] <softworkz> yes and it might be slow
[01:13:53] <softworkz> but still faster than the CPU at same quality
[01:14:28] <BtbN> I'm not talking about speed
[01:14:36] <BtbN> I'm talking about obtainable quality at any given bitrate
[01:15:41] <softworkz> I don't think the implementation is different across CPUs for hevc_qsv
[01:15:55] <softworkz> sorry, the impl maybe but not the semantics
[01:18:54] <softworkz> with MSDK I never noticed any differences in quality between CPUs with the same settings. Only different speeds
[01:25:33] <softworkz> regarding your question about support in Linux kernels: https://github.com/Intel-Media-SDK/MediaSDK/wiki/Intel-Graphics-Support-in-Linux-Kernels
[01:28:58] <softworkz> also, MSDK has its own GPU which : https://github.com/Intel-Media-SDK/MediaSDK/wiki/Media-SDK-Shaders-(EU-Kernels)
[01:29:20] <softworkz> it's a bit similar to cuda
[01:29:37] <softworkz> https://github.com/intel/cm-compiler
[01:31:56] <Vall> Hummrmrm https://trac.ffmpeg.org/wiki/Hardware/VAAPI "CQP mode cannot be combined with a maximum bitrate"
[01:32:51] <BtbN> well, yes?
[01:32:58] <BtbN> Either you want a constant quality, or constant bitrate
[01:33:06] <BtbN> both at the same time would be some arcane magic
[01:34:37] <Vall> BtbN: but what about max_bitrate?
[01:34:46] <BtbN> what about it?
[01:35:40] <Vall> it doesn't sound incompatible with constant quality. It would mean "use constant quality throughout the video, *limited* to this maximum bitrate".
[01:35:48] <BtbN> Yes it does
[01:35:49] <Vall> Or not?
[01:35:56] <BtbN> what if that constant quality needs more bitrate to achieve?
[01:36:04] <BtbN> Either you got a maximum bitrate, or a constant quality
[01:36:10] <BtbN> both at the same time is a contradiction
[01:36:22] <Vall> hummmrmrmr
[01:36:47] <BtbN> Sounds to me like you just want a maximum bitrate?
[01:36:53] <Vall> how to specify how much quality? `-q` seems to be ignored
[01:37:17] <Vall> (in CQP mode, I mean)
[01:37:38] <BtbN> If you set a maximum bitrate, it will always produce as much quality as possible, unless it'd need more bitrate.
[01:38:12] <Vall> BtbN: you mean, in VBR mode, not ICQ mode, right?
[01:38:19] <Vall> er, CQP
[01:38:32] <BtbN> in whatever mode you specify the maximum bitrate
[01:39:30] <Vall> again, in CQP, maximum bitrate seems to be ignored.
[01:39:44] <BtbN> again, that's about expected and makes logical sense
[01:39:59] <BtbN> either you want a constant quality, or a maximum bitrate
[01:41:19] <Vall> OK, let's say they are incompatible. So, why does FFMPEG accept (and acknowledge in the stderr output) both?
[01:41:42] <BtbN> Ask that to whoever wrote the wrapper for that encoder
[01:41:52] <Vall> if it doesn't make logical sense, FFMPEG should logically return an error, no?
[01:42:06] <BtbN> FFmpeg generally just passes on options to the underlaying actual encoder
[01:42:12] <BtbN> and if it doesn't complain, it's none the wiser
[01:42:27] * Vall sighs
[01:43:23] <Vall> welcome to the land where stuff doesn't really make sense
[01:43:35] <BtbN> Makes pefect sense to me
[01:43:45] <BtbN> it's not at all uncommon that one option takes precedence over the other.
[01:44:04] <Vall> You mean, FFMPEG accepting and acknowledging options that are contractory?
[01:44:10] <Vall> This makes sense to you?
[01:44:26] <BtbN> How is ffmpeg supposed to know what the underlying library does with those options?
[01:44:33] <Vall> it's at the very least a bug in option parsing IMHO
[01:44:38] <BtbN> It can't do a full on logic check for all options for them
[01:44:43] <BtbN> No, it's not.
[01:44:54] <BtbN> There might very well be an encoder that allows the combination.
[01:45:31] <Vall> See, the person who did the docs at https://trac.ffmpeg.org/wiki/Hardware/VAAPI, stating that "CQP mode cannot be combined with a maximum bitrate", knew it .
[01:45:53] <BtbN> In the case of VAAPI, it could even be dependent on the individual backend driver
[01:45:58] *** Quits: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (Remote host closed the connection)
[01:46:08] *** Quits: auth (~auth@user/auth) (Ping timeout: 265 seconds)
[01:46:14] <Vall> Seems to me it's a matter of adding an "if-CQP-and-maximumbitrate-then-error' to the code
[01:47:08] <Vall> it would not depend on the library, because as you said, they are logically incompatible -- and so would be incompatible with *any* library
[01:47:53] <BtbN> And then some encoder decides to give them a special meaning.
[01:48:01] <Vall> So either FFMPEG is wrong in not rejecting it when they are both specified, or it is not "logically incompatible"
[01:48:16] <BtbN> I think x264 even does, and has a quirk-mode that combines the two, but one of the two means something very different then
[01:48:27] <Vall> then some decoder should use some other way to do that same something
[01:48:45] <BtbN> patches welcome then
[01:48:48] *** Quits: durandal_1707 (~computer@95.168.116.161) (Read error: No route to host)
[01:48:52] <Vall> Ok ;-)
[01:49:02] <BtbN> Without breaking compat with any existing commandline
[01:49:05] <BtbN> so, good luck
[01:49:23] <Vall> Last time I submitted patches to a project for something like that, I was soundly ignored ;-)
[01:49:27] <BtbN> Various libraries just do things differently. So there is no sane chance for ffmpeg to do that kind of logic checking.
[01:49:49] <Vall> Ok, thanks for your insights BtbN
[01:50:26] <BtbN> If VAAPI, or QSV, has a hard incompatiblity between those options, it itself should complain if you pass both
[01:50:41] <BtbN> And I bet you, if it now started doing that, someone would show up whos usecase was broken with that
[01:51:02] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[01:55:29] <Vall> So, is there any way, even if indirectly, to reduce the file size when using CQP? `-q` does not seem to help. I used `-q 25` and `-q 13` and they produced *exactly* the same output (same MD5 on both output files)
[01:56:06] <Vall> And then I noticed this gem among both commands' stderr output:
[01:56:18] <Vall>  Stream #0:0(eng): Video: hevc (Main) (hev1 / 0x31766568), vaapi_vld(tv, bt709, progressive), 1920x1080, q=2-31, 30 fps, 15360 tbn (default)
[01:56:29] <Vall> notice the "q=2-31"
[01:56:33] *** Quits: cosimone (~user@93-44-185-107.ip98.fastwebnet.it) (Ping timeout: 250 seconds)
[01:56:36] <BtbN> lower the quality you requested
[01:56:39] <BtbN> that's the whole point of the mode
[01:56:45] <BtbN> "Give me this quality, no matter the cost"
[01:56:59] <Vall> (which I interpret as being exactly the same thing for any q between 2 and 31)
[01:57:21] <softworkz> try -compression_level
[01:57:23] <Vall> OK, so how I indicate how much quality I want? It is not `-q`
[01:57:42] <Vall> softworkz: will try, gimme a min
[01:58:26] <BtbN> Are you sure qsv even used -q?
[01:58:50] <BtbN> http://git.videolan.org/?p=ffmpeg.git;a=blob;f=libavcodec/qsvenc.c;h=06f55604b5765ef6f21af530247d6fa03e28fbce;hb=HEAD#l629 looks like it uses -global_quality
[01:59:11] <Vall> `-global_quality` ahh... so -q and -global_quality are different
[01:59:25] <softworkz> oh, are you doing QSV?
[01:59:32] <softworkz> I thought you were back to vaapi?
[01:59:58] <Vall> yep, using hevc_vaapi. No way to make hevc_qsv work here
[02:00:15] <Vall> is -global_quality available on hevc_vaapi?
[02:00:23] <softworkz> it's tedious to setup, I know
[02:01:36] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:01:37] <BtbN> https://git.videolan.org/?p=ffmpeg.git;a=blob;f=libavcodec/vaapi_encode.c;h=ec054ae7015294031a3403a1e31c975304cd15eb;hb=HEAD#l1676
[02:02:46] <Vall> softworkz: removed `-q NN` and `-b:v NNNNNNN` and added `-compression_level 12, it seems to be having an effect
[02:03:06] <BtbN> I don't think that's the same as constant quality
[02:03:28] <Vall> Well it seemed in the first few mins. Now it's showing "frame= 8037 fps= 93 q=-0.0 size=  550400kB time=00:04:27.98 bitrate=16825.1kbits/s speed= 3.1x
[02:03:33] <BtbN> Could be something like x264s crf
[02:03:46] <softworkz> this is determining the amount of compute resources to invest
[02:03:57] <softworkz> but I've never used it
[02:04:05] <Vall> softworkz: OK, it seems to be going faster, 3x vs 2x
[02:04:30] <Vall> it doesn't seem to be reducing final size (ie, bitrate)
[02:05:00] <softworkz> compression_level
[02:05:00] <softworkz> : Speed / quality tradeoff: higher values are faster / worse quality.
[02:05:07] <softworkz> q / global_quality
[02:05:07] <softworkz> Size / quality tradeoff: higher values are smaller / worse quality.
[02:06:23] <Vall> What I need is to use CQP but to reduce the final size. So far, `-q` doesn't seem to have any effect (in fact ffmpeg stderr output seems to indicate that by the "q=2-31" bit) and `-compression_level 12` makes it faster but doesn't seem to make it smaller
[02:06:53] <Vall> softworkz: so `-q` and `-global_quality` are the same thing?
[02:07:34] <BtbN> Only if the individual encoder makes them to be the same
[02:07:54] <BtbN> The vaapi code is quite a mess, so it's hard to tell which option does what exactly
[02:08:39] *** Quits: Narrat (~omnius@p200300df5f0d8e5306ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:08:41] <Vall> me sighs
[02:08:45] * Vall sighs
[02:09:02] <BtbN> I don't even immediately see an option called just "q" in libavcodec
[02:09:04] <BtbN> like, at all
[02:10:23] <Vall> It's like the old joke about theory and practice: theory is when nothing works but we know exactly why. practice is when everything works but no-one knows why. In FFMPEG re: CQP and output size control (at least with VAAPI) it seems we are combining theory and practice: nothing works and no-one knows why ;-)
[02:10:52] <BtbN> Where did you even find that supposed -q option? I can see no reference to it in libavcodec
[02:12:08] <BtbN> Ah, it's an ffmpeg.c special case, and does some "magic math" on the number and then passes it on to -qscale.
[02:13:41] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[02:13:51] <BtbN> https://git.videolan.org/?p=ffmpeg.git;a=blob;f=fftools/ffmpeg_opt.c;h=7aff43d917968a7f319618def3322d1d340f904f;hb=HEAD#l1620
[02:13:55] <Vall> BtbN: so it should work? Why the "q=2-31" message in the output, then??
[02:14:06] <BtbN> soo, yeah, just use global_quality unless you want to undo that math there all the time
[02:14:46] <Vall> BtbN: `-q 13` and `-q 25` produced exactly the same output file here
[02:15:22] <BtbN> depending on what that lambda is, that might be an absolutely tiny difference
[02:15:27] <Vall> will try with `-global_quality`. Is its default also 25, and higher means less quality and smaller file size?
[02:16:23] <Vall> "that might be an absolutely tiny difference" -> it makes *no* difference, the output files have the exacly same content (same MD5SUM)
[02:16:26] <BtbN> depending on what mode you put the encoder, it'll just straight up ignore either
[02:16:34] <Vall> the mode is CQP
[02:17:19] <Vall> it should work, no? If no, that parameter should I try to reduce file size by sacrifycing quality?
[02:18:05] <BtbN> Does it log that it's in that mode? Cause otherwise, given the mess that the vaapi code is, I wouldn't trust it to do anything anyone expects
[02:18:37] <Vall> lemme check
[02:19:24] <Vall> From the output of `-v verbose`:
[02:19:25] <Vall> [hevc_vaapi @ 0x560deca5c080] Using VAAPI entrypoint VAEntrypointEncSlice (6).
[02:19:25] <Vall> [hevc_vaapi @ 0x560deca5c080] Using VAAPI render target format YUV420 (0x1).
[02:19:25] <Vall> [hevc_vaapi @ 0x560deca5c080] RC mode: CQP.
[02:19:48] <Vall> So it seems to be in CQP mode, right?
[02:19:54] <BtbN> yeah, looks like it
[02:20:01] <Vall> Huh oh
[02:20:10] <Vall> Also on the verbose output: "[hevc_vaapi @ 0x560deca5c080] Invalid quality level: valid range is 0-7, using 7.
[02:20:16] <Vall> LOL
[02:21:16] <Vall> So it's `-global_quality N` where N can only vary from 0 to 7 it seems
[02:21:33] <Vall> BtbN: what do you think?
[02:22:29] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[02:22:47] <BtbN> I mean, if it itself is logging that, yeah
[02:22:58] <Vall> LOL
[02:23:13] <Vall> The more I mess with that, the more I think the above joke applies ;-)
[02:23:47] <BtbN> Not sure what you expect. Video processing is complex. It's impossible to make one generalized perfect interface that magically works for all
[02:23:56] *** Quits: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua) (Quit: Konversation terminated!)
[02:23:59] <Vall> Any hint on what is worst quality/smallest size? 0 or 7?
[02:24:16] <BtbN> I'd still expect larger = worse quality to count
[02:24:22] <BtbN> but it's trivial to check
[02:25:39] <Vall> yep, I agree re: magic and for all. but something that worked non-magically and for most people would be nice.
[02:26:02] <Vall> Yep, checking with `-global_quality 7` right now
[02:26:15] <BtbN> Don't use a low level library/tool like ffmpeg then
[02:26:36] <Vall> yeah it resulted in a 1GB file instead of a 2.7GB one
[02:27:39] <Vall> final bitrate was 6.3Mbps which was what I wanted, coincidentally or not
[02:28:07] <BtbN> You have been using 7 this whole time though?
[02:28:24] <BtbN> Also, if 7 really is the worst, this is going to look like garbage.
[02:28:49] *** Quits: therobin (~UserNick@45.72.211.155) (Remote host closed the connection)
[02:29:50] <softworkz> try this recipe: don't set rc_mode (means 'auto'). then set -b bitrate -maxrate bitrate -bufsize bitrate*2
[02:30:10] <softworkz> then use compression level to control CPU usage/quality
[02:30:23] <BtbN> CPU usage of a hwenc?
[02:30:30] <softworkz> GPU sorry
[02:30:37] <hyrcanus> khadas vim3 libx265 encoding 540p with 4 threads, 4.9 fps.  jetson nano with omxh265enc hwenc seems to be getting 480 fps.  testing continues
[02:31:26] <BtbN> Without specifiy the achieved quality and compression level, those metric don't mean much.
[02:31:54] <BtbN> hwenc being fast is no news
[02:31:56] <hyrcanus> it seems poor quality
[02:32:03] <hyrcanus> i just never got any working before
[02:32:13] <softworkz> oh, I mean without setting q or global_quality
[02:32:31] <Vall> BtbN: just checked against my previous result (using VBR with about the same 6Mbps bitrate) and CQP looks MUCH beter
[02:32:34] <Vall> *better
[02:32:44] <Vall> thanks the FFMPEG gods for small favors
[02:32:55] <BtbN> it'll probably also spike way above 6Mbps if need be
[02:33:02] <Vall> with `-global_quality 7` no less
[02:33:27] <Vall> no problem with spikes, as I'm not streaming nor anything. I just want to save space on local HDD storage. Only final size matters
[02:34:15] <Vall> softworkz: "try this recipe: don't set rc_mode (means 'auto'). then set -b bitrate -maxrate bitrate -bufsize bitrate*2"
[02:34:32] <Vall> auto would be VBR, right? Or no?
[02:34:34] <Vall> lemme check
[02:34:54] <softworkz> it's a mix of VBR and capping
[02:35:24] <softworkz> use a low compression level value for a start
[02:35:40] <softworkz> e.g 2
[02:38:43] <Vall> Heh just checked and FFMPEG complains the same way "Invalid quality level: valid range is 0-7, using 7" even when I specifically state `-global_quality 7`
[02:38:51] <Vall> `-global_quality 6` too
[02:38:52] <Vall> LOL
[02:39:22] *** Quits: dreamon (~dreamon@p54b14aac.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:39:30] <Vall> hevc_vaapi is a real mess -- but it's the only thinkg I have with hardware acceleration right now
[02:39:36] <Vall> so it will have to do
[02:39:39] <BtbN> What is the complete commandline?
[02:40:03] <BtbN> And I still think you will get better results with x264 than vaapi on a 5~6 year old GPU
[02:40:06] <Vall> Here it is: ffmpeg -v verbose -i "$f" -hide_banner -y -nostdin -vaapi_device /dev/dri/renderD128 -c:v hevc_vaapi -vf 'format=nv12,hwupload' -rc_mode CQP -global_quality 6 -compression_level 12 -c:a libmp3lame -b:a 64k /tmp/output.mp4
[02:40:06] <softworkz> BtbN: just about to ask the same
[02:40:34] <Vall> Want a pastebin of the command and output?
[02:40:39] <BtbN> Are you sure it's not complaining about the compression level?
[02:41:00] <softworkz> the max compression level is 7
[02:41:01] <Vall> will omit compression level, please hold
[02:41:03] <BtbN> and why on earth are you using 64kbps mp3 for audio? That's gonna sound like trash
[02:41:22] <Vall> BINGO
[02:41:39] <softworkz> also, I showed you a correct command line above. hwupload is not a good way
[02:41:40] <DeHackEd> holy 1999, batman
[02:42:02] <Vall> hehehe so "quality level" refers to compression_level, not global_quality.
[02:42:10] <Vall> Does that make sense?
[02:42:46] <Vall> softworkz: I must have missed the correct command line. Can you please repost?
[02:42:51] <DeHackEd> I believe it's called the quantization parameter, how much data to discard. higher numbers = discard more data = lower quality
[02:43:11] <DeHackEd> at least that was the old, -qp option. I suspect others have used its behaviour as a guide?
[02:47:51] <softworkz> sorry, the above was for qsv
[02:48:04] <softworkz> I couldn't verify, but similar to this:
[02:48:05] <softworkz> ffmpeg -v verbose -hide_banner -y -nostdin -vaapi_device /dev/dri/renderD128 -hwaccel:v:0 vaapi -hwaccel_output_format vaapi -i "$f" -c:v:0 hevc_vaapi  -b:v:0 6000000 -maxrate:v:0 6000000 -bufsize:v:0 12000000 -sc_threshold:v:0 0 -compression_level 2 -c:a libmp3lame -b:a 192k /tmp/output.mp4
[02:59:46] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[03:03:15] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[03:05:24] *** Joins: therobin (~UserNick@2607:f2c0:9510:9e00:f914:7777:3f6:7770)
[03:06:09] <zumba_addict> Hi all. I saw this in a private group. It's a video. What effect could this be and from what software? https://i.imgur.com/cBlnECR.png
[03:08:10] <Vall> thanks softworkz, will try it right away
[03:08:44] <softworkz> k
[03:18:52] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[03:21:28] <Vall> softworkz: it's running, so far with bitrate very near 6Mbps (expected as it's CBR) and speed ~1.5x
[03:21:39] <Vall> waiting for it to finish in order to analyze
[03:22:42] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[03:24:28] <softworkz> I'm curious what it will be
[03:31:54] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[03:42:40] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[03:43:27] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[03:44:41] <Vall> softworkz: it finished, and I compared a frame where the original encoding sucked. It looks GREAT, even better than my CQP attempts
[03:45:24] <Vall> (original: my first try, which was with the default CBR and the options I posted in my first message today, which you criticized)
[03:45:30] <Vall> So it seems you were right :-)
[03:45:42] <softworkz> I did expect that, but I wanted to see what you say
[03:45:43] <softworkz> :-)
[03:46:03] <softworkz> Now, two more things:
[03:46:11] <BtbN> Wait, are you claiming it improved quality over the original? oO
[03:46:23] <Vall> Nope ;-) (original: my first try, which was with the default CBR and the options I posted in my first message today, which you criticized)
[03:46:38] <softworkz> 1. you can remove the scenecut parameter, it just slipped in accidentally
[03:46:42] <Vall> Not against the originak from the camera ;-)
[03:46:55] <softworkz> 2. you can control quality/speed via the compression param
[03:47:25] <Vall> scenecut? you mean -sc_threshold:v:0, right?
[03:47:30] <softworkz> yes
[03:47:38] <Vall> OK, will do right away
[03:49:06] <softworkz> removing it will slightly improve quality, especially on scene changes
[03:51:33] <Vall> Running it right now. Speed keeps at ~1.5x as expected(did not change compression yet, only cut scenecut) and bitrate is ~6Mbps as expected
[03:53:36] <softworkz> this is our standard recipe for h264_vaapi and meanwhile I remember that at the time when I had been working on this, none of those quality modes had provided any useful results
[03:54:05] <Vall> When it is ready I will compare quality at the same critical frame I mentioned before, and update you on the result
[03:54:10] <Vall> softworkz: KK
[03:55:07] <Vall> Then I will mess around with the -compression_level until I reach about 2x speed, which should suffice for my time constraints, and again compare the result at that same critical frame
[03:55:08] <hyrcanus> every i-frame in my h265 gives me a big visual discontinuity.
[03:55:55] <hyrcanus> is that fixed by making more frequent i-frames?
[03:58:28] <BtbN> that's what happens if you compress too hard
[03:58:52] <BtbN> the iframe will exhaust the bitrate-pool, and it will the slowly recover with the smaller P/B frames, until the next Iframe
[03:59:40] *** Quits: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com) (Ping timeout: 252 seconds)
[04:00:44] <hyrcanus> setting iframeinterval=240 (10 sec) fixed it for me
[04:01:15] <hyrcanus> still occasional 'glitch' but 1/10 sec is better than 1/2 sec
[04:01:15] <BtbN> it will be less frequent
[04:02:19] <Vall> hyrcanus: how much did the file increase?
[04:02:30] <hyrcanus> did not compare that
[04:02:44] <BtbN> If you change nothing else, it'll stay the same, just get a bit better quality
[04:02:55] <BtbN> that kind of effect only happens with heavily constrained bitrate
[04:05:37] <Vall> softworkz: any reason for `-b:a 192k` instead of `-b:a 64k` as I was using? I don't really think the camera puny mic will benefit from more than 64k MP3
[04:06:05] <BtbN> 64k mp3 is seriously bad
[04:06:07] <BtbN> don't do that
[04:06:11] <softworkz> yup
[04:06:23] <softworkz> as long is it's not mono
[04:06:27] <furq> probably just don't reencode the audio at all
[04:06:40] <BtbN> Use opus if you really want that low of a bitrate. Or whatever falls out of there by default.
[04:06:58] <furq> unless the camera is giving you pcm or something
[04:07:45] <furq> and just don't use mp3 in general
[04:07:58] <furq> it's pretty much 30 years old at this point
[04:09:26] <hyrcanus> opus has nice hybrid mode for low-bitrate speech
[04:10:02] <furq> trying to save rate on the audio if your video bitrate is 6mbps is a false economy
[04:10:18] *** Joins: demon__ (~user@41.239.8.171)
[04:10:27] <softworkz> it's a matter of where it needs to play, not of which codecs are nice..
[04:10:43] <furq> well in that case you should use aac
[04:10:45] <softworkz> but ack regarding 'economy'
[04:11:16] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[04:12:45] <Vall> softworkz, BtbN, furq: OK, will do audio copy (the original is AAC 125Kb/s)
[04:13:05] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[04:13:16] <softworkz> best choice
[04:13:30] <furq> yeah
[04:13:58] *** Quits: anotheruser (~user@185.152.67.131) (Ping timeout: 260 seconds)
[04:14:09] <Vall> softworkz: finished without the scenecut parameter, and compared. It sucks about the same as the previous one (with the scenecut), but sucks in a different way (different artifacts at different places, etc)
[04:14:50] <furq> is whatever hwenc you're using actually faster than x264
[04:15:09] <Vall> anyway, as per Occam's Razor (thou shalt not multiply parameters without evident reduction in suckyness) I will proceed without the scenecut parameter
[04:15:12] <Vall> ;-)
[04:15:17] <furq> if your constraint is time rather than cpu usage you should test that
[04:15:33] <Vall> furq: my critical need is to reduce final size
[04:15:33] <softworkz> furq: yes
[04:15:45] <furq> if you want to reduce size then don't use hwenc
[04:15:50] <furq> x264 will beat any consumer hwenc
[04:16:05] <softworkz> Vali: does it need to remain at 4k?
[04:16:14] <Vall> as long  as speed is at least 2x, I can make do
[04:16:32] <furq> the only reason to use consumer hwenc is if you need to run cpu intensive stuff concurrently
[04:16:41] <furq> e.g. capturing game footage
[04:16:44] <softworkz> no
[04:16:48] <softworkz> that's not true
[04:17:09] <Vall> softworkz: it's not 4k (the camera 4k mode is fake, actually a 'upsized' 1080p as the camera sensor can't get more than 1080p resolution).
[04:17:17] <furq> i'm sure there are other use cases but that is the reason consumer hwenc exists in the first place
[04:17:20] <Vall> softworkz: so I work with 1080p only
[04:17:41] <Vall> furq: I use hwenc for speed and power consumption
[04:18:03] <Vall> and x265 for the size reduction without much quality lost
[04:18:12] <softworkz> furq: what do you mean by "consumer hwenc"?
[04:18:21] <furq> nvenc, amf, quicksync
[04:18:26] <softworkz> no
[04:18:26] <furq> and whatever arm stuff
[04:18:38] <Vall> softworkz: playing with compression now
[04:18:40] <BtbN> nvenc is a bit of an oddball, in that the only difference on the consumer level is an artificial concurency limit
[04:18:42] <furq> the stuff that you get on consumer components as opposed to professional stuff
[04:18:46] <softworkz> nvenc and quicksync provide professional encoding quality
[04:18:58] <furq> sure
[04:19:02] <furq> they're still worse than x264 though
[04:19:08] <softworkz> both are use in professional setups
[04:19:21] <BtbN> Turing+ nvenc gets impressively close to x264
[04:19:28] <BtbN> for realtime encoding, it's basically even
[04:19:34] <furq> yeah
[04:19:38] <furq> this is for archival though
[04:19:48] <softworkz> all this is only true for default params
[04:20:11] <softworkz> when comparing
[04:20:19] <furq> there are no nvenc params that make it beat x264 veryslow
[04:20:21] <BtbN> it's impossible to make nvenc not realtime :D
[04:20:23] <furq> not even close
[04:20:37] <BtbN> even the most aggressive slow but good settings go at 200+ fps
[04:21:21] <furq> even nvidia only claim it's competitive with x264 medium
[04:21:24] <softworkz> 200fps? which device, which video size, which encoder?
[04:21:30] <furq> so i assume in reality it's a bit worse than that
[04:21:37] <furq> impressive as it is for an asic
[04:21:43] <BtbN> device does not matter. Turing+ is all identical
[04:21:44] <Vall> woah! `-compression_level 4` instead of 2 made speed jump from 1.5 to 3.0x already!
[04:22:04] <BtbN> Obviously if you go for 8k content, it'll slow down
[04:22:19] <furq> i was going to say a free asic but obviously with gfx prices being what they are that's not really true
[04:22:23] <BtbN> but for what you'd livestream around, 1080p, MAYBE 1440p, it'll always stay well above 60 fps
[04:23:28] <Vall> waiting for it to finish, then I will try to dial it down to `-compression_level 3` and compare the results
[04:23:49] <furq> like i said you should test with x264 as well
[04:24:09] <furq> i would expect 1080p x264 medium on haswell to be about that fast
[04:24:18] <softworkz> QSV encoding is best of all hwas, the disadvantage is that processing slows down unlike Nvidia where it doesn't change a lot
[04:24:29] <Vall> furq: again, my main problem is not speed but size.
[04:24:41] <furq> well yeah x264 will beat the shit out of haswell qsv
[04:24:46] <Vall> I need 3x reduction in size. 2x speed is acceptable
[04:24:47] <softworkz> no
[04:25:00] <BtbN> I still have strong doubts about QSV, which is just a layer on top of vaapi, is magically the best thing ever
[04:25:12] <BtbN> And with no advanced with asic generation
[04:25:13] <softworkz> no, that's wrong
[04:25:23] <softworkz> encoding works different
[04:25:35] <softworkz> try it
[04:25:36] <furq> especially haswell which is the first generation to have hwenc
[04:25:52] <softworkz> ok, haswell doesn't work with qsv
[04:25:59] <softworkz> (MSDK)
[04:26:04] <furq> well yeah i'm pretty sure he said he's on haswell
[04:26:09] <furq> that was a while back though
[04:26:25] <BtbN> I have yet to see someone implement proper gpu accelerated encoding via shaders. Everyone that tried so far failed in various degrees of miserable.
[04:26:35] <BtbN> So Intel just magically doing it on 6 year old chips seems questionable
[04:26:41] <Vall> furq: I have a Skylake here and can't get QSV to work, only pure VAAPI
[04:26:52] <furq> vaapi is qsv
[04:26:57] <furq> just a different api
[04:27:18] <softworkz> BtbN: it's a mix what they are doing
[04:27:32] <Vall> I mean hevc_vaapi vs hevc_qsv. The former runs, the later doesn't (libav initialization errors)
[04:27:41] <BtbN> Every other vendor only iterates hwenc with actual new silicion
[04:27:42] <softworkz> VEBox functions + shaders
[04:27:46] <furq> i have no idea if the intel api is any better i've never owned a cpu with quicksync
[04:27:53] <BtbN> and you claim the silicion never changed since 2015 at least.
[04:27:56] <furq> but i do know x264 is better
[04:27:58] <BtbN> That just does not seem realistic to me
[04:28:12] <softworkz> no, I don't claim the silicon changed
[04:28:20] <softworkz> in fact it changes with every gen
[04:28:30] <BtbN> So the encoder quality changes as well
[04:28:37] <BtbN> How it's interfaced with is irrelevant
[04:28:42] <softworkz> but these aren't complete encoder implementations
[04:29:27] <softworkz> these are providing certain functions
[04:29:52] <Vall> OK, `-compression_level 4` finished. As expected, the result is sensibly suckier than with 2
[04:29:59] <Vall> Trying now with 3
[04:30:28] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:31:21] *** Quits: MrZeus_ (~MrZeus@194.37.96.105) (Ping timeout: 268 seconds)
[04:31:51] <softworkz> I've been digging through both, the MSDK source code and the Media Driver code a while ago
[04:32:04] <softworkz> it's complex and complicated
[04:32:46] <BtbN> last time I talked to Intel devs about that stuff, they basically told me that the shaders don't actually do anything and just shuffle the data to the hwenc/dec
[04:32:48] <softworkz> but I can say for sure that this isn't like a black box into whch VAAPI and MSDK are feeding data and getting some(same)  result  out of it
[04:32:54] <BtbN> At least for the actual de/encoding
[04:33:02] <BtbN> any kind of processing is in actual shaders
[04:33:47] <softworkz> why is there a motion estimation shared then?
[04:33:51] <softworkz> shader
[04:33:52] <Vall> `-compression_level 3` running, speed about ~1.7x.
[04:34:12] <BtbN> You mean for the VPP deinterlacer?
[04:34:21] <Vall> softworkz: does a fractional parameter for -compression_level works (eg, `-compression_level 2.5`)?
[04:34:28] <softworkz> right that could be
[04:35:25] <BtbN> There's also practically zero GPU usage when doing only de/encoding, so I doubt much of anything is done in shaders
[04:36:15] <softworkz> it's difficult to measure reliably
[04:36:33] <BtbN> Task Manager does it quite reliably
[04:36:55] <hyrcanus> hope nvidia gets their ffmpeg hwenc sorted.  now my jetson nano is actually useful.  8 minutes to encode 92 minute movie.
[04:36:56] <softworkz> not really
[04:37:18] <BtbN> There's no nvenc for Tegra/Jetson, soo, unlikely
[04:37:24] <BtbN> for some reason they just don't want to on that device
[04:39:48] <furq> didn't they just add nvdec for tegra
[04:40:08] <BtbN> They added kernel bits for VAAPI integration
[04:40:11] *** Joins: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[04:40:16] <furq> https://www.phoronix.com/scan.php?page=news_item&px=NVIDIA-Tegra-Linux-5.16-NVDEC
[04:40:44] <furq> will michael larabel ever update his avatar
[04:40:46] <softworkz> BtbN: Video encoding supports two modes, one calls hardware-based encoder(VDEnc/Huc) to provide low power encoding, another one is hardware(PAK)+shader(media kernel+VME) based encoding. User could choose the mode through VA-API.
[04:40:52] <softworkz> https://github.com/intel/media-driver#components-and-features
[04:41:13] <BtbN> It'll not be nvdec though. But vaapi.
[04:41:30] <softworkz> I though we're talking about Intel
[04:41:46] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 245 seconds)
[04:41:46] <softworkz> ?
[04:42:41] <softworkz> "low power encoding" is not the default with qsv in ffmpeg
[04:48:49] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[04:51:55] <Vall> `-compression_level 3` generated an almost exact frame as `-compression_level 2`. Speed was about the same too, 1.64x vs 1.52x
[04:51:58] *** Quits: englishm (sid6629@id-6629.tinside.irccloud.com) (Ping timeout: 252 seconds)
[04:52:01] <Vall> hummmrm
[04:52:31] *** Quits: jbg (sid494673@user/jbg) (Ping timeout: 252 seconds)
[04:52:32] <Vall> OK, will try with `-compression_level 3.5` now
[04:52:36] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[04:52:55] <BtbN> Are you sure it's a float?
[04:53:35] *** Joins: jbg (sid494673@user/jbg)
[04:53:37] <BtbN> it's an int.
[04:55:18] *** Joins: englishm (sid6629@tinside.irccloud.com)
[04:56:27] *** Joins: itok (sid418430@ilkley.irccloud.com)
[04:59:49] <Vall> BtbN: speed with 3.5 seems similar to with 4 (~3x), so it probably rounded it up
[05:06:53] *** Quits: buhman (sid411355@user/buhman) (Read error: Connection reset by peer)
[05:07:37] *** Quits: englishm (sid6629@tinside.irccloud.com) (Read error: Connection reset by peer)
[05:08:05] *** Joins: vlm (~vlm@user/vlm)
[05:21:09] *** Joins: englishm (sid6629@id-6629.tinside.irccloud.com)
[05:21:28] *** Joins: buhman (sid411355@user/buhman)
[05:25:05] <Vall> yeah, `-compression_level 3.5` is exactly the same as `-compression_level 4` (the resulting files have the same MD5SUM)
[05:28:11] <Vall> Well, fuck :-/ So I'm stuck at either `-compression_level 3` which has good quality but is too slow at ~1.6x, or `-compression_level 4` which is faster than what I need at ~3x (I only need ~2x) but has sucky quality
[05:28:41] <softworkz> hevc_qsv...
[05:28:58] <Vall> Anything else I can try to reach an intermediate point (ie, speed ~2x with whatever quality I can get, presumably better than with speed ~3x)?
[05:29:34] <Vall> softworkz: did you answer my question before I actually asked it? ;-)
[05:30:00] <softworkz> sure
[05:30:00] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[05:30:15] <Vall> LOL you must have -look_ahead turned on, my friend ;-)
[05:30:36] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[05:30:58] <Vall> Anyway, gonna hit the sack (over 11PM here, busy day tomorrow)
[05:30:59] <softworkz> predition-mode
[05:31:12] <Vall> Thanks everyone who helped, specially softworkz
[05:31:19] <softworkz> look at the private msg I sent
[05:31:20] <Vall> have a great one, y'all
[05:31:30] <Vall> will look, 1 min
[05:36:11] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[05:45:30] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[05:49:48] *** Joins: keypusher (keypusher@user/keypusher)
[05:52:03] <softworkz> BtbN: you might find this interesting: https://github.com/softworkz/temp_paste/issues/8 HEVC encoding in MSDK has originally been a paid plugin, then a free plugin and now integrated in the MSDK
[05:52:17] <softworkz> look at the history of the third plugin "HEVC GPU Accelerated Encode plug-in"
[05:58:13] <softworkz> Motion estimation is used for AVC/h264 encoding: https://github.com/intel/media-driver/wiki/FFmpeg-examples-for-VE-and-SSEU-features-in-ICL#build-icl-sseu
[05:59:38] <softworkz> BtbN: They are using shaders for codec acceleration: https://github.com/intel/media-driver/wiki/Media-Driver-Shaders-(EU-Kernels)#media-codec-shaders
[06:04:16] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[06:06:20] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[06:17:18] <hyrcanus> we also seem to have nvidia's omx h265 encoder source
[06:17:38] <hyrcanus> maybe smurt person could add b-frames to it
[06:19:24] <hyrcanus> but maybe not.  maybe that stuff is in the hardware
[06:19:58] *** Quits: jos1 (~jos3@dyndsl-091-248-052-004.ewe-ip-backbone.de) (Ping timeout: 260 seconds)
[06:20:01] <hyrcanus> maybe the software could cheat, reverse a snippet of video, and have the hardware do the motion estimation 'backwards' to generate a b-frame?
[06:26:52] *** Joins: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com)
[06:33:14] *** Joins: jos1 (~jos3@dyndsl-095-033-174-250.ewe-ip-backbone.de)
[06:34:13] *** Quits: LeoNice1981 (~LeoNice19@cpe-173-175-126-71.satx.res.rr.com) (Ping timeout: 252 seconds)
[06:39:07] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[06:40:47] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[06:41:16] *** Joins: darkapex (~darkapex@user/darkapex)
[06:42:00] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Read error: No route to host)
[06:43:33] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[06:44:14] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Read error: Connection reset by peer)
[06:44:35] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[06:47:42] *** Quits: tlacatlc6 (~tlacatlc6@097-101-132-062.res.spectrum.com) (Quit: Leaving)
[06:54:59] *** Quits: hyrcanus (~hyrcanus@p2e5ae5e8.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[07:00:07] *** Quits: aleek (~aleeksand@185-244-96-87-rev.logitus.pl) (Ping timeout: 252 seconds)
[07:02:11] *** Joins: feiwan1 (~Fei.Wang@192.55.46.52)
[07:09:58] *** Quits: alphalpha (~michael@ipservice-092-211-164-123.092.211.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[07:10:21] *** Joins: alphalpha (~michael@dslb-088-076-138-235.088.076.pools.vodafone-ip.de)
[08:04:02] *** Quits: nillyhan (~00000000@user/nillyhan) (Ping timeout: 260 seconds)
[08:04:30] *** Joins: pk08 (~pk08@106.215.36.144)
[08:09:34] *** Bertl_oO is now known as Bertl_zZ
[08:10:45] *** Joins: nillyhan (~00000000@user/nillyhan)
[08:10:59] <pk08> it normal to have 25G of VIRT memoery while using cuda-copy as hwdec-codecs?
[08:11:11] <pk08> memory usage*
[08:12:44] <pk08> mpv udp://239.1.7.233:1239 --msg-level=all=debug --log-file=test.txt --hwdec=cuda-copy
[08:12:50] <pk08> log: https://pastebin.com/CnBaC2Ji
[08:24:58] <softworkz> you should join #mpv
[08:25:28] *** Quits: wyatt8740 (~wyatt8740@149.164.111.65) (Remote host closed the connection)
[08:30:10] *** Quits: softworkz (~softworkz@user/softworkz) (Read error: Connection reset by peer)
[08:35:55] <pk08> by bad, i thought im in mpv but anyway, even ffmpeg is using that much of VIRT memory while X11 screen encoding using h264_nvenc
[08:40:19] *** Joins: softworkz (~softworkz@user/softworkz)
[08:43:55] *** Joins: wyatt8740 (~wyatt8740@149.164.111.65)
[08:49:55] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[08:50:26] *** Joins: wyatt8750 (~wyatt8740@37.120.215.86)
[08:50:42] *** Joins: Vonter (~Vonter@user/vonter)
[08:51:10] *** Quits: wyatt8740 (~wyatt8740@149.164.111.65) (Ping timeout: 252 seconds)
[09:01:08] *** feiwan1 is now known as feiw
[09:01:17] *** Parts: feiw (~Fei.Wang@192.55.46.52) (Leaving)
[09:11:18] *** Joins: auth (~auth@user/auth)
[09:13:10] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Ping timeout: 252 seconds)
[09:42:13] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[09:51:55] *** Joins: aleek (~aleeksand@user-5-173-0-46.play-internet.pl)
[09:59:39] *** Joins: hyrcanus (~hyrcanus@p2e5ae5e8.dip0.t-ipconnect.de)
[10:00:09] <hyrcanus> so, there's new tegra stuff i just see https://lists.freedesktop.org/archives/dri-devel/2021-October/326743.html
[10:00:39] <hyrcanus> userspace vaapi-tegra-driver, nvdec
[10:06:57] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[10:07:11] *** Joins: Vonter (~Vonter@user/vonter)
[10:09:36] *** Joins: pedalo (~pedalo@lfbn-dij-1-1135-174.w90-125.abo.wanadoo.fr)
[10:18:14] *** Joins: durandal_1707 (~computer@95.168.116.161)
[10:19:53] *** Quits: opac (~opac@mob-31-158-74-81.net.vodafone.it) (Quit: Going offline, see ya! (www.adiirc.com))
[10:20:35] *** Quits: nillyhan (~00000000@user/nillyhan) (Quit: Ping timeout (120 seconds))
[10:20:56] *** Joins: nillyhan (~00000000@user/nillyhan)
[10:21:37] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[10:21:58] *** Joins: mickey8 (~user@user/mickey)
[10:22:28] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 252 seconds)
[10:22:51] *** Joins: dreamon (~dreamon@ppp-88-217-95-149.dynamic.mnet-online.de)
[10:25:22] *** Quits: arbitercoin (~Rheanna@123.158.85.177) (Remote host closed the connection)
[10:26:46] *** Quits: pedalo (~pedalo@lfbn-dij-1-1135-174.w90-125.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[10:28:50] *** Joins: palasso (~palasso@user/palasso)
[10:29:07] *** Joins: arbitercoin (~Rheanna@123.158.85.177)
[10:30:18] *** Quits: arbitercoin (~Rheanna@123.158.85.177) (Remote host closed the connection)
[10:31:25] *** Joins: arbitercoin (~Rheanna@123.158.85.177)
[10:49:07] *** Quits: nillyhan (~00000000@user/nillyhan) (*.net *.split)
[10:49:07] *** Quits: aleek (~aleeksand@user-5-173-0-46.play-internet.pl) (*.net *.split)
[10:49:07] *** Quits: auth (~auth@user/auth) (*.net *.split)
[10:49:07] *** Quits: wyatt8750 (~wyatt8740@37.120.215.86) (*.net *.split)
[10:49:07] *** Quits: hyrcanus (~hyrcanus@p2e5ae5e8.dip0.t-ipconnect.de) (*.net *.split)
[10:49:07] *** Quits: itok (sid418430@ilkley.irccloud.com) (*.net *.split)
[10:49:07] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (*.net *.split)
[10:49:07] *** Quits: l4yer (~l4yer@159.48.55.8) (*.net *.split)
[10:49:08] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[10:49:08] *** Quits: nitram (~nitram@superblob.com) (*.net *.split)
[10:49:08] *** Quits: Kei_N_ (~Kei_N@user/kei-n/x-2886111) (*.net *.split)
[10:49:08] *** Quits: ___Myst___ (~Myst@net-93-65-242-136.cust.vodafonedsl.it) (*.net *.split)
[10:49:08] *** Quits: nd (~nd@user/nd) (*.net *.split)
[10:49:08] *** Quits: foonix (1004@ip-86-49-65-192.net.upcbroadband.cz) (*.net *.split)
[10:49:08] *** Quits: AndrewYu (~andrew@user/andrewyu) (*.net *.split)
[10:49:08] *** Quits: n000g (~NRG@user/nrg) (*.net *.split)
[10:49:08] *** Quits: intrac (~intracube@user/intracube) (*.net *.split)
[10:49:08] *** Quits: benbrown (~benbrown@user/benbrown) (*.net *.split)
[10:49:08] *** Quits: meepmeep (meepmeep@end.of.cylind.re) (*.net *.split)
[10:49:08] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[10:49:08] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (*.net *.split)
[10:49:08] *** Quits: Bertl_zZ (herbert@irc.13thfloor.at) (*.net *.split)
[10:49:08] *** Quits: lullerhaus (SAI@aws.imelik.info) (*.net *.split)
[10:49:08] *** Quits: edenist (~edenist@rdns.robotprofessor.net) (*.net *.split)
[10:49:08] *** Quits: unlord (~nathan@c-76-114-254-99.hsd1.va.comcast.net) (*.net *.split)
[10:49:08] *** Quits: chowbok (~quassel@207.181.244.106) (*.net *.split)
[10:49:08] *** Quits: markvandenborre (~mark@static.88.183.119.168.clients.your-server.de) (*.net *.split)
[10:49:08] *** Quits: TSaari (~tsaari@user/tsaari) (*.net *.split)
[10:49:08] *** Quits: Buliarou1 (~gypsydang@185.207.166.57) (*.net *.split)
[10:49:08] *** Quits: PocketKiller (PacKetIV@user/packetiv) (*.net *.split)
[10:49:08] *** Quits: [R]x (~Positive@user/rx/x-1245542) (*.net *.split)
[10:51:48] *** Joins: softworkz_ (~softworkz@user/softworkz)
[10:51:48] *** softworkz is now known as Guest8063
[10:51:48] *** softworkz_ is now known as softworkz
[10:51:51] *** Quits: durandal_1707 (~computer@95.168.116.161) (Read error: Connection reset by peer)
[10:52:30] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 260 seconds)
[10:53:34] *** Joins: Yonle (~Yonle@user/yonle)
[10:53:55] *** Joins: durandal_1707 (~computer@95.168.116.161)
[10:55:12] *** Quits: Guest8063 (~softworkz@user/softworkz) (Ping timeout: 265 seconds)
[10:58:12] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[11:00:52] *** Joins: nillyhan (~00000000@user/nillyhan)
[11:00:52] *** Joins: hyrcanus (~hyrcanus@p2e5ae5e8.dip0.t-ipconnect.de)
[11:00:52] *** Joins: aleek (~aleeksand@user-5-173-0-46.play-internet.pl)
[11:00:52] *** Joins: auth (~auth@user/auth)
[11:00:52] *** Joins: wyatt8750 (~wyatt8740@37.120.215.86)
[11:00:52] *** Joins: itok (sid418430@ilkley.irccloud.com)
[11:00:52] *** Joins: nitram (~nitram@superblob.com)
[11:00:52] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[11:00:52] *** Joins: l4yer (~l4yer@159.48.55.8)
[11:00:52] *** Joins: AndrewYu (~andrew@user/andrewyu)
[11:00:52] *** Joins: s1b1 (~s1b1@user/s1b1)
[11:00:52] *** Joins: Kei_N_ (~Kei_N@user/kei-n/x-2886111)
[11:00:52] *** Joins: ___Myst___ (~Myst@net-93-65-242-136.cust.vodafonedsl.it)
[11:00:52] *** Joins: nd (~nd@user/nd)
[11:00:52] *** Joins: foonix (1004@ip-86-49-65-192.net.upcbroadband.cz)
[11:00:52] *** Joins: n000g (~NRG@user/nrg)
[11:00:52] *** Joins: intrac (~intracube@user/intracube)
[11:00:52] *** Joins: benbrown (~benbrown@user/benbrown)
[11:00:52] *** Joins: meepmeep (meepmeep@end.of.cylind.re)
[11:00:52] *** Joins: hendry (~hendry@210.23.22.2)
[11:00:52] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[11:00:52] *** Joins: Bertl_zZ (herbert@irc.13thfloor.at)
[11:00:52] *** Joins: lullerhaus (SAI@aws.imelik.info)
[11:00:52] *** Joins: edenist (~edenist@rdns.robotprofessor.net)
[11:00:52] *** Joins: unlord (~nathan@c-76-114-254-99.hsd1.va.comcast.net)
[11:00:52] *** Joins: chowbok (~quassel@207.181.244.106)
[11:00:52] *** Joins: markvandenborre (~mark@static.88.183.119.168.clients.your-server.de)
[11:00:52] *** Joins: TSaari (~tsaari@user/tsaari)
[11:00:52] *** Joins: Buliarou1 (~gypsydang@185.207.166.57)
[11:00:52] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[11:00:52] *** Joins: [R]x (~Positive@user/rx/x-1245542)
[11:00:59] *** Quits: durandal_1707 (~computer@95.168.116.161) (Read error: Connection reset by peer)
[11:01:23] *** Joins: durandal_1707 (~computer@95.168.116.161)
[11:01:50] *** Quits: l4yer (~l4yer@159.48.55.8) (Max SendQ exceeded)
[11:01:51] *** Quits: s1b1 (~s1b1@user/s1b1) (Max SendQ exceeded)
[11:01:51] *** Quits: AndrewYu (~andrew@user/andrewyu) (Max SendQ exceeded)
[11:01:51] *** Quits: itok (sid418430@ilkley.irccloud.com) (Max SendQ exceeded)
[11:02:01] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Max SendQ exceeded)
[11:02:09] *** Quits: durandal_1707 (~computer@95.168.116.161) (Read error: No route to host)
[11:02:25] *** Joins: l4yer (~l4yer@159.48.55.8)
[11:02:53] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[11:03:04] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[11:05:30] *** Joins: Arifd (~Arifd@2a0c:5a80:360e:fa00:5625:224d:9503:db88)
[11:05:41] *** Quits: bencc1 (~bencc1@2a00:a040:197:3af:35e2:523c:ea18:a1e0) (Quit: Leaving)
[11:06:34] *** Joins: AndrewYu (~andrew@user/andrewyu)
[11:06:40] *** Joins: s1b1 (~s1b1@user/s1b1)
[11:09:46] *** Quits: auth (~auth@user/auth) (Ping timeout: 252 seconds)
[11:15:44] *** Joins: durandal_1707 (~computer@212.15.178.109)
[11:16:33] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[11:17:05] *** Quits: durandal_1707 (~computer@212.15.178.109) (Read error: Connection reset by peer)
[11:19:36] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:ddd5:b0bb:6311:83f8)
[11:21:16] <hyrcanus> huffyuv (ffvhuff) is still a good interim format?
[11:21:22] <roxlu> Hi, I've got a filter like: "crop=%d:%d:%d:%d,format=nv12,hwupload,scale_vaapi=w=%d:h=%d" and I'm wondering if it would make a difference if I put the format=nv12 before the crop instead?
[11:22:17] <furq> it would make a difference but it probably won't matter
[11:22:28] <roxlu> ok thanks
[11:23:16] *** Quits: Arifd (~Arifd@2a0c:5a80:360e:fa00:5625:224d:9503:db88) (Quit: Ping timeout (120 seconds))
[11:23:18] <hyrcanus> huffyuv is a bit too big for me.  what's a good close-to-lossless that is fast to encode
[11:24:02] <JEEB> have you yet tried lossless H.264 with x264 with a longer GOP (length depending on how fast seeking/scrubbing you need)
[11:24:08] *** Joins: durandal_1707 (~computer@95.168.116.161)
[11:24:35] <JEEB> if you need a lot of seeking 3-5 frame GOPs should already help you, and if not - you could just set -x264-params keyint=infinite
[11:24:36] <hyrcanus> no, that gives me something to search for though
[11:25:42] <hyrcanus> no seeking/editing.  this is for feeding hardware encode of an entire video
[11:26:12] <furq> ffvhuff is both faster and more efficient if you don't mind only being able to decode it with ffmpeg
[11:26:22] <furq> but pretty much any other lossless codec will beat huffyuv and ffvhuff
[11:26:31] <JEEB> sorry what
[11:26:38] <JEEB> more efficient than x264's lossless?
[11:26:43] <JEEB> faster, maybe?
[11:26:45] <furq> than huffyuv
[11:26:49] <JEEB> ah
[11:26:50] <JEEB> ok
[11:27:21] <JEEB> anyways, get a few mins of content for a test so you don't need to test with a full clip (-ss and -t come in handy with such)
[11:27:36] <JEEB> -qp:v 0 is lossless independent of bit depth
[11:27:38] *** Joins: Arifd (~Arifd@2a0c:5a80:360e:fa00:5625:224d:9503:db88)
[11:28:05] <JEEB> (I am not sure if -q:v is also mapped to quantizer, but qp is the AVOption that the libx264 wrapper defines)
[11:28:08] <furq> if you have a lot of cores and you don't need intra only then x264 lossless is a good choice
[11:28:17] <hyrcanus> my 2 minutes of 540p test gave 988MB of huffyuv
[11:28:28] <hyrcanus> on a jetson nano, slow media :)
[11:28:40] <JEEB> yea if there's no seeking then just long gop it with the slowest preset of x264 you can take
[11:28:53] <JEEB> you can start with preset medium and go up/down from that
[11:29:01] <hyrcanus> ty
[11:29:12] <JEEB> for GOP if this will only ever be used for A->B decoding then keyint infinite
[11:30:04] <JEEB> which is a special value so you will have to set it with x264-params
[11:30:08] *** Quits: durandal_1707 (~computer@95.168.116.161) (Read error: No route to host)
[11:30:53] *** Joins: durandal_1707 (~computer@95.168.116.161)
[11:31:25] <hyrcanus> it is probably also possible for me to pipe ffmpeg output to gstreamer input
[11:31:29] *** Joins: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua)
[11:31:40] <hyrcanus> so i can use those ffmpeg filters as needed
[11:32:01] <Arifd> On the bug tracer is there a way to filter by comment author? (I want to find all the tickets i have commented on)
[11:32:05] <hyrcanus> i'll start with a temp file
[11:32:27] <JEEB> Arifd: most likely there is, it's a standard trac
[11:32:56] <Arifd> yes, i've spent a while looking, can't find it, and the official docs say you can, so i thought maybe it's disabled on ffmpeg?
[11:34:48] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:36:34] *** Joins: cosimone (~user@151.14.38.15)
[11:36:42] *** Quits: cosimone (~user@151.14.38.15) (Remote host closed the connection)
[11:37:00] *** Joins: cosimone (~user@151.14.38.15)
[11:38:07] <Arifd> If FFprobe doesn't complaiin, can we safely assume the input file is uncorrupted?
[11:38:34] <JEEB> not really
[11:38:54] <JEEB> also the real question is "what sort of corruption?"
[11:39:18] <furq> absolutely not
[11:39:36] <JEEB> usually if you want to see if a specific stream of a file is decode'able, `ffmpeg -v verbose -i INPUT -map X -f null -` can let you check if the parsers or decoders complain
[11:40:07] <JEEB> of course a complaint by itself is not an error, and lack of errors or complaints is by itself not proof but a hint
[11:48:27] *** Quits: cosimone (~user@151.14.38.15) (Remote host closed the connection)
[11:48:49] *** Joins: cosimone (~user@151.14.38.15)
[11:48:55] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[11:50:21] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[11:50:44] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[11:50:51] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[11:51:51] <hyrcanus> UCLA's restoration of The Red Shoes is just gorgeous
[11:52:06] <hyrcanus> i'm still 'dealing' with this 1948 film looking so great
[11:53:00] <hyrcanus> (they really caked-on the make-up!)
[11:55:00] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[11:56:38] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:58:31] *** Quits: dreamon (~dreamon@ppp-88-217-95-149.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[11:59:08] *** Joins: mickey8 (~user@user/mickey)
[11:59:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:05:20] *** Joins: Jerrk (~Jerrk@193.138.218.215)
[12:07:13] *** Quits: Arifd (~Arifd@2a0c:5a80:360e:fa00:5625:224d:9503:db88) (Quit: Client closed)
[12:11:51] *** Joins: darkapex_ (~darkapex@user/darkapex)
[12:13:01] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 265 seconds)
[12:24:36] *** Quits: cosimone (~user@151.14.38.15) (Remote host closed the connection)
[12:25:44] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[12:25:54] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Client Exit)
[12:26:09] *** Joins: Yonle (~Yonle@user/yonle)
[12:28:25] *** Quits: Kei_N_ (~Kei_N@user/kei-n/x-2886111) (Ping timeout: 252 seconds)
[12:36:07] *** Quits: aleek (~aleeksand@user-5-173-0-46.play-internet.pl) (Ping timeout: 252 seconds)
[12:36:51] *** Joins: aleek (~aleeksand@185-244-96-87-rev.logitus.pl)
[12:39:29] *** Joins: Arifd (~Arifd@188.26.210.222)
[12:40:58] <Arifd> Sorry for the slow reply guys, i'm currently working on the side. But squeezing in some ffmpeg when i can :)
[12:41:07] <Arifd> So I'm taking a look at this bug: https://trac.ffmpeg.org/ticket/9431
[12:41:15] <Arifd> But I suspect the problem is in the attached input file and not ffmpeg
[12:42:23] <Arifd> I'm happy to investigate, if maybe you could outline some steps for me to follow.
[12:42:43] <JEEB> yea, if you want to look into the internals of that file I recommend something like L-SMASH's `boxdumper --box FILE`. stuff like a fancy edit list that defines repeat or whatever
[12:42:53] <Arifd> great
[12:43:18] <JEEB> if you cannot figure out anything about that file there, just post the box dump of the file on the ticket or so
[12:46:52] <JEEB> mov aka QT File Format (QTFF) and 14496-12 aka ISO Base Media File Format (ISOBMFF) have some slight differences but in general are the same, so you can find definitions for stuff often from either, for things with MOV brand in ftyp QTFF spec is effectively the primary one, and for MP4-related ones it's 14496-12
[12:47:08] <JEEB> in general compared to the past, even Apple is now writing more standard stuff than not
[12:59:34] <Atsuko> if i do "-vf scale=1280x720" without specifying a scaler
[12:59:37] <Atsuko> what scaler is used?
[13:00:30] <furq> bicubic
[13:00:37] <furq> https://ffmpeg.org/ffmpeg-scaler.html#toc-Scaler-Options
[13:01:12] <Atsuko> thx
[13:03:32] <hyrcanus> should play with super-resolution but the tecogan scaler and google's work does temporaly coherent super-resolution
[13:03:32] *** Quits: durandal_1707 (~computer@95.168.116.161) (Quit: Reconnecting)
[13:03:37] *** Joins: durandal11707 (~computer@95.168.116.161)
[13:19:16] *** Joins: cosimone (~user@151.14.38.15)
[13:19:35] *** Quits: cosimone (~user@151.14.38.15) (Remote host closed the connection)
[13:19:56] *** Joins: cosimone (~user@151.14.38.15)
[13:24:01] *** Quits: AMM (~AMM@user/amm) (Ping timeout: 252 seconds)
[13:26:11] *** Joins: cosimone` (~user@5.170.241.6)
[13:27:56] *** Quits: cosimone (~user@151.14.38.15) (Ping timeout: 265 seconds)
[13:33:35] *** Joins: cosimone (~user@151.14.38.15)
[13:36:40] *** Quits: cosimone` (~user@5.170.241.6) (Ping timeout: 252 seconds)
[13:38:05] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Ping timeout: 265 seconds)
[13:39:32] <hyrcanus> ah dnn_processing might work with tecogan
[13:43:24] <JEEB> neural network black boxes etc are often overhyped compared to just normal scaling algorithms that utilized with generally found-best parameters. granted, the OSS community did superresolution stuff with nnedi/eedi series back in mid-to-late 2000s :P
[13:43:44] <JEEB> nnedi was mostly meant for deinterlacing but found itself in other uses, too
[13:44:23] <hyrcanus> i recall yes
[13:44:40] <hyrcanus> the gan's are drawing new frames, after all
[13:44:47] <hyrcanus> but sometimes it's fun, when it works well
[13:45:23] <JEEB> I'd probably look at a scaler comparison of some sort like the one that bjin etc did if I recall correctly, since he made shaders for mpv/libplacebo and compared them to the ones implemented by standard in there
[13:45:53] <hyrcanus> did you see the samples on the tecogan git page?
[13:45:59] *** Joins: omegatron (~some@p5b056a70.dip0.t-ipconnect.de)
[13:46:09] <hyrcanus> the spider is pretty amazing
[13:46:44] <JEEB> nah, I haven't checked. I am at $dayjob so while I can throw a few comments out every now and then, I can't really focus too much on Other Things ;)
[13:47:38] <hyrcanus> https://github.com/thunil/TecoGAN/raw/master/resources/tecoGAN-spider.gif
[13:47:53] *** Quits: durandal11707 (~computer@95.168.116.161) (Read error: Connection reset by peer)
[13:49:27] <JEEB> but yea, on another channel we have quite a lot of related discussions since there's at least one person trying to keep up to speed on the actually useful video scaling etc related papers
[13:51:17] <hyrcanus> i imagine that segmentation - identification of object types, and application of appropriately trained scalers (wood, grass, hair, fabrics) to that object, could improve things over a model trying to scale an entire frame
[13:51:38] <hyrcanus> but maybe not. idk.  is it a public channel?
[13:53:00] <hyrcanus> my experiments were amusing but suffered too many pathological drawing choices by teh network
[13:53:11] *** Joins: dreamon (~dreamon@ppp-88-217-95-149.dynamic.mnet-online.de)
[13:53:56] <JEEB> pretty much, although not really one that is advertised. it's on one of those old dens of iniquity, which has with years become something completely different as people and themes have changed :D
[13:53:56] <hyrcanus> i'm not qualified to develop anything. i just like to try stuff out and fiddle with the dials.
[13:54:35] <hyrcanus> yeah nvm. i'll follow the projects and papers
[13:54:56] <JEEB> :)
[14:01:47] <hyrcanus> i wouldn't mind you lobbing a link towards me if a particularly interesting git/svn is discovered JEEB
[14:02:25] <JEEB> sure
[14:04:09] <JEEB> but yea temporal coherency was a fun one. I think one of the first cases where I actually got to touch corporate stuff was where I complained about the quality of a thing, and then got access to the master for proper transcoding. and then of course those people asked me to encode it in 1080p (you're dealing with non-anamorphic 720xXYZ 16:9 content so lol). and I decided to try I think eedi2
[14:25:17] *** Joins: Blacker47 (~Blacker47@user/blacker47)
[14:27:23] *** Quits: demon__ (~user@41.239.8.171) (Ping timeout: 265 seconds)
[14:35:22] *** Joins: keypusher (keypusher@user/keypusher)
[14:37:49] *** Joins: softworkz_ (~softworkz@user/softworkz)
[14:37:49] *** softworkz is now known as Guest8685
[14:37:49] *** softworkz_ is now known as softworkz
[14:41:24] *** Quits: Guest8685 (~softworkz@user/softworkz) (Ping timeout: 265 seconds)
[14:53:19] <hyrcanus> i'm discovering that one needs to do some study of gstreamer fundamentals
[14:54:30] <roxlu> I'm working on a project that makes use of the ffmpeg libs and I'm curious if it would make sense to use the `av_log()` features. Especially because our own context structs don't use AVClass.  Is there a work around so I can use the av_log features w/o using AVClass in my own structs?
[14:57:15] *** Joins: MrZeus_ (~MrZeus@194.37.96.105)
[14:58:09] *** Joins: MrZeus__ (~MrZeus@2a02:c7f:a0aa:4400:6411:e698:ffda:67e3)
[15:02:11] *** Quits: MrZeus_ (~MrZeus@194.37.96.105) (Ping timeout: 250 seconds)
[15:07:42] *** Joins: softworkz_ (~softworkz@user/softworkz)
[15:07:42] *** Quits: softworkz (~softworkz@user/softworkz) (Killed (zinc.libera.chat (Nickname regained by services)))
[15:07:42] *** softworkz_ is now known as softworkz
[15:12:53] *** Bertl_zZ is now known as Bertl
[15:20:02] *** Joins: AMM (~AMM@user/amm)
[15:26:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[15:31:14] *** Joins: vlm (~vlm@user/vlm)
[15:39:04] *** Joins: cmp69 (~cmp@lfbn-ren-1-1450-25.w90-27.abo.wanadoo.fr)
[15:42:17] *** Quits: cosimone (~user@151.14.38.15) (Quit: ERC (IRC client for Emacs 27.1))
[15:50:41] <Arifd> JEEB: Hi Jeeb, what should I look for in the boxdump? I've noticed if you play the .mov file in any video player (ffmplay) there are no loops in the audio, but if you copy the audio out to file, or even if you just open the .mov in Audacity, there are loops in the audio
[15:51:39] <Arifd> Makes me wonder if the audio stream just has those loops in it, and the video stream has something that instructs the player to jump over the loops?
[15:52:00] <JEEB> elst edit lists for the tracks would be the first thing as I noted
[15:52:20] <kepstin> roxlu: when using ffmpeg libs, normally you'd work the other way around - you'd use some logging framework in your application, and then use ffmpeg's logging hooks so ffmpeg log messages go into your framework
[15:52:22] <JEEB> as I said, if you do not know, post the dump on the trac issue so other people don't have to redo it
[15:52:55] <JEEB> also av_log does work with a nullptr as the AVClass, if there is no relevant AVClass in the context
[15:53:21] <JEEB> (although one is recommended to be made since it's not exactly hard to have such a struct around)
[15:53:40] <JEEB> but yes if you have your own logging framework to which you then stick the callbacks to
[15:53:43] <JEEB> then just utilize that
[15:56:30] <roxlu> thanks JEEB !
[15:58:35] <JEEB>  /41
[15:58:39] *** Quits: Atsuko (~x@94.242.250.86) (Remote host closed the connection)
[16:00:06] <Arifd> Okay, I've attached the boxdump to the ticket, will take no further action
[16:10:50] *** Joins: auth (~auth@user/auth)
[16:13:02] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[16:13:18] *** Joins: Yonle (~Yonle@user/yonle)
[16:20:08] *** Joins: minimal (~minimal@user/minimal)
[16:20:42] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[16:25:06] *** Joins: Yonle (~Yonle@user/yonle)
[16:25:55] <Arifd> can I do something like: ffmpeg -filter_complex "testsrc,cropdetect" -f matroska - | ffplay -vf "crop=$(USE_LAST_VALUE_FROM_FFMPEG_OUTPUT)" -
[16:26:50] <sfan5> https://github.com/yt-dlp/FFmpeg-Builds/wiki/Latest
[16:27:04] <sfan5> I wonder which part of "nonfree and unredistributable" these guys didn't understand...
[16:40:33] *** Joins: durandal_1707 (~computer@95.168.116.161)
[16:46:57] *** Quits: durandal_1707 (~computer@95.168.116.161) (Read error: No route to host)
[16:55:46] *** Joins: durandal_1707 (~computer@212.15.178.109)
[16:57:36] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 245 seconds)
[16:57:49] *** Joins: Yonle (~Yonle@user/yonle)
[17:03:13] *** Quits: durandal_1707 (~computer@212.15.178.109) (Quit: Reconnecting)
[17:03:25] *** Joins: durandal_1707 (~computer@212.15.178.109)
[17:03:36] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[17:04:49] *** Joins: Hackerpcs (~user@user/hackerpcs)
[17:05:13] *** Quits: Arifd (~Arifd@188.26.210.222) (Quit: Client closed)
[17:05:22] *** Joins: Arifd (~Arifd@2a0c:5a80:360e:fa00:8f5d:9697:290c:9a65)
[17:15:41] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[17:18:36] <Arifd> I'm still pulling my hair out trying to figure out how to abstract pixels from a YUYV buffer. Does anyone have any good documentation? everything i find seems to be about the color, and not data layout
[17:18:50] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:21:56] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[17:22:14] *** Joins: Yonle (~Yonle@user/yonle)
[17:25:17] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[17:25:59] *** Joins: Yonle (~Yonle@user/yonle)
[17:26:03] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[17:32:07] *** Quits: lexano (~lexano@cpe00e06722f0e4-cm98524a70e35e.cpe.net.cable.rogers.com) (Quit: Leaving)
[17:45:58] <Arifd> okay, kernel.org has some good documentation
[17:46:05] <Arifd> this is cool, really low level stuff :)
[18:05:31] *** Joins: arcatech (~arcatech@user/arcatech)
[18:11:49] *** Quits: durandal_1707 (~computer@212.15.178.109) (Read error: Connection reset by peer)
[18:12:34] *** Joins: durandal_1707 (~computer@95.168.116.161)
[18:12:41] *** Joins: slima (~slima@user/slima)
[18:13:57] <slima> Hello, I have a multicast source, and i like to do hls with transcode to lower bitrate, my platform is rbpi 4, I try something like: ffmpeg -i udp://239.240.1.97:1234 -vcodec h264_v4l2m2m  -g 250 -c:a copy -hls_list_size 8 -hls_flags delete_segments index.m3u8 but I get only audio working on vlc client od Windows
[18:14:04] <slima> any hint?
[18:18:55] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[18:20:43] *** Joins: Yonle (~Yonle@user/yonle)
[18:21:49] *** Joins: jkwnki1 (~jkwnki@p4ff313ac.dip0.t-ipconnect.de)
[18:21:49] *** Joins: jkwnki (~jkwnki@p4ff313ac.dip0.t-ipconnect.de)
[18:25:10] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 260 seconds)
[18:25:21] *** Joins: Yonle (~Yonle@user/yonle)
[18:26:47] *** Joins: vlm (~vlm@user/vlm)
[18:27:12] *** Quits: durandal_1707 (~computer@95.168.116.161) (Quit: Reconnecting)
[18:27:24] *** Joins: durandal_1707 (~computer@95.168.116.161)
[18:27:28] *** Quits: vlm (~vlm@user/vlm) (Remote host closed the connection)
[18:35:07] *** Joins: vlm (~vlm@user/vlm)
[18:35:09] *** Quits: durandal_1707 (~computer@95.168.116.161) (Quit: Reconnecting)
[18:35:54] *** Quits: l4yer (~l4yer@159.48.55.8) (Ping timeout: 260 seconds)
[18:36:01] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[18:40:18] *** Joins: durandal_1707 (~computer@212.15.178.109)
[18:40:18] *** Quits: durandal_1707 (~computer@212.15.178.109) (Client Quit)
[18:40:26] *** Joins: durandal_1707 (~computer@212.15.178.109)
[18:41:44] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[18:42:00] *** Quits: Arifd (~Arifd@2a0c:5a80:360e:fa00:8f5d:9697:290c:9a65) (Ping timeout: 256 seconds)
[18:47:45] *** Quits: durandal_1707 (~computer@212.15.178.109) (Read error: Connection reset by peer)
[18:48:41] *** Joins: durandal_1707 (~computer@212.15.178.109)
[18:54:04] *** Quits: durandal_1707 (~computer@212.15.178.109) (Read error: No route to host)
[18:55:38] *** Quits: auth (~auth@user/auth) (Ping timeout: 265 seconds)
[18:56:21] *** Quits: dreamon (~dreamon@ppp-88-217-95-149.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[18:57:06] *** Joins: durandal_1707 (~computer@95.168.116.161)
[19:00:22] *** Joins: MrZeus (~MrZeus@90.206.94.111)
[19:00:36] *** Quits: MrZeus__ (~MrZeus@2a02:c7f:a0aa:4400:6411:e698:ffda:67e3) (Ping timeout: 265 seconds)
[19:05:59] *** Quits: durandal_1707 (~computer@95.168.116.161) (Quit: Reconnecting)
[19:06:11] *** Joins: durandal_1707 (~computer@212.15.178.109)
[19:08:12] *** Quits: jkwnki1 (~jkwnki@p4ff313ac.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[19:08:16] *** Quits: jkwnki (~jkwnki@p4ff313ac.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:10:03] *** Joins: jkwnki1 (~jkwnki@p2e579512.dip0.t-ipconnect.de)
[19:10:16] *** Quits: durandal_1707 (~computer@212.15.178.109) (Read error: Connection reset by peer)
[19:10:21] *** Joins: jkwnki (~jkwnki@p2e579512.dip0.t-ipconnect.de)
[19:15:51] *** Joins: durandal_1707 (~computer@212.15.178.109)
[19:16:29] *** Quits: n000g (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[19:16:47] *** Quits: durandal_1707 (~computer@212.15.178.109) (Read error: Connection reset by peer)
[19:19:35] *** Joins: nrg (~NRG@user/nrg)
[19:21:44] *** Quits: jkwnki1 (~jkwnki@p2e579512.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[19:21:52] *** Quits: jkwnki (~jkwnki@p2e579512.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[19:23:54] *** Joins: durandal_1707 (~computer@212.15.178.109)
[19:24:19] *** Joins: realies (~realies@user/realies)
[19:24:33] <realies> can you detect clipped audio samples with ffmpeg?
[19:29:47] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[19:29:53] <durandal_1707> you mean in float pcm or in ineger one?
[19:29:59] <durandal_1707> *integer
[19:32:41] *** Joins: Atsuko (~x@45.63.115.64)
[19:36:25] *** Quits: durandal_1707 (~computer@212.15.178.109) (Read error: Connection reset by peer)
[19:37:07] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Quit: Leaving)
[19:37:26] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[19:37:30] <realies> it's a mka recording I'm trying to analyse, it contains an opus 48khz s16 stream
[19:37:31] *** Joins: dreamon (~dreamon@p54b14aac.dip0.t-ipconnect.de)
[19:38:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:40:33] *** Quits: pk08 (~pk08@106.215.36.144) (Quit: Leaving)
[19:42:08] *** Joins: Arifd (~Arifd@2a0c:5a80:360e:fa00:8f5d:9697:290c:9a65)
[19:47:17] *** Quits: cmp69 (~cmp@lfbn-ren-1-1450-25.w90-27.abo.wanadoo.fr) (Quit: Connection closed)
[19:50:20] *** Joins: durandal_1707 (~computer@212.15.178.36)
[19:54:26] *** Quits: durandal_1707 (~computer@212.15.178.36) (Read error: Connection reset by peer)
[19:58:54] *** Joins: heyyo (~heyyo@75.33.222.218)
[19:59:04] *** Quits: Arifd (~Arifd@2a0c:5a80:360e:fa00:8f5d:9697:290c:9a65) (Ping timeout: 256 seconds)
[20:00:04] <heyyo> Trying to make an h264 play better on mpv player. I am using this: ffmpeg -i "Device_02_20211009200000_20211009210000.h264" $1 -c:v copy -f mp4 'output.mp4'
[20:00:26] <heyyo> works but how can I copy the input name into the output name automatically?
[20:00:29] *** Joins: l4yer (~l4yer@159.48.55.9)
[20:01:08] <heyyo> sorry that $1 doesn't go there
[20:01:24] <c_14> use your shell
[20:02:08] <heyyo> This is what I actually used. ffmpeg -i "Device_02_20211009200000_20211009210000.h264" -c:v copy -f mp4 output.mp4
[20:02:28] <heyyo> how? I don't know. I'm on windows btw.
[20:03:23] <c_14> write a .bat or powershell script?
[20:03:51] <c_14> there should be resources or channels for either of those
[20:04:10] <c_14> ffmpeg itself won't help you there (unless you use the api)
[20:04:55] <c_14> but then you're just using a programming language again anyways
[20:06:51] <heyyo> what do I put in this .bat file? can't I just run a command directly in the command line that will the the same as what the command above does but instead of having to name the file output it copies the original name but makes it an mp4?
[20:14:16] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[20:15:14] <heyyo> anyone?
[20:15:56] *** Joins: durandal_1707 (~computer@95.168.116.135)
[20:23:45] <heyyo> meh
[20:24:16] *** Quits: heyyo (~heyyo@75.33.222.218) (Quit: Connection closed)
[20:27:52] *** Joins: someuser (~user@41.239.8.171)
[20:29:39] *** Bertl is now known as Bertl_oO
[20:39:49] *** Joins: blaze (~blaze@user/blaze)
[20:40:06] *** Joins: Jerrrk (~Jerrk@45.83.220.203)
[20:41:45] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[20:42:55] *** Quits: Jerrk (~Jerrk@193.138.218.215) (Ping timeout: 252 seconds)
[20:53:00] *** Quits: TheSashm_ (~TheSashmo@174.119.184.190) (Quit: Leaving...)
[20:56:04] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[20:57:41] *** Joins: witchcraft (~witch@88-106-211-54.dynamic.dsl.as9105.com)
[20:57:41] *** Quits: witchcraft (~witch@88-106-211-54.dynamic.dsl.as9105.com) (Changing host)
[20:57:41] *** Joins: witchcraft (~witch@user/witch)
[20:59:01] *** Joins: TheSashm_ (~TheSashmo@174.119.184.190)
[21:00:58] <hyrcanus> slima: i don't know the cause of your issue but -vcodec is old style formatting, new is -c:v
[21:04:41] *** Quits: pntaylor (~quassel@101.114.55.169) (Ping timeout: 265 seconds)
[21:04:54] *** Joins: Riz (~Riz@cpc152567-shef18-2-0-cust38.17-1.cable.virginm.net)
[21:06:10] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:06:19] *** Joins: pntaylor (~quassel@2405:6e00:296:d998::2)
[21:15:30] *** Joins: auth (~auth@user/auth)
[21:19:37] *** Quits: pntaylor (~quassel@2405:6e00:296:d998::2) (Ping timeout: 250 seconds)
[21:22:03] *** Joins: pntaylor (~quassel@101.113.70.117)
[21:24:22] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[21:26:28] *** Joins: Jan\ (~kvirc@104.204.200.116)
[21:28:51] *** Quits: af (~af@awalgarg.me) (Ping timeout: 245 seconds)
[21:30:19] *** Joins: af (~af@awalgarg.me)
[21:40:00] <Riz> How would I add background music to a video that already has it, Ive tried some but the resulting video is always out of sync
[21:42:34] <hyrcanus> if I cared about the result, i'd extract the audio from the video to a .wav
[21:42:49] <hyrcanus> then mix-in the music with audacity (tenacity)
[21:43:15] <hyrcanus> giving me some fine grain control
[21:45:07] <Riz> Yeah but im trying to automate it, and im not sure how id do it with audacity
[21:45:58] <hyrcanus> what are you using now to mix?
[21:46:59] <Riz> My command?
[21:47:05] <hyrcanus> yeah
[21:48:11] <Riz> Give me a minute because its in code so I have to wait for it to display the actual comand#
[21:51:33] <Riz>  -i -stream_loop background.mp3 -i Video.mp4 -filter_complex "[0:a][1:a]amerge,pan=stereo|c0<c0+c2|c1<c1+c3[out]" -map 1:v -map "[out]" -c:v copy Final.mp4
[21:54:12] <hyrcanus> and then the audio from Video.mp4 is no-longer in-sync with the video?
[21:54:25] <Riz> yeah
[21:56:51] <hyrcanus> the -stream_loop is new to me
[21:57:50] <Riz> Im just trying to cobble together a working program without having to have a PHD in how this all works
[21:58:11] <Riz> I found an Stackoverflow thing which mentioned it so im trying it now
[21:58:33] <hyrcanus> you want the music to repeat if the Video.mp4 is longer?
[21:58:39] <Riz> Yeah
[21:58:53] <hyrcanus> i get -stream-loop: No such file or directory
[21:59:08] <Riz> yeah, put it in from of the music
[21:59:11] <hyrcanus> usually the input file follows directly after -i
[21:59:46] <Riz> Didnt realise until mine crashed
[22:00:16] <hyrcanus> this works for me  ffmpeg  -i ../share/czuckay3danger_render.mp3  -i Horrifying_child_abuse_Screaming_Covid_child_zipped_up_in_hazard_coffin_carted_away_in_ambulance-yNpCAdL4Pom2.mp4 -filter_complex  "[0:a][1:a]amerge,pan=stereo|c0<c0+c2|c1<c1+c3[out]" -map 1:v -map "[out]" -c:v copy Final.mp4
[22:00:45] <Riz> Im not gonna question those file names but ill try it out
[22:01:07] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[22:02:44] <Riz> I think ive tried this before, but ill try it again
[22:08:07] <Riz> I got Invalid file index 1 in filtergraph description [0:a][1:a]amerge,pan=stereo|c0<c0+c2|c1<c1+c3[out]
[22:09:08] <hyrcanus> please show your exact and entire ffmpeg invocation
[22:09:10] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 260 seconds)
[22:10:28] <Riz> One min, I might have typed somthing wrong
[22:13:05] <hyrcanus> that is more likely than a bug in ffmpeg
[22:14:36] <Riz> I mean in my above error
[22:14:53] <Riz> This happened the last time i tried it and I eventually gave up
[22:15:30] <Riz> Im running it again, with your command without typos this time and hopfully it will all work
[22:19:58] <Riz> Yeah its still wrong, let me upload both videos and you can clearly see the offset
[22:22:13] *** Quits: durandal_1707 (~computer@95.168.116.135) (Read error: Connection reset by peer)
[22:25:19] *** Joins: durandal_1707 (~computer@212.15.178.15)
[22:26:29] <Riz> https://youtu.be/kgmVKl2orkM
[22:26:48] <Riz> This is the thing with it being out of sync
[22:27:03] <Riz> Ill upload the one in sync in a few mins
[22:27:38] *** Joins: MrZeus_ (~MrZeus@2a02:c7f:a0aa:4400:6411:e698:ffda:67e3)
[22:29:29] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:31:08] *** Quits: MrZeus (~MrZeus@90.206.94.111) (Ping timeout: 268 seconds)
[22:31:51] <hyrcanus> i dunno, not sure what your c0<c0+c2 stuff is for
[22:32:08] <hyrcanus> also maybe you should specify what audio codec you want in the output
[22:32:15] <hyrcanus> like -c:a libfdk_aac -ac 2 -b:a 128k
[22:33:20] <Riz> I dont even know what it does
[22:33:39] *** Joins: MrZeus__ (~MrZeus@2a02:c7f:a0aa:4400:6411:e698:ffda:67e3)
[22:33:45] <hyrcanus> amerge doesn't need you tweaking pan settings
[22:34:05] <hyrcanus> amerge=inputs=2 for e.g.
[22:34:08] <Riz> So what should I use then?
[22:34:20] <hyrcanus> the ffmpeg filter documentation
[22:36:06] <hyrcanus> a simple use of amerge
[22:36:08] <hyrcanus> ffmpeg -i input0.mp3 -i input1.mp3 -filter_complex amerge=inputs=2 -ac 2 output.mp3
[22:36:35] <durandal_1707> make sure that timestamps/PTS start from 0 for both inputs
[22:36:40] <durandal_1707> and A/V too
[22:37:02] <Riz> how would I do that
[22:37:08] *** Quits: MrZeus_ (~MrZeus@2a02:c7f:a0aa:4400:6411:e698:ffda:67e3) (Ping timeout: 265 seconds)
[22:37:34] <durandal_1707> use (a)showinfo filter to show you timestamps
[22:38:19] <durandal_1707> to add bg music, you could use amix with weight parameter to control strenght of bg music
[22:38:37] <durandal_1707> for more advanced usage you may look at sidechaincompress filter
[22:39:37] <Riz> I dont understand what you mean
[22:40:06] <Riz> Isnt there just some way to make all the audio and video start exactly at the same time
[22:44:45] <hyrcanus> -c:v copy might be copying timestamp metadata that screws up the multiplexing at the end?
[22:45:20] <hyrcanus> you could see if the shift disappears if you let ffmpeg re-encode the video
[22:46:05] <hyrcanus> try it without "-c:v copy"
[22:46:14] <hyrcanus> let ffmpeg pick a codec
[22:47:31] <Riz> Theres no -c:v copy right now
[22:47:50] <Riz> It seems to be reencoding the video or somthing because its taking much longer
[22:48:53] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[22:50:09] <Riz> ffmpeg -i input0.mp3 -i input1.mp3 -filter_complex amerge=inputs=2 -ac 2 output.mp3
[22:50:16] <Riz> still out of sync
[22:50:59] *** Joins: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se)
[22:53:34] <hyrcanus> https://trac.ffmpeg.org/wiki/AudioChannelManipulation
[22:56:19] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[22:56:38] *** Joins: aphysically (~aphysical@user/aphysically)
[22:56:41] <hyrcanus> i get perfect sync with my test mp3
[22:57:45] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[22:58:01] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:58:07] <Riz> I tried remove the cv copy thing still no dice
[23:01:32] *** Joins: MrZeus_ (~MrZeus@2a02:c7f:a0aa:4400:6411:e698:ffda:67e3)
[23:05:10] *** Quits: MrZeus__ (~MrZeus@2a02:c7f:a0aa:4400:6411:e698:ffda:67e3) (Ping timeout: 265 seconds)
[23:09:25] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[23:10:05] *** Joins: Buster_ (~Buster@46.160.36.66)
[23:20:06] *** Quits: LuKaRo_ (~LuKaRo@p4fc32cd3.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[23:20:09] *** Quits: durandal_1707 (~computer@212.15.178.15) (Read error: Connection reset by peer)
[23:20:29] *** Joins: durandal_1707 (~computer@212.15.178.15)
[23:23:45] *** Joins: LuKaRo (~LuKaRo@p4fc3226e.dip0.t-ipconnect.de)
[23:23:47] <hyrcanus> i'm sorry, I don't know why you report this problem
[23:26:36] <Riz> I dont even know where to go from here
[23:27:14] <hyrcanus> perhaps you can test with different source material
[23:27:27] <Riz> It does it for all of them
[23:28:04] <hyrcanus> if you copy input0.mp3 to a file named input1.mp3 and amerge those with ffmpeg, do you hear a delay / echo?
[23:28:16] <durandal_1707> use wav
[23:29:35] <Riz> Ill try both of those
[23:33:59] <hyrcanus> i suggest paying extra attention to what durandal_1707 says and not much to what I say
[23:34:02] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[23:34:38] <durandal_1707> first make sure that it is not pts issue with audio and video having offset in original file
[23:35:00] <durandal_1707> how big is out of sync range?
[23:39:58] <Riz> a second or so but it gets larger, if you scroll up i posted links to both videos
[23:40:26] <durandal_1707> larger by time?
[23:40:27] <Riz> how do I check pts, please Im not knowlegeable about audio so im way out of my depth here
[23:40:37] <Riz> yeah check my above video
[23:40:50] <durandal_1707> ffmpeg -i input.video -af ashowinfo -f null -
[23:40:54] <durandal_1707> ffmpeg -i input.video -vf showinfo -f null -
[23:41:45] <hyrcanus> kinda like ffprobe eh
[23:42:38] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[23:43:54] <Riz> I got a loa of data
[23:43:57] <Riz> *load
[23:44:16] <Riz> [Parsed_ashowinfo_0 @ 00000209563e8380] n:3598 pts:4144896 pts_time:93.9886 pos:1882017 fmt:fltp channels:2 chlayout:stereo rate:44100 nb_samples:1152 checksum:0E7405DC plane_checksums: [ A0808795 64DE7E38 ]
[23:44:17] <Riz> [Parsed_ashowinfo_0 @ 00000209563e8380] n:3599 pts:4146048 pts_time:94.0147 pos:1882540 fmt:fltp channels:2 chlayout:stereo rate:44100 nb_samples:1152 checksum:6FE0D555 plane_checksums: [ AD0F934B E15E420A ]
[23:44:17] <Riz> [Parsed_ashowinfo_0 @ 00000209563e8380] n:3600 pts:4147200 pts_time:94.0408 pos:1883062 fmt:fltp channels:2 chlayout:stereo rate:44100 nb_samples:1152 checksum:66E14432 plane_checksums: [ B172C119 27B4830A ]
[23:44:29] <Riz> Thats my audio
[23:44:31] <durandal_1707> just look at first item
[23:44:38] <durandal_1707> for both A and V
[23:45:01] <Riz> It goes off the screen, is there a way to get it to write to a file
[23:55:38] *** Joins: arcatech (~arcatech@user/arcatech)
[23:56:28] *** Quits: wyatt8750 (~wyatt8740@37.120.215.86) (Ping timeout: 252 seconds)
