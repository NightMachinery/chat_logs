[00:19:54] *** Quits: Niklas__E (~Niklas___@176.10.248.198) (Quit: Client closed)
[00:34:12] *** Quits: enyc_ (~enyc@user/enyc) (Ping timeout: 240 seconds)
[00:38:44] *** Joins: enyc (~enyc@user/enyc)
[00:51:44] *** Quits: alnr (~alnr@38.125.204.99) (Quit: Leaving)
[00:53:28] *** Joins: alnr (~alnr@38.125.204.99)
[01:15:16] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[01:28:56] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[01:29:47] *** Joins: wolfshappen (~waff@irc.furworks.de)
[01:36:45] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 250 seconds)
[01:44:27] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:58:31] *** Joins: wolfshappen (~waff@irc.furworks.de)
[02:25:11] *** Quits: jkavalik_ (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Remote host closed the connection)
[02:25:31] *** Joins: jkavalik_ (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[02:25:34] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 260 seconds)
[02:29:49] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[02:52:00] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:52:32] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:01:16] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:a992:a734:d5e:8b54)
[03:18:32] *** Quits: acidsys_ (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[03:19:03] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[04:16:59] *** Joins: ferdna (~ferdna@user/ferdna)
[04:35:53] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[04:36:28] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Remote host closed the connection)
[05:00:23] *** Quits: jkavalik_ (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Read error: Connection reset by peer)
[05:00:38] *** Joins: jkavalik_ (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[06:21:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:15:31] *** Quits: Vacuity_ (~Vacuity@user/vovo) (Ping timeout: 256 seconds)
[07:16:59] *** Joins: Vacuity (~Vacuity@user/vovo)
[07:43:36] *** Quits: t2mkn_ (~t2mkn@user/t2mkn) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:45:45] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[08:42:18] *** Quits: HN (hisyam@user/hn) (Ping timeout: 265 seconds)
[08:44:20] *** Joins: HN (hisyam@user/hn)
[09:47:14] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Ping timeout: 252 seconds)
[09:54:07] *** Joins: relight (~relight@user/relight)
[09:57:38] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:16:53] *** Joins: palasso (~palasso@user/palasso)
[10:51:12] *** Joins: ice9 (~ice9@user/ice9)
[11:01:14] *** Joins: Yoda-BZH (~yoda-bzh@user/yoda-bzh)
[11:32:55] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[11:53:16] *** Joins: sultand (~sultand@office.rackhosting.com)
[12:02:25] *** Quits: zauberfisch (~Zauberfis@cm147-42.liwest.at) (Quit: No Ping reply in 180 seconds.)
[12:03:39] *** Joins: zauberfisch (~Zauberfis@cm147-42.liwest.at)
[12:54:36] *** Quits: regedit (uid150526@id-150526.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:54:41] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[13:06:23] *** Joins: Guest41 (~Guest41@80.65.68.82)
[13:07:41] *** Parts: Guest41 (~Guest41@80.65.68.82) ()
[13:38:41] *** Quits: relight (~relight@user/relight) (Ping timeout: 250 seconds)
[13:39:36] *** Joins: relight (~relight@user/relight)
[14:09:55] *** Joins: quhar (~quhar@192.162.148.48)
[14:16:29] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[14:16:41] *** Joins: rvalue (~rvalue@user/rvalue)
[15:32:05] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[16:05:54] *** Joins: _xxoxx (~Junxter@222.95.165.129)
[16:06:45] *** Parts: _xxoxx (~Junxter@222.95.165.129) ()
[16:36:07] *** Joins: nickodd (~nickodd@user/nickodd)
[16:52:53] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[17:02:37] *** Joins: Dra|n (~Shaaf@186.120.251.229)
[17:03:46] *** Joins: regedit (uid150526@id-150526.uxbridge.irccloud.com)
[17:08:46] *** Quits: Dra|n (~Shaaf@186.120.251.229) (Changing host)
[17:08:46] *** Joins: Dra|n (~Shaaf@user/Dran/x-3752239)
[18:00:52] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:37:03] *** Quits: sultand (~sultand@office.rackhosting.com) (Quit: Client closed)
[18:47:11] *** Quits: jancoow (~jancoow@user/jancoow) (Quit: Ping timeout (120 seconds))
[18:47:50] *** Joins: jancoow (~jancoow@user/jancoow)
[18:54:30] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[19:02:17] <zitter> Hi all, I'm playing with Adafruit fingerprint sensor with the goal to store template data in DB. Here you can see output of python Fingerprint script: http://pastie.org/p/5J9nrKFwS6mZywXb3htevt
[19:02:20] <zitter> Storing those data (when enrolling) is easy, but how to retrieve them? In other words: how can I do a sort of "LIKE" with those data?
[19:09:20] <Naktibalda> what parameter do you want to use for seach? another long list of numbers?
[19:09:26] <Naktibalda> search
[19:10:22] <Naktibalda> SELECT * FROM table WHERE id = 2
[19:10:25] <zitter> hi Naktibalda yes I'm searching another logn list of numbers, but as you can see the *same* fingerprint doesnt reproduce always the same list of data.
[19:10:50] <Naktibalda> your detector says that it matched #2
[19:11:35] <zitter> ok, but I have to search using data [num num num num num num ...]
[19:11:49] <Naktibalda> that part is AI
[19:12:03] <zitter> the ID is an internal ID limited from 0 to 127
[19:12:31] <Naktibalda> is your tool limited to 128 fingerprints?
[19:12:57] <Naktibalda> you must configure it to return useful identifier if fingerprint matches
[19:13:21] <zitter> hardware is limited internally to 128 fingerprints. But my goal is not to store data inside the hardware, but inside DB.
[19:13:28] <Isotopp> zitter: fingerprint sensors for login check if the fingerprint shown matches the fingerprint on store for a claimed identity
[19:13:38] <Isotopp> zitter: that is, you are not using the fingerprint to determine an identity
[19:13:48] <Isotopp> zitter: you are using the fingerprint to confirm an identity
[19:13:57] <Naktibalda> zitter: SQL query won't do, you are going to implement your own fingerprint detection software
[19:14:31] <Isotopp> zitter: so you store the string of numbers as a blob, and next to a principal (such as a user id or a unique user name). you access the table retrieving the fingerprint for a user, then compare the measured fingerprint to the stored fingerprint for that user
[19:16:03] <zitter> Isotopp, string numbers are not always the same. They change on confidence level.
[19:17:00] <Isotopp> yes. user claims to be isotopp, user touches sensor. you retrieve fingerprint for isotopp from database. you compare stored fingerprint to measured fingerprint. if they are similar enough you let them in
[19:17:58] <zitter> ah
[19:18:29] <Isotopp> what defines "similarity" depends on what the numbers mean
[19:19:13] <Isotopp> if similar fingerprints produce similar numbers, substracting the number vectors, then summing up the abs() of the delta and checking against a threshold would work
[19:19:40] <Isotopp> if the numbers represent detected random fingerprint features, all bets are off, and you would have to rely on the similarity function of the sensors sdk
[19:20:46] <zitter> Isotopp, so are you saying that I cannot use fingerprint for determine an identity and do a login, right?
[19:21:40] <zitter> it is a timekeeper hardware, so it is not a "real" login. fingerprint > recognition (with DB) > store employee ID and time entrance
[19:22:19] <Naktibalda> well, then you have to compare your fingerprint to all stored fingerprint and find the closes match
[19:22:45] <Isotopp> zitter: using a fingerprint to determine an identity is a much harder operation with a lot less confidence.
[19:22:47] <zitter> Yes, my problem is that I don't know how to "find the closes match"
[19:22:59] <Isotopp> zitter: in general, in security, this is a scenario most vendors try to avoid
[19:23:06] <Isotopp> especially if the base pool is large
[19:23:48] <Naktibalda> I remember articles that biometrics shouldn't be used as password
[19:24:15] <Isotopp> as with all biometric sensors, the readings vary for a stable identity. So a "point" becomes some kind of diffused "cloud" centered around the actual identity-point.
[19:24:36] <zitter> yes, but it is not a password. employee > fingerprint > timekeeper register employee ID and timestamp
[19:24:41] <Isotopp> Now, if you store 100s of identities as such unsharp points, it is a given that at a certain number of identities some of them will overlap
[19:24:52] <Naktibalda> so nobody is going to use your dead finger
[19:25:06] <Isotopp> and it will become impossibble to distinguish these two identities with confidence.
[19:26:25] <zitter> it is strange, because we have a timekeeper in our canteen. employee > fingerprint > receipt with meal you have ordered
[19:27:06] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Read error: Connection reset by peer)
[19:30:01] <Naktibalda> anyway, you won't get SQL query for that
[19:31:00] <Isotopp> moreover, you won't need one, too
[19:31:17] <Isotopp> even with 1000s of fingerprints, this is a dataset that is conveniently held even in small memory
[19:31:24] <zitter> thanks a lot
[19:31:26] <Isotopp> with not much concurrent write access
[19:31:34] <Isotopp> so using a SQL database is kind of pointless
[19:32:13] <Isotopp> SQL databases make sense in high concurrrency write scenarios, and in scenarios where you read with a very high selectivity (and ideally exact matches)
[19:32:30] <Isotopp> that is, in environments where efficient locking or good indexing are key to success
[19:36:00] *** Quits: Terlisimo (~Terlisimo@outofband.ozna.net) (Quit: Connection reset by beer)
[19:36:23] *** Joins: Terlisimo (~Terlisimo@outofband.ozna.net)
[19:37:49] *** Quits: travisghansen (~travisgha@192.74.130.86) (Quit: The Lounge - https://thelounge.github.io)
[19:51:47] *** Quits: mickey (~user@user/mickey) (Quit: mickey)
[19:53:31] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:56:16] *** Joins: mickey (~user@user/mickey)
[20:01:06] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[20:29:23] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:03:25] *** Quits: jkavalik_ (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[21:03:51] *** Quits: Xgc (~Xgc@user/xgc) (Quit: Leaving)
[21:04:33] *** Joins: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[21:05:50] *** Quits: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Remote host closed the connection)
[21:16:43] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Easy as 3.14159265358979323846...)
[21:57:31] *** Joins: quhar (~quhar@staticline-31-182-243-70.toya.net.pl)
[22:49:53] *** Quits: quhar (~quhar@staticline-31-182-243-70.toya.net.pl) (Ping timeout: 252 seconds)
[22:56:15] *** Joins: quhar (~quhar@staticline-31-182-243-70.toya.net.pl)
[22:58:16] *** Quits: relight (~relight@user/relight) (Ping timeout: 245 seconds)
[22:58:34] *** Joins: relight (~relight@user/relight)
[23:12:04] *** Joins: quhar_ (~quhar@188.146.102.227.nat.umts.dynamic.t-mobile.pl)
[23:15:32] *** Quits: quhar (~quhar@staticline-31-182-243-70.toya.net.pl) (Ping timeout: 240 seconds)
[23:19:38] *** Joins: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[23:26:59] *** Joins: dontyouloveshort (~dontyoulo@p200300d21f0bec01f0fb05d462c23efc.dip0.t-ipconnect.de)
[23:27:00] <dontyouloveshort> hi
[23:27:02] <dontyouloveshort> by accident i created a grant with @% in the username itself, trying to remove that with: revoke all privileges on mydb for 'myuser@%'@'%';     does not work
[23:27:12] <dontyouloveshort> how to remove it?
