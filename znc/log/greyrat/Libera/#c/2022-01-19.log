[00:02:27] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[00:11:04] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[00:16:41] *** Joins: inlight (~inlight@157.35.56.94)
[00:16:42] *** Quits: inlight (~inlight@157.35.56.94) (Changing host)
[00:16:42] *** Joins: inlight (~inlight@user/inlight)
[00:19:35] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[00:19:37] *** Quits: kts (~kts@103.73.237.109) (Quit: Konversation terminated!)
[00:23:43] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[00:24:41] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 268 seconds)
[00:24:43] *** Quits: mahmutov (~mahmutov@5.176.42.160) (Ping timeout: 256 seconds)
[00:26:09] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:28:06] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[00:29:11] *** Quits: Kerr (~Kerr@c-73-193-43-154.hsd1.wa.comcast.net) (Quit: Client closed)
[00:29:44] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:dc9:6189:5e0d:b006) (Quit: Quit)
[00:30:12] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:30:13] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[00:30:58] *** Quits: Vrganj (~vrganj@93-138-56-207.adsl.net.t-com.hr) (Quit: Leaving)
[00:31:21] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) ()
[00:32:15] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[00:33:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[00:34:40] *** Joins: Itaru (~Itaru@185.65.135.251)
[00:35:36] *** Joins: Viewday110 (~Viewday@user/viewday)
[00:36:15] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:36:15] *** Viewday110 is now known as Viewday11
[00:38:04] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[00:38:19] *** Joins: candide (~pbot3@about/c/bot/candide)
[00:40:32] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[00:40:51] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[00:41:05] <owensjrw> Hello all, good afternoon.
[00:41:53] <owensjrw> Which is true in a statement like this if(flag){somestuff}, all non-zero are equal to true or only 1?
[00:42:23] <fizzie> Anything that compares unequal to 0.
[00:42:57] <owensjrw> So only 0 is false anything else is true?
[00:43:08] <constxd_> no
[00:43:12] <fizzie> 0, 0.0, null pointer, ...
[00:43:29] <fizzie> (C11 6.8.4.1p2: "In both forms, the first substatement [of an `if` statement] is executed if the [controlling] expression compares unequal to 0.")
[00:44:16] <owensjrw> Thanks fizzie exactly what I needed.
[00:44:30] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Remote host closed the connection)
[00:44:54] *** Quits: jhms (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:45:20] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:45:38] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[00:46:02] *** Quits: malina (~malina@user/malina) (Quit: malina)
[00:47:56] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[00:51:28] <YellowSuB> Hey I'm doing  'x = floor(x/2);' and it gives me a warning about integer division used in a floating point context, is this generally something that should be taken seriously? Can it lead to some sort of bug that I'm not anticipating?
[00:52:02] <fizzie> Assuming `x` is an integer type, the `floor` is pointless.
[00:52:07] <fizzie> The result of x/2 is already an integer.
[00:52:53] <fizzie> Well, arguably a little worse than pointless: you'd be converting the integer to a `double` and then back again, which may not necessarily be able to represent it exactly.
[00:54:26] <YellowSuB> fizzie: x is indeed an integer, so yeah I should just skip the floor then...
[00:55:02] <fizzie> ,cc unsigned long x = 2222222222222222222; x = floor(x/2); printf("%ld", x); // as seen here
[00:55:04] <candide> fizzie: 1111111111111111168
[00:55:20] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[00:56:38] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:dc9:6189:5e0d:b006)
[00:57:23] <YellowSuB> But am I understanding it correctly that if it is an odd number it rounds down by default?
[00:57:41] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:57:42] <YellowSuB> i.e. floors it
[00:58:00] <fizzie> If it's a positive odd number, yes. Integer division "truncates", i.e., rounds towards zero.
[00:58:50] <owensjrw> 3 / 2 in integer math is 1 no rounding.
[00:59:26] <fizzie> `floor` would round towards negative infinity, which isn't the same for negative results.
[00:59:29] <chiselfuse> struct addrinfo hints, *servinfo, *p;      error: storage size of ‘hints’ isn’t known
[00:59:38] <fizzie> ,cc int x = -7; printf("%d vs. %g", x/2, floor(x / 2.0));
[00:59:39] <chiselfuse> what does this error mean at all?
[00:59:40] <candide> fizzie: -3 vs. -4
[00:59:50] <YellowSuB> Ah great, thanks for the help,
[01:00:04] *** Joins: Viewday113 (~Viewday@user/viewday)
[01:00:10] <fizzie> It means the definition of `struct addrinfo` isn't in scope at the point of the declaration, so it's an incomplete type.
[01:00:25] <fizzie> ,cc struct whatever x; // like trying to do this
[01:00:27] <candide> fizzie: error: storage size of 'x' isn't known
[01:00:29] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:00:29] *** Viewday113 is now known as Viewday11
[01:00:51] <constxd_> kings
[01:01:25] <chiselfuse> so i'm missing the declaration of addrinfo?
[01:01:47] <fizzie> Well, `struct addrinfo`, not just plain `addrinfo`. Struct tags are a separate namespace. But yes.
[01:02:11] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[01:02:18] <constxd_> getting SEGV because apparently one of the threads in my program jumps to an illegal address
[01:02:28] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[01:02:49] *** Joins: Viewday111 (~Viewday@user/viewday)
[01:03:01] <chiselfuse> fizzie: thanks
[01:03:08] <constxd_> but both valgrind and the ub/address sanitizer libraries don't give me any additional context
[01:03:16] <owensjrw> Have a great day all and thanks for the help..
[01:03:20] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[01:03:21] <constxd_> how do i figure out what's going wrong
[01:04:16] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:04:17] *** Viewday111 is now known as Viewday11
[01:04:24] <sham1> gdb
[01:05:04] <sham1> But remember that you need to have another build, without ASan, if you want success with gdb
[01:05:05] *** Joins: EdFletcher (~PKD@user/edfletcher)
[01:07:07] <fizzie> Well, for some values of. ASan *can* be used together with gdb, and it can even be useful since if you have a random pointer in gdb, you can ask ASan to tell you what it knows about the allocation it's in (if anything).
[01:07:14] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[01:07:48] <fizzie> The leak checker was probably incompatible though.
[01:08:09] <constxd_> based
[01:08:35] <constxd_> was longjmping to a jmp_buf that was setjmped in a different thread
[01:09:12] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[01:09:14] <sham1> Yeah, longjmp can be weird
[01:11:27] <constxd_> exposed pthread_create in my high level programming language with zero safety guarantees at all. based
[01:13:55] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[01:15:53] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:20:38] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:21:31] *** BinarySavior_ is now known as BinarySavior
[01:22:11] <YellowSuB> Am I correct in assuming the following macros are equivalent: #define IS_ODD(x) (x % 2 == 1) nad #define ISODD(x) (x & 1) ? Would there be any performance benefits to doing it with the AND operation or does the compiler fix all that anyways?
[01:22:39] *** Quits: BinarySavior (~BinarySav@josh.vet) (Changing host)
[01:22:39] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[01:23:02] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[01:23:33] <YellowSuB> s/nad/and
[01:24:01] <fizzie> The former does again not work for negative numbers.
[01:24:23] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:24:30] <fizzie> But if you had written `x % 2 != 0` vs. `x & 1`, then yes, a lot of compilers would generate identical code for those two.
[01:24:32] <kurahaupo> YellowSuB: no
[01:24:47] <fizzie> And/or if `x` is an unsigned type, of course.
[01:24:55] <YellowSuB> x is just an integer
[01:25:02] <kurahaupo> x % 2U
[01:25:06] *** Joins: malloy (~jimery@113.116.52.22)
[01:25:14] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-118.cspire.com)
[01:25:59] <kurahaupo> YellowSuB: For reasons that I personally think are stupid, the C committee decided to define (-1) % N == -1 rather than N-1 (for positive N)
[01:27:14] *** Joins: remexre (~remexre@user/remexre)
[01:27:20] *** Quits: Retr0id7 (~Retr0id@user/retr0id) (Ping timeout: 250 seconds)
[01:27:21] <sham1> We has remainders, since they're also easier to compute
[01:27:42] <fizzie> Out of curiosity, if (-1) % N was N-1, would you have then had (-1)/N == -N too, or just left % and / not internally consistent?
[01:27:46] <kurahaupo> which leads to the counterintuitive result that x%y != (x+y)%y for some choices of x & y even when overflow does not occur
[01:28:38] <kurahaupo> fizzie: Yes for positive divisors I would take the floor of the division (ceiling for negative divisors)
[01:28:38] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:28:39] <YellowSuB> interesting
[01:28:54] <kurahaupo> So (-1)/N == -1
[01:28:54] <Techcable> Is there a table for C11 conformance?
[01:29:02] <Techcable> For implementations
[01:29:09] <Techcable> Sort of like how Wikipedia has this for C99: https://en.wikipedia.org/wiki/C99#Implementations
[01:29:14] <sham1> int mod(int x, int n) { int ret = x % n; return ret >= 0 ? ret : n + ret; }
[01:29:17] <kurahaupo> table? There's the entire standard
[01:29:21] <sham1> And make that into _Generic
[01:29:39] <kurahaupo> sham1: yeah, I've written that function far too many times
[01:30:19] <sham1> I'd like to see that in tgmath.h. Oh well
[01:30:27] <Techcable> I think wikipedia used to have some sort of glorious table on C99/C11 with checkmarks and such
[01:30:42] <Techcable> For standard library conformance & compiler conformance
[01:31:19] <Techcable> Like "glibc >= 12.8 - Partial - Does not supports C11 threads", etc
[01:32:03] <kurahaupo> oh a table with features on one axis and a list of compilers/versions on the other axis?
[01:32:43] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Quit: WeeChat 3.3)
[01:32:46] <Techcable> yes
[01:32:49] <Techcable> Absolutely
[01:33:11] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:33:19] <Techcable> I know VS Code got new C99/C11 features (horray), but I recall some sort of table for C99
[01:33:21] <kurahaupo> when you said "for implementations" I thought you meant a checklist that could be used by the people writing an implementation, not a tabulation BY implementation
[01:33:25] *** Quits: magla (~gelignite@55d4217a.access.ecotel.net) (Quit: Stay safe!)
[01:33:30] <Techcable> oh gosh no
[01:33:33] * Techcable laughs
[01:33:44] <Techcable> I'm not insane enough to try and implement the C standard'
[01:34:06] <kurahaupo> Or that you could use to assess an implementation
[01:35:12] <Techcable> well I mean I think wikipedia used to have an amazing table for either C99 or C11
[01:35:19] <Techcable> but I can't find it
[01:35:46] <fizzie> It was probably considered non-notable or original research, and therefore removed.
[01:35:49] <Techcable> I use Unix personally but I don't want to accidentally screw over the windows folks ;)
[01:35:54] *** Joins: System_Error (~SystemErr@user/systemerror)
[01:35:55] <Techcable> fizzie++
[01:36:39] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Quit: Client closed)
[01:37:06] *** Quits: lemontre1 (~chat@user/lemontree) (Quit: WeeChat 3.1)
[01:41:35] <sham1> Well Visual Studio now has clang
[01:41:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[01:41:45] <sham1> So you probably need not worry
[01:47:49] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:48:31] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:49:29] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:51:17] *** Joins: chartreus (~chartreus@S0106f0f249dfd9c3.cg.shawcable.net)
[01:51:31] *** Quits: chartreus (~chartreus@S0106f0f249dfd9c3.cg.shawcable.net) (Client Quit)
[01:52:03] *** Quits: neocron (~NeoCron@p200300c4cf1b4400f695d81d4d068b5c.dip0.t-ipconnect.de) (Quit: Leaving)
[01:52:50] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[01:54:26] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[01:54:39] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[01:55:17] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[01:56:30] *** Parts: remexre (~remexre@user/remexre) (WeeChat 3.1)
[01:58:02] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[01:59:27] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[02:00:19] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[02:01:21] *** _nuxil_ is now known as nuxil
[02:03:11] *** Quits: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net) (Quit: Leaving)
[02:04:49] *** Quits: mintograde (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[02:05:14] *** Joins: mintograde (~mintograd@47.201.5.61)
[02:08:15] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:09:04] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:09:20] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:4cb5:1453:777d:3b64)
[02:11:49] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:14:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:14:32] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:4cb5:1453:777d:3b64) (Ping timeout: 240 seconds)
[02:14:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:16:02] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[02:19:18] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[02:20:47] *** Quits: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[02:23:35] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:4cb5:1453:777d:3b64)
[02:25:59] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 256 seconds)
[02:27:01] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[02:28:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:28:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:28:37] *** Joins: wroathe (~wroathe@user/wroathe)
[02:31:37] *** Quits: orthoplex64 (~crm@70.120.0.94) (Remote host closed the connection)
[02:31:42] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:31:43] *** Joins: kit-ten (~u0_a391@2603-6010-a141-6fa3-f44f-d859-cfd9-2a3c.res6.spectrum.com)
[02:32:01] *** Joins: orthoplex64 (~crm@70.120.0.94)
[02:32:42] *** Joins: liba (~liba@user/liba)
[02:33:02] *** Quits: pizdets_ (~pizdets@183.182.114.123) (Ping timeout: 240 seconds)
[02:33:43] *** Joins: pizdets (~pizdets@183.182.114.168)
[02:34:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:34:57] *** Quits: kit_ten (~u0_a391@2600:380:a451:6557:78fd:fdbf:da0b:386a) (Ping timeout: 240 seconds)
[02:36:59] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[02:37:16] *** Joins: ferdna (~ferdna@user/ferdna)
[02:37:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:38:30] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[02:39:16] *** Quits: Cyp (~cyp@213.237.88.120) (Ping timeout: 250 seconds)
[02:42:16] *** Quits: gaude (~gaude@114-39-142-46.pool.kielnet.net) (Ping timeout: 256 seconds)
[02:42:59] *** Quits: alch (~alch@mi-18-35-182.service.infuturo.it) (Ping timeout: 256 seconds)
[02:43:02] *** Joins: laslmtduuuk^ (~laslmtduu@wsip-98-188-242-61.mc.at.cox.net)
[02:44:27] *** Joins: alch (~alch@mi-18-11-55.service.infuturo.it)
[02:47:58] *** Joins: Rounin (~david@84.212.130.215)
[02:55:51] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[02:56:56] *** Joins: Cyp (~cyp@213.237.88.120)
[02:57:03] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:58:17] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:02:05] *** Quits: Akuli (~Akuli@82-203-166-101.bb.dnainternet.fi) (Quit: Akuli)
[03:03:09] *** Joins: Kerr (~Kerr@2600:387:c:6c10::7)
[03:03:57] *** Quits: cosimone (~user@93-47-230-83.ip115.fastwebnet.it) (Ping timeout: 256 seconds)
[03:04:24] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:dc9:6189:5e0d:b006) (Ping timeout: 268 seconds)
[03:07:39] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:08:09] <cryptonector> that older VC doesn't support C99 fully (or enough) is a huge PITA
[03:09:51] <cryptonector> one codebase I work on is used by some users on Window s7 (yes, I know, and not too long ago even XP), which means I can't just break them, which means I can't use the C99 features I want, let alone C11 features -- if I could just get the VC compiler driver to use clang for Windows 7 builds, and not have to spend endless hours making it work, that would be _amazing_
[03:10:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:13:36] *** Quits: Kerr (~Kerr@2600:387:c:6c10::7) (Quit: Client closed)
[03:16:17] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[03:20:59] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:22:35] *** Joins: stonkey (~stonkey@user/stonkey)
[03:23:25] *** Quits: ethoxy (~root@bison.sh3ll.ru) (Ping timeout: 240 seconds)
[03:27:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:28:20] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:28:33] *** Joins: JanC (~janc@user/janc)
[03:35:02] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[03:35:41] *** Quits: acolarh (~niels@3e6be663.rev.stofanet.dk) (Ping timeout: 256 seconds)
[03:36:00] *** Joins: rsjw (~quassel@user/rsjw)
[03:36:28] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 250 seconds)
[03:36:51] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:37:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:38:02] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[03:38:36] *** Joins: Enitin (~Enitin@82.102.22.84)
[03:39:40] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[03:40:02] *** Joins: seninha (~seninha@user/seninha)
[03:40:56] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[03:42:48] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:43:13] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:43:24] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[03:44:02] *** Joins: Torr (~Torr@user/torr)
[03:44:13] *** Joins: constxd_ (~brad@142.167.170.88)
[03:49:34] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[03:50:05] *** Quits: Torr (~Torr@user/torr) ()
[03:50:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:50:16] *** Joins: Torr (~Torr@user/torr)
[03:57:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:58:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:58:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:58:13] *** Joins: wroathe (~wroathe@user/wroathe)
[03:59:05] *** Quits: laslmtduuuk^ (~laslmtduu@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[03:59:56] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[04:00:03] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:00:32] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[04:00:37] *** vinleod is now known as vdamewood
[04:01:20] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:01:48] *** Parts: Burgundy (~NA@86.121.143.206) ()
[04:02:07] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-118.cspire.com) (Read error: Connection reset by peer)
[04:04:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:05:25] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[04:05:39] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:07:36] *** Joins: Alhazred (~Alhazred@86.106.74.38)
[04:10:38] *** Joins: acolarh (~niels@3e6be663.rev.stofanet.dk)
[04:14:03] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[04:14:10] *** Quits: Jong (~Jong@2620:10d:c090:400::5:5dc3) (Read error: Connection reset by peer)
[04:14:36] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 250 seconds)
[04:16:25] *** Joins: Retr0id (~Retr0id@user/retr0id)
[04:16:27] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:4cb5:1453:777d:3b64)
[04:16:33] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[04:16:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:17:13] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:18:26] *** Joins: Wulf (~Wulf@user/wulf)
[04:18:54] *** Joins: Rounin (~david@84.212.130.215)
[04:19:02] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:4cb5:1453:777d:3b64) (Ping timeout: 240 seconds)
[04:19:03] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[04:22:43] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 268 seconds)
[04:27:01] *** Joins: constxd_ (~brad@142.167.170.88)
[04:29:05] *** Joins: fwg (~fwg@user/fwg)
[04:29:20] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[04:29:30] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[04:33:12] *** Joins: peacefulman (~paul@107-190-110-80.cpe.teksavvy.com)
[04:36:17] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Ping timeout: 268 seconds)
[04:42:40] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:48:33] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[04:55:52] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:00:52] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[05:02:11] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[05:02:32] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[05:06:36] *** Joins: remavas (~Remavas@user/remavas)
[05:06:47] *** Quits: remavas (~Remavas@user/remavas) (Client Quit)
[05:11:24] *** Joins: austin (~austin@pool-74-96-213-156.washdc.fios.verizon.net)
[05:21:24] *** kit-ten is now known as ca-t
[05:23:32] *** ca-t is now known as kit-ten
[05:23:33] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:24:38] <pragma->  /b 6
[05:27:40] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[05:29:01] *** Joins: warremkaw (~warremkaw@user/warremkaw)
[05:29:55] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[05:32:14] *** Joins: chair1 (~nero@177.23.12.223)
[05:33:23] *** Quits: Matt|home (~matt@adsl-74-233-58-165.mia.bellsouth.net) (Ping timeout: 256 seconds)
[05:35:30] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[05:37:05] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[05:37:17] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[05:37:20] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 268 seconds)
[05:38:01] *** Joins: Nutte35 (~Nutte@202.153.81.63)
[05:38:05] *** Joins: EdFletcher (~PKD@user/edfletcher)
[05:38:42] <chair1> Hey. I used the `restrict` like: void merge(int size, int array[restrict], int buffer_size, int buffer[restrict]). Clang and GCC didn't complain. MSVC++ did. Are they wrong? Should I change to e.g. `int * restrict array`? The only example on the standard regards to matrices.
[05:39:06] <chair1> Ah, and TCC just segfaulted lol
[05:39:58] <chair1> Nevermind, TCC segfaulted because one array was too big, it also ran fine
[05:40:30] <fizzie> `int array[restrict]` should be just fine, though you *can* write it as a pointer if you prefer.
[05:40:57] <fizzie> Here's an example from the C99 rationale, using `double a[static restrict 10]` as a function parameter declaration: https://0x0.st/-WSb.txt
[05:41:43] <fizzie> (Slightly different in that, in order to use the `static` keyword for that purpose, the array declarator must be used.)
[05:42:16] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 268 seconds)
[05:43:14] *** Quits: warremkaw (~warremkaw@user/warremkaw) (Remote host closed the connection)
[05:44:36] *** Joins: warremkaw (~warremkaw@user/warremkaw)
[05:44:45] <chair1> Funny they reused the word static for a keyword that has a different meaning than the other static keyword. Could've been `atleast` or something...
[05:45:39] *** Joins: vysn (~vysn@user/vysn)
[05:45:42] *** Joins: kurahaupo (~kurahaupo@pa49-197-63-241.pa.qld.optusnet.com.au)
[05:45:48] <constxd_> what is the other static keyword
[05:46:39] <caze> static
[05:46:40] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[05:46:41] <fizzie> It was already serving double duty (to adjust storage duration for block-scope declarations, and to adjust linkage from external to internal in file-scope declarations), so one more couldn't hurt. C++ went even further.
[05:46:45] *** Joins: Matt|home (~matt@adsl-74-233-58-56.mia.bellsouth.net)
[05:46:48] <chair1> static const number = 4;
[05:46:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:47:13] <chair1> Ah, yeah, why not
[05:47:29] <constxd_> i think they just added another one in C++23 didn't they
[05:47:53] <constxd_> wait no it's auto they added a new meaning for
[05:47:58] <chair1> I never discerned your first and second usage of static, always considered the same... good to know
[05:48:03] <constxd_> C should do that
[05:48:44] <fizzie> There's a proposal for C23 to do that, but it seems rather unclear whether it will make the cut. And I think C++ added type inference with `auto` a long time ago already, though I don't really follow.
[05:48:51] <chair1> I've used C++ very briefly, but you can make implicit templates using auto... crazy stuff
[05:49:37] <constxd_> yeah they started adding auto for declarations where the type is deduced automatically
[05:50:05] <constxd_> but now they're adding another meaning where you can write template functions without actually using the template keyword at all
[05:50:19] <constxd_> by having the return type / parameters be auto
[05:50:41] <constxd_> auto sum(auto a, auto b, auto c) { return a + b + c; }
[05:50:46] <fizzie> ISTR C++17 adding structured binding with `auto [a, b] = /* something returning std::pair */`.
[05:51:23] <chair1> Changing `int array[restrict]` to `int * restrict array` made the code compile in MSVC...
[05:51:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9841-fdb7-086b-ec04.res6.spectrum.com)
[05:51:43] <constxd_> microsoft doesn't care about C standards
[05:52:03] <chair1> I appreciate they improved support recently, but as you see with restrict, it is incomplete :(
[05:52:13] <pony> microsoft owns DOOM now :(
[05:52:52] <pony> microsoft just buys things
[05:52:54] <chair1> They bought id Software? I heard Carmack is working for Zuck through Oculus
[05:53:06] <pony> they bought the company that owns id software
[05:53:10] <pony> Bethseda or something
[05:53:15] <chair1> lol
[05:54:00] <chair1> Microsoft -> Xbox Game Studios -> ZeniMax Media -> id Software
[05:54:05] <chair1> according to Wikipeida
[05:54:19] <pony> hehe
[05:54:21] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:54:24] <pony> they own github too!
[05:54:25] <pony> :)
[05:54:43] *** Quits: warremkaw (~warremkaw@user/warremkaw) (Remote host closed the connection)
[05:54:56] <chair1> Meta Platforms (former Facebook) -> Oculus -> John Carmack
[05:56:48] <vysn> Anti-trust concerns are rising
[05:56:49] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[05:58:03] <vysn> This Microsoft Blizzard Acquisition got the US Federal Trade Commission Talking about updating merger guidelines.
[05:58:21] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[05:58:45] <pony> don't you just love it
[05:59:53] <chair1> So it seems I have a MS account, let's see if I can request them to fix their restrict keyword... of course they let me set a password with 128 characters but not accept logins with it, happens all the time everywhere
[06:00:47] <pony> I hope they don't buy C
[06:00:58] <constxd_> based
[06:01:30] <pony> maybe they'll buy Rust instead
[06:02:06] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[06:02:09] <vysn> pony: an attempt to nip this sort of gaming monopolization in the bud it seems.
[06:02:37] <vysn> do you remember Microsoft's antitrust law suit in 1998?
[06:02:50] <vysn> it almost split the company into two
[06:02:52] <pony> I don't
[06:03:01] <pony> I was only 12 the
[06:03:02] <pony> n
[06:04:44] <vysn> well. that was probably why they invested in Apple back then and practically saved it from bankruptcy, just to keep another competitor alive and take some of that heat off.
[06:04:55] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[06:05:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:06:04] *** Joins: fwg (~fwg@user/fwg)
[06:07:05] <vysn> one would assume that they learnt their listen from that experience and made sure everything is in order before they acquired Activison Blizzard
[06:07:20] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[06:07:36] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:08:35] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Read error: Connection reset by peer)
[06:09:10] <apotheon> or maybe the gub'mint just won't care this time
[06:09:46] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[06:14:34] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[06:15:58] *** Joins: fe23 (~fe23@2409:8a34:461:9470:19e9:2f57:5e38:8ee9)
[06:17:24] <mar77i> state machines, though. https://dpaste.com/DXSH7KR37#
[06:18:58] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:19:34] <mar77i> nah, it's actually the most perfect I could make it.
[06:22:58] *** Joins: zmt01 (~zmt00@user/zmt00)
[06:24:13] *** Quits: sokan (~sokan@2a02:587:9e13:1c00:227:eff:fe16:865d) (Ping timeout: 240 seconds)
[06:24:25] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:25:02] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[06:26:16] *** Joins: zmt01 (~zmt00@user/zmt00)
[06:26:20] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[06:27:38] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[06:28:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:31:41] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:34:11] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:35:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:35:50] *** Joins: trvv (555a816688@user/trvv)
[06:35:58] *** Joins: frost (~frost@user/frost)
[06:38:57] *** Quits: nicode (~nic@2607:f2c0:946d:3800:7702:bdd5:2eed:e4f0) (Ping timeout: 240 seconds)
[06:39:57] *** Quits: raym (~raym@user/raym) (Remote host closed the connection)
[06:40:09] *** Quits: alch (~alch@mi-18-11-55.service.infuturo.it) (Read error: Connection reset by peer)
[06:42:31] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[06:43:29] *** Joins: raym (~raym@user/raym)
[06:44:55] *** Joins: alch (~alch@mi-18-22-4.service.infuturo.it)
[06:47:24] *** Quits: chair1 (~nero@177.23.12.223) (Quit: goodnight)
[06:50:25] *** Joins: stblaha (~stblaha@user/stblaha)
[06:52:17] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[06:54:16] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:57:50] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:c0b2:a7ad:8aa7:4387)
[06:58:44] *** Quits: Nutte35 (~Nutte@202.153.81.63) (Read error: Connection reset by peer)
[06:58:56] *** Joins: Nutte35 (~Nutte@202.153.81.63)
[06:58:56] *** Quits: Nutte35 (~Nutte@202.153.81.63) (Read error: Connection reset by peer)
[06:59:08] *** Joins: Nutte35 (~Nutte@202.153.81.63)
[06:59:13] *** Quits: Nutte35 (~Nutte@202.153.81.63) (Read error: Connection reset by peer)
[06:59:26] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[06:59:31] *** Quits: Dotz0cat (~Dotz0cat@h214.238.31.71.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[07:02:07] *** Joins: Dotz0cat (~Dotz0cat@173.187.231.59)
[07:02:18] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[07:04:03] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:04:47] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 256 seconds)
[07:05:20] *** Quits: Dotz0cat (~Dotz0cat@173.187.231.59) (Client Quit)
[07:05:22] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[07:05:42] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[07:05:45] *** Quits: nich04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca) (Remote host closed the connection)
[07:07:33] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:09:16] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Remote host closed the connection)
[07:09:19] *** Quits: kurahaupo (~kurahaupo@pa49-197-63-241.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[07:11:08] *** Joins: GIR (~GIR@64.145.93.51)
[07:11:21] *** GIR is now known as GIR0001
[07:12:27] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[07:13:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[07:13:41] *** Quits: acolarh (~niels@3e6be663.rev.stofanet.dk) (Ping timeout: 256 seconds)
[07:14:40] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:17:02] *** Quits: zmt00 (~zmt00@user/zmt00) (Client Quit)
[07:17:24] *** Joins: Dotz0cat (~Dotz0cat@98.22.179.189)
[07:17:29] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.6)
[07:18:48] *** fbiagent_ is now known as fbiagent
[07:18:56] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Quit: Leaving)
[07:19:30] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[07:19:36] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:20:53] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[07:21:13] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[07:24:22] *** Joins: karakedi (~eAC53C340@user/karakedi)
[07:27:00] *** Joins: acolarh (~niels@3e6be663.rev.stofanet.dk)
[07:27:55] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[07:31:24] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:31:39] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:32:32] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:38] *** Joins: Bitpick_ (~BitPick@151.82.166.57)
[07:37:10] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:43:53] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 256 seconds)
[07:44:22] *** Joins: fwg (~fwg@user/fwg)
[07:44:27] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[07:44:55] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:48:41] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[07:48:48] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:51:35] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:54:17] *** Joins: hanzo (uid532183@user/hanzo)
[07:58:33] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[07:58:44] *** Joins: eelstrebor (~eelstrebo@199.47.67.38)
[07:58:49] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:01:30] *** Joins: zmt01 (~zmt00@user/zmt00)
[08:01:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[08:04:42] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[08:04:44] *** Joins: mahmutov (~mahmutov@5.176.32.121)
[08:05:29] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:10:55] *** Quits: mahmutov (~mahmutov@5.176.32.121) (Ping timeout: 256 seconds)
[08:14:44] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[08:14:52] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[08:15:30] *** Quits: Bitpick_ (~BitPick@151.82.166.57) (Quit: Leaving)
[08:15:53] *** Parts: KillerWasp (~KillerWas@user/killerwasp) (YOU KIDDING ME?? YOU KIDDING MEEE???? (PC drinking beer) *kernel panic!*)
[08:18:49] *** Quits: eelstrebor (~eelstrebo@199.47.67.38) (Quit: Ex-Chat)
[08:23:37] *** Joins: pyook (~pyook@user/puke)
[08:26:32] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (Ping timeout: 240 seconds)
[08:29:10] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[08:32:14] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:33:23] *** Joins: abraxis (~admin@66-175-215-36.ip.linodeusercontent.com)
[08:33:46] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[08:35:47] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[08:36:14] *** Joins: kish` (~aqua@user/aqua)
[08:37:30] *** Quits: puke (~puke@user/puke) (Remote host closed the connection)
[08:38:31] *** Parts: abraxis (~admin@66-175-215-36.ip.linodeusercontent.com) ()
[08:39:49] *** Joins: abraxis (~admin@66-175-215-36.ip.linodeusercontent.com)
[08:41:15] *** Quits: pyook (~pyook@user/puke) ()
[08:42:14] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[08:44:03] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[08:45:34] *** Joins: constxd_ (~brad@142.167.170.88)
[08:51:23] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[08:53:27] *** Joins: frost (~frost@user/frost)
[08:55:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[08:57:38] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:58:09] *** Joins: Red__ (~Red@97.109-247-81.customer.lyse.net)
[08:59:41] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:00:32] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[09:00:50] *** Joins: Burgundy (~NA@86.121.143.206)
[09:01:01] *** Joins: malina (~malina@user/malina)
[09:01:28] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Ping timeout: 250 seconds)
[09:02:30] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:a4b0:8133:bc01:7693)
[09:07:09] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.6) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[09:07:27] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[09:09:18] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[09:13:24] *** Quits: GIR0001 (~GIR@64.145.93.51) (Read error: Connection reset by peer)
[09:13:37] *** Joins: GIR (~GIR@64.145.93.50)
[09:15:06] *** GIR is now known as GIR0001
[09:20:49] *** Joins: fwg (~fwg@user/fwg)
[09:20:55] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:dc9:6189:5e0d:b006)
[09:21:45] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[09:23:42] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.155)
[09:25:18] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[09:28:47] *** Joins: namkeleser (~namkelese@124.188.192.57)
[09:31:03] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.155) (Ping timeout: 268 seconds)
[09:32:05] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:32:35] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:33:28] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:35:32] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:36:02] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 240 seconds)
[09:36:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[09:38:09] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.190)
[09:42:23] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[09:43:03] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:44:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[09:46:14] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:49:43] *** Quits: alicef (~none@gentoo/developer/alicef) (Quit: install gentoo)
[09:50:12] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[09:50:29] *** Joins: alicef (~none@gentoo/developer/alicef)
[09:52:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:52:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:52:03] *** Joins: wroathe (~wroathe@user/wroathe)
[09:52:32] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.190) (Ping timeout: 240 seconds)
[09:56:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:56:44] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[09:59:02] *** Joins: chomwitt (~chomwitt@2a02:587:dc0b:200:12c3:7bff:fe6d:d374)
[10:00:26] *** Joins: Xatenev (~xatenev@2a02:8108:9640:74d4:19f3:1894:e93:9e89)
[10:00:41] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:03:44] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 268 seconds)
[10:04:22] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[10:04:32] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:04:51] *** Quits: Xatenev (~xatenev@2a02:8108:9640:74d4:19f3:1894:e93:9e89) (Changing host)
[10:04:51] *** Joins: Xatenev (~xatenev@user/xatenev)
[10:05:09] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:07:53] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[10:10:18] *** Joins: frost (~frost@user/frost)
[10:11:04] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.190)
[10:17:15] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[10:17:47] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:20:26] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[10:21:00] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.190) (Ping timeout: 268 seconds)
[10:23:32] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 240 seconds)
[10:24:08] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[10:24:10] *** Joins: diiirt0 (~diiirt@user/diiirt)
[10:24:20] *** Quits: Itaru (~Itaru@185.65.135.251) (Quit: See Ya Later!)
[10:25:34] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[10:25:57] *** Quits: GIR0001 (~GIR@64.145.93.50) (Ping timeout: 256 seconds)
[10:26:03] *** Quits: diiirt (~diiirt@user/diiirt) (Ping timeout: 276 seconds)
[10:26:04] *** diiirt0 is now known as diiirt
[10:28:59] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[10:30:02] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 240 seconds)
[10:30:37] *** Joins: Guest85 (~Guest85@123.114.102.54)
[10:32:29] *** Quits: Guest85 (~Guest85@123.114.102.54) (Client Quit)
[10:32:45] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[10:34:14] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:35:57] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[10:36:01] *** Joins: saribro (~swinnenb@user/swinnenb)
[10:37:40] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[10:39:35] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 250 seconds)
[10:40:16] *** Quits: alch (~alch@mi-18-22-4.service.infuturo.it) (Read error: Connection reset by peer)
[10:40:18] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[10:40:34] *** Parts: abraxis (~admin@66-175-215-36.ip.linodeusercontent.com) ()
[10:45:03] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Ping timeout: 268 seconds)
[10:45:16] *** Joins: luizfrds (~Luiz@152.250.243.147)
[10:45:21] *** Joins: alch (~alch@151.82.26.51)
[10:46:02] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[10:46:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 268 seconds)
[10:46:31] *** Joins: almaember (~user@1F2EA950.dsl.pool.telekom.hu)
[10:46:53] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[10:48:04] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[10:49:05] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[10:50:02] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:51:10] *** Joins: llh (~llh@user/llh)
[10:52:12] *** Joins: puke (~puke@user/puke)
[10:52:35] *** Joins: xavi92_ (~quassel@207.188.171.228)
[10:53:39] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.190)
[10:56:19] <xavi92_> Hi guys, according to the C99 draft (http://www.open-std.org/jtc1/sc22/WG14/www/docs/n1256.pdf), the EXAMPLE 3 from §6.5.16.1 is considered a constraint violation due to the unsafe conversion of `const char **` to `char **`. However, why is a `const char *const *` to `char **` conversion also considered a constraint violation, if a `const char *const *` would not be able to modify anything from the pointer it points to?
[10:58:21] *** Joins: Darkcoal (~user@139.64.58.149)
[10:58:34] *** Joins: frost (~frost@user/frost)
[11:04:29] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:06:27] *** Joins: Guest57 (~Guest57@host-95-235-230-146.retail.telecomitalia.it)
[11:06:52] *** Quits: Guest57 (~Guest57@host-95-235-230-146.retail.telecomitalia.it) (Client Quit)
[11:08:59] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:09:00] *** Red__ is now known as Red
[11:09:01] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.190) (Ping timeout: 256 seconds)
[11:11:27] *** Joins: Itaru (~Itaru@185.65.135.251)
[11:13:04] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:13:45] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[11:14:01] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[11:15:21] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:15:23] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[11:15:38] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:17:08] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[11:19:50] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:20:10] <markand> yeah this is a limitation that C++ has fixed, sadly in C it's still invalid using an implicit cast
[11:20:47] <markand> POSIX uses char * const * in various functions instead which is not fully constified (e.g. exec family of functions)
[11:21:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828)
[11:25:36] *** Quits: malina (~malina@user/malina) (Quit: malina)
[11:25:40] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[11:26:08] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[11:27:56] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[11:28:36] <xavi92_> markand: so you agree this is more of a somehow arbitrary limitation in C rather than flawed logic from my side. That's relieving :)
[11:30:32] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 250 seconds)
[11:35:07] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:36:24] *** Joins: gaude (~gaude@114-39-142-46.pool.kielnet.net)
[11:37:17] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[11:39:06] *** Joins: nuxil (~nuxil@141.195.51.213)
[11:40:58] *** Joins: aradesh (~aradesh@user/aradesh)
[11:41:25] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[11:43:32] *** Joins: Furai (~Furai@furai.pl)
[11:44:44] *** Joins: mrig (~mrig@user/mrig)
[11:46:48] *** Joins: lleo (~leo@31-161-154-51.mobile.kpn.net)
[11:50:06] *** Joins: frytaped (~frytaped@user/go4godvin)
[11:55:48] *** Joins: Major_Biscuit (~MajorBisc@c-001-018-021.client.tudelft.eduvpn.nl)
[11:57:35] *** Quits: liba (~liba@user/liba) (Ping timeout: 256 seconds)
[11:57:49] *** Joins: fwg (~fwg@user/fwg)
[11:58:53] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[12:00:11] *** Quits: domve (~dom@user/domve) (Quit: ZNC - https://znc.in)
[12:00:39] *** Quits: welt_ (~welt@willow.spiderden.net) (Remote host closed the connection)
[12:01:41] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[12:03:06] *** Quits: lleo (~leo@31-161-154-51.mobile.kpn.net) (Quit: beyond time space in laws)
[12:03:39] *** Joins: iomari891 (~iomari891@197.210.70.166)
[12:04:34] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[12:08:37] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Read error: Connection reset by peer)
[12:09:03] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:09:25] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[12:10:00] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:13:31] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[12:15:00] *** Joins: mixfix41 (~homefame@user/mixfix41)
[12:19:47] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:19:57] *** Quits: fe23 (~fe23@2409:8a34:461:9470:19e9:2f57:5e38:8ee9) (Ping timeout: 240 seconds)
[12:20:59] *** Joins: mastarija (~mastarija@2a05:4f46:e0e:5000:c96c:6830:df6b:3edb)
[12:22:05] <mastarija> Is there a good way to make a simple program that just "hangs"? I've tried `while(true);` but that uses my cpu a lot, I just need something that will nicely idle and keep the process alive until I kill it.
[12:22:58] <mastarija> I just did `gcc Hang.c` to compile this program.
[12:22:59] <snappy> maybe while(1) { sleep(3600); }
[12:23:15] <mastarija> snappy, ah, yes... that might do the trick
[12:24:16] <mastarija> snappy, any particular reason for 3600?
[12:24:32] <snappy> no
[12:24:37] <abraham> mastarija: just wait for input, getchar or scanf etc
[12:24:46] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:24:54] <abraham> mastarija: should keep the process alive
[12:25:13] <mastarija> abraham, I kind of need something that can't be killed by accidentally sending the input or EOL
[12:25:21] <mastarija> sleep seems like a fine solution
[12:26:51] <sham1> while(true) { sleep(0); }
[12:26:54] <sham1> It yields
[12:27:24] <mastarija> sham1, what do you mean?
[12:27:31] <sham1> Exactly what I wrote
[12:28:02] <megaTherion> you wouldnt need while(true) or?
[12:28:15] <mastarija> I mean, that would just exit immediately, no?
[12:28:35] <mastarija> or actually, no it would do while loop all the time
[12:28:38] *** Joins: monchi (~joints@143.198.92.132)
[12:28:56] <megaTherion> nicely idle .... well thats sleep basically :D
[12:31:13] <mastarija> what does `implicit declaration of function 'sleep'` mean? I mean, the thing compiled and it hangs which is what I wanted, but how am I implicitly declaring sleep by stating `int main () { while( 1 ) sleep( 3600 ); }`
[12:31:48] <NRK[m]> you didn't include the needed header
[12:31:57] <mastarija> I included <stdio.h>
[12:32:04] <mastarija> Is it somewhere else?
[12:32:09] <xavi92_> mastarija: #include <unistd.h>
[12:32:14] <mastarija> Oh..
[12:32:21] *** Quits: Itaru (~Itaru@185.65.135.251) (Ping timeout: 268 seconds)
[12:32:21] <xavi92_> That's according to the man page for sleep(3)
[12:33:02] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:a4b0:8133:bc01:7693) (Ping timeout: 240 seconds)
[12:33:03] <NRK[m]> does windows have unistd.h ?
[12:33:36] <xavi92_> NRK[m]: unistd.h is a POSIX header, so Cygwin might be needed on Windows
[12:33:37] <megaTherion> no
[12:33:55] <mastarija> I have MSYS
[12:33:59] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[12:34:08] <mastarija> So I'm hoping it took care of it
[12:34:09] <mastarija> :D
[12:34:31] <NRK[m]> xavi92_: yes, i know it's POSIX. which is why i asked if windows has it. since windows isn't fully posix conforming..
[12:34:34] <megaTherion> win32api has different functions which work differently, but there is documentation for this
[12:34:42] <mastarija> Although I'm not doing C programming, I just needed something quick and simple.
[12:35:10] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:c0b2:a7ad:8aa7:4387) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:35:52] *** Joins: Jong (~Jong@2620:10d:c090:400::5:263a)
[12:36:46] *** Quits: mastarija (~mastarija@2a05:4f46:e0e:5000:c96c:6830:df6b:3edb) (Quit: Leaving)
[12:36:51] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[12:38:17] *** Joins: Sos (~Sos@d107-222.icpnet.pl)
[12:40:03] *** Quits: loganlee (~Thunderbi@user/loganlee) (Read error: Connection reset by peer)
[12:43:32] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 240 seconds)
[12:44:09] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:46:26] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:46:30] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[12:48:23] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[12:50:18] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Ping timeout: 256 seconds)
[12:51:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:52:37] *** Quits: zwr (~zwr@2804:d45:b966:fb00:393b:a077:e5c1:3104) (Ping timeout: 240 seconds)
[12:53:41] *** Joins: zwr (~zwr@2804:d45:b966:fb00:c030:2b1f:300e:31b6)
[12:54:10] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 250 seconds)
[12:55:21] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:dc9:6189:5e0d:b006) (Quit: Quit)
[12:56:07] *** Quits: frytaped (~frytaped@user/go4godvin) (Quit: frytaped)
[12:57:38] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:00:44] *** Parts: Xatenev (~xatenev@user/xatenev) ()
[13:01:38] *** Joins: stonkey (~stonkey@user/stonkey)
[13:02:34] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[13:05:08] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[13:06:11] *** Joins: seninha (~seninha@user/seninha)
[13:07:22] *** Quits: namkeleser (~namkelese@124.188.192.57) (Quit: Client closed)
[13:08:02] *** Quits: alch (~alch@151.82.26.51) (Ping timeout: 250 seconds)
[13:08:23] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:08:39] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:09:59] *** Joins: slavfox (~slavfox@93.158.232.111)
[13:10:06] *** Joins: alch (~alch@151.36.42.174)
[13:10:32] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[13:11:26] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[13:13:43] *** Joins: plastico (~plastico@neomutt/plastico)
[13:16:42] *** Joins: raym (~raym@user/raym)
[13:17:20] *** Joins: sokan (~sokan@athedsl-303170.home.otenet.gr)
[13:18:50] <sunny93> guys, I have a gdb question.
[13:19:02] <sunny93> How does the `7. run ~/sumtest.py` calls the Python that I built? From https://stackoverflow.com/a/23320041/5983841
[13:19:42] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:22:09] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:23:21] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[13:27:06] <markand> I think this is more a question for #gdb or maybe ##workingset
[13:28:39] <clarity> I don't understand the question anyway
[13:29:12] <teocle> possibly due to lack of clarity
[13:29:43] <sunny93> ok
[13:30:32] *** Joins: fe23 (~fe23@2409:8a34:461:9470:f1b4:f604:fefb:515a)
[13:31:15] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca)
[13:37:57] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[13:38:41] *** Joins: daviwil (~daviwil@systemcrafters/daviwil)
[13:39:13] *** Joins: bbju (~bbju@103.144.149.220)
[13:42:02] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[13:43:49] *** Joins: raym (~raym@user/raym)
[13:47:02] *** Quits: osp (~osp@84.19.72.107) (Ping timeout: 240 seconds)
[13:49:38] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 250 seconds)
[13:50:14] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[13:51:43] *** Joins: osp (~osp@84.19.72.107)
[13:55:54] *** Joins: stonkey (~stonkey@user/stonkey)
[14:01:10] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[14:05:02] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a176:9308:1a64:1dba)
[14:06:38] *** Joins: liba (~liba@user/liba)
[14:06:56] *** Joins: Burgundy (~NA@86.121.143.206)
[14:08:08] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[14:11:50] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[14:12:21] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:13:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:13:38] *** Lord_of_Life_ is now known as Lord_of_Life
[14:16:54] *** Quits: Burgundy (~NA@86.121.143.206) (Remote host closed the connection)
[14:17:38] *** Joins: Burgundy (~NA@86.121.143.206)
[14:18:32] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 240 seconds)
[14:20:34] *** Joins: soul-d (~uknown@user/soul-d)
[14:26:37] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[14:27:08] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:31:49] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[14:31:52] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:33:26] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[14:34:09] *** Joins: shivesh (~shivesh@user/shivesh)
[14:34:43] *** Joins: AmR (~AmREiSa@41.36.185.103)
[14:35:07] <novns> something weird is happening
[14:35:29] <omegatron> has the alien invasion begun?
[14:35:29] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[14:35:38] <novns> I'm trying to create a small test
[14:35:41] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[14:36:02] <novns> it works there, but segfaults with a bigger code around
[14:36:10] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[14:36:22] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[14:38:08] <novns> the problem is a function(bool result) receives true when called   void *ptr = NULL;  function(ptr != NULL);
[14:38:46] <omegatron> yeah .. is it not possible to show the code in question ??
[14:39:05] <novns> omegatron, the samll example works as expected
[14:39:08] <novns> *small
[14:39:28] <novns> and I'm trying to get what's wrong
[14:39:52] <novns> there should be no side effects
[14:39:54] <omegatron> just to be sure: 'NULL' is defined in your non-small code as expected? (if you think that may be the location of fault
[14:40:08] <novns> yes, it's the standard definition
[14:40:53] <novns> omegatron, and I"ve looked ad preprocessor output, it's ok there
[14:40:57] <novns> *at
[14:41:19] <omegatron> well, without seeing the code in question, I can throw only wild guesses at you  =D
[14:41:45] <novns> yes
[14:41:52] <omegatron> but, did you try gdb to check in which function it's failing?
[14:42:39] <novns> yes, it's strcmp that receives a NULL pointer, and my checks for NULL pointers do not work
[14:43:35] <novns> and another weird thing
[14:43:48] <novns> if I add some printf for debugging just to check values
[14:44:01] <novns> it works suddenly
[14:44:33] <omegatron> any 'volatile' variables involved!?
[14:44:40] <novns> no
[14:44:45] <NRK[m]> have you tracked down where strcmp is being called with NULL ?
[14:45:03] <NRK[m]> no to who's question?
[14:45:09] <novns> NRK[m], yes, right where it should not because I test fir NULL values before
[14:45:19] <novns> *for
[14:49:18] <NRK[m]> can u show the surrounding code, i feel like there's more going on.
[14:50:28] <novns> I will
[14:50:42] <novns> just found out that it happens with -O2
[14:50:54] <novns> -O0 and -O1 are ok
[14:51:47] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[14:51:58] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[14:52:09] <NRK[m]> try `-fno-delete-null-pointer-checks`
[14:52:32] <NRK[m]> i don't think it's enabled at -O2 , atleast on gcc v11 manpage. but could be that.
[14:52:57] <NRK[m]> if your version of gcc enables that on O2, that is.
[14:53:16] <novns> NRK[m], -O2 -fno-delete-null-pointer-checks  works
[14:53:37] <novns> gcc 11.1.0
[14:54:05] <fizzie> Also worth throwing in always: -fsanitize=address,undefined.
[14:54:09] <NRK[m]> `This option is enabled by default on most targets.`
[14:54:23] <NRK[m]> ok, i was wrong. it's enabled by default on "most targets"
[14:55:40] <NRK[m]> novns: how exactly are you checking for NULL btw?
[14:56:39] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Ping timeout: 268 seconds)
[14:56:49] <novns>     if (test_assert_exit && !result)   exit(EXIT_FAILURE);
[14:57:10] <novns> it's the custom assertion function
[14:57:58] <novns> the problem is it receives wrong result  bool result  argument
[14:58:16] <NRK[m]> are you sure it's supposed to be `&&` in there?
[14:59:04] <novns> yes, it's for temporarily disabling exit() for self tests,  test_assert_exit stays true
[14:59:20] <novns> removing it doesn't change anything
[15:00:13] *** Joins: vysn (~vysn@user/vysn)
[15:01:28] <NRK[m]> try what fizzie suggested to see if there's something else in play
[15:01:56] <novns>     printf("%s\n", value_2 != NULL ? "YES" : "NO");
[15:01:56] <novns>     test_assert(expression_2, value_2 != NULL);
[15:02:09] <novns> remove this printf and it segfaults
[15:02:16] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[15:02:16] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[15:02:30] *** Joins: de-facto (~de-facto@user/de-facto)
[15:02:54] <novns> because test_assert receives true incorrectly, passes and never exits
[15:03:27] <novns> add printf back, and it receives false, as it should
[15:04:12] <clarity> Can you show the code already
[15:04:26] <novns> clarity, I'm trying to create a working example
[15:04:34] <clarity> Ok
[15:05:28] <NRK[m]> what's in `expression_2` ?
[15:05:45] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[15:06:24] <novns> NRK[m], it's (#value_2) from a macro, it doesn't matter
[15:06:32] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[15:06:55] <novns> a string representation of what is being checked
[15:07:50] <NRK[m]> remove that and see how it goes.
[15:07:57] <clarity> Ugh.
[15:08:04] *** Joins: NEYi (~NEYi@109.251.216.38)
[15:08:24] <NRK[m]> if `expression_2` is dereferencing the pointer then gcc will assume it's not NULL and delete your check.
[15:08:47] <NRK[m]> https://godbolt.org/z/Gnevxnj71
[15:10:28] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[15:11:57] <novns> a minute
[15:12:05] <novns> example is almost ready
[15:12:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:13:55] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 268 seconds)
[15:14:28] <clarity> meow
[15:15:13] *** Joins: strajder (~strajder@user/strajder)
[15:16:34] *** Joins: constxd_ (~brad@142.167.170.88)
[15:17:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:18:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[15:21:06] <novns> https://gist.github.com/novns/c84d6e1efd6304b3076811fef34096fd
[15:21:07] <candide> Title of novns's link: test-segfault.c · GitHub
[15:21:08] <novns> there
[15:21:17] <novns> it segfaults with -O2
[15:22:21] <novns> with -O1:  Assert `dict_get(NULL, "key 1")`: FAIL
[15:25:17] <novns> and with   -O2 -fno-delete-null-pointer-checks
[15:27:42] *** Joins: kit_ten (~u0_a391@2600:380:a423:cdf9:589f:965d:28e0:cc4c)
[15:28:02] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[15:29:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:31:29] <novns> and much shorter example
[15:31:30] <novns> https://gist.github.com/novns/c84d6e1efd6304b3076811fef34096fd
[15:31:32] *** Quits: kit-ten (~u0_a391@2603-6010-a141-6fa3-f44f-d859-cfd9-2a3c.res6.spectrum.com) (Ping timeout: 240 seconds)
[15:31:51] <novns> no macros or side effects variables
[15:33:00] <trenka> novns: you are calling strcmp with NULL
[15:33:10] <novns> trenka, that's the problem
[15:33:35] <novns> trenka, it should exit with EXIT_FAILURE before
[15:33:52] <novns> and it does exit when -O1
[15:33:54] <clarity> Yeah this smells like a compiler bug
[15:34:41] <clarity> (Works fine if compiled with clang)
[15:34:52] <novns> clarity, does it segfaults for you too with -O2?
[15:35:04] <novns> I'll check some other versions of gcc
[15:35:21] <clarity> Yep
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:09] *** kit_ten is now known as kit-ten
[15:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:05] <NRK[m]> im inclined to think this is a compiler bug as well
[15:38:39] <NRK[m]> it deletes your `test_assert` call at O2
[15:38:52] <clarity> It doesn't delete the call
[15:39:00] <clarity> But it does change the value passed to it
[15:39:21] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[15:39:38] <trenka> NRK[m]: it inlines, it's ok
[15:39:49] *** Joins: loganlee (~Thunderbi@user/loganlee)
[15:40:55] <clarity> Same if you directly pass the value to printf before calling test_assert
[15:40:59] <clarity> It changes the value :)
[15:41:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[15:41:06] <clarity> printf("value_1: %p, value_1 == NULL: %d\n", value_1, value_1 == NULL);
[15:41:08] <clarity> value_1: (nil), value_1 == NULL: 0
[15:41:08] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[15:41:30] <clarity> So that right there is a null pointer that is not equal to NULL :P  Thanks gcc
[15:42:46] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:43:06] <novns> I'm happy this error is not mine
[15:43:39] <novns> I've spent about two hours digging
[15:43:45] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:44:33] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[15:47:03] <novns> I will test all gcc versions I can find, but should I report it?
[15:47:10] *** Quits: bravespear|2 (~Ranhir@157.97.53.139) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[15:47:43] <clarity> Give it a go
[15:47:50] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[15:47:52] <clarity> Don't bother with all versions, just try the latest
[15:48:07] <ChoHag> 11.2/openbsd requires that the -fdelete-null-pointer-checks option be enabled explicitly (and then asserts 2 passes and segfaults).
[15:48:21] *** Joins: pulse (~pulse@user/pulse)
[15:48:22] <ChoHag> If you use assert from the standard library it asserts correctly.
[15:48:45] <novns> no, it's my own asserts of my own test suite
[15:48:46] <ChoHag> Still aborts and dumps core, but at the right place.
[15:48:54] *** Quits: xavi92_ (~quassel@207.188.171.228) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:51:33] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[15:52:22] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:52:38] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[15:52:43] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Client Quit)
[15:53:35] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:53:40] <clarity> shorter still: http://paste.dy.fi/2mS/plain
[15:54:28] <clarity> (I was curious if somehow bool tricked the compiler into thinking you had dereferenced value, and deleted it, but nope..)
[15:54:29] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[15:56:40] <ChoHag> There's no condition on the NULLness of the pointers in the function that calls strcmp with them.
[15:56:52] <clarity> Doesn't matter
[15:56:54] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[15:57:05] <clarity> There is a sequence point after the function call to test_assert
[15:57:13] <ChoHag> It matters to gcc 11.
[15:57:14] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:57:15] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[15:57:23] <clarity> Well, it shouldn't
[15:57:45] <clarity> if test_assert() calls exit, gcc has no business deciding it didn't
[15:58:10] <ChoHag> Well, it does.
[15:58:27] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[15:58:37] <ChoHag> Report it. I'd like to see what they say to defend it.
[15:58:45] <clarity> Yeah, I'm curious too
[15:59:07] <clarity> Wouldn't be the first time I see some bs argument why it's all fine :D
[15:59:18] <novns> I'm waiting for comments from #gcc
[15:59:30] <novns> it's silent there
[16:01:07] <ChoHag> Well in the meantime you can #define test_assert(T) ((T) ? test_assert_imp(T) : test_assert_imp(T))
[16:01:24] *** Joins: loganlee (~Thunderbi@user/loganlee)
[16:01:25] <NRK[m]> temped to add `-fno-delete-null-pointer-checks` to my template Makefile :D
[16:01:28] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[16:01:51] <NRK[m]> s/temped/tempted/
[16:02:23] <NRK[m]> it's funny, because i've read this before.
[16:03:20] <clarity> post the bug on hipster news, I wanna chew imaginary popcorn while they tell you to rewrite it in rust
[16:03:32] <NRK[m]> https://postimg.cc/f31bHCY0
[16:04:29] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 268 seconds)
[16:05:51] <novns> https://godbolt.org/z/5z35GYYYP
[16:05:54] <clarity> Yea I wouldn't be surprised if there are people defending this braindead behaviore
[16:09:24] <NRK[m]> what i understand from the manpage is that it deletes null checks AFTER it's been dereferenced. `so if a pointer is checked after it has already been dereferenced, it cannot be null`
[16:09:35] *** Joins: stonkey (~stonkey@user/stonkey)
[16:12:41] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[16:13:02] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[16:13:03] *** Joins: shalok_ (~shalok@user/shalok)
[16:13:03] *** Joins: moberg1 (~moberg@luke.millenniumfalcon.org)
[16:13:11] *** Joins: kristjansson_ (sid126207@id-126207.tinside.irccloud.com)
[16:13:28] *** Joins: rubin55_ (sid175221@id-175221.hampstead.irccloud.com)
[16:13:31] *** Joins: phryk_ (~totallyno@user/phryk)
[16:13:33] *** Joins: TallonRain_ (sid214799@user/tallonrain)
[16:13:34] <fizzie> And passing in a _pointer_ works just fine: https://godbolt.org/z/z4GzcvG4q
[16:13:44] *** Joins: Fleck (~fleck@user/fleck)
[16:14:10] *** Joins: Kakurady_ (~nekoyasha@2607:f2c0:eac8:3297:4498:af79:9c16:5928)
[16:14:17] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 256 seconds)
[16:14:20] *** Server sets mode: +Ccntz 
[16:14:21] *** Joins: [Pokey] (~pokey@spikeyCactus/hoosky)
[16:14:22] *** Joins: vt (~vt@osa.vbc.su)
[16:14:23] *** Joins: mattgirv (quassel@apps.fossgalaxy.com)
[16:14:27] *** Joins: oj_ (oj@user/oj)
[16:14:28] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[16:14:32] *** Joins: nich04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca)
[16:14:35] *** Joins: szkl_ (uid110435@uxbridge.irccloud.com)
[16:14:56] *** Joins: ai (nukedclx@shell.k4be.pl)
[16:15:01] *** Joins: dstein64- (~dstein64@dannyadam.com)
[16:15:01] *** Joins: Karyon_ (~Karyon@user/karyon)
[16:15:02] *** Joins: dostoyev1ky2 (~sck@user/dostoyevsky2)
[16:15:04] *** Joins: ndorf_ (~nd@ob.noxio.us)
[16:15:13] *** Joins: segnior_ (segnior@user/segnior)
[16:15:16] *** Joins: oalvarez (quassel@2600:3c01::f03c:91ff:fee5:6d8d)
[16:15:17] *** Joins: andjjj23_ (~irc@107.170.228.47)
[16:15:17] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Killed (NickServ (GHOST command used by DLange_)))
[16:15:20] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[16:15:21] *** Joins: kzootick (~contact@kzoo.tech)
[16:15:23] *** Joins: rick123_ (~rick123@157.245.192.96)
[16:15:24] *** Joins: eqw_ (~eqw@31.134.178.99)
[16:15:24] *** Joins: w41_ (~w41@45.76.32.7)
[16:15:26] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[16:15:26] *** Joins: nmi (~deflected@user/deflected)
[16:15:27] *** Joins: cp--- (~cp-@b157153.ppp.asahi-net.or.jp)
[16:15:27] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[16:15:29] *** Joins: HelloShi1ty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[16:15:36] *** Joins: bravespear|2 (~Ranhir@157.97.53.139)
[16:15:40] *** Joins: ravndal (~weechat@user/ravndal)
[16:15:45] *** Joins: th1_ (~th@test.secomondo.dk)
[16:15:46] *** Joins: thesemic1lons (~thesemico@user/thesemicolons)
[16:15:50] *** robyndrake is now known as Guest1252
[16:15:58] *** Joins: nathanael_ (~nathanael@user/nathanael)
[16:15:58] *** Joins: sdfgsdfgsdfgsfsd (~sdfgsdfg@user/sdfgsdfg)
[16:16:03] *** Joins: kit_ten (~u0_a391@2600:380:a423:cdf9:589f:965d:28e0:cc4c)
[16:16:05] *** Quits: cust (amaama@blackbox.amaama.org) (Ping timeout: 240 seconds)
[16:16:05] *** Quits: shalok (~shalok@user/shalok) (Ping timeout: 240 seconds)
[16:16:05] *** Quits: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se) (Ping timeout: 240 seconds)
[16:16:05] *** Quits: csrf (~csrf@user/csrf) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: trvv (555a816688@user/trvv) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: TallonRain (sid214799@user/tallonrain) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Karyon (~Karyon@user/karyon) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: mcf (~mforney@netbsd/developer/mcf) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: th1 (~th@test.secomondo.dk) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: beneth (~beneth@2001:41d0:c:a71:1000:25::) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: moberg (~moberg@luke.millenniumfalcon.org) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: towel (~towel@user/towel) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:b838:af46:b551:85b) (Ping timeout: 240 seconds)
[16:16:06] *** trvv_ is now known as trvv
[16:16:06] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: ChoHag (~mking@81.187.183.71) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: geeknix (~pi@2001:e68:5432:a8c4:1393:329d:a357:f118) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: megeve (sid523379@id-523379.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: sebito91 (~sborza@45.55.74.66) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: ndorf (~nd@ob.noxio.us) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: jaeckel_ (~jaeckel@sleipnir.jaeckel.eu) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: xSavitar (~xSavitar@user/xsavitar) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: saribro (~swinnenb@user/swinnenb) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: jayaura (e2d69d141a@2604:bf00:561:2000::2b0) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: tafa (~tafa@user/tafa) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: nathanael (~nathanael@user/nathanael) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: gnoo (gnoo@user/gnoo) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: robyn (~robyndrak@user/robyndrake) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Olfodr (sid535265@user/Olfodr) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: rick123 (~rick123@157.245.192.96) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: crudo (~crudo@livredigital.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: cp-- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: DrNick42_ (~DrNick42@bastion.spikeyfishtech.uk) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: gravndal (~weechat@user/ravndal) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: fe23 (~fe23@2409:8a34:461:9470:f1b4:f604:fefb:515a) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Jong (~Jong@2620:10d:c090:400::5:263a) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: alvarezp (quassel@2600:3c01::f03c:91ff:fee5:6d8d) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: armin (~armin@unix.porn) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: phryk (~totallyno@user/phryk) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: tyzoid (~tyzoid@srv1.tyzoid.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: mcinglis_ (~mcinglis@user/mcinglis) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: deflected_ (~deflected@user/deflected) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: routeveg_ (~lee@197.ip-51-195-136.eu) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: mattgirv_ (quassel@apps.fossgalaxy.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: nukedclx (nukedclx@shell.k4be.pl) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: sdk_ (~x@shell.codevoid.de) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: aighearach (~paris@user/aighearach) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: travankor (travankor@user/travankor) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: nisstyre (~wes@user/nisstyre) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: hexology (~hexology@user/hexology) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: oj (oj@user/oj) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: andjjj23 (~irc@107.170.228.47) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: kit-ten (~u0_a391@2600:380:a423:cdf9:589f:965d:28e0:cc4c) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: vassili (~vt@osa.vbc.su) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: Flecks (~fleck@user/fleck) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: w41 (~w41@45.76.32.7) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: kzootech (~contact@kzoo.tech) (Ping timeout: 240 seconds)
[16:16:08] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[16:16:08] *** Joins: fe23 (~fe23@2409:8a34:461:9470:f1b4:f604:fefb:515a)
[16:16:08] *** TallonRain_ is now known as TallonRain
[16:16:08] *** mven1 is now known as mven
[16:16:08] *** Joins: koffeinfriedhof (~koffeinfr@p200300e2b724f05a14b908fffe5f9403.dip0.t-ipconnect.de)
[16:16:08] <novns> I've tested all versions on godbolt, it's a bug in GCC 11.1 and newer versions
[16:16:08] *** jayaura_ is now known as jayaura
[16:16:10] <novns> and in trunk too
[16:16:10] *** Quits: koffeinfriedhof (~koffeinfr@p200300e2b724f05a14b908fffe5f9403.dip0.t-ipconnect.de) (Changing host)
[16:16:10] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[16:16:10] *** Olfodr_ is now known as Olfodr
[16:16:11] *** KnownSyntax_ is now known as KnownSyntax
[16:16:12] *** Joins: ChoHag_ (~mking@81.187.183.71)
[16:16:13] *** dstein64- is now known as dstein64
[16:16:13] *** sebito91_ is now known as sebito91
[16:16:13] *** shalok_ is now known as shalok
[16:16:13] *** greyblue9_ is now known as greyblue9
[16:16:13] *** kristjansson_ is now known as kristjansson
[16:16:15] *** rubin55_ is now known as rubin55
[16:16:19] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[16:16:19] *** Joins: tyzoid (~tyzoid@srv1.tyzoid.com)
[16:16:21] *** Joins: Triskelios (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[16:16:23] *** Joins: remexre (~remexre@user/remexre)
[16:16:25] *** kit_ten is now known as kit-ten
[16:16:30] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:26a9:5d61:afe9:66b1)
[16:16:32] *** Joins: crudo (~crudo@livredigital.com)
[16:16:38] *** Joins: koolazer (~koo@user/koolazer)
[16:16:44] *** Joins: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net)
[16:16:48] *** Joins: geeknix (~pi@2001:e68:5432:a8c4:1393:329d:a357:f118)
[16:16:56] *** Joins: digilink (~digilink@user/digilink)
[16:16:59] *** Joins: jaeckel (~jaeckel@sleipnir.jaeckel.eu)
[16:17:04] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[16:17:05] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[16:17:07] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[16:17:10] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[16:17:10] <trenka> novns: cool
[16:17:14] *** Joins: beencubed (~beencubed@209.131.238.248)
[16:17:16] *** Joins: nisstyre (~wes@user/nisstyre)
[16:17:17] *** Triskelios is now known as trisk
[16:17:24] *** Joins: sdk_- (~x@shell.codevoid.de)
[16:17:24] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:17:25] *** Joins: nicode (~nic@2607:f2c0:946d:3800:fb2a:4f7:5569:32eb)
[16:17:29] *** Joins: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se)
[16:17:42] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[16:17:56] *** Joins: austin__ (~austin@pool-74-96-213-156.washdc.fios.verizon.net)
[16:18:03] *** Joins: badsektor (~badsektor@user/badsektor)
[16:18:15] *** Quits: austin (~austin@pool-74-96-213-156.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[16:18:23] *** Joins: ntwk (~ntwk@user/ntwk)
[16:18:31] *** Joins: Viewday11 (~Viewday@user/viewday)
[16:18:55] *** Joins: nyah (~nyah@94.6.71.219)
[16:18:56] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:19:55] *** Joins: gnoo (gnoo@user/gnoo)
[16:19:55] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[16:19:57] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (Ping timeout: 256 seconds)
[16:19:57] *** Quits: segnior_ (segnior@user/segnior) (Ping timeout: 256 seconds)
[16:19:57] *** Quits: szkl_ (uid110435@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[16:19:57] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[16:20:02] *** Joins: deflected_ (~deflected@user/deflected)
[16:20:10] *** Joins: armin (~armin@unix.porn)
[16:20:31] *** Quits: nathanael_ (~nathanael@user/nathanael) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: thesemic1lons (~thesemico@user/thesemicolons) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: HelloShi1ty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: nmi (~deflected@user/deflected) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: eqw_ (~eqw@31.134.178.99) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: rick123_ (~rick123@157.245.192.96) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: ndorf_ (~nd@ob.noxio.us) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: [Pokey] (~pokey@spikeyCactus/hoosky) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Ping timeout: 256 seconds)
[16:20:57] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[16:21:20] *** Joins: ndorf (~nd@ob.noxio.us)
[16:21:26] *** Joins: rick123 (~rick123@157.245.192.96)
[16:21:26] *** Joins: eqw (~eqw@31.134.178.99)
[16:21:28] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[16:21:29] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[16:21:33] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[16:21:37] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[16:21:37] *** Quits: nicode (~nic@2607:f2c0:946d:3800:fb2a:4f7:5569:32eb) (Ping timeout: 240 seconds)
[16:21:52] *** Joins: szkl_ (uid110435@id-110435.uxbridge.irccloud.com)
[16:22:02] *** Joins: System_Error (~SystemErr@user/systemerror)
[16:22:03] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[16:22:39] *** Joins: pjucc (~puke@user/puke)
[16:22:39] *** Quits: puke (~puke@user/puke) (Killed (erbium.libera.chat (Nickname regained by services)))
[16:22:39] *** pjucc is now known as puke
[16:23:51] *** Pokey is now known as [Pokey]
[16:23:53] *** [Pokey] is now known as Pokey
[16:23:55] *** Pokey is now known as _Pokey_
[16:23:57] *** _Pokey_ is now known as __Pokey__
[16:24:04] *** __Pokey__ is now known as [Pokey]
[16:24:08] *** Joins: nathanael (~nathanael@user/nathanael)
[16:24:17] <novns> I've requested a gcc bugzilla account, waiting for it
[16:24:28] *** Joins: xSavitar (~xSavitar@kinserve.com)
[16:24:51] *** xSavitar is now known as Guest4384
[16:25:16] *** Joins: segnior (segnior@user/segnior)
[16:27:14] *** Joins: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[16:27:15] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[16:27:56] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[16:28:14] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[16:28:29] *** Quits: [Pokey] (~pokey@spikeyCactus/hoosky) (Quit: Hecc! My server must have died!)
[16:28:38] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:29:48] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[16:31:23] *** Joins: seninha (~seninha@user/seninha)
[16:31:37] *** Quits: kit-ten (~u0_a391@2600:380:a423:cdf9:589f:965d:28e0:cc4c) (Ping timeout: 268 seconds)
[16:31:44] *** kit_ten is now known as kit-ten
[16:33:41] *** Quits: sdfgsdfgsdfgsfsd (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:35:36] *** Joins: Viewday114 (~Viewday@user/viewday)
[16:35:39] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving...)
[16:36:54] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[16:37:21] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[16:37:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 268 seconds)
[16:37:47] *** Viewday114 is now known as Viewday11
[16:41:02] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:41:06] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[16:42:02] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[16:42:15] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Remote host closed the connection)
[16:42:33] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[16:44:21] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[16:47:31] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[16:50:28] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:51:09] *** Joins: karakedi (~eAC53C340@user/karakedi)
[16:55:45] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[16:55:57] *** Joins: beneth (~beneth@2001:41d0:c:a71:1000:25::)
[16:56:31] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[16:59:01] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[16:59:46] *** Joins: Viewday111 (~Viewday@user/viewday)
[16:59:51] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[17:00:11] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[17:00:21] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:01:10] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[17:01:11] *** Viewday111 is now known as Viewday11
[17:02:10] *** Quits: ixokani (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[17:02:29] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[17:03:03] *** Joins: krychu (~krychu@2a02:1205:5055:c640:e5f4:b6cb:364f:47b8)
[17:05:09] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a176:9308:1a64:1dba) (Quit: Quit)
[17:05:37] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 240 seconds)
[17:07:10] *** Quits: alch (~alch@151.36.42.174) (Read error: Connection reset by peer)
[17:07:31] <sham1> An actual compiler bug. Exciting stuff
[17:08:32] *** Quits: krychu (~krychu@2a02:1205:5055:c640:e5f4:b6cb:364f:47b8) (Quit: krychu)
[17:09:30] *** Quits: AmR (~AmREiSa@41.36.185.103) (Read error: Connection reset by peer)
[17:09:58] *** Joins: krychu (~krychu@2a02:1205:5055:c640:e5f4:b6cb:364f:47b8)
[17:10:42] *** Joins: otty (~u0_a161@2402:8100:3902:86fa:ed76:b05b:69f9:84d5)
[17:11:21] *** Joins: alch (~alch@151.38.41.192)
[17:11:55] <zwr> a while ago in this channel someone mentioned GCC gained a static analyzer, so I tried it, and I found a bug in it the first time I used it. I reported it and it has been fixed since
[17:14:36] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:18:28] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:20:26] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[17:23:01] *** Quits: constxd (~brad@142.167.170.88) (Quit: WeeChat 2.8)
[17:24:50] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[17:25:07] *** Quits: gaude (~gaude@114-39-142-46.pool.kielnet.net) (Ping timeout: 256 seconds)
[17:25:29] <krychu> hello everyone, I have a function with the following signature: struct wfc *wfc_overlapping(int output_width, int output_height, struct wfc_image *image, int tile_width, int tile_height, int expand_input, int xflip_tiles, int yflip_tiles, int rotate_tiles).    I'm considering adding more parameters and am thinking whether I should redesign how to pass arguments here, not to make it so overwhelming. I like the simplicity of just having
[17:25:29] <krychu>  a single call. Is there some recommended way to handle this?
[17:25:36] <krychu> I was thinking about folding some of the parameters into a bit mask (XFLIP & XFLIP & ROTATE for example), as well as folding all parameters into a struct and using designated initializer -> but problem being that unspecified members become 0 which is not always desired
[17:26:10] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[17:26:19] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[17:27:15] <sham1> Document the fact that having zero in unspecified fields is not good, and then it's their fault
[17:27:27] *** yano1 is now known as yano
[17:28:06] <clarity> You could fold all the booleans into a struct
[17:28:25] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:d8ed:7339:5274:77f1)
[17:28:50] <clarity> Presumably the caller has to decide whether to flip a bit on or not, having zero by default doesn't sound bad
[17:30:37] *** trav41228 is now known as travankor
[17:30:55] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[17:30:59] *** Joins: acerbic (~acerbic@cs-xdata-50-86-49-215.cspire.com)
[17:31:08] <NRK[m]> i don't see how folding the parameters into a struct helps.
[17:31:32] <sham1> A struct could be constructed separately
[17:32:02] <sham1> And that is useful for APIs with a lot of parameters, like Vulkan or WinAPI which both use this design mentality
[17:32:08] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[17:32:20] <clarity> NRK[m]: It can be irritating to explicitly specify the value of 20 different flags if the usual case is that you enable two or three
[17:32:30] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[17:32:54] <NRK[m]> you can just use a bitmask for it instead
[17:32:59] <clarity> Yes, you can
[17:33:03] <sham1> Besides, for this kind of a struct, one can even have a macro for initializing values where you usually want the defaults
[17:33:04] <NRK[m]> for bools
[17:33:39] <clarity> It's not inherently better though, just different
[17:34:06] <clarity> I'd argue that bitmasks require you to pollute the namespace more than structs
[17:35:01] <katsuragi> https://termbin.com/pifj      this writes the contents of the socket to a file. although the file is written with what I expect, it also contains several binary characters that raise the file size to 128K. I think the error lies in BUF_MAX and how many chunks read is considering. Help?
[17:35:20] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:35:22] <sham1> #define DEFAULT_TYPE_INIT { .opt_field_a = default_value_a, ..., .opt_field_n = default_value_n, } \n struct type foo = DEFAULT_TYPE_INIT; foo.mandatory_field_a = value;
[17:35:32] <katsuragi> BUF_MAX is 4096
[17:35:38] <clarity> katsuragi: You should check the number of bytes read returns
[17:35:48] <clarity> Instead of assuming a full buffer
[17:35:55] *** Quits: otty (~u0_a161@2402:8100:3902:86fa:ed76:b05b:69f9:84d5) (Read error: No route to host)
[17:36:00] <katsuragi> oh okay
[17:36:00] *** Joins: killadi (~u0_a161@2402:8100:3902:86fa:ed76:b05b:69f9:84d5)
[17:36:08] <clarity> Ehh you're using fwrite wrong too
[17:36:18] <clarity> You're writing strlen(..) times BUF_MAX-1 bytes
[17:36:35] <sham1> Yeah, that sounds incorrect
[17:37:25] <clarity> Assunming buf is initialized to 0, I suppose you don't need to check the return value
[17:37:38] <clarity> So that's fine after all
[17:37:46] <clarity> But don't write so many bytes
[17:38:02] *** Quits: liba (~liba@user/liba) (Ping timeout: 240 seconds)
[17:38:53] <katsuragi> ah I see now..i'll fix my code
[17:38:56] *** Joins: Goreng (~Goreng@202.138.250.57)
[17:39:03] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[17:39:21] <sham1> It'd be weird if you didn't
[17:42:08] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a176:9308:1a64:1dba)
[17:44:01] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:44:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:45:42] *** Quits: Goreng (~Goreng@202.138.250.57) (Quit: Leaving)
[17:45:57] *** Joins: Goreng (~Goreng@202.138.250.57)
[17:47:19] <ghenry> Hi all,
[17:47:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Client Quit)
[17:47:32] <ghenry> Any ideas which gcc options in this are breaking libcurl?
[17:47:33] <ghenry> https://curl.se/mail/lib-2022-01/0050.html
[17:47:34] <candide> Title of ghenry's link: Curl: Re: CURLOPT_WRITEFUNCTION issues - warning: curl_easy_setopt expects a curl_write_callback argument
[17:47:40] <ghenry> https://curl.se/mail/lib-2022-01/0049.html
[17:47:41] <candide> Title of ghenry's link: Curl: CURLOPT_WRITEFUNCTION issues - warning: curl_easy_setopt expects a curl_write_callback argument
[17:48:03] <ghenry> this option [-Werror=attribute-warning]
[17:48:03] <ghenry>    60 | curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION,
[17:48:03] <ghenry>       | ^
[17:48:03] <ghenry> lto1: all warnings being treated as errors
[17:48:11] <ghenry> https://curl.se/libcurl/c/getinmemory.html
[17:48:16] <ghenry> is the example
[17:48:22] <ghenry> my code is https://github.com/SentryPeer/SentryPeer/blob/main/tests/unit_tests/test_http_api.c#L60
[17:49:06] *** Quits: iomari891 (~iomari891@197.210.70.166) (Ping timeout: 256 seconds)
[17:52:09] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[17:52:30] *** Joins: gdd (~gdd@129.199.146.230)
[17:54:32] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 240 seconds)
[17:54:36] *** Joins: kts (~kts@103.73.237.13)
[17:56:50] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: Leaving)
[17:56:51] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[17:56:52] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[17:57:01] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[17:57:22] *** Joins: random-nick (~random-ni@87.116.167.125)
[17:57:45] *** Joins: bebyx (~Thunderbi@user/bebyx)
[17:58:50] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:01:34] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[18:02:13] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[18:04:57] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:09:00] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:09:00] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:09:00] *** Joins: wroathe (~wroathe@user/wroathe)
[18:12:32] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[18:19:57] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:20:43] *** phryk_ is now known as phryk
[18:22:06] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:23:53] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.4)
[18:31:52] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[18:32:49] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:33:15] *** Quits: kts (~kts@103.73.237.13) (Quit: Konversation terminated!)
[18:33:17] *** Quits: krychu (~krychu@2a02:1205:5055:c640:e5f4:b6cb:364f:47b8) (Quit: krychu)
[18:33:56] *** Quits: Goreng (~Goreng@202.138.250.57) (Quit: Leaving)
[18:34:44] *** Joins: Goreng (~Goreng@202.138.250.1)
[18:35:39] *** Joins: Viewday117 (~Viewday@user/viewday)
[18:37:09] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:37:50] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:37:50] *** Viewday117 is now known as Viewday11
[18:38:16] *** Joins: krychu (~krychu@2a02:1205:5055:c640:9847:e81:87bb:195)
[18:40:04] *** Joins: Jong (~Jong@2620:10d:c090:400::5:263a)
[18:40:17] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:42:00] *** Quits: Satin (uid193953@user/Seten) (Quit: incest bad)
[18:44:13] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[18:44:55] *** killadi is now known as otty
[18:45:08] *** Joins: icedtea (~paul@141.217.247.7)
[18:46:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:47:11] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[18:47:51] *** Quits: peacefulman (~paul@107-190-110-80.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[18:54:38] *** Joins: Guest70 (~Guest70@2a00:1fa1:8247:926e:abaa:e5d4:d634:d5d9)
[18:54:43] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[18:54:47] *** Parts: Guest70 (~Guest70@2a00:1fa1:8247:926e:abaa:e5d4:d634:d5d9) ()
[18:55:01] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a176:9308:1a64:1dba) (Ping timeout: 240 seconds)
[18:55:10] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:55:10] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:55:10] *** Joins: wroathe (~wroathe@user/wroathe)
[18:57:30] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:57:56] *** Joins: warremkaw (~warremkaw@user/warremkaw)
[18:58:44] *** Joins: pulse (~pulse@user/pulse)
[18:59:08] *** Joins: iomari891 (~iomari891@197.210.70.132)
[18:59:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:59:46] *** Joins: Viewday111 (~Viewday@user/viewday)
[19:00:37] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[19:00:45] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com)
[19:01:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:01:38] *** Viewday111 is now known as Viewday11
[19:03:56] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 268 seconds)
[19:03:58] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[19:04:42] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:05:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:07:37] *** Joins: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[19:07:40] <retro> i got a questio
[19:07:41] <retro> n
[19:08:09] <retro> fuck this fucking bitch ass 2 dimentonal no travel keyboard
[19:08:33] <omegatron> =D
[19:09:17] <retro> without corrupting the stack and telling me to use malloc/realloc is it possible to make a resizable array using GOTO and labels
[19:09:29] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[19:10:07] <ChoHag_> Where would you put it?
[19:10:12] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Remote host closed the connection)
[19:12:34] <Learath2> How are goto and labels supposed to help?
[19:13:17] <omegatron> arbitrary memory read/write access .. what else in this case?
[19:13:29] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[19:13:51] <Learath2> I guess if your code is loaded into RWX memory you could maybe hack together some space and use that, but you'll have a cap on how large your array can be and it'll most definitely be very unstandard
[19:13:52] <retro> maybe I need alloca()
[19:15:35] <retro> Learath2 because they are kinda  specical
[19:15:49] <retro> goto keyboard and labels
[19:16:25] <ChoHag_> They're special to control flow not memory.
[19:16:25] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[19:16:48] <Learath2> alloca wouldn't really give you a "resizable array", you can't free memory allocated by alloca nor can you resize it
[19:16:59] <retro> but alloca() is linux not windows
[19:18:05] <retro> it gets free'd automatically yes
[19:18:06] <Learath2> MSVC also has _alloca, but their implementation may go to the heap for the memory if your allocation is too large
[19:18:22] *** Joins: AmR (~AmREiSa@156.199.9.4)
[19:19:06] *** Quits: dld (~davidlowr@2601:197:600:1210:aca6:8c80:35d5:4f3c) (Ping timeout: 245 seconds)
[19:20:24] *** Joins: dld (~davidlowr@2601:197:600:1210:88d:2354:617:54b5)
[19:20:47] <Learath2> Anyway, there is no standard way to do it is my final answer. You can have varying levels of weird hacks to implement something like that
[19:21:12] *** Joins: kit_ten (~u0_a391@2600:380:a423:cdf9:ef64:8e84:c22b:29b8)
[19:23:47] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[19:24:01] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[19:24:18] *** Quits: kit-ten (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[19:24:26] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Remote host closed the connection)
[19:24:26] *** kit_ten is now known as kit-ten
[19:24:55] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[19:25:32] <markand> alloca is worse than VLAs
[19:28:37] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (Read error: Connection reset by peer)
[19:29:16] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[19:29:37] <retro> ok can u make it
[19:31:06] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[19:31:23] <fizzie> It's not entirely _impossible_ that repeatedly passing the control over a VLA declaration could give you the effect of `alloca`, but it's not guaranteed to work; strictly the lifetime of a VLA ends if you leave its scope, which includes jumping to a point before the declaration, even if you stay in the same block.
[19:34:30] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[19:34:54] <retro> sort of like this, using goto as a break https://onlinegdb.com/Uei6FxwPq
[19:35:37] <retro> but copying chr to an array when  moving the array index
[19:36:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[19:37:47] <pragma-> indent your code, damn.
[19:37:51] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 268 seconds)
[19:38:44] <kit-ten> have you seen libqb? the indentation is all over the place
[19:38:47] <retro> https://onlinegdb.com/kHheMG0yQ2
[19:38:59] <kit-ten> some places theres tabs, others theres spaces
[19:39:11] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:39:14] <kit-ten> the space indentation is all mixed up
[19:39:36] <Matt|home> my boss once gave me shit for "not indenting" when i was using a regular ass IDE with standard indentation.
[19:39:44] <Matt|home> i made everything left aligned just to piss him off.
[19:39:58] <kit-ten> at random times somehow the indentation gets messed up so that the end of a function is indented like 5 levels in
[19:40:04] <retro> indenting in a pain in the ass
[19:40:35] <Matt|home> kit-ten : if you're having trouble, for C i just use visual studio code.
[19:40:39] <Matt|home> never had a problem with it.
[19:40:52] <kit-ten> and it doesnt help that the whole thing is in one giant 10mb file thats too big to open in an ide
[19:41:16] <kit-ten> hell even gedit struggles with it
[19:41:26] <kit-ten> usually i have to use nano
[19:41:38] <kit-ten> (no, i wont use vim)
[19:41:56] <Matt|home> ... im like, 80% sure VS code can open a 10 MB file
[19:42:20] <kit-ten> my laptop can barely handle vs code period so /shrug
[19:42:27] <retro> oh yeah also I used to use codeblocks
[19:42:30] <retro> until it fucked me
[19:42:43] <retro> now I use shit shitty onlinegdb.com
[19:42:57] <kit-ten> i personally dont use an ide unless i have to
[19:43:12] <kit-ten> mainly because my laptop is a pain in the ass to do anything on
[19:43:17] <Learath2> vscode does have large file optimizations, so it does indeed open larger files just fine
[19:43:19] <retro> so , any comments on my code other than the indentation
[19:43:25] <kit-ten> and also i like the cli
[19:43:34] <Learath2> Not as good as vim though, I can open like massive logs in vim no problem
[19:43:43] <retro> I aint coded in C for months now
[19:43:50] <retro> so expect my code to suck
[19:44:03] <retro> infact I aint coded at all
[19:45:13] *** Quits: orthoplex64 (~crm@70.120.0.94) (Remote host closed the connection)
[19:45:38] *** Joins: orthoplex64 (~crm@70.120.0.94)
[19:46:27] *** Quits: acerbic (~acerbic@cs-xdata-50-86-49-215.cspire.com) (Read error: Connection reset by peer)
[19:47:54] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[19:48:16] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[19:51:17] *** Quits: kit-ten (~u0_a391@2600:380:a423:cdf9:ef64:8e84:c22b:29b8) (Ping timeout: 240 seconds)
[19:52:21] *** kit_ten is now known as Kit-ten
[19:55:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:55:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:55:28] *** Joins: wroathe (~wroathe@user/wroathe)
[19:56:17] *** Joins: mahmutov (~mahmutov@5.176.51.184)
[19:56:40] *** Joins: nicode (~nic@2607:f2c0:946d:3800:dc99:cf1:8cb3:e1b9)
[19:59:25] *** Joins: caveman_ (~caveman@gateway/tor-sasl/caveman)
[20:00:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:00:57] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[20:02:16] <retro> cool irc goes dead again
[20:02:21] <retro> good job IRC
[20:02:36] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[20:02:38] <retro> I ask a question and everyone fucks off
[20:02:48] <retro> or its idle from the start!
[20:03:32] <omegatron> sounds like your expectations collide with reality ..  -_-
[20:03:38] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Read error: Connection reset by peer)
[20:03:55] <retro> right
[20:04:06] <retro> this is not a chatroom after all then
[20:04:12] <retro> must be a idleroom
[20:04:21] <pony> no, it's a channel
[20:04:38] <bookworm> (or your attitude doesn't exactly invite conversation... another option)
[20:04:51] <omegatron> if I could answer your question, I would do
[20:06:02] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[20:06:30] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Ping timeout: 276 seconds)
[20:06:48] *** Quits: Alhazred (~Alhazred@86.106.74.38) (Ping timeout: 256 seconds)
[20:09:05] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[20:09:27] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:09:42] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:10:55] *** Joins: laslmtdwbcs^ (~laslmtdwb@wsip-98-188-242-61.mc.at.cox.net)
[20:10:56] *** Joins: Betal (~Betal@user/betal)
[20:12:16] *** Joins: alioui (~medeva293@197.0.52.151)
[20:12:21] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Write error: Connection reset by peer)
[20:13:37] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:14:21] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[20:14:48] <retro> you are not a channel
[20:15:07] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[20:17:19] *** Quits: Darkcoal (~user@139.64.58.149) (Ping timeout: 268 seconds)
[20:17:36] *** Joins: mrig (~mrig@user/mrig)
[20:18:33] *** Joins: zmt01 (~zmt00@user/zmt00)
[20:22:40] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[20:22:53] *** Joins: stonkey (~stonkey@user/stonkey)
[20:23:18] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[20:23:45] <omegatron> according to what definition ?
[20:23:54] <pony> IRC has channels, not rooms
[20:24:30] *** Joins: Darkcoal (~user@139.64.58.149)
[20:25:28] *** nuxil_ is now known as nuxil
[20:25:32] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 240 seconds)
[20:25:40] *** Quits: otty (~u0_a161@2402:8100:3902:86fa:ed76:b05b:69f9:84d5) (Read error: No route to host)
[20:25:48] *** Joins: gareppa (~gareppa@user/gareppa)
[20:25:48] *** Joins: teut (~teut@2401:4900:1c68:6b85:14d9:4273:1b4:ada6)
[20:26:05] <retro> shut
[20:26:06] *** Joins: otty (~u0_a161@2402:8100:3902:86fa:ed76:b05b:69f9:84d5)
[20:26:07] <retro> up
[20:26:09] *** Quits: krychu (~krychu@2a02:1205:5055:c640:9847:e81:87bb:195) (Quit: krychu)
[20:26:59] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[20:29:28] *** Joins: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net)
[20:30:24] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:30:41] *** Quits: neverfindme (~hayden@158.123.160.43) (Max SendQ exceeded)
[20:31:01] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:31:25] *** Quits: Guest4384 (~xSavitar@kinserve.com) (Changing host)
[20:31:25] *** Joins: Guest4384 (~xSavitar@user/xsavitar)
[20:32:14] *** Quits: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net) (Remote host closed the connection)
[20:32:14] *** Guest4384 is now known as xSavitar
[20:33:05] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[20:33:14] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:33:31] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:33:59] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:34:10] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:36:05] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[20:36:31] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:38:25] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:38:57] *** Joins: killadi (~u0_a161@2402:8100:390e:531d:ed76:b05b:69f9:84d5)
[20:39:44] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[20:41:36] *** Quits: alioui (~medeva293@197.0.52.151) (Remote host closed the connection)
[20:42:13] *** Quits: otty (~u0_a161@2402:8100:3902:86fa:ed76:b05b:69f9:84d5) (Ping timeout: 240 seconds)
[20:42:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[20:45:41] *** Quits: killadi (~u0_a161@2402:8100:390e:531d:ed76:b05b:69f9:84d5) (Ping timeout: 268 seconds)
[20:46:43] <Kit-ten> retro: its a chatroom, because its a place where we chat, but its also a channel, because thats what individual chatrooms on irc are called
[20:47:17] <retro> idler-room
[20:47:20] *** Parts: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[20:47:40] <Kit-ten> ...
[20:47:52] <Kit-ten> shouldnt have said that, have i
[20:47:57] * Kit-ten sighs
[20:48:04] <omegatron> it could only get funnier
[20:48:25] <Kit-ten> ?
[20:48:30] *** Joins: killadi (~u0_a161@2402:8100:390e:531d:4d0b:92db:1517:d1e9)
[20:48:39] *** killadi is now known as otty
[20:48:41] <omegatron> if he had not left, he might have raged on an on
[20:48:50] <Kit-ten> oh
[20:49:10] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e4cc:85d6:c1e8:8785)
[20:49:22] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Remote host closed the connection)
[20:49:37] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[20:49:57] *** icedtea is now known as BobTheTomato
[20:50:52] *** dostoyev1ky2 is now known as dostoyevsky2
[20:51:33] *** Joins: anddam (~anddam@user/anddam)
[20:52:05] <anddam> howdy, what is the meaning of hash sign in   #str    at  https://www.tutorialspoint.com/multiline-macros-in-c  ?
[20:52:56] <anddam> I figure it's quoting the argument since "EVEN" gets printed
[20:53:15] <anddam> but I do not know how it is called and it did not turn out in the first couple searches I did
[20:53:55] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[20:54:17] <omegatron> https://gcc.gnu.org/onlinedocs/cpp/Stringizing.html#Stringizing
[20:54:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:54:28] *** Joins: stonkey (~stonkey@user/stonkey)
[20:54:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:54:28] *** Joins: wroathe (~wroathe@user/wroathe)
[20:55:53] <anddam> oh I see, the alternative would be using MYMACRO("FOO") rather than MYMACRO(FOO), right?
[20:56:02] <omegatron> (and next time it would be nice, to paste code at some ad-/js-free site as noted in the channel topic)
[20:57:36] *** Joins: ju (~ju@user/ju)
[20:57:57] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[20:59:15] *** Quits: otty (~u0_a161@2402:8100:390e:531d:4d0b:92db:1517:d1e9) (Ping timeout: 268 seconds)
[21:00:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[21:01:30] <fizzie> Usually when you see the stringizing operator, it tends to be because it's there to stringize an argument that's also used as-is somewhere in the macro.
[21:01:54] <fizzie> To convert the name of an enumeration constant to a string, for example; or to show the original expression in an assert-style thing.
[21:02:29] *** Joins: constxd (~brad@142.167.170.88)
[21:02:35] <fizzie> Also, that "multiline macros in C" example is not actually C, it's using a GNU C extension called statement expressions.
[21:03:06] <fizzie> The "standard" way of writing a multi-statement macro (that doesn't need to "return" a result) is with a do-while wrapper.
[21:03:10] *** Joins: Akiva (~Akiva@user/Akiva)
[21:03:38] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:03:59] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:04:21] <theseb> why " unsigned int *p = 0xfff0;  printf("p = %x p + 4 = %x\n", p, p + 4); " prints p = fff0 p + 4 = 10000 ?
[21:04:28] <theseb> why not 0xfff4 ?
[21:04:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:04:56] <theseb> i don't like the 10000...seems wrong
[21:05:03] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[21:05:11] <fizzie> Because `p + 4` means the address of the fourth `int` object from p, and most of the time sizeof (int) > 1.
[21:05:18] <fizzie> Also, don't print pointers with %x.
[21:05:19] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[21:05:41] <theseb> fizzie: whoa...can you elaborate on the "address of fourth int" comment?
[21:05:49] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[21:05:51] <fizzie> `p` is a pointer. `p + 4` is also a pointer.
[21:06:20] <omegatron> remove the '*' before p =   ...
[21:07:10] *** Joins: kts (~kts@103.73.237.13)
[21:07:26] *** Quits: Goreng (~Goreng@202.138.250.1) (Quit: Leaving)
[21:07:31] <fizzie> C11 6.5.6p8: "When an expression that has integer type [such as `4`] is added to -- a pointer [such as `p`] -- the result points to an element offset from the original element such that the difference -- equals the integer expression."
[21:07:36] *** Quits: alch (~alch@151.38.41.192) (Read error: Connection reset by peer)
[21:08:17] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[21:10:39] *** Joins: lleo (~leo@188-206-75-95.mobile.kpn.net)
[21:11:42] *** Joins: alch (~alch@151.38.31.206)
[21:12:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[21:12:42] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[21:15:35] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[21:16:19] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[21:17:46] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com)
[21:21:27] *** Quits: Major_Biscuit (~MajorBisc@c-001-018-021.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:27:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828)
[21:27:53] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[21:28:52] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[21:31:41] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[21:32:57] *** Quits: fe23 (~fe23@2409:8a34:461:9470:f1b4:f604:fefb:515a) (Quit: fe23)
[21:33:02] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[21:33:06] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Quit: Lost terminal)
[21:35:01] *** Quits: mahmutov (~mahmutov@5.176.51.184) (Ping timeout: 256 seconds)
[21:35:14] <theseb> fizzie, omegatron : oh thanks I get it..wow i didn't know pointer math is not in units of types but rather object size....i presume a void *p would literally add 4 bytes?
[21:35:22] <theseb> s/types/bytes
[21:36:10] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[21:36:42] <fizzie> You can't do pointer arithmetic on a `void *` (in standard C).
[21:36:55] <fizzie> Because `void` is an incomplete type (a type whose size is not known) that can never be completed.
[21:37:35] <fizzie> But on a `char *`, yes, adding 4 would mean adding 4 bytes.
[21:38:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:38:37] <fizzie> In GNU C, as an extension, `sizeof (void) == 1` and pointer arithmetic in terms of bytes is allowed on a `void *` as well. (Likewise with pointer-to-function types.)
[21:38:47] *** Joins: mahmutov (~mahmutov@5.176.51.184)
[21:38:53] *** Quits: reset (~reset@user/reset) (Quit: reset)
[21:39:01] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[21:39:18] <fizzie> ,cc int *p = (int *) 0x1000; char *q = (char *) 0x1000; printf("p = %p, p+4 = %p; q = %p, q+4 = %p", (void *) p, (void *)(p+4), (void *)q, (void *)(q+4)); // like so, although the result of converting 0x1000 to a pointer is implementation-defined
[21:39:20] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[21:39:21] <candide> fizzie: p = 0x1000, p+4 = 0x1010; q = 0x1000, q+4 = 0x1004
[21:39:42] *** Joins: tiotags (~tiotags@user/tiotags)
[21:40:37] *** Quits: nathanael (~nathanael@user/nathanael) (Quit: connection reset by purr)
[21:40:46] <fizzie> (And doing pointer arithmetic on pointer values that don't point into an array of sufficient size is plain undefined.)
[21:40:51] <anddam> omegatron: oh sorry, didn't think about the ad/js thing, I was just figuring that example I found
[21:41:07] <omegatron> no problem
[21:41:35] *** Joins: nathanael (~nathanael@user/nathanael)
[21:43:47] <anddam> how would I go in order to call MYMACRO(some string) and have \n appended to it?
[21:44:03] <anddam> i.e.  #define MYMACRO(str) printf("str\n");
[21:44:11] <anddam> except that my example won't work
[21:44:23] <anddam> so I'd need to expand str in the double quotes
[21:44:29] <tiotags> is anybody familiar with asan, I'm getting a buffer overflow in something but it's not very likely it's a buffer overflow, can asan give be wrong (as in it's a different memory access flaw not as in it's not a flaw)
[21:44:58] <omegatron> anddam:  did you try    printf ( #str "\n" )
[21:44:59] <tiotags> anddam you can concatenate strings in c by just putting 2 strings next to each other "something" "something else"
[21:45:19] <tiotags> not fast enough
[21:45:35] <anddam> mm that does ring a (far away) bell
[21:45:46] <anddam> thanks again
[21:46:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[21:46:25] *** Joins: Alhazred (~Alhazred@86.106.74.40)
[21:46:39] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:46:39] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:46:39] *** Joins: wroathe (~wroathe@user/wroathe)
[21:46:41] <sham1> And don't forget that you can glue together tokens with ##
[21:47:37] <fizzie> And the usual second level of macros if you need to also expand other macros in `str` before stringizing it.
[21:48:19] <fizzie> ,cc #define FOO BAR \n #define direct(str) #str \n #define wrapped(str) direct(str) \n printf("%s vs. %s", direct(FOO), wrapped(FOO)); // e.g.
[21:48:22] <candide> fizzie: FOO vs. BAR
[21:49:22] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[21:49:27] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[21:49:40] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[21:50:13] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Read error: Connection reset by peer)
[21:50:29] *** Joins: Nutte35 (~Nutte@202.153.82.145)
[21:50:56] *** Joins: sokan_ (~sokan@2a02:587:9e07:e100:227:eff:fe16:865d)
[21:50:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:51:05] *** Quits: sokan (~sokan@athedsl-303170.home.otenet.gr) (Ping timeout: 250 seconds)
[21:51:23] *** sokan_ is now known as sokan
[21:52:13] *** Joins: Itaru (~Itaru@185.65.135.251)
[21:52:32] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[21:54:14] *** Joins: Akiva (~Akiva@user/Akiva)
[21:54:45] <pony> if a and b are both variables of the same struct type, is a = b allowed?
[21:55:02] *** Joins: Satin (uid193953@user/Seten)
[21:57:13] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 268 seconds)
[21:57:16] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:148a:1ddd:e9e:7777)
[21:57:38] <omegatron> why not try it?
[21:57:42] <tiotags> pony I do that all the time, I don't think it's good form but it works ?
[21:58:38] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[21:58:54] <tiotags> can asan give the wrong error ? (example it says it's a buffer overflow but it's actually some other kind of error)
[21:59:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[21:59:52] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[21:59:57] <sham1> I mean, you'd still have a buffer overlow
[22:00:19] <constxd> kings
[22:01:14] <tiotags> sham1 it looks like a use after free not a buffer overflow
[22:01:18] <constxd> getting some undefined reference to ... linker errors even though i am passing the path of a static library that defines those symbols to gcc
[22:01:25] <constxd> how to troubleshoot
[22:01:25] <pony> ,tias omegatron
[22:01:26] <candide> omegatron: "Try It And See" may work in other languages, but not in C due to the nature of undefined behavior/unportable code. Such coding-by-experimentation often leads to situations such as "But it worked fine earlier!" and/or "But it worked on my machine!". https://ramblings.implicit.net/c/2014/04/20/c-is-not-a-try-it-and-see-language.html
[22:01:26] <tiotags> I'm not using arrays anywhere near that code
[22:01:45] <pony> constxd: what about the queens here?
[22:02:02] <constxd> everyone here is a king
[22:02:11] <omegatron> thanks again, pony - I don't need to be remembered
[22:02:19] <pony> lol
[22:03:06] <constxd> in that case try it and see is a fine thing to do
[22:03:30] <constxd> if it weren't allowed the compiler would emit a diagnostic
[22:03:42] <pony> famous last words
[22:03:43] <omegatron> thank you
[22:03:50] <omegatron> (to constxd)
[22:03:55] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[22:03:58] <constxd> of course you can assign to struct objects
[22:04:03] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[22:04:13] <caze> Try it and see is fine if you just want to see if syntax is correct, to see if it parses.
[22:04:13] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:04:29] <caze> But just because it parses does not mean it is correct.
[22:04:36] <pony> thank you caze
[22:04:46] <omegatron> and maybe this will then ring a bell for the one who asked
[22:04:53] <constxd> compilers emit diagnostics for more than parse errors lol
[22:05:07] <caze> constxd: They're not required to.
[22:05:11] <constxd> so what
[22:05:33] <constxd> any compiler that someone is going to use in real life will emit diagnostics for constraint violations that are trivial to check statically
[22:05:54] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:05:59] <caze> If you pass the correct flags.
[22:06:03] <pony> famous last words, again
[22:06:10] <caze> (maybe)
[22:06:30] <omegatron> oh - they are not required - I guess 99.999999999% of all people use compilers which do, but no, we need to people that compilers are not required to do .. well, yeah, from now on, my only answer will always be "look at the resources linked in the channel's topic"  -  over and over
[22:06:34] <tiotags> I wonder what happens if you do a struct_var1 = (struct_var_type)int_var2
[22:06:41] <omegatron> s/to tell people/
[22:07:09] <sham1> -Weverything
[22:07:09] <pony> what does your compiler say if you forget to free something returned by malloc?
[22:07:12] * sham1 runs
[22:07:14] <fizzie> tiotags: That would be a constraint violation.
[22:07:28] <constxd> pony: why should it say anything? that isn't a constraint violation
[22:07:55] <fizzie> C11 6.5.3p2: "Unless the type name specifies a void type, the type name [in a cast expression] shall specify -- scalar type, and the operand shall have scalar type."
[22:08:13] <tiotags> fizzie that's tyranny ! I want my freedom back
[22:08:13] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:08:22] <constxd> seriously, what do you expect gcc to do if you try to assign to an object with a struct type and that operation isn't defined in C? you really think it would just produce UB?
[22:08:33] *** Joins: reset (~reset@user/reset)
[22:08:38] <fizzie> GCC has an extension that allows casting to a union type from any type that's a member of the union, but I don't think it extends to structs.
[22:08:59] <fizzie> SDCC emits an error if you try to assign struct values, or pass or return them to/from functions. ;) Unless they've finally addressed that.
[22:09:07] <pony> I'm not using gcc
[22:09:47] <omegatron> what do you use? 10cc?
[22:10:08] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[22:10:10] <fizzie> ,cc int i = ((union { int pointless; }) 123).pointless; printf("%d", i); // just for funs
[22:10:13] <candide> fizzie: [warning: ISO C forbids casts to union type [-Wpedantic]] 123
[22:12:47] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[22:16:13] *** Quits: iomari891 (~iomari891@197.210.70.132) (Quit: WeeChat 3.3)
[22:16:19] <pony> so nobody answered my original question
[22:19:26] <tiotags> this one pony "what does your compiler say if you forget to free something returned by malloc?" ?
[22:19:36] <pony> no
[22:19:49] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 240 seconds)
[22:21:47] <fizzie> The one that was just about struct assignment? It's allowed.
[22:22:02] <pony> thank you fizzie
[22:22:51] <fizzie> For reference, C11 6.5.16.1p1 [Simple assignment]: "One of the following shall hold: -- the left oeprand has -- a structure or union type compatible with the type of the right; --"
[22:22:57] <tiotags> it's not allowed, it's bad boy behavior, you get points deducted by the c gods
[22:23:22] <pony> nice
[22:23:24] <tiotags> just use memcpy like c was intended
[22:23:34] <pony> tiotags: pls
[22:24:02] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:24:06] <fizzie> As a fun fact, struct assignment need not copy the contents of any padding.
[22:24:22] <pony> ahh
[22:24:57] *** Quits: caveman_ (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:25:24] <tiotags> doesn't copy contents, as in it can optimize the operation out ?
[22:25:29] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[22:25:45] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[22:26:12] <fizzie> Heh, even called out explicitly in a footnote.
[22:26:15] <fizzie> ,c11 footnote.51
[22:26:16] <candide> http://www.iso-9899.info/n1570.html#FOOTNOTE.51 Thus, for example, structure assignment need not copy any padding bits.
[22:26:38] <pony> when does that become a concern?
[22:26:47] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[22:26:53] <pony> (non-rhetorical q)
[22:26:57] <rcf> If someone tries to use memcmp() to compare structs.
[22:27:04] <fizzie> If you want to compare your structures with `memcmp`, perhaps. Though it'd be a pretty dubious practice.
[22:27:13] <pony> ah
[22:27:59] *** Joins: Akuli (~Akuli@82-203-167-156.bb.dnainternet.fi)
[22:28:45] <fizzie> It's not only that assignment need not copy the padding bytes; assigning any member of a struct can also set padding bytes to any values. So you could only use `memcmp` if it needs to be 0 only for an exact copy made with `memcpy`. Which I guess might come up in some context, but doesn't sound all that commonplace.
[22:29:18] <rcf> The one I can immediately think of is someone trying to use a struct as a key in a generic hashtable implementation.
[22:31:57] *** Joins: magla (~gelignite@55d4c25e.access.ecotel.net)
[22:32:20] <spidermonkey54> something unintuitive in c/c++. `long a = 1684 * 2097152;`, expected result is `3,531,603,968` but the actual result is `-763363328`. partial expressions get evaluated without caring about the result type, inputs and result of `*` get treated as signed int, which then overflows the int, result gets truncated then gets assigned to `long a`.
[22:32:37] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[22:32:50] <fizzie> Or put more briefly, the context it's in doesn't affect the type of an expression.
[22:33:09] *** Joins: vicfred (~vicfred@user/vicfred)
[22:33:32] *** Quits: puke (~puke@user/puke) (Ping timeout: 240 seconds)
[22:33:56] <spidermonkey54> could you elaborate on that?
[22:33:58] <caze> ,cc long a = 1684L * 2097152;
[22:34:01] <candide> caze: no output: a = 3531603968
[22:34:05] <rcf> One eventually learns never to specify literals without a type suffix.
[22:34:42] <spidermonkey54> yup `L` would save the day. and not using literals is even a better choice. its just not intuitive.
[22:34:57] <fizzie> The type of the expression `<int> * <int>` is `int` no matter where it occurs. It may be _converted_ to something else, even implicitly, but the type of the expression still stays `int`.
[22:35:14] <caze> I think it's intuitive.
[22:36:02] <rcf> It's intuitive if you've used C long enough for the brain damage to set in.
[22:36:08] <tiotags> welp time to go back x years of programs and see if any int multiplication is missing an L
[22:36:27] <spidermonkey54> i mean usually the compiler would warn you about this. but I personally won't immediately think "oh would the result of 1684 * 2097152 be more than 32 bits?!"
[22:36:31] *** Joins: Figworm (~inoor@user/figworm)
[22:36:54] *** Quits: Figworm (~inoor@user/figworm) (Client Quit)
[22:37:15] <rcf> spidermonkey54: the best part is it's technically undefined behavior to do this, which can break everything in your program.
[22:37:39] <tiotags> probably some sort of program define that specifies things close to max length
[22:37:42] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:37:42] <spidermonkey54> is there a rule that says its UB?
[22:37:52] *** Quits: mixfix41 (~homefame@user/mixfix41) (Remote host closed the connection)
[22:37:55] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:38:02] <rcf> spidermonkey54: you're overflowing a signed int, which is indeed UB.
[22:38:25] <fizzie> Yes, C11 6.5p5: "If an /exceptional condition/ occurs during the evaluation of an expression (that is, if the result is -- not in the range of representable values for its type), the behavior is undefined."
[22:38:51] *** Joins: Figworm (FiggyWitIt@user/figworm)
[22:39:03] *** Quits: Nutte35 (~Nutte@202.153.82.145) (Ping timeout: 256 seconds)
[22:39:06] <fizzie> FWIW, I haven't made an exhaustive survey, but I feel like it's pretty much the default assumption for a strictly typed language that if you multiply two `int`s (or equivalent), the result is also an `int`. Go's untyped constants deviate from that a little (for the special case of multiplying literals), and maybe some of the more mathematically inclined ones just use arbitrary-precision types by
[22:39:08] <fizzie> default.
[22:39:18] *** Joins: Nutte35 (~Nutte@202.153.82.172)
[22:39:30] <rcf> spidermonkey54: this is the reason that, for example, malloc(number_of_elements * size_of_element) is frowned upon as inherently unsafe.
[22:40:07] <caze> spidermonkey54: It is more intuitive if you have studied parsers.
[22:41:08] <spidermonkey54> i see.  i guess evaluation all depends on the conversion rule, i.e in `int a = (long )b + (float) c + (char) d; ` 2 additions get evaluated at once in which case the result of each depends on the conversion rules in C.
[22:41:19] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[22:41:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-85b6-f2b4-35d4-321f.res6.spectrum.com)
[22:42:17] <caze> spidermonkey54: "at once"?
[22:42:27] <fizzie> `(long )b + (float) c + (char) d` is the same as `((long )b + (float) c) + (char) d`.
[22:42:42] <caze> spidermonkey54: + is left-associative.
[22:43:00] *** Joins: cousteau (~cousteau@user/cousteau)
[22:43:06] <caze> spidermonkey54: Do you know what left-associative means?
[22:43:23] <spidermonkey54> right so  by `at once` I meant `((long )b + (float) c)` then the result gets added to `d`. but the result type of each addition follows C conversion rules
[22:43:57] <spidermonkey54> i.e result of `((long )b + (float) c)` is a float, and not long
[22:44:15] <caze> spidermonkey54: Have you ever done the exercise where you take an infix formula and convert it to postfix?
[22:44:59] <tiotags> can I stop c from converting my types, I just want to do a simple addition
[22:45:05] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:16] <spidermonkey54> im not sure what we are duscussing now, I know about associativity, im just talking about conversion, they are not related
[22:45:18] <caze> Like say, "a + b * c" becomes "a b c * +"
[22:45:52] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:46:25] <caze> spidermonkey54: Associativity determines what conversions are done.
[22:47:19] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:47:32] <spidermonkey54> ye but its a separate matter. i was just saying adding `long` to `float` will result in a float. then adding float to char also result in float, then float gets converted to int `a`
[22:48:24] <spidermonkey54> but yes selecting which `2` expression get executed first depends on Associativity
[22:48:40] <cousteau> tiotags: what is the issue?
[22:48:41] <spidermonkey54> is that what you mean?
[22:48:49] <caze> spidermonkey54: This is just how simple parsers work.
[22:49:11] <caze> spidermonkey54: If you try the problem I stated above, you'll have a better idea.
[22:49:13] <spidermonkey54> case: right, but is `but yes selecting which `2` expression get executed first depends on Associativity` what you were referring to?
[22:49:20] <spidermonkey54> caze:
[22:50:27] <caze> spidermonkey54: For what?
[22:50:29] *** Joins: Akiva (~Akiva@user/Akiva)
[22:51:31] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[22:51:37] <tiotags> cousteau nothing atm
[22:52:10] <spidermonkey54> the discussion we had. in an expression  like `x = a + b + c / d -e * f` , associativity chooses which 2 operands get evaluated first, and conversion rules dicate what the result type of each evolution is, correct?
[22:52:32] <caze> spidermonkey54: Associativity as well as precedence.
[22:52:40] <caze> spidermonkey54: Do you know the difference?
[22:53:29] <spidermonkey54> yes, precedence chooses between diff arithmeitc ops, i.e which comes first + - * /
[22:53:40] <caze> spidermonkey54: Also, it's not really accurate to say which gets evaluated "first". It's more accurate to say what operands each operator gets.
[22:53:49] <cousteau> Rather than choosing which operands are evaluated first, it uses which operation is evaluated first
[22:54:03] <spidermonkey54> makes sense
[22:54:08] <cousteau> ...what caze said.
[22:54:35] <cousteau> "first" is a bit misleading
[22:55:05] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:55:10] <spidermonkey54> so `what 2 operands each operator gets.`
[22:55:31] <caze> Well some operators only take one operand. One takes three.
[22:55:38] <rsjw> "first" when building up the syntax tree, or "first" in the order of runtime evaluation
[22:55:55] <spidermonkey54> unaries yes. like i--
[22:56:03] <cousteau> rsjw: exactly
[22:56:57] <caze> > spidermonkey54: Have you ever done the exercise where you take an infix formula and convert it to postfix? > Like say, "a + b * c" becomes "a b c * +"
[22:57:16] <spidermonkey54> i did a long time ago
[22:57:34] <caze> spidermonkey54: Did you use the shunting yard algorithm?
[22:57:44] <caze> (a stack)
[22:57:47] <spidermonkey54> I barely remember much about it
[22:58:07] <spidermonkey54> at this point it just looks and sounds familiar
[22:58:45] * cousteau not sure if I have implemented it myself, but the one time I thought about it, a stack was involved
[22:59:34] <cousteau> Actually, two stacks; one for operands and one for operators.
[23:00:17] <cousteau> Back then I didn't know of ?: and was real happy about it
[23:00:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:1cb:469c:e868:928d)
[23:00:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:1cb:469c:e868:928d) (Changing host)
[23:00:25] *** Joins: skapata (~Skapata@user/skapata)
[23:00:38] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[23:00:42] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:01:15] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[23:01:43] *** Quits: FluffyMask (~masque@user/fluffymask) (Ping timeout: 256 seconds)
[23:01:51] <tiotags> does running a program under asan use aslr or is it seeded memory like in gdb ?
[23:01:57] *** Quits: Nutte35 (~Nutte@202.153.82.172) (Ping timeout: 240 seconds)
[23:02:16] *** Joins: Nutte35 (~Nutte@43.231.30.15)
[23:03:23] *** Joins: FluffyMask (~masque@user/fluffymask)
[23:05:40] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[23:06:29] *** Quits: osp (~osp@84.19.72.107) (Quit: Leaving)
[23:08:31] *** Quits: lleo (~leo@188-206-75-95.mobile.kpn.net) (Ping timeout: 256 seconds)
[23:09:22] *** Quits: Darkcoal (~user@139.64.58.149) (Quit: Darkcoal)
[23:10:22] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[23:13:27] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[23:15:47] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[23:16:09] *** Joins: kit_ (~u0_a391@2600:380:a423:cdf9:7700:5d00:9296:b2ac)
[23:18:32] *** Quits: Sos (~Sos@d107-222.icpnet.pl) (Quit: Leaving)
[23:19:28] *** Quits: Kit-ten (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[23:19:57] *** Joins: Senicar0 (~Senicar@gateway/tor-sasl/senicar)
[23:20:02] *** Quits: kit_ten (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[23:20:42] *** Quits: Nutte35 (~Nutte@43.231.30.15) (Read error: Connection reset by peer)
[23:21:02] *** kit_ is now known as kit-ten
[23:21:36] *** Joins: kuber (~kuber@75-172-72-182.tukw.qwest.net)
[23:22:09] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Ping timeout: 276 seconds)
[23:22:09] *** Senicar0 is now known as Senicar
[23:22:24] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:26:30] *** Joins: eroux (~eroux@102-65-85-89.ftth.web.africa)
[23:28:00] *** Quits: kuber (~kuber@75-172-72-182.tukw.qwest.net) (Quit: leaving)
[23:36:33] *** Joins: Klinda (~superleag@user/klinda)
[23:37:01] *** Quits: nicode (~nic@2607:f2c0:946d:3800:dc99:cf1:8cb3:e1b9) (Ping timeout: 240 seconds)
[23:38:14] *** Joins: acerbic (~acerbic@cs-xdata-50-86-51-233.cspire.com)
[23:39:00] *** Joins: nicode (~nic@2607:f2c0:9479:8500:ad40:7e49:f3e:3cbe)
[23:40:04] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[23:40:50] *** kzootick is now known as kzootock
[23:40:53] *** kzootock is now known as kzootech
[23:41:12] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[23:42:31] *** Quits: eroux (~eroux@102-65-85-89.ftth.web.africa) (Ping timeout: 256 seconds)
[23:45:17] *** Quits: Alhazred (~Alhazred@86.106.74.40) (Ping timeout: 240 seconds)
[23:45:20] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[23:50:34] *** Joins: cousteau_ (~cousteau@user/cousteau)
[23:54:07] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Quit: \o/)
[23:54:38] *** Joins: domve (~dom@2605:6400:30:f922:1337::)
[23:54:38] *** Quits: domve (~dom@2605:6400:30:f922:1337::) (Changing host)
[23:54:38] *** Joins: domve (~dom@user/domve)
[23:54:43] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[23:58:18] *** Joins: ItsColdOutside (~max@gateway/vpn/pia/coldoutside)
[23:58:32] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[23:59:39] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
