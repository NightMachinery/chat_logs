[00:09:33] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[00:15:02] *** Joins: gggp_ (~gggp@111.63.14.119)
[00:15:24] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[00:15:39] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[00:17:55] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[00:32:28] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:34:55] *** Quits: burningserenity_ (~burningse@2603:9001:f01:ad99::100a) (Remote host closed the connection)
[00:34:55] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100a) (Quit: ZNC 1.8.2 - https://znc.in)
[00:36:40] <telemachus> I'm working through the exercises in GOPL, and after reading the source code for io.LimitReader, I can't understand why this doesn't return io.EOF as an error. What am I missing? https://play.golang.org/p/XN8sMYdZX4N
[00:40:01] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:42:04] <fizzie> "A successful Copy returns err == nil, not err == EOF. Because Copy is defined to read from src until EOF, it does not treat an EOF from Read as an error to be reported."
[00:42:41] <ikke> Why should EOF be treated as an error>
[00:42:43] <ikke> ?
[00:42:43] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[00:42:56] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[00:42:57] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[00:43:13] <ikke> errors are abnormal situations, EOF is expected
[00:43:13] <telemachus> Ah, I am an idiot. The problem is Copy...
[00:43:18] <foobaz> ikke: it shouldn't
[00:43:39] <telemachus> ikke: Yeah, I'm a dope. I was assuming that copy would return the error from read, but (as I mentioned) I'm a dope.
[00:43:46] <telemachus> fizzie, ikke: thanks!
[00:43:48] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[00:44:11] <lazyreader> https://cs.opensource.google/go/go/+/refs/tags/go1.16.6:src/io/io.go;l=443
[00:44:51] <ikke> Permission denied, please contact your administrator
[00:44:58] <ikke> Who is my administrator?
[00:45:12] <telemachus> I wondered that too, ikke!
[00:45:36] <lazyreader> that's weird, works for me and I'm just some dide
[00:45:42] <lazyreader> dude*
[00:46:12] <ikke> Let's see what happens in a private browser tab
[00:46:14] <telemachus> I ran into this earlier today (while trying to read io's source code, and even with my adblockers turned off, no joy)
[00:46:21] <ikke> nope
[00:46:28] <telemachus> That closing paren is in the wrong place...
[00:46:47] <lazyreader> IP range block, perhaps?
[00:47:08] <telemachus> Um, wow: it works for me in Firefox, but not Chrome or Safari
[00:47:09] <lazyreader> I know they have some weird rules on the playground about Chinese IPs...
[00:47:13] <lazyreader> huh
[00:47:21] <telemachus> Again, regardless of adblocking, jsblocking
[00:47:22] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[00:47:30] <telemachus> Super weird
[00:48:36] <telemachus> lazyreader: Thanks. I honestly wasn't thinking about io.Copy at all, only the limited reader's behavior.
[00:53:19] <fizzie> The link works for me (in Chrome on Android), and now that you mention it, earlier today someone complained about pkg.go.dev linking to a repo with access denied, and I wondered what they were talking about.
[00:55:11] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[01:08:02] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Quit: Leaving)
[01:26:17] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 255 seconds)
[01:27:07] *** Joins: kiril (~kiril@85.91.153.163)
[01:27:24] *** Quits: c4rc4s (~c4rc4s@user/c4rc4s) (Read error: Connection reset by peer)
[01:27:33] *** Joins: penguwin5 (~penguwin@fribbledom.com)
[01:27:43] *** Joins: c4rc4s (~c4rc4s@user/c4rc4s)
[01:27:59] *** Quits: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net) (Remote host closed the connection)
[01:28:13] *** Quits: penguwin (~penguwin@fribbledom.com) (Read error: Connection reset by peer)
[01:28:13] *** penguwin5 is now known as penguwin
[01:29:53] *** Joins: daesu (~oriain@112.171.3.4)
[01:30:00] *** Quits: daesu (~oriain@112.171.3.4) (Remote host closed the connection)
[01:31:20] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[01:35:10] *** Joins: gggp__ (~gggp@114.243.57.219)
[01:36:02] *** Quits: rthur (~arthur@lfbn-idf1-1-912-97.w86-238.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[01:38:26] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[01:39:05] *** Quits: hikhvar79607380 (~thelounge@dynamic-046-114-006-013.46.114.pool.telefonica.de) (Quit: The Lounge - https://thelounge.chat)
[01:39:17] *** Quits: nabromov (~nabromov@92.40.255.112.threembb.co.uk) (Quit: WeeChat 2.8)
[01:39:42] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 245 seconds)
[01:43:00] *** Quits: scjosh (~scjosh@206.189.79.69) (Quit: Ping timeout (120 seconds))
[01:43:10] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[01:43:10] *** Quits: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 252 seconds)
[01:43:22] *** Joins: scjosh (~scjosh@206.189.79.69)
[01:44:48] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[01:44:48] *** Quits: deafpiano (~tomlazar@cpe-65-26-56-76.wi.res.rr.com) (Ping timeout: 252 seconds)
[01:44:54] *** Joins: deafpian1 (~tomlazar@cpe-65-26-56-76.wi.res.rr.com)
[01:45:00] *** Quits: muesli (~muesli@fribbledom.com) (Ping timeout: 252 seconds)
[01:45:00] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[01:45:00] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[01:45:08] *** Joins: src (~src@user/src)
[01:45:09] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[01:45:25] *** Joins: muesli (~muesli@fribbledom.com)
[01:45:44] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 252 seconds)
[01:46:28] *** Joins: Wessie- (~Wessie@static.226.41.47.78.clients.your-server.de)
[01:46:28] *** Quits: higgins (~higgins@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[01:46:31] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[01:46:32] *** Joins: l2dy_ (~l2dy@user/l2dy)
[01:46:38] *** Quits: l2dy (~l2dy@user/l2dy) ()
[01:47:12] *** Quits: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de) (Ping timeout: 252 seconds)
[01:47:12] *** Quits: Archwyrm (~archwyrm@archwyrm.net) (Ping timeout: 252 seconds)
[01:47:19] *** Joins: Archwyrm (~archwyrm@archwyrm.net)
[01:47:22] *** Joins: nihilazo (~nihilazo@2607:f298:5:101d:f816:3eff:fe1a:29a3)
[01:47:34] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 252 seconds)
[01:47:41] <nihilazo> hi, which is quicker in go: checking if an item exists in an array or checking if a key exists in a map?
[01:47:56] *** Quits: sshow (~sshow@seven.hackeriet.no) (Ping timeout: 252 seconds)
[01:48:10] *** Joins: sshow (~sshow@seven.hackeriet.no)
[01:48:32] *** Joins: higgins (~higgins@static.38.6.217.95.clients.your-server.de)
[01:48:50] <ikke> the latter
[01:48:58] <since_> not always
[01:48:59] <nihilazo> ok
[01:49:21] <ikke> THe general case should be O(n) vs O(1)
[01:49:27] <since_> iterating through a slice can be extremely fast (as the cpu cache will be used)
[01:49:35] <since_> the answer is thus: depends
[01:49:41] *** Joins: mastardet (~mastardet@user/mastardet)
[01:49:45] <nihilazo> my use case is having some things, which are stored in structs, that have tags. I'm not sure if it's better to store the tags as an slice of values or as a map of the tag to interface{}
[01:49:53] <nihilazo> the second feels "hackier" but would maybe be faster
[01:50:01] <nihilazo> over iterating a slice
[01:50:16] *** Joins: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net)
[01:50:29] <nihilazo> (tags don't have values, something just has a tag or doesn't)
[01:50:47] <ikke> right, using a map as a set
[01:50:56] <ikke> I do that too
[01:52:26] <rewt> isn't struct{} cheaper than interface{}, since the latter has slots for type and value?
[01:53:20] <ikke> I use bool, not sure how 'expensive' that is
[01:53:56] *** Quits: noonien (~noonien@user/noonien) (Quit: Ping timeout (120 seconds))
[01:54:00] <since_> hello premature optimization.
[01:54:16] *** Joins: noonien (~noonien@user/noonien)
[01:54:23] <ikke> Yeah, I typically use what makes my code more readable
[01:54:49] <CommunistWolf> using bool opens up the possibility that you might have stored false, so I avoid it
[01:55:03] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[01:55:56] <ikke> true (no pun intended)
[01:59:49] *** Quits: nihilazo (~nihilazo@2607:f298:5:101d:f816:3eff:fe1a:29a3) (Quit: Leaving)
[02:00:20] <since_> oh man, i made an example for him
[02:00:27] <since_> and he will never get to see it
[02:00:59] <ikke> since_: care to still share?
[02:01:08] <since_> https://play.golang.org/p/Q2CMiEhGRhE
[02:01:20] <since_> MAP: Found 123400 (true) in 856ns
[02:01:21] <since_> SLICE: Found 123400 (123400) in 337ns
[02:01:37] <ikke> I guess I get a cached version
[02:01:50] <ikke> in 0s, in 0s
[02:02:43] <since_> ikke: doesnt work on the go playground, as the time.Now() is always the same
[02:02:58] <ikke> ah, ok yeah
[02:06:44] <b0nn> 07:25 < ikke> true (no pun intended)  <<-- INTEND YOUR PUNS DAMMIT!!!!!!!
[02:06:58] <ikke> :D
[02:07:14] <ikke> Ok, I admit
[02:07:18] <b0nn> lmao
[02:10:15] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[02:10:25] *** Joins: dove (~jordan@li1158-85.members.linode.com)
[02:11:15] *** Quits: dove_ (~jordan@li1158-85.members.linode.com) (Read error: Connection reset by peer)
[02:11:15] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 265 seconds)
[02:11:20] *** Joins: art_vandelay_ (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[02:11:33] *** Quits: kochchef (~quassel@80.146.255.46) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: edr (~edr@user/edr) (Ping timeout: 265 seconds)
[02:11:40] *** Joins: kochchef (~quassel@80.146.255.46)
[02:11:58] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[02:12:22] *** Joins: edr (~edr@enlo.co)
[02:12:23] *** Quits: edr (~edr@enlo.co) (Changing host)
[02:12:23] *** Joins: edr (~edr@user/edr)
[02:15:31] *** Joins: jespada (~jespada@90.254.247.46)
[02:20:42] *** Quits: Kane (~Kane@home.yarg.fr) (Quit: Leaving)
[02:29:48] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[02:29:50] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Ping timeout: 252 seconds)
[02:30:02] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[02:31:13] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:33:18] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:34:33] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[02:37:04] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:d5f1:c472:9a85:c138)
[02:39:31] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[02:40:45] <lungaro> doesn't it bug anyone that play.golang.org defies the laws if physics?
[02:41:12] <ikke> regarding time?
[02:41:39] <lungaro> haah yeah
[02:42:07] *** Joins: Atque (~Atque@user/atque)
[02:43:18] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:43:52] *** Quits: src (~src@user/src) (Ping timeout: 245 seconds)
[02:47:43] *** Joins: arcatech (~arcatech@user/arcatech)
[02:49:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:51:07] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[02:55:39] *** Joins: arcatech (~arcatech@user/arcatech)
[03:01:37] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[03:05:49] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:09:04] *** Joins: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com)
[03:13:57] *** Joins: arcatech (~arcatech@user/arcatech)
[03:21:04] *** Joins: oxum (~oxum@122.181.34.214)
[03:21:42] *** Joins: semslyfe (~semlohcom@23-121-12-220.lightspeed.jcsnms.sbcglobal.net)
[03:24:42] *** Quits: independent56 (~independe@2.25.26.77) (Ping timeout: 245 seconds)
[03:25:37] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:25:45] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 258 seconds)
[03:31:22] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:31:43] *** Joins: jsrnop (~mark@user/jsrnop)
[03:33:57] *** Quits: crweb (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net) (Remote host closed the connection)
[03:36:18] *** Quits: seebs (~seebs@24.196.59.174) (Ping timeout: 240 seconds)
[03:39:25] *** Parts: semslyfe (~semlohcom@23-121-12-220.lightspeed.jcsnms.sbcglobal.net) (WeeChat 3.2)
[03:46:06] *** Joins: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net)
[03:46:34] *** Quits: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net) (Remote host closed the connection)
[03:47:23] *** Joins: lonelycode (~marti@202.150.118.61)
[03:48:33] *** Joins: fef (~thedawn@user/thedawn)
[03:49:23] *** Joins: seebs (~seebs@24.196.59.174)
[03:49:27] *** Joins: gzj (~GZJ0X@199.193.127.138.16clouds.com)
[03:53:40] *** rabbitear_ is now known as rabbitear
[03:56:11] *** Quits: menace (~someone@user/menace) (Ping timeout: 252 seconds)
[03:59:56] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[04:00:10] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[04:04:46] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[04:19:18] <Tv_> lungaro: i'd argue that it defies physics less than your typical computer -- its time never goes backwards
[04:23:58] *** Quits: seebs (~seebs@24.196.59.174) (Quit: Leaving)
[04:26:32] *** Joins: seebs (~seebs@24.196.59.174)
[04:28:07] *** Quits: gzj (~GZJ0X@199.193.127.138.16clouds.com) (Remote host closed the connection)
[04:28:26] *** Joins: gzj (~GZJ0X@199.193.127.138.16clouds.com)
[04:29:17] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[04:33:05] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Remote host closed the connection)
[04:34:08] *** Quits: gzj (~GZJ0X@199.193.127.138.16clouds.com) (Ping timeout: 265 seconds)
[04:36:23] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Read error: Connection reset by peer)
[04:36:33] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[04:37:08] *** Quits: hposca (~hposca@node-1w7jr9phoke2v1ekkbsawouqo.ipv6.telus.net) (Ping timeout: 272 seconds)
[04:37:15] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:39:02] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:41:19] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[04:42:02] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 255 seconds)
[04:43:06] *** Joins: califax (~califax@user/califx)
[04:45:07] *** Parts: nakilon (~nakilon@user/nakilon) (rasengan did nothing wrong)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:33] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:49:39] *** Joins: gzj (~GZJ0X@199.193.127.138.16clouds.com)
[04:59:58] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1002)
[05:02:00] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[05:05:38] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:06:43] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[05:12:11] *** Joins: yoonkn (~user@175.197.208.79)
[05:13:05] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[05:15:10] *** Joins: menace (~someone@2001:a61:35bf:bb01:d0a0:1adf:3e65:e150)
[05:20:57] *** Quits: gggp__ (~gggp@114.243.57.219) (Ping timeout: 276 seconds)
[05:28:27] *** Joins: gggp (~gggp@60.10.194.43)
[05:35:32] *** Joins: gggp_ (~gggp@111.63.14.119)
[05:36:17] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[05:37:06] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net)
[05:37:10] *** Joins: gggp__ (~gggp@111.63.14.119)
[05:38:54] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[05:40:18] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[05:46:44] *** Quits: lazyreader (~lazyreade@ec2-34-222-196-228.us-west-2.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[05:47:18] *** Joins: lazyreader (~lazyreade@ec2-34-222-196-228.us-west-2.compute.amazonaws.com)
[05:48:03] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[05:50:03] *** Joins: Garb0 (~Garb0@user/garb0)
[05:53:46] *** Joins: califax- (~califax@user/califx)
[05:54:09] *** Quits: gzj (~GZJ0X@199.193.127.138.16clouds.com) (Remote host closed the connection)
[05:54:28] *** Joins: gzj (~GZJ0X@199.193.127.138.16clouds.com)
[05:55:08] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[05:56:24] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:56:25] *** califax- is now known as califax
[06:04:40] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[06:10:55] *** gggp__ is now known as gggp
[06:11:18] <gggp> what is the itablink sectionin target filr
[06:22:29] *** Joins: frost (~frost@59.71.241.179)
[06:24:59] *** Joins: gggp_ (~gggp@60.10.194.43)
[06:26:11] *** Joins: gggp__ (~gggp@111.63.14.119)
[06:28:14] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[06:29:38] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 252 seconds)
[06:32:08] *** Quits: gzj (~GZJ0X@199.193.127.138.16clouds.com) (Remote host closed the connection)
[06:32:28] *** Joins: gzj (~GZJ0X@199.193.127.138.16clouds.com)
[06:33:06] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[06:33:37] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[06:35:04] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:33] *** Joins: novns (~novns@user/novns)
[06:38:25] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[06:51:51] *** Joins: arcatech (~arcatech@user/arcatech)
[06:58:35] *** Quits: gzj (~GZJ0X@199.193.127.138.16clouds.com) (Ping timeout: 265 seconds)
[07:00:11] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[07:03:57] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[07:04:41] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:07:01] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[07:12:08] <dante443> Is something like this possible?       templateData := struct{interface{}, App Application, ObjectMap ObjectMap
[07:12:10] <dante443>       }{Data, App: application, ObjectMap: objectMap}
[07:12:37] <dante443> Basically an anonymous struct with an anonymous field from an interface
[07:19:00] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[07:22:38] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[07:25:28] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[07:25:47] *** Joins: oxum (~oxum@122.181.34.214)
[07:30:47] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 255 seconds)
[07:33:01] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1002) (Read error: Connection reset by peer)
[07:33:37] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[07:35:31] *** Quits: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net) (Quit: WeeChat 3.2)
[07:54:53] *** Quits: francis (francis@user/francis) (Quit: rb)
[07:55:38] *** Joins: francis (francis@user/francis)
[07:58:06] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 265 seconds)
[08:00:34] <b0nn> dante443: https://play.golang.org/p/TydmnMYIRC9
[08:10:11] *** Joins: alimiracle (~user@37.238.46.32)
[08:10:37] <alimiracle> hi
[08:11:23] <alimiracle> 4000 in map is good in gc?
[08:14:10] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[08:21:46] <b0nn> alimiracle: Define: Good
[08:22:38] <b0nn> If your question is "Will the GC clean up a map containing 4000+ keys, then the answer, I don't know but I don't see any reason why not
[08:23:21] <b0nn> If your question is "Will the GC allo a map with 4000+ keys" then the answer is "I don't know, but it should be trivial to try it and see"
[08:23:28] <b0nn> allow*
[08:31:05] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 255 seconds)
[08:32:37] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 245 seconds)
[08:33:14] *** Joins: jespada (~jespada@90.254.247.46)
[08:33:57] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:34:30] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[08:39:10] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[08:40:45] *** Joins: cation21 (cation@user/cation)
[08:41:53] *** Quits: cation (cation@user/cation) (Ping timeout: 255 seconds)
[08:42:43] *** Joins: hexfive (~eric@50.35.83.177)
[08:42:47] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[08:44:16] *** cation21 is now known as cation
[08:48:34] <andlabs> poked at it a bit more
[08:48:42] <andlabs> turns out there's a safaridriver on mys ystem already
[08:48:55] <andlabs> but it seems to want an older version of the webdriver spec that expects a "capabilities" key in the POST request
[08:49:15] <andlabs> rsc's thing and the other webdriver package whose name I already forgot sneds 'desired' and agouti sends 'desiredCapabilities'
[08:50:48] <andlabs> either that or none of these things like empty capabilities?
[08:53:10] *** Quits: halden (~halden@lden.im) (Read error: Connection reset by peer)
[08:53:41] *** Joins: iateadonut (~dan@121.177.17.154)
[08:54:47] *** Joins: halden (~halden@lden.im)
[08:55:46] <iateadonut> i see something like this in some go code: fmt.Sprintf("\033[0;%dm%s\033[0m", value, r.Text) - it's for colored text.  - i'm wondering what that \033 format is called and where i can find more about it?
[08:56:50] <andlabs> no that's not it, and looking up the docs on apple's website points to the w3c reccomendation, so it *should* be correct...
[08:57:02] <andlabs> would be nice if agouti actually printed debugging information when requested
[08:59:56] <ansimita> iateadonut: You can start here https://unix.stackexchange.com/questions/124407/what-color-codes-can-i-use-in-my-ps1-prompt
[09:00:45] <andlabs> aha there's a --legacy option
[09:00:49] <andlabs> on safaridriver
[09:00:55] <iateadonut> ansimita, thanks
[09:01:13] <iateadonut> (username checks out)
[09:01:20] <andlabs> "Warning: --w3c and --legacy options no longer have any effect, and may be removed in the future. safaridriver only supports the protocol as defined by the W3C WebDriver specification." :|
[09:03:34] *** Joins: frost (~frost@59.71.241.179)
[09:04:42] *** Quits: Maxattax97 (~max@2603:900a:1501:a7ca::100) (Quit: WeeChat 3.2)
[09:08:22] *** Joins: daveed (~ride@user/daveed)
[09:08:22] *** daveed is now known as uu
[09:16:16] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 246 seconds)
[09:17:08] *** Joins: trufas (~trufas@177.240.218.218)
[09:17:21] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:18:33] *** Quits: uu (~ride@user/daveed) (Quit: uu)
[09:21:09] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[09:22:08] *** Quits: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[09:22:10] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: The Lounge - https://thelounge.chat)
[09:22:34] *** Joins: zkanda (~zkanda@box.makean.art)
[09:25:41] <andlabs> and github.com/mediabuyerbot/go-webdriver is an incomplete mess
[09:25:58] <Seirdy> webdriver is a mess all around
[09:27:05] <Seirdy> if i'm just scraping and working with text and links, i'd rather use edbrowse. otherwise, embrace the suck and use selenium or puppeteer.
[09:27:45] <andlabs> well the problem is dumb javascript antiscraping
[09:28:02] <andlabs> and in this case it isn't worth trying to reverse engineer which I can't even do and even if I just copy the request as verbatim as possible it's still detected
[09:28:27] <andlabs> and of course there are no google results for ISTL-INFINITE-LOOP
[09:29:56] <Seirdy> "uwu our servers are too weak for your 0.666 req/sec, pwease be nice..."
[09:29:58] <Seirdy> "oh you wanna open every link in the article in a new browser tab all at once and load them simultaneously? well since you're a Real Browser that's totally fine"
[09:30:01] <Seirdy> lazy anti-scraping measures suck
[09:34:58] <andlabs> the other problem is that no one makes a self-contained webdriver
[09:35:09] <andlabs> that includes the browser as part of the binary
[09:35:19] <andlabs> and of course 'self-contained' and 'standalone' both mean something in selenium so you can't even search for one with that terminology
[09:35:51] <Seirdy> how useful would that be? i thought the whole point of webdriver was to test on a Real Browserâ„¢
[09:37:03] <andlabs> then maybe I'm werid
[09:37:12] <andlabs> guess I'll have to just install chrome I guess
[09:37:25] <andlabs> (geckodriver is going to just force-upgrade my browser so that's not an option)
[09:37:49] <Seirdy> andlabs: https://github.com/chromium-unofficial-latest-linux/chromium-latest-linux <- i always use this for headless
[09:38:06] <Seirdy> you can pick a specific revision if you want
[09:39:02] <Seirdy> plus none of the distros build chromium properly, with cfi/msan/etc.
[09:39:56] <Seirdy> also i think Epiphany (GNOME Web) is working on Webdriver support
[09:40:34] <andlabs> I'm on macOS
[09:50:04] *** Joins: normen (~normen@p200300d7173dc900dda5c8713748501b.dip0.t-ipconnect.de)
[09:53:52] *** Quits: lonelycode (~marti@202.150.118.61) (Quit: Leaving)
[09:57:06] *** Quits: normen (~normen@p200300d7173dc900dda5c8713748501b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:13:07] *** Joins: Atque (~Atque@user/atque)
[10:24:52] *** Quits: Kyros (~kyros@user/kyros) (Ping timeout: 246 seconds)
[10:25:59] *** Joins: normen (~normen@p200300d7173dc900dda5c8713748501b.dip0.t-ipconnect.de)
[10:35:28] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[10:37:11] *** Joins: Kyros (~kyros@user/kyros)
[10:37:22] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[10:39:58] *** Quits: Eddward__ (~Eddward@207.138.204.132) (Ping timeout: 252 seconds)
[10:40:16] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[10:43:31] *** Quits: Kyros (~kyros@user/kyros) (Read error: Connection reset by peer)
[10:43:43] *** Joins: NotKyros (~kyros@user/kyros)
[10:46:53] *** Quits: rabbitear (~juice@142.93.115.104) (Quit: Lost terminal)
[10:47:08] *** Quits: NotKyros (~kyros@user/kyros) (Read error: Connection reset by peer)
[10:47:18] *** Joins: rabbitear (~juice@142.93.115.104)
[10:47:26] *** Joins: Kyros (~kyros@user/kyros)
[10:50:15] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:53:58] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[10:56:07] *** Joins: c10l (~c10l@89.34.167.207)
[10:59:08] *** Quits: normen (~normen@p200300d7173dc900dda5c8713748501b.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:02:12] *** Quits: LiftLeft (~LiftLeft@37.19.198.39) (Ping timeout: 245 seconds)
[11:08:04] *** Joins: independent56 (~independe@2.25.26.77)
[11:08:43] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[11:13:00] *** Joins: oxum (~oxum@122.181.34.214)
[11:16:43] *** Joins: digits9 (~digits9@c-148-59-58-69.rev.sailinternet.net)
[11:17:23] *** Quits: aerona (~aerona@2600:6c54:4600:f300:8c49:c590:8f74:ccf2) (Quit: Leaving)
[11:18:56] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 255 seconds)
[11:19:50] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 255 seconds)
[11:25:28] *** Joins: mrig (~mrig@user/mrig)
[11:25:36] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[11:27:40] *** Joins: alip (~alip@exherbo/developer/alip)
[11:27:46] *** Joins: LiftLeft (~LiftLeft@154.16.192.65)
[11:29:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:33:29] *** Joins: xsteadfastx (~marv@94.31.101.21)
[11:36:54] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[11:37:43] *** Quits: digits9 (~digits9@c-148-59-58-69.rev.sailinternet.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:38:31] *** Joins: oxum (~oxum@122.181.34.214)
[11:41:01] *** Quits: xsteadfastx (~marv@94.31.101.21) (Ping timeout: 258 seconds)
[11:43:54] *** Quits: oxum (~oxum@122.181.34.214) (Remote host closed the connection)
[11:45:30] *** Quits: LiftLeft (~LiftLeft@154.16.192.65) (Ping timeout: 240 seconds)
[11:46:39] *** Joins: normen (~normen@p200300d7173dc900dda5c8713748501b.dip0.t-ipconnect.de)
[11:47:59] *** Joins: oxum (~oxum@122.181.34.214)
[11:48:25] <mickey> im writing a wrapper for some API and it has two parameters that are exclusive to each other. i understand i can't have "optional" parameters in golang and the only way is to hack around with variadic parameters and such. i was trying to go down the route of call("x", nil), but the second parameters is (optionally) an integer that should be >=0
[11:48:26] <mickey> (i.e. 0 isn't an "no thanks" option for it), and int can't be nil.... what can i do here?
[11:49:18] <ikke> two functions / methods?
[11:49:28] <ikke> That seems to be the go way
[11:50:01] <mickey> isn't an api wrapper expected to be reflect the api preciesly?
[11:51:20] <ikke> You can, but it's going to be ugly
[11:51:53] <mickey> i'll take your word for that. thanks.
[11:52:14] <ikke> you could use a struct for optional params
[11:52:41] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 255 seconds)
[11:53:43] <mickey> an uninitialized int would be 0, but that's a valid input for the api so it's sounds like a bad idea
[11:53:59] <mickey> i would probably have to start nesting structs there.. idk.
[11:54:27] <ikke> pointers can be nil
[11:59:46] *** Joins: src (~src@user/src)
[12:01:06] *** Quits: alimiracle (~user@37.238.46.32) (Remote host closed the connection)
[12:01:36] *** Joins: gggp (~gggp@60.10.194.43)
[12:04:46] *** Joins: fef (~thedawn@user/thedawn)
[12:21:48] *** Joins: shka (~herr@109.231.62.239)
[12:32:29] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:33:59] *** Joins: gggp_ (~gggp@60.10.194.43)
[12:36:20] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[12:37:00] *** Quits: normen (~normen@p200300d7173dc900dda5c8713748501b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[12:37:06] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[12:41:01] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[12:45:23] <A_Dragon> pointers to ints are gross
[12:45:33] <A_Dragon> and then you're sitting on data your caller can change on you
[12:46:06] <ikke> yes
[12:46:26] <ikke> That's why I said it would be ugly
[12:48:18] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 240 seconds)
[12:49:36] *** Joins: ztx (~ztx@user/ztx)
[12:49:51] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[12:51:41] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[12:52:39] *** Joins: oxum (~oxum@122.181.34.214)
[12:53:06] *** Joins: gsilvapt_ (~gsilvapt@2001:8a0:ebd2:5d00:fa80:ae89:cdbe:85c8)
[12:53:18] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[12:53:47] *** Parts: gsilvapt_ (~gsilvapt@2001:8a0:ebd2:5d00:fa80:ae89:cdbe:85c8) ()
[12:54:14] *** Joins: gsilvapt (~gsilvapt@2001:8a0:ebd2:5d00:fa80:ae89:cdbe:85c8)
[12:56:55] *** Quits: gsilvapt (~gsilvapt@2001:8a0:ebd2:5d00:fa80:ae89:cdbe:85c8) (Remote host closed the connection)
[12:57:46] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 265 seconds)
[12:59:18] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[12:59:56] *** Joins: mei (~mei@user/mei)
[13:03:10] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[13:09:20] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[13:10:06] *** Joins: xsteadfastx (~marv@94.31.101.21)
[13:11:57] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 250 seconds)
[13:35:28] *** Quits: xsteadfastx (~marv@94.31.101.21) (Ping timeout: 265 seconds)
[13:38:15] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[13:40:10] *** Joins: oxum (~oxum@122.181.34.214)
[13:43:30] *** gggp_ is now known as gggp
[13:43:35] <gggp> how to tell go compiler set optimize level to 0
[13:46:06] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 265 seconds)
[13:48:16] *** Joins: yoonkn (~user@175.197.208.79)
[13:48:33] *** Joins: lauraaah (uid156848@id-156848.charlton.irccloud.com)
[13:51:40] *** Joins: xsteadfastx (~marv@94.31.101.21)
[13:55:09] <mickey> what would be the appropriate way to convert a struct to url.Values{}? my func receives an interface{} and needs to put that into a GET url
[13:55:39] <mickey> gorilla/schema?
[14:01:50] <j416> mickey: also think about how you will be using this client. Making a client that follows the API exactly might make it little more than an HTTP client. Adapt it to the use-case.
[14:02:49] <mickey> j416 i figured as much. i was initially considering making it public when i'm done, and following best practices is probably the best idea in this case, but i guess the trade off justifies balancing more into "take it or leave it" lol
[14:03:23] <j416> even if you make it public, perhaps you can find a nice abstraction that works for many use-cases.
[14:03:39] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[14:03:53] <j416> keeping it close to the API will of course make it easier to read the API docs and map that. Keep a good balance :D
[14:05:04] <j416> stating the obvious perhaps. sorry. :)
[14:05:51] <j416> might be useful to take inspiration from other clients?
[14:06:48] *** Quits: Freman (~Freman@185.83.217.144) (Ping timeout: 252 seconds)
[14:07:06] *** Joins: Freman (~Freman@flatus.fremnet.net)
[14:09:29] *** Quits: nekron (~nekron@noordsee.de) (Quit: ZNC 1.8.2 - https://znc.in)
[14:09:43] *** Joins: nekron (~nekron@noordsee.de)
[14:10:38] *** Quits: carlavilla (~carlavill@2a0c:5a84:3508:600:221:6bff:fe3b:cee4) (Remote host closed the connection)
[14:13:57] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[14:14:24] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:16:54] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[14:17:09] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[14:21:49] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[14:24:27] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[14:38:51] *** Joins: oxum (~oxum@122.181.34.214)
[14:43:19] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:348b:68b7:584:6256)
[14:47:44] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 255 seconds)
[14:52:33] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[14:58:02] <mickey> how'd you convert a big.Rat to big.Int, given that the number has nothing after the decimal point (it's multiplied but 10^something first)?
[15:01:25] *** Quits: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (Quit: WeeChat 3.2)
[15:05:25] <fizzie> If r.IsInt() is true, then r.Num() is it's value too, as a *big.Int.
[15:05:53] <KirkMcDonald> And r.Denom() will be 1.
[15:07:37] <fizzie> FWIW there are a lot of rationals you can't convert to integers just by multiplying by "10^something". But maybe you've got additional context for the number that ensures it's not one of them.
[15:11:22] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Quit: Lost terminal)
[15:13:19] <KirkMcDonald> Namely those rationals whose denominator is coprime with 10.
[15:13:41] <KirkMcDonald> Or, rather, which have a prime factor that is not 2 or 5.
[15:15:13] *** Joins: opa (~opa@cpe-212-85-170-66.cable.telemach.net)
[15:23:53] *** Joins: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[15:27:37] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 245 seconds)
[15:31:01] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:34:47] *** Joins: tg (~tg@rockylinux/infra/tg)
[15:36:36] *** Joins: fub (uid190747@id-190747.charlton.irccloud.com)
[15:36:55] <fub> Hi. I want to install https://github.com/plutov/echo-logrus with the tag v4.0. How do I do this with go get/go.mod?
[15:37:15] *** brooks61 is now known as brooks
[15:37:54] <ikke> go get -d github.com/plutov/echo-logrus@v4.0.0
[15:40:16] <fub> ikke: invalid version: unknown revision v4.0.0
[15:40:28] <fub> and for v4.0 its: no matching versions for query "v4.0"
[15:41:07] <j416> perhaps that's outside of what it supports; v4.0 isn't a valid semver version is it
[15:41:16] <ikke> go get -d github.com/plutov/echo-logrus/v4
[15:41:30] <ikke> The major version is part of the module name
[15:41:43] <j416> ah.
[15:41:58] <fub> this gives: found (v1.0.0), but does not contain package github.com/plutov/echo-logrus/v4
[15:42:16] <j416> you can always fetch using the commit hash
[15:42:39] <j416> @bba97a796ade
[15:43:48] <ikke> module declares its path as: github.com/cemkiy/echo-logrus
[15:46:30] <fub> ikke: I took the package you linked now, it seems like its newer. This works now, thanks a lot.
[15:48:19] <j416> lol, it seems plutov is the orginal author, and cemkiy has his own fork, and he sent a PR to the original adding go.mod, and the original author just accepted that as-is with the fork's address for the module name.
[15:48:44] <j416> (that's at least how I interpret the history)
[15:49:42] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[15:49:55] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[15:56:57] *** Joins: rthur (~arthur@lfbn-idf1-1-912-97.w86-238.abo.wanadoo.fr)
[15:59:59] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 268 seconds)
[16:02:29] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[16:04:43] *** Quits: opa (~opa@cpe-212-85-170-66.cable.telemach.net) (Quit: Leaving)
[16:06:57] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~â™ª)
[16:08:47] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[16:09:17] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:15:39] *** Quits: independent56 (~independe@2.25.26.77) (Read error: Connection reset by peer)
[16:15:47] *** Joins: independent56 (~independe@2.25.26.77)
[16:17:23] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[16:18:28] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:23:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:24:43] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:30:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[16:30:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:31:59] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:33:56] *** Joins: Atque (~Atque@user/atque)
[16:43:59] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[16:44:53] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:51:24] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[16:59:04] *** Joins: darkapex_ (~darkapex@user/darkapex)
[16:59:23] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[17:05:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[17:06:01] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:34:39] *** Quits: independent56 (~independe@2.25.26.77) (Remote host closed the connection)
[17:34:57] *** Joins: independent56 (~independe@2.25.26.77)
[17:36:29] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[17:37:35] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[17:44:16] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[17:44:56] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[17:54:55] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[17:55:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:02:31] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[18:05:16] *** Joins: fputs_ (~fputs@137.220.33.212)
[18:09:46] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:11:03] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 268 seconds)
[18:11:17] *** Joins: BUSY (~BUSY@user/busy)
[18:13:04] *** Quits: amigan_ (dramoray@dtvax.dynatron.me) (Quit: WeeChat 3.2)
[18:21:03] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[18:23:45] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[18:23:59] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[18:30:10] *** Quits: endigma (~endigma@134.41.133.214) (Remote host closed the connection)
[18:30:42] *** Joins: endigma (~endigma@134.41.133.214)
[18:36:25] *** Joins: carlavilla (~carlavill@2a0c:5a84:3508:600:221:6bff:fe3b:cee4)
[18:40:24] *** Joins: LiftLeft (~LiftLeft@37.19.198.86)
[18:41:32] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[18:44:09] *** Quits: independent56 (~independe@2.25.26.77) (Remote host closed the connection)
[18:44:27] *** Joins: independent56 (~independe@2.25.26.77)
[18:48:56] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[18:49:52] *** Joins: Guest788 (~Guest78@89-76-244-70.dynamic.chello.pl)
[18:51:04] *** Atque is now known as info
[18:51:30] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 276 seconds)
[18:51:33] *** info is now known as Atque
[18:53:09] *** Joins: Crassus (~Crassus@user/crassus)
[18:54:09] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[18:54:40] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 272 seconds)
[18:55:05] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:55:11] *** Joins: oxum (~oxum@122.181.34.214)
[18:57:04] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[18:57:35] *** Joins: califax (~califax@user/califx)
[18:58:44] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[18:59:59] *** Quits: Guest788 (~Guest78@89-76-244-70.dynamic.chello.pl) (Quit: Client closed)
[19:02:33] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 276 seconds)
[19:03:11] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Client Quit)
[19:03:30] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[19:10:54] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[19:12:49] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Remote host closed the connection)
[19:21:23] *** Quits: gggp (~gggp@60.10.194.43) (Quit: Leaving)
[19:21:39] *** Joins: gggp (~gggp@60.10.194.43)
[19:22:10] *** Joins: oxum (~oxum@122.181.34.214)
[19:26:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:27:46] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 240 seconds)
[19:28:20] *** Joins: gggp_ (~gggp@111.63.14.119)
[19:31:07] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[19:31:59] *** Joins: oxum (~oxum@122.181.34.214)
[19:34:04] *** Quits: oxum (~oxum@122.181.34.214) (Remote host closed the connection)
[19:36:56] *** Joins: oxum (~oxum@122.181.34.214)
[19:38:32] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[19:39:03] *** gggp_ is now known as gggp
[19:39:08] *** Quits: oxum (~oxum@122.181.34.214) (Remote host closed the connection)
[19:48:56] *** Joins: oxum (~oxum@122.181.34.214)
[19:54:12] *** Quits: oxum (~oxum@122.181.34.214) (Ping timeout: 272 seconds)
[19:56:50] *** Joins: gggp_ (~gggp@60.10.194.43)
[19:59:35] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[20:01:03] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[20:01:27] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:07:47] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:11:20] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:24:43] *** Joins: Guest87 (~Guest87@186.sub-174-245-49.myvzw.com)
[20:26:43] *** Quits: Guest87 (~Guest87@186.sub-174-245-49.myvzw.com) (Client Quit)
[20:27:45] *** Joins: Guest87 (~Guest87@2600:1007:b128:3e6e:d063:7630:d490:ed6f)
[20:31:35] *** Parts: Guest87 (~Guest87@2600:1007:b128:3e6e:d063:7630:d490:ed6f) ()
[20:35:35] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[20:35:50] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[20:36:19] *** Quits: fub (uid190747@id-190747.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[20:37:15] *** Joins: arcatech (~arcatech@user/arcatech)
[20:38:46] *** Parts: iateadonut (~dan@121.177.17.154) ()
[20:40:31] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[20:44:34] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[20:47:24] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[20:55:39] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[21:00:57] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:d5f1:c472:9a85:c138) (Ping timeout: 252 seconds)
[21:10:32] *** Joins: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net)
[21:12:11] *** tebruno99 is now known as crweb
[21:14:04] *** crweb is now known as tebruno99
[21:18:12] *** Joins: mrus (~mrus@149.28.61.155)
[21:36:05] *** Parts: hatsu (~user@45.76.36.123) ()
[21:37:44] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:7cb7:bc31:6f4b:bf30)
[21:48:44] *** Quits: boingolov (~nastynate@c-71-236-46-219.hsd1.tn.comcast.net) (Ping timeout: 268 seconds)
[21:48:50] <mickey> if i have a module that i called types with structs that i use for multiple other modules in my project, can i import it without having to refer to its structs as types.structName? i recall something like _ import "module", but that doesn't look like it
[21:49:26] <Tv_> mickey: you can, but don't
[21:49:41] <mickey> any particular reason?
[21:49:52] <Tv_> it makes the local namespace very hard to reason about
[21:49:56] <Tv_> also, https://www.gobeyond.dev/standard-package-layout/
[21:50:08] *** Joins: boingolov (~nastynate@c-71-236-46-219.hsd1.tn.comcast.net)
[21:50:12] *** Joins: gggp__ (~gggp@60.10.194.43)
[21:53:06] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[21:57:21] *** Joins: ht_ (~user@45.76.36.123)
[21:59:21] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[22:04:10] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[22:04:35] *** Joins: pepee (~user@user/pepee)
[22:06:13] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1002.inf6.spectrum.com)
[22:17:28] *** Joins: dr0n (~nabromov@195.200.221.74)
[22:21:47] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Quit: Client closed)
[22:22:00] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[22:25:57] *** Quits: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:26:34] *** Quits: foobaz212537114 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[22:26:34] *** Joins: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net)
[22:32:00] <j416> oh, that article moved, did it
[22:32:06] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:c993:382f:f6c:90f1)
[22:33:07] *** Quits: xsteadfastx (~marv@94.31.101.21) (Ping timeout: 250 seconds)
[22:33:10] *** Quits: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[22:33:23] <j416> nice that he moved away from medium
[22:33:24] <j416> seemingly
[22:34:37] <ikke> _ is for importing a package without using anything from it (just for the side effects)
[22:34:52] *** Joins: foobaz212537114 (~foobaz212@82.33.219.124)
[22:36:20] <ikke> usually because the package has an init() function
[22:36:22] *** Joins: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net)
[22:40:13] *** Joins: crweb (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net)
[22:40:18] *** Quits: crweb (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net) (Client Quit)
[22:47:52] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[22:48:10] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:53:59] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[22:54:20] *** Joins: c10l (~c10l@89.34.167.207)
[22:54:50] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[22:54:56] *** Quits: independent56 (~independe@2.25.26.77) (Remote host closed the connection)
[22:55:47] *** Joins: independent56 (~independe@2.25.26.77)
[23:00:03] <andlabs> got something workable with agouti and chromium
[23:00:05] <andlabs> I guess
[23:04:58] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 240 seconds)
[23:17:54] *** Joins: noteness (noteness@user/noteness)
[23:23:32] *** Joins: hubble (~hubble@pool-71-120-25-37.washdc.fios.verizon.net)
[23:23:42] *** Joins: jhchabran (~jhchabran@user/jhchabran)
[23:24:09] *** Quits: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net) (Quit: Ping timeout (120 seconds))
[23:24:26] *** Joins: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net)
[23:30:16] *** Quits: hubble (~hubble@pool-71-120-25-37.washdc.fios.verizon.net) (Ping timeout: 246 seconds)
[23:49:28] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:50:53] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[23:57:27] *** Joins: freakazoid343 (~matt@35.136.210.185)
