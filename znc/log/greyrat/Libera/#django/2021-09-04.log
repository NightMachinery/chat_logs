[00:01:33] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:03:00] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:03:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[00:03:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:04:21] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[00:11:53] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:12:25] *** Quits: Azelphur (~Azelphur@static.156.2.9.176.clients.your-server.de) (Ping timeout: 248 seconds)
[00:14:04] *** Quits: Matthias1 (~Matthias1@casewireless09.CWRU.Edu) (Remote host closed the connection)
[00:15:13] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[00:16:50] *** Joins: Matthias1 (~Matthias1@caseguest.CWRU.Edu)
[00:19:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:21:22] *** Quits: Matthias1 (~Matthias1@caseguest.CWRU.Edu) (Ping timeout: 244 seconds)
[00:21:29] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[00:21:40] *** Joins: fikran (~fikran@user/fikran)
[00:21:50] *** Joins: flynn (~mcbloch@user/flynn)
[00:24:07] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-56dd-3a97-504c-0c8d.res6.spectrum.com)
[00:24:15] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[00:25:48] *** Joins: Matthias1 (~Matthias1@casewireless02.CWRU.Edu)
[00:28:18] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:28:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:29:17] *** Quits: pro_z (~pro_z@37.214.55.6) (Ping timeout: 245 seconds)
[00:33:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[00:40:44] *** Quits: shangxiao (~davids@124.187.193.187) (Quit: WeeChat 3.2)
[00:42:02] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 244 seconds)
[00:58:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:00:49] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:01:10] *** Joins: flynn (~mcbloch@user/flynn)
[01:03:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[01:06:34] *** Quits: CodenameTim (~CodenameT@154.21.114.120) (Ping timeout: 256 seconds)
[01:14:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:20:28] *** Quits: Matthias1 (~Matthias1@casewireless02.CWRU.Edu) (Remote host closed the connection)
[01:26:02] *** Joins: Matthias1 (~Matthias1@caseguest2.CWRU.Edu)
[01:26:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:26:28] *** ChanServ sets mode: +v EvilDMP
[01:30:40] *** Quits: Matthias1 (~Matthias1@caseguest2.CWRU.Edu) (Ping timeout: 240 seconds)
[01:31:09] *** Joins: Matthias1 (~Matthias1@casewireless09.CWRU.Edu)
[01:31:09] *** Quits: Matthias1 (~Matthias1@casewireless09.CWRU.Edu) (Remote host closed the connection)
[01:34:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:37:37] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[01:40:59] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[01:41:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[01:48:10] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[01:50:23] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:50:45] *** Joins: flynn (~mcbloch@user/flynn)
[01:51:45] *** Joins: stdout (~stdout@50.115.255.72)
[01:51:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:55:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:55:21] *** ChanServ sets mode: +v EvilDMP
[01:55:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[01:56:33] *** Joins: barrios (~barrios@2a02:3030:408:5605:56f1:156d:281f:2f55)
[01:56:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:56:38] *** ChanServ sets mode: +v EvilDMP
[01:57:31] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 252 seconds)
[01:58:40] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[01:59:24] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:59:45] *** Joins: flynn (~mcbloch@user/flynn)
[02:06:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:15:32] *** Quits: barrios (~barrios@2a02:3030:408:5605:56f1:156d:281f:2f55) (Read error: Connection reset by peer)
[02:15:42] *** Joins: Matthias1 (~Matthias1@casewireless09.cwru.edu)
[02:15:53] *** Joins: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de)
[02:17:56] *** Quits: Matthias1 (~Matthias1@casewireless09.cwru.edu) (Remote host closed the connection)
[02:18:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:18:22] *** Joins: combengue (~Thunderbi@207.191.249.160)
[02:18:25] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[02:18:25] *** combengue is now known as cmbengue
[02:23:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:23:39] *** ChanServ sets mode: +v EvilDMP
[02:26:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 240 seconds)
[02:28:23] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[02:28:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:28:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:31:01] *** Joins: fikran (~fikran@user/fikran)
[02:32:20] *** Joins: Matthias1 (~Matthias1@casewireless09.cwru.edu)
[02:35:28] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-56dd-3a97-504c-0c8d.res6.spectrum.com) (Ping timeout: 252 seconds)
[02:38:17] *** Joins: combengue (~Thunderbi@207.191.249.160)
[02:38:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 256 seconds)
[02:38:56] *** combengue is now known as cmbengue
[02:51:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:52:09] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[02:54:34] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[02:55:11] *** Joins: combengue (~Thunderbi@207.191.249.160)
[02:55:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 240 seconds)
[02:59:40] *** Quits: combengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[03:00:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:02:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:03:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:07:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[03:08:47] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:10:10] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:11:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[03:11:53] *** Joins: withered_wolf (~withered_@2600:1008:b11a:241:3c19:9464:d511:ad30)
[03:14:13] *** Quits: Matthias1 (~Matthias1@casewireless09.cwru.edu) (Remote host closed the connection)
[03:14:29] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:16:04] *** Joins: Matthias1 (~Matthias1@casewireless09.CWRU.Edu)
[03:16:10] *** Quits: withered_wolf (~withered_@2600:1008:b11a:241:3c19:9464:d511:ad30) (Ping timeout: 240 seconds)
[03:18:35] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 244 seconds)
[03:18:59] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:19:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:21:38] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[03:21:53] *** Joins: combengue (~Thunderbi@207.191.249.160)
[03:22:05] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[03:23:14] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 244 seconds)
[03:23:14] *** combengue is now known as cmbengue
[03:23:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[03:24:22] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[03:27:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:33:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[03:43:45] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[03:46:32] *** Joins: djapo (~archangel@user/djapo)
[03:46:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:58:57] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[03:59:16] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[04:20:03] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[04:20:07] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 245 seconds)
[04:20:25] *** Joins: flynn (~mcbloch@user/flynn)
[04:30:03] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (*.net *.split)
[04:30:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (*.net *.split)
[04:30:03] *** Quits: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de) (*.net *.split)
[04:30:03] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (*.net *.split)
[04:30:03] *** Quits: pegler (~pegler@204-195-37-104.wavecable.com) (*.net *.split)
[04:30:03] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[04:30:03] *** Quits: hylje (~hylje@ponie.fi) (*.net *.split)
[04:30:03] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (*.net *.split)
[04:30:04] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[04:30:04] *** Quits: jmft2 (~JMFT@82.3.54.26) (*.net *.split)
[04:30:04] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[04:30:16] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:30:18] *** Joins: hylje (~hylje@ponie.fi)
[04:30:47] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[04:32:16] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[04:32:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:32:40] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[04:33:34] *** Joins: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de)
[04:36:57] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-0534-c68d-e38c-6e43.res6.spectrum.com)
[04:39:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:40:17] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[04:40:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:45:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[04:55:07] *** Joins: myNmae (~User@195.211.86.224)
[04:59:22] *** Parts: myNmae (~User@195.211.86.224) ()
[05:00:39] *** Joins: myNmae (~User@195.211.86.224)
[05:01:24] *** Joins: withered_wolf (~withered_@2600:1008:b11a:241:3c19:9464:d511:ad30)
[05:02:42] *** Joins: Quacc (~youbuntoe@user/quacc)
[05:02:58] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[05:05:41] *** Quits: withered_wolf (~withered_@2600:1008:b11a:241:3c19:9464:d511:ad30) (Ping timeout: 252 seconds)
[05:06:00] *** Parts: myNmae (~User@195.211.86.224) ()
[05:06:01] *** Joins: myNmae (~User@195.211.86.224)
[05:06:17] *** Parts: myNmae (~User@195.211.86.224) ()
[05:06:27] *** Joins: myNmae (~User@195.211.86.224)
[05:06:30] *** Parts: myNmae (~User@195.211.86.224) ()
[05:06:45] *** Joins: myNmae (~User@195.211.86.224)
[05:07:56] *** Quits: Matthias1 (~Matthias1@casewireless09.CWRU.Edu) (Remote host closed the connection)
[05:08:26] *** Joins: Matthias1 (~Matthias1@casewireless09.CWRU.Edu)
[05:09:07] *** Quits: myNmae (~User@195.211.86.224) (Quit: Leaving.)
[05:11:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:12:37] *** Quits: Matthias1 (~Matthias1@casewireless09.CWRU.Edu) (Ping timeout: 245 seconds)
[05:16:09] *** Joins: Matthias1 (~Matthias1@casewireless09.CWRU.Edu)
[05:19:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[05:24:35] *** Quits: Matthias1 (~Matthias1@casewireless09.CWRU.Edu) (Remote host closed the connection)
[05:44:13] <T-101> is there a way to get aggregated averages in django from given scores. Like that (None, 10, 10) = avg 10, but (0, 10, 10) = avg 0.667?
[05:45:12] <T-101> eh, I mean (0, 10, 10) = avg 6.667
[05:46:58] <T-101> and again so that (None, 10, 10, 10) = avg 10, but (0, 10, 10, 10) = avg 7.50
[05:51:17] *** Quits: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de) (Remote host closed the connection)
[05:52:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:54:34] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 252 seconds)
[05:56:25] *** Joins: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de)
[05:57:18] <FunkyBob> T-101: so, you sort of want a coalescing filter?
[05:57:37] <FunkyBob> it's more a question of how to ask your DBMS that, than if Django supports is
[05:57:38] <FunkyBob> it
[05:58:18] <T-101> I'm not sure is Coalesce() does what I want, yet
[05:58:37] <FunkyBob> no, it doesn't
[05:58:47] <T-101> I do know what Coalesce can turn None into 0 and that is not what I want
[05:59:08] <FunkyBob> can you give an example query you're using?
[05:59:21] <FunkyBob> because filtering for nulls might suffice
[05:59:40] <FunkyBob> then using annotate() or aggregate()
[06:00:11] <T-101> it doesn't exist yet :) I am thinking of a voting thingie, where people can give score to a production, but I do not want to punish the overall score because someone didnt vote
[06:00:53] *** Quits: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de) (Remote host closed the connection)
[06:00:59] <T-101> hense (None, 10, 10) should be more powerful than (0, 10, 10)
[06:01:03] <FunkyBob> are votes stored in their own model?
[06:01:10] <T-101> yupp
[06:01:12] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[06:01:16] <FunkyBob> so there won't be any nulls...
[06:01:23] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[06:01:23] <T-101> yupp
[06:01:27] <FunkyBob> if someone doesn't vote, there won't be a record.
[06:01:29] <FunkyBob> so no problem.
[06:01:58] <T-101> but what if the jury votes for a number of productions, and some jurors do not vote for some productions
[06:02:27] <FunkyBob> then the record for (production, user, vote) doesn't exist... for that user
[06:02:51] <FunkyBob> well, for that user for that production
[06:03:01] <T-101> so would Avg() work as is, or...
[06:03:06] <FunkyBob> yes
[06:03:27] <T-101> goodie
[06:04:15] <T-101> Coalesce() came in to play when counting overall scoring, where None needed to be converted into 0
[06:05:53] <T-101> you guys have been super helpful these past weeks for me :)
[06:07:00] <FunkyBob> it's why this channel exists
[06:07:29] <T-101> so glad it does
[06:07:40] <T-101> tried to help also, with what I can
[06:07:49] *** Joins: Matthias1 (~Matthias1@casewireless09.cwru.edu)
[06:09:10] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[06:09:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:09:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:14:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[06:17:34] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[06:21:27] <T-101> manually tested the .aggragate(Avg("")) and indeed it does exactly what I need :)
[06:23:16] <audiocat> FunkyBob, do you have idea of how i would open up a "launch application" dialog (with js) from the browser so that when  users click "ok" it opens a desktop application, like discord does? no one seems to know the answer anywhere so i thought i'd ask you
[06:24:46] <FunkyBob> audiocat: like zoom does?
[06:24:54] <FunkyBob> and discord.. yeah... umm
[06:28:16] <audiocat> FunkyBob, yea like zoom and discord
[06:30:33] <FunkyBob> I suspect it may be platform dependent... but i'd end up reverse engineering one of those sites to find out :P
[06:32:27] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 240 seconds)
[06:33:07] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 240 seconds)
[06:34:28] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[06:35:59] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[06:36:15] <wallbroken> FunkyBob: i really do want to implement your model design
[06:36:27] <wallbroken> do you think you will help me in doing that?
[06:36:30] <wallbroken> if yes, how?
[06:36:40] <FunkyBob> wallbroken: did you do any of what I recommended last time you asked this?
[06:36:51] <wallbroken> you asked me to prepare a requirement list
[06:37:00] <T-101> is that like done by trying to open a "zoomlink://zoomroom_id"
[06:37:11] <FunkyBob> T-101: maybe
[06:37:17] <FunkyBob> custom protocols was one thought
[06:37:58] <T-101> mac os with firefox seems to warn when trying to open urls like "slack://something" but can be tought to handle them
[06:38:24] <wallbroken> FunkyBob: my worry is which part of my current project can be saved
[06:41:19] <FunkyBob> wallbroken: well, that will depend on the requirements and desired outcomes
[06:41:54] <FunkyBob> wallbroken: for instance, the fundamental fields of your shoe model, describing the shoe itself, are probably good
[06:42:28] <FunkyBob> wallbroken: then again, your fear of discarding your proof-of-concept is part of what's made y our life hell for the last few months
[06:42:48] <wallbroken> well, what we need to do is to move some field which now are under "Shoe" model, in a new model called "Order"
[06:42:57] <wallbroken> this is the core of the change
[06:43:24] <wallbroken> each order will point to a Shoe using a FK
[06:47:11] <FunkyBob> so Order needs to track User, Shoe, and some sort of status
[06:48:06] <wallbroken> order must track the following states:
[06:48:15] <wallbroken> 1) ordered
[06:48:18] <wallbroken> 2) delivered
[06:48:22] <wallbroken> 3) in shipping
[06:48:30] <wallbroken> 4) returned
[06:48:36] <FunkyBob> cancelled
[06:48:47] <wallbroken> 5) delivered/ordered/returned timedate
[06:49:05] <FunkyBob> are you sayting you want to know when it changed to each one of those states?
[06:49:07] <wallbroken> and obviously, the Shoe FK which the order is referring to
[06:49:39] <FunkyBob> do you also want to track which (SKU, serial#) shoe was shipped to fulfill that order?
[06:49:42] <wallbroken> no. i just want to know when the change of last state happened
[06:50:04] <wallbroken> yes, but we can use FK
[06:50:25] <FunkyBob> so only the last change in state... not "when was it orderd, when was it shipped, when was it delivered" etc?
[06:50:28] <FunkyBob> seems odd
[06:50:46] <wallbroken> yes, the last action the user done
[06:51:19] <dodo> so you'll never know if an order took six months until it was shipped
[06:52:12] <FunkyBob> see, this is where the "desired outcomes" part of building the spec comes in
[06:52:32] <FunkyBob> i'll bet you the managers will want some sort of metrics on how long it takes the warehouse to fulfill orders
[06:52:37] <FunkyBob> and that sort of thing
[06:53:07] <wallbroken> well, if then I can store each timedate for each action
[06:53:31] <duoi> wallbroken if you want to record that, then it really depends on what your implementation is. id recommend using presave, postsave or postinit signals, but its not going to work if youre doing bulk inserts or updates
[06:53:33] <FunkyBob> yes, but it's better to use a related 'journal' model... to record each state change ant is date (and who performed it)
[06:53:48] <wallbroken> FunkyBob: all those information must be available in backoffice web application
[06:54:03] <FunkyBob> wallbroken: is that not what we're designing?
[06:54:47] <wallbroken> well, orders can be seen both in customer view and backoffice view
[06:54:51] <wallbroken> but in different way
[06:55:11] <wallbroken> obviously backoffice must have more control on each order
[06:55:14] <FunkyBob> who can see it is irrelevant... that the information is recorded is what we're talking about
[06:55:21] *** Quits: Matthias1 (~Matthias1@casewireless09.cwru.edu) (Remote host closed the connection)
[06:55:30] <FunkyBob> so 'customer' here is the store ordering stock, yes?
[06:55:45] <wallbroken> my idea is that in backoffice we can see each order for each user
[06:55:48] <FunkyBob> is 'back office' the warehouse fulfilling orders? or head office tracking things?
[06:55:58] <wallbroken> FunkyBob: exactly
[06:56:06] <wallbroken> customer = store
[06:56:06] <FunkyBob> exactly... which?
[06:56:08] <FunkyBob> ok
[06:56:23] <wallbroken> backoffice = wharehouse
[06:56:53] <wallbroken> you didn't answer to my question
[06:57:10] <wallbroken> how much part of my current implementation must be thrown out?
[06:58:53] <duoi> i would heavily agree with FunkyBob here in starting a separate journal model to keep track of the changes
[06:59:04] <duoi> if not rolling your own then dropping reversion in there to do it for you
[06:59:24] <FunkyBob> wallbroken: I won't know until you provide the details
[06:59:36] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[06:59:42] <wallbroken> if you need more details, aske me
[06:59:45] <FunkyBob> I did
[06:59:52] <FunkyBob> the requirements... the desired outcomes...
[07:00:34] *** Joins: Matthias1 (~Matthias1@casewireless09.CWRU.Edu)
[07:00:51] <wallbroken> FunkyBob: didn't I answer to your question?
[07:01:25] <FunkyBob> hahaha
[07:01:49] <FunkyBob> where's your document clearly describing the requirements? and outcomes each role wants?
[07:02:01] <FunkyBob> what do the stores want from this system? and the warehouse? and the managers? and...
[07:04:29] *** Joins: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de)
[07:04:58] *** Quits: flyingchef (~flyingche@user/flyingchef) (Ping timeout: 252 seconds)
[07:05:02] *** Quits: Matthias1 (~Matthias1@casewireless09.CWRU.Edu) (Ping timeout: 252 seconds)
[07:05:40] <FunkyBob> I really honestly think you'll find life a lot simpler if you experiment in a new project, from scartch
[07:05:44] <FunkyBob> scratch
[07:05:57] <FunkyBob> after all, the code you have now was only ever a proof-of-concept,
[07:06:18] <FunkyBob> so start again, clean slate, build up what you need... and I think you'll find it's a lot smoother
[07:06:23] <FunkyBob> not carrying all those mistakes around
[07:06:50] *** Joins: flyingchef (~flyingche@user/flyingchef)
[07:06:56] *** Joins: Matthias1 (~Matthias1@casewireless09.CWRU.Edu)
[07:11:08] *** Joins: flyingch1 (~flyingche@user/flyingchef)
[07:12:12] *** Quits: flyingchef (~flyingche@user/flyingchef) (Ping timeout: 245 seconds)
[07:12:41] <wallbroken> FunkyBob: my project is a very big project
[07:13:11] <wallbroken> starting it from scratch means getting too much effort in doing that
[07:13:42] *** Quits: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de) (Remote host closed the connection)
[07:14:12] <FunkyBob> we clearly have very very different ideas of what is a 'very big project'
[07:31:47] *** Quits: flyingch1 (~flyingche@user/flyingchef) (Ping timeout: 245 seconds)
[07:36:31] *** Joins: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de)
[07:44:34] *** Joins: flyingch1 (~flyingche@user/flyingchef)
[07:52:08] *** Joins: rje (~rje@50.35.241.164)
[08:00:49] *** Joins: flyingchef (~flyingche@user/flyingchef)
[08:02:30] *** Quits: flyingch1 (~flyingche@user/flyingchef) (Ping timeout: 256 seconds)
[08:07:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:07:12] *** Quits: flyingchef (~flyingche@user/flyingchef) (Ping timeout: 245 seconds)
[08:09:23] *** Joins: flyingchef (~flyingche@user/flyingchef)
[08:14:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[08:15:55] *** Quits: flyingchef (~flyingche@user/flyingchef) (Ping timeout: 252 seconds)
[08:40:07] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[08:41:33] *** Joins: Safa_[A_Boy] (~Safa@89.148.4.69)
[08:42:29] <Safa_[A_Boy]> Hi. I'm trying to connect to my localhost postgresql server, but getting this whenever the django app connects to the database: django.db.utils.OperationalError: server closed the connection unexpectedly. This probably means the server terminated abnormally before or while processing the request.
[08:43:06] <dodo> Safa_[A_Boy]: read the pg log
[08:45:51] *** Quits: barrios (~barrios@dynamic-046-114-139-027.46.114.pool.telefonica.de) (Remote host closed the connection)
[08:46:00] <Safa_[A_Boy]> "LOG:  database system is ready to accept connections" is the last line..
[08:46:24] <dodo> Safa_[A_Boy]: are you maybe trying to connect too early?
[08:46:28] <Safa_[A_Boy]> Ok, my bad
[08:46:31] <Safa_[A_Boy]> The port was wrong
[08:46:36] <dodo> ;)
[08:46:42] <Safa_[A_Boy]> One digit :\
[08:59:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:12:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[09:14:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:15:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:17:15] *** Quits: Matthias1 (~Matthias1@casewireless09.CWRU.Edu) (Remote host closed the connection)
[09:18:04] *** Joins: Matthias1 (~Matthias1@casewireless09.cwru.edu)
[09:20:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[09:22:12] *** Quits: Matthias1 (~Matthias1@casewireless09.cwru.edu) (Ping timeout: 245 seconds)
[09:42:49] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[09:44:25] *** Joins: Atque (~Atque@user/atque)
[09:44:28] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[09:49:11] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[10:01:01] *** Quits: Safa_[A_Boy] (~Safa@89.148.4.69) (Quit: Leaving)
[10:04:54] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 256 seconds)
[10:06:00] *** Joins: Matthias1 (~Matthias1@casewireless09.cwru.edu)
[10:06:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:10:34] *** Quits: Matthias1 (~Matthias1@casewireless09.cwru.edu) (Ping timeout: 256 seconds)
[10:12:32] *** Joins: fikran (~fikran@user/fikran)
[10:13:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[10:16:19] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[10:24:54] *** Joins: hemebond (~james@240b:12:12e2:f00:5604:a6ff:fe2c:50df)
[10:28:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:29:37] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:33:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[10:34:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[10:34:31] *** Joins: flynn (~mcbloch@user/flynn)
[10:42:19] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[10:44:48] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[10:49:09] *** Joins: Matthias1 (~Matthias1@casewireless09.CWRU.Edu)
[10:53:46] *** Quits: Matthias1 (~Matthias1@casewireless09.CWRU.Edu) (Ping timeout: 252 seconds)
[11:07:35] *** Joins: Safa_[A_Boy] (~Safa@89.148.4.69)
[11:08:39] <Safa_[A_Boy]> schinckel, Hi! I finally got the chance to try django-closure-tree. Is it normal that descendants contains the current record? For example descendants of "Family" is "Family", "Parents", "Children"
[11:29:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:33:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[11:46:06] *** Joins: Matthias1 (~Matthias1@casewireless09.cwru.edu)
[11:53:10] *** Quits: Matthias1 (~Matthias1@casewireless09.cwru.edu) (Ping timeout: 240 seconds)
[11:56:10] *** Joins: pycode (~pycode@2001:b07:5d28:551:9be0:49b5:1c39:4049)
[11:56:22] *** Quits: Safa_[A_Boy] (~Safa@89.148.4.69) (Read error: Connection reset by peer)
[12:03:10] <schinckel> Yes, that is the correct behaviour.
[12:06:40] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[12:07:01] *** Joins: flynn (~mcbloch@user/flynn)
[12:07:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:08:20] <schinckel> Oh, Safa_[A_Boy] left...
[12:09:58] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:20:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[12:21:53] *** Joins: fikran (~fikran@user/fikran)
[12:25:42] *** Joins: Safa_[A_Boy] (~Safa@89.148.4.69)
[12:31:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:35:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[12:49:15] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[12:49:50] <diverdude> hi - how do i access @cached_propery fields in my qs.values_list?
[12:53:36] <FunkyBob> you don't
[12:53:47] <FunkyBob> values and values_list return raw values, not model insttances
[12:53:53] <FunkyBob> cached properties only exist on the model classes
[12:55:12] *** Joins: niv (~niv@limbo.cypherpunks.io)
[12:55:15] *** Quits: jgee (~jgee@186.80.49.20) (Quit: Ping timeout (120 seconds))
[12:55:38] *** Joins: jgee (~jgee@186.80.49.20)
[12:57:15] <diverdude> FunkyBob: aha ok i see. I am asking because i made this small utility: https://dpaste.org/h1Bm to easily prettyprint a queryset in the terminal, however it can only print raw values and not cachec properties. Do you have any ideas how this could be modified to also print cached_properties ?
[12:58:10] <FunkyBob> well, first y ou'd need to not use values_list
[12:58:28] <FunkyBob> you can use getattr to get the values for each of the fields
[12:58:38] <FunkyBob> then you'd need to inspect the class to find all its cached properties
[12:58:46] <FunkyBob> i've done this before, many years ago
[12:59:57] *** Andrew is now known as AhkilKumar
[13:00:26] *** AhkilKumar is now known as Andrew
[13:00:31] <diverdude> FunkyBob: i see... would you by any chance happen to still have that code lying around? :)
[13:00:32] <FunkyBob> you might use https://docs.python.org/3/library/inspect.html#inspect.getmembers and provide a predicate to test if the value is an instance of cached property
[13:02:19] <FunkyBob> also your code is missing any of the annotations that might be in t he queryset
[13:04:33] <diverdude> so you mean smth. like this? inspect.getmembers(Customer.objects.all()) ?
[13:05:19] <FunkyBob> https://github.com/django/django/blob/main/django/db/models/query.py#L97
[13:05:22] <FunkyBob> no
[13:05:31] <FunkyBob> you'd need to inspect the model class itself, not the queryset
[13:05:39] <diverdude> ahhh no ofc. inspect.getmembers(Customer)
[13:05:42] <FunkyBob> however, that link shows how the iterators figure out what all the fields are
[13:05:51] <FunkyBob> the qyeryset knows, after all
[13:06:13] <FunkyBob> https://github.com/django/django/blob/main/django/db/models/query.py#L103-L107
[13:07:36] <FunkyBob> afk
[13:08:44] <diverdude> hmm i dont understand how to use that predicate
[13:10:56] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[13:17:43] *** Joins: Elzington (~Elzington@68.235.43.86)
[13:18:35] *** Quits: rob4226 (~Thunderbi@136.144.35.39) (Read error: Connection reset by peer)
[13:23:59] *** Joins: simernes1 (~simernes@gateway/tor-sasl/simernes)
[13:25:04] <simernes1> all my urls listed in the browsable rest-framework api are linking to localhost:8000/api/.../ how do I change it so it says mydomain.com instead of localhost:8000?
[13:26:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:26:37] *** ChanServ sets mode: +v EvilDMP
[13:28:40] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[13:30:31] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[13:37:50] <FunkyBob> diverdude: it needs to be a callable (like a function or a lambda) that accepts one argument -- the vlaue, and returns a bool
[13:44:02] *** Quits: Safa_[A_Boy] (~Safa@89.148.4.69) (Ping timeout: 250 seconds)
[13:44:12] <FunkyBob> simernes1: have you tried accessing it from mydomain.com ?
[13:44:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:44:56] <simernes1> FunkyBob: yes, indeed
[13:46:13] <FunkyBob> simernes1: how are you running/publishing django?  nginx + gunicorn ?
[13:46:42] <simernes1> FunkyBob: yes, exactly
[13:46:53] <FunkyBob> i'm guessing DRF is reflecting the hostname it sees in the request
[13:47:05] <FunkyBob> so I suspect you've not configured nginx to pass on the Host header to gunicorn
[13:47:21] <diverdude> hmm i thought smth. like this: list(filter(lambda x:x[1]==django.utils.functional.cached_property,inspect.getmembers(Frachit)))  however that returns [] for some reason
[13:47:53] <FunkyBob> diverdude: er... wat?
[13:48:28] <FunkyBob> inspect.getmembers(MyClass, lambda v: isinstance(v, cached_property))
[13:48:39] <FunkyBob> will yield a sequence of (name, value) pairs...
[13:49:31] <diverdude> oh, nice
[13:50:12] <FunkyBob> you can then combine that with the other code I showed you, which shows how to get a list of all the values (native, annotated, etc) that the queryset is grabbing for each record
[13:51:26] <FunkyBob> it will also let you skip fields that are omitted from the request
[13:51:33] <FunkyBob> so you don't trigger a fucktonne of side queries
[13:53:22] *** Quits: pycode (~pycode@2001:b07:5d28:551:9be0:49b5:1c39:4049) (Remote host closed the connection)
[13:53:36] *** Joins: pycode (~pycode@2001:b07:5d28:551:214b:b0ab:3b73:2ee6)
[13:55:52] <simernes1> FunkyBob: does this look right to have in my location?
[13:55:56] <simernes1> proxy_pass_request_headers      on;
[13:55:59] <simernes1> proxy_pass                      http://localhost:8000;
[13:56:01] <simernes1> proxy_set_header                Host $host;
[13:56:42] <FunkyBob> hmm, I tend to use the defaults shipped with debian
[13:56:53] <FunkyBob> ilke this https://blog.tinbrain.net/tutorials/simple-django-deploy.html#configuring-nginx
[13:56:57] <FunkyBob> but that does look correct
[13:58:00] <simernes1> I'm getting a 400 error trying to access the site after adding the headers arguments
[13:58:54] <FunkyBob> is that hostname listed in settings.ALLOWED_HOSTS ?
[13:59:05] <simernes1> thanks for that link, I'm sure it will get in handy
[14:00:21] <simernes1> ah, excellent
[14:02:11] <simernes1> for some reason it's showing the link with http rather than https, but at least it works now. Redirects taking care of the s anyways
[14:02:23] <simernes1> thanks homie
[14:02:42] <FunkyBob> that's likely because the proxy link is http... there's another header setup/config stuff you can do to tell gunicorn the protocol that landed at nginx
[14:14:06] <wallbroken> FunkyBob: could we make an investigation on my current project to check which part must be thrown out?
[14:14:50] <FunkyBob> wallbroken: i was figuring you'd do an investingation in the new project to see which parts could be carried forward
[14:14:53] <FunkyBob> that's how I usually do it
[14:15:28] *** Joins: Atque (~Atque@user/atque)
[14:15:35] <wallbroken> i think most of the views must be changed
[14:15:41] <wallbroken> model design, also
[14:15:56] <FunkyBob> likely, yes
[14:15:57] <wallbroken> some part of the template, also
[14:16:01] <FunkyBob> probably
[14:16:16] <FunkyBob> and you can learn to use <link> to pull in your stylesheet, instead of including it all in the base template
[14:16:37] <diverdude> FunkyBob: this seems to work: https://dpaste.org/zOam  do you think it looks ok?
[14:16:47] <wallbroken> only views.py are 600 lines of code
[14:17:03] <FunkyBob> diverdude: never learned list comprehensions, eh? :P
[14:18:24] <FunkyBob> diverdude: is there a reason you're not asking the queryset for all the fields _it_ knows about?
[14:18:34] <FunkyBob> btw -- [x[0] for x in inspect.getmembers(self.model, lambda v: isinstance(v, cached_property))]
[14:18:39] <FunkyBob> instead of list(map(...))
[14:18:58] <diverdude> FunkyBob: i do know list comprehensions..am i using it wrong?
[14:19:31] <diverdude> why is the list compr. better than map?
[14:19:40] <FunkyBob> better than list+map ?
[14:19:45] <FunkyBob> because it's simpler, for a start
[14:19:50] <FunkyBob> no lambda
[14:20:10] <diverdude> mm true
[14:20:11] <FunkyBob> are you sure you want DeferredAttribute?
[14:20:45] <FunkyBob> the second argument to isinstance can be a tuple of classes to test ...
[14:20:58] <diverdude> DeferredAttribute.... that seems to be the base properties which i also get from self.model._meta.fields
[14:21:00] <FunkyBob> isinstance(v, (cached_property, DeferredAttribute))
[14:21:17] <diverdude> aha ok thats ofc. more nice
[14:21:48] <diverdude> maybe i should just use self.model._meta.fields instead of DeferredAttribute?
[14:23:06] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Quit: brylie)
[14:23:40] <FunkyBob> maybe you should ask the queryset what fields _it_ is retrieving
[14:24:04] <diverdude> how do i do that?
[14:24:25] <FunkyBob> by reading the code I linked you to earlier
[14:24:38] <FunkyBob> it shows how the iterators for querysets figur that out
[14:24:41] <diverdude> ah ok
[14:26:13] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:26:34] *** Joins: flynn (~mcbloch@user/flynn)
[14:29:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[14:31:15] *** Joins: fikran (~fikran@user/fikran)
[15:22:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:22:21] *** ChanServ sets mode: +v EvilDMP
[15:29:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:29:53] *** Joins: mxp (~mxp@139.28.219.252)
[15:30:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:35:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:35:31] *** ChanServ sets mode: +v EvilDMP
[15:44:56] *** Joins: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net)
[15:50:50] *** Quits: pycode (~pycode@2001:b07:5d28:551:214b:b0ab:3b73:2ee6) (Ping timeout: 252 seconds)
[16:07:33] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[16:10:11] *** Joins: pycode (~pycode@2001:b07:5d28:551:a9af:f71f:29c8:4fa4)
[16:12:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:17:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:23:07] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 240 seconds)
[16:25:14] *** Joins: wyre (~wyre@user/wyre)
[16:31:08] *** Quits: wyre (~wyre@user/wyre) (Read error: Connection reset by peer)
[16:33:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[16:38:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[16:40:37] *** Joins: fikran (~fikran@user/fikran)
[16:43:05] *** Joins: Cyberg33k (~Cybergeek@80.161.188.186)
[16:44:05] *** Joins: dez (uid92154@user/dez)
[16:45:40] *** Joins: wyre (~wyre@user/wyre)
[16:48:51] *** Quits: wyre (~wyre@user/wyre) (Client Quit)
[16:49:47] *** Joins: wyre (~wyre@user/wyre)
[16:54:17] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 245 seconds)
[16:56:48] *** Joins: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[17:00:06] *** Joins: Matthias1 (~Matthias1@casewireless11.cwru.edu)
[17:00:10] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[17:00:10] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[17:01:32] *** Joins: wyre (~wyre@user/wyre)
[17:04:43] *** Joins: Atque (~Atque@user/atque)
[17:27:51] *** Joins: Safa_[A_Boy] (~Safa@89.148.4.69)
[17:28:55] <Safa_[A_Boy]> FunkyBob, Hi! I was trying django-closure-tree. Is it normal that descendants contains the current record? For example, record A is parent of B. The descendants of B is B
[17:30:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:35:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[17:38:42] *** Joins: kostkon (~androirc@2a02:587:a104:dec2:88ea:4fb4:9441:6f3d)
[17:52:27] <FunkyBob> Safa_[A_Boy]: sorry, schinckel is the one to ask
[17:57:02] <Safa_[A_Boy]> FunkyBob, No problem! But I have another question. You suggested not to use UUID as a PK, but as an additional key. What about relationships? How to reference those objects? Shall I join the tables every time for the key?
[18:02:46] *** Quits: pycode (~pycode@2001:b07:5d28:551:a9af:f71f:29c8:4fa4) (Ping timeout: 252 seconds)
[18:05:04] *** Joins: Slimgin (~quassel@2603:9001:207:a100:1420:805:ccaf:f8cd)
[18:20:02] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:20:24] *** Joins: flynn (~mcbloch@user/flynn)
[18:22:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:24:42] *** Joins: barrios (~barrios@dynamic-046-114-140-190.46.114.pool.telefonica.de)
[18:31:28] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:31:49] *** Joins: flynn (~mcbloch@user/flynn)
[18:34:12] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[18:41:30] *** Quits: Matthias1 (~Matthias1@casewireless11.cwru.edu) (Remote host closed the connection)
[18:41:59] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[18:42:28] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[18:42:38] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[18:45:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 250 seconds)
[18:47:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[18:49:22] *** Joins: thiras (~thiras@user/thiras)
[18:49:57] *** Joins: fikran (~fikran@user/fikran)
[18:50:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:51:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:54:17] *** Joins: kostkon_ (~androirc@5-203-190-135.pat.nym.cosmote.net)
[18:55:38] *** Quits: kostkon (~androirc@2a02:587:a104:dec2:88ea:4fb4:9441:6f3d) (Ping timeout: 252 seconds)
[18:55:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[18:57:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:58:17] *** Quits: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net) (Quit: Leaving...)
[19:02:43] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[19:04:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:04:42] *** Quits: Safa_[A_Boy] (~Safa@89.148.4.69) (Ping timeout: 250 seconds)
[19:14:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:15:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:18:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:18:38] *** ChanServ sets mode: +v EvilDMP
[19:18:55] *** Joins: Safa_[A_Boy] (~Safa@89.148.4.69)
[19:19:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[19:22:02] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[19:23:59] *** Joins: CodenameTim (~CodenameT@154.21.28.209)
[19:23:59] *** Quits: kostkon_ (~androirc@5-203-190-135.pat.nym.cosmote.net) (Read error: Connection reset by peer)
[19:24:07] *** Joins: kostkon_ (~androirc@2a02:587:a118:2650:88ea:4fb4:9441:6f3d)
[19:24:35] *** kostkon_ is now known as kostkon
[19:26:55] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 252 seconds)
[19:39:52] *** Joins: pro_z (~pro_z@37.214.56.59)
[19:40:27] *** Quits: kostkon (~androirc@2a02:587:a118:2650:88ea:4fb4:9441:6f3d) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:43:25] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 252 seconds)
[19:45:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:45:31] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[19:45:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:46:10] *** Joins: shangxiao (~davids@124.187.193.187)
[19:49:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:50:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[20:09:24] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[20:13:44] *** Quits: barrios (~barrios@dynamic-046-114-140-190.46.114.pool.telefonica.de) (Remote host closed the connection)
[20:19:43] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[20:32:20] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Read error: Connection reset by peer)
[20:34:10] *** Quits: CodenameTim (~CodenameT@154.21.28.209) (Ping timeout: 240 seconds)
[20:34:50] *** Quits: Safa_[A_Boy] (~Safa@89.148.4.69) (Ping timeout: 250 seconds)
[20:40:25] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: Rebooting!)
[20:40:59] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[20:42:45] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[20:44:56] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:47:55] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[20:50:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:50:32] *** Joins: flynn (~mcbloch@user/flynn)
[20:57:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[20:58:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[20:58:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:59:18] *** Joins: fikran (~fikran@user/fikran)
[21:01:39] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:01:59] *** Joins: flynn (~mcbloch@user/flynn)
[21:04:20] *** Quits: dongcarl (~dongcarl@96.224.58.144) (Ping timeout: 252 seconds)
[21:09:36] *** Joins: CodenameTim (~CodenameT@154.21.114.150)
[21:13:48] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:14:08] *** Joins: flynn (~mcbloch@user/flynn)
[21:32:56] *** Joins: thiras (~thiras@user/thiras)
[21:35:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[21:44:05] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:44:25] *** Joins: flynn (~mcbloch@user/flynn)
[21:54:01] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:54:22] *** Joins: flynn (~mcbloch@user/flynn)
[21:57:08] *** Quits: CodenameTim (~CodenameT@154.21.114.150) (Ping timeout: 252 seconds)
[22:07:22] *** Joins: defjam (~eb0t@90.194.35.110)
[22:07:54] <defjam> omg thank god you lot are here...i have been away and came back to freenode and got the shock of my life
[22:11:26] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:11:53] *** Joins: flynn (~mcbloch@user/flynn)
[22:15:43] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[22:16:05] *** Joins: defjam (~eb0t@90.194.35.110)
[22:21:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:25:34] *** Quits: Cyberg33k (~Cybergeek@80.161.188.186) (Quit: This computer has gone to sleep)
[22:25:53] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:26:15] *** Joins: flynn (~mcbloch@user/flynn)
[22:28:17] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[22:29:24] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[22:32:06] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[22:34:51] *** Joins: pycode (~pycode@2001:b07:5d28:551:8c87:ed88:9b04:3500)
[22:40:37] *** Joins: defjam (~eb0t@90.194.35.110)
[22:54:46] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[22:56:26] *** Joins: defjam (~eb0t@90.194.35.110)
[23:03:30] *** Quits: pycode (~pycode@2001:b07:5d28:551:8c87:ed88:9b04:3500) (Ping timeout: 256 seconds)
[23:06:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[23:08:38] *** Joins: fikran (~fikran@user/fikran)
[23:20:15] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[23:20:26] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:27:36] <shangxiao> defjam: ha yeah well I think the number of users has dropped because of situations like yours.  Thankfully the #python and other useful channels are still quite active.
[23:28:39] <defjam> yes, its looking good..if you look here....libera has completely taken over.
[23:28:42] <defjam> https://netsplit.de/networks/top10.php
[23:35:21] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[23:35:35] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:35:48] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[23:42:05] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:43:41] *** Quits: defjam (~eb0t@90.194.35.110) (Quit: WeeChat 2.3)
[23:43:50] *** Quits: pro_z (~pro_z@37.214.56.59) (Ping timeout: 252 seconds)
[23:44:09] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[23:44:48] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[23:49:12] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[23:49:27] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[23:49:32] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[23:50:25] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[23:51:47] *** Quits: mxp (~mxp@139.28.219.252) (Ping timeout: 245 seconds)
[23:51:57] *** Joins: Matthias1 (~Matthias1@casewireless09.cwru.edu)
[23:56:33] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:56:46] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[23:58:20] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[23:58:36] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[23:59:13] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
