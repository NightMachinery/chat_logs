[00:00:13] <anddam> so, my example has a definition of the data member, that does not require the static keyword
[00:01:11] <anddam> it's not clear to me if I can perform a definition of the static data member inside the class definition
[00:01:23] *** Joins: meicceli (meicceli@kapsi.fi)
[00:02:48] <anddam> "The declaration inside the class body is not a definition " seems not, but then the only example of definition inside the class is the one using inline
[00:03:29] <anddam> that aside, considering """Static data members are not associated with any object. They exist even if no objects of the class have been defined. There is only one instance of the static data member in the entire program"""
[00:05:14] <anddam> wouldn't it be easier to init an instance at program start, in Logger::Logger() assign this instance to the static data member and then keep using Logger::m_Instance through the code?
[00:05:45] *** Quits: hans_ (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[00:05:57] <anddam> I mean the guy keeps using   Logger::getInstance()->thisMethod()   with a number of instance methods
[00:06:13] <anddam> seems there's an easier way
[00:07:20] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:07:41] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[00:08:05] <anddam> at least now I have a better grasp at the code
[00:08:35] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[00:09:53] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[00:11:01] <anddam> oh last thing, shoulnd't the getInstance() definition in the class definition have a static keyword as well>
[00:11:09] <anddam> s/>$/?/
[00:11:49] <anddam> I mean considering it is being accessed with Logger::getInstance() and the fact that the keyword actually is present in the header file
[00:13:59] *** Joins: badone (~badone@209.132.189.136)
[00:14:40] *** Quits: AmR (~AmREiSa@156.199.223.24) (Ping timeout: 264 seconds)
[00:14:55] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[00:16:58] *** Joins: rgrinberg (~textual@200.5.63.76)
[00:17:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:18:16] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Ping timeout: 264 seconds)
[00:23:21] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[00:23:35] *** Quits: dld (~dld@2620:6e:6000:2900:4c8f:59ca:20e7:8c51) (Ping timeout: 252 seconds)
[00:24:31] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[00:26:41] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[00:29:25] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[00:30:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:31:17] *** Quits: Ronis_BR (~Ronis_BR@ronanarraes.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:31:32] *** Joins: Ronis_BR (~Ronis_BR@ronanarraes.com)
[00:34:39] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:57] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[00:35:02] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[00:36:14] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[00:36:46] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[00:40:51] <Alipha> <anddam> wouldn't it be easier to init an instance at program start, in Logger::Logger() assign this instance to the static data member and then keep using Logger::m_Instance through the code? -- you mean, init inside of main? What about code that's executed prior to main, like inside the constructors of global objects?
[00:42:53] <Alipha> This singleton pattern guarantees that a Logger is created on the first call to getInstance, even if that first call happens prior to the start of main. Though this code is wordier than it needs to be
[00:45:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:47:14] *** Parts: Ronis_BR (~Ronis_BR@ronanarraes.com) (WeeChat 3.3)
[00:47:38] <Alipha> the getInstance() DECLARATION in the class definition does have static (line 3 of logger.h). The static keyword is not actually allowed on the getInstance() DEFINITION (line 8 of logger.cpp), and it would be redundant anyway, since it was already specified on the declaration
[00:47:41] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 256 seconds)
[00:47:57] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:49:27] <Alipha> And actually, that code isn't valid in your gist--the closing } for the constructor Logger::Logger() needs to be on line 7, not line 14
[00:50:32] <Alipha> and presumably buf, sz, and l are supposed to be member variables?
[00:53:07] *** Quits: proller (~p@2a02:6b8:b081:8813::1:21) (Ping timeout: 252 seconds)
[00:53:07] <Alipha> https://wandbox.org/permlink/90fJbYaaSxZYyTJl
[00:54:03] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[00:54:12] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Remote host closed the connection)
[00:55:10] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[00:57:31] *** Joins: bbbbbb (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[00:58:49] *** Quits: presonic (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[00:59:10] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[01:10:13] *** Quits: bbbbbb (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (*.net *.split)
[01:10:13] *** Quits: lxsameer (~lxsameer@user/lxsameer) (*.net *.split)
[01:10:14] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a6600e8a7e220a1554b8b.ipv6.abo.wanadoo.fr) (*.net *.split)
[01:10:14] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (*.net *.split)
[01:10:14] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[01:10:14] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (*.net *.split)
[01:10:14] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (*.net *.split)
[01:10:14] *** Quits: Raziel (~Raziel@user/raziel) (*.net *.split)
[01:10:14] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (*.net *.split)
[01:10:14] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (*.net *.split)
[01:10:14] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (*.net *.split)
[01:10:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (*.net *.split)
[01:10:14] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (*.net *.split)
[01:10:14] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (*.net *.split)
[01:10:14] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (*.net *.split)
[01:10:14] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (*.net *.split)
[01:10:14] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (*.net *.split)
[01:10:14] *** Quits: dsrt^ (~dsrt@68.101.58.90) (*.net *.split)
[01:10:14] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (*.net *.split)
[01:10:14] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (*.net *.split)
[01:10:14] *** Quits: mel (~caramel@user/caramel) (*.net *.split)
[01:10:14] *** Quits: slidercrank (~slidercra@user/slidercrank) (*.net *.split)
[01:10:14] *** Quits: Colt (~Colt@user/colt) (*.net *.split)
[01:10:14] *** Quits: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (*.net *.split)
[01:10:14] *** Quits: letto2 (~letto@188.25.118.240) (*.net *.split)
[01:10:14] *** Quits: Burgundy (~yomon@79.115.213.171) (*.net *.split)
[01:10:14] *** Quits: plastico (~plastico@neomutt/plastico) (*.net *.split)
[01:10:14] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (*.net *.split)
[01:10:14] *** Quits: Tas-sos (~Tas-sos@ppp005054041212.access.hol.gr) (*.net *.split)
[01:10:14] *** Quits: manx (xuew@p200300e18f239d00022215fffe03cf97.dip0.t-ipconnect.de) (*.net *.split)
[01:10:14] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (*.net *.split)
[01:10:14] *** Quits: Chaser (~Chaser@user/chaser) (*.net *.split)
[01:10:14] *** Quits: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com) (*.net *.split)
[01:10:14] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (*.net *.split)
[01:10:14] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (*.net *.split)
[01:10:15] *** Quits: badone (~badone@209.132.189.136) (*.net *.split)
[01:10:15] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (*.net *.split)
[01:10:15] *** Quits: Linux_77 (~7Linux7@186.233.182.193) (*.net *.split)
[01:10:15] *** Quits: hightower2 (~hightower@213.147.110.20) (*.net *.split)
[01:10:15] *** Quits: fputs (~fputs@67.59.83.166) (*.net *.split)
[01:10:15] *** Quits: robod34 (Username@79.113.195.239) (*.net *.split)
[01:10:15] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (*.net *.split)
[01:10:15] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (*.net *.split)
[01:10:15] *** Quits: Leone (~Leo@216.154.50.172) (*.net *.split)
[01:10:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[01:10:15] *** Quits: seninha (~seninha@user/seninha) (*.net *.split)
[01:10:15] *** Quits: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com) (*.net *.split)
[01:10:15] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[01:10:15] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[01:10:15] *** Quits: rahl (~rahl@102.114.49.104) (*.net *.split)
[01:10:15] *** Quits: luizfrds1 (~Luiz@152.250.243.147) (*.net *.split)
[01:10:15] *** Quits: moberg (~moberg@luke.millenniumfalcon.org) (*.net *.split)
[01:10:15] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (*.net *.split)
[01:10:15] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[01:10:15] *** Quits: undeclared (nullx@user/undeclared) (*.net *.split)
[01:10:15] *** Quits: urdh (~urdh@user/urdh) (*.net *.split)
[01:10:16] *** Quits: Cahaan (~Cahaan@user/cahaan) (*.net *.split)
[01:10:16] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (*.net *.split)
[01:10:16] *** Quits: useretail (~useretail@185.132.19.151) (*.net *.split)
[01:10:16] *** Quits: anddam (~anddam@user/anddam) (*.net *.split)
[01:10:16] *** Quits: Dreg- (~Dreg@fr33project.org) (*.net *.split)
[01:10:16] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (*.net *.split)
[01:10:16] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[01:10:16] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (*.net *.split)
[01:10:16] *** Quits: Dizidentu (~aresg@modemcable105.134-19-135.mc.videotron.ca) (*.net *.split)
[01:10:16] *** Quits: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482) (*.net *.split)
[01:10:16] *** Quits: merry (~mary@user/merry) (*.net *.split)
[01:10:16] *** Quits: randm (~randm@user/randm) (*.net *.split)
[01:10:16] *** Quits: raekye (~raekye@creatifcubed.com) (*.net *.split)
[01:10:16] *** Quits: sonic (~sonic@user/sonic) (*.net *.split)
[01:10:16] *** Quits: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com) (*.net *.split)
[01:10:16] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[01:10:16] *** Quits: wolf2k_huh (~wolfman20@2600:1700:3211:4140:348d:300c:c36b:9213) (*.net *.split)
[01:10:16] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (*.net *.split)
[01:10:16] *** Quits: pizdets (~pizdets@183.182.110.253) (*.net *.split)
[01:10:16] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (*.net *.split)
[01:10:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (*.net *.split)
[01:10:17] *** Quits: llh (~llh@user/llh) (*.net *.split)
[01:10:17] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[01:10:17] *** Quits: ivzhh (~ivzhh@S0106f85e42a00a1f.cg.shawcable.net) (*.net *.split)
[01:10:17] *** Quits: NEYi (~NEYi@109.251.216.38) (*.net *.split)
[01:10:17] *** Quits: mintograde (~mintograd@47.201.5.61) (*.net *.split)
[01:10:17] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[01:10:17] *** Quits: blo_ (~blo@ipv6.blo.ski) (*.net *.split)
[01:10:17] *** Quits: Praise (~Fat@user/praise) (*.net *.split)
[01:10:17] *** Quits: Alipha (~AliphaX@user/alipha) (*.net *.split)
[01:10:17] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[01:10:17] *** Quits: Moult (~sevenstro@sevenstrokes.net) (*.net *.split)
[01:10:17] *** Quits: Cyp_ (~cyp@213.237.85.9) (*.net *.split)
[01:10:17] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[01:10:17] *** Quits: taiyu (~taiyu@user/taiyu) (*.net *.split)
[01:10:17] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[01:10:17] *** Quits: BucetaPeluda (~istupy@2620:0:1003:206:9819:cc89:d061:6815) (*.net *.split)
[01:10:17] *** Quits: HvszrStykp (~X@81.171.62.87) (*.net *.split)
[01:10:17] *** Quits: pa (~pah@user/pah) (*.net *.split)
[01:10:17] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (*.net *.split)
[01:10:17] *** Quits: SKiTZO_ (~dark@64.89-10-146.nextgentel.com) (*.net *.split)
[01:10:17] *** Quits: jiffe (~jiffe@mail.nsab.us) (*.net *.split)
[01:10:17] *** Quits: drmeister (sid45147@id-45147.ilkley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: scruffyfurn (scruffyfur@turbous.xshellz.com) (*.net *.split)
[01:10:17] *** Quits: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net) (*.net *.split)
[01:10:17] *** Quits: Jck_true (~jcktrue@188.228.89.240) (*.net *.split)
[01:10:17] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[01:10:17] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[01:10:17] *** Quits: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu) (*.net *.split)
[01:10:17] *** Quits: pippijn (~pippijn@ra.xinutec.org) (*.net *.split)
[01:10:17] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: tcsc (sid145321@5.254.36.59) (*.net *.split)
[01:10:17] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: glenfe (sid231748@user/glenfe) (*.net *.split)
[01:10:17] *** Quits: cengiz_io (sid223191@id-223191.ilkley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com) (*.net *.split)
[01:10:17] *** Quits: renopt (~renopt@lisp.us.to) (*.net *.split)
[01:10:17] *** Quits: jellie (~luv_panda@user/jellie) (*.net *.split)
[01:10:17] *** Quits: xcm_ (~xcm@user/xcm) (*.net *.split)
[01:10:17] *** Quits: elemongw (~elemongw@20.107.36.50) (*.net *.split)
[01:10:18] *** Quits: Gamah (~quassel@gamah.net) (*.net *.split)
[01:10:18] *** Quits: headline (sid102736@tinside.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: termos (sid18647@helmsley.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: gendl (sid100083@hampstead.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: immibis (~hexchat@62.156.144.218) (*.net *.split)
[01:10:18] *** Quits: anzu (~anzu@melkki.cs.helsinki.fi) (*.net *.split)
[01:10:18] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[01:10:18] *** Quits: irc-open-up (bounce@bounce.nastycode.com) (*.net *.split)
[01:10:18] *** Quits: derwolf (~DerWolf@2a01:4f8:c0c:554a::1) (*.net *.split)
[01:10:18] *** Quits: mebus (~mebus@2a00:8a60:e019:10de::ac22) (*.net *.split)
[01:10:18] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[01:10:18] *** Quits: m42e (~m42e@pb42.de) (*.net *.split)
[01:10:18] *** Quits: supernov1h (~supernova@mail.ijk.nz) (*.net *.split)
[01:10:18] *** Quits: ethoxy_ (~caretaker@cx21.havox.ru) (*.net *.split)
[01:10:18] *** Quits: eck (~root@user/eck) (*.net *.split)
[01:10:18] *** Quits: dongcarl (~dongcarl@70.107.207.192) (*.net *.split)
[01:10:18] *** Quits: zopsi_ (zopsi@2600:3c00::f03c:91ff:fe14:551f) (*.net *.split)
[01:10:18] *** Quits: jkl1337 (~jkl@user/jkl) (*.net *.split)
[01:10:18] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[01:10:18] *** Quits: dhch (~dhch@185.213.154.168) (*.net *.split)
[01:10:18] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[01:10:18] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[01:10:18] *** Quits: Fairy (~Fairy@2001:464a:4992:0:78b9:dd77:b9a4:c92d) (*.net *.split)
[01:10:19] *** Quits: LittleFox (~littlefox@rondra.lf-net.org) (*.net *.split)
[01:10:19] *** Quits: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (*.net *.split)
[01:10:19] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[01:10:19] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[01:10:19] *** Quits: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca) (*.net *.split)
[01:10:19] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[01:10:19] *** Quits: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (*.net *.split)
[01:10:19] *** Quits: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net) (*.net *.split)
[01:10:19] *** Quits: Xizor_ (~Xizor@151.ip-51-68-121.eu) (*.net *.split)
[01:10:19] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (*.net *.split)
[01:10:19] *** Quits: equinox[m] (~momoshiki@2001:470:69fc:105::fe92) (*.net *.split)
[01:10:19] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (*.net *.split)
[01:10:19] *** Quits: JoeyLong[m] (~tezzy26ma@2001:470:69fc:105::1:3333) (*.net *.split)
[01:10:19] *** Quits: daswf852 (~daswf852@user/daswf852) (*.net *.split)
[01:10:19] *** Quits: b_jonas (~x@catv-176-63-4-16.catv.broadband.hu) (*.net *.split)
[01:10:19] *** Quits: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[01:10:19] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (*.net *.split)
[01:10:19] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (*.net *.split)
[01:10:19] *** Quits: Oxyd (~oxyd@user/oxyd) (*.net *.split)
[01:10:19] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[01:10:19] *** Quits: dextaa (~DV@user/dextaa) (*.net *.split)
[01:10:19] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[01:10:19] *** Quits: Brewster (~Brewster@104.145.226.5) (*.net *.split)
[01:10:19] *** Quits: tobs (~tobs@taboege.de) (*.net *.split)
[01:10:19] *** Quits: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de) (*.net *.split)
[01:10:19] *** Quits: zinc_ (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[01:10:20] *** Quits: shailangsa (~shailangs@host86-162-150-209.range86-162.btcentralplus.com) (*.net *.split)
[01:10:20] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[01:10:20] *** Quits: manuels (~manuel@80.211.205.88) (*.net *.split)
[01:10:20] *** Quits: tk (~tk@ircpuzzles/staff/tk) (*.net *.split)
[01:10:20] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[01:10:20] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (*.net *.split)
[01:10:20] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (*.net *.split)
[01:10:20] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[01:10:20] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (*.net *.split)
[01:10:20] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[01:10:20] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[01:10:20] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[01:10:20] *** Quits: pnill (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[01:10:20] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (*.net *.split)
[01:10:20] *** Quits: nolyc (~nolyc@tinodidriksen.com) (*.net *.split)
[01:10:20] *** Quits: hirion (~hirion@user/hirion) (*.net *.split)
[01:10:20] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (*.net *.split)
[01:10:20] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[01:10:20] *** Quits: nohit (sid334887@id-334887.tinside.irccloud.com) (*.net *.split)
[01:10:20] *** Quits: nostar (~nostar@68.51.221.108) (*.net *.split)
[01:10:20] *** Quits: Telvana (~capo@user/telvana) (*.net *.split)
[01:10:20] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:ca4:2f26:b042:b2f1) (*.net *.split)
[01:10:20] *** Quits: sheb (~sheb@31.223.228.71) (*.net *.split)
[01:10:20] *** Quits: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899) (*.net *.split)
[01:10:20] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) (*.net *.split)
[01:10:21] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[01:10:21] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[01:10:21] *** Quits: entooth[m] (~entoothch@2001:470:69fc:105::1:3b1d) (*.net *.split)
[01:10:21] *** Quits: megaTherion (~therion@unix.io) (*.net *.split)
[01:10:21] *** Quits: kalven (~calvin@2a02:470:84:102::24) (*.net *.split)
[01:10:21] *** Quits: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406) (*.net *.split)
[01:10:21] *** Quits: emerent (~quassel@p200300cd571578eaba27ebfffed28a59.dip0.t-ipconnect.de) (*.net *.split)
[01:10:21] *** Quits: Rayke (rayke@user/rayke) (*.net *.split)
[01:10:21] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (*.net *.split)
[01:10:21] *** Quits: biberu (~biberu@user/biberu) (*.net *.split)
[01:10:21] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[01:10:21] *** Quits: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21) (*.net *.split)
[01:10:21] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (*.net *.split)
[01:10:21] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[01:10:21] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[01:10:21] *** Quits: causative (~halberd@user/causative) (*.net *.split)
[01:10:21] *** Quits: smeso (~smeso@user/smeso) (*.net *.split)
[01:10:21] *** Quits: tinloaf (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1) (*.net *.split)
[01:10:22] *** Quits: Griwes (~griwes@znc.reaver-project.org) (*.net *.split)
[01:10:22] *** Quits: routeveg_ (~lee@197.ip-51-195-136.eu) (*.net *.split)
[01:10:22] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (*.net *.split)
[01:10:22] *** Quits: gdd (~gdd@129.199.146.230) (*.net *.split)
[01:10:22] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (*.net *.split)
[01:10:22] *** Quits: DrMax_ (~DrMax@132.215.96.36) (*.net *.split)
[01:10:22] *** Quits: robert_ (~hellspawn@47.203.169.95) (*.net *.split)
[01:10:22] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[01:10:22] *** Quits: cpuid (~cpuid@user/cpuid) (*.net *.split)
[01:10:22] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (*.net *.split)
[01:10:22] *** Quits: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0) (*.net *.split)
[01:10:22] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (*.net *.split)
[01:10:22] *** Quits: Friithian (gunqqer@friithian.dev) (*.net *.split)
[01:10:22] *** Quits: Benett (~Benett@xnetx.de) (*.net *.split)
[01:10:22] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[01:10:22] *** Quits: edr (~edr@user/edr) (*.net *.split)
[01:10:22] *** Quits: BrandonArnold (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com) (*.net *.split)
[01:10:22] *** Quits: reda_ (~reda@user/reda) (*.net *.split)
[01:10:22] *** Quits: noent (~quassel@squint.a-oben.org) (*.net *.split)
[01:10:22] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[01:10:22] *** Quits: rogorido_ (~rogorido@mail.georeligion.org) (*.net *.split)
[01:10:22] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[01:10:22] *** Quits: bone (~bone@user/mbo) (*.net *.split)
[01:10:22] *** Quits: talisein (~talisein@user/talisein) (*.net *.split)
[01:10:22] *** Quits: purplex_ (~purplex@user/purplex) (*.net *.split)
[01:10:22] *** Quits: statusfailed (~statusfai@statusfailed.com) (*.net *.split)
[01:10:22] *** Quits: jason1234 (fltk@thunix.net) (*.net *.split)
[01:10:22] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[01:10:23] *** Quits: Ameisen (~ameisen@digitalcarbide.com) (*.net *.split)
[01:10:23] *** Quits: ElementW (~tungsten@hoodie.elementw.net) (*.net *.split)
[01:10:23] *** Quits: les (znc@user/les) (*.net *.split)
[01:10:23] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[01:10:23] *** Quits: markand (~markand@markand.fr) (*.net *.split)
[01:10:23] *** Quits: celphi_ (sid97751@user/celphi) (*.net *.split)
[01:10:23] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe) (*.net *.split)
[01:10:23] *** Quits: BluesBoy (~bboy@user/bluesboy) (*.net *.split)
[01:10:23] *** Quits: kornos_ (~kornos@2a04:ad80:0:fb::3b85) (*.net *.split)
[01:10:23] *** Quits: feldim2425_ (~feldim242@dynamic-2jh5bz5k1c2ca67lmm-pd01.res.v6.highway.a1.net) (*.net *.split)
[01:10:23] *** Quits: krzych (krzych@nroot.pl) (*.net *.split)
[01:10:23] *** Quits: tafa (~tafa@user/tafa) (*.net *.split)
[01:10:23] *** Quits: geordi (~geordi@tinodidriksen.com) (*.net *.split)
[01:10:23] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[01:10:23] *** Quits: Nixx (~quassel@bulbasaur.sjorsgielen.nl) (*.net *.split)
[01:10:23] *** Quits: ambasta (~ambasta@2001:470:69fc:105::1:3973) (*.net *.split)
[01:10:24] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[01:10:24] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (*.net *.split)
[01:10:24] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[01:10:24] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (*.net *.split)
[01:10:24] *** Quits: chiptuner (~bobby@user/chiptuner) (*.net *.split)
[01:10:24] *** Quits: preisi (~preisi@irc.prei.si) (*.net *.split)
[01:10:24] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[01:10:24] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[01:10:24] *** Quits: ERROH (~mama@user/mama) (*.net *.split)
[01:10:24] *** Quits: ollien (~ollien@ollien.com) (*.net *.split)
[01:10:24] *** Quits: rochadt (~rochadt@24.148.29.135) (*.net *.split)
[01:10:24] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[01:10:24] *** Quits: MrC (Ben@mrbenc.net) (*.net *.split)
[01:10:24] *** Quits: Flannel (~flannel@user/flannel) (*.net *.split)
[01:10:24] *** Quits: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc) (*.net *.split)
[01:10:24] *** Quits: scjg (~scjgmatri@2001:470:69fc:105::f5d6) (*.net *.split)
[01:10:24] *** Quits: anyone (~filler@a4.inai.de) (*.net *.split)
[01:10:24] *** Quits: Viewday11 (~Viewday@user/viewday) (*.net *.split)
[01:10:24] *** Quits: martiert_work (~martiert@173.38.220.37) (*.net *.split)
[01:10:24] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[01:10:25] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: kristjansson_ (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[01:10:25] *** Quits: Dragoon (~Dragoon@user/dragoon) (*.net *.split)
[01:10:25] *** Quits: lpotter (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net) (*.net *.split)
[01:10:25] *** Quits: skipper (~whatsupbo@user/scobydoo) (*.net *.split)
[01:10:25] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (*.net *.split)
[01:10:25] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (*.net *.split)
[01:10:25] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (*.net *.split)
[01:10:25] *** Quits: miklcct (~quassel@vps2.miklcct.com) (*.net *.split)
[01:10:25] *** Quits: Stewart (~stewart@2001:470:69fc:105::1:6cd) (*.net *.split)
[01:10:25] *** Quits: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd) (*.net *.split)
[01:10:25] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[01:10:25] *** Quits: ndorf (~nd@ob.noxio.us) (*.net *.split)
[01:10:25] *** Quits: michaelis (~michaelis@193.183.209.17) (*.net *.split)
[01:10:26] *** Quits: andreyv (~andrey@user/andreyv) (*.net *.split)
[01:10:26] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[01:10:26] *** Quits: lloda (~user@11-206-127-185.static.world-connect.ch) (*.net *.split)
[01:10:26] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[01:10:26] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[01:10:26] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (*.net *.split)
[01:10:26] *** Quits: shenghi (~shenghi@chrysocolla.mutablevoid.org) (*.net *.split)
[01:10:26] *** Quits: oj (oj@user/oj) (*.net *.split)
[01:10:26] *** Quits: f0xb4t (~mac@78.46.13.69) (*.net *.split)
[01:10:26] *** Quits: montpol (montpol@fine.mouses.xyz) (*.net *.split)
[01:10:26] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (*.net *.split)
[01:10:26] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[01:10:26] *** Quits: hackkitten (~hackkitte@94.31.103.136) (*.net *.split)
[01:10:26] *** Quits: djinni (~djinni@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[01:10:26] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[01:10:26] *** Quits: HeTo (henkka@beer.modeemi.fi) (*.net *.split)
[01:10:27] *** Quits: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt) (*.net *.split)
[01:10:27] *** Quits: mukti (mukti@user/mukti) (*.net *.split)
[01:10:27] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (*.net *.split)
[01:10:27] *** Quits: sideshowbarker[m (~sideshowb@2001:470:69fc:105::9a16) (*.net *.split)
[01:10:27] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (*.net *.split)
[01:10:27] *** Quits: ruediger (~ruediger@user/ruediger) (*.net *.split)
[01:10:27] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (*.net *.split)
[01:10:27] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[01:10:27] *** Quits: majors (~majors@user/majors) (*.net *.split)
[01:10:27] *** Quits: nedbat (~nedbat@python/psf/nedbat) (*.net *.split)
[01:10:27] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (*.net *.split)
[01:10:27] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[01:10:27] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[01:10:27] *** Quits: Latexi95 (late@banhammer.fi) (*.net *.split)
[01:10:27] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[01:10:28] *** Quits: dzoe (joe@joe.cz) (*.net *.split)
[01:10:28] *** Quits: klys_ (~mdasoh@show.op8.us) (*.net *.split)
[01:10:28] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[01:10:28] *** Quits: Haise0 (~haise01@user/haise01) (*.net *.split)
[01:10:28] *** Quits: riv (river@tilde.team/user/river) (*.net *.split)
[01:10:28] *** Quits: LucaTM (~LucaTM@user/lucatm) (*.net *.split)
[01:10:28] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (*.net *.split)
[01:10:28] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[01:10:28] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[01:10:28] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: stephe (sid14127@id-14127.lymington.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: Perry (~perry@coffee-break.at) (*.net *.split)
[01:10:28] *** Quits: martiert (~martiert@ti0185q160-2775.bb.online.no) (*.net *.split)
[01:10:28] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[01:10:28] *** Quits: Beastie (~lcu@user/thebeastie) (*.net *.split)
[01:10:28] *** Quits: imMute (~immute@user/immute) (*.net *.split)
[01:10:28] *** Quits: froggyc (~froggy@2.235.241.212) (*.net *.split)
[01:10:28] *** Quits: Xark_ (~Xark@47.156.11.28) (*.net *.split)
[01:10:28] *** Quits: [Brain] (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net) (*.net *.split)
[01:10:28] *** Quits: moose (~moose@user/moose) (*.net *.split)
[01:10:28] *** Quits: amiti (sid373138@id-373138.lymington.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: blueminder_ (sid143388@id-143388.tinside.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: Trollmann (~Trollmann@user/trollmann) (*.net *.split)
[01:10:29] *** Quits: m1cl[m] (~m1cl@2001:470:69fc:105::2d57) (*.net *.split)
[01:10:29] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[01:10:29] *** Quits: phoenix (phoenix@user/phoenix) (*.net *.split)
[01:10:29] *** Quits: malinus (~malinus@172.245.158.16) (*.net *.split)
[01:10:29] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (*.net *.split)
[01:10:29] *** Quits: rpav (~rpav@user/rpav) (*.net *.split)
[01:10:29] *** Quits: dartmouthed (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[01:10:30] *** Quits: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3) (*.net *.split)
[01:10:30] *** Quits: great_taste (~great_tas@190.32.235.20) (*.net *.split)
[01:10:30] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (*.net *.split)
[01:10:30] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (*.net *.split)
[01:10:30] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[01:10:30] *** Quits: spithash (~spithash@user/spithash) (*.net *.split)
[01:10:30] *** Quits: teepee (~teepee@openscad/teepee) (*.net *.split)
[01:10:30] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[01:10:30] *** Quits: bindu (~bindu@user/bindu) (*.net *.split)
[01:10:30] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[01:10:30] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (*.net *.split)
[01:10:30] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (*.net *.split)
[01:11:51] *** Joins: proller (~p@2a02:6b8:b081:7202::1:36)
[01:13:51] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[01:14:08] *** Joins: badone (~badone@209.132.189.136)
[01:14:18] *** Joins: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt)
[01:14:18] *** Joins: Colt (~Colt@user/colt)
[01:14:18] *** Joins: fdgfe (~fdgfe@178.49.152.151)
[01:14:18] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[01:14:18] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:14:18] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[01:14:18] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[01:14:18] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[01:14:18] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[01:14:18] *** Joins: bbbbbb (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net)
[01:14:18] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:14:18] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[01:14:18] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[01:14:18] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a6600e8a7e220a1554b8b.ipv6.abo.wanadoo.fr)
[01:14:18] *** Joins: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc)
[01:14:18] *** Joins: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21)
[01:14:18] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[01:14:18] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[01:14:18] *** Joins: Betal (~Betal@user/betal)
[01:14:18] *** Joins: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3)
[01:14:18] *** Joins: anddam (~anddam@user/anddam)
[01:14:18] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:14:18] *** Joins: Raziel (~Raziel@user/raziel)
[01:14:18] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[01:14:18] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[01:14:18] *** Joins: Linux_77 (~7Linux7@186.233.182.193)
[01:14:18] *** Joins: great_taste (~great_tas@190.32.235.20)
[01:14:18] *** Joins: hightower2 (~hightower@213.147.110.20)
[01:14:18] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[01:14:18] *** Joins: fputs (~fputs@67.59.83.166)
[01:14:18] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[01:14:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:14:18] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[01:14:18] *** Joins: robod34 (Username@79.113.195.239)
[01:14:18] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[01:14:18] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[01:14:18] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[01:14:18] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[01:14:18] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[01:14:18] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[01:14:18] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[01:14:18] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[01:14:18] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[01:14:18] *** Joins: mel (~caramel@user/caramel)
[01:14:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:14:18] *** Joins: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com)
[01:14:18] *** Joins: slidercrank (~slidercra@user/slidercrank)
[01:14:18] *** strontium.libera.chat sets mode: +v npaperbot
[01:14:18] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:14:18] *** Joins: cursey (~cursey@user/cursey)
[01:14:18] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:14:18] *** Joins: letto2 (~letto@188.25.118.240)
[01:14:18] *** Joins: Burgundy (~yomon@79.115.213.171)
[01:14:18] *** Joins: plastico (~plastico@neomutt/plastico)
[01:14:18] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:14:18] *** Joins: LucaTM (~LucaTM@user/lucatm)
[01:14:18] *** Joins: rahl (~rahl@102.114.49.104)
[01:14:18] *** Joins: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi)
[01:14:18] *** Joins: luizfrds1 (~Luiz@152.250.243.147)
[01:14:18] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[01:14:18] *** Joins: manx (xuew@p200300e18f239d00022215fffe03cf97.dip0.t-ipconnect.de)
[01:14:18] *** Joins: teepee (~teepee@openscad/teepee)
[01:14:18] *** Joins: spithash (~spithash@user/spithash)
[01:14:18] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[01:14:18] *** Joins: moberg (~moberg@luke.millenniumfalcon.org)
[01:14:18] *** Joins: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482)
[01:14:18] *** Joins: Chaser (~Chaser@user/chaser)
[01:14:18] *** Joins: scjg (~scjgmatri@2001:470:69fc:105::f5d6)
[01:14:18] *** Joins: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com)
[01:14:18] *** Joins: Ameisen (~ameisen@digitalcarbide.com)
[01:14:18] *** Joins: ElementW (~tungsten@hoodie.elementw.net)
[01:14:18] *** Joins: les (znc@user/les)
[01:14:18] *** Joins: markand (~markand@markand.fr)
[01:14:18] *** Joins: anyone (~filler@a4.inai.de)
[01:14:18] *** Joins: Isthmusi (~Isthmus@user/isveni)
[01:14:18] *** Joins: theglass (~glass@user/theglass)
[01:14:18] *** Joins: merry (~mary@user/merry)
[01:14:18] *** Joins: nolyc (~nolyc@tinodidriksen.com)
[01:14:18] *** Joins: randm (~randm@user/randm)
[01:14:18] *** Joins: deepy (deepy@user/deepy)
[01:14:18] *** Joins: cncr04s (~cncr04s@afxr.net)
[01:14:18] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[01:14:18] *** Joins: Dijky (~Dijky@user/dijky)
[01:14:18] *** Joins: undeclared (nullx@user/undeclared)
[01:14:18] *** Joins: dextaa (~DV@user/dextaa)
[01:14:18] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[01:14:18] *** Joins: urdh (~urdh@user/urdh)
[01:14:18] *** Joins: raekye (~raekye@creatifcubed.com)
[01:14:18] *** Joins: sonic (~sonic@user/sonic)
[01:14:18] *** Joins: hirion (~hirion@user/hirion)
[01:14:18] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[01:14:18] *** Joins: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com)
[01:14:18] *** Joins: Learath2 (~learath2@user/learath2)
[01:14:18] *** Joins: Brewster (~Brewster@104.145.226.5)
[01:14:18] *** Joins: tobs (~tobs@taboege.de)
[01:14:18] *** strontium.libera.chat sets mode: +v nolyc
[01:14:18] *** Joins: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de)
[01:14:18] *** Joins: zinc_ (~zinc@163.ip-51-254-203.eu)
[01:14:18] *** Joins: wolf2k_huh (~wolfman20@2600:1700:3211:4140:348d:300c:c36b:9213)
[01:14:18] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[01:14:18] *** Joins: nohit (sid334887@id-334887.tinside.irccloud.com)
[01:14:18] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:14:18] *** Joins: Cahaan (~Cahaan@user/cahaan)
[01:14:18] *** Joins: nostar (~nostar@68.51.221.108)
[01:14:18] *** Joins: shailangsa (~shailangs@host86-162-150-209.range86-162.btcentralplus.com)
[01:14:18] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[01:14:18] *** Joins: manuels (~manuel@80.211.205.88)
[01:14:18] *** Joins: bindu (~bindu@user/bindu)
[01:14:18] *** Joins: Soni (~quassel@autistic.space)
[01:14:18] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[01:14:18] *** Joins: pizdets (~pizdets@183.182.110.253)
[01:14:18] *** Joins: useretail (~useretail@185.132.19.151)
[01:14:18] *** Joins: millido (~millido@84.210.150.128)
[01:14:18] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[01:14:18] *** Joins: Telvana (~capo@user/telvana)
[01:14:18] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:ca4:2f26:b042:b2f1)
[01:14:18] *** Joins: sheb (~sheb@31.223.228.71)
[01:14:18] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[01:14:18] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[01:14:18] *** Joins: Sadale (~Sadale@user/sadale)
[01:14:18] *** Joins: Viewday11 (~Viewday@user/viewday)
[01:14:18] *** Joins: Dreg- (~Dreg@fr33project.org)
[01:14:18] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[01:14:18] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[01:14:18] *** Joins: martiert_work (~martiert@173.38.220.37)
[01:14:18] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:14:18] *** Joins: riv (river@tilde.team/user/river)
[01:14:18] *** Joins: montpol (montpol@fine.mouses.xyz)
[01:14:18] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[01:14:18] *** Joins: llh (~llh@user/llh)
[01:14:18] *** Joins: Albright (~Albright@149.28.13.173)
[01:14:18] *** Joins: EdFletcher (~PKD@user/edfletcher)
[01:14:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:14:18] *** Joins: rvalue (~rvalue@user/rvalue)
[01:14:18] *** Joins: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[01:14:18] *** Joins: Dizidentu (~aresg@modemcable105.134-19-135.mc.videotron.ca)
[01:14:18] *** Joins: ivzhh (~ivzhh@S0106f85e42a00a1f.cg.shawcable.net)
[01:14:18] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[01:14:18] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[01:14:18] *** Joins: NEYi (~NEYi@109.251.216.38)
[01:14:18] *** Joins: mintograde (~mintograd@47.201.5.61)
[01:14:18] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[01:14:18] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[01:14:18] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:14:18] *** Joins: fluter (~fluter@user/fluter)
[01:14:18] *** Joins: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899)
[01:14:18] *** Joins: blo_ (~blo@ipv6.blo.ski)
[01:14:18] *** Joins: Praise (~Fat@user/praise)
[01:14:18] *** Joins: celphi_ (sid97751@user/celphi)
[01:14:18] *** Joins: buhman (sid411355@user/buhman)
[01:14:18] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[01:14:18] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[01:14:18] *** Joins: stephe (sid14127@id-14127.lymington.irccloud.com)
[01:14:18] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[01:14:18] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[01:14:18] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[01:14:18] *** Joins: kristjansson_ (sid126207@id-126207.tinside.irccloud.com)
[01:14:18] *** Joins: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406)
[01:14:18] *** Joins: computerquip (sid423484@user/computerquip)
[01:14:18] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[01:14:18] *** Joins: causative (~halberd@user/causative)
[01:14:18] *** Joins: Perry (~perry@coffee-break.at)
[01:14:18] *** Joins: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe)
[01:14:18] *** Joins: martiert (~martiert@ti0185q160-2775.bb.online.no)
[01:14:18] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[01:14:18] *** Joins: BluesBoy (~bboy@user/bluesboy)
[01:14:18] *** Joins: Beastie (~lcu@user/thebeastie)
[01:14:18] *** Joins: greenbagels (~gb@user/greenbagels)
[01:14:18] *** Joins: Alipha (~AliphaX@user/alipha)
[01:14:18] *** Joins: Dragoon (~Dragoon@user/dragoon)
[01:14:18] *** Joins: Moult (~sevenstro@sevenstrokes.net)
[01:14:18] *** Joins: djinni (~djinni@static.38.6.217.95.clients.your-server.de)
[01:14:18] *** Joins: webstran- (~webstrand@user/webstrand)
[01:14:18] *** Joins: smeso (~smeso@user/smeso)
[01:14:18] *** Joins: tinloaf (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1)
[01:14:18] *** Joins: HeTo (henkka@beer.modeemi.fi)
[01:14:18] *** Joins: Griwes (~griwes@znc.reaver-project.org)
[01:14:18] *** Joins: m42e (~m42e@pb42.de)
[01:14:18] *** Joins: routeveg_ (~lee@197.ip-51-195-136.eu)
[01:14:18] *** Joins: supernov1h (~supernova@mail.ijk.nz)
[01:14:18] *** Joins: ethoxy_ (~caretaker@cx21.havox.ru)
[01:14:18] *** Joins: eck (~root@user/eck)
[01:14:18] *** Joins: dongcarl (~dongcarl@70.107.207.192)
[01:14:18] *** Joins: zopsi_ (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[01:14:18] *** Joins: jkl1337 (~jkl@user/jkl)
[01:14:18] *** Joins: kornos_ (~kornos@2a04:ad80:0:fb::3b85)
[01:14:18] *** Joins: feldim2425_ (~feldim242@dynamic-2jh5bz5k1c2ca67lmm-pd01.res.v6.highway.a1.net)
[01:14:18] *** Joins: tonitch (~tonitch@user/tonitch)
[01:14:18] *** Joins: flynn (~mcbloch@user/flynn)
[01:14:18] *** Joins: Cienisty (Cienisty@user/cienisty)
[01:14:18] *** Joins: dhch (~dhch@185.213.154.168)
[01:14:18] *** Joins: Fairy (~Fairy@2001:464a:4992:0:78b9:dd77:b9a4:c92d)
[01:14:18] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[01:14:18] *** Joins: lpotter (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net)
[01:14:18] *** Joins: Cyp_ (~cyp@213.237.85.9)
[01:14:18] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:14:18] *** Joins: krzych (krzych@nroot.pl)
[01:14:18] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[01:14:18] *** Joins: gdd (~gdd@129.199.146.230)
[01:14:18] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[01:14:18] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[01:14:18] *** Joins: taiyu (~taiyu@user/taiyu)
[01:14:18] *** Joins: skipper (~whatsupbo@user/scobydoo)
[01:14:18] *** Joins: abraham (~abraham@143.244.185.86)
[01:14:18] *** Joins: BucetaPeluda (~istupy@2620:0:1003:206:9819:cc89:d061:6815)
[01:14:18] *** Joins: HvszrStykp (~X@81.171.62.87)
[01:14:18] *** Joins: mukti (mukti@user/mukti)
[01:14:18] *** Joins: LittleFox (~littlefox@rondra.lf-net.org)
[01:14:18] *** Joins: pa (~pah@user/pah)
[01:14:18] *** Joins: DrMax_ (~DrMax@132.215.96.36)
[01:14:18] *** Joins: ahlk (~user@2600:1700:31c0:3a10::43)
[01:14:18] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[01:14:18] *** Joins: robert_ (~hellspawn@47.203.169.95)
[01:14:18] *** Joins: SKiTZO_ (~dark@64.89-10-146.nextgentel.com)
[01:14:18] *** Joins: jiffe (~jiffe@mail.nsab.us)
[01:14:18] *** Joins: drmeister (sid45147@id-45147.ilkley.irccloud.com)
[01:14:18] *** Joins: scruffyfurn (scruffyfur@turbous.xshellz.com)
[01:14:18] *** Joins: imMute (~immute@user/immute)
[01:14:18] *** Joins: froggyc (~froggy@2.235.241.212)
[01:14:18] *** Joins: Xark_ (~Xark@47.156.11.28)
[01:14:18] *** Joins: [Brain] (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net)
[01:14:18] *** Joins: moose (~moose@user/moose)
[01:14:18] *** Joins: tafa (~tafa@user/tafa)
[01:14:18] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[01:14:18] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[01:14:18] *** Joins: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net)
[01:14:18] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[01:14:18] *** Joins: InPhase (~InPhase@openscad/inphase)
[01:14:18] *** Joins: Ara (~Ara@user/ara)
[01:14:18] *** Joins: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu)
[01:14:18] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[01:14:18] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[01:14:18] *** Joins: cpuid (~cpuid@user/cpuid)
[01:14:18] *** Joins: amiti (sid373138@id-373138.lymington.irccloud.com)
[01:14:18] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[01:14:18] *** Joins: blueminder_ (sid143388@id-143388.tinside.irccloud.com)
[01:14:18] *** Joins: lhtseng (sid15322@id-15322.helmsley.irccloud.com)
[01:14:18] *** Joins: tcsc (sid145321@5.254.36.59)
[01:14:18] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[01:14:18] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[01:14:18] *** Joins: IUSR (sid348938@id-348938.hampstead.irccloud.com)
[01:14:18] *** Joins: glenfe (sid231748@user/glenfe)
[01:14:18] *** Joins: cengiz_io (sid223191@id-223191.ilkley.irccloud.com)
[01:14:18] *** Joins: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com)
[01:14:18] *** Joins: renopt (~renopt@lisp.us.to)
[01:14:18] *** Joins: jellie (~luv_panda@user/jellie)
[01:14:18] *** Joins: xcm_ (~xcm@user/xcm)
[01:14:18] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[01:14:18] *** Joins: elemongw (~elemongw@20.107.36.50)
[01:14:18] *** Joins: entooth[m] (~entoothch@2001:470:69fc:105::1:3b1d)
[01:14:18] *** Joins: Trollmann (~Trollmann@user/trollmann)
[01:14:18] *** Joins: Gamah (~quassel@gamah.net)
[01:14:18] *** Joins: headline (sid102736@tinside.irccloud.com)
[01:14:18] *** Joins: termos (sid18647@helmsley.irccloud.com)
[01:14:18] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[01:14:18] *** Joins: immibis (~hexchat@62.156.144.218)
[01:14:18] *** Joins: anzu (~anzu@melkki.cs.helsinki.fi)
[01:14:18] *** Joins: sideshowbarker[m (~sideshowb@2001:470:69fc:105::9a16)
[01:14:18] *** Joins: megaTherion (~therion@unix.io)
[01:14:18] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[01:14:18] *** Joins: irc-open-up (bounce@bounce.nastycode.com)
[01:14:18] *** Joins: derwolf (~DerWolf@2a01:4f8:c0c:554a::1)
[01:14:18] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[01:14:18] *** Joins: vancz (~vancz@user/vancz)
[01:14:18] *** Joins: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca)
[01:14:18] *** Joins: mebus (~mebus@2a00:8a60:e019:10de::ac22)
[01:14:18] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[01:14:18] *** Joins: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net)
[01:14:18] *** Joins: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b)
[01:14:18] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[01:14:18] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[01:14:18] *** Joins: geordi (~geordi@tinodidriksen.com)
[01:14:18] *** Joins: Nixx (~quassel@bulbasaur.sjorsgielen.nl)
[01:14:18] *** Joins: Xizor_ (~Xizor@151.ip-51-68-121.eu)
[01:14:18] *** Joins: f0xb4t (~mac@78.46.13.69)
[01:14:18] *** Joins: kalven (~calvin@2a02:470:84:102::24)
[01:14:18] *** Joins: emerent (~quassel@p200300cd571578eaba27ebfffed28a59.dip0.t-ipconnect.de)
[01:14:18] *** Joins: miklcct (~quassel@vps2.miklcct.com)
[01:14:18] *** Joins: ambasta (~ambasta@2001:470:69fc:105::1:3973)
[01:14:18] *** Joins: Rayke (rayke@user/rayke)
[01:14:18] *** Joins: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0)
[01:14:18] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[01:14:18] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:14:18] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[01:14:18] *** strontium.libera.chat sets mode: +v geordi
[01:14:18] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[01:14:18] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[01:14:18] *** Joins: equinox[m] (~momoshiki@2001:470:69fc:105::fe92)
[01:14:18] *** Joins: m1cl[m] (~m1cl@2001:470:69fc:105::2d57)
[01:14:18] *** Joins: Stewart (~stewart@2001:470:69fc:105::1:6cd)
[01:14:18] *** Joins: JoeyLong[m] (~tezzy26ma@2001:470:69fc:105::1:3333)
[01:14:18] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[01:14:18] *** Joins: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd)
[01:14:18] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[01:14:18] *** Joins: ruediger (~ruediger@user/ruediger)
[01:14:18] *** Joins: b_jonas (~x@catv-176-63-4-16.catv.broadband.hu)
[01:14:18] *** Joins: daswf852 (~daswf852@user/daswf852)
[01:14:18] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:14:18] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[01:14:18] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[01:14:18] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[01:14:18] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[01:14:18] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[01:14:18] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[01:14:18] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[01:14:18] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[01:14:18] *** Joins: Oxyd (~oxyd@user/oxyd)
[01:14:18] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[01:14:18] *** Joins: rpav (~rpav@user/rpav)
[01:14:18] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[01:14:18] *** Joins: Haise0 (~haise01@user/haise01)
[01:14:18] *** Joins: Karyon (~Karyon@user/karyon)
[01:14:18] *** Joins: klys_ (~mdasoh@show.op8.us)
[01:14:18] *** Joins: dzoe (joe@joe.cz)
[01:14:18] *** Joins: [R] (~rs@genoce.org)
[01:14:18] *** Joins: Latexi95 (late@banhammer.fi)
[01:14:18] *** Joins: Artea (~Lufia@artea.com.pt)
[01:14:18] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[01:14:18] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[01:14:18] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[01:14:18] *** Joins: majors (~majors@user/majors)
[01:14:18] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[01:14:18] *** Joins: oj (oj@user/oj)
[01:14:18] *** Joins: shenghi (~shenghi@chrysocolla.mutablevoid.org)
[01:14:18] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[01:14:18] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[01:14:18] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[01:14:18] *** Joins: Flannel (~flannel@user/flannel)
[01:14:18] *** Joins: MrC (Ben@mrbenc.net)
[01:14:18] *** Joins: sebbu (~sebbu@user/sebbu)
[01:14:18] *** Joins: lloda (~user@11-206-127-185.static.world-connect.ch)
[01:14:18] *** Joins: rochadt (~rochadt@24.148.29.135)
[01:14:18] *** Joins: wyre (~wyre@user/wyre)
[01:14:18] *** Joins: ollien (~ollien@ollien.com)
[01:14:18] *** Joins: ERROH (~mama@user/mama)
[01:14:18] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[01:14:18] *** Joins: andreyv (~andrey@user/andreyv)
[01:14:18] *** Joins: michaelis (~michaelis@193.183.209.17)
[01:14:18] *** Joins: ndorf (~nd@ob.noxio.us)
[01:14:18] *** Joins: enyc (~enyc@user/enyc)
[01:14:18] *** Joins: preisi (~preisi@irc.prei.si)
[01:14:18] *** Joins: chiptuner (~bobby@user/chiptuner)
[01:14:18] *** Joins: orkim (~orkim@user/orkim)
[01:14:18] *** Joins: jason1234 (fltk@thunix.net)
[01:14:18] *** Joins: statusfailed (~statusfai@statusfailed.com)
[01:14:18] *** Joins: purplex_ (~purplex@user/purplex)
[01:14:18] *** Joins: talisein (~talisein@user/talisein)
[01:14:18] *** Joins: bone (~bone@user/mbo)
[01:14:18] *** Joins: dzz007 (~dzz007@user/dzz007)
[01:14:18] *** Joins: rogorido_ (~rogorido@mail.georeligion.org)
[01:14:18] *** Joins: polyrob (~rob@user/polyrob)
[01:14:18] *** Joins: noent (~quassel@squint.a-oben.org)
[01:14:18] *** Joins: reda_ (~reda@user/reda)
[01:14:18] *** Joins: BrandonArnold (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com)
[01:14:18] *** Joins: edr (~edr@user/edr)
[01:14:18] *** Joins: dansan (~daniel@75.81.148.51)
[01:14:18] *** Joins: biberu (~biberu@user/biberu)
[01:14:18] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[01:14:18] *** Joins: Benett (~Benett@xnetx.de)
[01:14:18] *** Joins: Friithian (gunqqer@friithian.dev)
[01:14:18] *** Joins: malinus (~malinus@172.245.158.16)
[01:14:18] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[01:14:18] *** Joins: Exa (exa@irc.moe)
[01:14:18] *** Joins: phoenix (phoenix@user/phoenix)
[01:14:18] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[01:14:29] *** Quits: Spydar007 (~spydar007@user/spydar007) (Max SendQ exceeded)
[01:14:29] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:15:14] *** Joins: Spydar007 (~spydar007@user/spydar007)
[01:15:52] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[01:16:04] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 256 seconds)
[01:16:16] *** Joins: Colt (~Colt@user/colt)
[01:18:52] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[01:19:19] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[01:21:00] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:24:42] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:25:31] *** Joins: jplejacq (~jplejacq@24.224.100.40)
[01:27:26] *** Joins: Enitin (~Enitin@82.102.22.84)
[01:27:49] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[01:28:28] *** Quits: badone (~badone@209.132.189.136) (Ping timeout: 264 seconds)
[01:29:02] *** Joins: badone (~badone@209.132.189.146)
[01:33:28] *** Quits: nostar (~nostar@68.51.221.108) (Remote host closed the connection)
[01:33:43] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[01:34:49] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[01:36:17] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:36:21] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[01:36:59] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[01:38:48] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:39:00] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:39:00] *** ChanServ sets mode: +v npaperbot
[01:39:25] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Read error: No route to host)
[01:39:52] <anddam> Alipha: you are correct, my fault while reducing the example
[01:41:39] *** Joins: seninha (~seninha@user/seninha)
[01:45:49] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:47:49] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[01:49:40] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[01:50:30] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[01:52:17] *** Quits: hightower2 (~hightower@213.147.110.20) (Ping timeout: 256 seconds)
[01:53:31] *** Quits: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3) (Remote host closed the connection)
[01:56:26] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[01:58:11] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 252 seconds)
[02:00:16] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 264 seconds)
[02:03:13] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[02:03:17] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:03:29] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[02:06:59] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[02:07:20] *** PJBoy is now known as Guest3059
[02:07:20] *** Quits: Guest3059 (~PJBoy@user/pjboy) (Killed (tantalum.libera.chat (Nickname regained by services)))
[02:07:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:08:03] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:08:34] <CarloWood> PJBoy: you pointed out the tags things to me right?
[02:08:53] <PJBoy> which thing?
[02:08:57] <PJBoy> quite possibly
[02:09:13] <CarloWood> I now use this: template<typename T> class Badge { friend T; Badge() {} };
[02:09:33] <CarloWood> I was wondering if I can extend it to accept more than one friend.
[02:09:48] <CarloWood> template<typename... T> class Badge { friend T; Badge() {} };
[02:10:36] *** Joins: seninha (~seninha@user/seninha)
[02:10:42] <CarloWood> { Badge<A, B> b; } struct A {}; struct B {};  template<typename... T> class Badge { friend T; Badge() {} };
[02:10:42] <geordi> error: parameter packs not expanded with '...':
[02:10:50] <CarloWood> { Badge<A, B> b; } struct A {}; struct B {};  template<typename... T> class Badge { friend T...; Badge() {} };
[02:10:50] <geordi> error: expected unqualified-id before '...' token
[02:10:52] <CarloWood> :)
[02:12:03] <PJBoy> looks like it can't be done
[02:13:02] <PJBoy> https://stackoverflow.com/questions/23305999/using-variadic-templates-to-specify-friend-classes has an alternative
[02:16:31] <CarloWood> Can't use virtual.
[02:16:37] <CarloWood> Maybe this works...
[02:17:26] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:20:44] <CarloWood> { F1 f; f.create(); } struct F1; struct F2; class B { B(){} friend F1; }; struct C : B { using B::B; C(){} friend F2; }; struct F1 { C create() { return {}; } }; struct F2 {};
[02:20:44] <geordi> error: 'B::B()' is private within this context
[02:21:45] <CarloWood> I hoped the friend of B could still use B::B() when C used using :)
[02:23:33] <CarloWood> Is it possible to unpack the types of a template pack one by one by hardcoded digit?
[02:24:26] <anyone> if binary digits are your thing
[02:25:20] <CarloWood> Something like: template<typename... Args> struct A { friend Args::get<1>; ... };  ?
[02:26:26] <CarloWood> https://stackoverflow.com/questions/15953139/get-the-nth-type-of-variadic-template-templates
[02:27:32] <anyone> that would not be unpacking them "one by one"
[02:27:52] <CarloWood> I meant manually
[02:28:01] <CarloWood> so then I'd just do a list of friends
[02:28:05] <CarloWood> one by one :)
[02:29:40] <kalven> you can stick the types in a std::tuple and use tuple_element<Index, Tuple> to get the type
[02:30:05] *** Joins: sav (~savio@177.12.48.155)
[02:30:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Ping timeout: 264 seconds)
[02:30:29] *** sav is now known as Guest999
[02:31:02] <CarloWood> What does that return if you use an index that is too large?
[02:31:26] <kalven> I'd expect it would fail to compile?
[02:31:46] <CarloWood> How can I get the number of arguments?
[02:32:02] <kalven> std::tuple_size
[02:32:24] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:33:48] *** Joins: pizdets_ (~pizdets@183.182.110.241)
[02:34:06] *** Quits: pizdets (~pizdets@183.182.110.253) (Ping timeout: 245 seconds)
[02:34:38] *** Joins: rgrinberg (~textual@200.5.63.76)
[02:36:05] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[02:37:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[02:38:56] <CarloWood> This worked https://bpa.st/NYWA
[02:39:09] <CarloWood> Could add more friend of course.. but only need two now.
[02:39:23] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[02:39:43] <CarloWood> I didn't want to have to include <tuple>
[02:39:51] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Remote host closed the connection)
[02:40:30] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[02:45:05] *** Quits: Guest999 (~savio@177.12.48.155) (Quit: Leaving)
[02:45:47] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[02:49:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:52:33] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Client Quit)
[02:53:08] *** Joins: dld (~dld@107.126.252.194)
[02:58:08] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[02:58:28] *** Quits: badone (~badone@209.132.189.146) (Ping timeout: 264 seconds)
[03:01:09] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:01:50] *** Joins: badone (~badone@209.132.189.152)
[03:02:19] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:02:40] *** Quits: proller (~p@2a02:6b8:b081:7202::1:36) (Ping timeout: 264 seconds)
[03:05:25] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:07:30] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[03:07:45] *** Joins: rgrinberg (~textual@200.5.63.76)
[03:08:04] *** Quits: dld (~dld@107.126.252.194) (Ping timeout: 264 seconds)
[03:08:33] *** Joins: dld (~dld@107.126.253.134)
[03:09:36] *** Joins: skgorg (~skgorg@bras-base-toroon0628w-grc-56-174-95-83-229.dsl.bell.ca)
[03:16:25] *** Joins: proller (~p@80.240.216.69)
[03:19:33] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[03:21:47] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[03:22:26] *** Joins: fassl (~fassl@2a02:8388:1987:9380:7d37:f3ce:8f29:dfc3)
[03:23:20] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:23:42] *** Joins: rpnx_ (~rpnx@2601:c9:c000:20a8:d5e4:57a3:667c:15d6)
[03:24:19] *** Quits: fassl (~fassl@2a02:8388:1987:9380:7d37:f3ce:8f29:dfc3) (Client Quit)
[03:39:23] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[03:39:39] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:40:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[03:42:05] *** Joins: chozorho (~chozorho@2601:146:300:c30::d03)
[03:45:45] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[03:46:39] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[03:49:41] *** Joins: Atque (~Atque@user/atque)
[03:50:23] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[03:51:45] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[03:51:58] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[03:52:32] *** Joins: chenqisu1 (~03cia7d@183.217.200.156)
[03:53:41] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 252 seconds)
[03:54:16] *** Quits: dld (~dld@107.126.253.134) (Ping timeout: 264 seconds)
[03:57:22] <Alipha> Gamah: just `firstFunc();`. If you want to be unnecessarily explicit, `this->firstFunc();`
[03:57:25] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[04:02:40] *** Quits: jkaye (~jkaye@2601:281:8300:7530:7309:f677:c771:6123) (Ping timeout: 264 seconds)
[04:05:08] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[04:05:54] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[04:06:16] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 264 seconds)
[04:07:03] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:07:10] *** Quits: great_taste (~great_tas@190.32.235.20) (Ping timeout: 256 seconds)
[04:08:44] *** Joins: malloy (~jimery@116.30.222.115)
[04:15:02] *** Joins: rgrinberg (~textual@200.5.63.76)
[04:16:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:16:28] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[04:18:16] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 264 seconds)
[04:20:12] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[04:20:58] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:23:49] *** Quits: skgorg (~skgorg@bras-base-toroon0628w-grc-56-174-95-83-229.dsl.bell.ca) (Quit: WeeChat 3.3)
[04:29:57] *** Joins: orthoplex64 (~crm@70.120.0.94)
[04:32:02] *** Joins: frost (~frost@user/frost)
[04:32:57] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:853e:1440:14f7:dc92) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:33:07] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[04:43:08] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:44:41] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[04:46:41] *** Quits: daswf852 (~daswf852@user/daswf852) (Quit: Ping timeout (120 seconds))
[04:47:25] *** Joins: daswf852 (~daswf852@user/daswf852)
[04:49:27] *** Quits: daswf852 (~daswf852@user/daswf852) (Client Quit)
[04:50:40] *** Quits: Dave_R (~Dave_R@home.amunra.co.uk) (Ping timeout: 264 seconds)
[04:51:52] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:55:15] *** Joins: daswf852 (~daswf852@user/daswf852)
[04:59:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[05:00:57] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:854e:d334:a63f:e8ed)
[05:01:15] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[05:04:46] *** Joins: Atque (~Atque@user/atque)
[05:05:13] *** Joins: frost (~frost@user/frost)
[05:07:18] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[05:07:56] *** Quits: jplejacq (~jplejacq@24.224.100.40) (Ping timeout: 252 seconds)
[05:08:50] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:11:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:13:59] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 252 seconds)
[05:13:59] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[05:24:37] *** Joins: badone_ (~badone@209.132.189.146)
[05:24:50] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Quit: Leaving)
[05:25:28] *** Quits: badone (~badone@209.132.189.152) (Ping timeout: 264 seconds)
[05:28:38] *** Joins: badone (~badone@209.132.189.152)
[05:29:40] *** Quits: badone_ (~badone@209.132.189.146) (Ping timeout: 264 seconds)
[05:38:48] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:38:56] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:38:56] *** ChanServ sets mode: +v npaperbot
[05:53:35] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a6600e8a7e220a1554b8b.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[05:57:15] *** Joins: arandomcomrade (~arandomco@user/arandomcomrade)
[05:57:19] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[06:02:12] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:08:53] *** blo_ is now known as blo
[06:08:53] *** Quits: blo (~blo@ipv6.blo.ski) (Changing host)
[06:08:53] *** Joins: blo (~blo@user/blo)
[06:11:42] *** Quits: chozorho (~chozorho@2601:146:300:c30::d03) (Ping timeout: 268 seconds)
[06:12:24] *** Joins: chozorho (~chozorho@2601:146:300:c30::de41)
[06:14:47] *** Joins: chenqisu12 (~03cia7d@183.217.200.156)
[06:17:15] *** Quits: chenqisu1 (~03cia7d@183.217.200.156) (Ping timeout: 252 seconds)
[06:27:35] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:00] *** Joins: ferdna (~ferdna@user/ferdna)
[06:37:59] *** Joins: jkaye (~jkaye@2601:281:8300:7530:a6c:9e86:10cd:6e96)
[06:39:44] *** Joins: millido (~millido@84.210.150.128)
[06:56:45] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[07:15:16] *** Quits: jkaye (~jkaye@2601:281:8300:7530:a6c:9e86:10cd:6e96) (Ping timeout: 264 seconds)
[07:15:32] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:17:33] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[07:19:26] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[07:19:38] *** Quits: Neal__ (~nshire@47.146.41.156) (Quit: Leaving)
[07:24:11] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 265 seconds)
[07:24:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:24:57] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[07:28:19] *** Joins: rgrinberg (~textual@200.5.63.76)
[07:28:41] *** Quits: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net) (Quit: ZNC 1.7.3 - https://znc.in)
[07:28:56] *** Joins: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net)
[07:30:23] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 252 seconds)
[07:41:21] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[07:52:11] *** Joins: great_taste (~great_tas@190.32.235.20)
[07:53:47] *** Quits: pizdets_ (~pizdets@183.182.110.241) (Read error: Connection reset by peer)
[07:54:37] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:e8c0:8699:e8ec:6ac5)
[07:55:03] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:59:09] *** Joins: dld (~dld@73.61.8.208)
[08:01:24] *** Joins: smeso (~smeso@user/smeso)
[08:03:10] *** Joins: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4)
[08:06:52] *** Quits: dld (~dld@73.61.8.208) (Ping timeout: 264 seconds)
[08:08:30] *** Joins: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51)
[08:11:57] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:17:41] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (Ping timeout: 252 seconds)
[08:22:10] *** Quits: fdgfe (~fdgfe@178.49.152.151) (Ping timeout: 256 seconds)
[08:27:02] *** Joins: byku (~byku@host-92-11-33-142.as13285.net)
[08:28:04] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[08:28:12] *** Quits: byku (~byku@host-92-11-33-142.as13285.net) (Client Quit)
[08:35:48] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:854e:d334:a63f:e8ed) (Quit: Client closed)
[08:41:30] *** Quits: great_taste (~great_tas@190.32.235.20) (Changing host)
[08:41:30] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[08:44:39] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:47:07] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[08:50:40] *** Quits: arandomcomrade (~arandomco@user/arandomcomrade) (Quit: Leaving)
[08:55:34] *** Joins: sereg (~sereg@37.120.205.197)
[08:57:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:02:43] *** Joins: reumeth (~reumeth@user/reumeth)
[09:05:19] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[09:09:06] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:13:08] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[09:16:41] *** Joins: Dru_ (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[09:17:54] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[09:18:47] *** Quits: Cyp_ (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[09:19:06] *** Joins: Cyp_ (~cyp@213.237.85.9)
[09:20:04] *** Quits: Dru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Ping timeout: 264 seconds)
[09:20:08] *** Joins: malloy (~jimery@116.30.222.115)
[09:21:14] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:22:15] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[09:24:44] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:e8c0:8699:e8ec:6ac5) (Quit: Leaving)
[09:29:17] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (Quit: WeeChat 3.3)
[09:29:35] *** Quits: Dru_ (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[09:36:01] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[09:38:42] *** Joins: nshire (~nshire@user/nshire)
[09:38:49] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:38:57] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:38:57] *** ChanServ sets mode: +v npaperbot
[09:38:59] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:39:24] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:45:41] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[09:47:26] *** Joins: xkuru (~xkuru@user/xkuru)
[09:47:52] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:56:17] *** Joins: comlord (~Thunderbi@121.227.116.10)
[09:58:00] *** Joins: comlord1 (~Thunderbi@121.227.116.10)
[09:58:49] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[10:00:04] *** Joins: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com)
[10:00:04] *** Quits: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com) (Changing host)
[10:00:04] *** Joins: PJBoy (~PJBoy@user/pjboy)
[10:00:52] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 264 seconds)
[10:00:52] *** comlord1 is now known as comlord
[10:13:22] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:13:28] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[10:14:06] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:18:20] *** Joins: pulse (~pulse@user/pulse)
[10:20:13] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:22:34] *** Joins: Tas-sos (~Tas-sos@ppp005054041212.access.hol.gr)
[10:23:52] *** Joins: hightower2 (~hightower@213.147.110.20)
[10:25:45] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[10:28:36] *** Quits: hightower2 (~hightower@213.147.110.20) (Remote host closed the connection)
[10:28:52] *** Joins: hightower2 (~hightower@213.147.110.20)
[10:29:20] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[10:32:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:33:44] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[10:33:52] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[10:36:24] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:38:34] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[10:39:49] *** Quits: chozorho (~chozorho@2601:146:300:c30::de41) (Quit: good night again)
[10:41:36] *** Joins: Lazenca (~lazenca@user/lazenca)
[10:44:55] *** Quits: ethoxy_ (~caretaker@cx21.havox.ru) (Quit: leaving)
[10:45:28] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[10:51:11] *** Quits: chenqisu12 (~03cia7d@183.217.200.156) (Ping timeout: 256 seconds)
[10:51:52] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 264 seconds)
[10:54:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:56:34] *** Quits: pulse (~pulse@user/pulse) (Quit: Don't think of the green elephant)
[10:57:31] *** Joins: pulse (~pulse@user/pulse)
[10:57:59] *** Quits: rahl (~rahl@102.114.49.104) (Ping timeout: 256 seconds)
[10:59:03] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:01:36] *** Joins: comlord (~Thunderbi@121.227.116.10)
[11:05:34] *** Joins: Cyp (~cyp@213.237.85.9)
[11:05:47] *** Quits: Cyp_ (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[11:06:27] *** Joins: fputs3 (~fputs@67.59.83.166)
[11:06:29] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:08:11] *** Quits: comlord (~Thunderbi@121.227.116.10) (Ping timeout: 256 seconds)
[11:08:11] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 256 seconds)
[11:08:11] *** fputs3 is now known as fputs
[11:08:15] *** Joins: rendar (~rendar@user/rendar)
[11:09:43] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[11:09:59] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:11:20] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[11:13:05] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:e5d7:faad:1e0:85dd)
[11:13:26] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[11:14:22] *** Joins: undeclared0 (nullx@user/undeclared)
[11:14:36] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:16:41] *** Quits: undeclared (nullx@user/undeclared) (Ping timeout: 256 seconds)
[11:16:41] *** undeclared0 is now known as undeclared
[11:22:19] *** Joins: sav_ (~savio@177.12.48.155)
[11:26:11] *** Joins: chenqisu12 (~03cia7d@183.217.200.156)
[11:27:33] *** Quits: sav_ (~savio@177.12.48.155) (Remote host closed the connection)
[11:27:59] *** Joins: sav_ (~savio@177.12.48.155)
[11:31:44] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:625f:452c:2bd7:7984)
[11:36:39] *** Quits: izabera (izabera@2a01:7e00::f03c:92ff:fe92:6cd9) (Changing host)
[11:36:39] *** Joins: izabera (izabera@user/izabera)
[11:37:20] *** Quits: bbbbbb (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[11:43:18] *** Joins: andreasbuhr (~quassel@p548dda01.dip0.t-ipconnect.de)
[11:43:18] *** Quits: andreasbuhr (~quassel@p548dda01.dip0.t-ipconnect.de) (Client Quit)
[11:44:44] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[11:45:00] *** Joins: Cyp (~cyp@213.237.85.9)
[11:46:14] *** Quits: sav_ (~savio@177.12.48.155) (Quit: Leaving)
[11:52:19] *** Joins: tesuji (~quassel@2a02:908:180:9500:bc38:c93:1648:e81f)
[11:52:19] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:52:35] *** Joins: frost (~frost@user/frost)
[11:58:53] *** Joins: Burgundy (~yomon@79.115.213.171)
[11:58:53] *** Joins: JohnMS_WORK (~kvirc@185.73.229.242)
[11:59:46] *** Joins: rahl (~rahl@102.114.49.104)
[12:00:19] *** Quits: luizfrds1 (~Luiz@152.250.243.147) (Ping timeout: 256 seconds)
[12:01:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[12:14:14] *** Quits: pulse (~pulse@user/pulse) (Quit: Don't think of the green elephant)
[12:14:31] *** Joins: pulse (~pulse@user/pulse)
[12:20:09] *** Quits: froggyc (~froggy@2.235.241.212) (Ping timeout: 265 seconds)
[12:21:10] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:26:40] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:625f:452c:2bd7:7984) (Ping timeout: 264 seconds)
[12:28:25] *** Joins: tempate (~alpha@user/tempate)
[12:29:57] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[12:33:47] *** Joins: tempate (~alpha@user/tempate)
[12:34:01] *** Joins: robod34 (Username@79.113.195.239)
[12:35:46] *** Joins: furrymcgee (~devuan@cgn-89-1-209-86.nc.de)
[12:36:03] <tempate> Hello. I'm trying to calculate the gcd of two very large numbers with https://github.com/Tempate/FactoringAlgorithms/blob/main/quadratic_sieve/src/auxiliary.cpp#L33-L47 . Alas, it breaks when the numbers are too big and gives me stack smashing or a segfault. Does anyone know why could this be and how to fix it?
[12:39:22] <RandomReader> recursion generally isn't a useful way to do anything "large", if that's the underlying question
[12:39:52] <RandomReader> (C++ is not a functional language with special support for that)
[12:40:09] <RandomReader> so running into implementation limits related to stack space would not be surprising
[12:41:41] *** Quits: Tas-sos (~Tas-sos@ppp005054041212.access.hol.gr) (Ping timeout: 252 seconds)
[12:41:47] <ville> RandomReader: hand-written parsers for certain type of languages
[12:42:44] <ville> but i suppose those aren't really large that often. probably top at some thousands of lines
[12:42:52] *** Quits: rahl (~rahl@102.114.49.104) (Ping timeout: 264 seconds)
[12:43:14] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[12:44:38] *** Joins: rahl (~rahl@102.114.219.142)
[12:44:49] <RandomReader> that's not the "large" I was referring to :P
[12:45:19] <RandomReader> anyway, I'd try re-framing that as a loop and see what happens
[12:45:23] <ville> tempate: you can always convert a recursive algorithm to iterative solution instead. rather than getting allocations "automatically" as part of a new function call you allocate memory dynamically your self
[12:46:40] <RandomReader> I don't think it actually needs space, it's just recursive because that's how the algorithm was framed
[12:46:46] <ville> tempate: you likely won't escape the "are too big", you're just shifting the goalposts. and may even never hit the limits due to other practical constraints such as time
[12:47:11] *** Joins: leib (~leib@2405:201:900a:f034:cec:e525:b857:f8cc)
[12:47:23] *** Quits: leib (~leib@2405:201:900a:f034:cec:e525:b857:f8cc) (Read error: Connection reset by peer)
[12:47:59] *** Joins: leib (~leib@2405:201:900a:f034:cec:e525:b857:f8cc)
[12:48:31] *** Joins: Tas-sos (~Tas-sos@46.198.212.72)
[12:49:27] *** Joins: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi)
[12:51:58] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:52:24] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:1126:a9f4:894:b7a7)
[12:54:41] *** Joins: froggyc (~froggy@2.235.241.212)
[12:57:29] <RandomReader> 34:  while (true) {        44-46:  n = m % n; m = new_m; }
[12:57:52] *** mel is now known as caramel
[12:59:06] <RandomReader> LongInt having a move constructor would be useful here, it doesn't appear to
[13:00:16] <tempate> Alright, thank you all
[13:00:27] <tempate> I'm going to try but I'm afraid the problem may have to do with LongInt
[13:01:46] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:03:11] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Changing host)
[13:03:11] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[13:06:43] *** Joins: plastico (~plastico@neomutt/plastico)
[13:18:09] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:20:20] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[13:21:30] *** Quits: leib (~leib@2405:201:900a:f034:cec:e525:b857:f8cc) (Quit: Leaving)
[13:23:20] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[13:23:21] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[13:23:36] *** Joins: bindu (~bindu@user/bindu)
[13:23:44] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[13:24:25] <ville> why would gcd be recursive though: int gcd(int x, int y) { x = abs(x); y = abs(y); while(x != y) { if(x > y) { x -= y; } else { y -= x; } } return x; } ?
[13:24:32] <cbreak> tempate: if you think the number type is too small, you can use a bigger one
[13:24:48] <cbreak> like https://www.boost.org/doc/libs/1_77_0/libs/multiprecision/doc/html/index.html
[13:25:09] <cbreak> but I agree with the others that recursion isn't safe unless you have a tight upper bound for the depth
[13:25:19] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[13:26:51] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[13:27:12] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:29:05] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[13:29:14] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a6600ed62a3af3b89ef30.ipv6.abo.wanadoo.fr)
[13:30:01] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[13:32:14] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:37:08] *** Joins: Sadale_ (~Sadale@user/sadale)
[13:37:19] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 265 seconds)
[13:38:40] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:38:49] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:38:57] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:38:57] *** ChanServ sets mode: +v npaperbot
[13:42:21] <tempate> the non-recursive implementation is too slow
[13:42:44] <tempate> I reckon it has to do with the move constructor RandomReader was talking about
[13:44:49] <tempate> cbreak: this code is for one of my courses and I'm meant to use LongInt
[13:45:37] <cbreak> then just stop using recursion :)
[13:45:46] <cbreak> recursion is probably too slow anyway, compared to a proper loop
[13:49:20] <tempate> I imagine you have something like https://github.com/Tempate/FactoringAlgorithms/blob/main/quadratic_sieve/src/auxiliary.cpp#L33-L51 in mind, right?
[13:50:03] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[13:51:55] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:52:01] <cbreak> I haven't double-checked the algorithm, but yes, that looks better
[13:53:05] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[13:55:23] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[13:58:43] *** Joins: masterbuilder (~user@user/masterbuilder)
[14:01:26] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 252 seconds)
[14:03:02] *** Joins: caramel (~caramel@user/caramel)
[14:03:02] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:1126:a9f4:894:b7a7) (Remote host closed the connection)
[14:03:22] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:d31e:5a74:9ab:770)
[14:03:52] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4)
[14:04:01] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[14:04:10] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[14:11:09] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[14:11:41] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:16:44] *** Joins: gucci (~i.am@189.58.156.81.dynamic.adsl.gvt.net.br)
[14:19:36] <shailangsa> does anybody know whether higher RAM frequency in contrast to lower timings result in better build times?
[14:20:07] <cbreak> shailangsa: your files are on a ram disk or something? :)
[14:20:09] *** Joins: Viewday116 (~Viewday@user/viewday)
[14:20:38] <shailangsa> i mean when compiling?
[14:21:27] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[14:22:02] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 260 seconds)
[14:22:03] *** Viewday116 is now known as Viewday11
[14:25:16] *** Joins: proller (~p@2a02:6b8:0:51e:5942:3b72:6869:a157)
[14:27:16] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:d31e:5a74:9ab:770) (Ping timeout: 264 seconds)
[14:32:40] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 264 seconds)
[14:34:28] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[14:37:55] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:38:49] *** Joins: snikulov (~snikulov@109-252-86-189.nat.spd-mgts.ru)
[14:40:35] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:49d1:d8d6:5c53:1e75)
[14:43:07] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[14:47:39] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:49:18] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:49:50] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4)
[14:50:21] *** Joins: tempate (~alpha@user/tempate)
[14:53:19] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4) (Client Quit)
[14:54:22] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4)
[14:54:26] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:55:53] *** Quits: chenqisu12 (~03cia7d@183.217.200.156) (Ping timeout: 252 seconds)
[14:59:40] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:49d1:d8d6:5c53:1e75) (Ping timeout: 264 seconds)
[15:00:53] *** Joins: JohnMS_AWAY (~kvirc@213.134.183.29)
[15:01:28] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a6600ed62a3af3b89ef30.ipv6.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[15:02:22] *** Quits: JohnMS_WORK (~kvirc@185.73.229.242) (Read error: Connection reset by peer)
[15:04:54] *** Joins: kashyaprushi (~kashyapru@49.36.103.245)
[15:08:06] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[15:12:51] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:13:23] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[15:14:05] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Remote host closed the connection)
[15:14:36] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[15:16:35] *** Quits: snikulov (~snikulov@109-252-86-189.nat.spd-mgts.ru) (Remote host closed the connection)
[15:18:00] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[15:19:34] *** Sadale_ is now known as Sadale
[15:26:09] *** Joins: snikulov (~snikulov@109-252-86-189.nat.spd-mgts.ru)
[15:29:26] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:31:26] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[15:34:27] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[15:34:28] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[15:34:37] *** Joins: Atque (~Atque@user/atque)
[15:35:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[15:36:26] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:36:53] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:37:17] *** Joins: ckdCreations (~ckdCreati@147.55.133.132)
[15:39:28] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[15:40:11] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4)
[15:48:08] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[15:48:50] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:52:54] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:53:46] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[15:55:00] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4)
[15:56:50] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[15:58:08] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[16:00:59] *** Joins: AmR (~AmREiSa@156.199.223.24)
[16:03:07] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Quit: Leaving.)
[16:04:49] *** Joins: Leone (~Leo@216.154.50.172)
[16:06:16] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[16:14:32] *** Joins: tradar (~tradar@user/tradar)
[16:14:47] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:15:23] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4)
[16:17:43] *** Joins: Sepultura (~seppy@p548ca1d3.dip0.t-ipconnect.de)
[16:17:45] <Sepultura> Hola
[16:18:09] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (Ping timeout: 256 seconds)
[16:18:10] <Sepultura> Do you guys think Object Oriented Programming is outdated?
[16:19:28] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[16:22:34] <cbreak> Sepultura: no
[16:28:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:d1b6:b8ac:f1fb:836e)
[16:28:33] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:d1b6:b8ac:f1fb:836e) (Changing host)
[16:28:33] *** Joins: skapata (~Skapata@user/skapata)
[16:28:54] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:30:00] *** Quits: AmR (~AmREiSa@156.199.223.24) (Quit: Konversation terminated!)
[16:30:41] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[16:31:25] *** Quits: Dizidentu (~aresg@modemcable105.134-19-135.mc.videotron.ca) (Quit: WeeChat 3.2)
[16:31:36] <fiesh> Sepultura: yes
[16:35:24] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:39:17] *** Quits: JohnMS_AWAY (~kvirc@213.134.183.29) (Ping timeout: 252 seconds)
[16:41:51] *** Joins: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi)
[16:44:15] *** Joins: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4)
[16:49:13] *** Joins: constxd (~brad@192.75.101.164)
[16:49:15] <Sepultura> fiesh, so C++ is dying?
[16:49:18] <Sepultura> in your eyes?
[16:50:17] <lloda> C++ isn't tied to oop
[16:53:04] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[16:54:37] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:55:01] <cbreak> C++ doesn't use OOP
[16:55:10] <Sepultura> lloda, wasn't it the principle Idea behind C++? C with Classes?
[16:55:17] <cbreak> the C++ stdlib for example has almost no OOP code
[16:55:29] <cbreak> classes do not imply OOP
[16:56:58] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:57:15] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[16:58:22] *** Joins: Brainium (~brainium@user/brainium)
[16:58:45] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[16:58:54] *** Joins: JohnMS_AWAY (~kvirc@213.134.183.29)
[16:59:06] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[16:59:18] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[17:08:39] <furrymcgee> there may be a difference between oop languages and oop programming
[17:12:07] <anyone> somevector.erase(...); that smells like {all the OOP I care about}
[17:13:06] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:13:13] <cbreak> anyone: that's not actually OOP :)
[17:13:49] <cbreak> if you really want to use OOP, then you'll probably want runtime polymorphism, via subclassing, virtual member functions, interfaces, ...
[17:13:58] <anyone> see, all_the_OOP_I_care_about = emptyset
[17:15:26] <anyone> In fairness though, I see nothing wrong with people considering non-static member functions part of the OOP experience.
[17:15:52] <anyone> Just because vector happens to not make use of subclassing/polymorphism/virtual does not inherentely make it non-OOP, does it?
[17:16:00] <anyone> Conversely, would vector have any use for SC/Poly/Virtual?
[17:17:44] <IceMichael> hi
[17:17:56] <IceMichael> anyone knows down to which macos version c++20 is supported?
[17:18:18] <IceMichael> that is, by default, without trying to install it later in some way etc...
[17:19:00] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[17:19:03] <anyone> i do not know
[17:20:34] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:22:25] <IceMichael> actually, my question is more general, should I usually deploy my application to macOS by including the runtime in some way like msvcr on windows?
[17:22:34] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[17:23:08] <anyone> #C++-general
[17:23:24] <cbreak> IceMichael: no
[17:23:46] <cbreak> chose the minimum MacOS version you want to support as deployment target in xcode or cmake
[17:23:51] <cbreak> that's it.
[17:24:04] <cbreak> in really old xcode versions, you can select an older SDK too
[17:24:23] *** Quits: proller (~p@2a02:6b8:0:51e:5942:3b72:6869:a157) (Ping timeout: 252 seconds)
[17:24:32] <IceMichael> cbreak: but I remember there was some issue when using C++17 or C++20 and then selecting a really old macOS version... or shall I not fear anything?
[17:24:47] <IceMichael> C++17 did not even seem to work on 10.13 or 10.12 IIRC
[17:24:51] <cbreak> worst case it breaks.
[17:24:58] <cbreak> but it should tell you
[17:25:20] <IceMichael> ok, so it should not happen that it says "all fine, here you go", then I put it to the corresponding macOS version and it just does not start?
[17:25:39] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:26:21] <cbreak> I wouldn't expect it, but it's of course possible
[17:26:59] <IceMichael> okay, thank you (y)
[17:31:38] *** Joins: reumeth (~reumeth@user/reumeth)
[17:36:06] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[17:37:10] *** Joins: proller (~p@2a02:6b8:b081:6404::1:8)
[17:38:49] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:38:57] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:38:57] *** ChanServ sets mode: +v npaperbot
[17:42:16] *** Quits: proller (~p@2a02:6b8:b081:6404::1:8) (Ping timeout: 264 seconds)
[17:42:39] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[17:42:57] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[17:43:20] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:44:49] *** Joins: tempate (~alpha@user/tempate)
[17:45:17] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[17:46:13] *** Joins: Dave_R (~Dave_R@home.amunra.co.uk)
[17:48:17] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[17:50:03] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Remote host closed the connection)
[17:50:33] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:50:48] *** Joins: xiongxin (~Thunderbi@119.123.103.170)
[17:50:59] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[17:51:09] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[17:51:59] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[17:52:58] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[17:53:17] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[17:54:58] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[17:55:25] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[17:55:35] *** Joins: AmR (~AmREiSa@156.199.223.24)
[17:55:57] *** Joins: jaggz (~jaggz@user/jaggz)
[17:56:00] *** Joins: PlasmaHH_ (~PlasamaHH@user/plasmahh)
[17:56:10] <jaggz> why's opencv trying to access cv::String?
[17:56:11] <jaggz> https://paste.debian.net/1221357/
[17:56:27] <jaggz> cv::String hasn't existed since a while back when they moved to 4.x it seems
[17:56:53] *** Joins: seninha (~seninha@user/seninha)
[17:57:16] <cbreak> because of RieszPyramid.cpp
[17:57:24] <cbreak> that's what the error message says.
[17:58:25] <jaggz> I *think* it's here https://github.com/opencv/opencv/blob/4.5.1/modules/flann/include/opencv2/flann/any.h#L82
[17:58:29] <jaggz> cbreak, hm
[17:58:39] *** Joins: proller (~p@2a00:1fa0:493:ac5d:29dc:15db:e56a:2585)
[17:59:01] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 256 seconds)
[17:59:46] <jaggz> cbreak, that's lower in the error output.. isn't it main.cpp?
[18:00:45] <cbreak> more than one file uses that function
[18:01:07] <jaggz> nod
[18:01:33] <jaggz> (actually lemme make-clean this project .. I've been working so much on opencv builds and didn't make clean this other one in a while)
[18:01:38] <jaggz> https://github.com/tschnz/Live-Video-Magnification/
[18:02:15] <jaggz> okay... so far so good
[18:06:52] *** Quits: proller (~p@2a00:1fa0:493:ac5d:29dc:15db:e56a:2585) (Ping timeout: 264 seconds)
[18:08:30] <kaichiuchu> question
[18:08:38] <kaichiuchu> is there a range-based for loop syntax which allows for an index?
[18:09:19] <anyone> size_t i = 0; for (...) { ...; ++i; } ?
[18:09:26] <kaichiuchu> no, that's not what I mean
[18:09:41] <kaichiuchu> I'm talking something like `for (const auto& i : something)` with an index
[18:10:09] <masterbuilder> I tried to look for something like this a few days ago and didn't find anything
[18:10:32] *** Joins: luizfrds (~Luiz@152.250.243.147)
[18:10:34] <anyone> isn't i your index (or iterator, depending on what nomenclature you want)
[18:10:41] <masterbuilder> you can however define an index variable inside the loop, that's a little better
[18:11:41] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[18:11:56] <masterbuilder> anyone: yeah but range for loops are supposed to insulate you from having a state variable like that, but sometimes you want it and implementing a traditional for loop isn't possible
[18:12:06] <masterbuilder> becauset the type doesn't have a subscript operator for example
[18:12:47] <masterbuilder> and then you need to write a more ugly loop
[18:12:47] *** Quits: hightower2 (~hightower@213.147.110.20) (Ping timeout: 252 seconds)
[18:13:14] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[18:13:36] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[18:13:41] <masterbuilder> I think python has something like this, an index/iterator pair, forget what it's called
[18:13:46] <kaichiuchu> enumerate
[18:13:50] <masterbuilder> yead
[18:13:55] <masterbuilder> s/yead/yeah/
[18:14:10] <anyone> if the container is contiguous, you can  index=iterator-begin();
[18:14:27] <anyone> but since it's often not, keeping size_t i around is what you get.
[18:14:51] <kaichiuchu> https://godbolt.org/z/MEKbf7a1W is my example
[18:15:21] <kaichiuchu> line 32 is pretty much what i'm trying to get at
[18:15:52] *** Quits: Sepultura (~seppy@p548ca1d3.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[18:16:31] *** Joins: proller (~p@2a02:6b8:b081:8807::1:2d)
[18:17:03] *** Joins: tempate (~alpha@user/tempate)
[18:17:04] *** Quits: tempate (~alpha@user/tempate) (Client Quit)
[18:18:32] *** Joins: stonkey (~stonkey@45.132.226.17)
[18:20:04] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 264 seconds)
[18:20:27] *** Quits: luizfrds (~Luiz@152.250.243.147) (Read error: Connection reset by peer)
[18:22:17] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:22:29] *** Joins: r-g (~r-g@195-154-105-157.rev.poneytelecom.eu)
[18:23:30] <anyone> then 32 is what you should use
[18:26:06] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Quit: Leaving.)
[18:26:22] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[18:27:22] <anyone> just because ranges exist doesn't mean it's necessarily the right thing to use.
[18:27:59] <anyone> There is an antipattern to note. For example, just because regexes exist, it's not necessarily the good approach to use it to check if a string ends with a certain character.
[18:29:30] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[18:29:42] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[18:32:40] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[18:33:35] *** Quits: JohnMS_AWAY (~kvirc@213.134.183.29) (Ping timeout: 256 seconds)
[18:34:08] *** Quits: stonkey (~stonkey@45.132.226.17) (Changing host)
[18:34:08] *** Joins: stonkey (~stonkey@user/stonkey)
[18:35:04] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[18:35:18] *** Joins: stonkey (~stonkey@user/stonkey)
[18:35:43] *** Quits: sereg (~sereg@37.120.205.197) (Remote host closed the connection)
[18:36:18] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[18:36:23] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:36:29] *** Joins: Sepultura (~seppy@p548ca1d3.dip0.t-ipconnect.de)
[18:36:48] *** Quits: kashyaprushi (~kashyapru@49.36.103.245) (Quit: Leaving)
[18:37:52] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[18:38:04] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Ping timeout: 264 seconds)
[18:38:07] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:39:31] *** Joins: hightower2 (~hightower@213.147.110.20)
[18:40:17] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:40:34] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[18:41:56] *** Quits: proller (~p@2a02:6b8:b081:8807::1:2d) (Ping timeout: 252 seconds)
[18:42:12] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:42:13] *** Joins: sereg (~sereg@37.120.205.197)
[18:47:07] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:50:46] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[18:51:32] *** Joins: jschaub (~jschaub@p200300eb6f08c0001e697afffe6257e2.dip0.t-ipconnect.de)
[18:51:35] <jschaub> hello all
[18:51:55] <jschaub> are you allowed to partially specialize std::variant if one of the alternatives is your own type?
[18:52:03] <jschaub> https://godbolt.org/z/cbMx4ExT3
[18:52:34] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:52:52] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[18:53:11] *** Joins: proller (~p@2a02:6b8:0:51e:5fe4:aa48:1b14:5a20)
[18:54:16] *** Joins: Dru_ (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[18:54:22] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[18:55:56] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[18:56:46] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[18:59:51] *** Joins: karakedi (~eAC53C340@user/karakedi)
[18:59:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:00:42] *** Quits: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe) (Ping timeout: 268 seconds)
[19:02:26] *** Joins: xkuru (~xkuru@user/xkuru)
[19:03:06] *** Joins: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe)
[19:04:49] *** Joins: Nov28 (~weechat@user/nov28)
[19:08:04] *** Quits: Dave_R (~Dave_R@home.amunra.co.uk) (Ping timeout: 264 seconds)
[19:08:53] *** Quits: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe) (Ping timeout: 252 seconds)
[19:09:47] *** Joins: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe)
[19:13:26] *** Quits: xiongxin (~Thunderbi@119.123.103.170) (Remote host closed the connection)
[19:19:39] <Nov28> Hello. Can you guys recommend any C++ projects to contribute to? Preferably ones that aren't very big, I don't mind personal ones either.
[19:22:16] *** Quits: jschaub (~jschaub@p200300eb6f08c0001e697afffe6257e2.dip0.t-ipconnect.de) (Quit: Leaving)
[19:30:05] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[19:31:12] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[19:33:30] *** Joins: dkdjsm (~dkdjsm@178.49.152.151)
[19:33:38] *** Joins: pingpongdull (~pingpongd@2400:1a00:b1c0:b215:13b6:9f72:72c2:23ca)
[19:33:49] *** Parts: pingpongdull (~pingpongd@2400:1a00:b1c0:b215:13b6:9f72:72c2:23ca) ()
[19:34:44] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[19:51:29] <furrymcgee> gnucash
[19:52:43] <Alipha> kaichiuchu: https://github.com/alipha/cpp/tree/master/enumerate
[19:56:08] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[19:57:14] *** Joins: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51)
[20:01:11] *** Joins: nrl^ (~nrl@68.101.58.90)
[20:04:26] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 252 seconds)
[20:06:26] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[20:06:37] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:07:55] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[20:09:22] *** PlasmaHH_ is now known as PlasmaHH
[20:12:42] *** Joins: kaichiuc1u (~kaichiuch@user/kaichiuchu)
[20:12:50] *** Quits: baltazar (~baltazar@94-21-222-223.pool.digikabel.hu) (Ping timeout: 268 seconds)
[20:13:03] *** Joins: dv^_^5 (~dv@eclipse.oxfordfun.com)
[20:13:22] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Ping timeout: 256 seconds)
[20:13:22] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:13:27] *** Quits: mitch0 (~mitch@94-21-222-223.pool.digikabel.hu) (Ping timeout: 268 seconds)
[20:13:54] *** Joins: dwt__ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[20:13:54] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[20:13:55] *** Joins: noarb- (~noarb@user/noarb)
[20:13:56] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[20:14:02] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[20:14:04] *** Joins: voirnox_ (~voirnox@xor.moe)
[20:14:09] *** Joins: drew` (~drew@user/drew)
[20:14:30] *** Quits: voirnox (~voirnox@xor.moe) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: beagles (~beagles@142.162.188.116) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: carrar (~tim@osburn.jp) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: drew (~drew@user/drew) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: obiwahn (~heini@user/obiwahn) (Ping timeout: 256 seconds)
[20:15:59] *** Joins: carrar (~tim@osburn.jp)
[20:16:01] *** Joins: beagles (~beagles@142.162.188.116)
[20:16:14] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[20:16:52] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[20:16:53] <CarloWood> Hey Alipha.
[20:17:49] *** Joins: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[20:17:51] *** Joins: IceMicha- (~IceMichae@h2878436.stratoserver.net)
[20:17:51] *** Joins: voirnox (~voirnox@xor.moe)
[20:17:55] *** Joins: drew (~drew@user/drew)
[20:18:10] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[20:18:12] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Read error: Connection reset by peer)
[20:18:25] *** Quits: dwt__ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[20:18:29] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[20:18:59] *** Quits: drew` (~drew@user/drew) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: voirnox_ (~voirnox@xor.moe) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: dv^_^5 (~dv@eclipse.oxfordfun.com) (Ping timeout: 256 seconds)
[20:19:24] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:19:45] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:20:10] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[20:24:38] *** Joins: baltazar (~baltazar@185-29-82-78.pool.digikabel.hu)
[20:24:39] *** Joins: mitch0 (~mitch@185-29-82-78.pool.digikabel.hu)
[20:26:41] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:28:46] *** Joins: obiwahn (~heini@user/obiwahn)
[20:30:10] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[20:31:01] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:32:09] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:36:37] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:38:27] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[20:38:53] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[20:39:03] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[20:39:57] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Ping timeout: 256 seconds)
[20:41:50] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[20:42:54] <kaichiuc1u> question
[20:43:14] <kaichiuc1u> can someone tell me why https://gist.github.com/kaichiuchu/f10e83c5d23ffd5c4f2835f3f8681342 only sporadically generates `kNumOfRandomIntegers`?
[20:43:46] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[20:43:53] <kaichiuc1u> for example, if I specify 1'000'000, there won't be a million results
[20:44:24] <montpol> I want to find the average of five signed integer points but instead of division, I want to do it by multiplying by 0.2 in fixed-point format and then get rid of the fractional part so I am left with signed int. If I wanted 0.2 to be 16-bits, how would I do this exactly?
[20:44:35] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 252 seconds)
[20:45:55] <montpol> 0.2 (decimal) = 0.0011001100110011001100110011... (binary)
[20:46:24] <CarloWood> You can't store 0.2 exactly, in binary floating point.
[20:47:12] <CarloWood> What is the average of   1 2 3 4 5  is that also an integer?
[20:47:37] <montpol> yes I would cut it off at 16-bits
[20:47:58] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[20:47:59] <montpol> So like this, 0.001100110011001, right?
[20:48:03] <CarloWood> You mean, you'd truncate the exact answer?
[20:48:19] <montpol> yea, it would be something like 1.99999
[20:48:24] <montpol> thats good enough
[20:48:41] <CarloWood> So your average of integers is not an integer.
[20:49:14] <CarloWood> (the average of 1 2 3 4 5 is 3)
[20:49:30] <CarloWood> I should have asked something else :D
[20:49:31] <montpol> it would most likely never would be if your taking an average of 5 values...
[20:49:42] <Alipha> montpol: is there an existing 16-bit format you're using?
[20:49:59] <montpol> Alipha no
[20:50:04] <montpol> i have to hard code the 0.2
[20:51:06] <montpol> ive read one can do some shifting of the decimal place to get an integer
[20:51:12] <Alipha> montpol: why do you want a 16-bit fixed-point value instead of something c++ natively supports, such as `float` or `double`?
[20:51:15] <montpol> or the "next" closest integer
[20:51:23] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:51:39] <montpol> because im using c++ as an example to ultimately get it running on an fpga
[20:52:33] <CarloWood> montpol, then you should start with a '1'. So, you'll end up with  1100110011001100  but since you cut that off at ..11, you probably should round it up to 1100110011001101
[20:53:38] *** Joins: hightower3 (~hightower@213.147.110.20)
[20:53:44] <CarloWood> Lets say, the average of 1 2 3 6 7 = (1 + 2 + 3 + 6 + 7) / 5 =
[20:53:55] <CarloWood> << ((1 + 2 + 3 + 6 + 7) / 5.)
[20:53:55] <geordi> 3.8
[20:54:19] <CarloWood> << (1 + 2 + 3 + 6 + 7) * 0xCCCD
[20:54:20] <geordi> 996151
[20:54:45] <montpol> why in HEX?
[20:54:45] <CarloWood> << (996151 >> 15)
[20:54:45] <geordi> 30
[20:54:48] <CarloWood> hmm
[20:55:03] <CarloWood> What am I missing...
[20:55:15] *** Quits: hightower2 (~hightower@213.147.110.20) (Ping timeout: 256 seconds)
[20:55:40] <CarloWood> << (5 * 0xCCCD)
[20:55:40] <geordi> 262145
[20:55:48] <CarloWood> that must be one (5 * 0.2)
[20:55:54] <Alipha> { int divisor = 0b0011001100110011; int result = (651 * divisor) >> 16; cout << result, 651 * 0.2; }  // montpol?
[20:55:55] <geordi> 130, 130.2
[20:56:01] <montpol> Ah wait,
[20:56:18] <CarloWood> << (1 << 18)
[20:56:18] <geordi> 262144
[20:56:23] <CarloWood> so its 18
[20:56:28] <CarloWood> << (996151 >> 18)
[20:56:29] <geordi> 3
[20:56:40] <CarloWood> So that turned 3.8 into 3. Hmm.
[20:57:04] <CarloWood> The problem is that the '>> 18' just truncates, not rounds off.
[20:57:26] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[20:57:42] <CarloWood> To fix that you could add 0.5 first.  0.5 << 18 = 1 << 17 =
[20:57:47] <CarloWood> << (1 << 17)
[20:57:47] <geordi> 131072
[20:58:13] <CarloWood> << ((996151 + (1 << 17)) >> 18)
[20:58:14] <geordi> 4
[20:58:16] <montpol> 0.2*2^16
[20:58:20] *** Joins: neure (~TimoSuora@dzpbjwztyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[20:58:22] <montpol> <<(0.2*2^16)
[20:58:22] <geordi> error: invalid operands of types 'double' and 'int' to binary 'operator^'
[20:58:34] <montpol> <<(0.2*2**16)
[20:58:34] <geordi> error: invalid type argument of unary '*' (have 'int')
[20:58:42] <CarloWood> So,
[20:58:53] <montpol> Ah i think i got it
[20:59:10] <montpol> I want to first realize 0.2 as an integer
[20:59:48] <montpol> So since i want 16-bits (to be somewhat exact -- roughly 0.19998), I do 0.2* 2**16
[21:00:06] <Alipha> << 0b0011001100110011, 0.2 * (1 << 16);
[21:00:06] <geordi> 13107, 13107.2
[21:00:15] <CarloWood> { long sum = 1 + 2 + 3 + 6 + 7;  cout << (((sum * 0b1100110011001101) + (1 << 17)) >> 18); }
[21:00:16] <geordi> 4
[21:00:25] <montpol> thats 13107.2
[21:00:34] <montpol> so I just say my integer is 13107
[21:00:49] <montpol> and that I just multiply with the summed values
[21:01:08] <CarloWood> Lets say the sum is 61725 which is precisely 5 * 12345.
[21:01:12] <Alipha> and then divide by 2**16 (i.e., shift by 16)
[21:01:21] <CarloWood> { long sum = 61725;  cout << (((sum * 0b1100110011001101) + (1 << 17)) >> 18); }
[21:01:21] <geordi> 12345
[21:01:39] <montpol> what do I do afterwards?
[21:01:41] <CarloWood> Then if you add 4, nothing should change.
[21:01:48] <CarloWood> hmm
[21:01:51] <montpol> Alipha yaaa exactly
[21:01:53] <CarloWood> no, if you add 2.
[21:02:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[21:02:06] <CarloWood> { long sum = 61725 + 2;  cout << (((sum * 0b1100110011001101) + (1 << 17)) >> 18); }
[21:02:06] <geordi> 12345
[21:02:14] <CarloWood> but +3 should be rounded up
[21:02:19] <CarloWood> { long sum = 61725 + 3;  cout << (((sum * 0b1100110011001101) + (1 << 17)) >> 18); }
[21:02:20] <geordi> 12346
[21:02:22] <CarloWood> yay
[21:02:39] <CarloWood> The remaining problem here is that this uses 18 bits for the sum.
[21:02:56] <montpol> Alipha shift by 16 means I just ignore the first 16 bits?
[21:03:16] <CarloWood> And then multiplying with 0b1100110011001101 gives 34 bits...
[21:04:18] <CarloWood> montpol: what is the maximum value that the sum of your five points can be?
[21:04:55] <montpol> I don't know just yet. That's on my agenda to figure out.
[21:05:21] <CarloWood> If they 16 bit values, then merely summing them can already overflow.
[21:06:16] *** Quits: proller (~p@2a02:6b8:0:51e:5fe4:aa48:1b14:5a20) (Ping timeout: 264 seconds)
[21:06:56] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[21:07:35] <montpol> Since I am doing multiplication before this averaging part, The bits could be either 24 or 32
[21:07:38] <CarloWood> I suppose you could ask: how can I divide a 16 bit int value by 5.
[21:08:06] <montpol> but this would all need to be truncated....so I figured I would do the truncation after the averaging
[21:08:10] <CarloWood> You are OK with temporarily use more than 16 bits?
[21:08:17] <montpol> yea sure
[21:08:57] <CarloWood> 16 bit in ... 32 bit during calculation .. 16 bit out.  I see no problem then.
[21:09:25] <montpol> no, each value is 24 or 32 bit
[21:09:32] <montpol> then the constant 0.2 is 16 bit
[21:09:51] *** Quits: stonkey (~stonkey@user/stonkey) (Read error: Connection reset by peer)
[21:09:58] <CarloWood> Why?  The constant 0.2 is infinite bits :/
[21:10:09] <Alipha> You'll need 48 bits to store the intermediate result then
[21:10:20] <CarloWood> Why truncate it to 16 bits if you work with 32 bits already.
[21:10:56] <montpol> the 32 bits is due to multiplication before the averaging
[21:11:18] <CarloWood> You don't even need to store the 0.2 at all.. You can just do three bit shifts.
[21:11:52] <CarloWood> So all inputs are 24 bits?
[21:12:03] <CarloWood> And you add at most 5 of them
[21:12:38] <CarloWood> Then you have at most 27 bits I think.
[21:12:46] <CarloWood> Ignoring the sign for now :P
[21:14:55] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[21:15:03] <montpol> No it goes like this: 5 16 bits come in, multiplcation happens (either with a 8 bit or 16 bit value) to each of the 16 bits, then the averaging occurs
[21:15:19] <montpol> so by the time it comes to averaging there is already at the most 5 32 bits
[21:18:03] <CarloWood>  { uint32_t s = 61725; s += s << 1; s += s << 4; s += s << 8; s += 1 << 15; s >>= 16; cout << s; }
[21:18:04] <geordi> 12345
[21:18:10] <CarloWood> Just a few shifts.
[21:19:10] <CarloWood> Shifting s 1 + 4 + 8 requires 13 bits more than the input.
[21:19:39] <CarloWood> In very rare cases adding the 1<<15 might overflow?  Not sure.
[21:19:57] <CarloWood> So lets say 13, then you need 24 + 13 = 37 bits.
[21:21:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:22:15] <CarloWood> If we remove the round up (the 1<<15), and you absolutely don't want to get passed 32 bits, you could do the >>16 partially sooner. Say,
[21:22:17] *** Joins: T`aZ_ (~TaZ@user/taz/x-9470768)
[21:22:32] <CarloWood>  { uint32_t s = 61725; s += s << 1; s += s << 4; s >>= 8; s += s << 8; s >>= 8; cout << s; }
[21:22:33] <geordi> 12344
[21:22:41] <CarloWood> Less accurate!
[21:23:05] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[21:24:30] <CarloWood> Actually - that last <<8 requires to be under 25 bits.. and 24+1+4-8 is already 21.  Might as well make that 22 and shift 9 in the end (22+9 = 31 < 32).
[21:24:40] <CarloWood>  { uint32_t s = 61725; s += s << 1; s += s << 4; s >>= 7; s += s << 8; s >>= 9; cout << s; }
[21:24:41] <geordi> 12344
[21:24:47] *** Joins: rgrinberg (~textual@200.5.63.76)
[21:25:14] <CarloWood> Add the round off back in, why not:
[21:25:21] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 245 seconds)
[21:25:36] <CarloWood>  { uint32_t s = 61725; s += s << 1; s += s << 4; s >>= 7; s += s << 8; s += 1 << 8; s >>= 9; cout << s; }
[21:25:36] <geordi> 12345
[21:26:25] <CarloWood> No way that this is fast than using integer division with the CPU.
[21:26:31] <CarloWood> faster*
[21:27:40] <anyone> why don't you let the compiler decide
[21:27:54] <anyone> do the division (in source), let compiler decide how to model it in asm.
[21:28:07] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[21:30:00] *** Joins: seninha (~seninha@user/seninha)
[21:38:50] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:38:57] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:38:57] *** ChanServ sets mode: +v npaperbot
[21:45:02] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Quit: ZNC - https://znc.in)
[21:45:17] *** Quits: Nov28 (~weechat@user/nov28) (Quit: Nov28)
[21:46:11] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[21:47:41] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[21:49:46] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[21:49:54] *** Joins: PointThink (~PointThin@acap126.neoplus.adsl.tpnet.pl)
[21:50:11] *** Quits: PointThink (~PointThin@acap126.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[21:51:10] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[21:55:47] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:56:10] <montpol> anyone asm?
[21:57:05] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[21:57:27] *** Quits: PraiseIdleness (~PraiseIdl@2a02:c7f:d44c:bb00:490f:f016:e380:a0a4) (Quit: Textual IRC Client: www.textualapp.com)
[21:57:53] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:57:56] *** Joins: cpuid (~cpuid@co5.at)
[21:57:56] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[21:57:56] *** Joins: cpuid (~cpuid@user/cpuid)
[21:58:09] <CarloWood> { uint32_t s = 61725; uint16_t a = s / 5; cout << a; }
[21:58:10] <geordi> 12345
[21:58:22] <CarloWood> That is the best code, montpol
[21:58:57] <montpol> cool thanks!
[22:00:16] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 264 seconds)
[22:00:55] *** Joins: orthoplex64 (~crm@70.120.0.94)
[22:01:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:02:41] *** Quits: Sepultura (~seppy@p548ca1d3.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:06:46] *** Quits: ckdCreations (~ckdCreati@147.55.133.132) (Read error: Connection reset by peer)
[22:07:01] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[22:07:56] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a66004db39e7c220786f8.ipv6.abo.wanadoo.fr)
[22:09:05] *** Joins: sav (~savio@177.12.48.155)
[22:09:29] *** sav is now known as Guest8054
[22:09:35] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[22:13:37] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Quit: Leaving.)
[22:18:23] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:18:28] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[22:20:19] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[22:25:09] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Read error: Connection reset by peer)
[22:25:17] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[22:26:08] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[22:30:52] *** Quits: snikulov (~snikulov@109-252-86-189.nat.spd-mgts.ru) (Remote host closed the connection)
[22:41:36] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[22:44:49] <CarloWood> I am still not clear on when to use nothrow.
[22:45:33] <CarloWood> I have code here that does: m_frame_rate_limiter.start(s_no_render_frame_rate_interval); yield(m_application->m_low_priority_queue); wait(frame_timer);
[22:46:15] <CarloWood> If yield() here, for example, would throw - that would be a problem: after a successful start() I may never leave this function without a successful call to wait().
[22:46:46] <CarloWood> So I wonder: does can of these functions (ie yield, or wait) throw an exception?
[22:47:26] <CarloWood> s/does can/can any/
[22:48:27] <kalven> which yield function is that?
[22:49:35] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.3)
[22:51:49] *** Joins: Rayke (rayke@user/rayke)
[22:53:17] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[22:53:24] *** Joins: msk_ (~msk@185.124.240.158)
[22:53:41] <CarloWood> my own
[22:54:00] *** Quits: msk_ (~msk@185.124.240.158) (Read error: Connection reset by peer)
[22:54:21] <kalven> how are we supposed to know if it can throw?
[22:54:28] <CarloWood> It means "do not continue to run this task, but give CPU to other tasks first"
[22:55:14] <CarloWood> The point is that I don't use 'nothrow' at all. And then I gave an example of why sometimes I wish I did.
[22:55:50] <CarloWood> I understood that if you add 'nothrow' (or what is it called these days? noexcept?) then things might get slower.
[22:56:17] <kalven> I'm assuming you mean noexcept
[22:56:33] <CarloWood> k
[22:56:53] <CarloWood> Does the compiler warn if a noexcept function calls a function that doesn't use noexcept?
[22:57:02] <kalven> no, it shouldn't
[22:57:09] <CarloWood> I think it should?
[22:57:28] <kalven> ok, then you are going to be disappointed :)
[22:57:49] <CarloWood> It would make a lot easier to add noexcept's. Just see if the function throws. If not add it. If the compiler doesn't complain then it was correct.
[22:58:39] <kalven> noexcept just makes sure exceptions won't slip out of the function. if it calls something that throws, then the program will std::terminate
[23:00:33] <CarloWood> Does that make it slower? Now it has to add code to check if something is thrown or not.
[23:02:16] <CarloWood> But ok - so it means "Thou (exceptions) Shall Not Pass" and no "Hey caller, I promise this function can't throw."  The latter is a side-effect but a call to std::terminate is hardly a good deal for that.
[23:02:24] <CarloWood> and not*
[23:02:43] *** Joins: proller (~p@80.240.216.69)
[23:03:03] <kalven> it doesn't save you from having to think about whether yield (or whatever) throws or not
[23:03:12] <CarloWood> What I'd like is compiler support for keeping track what exceptions can be thrown (or not).
[23:03:31] <kalven> https://gcc.godbolt.org/z/n4P53q455
[23:03:57] <CarloWood> If yield() was marked with "this_wont_throw" then I know it doesn't. And the compiler though check that.
[23:04:07] <CarloWood> s/though/should/
[23:04:35] <kalven> right, well c++ doesn't have mandatory exception specifications
[23:04:40] *** Joins: Sepultura (~seppy@p548ca1d3.dip0.t-ipconnect.de)
[23:06:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 256 seconds)
[23:06:47] <CarloWood> Looking that that assembly, so an exception causes a function to return at the return address + offset (to skip the pop rcx and ret)?
[23:07:00] <CarloWood> s/that that/at that/
[23:07:03] <CarloWood> I can't type
[23:07:07] *** Quits: gucci (~i.am@189.58.156.81.dynamic.adsl.gvt.net.br) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:09:39] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:09:53] <kalven> nah, there will be some table somewhere that maps instruction location ranges to handlers
[23:10:24] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[23:12:26] <CarloWood> ThreadPool01    WARNING       : | renderloop  Rendering aborted due to: std::exception
[23:12:26] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[23:12:51] *** Joins: ckdCreations (~ckdCreati@147.55.130.33)
[23:13:12] <CarloWood> What kind of exception can I throw that isn't a logical or runtime error - but just... an exception... but still allows me to pass along some text?
[23:13:32] <anyone> throw "damnit";
[23:13:39] <CarloWood> heh
[23:15:52] <CarloWood> Oh, I can overload virtual const char* what() const noexcept;
[23:17:30] <CarloWood> ThreadPool00    WARNING       : | renderloop  Rendering aborted due to: eErrorOutOfDateKHR
[23:20:53] *** Quits: hightower3 (~hightower@213.147.110.20) (Ping timeout: 256 seconds)
[23:23:22] *** Joins: hightower2 (~hightower@213.147.110.20)
[23:24:57] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:32:12] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[23:33:21] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[23:33:26] *** Joins: Betal (~Betal@user/betal)
[23:38:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c5ed:3c67:1c78:cc2e)
[23:38:34] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c5ed:3c67:1c78:cc2e) (Changing host)
[23:38:34] *** Joins: skapata (~Skapata@user/skapata)
[23:38:44] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:40:04] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:41:28] <bitmask> hey
[23:41:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:41:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:41:50] <anyone> hey yourself
[23:42:05] <bitmask> I'm trying to create an object that holds a vector of pointers to different types of structs.  This is what I came up with, is there a better way?
[23:42:07] <bitmask> jdoodle.com/ia/kqI
[23:43:09] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:43:33] *** Quits: T`aZ_ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[23:43:50] *** Joins: jokoon (~eio@2a01:e0a:542:e160:ec4a:8bf:770c:2b75)
[23:44:31] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[23:46:03] <anyone> vector<unique_ptr<UBObject>>
[23:46:07] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[23:46:36] <bitmask> oh yea i know, but im wondering about the actual implementation. is what i wrote decent or is there a better way to do it
[23:46:58] <anyone> the other option is vector<variant<T1, T2, T3, ...>>
[23:47:21] <bitmask> hmm, havent heard of variant, i'll look it up thanks
[23:47:40] <bitmask> though i dont think thats gonna work for me but im still curious
[23:51:06] <vancz> can i initialize a global int[10] with a constexpr function?
[23:52:03] <anyone> int a[10] = {constexprfunc(), constexprfunc() + 2, ...}; // in some way, yes
[23:52:19] <bitmask> so does a variant's size equal the largest in the list? that could be very inefficient for a vector of structs
[23:52:53] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:53:31] <vancz> anyone: id like to do it by returning the whole array and not by manually filling in each element
[23:54:52] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 264 seconds)
[23:55:26] <Alipha> vancz: use std::array<int, 10> instead
[23:55:28] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[23:55:29] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[23:55:56] <vancz> is it impossible with plain int[]? i imagine the issue is that you cant really deal with pointers at constexpr time
[23:58:04] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:58:41] <Alipha> vancz: the issue is that you cannot return an array (only a pointer to one) from the constexpr function to initialize the global array with
[23:58:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:59:25] *** Joins: rgrinberg (~textual@200.5.63.76)
