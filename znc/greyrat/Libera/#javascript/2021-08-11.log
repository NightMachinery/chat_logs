[00:00:46] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:02:47] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:06:31] *** Quits: jose47 (~jose@pmr109.internetdsl.tpnet.pl) (Quit: Connection closed)
[00:07:27] <epolanski> how would you call a function that given two dates returns a query string representation of that date range, in order to append it to a URI
[00:08:38] <GreenJello> not sure that's enough information to name it
[00:08:41] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[00:08:56] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[00:09:05] *** Joins: strive (~strive@user/strive)
[00:10:04] <GreenJello> but if there's no additional context, then dataRangeToQuery
[00:10:57] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[00:12:26] *** Quits: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[00:13:21] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Client Quit)
[00:14:47] <Slade> i wonder how to get node-sass working without fibers. hmm
[00:15:36] <Slade> systemfault, you're not a fan of using sass eh :P
[00:15:47] *** Joins: onur (~onur@user/onur)
[00:15:48] <systemfault> I like SASS
[00:15:56] <Slade> well scss
[00:16:01] <systemfault> That's what I meant
[00:16:24] <samsch> Slade, Can you not switch to `sass`?
[00:16:33] <Slade> samsch, ?
[00:17:03] <samsch> node-sass is dead, declared more or less a couple years ago I think. The `sass` package is the officially maintained one.
[00:17:15] <samsch> And it's JS code written with Dart, so no native stuff.
[00:18:00] <Slade> hum. interesting. ok
[00:18:18] <sheetjs> curiously not marked as deprecated in npm
[00:18:53] <Slade> interestingly i have node-sass, sass and sass-loader all in this project
[00:18:54] <b-rex> sass is dead, declared more or less a couple minutes ago I think. The `sassly.io` package is the officially maintained one (for another 20 minutes).
[00:19:01] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[00:19:09] <Slade> wait what?
[00:19:15] *** Quits: pizdets_ (~pizdets@183.182.111.62) (Ping timeout: 245 seconds)
[00:19:28] <samsch> Here's the post on libsass, which is the main component of node-sass: https://sass-lang.com/blog/libsass-is-deprecated
[00:19:53] <sheetjs> "LibSass and Node Sass will continue to be maintained indefinitely on a best-effort basis"
[00:19:54] <b-rex> Slade: i kid i kid. but fr just put npm update on crontab every minute and you're all good.
[00:20:25] <sheetjs> b-rex: missed an opportunity to peddle the sass saas
[00:20:44] *** Joins: pizdets (~pizdets@183.182.114.167)
[00:21:21] <b-rex> sheetjs: LOL
[00:23:54] *** Joins: cog (~Atlas@2604:3d08:b27f:ae00:912f:6c43:4e9d:1b80)
[00:25:30] *** Joins: summersault (~summersau@179.221.251.16)
[00:25:55] <systemfault> Isn't the real implementation "dart sass" these days?
[00:27:02] <sheetjs> the default assumption, given the recent trend of taking open source projects closed or relicensing as AGPL, is darker
[00:27:22] <systemfault> AGPL? Ew.
[00:27:24] *** Quits: daoudr (~daoudr@178.197.212.193) (Quit: Leaving)
[00:27:35] <systemfault> It's like cancer... but worse
[00:27:44] <sheetjs> all the cool projects are doing it
[00:27:54] <systemfault> Example?
[00:28:08] <sheetjs> didnt grafana do it in april?
[00:28:12] <sheetjs> minio was around the same time
[00:28:34] <systemfault> I guess that those are cool for some people, indeed.
[00:28:42] *** Joins: p_stampy7 (~p_stampy@user/p-stampy/x-2915953)
[00:29:06] <matsaman> mmm, lovely AGPL
[00:29:13] <sheetjs> according to the github vanity metrics, grafana is cooler than sheetjs :(
[00:29:15] <matsaman> keeping source available
[00:29:20] *** Quits: p_stampy (~p_stampy@user/p-stampy/x-2915953) (Ping timeout: 258 seconds)
[00:29:21] *** p_stampy7 is now known as p_stampy
[00:29:25] <matsaman> sheetjs: you can't trust that sheeet
[00:30:06] <sheetjs> the elastic saga is ongoing
[00:30:13] <systemfault> What saga?
[00:30:27] <systemfault> The thing about the client not supporting shit forks?
[00:30:34] <sheetjs> yeah
[00:30:35] <systemfault> I'm all for it.
[00:30:55] <systemfault> As far as I'm concerned, 'good job elasticsearch people'
[00:31:10] <systemfault> Amazon has the cash to make their own
[00:32:26] <sheetjs> that perspective misunderstands the history
[00:32:39] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 268 seconds)
[00:32:47] <sheetjs> the reason this schism happened in the first place was addition of non-open-source software to the elastic repo
[00:33:05] <sheetjs> the logical endpoint is a complete closed-sourcing like what handsontable did
[00:33:46] <systemfault> No problem with that... a proper fork can happen, a new community would be created and it would have its own "python client"
[00:33:54] <sheetjs> whether thats good is up for debate, maybe it would clear the way for a better open source project to emerge
[00:34:00] <systemfault> And it wouldn't be by Satan Inc.
[00:34:21] <sheetjs> that already happened ... and it's funded by amazon
[00:34:31] <sheetjs> so in a funny way, amazon ends up being the good guys here
[00:39:25] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[00:40:45] <pycurious> GreenJello: Those headers were added to nginx
[00:41:48] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[00:42:55] *** Joins: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com)
[00:43:10] <systemfault> sheetjs: I call BS on that one.
[00:43:29] <sheetjs> https://github.com/opensearch-project/OpenSearch ?
[00:43:50] <systemfault> Oh, there's the word "open" in it, so it must be true
[00:44:17] <systemfault> Is that project going to survive without the amazon's support?
[00:44:18] <sheetjs> here's the question
[00:44:36] <sheetjs> is it open? the project is fully apache 2.0
[00:45:05] *** Quits: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:46:03] *** Joins: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com)
[00:46:45] <GreenJello> pycurious, ?
[00:46:51] <GreenJello> what headers?
[00:47:03] <hax> can redis be used to speed up data collection from front-end js?
[00:47:17] <hax> sorry not redis...forgot the right package
[00:47:27] <GreenJello> redux?
[00:48:07] <hax> no, like a thing that can just accept data for later processing by a backend server like node
[00:48:18] <hax> more of a queue so that node doesn't get killed
[00:48:47] <hax> if I were doing analytics, and didn't want front-end js sending every data point as a post request
[00:52:09] *** Joins: anton (~anton@tloks.com)
[00:52:18] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[00:52:50] <hax> ooh rabbitMQ is what I was thinking of
[00:53:10] <hax> sorry for thinking out loud in the channel. my bad.
[00:54:14] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[00:54:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[00:54:55] <systemfault> Way to avoid the issue here...
[00:55:11] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:257d:20:516b:5d31) (Ping timeout: 252 seconds)
[00:55:22] <GreenJello> queues can be useful, but you still have to put the data in the queue by having the user POST it to your server
[00:56:33] *** Quits: Camilo (~hugh@37.120.133.74) (Ping timeout: 258 seconds)
[00:56:50] *** Joins: fikran (~fikran@user/fikran)
[00:56:51] <GreenJello> you more want to do batching on the client side to reduce the number of requests, and maybe have servers dedicated to ingest of metrics
[00:56:55] *** Quits: anton (~anton@tloks.com) (Client Quit)
[00:57:04] <systemfault> sheetjs: Tons of forks have no community, they're technically "open" but only exist because of some company... If people really wanted a totally open-source version of elasticsearch, it would have been started organically...
[00:57:23] *** Joins: bambanxx (~bambanx@181-163-41-17.baf.movistar.cl)
[00:57:33] <systemfault> sheetjs: Then maybe, later on, amazon would have helped by adding contributors.
[00:58:01] <systemfault> sheetjs: Maybe I'm mistaken, but it really looks like a fork Amazon did to run on AWS.
[00:58:10] *** Quits: Guest716 (~Guest7@188.232.182.132) (Quit: Client closed)
[00:58:19] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[00:58:33] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 268 seconds)
[00:58:54] *** Joins: anton (~anton@tloks.com)
[00:59:12] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[00:59:37] <sheetjs> the way it played out is exactly what you should expect from such a sudden change
[01:00:05] <sheetjs> elastic changes license -> is there time to let a community grow when business is disrupted?
[01:00:05] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Quit: Leaving)
[01:00:34] <sheetjs> so of course amazon would have to step in quickly.  whether a community will grow depends on a number of factors
[01:00:54] *** Quits: anton (~anton@tloks.com) (Remote host closed the connection)
[01:01:03] <systemfault> Amazon is not a community.
[01:01:26] <sheetjs> you haven't given time to determine whether amazon can build a community atmosphere
[01:01:37] <systemfault> sheetjs: True... Amazon is a new company
[01:01:46] *** Joins: arthurpbs (~arthurpbs@168.121.99.99)
[01:01:50] <sheetjs> you mean "opensearch is a new project"
[01:02:08] <systemfault> That was sarcasm.
[01:02:17] <systemfault> Amazon doesn't give a shit.
[01:02:20] <sheetjs> sure
[01:02:45] <sheetjs> and neither does facebook, as judged by their treatment of flow
[01:03:02] <systemfault> Yeah, never said that they cared.
[01:03:14] <systemfault> The only thing that remains from Facebook is React.
[01:03:49] <sheetjs> https://medium.com/flow-type/clarity-on-flows-direction-and-open-source-engagement-e721a4eb4d8b
[01:03:56] <sheetjs> what you're describing is closer to the end
[01:04:06] <sheetjs> Going forward, Flow is staying open source and we will be happy to review pull requests that improve library definitions and website documentation, but we may not be able to accept PRs for Flow itself if the PRs don’t align with our priorities. The complexity of Flow’s codebase makes it difficult to contribute to Flow itself, and our company-internal build systems, performance tests and integration tests make it very time consuming to r
[01:04:06] <sheetjs> eview and integrate such pull requests, so we may close PRs that don’t align with our priorities. Similarly, we will close GitHub issues when we know we will not be able to provide timely support.
[01:05:47] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f136:55d8:ea0:66ac)
[01:07:44] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[01:08:25] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[01:08:38] <hax> GreenJello, thanks for the advice!
[01:10:37] <hax> doing local queuing is definitely top of the list. I'm just trying to think ahead, looking for future bottlenecks
[01:12:14] *** Joins: summersault (~summersau@179.221.251.16)
[01:12:35] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Client Quit)
[01:13:04] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 272 seconds)
[01:14:55] <jacekowski> sheetjs: that's a case with a lot of open source projects
[01:15:20] <jacekowski> sheetjs: if you submit a PR then a lot of projects expect you to own it and maintain it
[01:15:59] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 244 seconds)
[01:16:30] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:e95e:e379:78f4:bcee) (Quit: Textual IRC Client: www.textualapp.com)
[01:17:33] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[01:18:19] <l__q> GreenJello: you the best!  this virtualized for react does work!
[01:18:32] <l__q> i love you <3 (no homo)
[01:18:40] <l__q> THANKS
[01:19:11] <l__q> i love react <3
[01:19:35] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[01:19:52] <l__q> omg this works betters as Im exppect
[01:19:58] <l__q> :D
[01:20:04] *** Joins: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net)
[01:20:49] <l__q> If you guys have a lot of data in your state, use: react-virtualized
[01:21:08] <l__q> this works better as you can expect
[01:21:28] <l__q> GreenJello: Thanks!
[01:21:40] <GreenJello> glad it worked out
[01:22:22] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:1c9b:33f6:3cfd:159e)
[01:23:34] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:24:16] <l__q> GreenJello: You are my master <3
[01:24:24] <l__q> it works
[01:24:49] <l__q> why no tutorual show this?
[01:25:10] <l__q> fisrt on IRC im lerned this
[01:26:37] <l__q> thanks this channel im have a good react project :x
[01:26:47] <l__q> thanks guys
[01:27:01] <l__q> mirkochat.pl
[01:27:02] <GreenJello> it's an advanced technique for solving performance problems. I've only had to use it a handful of times over many years using React
[01:27:26] <l__q> ok
[01:27:36] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:28:01] <l__q> now Im solved with react-virtualized pervomence with user list LD
[01:28:04] <l__q> :D
[01:32:12] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[01:36:27] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[01:37:30] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[01:37:33] <teut> [{"text":"g", "counter": 6}, {"text":"h", "counter": 7}]  ->  {"g":6 , "h": 7}?
[01:38:05] <teut> without using loop , how to do use using js or lodash?
[01:38:08] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:39:09] <sheetjs> n> Object.fromEntries([{"text":"g", "counter": 6}, {"text":"h", "counter": 7}].map(x => [x.text, x.counter]))
[01:39:10] <jellobot> (okay) { g: 6, h: 7 }
[01:39:58] <teut> thanks
[01:43:27] *** Joins: Liblx (~Alex@2a02:810c:280:59c:7471:c11:7e53:10ff)
[01:43:29] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:44:27] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[01:44:51] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:45:03] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[01:46:42] *** Joins: jonifen (~jonifen@user/jonifen)
[01:47:47] *** Quits: jonifen (~jonifen@user/jonifen) (Client Quit)
[01:49:23] *** Joins: jonifen (~jonifen@user/jonifen)
[01:51:13] <teut>  { g: 6, h: 7 }    any way to reindex it?    {g:1, h:2}      start=1  , by using the value   ?
[01:51:56] <teut> {a:67, b:4, c:89}   ->  {a:2, b:1, c:3}
[01:54:01] <teut> oh the index , that can be used
[01:54:14] *** Quits: Aayush (~Alvin@user/aayush) (Quit: Cya)
[01:55:26] <GreenJello> it'd be easier to do that if you started with the array, but you could use Object.entires on the object, and sort that
[01:55:37] <teut> Uploaded file: https://uploads.kiwiirc.com/files/9b01aa2f0aa046274cef04bb287a0574/pasted.txt
[01:55:49] <teut> yes , I think this should work
[01:56:01] <GreenJello> that's not correct use of sort
[01:56:02] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:56:10] <teut> hmm, ok its inplace ig
[01:56:23] <GreenJello> that's no the issue
[01:56:33] <GreenJello> read the docs on sort to see how to use it
[01:56:47] <teut> i m already doing that
[01:56:57] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 248 seconds)
[01:57:18] <teut> If compareFunction(a, b) returns a value > than 0, sort b before a.
[01:57:37] <teut> i think you are pointing at this
[01:57:48] <GreenJello> yeah, and in this case it's just numbers, so subtraction would get the job done
[01:57:53] <teut> true == 1 so it should be correct
[01:58:00] <GreenJello> there are other rules
[01:58:11] <GreenJello> about when you return 0, or a negative number
[01:59:03] <teut> same order, will that be a problem?
[01:59:18] <teut> the keys are unique for sure
[01:59:40] <GreenJello> best to do it correctly even if it doesn't appear to matter with a specific input
[01:59:41] <teut> i e the  "text"
[02:00:17] <Kirjava> arcsecond is a great library for parsing
[02:00:22] <Kirjava> are there others I should check out too?
[02:00:23] <GreenJello> I'm not sure if it's possible or not to get out of order results if everything is unique and you return a boolean
[02:01:18] <teut>             .sort((a, b) => a.counter - b.counter)
[02:01:19] <teut>   ok?
[02:01:26] <GreenJello> yep
[02:05:11] *** Quits: bambanxx (~bambanx@181-163-41-17.baf.movistar.cl) (Quit: Textual IRC Client: www.textualapp.com)
[02:06:49] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:09:45] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:10:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:12:19] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[02:13:47] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[02:15:38] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[02:15:45] *** Quits: JackFin (~ircuser@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[02:28:26] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:30] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:33:31] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[02:33:34] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:34:02] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[02:36:00] *** Joins: Harlin_ (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[02:36:11] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[02:36:25] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:38:57] *** Joins: fassl (~fassl@2a02:8388:1987:9380:246f:f447:a757:d74f)
[02:39:49] *** Joins: mickey86 (~user@user/mickey)
[02:40:09] *** Quits: Harlin_ (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Ping timeout: 248 seconds)
[02:40:19] *** Quits: Liblx (~Alex@2a02:810c:280:59c:7471:c11:7e53:10ff) (Excess Flood)
[02:40:37] <fassl> hey, i've got a problem where i can view a Map object in the developer tools in chrome, but when i try to access it from my script it is undefined. what could be wrong here?
[02:40:50] *** Joins: anton (anton@tloks.com)
[02:40:55] <sheetjs> timing?
[02:41:31] *** Quits: teut (~teut@182.69.87.27) (Quit: Connection closed)
[02:41:35] *** Quits: LiftLeft (~LiftLeft@154.21.114.33) (Ping timeout: 258 seconds)
[02:41:49] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:41:57] <fassl> its an undo/redo stack which gets filled, i should at least get an outdated one on the second try if timing was a problem?
[02:42:08] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (Ping timeout: 268 seconds)
[02:42:38] <fassl> if it gets not reset beforehand that is, hm
[02:42:40] <sheetjs> if you are using devtools, logging an object is "live"
[02:43:39] <sheetjs> for example
[02:43:46] *** Joins: Liblx (~Alex@2a02:810c:280:59c:7471:c11:7e53:10ff)
[02:43:53] *** Quits: junktext (~junktext@109.201.152.161) (Ping timeout: 258 seconds)
[02:44:04] <sheetjs> run var x = {a:3}; console.log(x); setTimeout(() => x.a = 5, 5000) in the console, then you'll see the |> {a: 3} thing
[02:44:09] <sheetjs> wait 10 seconds before expanding
[02:44:30] <sheetjs> you'll see a: 5 below {a: 3} because the properties would have been resolved at the time you clicked |>
[02:45:02] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[02:45:42] <fassl> can i set a breakpoint for when the variable is set?
[02:46:21] <sheetjs> if you're in the browser, add a `debugger` statement
[02:46:30] *** Joins: ferdna (~ferdna@user/ferdna)
[02:46:37] <sheetjs> alternatively, log something that will literally be a string
[02:46:52] <sheetjs> in the previous example, console.log(JSON.stringify(x))
[02:47:31] <GreenJello> or for a Map: console.log(JSON.stringify([...myMap]))
[02:50:05] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[02:50:22] <fassl> ok, i've got a watch, but will it break or do i have to step through the code and monitor when it changes?
[02:51:41] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2851:91a4:af4c:7957) (Quit: Textual IRC Client: www.textualapp.com)
[02:52:04] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:52:28] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Client Quit)
[02:53:23] *** Joins: LiftLeft (~LiftLeft@212.102.59.168)
[02:55:02] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[02:55:05] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:55:38] <fassl> but yeah you are right sheetjs, thanks for the help, to you too GreenJello
[02:57:14] *** Joins: gehn (~gehn@user/gehn)
[02:59:48] *** Joins: matsaman (~matsaman@user/matsaman)
[03:00:41] *** Parts: wallbroken (wallbroken@user/wallbroken) ()
[03:04:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 272 seconds)
[03:05:42] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Remote host closed the connection)
[03:05:59] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[03:06:11] *** Joins: fikran (~fikran@user/fikran)
[03:07:49] <fassl> i was missspelling the variable fml xD
[03:11:29] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[03:11:47] *** Joins: Pixi (~Pixi@user/pixi)
[03:12:02] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:15:14] *** Quits: cog (~Atlas@2604:3d08:b27f:ae00:912f:6c43:4e9d:1b80) (Remote host closed the connection)
[03:16:03] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[03:18:13] <cthulchu> damn,, chrome eats too much memory
[03:18:15] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[03:18:17] *** Joins: debsan (~debsan@2800:810:471:8425::1000)
[03:18:47] <GreenJello> cthulchu, yeah, I gave up running it on my macbook with only 16gb of RAM
[03:19:12] <cthulchu> exactly
[03:19:46] <cthulchu> I'm at 16 too, and it's just annoying. I actually ran out of memory and it started using swap
[03:19:55] <cthulchu> I have to use a separate laptop for youtube now
[03:20:41] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 258 seconds)
[03:21:01] <GreenJello> or just use safari if on a mac
[03:21:55] <GreenJello> firefox for a couple youtube tabs is also fine
[03:22:01] <GreenJello> if you need ublock
[03:22:41] *** Joins: thiras (~thiras@user/thiras)
[03:27:24] *** Meowmancer is now known as Neuromancer
[03:29:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:32:52] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Remote host closed the connection)
[03:33:31] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[03:34:11] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Killed (erbium.libera.chat (Nickname regained by services)))
[03:34:11] *** jmcantre1 is now known as jmcantrell
[03:34:18] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[03:34:19] *** Quits: cbleslie2 (~cbleslie@47.148.37.101) (Read error: Connection reset by peer)
[03:34:28] *** Joins: Guest330 (~jmcantrel@user/jmcantrell)
[03:34:47] <sheetjs> python + youtube-dl is a good experience
[03:34:49] *** Joins: cbleslie2 (~cbleslie@47.148.37.101)
[03:36:06] <wroathe> sheetjs: You're a good experience.
[03:36:31] <austincheney> finally, I am starting to figure out devtools protocol.  my test automation application can now execute all user interactions at any point in the dom on mutiple pages/tabs
[03:36:47] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[03:38:13] <austincheney> i thinking about using it to build a downvote bot that immature people can use to automate comment downvoting on reddit and hackernews.  There is no way to detect that its a bot except for looking at timing hueristics
[03:39:54] <cis> HN supposedly has a fair amount of anti-bot functionality
[03:41:20] <sheetjs> sheetjs is an innovator in developer experience
[03:42:30] <sheetjs> wroathe: actually there's a small blurb in one of the READMEs about it
[03:42:35] <sheetjs> https://github.com/SheetJS/sheetjs#philosophy
[03:43:22] <sheetjs> before sheetjs, these APIs were format-specific.  there's a java library "POI" and two completely different sets of classes for XLS and XLSX
[03:45:40] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[03:46:52] <wroathe> sheetjs: Hrm, I take back what I said. I do not like the experience of talking to a library.
[03:48:45] <sheetjs> haha oof
[03:53:39] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[03:55:01] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:55:29] *** Quits: cbleslie2 (~cbleslie@47.148.37.101) (Read error: Connection reset by peer)
[03:55:47] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[03:56:05] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[03:57:24] *** Quits: fassl (~fassl@2a02:8388:1987:9380:246f:f447:a757:d74f) (Quit: Leaving)
[03:59:00] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[04:00:29] <cthulchu> wow, firefox is a lot better than chrome at youtube. Who would've expected
[04:06:10] <Slade> what platform
[04:07:12] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:10:17] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[04:12:48] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[04:14:20] *** Joins: Guest92 (~Guest92@d207-189-236-135.yt.northwestel.net)
[04:25:45] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[04:30:19] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:31:05] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 248 seconds)
[04:33:44] <howdoi> there is no easy way to render a list of mp3 files as a playlist....hmm...
[04:35:30] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Ping timeout: 276 seconds)
[04:36:01] <gehn> what does "render an mp3 file" mean though?
[04:36:14] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[04:36:17] <gehn> if you just want to make a list of each one with the title, that's plenty easy
[04:36:20] <sheetjs> list
[04:36:32] <gehn> if you want to render the waveform contents, that's surely also doable but more challenging
[04:36:46] <sheetjs> like an m3u playlist
[04:37:12] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[04:37:27] <howdoi> m3u maybe
[04:37:53] <howdoi> <audio playlist="./mp3"/>
[04:38:11] <howdoi> I have a dir of mp3s, need to create a media player with playlist
[04:38:43] <howdoi> I can do it by hand, but just looking for an existing lib
[04:39:08] <sheetjs> what server
[04:39:18] <sheetjs> there might be an express middleware or something
[04:39:55] <howdoi> I can just create a <ul> with all the file name and one click I can load the audio and play it, but I am looking for something that is prebaked and is responsive and looks like a media player. (this page would be for non-tech folks)
[04:40:07] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:40:19] <howdoi> sheetjs: netlify
[04:41:55] <sheetjs> is it a static site?
[04:42:03] <sheetjs> you probably can generate the list each time
[04:42:14] <howdoi> sheetjs: netlify
[04:42:22] <howdoi> yes static
[04:42:48] <howdoi> yes, I could, but as I mentioned, looking if some lib has already solved it
[04:45:12] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:45:39] <howdoi> https://howlerjs.com/#player is one such but no so impressive
[04:46:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:47:05] <sheetjs> https://kolber.github.io/audiojs/demos/test6.html ?
[04:48:15] <howdoi> sheetjs: came across that, old school?
[04:48:36] <howdoi> also doesn't look that responsive
[04:49:09] <sheetjs> yeah most libraries attempt to provide audio support for older browsers
[04:50:24] <howdoi> sheetjs: https://codepen.io/521dimensions/pen/BbXmJX this looks better?
[04:50:32] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[04:50:52] <sheetjs> eyes of the beholder
[04:50:59] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:50:59] <sheetjs> some people like the classic winamp style
[04:51:01] *** Quits: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com) (Ping timeout: 268 seconds)
[04:51:29] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:54:45] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:55:20] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[04:55:36] <howdoi> nods
[04:55:58] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:56:35] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:57:13] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[04:58:03] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:59:12] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:59:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:59:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[05:00:20] <cis> it really whips the llama's ass
[05:00:25] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[05:00:59] *** Joins: m4t (~matt@shenzhen.guangdong.systems)
[05:02:24] <m4t> hey, in chrome dev console, if i define a regex, and check it against the same value multiple times in a row, sometimes it returns true, sometimes false. https://imgur.com/a/wMNOEKK any idea why it's doing that?
[05:02:26] *** Quits: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:02:43] <m4t> is it just some weirdness with chrome dev console or is there something about regex.exec() i'm not grasping?
[05:03:56] <m4t> firefox is behaving the same way actually
[05:04:04] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:04:13] <GreenJello> if you call it with the same string, it starts matching from where the last match ended
[05:04:18] <GreenJello> exec is weird
[05:04:23] <m4t> ah, i see, thanks
[05:04:46] <GreenJello> you could set rExp.lastIndex = 0; after each to reset it
[05:04:54] <GreenJello> or make a function that returns the regexp literal
[05:05:01] <entuland> TIL
[05:05:17] <m4t> cool, yeah that did it
[05:05:22] <entuland> I'll have to set that to mind, I've been bitten by the weirdest oddities lately
[05:08:29] <m4t> i think i see the bug here then https://github.com/Logitech/slimserver/blob/public/8.2/HTML/EN/html/SqueezeJS/Base.js#L835-L840
[05:08:32] <entuland> such as if you set the background of an element to 200%, in order to have the background position wrap around exactly at 100% using percentage values, you have to go _beyond_ 100% (auto-adapting sprites, it's even hard to explain in simple terms)
[05:08:35] <m4t> it calls it twice
[05:09:32] <m4t> will try resetting the index as above and restarting
[05:10:17] <sheetjs> too clever by half
[05:10:19] *** Joins: Betal (~Betal@user/betal)
[05:10:43] <entuland> is it even necessary to use exec there?
[05:10:50] <m4t> shrug
[05:11:01] <sheetjs> url may have changed
[05:12:14] <sheetjs> its weird tho
[05:13:36] <sheetjs> its trying to find player=, which probably should've been
[05:13:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[05:13:45] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d)
[05:13:48] <sheetjs>  url.search(/\bplayer=/)
[05:14:24] <entuland> it's odd also because it runs it once at line 837, then alters the url, then runs it again on the altered url... that's the kind of code I am tempted to give up understanding :P
[05:14:57] <m4t> the regexp isn't always matching when it ought to. must be indexed further into the string second time around
[05:14:58] <sheetjs> taking the literal name as the intention
[05:15:05] *** Joins: blz (~matheus@2804:f14:c095:f301::6)
[05:15:17] <sheetjs> it should have stripped out all of the instances of player= and then added it to the end
[05:15:24] <m4t> it adds it twice
[05:15:30] *** Joins: fikran (~fikran@user/fikran)
[05:15:58] <m4t> ?player=foo&player=foo
[05:16:19] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f136:55d8:ea0:66ac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Ping timeout: 252 seconds)
[05:17:13] <sheetjs> url = url.replace(/\bplayer=.*?&/ig, ""); if(url.slice(-1) != "?") url += "?"; return url + "&player=" + id
[05:17:16] *** nomic2 is now known as nomic
[05:17:29] <sheetjs> err
[05:21:12] <sheetjs> n> var u="//someurl/page?player=foo&some=thing&player=bar";  u = u.replace(/player=.*?(&|$)/ig, ""); if(u.slice(-1) != "?") u += "?"; u + "&player=" + "blah"
[05:21:12] <jellobot> (okay) '//someurl/page?some=thing&?&player=blah'
[05:21:45] <sheetjs> n> var u="//someurl/page?player=foo&some=thing&player=bar";  u = u.replace(/player=.*?(&|$)/ig, ""); if(u.indexOf("?") == -1) u += "?"; u + "&player=" + "blah"
[05:21:46] <jellobot> (okay) '//someurl/page?some=thing&&player=blah'
[05:22:35] *** Quits: realies- (~realies@178-169-218-119.haskovo.ddns.bulsat.com) (Ping timeout: 258 seconds)
[05:22:59] <sheetjs> actually that's still wrong
[05:23:09] <sheetjs> n> var u="//someurl/page?player=foo&some=thing&aplayer=bar";  u = u.replace(/\bplayer=.*?(&|$)/ig, ""); if(u.indexOf("?") == -1) u += "?"; u + "&player=" + "blah"
[05:23:09] <jellobot> (okay) '//someurl/page?some=thing&aplayer=bar&player=blah'
[05:28:43] *** Quits: fikran (~fikran@user/fikran) (Quit: WeeChat 2.8)
[05:33:37] *** Quits: onur (~onur@user/onur) (Quit: Leaving)
[05:37:56] *** Joins: matsaman (~matsaman@user/matsaman)
[05:42:25] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5ced:8697:4c5:e97d) (Quit: Leaving)
[05:45:19] *** Quits: xsperry (~as@user/xsperry) ()
[05:47:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[05:48:34] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 272 seconds)
[05:54:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:57:43] *** Quits: t3nj1n_ (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[05:58:42] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 272 seconds)
[05:58:50] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:59:40] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[06:01:09] *** Quits: Jonno_FTW (~come@api.carswap.me) (Quit: Reconnecting)
[06:01:17] *** Joins: Jonno_FTW (~come@api.carswap.me)
[06:01:31] *** Quits: Jonno_FTW (~come@api.carswap.me) (Changing host)
[06:01:31] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[06:02:04] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:03:36] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:09:43] *** Joins: aexijh (~aexijh@bras-vprn-unvlon5573w-lp130-07-174-93-47-157.dsl.bell.ca)
[06:09:49] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[06:16:19] *** Quits: blz (~matheus@2804:f14:c095:f301::6) (Quit: Konversation terminated!)
[06:16:46] *** Joins: blz (~matheus@2804:f14:c095:f301::6)
[06:19:13] *** Quits: gde35|2 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[06:19:42] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[06:26:55] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:29:10] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:30:18] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:30:33] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[06:32:47] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:33:11] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[06:33:27] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:34:49] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 248 seconds)
[06:36:34] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:38:12] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 256 seconds)
[06:40:29] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Remote host closed the connection)
[06:43:47] *** Joins: Rockwood (~Rocky@user/rocky)
[06:43:54] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[06:43:57] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[06:44:51] *** Quits: anton (anton@tloks.com) (Quit: anton)
[06:44:59] *** Joins: anton (anton@tloks.com)
[06:46:00] *** Joins: zebrag (~chris@user/zebrag)
[06:46:30] <EvanCarroll> Semantic Release is the worst thing ever.
[06:46:43] <EvanCarroll> friends don't let friends semantic-release
[06:46:57] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:47:28] <sheetjs> there are plenty of worse things
[06:48:20] <sheetjs> version-less releases, for one
[06:48:49] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[06:53:01] *** Joins: kmh (~kmh@p200300df5f0c180024ffd0b69acc61a1.dip0.t-ipconnect.de)
[06:54:04] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[06:54:11] *** Joins: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com)
[06:55:04] *** Quits: kmh_ (~kmh@p200300df5f0d0200dc05e9b97966e73c.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:56:15] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:59:03] *** Joins: alyx (alyx@atheme/alyx)
[07:00:21] <ljharb> yes, it’s bad
[07:00:25] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[07:00:41] <ljharb> anything that removes the human last line of defense from publishing (the only irrevocable thing) is harmful
[07:01:14] <sheetjs> you can't unpublish?
[07:01:41] <ljharb> not if anyone depends on any version of your package
[07:02:07] <ljharb> iow, if your package matters, you can’t unpublish any version, immediately
[07:05:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:06:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:07:12] *** Quits: blez (~blez@213.91.182.96) ()
[07:08:12] *** Joins: realies (~realies@user/realies)
[07:12:18] *** Quits: joepie91 (~joepie91p@user/joepie91) (Ping timeout: 240 seconds)
[07:12:36] *** Quits: realies (~realies@user/realies) (Ping timeout: 258 seconds)
[07:16:47] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[07:16:50] *** Joins: joepie91 (~joepie91p@user/joepie91)
[07:17:31] *** Quits: anton (anton@tloks.com) (Quit: anton)
[07:21:40] *** Quits: joepie91 (~joepie91p@user/joepie91) (Ping timeout: 272 seconds)
[07:22:11] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 258 seconds)
[07:22:25] <Slade> there isnt a docker image for node thats just 'lts' or something :(
[07:22:54] <Rockwood> o/ good morning
[07:23:07] <GreenJello> Slade, you need to make the decision to update, which is good
[07:23:33] <GreenJello> it's also unclear when they'd update the lts tag
[07:23:34] <Slade> GreenJello, cept its for a dev environment. and i wanted something more stable than latest :P
[07:23:51] <GreenJello> I'd still want to specify the major
[07:24:03] <Slade> probably the same time they upgrade the lts-alpine3.14 tag
[07:24:08] <GreenJello> especially since there isn't a lock file for image versions
[07:24:49] <Slade> which implies they're happy with LTS as long as its tied to a specific os
[07:25:44] <Slade> i wonder how node and alphine get along
[07:25:48] <Slade> alpine
[07:26:21] *** Joins: joepie91 (~joepie91p@user/joepie91)
[07:26:27] <GreenJello> just fine until you have a native dep
[07:26:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:32:36] *** Quits: IceMichael (~IceMichae@x527162ea.dyn.telefonica.de) (Ping timeout: 268 seconds)
[07:36:42] <Slade> probably totally suitable for build chains
[07:37:43] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:40:04] *** Joins: IceMichael (~IceMichae@dynamic-046-114-152-117.46.114.pool.telefonica.de)
[07:40:57] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[07:43:35] *** Quits: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net) (Quit: Going offline, see ya! (www.adiirc.com))
[07:44:12] *** Joins: matsaman (~matsaman@user/matsaman)
[07:48:41] <Slade> info fsevents@1.2.13: The platform "linux" is incompatible with this module.
[07:48:42] <Slade>    <-- literally the least compatible module ever
[07:49:44] <matsaman> '"linux"'
[07:49:51] <matsaman> 'cause who in software's ever heard of that
[07:49:57] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[07:51:38] <GreenJello> Slade, it also doesn't work on windows
[07:51:45] <hax> it's been incompatible so long, I suspect the dev has passed on, and no source code can be found
[07:52:09] *** Quits: IceMichael (~IceMichae@dynamic-046-114-152-117.46.114.pool.telefonica.de) (Ping timeout: 248 seconds)
[07:52:54] *** Joins: IceMichael (~IceMichae@dynamic-046-114-152-117.46.114.pool.telefonica.de)
[07:53:28] <matsaman> although
[07:53:35] <Slade> GreenJello, yup
[07:53:36] <matsaman> it does say it's just for macOS on the tin, doesn't it?
[07:55:00] <Slade> speaking of obscure things that affect code between builds. i wonder if browserslist "> 1.5%" is sane
[07:55:34] <sheetjs> its either too stringent or not stringent enough
[07:55:39] <sheetjs> 1.5% seems super arbitrary
[07:57:28] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:57:32] <sheetjs> Slade: did you read the description?
[07:57:51] <sheetjs> "Native access to MacOS FSEvents in Node.js"
[07:58:06] <Slade> sheetjs, i didnt. it just always pops up :P
[07:58:20] <GreenJello> 1.5% is slightly forward looking, but you could go a bit more with e% or π%
[07:58:29] <sheetjs> one deficiency of npm is the inability to make platform-specific modules
[07:59:00] *** Quits: happymeal (~happymeal@user/happymeal) (Read error: Connection reset by peer)
[07:59:17] <sheetjs> if you said > 5% what would make the cut?
[07:59:37] <sheetjs> https://browserslist.dev/?q=PiA1JQ%3D%3D
[08:00:54] *** Joins: xsperry (~as@user/xsperry)
[08:00:54] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 258 seconds)
[08:01:50] <sheetjs> 2% https://browserslist.dev/?q=PiAyJQ%3D%3D edge and samsung show up on the list
[08:03:57] <Slade> last 3 chrome versions, last 1 chromeandroid versions, last 2 firefox versions, last 2 edge versions, last 2 safari versions, last 2 ios versions  <-- less arbitrary? ;P
[08:04:41] <sheetjs> 1.5% feels arbitrary, a pathological choice to make firefox relevant
[08:05:17] <Slade> whats the default browser on most linux distros these days?
[08:05:49] *** Quits: wintersky (uid453465@id-453465.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[08:07:40] *** Quits: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net) (Quit: Leaving.)
[08:07:43] <Slade> (I genuinely dont know the answer)
[08:10:09] <sheetjs> depends on distro
[08:10:28] <sheetjs> either some firefox-based browser or chrome or konqueror
[08:13:22] <Slade> only reason for firefox relevance
[08:13:59] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:17:00] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[08:21:12] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:28:13] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[08:32:36] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 272 seconds)
[08:32:48] *** ___Rockwood__ is now known as Rockwood
[08:33:51] <Slade> not to be ungrateful to jenkins. but its groovy language feels a bit 'bolted on'
[08:37:48] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:38:11] *** Joins: gggp (~gggp@60.10.23.162)
[08:50:35] <Rockwood> bye cya
[08:51:29] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:51:44] *** Quits: strive (~strive@user/strive) (Ping timeout: 268 seconds)
[08:52:44] *** Quits: gggp (~gggp@60.10.23.162) (Remote host closed the connection)
[08:53:08] *** Joins: gggp (~gggp@60.10.23.162)
[08:57:08] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[08:57:51] *** Joins: realies (~realies@user/realies)
[09:00:00] *** Joins: ferdna (~ferdna@user/ferdna)
[09:00:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:02:49] *** Quits: blz (~matheus@2804:f14:c095:f301::6) (Quit: Konversation terminated!)
[09:03:14] *** Quits: realies (~realies@user/realies) (Ping timeout: 268 seconds)
[09:03:38] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[09:09:58] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[09:23:02] *** Joins: realies (~realies@user/realies)
[09:24:01] <sheetjs> oof 98.6% javascript 0.3% makefile
[09:24:06] <sheetjs> how does github even determine that
[09:24:15] *** Joins: Jaran|zZzZZZz (~mail@user/jaran)
[09:24:46] *** Jaran|zZzZZZz is now known as Jaran
[09:24:54] <GreenJello> sheetjs, file names, and the number of newline characters, more or less
[09:25:37] <wroathe> sheetjs: Just to screw with them, name a JS file "Makefile"
[09:27:02] *** Quits: byte4byte_ (~byte4byte@c-73-219-127-47.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[09:27:27] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:27:54] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[09:30:44] <sheetjs> or just tell it not to count any javascript files :P
[09:31:31] <sheetjs> damn https://github.com/search?o=desc&q=language%3AMakefile&s=stars&type=Repositories doesn't take a lot to be the most popular makefile repo
[09:32:14] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:32:48] <GreenJello> the first one is 100% Makefile
[09:33:22] <sheetjs> anything can be 100% makefile if you try hard enough and tell github that your javascript source is actually documentation
[09:34:14] <GreenJello> that's the spirit!
[09:35:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[09:39:40] *** Quits: ckdcreation (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[09:39:54] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[09:40:55] <ljharb> sheetjs: npm has that ability
[09:41:11] <ljharb> sheetjs: a package can define `engines.os` and `engines.cpu`
[09:41:29] <ljharb> sheetjs: and npm 7, at least, will avoid installing it when it's an optional dep and the engines don't match
[09:44:48] *** Quits: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[09:46:16] *** Quits: Guest92 (~Guest92@d207-189-236-135.yt.northwestel.net) (Quit: Client closed)
[09:51:31] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:51:37] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 248 seconds)
[09:54:49] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[09:56:01] *** Joins: teut (~teut@182.69.87.27)
[09:56:36] <teut> Object.keys(testList).filter(testID => testList[testID].text.startsWith(search_text)).slice(0, 10).map((testID) => {               this would give top 10 items matching the search text, testList  is an Object here
[09:57:03] <teut> but in case of     search_text= ""  , I need to return full testList
[09:57:37] <teut>  testList[testID].text.startsWith(search_text)     what should this condition be to do that?
[09:58:13] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:588:5975:f4ef:e434:54a2) (Remote host closed the connection)
[09:58:20] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:588:5975:f4ef:e434:54a2)
[09:59:00] *** Joins: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e)
[09:59:01] <Slade> cloudflare wrangler is absolute garbage :/
[09:59:21] <Slade> not impressive as a rust app
[09:59:52] <GreenJello> teut, it's just an extra condition
[10:00:33] <teut> testList[testID].text.startsWith(search_text)?search_text:true
[10:00:36] <teut> I think
[10:01:28] <GreenJello> simpler than that. Think about the logic you're trying to express
[10:01:33] <GreenJello> write a decision tree if you need to
[10:01:53] <teut> decision tree, is that some algorithm?
[10:02:15] <GreenJello> er decision table? the term escapes me right now
[10:02:31] <GreenJello> I mean on paper
[10:02:36] <teut> ok, I ll try
[10:03:11] <teut> btw I need   "in" instead of startsWith
[10:03:11] *** Quits: debsan (~debsan@2800:810:471:8425::1000) (Ping timeout: 258 seconds)
[10:03:29] <teut> will our approach work with in also?
[10:03:36] <teut> your*
[10:08:40] *** Quits: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 244 seconds)
[10:08:45] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:12:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:12:57] <ljharb> teut: `.includes`?
[10:13:18] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:13:31] <teut> in is there so why includes?
[10:13:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[10:14:06] <teut> n>   "45"  in "895645"
[10:14:07] <jellobot> (fail) TypeError: Cannot use 'in' operator to search for '45' in 895645
[10:14:25] <systemfault> Hammers exist so why screwdrivers?
[10:14:25] <teut> ok I know incorrect things
[10:14:54] <teut> n>  "yo" in "yoman"
[10:14:55] <jellobot> (fail) TypeError: Cannot use 'in' operator to search for 'yo' in yoman
[10:15:14] <systemfault> The "in" operators is a way to check if a string is a key in the target object
[10:15:24] <systemfault> n> 'lol' in { lol: 10 }
[10:15:25] <jellobot> (okay) true
[10:15:28] <systemfault> n> 'lol' in { lolz: 10 }
[10:15:28] <jellobot> (okay) false
[10:15:33] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:15:42] <teut> in python , it worked for all so I assumed it is same
[10:15:50] <teut> just say the docs for it
[10:15:52] <teut> saw*
[10:15:57] <systemfault> Nah, don't do that kind of assumptions :P
[10:16:16] <teut> yes, I can try
[10:20:59] <ljharb> teut: `in` is just for properties. not for strings.
[10:21:13] <teut> yes , I saw the docs
[10:21:26] <teut> like I said bad assumption
[10:21:39] <teut> happens too offen switching languages
[10:21:44] <teut> often*
[10:24:39] *** Quits: realies (~realies@user/realies) (Ping timeout: 258 seconds)
[10:24:41] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[10:25:55] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:29:34] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[10:31:46] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[10:35:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[10:41:03] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:44:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[10:47:30] *** Quits: LiftLeft (~LiftLeft@212.102.59.168) (Ping timeout: 272 seconds)
[10:47:55] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1472:bf91:526b:6b72)
[10:52:22] <teut> window.localStorage.getItem("searchText") || ""         this is giving me undefined in the start
[10:52:31] <teut> shouldnt it give "" ?
[10:58:44] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[10:58:46] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[10:58:54] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:588:5975:f4ef:e434:54a2) (Remote host closed the connection)
[10:59:04] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:588:5975:f4ef:e434:54a2)
[11:00:37] <ljharb> yes
[11:02:21] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:588:5975:f4ef:e434:54a2) (Remote host closed the connection)
[11:04:41] <teut> whatever the  problem was , I removed it
[11:05:18] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:07:14] *** Joins: mei (~mei@user/mei)
[11:08:11] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[11:08:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[11:11:06] *** Joins: silly (~silly@user/silly)
[11:19:14] *** Quits: teut (~teut@182.69.87.27) (Quit: Connection closed)
[11:24:40] *** Joins: vysn (~vysn@user/vysn)
[11:29:23] <Koopz> why are Promises so annoying?
[11:30:00] <Koopz> why can't i use await in a non async function?
[11:31:20] *** Joins: silly_ (~silly@user/silly)
[11:32:15] <silly_> n> await 1
[11:32:16] <jellobot> (okay) 1
[11:33:41] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:34:09] <Koopz> >Uncaught SyntaxError: await is only valid in async functions and the top level bodies of modules
[11:34:34] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:34:57] *** Quits: silly (~silly@user/silly) (Ping timeout: 268 seconds)
[11:35:17] *** Joins: realies (~realies@user/realies)
[11:35:20] *** Joins: chovy_ (chovy@tilde.club)
[11:36:19] <Koopz> let me just rewrite my whole stupid code into a module i can use in the browser ( ͡° ͜ʖ ͡°)
[11:37:42] <Koopz> why not rewrite it using Typescript while we're at it and use webpack to let babel transpile all of this
[11:37:52] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[11:39:45] *** Quits: chovy (~chovy@75-55-138-167.lightspeed.mtryca.sbcglobal.net) (Quit: leaving)
[11:40:01] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[11:40:45] <Koopz> pull up enterprise level environment just to be able to WAIT for a stupid request to finish instead of .then().then().then().then()
[11:42:49] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:43:05] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:45:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[11:47:00] *** Quits: chovy_ (chovy@tilde.club) (Quit: leaving)
[11:47:19] *** Joins: chovy (chovy@tilde.club)
[11:55:30] *** Quits: bobdobbs` (~user@150.107.174.237) (Ping timeout: 268 seconds)
[11:55:52] *** Joins: bobdobbs` (~user@150.107.174.237)
[11:56:05] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:59:37] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[12:04:41] *** Quits: chovy (chovy@tilde.club) (Quit: leaving)
[12:04:53] *** Joins: chovy (chovy@tilde.club)
[12:05:21] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[12:06:52] *** Quits: chovy (chovy@tilde.club) (Client Quit)
[12:07:04] *** Joins: chovy (chovy@tilde.club)
[12:08:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[12:12:31] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[12:13:36] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[12:16:41] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[12:17:47] *** Joins: strive (~strive@user/strive)
[12:20:11] <Koopz> so i actually gave it a try
[12:21:14] <Koopz> looks like i can't access my module from the console?
[12:22:52] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[12:23:02] <no_gravity> Is there a way to see all events that are taking place? In the console?
[12:26:48] <hassoon> no_gravity: event listeners tab in chrome's devtool
[12:27:50] <no_gravity> hassoon: There is such a tab? In the "Elements|Console|Sources..." panel, I don't have it.
[12:28:56] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[12:29:19] <hans> why does this function return undefined? > function htmlToText(html){ return (document.createElement("pre").innerHTML=html).textContent;}
[12:30:15] <hans> like this slightly more readable version works fine: function htmlToText(html){let encoder=document.createElement("pre");encoder.innerHTML=html;return encoder.textContent;}
[12:30:48] <no_gravity> hans: Make a fiddle
[12:31:24] <systemfault> That's stupid code..
[12:31:34] <systemfault> You're basically calling .textContent on "html"
[12:31:50] <systemfault> Don't try to be clever for the lulz.
[12:33:17] <systemfault> If you want something cool that probably works: function htmlToText(html) { return Object.assign(document.createElement('pre'), { innerHTML: html }).textContent; }
[12:33:22] <systemfault> But I haven't tested it
[12:33:46] <systemfault> Hmm, cool isn't the word here... it's more like "clever"
[12:34:36] <hans> https://jsfiddle.net/740e3kfw/
[12:35:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:35:31] <hans> haha not saying it's good code, but i expected it to work
[12:35:42] <hans> surprised that it isn't working
[12:37:26] <systemfault> You understand that an assignment returns?
[12:37:29] <hans> even document.createElement("pre").textContent
[12:37:29] <hans>   isn't undefined (it's emptystring)
[12:37:30] <systemfault> *what an
[12:37:41] <hans> oooo fu yeah that's it
[12:37:42] <hans> thanks
[12:37:45] <systemfault> An assignment returns the value that was assignment.
[12:37:48] <systemfault> So... "html"
[12:37:50] *** Joins: sillyslux__ (~silly@user/silly)
[12:38:04] <systemfault> Same as if you did: html.textContent so it's undefined
[12:38:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:19] *** Joins: dimi1947 (~dimi1947@2a02:1388:208c:8674:75e9:bdc7:ef3c:3a1f)
[12:41:32] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 268 seconds)
[12:41:46] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[12:49:09] *** Parts: michaelis (~michaelis@193.183.209.17) ()
[12:49:15] *** Quits: gggp (~gggp@60.10.23.162) (Remote host closed the connection)
[12:49:32] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:49:38] *** Joins: gggp (~gggp@60.10.23.162)
[12:51:15] *** Quits: gggp (~gggp@60.10.23.162) (Remote host closed the connection)
[12:51:38] *** Joins: gggp (~gggp@60.10.23.162)
[12:54:33] *** Joins: gggp_ (~gggp@60.10.23.162)
[12:54:40] *** Joins: realies- (~realies@178-169-218-119.haskovo.ddns.bulsat.com)
[12:54:43] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[12:54:46] *** Joins: Lyn (~Lyn@user/law)
[12:54:53] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[12:55:38] <OnkelTem> Hi all. Did someone configure npm publish in GitLab CI? I can't find out how to login into private registry
[12:56:34] <OnkelTem> I created token locally and seed it via NPM_TOKEN env var at CI, but it doesn't work. Seems like token needs to be created some other way
[12:57:24] *** Joins: entuland (~entuland@user/entuland)
[12:57:45] *** Quits: gggp (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[12:59:27] <hassoon> NoiseEee: https://i.imgur.com/xyFgNPy.png
[12:59:39] <hassoon> NoiseEee: not you sorry
[13:00:20] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:00:20] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[13:00:20] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:02:35] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 258 seconds)
[13:03:02] *** Joins: Deneb (~johnch@93.125.7.51.dyn.plus.net)
[13:03:31] *** Joins: Guest63 (~Guest63@123-204-157-208.static.seed.net.tw)
[13:06:00] <Deneb> is there a standard way to get the value of the key pressed that works on all browsers?
[13:07:14] <Deneb> I am collaborating on a project that uses event.keyCode or KeyboardEvent.keyCode but Firefox returns the worong keys for the special characters. Other browsers seems OK. I have also tried event.code and event.which but same result. Its always the wrong mapping.
[13:07:20] <Deneb> in FF that is
[13:08:17] <systemfault> There's also .which iirc... key input is a mess..
[13:09:02] *** Joins: haniaF (~haniaF@79.184.239.183.ipv4.supernova.orange.pl)
[13:09:02] <Deneb> systemfault: yes, so it seems. I did find this: https://stackoverflow.com/questions/7330724/event-keycode-not-returning-correct-values-in-firefox
[13:09:06] *** Quits: haniaF_ (~haniaF@79.191.119.137.ipv4.supernova.orange.pl) (Ping timeout: 258 seconds)
[13:09:16] <Deneb> but it does not really propose a solution
[13:10:10] <systemfault> https://caniuse.com/?search=which
[13:10:28] <systemfault> .which looks like a safe bet to me
[13:10:38] <systemfault> But.. it's written "deprecated"
[13:10:43] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:11:43] *** Quits: Guest63 (~Guest63@123-204-157-208.static.seed.net.tw) (Quit: Client closed)
[13:11:57] <Deneb> its bad enough that one might have to check two or three different variables. At least I can live with that. But most browser will return @ for @ and ; for ; etc... except it seems FF which gets the mapping completely wrong. I get \ for # and : for ' etc etc. I thought it was using USA keyboard instead of UK, but I switching keyboard setting in FF  does not resolve it or change the values returned. It just gets it completely wrong.
[13:13:23] <Deneb> systemfault: thanks and I get the keyCode is deprecated so would need to use key or code. It means re-writing quite a bit of code and I can do that, but the root problem remains. FF still returns the wrong keys for special charaters. Even IE and Edge get it right. FF seems to be the only one to get it wrong.
[13:13:50] <Deneb> systemfault: just looking at that link, Thanks.
[13:14:07] <systemfault> Maybe I don't get it... but, usually... when something gets deprecated, there has to be an alternative... right?!?
[13:14:13] <systemfault> Can't find one on Google.
[13:19:56] <sillyslux__> https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key
[13:20:13] <sillyslux__> the example code says # for # on my firefox
[13:20:28] <sheetjs> -linguist-detectable apparently removes from github stats
[13:21:42] *** Joins: Guest84 (~Guest84@p200300c8cf227600386324dfb0f6e21b.dip0.t-ipconnect.de)
[13:23:06] <Deneb> systemfault: the article I linked suggests event.code or event.key. I tried code which gave the wrong results. Just tried key and also got # for # in both FF and Chrome so at least that's consistent. Thanks.
[13:24:15] <sillyslux__> oh lol, the example in https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code says "
[13:24:15] <sillyslux__> KeyboardEvent: key='#' | code='Backslash'"
[13:24:40] <Deneb> sillyslux__: yep, that's the result I get.
[13:25:50] <Deneb> at least key ' = Quote which is better than what I was getting with keyCode!
[13:29:03] <Deneb> I think I will stick with key as systemfault suggests. That does seem more consistent. Can't beleive there that article I linked lists 8 different methods to retrievening a keypress! A number of them are deprecated. Just because I run a different brwoser doesn't mean that the keys on my keyboard magically change place... The layout is dictated by the current OS keyboard layout mapping so how difficult can it be for browser makers to provide a
[13:29:03] <Deneb> consistent solution?
[13:29:25] <Deneb> anyway, rant over. Back to work....
[13:29:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[13:29:50] <Deneb> thanks systemfault
[13:29:54] <sillyslux__> KeyboardEvent: key='#' | code='Backslash'
[13:30:13] <sillyslux__> ^ this has to be a bug, i can't believe that this is to be expected
[13:30:26] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:30:37] <sillyslux__> someone willing to file a bug at mozilla?
[13:32:00] *** Parts: Guest84 (~Guest84@p200300c8cf227600386324dfb0f6e21b.dip0.t-ipconnect.de) ()
[13:32:21] <Deneb> sillyslux__: I think that might be because it is defaulting to US keyboard layout. I just switched OS keyboard layout to US and I get a \ when I press #. I guess FF does not respect the keyboard layout set in the OS.
[13:32:55] *** Joins: federico_it (~textual@151.95.116.125)
[13:32:58] <sillyslux__> still seems like a bug...
[13:33:51] <sillyslux__> oh wait, it says on mdn "physical key on the keyboard (as opposed to the character generated by pressing the key)"
[13:34:39] <sillyslux__> https://w3c.github.io/uievents/#dom-keyboardevent-code
[13:34:48] <Deneb> what was really weir though is that when I was using the (deprecated) keyCode, every browser was giving me code 222 while mozilla was giving me 163. My understanding is that keyCode reflects the hardware key code rather than the ASCII code.
[13:36:48] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[13:41:59] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 268 seconds)
[13:43:22] <OnkelTem> When I run `npm whoami` - where does it take the data??
[13:43:38] <OnkelTem> It prints my username, but where does it take it from?
[13:43:48] <OnkelTem> there is no any usernames in ~/.npmrc
[13:43:50] <sheetjs> depends
[13:44:10] <sheetjs> If  logged into a registry that provides token-based authentication, then connect to the /-/whoami registry endpoint to find the username associated with the token, and print to standard output.
[13:44:11] <OnkelTem> there are no env vars with my username
[13:44:20] <sheetjs> If logged into a registry that uses Basic Auth, then simply print the username portion of the authentication string.
[13:44:27] <sheetjs> it wont be an environment variable
[13:44:44] <sheetjs> you should be able to run npm config list
[13:45:28] <OnkelTem> "connect to the /-/whoami registry endpoint" - what does that mean?
[13:45:31] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1472:bf91:526b:6b72) (Quit: Textual IRC Client: www.textualapp.com)
[13:45:46] <sheetjs> registry server
[13:46:17] <OnkelTem> ah, so this username is always requested from the server
[13:46:24] <sheetjs> like https://registry.npmjs.com/
[13:46:25] <OnkelTem> that's why I don't see it locally
[13:46:33] <OnkelTem> yep, I see, verdaccio here
[13:46:40] *** Quits: dimi1947 (~dimi1947@2a02:1388:208c:8674:75e9:bdc7:ef3c:3a1f) (Ping timeout: 258 seconds)
[13:46:42] <sheetjs> yeah then its just the registry
[13:46:52] <sheetjs> if you want to check for a specific scope, i think npm whoami takes a registry option
[13:47:13] <OnkelTem> no, another thing doesn't work here. I copy my token to CI and THERE it doesn't work
[13:47:29] <sheetjs> oof we've had this problem with a few customers
[13:47:30] <OnkelTem> so I cannot find out how to configure npm auth @ ci
[13:47:41] <sheetjs> basically, npm adduser / npm login changed
[13:48:06] <sheetjs> in npm 5.x and 6.x if you were doing a login under a scope, it would automatically add a scope config
[13:48:32] <sheetjs> but 7.x removed that and you may need to add that config back manually
[13:48:34] <OnkelTem> no, I don't use scopes here
[13:48:55] <OnkelTem> I just try to recreate ~/.npmrc at the CI server
[13:49:10] <sheetjs> oh thats simple then, just login locally, then copy the token from your npmrc file to the project
[13:49:23] <sheetjs> you can add an npmrc file at the root of your project
[13:51:18] <OnkelTem> ANd that's what I'm doing from the beginning. I also tried to pass the token via NPM_TOKEN like: - NPM_TOKEN="$VERDACCIO_NPM_TOKEN" npm install --registry... but it always resulted to: npm ERR! need auth This command requires you to be logged in.
[13:51:20] *** Joins: Guest6191 (Guest61@2600:3c01::f03c:92ff:feaf:a31)
[13:51:24] <OnkelTem> let me add more echo'es
[13:51:41] <sheetjs> you dont need to login if you create the npmrc file in your project
[13:52:00] <sheetjs> OnkelTem: check the error log
[13:52:12] *** Quits: Guest6191 (Guest61@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[13:52:17] <sheetjs> if you see it hitting registry.npmjs.com then you are missing some config
[13:52:41] *** Quits: realies- (~realies@178-169-218-119.haskovo.ddns.bulsat.com) (Ping timeout: 248 seconds)
[13:52:49] *** Joins: l__q (~modinfo@dynamic-002-247-254-010.2.247.pool.telefonica.de)
[13:52:56] *** Joins: Guest6128 (Guest61@2600:3c01::f03c:92ff:feaf:a31)
[13:53:36] *** Quits: Guest6128 (Guest61@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[13:53:38] <sheetjs> GreenJello: success! project shows up as Makefile, green swatch and all.  Unfortunately the languages breakdown still has javascript but that may be stale
[13:53:49] *** Joins: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31)
[13:55:11] <OnkelTem> Seems  like npm doesns't read NPM_TOKEN variable anymore
[13:55:36] <sheetjs> yeah npm changes a lot :(
[13:55:42] *** Quits: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[13:55:53] *** Joins: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31)
[13:55:57] <OnkelTem> I removed my local ~/.npmrc, then ran: NPM_TOKEN=<token> npm whoami --registry=http://10.0.34.5:4873
[13:56:10] <OnkelTem> and used that token from .npmrc that worked
[13:56:23] <OnkelTem> and got error code ENEEDAUTH
[13:56:26] *** Joins: realies (~realies@user/realies)
[13:56:44] <sheetjs> try adding the token to your project npmrc
[13:56:47] *** Quits: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[13:56:58] *** Joins: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31)
[13:58:02] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[13:58:02] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[13:58:02] *** Joins: Heraes (~Heraes@user/romarain)
[14:00:03] *** Quits: gggp_ (~gggp@60.10.23.162) (Read error: Connection reset by peer)
[14:00:21] *** Quits: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:00:34] *** Quits: Heraes (~Heraes@user/romarain) (Client Quit)
[14:00:40] *** Joins: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31)
[14:01:10] <Deneb> hmm, seems I now have another problem. How do I convers 'Backspace' or 'Control' back to an ASCII code?
[14:01:33] *** Quits: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:01:44] *** Joins: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31)
[14:01:56] *** Quits: realies (~realies@user/realies) (Ping timeout: 272 seconds)
[14:02:34] <Deneb> do I have to implement a lookup table, or is there a function I can use?
[14:02:49] <Deneb> couldn't find a function via Google
[14:04:08] *** Quits: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:04:19] *** Joins: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31)
[14:05:12] *** Quits: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:05:24] *** Joins: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31)
[14:06:18] *** Quits: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:06:34] *** Joins: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31)
[14:07:27] *** Quits: Guest65666 (Guest65666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:08:41] *** Joins: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31)
[14:10:04] *** Quits: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:10:15] *** Joins: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31)
[14:11:39] *** Quits: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:11:50] *** Joins: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31)
[14:13:14] *** Quits: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:13:32] *** Joins: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31)
[14:14:25] *** Quits: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:14:39] *** Joins: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31)
[14:15:33] *** Quits: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:15:44] *** Joins: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31)
[14:17:08] *** Quits: Guest646666 (Guest64666@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:17:59] *** Joins: Guest646666 (~Guest6466@240e:398:3b6:86e0:e135:890f:8ddd:2bb4)
[14:22:03] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[14:23:35] *** Joins: undefined_bob1 (~undefined@user/undefined-bob/x-5411918)
[14:24:39] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Killed (NickServ (GHOST command used by undefined_bob1)))
[14:24:50] *** undefined_bob1 is now known as undefined_bob
[14:25:10] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:edac:3584:3e6a:e398)
[14:27:07] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[14:27:07] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Killed (copper.libera.chat (Nickname regained by services)))
[14:27:07] *** __jmcantrell__ is now known as jmcantrell
[14:28:31] *** Joins: matsaman (~matsaman@user/matsaman)
[14:33:16] <Deneb> is charCodeAt(0) deprecated?
[14:34:38] *** Joins: pwnd_sfw7 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[14:35:41] <Deneb> k.charCodeAt is not a function
[14:35:45] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[14:35:45] *** pwnd_sfw7 is now known as pwnd_sfw
[14:36:01] <Deneb> that's what console reports
[14:38:27] *** Joins: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de)
[14:39:59] <matsaman> Deneb: pastebin?
[14:42:39] <Deneb> matsaman: sorted it thanks. Was passing a value rather than a string to k. Anyway, this keyboard problem I am working on is something of a dilema.
[14:43:21] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[14:43:55] *** Joins: lilmonkey`` (~lilmonkey@user/lilmonkey)
[14:44:30] <matsaman> $$
[14:44:51] <matsaman> yeah what's the dilemma?
[14:44:55] *** Joins: wintersky (uid453465@id-453465.brockwell.irccloud.com)
[14:45:25] <Deneb> I need the key codes to pass to the emulator code (project i am collaborating on). originally the project uses event.keyCode which is now deprecated. FF returns different code numbers for some special characters than Chrome or IE. Chrome and IE seem consistent which each other. FF gets it wrong. So then answer apparently is to use event.key or event.code but there retrun ascii characters or string which I then need to convert back to key
[14:45:25] <Deneb> codes. The process existing process is not particularly fast as it is without adding further conversions...
[14:46:06] *** Joins: hans (~hans@2a02:2121:30c:74f8:ac92:2538:41c7:6f9d)
[14:46:51] *** Quits: lilmonkey` (~lilmonkey@user/lilmonkey) (Ping timeout: 258 seconds)
[14:48:23] <matsaman> what's wrong with .code?
[14:48:28] <Deneb> well anyway, so I think I can use key.charCodeAt() to convert single characters to ASCII but how I convert 'Backslash', 'Control', 'Shift' etc?
[14:49:25] <matsaman> oh I see
[14:50:45] <PikaChokeMe> is that for like... sending or receiving keycodes?
[14:51:38] *** Joins: Guest84 (~Guest84@p200300c8cf227600386324dfb0f6e21b.dip0.t-ipconnect.de)
[14:51:53] <PikaChokeMe> https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode
[14:52:08] <PikaChokeMe> if you just need to send codes you can just reference them from this list
[14:52:36] <Deneb> PikaChokeMe: yes, the keyboard handler does some conversions based on the returned scan code from event.keyCode and then passes that to the emulator.
[14:53:23] *** Quits: Guest646666 (~Guest6466@240e:398:3b6:86e0:e135:890f:8ddd:2bb4) (Quit: Client closed)
[14:53:29] <PikaChokeMe> https://keycode.info/ this site seems to be capable of grabbing not printable codes as well... so it seems like you should just be able to grab whatever key is hit and pass it without converting? But if you do need to convert can't you just do a lookup and send the value from the referenced list?
[14:54:57] *** Quits: hans (~hans@2a02:2121:30c:74f8:ac92:2538:41c7:6f9d) (Ping timeout: 268 seconds)
[14:55:01] <Deneb> PikaChokeMe: thanks for the link. I am aware of that and it recommends KeyboardEvent.code. However, code does not return code numres. It returns the ascii character 'a', 'b', 'c' etc or for special characters srtings like 'Shift' and 'Control'. At least what it returns is consistent with the other browsers which I think is the reason for the change.
[14:55:58] <Deneb> PikaChokeMe: but, yes, I am also beggining to think that a lookup table of some kind is indicated.
[14:57:49] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[15:01:18] *** Joins: realies (~realies@user/realies)
[15:01:30] *** Joins: earendel (uid498179@id-498179.tooting.irccloud.com)
[15:02:08] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:02:31] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:02:47] *** earendel is now known as Guest7500
[15:02:56] <Deneb> this means though that I have to convert from keyboardEvent.key => ASCII => scan code
[15:05:15] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 258 seconds)
[15:06:23] *** Quits: paule32 (~paule32@user/paule32) (Read error: Connection reset by peer)
[15:10:29] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:17:06] *** Quits: Guest7500 (uid498179@id-498179.tooting.irccloud.com) (Changing host)
[15:17:06] *** Joins: Guest7500 (uid498179@user/earendel)
[15:17:50] *** Guest7500 is now known as earendel
[15:26:51] *** Joins: silly_ (~silly@user/silly)
[15:30:36] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 272 seconds)
[15:35:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[15:36:04] *** Quits: realies (~realies@user/realies) (Ping timeout: 268 seconds)
[15:37:47] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:37:57] *** Joins: realies (~realies@user/realies)
[15:40:11] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[15:44:36] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[15:48:14] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[15:48:24] *** Quits: realies (~realies@user/realies) (Ping timeout: 268 seconds)
[15:56:47] *** Joins: realies (~realies@user/realies)
[15:57:05] *** Joins: pulse (~pulse@user/pulse)
[16:03:24] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[16:07:20] *** Quits: realies (~realies@user/realies) (Ping timeout: 272 seconds)
[16:10:44] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:588:5975:f4ef:e434:54a2)
[16:12:30] *** Joins: realies (~realies@user/realies)
[16:14:29] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:18:21] *** Quits: realies (~realies@user/realies) (Quit: ~)
[16:18:40] *** Joins: realies (~realies@user/realies)
[16:20:41] *** qwedfg_ is now known as qwedfg
[16:24:28] *** Quits: Guest84 (~Guest84@p200300c8cf227600386324dfb0f6e21b.dip0.t-ipconnect.de) (Quit: Client closed)
[16:25:42] *** Quits: stiv3n (~stiv3n@2601:647:8101:e370:e119:9975:3ec3:d975) (Ping timeout: 272 seconds)
[16:27:25] *** Joins: stiv3n (~stiv3n@c-73-92-94-201.hsd1.ca.comcast.net)
[16:28:24] <ashnur> that back and forth conversion is not as trivial as algebra :)
[16:29:03] <ashnur> if you can reduce your problem domain enough, you might be able to adopt someone's solution, but often it's best to maintain these maps
[16:30:58] <silly_> is it map per keyboard layout then?
[16:32:46] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:1de0:f2e2:89da:7d04)
[16:41:07] <cthulchu> have you folks seen water detectors with rest api over local wifi?
[16:41:21] <cthulchu> huh. that may be a bit too much to have on a water detector tho
[16:42:02] <cthulchu> I'm thinking about building an easily movable semblance of a smart home.
[16:51:24] *** Joins: tlaxkit (~hexchat@170.253.40.255)
[17:01:47] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 268 seconds)
[17:13:29] *** Joins: debsan (~debsan@2800:810:471:8425::1000)
[17:14:43] *** Quits: debsan (~debsan@2800:810:471:8425::1000) (Remote host closed the connection)
[17:18:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[17:26:28] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:588:5975:f4ef:e434:54a2) (Quit: Leaving)
[17:28:02] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:28:56] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:29:06] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:29:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:30:31] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[17:38:13] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[17:38:28] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Client Quit)
[17:38:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[17:38:51] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[17:45:45] *** Cyp_ is now known as Cyp
[17:46:10] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[17:46:33] *** Joins: jmft2 (~JMFT@82.3.54.26)
[17:46:58] *** Joins: realies (~realies@user/realies)
[17:48:54] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Remote host closed the connection)
[17:49:25] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[17:53:00] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Remote host closed the connection)
[17:53:08] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[17:56:57] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[17:57:37] *** Quits: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net) (Remote host closed the connection)
[18:00:39] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[18:02:36] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:1de0:f2e2:89da:7d04) (Ping timeout: 272 seconds)
[18:17:47] *** Joins: pulse (~pulse@user/pulse)
[18:20:08] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[18:26:07] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 258 seconds)
[18:26:47] *** Joins: hans (~hans@ti0131a430-6319.bb.online.no)
[18:26:51] *** Joins: iffraff (~quassel@136.49.178.170)
[18:28:19] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[18:32:33] *** Joins: cbleslie2 (~cbleslie@47.148.37.101)
[18:34:25] *** Joins: Guest16 (~textual@196.240.57.100)
[18:35:30] *** Joins: fassl (~fassl@2a02:8388:1987:9380:246f:f447:a757:d74f)
[18:35:52] <Lyn> Should I be using React-Redux, or just Redux? with React
[18:36:28] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[18:38:02] *** Quits: cbleslie2 (~cbleslie@47.148.37.101) (Quit: The Lounge - https://thelounge.chat)
[18:38:26] *** Joins: cbleslie2 (~cbleslie@47.148.37.101)
[18:42:04] <GreenJello> Lyn, both
[18:43:23] *** Quits: cbleslie2 (~cbleslie@47.148.37.101) (Quit: The Lounge - https://thelounge.chat)
[18:43:46] *** Joins: cbleslie2 (~cbleslie@47.148.37.101)
[18:46:00] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[18:46:12] *** Joins: mattil (~mattilinn@62-113-178-139.bb.dnainternet.fi)
[18:46:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[18:48:04] *** Quits: mattil (~mattilinn@62-113-178-139.bb.dnainternet.fi) (Max SendQ exceeded)
[18:48:58] *** Joins: mattil (~mattilinn@62-113-178-139.bb.dnainternet.fi)
[18:50:18] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 268 seconds)
[18:51:05] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[18:51:42] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[18:52:10] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 268 seconds)
[18:52:35] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Quit: Leaving)
[18:57:13] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[19:05:29] *** Quits: w0ng (~w0ng@185.218.127.38) (Ping timeout: 260 seconds)
[19:09:00] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[19:09:15] *** Quits: irrgit_ (~irrgit@192.241.175.183) (Remote host closed the connection)
[19:11:39] *** Joins: Akimb (~Akimb@86.100.13.100)
[19:12:39] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:14:53] *** Joins: FabioP (~fabio@151.24.107.187)
[19:15:02] *** Quits: hans (~hans@ti0131a430-6319.bb.online.no) (Remote host closed the connection)
[19:15:23] *** Joins: hans (~hans@ti0131a430-6319.bb.online.no)
[19:17:20] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[19:19:56] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:1c9b:33f6:3cfd:159e) (Quit: Textual IRC Client: www.textualapp.com)
[19:20:12] *** Quits: cbleslie2 (~cbleslie@47.148.37.101) (Quit: The Lounge - https://thelounge.chat)
[19:20:35] *** Joins: cbleslie2 (~cbleslie@47.148.37.101)
[19:20:55] *** Quits: stiv3n (~stiv3n@c-73-92-94-201.hsd1.ca.comcast.net) (Quit: WeeChat 3.0.1)
[19:22:14] *** Quits: cbleslie2 (~cbleslie@47.148.37.101) (Client Quit)
[19:23:45] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:24:15] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[19:24:56] *** Quits: hans (~hans@ti0131a430-6319.bb.online.no) (Ping timeout: 272 seconds)
[19:25:30] *** notchris_ is now known as notchris
[19:27:31] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:c6:352f:6926:cd80)
[19:32:11] <Lyn> apparently I should just use Context instead
[19:35:08] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:1702:3c:82cb:1afc)
[19:37:37] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[19:39:11] *** Quits: iffraff (~quassel@136.49.178.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:39:30] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Client Quit)
[19:42:01] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[19:44:44] <GreenJello> Lyn, for some technical reasons, simple use of context is often problematic
[19:45:36] <Lyn> Context seems to be good for info going one way, but the other way might cause too much rendering
[19:46:00] <Lyn> I'm trying to find a good solution to state management but many people seem to be leaving Redux behind
[19:46:41] *** Joins: junktext (~junktext@77.247.181.219)
[19:48:10] *** Joins: hexology (~hexology@user/hexology)
[19:48:17] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 268 seconds)
[19:48:18] <GreenJello> it's fine to skip on redux as long as you keep the granular subscription aspect
[19:49:13] <Lyn> some options I found are Zustand, Recoil, SWR, React Atom, MobX
[19:49:23] <hexology> Why do I often see this pattern in JS code: `values.map(el => doStuff(el))`? It seems like you could just write `values.map(doStuff)` in that situation.
[19:50:10] <Lyn> the 'el' is a variable(s) that you pass to the function doStuff
[19:50:19] <daniel-k> Is there any reason redux is out of favor?
[19:50:28] <GreenJello> hexology, sometimes a function will behave incorrectly if called with extra args
[19:51:22] <hexology> GreenJello: ah, because Array.prototype.map doesn't always just pass 1 argument, so this helps ensure that only the requested arguments are passed
[19:51:26] <hexology> makes sense, thanks!
[19:51:55] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[19:53:15] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[19:55:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:58:03] <foureyes> why leave redux behind?
[19:58:24] <foureyes> it's very good :)
[19:59:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[20:01:40] *** Quits: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[20:02:44] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:03:12] <Lyn> https://leerob.io/blog/react-state-management this seems to be pretty up to date
[20:08:46] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[20:12:28] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[20:20:49] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:23:26] *** Quits: Talon (Talon@172.77.98.6) (Ping timeout: 268 seconds)
[20:23:49] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:26:40] *** Joins: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de)
[20:27:22] *** Joins: hans (~hans@ti0131a430-6319.bb.online.no)
[20:30:10] *** Quits: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e) (Ping timeout: 272 seconds)
[20:30:33] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[20:31:47] *** Quits: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[20:32:27] *** Joins: Betal (~Betal@user/betal)
[20:32:57] *** Joins: LiftLeft (~LiftLeft@154.21.23.18)
[20:34:19] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[20:36:27] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[20:42:48] *** Joins: yakiza (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[20:42:49] *** Quits: tlaxkit (~hexchat@170.253.40.255) (Ping timeout: 248 seconds)
[20:42:54] <yakiza> join #web
[20:43:46] <yakiza> Hello everyone, I am wondering if it is possible with javascript to open a modal that I have saved in a different html file than the current open page. the modal.html just contains the modal code without body headers etc
[20:44:51] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[20:45:24] *** Joins: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de)
[20:49:19] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:49:21] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[20:50:32] *** Quits: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[20:50:45] *** Joins: Rockwood (~Rocky@user/rocky)
[20:51:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[20:54:47] *** Joins: amcsi (~amcsi@2E8B6851.catv.pool.telekom.hu)
[20:54:57] *** Joins: amcsi_ (~amcsi@2E8B6851.catv.pool.telekom.hu)
[20:56:07] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:01:48] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[21:03:27] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:04:27] *** Joins: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de)
[21:07:24] <silly_> !fetch @yakiza
[21:07:24] <jellobot> yakiza, window.fetch - a standard way to make HTTP requests, say bye to XHR and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) see !polyfill
[21:07:25] *** Joins: tlaxkit (~hexchat@170.253.40.255)
[21:08:26] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 268 seconds)
[21:08:53] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[21:09:29] *** Quits: tlaxkit (~hexchat@170.253.40.255) (Remote host closed the connection)
[21:10:00] *** Quits: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[21:13:06] <theskillwithin> omg does gist finally have dark mode?
[21:14:04] <GreenJello> theskillwithin, yeah, has for months
[21:20:09] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:21:08] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[21:21:17] *** Joins: summersault (~summersau@179.221.251.16)
[21:23:38] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[21:24:21] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:24:32] *** Joins: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de)
[21:26:29] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[21:26:44] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[21:27:09] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:28:15] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[21:29:19] *** Quits: Iolo (~iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:29:42] *** Quits: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[21:34:19] *** Joins: codebam (~codebam@user/codebam)
[21:34:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:35:35] *** Quits: ryzokuken_ (~ryzokuken@fanzine2.igalia.com) (Ping timeout: 268 seconds)
[21:39:06] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[21:44:02] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:44:13] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[21:45:36] *** Joins: thiras (~thiras@user/thiras)
[21:47:15] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:47:52] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[21:48:32] *** Joins: summersault (~summersau@179.221.251.16)
[21:48:44] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Client Quit)
[21:49:25] *** Quits: hans (~hans@ti0131a430-6319.bb.online.no) (Remote host closed the connection)
[21:49:46] *** Joins: hans (~hans@ti0131a430-6319.bb.online.no)
[21:53:18] *** Joins: Talon (Talon@172.77.110.42)
[21:54:33] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:57:41] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:58:14] *** Joins: summersault (~summersau@179.221.251.16)
[22:02:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[22:03:34] *** Quits: hans (~hans@ti0131a430-6319.bb.online.no) (Ping timeout: 256 seconds)
[22:07:35] *** Joins: mexen (uid495612@user/mexen)
[22:10:19] *** Quits: Deneb (~johnch@93.125.7.51.dyn.plus.net) (Quit: Leaving)
[22:11:54] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:15:44] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[22:21:15] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:21:25] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:23:11] *** Sven_vB_ is now known as Sven_vB
[22:23:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Quit: Leaving)
[22:24:12] *** Joins: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de)
[22:29:51] *** Quits: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[22:37:14] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[22:37:51] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 268 seconds)
[22:39:21] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:40:14] *** Joins: yaalon (~yaalon@201.130.105.40.dsl.dyn.telnor.net)
[22:40:31] *** Quits: yaalon (~yaalon@201.130.105.40.dsl.dyn.telnor.net) (Remote host closed the connection)
[22:42:28] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[22:43:00] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 244 seconds)
[22:44:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[22:44:55] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[22:45:32] *** Joins: summersault (~summersau@179.221.251.16)
[22:46:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:47:26] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:47:51] *** Joins: onosendi (~onosendi@user/onosendi)
[22:48:43] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[22:49:18] *** Joins: LSD (~LSD@2.lsd.systems)
[22:49:40] *** LSD is now known as acidsys
[22:50:49] *** Joins: summersault (~summersau@179.221.251.16)
[22:52:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:54:07] *** Quits: fassl (~fassl@2a02:8388:1987:9380:246f:f447:a757:d74f) (Ping timeout: 268 seconds)
[22:58:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[22:58:50] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:02:07] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 244 seconds)
[23:02:50] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:03:18] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[23:03:46] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[23:05:16] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 272 seconds)
[23:09:21] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 244 seconds)
[23:12:37] *** Joins: summersault (~summersau@179.221.251.16)
[23:13:18] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[23:14:56] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[23:15:49] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[23:24:56] *** Joins: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de)
[23:25:25] *** Joins: funhouse (~funhouse@user/funhouse)
[23:25:42] <funhouse> Not sure if this is a JS question but how do I animate from one class to another? Or is that a CSS question?
[23:25:43] <ELFrederich> I'm going through exercise of creating PONG in p5js.  I found this useful "collide2d" library.  My paddles are rectangular and the ball is square.  Turns out simply multiplying the "deltaX" by -1 on a collision works great but only when it hits the front face of the paddle.  When it its the top or bottom sides it gets stuck.
[23:26:47] <ELFrederich> It'll just oscillate back and forth, each from multiplying "deltaX" by -1.  I guess I need to differentiate between hitting front face where I'd multiply dX by -1 and hitting the sides of the paddle where I'd want to invert dY instead of dX
[23:27:02] <ELFrederich> Worth looking at any libraries or should I just write the function myself?
[23:27:17] <ELFrederich> ... because a simple true/false collision doesn't help
[23:28:25] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Remote host closed the connection)
[23:28:49] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:29:43] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[23:30:21] *** Joins: summersault (~summersau@179.221.251.16)
[23:30:53] *** Quits: kakashiAL (~kakashi@ip-37-201-198-219.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[23:31:13] *** Quits: mattil (~mattilinn@62-113-178-139.bb.dnainternet.fi) (Quit: Leaving)
[23:35:02] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[23:36:04] *** Joins: gethuen (uid502979@id-502979.stonehaven.irccloud.com)
[23:36:41] *** Joins: sillyslux__ (~silly@user/silly)
[23:37:41] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[23:38:04] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:38:11] *** Joins: _ELFrederich (~ELFrederi@134.244.29.70)
[23:38:20] *** Joins: summersault (~summersau@179.221.251.16)
[23:39:53] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:40:53] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[23:41:09] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:9c18:390d:1829:8917:1f01)
[23:42:22] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:c6:352f:6926:cd80) (Ping timeout: 258 seconds)
[23:42:45] *** Joins: smilingfrog (~smilingfr@S01061cabc06a4f03.no.shawcable.net)
[23:43:25] <cis> if it's an exercise, then you should write it yourself
[23:44:19] *** Joins: Akimb (~Akimb@86.100.13.100)
[23:44:37] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[23:44:41] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[23:45:19] <theskillwithin> funhouse if you have a transition property on it, and then dynamically add on the new class when u want it
[23:45:46] <funhouse> theskillwithin basically the classes are background gradients
[23:47:22] *** Joins: blz (~matheus@2804:f14:c095:f301::6)
[23:49:16] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[23:50:14] <theskillwithin> idk if you can animate between two different linear-gradients
[23:51:26] <theskillwithin> you can animate one linear-gradient by animating stuff like background-position
[23:51:28] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Quit: Leaving)
[23:51:43] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:51:47] <theskillwithin> or you can just opacity fade into the other one
[23:52:12] <theskillwithin> but thats prob not what your asking for
[23:57:59] <GreenJello> _ELFrederich, you could take the vector from previous position to next position and check if it intersects the paddle edge and is in the correct direction
[23:59:35] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:59:37] <GreenJello> checking only the final position is speed and frame-rate dependent
