[00:15:57] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:25:30] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[00:27:32] <Kabouik> mariari > recently Nyxt has been crashing on every Ctrl+whatever key combination for me, 100% reproductible. Also when typing anything in the fuzzy search. I seem to be the only one to experience that so that must be due to my rather old 2.32.2 libwebkit-gtk, but it did not happen with an older build of Nyxt so there must be a conflict.
[00:27:38] <Kabouik> I wonder if that could be the case for you too.
[00:28:41] <mariari> hmm I'm not sure Kabouik. It's just quite odd, as I'm not even browing, nyxt is sitting cold except wheen I open a link from irc then kill it thus a jpg or webm
[00:28:49] <mariari> could be however
[00:28:55] <mariari> I've always had nyxt be very crashy on me
[00:31:02] <Kabouik> This is on my Solus laptop. On my Debian phone I don't experience those crashes on Ctrl+key. But I do experience the crash in switch-buffer when trying to type a character to fuzzy search buffers, plus another issue with touch input that no longer follow hyperlinks or scroll the page.
[00:31:11] <Kabouik> I think I'll have to revert to some older commit.
[00:31:46] <Kabouik> At least it'll help confirming whether those issues are indeed related to master and help devs
[00:50:57] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[00:52:59] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[00:55:37] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 240 seconds)
[00:57:26] *** Quits: croissong (~croissong@p5ddfcde3.dip0.t-ipconnect.de) (Quit: Connection closed)
[01:13:11] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[01:16:30] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:35:34] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[01:40:55] <jmercouris> Why not use le Guix pack
[01:41:01] <jmercouris> It should work on any distribution
[01:41:24] <jmercouris> And the dependencies are supposed to all work together
[01:51:03] <edgarvincent[m]> I am tempted to use Guix, as I can't run Nyxt master on Arch, but I don't really want to mess with my root partition. Probably an irrational thought though, as it shouldn't matter much.
[01:51:38] *** Quits: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb) (Remote host closed the connection)
[01:52:05] *** Joins: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb)
[02:01:29] <jmercouris> You don’t need to install Guix to do so
[02:01:34] <jmercouris> You can just use the Guix pack
[02:01:40] <jmercouris> Or maybe I don’t understand
[02:05:31] <edgarvincent[m]> Oh. I'll look that up - not sure what a Guix pack is ^^
[02:07:12] <Kabouik> I know it's one of its strengths, but I admit the Guix tree and obscure files hierarchy makes me uneasy
[02:07:49] <Kabouik> I really like the simplicity of git pull && make all, get an executable in that same folder and symlink it to ~/.local/bin
[02:08:39] <edgarvincent[m]> Same. I also like the simplicity of an AUR package, where I can just run my usual system upgrades and always run the latest version of Nyxt.
[02:09:27] <edgarvincent[m]> Guix packs look interesting though. And they don't require the heterodox file hierarchy, it seems.
[02:11:14] <Kabouik> I feel like an antivax when I try to find arguments to refuse progress like that.
[02:12:07] <Kabouik> But I did try Guix packages some months ago and it did come with its file hierarchy, making it hard for me to even understand where to find executables
[02:12:08] <edgarvincent[m]> hahahaha
[02:12:58] <edgarvincent[m]> Ah, the Guix pack is only for releases. Oh well, I could get automated builds for the Nyxt master version.
[02:14:26] <edgarvincent[m]> Kabouik: see the '--relocatable' flag described there: https://guix.gnu.org/manual/en/html_node/Invoking-guix-pack.html
[02:16:20] <jmercouris> The other option of course is a tomato
[02:16:27] <jmercouris> You can run Nyxt on a tomato I believe
[02:18:29] <edgarvincent[m]> hahahahaha
[02:35:45] <waleee> true progress. NetBSD stopped at being able to run on your toaster
[02:44:47] <edgarvincent[m]> My toaster?
[02:47:04] <waleee> indeed a part of the netbsd borg collective
[02:51:49] <jmercouris> Yes
[02:51:56] <jmercouris> But Nyxt? It can run on a tomato
[02:52:17] <jmercouris> If that isn’t progress, I don’t know what is
[02:54:23] <edgarvincent[m]> (Build VMs are both brilliant and fantastically wasteful. Why do I have to inflict on the planet the fact that, because of my sheer stupidity, the whole build has to start all over again, wasting electricity and bandwidth just because I made a stupid typo?)
[02:55:46] <edgarvincent[m]> jmercouris: I told you about that guy I was at school with who presented a smart potato at CES one year, didn't I?
[02:56:01] <waleee> lol what
[02:56:37] <waleee> (I assume this is a IoT-potato)
[02:56:47] <edgarvincent[m]> more or less
[02:56:58] <edgarvincent[m]> He was taking the piss, actually, but they fell for it.
[02:57:55] <edgarvincent[m]> https://www.inceptivemind.com/neuraspud-worlds-first-smart-potato-capable-talking-humans/11402/
[02:59:13] <waleee> brilliant
[03:00:05] <edgarvincent[m]> (He's actually an extremely talented guy ^^)
[03:02:06] <edgarvincent[m]> (Lives in his van and teaches sailing, AFAIK. After the CES, he was contacted by the govt, which asked for his advice on how to improve the way "French tech" was perceived in the world haha)
[03:04:18] <edgarvincent[m]> Ok, this is where the magic stops: https://builds.sr.ht/~e-v/job/653830
[03:04:27] <edgarvincent[m]> I have no idea what this output means.
[03:08:17] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[03:15:21] <waleee> are you running the makefile? The submodules shouldn't be needed for the guix build script
[03:17:01] *** Quits: Jing (~hedgehog@2604:a840:3::103b) (Remote host closed the connection)
[03:17:39] *** Joins: Jing (~hedgehog@2604:a840:3::103b)
[03:26:03] <edgarvincent[m]> waleee: I'm just pulling the git repo and running `guix pack`
[03:26:52] <edgarvincent[m]> Here's the build manifest: https://builds.sr.ht/api/jobs/653830/manifest
[03:30:20] <waleee> is the 2nd relocatable intentional?
[03:30:29] <edgarvincent[m]> Yes
[03:31:41] <waleee> why is it needed?
[03:31:54] <edgarvincent[m]> It offers a fallback to proot if user namespaces aren't available
[03:37:08] <waleee> the ci release.yaml have a couple of other build flags with guix pack, but not sure if those are applicable in this case, https://github.com/atlas-engineer/nyxt/actions/runs/1480467258/workflow#L72
[03:38:11] <waleee> ah. -RR was the short version of relocatable
[03:39:40] <waleee> no-grafts sounds like it shouldn't affect if it builds or not
[03:40:43] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 268 seconds)
[03:42:37] <edgarvincent[m]> Hm. Thanks for having a look at this. Maybe guix cache?
[03:46:35] <waleee> oh, nyxt.scm runs the makefile (with NYXT_SUBMODULES=false)
[03:47:30] <waleee> it's the nyxt.asd that maybe could be tweaked to not initialize the git submodules
[03:49:31] <waleee> annoying guix backtrace since it doesn't show more line numbers than https://github.com/atlas-engineer/nyxt/blob/master/build-scripts/nyxt.scm#L152
[03:50:13] <edgarvincent[m]> yeah :(
[03:50:15] <waleee> because (package ...) cant be the issue since it should have evaluated https://github.com/atlas-engineer/nyxt/blob/master/build-scripts/nyxt.scm#L67 just fine at that point
[03:52:11] <edgarvincent[m]> good point :)
[03:52:12] <waleee> well. Unless guix begins with the "nyxt" on the last line and then evaluates stuff beginning from that
[03:53:03] <waleee> I'm not familiar with guiles evaluation semantics
[03:53:05] <edgarvincent[m]> Well, I'm going to sleep on this.
[03:53:13] <edgarvincent[m]> Thanks for having a look at this!
[03:53:28] <edgarvincent[m]> Good night.
[03:53:34] <waleee> g'night
[03:59:52] <waleee> edgarvincent[m]: https://github.com/pjotrp/guix-notes/blob/master/HACKING.org#running-a-guile-script on print-style debugging in guix
[04:25:00] *** Quits: aeka (~aeka@pool-100-4-208-71.albyny.fios.verizon.net) (Ping timeout: 256 seconds)
[04:27:10] *** Joins: aeka (~aeka@pool-100-4-208-71.albyny.fios.verizon.net)
[04:52:37] *** Quits: aeka (~aeka@pool-100-4-208-71.albyny.fios.verizon.net) (Ping timeout: 240 seconds)
[05:01:00] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[05:01:35] *** Joins: ano (~ano@user/ano)
[05:01:38] *** Joins: aeka (~aeka@pool-100-4-208-71.albyny.fios.verizon.net)
[05:02:45] *** Quits: ar1su (~arisu@gateway/tor-sasl/kitty) (Remote host closed the connection)
[05:04:03] *** Joins: ar1su (~arisu@gateway/tor-sasl/kitty)
[05:11:22] *** Quits: aeka (~aeka@pool-100-4-208-71.albyny.fios.verizon.net) (Ping timeout: 268 seconds)
[05:11:39] *** Joins: aeka (~aeka@2606:6080:1001:d:c59c:6e9a:3115:6f2f)
[05:29:36] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[06:11:29] *** finstern1s is now known as finsternis
[06:22:00] *** Quits: finsternis (~X@23.226.237.192) (Quit: leaving)
[06:22:48] *** Joins: finsternis (~X@23.226.237.192)
[07:00:03] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[07:16:11] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[07:16:51] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[07:58:27] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[08:00:10] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[08:25:19] *** Joins: Stuff (~Stuff@S0106105611ad0399.cc.shawcable.net)
[08:25:25] <Stuff> Hello
[08:26:42] <Stuff> How exactly do I change the search engine on Nyxt?
[08:55:18] *** Quits: Stuff (~Stuff@S0106105611ad0399.cc.shawcable.net) (Ping timeout: 256 seconds)
[09:05:49] *** Quits: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb) (Remote host closed the connection)
[09:16:15] *** Quits: ebrasca (~user@librepanther.com) (Remote host closed the connection)
[09:34:51] <Jing> Stuff https://nyxt.atlas.engineer/documentation under the "Search Engine" section
[09:49:29] *** Joins: shka (~herr@109.231.0.226)
[10:19:27] <qhong> Can we have a hyperlinked table of contents for the documentation?
[10:21:18] <Jing> Within Nyxt, it's possible with `jump-to-heading` command and newly developed `show-headings-panel` command
[10:21:39] <Jing> The latter one is still WIP currently
[10:34:08] *** Joins: opalvaults[m] (~opalvault@2001:470:69fc:105::1:51f6)
[10:34:23] <opalvaults[m]> How can I add to the documentation?
[10:35:13] <opalvaults[m]> Specifically, I'd like to add a section for KeepassXC integration notes
[10:37:10] <Jing> opalvaults[m] Under "documents" folder, there is MANUAL.org
[11:39:50] <qhong> Jing: thanks!
[11:40:06] <qhong> I still think a table of contents on the webpage would be nice, though
[11:40:15] <Jing> qhong: Yes, I agree.
[11:56:14] <edgarvincent[m]> I agree as well. This has been discussed many times.
[12:26:42] <qhong> Does Nyxt update buffer's document-model heuristically at unexpected times, and discards the object identities? I'm experimenting code that manipulate CLOS dom nodes as first class object, but if Nyxt will screw the object identity of document-model, that means I'd better maintain my own copy of DOM?
[12:27:08] <qhong> It sounds suboptimal because then Nyxt will keep two copies of mostly the same data...
[12:47:46] <qhong> Or I could disable update-document-model/set document-model-delta-threshold to a high value, but those are all *buffer* methods. Is there a clean way for a *mode* to override some *buffer* behavior>
[13:26:53] <qhong> hmm, guess I should make a subclass of buffer, rather than a mode
[13:30:17] *** Joins: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb)
[13:40:42] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Quit: WeeChat 3.3)
[13:42:39] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[13:50:54] *** Quits: lagooned (lagooned@irc.nathanic.org) (Quit: ZNC 1.7.3 - https://znc.in)
[14:46:28] *** Quits: Jing (~hedgehog@2604:a840:3::103b) (Remote host closed the connection)
[14:47:05] *** Joins: Jing (~hedgehog@115.207.51.59)
[14:51:44] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[15:46:19] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[16:16:02] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[16:43:48] *** Quits: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb) (Ping timeout: 276 seconds)
[16:45:12] *** Joins: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb)
[16:48:39] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:50:59] *** Joins: ano (~ano@user/ano)
[17:18:48] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:48:41] <waleee> edgarvincent[m]: did you find a solution to the build error?
[17:49:54] <edgarvincent[m]> waleee: haven't had time today yet. Had to do an emergency resilver on my server's RAID storage and stupid paperwork. But will get back to it in a couple hours :)
[18:09:42] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[18:11:31] <aartaka> qhong: instead of subclassing buffer, you can change the DOM delta in a define-configuration form :)
[18:12:06] <aartaka> There's a neat subclassing underneath, and it will change the delta in all the instances of buffer.
[18:16:13] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[18:17:13] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:51:48] *** Joins: lagooned (lagooned@irc.nathanic.org)
[20:04:19] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Remote host closed the connection)
[20:04:35] *** Joins: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4)
[21:26:42] <jmercouris> What is the fruit of the day?
[21:26:57] <jmercouris> I’m not certain it’s been declared yet
[21:27:23] <jmercouris> I propose the fruit of the day to be tamarind
[21:27:50] <jmercouris> Happy tamarind Tuesday!
[21:28:48] <edgarvincent[m]> Tamarind is both a recurrent and an absolutely excellent choice.
[21:29:38] <edgarvincent[m]> I have to say, though, that I don't believe I have ever eaten it fresh, or indeed raw. I think I've only used it in curry pastes.
[21:30:13] <edgarvincent[m]> (guix pull takes a loooooooong time to do its business)
[21:48:01] <jmercouris> Well tamarind is mostly eaten as a paste
[21:48:06] <jmercouris> I’ve seen it for sale fresh
[21:48:12] <jmercouris> I just can’t imagine how you would use it
[21:48:36] <jmercouris> It’s weird how some ingredients are better less fresh
[21:52:15] <edgarvincent[m]> Oh wow, it's actually a legume.
[21:59:31] *** Joins: Stuff (~Stuff@S0106105611ad0399.cc.shawcable.net)
[22:03:11] *** Quits: Stuff (~Stuff@S0106105611ad0399.cc.shawcable.net) (Client Quit)
[22:09:14] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.3)
[22:10:03] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:17:44] <edgarvincent[m]> Ugh, I can't even change the keyboard layout in the official Guix VM.
[22:18:35] <waleee> setxkbmap doesn't work? (or isn't available)
[22:19:37] <edgarvincent[m]> Not available.
[22:19:46] <waleee> hm ah. But I guess you are trying to set the console, strictly tty keymap?
[22:20:16] <edgarvincent[m]> No, I'm using XFCE.
[22:22:01] <edgarvincent[m]> I'll try installing setxkbmap
[22:22:37] <edgarvincent[m]> Ah, it works. Thanks for the tip :)
[22:36:18] <jmercouris> Something I’ve never understood is saffron
[22:36:27] <jmercouris> Does it really add that much flavor?
[22:36:38] <jmercouris> It seems to be mostly about color and decor to me
[22:37:26] <edgarvincent[m]> Oh it definitely does.
[22:37:31] <edgarvincent[m]> It's very strong.
[22:37:49] <waleee> in pre-made bought pastries the saffron is mostly substituted for saffron flavor
[22:37:53] <edgarvincent[m]> Try a little bit in white rice.
[22:38:26] <edgarvincent[m]> Yeah, saffron is very expensive.
[22:39:02] <waleee> saffron flavor == 1 pinch of saffron in a vat of ethanol
[22:39:05] <edgarvincent[m]> Produces very few pistils.
[22:39:08] *** Quits: Boingo (~malachi@cpe-172-116-145-175.socal.res.rr.com) (Quit: WeeChat 3.4-dev)
[22:40:01] <edgarvincent[m]> I don't mind it, but, much like truffles, I don't really get the frenzy.
[22:40:45] <edgarvincent[m]> Oh is it not synthetic flavouring?
[22:41:52] <edgarvincent[m]> (much like foie gras, don't really get it either)
[22:42:23] *** Joins: Boingo (~malachi@cpe-172-116-145-175.socal.res.rr.com)
[22:42:47] <waleee> edgarvincent[m]: also a possibility. It usually is quite small amounts of actual saffron
[22:43:49] <waleee> the more honest bakers just do an extraction of saffron in alcohol, but the factory made stuff usually has saffron + "saffron flavoring"
[22:45:04] <edgarvincent[m]> (read the other day that organic farmers were now discovering a "new technique" for producing foie gras called "feeding", which consists in... just letting the geese feed themselves instead of forcing food down their throats)
[22:45:28] <edgarvincent[m]> Is it common to use saffron in bread in Scandinavia?
[22:45:53] <waleee> actual geese? Not the https://en.wikipedia.org/wiki/Muscovy_duck & regular duck hybrid?
[22:46:14] <edgarvincent[m]> I suppose some artificial flavouring can be good, if it's an exact copy of the "natural" molecule.
[22:46:15] <waleee> edgarvincent[m]: for traditional Yule-pastries
[22:46:50] <waleee> the rest of the year it's very much a cinnamon & cardamon stronghold for baked goods
[22:48:05] <edgarvincent[m]> It can be either geese or ducks.
[22:48:58] <edgarvincent[m]> waleee: Hmm, I'd love those. Caraway as well.
[22:49:26] <edgarvincent[m]> We don't add spices to bread in France, pity.
[22:50:45] <waleee> well, they are only added to pastries. But caraway is somewhat common in bread
[22:51:36] <edgarvincent[m]> Same thing for pastries. Spices are never used.
[22:52:03] <edgarvincent[m]> Spices are almost never used at all in cooking in general, as a matter of fact.
[22:52:11] <edgarvincent[m]> (in this country)
[22:53:05] <edgarvincent[m]> Just the occasional nutmeg.
[22:53:31] <edgarvincent[m]> You can tell you're looking at a French person's kitchen when they don't have any spices whatsoever.
[22:55:08] <waleee> french cuisine, the great spice con :)
[22:57:38] <edgarvincent[m]> My grandmother likes to quote a famous Indian chef who specialised in French cooking who said "Rien n'est plus insipide que la cuisine française" (There's nothing as tasteless as French cuisine)
[23:00:08] *** Joins: cennedy (~cennedy@46.197.117.3)
[23:00:16] <cennedy> hi
[23:00:22] <waleee> hello
[23:00:25] <cennedy> i installed nyxt browser via xbps
[23:00:31] <cennedy> Uploaded file: https://uploads.kiwiirc.com/files/842cde69a0b36b83cf41e19ff8805134/pasted.txt
[23:00:35] <cennedy> Uploaded file: https://uploads.kiwiirc.com/files/842cde69a0b36b83cf41e19ff8805134/pasted.txt
[23:00:44] <cennedy> sorry
[23:00:56] <cennedy> ok i got this
[23:01:32] <waleee> cennedy: you lack a c library that a commonlisp library uses, libfixposix
[23:01:43] <cennedy> ssoo?
[23:01:51] <waleee> I think it's in the xbps repo
[23:02:06] <cennedy> libfixposix is installed
[23:02:07] <cennedy> btw
[23:03:29] <cennedy> yeah?
[23:03:39] <cennedy> how can i do and before this i have questions
[23:03:45] <cennedy> i am using qutebrowser rn
[23:03:52] <cennedy> is it faster than or not?
[23:04:00] <pjb> yes, its.
[23:04:02] <pjb> it is.
[23:04:08] <cennedy> hmm ok
[23:04:14] <cennedy> uses lisp
[23:04:27] <cennedy> why are you not wrote this in C++
[23:04:30] <cennedy> or rust
[23:04:32] <cennedy> bla bla
[23:04:37] <pjb> LOL
[23:04:46] <cennedy> lol?
[23:04:47] <edgarvincent[m]> hahaha
[23:04:58] <cennedy> what i dont know why lisp
[23:05:04] <edgarvincent[m]> Oh, I thought you were joking.
[23:05:23] <pjb> http://www.neil.dantam.name/lisp.html
[23:05:25] <cennedy> no iam not
[23:05:30] <pjb> https://gigamonkeys.com/book/introduction-why-lisp.html
[23:05:42] <waleee> cennedy: not even mozilla went for an all-rust browser¨
[23:05:48] <pjb> https://beautifulracket.com/appendix/why-racket-why-lisp.html
[23:05:57] <pjb> https://atlas.engineer/technical-article/why-lisp.org
[23:05:59] <edgarvincent[m]> In the context of Nyxt, Lisp is useful in that it is extensible and can be rewritten on-the-fly.
[23:06:08] <cennedy> garbage collection...
[23:06:11] <pjb> We could say it's a  FAQ…
[23:06:55] <cennedy> oh ok
[23:06:59] <cennedy> what is my problem
[23:07:05] <cennedy> how can i fix
[23:07:23] <cennedy> Unhandled SB-KERNEL::UNDEFINED-ALIEN-FUNCTION-ERROR in thread #<SB-THREAD:THREAD "main thread"
[23:07:23] <cennedy> RUNNING
[23:07:24] <cennedy>                                                                  {1001038103}>:
[23:07:24] <cennedy>   The alien function "lfp_errno" is undefined.
[23:07:25] <cennedy> Backtrace for: #<SB-THREAD:THREAD "main thread" RUNNING {1001038103}>
[23:07:25] <cennedy> 0: ("undefined function")
[23:07:26] <cennedy> 1: (NYXT:ENTRY-POINT)
[23:07:26] <cennedy> 2: ((LAMBDA NIL :IN UIOP/IMAGE:RESTORE-IMAGE))
[23:07:27] <cennedy> 3: (UIOP/IMAGE:CALL-WITH-FATAL-CONDITION-HANDLER #<FUNCTION (LAMBDA NIL :IN UIOP/IMAGE:RESTORE-IMAGE) {100665F81B}>)
[23:07:27] <cennedy> 4: ((FLET SB-UNIX::BODY :IN SB-IMPL::START-LISP))
[23:07:28] <cennedy> 5: ((FLET "WITHOUT-INTERRUPTS-BODY-3" :IN SB-IMPL::START-LISP))
[23:07:28] <cennedy> 6: (SB-IMPL::START-LISP)
[23:07:29] <cennedy> unhandled condition in --disable-debugger mode, quitting
[23:07:30] <cennedy> this is
[23:07:54] <edgarvincent[m]> Please use a pastebin instead of pasting long snippets in this channel :)
[23:08:08] <cennedy> oh ok
[23:09:00] <waleee> lfp_errno is 100% from libfixposix so you do have some kind of issue there
[23:09:04] <pjb> cennedy: https://termbin.com/a0g4
[23:09:53] <edgarvincent[m]> cennedy: Are you sure libfixposix is installed?
[23:09:58] <waleee> pjb: the package they installed has it as a dependency, but something must have gone wrong
[23:10:15] <pjb> cennedy: then make sure cffi:*foreign-library-directories* specifies the path where thast library is installed.
[23:10:25] <pjb> s/thast/that/
[23:10:55] *** Quits: cennedy (~cennedy@46.197.117.3) (Quit: Connection closed)
[23:11:02] <edgarvincent[m]> waleee: Do you happen to know what the `-L` flag means there: https://github.com/atlas-engineer/nyxt/actions/runs/1480467258/workflow#L72 ?
[23:11:11] *** Joins: cennedy (~cennedy@46.197.117.3)
[23:11:25] <cennedy> i was but
[23:11:31] <cennedy> same error
[23:11:43] <cennedy> i think my problem is
[23:11:45] <cennedy> musl?
[23:11:50] <cennedy> i am in musl btw
[23:12:05] <waleee> that is definetly an issue
[23:12:34] <cennedy> yeah i think so
[23:12:50] <cennedy> ok
[23:13:03] <pjb>  cennedy: check: (cffi:use-foreign-library #+darwin "libfixposix.dylib" #-darwin "libfixposix.so") --> #<foreign-library libfixposix.SOMETHING …>
[23:13:09] <cennedy> are you using nyxt rn right?
[23:13:34] <waleee> edgarvincent[m]: I'd assume it's something along the lines of the cc usage, but I'm not familiar with it
[23:14:10] <cennedy> wait
[23:14:16] <waleee> (ie that you specify it as a library path)
[23:14:19] <cennedy> i am in musl-libc and i am using gcc btw
[23:14:20] <cennedy> *
[23:15:16] <waleee> ... "libraries" ~ other guix/guile scripts
[23:15:41] <cennedy> i dont know what are you saying but
[23:15:48] <cennedy> what can i do
[23:16:06] <cennedy> the problem is i am using musl?
[23:16:09] <cennedy> or not this
[23:21:24] <waleee> I'm inclined that using musl as the libc is the issue here, but can't confirm it
[23:21:53] <waleee> cennedy: does any other webkit-based browser work for you?
[23:22:04] *** Quits: cennedy (~cennedy@46.197.117.3) (Quit: Connection closed)
[23:22:23] *** Joins: cennedy (~cennedy@46.197.117.3)
[23:22:32] <cennedy> i come back
[23:22:41] <cennedy> yeah do you have an idea
[23:22:51] <waleee> cennedy: does any other webkit-based browser work for you?
[23:23:02] <cennedy> webkit
[23:23:05] <waleee> eg epiphany, vimb
[23:23:09] <cennedy> hmm yeah surf
[23:23:17] <cennedy> oh
[23:23:20] <cennedy> i have vimb too
[23:23:28] <waleee> the suckless-browser?
[23:23:36] <waleee> that doesn't use webkit
[23:23:41] <cennedy> Uploaded file: https://uploads.kiwiirc.com/files/fb3191fe4ccb1589e85cf9c3c8410a0a/image.png
[23:23:50] <cennedy> this is vimb
[23:23:51] <waleee> ah, nvm it did
[23:24:29] <waleee> cennedy: did the script pjb posted work or did it output any errors?
[23:24:50] <cennedy> yeah
[23:24:53] <cennedy> i sent that
[23:25:00] <waleee> did it output errors?
[23:25:12] <cennedy> wait
[23:25:21] <cennedy> no when installing libfixposix
[23:25:36] <cennedy> i was not get some errors
[23:26:02] <cennedy> but same errors when launcing in temr
[23:26:47] <waleee> launching what? nyxt, vimb?
[23:27:10] <cennedy> nxyt
[23:29:46] <cennedy> and i think nyxt is little bloated
[23:29:50] <waleee> ok, so then we try pjb's next suggestion, checkking the foreign library path in sbcl. Fire up a sbcl repl, preferably with "rlwrap sbcl" since it is quite annoying without readline-support
[23:29:56] <cennedy> have a lot of packages i need
[23:30:22] *** Quits: cennedy (~cennedy@46.197.117.3) (Quit: Connection closed)
[23:30:35] <waleee> ... quite annoying indeed
[23:33:57] <waleee> "musl is the sh*t! Everything else is bloated". Later: "why doesn't everything work as I expect"
[23:38:33] <drakonis> alas, not the first time i've seen this before
[23:41:56] <waleee> I have nothing against musl itself, but it does seem to be catnip for a certain kind of linux user
[23:43:40] <jmercouris> Lmao
[23:43:45] <jmercouris> I like this expression
[23:43:53] <jmercouris> “Catnip for a certain kind of user”
[23:44:02] <jmercouris> That’s pure gold waleee
[23:44:33] <jmercouris> You know what I’m thinking maybe cennedy was right
[23:44:48] <jmercouris> If we rewrote Nyxt in rust, everything would be better
[23:45:01] <jmercouris> It wouldn’t be so bloated
[23:49:28] <jmercouris> aartaka: are you getting started on the rust rewrite?
[23:49:48] <jmercouris> I’ve already exec’d cargo up
[23:50:41] <drakonis> op already left the server
[23:50:48] <aartaka> jmercouris: Screw Rust, I'm doing a golang fork to integrate with Google services :p
[23:50:54] <waleee> lol you should be really happy that hayley/no-defun-allowed isn't here when you utter such heresies
[23:51:08] <aartaka> xD
[23:51:38] <drakonis> jmercouris: this is known as riir or rewrite it in rust
[23:51:51] <qhong> Quote from Nyxt issue section (maybe): We’ve also explored Servo, which is very cool and fast, but also very fast to crash! Hopefully soon enough we can make your dream reality!
[23:51:52] <qhong>  
[23:52:01] <qhong> takeaway: Rust is when crash fast!
[23:52:37] <drakonis> rust lovers go around peddling their riir wares to innocent developers
[23:52:46] <drakonis> promising the heavens
[23:53:20] <jmercouris> aartaka: golang, even better!
[23:53:55] <jmercouris> I demand a RIIR or I’m not using Nyxt anymore!
[23:54:04] <jmercouris> :-D
[23:54:05] <waleee> to be fair ripgrep instead of grep is the beesknees. But some of that bees knees is from benefitting from a new architecture, not just from rust
[23:54:21] <jmercouris> Rewriting always allows you to use hindsight
[23:54:54] <drakonis> hindsight is 20/20 eh?
[23:54:59] <jmercouris> Yes
[23:55:08] <qhong> Sounds like a rewriting-system based language is the way
[23:55:13] <qhong> Should make a Maude cult
[23:55:14] <jmercouris> It is the way
[23:55:22] <drakonis> it is very cult-ish, sadly.
[23:55:26] <jmercouris> We have rewritten Nyxt so many times
[23:55:36] <jmercouris> In order to get a feature rifht
[23:55:37] <drakonis> but it happens to any languages with a strong promise
[23:55:43] <jmercouris> Right*
[23:55:59] <qhong> Now rewrite Nyxt in Maude, and it will rewrite itself from later on!
[23:56:02] <qhong> problem solved
[23:56:06] <jmercouris> Lol
[23:56:11] <drakonis> heck, even common lisp did not escape it
[23:56:23] <jmercouris> I already told you, we are rewriting in Rust
[23:56:28] <jmercouris> And then in golang
[23:56:32] <drakonis> it experienced its peak cult in the 90s into the 2000s
[23:56:32] <jmercouris> And then in typescript
[23:56:59] <drakonis> you should see shen
[23:57:09] <qhong> I think if we could freely choose between language, MIT Scheme is a much better design than CL
[23:57:16] <qhong> but lIbrArIES
[23:57:17] <drakonis> MIT scheme of all the schemes?
[23:57:22] <drakonis> do it in racket
[23:57:27] <qhong> racket absolutely suxx
[23:57:28] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[23:57:30] <drakonis> now that one's got you covered
[23:57:32] <jmercouris> If Nyxt isn’t a Quine by the year 2030 I don’t know what we are doing
[23:57:36] <qhong> It's haskell with parenthesis
[23:57:55] <drakonis> now now, that's offensive to haskell AND racket
[23:57:58] <drakonis> do it in hackett!
[23:58:06] *** Joins: amk (~amk@109.255.169.126)
[23:58:11] <jmercouris> Why not hyve?
[23:58:15] <drakonis> hyve?
[23:58:22] <drakonis> alternatively, write it in coalton
[23:58:23] <jmercouris> Some sort of lisp with parenthesis
[23:58:24] <qhong> jmercouris: Quine in what sense? Does Emacs count as a Quine (M-.)?
[23:58:31] <drakonis> still sbcl but with types
[23:58:35] <jmercouris> qhong: in a sense yes
[23:58:41] <qhong> f*** types
[23:58:44] <jmercouris> I want it to compile to a different language though
[23:58:50] <qhong> all my homies hate type-non-free language
[23:59:02] <jmercouris> qhong: where are you from?
[23:59:20] <qhong> you mean geographically?
[23:59:23] <jmercouris> Yes
[23:59:41] <qhong> Was from China, but currently at west coast
[23:59:45] <jmercouris> I see
[23:59:55] <jmercouris> I was wondering about your time zone
