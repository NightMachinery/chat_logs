[00:00:10] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:00:16] <bjs> Daemonick: well it's not quite that simple...
[00:00:34] <gambl0re> s1 = {1,2,3} s2 = {1,4,5} ; s1.intersection(s2) should return {1} but instead returns {1,2,3}
[00:00:36] <gambl0re> why is this
[00:00:38] <bjs> the less predictable the seed the better
[00:00:41] *** Joins: fikran (~fikran@user/fikran)
[00:00:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:01:01] <bjs> gambl0re: it does return that?
[00:01:07] <bjs> gambl0re: that seems surprising, are you sure?
[00:01:20] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[00:01:21] *** Joins: audiophile_ (~audiophil@user/audiophile)
[00:01:27] <gambl0re> yea i tried it so many times in my editor, repl and always the same result
[00:01:40] <gambl0re> I thought my editor was broken so restarted and the same thing
[00:01:41] <bjs> gambl0re: well can you show us you actually doing it in the repl then?
[00:02:10] <bjs> like pastebin the repl session,  is it possible you just typed the line wrong?
[00:02:20] <gambl0re> https://replit.com/@rickywid/FantasticScratchyMemorypool#main.py
[00:03:05] <gambl0re> the repl code is a little bit different but still super basic
[00:03:09] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 256 seconds)
[00:03:14] <bjs> gambl0re: it's very different
[00:03:25] <bjs> gambl0re: for a start you print(s1)
[00:03:27] <gambl0re> yes but it should still return {1}
[00:03:29] <bjs> and discard the intersection
[00:03:38] <grym> gambl0re: that expression does return {1}
[00:03:42] <gambl0re> what?
[00:03:54] <bjs> gambl0re: s1.intersection(s2) returns {1}
[00:03:57] <bjs> gambl0re: it doesn't change s1
[00:04:04] <gambl0re> oh I guess I have to store the intersectoin in a variable
[00:04:08] <gambl0re> it seems to work now
[00:04:30] <gambl0re> I was following this https://www.pythoncheatsheet.org/#Dictionaries-and-Structuring-Data
[00:04:37] <gambl0re> under setIntersection() section
[00:04:43] <gambl0re> so I was a bit confused
[00:05:13] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 252 seconds)
[00:05:19] *** audiophile_ is now known as audiophile
[00:06:49] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b9f8-e42c-471d-008c.res6.spectrum.com)
[00:07:05] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[00:08:10] * enyc welcomes those moved from old irc net or so
[00:08:53] *** Joins: nadio (ice@starlight.iextreme.org)
[00:09:28] <nadio> hello anyone that could help me with a script ? run into some issues with limited knowlage of python that I can not solve.  https://pastebin.com/578wy5cc
[00:12:45] <vlt> nadio: What have you tried so far?
[00:13:30] <nadio> vlt: adding 2 strings, to join more of them but the function doesnt allow it
[00:13:54] <vlt> nadio: What error message do you get?
[00:14:23] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[00:14:41] <nadio> it works perfectly, but up to the join(key) after that, the blocks dont change or just says using 2 .join() isnt allowed
[00:15:02] <nadio> as said have very limited coding skills in python
[00:15:53] <bjs> nadio: can you share what you tried that failed?
[00:16:06] <bjs> with the 2 .join()
[00:16:07] *** Quits: ccallahan (~ccallahan@redhat/ccallahan) (Ping timeout: 256 seconds)
[00:16:11] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 256 seconds)
[00:16:52] <nadio> yes hang on
[00:17:16] *** Joins: emacspenguin (~My_user_n@2607:fb90:2906:938c:db5:9d31:e79e:95ba)
[00:17:36] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:17:54] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[00:18:58] <nadio> https://pastebin.com/8e3iDFNc
[00:19:37] <nadio> length is wrong in that example, but doesnt matter has no effect.
[00:20:02] <philipp64> jwhisnant: saw that... was hoping for a library that handles all of the series, but I guess there isn't one...
[00:20:23] <nadio> vlt: bjs
[00:20:26] <bjs> nadio: what are you trying to do with permutations() ?
[00:20:29] <vlt> nadio: Did you notice "TypeError: permutations() takes at most 2 arguments (3 given)"
[00:21:45] <nadio> vlt: yes I did, and assume its not capable of doing it, so I am trying to figure out a work around. But with no luck.
[00:22:10] <bjs> nadio: well, "capable of doing" what exactly?  it's not obvious to me what you want it to do
[00:22:20] <vlt> nadio: Capable of doing *what*?
[00:22:49] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[00:22:52] <nadio> vlt the function doesnt allow to give, two .join()
[00:23:41] <bjs> nadio: i'm not sure what .join has to do with it
[00:23:44] <nadio> bjs: I am trying to create a wordlist generator, that keeps some passwords static, some passwords it changes. (lost a password, but I do know most that is in it)
[00:23:46] <vlt> nadio: *permutations()*, not join()
[00:23:49] <bjs> the error was coming from permutations not join
[00:24:11] <bjs> nadio: what are these change_block things and why are you using permutations?
[00:24:36] <nadio> bjs: to add changes to different places in a long password, from variables.
[00:24:48] *** Quits: emacspenguin (~My_user_n@2607:fb90:2906:938c:db5:9d31:e79e:95ba) (Ping timeout: 268 seconds)
[00:24:53] <bjs> nadio: give me some example output prints you want to see from these joins
[00:25:19] *** Parts: oz4ga (~tim@hator.sunsite.lv) (Leaving)
[00:26:11] <nadio> bjs: passwd1p@ssw0rd2abcd1993altanta
[00:26:28] <bjs> nadio: the word "altanta" didn't appear anywhere in your paste
[00:26:33] <nadio> bjs: some parts remain static, some parts change, the changing parts add to alot of different variations
[00:26:34] <bjs> was that from one of your change_blocks ?
[00:26:41] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[00:26:51] <nadio> bjs: no I would of course not poste any real passwords.
[00:27:18] <nadio> bjs: ok, do you have any suggestions what to try ?
[00:27:29] <bjs> nadio: I still don't know what you're trying to do, what are these change_block things
[00:27:37] <bjs> and what are they for
[00:28:05] <nadio> bjs: its an array, that creates different verions of the password in specific places
[00:28:18] <bjs> nadio: okay but... why are there 3 of them?
[00:28:50] *** Quits: causaui1 (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[00:28:57] <nadio> bjs: Imagen a long password like, "Today its sunny outside but its dark" the script are able to change some of the words in there like "Today its raining outside but its cloudy"
[00:29:08] <nadio> I need to make all possible options of them
[00:29:10] *** Joins: parv (~quass@user/parv)
[00:29:17] <bjs> nadio: oh, so you want to take one word from each of the change_block lists>?
[00:29:26] <nadio> bjs: Yes correct
[00:29:35] <bjs> nadio: Ah okay.  This is called a product, not a permutation
[00:29:54] <bjs> `for key in itertools.product(change_block1, change_block2, change_block3):`
[00:30:28] <nadio> ok thanks, gonna give it a shoot...
[00:30:47] *** Quits: ano (~ano@user/ano) (Quit: ano)
[00:32:26] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:32:49] *** Quits: onichomp (~onichomp@2806:264:4404:8181:89c2:d3e9:a900:4c44) (Ping timeout: 268 seconds)
[00:33:27] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[00:33:29] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:33:33] *** Joins: ffledgling (~textual@2620:10d:c090:500::2:3bbf)
[00:33:56] *** Joins: ano (~ano@user/ano)
[00:33:58] <nadio> bjs:  for key in itertools.product(change_block1, change_block2, change_block3):  IndentationError: unexpected indent
[00:34:17] <bjs> nadio: sounds like your indentation is wrong
[00:34:54] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[00:35:01] <nadio> ah bjs manage to fix it, just a tab error.
[00:35:16] <nadio> bjs: big thanks, caused alot of headicks that one.
[00:36:41] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[00:36:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:38:05] <NoImNotNineVolt> so, i have two lists of strings, and i want to find the mapping between them that minimizes the sum total difference (e.g. levenshtein) between them.
[00:38:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:38:16] *** Quits: paul424 (~tom@ip-37-248-154-21.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:38:27] <NoImNotNineVolt> this seems like a variant of the problem solved by diff.
[00:38:28] *** Joins: noarb (~noarb@user/noarb)
[00:38:37] <NoImNotNineVolt> or in bioinformatics.
[00:38:53] *** Joins: vicfred (~vicfred@user/vicfred)
[00:38:59] <NoImNotNineVolt> e.g. https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm
[00:39:29] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:39:40] <NoImNotNineVolt> or since it's a relatively small dataset, should i just bruteforce it?
[00:39:55] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 256 seconds)
[00:41:51] <SnoopJ> if it's small enough to use a naive solution, that will probably be more maintainable
[00:41:55] *** Joins: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net)
[00:42:05] <SnoopJ> (or if it's not going to be maintained at all, it's less effort to build)
[00:42:05] <noord> NoImNotNineVolt: is it one time thing?
[00:42:38] <NoImNotNineVolt> yea, that's what i'm thinking. it's more a script that i'm writing that will be manually run by someone occasionally.
[00:42:54] <NoImNotNineVolt> so i'm trying to avoid creating a maintenance challenge.
[00:43:07] <SnoopJ> I'd do the naive thing and maybe put a note about how it could be done if that becomes untenable in the future
[00:43:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:43:25] <noord> what are the average string size and average list len ?
[00:43:30] <whatsupdoc> Can someone explain this code?
[00:43:45] <whatsupdoc> https://dpaste.org/bAmn
[00:43:47] <NoImNotNineVolt> string len on the order of n=20, list len on the order of n=100
[00:43:55] <NoImNotNineVolt> so, small
[00:43:58] <noord> use levenstein
[00:44:12] <whatsupdoc> Why does line 6-7 do?           if pos == len(data): return
[00:44:21] <NoImNotNineVolt> thanks for the feedback all :)
[00:44:26] *** Parts: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net) ()
[00:44:26] *** Joins: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net)
[00:44:29] <SnoopJ> noord, Levenshtein distance is part of the problem statement AFAIK
[00:44:30] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[00:44:34] <whatsupdoc> Is it just incase you're choose > the number to choose from?
[00:44:42] <SnoopJ> but yea, those numbers seem small enough that you can just fully explore the search space
[00:44:45] <whatsupdoc> 5 choose 6?
[00:44:48] <NoImNotNineVolt> SnoopJ: not strictly, though. i'd be fine with anything similar.
[00:44:56] <NoImNotNineVolt> basically, i'm trying to match up usernames in two systems.
[00:44:56] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:44:58] <SnoopJ> NoImNotNineVolt, ah
[00:45:07] <noord> SnoopJ: levenstein + cartesian product + brute force
[00:45:14] <bjs> whatsupdoc: well the recursive calls incremement pos
[00:45:43] <NoImNotNineVolt> create a mapping from one to the other. currently a manual process.
[00:46:27] <NoImNotNineVolt> so levenshtein is just my guess at a good metric to optimize for.
[00:47:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[00:47:53] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:808e:8d9b:579e:330f) (Quit: smeeagle)
[00:48:18] <SnoopJ> NoImNotNineVolt, and usernames between the two systems are distinguishable? Yea, I'd probably just compute that distance (python-Levenshtein is good, and in C) for every pair
[00:48:29] *** Quits: Daemonick (~Daemonick@46.246.199.138.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[00:48:39] <NoImNotNineVolt> maintaining a unique constraint presents another level of challenge, though. a naive 'nearest match' for each doesn't guarantee a injection.
[00:49:25] <SnoopJ> guarantees are I think probably out
[00:49:26] *** Joins: smeeagle (~smeeagle@host31-48-139-30.range31-48.btcentralplus.com)
[00:50:05] <NoImNotNineVolt> i'll just note any duplicate mappings and expect a manual pass by the script operator to sort them out.
[00:50:06] <SnoopJ> but if the goal is a tool that can help a human do a migration or something, you could always get the user in the loop
[00:50:09] <SnoopJ> yep
[00:50:28] <NoImNotNineVolt> thanks again :)
[00:51:06] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:54:24] *** Quits: csmiga (~Thunderbi@96-87-248-1-static.hfc.comcastbusiness.net) (Quit: csmiga)
[00:54:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[00:56:07] <{HD}> how come it appears array.copy() doesn't preserve datatype? I have data = ["1010101", "010101010".....] so it is strings but when I data2 = data.copy() it turns it into an array of ints.
[00:56:08] <noord> NoImNotNineVolt: I thought again, after calculating score levenshtein distance every pair put it into matrix, it would turn into job assignment problem
[00:56:14] *** Joins: arinov (~arinov@213.194.126.155)
[00:56:24] <bjs> {HD}: that's a list, and why would copy change it into ints?
[00:56:39] <bjs> {HD}: are you sure that's what's happening?  can you show us?
[00:56:40] *** Joins: superboot (~agentgasm@user/superboot)
[00:56:43] <noord> which has same complexity of original problem
[00:57:39] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 252 seconds)
[00:57:41] * SnoopJ daydreams about an annealing solver
[00:58:36] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[00:58:50] <Wooble> spoiler: not only doesn't list.copy change types, it doesn't even copy the values.
[00:58:58] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[00:59:34] <{HD}> bjs: not easily. It involves my AoC puzzle input... if I `while len(data) > 1:` it works but if I `while len(data2) > 1:` I get an error "object of type 'int' has no len...
[00:59:53] <{HD}> Wooble: then what the heck does it do?
[01:00:02] <bjs> {HD}: ... I'm not sure what I can do with this information because you didn't say what data or data2 is or anything really
[01:00:05] <bjs> {HD}: it copies the list
[01:00:07] <Wooble> {HD}: it makes a copy of the list containing references to the original objects
[01:00:08] <Ninpo>  somehow you're assigning an int to data2
[01:00:08] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[01:00:09] <bjs> (not the things inside it)
[01:00:27] <Ninpo> that's not coercing a list of strings to a list of ints, you're trying to int.len
[01:00:32] <SnoopJ> and to drive the point home: list() and "array" mean refer to two different things
[01:00:37] <Ninpo> er len(int)
[01:00:44] <{HD}> hum, so if I want 2 independent copies of a list what do I do?
[01:00:44] * SnoopJ blinks at "mean refer"
[01:00:53] <bjs> {HD}: what do you mean "independent"?
[01:01:00] <Wooble> {HD}: if the values are immutable objects, you can't tell the difference anyway
[01:01:15] <SnoopJ> {HD}, list.copy() gives you a new list with references to the same objects. It would help a lot if we could see runnable code, here.
[01:01:16] *** Joins: buzzard (~quassel@37.120.203.165)
[01:01:30] <SnoopJ> perhaps your AoC inputs can be whittled down to something you can share with us
[01:01:39] <{HD}> let me dpaste something
[01:02:23] <Ninpo> {HD}: https://bpa.st/6FLQ
[01:03:05] *** Joins: Mindscape (~Lindis@user/lindis)
[01:03:54] <Wooble> or just search your code for data2 and see where you assigned an int to it :)
[01:04:42] <{HD}> hum, in widdling down my code to only the needed bits to dpaste it started working... I guess something was messing it up... Let me try to track it down...
[01:04:56] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[01:05:39] *** Quits: buzzard (~quassel@37.120.203.165) (Client Quit)
[01:06:12] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[01:06:21] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[01:06:25] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[01:07:25] <noord> {HD}: dataclone = data[:] ?
[01:08:38] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:08:40] <Ninpo> data2 = len(data) somewhere I bet
[01:08:43] <Ninpo> mispaste
[01:10:39] *** Joins: Guest6445 (~mac@144.62.50.200)
[01:10:48] <SnoopJ> noord, that's a synonym for `dataclone = data.copy()`, it shouldn't mutate anything
[01:11:51] *** Guest6445 is now known as CormacAttack
[01:13:26] <noord> SnoopJ: isn't it desired? maybe misunderstood the problem
[01:13:47] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:14:08] <{HD}> Okay I found it. I was appending a temporary list with the values that were acceptable and then using data = tempList. But the temp list was templist.append(data[index]) but for some reason the templist was ints...even though the datatype of data was strings...
[01:14:17] <{HD}> so when I did data = temp then it turned into ints
[01:14:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:14:26] <SnoopJ> noord, their question is "why is my data different" and the answer is apparently ^
[01:14:38] <noord> ah ok
[01:14:48] <SnoopJ> {HD}, "Most bugs are a result of the execution state not being exactly what you think it is."
[01:15:20] <SnoopJ> the trick of whittling it down and finding the answer is an extremely repeatable one, and when it fails, you have something handy to share when soliciting help :)
[01:16:06] *** Quits: gdd (~gdd@129.199.146.230) (Read error: Connection reset by peer)
[01:16:21] <{HD}> I still don't know why tempdata.append(data[index]) would have resulted in a list of ints...since data consists of strings...but at least I know where the problem is.
[01:16:25] <Ninpo> "when I did data = temp then it turned into ints" it didn't "turn into" ints, Python doesn't do that unless you tell it, You got an int because temp had an int in it
[01:17:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[01:18:16] <Ninpo> is it templist temp or tempdata as well this is very hard to follow
[01:18:50] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[01:19:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[01:19:11] *** Joins: grayn (~Thunderbi@2001:8003:8c8b:e00:6f46:47b3:f690:8162)
[01:19:41] <SnoopJ> {HD}, yep, it's just like untying a knot, once you have some place to work from that makes you go "huh, what?" you work from there
[01:20:16] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Quit: Leaving...)
[01:25:01] <{HD}> whats this mean `(variable) data: list[str] | int` when I hover over my original list it just reads "list[str" but the copied list has the "| int" appended onto it.
[01:26:01] <SnoopJ> {HD}, the annotation is `list[str] | int` which means "a list of strings, or an integer"
[01:26:15] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-35.poda.cz) (Ping timeout: 252 seconds)
[01:26:26] *** Joins: pyzozord (pyzozord@user/pyzozord)
[01:26:42] <pyzozord> hey, I'm a bit confused about pythons scoping
[01:26:55] *** Joins: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs)
[01:26:58] <SnoopJ> it sounds like you're talking about your IDE inferring the type of something, though, which might be re-assigning that thing to an int at some point
[01:27:23] <pyzozord> it looks like I can use a variable for the first time inside an if or with block and then it's available outside of it
[01:27:48] <pyzozord> another question, how do people get by with names like list, dir an dothers being taken?
[01:27:53] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[01:28:23] <SnoopJ> pyzozord, that's possible because those names are "just" names that the runtime sets for user use. They aren't keywords, so they can be reassigned.
[01:28:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Quit: Leaving)
[01:29:37] <pyzozord> SnoopJ: but because of the first problem I mentioned with scoping, my reassigned list is later reassigned outside of the code block
[01:29:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:29:51] <SnoopJ> pyzozord, I can't comment on your code because I cannot see it.
[01:30:10] <pyzozord> no code, just something I noticed earlier today
[01:30:28] <pyzozord> is there some good resource to read about how python handles scoping?
[01:30:46] <pyzozord> it seems a bit confusing, and not quite how it works in most other languages
[01:30:49] <SnoopJ> https://docs.python.org/3/reference/executionmodel.html#resolution-of-names
[01:31:25] <SnoopJ> tl;dr you look in the current scope and if you fail to see it there, you go to the next enclosing scope and repeat until you find what you want or run out of enclosing scopes
[01:31:57] <pyzozord> thanks
[01:32:02] *** Quits: ffledgling (~textual@2620:10d:c090:500::2:3bbf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:32:29] *** Quits: grayn (~Thunderbi@2001:8003:8c8b:e00:6f46:47b3:f690:8162) (Ping timeout: 252 seconds)
[01:32:41] <pyzozord> need to read it though because it seems like simply block of codes as in levels of indentations do not have separate scopes
[01:32:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[01:33:20] <SnoopJ> not all indentations do
[01:33:33] <SnoopJ> since e.g. a continuation line could be indented
[01:34:48] *** Joins: ffledgling (~textual@2620:10d:c090:500::2:3bbf)
[01:35:43] *** Joins: audiophile_ (~audiophil@user/audiophile)
[01:36:29] <bjs> pyzozord: modules, classes and functions make new scopes.  Technically speaking Python's scoping is lexical scoping, and works in pretty much the same way as other languages with a few caveats
[01:36:35] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:37:23] *** Joins: gdd (~gdd@129.199.146.230)
[01:38:04] <bjs> the notable one being the fact that within a block you can't change which scope a name refers to (so e.g. `def f(): print(x); x = 42` does not work)
[01:39:02] <pyzozord> what is going to be the error for that code?
[01:39:10] <bjs> pyzozord: UnboundLocalError
[01:39:25] <bjs> as `x` must be local in that scope, but x doesn't exist yet when you get to the print
[01:39:29] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 256 seconds)
[01:39:35] *** Joins: pepper (~pepper@user/pepper)
[01:39:35] *** audiophile_ is now known as audiophile
[01:39:38] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[01:39:51] <SnoopJ> clarification: the nonlocal/global keywords do let you say explicitly "this name isn't defined here" but what bjs says is what you get by default
[01:39:56] <pyzozord> ah so it sees local name x when function is begining, but at the print, the name x is not bound to any variable yet
[01:40:03] *** Quits: gambl0re (~gambl0re@205.189.187.4) (Ping timeout: 256 seconds)
[01:40:06] <NoImNotNineVolt> yup, levenshtein and exhaustive iterative search across the space is still plenty fast. and the code is tiny and easily readable. thanks!
[01:40:47] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[01:40:57] <bjs> pyzozord: yes, the scoping applies to all uses of the variable in the block not each individually;  as SnoopJ points out you can tell Python to use a different scope instead (but again, the same different scope for all uses of that variable)
[01:41:04] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[01:41:20] <SnoopJ> yea, you can't switch back and forth or anything
[01:41:27] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[01:43:19] <pyzozord> can I make "code islands" in python like? Like def fn(): x = 5; """island starts""" x = 6; print(x) # 6 """island ends""" print(x) # 5
[01:43:28] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:43:34] <bjs> pyzozord: well, you can make a function
[01:43:39] <SnoopJ> pyzozord, the example bjs gave is a little nuanced: because f() assigns to `x`, the compiler assumes it's local, and so the first usage uses LOAD_FAST (which looks in the local scope). Compare to the version without an assignment, which emits LOAD_GLOBAL: https://bpa.st/JO4A
[01:43:44] <bjs> pyzozord: like i said, modules, functions and classes make scopes. Nothing else
[01:43:53] <bjs> SnoopJ: I think you jump to bytecode a *little* too quickly sometimes ;)
[01:44:30] <pyzozord> ok, so no code islands, and also ifs/fors/withs do not have scopes
[01:44:41] <bjs> pyzozord: exactly
[01:44:50] <SnoopJ> bjs, I try to resist the urge these days, but I think "look the LOAD_*" is different is a lot more illuminating in this specific case, where we're already talking about scope
[01:45:14] <{HD}> woohoo I got my 2 gold stars! Thanks for the help.
[01:45:35] *** Quits: sandb0y (~pirate@user/sandb0y) (Ping timeout: 268 seconds)
[01:45:36] <grym> is it fair to say that comprehensions have a scope?
[01:45:48] <grym> [x for x in range(10]; x ; is a NameError
[01:45:48] <bjs> Yeah
[01:46:19] <SnoopJ> yea, they create code objects
[01:46:22] <grym> (but, i think [x:=5 for _ in range(10)] leaks)
[01:46:28] <grym> if leak is the right word
[01:46:51] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[01:46:52] <pyzozord> what does := do in python again?
[01:46:57] <bjs> pyzozord: it's assignment
[01:47:07] <bjs> pyzozord: (x := <expr>) evaluates to expr but assigns the name x
[01:47:09] <SnoopJ> pyzozord, it assigns to the name, but you can use it anywhere you can use an expression
[01:47:09] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:47:32] <SnoopJ> as opposed to `x = val` which is a statement and has much stricter rules
[01:47:42] <pyzozord> I see
[01:47:59] <SnoopJ> it's mostly a shortcut for when you used to write: `x = something(); if x: ...`
[01:48:20] <SnoopJ> you can now write: `if x:=something(): foo(x)`
[01:48:34] <pyzozord> yep yep, got it
[01:48:57] <pyzozord> python doesn't want you to do that, but lets you do that if you are willing to put up with uglier and longer operator
[01:49:31] <SnoopJ> I wouldn't say the language discourages it, but to say its introduction was controversion would be understating it
[01:49:39] <SnoopJ> controversial*
[01:49:43] *** Quits: CormacAttack (~mac@144.62.50.200) (Ping timeout: 252 seconds)
[01:49:44] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:49:44] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:49:52] *** Joins: dohtem (uid524096@user/dohtem)
[01:50:04] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[01:50:14] <SirScott> specifying 'py39-build' in a tox env list, yet it is using 'python3' (which is py3.7). Any idea how to make this use 3.9? https://bpa.st/GI5A
[01:50:40] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Remote host closed the connection)
[01:51:04] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:51:46] <SnoopJ> grym, your example is apparently a special case, it uses whatever the enclosing scope is which is pretty fair to call leaking
[01:51:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102) (Ping timeout: 256 seconds)
[01:53:10] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:57:52] <pyzozord> I have another question, in pydoc is there a way to do a full text search? I just did pydoc -k stdin and I got no results
[01:58:37] <SirScott> nevermind - updating tox to the latest version resolved the issue
[01:59:04] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[01:59:19] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[02:00:58] *** Parts: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce) ()
[02:01:21] <bjs> pyzozord: no
[02:01:26] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[02:01:39] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[02:02:17] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[02:02:21] <pyzozord> ok, so pydoc is not that good for exploration
[02:02:52] <pyzozord> better for reminders
[02:02:58] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[02:03:11] <grym> pyzozord: zealdocs is nice
[02:03:31] <zodd> With https://bpa.st/6DFQ I get errors regardless of the command string. It does not accept a path "/usr/bin" for instance or parameters. Escaping or converting the string into an array does not help. Syntax error can also appear. What am I doing wrong?
[02:04:38] <bjs> pyzozord: https://docs.python.org/3/ has the full docs for Python (including downloadable copies)
[02:04:42] <bjs> this is my go-to reference
[02:05:04] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[02:06:02] <bjs> zodd: this code doesn't match the error, it says NameError: ls  but there is no ls variable.  and you have rc, rs  but then you print rf
[02:06:10] <bjs> what is going on? :)
[02:06:35] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 252 seconds)
[02:06:56] <pyzozord> bjs: thanks
[02:07:02] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[02:07:21] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[02:08:10] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[02:08:17] <zodd> bjs, sorry, midway editing paste. This is better: https://bpa.st/DGQA
[02:08:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:09:03] <zodd> ls is not a variable, but should be a command executed. But I also want to be able to execute for instance 'ls -sla'
[02:09:08] <bjs> zodd: well your subprocess.run call is weird
[02:09:16] <bjs> why are you saying [sys.executable, ...] there?
[02:09:21] <bjs> zodd: just subprocess.run([cmd]) no ?
[02:09:31] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b9f8-e42c-471d-008c.res6.spectrum.com) (Read error: Connection reset by peer)
[02:10:02] *** Joins: fikran (~fikran@user/fikran)
[02:11:13] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[02:11:57] <bjs> zodd: or subprocess.run(["ls", "-sla"])  for example to pass arguments to ls
[02:13:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:14:17] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[02:14:29] <zodd> bjs, yes. thanks. I would like to convert the function argument cmd into the required array, so "ls -sla" to {"ls", "-sla"] if I use split for that I get: TypeError: expected str, bytes or os.PathLike object, not list
[02:15:23] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[02:15:50] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:16:12] *** Joins: cation (cation@user/cation)
[02:17:45] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:17:58] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:18:15] *** Joins: d00gy (~d00gy@user/d00gy)
[02:18:21] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:18:31] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[02:19:10] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:19:42] <sazawal> How come running one function with asyncio's ProcessPoolExecutor runs as many as 7 processes on my system monitor?
[02:19:45] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:20:29] <bjs> sazawal: well it's a process pool, but i don't think it usually actually starts the processes until you ask them to do stuff
[02:20:38] <bjs> zodd: if you use split where?
[02:20:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:21:02] <sazawal> bjs, I didn't provide number of workers, is it because of that?
[02:21:07] <drew> i want to subtract 10 from every int in a list of ints, but I know if I do something like for val in values: val -= 10, it won't affect the original list, it will just be creating copies of each element and then they are lost with each iteration as they fall out of scope
[02:21:12] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[02:21:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:21:53] <drew> I am thinking I can use a generator to do this, but I always mess up the syntax; something like values = [val for val - 10 in values] or something like that
[02:22:12] <KirkMcDonald> drew: A list comprehension: [val - 10 for val in values]
[02:22:30] <zodd> bjs, in the function: cmd=cmd.split()
[02:22:45] <bjs> zodd: where do you do that?  maybe you share the whole code?
[02:22:56] <bjs> zodd: because "ls -sla".split() is ["ls", "-sla"] like you wanted
[02:22:56] <drew> list comprehension, not generator, right. is there a way I can add an if statement in there? like [val - 10 if val > 20 for val in values]
[02:23:03] <zodd> before the line of subprocess.run
[02:23:24] <bjs> zodd: what about the rest of the code and the sys.executable part?
[02:23:28] <KirkMcDonald> drew: At the end: [val - 10 for val in values if val > 20]
[02:23:36] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[02:23:47] <bjs> drew: you can also update the list in-place, `for i, v in enumerate(values): values[i] = v - 10`
[02:24:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[02:24:26] <drew> ok, thank you for the options
[02:24:39] <KirkMcDonald> drew: Assuming you mean to filter out the values which don't meet the condition.
[02:24:52] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[02:25:37] <drew> KirkMcDonald: I was thinking take 10 away from values greater than 20, or keep as is. So maybe something like: [val - 10 for val in values if val > 20 else val]
[02:26:12] <KirkMcDonald> drew: In that case, you want a conditional expression: [val - 10 if val > 20 else val for val in values]
[02:26:40] <drew> I need to internalize this; I always remember wrong lol
[02:26:43] <drew> thanks KirkMcDonald
[02:27:46] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[02:27:49] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[02:28:54] *** Quits: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs) (Quit: Leaving)
[02:28:59] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[02:29:09] <howdoi> ------
[02:29:09] <howdoi>  > [ 7/11] RUN python3 -m pip install --trusted-host ctypesgen:
[02:29:09] <howdoi> #10 1.119 ERROR: You must give at least one requirement to install (see "pip help install")
[02:29:15] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[02:29:21] <howdoi> ^ am I missing something here?
[02:29:28] <howdoi> Trying that within docker
[02:29:32] <zodd> bjs, it is just some test code: https://bpa.st/WDLQ
[02:29:43] <SnoopJ> howdoi, that's interpreting ctypesgen as the hostname for that option
[02:29:48] <bjs> zodd: you say [cmd] but then you already have a list
[02:29:50] <bjs> because you split()
[02:30:18] <howdoi> SnoopJ: ha, I am trying to avoid all SSL issues
[02:30:36] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:30:54] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:31:01] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:02] <howdoi> --trusted-host * ?
[02:31:05] <zodd> bjs. Ah yes. Had to be something trivial. Thanks!
[02:32:48] <howdoi> RUN pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org ctypesgen hmm okies
[02:32:57] <SnoopJ> howdoi, I don't think pip itself has a way to turn off all SSL verification, but if you trust the hosts you'll need that should work yea
[02:33:25] <howdoi> hmm, it should respect an ENV no?
[02:33:35] <SnoopJ> I don't understand the question
[02:33:42] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[02:34:43] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[02:35:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[02:36:46] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 268 seconds)
[02:36:57] *** Joins: runelind_ (~runelind@user/runelind)
[02:37:51] *** Joins: onichomp (~onichomp@2806:264:4404:8181:89c2:d3e9:a900:4c44)
[02:38:14] <SnoopJ> howdoi, what version of pip is this, by the way?
[02:38:51] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[02:38:54] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[02:38:55] <howdoi> apt-get install python3-pip
[02:40:23] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:40:37] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[02:41:52] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[02:41:53] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:42:19] *** Quits: MercilessDeth (~brad@136.49.59.177) (Ping timeout: 256 seconds)
[02:42:30] <SnoopJ> okay, that's how you installed it. what version is it?
[02:44:09] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[02:44:10] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[02:44:10] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[02:44:26] *** Joins: bindu (~bindu@user/bindu)
[02:44:34] *** Joins: mickey8 (~user@user/mickey)
[02:46:07] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[02:46:30] <novasenco> Why can't I pass a reference to a numpy.array to a function and modify it?
[02:46:44] <novasenco> id(the_array) changes after passing to function
[02:46:46] <bjs> novasenco: why can't you?
[02:46:59] <bjs> novasenco: are you sure something else isn't going on
[02:47:05] <bjs> novasenco: can you show us?
[02:47:10] <novasenco> using multiprocessing.pool.apply_async()
[02:47:29] <bjs> novasenco: oh, well if you're passing it to another process then yes you can't pass a reference
[02:47:39] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:7b0c:5038:22bf:946a) (Ping timeout: 252 seconds)
[02:47:44] <bjs> that's nothing to do with numpy, but that's how processes are
[02:47:45] <novasenco> I need to
[02:48:00] <nedbat> novasenco: each process has its own separate memory space, so objects can't be shared between them
[02:48:07] <nedbat> novasenco: why do you need to?
[02:48:11] <bjs> novasenco: why processes and not just threads?
[02:48:19] <novasenco> homework assignment is why
[02:48:29] <bjs> novasenco: the homework told you to use processes for numpy?
[02:48:30] *** Joins: Pandadub (~Barones@2804:7f3:8988:8f27:16d4:c85f:5e2c:ebbe)
[02:48:33] <novasenco> f everything I have to create a bunch of numpy arrays for no reason and return them
[02:48:38] <novasenco> whatever. time crunch
[02:48:42] <novasenco> hate this
[02:48:59] *** Joins: seanh (1a2a07ea57@2604:bf00:561:2000::201)
[02:49:01] <novasenco> correct
[02:49:32] <ammar2> maybe you're misunderstanding and need to return a new array from each process and stitch them back up together or something
[02:49:35] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[02:50:06] <bjs> novasenco: well the way to actually make this work is to mmap a shared buffer between the processes and tell numpy to use that buffer for the arrays on both sides
[02:50:27] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[02:50:45] <novasenco> assignment says use map or apply_async from multiprocessing to "parallelize" these computations on a 2d array
[02:51:06] <ammar2> what computations are you doing?
[02:51:20] <SnoopJ> or stick the ndarray object into a SharedMemory block from multiprocessing.shared_memory
[02:51:52] <novasenco> effectively bilinear interpolation to create a "heat map" (left col (halo cells) starts out as initial temperature (like 50 or whatever user passes), then heat "spreads")
[02:51:59] <SnoopJ> but that will probably tend to block more often, so if you're operating on the data in the array in different processes simultaneously it probably isn't the way to go
[02:52:11] <SnoopJ> also, map/apply with numpy :'(
[02:52:13] <novasenco> I don't have time to discuss thx for help bye
[02:52:18] *** Quits: ffledgling (~textual@2620:10d:c090:500::2:3bbf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:52:49] <ammar2> bye, good luck ):
[02:52:56] *** Joins: ffledgling (~textual@163.114.132.128)
[02:53:13] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:53:46] <bjs> novasenco: well your two approaches are to either do the computation and then `return` values back to the parent process, or to share the actual numpy array with some shared memory
[02:54:11] <bjs> the latter is highly unusual to want to do in practice, although numpy.array does have a `buffer` argument to let you do it.
[02:54:20] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[02:54:48] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:54:52] <novasenco> I made sure that each parallel process only modified cells in the 2d array that the other processes did not touch, so I was hopeing to share the object.
[02:54:55] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[02:55:05] <novasenco> oh well. will just have to create a smaller array in processing function, populate, return.
[02:55:19] <bjs> well I did give two options and one of them did involve sharing memory
[02:55:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102)
[02:55:33] <bjs> although like I said, it's very unusual (and why homework would ask you to do it is beyond me...) but you can if you want
[02:55:43] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[02:55:46] <novasenco> that means a bunch of extra copying of these arrays (when passing back and forth) and stitching stuff back together. it's annoying, but it is how it has to be done, and I don't have any more time to talk about it. thanks again
[02:55:53] <SnoopJ> if the work divides up in a way that lets you use numpy views, each subprocess could operate on a view (a separate ndarray object) instead
[02:56:39] <bjs> novasenco: "how it has to be done" is definitely not what I said, but okay
[03:01:05] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[03:02:29] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[03:04:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:04:11] *** Quits: ffledgling (~textual@163.114.132.128) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:04:31] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:04:31] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[03:04:39] *** Quits: sazawal (~sazawal@223.190.92.152) (Quit: Leaving)
[03:04:53] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 252 seconds)
[03:05:08] *** Joins: ffledgling (~textual@2620:10d:c090:500::2:3bbf)
[03:05:31] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:06:26] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:06:28] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[03:07:07] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[03:07:21] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[03:08:35] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[03:09:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:09:52] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:09:55] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[03:10:29] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:11:28] *** Quits: ffledgling (~textual@2620:10d:c090:500::2:3bbf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:11:29] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:13:47] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[03:14:36] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[03:15:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:16:26] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 252 seconds)
[03:16:59] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[03:18:14] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:18:29] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[03:20:39] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[03:21:25] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 256 seconds)
[03:21:34] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[03:22:07] *** Joins: gambl0re (~gambl0re@216.154.4.187)
[03:22:58] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:23:07] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 256 seconds)
[03:23:08] *** Joins: ffledgling (~textual@2620:10d:c090:500::2:3bbf)
[03:24:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:24:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:24:50] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[03:25:24] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:25:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:26:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:26:06] *** Joins: alphasierra (~alphasier@49.36.96.237)
[03:26:35] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[03:27:03] *** Quits: ffledgling (~textual@2620:10d:c090:500::2:3bbf) (Client Quit)
[03:27:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:27:59] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[03:28:21] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 252 seconds)
[03:28:39] *** Joins: Colt (~Colt@user/colt)
[03:30:27] *** Quits: alphasierra (~alphasier@49.36.96.237) (Read error: Connection reset by peer)
[03:31:01] *** Joins: zebrag (~chris@user/zebrag)
[03:31:03] <Evolver> I call upon a master in floating point arithmetic to review andor help simplify my answer at https://stackoverflow.com/a/70210770/ for how to `round`, `round_down`, and `round_up` a given float to another given float. Feel free to PM for a longer discussion about it.
[03:31:46] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[03:32:20] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[03:32:23] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[03:32:49] *** Quits: d00gy (~d00gy@user/d00gy) (Read error: Connection reset by peer)
[03:33:02] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[03:33:23] *** Joins: newpy (~newpy@206.168.231.90)
[03:36:03] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 252 seconds)
[03:36:14] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 252 seconds)
[03:37:15] *** Joins: ffledgling (~textual@2620:10d:c090:500::2:3bbf)
[03:37:50] *** Joins: zebrag (~chris@user/zebrag)
[03:38:14] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[03:38:25] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[03:40:01] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:c588:3aec:99:3905) (Quit: Textual IRC Client: www.textualapp.com)
[03:40:51] *** Quits: ffledgling (~textual@2620:10d:c090:500::2:3bbf) (Client Quit)
[03:43:26] *** Quits: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:44:47] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[03:45:47] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102) (Quit: Client closed)
[03:45:57] *** Quits: sudomann (~sudomann@2601:155:8402:4960:5040:4192:d944:6d90) (Ping timeout: 252 seconds)
[03:46:40] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[03:47:47] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[03:48:07] *** Joins: MercilessDeth (~brad@136.49.59.177)
[03:49:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:51:21] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Remote host closed the connection)
[03:51:53] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[03:53:17] *** Joins: RasnCain (~rasncain@gw1.cox.com)
[03:54:12] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[03:54:21] *** Quits: irrgit (~irrgit@192.241.175.183) (Ping timeout: 256 seconds)
[03:54:56] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102)
[03:54:56] *** Quits: BigShip (~BigShip@user/bigship) (Quit: BigShip)
[03:55:03] *** Joins: Terexen (~terexen@user/terexen)
[03:55:29] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:57:03] *** Joins: Wulf (~Wulf@user/wulf)
[03:57:42] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[03:58:36] *** Joins: korg815 (~korg815@user/korg815)
[03:59:22] *** Joins: xardas (~xardas@149.233.51.127)
[03:59:55] <koopman> @bjs: do you ever sleep? @jinsun your code did actually work thank you, but now writing it to csv just puts it all in one cell I’m wanting one value per line for the 3 items, without [] https://dpaste.org/Tf4V
[04:00:13] <koopman> Wouldn’t happen to know that one at all?
[04:04:21] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:08:23] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:09:47] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Ping timeout: 252 seconds)
[04:09:55] *** Joins: grayn (~Thunderbi@138.199.21.201)
[04:12:25] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:12:47] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[04:13:05] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[04:13:18] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[04:13:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:16:50] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Client Quit)
[04:17:16] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:17:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:19:23] *** Joins: fikran (~fikran@user/fikran)
[04:21:40] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:22:12] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102) (Quit: Client closed)
[04:22:31] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[04:22:34] *** Joins: Nact (~l@host-85-27-123-35.dynamic.voo.be)
[04:24:21] *** Quits: Guddu (~Guddu@186.106.155.105) (Read error: Connection reset by peer)
[04:24:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:24:47] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:25:03] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[04:26:50] *** Quits: RasnCain (~rasncain@gw1.cox.com) (Ping timeout: 252 seconds)
[04:27:14] *** Joins: a0z1 (~a0z1@89.45.7.190)
[04:32:04] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[04:32:28] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[04:32:47] <koopman> Speaking of sleep thinks it’s bedtime night all thanks @jinsun and @bjs
[04:33:01] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[04:33:29] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:7c39:aad5:22e:d595) (Remote host closed the connection)
[04:35:10] *** Joins: et_ (~et@user/et)
[04:35:48] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[04:36:37] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:37:15] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:37:59] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[04:37:59] *** et_ is now known as et
[04:40:50] *** Joins: xardas (~xardas@149.233.51.127)
[04:43:03] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:20ab:df6:4a36:a7ba) (Read error: Connection reset by peer)
[04:44:26] *** Quits: flokuehn (~flokuehn@87.123.247.47) (Ping timeout: 252 seconds)
[04:44:59] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[04:45:57] *** Joins: cliluw (~cliluw@47.147.80.149)
[04:46:05] *** Quits: a0z1 (~a0z1@89.45.7.190) (Ping timeout: 252 seconds)
[04:46:17] *** Joins: flokuehn (~flokuehn@87.123.247.63)
[04:47:13] *** Joins: moog (~moog@107.126.53.137)
[04:47:28] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) ()
[04:47:56] *** Quits: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr) (Quit: leaving)
[04:51:54] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:52:22] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:f59b:4aa1:dccc:b8e0)
[04:53:37] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102)
[04:55:29] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[04:55:37] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 252 seconds)
[04:59:27] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 256 seconds)
[05:01:19] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[05:01:58] *** Joins: alphasierra (~alphasier@49.36.96.237)
[05:02:35] *** Quits: Pandadub (~Barones@2804:7f3:8988:8f27:16d4:c85f:5e2c:ebbe) (Ping timeout: 252 seconds)
[05:02:35] *** Quits: yte3 (~0@151.15.219.152) (Ping timeout: 252 seconds)
[05:04:03] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Remote host closed the connection)
[05:04:03] *** Quits: onichomp (~onichomp@2806:264:4404:8181:89c2:d3e9:a900:4c44) (Ping timeout: 252 seconds)
[05:04:47] *** Quits: subopt (~subopt@2603-8081-2302-459a-0cd7-eeaf-1024-924a.res6.spectrum.com) (Ping timeout: 252 seconds)
[05:07:55] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[05:08:20] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[05:09:24] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:09:33] *** Joins: onichomp (~onichomp@2806:264:4404:8181:96b:1b1a:45d9:8996)
[05:09:34] *** Joins: Pandadub (~Barones@2804:7f3:8988:8f27:16d4:c85f:5e2c:ebbe)
[05:12:29] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[05:12:29] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[05:12:55] *** Joins: onichomp666 (~onichomp@2806:264:4404:8181:58e4:2d30:f399:69cd)
[05:13:57] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[05:14:38] *** Quits: onichomp (~onichomp@2806:264:4404:8181:96b:1b1a:45d9:8996) (Ping timeout: 268 seconds)
[05:14:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:14:55] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[05:15:15] <magic_ninja> hey, I'm looking at this try-except thing and I'm not wrapping my head around it.
[05:15:53] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:2576:d244:71b:1dc7)
[05:15:55] <magic_ninja> So I understand that I try { some code }, and then except {type of exception}.
[05:16:36] <magic_ninja> What if I want to say put a range of values on an input. Would I check the input value, check it, and throw an exception if it wasn't within my range?
[05:17:25] <ammar2> sure yeah, if you have a function that only accepts a certain range of values, it's pretty typical to raise/throw an exception
[05:17:29] *** Joins: et (~et@user/et)
[05:18:05] <magic_ninja> I've never done anything with try-catch or anyting like that
[05:18:09] *** Joins: onichomp (~onichomp@2806:264:4404:8181:6976:367a:ef33:e601)
[05:18:22] <ammar2> consider for example `x = 1 / 0`, the division operator checks that the division is against 0 and then raises `ZeroDivisionError: division by zero`
[05:19:04] <magic_ninja> What confuses me is that I feel like I should be able to use the except section to throw the error.
[05:19:05] *** Quits: onichomp666 (~onichomp@2806:264:4404:8181:58e4:2d30:f399:69cd) (Ping timeout: 252 seconds)
[05:19:14] <magic_ninja> There is no "within this range of values" error.
[05:19:24] <ammar2> that's normally ValueError
[05:20:10] <magic_ninja> So I would have to do something like: if value is out of range, raise ValueError("Error Message")
[05:20:15] <ammar2> example you could do `if x < 0: raise ValueError("This function doesn't accept negative values")`
[05:21:14] <magic_ninja> good, sounds about like I have it for now
[05:21:23] *** Quits: et (~et@user/et) (Client Quit)
[05:21:24] <magic_ninja> I'm not too concerned with adding my own error types at the moment
[05:21:27] <magic_ninja> Thank you.
[05:22:15] *** Joins: rvalue (~rvalue@user/rvalue)
[05:22:21] *** Joins: et (~et@user/et)
[05:24:51] *** Joins: pwnd_sfw0 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[05:24:54] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[05:24:54] *** pwnd_sfw0 is now known as pwnd_sfw
[05:28:02] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[05:28:14] *** Joins: grayn1 (~Thunderbi@2001:8003:8c8b:e00:ca93:89f3:5675:affe)
[05:28:49] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[05:29:13] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:29:20] *** Joins: vakera_pingveno_ (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[05:29:22] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[05:29:29] *** Quits: grayn (~Thunderbi@138.199.21.201) (Ping timeout: 256 seconds)
[05:29:29] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 256 seconds)
[05:29:29] *** Quits: luva (~luva@37.120.197.46) (Ping timeout: 256 seconds)
[05:29:29] *** grayn1 is now known as grayn
[05:30:40] *** Joins: luva (~luva@146.70.62.236)
[05:32:33] *** Quits: parv (~quass@user/parv) (Quit: parv)
[05:34:00] *** Quits: alphasierra (~alphasier@49.36.96.237) (Remote host closed the connection)
[05:37:21] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[05:37:29] *** Joins: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[05:37:35] *** Quits: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Remote host closed the connection)
[05:39:07] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 256 seconds)
[05:40:58] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:41:26] *** Joins: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[05:43:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:43:44] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[05:43:56] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:45:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:46:15] *** Joins: a0z1 (~a0z1@89.45.7.206)
[05:48:33] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:49:17] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[05:51:52] *** tusko is now known as m0she
[05:51:57] *** Joins: qpdb (~qpdb@user/qpdb)
[05:54:06] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[05:55:52] *** m0she is now known as tusko
[05:59:55] *** Joins: Dotz0cat (~Dotz0cat@h102.35.188.173.dynamic.ip.windstream.net)
[06:01:18] *** Quits: moog (~moog@107.126.53.137) (Remote host closed the connection)
[06:02:12] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:05:11] *** Quits: Dotz0cat (~Dotz0cat@h102.35.188.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[06:05:50] *** Joins: Dotz0cat (~Dotz0cat@h87.47.22.98.static.ip.windstream.net)
[06:05:51] *** Quits: vakera_pingveno_ (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[06:06:12] *** cyphase is now known as cyphase_ghost
[06:06:32] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[06:07:42] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Remote host closed the connection)
[06:08:57] *** Joins: cyphase (~cyphase@user/cyphase)
[06:09:25] *** Quits: cyphase_ghost (~cyphase@user/cyphase) (Quit: cyphase.com)
[06:10:36] *** amosbird- is now known as amosbird
[06:15:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:15:11] *** Quits: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 252 seconds)
[06:15:53] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[06:18:10] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[06:18:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[06:19:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:19:19] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[06:19:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[06:19:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:19:59] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:20:28] *** Joins: brabrax (~brabrax@user/brabrax)
[06:22:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[06:22:01] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[06:22:21] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102) (Quit: Client closed)
[06:22:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:22:37] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102)
[06:24:04] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:24:47] *** Joins: Daemonick (~Daemonick@46.246.199.138.dsl.dyn.forthnet.gr)
[06:26:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:27:40] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Quit: guenhael)
[06:27:58] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[06:28:44] *** Joins: fikran (~fikran@user/fikran)
[06:29:11] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[06:30:08] *** Joins: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:30:16] *** Joins: Elzington__ (~Elzington@static-68-235-44-10.cust.tzulo.com)
[06:30:33] *** Joins: buzzard (~quassel@37.120.203.166)
[06:30:44] *** Joins: RiFo (~RiFo@user/rifo)
[06:32:47] *** Quits: Elzington_ (~Elzington@68.235.43.38) (Ping timeout: 252 seconds)
[06:34:39] *** Quits: luva (~luva@146.70.62.236) (Ping timeout: 256 seconds)
[06:35:08] *** Joins: millido (~millido@84.210.150.128)
[06:35:47] *** Joins: luva (~luva@37.120.197.37)
[06:36:05] *** Quits: grayn (~Thunderbi@2001:8003:8c8b:e00:ca93:89f3:5675:affe) (Ping timeout: 252 seconds)
[06:36:07] *** Joins: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn)
[06:36:37] *** Joins: talismanick (~talismani@76.78.246.153)
[06:36:50] *** Quits: smeeagle (~smeeagle@host31-48-139-30.range31-48.btcentralplus.com) (Quit: smeeagle)
[06:38:03] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[06:38:56] *** Joins: grayn (~Thunderbi@2001:8003:8c8b:e00:ca93:89f3:5675:affe)
[06:39:48] *** Quits: grayn (~Thunderbi@2001:8003:8c8b:e00:ca93:89f3:5675:affe) (Remote host closed the connection)
[06:40:16] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[06:40:29] *** Quits: grayn1 (Thunderbir@gateway/vpn/protonvpn/grayn) (Ping timeout: 252 seconds)
[06:41:30] <talismanick> Given a list of coefficients of a polynomial, how might I plot that polynomial with matplotlib?
[06:42:03] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:2576:d244:71b:1dc7) (Quit: Client closed)
[06:43:47] *** Quits: Pandadub (~Barones@2804:7f3:8988:8f27:16d4:c85f:5e2c:ebbe) (Ping timeout: 252 seconds)
[06:45:54] <Repiphany> numpy.poly1d converts coefficients into a function which you can pass numpy.linspace(-10, 10, 100) or whatever
[06:47:23] <Daemonick> Guys, please tell me: Is IDLE a heavy duty app for the system cause when I move its window I got screen flickering?
[06:48:22] <grym> Daemonick: IDLE's pretty bad
[06:48:26] <grym> just kind of in general
[06:48:45] <grym> there are many better tools to use and i'd recommend any of them
[06:48:45] <very_sneaky> I haven't experienced screen flickering with IDLE, but yeah, there are better editors/ide's
[06:48:50] <akspecs> vim + ipython all day
[06:48:54] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[06:49:02] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[06:49:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:49:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[06:51:06] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102) (Ping timeout: 256 seconds)
[06:54:13] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:54:25] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:56:10] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[06:58:27] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[06:59:07] <magic_ninja> pycharm seems nice. I'm currently playing with kDevelop.
[07:02:16] *** Joins: apteryx (~maxim@dsl-156-29.b2b2c.ca)
[07:03:35] *** Quits: luva (~luva@37.120.197.37) (Ping timeout: 252 seconds)
[07:04:27] *** Joins: luva (~luva@37.120.197.45)
[07:10:00] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[07:10:55] *** Quits: a0z1 (~a0z1@89.45.7.206) (Quit: Leaving)
[07:10:55] *** Quits: luva (~luva@37.120.197.45) (Ping timeout: 252 seconds)
[07:11:23] *** Joins: luva (~luva@45.141.152.44)
[07:12:06] *** Quits: gitargy (~gitargy@76.78.94.79) (Remote host closed the connection)
[07:15:45] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:18:40] *** Joins: bloody (~bloody@user/bloody)
[07:19:51] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[07:19:53] *** Quits: bloody (~bloody@user/bloody) (Client Quit)
[07:20:27] *** Quits: luva (~luva@45.141.152.44) (Ping timeout: 252 seconds)
[07:23:20] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:23:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:23:20] *** finn_elija is now known as FinnElija
[07:23:29] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:1dff:28cc:1d8d:1da8)
[07:25:02] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[07:25:11] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:25:31] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:f4a0:59c5:ed0:3e28)
[07:29:15] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[07:29:29] *** Joins: JanC (~janc@user/janc)
[07:32:30] *** Joins: Nanobot567 (~nanobot56@c-69-137-122-75.hsd1.tn.comcast.net)
[07:32:57] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:33:30] *** Quits: talismanick (~talismani@76.78.246.153) (Remote host closed the connection)
[07:33:58] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[07:35:16] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:24] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[07:43:47] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[07:46:51] *** Joins: parv (~quass@user/parv)
[07:47:18] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:51:26] *** Quits: sreve (~quassel@p4ff44f7d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:51:46] *** Joins: sreve (~quassel@p4ff4408f.dip0.t-ipconnect.de)
[07:52:13] *** Joins: malvin (~retlo@172.245.134.89)
[07:52:33] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[07:52:35] <malvin> what are some tools i can use to automatically deploy python web apps on a vps?
[07:53:00] <malvin> fabric i've seen
[07:53:05] *** Quits: Nanobot567 (~nanobot56@c-69-137-122-75.hsd1.tn.comcast.net) (Ping timeout: 252 seconds)
[07:53:16] <malvin> and im not sure how to use ansible
[07:53:43] <malvin> i would need to configure a webserver too
[07:53:47] <meejah> what kind of web-app? (msot deploy tools can work)
[07:58:21] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:f699:ef55:9609:95bb)
[08:01:03] <{HD}> anyone use vscode that knows a solution to this: I open a folder with several python projects all in their own subdirectory. When I open a project and 'run' it the terminal that starts is in the parent folder but the python file refers to data in the sub directory. Is there a way to get it to run from the current folder and not the parent folder.
[08:05:40] *** Quits: runlevel_0 (~nyarlatho@user/runlevel-0/x-6929182) (Remote host closed the connection)
[08:06:42] <malvin> meejah: im being vague as some django some tornado some websockets
[08:07:28] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[08:11:58] <jinsun> {HD}: the cross-editor solution is to change your python code to not assume the current working directory, but construct the absolute paths from the current file path usinng pathlib and __file__
[08:12:40] <{HD}> jinsun: hum...okay. Guess I will look those things up...Thanks.
[08:12:50] <jinsun> another easy solutioni is the not use the "play" button but cd and run python yourself from the integrated terminal
[08:13:36] <{HD}> well I can cd into the directory and then hit the play button and that works. but I switch back and forth sometimes and thats a pain.
[08:13:49] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[08:14:20] <{HD}> I will just prepend the working directory into the filenames I am importing...
[08:15:32] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[08:15:35] *** Parts: apteryx (~maxim@dsl-156-29.b2b2c.ca) ()
[08:16:05] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[08:16:15] <jinsun> {HD}: you can set "python.terminal.executeInFileDir": true is seems
[08:16:23] <jinsun> s/is/it
[08:16:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:16:34] <{HD}> jinsun: nice. let me give that a try
[08:17:33] <{HD}> jinsun: NICE it works!
[08:19:27] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:19:51] *** Joins: cdown (~cdown@188.214.11.14)
[08:20:35] *** Quits: Daemonick (~Daemonick@46.246.199.138.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[08:23:01] <black_13> has anyone here used BERT/SQUAD?
[08:24:04] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:24:26] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 252 seconds)
[08:24:26] *** jmiehe1 is now known as jmiehe
[08:25:37] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[08:25:43] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[08:26:07] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[08:27:33] *** Quits: buzzard (~quassel@37.120.203.166) (Ping timeout: 252 seconds)
[08:31:00] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:33:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:34:55] *** Joins: aniketgm (~Aniket@49.36.107.115)
[08:35:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:38:05] *** Joins: fikran (~fikran@user/fikran)
[08:40:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 268 seconds)
[08:44:25] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Ping timeout: 252 seconds)
[08:46:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:50:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:51:13] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[08:53:29] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Ping timeout: 256 seconds)
[08:53:56] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:57:01] *** Joins: markb1 (~markb1@108-192-134-222.lightspeed.rlghnc.sbcglobal.net)
[08:57:28] *** Joins: vfbsilva (~manjaro-u@189.27.237.126.dynamic.adsl.gvt.net.br)
[09:03:58] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:07:36] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:07:43] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[09:08:47] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[09:11:56] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:14:02] *** Quits: vfbsilva (~manjaro-u@189.27.237.126.dynamic.adsl.gvt.net.br) (Read error: Connection reset by peer)
[09:16:19] *** Quits: Jong (~Jong@2620:10d:c090:400::5:d0b7) (Ping timeout: 252 seconds)
[09:17:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[09:18:14] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:20:10] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[09:21:55] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[09:22:10] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[09:22:33] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[09:26:35] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 252 seconds)
[09:27:33] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:29:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[09:29:03] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[09:30:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[09:38:08] *** Joins: sandb0y (~pirate@user/sandb0y)
[09:38:49] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[09:41:15] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[09:42:04] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:f7f9)
[09:42:17] <rindolf> black_13: https://dontasktoask.com/
[09:45:50] *** Quits: afidegnum (~user@102.176.94.55) (Ping timeout: 252 seconds)
[09:46:38] *** Joins: nac (~nac@user/nac)
[09:49:40] *** Quits: onichomp (~onichomp@2806:264:4404:8181:6976:367a:ef33:e601) (Ping timeout: 268 seconds)
[09:58:10] <aniketgm> rindolf: AKA spoon feeding...
[09:59:16] <rindolf> aniketgm: not exactly
[10:00:07] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:00:16] *** Quits: aniketgm (~Aniket@49.36.107.115) (Quit: leaving)
[10:01:05] *** Joins: Pixi (~Pixi@user/pixi)
[10:01:14] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[10:06:18] *** Joins: AlanMD_ (~AlanMD@86.121.179.183)
[10:07:17] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[10:07:26] <enrh> What about asking to ask to ask a question?
[10:07:38] <enrh> Does the rule support recursion
[10:08:07] *** Joins: jazzy (~jaziz@user/jaziz)
[10:11:32] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[10:12:03] <InPhase> enrh: The answer is defined as "No" by the prior case.
[10:12:14] <dba> how do I execute printName() without calling it ? https://bpa.st/RSPQ
[10:12:21] *** Joins: upsala (~zcb@185.213.155.232)
[10:13:13] <InPhase> dba: Comment out lines 1 through 9?
[10:13:33] <InPhase> dba: What's your real goal here?  :)
[10:13:33] *** Joins: han-solo (~han-solo@user/han-solo)
[10:13:34] *** Quits: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[10:13:39] *** Joins: thurs806014210 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:14:01] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:14:26] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[10:16:51] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:17:36] <dba> InPhase: it's really not a goal it is just a point I am trying to figure out. The deccorator in this case @makeBold is supposed to mean
[10:17:36] <dba> f = makeBold(printName)
[10:17:36] <dba> f() and this shows that printName() function is executed and supposed to print('Adma Smith')
[10:18:09] <dba> The other case would me my understanding of decorators is messed up
[10:19:17] <InPhase> dba: I don't see a problem with how you did the decorator.
[10:19:55] <InPhase> It does what it's supposed to.  Calling printName prints before, Adam Smith, after.
[10:20:26] <dba> InPhase: very strange it print nothing for me
[10:20:47] *** Joins: sazawal (~sazawal@223.190.92.152)
[10:21:21] <dba> InPhase: it does print the name if I call the function printName()
[10:21:53] <BrenBarn> that's how it's supposed to work
[10:21:56] *** Quits: doc (~doc@user/doc) (Ping timeout: 265 seconds)
[10:22:08] <BrenBarn> or maybe I'm misunderstanding the question
[10:22:09] *** Joins: doc (~doc@user/doc)
[10:22:21] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[10:22:27] <BrenBarn> I mean, the decorator just wraps the function, it doesn't call it
[10:22:34] <BrenBarn> you have to, like, call it if you want it to be called
[10:23:11] <dba> BrenBarn, but that does not defeat the purpose of @decorator?
[10:23:27] <InPhase> https://ideone.com/pIWB4J
[10:23:36] <InPhase> dba: You are literally decorating it, not calling it.
[10:23:49] <InPhase> If you decorate a cake, you have not eaten it.  You just put extra designs around it.  :)
[10:24:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:24:44] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[10:24:44] *** Joins: Random411 (~Random411@2601:407:8500:850:800d:676b:3eab:bc9a)
[10:24:49] <BrenBarn> what do you think the purpose of a decorator is?
[10:25:46] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[10:26:28] *** Joins: DreamweaverN (~Dreamweav@2001:1af8:4700:b0d0:a800::)
[10:26:52] <InPhase> dba: Let me draw your attention to the fact that makeBold does not execute inner().  It simply returns the function inner, which has captured printName as the variable func.  When you call printName then, because it is decorated, it actually calls the inner() previously returned, and in there calls the old printName.
[10:28:02] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:28:38] <dba> InPhase, BrenBarn, to my understanding and let use this example the decorator is performing like this f = makeBold(printName) f()  right? and if I am right it should execute printName() wihtout calling it
[10:28:58] <InPhase> Minus the f()
[10:29:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:29:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:30:02] <InPhase> I deduce you misinterpreted an example line in a tutorial somewhere.  Either check it again, or check another source if you want more confirmation.
[10:30:06] <BrenBarn> no
[10:30:27] <BrenBarn> the decorator basically does `printName = makeBold(printName)`
[10:30:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:30:53] *** Joins: Daemonick (~Daemonick@46.246.199.138.dsl.dyn.forthnet.gr)
[10:31:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:31:12] <dba> InPhase: I guess then my understanding to decorator was messed up. so in all scenarios the decorator is f = decoratorFunction(func)
[10:32:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[10:32:26] <jinsun> dba: no, it is func = decoratorFunction(func), you don't get a new name for the decorated function
[10:32:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:33:36] <dba> Gotcha!! Thank you all for your help
[10:33:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:34:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:35:08] <dba> who ever did this https://dontasktoask.com/ is a legend :D
[10:35:08] *** Joins: jmd (~user@de.cellform.com)
[10:35:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:35:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:36:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:37:14] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:38:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:38:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:39:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:39:31] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[10:39:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[10:40:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:41:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:43:25] *** Quits: jamwil (~jamwil@user/jamwil) (Ping timeout: 256 seconds)
[10:43:25] *** Quits: haps (~haps@hyena.haps.ca) (Ping timeout: 256 seconds)
[10:43:39] *** Joins: haps (~haps@hyena.haps.ca)
[10:43:39] *** Joins: jamwil (~jamwil@user/jamwil)
[10:44:46] *** Joins: rvalue (~rvalue@user/rvalue)
[10:45:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[10:47:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:47:26] *** Joins: fikran (~fikran@user/fikran)
[10:48:59] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[10:49:23] <orbisvicis> anyone know if I can groupby index splits, similar to numpy's split?
[10:50:01] <Wulf> orbisvicis: I don't know numpy. What's an "index split"?
[10:50:25] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[10:50:26] <orbisvicis> hmm I mean to ask:
[10:50:33] <orbisvicis> anyone know if I can groupby index splits in pandas, similar to numpy's split?
[10:50:38] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[10:51:28] <orbisvicis> Wulf, list(range(10)) split on [2,6] is [[0, 1], [2, 3, 4, 5], [6, 7, 8, 9]]
[10:52:18] <Wulf> ok, I don't know pandas either.
[10:52:25] *** Joins: kdc (~kdc@196.211.197.159)
[10:52:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102)
[10:54:03] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:57:20] *** Joins: rvalue (~rvalue@user/rvalue)
[10:58:03] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[10:58:10] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[10:58:59] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 252 seconds)
[11:02:59] *** Joins: aniketgm (~Aniket@49.36.107.115)
[11:03:16] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:03:31] *** Joins: afidegnum (~user@102.176.94.55)
[11:03:45] *** Parts: afidegnum (~user@102.176.94.55) ()
[11:04:12] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:05:15] *** Joins: seednode (~seednode@user/seednode)
[11:06:56] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[11:08:06] *** Joins: runlevel_0 (~nyarlatho@user/runlevel-0/x-6929182)
[11:10:23] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[11:11:13] *** Joins: Telvana (~capo@user/telvana)
[11:12:28] *** Joins: zlg (~zlg@user/zlg)
[11:12:55] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 252 seconds)
[11:14:24] <Daemonick> https://www.youtube.com/watch?v=G9YQNy-RUKM&list=PLXkgDiMUQalF6lDm7vsunh399U9TWgVLV&index=6
[11:14:41] <Daemonick> oups, wrong channel
[11:15:21] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:15:21] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:15:57] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:2799:2694:4aa2:8212)
[11:18:07] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[11:20:49] *** Quits: gambl0re (~gambl0re@216.154.4.187) (Ping timeout: 256 seconds)
[11:21:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[11:22:52] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[11:23:54] *** Joins: jay-m126 (~jay-m@154.72.150.167)
[11:23:58] *** Joins: jay-m126_ (~jay-m@154.72.150.167)
[11:25:47] <aniketgm> This gives the clint eastwood sountrack vibe.
[11:28:06] <han-solo> `[[v[1] for v in list(grp)] for k,grp in itertools.groupby(enumerate(range(10)), lambda v: sum(v[0] < y for y in [2,6]))]`
[11:28:47] <han-solo> maybe `moreitertools` will have some thing for this
[11:29:13] <han-solo> more-itertools*
[11:33:16] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:34:09] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-156-ac57c0e5 - https://znc.in)
[11:34:14] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9dbb:822b:3019:b102) (Quit: Client closed)
[11:34:29] *** Quits: greknod28 (~grek@120.88.171.98) (Ping timeout: 256 seconds)
[11:35:00] *** Joins: Telvana (~capo@user/telvana)
[11:35:03] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 256 seconds)
[11:35:15] *** Joins: rsx (~dummy@ppp-188-174-137-75.dynamic.mnet-online.de)
[11:35:31] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:4ddc:6f6c:9de7:afa0)
[11:39:12] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:39:21] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[11:41:52] *** Quits: Mindscape (~Lindis@user/lindis) (Remote host closed the connection)
[11:43:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[11:44:23] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:45:05] *** Joins: manti7 (~manti7@176.10.104.94)
[11:45:15] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[11:45:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:45:39] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:46:17] *** Quits: binary01 (~binary01@174.141.153.217) (Read error: Connection reset by peer)
[11:46:53] *** Joins: binary01 (~binary01@174.141.153.217)
[11:51:02] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:51:54] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:f4a0:59c5:ed0:3e28) (Read error: Connection reset by peer)
[11:54:03] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[12:01:35] *** Joins: gambl0re (~gambl0re@216.154.4.187)
[12:05:07] *** Joins: palasso (~palasso@user/palasso)
[12:05:15] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:f7f9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:05:44] *** Joins: alzgh (~alzgh@user/alzgh)
[12:06:28] <alzgh> `[(list(filter(lambda x: x != "", list(el.strip() for el in line.strip().split(" ")))) for line in part.split("\n")) for part in parts[1:]]` produces `[<generator object <listcomp>.<genexpr> at 0x7f6d5ed56890>, <generator object <listcomp>.<genexpr> at 0x7f6d5ed56820>, <generator object...`
[12:06:54] <alzgh> I'm confused how to make the generators into lists so that I can index them
[12:08:53] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[12:12:27] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:13:04] <Repiphany> Maybe use list comprehensions instead of list(filter(...))
[12:13:37] <alzgh> Ok, will check that Repiphany
[12:15:20] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.193)
[12:16:22] <han-solo> `[list(filter(lambda x: x != "", [[el.strip() for el in line.strip().split(" ")] for line in part.split("\n")])) for part in parts[1:]]` # bit hard to tell, did you mean this ?
[12:16:53] *** Joins: tobybl (~tobybl@213.31.133.113)
[12:17:20] *** Joins: ihristov (~ihristov@85.187.46.226)
[12:17:30] <han-solo> i'm very much inclined to break that into a normal loops
[12:17:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:19:37] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:f7f9)
[12:20:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[12:20:39] *** Joins: lesihctej (jetchisel@user/jetchisel)
[12:20:52] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:21:37] <aniketgm> alzgh: when there is lots of loop and if. better to not dump it in a comprehension.
[12:22:36] <aniketgm> alzgh: also use a pastebin. See channel topic.
[12:23:30] <alzgh> yeah, guys I agree with you that a some for loops are better. it works now but is really not readable.
[12:23:45] <alzgh> aniketgm: will do, thanks for pointing that out
[12:24:42] <alzgh> I was refactoring working code. I think it was better as it was previously than the cool looking shit I turned it into :|
[12:25:20] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[12:25:25] <han-solo> write dumb code, you will thank yourself after 3 months ? :)
[12:27:54] <alzgh> literally this^ but times 10
[12:28:42] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:9888:ce90:62f6:831a)
[12:31:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:32:10] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-60.poda.cz)
[12:32:21] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-60.poda.cz) (Remote host closed the connection)
[12:34:41] *** Joins: xkuru (~xkuru@user/xkuru)
[12:34:49] <tim__> What's the consensus on using a for loop variable after the loop has exited? Is this a safe practice?
[12:35:45] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[12:36:15] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[12:36:37] *** Joins: kosh (~kosh@user/kosh)
[12:37:37] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[12:40:44] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 252 seconds)
[12:41:15] <KirkMcDonald> tim__: Yes, it's safe.
[12:41:36] <KirkMcDonald> Loops don't introduce a scope.
[12:41:39] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[12:41:45] <tim__> Good to hear KirkMcDonald, because gosh darn is it convenient sometimes
[12:43:02] *** Joins: lethu (~lethu@user/lethu)
[12:43:07] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[12:45:09] *** Joins: pyzozord (pyzozord@user/pyzozord)
[12:45:16] <pyzozord> hello, what is wrong with this line? nums = [int(x) in x for next(lines).split(',')]
[12:45:28] <pyzozord> I get invalid syntax at ]
[12:45:44] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.193) (Remote host closed the connection)
[12:45:52] <KirkMcDonald> pyzozord: You appear to have mixed up "in" and "for".
[12:46:02] <pyzozord> ah lol
[12:46:07] <pyzozord> thanks
[12:46:38] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:f7f9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:47:09] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 252 seconds)
[12:48:45] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:49:06] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[12:53:56] <pyzozord> is there a nice idiom to list[index] = list[index] + stuff that accounts for non existing index?
[12:54:17] <pyzozord> I mean like an "upsert"
[12:54:17] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.193)
[12:54:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[12:55:26] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:55:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[12:56:47] *** Joins: fikran (~fikran@user/fikran)
[12:57:52] <lesshaste> I am confused by tweepy. I think I am getting 100 tweets at a time up to a limit of 200  tweets https://bpa.st/TSJA . But in fact I seem to be getting two tweets
[12:57:58] *** Joins: rendar (~rendar@user/rendar)
[12:58:02] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:58:04] <aniketgm> pyzozord: what do you mean by non existing index ?
[13:01:51] *** Quits: aniketgm (~Aniket@49.36.107.115) (Quit: leaving)
[13:02:04] <pyzozord> aniketgm: say I have a list with no items and I do list[0] = 'hello'
[13:02:19] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 256 seconds)
[13:02:21] <pyzozord> or more like list[0] = list[0] + 'hello'
[13:03:23] *** Joins: aniketgm (~Aniket@49.36.107.115)
[13:03:40] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:04:27] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[13:04:35] *** Quits: trace987 (~trace@91.66.152.52) (Ping timeout: 256 seconds)
[13:04:58] <pyzozord> another question: how can I chunk a string to 2-long chunks?
[13:07:29] <han-solo> 2-long chunks means to have it pairwise ?
[13:09:03] *** Quits: gambl0re (~gambl0re@216.154.4.187) (Ping timeout: 256 seconds)
[13:09:33] <pyzozord> yeah, 1,2,3,4,5,6 produces (1,2),(3,4),(5,6)
[13:09:40] <han-solo> `list(itertools.zip_longest(*[iter('hello')]*2, fillvalue=''))`
[13:10:12] <han-solo> s/'hello'/[1,2,3,4,5,6]/ # and adjust the `fillvalue`
[13:10:56] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:9888:ce90:62f6:831a) (Quit: Client closed)
[13:11:05] <pyzozord> isn't there anything prettier?
[13:11:14] <pyzozord> like chunk(list, 2) or something?
[13:11:29] <han-solo> `more-itertools` has
[13:11:42] <pyzozord> (but without installing any modules from the internet)
[13:12:16] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[13:12:36] <han-solo> `[x[i:i+2] for i in range(0, len(x), 2)]` # if indexable
[13:13:45] <han-solo> `chunk = lambda x, size=2: [x[i:i+size] for i in range(0, len(x), size)]` # if indexable
[13:14:20] <pyzozord> I'll use the list comprehention, thanks
[13:14:35] <pyzozord> I'd think that python has a nice builtin for that
[13:14:44] <han-solo> this will not give exactly paris when odd number of items are in the list
[13:15:04] <han-solo> s/paris/pairs/
[13:15:39] <han-solo> hence the suggestion of `itertools.zip_longest`
[13:16:38] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[13:17:41] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:19:08] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[13:19:24] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd)
[13:19:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:19:53] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 256 seconds)
[13:20:46] <pyzozord> any idea how to make this code nicer? https://termbin.com/ba1f
[13:21:58] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[13:22:55] <pyzozord> actually here is a bit nicer version, but still the same question https://termbin.com/2d2g1
[13:23:59] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:25:29] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:27:28] <Repiphany> You're not getting digits properly
[13:27:44] <Repiphany> Getting two characters at a time also includes the spaces which aren't even
[13:28:00] *** Parts: mickey8 (~user@user/mickey) ()
[13:28:50] <Repiphany> Use str.split with no argument, like `[int(n) for n in '14 21 17 24  4'.split()] # [14, 21, 17, 24, 4]`
[13:29:59] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:31:07] <pyzozord> ah, I was trying with split('') and that was giving me some empty strings
[13:31:28] *** Joins: Blankspace (~androirc@user/blankspace)
[13:31:36] <Repiphany> The default argument splits on whitespace including newlines
[13:32:52] <Repiphany> https://docs.python.org/3.3/library/stdtypes.html?highlight=split#str.split
[13:35:17] *** Quits: aniketgm (~Aniket@49.36.107.115) (Quit: leaving)
[13:35:47] *** Joins: SteveR (~SteveR@192.146.154.3)
[13:36:04] <SteveR> hi channel, why 'from testmodule import *' is frowned upon?
[13:36:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:36:26] <SteveR> what is the difference if we use 'from testmodule import *' vs import testmodule
[13:36:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[13:37:17] *** Joins: onichomp (~onichomp@2806:264:4404:8106:4511:6838:9479:d0f)
[13:37:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:37:36] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[13:37:45] *** Lord_of_Life_ is now known as Lord_of_Life
[13:38:03] *** Quits: onichomp (~onichomp@2806:264:4404:8106:4511:6838:9479:d0f) (Read error: Connection reset by peer)
[13:38:26] <KirkMcDonald> SteveR: `import testmodule` means you access the content of the module like `testmodule.foo`.
[13:38:40] *** Joins: onichomp (~onichomp@2806:264:4404:8106:4511:6838:9479:d0f)
[13:38:44] <KirkMcDonald> SteveR: `from testmodule import *` means it dumps everything in the module all over the place you imported it.
[13:39:49] <SteveR> KirkMcDonald what do you mean by it dumps?
[13:40:36] <KirkMcDonald> SteveR: It takes all of the names in the module, and assigns to each of those names in the place with the import.
[13:41:14] <SteveR> all of the names? you mean the variable name, function or method nname etc?
[13:41:26] <KirkMcDonald> Anything defined at the module scope.
[13:41:36] <SteveR> assigns to each of those names in the place with the import?
[13:41:45] <SteveR> could you please brief me a little
[13:42:24] <KirkMcDonald> If testmodule has something called foo in it, then `from testmodule import *` will assign to the name foo.
[13:42:41] <KirkMcDonald> Like if you did: import testmodule; foo = testmodule.foo
[13:42:42] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[13:42:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:43:26] <KirkMcDonald> It is frowned upon for a number of reasons. One reason is that it makes it difficult to know where names came from.
[13:43:44] <KirkMcDonald> If you did `from testmodule import *`, and then later in the code you refer to `foo`, it is not obvious where `foo` came from.
[13:44:50] <pyzozord> what's a nice way to break out of the inner loop in python?
[13:44:59] <KirkMcDonald> pyzozord: break
[13:45:13] <pyzozord> oh sorry I mean break out of the outer loop
[13:45:33] <parv> StopIteration?
[13:45:37] <KirkMcDonald> pyzozord: There isn't really one. Perhaps refactor it into a function, and return from it.
[13:45:39] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:46:22] <KirkMcDonald> Or set a variable that you check in the outer loop, and break conditionally.
[13:46:37] <SteveR> thanks KirkMcDonald
[13:46:45] <KirkMcDonald> Or raise and catch an exception.
[13:47:23] <pyzozord> i guess I'll use a function
[13:47:23] *** Quits: kurfen (~kurfen@lfbn-ann-1-320-249.w86-200.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[13:47:38] <pyzozord> using exceptions for non-exceptiony things feels meh
[13:49:27] <KirkMcDonald> I agree. Though I will note that Python does it all the time.
[13:49:56] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Client Quit)
[13:50:19] *** Joins: supay (adas@adas.shelltalk.net)
[13:52:01] <supay> is there any workers-to-cores correlation with gunicorn? or can i command it to spin off as many workers as i like?
[13:52:04] *** Joins: kurfen (~kurfen@160.238.38.225)
[13:53:20] <KirkMcDonald> supay: I believe it doesn't do any of that on its own, and you just tell it how many workers to use on startup.
[13:53:32] <supay> alright, got it! thank you
[13:54:13] <supay> KirkMcDonald, gunicorn documentation: Generally we recommend (2 x $num_cores) + 1 as the number of workers to start off with. :D
[13:54:14] <KirkMcDonald> The recommendation seems to be "(2 x $num_cores) + 1"
[13:54:18] <KirkMcDonald> Yeah, that.
[13:54:18] <supay> my bad, shoudl have googled first
[13:54:30] <supay> :D
[13:55:36] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[13:55:43] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 252 seconds)
[13:55:48] <KirkMcDonald> The exact number is going to be a function of your particular application's needs. This suggestion of double the number of cores is basically predication on an application spending half its time blocked on I/O, which is a reasonable place to start.
[13:55:59] <KirkMcDonald> s/predication/predicated/
[13:58:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:58:47] <supay> got it! i can start off with that, and then fine tune to my needs
[13:59:09] *** Quits: Blankspace (~androirc@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[13:59:11] <supay> luckily, it looks like gunicorn provides various verbose logging options to get a better picture of incoming requests, loads, etc
[13:59:24] <supay> probably need to correlate it with a tool like netdata
[14:00:17] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:00:37] *** Joins: brainfunnel (~brainfunn@91.184.198.146.dyn.plus.net)
[14:00:44] <KirkMcDonald> Monitoring is always a necessity.
[14:02:27] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:08:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:08:35] <supakeen> KirkMcDonald: and/or based on every CPU having SMP-like features
[14:11:01] <pyzozord> is there a way to have a multiline comment over code that has a multiline string?
[14:11:47] <parv> """ """
[14:12:15] <pyzozord> no no I mean I use """ """ as a multilne string inside
[14:13:26] <parv> I am at loss. Could you show what you have & are trying to do?
[14:13:58] <pyzozord> foo = """ multi line string """ <--- I want to comment that out
[14:14:25] <parv> Ok, understand now
[14:15:20] <bjs> pyzozord: you can put a # at the start of each line
[14:16:28] <pyzozord> yeah I know, I was just looking for an easier way
[14:16:29] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[14:16:32] <bjs> which is really the only "comment" in Python.  As for strings, you can nest different quotations so long as they differ and/or are escaped:    x  = '''the"""quick'brown'"fox"'jumped""over'''
[14:16:44] <pyzozord> yep, that's what am I going to go with
[14:16:58] <parv> Shove that in a local function that you do not call.
[14:17:16] <pyzozord> heh, didn't think of that, indeed that's quite fast to do in python
[14:20:59] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.11)
[14:22:11] *** Joins: aniketgm (~Aniket@49.36.107.115)
[14:23:35] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.193) (Ping timeout: 252 seconds)
[14:25:40] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:32:01] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 252 seconds)
[14:32:56] *** Quits: SteveR (~SteveR@192.146.154.3) (Ping timeout: 256 seconds)
[14:34:13] *** Quits: parv (~quass@user/parv) (Ping timeout: 252 seconds)
[14:34:17] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:36:49] *** Joins: rvalue (~rvalue@user/rvalue)
[14:37:11] *** Quits: lastmikoi (~lastmikoi@vm-01.lastmikoi.net) (Quit: ...)
[14:41:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[14:42:02] *** Quits: brainfunnel (~brainfunn@91.184.198.146.dyn.plus.net) (Quit: thanks, bye!)
[14:43:43] *** Joins: lastmikoi (~lastmikoi@vm-01.lastmikoi.net)
[14:49:01] <lesshaste> I am confused about iterators. I am trying to get 200 tweets using tweepy. You can only get 100 at a time so my code is https://bpa.st/FQAQ . But is that actually right? I don't really understand if Paginator is an iterator or if I am doing it right if it were
[14:49:24] <lesshaste> this is the man page for Paginator https://docs.tweepy.org/en/stable/pagination.html
[14:50:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:50:39] <lericson> lesshaste: why don't you do what the example does?
[14:50:58] <lericson> oh
[14:51:00] <lericson> there was a v2
[14:51:44] <lesshaste> lericson,  I am using v2. There are two examples. I tried the flatten one but that doesn't seem to be right at all
[14:51:57] <lesshaste> lericson, it seems to give me two tweets instead of 200
[14:52:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:52:27] <lesshaste> lericson,  it seems to matter that I am using search_all_tweets as well
[14:54:06] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (Quit: brb, sex)
[14:55:21] <lesshaste> lericson,  it seems to all come down to what is the iterator which is confusing me no end
[14:55:25] *** Joins: Leliana (is@the.one.and.only.revthefox.co.uk)
[14:55:42] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:56:31] *** Joins: brabrax (~brabrax@user/brabrax)
[14:59:51] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[15:00:18] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-153.dynamic.dial.as9105.com)
[15:04:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:05:15] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[15:06:05] *** Joins: brabrax (~brabrax@user/brabrax)
[15:06:08] *** Joins: fikran (~fikran@user/fikran)
[15:07:35] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:4ddc:6f6c:9de7:afa0) (Ping timeout: 252 seconds)
[15:07:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:08:41] *** Joins: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a)
[15:10:58] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:12:23] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[15:12:30] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[15:13:22] <jinsun> lesshaste: you mean it gives you 2 in 2 iterations instead of 200 in2 ? looks like the .flatten is supposed to do that, or did you mean it just stops after giving 2?
[15:13:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:13:41] *** Joins: MaximB (~MaximB@87.68.165.151)
[15:13:57] *** Joins: han-solo (~han-solo@user/han-solo)
[15:14:44] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[15:14:54] <lesshaste> jinsun,  I mean it gives 2 in 2.  Ok so I got rid of the .flatten completely so now it looks like https://bpa.st/P3NA . But I still can't understand if I am expecting it to be a different 100 tweets each time round the for loop or not
[15:15:07] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:15:19] <lesshaste> jinsun, I feel that to someone who knows python better it might be clear
[15:15:55] *** Quits: tobybl (~tobybl@213.31.133.113) (Remote host closed the connection)
[15:19:16] *** Joins: georgios (~georgios@user/georgios)
[15:19:40] *** Joins: zaquest (~notzaques@5.130.79.72)
[15:20:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:20:14] <jinsun> lesshaste: it is a bit confusing docs yes, the max_results is actually for the method, which is client.search_all_tweets in your case, limit= is for the paginator
[15:21:06] <jinsun> lesshaste: so here you will get 100 tweets in total, and since you didn't give a limit for the paginator you will get them all in one iteration
[15:21:15] <lesshaste> jinsun, ok so in https://bpa.st/P3NA what will I get?
[15:21:36] <lesshaste> jinsun, did you mean 100 in total for that code?
[15:21:42] <jinsun> yes
[15:21:52] <lesshaste> jinsun,  that appears not to be true.. I am testing it now
[15:22:16] <lesshaste> I see 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 [...]
[15:22:52] *** Quits: phox (~phox@c-98-247-195-44.hsd1.wa.comcast.net) (Quit: Lost terminal)
[15:22:56] *** Joins: Lorphos (~Vockia@user/lorphos)
[15:23:00] <lesshaste> jinsun,  I am definitely confused
[15:23:06] <jinsun> strange, I would expect that if you still had the .flatten
[15:24:12] <lesshaste> jinsun, this is my full code https://bpa.st/NLSQ
[15:24:16] <Lorphos> Hi, i'm getting started with Scraping using BeautifulSoup
[15:24:20] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:12f1:6d27:9db9:283)
[15:24:30] *** Joins: greedom (~greedom@p200300de6737530013b92c2b9be6d282.dip0.t-ipconnect.de)
[15:24:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:24:37] <lesshaste> jinsun, counter is up to 1100
[15:24:46] <Lorphos> I'd like to scrape multiple sites for similar information (always found in different places). Is there a good example how to do and structure this?
[15:24:58] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:25:08] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[15:25:12] *** Quits: greedom (~greedom@p200300de6737530013b92c2b9be6d282.dip0.t-ipconnect.de) (Client Quit)
[15:25:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:25:53] <pyzozord> Can you guys review my python advento f code day 4? It's really bad and I don't think this is how python should be written https://ideone.com/l14E48
[15:27:23] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[15:27:34] *** Joins: greedom (~greedom@p200300de6737530013b92c2b9be6d282.dip0.t-ipconnect.de)
[15:29:35] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:12f1:6d27:9db9:283) (Ping timeout: 252 seconds)
[15:30:04] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:30:44] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[15:31:42] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:32:14] <jinsun> lesshaste: okay I looked at the code, it seems if you don't give a limit, it will just get new 100 items forever, till the function doesn't give any pagination token, https://github.com/tweepy/tweepy/blob/19b2033581d54b7b192232787b7f7c9a6821b5d3/tweepy/pagination.py
[15:33:41] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:33:44] <jinsun> lesshaste: so you are getting 100 items each iteration, till client.search_all_tweets decides to not give any results
[15:35:05] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[15:35:07] <jpds> Lorphos: Look up beautifulsoup
[15:35:08] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:18] *** Joins: brabrax (~brabrax@user/brabrax)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:50] *** Joins: kosh (~kosh@user/kosh)
[15:36:53] <Helenah> Hi, can I put my python cgi fask applications into a venv?
[15:38:21] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:39:26] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[15:39:39] *** Joins: tobybl (~tobybl@213.31.133.113)
[15:40:43] <zamba> i want to do print lines with a fixed header.. is that possible?
[15:41:01] <zamba> and also.. i want the last line to always be on top? so it's a reversed output?
[15:41:10] <nedbat> pyzozord: did it get the right answer?
[15:41:11] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[15:41:12] <zamba> is this something that's possible to do at all?
[15:41:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:42:00] <pyzozord> nedbat: yes
[15:42:02] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 240 seconds)
[15:42:18] <nedbat> zamba: you can do it with tools like prompt_toolkit
[15:43:34] <nedbat> pyzozord: it seems like there's repeated code that could be put into functions or classes I guess
[15:44:21] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[15:44:32] <pyzozord> nedbat: I didn't really know how to extract that into a function without using a lambda which I didn't want to use for performance
[15:45:07] <nedbat> pyzozord: i'm not sure why you would need a lambda vs a def, but there's no difference in performance between the two.
[15:45:56] <pyzozord> I mean the repeated code is the three nested loops and some of the checks inside the inntermost loop, but there is also some different code in the innermost loops
[15:46:33] <pyzozord> so I thought I'd create function that does all that nested loops and the shared part of the innermost loop and then call a lambda that was passed as argument to the function
[15:47:04] *** Joins: luva (~luva@37.120.197.36)
[15:47:09] *** Quits: vimal (~vimal@ip-213-127-87-89.ip.prioritytelecom.net) (Ping timeout: 256 seconds)
[15:47:17] <nedbat> pyzozord: lines 34 and 59 are basically, did this board win?  that could be a function that returns true or false
[15:47:18] <pyzozord> notice that in part1() I return as soon as condition is met, in part2() I keep going until the end but I must skip the 2nd loop
[15:47:45] *** Quits: Nact (~l@host-85-27-123-35.dynamic.voo.be) (Quit: Konversation terminated!)
[15:47:49] <pyzozord> oh I see
[15:47:53] <pyzozord> (yes)
[15:48:04] <pyzozord> so you would break up the inner logic into more smaller functions
[15:49:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[15:49:48] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:50:25] *** Quits: tobybl (~tobybl@213.31.133.113) (Remote host closed the connection)
[15:51:49] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:52:00] <nedbat> pyzozord: yes (in fact, I did :)  )
[15:52:06] *** Parts: aniketgm (~Aniket@49.36.107.115) ()
[15:53:19] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[15:54:26] *** Quits: Terexen (~terexen@user/terexen) (Quit: Saraba)
[15:55:47] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.3)
[15:56:13] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:58:15] <pyzozord> nedbat: indeed that makes a bit better, but I'm still not satisfied about how this code looks https://ideone.com/vawvNb
[15:58:30] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[15:59:31] <pyzozord> but that was a great call to extract just the inner part, this reads much better
[15:59:51] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[15:59:59] <pyzozord> also I feel like that is way too much code for such a simple problem
[16:00:07] <pyzozord> especially in python
[16:00:52] <nedbat> pyzozord: you have fewer lines of code than I did :)
[16:01:14] *** Joins: jug (~jug@user/jug)
[16:01:32] <nedbat> pyzozord: why not combine lines 44-46 and 60-62?
[16:02:26] <pyzozord> how would I combine that? just another function like last time?
[16:02:27] *** Quits: greedom (~greedom@p200300de6737530013b92c2b9be6d282.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:02:38] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd) (Quit: smeeagle)
[16:02:48] <pyzozord> i tried doing for x: for y: in one line, but python doesn't like that
[16:03:12] *** Joins: greedom (~greedom@p200300de6737530013b92c2b9be6d282.dip0.t-ipconnect.de)
[16:03:41] <jinsun> itertools.product can be used to convert nested loops to single, like for x, y in itertools.product([iter1, iter2]):
[16:05:12] <jinsun> ah no, it doesn't take a list of iterables, so product(iter1, iter2)
[16:06:18] <pyzozord> can I use foo(*(generator))?
[16:06:45] *** Joins: vimal (~vimal@ip-213-127-87-89.ip.prioritytelecom.net)
[16:07:21] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[16:07:43] <pyzozord> wwell nevermind I don't think I can use product for x and y
[16:08:01] <pyzozord> because it's a 2d list, board[y][x]
[16:08:45] <jinsun> you can do foo(*(gen)) yes
[16:09:08] <jinsun> and not sure why 2d list matter
[16:10:06] <jinsun> if you have for x in iterable1: for y in iterable2:, you can always convert that do for x, y in product(iterable1, iterable2)
[16:10:20] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:10:40] <jinsun> if you can't use product, then you can't use nested loops either
[16:12:37] <jinsun> unless maybe you have some condition you check before you decide to run the inner loop
[16:12:49] <jinsun> but didn't look like that in the code you pasted
[16:12:56] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[16:13:39] *** Joins: julia (~quassel@user/julia)
[16:16:09] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[16:16:27] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[16:16:42] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[16:18:36] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[16:18:48] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[16:19:28] *** Joins: brabrax (~brabrax@user/brabrax)
[16:20:36] *** Quits: Lorphos (~Vockia@user/lorphos) (Ping timeout: 256 seconds)
[16:22:06] <overrider> I don't have a lot of space left on my / partition, but i do have a separate disk (/data). Any argument i can pass to pacman that it stores downloads in /data , or should i make a symlink from the var/.../pkgcache directory?
[16:23:04] <bookworm> wrong channel, try again in #archlinux
[16:24:05] <pyzozord> I did it like this, but I'm still not really happy with it https://ideone.com/YQGM5O
[16:24:38] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[16:26:27] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b874:cd1a:cf5c:6fc4)
[16:27:37] <zen_coder> Hi, I am using subprocess.run to execute a shell cmd
[16:27:40] <zen_coder> proc = subprocess.run(shlex.split(cmd), check=True, encoding="utf-8", stdout=subprocess.PIPE, stderr=subprocess.PIPE)
[16:27:59] <zen_coder> how can I get the output of the process but also print it in the bash?
[16:28:05] <zen_coder> at the same time
[16:28:20] <han-solo> print it in bash means ?
[16:28:32] <KirkMcDonald> Output it to the terminal, I assume.
[16:28:39] <zen_coder> print it in the console, terminal
[16:28:42] <zen_coder> yes
[16:29:17] <han-solo> once you collect the output, you could just print it again right ?
[16:29:46] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:29:52] <zen_coder> yeah, but thing about some cmd which takes quite some time and prints a lot. I would wait for 1 minute an then get it printed out at once
[16:29:54] <bjs> yes you'll have to PIPE it, then read+print it back out
[16:30:19] <zen_coder> subprocess.run(shlex.split(cmd), check=True, encoding="utf-8")
[16:30:21] <bjs> zen_coder: you can use Popen to let it run in the background whilst you read the output (you'll need something like threads or asyncio)
[16:30:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:30:38] <zen_coder> this cmd above will printout as it happens
[16:31:18] <zen_coder> I just want to inject this cmd above a variable which stores all the output of it
[16:31:23] <KirkMcDonald> (I once did this with chicanery involving an additional manual fork() call; don't be like me.)
[16:32:06] *** Quits: daex (~daex@user/daex) (Quit: /me 's znc kicks the bucket)
[16:32:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:32:34] *** Joins: daex (~daex@user/daex)
[16:32:41] <zen_coder> https://stackoverflow.com/a/7978000
[16:32:50] <KirkMcDonald> Another approach would be to pipe the output of the subprocess to a tee process.
[16:33:07] <han-solo> `for line in subprocess.Popen("bash -c 'for i in {1..10};do echo $i; sleep 2;done'", shell=True, stdout=subprocess.PIPE, encoding='utf-8').stdout:print(line)`
[16:33:07] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:33:37] <jinsun> you can make stdout some fancy file object too maybe, that prints stuff that gets written to it
[16:33:48] <KirkMcDonald> That SO answer is only plausible because there is the one pipe. If you are also piping stderr, then matters get much more complicated.
[16:34:12] <KirkMcDonald> (Unless you're piping stderr to stdout, which puts you back to one pipe.)
[16:34:38] <bjs> jinsun: you can't pass file-like objects to subprocess
[16:34:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:35:08] <KirkMcDonald> Yes, subprocess wants things that have a fileno() for pipes.
[16:36:17] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[16:36:38] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[16:36:51] <jinsun> oh, okay, then don try the way I was thinking
[16:37:39] *** Joins: node1 (~node1@user/node1)
[16:37:54] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[16:38:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:38:40] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:40:07] *** Joins: rotherfuchs (~rotherfuc@ppp-88-217-32-153.dynamic.mnet-online.de)
[16:43:07] <rotherfuchs> Hello there. Within a subprocess, what is a solid way to get the child’s PID? https://dpaste.org/zEr6
[16:43:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[16:43:27] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[16:43:48] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[16:44:47] <bjs> rotherfuchs: you're using the multiprocessing library wrong.  You mean `proc = Process(target=Daemon) ; proc.start()` or something
[16:44:51] <zamba> nedbat: what if i just want a "sticky" header on the output?
[16:45:01] <zamba> nedbat: that toolkit seems a bit overkill for this project
[16:45:31] <bjs> rotherfuchs: your code never actually starts another process; see the examples in the docs for multiprocessing.Process and note the way it creates and starts processses https://docs.python.org/3/library/multiprocessing.html#the-process-class
[16:45:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:46:03] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[16:46:35] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[16:47:02] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Read error: Connection reset by peer)
[16:47:46] *** Quits: zepolen (~zepolen@2a02:587:293f:b5fe:a9ae:7515:90f4:3484) (Ping timeout: 268 seconds)
[16:48:16] <rotherfuchs> Thank you !
[16:48:17] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[16:53:18] *** Joins: plastico (~plastico@neomutt/plastico)
[16:54:35] *** Quits: jay-m126 (~jay-m@154.72.150.167) (Ping timeout: 256 seconds)
[16:54:35] *** Quits: jay-m126_ (~jay-m@154.72.150.167) (Ping timeout: 256 seconds)
[16:56:16] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[16:56:19] <bjs> zen_coder: https://bpa.st/HEWQ here's a little example using asyncio to get concurrent reading of stdout/stderr;  note that this isn't exactly the same as if the command was hooked up to the terminal, and so things like buffering may behave differently
[16:56:36] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:57:09] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[16:58:11] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[16:59:13] *** Joins: zepolen (~zepolen@2a02:587:293f:b5fe:a9ae:7515:90f4:3484)
[16:59:39] *** Joins: canton7 (~canton7@about/csharp/canton7)
[16:59:39] <han-solo> can't that `stderr=subprocess.STDOUT` instead of using a seperate call for stderr # ?
[16:59:56] <han-solo> unless they are doing something specific for stderrs
[17:00:23] <bjs> Yeah,  if you redirect stderr to stdout it becomes simpler
[17:00:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:00:35] <han-solo> ah, Okay
[17:00:37] <bjs> but often you want to log stderr somewhere else (e.g. stdout is data and stderr is some log/trace)
[17:00:43] <han-solo> yeah
[17:01:19] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[17:09:17] *** Joins: tobybl (~tobybl@213.31.133.113)
[17:11:16] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[17:11:22] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:13:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:15:29] *** Joins: fikran (~fikran@user/fikran)
[17:16:05] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:16:44] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[17:21:26] *** Quits: tobybl (~tobybl@213.31.133.113) (Remote host closed the connection)
[17:22:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:23:29] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[17:24:51] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[17:27:20] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[17:27:30] *** Joins: Klinda (~superleag@user/klinda)
[17:27:32] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[17:29:42] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 268 seconds)
[17:30:11] *** Joins: remolej (~kenoba@user/kenoba)
[17:30:52] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[17:31:57] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[17:32:27] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[17:32:52] *** Joins: blddk (~admin@185.233.252.229)
[17:33:55] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[17:35:56] *** Joins: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs)
[17:37:47] *** Joins: Bushmaster (~Goondog@user/bushmaster)
[17:38:22] <Bushmaster> can you utilize Python for ETL solution pipeline for SQL Server
[17:39:12] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[17:39:16] *** Joins: moose` (~moose@user/moose)
[17:40:08] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[17:40:15] *** Joins: JoshL1002 (~JoshL1002@pres-26-b2-v4wan-161849-cust5.vm29.cable.virginm.net)
[17:40:17] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Ping timeout (120 seconds))
[17:40:38] *** Joins: newdimension (~newdimnes@user/newdimension)
[17:44:58] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: Rebooting!)
[17:45:59] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[17:46:17] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[17:46:27] *** BasedStella is now known as stella
[17:46:38] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[17:48:00] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Remote host closed the connection)
[17:48:30] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[17:48:59] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[17:51:21] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[17:51:32] *** Joins: arinov (~arinov@178.240.181.140)
[17:52:38] *** Parts: Bushmaster (~Goondog@user/bushmaster) (later folks)
[17:52:46] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[17:53:25] *** Joins: aod (~a@201.209.165.43)
[17:54:09] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[17:56:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[17:58:04] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[17:58:21] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[17:58:22] *** Joins: Maskinkatten (~CalculusC@user/calculuscat)
[18:01:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:01:30] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Remote host closed the connection)
[18:02:16] *** Quits: Maskinkatten (~CalculusC@user/calculuscat) (Client Quit)
[18:02:18] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[18:02:38] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[18:03:02] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:07:30] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:08:03] *** Joins: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr)
[18:08:40] *** Joins: buzzard (~quassel@37.120.203.166)
[18:08:42] *** Joins: beli6148 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[18:08:52] <knstn> Is there any book, that focuses solely on standard library?
[18:09:27] *** Joins: CoolerX (~CoolerX@user/coolerx)
[18:09:45] *** Joins: e2m4n (~ezman@user/e2m4n)
[18:10:02] *** Joins: stdout (~stdout@50.115.255.72)
[18:11:09] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 256 seconds)
[18:11:41] <jinsun> the tutorial in the official docs has a chapter on stdlib https://docs.python.org/3/tutorial/stdlib.html
[18:12:07] <jinsun> and the library reference is there for more details https://docs.python.org/3/library/index.html
[18:12:23] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Ping timeout: 252 seconds)
[18:12:23] *** beli6148 is now known as beli6147
[18:12:31] *** Joins: bomzh1018 (~user@176.52.41.234)
[18:12:31] <jinsun> those work better than books I feel
[18:12:37] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[18:12:39] *** Joins: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f)
[18:14:49] *** Quits: bomzh1018 (~user@176.52.41.234) (Client Quit)
[18:15:07] *** Joins: bomzh1018 (~user@176.52.41.234)
[18:16:20] *** Quits: bomzh1018 (~user@176.52.41.234) (Client Quit)
[18:17:33] *** Joins: bomzh1018 (~user@176.52.41.234)
[18:18:00] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[18:18:06] *** Quits: bomzh1018 (~user@176.52.41.234) (Client Quit)
[18:18:44] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:19:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[18:19:58] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[18:23:39] <The-Compiler> https://pymotw.com/3/ too, apparently there's a book as well
[18:25:23] *** Joins: zebrag (~chris@user/zebrag)
[18:28:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:28:04] *** Joins: arinov (~arinov@178.240.181.140)
[18:28:40] <jmd> What's a "book" ?
[18:28:41] *** Joins: akk (~akk@75.161.146.115)
[18:28:50] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[18:29:08] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[18:31:57] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[18:33:21] <nedbat> zamba: you might be able to manage it yourself with ANSI escape sequences, but i don;t think it will be easier.
[18:35:35] <NyaaTheKitten> jmd, assuming you are being literal here, https://en.wikipedia.org/wiki/Book
[18:35:57] *** Parts: CoolerX (~CoolerX@user/coolerx) (Leaving)
[18:37:55] *** Joins: yepla (~yepla@bez60-3-78-197-24-235.fbx.proxad.net)
[18:38:28] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[18:41:14] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b874:cd1a:cf5c:6fc4) (Ping timeout: 268 seconds)
[18:41:40] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[18:41:44] <lesshaste> jinsun,  I left and I think I missed a message from you. Would you mind posting it again please?
[18:42:01] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[18:42:47] *** Joins: daoudr_ (~daoudr@gateway/vpn/pia/daoudr)
[18:43:13] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:43:49] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:44:00] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b9f8-e42c-471d-008c.res6.spectrum.com)
[18:45:33] *** Quits: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Ping timeout: 268 seconds)
[18:46:47] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[18:47:55] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[18:48:21] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[18:50:09] *** Quits: luva (~luva@37.120.197.36) (Ping timeout: 252 seconds)
[18:50:49] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:52:02] *** Joins: ntome (~ntome@user/ntome)
[18:52:02] *** Joins: superboot (~agentgasm@user/superboot)
[18:52:03] <ntome> hi
[18:52:54] <ntome> is it possible to use asyncio.start_server to accept only one client?
[18:53:21] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[18:56:32] <jinsun_> <lesshaste> "jinsun,  I left and I think I..." <- https://bpa.st/GKYQ
[18:57:21] *** Joins: daoudr__ (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f)
[18:57:38] *** Quits: daoudr__ (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Read error: Connection reset by peer)
[18:59:31] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:59:53] *** Quits: daoudr_ (~daoudr@gateway/vpn/pia/daoudr) (Ping timeout: 256 seconds)
[19:00:53] *** Quits: JoshL1002 (~JoshL1002@pres-26-b2-v4wan-161849-cust5.vm29.cable.virginm.net) (Quit: Connection closed)
[19:01:10] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:01:17] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:01:36] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:01:45] <Wulf> ntome: don't know. But I think that's easy to achieve with trio.
[19:01:54] *** Quits: aod (~a@201.209.165.43) (Quit: Lost terminal)
[19:02:42] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:02:43] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Client Quit)
[19:03:53] *** Quits: yepla (~yepla@bez60-3-78-197-24-235.fbx.proxad.net) (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
[19:04:08] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[19:04:23] *** Joins: de-facto (~de-facto@user/de-facto)
[19:05:30] *** Joins: Naan (~naan@user/naan)
[19:05:38] *** Joins: monkey_ (~user@190.104.116.153)
[19:06:37] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[19:06:42] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[19:07:44] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:07:46] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Quit: ZNC 1.8.2 - https://znc.in)
[19:07:59] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[19:08:03] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:08:55] *** Joins: xkuru (~xkuru@user/xkuru)
[19:10:19] *** Joins: Bakunin (~Lindis@user/lindis)
[19:11:47] *** Quits: buzzard (~quassel@37.120.203.166) (Ping timeout: 252 seconds)
[19:13:18] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[19:14:20] *** Joins: cdown_ (~cdown@163.114.131.1)
[19:15:40] *** Joins: Hackerpcs (~user@user/hackerpcs)
[19:15:46] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:16:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:16:22] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[19:16:25] *** Quits: black_13 (~jjosb@209.221.58.189) (Quit: Leaving)
[19:16:46] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:16:49] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[19:16:53] *** cdown_ is now known as cdown
[19:17:19] *** Quits: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953) (Quit: WeeChat 3.0)
[19:17:58] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:18:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[19:19:05] *** Joins: Nevams (~Guest77@2804:431:c7f4:fdb6:8ce2:752c:795d:3d33)
[19:20:11] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:20:32] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[19:20:40] *** Joins: bindu (~bindu@user/bindu)
[19:20:50] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[19:22:42] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[19:23:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:24:08] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:24:50] *** Joins: fikran (~fikran@user/fikran)
[19:24:54] *** Joins: dohtem (uid524096@user/dohtem)
[19:25:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: Textual IRC Client: www.textualapp.com)
[19:25:50] <rotherfuchs> Hi. Is there a way to re-initialize Django’s settings? Background is that I have Daemon which is spawning child processes and exist. However, I need the children’s PID in runtime when loading settings.py (for Logging).
[19:26:09] <rotherfuchs> * and exits.
[19:26:47] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[19:27:17] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:28:05] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:28:35] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[19:30:40] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[19:32:54] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[19:35:28] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[19:35:35] <jmd> rotherfuchs: I'm not an expert, but there is a --settings= flag which you can pass to django on startup
[19:36:46] <jmd> rotherfuchs: You might get a more authoritative answer on #django
[19:36:54] <han-solo> https://docs.python.org/3/library/os.html#os.getpid # can that work ?
[19:37:48] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Ping timeout: 260 seconds)
[19:38:08] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Remote host closed the connection)
[19:38:26] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[19:39:32] <rotherfuchs> jmd and han-solo: thanks but my issue is that I am initializing my settings within the code - and os.getpid() only shows me the pid of the parent process (the one that spawns the childs), but is already gone when the children are initialized. So I need to re-initialize settings at runtime of the child, which is not working (yet). But thanks I’ll aslk in #django.
[19:40:01] *** Quits: rowbots (~dirgeable@h96-60-60-73.arvdco.broadband.dynamic.tds.net) (Ping timeout: 252 seconds)
[19:45:42] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:45:47] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[19:46:21] <lantech19446> I have what i believe is a simple question, I can find an msi for python 2.4 but I need one for python3 does anyone know where I go to get it, I didn't find it under python downloads
[19:46:28] *** fling is now known as bedroller
[19:47:17] *** Quits: Raichvent (~Raichvent@193.123.33.210) (Quit: Out)
[19:47:29] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[19:48:01] *** Joins: water_27300935_ (~xe@182.90.161.8)
[19:48:05] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[19:48:07] *** Parts: water_27300935_ (~xe@182.90.161.8) ()
[19:48:16] <deniska> rotherfuchs: how are you spawning processes?
[19:48:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:48:41] *** Joins: pepper (~pepper@user/pepper)
[19:49:10] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Client Quit)
[19:49:10] <nedbat> lantech19446: does it have to be an msi?  https://www.python.org/downloads/windows/
[19:49:27] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:50:13] <lantech19446> nedbat: yes because I plan on using a gpo to push out the install that's the site I was on and only got exe files
[19:50:16] <nedbat> lantech19446: there are msi's on that page, but only for old 3.x releases
[19:50:21] *** Joins: cosimone (~user@93-47-228-147.ip115.fastwebnet.it)
[19:50:27] <lantech19446> Hmm ok
[19:50:33] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[19:51:05] <lantech19446> It doesn't really matter which version of 3 Ansible just wants a python3 interpreter in order to function
[19:52:11] <nedbat> lantech19446: i think it probably matters what version of 3 you get.
[19:52:33] <nedbat> lantech19446: the latest version of Ansible requires >= 3.8
[19:52:40] *** Quits: greedom (~greedom@p200300de6737530013b92c2b9be6d282.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:53:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:53:38] *** Joins: greedom (~greedom@p200300de6737530013b92c2b9be6d282.dip0.t-ipconnect.de)
[19:53:40] <lantech19446> nedbat: when the error pops for not finding the interpretor it lists like 6 versions it didn't find I'm not on the latest and greatest because I'm running it from rhel and for some reason they're still on 2.9
[19:54:26] <nedbat> lantech19446: you're going to be fighting to install old-enough versions of everything.
[19:54:34] <nedbat> (btw, there was no 2.9)
[19:54:59] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:55:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:57:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 256 seconds)
[19:58:43] <lantech19446> nedbat: I'd tell you the correct version but my server appears to have dumped all my vm's in the update. I did realize I made an error though I didn't run win_ping, the windows hosts don't actually need python I'm just too new to ansible to catch my mistakes quickly
[19:59:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:03:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:03:56] <rotherfuchs> deniska: unix double fork
[20:03:56] *** bedroller is now known as fling
[20:04:19] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:04:25] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 256 seconds)
[20:04:31] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:04:57] *** Joins: Pi-sistance (~Guest24@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[20:05:33] <Pi-sistance> is it considered poor practice to have an else command in a while-true loop? Im still trying o figure out why the damn editor highlights the else as red heh
[20:05:43] <Pi-sistance> to* figure
[20:06:42] <deniska> Pi-sistance: maybe it just always highlights else as red?
[20:09:30] <han-solo> https://imgur.com/a/afkkMSW # vscode doesn't ':)
[20:09:31] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 256 seconds)
[20:09:35] <Pi-sistance> I dont recall else commands ever being hightlighted in red
[20:09:53] <Pi-sistance> Only time that happens is with an error, usualyl an idnentation error
[20:11:22] *** Quits: rsx (~dummy@ppp-188-174-137-75.dynamic.mnet-online.de) (Quit: rsx)
[20:11:23] *** Joins: arinov (~arinov@31.142.57.149)
[20:12:17] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:2799:2694:4aa2:8212) (Ping timeout: 252 seconds)
[20:12:19] *** Joins: paprika (~pepper@user/pepper)
[20:13:09] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:2b0f:9fce:b8bc:dd16)
[20:13:20] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[20:13:36] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[20:14:07] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 252 seconds)
[20:14:14] <deniska> maybe the author of the syntax highlighting just wasn't aware about that syntax?
[20:14:27] *** Quits: foxbox (~cammy@user/cammy) (Excess Flood)
[20:14:56] *** Joins: foxbox (~cammy@user/cammy)
[20:15:25] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[20:15:45] <Pi-sistance> I want to share the code, but it's for coursework, so not sure if I'm cheating. The code seems to work poerfectly at least.
[20:15:54] *** Joins: Mattiasl_ (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:16:41] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 252 seconds)
[20:17:01] <lantech19446> nedbat: you're wrong they did make a 2.9 i'm on 2.9.27
[20:17:29] *** Quits: greedom (~greedom@p200300de6737530013b92c2b9be6d282.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:17:47] <han-solo> deniska: likely
[20:18:01] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 256 seconds)
[20:19:27] <deniska> lantech19446: I think you are confusing ansible and python versions
[20:19:43] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:20:06] <lantech19446> deniska: no i'm running ansible 2.9.27 I'm running python3 something on the controller
[20:20:35] <lantech19446> python 3.6.8
[20:20:38] <grym> lantech19446: nedbat was speaking of python versions, not ansible ones
[20:21:36] <grym> of which python 2.7.18 is the last cpython version that will ever happen
[20:22:07] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[20:22:13] <lantech19446> I thought I made it clear that I was talking about the ansible version but maybe I didn't. I don't actually need it afterall though I just forgot I had to run win_ping
[20:22:33] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 252 seconds)
[20:22:54] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[20:24:28] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Client Quit)
[20:24:39] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:24:42] *** Joins: arinov (~arinov@31.142.57.149)
[20:27:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:29:56] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[20:29:57] *** Quits: Mattiasl_ (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:30:12] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[20:31:08] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[20:32:49] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 256 seconds)
[20:37:49] *** Joins: jay-m126 (~jay-m@154.72.150.130)
[20:37:53] *** Joins: jay-m126_ (~jay-m@154.72.150.130)
[20:38:49] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:39:19] *** Joins: nickdaly (45ce440a48@2604:bf00:561:2000::e2)
[20:40:01] *** Joins: arinov (~arinov@212.156.215.30)
[20:40:42] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[20:40:51] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[20:41:18] *** Quits: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs) (Quit: Leaving)
[20:41:38] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[20:42:24] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[20:42:36] *** Joins: gambl0re (~gambl0re@216.154.4.187)
[20:42:55] *** Joins: smrtz (~smrtz@user/smrtz)
[20:43:15] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Remote host closed the connection)
[20:43:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:43:42] *** Quits: smrtz (~smrtz@user/smrtz) (Client Quit)
[20:44:47] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[20:45:08] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:45:33] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:f699:ef55:9609:95bb) (Quit: Leaving)
[20:46:42] *** Quits: Nevams (~Guest77@2804:431:c7f4:fdb6:8ce2:752c:795d:3d33) (Quit: Client closed)
[20:47:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:50:35] *** Joins: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f)
[20:51:16] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:52:14] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[20:54:07] <Deneb> I am having a problem with a python for in loop running indefinitely. I am reading a file with file.readlines() and then interating over the resulting list with for line in mylines:  The loop doesn't stop when it reaches the end but goes back around to the begining and runs continously.
[20:54:21] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.11) (Ping timeout: 256 seconds)
[20:55:03] <deniska> Deneb: can you show the code?
[20:55:09] <Deneb> I googled this a bit but can't find and answer
[20:55:31] <Deneb> deniska: yes I can show the code. Just pasting it
[20:55:46] <han-solo> wild guess, you might be mutating the list that you are iterating over ':)
[20:56:11] <yitz> Deneb:   for line in pathlib.Path("file.txt").read_text().splitlines(): print(line)
[20:56:26] *** Joins: Narrat (~omnius@p200300df5f3c959d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:56:45] <Deneb> https://bpa.st/EYEA
[20:56:49] <han-solo> oh, wait. Ignore my message
[20:57:38] <Deneb> han-solo: possible, although I am not actually doing anything with it AFAIK other than iterating and extracting the lines
[20:57:57] <han-solo> Deneb: yeah, i misread the question, sorry
[20:58:02] <yitz> Deneb: that really should only run the loop once per file line...
[20:58:09] <Deneb> han-solo: n.p.
[20:58:26] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[20:58:51] *** Joins: _xor (~xor@72.49.199.147)
[20:59:36] <Deneb> yits: that's what I was expecting, it runs through the list and stops when it gets to the end. AFAIK its what for myvar in mylist usually does?
[21:00:09] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Quit: WeeChat 3.3)
[21:00:22] <Repiphany> What output are you seeing that shows it's looping over the file continuously
[21:00:32] <Deneb> it gets to the end of the list and starts at the begining again. I was puzzled by what was taking it so long until I added in the print(line) statement and saw the output....
[21:01:06] *** Joins: Macuser (~Macuser@2607:b400:24:0:f57e:fa8:c6ee:eccc)
[21:01:18] <Deneb> output: https://bpa.st/U5ZQ
[21:01:29] <jinsun> probably your file hass repeating content
[21:01:45] <jinsun> enumerate() it and prinnt the index
[21:02:18] <Deneb> and the input file: https://bpa.st/SY3Q
[21:03:13] <Repiphany> How are you calling download_keplers()
[21:03:33] <bjs> Deneb: what's the full code?
[21:03:37] <yitz> Yeah. You're probably calling the function more than once
[21:04:28] <Repiphany> You're overwriting your logfile every time the function is called which is probably not desired behaviour for a log file
[21:04:36] <Deneb> ok, lets see if I can paste the full code. One moment....
[21:04:56] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[21:05:07] <han-solo> also minor suggesion: probably better to use `csv`
[21:05:27] <han-solo> not that it is related
[21:06:10] <Deneb> yitz: time for faceplam! Yes its being called in a while(1) because I indented it.....
[21:06:23] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[21:06:29] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:06:51] <powftw> I have a flask app. And inside /someroute, there's a function saying ```def returnhello()``` and it simply return the string "hello world" if it is called. Now, in jinja template, can I call this particular function when a button in frontend is clicked? {{ returnhello() }} <-- is this concept possible?
[21:07:09] <powftw> I saw on stackoverflow, but just verifying my understanding
[21:07:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:07:36] <yitz> Deneb: Repiphany called that out. I just +1'ed it.
[21:07:39] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[21:07:56] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[21:08:10] <Deneb> Repiphany: thanks. Stupid mistake on my part.
[21:08:15] <Deneb> sorry guys.
[21:08:30] <Forty-Bot> powftw: if you want a function to be available in a template, use app.jinja_env.globals.update()
[21:08:41] <Forty-Bot> but you probably want to use mark_safe as well
[21:09:11] <Forty-Bot> doing something when an event in the frontend happens is a different beast
[21:09:47] <powftw> I see.. can I actually make a button and when it clicked, it should go /myRoute without reloading the page?
[21:09:49] *** Parts: lantech19446 (~lantech19@144.202.10.138) (WeeChat 3.2)
[21:09:54] <Forty-Bot> no
[21:10:00] <Forty-Bot> you need javascript for that
[21:10:11] *** Quits: monkey_ (~user@190.104.116.153) (Quit: ERC (IRC client for Emacs 27.2))
[21:10:13] <Forty-Bot> or you need to render it in advance, and e.g. hide it with css
[21:10:35] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[21:11:41] <powftw> Onclick I can call a route I guess
[21:12:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:15] <powftw> Onclick goto /myRoute <-- does this reload the page?
[21:12:16] *** fling is now known as ciphersalad
[21:12:34] <powftw> Assuming /myRoute isn't returning anything
[21:13:05] <Forty-Bot> try it and see :)
[21:13:08] <Forty-Bot> but c.f. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target
[21:13:31] <Forty-Bot> err, disregard that
[21:13:46] *** Joins: node1 (~node1@user/node1)
[21:14:07] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[21:14:40] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[21:14:49] *** Joins: monkey_ (~user@190.104.116.153)
[21:16:10] *** Joins: Auron (Auron956@user/auron)
[21:16:59] *** Joins: marduk1 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[21:19:02] *** Joins: Betal (~Betal@user/betal)
[21:19:23] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4888:4dc:b1c6:e3ec)
[21:20:59] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[21:20:59] *** marduk1 is now known as marduk
[21:21:00] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[21:21:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4888:4dc:b1c6:e3ec) (Client Quit)
[21:21:58] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[21:22:28] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:edc6:4208:f7f2:3b93)
[21:22:58] *** Joins: aniketgm (~Aniket@49.36.111.131)
[21:24:02] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[21:24:27] *** Joins: ano (~ano@user/ano)
[21:27:45] *** Joins: kurfen_ (~kurfen@160.238.38.230)
[21:28:17] *** Quits: kurfen (~kurfen@160.238.38.225) (Ping timeout: 256 seconds)
[21:29:12] *** Joins: paravida (~myChateau@user/paravida)
[21:29:18] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[21:32:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:32:30] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:33:43] *** Quits: nomic (~nomic@185.198.243.158) (Quit: Leaving)
[21:34:12] *** Joins: fikran (~fikran@user/fikran)
[21:35:09] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:36:54] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4888:4dc:b1c6:e3ec)
[21:37:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4888:4dc:b1c6:e3ec) (Client Quit)
[21:38:44] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Remote host closed the connection)
[21:40:26] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:41:19] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:41:45] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 252 seconds)
[21:42:19] *** Quits: nickdaly (45ce440a48@2604:bf00:561:2000::e2) (Remote host closed the connection)
[21:42:28] *** Joins: nickdaly (45ce440a48@2604:bf00:561:2000::e2)
[21:43:05] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[21:44:04] *** Joins: ST47 (~ST47@wikimedia/st47)
[21:45:01] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[21:45:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[21:46:14] <Evolver> Is Ray H. here? Or does he have an email?
[21:46:41] <Evolver> or did he real-retire
[21:47:45] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:c441:a603:d645:f3b9)
[21:48:56] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 260 seconds)
[21:49:56] <SnoopJ> Evolver, he does have an email, and he's also active on Twitter. I don't think he comes here, though.
[21:50:10] <SnoopJ> assuming you mean Raymond Hettinger and not some other Ray H.
[21:50:20] <Evolver> SnoopJ: thanks. yes. Where can I find his email?
[21:50:32] <Evolver> because I wanted his input on a problem
[21:51:17] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:1dff:28cc:1d8d:1da8) (Ping timeout: 252 seconds)
[21:51:49] <SnoopJ> Evolver, there's one listed on https://rhettinger.github.io/
[21:52:07] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[21:52:23] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 252 seconds)
[21:53:04] *** Joins: celphi_ (sid97751@user/celphi)
[21:53:10] <celphi_> Hi
[21:53:54] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:54:13] <celphi_> Anyone have good reading material for python
[21:55:02] <bookworm> sure, lots
[21:55:12] <celphi_> Anything modern plz
[21:55:14] <bookworm> what do you want / skill level wise?
[21:55:20] <bookworm> fluent python 2nd edition
[21:55:26] <bookworm> o reilly
[21:55:28] <celphi_> I program in other languages
[21:55:33] <bookworm> yes
[21:55:43] <celphi_> Is my skill level
[21:55:52] <bookworm> fluent python then
[21:55:57] <celphi_> Ty!
[21:56:17] <bookworm> you can probably skim the first few chapters, as usual
[21:56:18] <SnoopJ> celphi_, Think Python and Automate the Boring Stuff With Python are both highly regarded by this community, and available online for free. Fluent Python is also well-regarded, but a little old at this point. 2nd edition is coming next year.
[21:56:29] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[21:56:37] <bookworm> early release is already available I think
[21:56:40] <celphi_> Awesome. Ty
[21:56:45] * SnoopJ is eagerly anticipating the 2nd ed.
[21:57:01] <SnoopJ> yea, I guess if you're an O'Reilly subscriber you can see the pre-print
[21:57:03] <bookworm> auto ate the boring stuff is more for complete beginners I think
[21:57:15] <SnoopJ> bookworm, they didn't really specify
[21:57:53] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[21:58:16] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.3)
[21:58:53] <celphi_> Think python is from 2012. Is that right?
[21:59:15] <celphi_> Still relevant?
[21:59:31] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[21:59:36] <bookworm> some stuff, others not so much
[21:59:52] <bookworm> asyncio happened, format strings, walrus operator...
[22:00:09] <celphi_> Any books with all that stuff?
[22:00:17] <bookworm> I mean you can always catch up afterwards, not like the stuff from 3.0 is suddenly not available anymore
[22:00:35] *** Quits: jay-m126_ (~jay-m@154.72.150.130) (Ping timeout: 256 seconds)
[22:00:35] *** Quits: jay-m126 (~jay-m@154.72.150.130) (Ping timeout: 256 seconds)
[22:01:01] <bookworm> coming... no modern one with high quality that I know. I'm sure Packt has several but I'd avoid that publisher like the plague
[22:01:36] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[22:01:45] <bookworm> seldom seen a publisher that has absolutely no quality control nor reviewers for a technical book
[22:01:48] <jinsun> thinnk python 1st edition is 2012, and that is for python2, don't read that
[22:01:52] <celphi_> Think python is 2015 so it seems newer
[22:02:13] <jinsun> think python 2nd edition is for python3, read that
[22:02:44] *** Joins: digilink (~digilink@user/digilink)
[22:02:45] <celphi_> I mean Fluent Python is 205
[22:02:50] <celphi_> 2015
[22:03:02] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[22:03:09] <bookworm> hence the second edition ;)
[22:03:10] <jinsun> https://docs.python.org/3/tutorial/index.html is 2021
[22:03:11] <celphi_> Ok I’ll look for that
[22:03:19] <jinsun> it is also good
[22:03:58] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:04:29] *** Quits: whaley (~whaley@2603-6080-a301-33d1-8cc8-4c61-7111-8e5e.res6.spectrum.com) (Ping timeout: 252 seconds)
[22:04:35] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:c441:a603:d645:f3b9) (Read error: Connection reset by peer)
[22:04:52] <The-Compiler> Automate the boring stuff has some weird stuff in it though :(
[22:05:07] <The-Compiler> (like using pprint.pformat and pickle/shelve for serialization)
[22:05:22] *** Quits: Pi-sistance (~Guest24@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Quit: Client closed)
[22:05:33] <The-Compiler> or not closing files (i.e. using "f = open(...)")
[22:05:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:05:58] *** Joins: cdown_ (~cdown@188.214.11.14)
[22:06:03] *** Joins: monkey_ (~user@190.104.116.153)
[22:07:04] *** Quits: catdog (~quassel@2001:470:50f7:cdcd::cd1) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[22:07:13] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[22:08:31] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[22:08:42] *** cdown_ is now known as cdown
[22:09:01] *** Joins: bloody (~bloody@user/bloody)
[22:09:17] <The-Compiler> or explaining multithreading at all :P
[22:09:26] *** Quits: Narrat (~omnius@p200300df5f3c959d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:09:38] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Remote host closed the connection)
[22:10:20] *** Joins: newpy (~newpy@206.168.231.90)
[22:12:20] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[22:12:20] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[22:12:33] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:12:56] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[22:13:33] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:14:48] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[22:19:28] <bookworm> pickle is not a sensible serialization format...
[22:19:34] *** Quits: Macuser (~Macuser@2607:b400:24:0:f57e:fa8:c6ee:eccc) (Quit: Textual IRC Client: www.textualapp.com)
[22:20:01] <grym> depends on what you're up to
[22:20:07] <grym> it's got a lot of caveats, for sure
[22:21:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[22:21:53] *** Joins: cheater (~Username@user/cheater)
[22:21:59] <skipper> celphi_:  there is a new book called python distilled by david beazley who is also famous speaker and author of couple of books if you want to try.
[22:22:05] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:22:19] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[22:22:45] <celphi_> Ok is the python docs better? skipper
[22:23:21] <skipper> celphi_: I don't buy that book and use docs and ask questions here
[22:23:32] <skipper> but books also help if you can buy
[22:23:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:25:02] <aphysically> jinsun: when typing my day1 AoC solutions it occurred to me we don't have a "comparable"/"ordered" in stdlib
[22:25:07] <aphysically> (you can just use a protocol though ofc!)
[22:25:36] <aphysically> but still that seems common enough maybe it makes sense to be in typing
[22:26:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[22:26:24] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:26:42] *** Joins: greentree (~greentree@pool-108-29-36-221.nycmny.fios.verizon.net)
[22:26:58] <greentree> is pyOTP recommended for using TOTP?
[22:28:14] <aphysically> by the way have you been keeping up with the mailing list? The thread about delaying decision on what to do about delayed typing evaluation has gotten interesting (the eventual decision toward a from __future__ import annotations-like behavior)
[22:28:21] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:28:39] <aphysically> it sort of became a dumping ground for complaints about python typing in general via:
[22:28:54] <aphysically> 1) annotations were introduced without explicitly being about typing
[22:29:11] <aphysically> 2) things now use thee annotations that aren't typing
[22:29:26] <jinsun> aphysically: what would ordered be? something that functools.total_ordering will accept?
[22:29:56] <aphysically> 3) there is now tension between this use of annotations and typing's use of annotations
[22:30:50] *** Joins: CormacAttack (~mac@144.62.50.200)
[22:30:54] <aphysically> this tension caused fears that typing is taking over python to bubble up and has led to quite a long thread on the mailing list where some people on the typing side feel as if unnecessary roadblocks are being put up that are preventing typing from being as ergonomic/easy to use as it could be
[22:31:58] <aphysically> and people skeptical of typing/uninterested side bemoaning typing as invasive to python instruction and possibly now even other parts of the language
[22:32:12] <jinsun> didn't follow the mailing list closely, sometimes I randomly end up there (like if you remind of some topic :D)
[22:32:42] <jinsun> but yeah this kind of discussion is expected
[22:33:06] <aphysically> this is on python-dev; there's not a lot of concrete points you won't have heard before, but just notable this is bubbling up again
[22:33:07] *** Joins: zeev (~zeev@77.137.108.102)
[22:33:26] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[22:33:27] <jinsun> the SC had said they don't plan to have separate syntax for typing right?
[22:34:29] <aphysically> in a recent update the SC explicitly said they don't want to pursue separate syntax for typing yes
[22:34:56] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:34:59] <jinsun> aphysically: this discussion? https://mail.python.org/archives/list/python-dev@python.org/thread/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/
[22:35:17] <aphysically> I will need to find the exact wording, but my reading at the time was it fell short of a declaration of an official policy going forward, but was definitely a rejection for the foreseeable future
[22:35:26] *** Quits: TFKyle (~kyle@64.201.205.70) (Read error: Connection reset by peer)
[22:35:27] <aphysically> (re: no separate syntax of typing)
[22:35:39] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[22:36:14] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:36:16] <zeev> Hi, is there a way to actually change an environment variable of the OS so the change remains in place also after the python script ends? I tried this: os.environ['SOME_VAR'] = "new value"   and   command = os.popen('export SOME_VAR=\"new value\"')  but it doesn't seem to work... any ideas? Thank you!
[22:36:17] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[22:36:27] <aphysically> jinsun: yes that discussion
[22:36:31] *** Joins: cheater (~Username@user/cheater)
[22:37:09] <Forty-Bot> zeev: you can't
[22:37:14] *** Quits: jdmark (~jdmark@user/jdmark) (Read error: Connection reset by peer)
[22:37:25] <Forty-Bot> this is because environments in unix don't modify the parent environment
[22:37:34] <Forty-Bot> and your shell does fork+execve to spawn python
[22:37:41] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Client Quit)
[22:37:49] <zeev> Forty-Bot: is there a workaround?
[22:37:58] <Forty-Bot> so any changes python makes to the environment are visible at most to its subprocesses
[22:38:47] <zeev> ok... but why this doesn't work then: command = os.popen('export SOME_VAR=\"new value\"')  ? Here I do it on the shell level?
[22:38:56] <Forty-Bot> you can do something like `source <(python foo)`
[22:39:04] <Forty-Bot> but of course that's a bashism :)
[22:40:07] <aphysically> jinsun: re: comparable; it's a bit complicated by the way python infers some comparisons I'd have to think about it
[22:40:37] <zeev> another question - is there a way to know whether no arguments were supplied to my script? (I use argparse module for this)
[22:40:53] <jinsun> aphysically: also looks like total_ordering accepts anything right now https://github.com/python/typeshed/blob/master/stdlib/functools.pyi#L47
[22:41:10] <jinsun> that typevar should be bound by some protocol
[22:41:49] <jinsun> well multiple protocols, one for each comparison operator
[22:42:38] *** Joins: Roedy (Roedy@user/roedy)
[22:42:59] *** Quits: paprika (~pepper@user/pepper) (Ping timeout: 252 seconds)
[22:43:39] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[22:44:39] <han-solo> zeev: `len(sys.argv) <= 2` # but with argparse you own't need that, it would automatically show the help no ?
[22:44:46] <han-solo> s/own't/won't/
[22:45:13] <zeev> I have a default value
[22:45:14] <SnoopJ> zeev, when you say "argument" are you talking about positional things, or including --options?
[22:45:17] <aphysically> I'm not sure how resolvable the tension in the annotation space is with other uses
[22:45:24] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[22:45:31] <zeev> positional with a default value...
[22:46:06] <zeev> (I just want to catch the case when default value was used as nothing was provided on the cli)
[22:46:06] <aphysically> I wonder if a better practice going forward would be for tools to use Annotated for other runtime uses since this avoids messing up LSPs and type checkers
[22:46:10] <SnoopJ> zeev, as far as I know, you can't distinguish between default-because-not-supplied and passed-default with the result of the parse. It might be better to choose a sentinel value for the default if you need to do this.
[22:46:29] <zeev> len(sys.argv)
[22:46:30] *** Joins: darksun (~darksun@user/darksun)
[22:46:34] <aphysically> my understanding is other uses don't need to be deprecated currently but we'll have to see what happens
[22:46:34] <zeev> should be different, no?
[22:46:54] <SnoopJ> zeev, if you're touching sys.argv you're already doing an end-run around argparse which seems to make the question moot
[22:47:07] <jinsun> aphysically: is there any good use other than checking/converting types like pydantic and some runtime type checkers do
[22:47:23] <han-solo> s/<=/</
[22:47:50] <aphysically> that's the big one I'm aware of but I'm not an expert
[22:48:00] <aphysically> you can do runtime inspection of annotated fwiw
[22:48:16] *** Joins: vicfred (~vicfred@user/vicfred)
[22:48:24] <SnoopJ> zeev, I usually use default=None to indicate that an argument/option was not specified at invocation time, and then do whatever needs doing with that in the program logic
[22:48:40] <SnoopJ> in the few cases where I use argparse over click, that is
[22:48:54] *** Quits: skipper (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[22:49:14] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[22:49:56] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[22:49:58] <drew> why does [1] * 5 create [1, 1, 1, 1, 1] but [] * 5 creates [] ?
[22:50:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:50:33] <drew> found a stackoverflow answer that says you have to do list comprehension like [[] for _ in range(5)]
[22:50:55] <jinsun> drew: [] has nothing inside it to replicate
[22:51:14] <han-solo> well, you could do `[[]] * 5` but since lists are mutable, that's not probably what you want
[22:52:01] <drew> ah, [[]] is what I want (I think?) I want a list of 5 empty lists that I will then add vals to
[22:52:02] <jinsun> yeah if you just wanted to have [[], [], [], [], []] then [[]] * 5 will do
[22:52:21] <jinsun> but if you mutate those lists you might be surprised by the behavior
[22:52:50] <SnoopJ> [[]]*5 produces 5 references to the same empty list, it is probably not what you wanted.
[22:53:02] <drew> ooh
[22:53:04] <SnoopJ> If you want 5 distinct empty lists, I would spell that `lsts = [[] for _ in range(5)]`
[22:53:25] <drew> that's interesting
[22:53:39] <drew> ok I'll stick to the SO answer, as I DO want 5 distinct lists
[22:53:44] <drew> thanks for the help all
[22:53:57] <SnoopJ> it's kinda confusing: the *N operation gives you N copies of the references inside the list operand
[22:54:18] *** Joins: Narrat (~omnius@p200300df5f3c959d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:54:38] <SnoopJ> so in that case it gives you 5 references to the same list object. this operator is best treated with caution except when the coetnts of the operand are immutable
[22:54:45] <SnoopJ> contents*
[22:55:45] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:56:00] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[22:56:32] <drew> ok, that will be important to internalize
[22:56:53] <drew> what if I did something like [[].copy()] * 5 ?
[22:57:14] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[22:57:16] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[22:57:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:58:18] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[22:58:26] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[22:58:41] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[22:58:42] <drew> hmm that doesn't seem to help
[22:58:56] *** Quits: Andrynet1 (~Andrynet@190.152.203.116) (Ping timeout: 252 seconds)
[22:59:00] <drew> ok, thanks again for the tips. every day's a school day
[22:59:01] <SnoopJ> drew, that makes a list, copies it, then gives you 5 references to the copy
[22:59:11] <drew> ah, that makes sense
[22:59:38] *** Joins: Mindscape (~Lindis@user/lindis)
[22:59:40] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[22:59:41] *** Quits: Bakunin (~Lindis@user/lindis) (Killed (NickServ (GHOST command used by Mindscape)))
[22:59:47] *** Mindscape is now known as Bakunini
[22:59:55] <greentree> has anyone used any totp libs before? is pyotp the recommended one
[23:00:33] *** Bakunini is now known as Bakunin
[23:00:39] <han-solo> `list(itertools.islice(iter(lambda:[], None), 5))` # can't make it shorter ':)
[23:00:50] *** Joins: Andrynet1 (~Andrynet@190.152.203.116)
[23:00:51] <han-solo> or can it
[23:01:02] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:01:09] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[23:01:26] <SnoopJ> han-solo, `[[] for _ in range(5)]` is definitely shorter :P
[23:01:45] <han-solo> SnoopJ: yeah ':)
[23:01:57] *** Joins: node1 (~node1@user/node1)
[23:02:19] <han-solo> other than the list comp, i was wondering if it can be made shorter
[23:02:20] <SnoopJ> although [[], [], [], [], []] is even shorter!
[23:02:25] <han-solo> arbitrary
[23:02:57] <SnoopJ> the comprehension wins out on brevity for N>5 though, and I think is probably more legible for every case except N=1 :P
[23:03:42] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[23:03:50] *** Quits: zeev (~zeev@77.137.108.102) (Quit: zeev)
[23:03:59] <han-solo> :)
[23:04:36] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[23:05:23] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[23:05:34] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:06:05] *** Quits: cosimone (~user@93-47-228-147.ip115.fastwebnet.it) (Ping timeout: 252 seconds)
[23:06:06] <rindolf> away
[23:06:07] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[23:06:25] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[23:06:36] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:07:51] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[23:08:30] *** Joins: halabund (~halabund@192.55.244.3)
[23:08:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:09:11] <halabund> I have a list with repeating values, e.g. [1,1,3,2,2,1,3,2,3,3,1]. Is there a simple way to collect the list indices which have the same value? Is there a standard function that does this, or significantly simplifies implementing this?
[23:09:32] <han-solo> Okay, even if could alias itertools to `i` or something, it's still 8 characters longer...
[23:09:37] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[23:10:10] <Swayze> halabund: provide examples of yourinput and expected output on the link in the topic
[23:10:19] <Swayze> then reask your question and include the link
[23:10:29] <Swayze> please and ty
[23:10:40] <halabund> Swayze: Do you mean the first link?
[23:10:48] <yitz> halabund:  for i, j in enumerate(list): indices[j].append(i)
[23:10:49] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[23:11:00] <Swayze> ok seems yitz doesnt need it
[23:11:00] <yitz> indices = collections.defaultdict(list)
[23:11:02] <han-solo> halabund: an example output of what you expect from that input
[23:11:02] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 252 seconds)
[23:11:04] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[23:11:04] <SnoopJ> halabund, I would write a function doing basically that ^
[23:11:17] *** Quits: dangrenier83_ (~pi@user/dangrenier83) (Quit: WeeChat 2.3)
[23:11:24] <halabund> yitz: Thanks, I was just going to ask how to initialize 'indices', but I see defaultdict does that
[23:11:26] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:11:34] <halabund> this answers my question
[23:11:46] <yitz> If you don't care for the actual values, just use indices.values()
[23:11:56] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[23:12:03] <yitz> Erm. That sentence was not well formed.
[23:12:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[23:12:17] *** Joins: l4yer (~l4yer@217-64-151-10.pool.ovpn.com)
[23:12:19] <SnoopJ> defaultdict(list) is a frequently handy trick, yea
[23:12:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:13:01] <yitz> It makes code so much nicer
[23:13:08] *** Joins: kosh (~kosh@user/kosh)
[23:13:11] <yitz> Also defaultdict(int) for counting
[23:13:41] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[23:13:41] <SnoopJ> I usually use collections.Counter for counting, but probably about the same thing
[23:14:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:14:10] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:14:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:14:56] <yitz> I typically only use Counter when I can initialize it with all the data. If I'm going to be adding elements inside a for-loop, I don't use it nearly as often
[23:15:40] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[23:15:56] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[23:16:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-50fd-43b5-7857-81ac.res6.spectrum.com)
[23:16:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:16:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:18:06] <han-solo> `{v: [x[0] for x in grp] for v, grp in itertools.groupby(sorted(enumerate(x), key=lambda x: x[1]), key=lambda x: x[1]
[23:18:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:18:13] <han-solo> )}` # you could obfuscate it :p
[23:18:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:18:50] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[23:19:18] <han-solo> https://pbs.twimg.com/media/Cdr8ApUWIAA9eAS?format=jpg&name=small
[23:20:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:20:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:20:36] <yitz> Oof
[23:21:02] *** Joins: MinimotoMusashi (~MinimotoM@169.sub-174-246-198.myvzw.com)
[23:21:11] <MinimotoMusashi> Hilo all, I hope that everyone is doing well.
[23:21:41] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[23:21:41] *** Quits: Strom (strom@fedora/strom) ()
[23:21:50] *** Joins: cheater (~Username@user/cheater)
[23:22:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:22:14] <MinimotoMusashi> Is it a bad idea to have implementation logic inside the __init__ function
[23:22:17] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-153.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:22:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:22:45] <SnoopJ> MinimotoMusashi, "doing work" in __init__ is generally considered a bad idea, but there's a lot of room for opinion about what constitutes work
[23:23:14] *** Joins: Strom (strom@fedora/strom)
[23:23:22] <moonmoon> imo if the work is required for the object to be "valid" or "fully initialised" then putting it in __init__ is fine
[23:23:58] <yitz> MinimotoMusashi: init should do validation and any needed once-off setup to make things ready
[23:24:04] <SnoopJ> yea, the convention is generally that __init__ does whatever it takes to make the object 'ready'
[23:24:07] <han-solo> if work is required, then i think, it's better to `Cls.from_stuff()` is nice ?
[23:24:07] *** Joins: parv (~quass@user/parv)
[23:24:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:24:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:24:49] <yitz> han-solo: Eh.... from_stuff() usually parsing a specific format into a generic format and calls init with it
[23:25:19] <SnoopJ> yitz, I think their point is that the parsing would constitute extraneous work
[23:25:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[23:25:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: rebooting)
[23:25:49] * yitz shrugs
[23:25:53] *** Quits: Auron (Auron956@user/auron) (Ping timeout: 252 seconds)
[23:26:05] <han-solo> just mean, a class method with a proper name for the work
[23:26:25] *** Joins: gitargy (~gitargy@76.78.94.79)
[23:26:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:26:34] <yitz> If the class is only/always created from a specific format, I'd just put that in init. I'd only use from_X when the class is usually generated without X or there's also a Y
[23:26:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:28:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:29:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:29:09] *** Joins: Auron (~Auron956@user/auron)
[23:29:36] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:29:49] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[23:29:58] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:30:09] *** Joins: bloody (~bloody@user/bloody)
[23:30:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:31:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:31:23] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 252 seconds)
[23:31:41] *** Quits: bloody (~bloody@user/bloody) (Client Quit)
[23:32:02] *** Joins: bloody (~bloody@user/bloody)
[23:33:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:33:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:34:36] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[23:35:10] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[23:35:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:35:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:37:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:37:26] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:2b0f:9fce:b8bc:dd16) (Ping timeout: 252 seconds)
[23:37:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:38:21] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 252 seconds)
[23:38:25] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:556f:fcf6:d5a2:be65)
[23:39:30] *** Quits: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-00c4-ed3c-3f47-2b1e.res6.spectrum.com) (Quit: Konversation terminated!)
[23:39:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:39:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:40:52] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[23:41:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:41:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:41:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:43:33] *** Joins: fikran (~fikran@user/fikran)
[23:43:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:44:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:45:19] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[23:45:38] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[23:45:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:46:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:47:18] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:47:54] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:48:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:48:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:48:41] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[23:49:04] *** Joins: jay-m126 (~jay-m@129.0.76.222)
[23:49:09] *** Joins: jay-m126_ (~jay-m@129.0.76.222)
[23:50:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:50:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:50:25] <jinsun> aphysically: I was going through that thread and I just noticed a random thing Guido said "discoverable with a simple Bing query", Microsoft has converted him :D
[23:50:34] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Client Quit)
[23:50:43] <han-solo> lol
[23:51:38] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[23:52:24] <SnoopJ> yitz, right, if a class is most meaningfully described by some set of parameters, those are probably what is in __init__'s signature
[23:52:53] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[23:57:12] *** Joins: skeemer (~skeemer@h-178-174-193-227.NA.cust.bahnhof.se)
[23:57:27] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:57:51] <skeemer> hello all, i am trying to learn some functional programming by using python... i was wondering what is a way a functional programmer would approach this with python? https://stackoverflow.com/questions/35463711/how-to-pass-down-multiple-parameter-through-several-functions
[23:58:05] <skeemer> i mean how do i share parameters among functions if i had to avoid using classes?
[23:59:21] <aphysically> jinsun: I was messing with today's advent of code
[23:59:46] *** Joins: jdmark (~jdmark@user/jdmark)
[23:59:57] <aphysically> python isn't really good for complicated functional stuff cause you can't write too much on one line, but still you can get pretty far
[23:59:58] <SnoopJ> skeemer, A_1 can be written: `def A_1(*args, **kwargs): A_2(*args, **kwargs)`
