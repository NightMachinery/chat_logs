[00:01:50] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[00:03:19] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:04:36] *** Trieste_ is now known as Trieste
[00:06:15] *** Quits: thebombzen (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Quit: attack.c:4: main: Assertion `I_can_beat_that_monster' failed. Aborted (core dumped))
[00:09:23] *** Joins: Adois (~Adoi@user/adoi)
[00:19:57] *** Quits: beshr (~beshr@user/beshr) (Remote host closed the connection)
[00:20:15] *** Joins: supastupid12 (~supastupi@c-73-61-74-18.hsd1.nh.comcast.net)
[00:26:11] *** Joins: mago (~mago@87.125.52.230)
[00:26:18] <mago> Hello
[00:26:31] <mago> I want to clone a subfile of a git repository, its a zip file within a folder of the git..
[00:27:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[00:29:29] *** Quits: dsrt^ (~dsrt@12.16.129.111) (Ping timeout: 248 seconds)
[00:30:51] *** Joins: dsrt^ (~dsrt@12.16.129.111)
[00:31:07] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:32:23] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 250 seconds)
[00:32:25] *** Joins: holmes (~holmes@user/holmes)
[00:32:27] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[00:34:26] *** Quits: mago (~mago@87.125.52.230) (Quit: Client closed)
[00:35:18] <yourfate> you want to clone just one file from a repo?
[00:36:29] <BtbN> Just download it from whatever web-service the repo uses?
[00:36:36] *** Quits: rahl (~rahl@102.114.234.184) (Ping timeout: 250 seconds)
[00:36:46] <yourfate> if it's hosted on a web service, like github/gitlab it's easier to just download it with curl or wget for example
[00:36:49] *** Quits: dtminus (~dtminus@ip5f5ac80d.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.0)
[00:36:55] <yourfate> just get the raw url to that file
[00:37:40] *** Joins: APic (apic@apic.name)
[00:38:39] *** Joins: rahl (~rahl@102.114.47.158)
[00:40:25] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[00:41:21] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Read error: Connection reset by peer)
[00:42:17] *** Joins: deltab (~deltab@user/deltab)
[00:42:56] *** emba is now known as amba
[00:44:17] *** amba is now known as meem
[00:44:28] *** Joins: hbautista (~hbautista@187.171.122.100)
[00:45:23] *** Quits: Adois (~Adoi@user/adoi) (Read error: Connection reset by peer)
[00:51:11] *** Joins: mago (~mago@87.125.52.230)
[00:51:25] *** Parts: mago (~mago@87.125.52.230) ()
[00:52:41] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[00:58:36] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[00:59:25] *** meem is now known as emby
[01:01:26] *** kevr is now known as deadvr
[01:02:23] *** deadvr is now known as kevr
[01:02:31] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 252 seconds)
[01:03:04] *** Quits: jpnurmi (jpnurmi@hilla.kapsi.fi) (Remote host closed the connection)
[01:04:53] *** Quits: theoceaniscool (~theoceani@213.94.16.93) (Ping timeout: 250 seconds)
[01:05:03] *** Joins: Adoi (~Adoi@user/adoi)
[01:05:04] *** Joins: Adois (~Adoi@user/adoi)
[01:08:07] *** Joins: jpnurmi (jpnurmi@hilla.kapsi.fi)
[01:08:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:8973) (Ping timeout: 250 seconds)
[01:09:10] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[01:09:10] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[01:09:43] *** Joins: Adoi (~Adoi@user/adoi)
[01:10:56] *** Quits: jpnurmi (jpnurmi@hilla.kapsi.fi) (Remote host closed the connection)
[01:11:25] *** Joins: jpnurmi (jpnurmi@hilla.kapsi.fi)
[01:12:10] *** Quits: Adoi (~Adoi@user/adoi) (Client Quit)
[01:13:04] *** Joins: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[01:18:26] *** Joins: gast0n (~g4570n@user/gast0n)
[01:19:45] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[01:21:13] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[01:23:50] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 250 seconds)
[01:26:58] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:30:39] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Client Quit)
[01:30:58] <Soni> what extraneous files can one put in a .git repo?
[01:30:59] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[01:31:09] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:31:39] <holmes> can i modify a commit message that's already been pushed to a remote?
[01:31:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:45] *** Quits: another| (~another@wireguard/tunneler/another) (Quit: Byeee)
[01:36:14] *** Joins: codebam1 (~codebam@user/codebam)
[01:36:15] *** Quits: codebam1 (~codebam@user/codebam) (Client Quit)
[01:37:40] *** Joins: hbautista_ (~hbautista@187.171.122.100)
[01:38:16] *** Quits: hbautista (~hbautista@187.171.122.100) (Ping timeout: 252 seconds)
[01:40:36] <dodo> holmes: you shouldn't
[01:41:31] <nedbat> holmes: you can, but it rewrites history, which can be problematic
[01:41:56] <holmes> I agree, in a real-world scenario I wouldn't, but this is specifically for a silly autograder thing for a class unfortunately
[01:42:30] <nedbat> holmes: git rebase -i    # a good tool that can do many things, including this
[01:42:51] <holmes> When I do that (following https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History and using reword) it appears to then place the commits out of order
[01:43:21] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[01:43:45] <holmes> thank you both by the way
[01:44:56] <nedbat> holmes: can you show us the before and after of the rebase?
[01:50:32] <osse> Soni: what do you mean? you can put anything you like
[01:50:41] <holmes> @nedbat i'll try, one sec
[01:50:45] <osse> or do you mean inside the .git dir?
[01:50:49] <Soni> osse: in the .git?
[01:51:06] <Soni> the idea was to have foo.git/browse/*.html
[01:51:23] <osse> go for it
[01:52:43] <osse> man gitrepository-layout explains what files and directories git itself uses
[01:52:43] <gitinfo> the gitrepository-layout manpage is available at https://gitirc.eu/gitrepository-layout.html
[01:52:55] <osse> as long as you don't interfere with that you should be ok
[01:54:11] <holmes> @nedbat can I DM you a gist? I'm not sure what I'm allowed to share publicly
[01:54:24] <nedbat> holmes: ok
[01:58:42] <Soni> index.html should be safe too?
[02:00:01] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[02:01:20] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[02:03:44] *** Joins: Samian (~Sami@163.114.130.6)
[02:05:13] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 252 seconds)
[02:05:46] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[02:06:16] <osse> yes
[02:08:33] *** Joins: charly (~charly@2a01cb040a52f90000000000abac0043.ipv6.abo.wanadoo.fr)
[02:08:54] *** Joins: kingjulian (~kingjulia@41.1.76.76)
[02:11:47] *** Quits: Arokh (~MoveAlong@ip-88-153-210-106.hsi04.unitymediagroup.de) (Ping timeout: 240 seconds)
[02:15:50] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 250 seconds)
[02:17:31] *** Joins: furrymcgee (~devuan@31.179.186.66)
[02:22:23] *** Quits: furrymcgee (~devuan@31.179.186.66) (Client Quit)
[02:23:27] *** Joins: linguist (~brunodOut@170.84.57.174)
[02:24:45] *** Joins: schemefusion (~schemefus@fedora/twohot)
[02:28:50] *** Quits: hbautista_ (~hbautista@187.171.122.100) (Ping timeout: 250 seconds)
[02:31:47] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:32:48] *** Joins: jrm (~jrm@156.34.187.65)
[02:33:15] *** Quits: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Quit: WeeChat 3.2)
[02:38:23] *** Quits: dsrt^ (~dsrt@12.16.129.111) (Remote host closed the connection)
[02:43:21] *** Quits: schemefusion (~schemefus@fedora/twohot) (Ping timeout: 248 seconds)
[02:43:35] *** Joins: schemefusion (schemefusi@fedora/twohot)
[02:46:48] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[02:48:00] *** Quits: holmes (~holmes@user/holmes) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:15] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[03:06:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Ping timeout: 240 seconds)
[03:08:46] <Soni> hmm, besides git clone, how else can you output objects?
[03:11:17] *** Joins: Betal (~Betal@user/betal)
[03:13:27] *** Joins: brunodOut (~brunodOut@170.84.57.174)
[03:15:25] *** Joins: schmillin__ (~schmillin@user/schmillin)
[03:16:19] <Soni> and can you run update-server-info in post-receive?
[03:17:16] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 252 seconds)
[03:17:47] *** Quits: schmillin_ (~schmillin@user/schmillin) (Ping timeout: 240 seconds)
[03:19:22] *** Quits: preisi (~preisi@80.241.218.130) (Quit: WeeChat 2.3)
[03:19:28] *** Joins: another (~another@wireguard/tunneler/another)
[03:20:36] *** Joins: preisi (~preisi@prei.si)
[03:21:40] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 252 seconds)
[03:21:40] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 240 seconds)
[03:21:50] *** Quits: another (~another@wireguard/tunneler/another) (Client Quit)
[03:22:10] *** Joins: another (~another@wireguard/tunneler/another)
[03:22:31] *** Quits: Samian (~Sami@163.114.130.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:24:29] *** Quits: another (~another@wireguard/tunneler/another) (Client Quit)
[03:24:49] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[03:24:51] *** Quits: schemefusion (schemefusi@fedora/twohot) (Ping timeout: 250 seconds)
[03:26:30] *** Joins: masoudd_ (~masoudd@user/masoudd)
[03:28:59] *** Joins: polyrob_ (~rob@user/polyrob)
[03:29:10] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 240 seconds)
[03:29:22] *** polyrob_ is now known as polyrob
[03:29:40] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[03:31:27] *** Quits: kingjulian (~kingjulia@41.1.76.76) (Ping timeout: 240 seconds)
[03:32:57] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[03:35:41] *** Quits: masoudd_ (~masoudd@user/masoudd) (Ping timeout: 250 seconds)
[03:40:53] *** Joins: masoudd (~masoudd@user/masoudd)
[03:44:01] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:55:04] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Ping timeout: 250 seconds)
[03:55:46] *** Quits: hwrd (sid64402@tooting.irccloud.com) (Ping timeout: 252 seconds)
[03:56:36] *** Joins: another (~another@wireguard/tunneler/another)
[03:57:32] *** Joins: zebrag (~chris@user/zebrag)
[03:57:45] *** Joins: hwrd (sid64402@tooting.irccloud.com)
[03:58:05] *** Joins: Pent (sid313808@tooting.irccloud.com)
[03:59:09] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[03:59:32] *** brunodOut is now known as linguist
[04:03:18] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Ping timeout: 250 seconds)
[04:03:21] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 248 seconds)
[04:09:05] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[04:10:49] *** Quits: Pent (sid313808@tooting.irccloud.com) (Ping timeout: 248 seconds)
[04:13:42] *** Quits: hsiktas (sid224847@id-224847.tooting.irccloud.com) (Ping timeout: 250 seconds)
[04:14:18] *** Joins: Pent (sid313808@tooting.irccloud.com)
[04:18:24] *** Joins: hsiktas (sid224847@tooting.irccloud.com)
[04:18:31] *** Joins: Samian (~Sami@163.114.130.6)
[04:19:09] *** Joins: ferdna (~ferdna@user/ferdna)
[04:19:53] *** Quits: hsiktas (sid224847@tooting.irccloud.com) (Max SendQ exceeded)
[04:22:32] *** Joins: hsiktas (sid224847@tooting.irccloud.com)
[04:33:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[04:36:47] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 250 seconds)
[04:37:55] *** Joins: hubble (~hubble@user/hubble)
[04:38:59] *** Joins: Crassus (~Crassus@user/crassus)
[04:41:10] *** Quits: thiago (~thiago@2601:1c0:4501:635c:4c69:21e3:938c:be54) (Ping timeout: 240 seconds)
[04:44:34] *** Joins: bambanxx (~bambanx@207.248.194.206)
[04:49:07] *** Quits: nobody_ (~nobody@host-79-24-179-239.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[04:50:46] *** Quits: xx (~xx@user/xx) (Ping timeout: 252 seconds)
[04:50:49] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:51:02] *** Joins: JanC (~janc@user/janc)
[04:54:57] <masoudd> http://ix.io/3xgx  What is this graph called and how can I get git to draw it for me for 2 arbitrary commits?
[04:55:24] <osse> masoudd: it's a diffstat
[04:55:36] <osse> masoudd: try  git show --stat somecommithere
[04:56:47] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:57:46] <masoudd> Thanks
[04:57:58] <osse> I guess this is what you meant:  git diff --stat fromcommit tocommit
[04:58:49] <Soni> so how do you turn a .git into a website?
[04:59:02] <Soni> there doesn't seem to be any way to just dump all the git objects somewhere
[04:59:10] <osse> !deploy
[04:59:10] <gitinfo> Git is not a deployment tool, but you can build one around it (in simple environments) or use it as an object store(for complex ones). Here are some options/ideas to get you started: http://gitolite.com/deploy.html
[04:59:19] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 250 seconds)
[04:59:19] <Soni> no, not deploy
[04:59:26] <Soni> just browse
[04:59:41] <osse> then I don't understand what you mean
[05:01:01] <Soni> y'know, like turning the .git into html?
[05:01:09] <bremner> !cgit
[05:01:09] <gitinfo> http://git.zx2c4.com/cgit/about/ web interface (cgi) for git repositories, written in C
[05:01:14] <bremner> e.g.
[05:01:26] <osse> man git-instaweb
[05:01:26] <gitinfo> the git-instaweb manpage is available at https://gitirc.eu/git-instaweb.html
[05:01:43] <Soni> most ppl would use CGI or something for that, but what if you don't want to
[05:02:26] <Soni> what if you just wanna generate static pages and use a known good static HTTP server with a known good config that you can trust not to have RCEs everywhere
[05:02:48] <osse> does your git repo contain a website and you want to view it?
[05:03:02] <osse> or do you mean a web interface for the repo itself?
[05:04:22] <Soni> like a strictly static pages alternative to github
[05:04:33] <masoudd> .git is a directory, html is a markup language. How do you want to map one to the other
[05:04:51] <Soni> just give us a command to get rid of all the pack files
[05:05:02] <masoudd> rm does the job?
[05:05:06] <Soni> not like that
[05:05:09] <osse> You're speaking in riddles
[05:05:18] <osse> I'm too tired to guess what you want
[05:05:20] <Soni> how do you turn off pack files
[05:05:30] <bremner> is this a new question?
[05:05:34] <Soni> how do you make a loose objects only repo
[05:06:36] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[05:08:06] <osse> man git-unpack-objects
[05:08:06] <gitinfo> the git-unpack-objects manpage is available at https://gitirc.eu/git-unpack-objects.html
[05:08:31] *** Quits: hubble (~hubble@user/hubble) (Ping timeout: 256 seconds)
[05:09:29] <Soni> why are we even trying to make our repos browseable without running additional server-side code on web requests
[05:09:54] <bremner> "we" are not.
[05:10:31] <Soni> *sigh*
[05:11:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Ping timeout: 250 seconds)
[05:11:43] <osse> note that even loose objects are zipped, so browsing a plain .git dir would be fairly useless
[05:11:43] <Soni> how do you make something like this, basically, but without any javascript, by pre-generating all the pages on the server: https://creationix.github.io/http-clone/?https://soniex2.autistic.space/git-repos/ganarchy.git
[05:11:47] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[05:13:41] <osse> that just looks like the output of git log -1 --format='<html>lots of placeholders here. parent: %p...</html>'
[05:14:20] <Soni> you can click the hashes and it does funny stuff
[05:14:31] <Soni> "tree" is an interesting one
[05:16:16] *** Joins: linguist (~brunodOut@170.84.57.174)
[05:18:11] <osse> Do basically the same thing, except in a different language and pretending all possible links were clicked and dump the resulting html into files?
[05:18:22] <Soni> at least some way to dump all the blobs would be nice
[05:18:39] <Soni> what?
[05:18:43] <Soni> no
[05:18:52] <Soni> *sigh*
[05:19:04] <osse> you can sigh as much as you want
[05:20:08] <Soni> `git show` is neat but how do you use it with `bash` to get all the blobs into a nice blobs/4e/14a8932b000etc format?
[05:23:08] <Soni> would cgit work? yeah. would gitea work? yeah. they're not the desired solution because they involve network interaction. they're interactive. they take in HTTP and put out HTTP. they don't just take in git and put out HTML.
[05:23:51] <Soni> so while they would technically work, they're not appropriate
[05:25:34] *** Joins: jazzy (~jaziz@2600:380:4671:e333:dd61:8951:cd4d:7b7a)
[05:25:39] <osse> http://sprunge.us/Br1CgX
[05:27:03] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 250 seconds)
[05:29:40] *** Joins: remyabel (remyabel@user/remyabel)
[05:30:02] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[05:35:24] *** Joins: alexreg (~alexreg@2a02:c7f:ed2c:a00:64f8:9ab9:5e14:bbf5)
[05:36:58] <alexreg> Hello. I get the following error message when running some Git commands:
[05:36:59] <alexreg> ListUtil.c: loadable library and perl binaries are mismatched (got handshake key 0xf880080, needed 0xc400080)
[05:37:04] <alexreg> any ideas how to fix this?
[05:37:40] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[05:41:43] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[05:41:47] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[05:49:45] *** Quits: linguist (~brunodOut@170.84.57.174) (Killed (NickServ (GHOST command used by brunodOut)))
[05:50:03] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[05:50:29] *** Joins: linguist (~brunodOut@170.84.57.174)
[06:04:20] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[06:04:38] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:05:00] <mackerman> alexreg: That is a perl error. Try #perl channel and sort out your perl install
[06:05:34] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[06:07:09] *** Joins: 047AADQBL (~brunodOut@170.84.57.174)
[06:10:40] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 240 seconds)
[06:14:34] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[06:15:03] *** Joins: psyc0ld (~psyc0ld@192.222.194.121)
[06:18:07] *** Quits: shailangsa (~shailangs@host86-185-102-120.range86-185.btcentralplus.com) (Ping timeout: 240 seconds)
[06:18:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:19:38] *** Quits: supastupid12 (~supastupi@c-73-61-74-18.hsd1.nh.comcast.net) (Quit: Connection closed)
[06:20:14] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[06:20:46] *** Joins: keypusher (keypusher@user/keypusher)
[06:25:33] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[06:25:55] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[06:28:12] <alexreg> mackerman, well, it's about the interaction between, Git and Perl to be fair.
[06:28:43] <alexreg> and since I don't have any problems with Perl elsewhere...
[06:28:51] <mackerman> Yes, but that is List::Util  C code not loading.
[06:29:20] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[06:29:20] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 250 seconds)
[06:29:45] <alexreg> oh, so the C code is in that Perl module?
[06:29:51] <alexreg> sorry, I see.
[06:31:50] *** Joins: jaggz (~jaggz@user/jaggz)
[06:32:03] <mackerman> Searching the internet for that error finds various people with broken Perl.
[06:32:18] <mackerman> And hints that List::Util is an XS module.
[06:32:37] *** Joins: ASDX (~ASDX@159.196.248.157)
[06:32:47] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 240 seconds)
[06:34:49] *** Quits: ASDX___ (~ASDX@159.196.248.157) (Ping timeout: 248 seconds)
[06:37:37] *** Joins: shailangsa (~shailangs@host86-186-127-196.range86-186.btcentralplus.com)
[06:39:02] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[06:42:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:42:39] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (zirconium.libera.chat (Nickname regained by services)))
[06:42:39] *** finn_elija is now known as FinnElija
[06:43:31] *** Quits: bambanxx (~bambanx@207.248.194.206) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:44:56] *** Joins: bambanxx (~bambanx@207.248.194.206)
[06:46:01] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 248 seconds)
[06:48:24] *** Joins: gnoo (~gnoo@user/gnoo)
[06:49:22] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[06:49:40] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:52:33] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[06:52:35] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:52:51] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:56:00] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[06:56:35] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:58:55] *** Joins: lgc (~lgc@user/lgc)
[06:59:25] *** Quits: bambanxx (~bambanx@207.248.194.206) (Quit: Textual IRC Client: www.textualapp.com)
[07:07:31] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[07:11:37] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[07:11:55] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[07:12:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Ping timeout: 240 seconds)
[07:20:28] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[07:20:53] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 258 seconds)
[07:21:21] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[07:24:36] *** Joins: bin101 (~bin101@user/bin101)
[07:29:28] *** Joins: subopt (~subopt@2603-8081-2302-459a-d97d-f4a5-6519-96e0.res6.spectrum.com)
[07:30:16] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[07:35:28] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[07:39:21] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[07:41:30] *** Quits: subopt (~subopt@2603-8081-2302-459a-d97d-f4a5-6519-96e0.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:41:47] *** Quits: 047AADQBL (~brunodOut@170.84.57.174) (Read error: Connection reset by peer)
[07:41:49] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[07:43:56] *** Joins: thiago (~thiago@2601:1c0:4501:635c:4c69:21e3:938c:be54)
[07:48:18] *** Joins: keypushe- (keypusher@user/keypusher)
[07:48:58] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[07:49:58] *** Quits: jvh (~jvh@user/jvh) (Quit: Leaving)
[07:51:31] *** keypushe- is now known as keypusher
[07:51:55] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[07:53:42] *** Quits: psyc0ld (~psyc0ld@192.222.194.121) (Remote host closed the connection)
[07:53:52] *** Joins: thebombzen (~thebombze@587232575.guest.umich.net)
[07:54:45] *** Joins: bambanxx (~bambanx@207.248.194.206)
[07:58:17] *** Joins: duoi (~duoi@user/duoi)
[07:58:21] <duoi> hey
[07:58:37] <duoi> not sure what im doing wrong, i keep getting git@github.com: Permission denied (publickey)
[07:58:57] <duoi> its definitely pointing to the right key in my git config, and ive updated the key on github twice
[07:59:07] <duoi> this was working 2-3 weeks ago
[07:59:22] <duoi> any ideas on what i should try?
[08:00:20] <gnoo> duoi: ssh -i ~/.config/id_rsa_key_you_used git@github.com
[08:00:27] <gnoo> see if this works
[08:03:06] <duoi> gnoo that did work, it correctly authed me
[08:03:26] <duoi> but doing a follow up git fetch gave me the permission denied error
[08:03:40] <remyabel> is the remote URL https or git
[08:03:43] <gnoo> in ~/.ssh/config, have github.com use that key
[08:03:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[08:03:54] *** Joins: pulse (~pulse@user/pulse)
[08:03:56] <duoi> remyabel ive tried with both
[08:04:04] <remyabel> does it happen with all repos
[08:04:22] *** Quits: bambanxx (~bambanx@207.248.194.206) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:04:54] <duoi> gnoo its the first entry in there, looks okay to me https://dpaste.org/Jy9o
[08:05:06] <duoi> remyabel i havent tried other github repos, let me try now
[08:06:16] *** Joins: bambanxx (~bambanx@207.248.194.206)
[08:06:23] <duoi> remyabel other repos are working
[08:07:12] <remyabel> show git remote show origin
[08:07:37] <duoi> remyabel git@github.com: Permission denied (publickey).
[08:07:54] <remyabel> weird
[08:08:02] <duoi> right
[08:08:10] <duoi> the only quirk to this is that its a private github repo
[08:08:17] <remyabel> cat .git/config
[08:08:25] <duoi> im not sure if that would affect it though, i should be able to access it
[08:08:30] <duoi> one sec
[08:09:26] <duoi> remyabel nothing stands out https://dpaste.org/LStL#
[08:10:26] <gnoo> for other repos, you used ssh right?
[08:10:40] <remyabel> do you own the private repository
[08:11:27] <duoi> gnoo i believe so
[08:11:28] <duoi> remyabel yeah, i just made it about 15 minutes ago
[08:11:49] <duoi> gnoo i believe password auth is deprecated in github now so it would have to use ssh
[08:11:56] <remyabel> so you managed to successfully cloned but you can't do anything else?
[08:12:18] <duoi> remyabel no, i cant clone at all. i did git init and set up what i needed to after i wasnt able to clone.
[08:12:28] <duoi> ...in an attempt to try to make it work
[08:12:52] <remyabel> so you can do ssh -T git@github.com successfully and in the github interface it shows "key last used within week"?
[08:13:46] <remyabel> try this GIT_SSH_COMMAND="ssh -vvv" git clone repo and see if there's any error messages
[08:13:54] <duoi> remyabel doing that returns the permission denied error
[08:14:04] <duoi> the key has never been used in the interface apparently
[08:14:14] <remyabel> if you can't authenticate via ssh -T then it means your key isn't being used
[08:14:21] <duoi> thats odd
[08:14:49] <remyabel> try ssh-add your_key
[08:14:51] <remyabel> to cache the key
[08:15:41] <gnoo> GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa__ " ?
[08:16:08] <gnoo> i still think it is ssh config given ssh -i worked
[08:17:26] <duoi> i got it
[08:17:33] <duoi> there was a ~/.ssh 2/ directory for whatever reason
[08:18:05] <duoi> so it worked when i explicitly set the path like you asked at :30:19 gnoo but it wasnt auto-detecting that key
[08:18:16] <duoi> still not sure why, or how
[08:18:34] <gnoo> so in ~/.ssh/config, the first line of Host, set that to github.com
[08:19:13] <duoi> gnoo do you mean HostName? it was set to github.com
[08:19:21] <gnoo> no, Host
[08:19:29] <duoi> oh
[08:19:40] <duoi> ill give it a try
[08:19:44] <duoi> either way im unblocked now
[08:19:53] <duoi> thanks a lot for your help gnoo and remyabel, its really appreciated
[08:20:09] <gnoo> you set as an alias to something else. if you used that then the config would have used, but git uses git@github.com not your alias
[08:20:17] <duoi> i see
[08:21:52] <gnoo> duoi: also in the config you used user as something else, set that to git
[08:23:17] <gnoo> it should be simple like 'Host <domain here> \n\t HostName <domain again> \n\t user git \n\t IdentityFile ~/.ssh/id_rsa_things' and nothing else
[08:23:56] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[08:24:06] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[08:25:10] *** Quits: alexreg (~alexreg@2a02:c7f:ed2c:a00:64f8:9ab9:5e14:bbf5) (Quit: Textual IRC Client: www.textualapp.com)
[08:26:35] *** Quits: bambanxx (~bambanx@207.248.194.206) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:30:10] *** Joins: Corvus (~SubZero@user/subzero)
[08:30:35] <duoi> i see
[08:31:07] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[08:31:12] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[08:33:35] *** Joins: average (uid473595@user/average)
[08:33:42] <Corvus> Hey, guys. I have a git tree and I'm trying to extract the work from commitA to commitB into a patch. So, what I'm doing is git diff A B, but the resulting patch doesn't include A. It includes everything from A+1 to B.
[08:33:52] <Corvus> What am I doing wrong?
[08:37:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:40:38] *** Joins: bambanxx (~bambanx@207.248.194.206)
[08:41:29] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[08:43:08] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[08:44:14] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:45:51] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[08:48:07] *** Quits: thiago (~thiago@2601:1c0:4501:635c:4c69:21e3:938c:be54) (Ping timeout: 250 seconds)
[08:49:11] *** Joins: vicfred (~vicfred@user/vicfred)
[08:55:24] <gnoo> use A^
[08:56:21] <Corvus> what's A^?
[08:57:13] <gnoo> it represents one commit before A
[08:57:17] <Corvus> if you mean the commit preceding A, I tried that. It gives me 1.2 millions of extra stuff
[08:57:49] <Corvus> 1.3M almost
[08:58:09] <Corvus> while the target piece is only 30K lines
[08:58:31] *** Quits: bambanxx (~bambanx@207.248.194.206) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:59:10] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 240 seconds)
[08:59:13] <Corvus> I can show you the repo on github, if that helps
[08:59:32] <gnoo> i don't really know git that much, someone else might help you better :)
[08:59:40] <Corvus> Okay
[09:00:40] *** Quits: welrmaron (~welrmaron@sigterm.xyz) (Ping timeout: 240 seconds)
[09:00:42] <Corvus> I mean, I can achieve the goal by just doing git show A, then it looks like I'm getting the whole piece in 2 patches.
[09:01:00] <Corvus> But I'd like to know how to do it properly
[09:02:10] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:03:09] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:03:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:06:16] *** Joins: adlternative (~adl@117.32.216.79)
[09:07:36] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[09:07:42] <quesker> what he said seems to work    mkdir foo; cd foo; git init . ; echo initial commit > foo; git add foo; git commit -m "initial commit"; echo added A >> foo; git commit -a -m "added A"; git tag A;echo added B >> foo; git commit -a -m "added B" ; git tag B; echo added C >> foo; git commit -a -m "added C"; git tag C; git diff A^ B
[09:08:19] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[09:08:29] *** Quits: schmillin__ (~schmillin@user/schmillin) (Ping timeout: 250 seconds)
[09:08:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[09:09:46] <Corvus> Oh! You mean literally adding ^ to A. :-D I was trying to specify the preceding commit.
[09:09:54] *** Gustavo6046_ is now known as Gustavo6046
[09:10:25] <Corvus> ^ actually seems to work!
[09:11:07] <Corvus> quesker: gnoo: thanks, guys!
[09:12:17] <quesker> :)
[09:12:40] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 240 seconds)
[09:12:41] *** Joins: Drek45 (~jrept371@212.102.58.170)
[09:13:08] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Ping timeout: 250 seconds)
[09:13:18] <rewt> that also means you didn't specify the preceding commit, but some other commit
[09:13:38] <rewt> specifying the commit immediately before A is the same as using A^
[09:14:51] <Corvus> well, I specified the commit that is according to github, directly preceding A.
[09:14:57] <Corvus> It might be wrong
[09:16:04] <rewt> does github show the actual git history?
[09:16:04] *** Quits: ZachGibbens (~ZachGibbe@user/zachgibbens) (Read error: Connection reset by peer)
[09:16:20] *** Joins: ZachGibbens (~ZachGibbe@user/zachgibbens)
[09:17:07] <Corvus> I might've been misled by github, besides, they are doing some kind of weird (to me) shenanigans. Merging branches somehow, importing tags that don't end up imported. It's all very strange to me
[09:17:22] *** Joins: hbautista_ (~hbautista@187.171.122.100)
[09:17:26] <Corvus> rewt: well, yeah https://github.com/Paragon-Software-Group/linux-ntfs3/commits/master?before=b8155e95de38b25a69dfb03e4731fd6c5a28531e+210&branch=master it shows something
[09:19:47] *** Joins: schmillin (~schmillin@user/schmillin)
[09:20:21] <Corvus> I suspect it's not in the order the actual git log is going, but rather just commits sorted by time. And I'm not sure if that could be different, but it sure looks like it is
[09:20:26] <rewt> in your case, what was A, and which commit did you try as its parent?
[09:21:04] *** Quits: schmillin (~schmillin@user/schmillin) (Remote host closed the connection)
[09:21:15] <Corvus> A is 4534a70b7056fd4b9a1c6db5a4ce3c98546b291e and what I think precedes A is 454bb6775202d94f0f489c4632efecdb62d3c904
[09:21:58] <Corvus> https://github.com/Paragon-Software-Group/linux-ntfs3/commits/master?after=b8155e95de38b25a69dfb03e4731fd6c5a28531e+209&branch=master
[09:22:09] <rewt> if you go to that commit, https://github.com/Paragon-Software-Group/linux-ntfs3/commit/4534a70b7056fd4b9a1c6db5a4ce3c98546b291e it shows:  1 parent 36a21d5, so A^ would be 36a21d5 (or 36a21d51725af2ce0700c6ebcb6b9594aac658a6)
[09:22:09] <Corvus> the first one on the top
[09:23:00] <Corvus> So, what I'm really trying to do is to get their fs/ntfs3 as a clean patch to apply in the future.
[09:23:39] <Corvus> rewt: how's that possible, huh?
[09:24:11] <rewt> i'm not sure what order those commits are listed in, but if you go the specific commit, it tells you the parent commit(s)
[09:24:28] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[09:24:44] <Corvus> Okay, thanks, I'll keep that in mind. :-)
[09:25:26] <rewt> could be ordered by time, but not necessarily on the same branch
[09:25:40] <Corvus> rewt: I tried to give --merge-base to the diff command, which reading the man page seemed like it should've worked
[09:26:04] <rewt> --merge-base gives the last common ancestor of 2 commits
[09:26:35] <Corvus> yeah, that's what I was reading. Isn't that exactly what I want?
[09:27:54] <rewt> `git merge-base master ntfs3branch` would give where ntfs3branch branched off of main
[09:28:01] <rewt> then you can get a diff between that and ntfs3branch
[09:28:01] <Corvus> It'd find the ancestors of both commits, and take the one that is the ancestor of the other. Which should be A^, no?
[09:28:20] <rewt> A^ is "parent of A"
[09:28:27] <rewt> immediate parent
[09:28:33] <rewt> as in what was checked out when A was committed
[09:29:48] <Corvus> btw: `fatal: Not a valid object name ntfs3branch`
[09:30:04] <rewt> well, whatever branch has whatever you need
[09:30:15] <Corvus> they have 2 branches, stable and master
[09:31:45] <Corvus> what's the difference between ancestor and parent, btw?
[09:32:10] <Corvus> oh, parent I guess is the direct ancestor...
[09:32:13] <rewt> yes
[09:32:28] <Corvus> and ancestors include grandparents and further
[09:33:15] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:33:34] <Corvus> sheesh, git is complicated...
[09:34:29] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[09:36:42] <Corvus> I still don't get why diss --merge-base didn't work. Their nearest common ancestor is the parent of A. https://github.com/Paragon-Software-Group/linux-ntfs3/commit/36a21d51725af2ce0700c6ebcb6b9594aac658a6 < that one
[09:37:05] <Corvus> *diff --merge-base
[09:37:34] <rewt> which 2 commits are you diffing?  how do you know that's what it should be?
[09:38:33] <Corvus> this is A > https://github.com/Paragon-Software-Group/linux-ntfs3/commit/4534a70b7056fd4b9a1c6db5a4ce3c98546b291e and this is B > https://github.com/Paragon-Software-Group/linux-ntfs3/commit/96b18047a7172037ff4206720f4e889670030b41
[09:39:07] *** Quits: Drek45 (~jrept371@212.102.58.170) (Ping timeout: 240 seconds)
[09:39:24] <Corvus> And I know that the patch should be around 30K lines.
[09:40:30] <Corvus> So, I'm diffing them with --merge-base, expecting to get about 30K lines. But getting 28K
[09:40:48] <Corvus> because A is not being included
[09:40:57] <rewt> the last common ancestor that A and B is A... it's the newest commit that's reachable by both
[09:41:13] <rewt> A is an ancestor of B
[09:41:30] <rewt> so --merge-base is not what you need
[09:41:44] <Corvus> > A and B is A < hang on, A can't be an ancestor of itself.
[09:42:39] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Remote host closed the connection)
[09:42:56] *** Joins: computeiro (~Wender@189.37.64.248)
[09:42:58] <rewt> no, but it's reachable from itself, because it is itself
[09:43:00] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[09:43:37] <Corvus> so... the conclusion is, --merge-base doesn't do, what I thought it'd do...
[09:43:46] <gnoo> Corvus: man git-merge-base explains it in the first paragraph
[09:43:46] <gitinfo> Corvus: the git-merge-base manpage is available at https://gitirc.eu/git-merge-base.html
[09:43:46] <rewt> merge-base is used when you have 2 commits on different divergent branches and you want to see where those branches diverged
[09:44:20] <Corvus> gnoo: yeah, I read it. Which led me to the wrong conclusion of what it does
[09:45:20] <gnoo> > One common ancestor is better than another common ancestor if the latter is an ancestor of the former.
[09:45:45] *** Quits: wender (~Wender@189.37.68.233) (Ping timeout: 250 seconds)
[09:46:22] <Corvus> yeah, so I thought it'd find ancestors of both commits, and figure out which one is older.
[09:46:40] <gnoo> so because A^ is an ancestor of A but A is already an ancestor of B, A is used
[09:47:17] <Corvus>  > One common ancestor is better than another common ancestor if the latter is an ancestor of the former. < this is really not a very good explanation
[09:49:33] <Corvus> gnoo: but shouldn't A^ be used instead? A^ is an ancestor of A, A is an ancestor of B, so A^ is the common ancestor and it's the ancestor of the other ancestor, just like the man page says.
[09:50:19] <gnoo> the man page says about better and best ancestor. A^ is better but A is betst
[09:50:49] <gnoo> s/betst/best/
[09:51:09] <Corvus> but A is not an ancestor of itself, is it?
[09:51:40] <Corvus> this superconfusing :-D
[09:52:06] <Corvus> I thought I'm not very dumb, but that man page proves me wrong
[09:52:13] <gnoo> it's about a common point from where you can reach both A and B. not in the sense of parents and children of living beings. you can always reach A from A
[09:52:49] <Corvus> Okay, I'll just accept that explanation
[09:55:08] <Corvus> So, basically in git, a commit is an ancestor of itself.
[09:58:57] <Corvus> For future reference. Is there a way to make it *not painful* to do what I'm trying to do?
[09:59:13] <gnoo> think of an ancestor as various ways/paths you can get to a state of files. now if you cheated and already have that state of files, you don't have to do anything
[10:00:22] <rewt> don't trust that commit list on github to be indicative of relationships between commits XD
[10:00:39] <Corvus> yeah, I get that now. It's just when people use the word "ancestor" I think of parents, grandparents, greatgrandparents and so on. And I suspect I'm not the only one who'd think that
[10:01:54] <Corvus> and the idea that you can't be your own ancestor, which is apparently wrong, is not such an outlandish idea
[10:03:08] <Corvus> Now, I get why git behaves the way it does.
[10:03:57] <rewt> gui tools like gitk can really help visualize what the repo looks like
[10:04:14] <gnoo> in git ways, it is used to find a common base to merge commits. now, if a commit already exists and git shows merge should be done before that, it's not so useful is it?
[10:04:57] *** Joins: mud (~mud@user/kadoban)
[10:05:06] <Corvus> Yeah, I get that it's not looking for actual ancestors, it's looking where branches diverge from each other.
[10:06:02] *** Joins: node1 (~node1@user/node1)
[10:06:04] <Corvus> which in this case would be A
[10:06:53] <Corvus> it's just the man page failed to convey that idea to me. Which might or might not be my own fault.
[10:08:12] <remyabel> git is not complicated, just relies on computer science concepts that most people don't get taught in schools
[10:09:51] <Corvus> well, I got taught some computer science concepts in school. And I get that git is complicated, I even get why it is so.
[10:09:54] <node1> How could we eliminate or delete commit objects from git log ?, Like i did initial aka first commit and i would like to delete it from log
[10:10:34] <node1> or in short i just wanted to do undo the commits, making sure i should not have the logs on that commit.
[10:10:56] <Corvus> hehe, no-no-no, git is immutable.
[10:11:44] <node1> What do you mean by immutable here?
[10:12:18] <ikke> objects in git are immutable, but refs are not
[10:12:32] <remyabel> corvus: git uses merkle trees under the hood, that would be a jumping point for further research
[10:12:51] <Corvus> node1: Erh... there's a russian saying on the tip of my tongue. You can't unsay words.
[10:12:58] <rewt> !history
[10:12:58] <gitinfo> [!clean_history] For a pointer on how to handle history in git see this e-mail from Linus: http://thread.gmane.org/gmane.comp.video.dri.devel/34744
[10:13:03] <rewt> !rewrite
[10:13:03] <gitinfo> Rewriting public history is not recommended. Everyone who has pulled the old history will have to do work (and you'll have to tell them to), so it's infinitely better to just move on. If you must, you can use `git push --force-with-lease <remote> <branch>` to force (and the remote may reject that, anyway). See http://goo.gl/waqum
[10:13:25] <Corvus> node1: you can revert a commit with a new one, but you can't rewrite history
[10:13:47] <ikke> node1: You cannot change or delete arbitrary objects (commits) from history without rewriting everything that is following it
[10:14:41] <remyabel> heh they posted their reply in the wrong channel
[10:15:16] <remyabel> you can use filter branch to rewrite history, it's just messy and not recommended except for emergencies
[10:15:26] <remyabel> like for removing secrets
[10:15:54] <Corvus> rewt: what's with that gitk thing? Doesn't seem to be in the package repo.
[10:15:55] <rewt> filter-branch doc recommends using filter-repo
[10:15:58] <node1> I don't likes to re-write any history. Simply going back to previous state, where there was no commit no log
[10:16:22] <rewt> Corvus, what do you mean?
[10:16:24] <node1> simple blob object and tree object
[10:16:29] *** Joins: fdan (~fdan@192.146.154.3)
[10:16:41] <ikke> Corvus: what distro? Is tig available?
[10:16:49] <Corvus> rewt: Oh, it's a part of git.
[10:17:26] <Corvus> ikke: gentoo. It's USE="tk" git installing it
[10:17:37] <Corvus> I figured it out
[10:17:44] <ikke> aha ok
[10:17:49] *** Joins: Vlad2580 (~Vlad2580@user/vlad2580)
[10:18:06] *** Parts: Vlad2580 (~Vlad2580@user/vlad2580) (Leaving)
[10:19:38] <node1> ikke, Can you please link the documentation where it states ` delete arbitrary objects (commits) from history without rewriting everything that is following it`
[10:20:43] <rewt> node1, each commit references its parent(s), so by changing a commit, all descendants must change
[10:20:48] <Corvus> I feel like it's about to get political.
[10:21:32] <ikke> it's not explicitly documented, it's an emerging fact from the way git works
[10:21:53] <node1> rewt, But what happens if we would like to eliminate root commit.
[10:22:14] <node1> I just wanted to undo `root commit`
[10:22:23] <ikke> do you have more commits after it?
[10:22:31] <ikke> or is it the only commit?
[10:22:32] <rewt> if you have  A-B-C (where A is first commit), C references B, B references A, so changing/deleting A must change B so it can reference the new A (or become root commit), which means C must change to reference the new B, etc
[10:22:46] <node1> it's only single commit aka first commit or root commit
[10:23:29] <Corvus> the obvious solution to deleting the first and only commit is deleting the repo :-)
[10:23:43] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[10:23:57] <rewt> yep ^
[10:24:03] <node1> I think yes that's the solution to get rid of the root commit.
[10:24:11] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[10:24:17] <ikke> git update-ref -d refs/heads/master
[10:25:17] <node1> okay thank you :) everyone
[10:26:57] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:28:13] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[10:31:40] <aminvakil> how can i preserve commit times when i rebase a forked repo from an upstream?
[10:32:28] <aminvakil> something like https://github.com/aminvakil/docker-alpine-ftp-server-tls/commits/master , yesterday i rebased the repo and all my commit times were marked as yesterday
[10:34:40] <Corvus> turns out, github shows complete garbage in commit log
[10:35:06] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[10:35:51] <aminvakil> ah, right
[10:36:01] <aminvakil> Corvus: so this not related to git at all
[10:37:05] <Corvus> I don't know what it's based on, I guess on their own concept of activity in the repo. But git log and github log are not the same
[10:38:17] <ikke> It uses the committed date, which gets updated with rebasing
[10:38:23] <ikke> the authordate remains unchanged
[10:39:07] <ikke> rebase has an option --committer-date-is-author-date
[10:41:17] <Corvus> more rewriting of timelines :-)
[10:43:29] <aminvakil> ikke: thanks!
[10:43:32] <aminvakil> that did it! https://github.com/aminvakil/docker-alpine-ftp-server-tls/commits/master
[10:44:23] <ikke> nice
[10:45:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:57:53] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:00:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[11:01:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:06:11] *** Parts: Corvus (~SubZero@user/subzero) (No boundaries on the net!)
[11:09:29] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[11:18:47] *** Quits: hbautista_ (~hbautista@187.171.122.100) (Ping timeout: 240 seconds)
[11:34:28] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[11:34:44] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:40] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 240 seconds)
[11:40:17] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:43:09] *** Joins: theoceaniscool (~theoceani@213.94.16.93)
[11:53:00] *** Quits: thebombzen (~thebombze@587232575.guest.umich.net) (Quit: attack.c:4: main: Assertion `I_can_beat_that_monster' failed. Aborted (core dumped))
[11:58:28] *** Joins: dviola (~diego@user/dviola)
[12:04:54] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[12:08:33] *** Joins: meator (~meator@user/meator)
[12:09:40] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 252 seconds)
[12:12:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:23:33] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[12:23:48] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[12:29:15] *** Quits: neltraus (~neltraus@supernova.neltraus.de) (Quit: Zzzzzz...)
[12:30:23] *** Joins: neltraus (~neltraus@supernova.neltraus.de)
[12:33:26] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[12:33:45] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 248 seconds)
[12:44:55] *** Joins: furrymcgee (~devuan@31.179.186.66)
[12:49:20] *** Joins: palasso (~palasso@user/palasso)
[12:52:29] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[12:53:22] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[12:54:55] *** Joins: canton7 (canton7@about/csharp/canton7)
[12:55:00] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[12:58:51] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:58:51] *** Quits: hendry (~hendry@210.23.22.2) (Quit: WeeChat 3.2)
[13:01:34] *** Joins: ferdna (~ferdna@user/ferdna)
[13:13:23] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[13:18:40] *** Joins: alkino (~quassel@user/alkino)
[13:21:16] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[13:27:46] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 252 seconds)
[13:30:24] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:34:01] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:34:33] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:44:20] *** Quits: adlternative (~adl@117.32.216.79) (Read error: Connection reset by peer)
[13:45:17] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[13:47:36] *** Joins: adlternative (~adl@117.32.216.79)
[13:51:20] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[13:52:05] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[13:53:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[13:53:30] *** gxt_ is now known as gxt
[13:57:59] *** Joins: fling (~fling@user/fling)
[14:06:17] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[14:07:11] *** Joins: dtminus (~dtminus@2a02:8109:d80:2338:a0c2:3309:3ebe:a99a)
[14:08:07] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[14:08:17] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[14:10:10] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:10:27] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[14:12:24] *** Joins: LSD (~LSD@2.lsd.systems)
[14:14:38] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[14:15:11] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[14:16:24] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:17:40] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[14:18:14] *** Joins: LSD (~LSD@2.lsd.systems)
[14:18:51] *** Joins: fling (~fling@user/fling)
[14:19:59] *** Joins: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de)
[14:20:18] <Gurkenglas> When I copypaste code from another github repository, can I have git blame know this?
[14:24:54] <furrymcgee> just add a comment in the code
[14:26:04] <osse> No, blame does only look at commits in the repo itself. Apart from a comment, the only way would be to explain it in the commit message
[14:26:43] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[14:31:43] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Remote host closed the connection)
[14:32:08] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[14:33:29] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 250 seconds)
[14:34:01] *** Joins: jaamro (~ormaaj@user/ormaaj)
[14:38:50] *** Joins: natrys (~natrys@user/natrys)
[14:41:31] *** Joins: xx (~xx@user/xx)
[14:49:57] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[14:50:18] *** LSD is now known as acidsys
[14:54:33] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 248 seconds)
[15:03:19] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[15:03:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Ping timeout: 240 seconds)
[15:12:46] *** Joins: adgtl (~adgtl@103.51.72.147)
[15:18:24] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[15:18:50] *** Joins: nightstrike (uid487@id-487.highgate.irccloud.com)
[15:19:20] <nightstrike> is there a git equivalent to an svn external, where cloning a repo would allow a particular subdirectory to be automatically a clone of a totally separate repo?
[15:19:42] <ikke> submodules
[15:19:48] <nightstrike> or at least tied to a branch
[15:21:11] <nightstrike> ok, ty
[15:21:23] *** Joins: nobody_ (~nobody@host-79-24-179-239.retail.telecomitalia.it)
[15:23:33] *** Quits: adgtl (~adgtl@103.51.72.147) (Quit: Textual IRC Client: www.textualapp.com)
[15:24:39] *** Joins: masoudd (~masoudd@user/masoudd)
[15:30:49] *** Joins: tdslaeaoyi^ (~tdslaeaoy@wsip-98-188-244-188.mc.at.cox.net)
[15:32:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Ping timeout: 240 seconds)
[15:36:08] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:36:10] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[15:36:45] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:37:31] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[15:38:06] <cbreak> nightstrike: submodules tie an exact commit in an other repository to a location in the source tree
[15:40:40] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[15:48:56] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:48:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:53:33] *** Quits: tdslaeaoyi^ (~tdslaeaoy@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[15:58:25] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[16:04:57] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Remote host closed the connection)
[16:05:03] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:05:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f)
[16:05:22] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[16:10:50] *** Joins: jinsun (~quassel@user/jinsun)
[16:11:08] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[16:13:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:14:51] *** Joins: reset (~reset@user/reset)
[16:22:10] <j416> that's a nice way to explain submodules. well put.
[16:22:21] <j416> thanks
[16:26:49] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 248 seconds)
[16:31:25] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[16:33:25] *** Joins: ASDXXXXX (~ASDX@159.196.248.157)
[16:36:10] *** Quits: ASDX (~ASDX@159.196.248.157) (Ping timeout: 240 seconds)
[16:38:04] *** Quits: ASDXXXXX (~ASDX@159.196.248.157) (Ping timeout: 252 seconds)
[16:42:33] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:43:04] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[16:47:05] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[16:47:28] *** Joins: subopt (~subopt@2603-8081-2302-459a-d97d-f4a5-6519-96e0.res6.spectrum.com)
[16:47:47] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[16:49:54] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[16:50:01] *** Joins: pulse (~pulse@user/pulse)
[16:53:04] *** Joins: Guest86 (~Guest86@101.164.138.188)
[16:53:11] *** Quits: Guest86 (~Guest86@101.164.138.188) (Client Quit)
[16:56:46] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 252 seconds)
[17:04:28] *** Quits: roadie (~user@2a02:8108:ec0:1427:95d1:5cda:1a79:d55f) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[17:08:07] *** Quits: dtminus (~dtminus@2a02:8109:d80:2338:a0c2:3309:3ebe:a99a) (Quit: WeeChat 3.0)
[17:15:15] <Dragoon> how do I get git show to show me a full diff?
[17:15:51] <Dragoon> git show --stat 74b9272bbedf45 < ~15 files changed
[17:15:52] *** Quits: remyabel (remyabel@user/remyabel) (Ping timeout: 250 seconds)
[17:15:59] <Dragoon> git show 74b9272bbedf45 < 7 lines of diff
[17:18:53] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[17:21:13] *** Joins: gast0n (~g4570n@user/gast0n)
[17:22:19] *** Joins: dtminus (~dtminus@2a02:8109:d80:2338:a0c2:3309:3ebe:a99a)
[17:22:28] <Dragoon> git show -m
[17:22:37] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[17:24:49] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[17:29:16] *** Joins: roadie (~user@2a02:8108:ec0:1427:7c70:b991:228e:185c)
[17:30:32] *** Joins: marc-o (e23c17097e@vps71629.serveur-vps.net)
[17:42:25] *** Quits: meator (~meator@user/meator) (Ping timeout: 252 seconds)
[17:48:39] *** Quits: dslegends (~dslegends@user/dslegends) (Quit: ZNC 1.8.2 - https://znc.in)
[17:53:15] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 250 seconds)
[17:55:00] *** Joins: nvmd (~nvmd@user/nvmd)
[17:57:51] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[18:05:01] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[18:05:42] *** Joins: hendry (~hendry@210.23.22.2)
[18:06:45] *** Quits: hendry (~hendry@210.23.22.2) (Client Quit)
[18:07:19] *** Joins: hendry (~hendry@210.23.22.2)
[18:14:52] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 252 seconds)
[18:17:03] <xx> I created a pull request with multiple commits in it, and it was accepted as a single commit into upstream repo. How can I now make my local repo look like the upstream repo?
[18:17:19] <xx> if I do `git fetch && git rebase upstream/master` then I end up with some conflicts
[18:18:42] <ikke> xx: what branch are you on?
[18:18:57] <xx> master
[18:19:14] <ikke> those conflicts should be unrelated then
[18:19:28] <ikke> Did you have commits on master that upstream does not have?
[18:19:35] <ikke> Or did you create the MR from master in the first place?
[18:19:44] <xx> upstream/master has made more commits since
[18:20:02] <ikke> the pull request, did you create that from your master branch?
[18:20:06] <xx> yes
[18:20:07] <ikke> aha
[18:20:46] <xx> and I haven't made any changes to my master since that pull request was accepted
[18:20:59] <ikke> 1) it's better to created dedicated branches for pull requests. 2) you can use something like git reset --hard upstream/master to make them equal, given you do not have any changes locally that you need to keep
[18:21:18] <xx> I now know to make all changes to a new branch, instead of working on master
[18:21:29] <xx> but in order to do that, I need to fix the current situation :)
[18:21:52] <ikke> see 2) ^
[18:23:52] <xx> learning to use git is so much trial & error :)
[18:23:53] <xx> thanks
[18:24:26] <ikke> You need to get used to a good workflow
[18:24:34] <ikke> once you have that in the fingers, it's a lot easier
[18:24:53] <ikke> And upstream squashing commits does not make this easier
[18:25:55] <xx> yes, that's the terminlogy I was looking for - upstream squashed my commits into one
[18:28:56] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-254.prtc.net)
[18:29:10] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (Ping timeout: 240 seconds)
[18:31:21] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[18:34:27] *** Joins: Guest37 (~Guest37@2603-7000-9040-2600-3128-3a0c-54ea-16d1.res6.spectrum.com)
[18:34:31] *** Joins: digilink (~digilink@user/digilink)
[18:36:52] <Guest37> Hii I've never been here before but I was looking to see if someone could help me with GitHub
[18:37:19] <Guest37> I sadly cannot get my PAT to work :'(
[18:38:14] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-254.prtc.net) (Quit: Client closed)
[18:38:33] <ikke> What did you try?
[18:38:35] <ikke> And what OS?
[18:39:15] <mackerman> And is this for git remotes, or GitHub API access?
[18:40:30] <Guest37> So I generated a PAT on the GitHub website and then went to clone a repo, when I get prompted for my password I put in the PAT but I still get this message "Support for password authentication was removed on August 13, 2021. Please use a personal access token instead."
[18:40:53] <Guest37> Also Mac!
[18:41:13] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[18:41:50] <Guest37> Also I think get remotes? I don't know what GitHub API is
[18:42:03] <ikke> Guest37: And you are sure you pasted the PAT?
[18:43:26] <mackerman> "git" commands are git,  "gh"  commands and the web interface are GitHub
[18:47:20] *** Joins: txtsd (~txtsd@user/txtsd)
[18:50:19] <mackerman> Did you configure caching of your credentials, and if so how?   GitHub's PAT docs suggest Git Credential Manager Core
[18:50:55] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[18:51:49] <Guest37> hmm I'm pretty sure I'm pasting the PAT but I didn't configure any credential caching I'll look at Git Credential Manager Crore!!
[18:52:03] <mackerman> If you did not, that does not apply
[18:54:02] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[18:58:35] <mackerman> However  check Keychain  and/or  use the helper to erase the credential   https://docs.github.com/en/get-started/getting-started-with-git/updating-credentials-from-the-macos-keychain
[19:00:30] <Guest37> I actually don't have any entries when I look up GitHub in my keychain access is this normal?
[19:01:29] *** Quits: adlternative (~adl@117.32.216.79) (Ping timeout: 248 seconds)
[19:01:37] <mackerman> Maybe. You don't have to cache credentials.
[19:02:10] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 240 seconds)
[19:03:53] *** Joins: thiago (~thiago@2601:1c0:4501:635c:4c69:21e3:938c:be54)
[19:04:24] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[19:07:25] *** another is now known as another|
[19:07:54] *** Joins: vodkra (~vodkra@user/vodkra)
[19:20:10] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 240 seconds)
[19:21:24] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[19:22:37] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[19:23:12] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:d4fd:4f35:d088:de8c)
[19:23:12] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:d4fd:4f35:d088:de8c) (Changing host)
[19:23:12] *** Joins: skapata (~Skapata@user/skapata)
[19:24:46] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[19:25:19] *** Quits: Guest37 (~Guest37@2603-7000-9040-2600-3128-3a0c-54ea-16d1.res6.spectrum.com) (Ping timeout: 256 seconds)
[19:25:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[19:29:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:31:15] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:32:12] *** Quits: reset (~reset@user/reset) (Quit: reset)
[19:33:34] <sudoforge> when serving git via ssh, is it possible to "default" the directory that is being searched? let's say i want to keep bare repos under /srv/git, but not require the clients to include that (eg `git clone ssh://me@git-server:22/srv/git/repo.git`) -- instead, i want clients to be able to simply use `ssh://me@git-server:22/repo.git`.
[19:34:29] *** Joins: zebrag (~chris@user/zebrag)
[19:34:45] <bremner> sudoforge: you can probably use ssh force commands.
[19:34:50] <bremner> or just use gitolite
[19:35:02] <sudoforge> bremner: oh right, duh. thanks, i glossed over force commands.
[19:35:17] <sudoforge> i'm actually avoiding gitolite for this particular exercise
[19:37:37] *** Joins: escanor (~escanor@160.177.64.127)
[19:39:35] <escanor> how can i mastering git ?
[19:40:09] <sudoforge> escanor: by using it?
[19:42:07] <bremner> !book
[19:42:08] <gitinfo> There are several good books available about git; 'Pro Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[19:45:32] <another|> sudoforge: i'm using fugit for that
[19:46:49] <sudoforge> another|: thanks, but i'm avoiding external tooling for this particular exercise.
[19:47:08] <another|> for fun or is there a particular reason?
[19:48:55] *** Joins: rsx (~dummy@ppp-188-174-159-213.dynamic.mnet-online.de)
[19:50:07] *** Joins: elf-fortrez (~elf-fortr@adsl-72-50-7-254.prtc.net)
[19:51:17] <sudoforge> another|: for fun / learning.
[19:55:40] <another|> for learning, maybe take a look at fugit to see how it _can_ be done. it's ~150 lines https://github.com/cbdevnet/fugit
[20:02:36] <sudoforge> another|: thanks for the reference.
[20:04:48] *** Joins: natrys (~natrys@user/natrys)
[20:04:50] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[20:05:43] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Read error: No route to host)
[20:07:50] *** Quits: g2anj (~v@58.227.244.56) (Quit: .)
[20:09:52] *** Joins: psyc0ld (~psyc0ld@192.222.194.121)
[20:11:45] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:16:40] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[20:19:43] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 250 seconds)
[20:21:05] *** Quits: vodkra (~vodkra@user/vodkra) (Quit: leaving)
[20:21:23] *** Joins: vodkra (~vodkra@user/vodkra)
[20:21:33] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:24:15] *** Joins: mokulus (~mokulus@user/mokulus)
[20:24:43] *** Joins: escanor_ (~escanor@41.140.149.3)
[20:24:54] *** Joins: alkino (~quassel@user/alkino)
[20:25:46] *** Quits: vodkra (~vodkra@user/vodkra) (Client Quit)
[20:25:50] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[20:26:21] *** Joins: vodkra (~vodkra@user/vodkra)
[20:28:10] *** Quits: escanor (~escanor@160.177.64.127) (Ping timeout: 240 seconds)
[20:30:19] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[20:31:57] *** Joins: mokulus (~mokulus@user/mokulus)
[20:33:38] *** Quits: vodkra (~vodkra@user/vodkra) (Quit: leaving)
[20:34:47] *** Joins: vodkra (~vodkra@user/vodkra)
[20:38:54] *** Quits: vodkra (~vodkra@user/vodkra) (Client Quit)
[20:39:05] *** Joins: vodkra (~vodkra@user/vodkra)
[20:40:50] *** Quits: jazzy (~jaziz@2600:380:4671:e333:dd61:8951:cd4d:7b7a) (Ping timeout: 250 seconds)
[20:44:42] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[20:46:13] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:47] <xx> I'm doing a rebase to squash some commits, and I end up with a conflict. The file now has lots of "<<<<<<< HEAD" and "========" all over the place - what exactly am I supposed to do? Do I make the two segments look identical, or remove one of the segments (which one?) or something else?
[20:48:04] <xx> and do I keep those <<<<<< ====== things in there, or am I supposed to remove them too?
[20:48:16] <osse> xx: replace everything between <<<< and >>>> with what is supposed to be there
[20:48:54] <osse> including the markers themselves
[20:49:26] <xx> supposed to be there, at which point in history? I'd like the later commits to nicely follow the earlier (now squashed) commits
[20:49:52] <osse> at the point in history of the commit that's being applied
[20:50:09] <gnoo> xx: if don't have anything else important on that repo, using git reset --hard is probably better
[20:50:20] <osse> what I like to do is to look at the diff of the commit in a separate terminal. usually it's easier to see what's correct then
[20:51:16] <ikke> gnoo: that's very bad advise
[20:51:44] <xx> osse: ok, I'll test that. Still trying to wrap my head around exactly which commit is actually being applied at that point in history
[20:51:59] <osse> git rebase will say it
[20:52:02] <ikke> "just rm -rf --no-preserve-root / and restore backup"
[20:52:06] <gnoo> ikke: xx just had the diff merged in upstream and now wants to make it equal as i understand it
[20:52:22] <osse> xx: "Failed to apply  abcd12434 Fix the thingy"  or something like that
[20:52:34] <ikke> gnoo: if they're in the middle of a rebase, you want to do git rebase --abort at least first
[20:52:34] <xx> ikke: fortunately I now already know enough about git to be careful with --force and --hard
[20:52:48] <xx> gnoo: oh it's a different issue now
[20:53:03] <xx> that was a different thing back then
[20:53:27] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[20:53:33] <osse> xx: so I do git show abcd12434 -- file/with/conflict  and then I see that the commit is (for example) supposed to  change  int y = x;   to  int y = x + 1  or whatever.
[20:53:37] <gnoo> xx: ohh, sorry, didn't read that properly first time
[20:54:34] <osse> so then I fix the code between <<< and >>> so that whatever the original commit does is done here as well.
[20:54:50] <ikke> xx: a mergetool can make handling merges a lot easier
[20:54:51] *** Joins: g2anj (~v@58.227.244.56)
[20:54:56] <xx> osse: I'm sad to admit it, but I didn't know `git show` was a thing... I always fumbled around with `git diff <some magical numbers here separated by space>
[20:55:05] *** Joins: mokulus (~mokulus@user/mokulus)
[20:55:37] <osse> that would work too
[20:55:48] <xx> it works, but is a lot more annoying
[20:56:02] <osse> my point was just that looking at the original commit can be helpful
[21:09:07] *** Joins: ferdna (~ferdna@user/ferdna)
[21:10:40] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[21:15:01] *** Joins: ChmEarl (~chmearl@user/chmearl)
[21:16:16] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[21:18:45] <nedbat> xx: the rebase you're doing to squash commits: is this related to your merged pull request that was squashed?
[21:19:21] <xx> nedbat: it is not
[21:19:37] <nedbat> xx: good, because you shouldn't need to in that case. carry on :)
[21:19:52] <xx> this is now just me doing doing the next task, and wanting to reorder and squash my commits so that upstream accepts it
[21:20:26] <xx> I'm now reading up on the various difftools (never used it) and apparently different diff algorithms (the default one always felt bad for me)
[21:25:13] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[21:26:33] *** Quits: escanor_ (~escanor@41.140.149.3) (Quit: Leaving)
[21:26:50] *** Quits: elf-fortrez (~elf-fortr@adsl-72-50-7-254.prtc.net) (Quit: Client closed)
[21:28:51] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: biab...)
[21:32:40] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 240 seconds)
[21:35:48] *** Quits: rsx (~dummy@ppp-188-174-159-213.dynamic.mnet-online.de) (Quit: rsx)
[21:42:06] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[21:51:09] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[21:54:31] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[21:55:29] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 250 seconds)
[21:55:57] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[21:58:22] *** Joins: psyc0ld_ (~psyc0ld@192.222.194.121)
[21:59:00] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[21:59:49] *** Quits: psyc0ld (~psyc0ld@192.222.194.121) (Ping timeout: 252 seconds)
[21:59:49] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[22:01:23] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[22:01:26] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[22:05:19] <xx> yeah I totally messed up the file now
[22:05:23] <xx> good thing I made backups
[22:05:35] <xx> the merge stuff is not intuitive at all
[22:06:43] <cbreak> xx: if you screw up, you can always abort a merge
[22:06:46] <cbreak> or restart it
[22:06:55] *** Quits: vodkra (~vodkra@user/vodkra) (Remote host closed the connection)
[22:07:04] <cbreak> man git-checkout, search for --conflict
[22:07:04] <gitinfo> the git-checkout manpage is available at https://gitirc.eu/git-checkout.html
[22:07:54] <xx> I just deleted everything and copied from my git repo backup
[22:08:04] <cbreak> that sounds braindead. :(
[22:08:15] <xx> works for me, safer than anything git could do
[22:08:18] <cbreak> no
[22:08:34] <cbreak> it won't restore the conflicting state
[22:08:41] <cbreak> it won't stop the merge that's in progress
[22:08:54] <xx> sure it will - I made the backup before I started the merge
[22:09:23] <cbreak> git on the other hand can recover the precise state you had after starting the merge
[22:09:27] <cbreak> or before, if you want that
[22:09:35] <xx> I don't know git well enough to trust it that much
[22:09:39] <xx> hence, making copies
[22:09:44] <cbreak> yeah. braindead :)
[22:10:18] <xx> disk space is cheap and plentiful. So what if my repo and backups take a few GBs of space, when the actual source code is 400kb.
[22:10:20] <cbreak> the whole point of git is to have history
[22:10:32] <cbreak> and to be able to use that history
[22:10:38] <cbreak> so git allows that.
[22:11:30] <cbreak> the correct thing to do if you want to be able to recover a state is to commit it, and possibly tag it
[22:11:51] <xx> when it gets unmanageable, I'll just nuke the git repo, create a new one and copy over the sources as they were at the last working condition - a fresh start.
[22:12:03] <cbreak> yep, sounds dumb.
[22:12:07] <xx> but works
[22:12:48] *** Joins: vodkra (~vodkra@user/vodkra)
[22:12:49] <cbreak> much faster and easier to just undo the mistakes
[22:15:23] <xx> I'll learn that eventually, but not today
[22:16:13] <cbreak> being able to use git is a useful skill when using git
[22:16:37] <cbreak> it doesn't really work otherwise
[22:16:44] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[22:20:10] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 252 seconds)
[22:20:10] *** Joins: Palaver (~Palaver@91.141.71.249.wireless.dyn.drei.com)
[22:20:48] *** Quits: Palaver (~Palaver@91.141.71.249.wireless.dyn.drei.com) (Remote host closed the connection)
[22:21:48] *** Joins: Palaver (~Palaver@91.141.71.249.wireless.dyn.drei.com)
[22:21:51] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[22:22:10] *** Quits: Palaver (~Palaver@91.141.71.249.wireless.dyn.drei.com) (Remote host closed the connection)
[22:22:38] *** Joins: Palaver (~Palaver@91.141.71.249.wireless.dyn.drei.com)
[22:22:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[22:22:50] *** Quits: Palaver (~Palaver@91.141.71.249.wireless.dyn.drei.com) (Remote host closed the connection)
[22:24:17] *** Gustavo6046_ is now known as Gustavo6046
[22:29:16] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[22:29:26] *** Joins: remyabel (remyabel@user/remyabel)
[22:29:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:30:28] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[22:31:39] *** Joins: vicfred (~vicfred@user/vicfred)
[22:41:25] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Ping timeout: 250 seconds)
[22:43:55] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[22:44:18] <mehwork> how can i tell when a branch was created (even if i didn't commit anything to it yet)?
[22:47:42] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[22:49:58] <ikke> git does not record this
[22:50:06] <ikke> a branch is just a file with a hash in it
[22:50:20] <ikke> You could look at the ctime of the ref
[22:51:13] <bremner> can branches be packed refs?
[22:52:08] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[22:55:52] *** Joins: humanface (~humanface@20014C4E1C40B400612EF5F22AAEBC2C.dsl.pool.telekom.hu)
[22:57:02] *** MeatNit is now known as NeatNit
[22:57:18] <osse> mehwork: the reflog.
[22:57:57] <osse> there is in fact a timestamp there, but the only way I know to show it is to cat .git/logs/refs/heads/branchname
[23:03:52] *** Joins: reset (~reset@user/reset)
[23:04:13] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[23:06:16] *** Joins: SuperLag (~akulbe@user/superlag)
[23:07:04] <ikke> git log -g
[23:07:04] *** Joins: mei (~mei@user/mei)
[23:07:19] <ikke> But in both cases, that only works if you created the branch and it was fairly recent
[23:07:23] <ikke> (reflog for 90 days)
[23:09:09] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 250 seconds)
[23:11:34] <osse> I can only get git log to show the timestamps for the commits the reflog entries correspond to, but not the reflog entries themselves
[23:12:15] *** Joins: Betal (~Betal@user/betal)
[23:14:22] <ikke> right, there is also no format specifier for the reflog date
[23:14:31] *** Quits: jess (~jess@libera/staff/jess) ()
[23:16:18] <osse> date -d "@$(some fancy grep thing here .git/logs/refs/heads/branchname)"   \o/
[23:16:29] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:18:30] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:19:10] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:19:28] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:19:40] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 240 seconds)
[23:20:50] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:21:06] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:23:20] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:23:51] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:24:25] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:24:43] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:25:46] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:26:46] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:28:43] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:29:03] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:29:40] *** Joins: codebam (~codebam@user/codebam)
[23:29:53] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:30:03] <codebam> would someone here be able to help me figure out why my github workflow isn't running?
[23:30:28] <codebam> it's not running at all even though the file is there
[23:30:56] <j416> codebam: not without more info, and also there is ##github
[23:31:05] <codebam> I'll join ##github, thank you
[23:31:40] *** Quits: dtminus (~dtminus@2a02:8109:d80:2338:a0c2:3309:3ebe:a99a) (Ping timeout: 240 seconds)
[23:31:45] <j416> you're welcome to ask here but we know mainly Git
[23:32:00] <codebam> I'm setting up the repository again
[23:32:05] <codebam> okay I see
[23:32:46] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:33:07] <codebam> making a new repo seemed to make it work anyways
[23:33:38] *** Joins: dtminus (~dtminus@2a02:8109:d80:2338:2d03:a1cf:7db:2f59)
[23:34:32] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[23:34:47] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:35:02] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[23:35:16] <Soni> can multiple files refer to the same blob?
[23:35:22] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:35:48] <geirha> sure
[23:35:58] <Soni> so blobs are untyped...
[23:36:16] <Soni> ah that's gonna be annoying
[23:36:24] <geirha> blobs contain only the content of the file, no metadata
[23:36:44] <geirha> tree objects hold the metadata
[23:37:07] <Soni> can multiple directories point to the same tree object?
[23:37:35] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[23:37:48] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[23:40:12] <geirha> if they contain the exact same files and directories, sure
[23:41:15] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:43:53] <Soni> how do symlinks work?
[23:44:05] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:44:07] <bremner> umm. in git?
[23:44:34] <bremner> they are treated basically like files
[23:45:31] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:46:12] *** Joins: Narrat (~omnius@p200300df5f01470106ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:47:39] <Soni> yeah, in git
[23:47:46] <Soni> how are they stored in trees and whatnot?
[23:48:14] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:49:03] <geirha> add and commit a symlink, then look at the tree object with git cat-file
[23:50:32] <geirha> 1.  git cat-file -p HEAD   to print the latest commit object. 2. Copy the tree hash. 3. git cat-file -p <the-tree-hash>
[23:51:01] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:51:37] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:51:54] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:53:34] <Soni> oh interesting
[23:54:04] <Soni> this seems like a pain to deal with, especially in bash.
[23:54:32] <geirha> oh? how so?
[23:54:46] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[23:55:30] <Soni> well git isn't exactly designed for one to write a bash script to walk the object graph directly
[23:55:47] <Soni> it's designed to manage the work tree and send it over a network
[23:55:51] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:56:10] *** Joins: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at)
[23:56:43] *** Quits: darkwonyx (~darkwonyx@84-115-212-59.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:57:35] <geirha> ok? I only suggested the cat-file to get a human readable representation of the objects so you can investigate how git stores things. I wasn't suggesting you write a parser for it
[23:57:35] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
