[00:00:47] <FromDiscord> <undersquire> i mean couldnt u just use execCmd or wtever it is and call the nim compiler and just get the result as a string?
[00:00:58] <FromDiscord> <undersquire> you would have to manually parse the result information though
[00:01:33] <FromDiscord> <undersquire> https://nim-lang.org/docs/osproc.html#execProcess%2Cstring%2Cstring%2CopenArray%5Bstring%5D%2CStringTableRef%2Cset%5BProcessOption%5D
[00:01:41] <FromDiscord> <undersquire> why was that so long tf
[00:02:26] <FromDiscord> <Yardanico> In reply to @undersquire "i mean couldnt u": that requires the code to be self-contained
[00:02:37] <FromDiscord> <Yardanico> and deech is asking to do that on compile-time which is a bit more complicated
[00:02:50] <FromDiscord> <Yardanico> In reply to @undersquire "why was that so": because it encodes the name of the proc along with all arguments
[00:03:09] <FromDiscord> <undersquire> In reply to @Yardanico "and deech is asking": oh
[00:03:10] <FromDiscord> <Yardanico> so the browser can jump right to it
[00:03:17] <FromDiscord> <undersquire> ah ok
[00:03:22] <FromDiscord> <Yardanico> anyway, execProcess wouldn't work at compile-time
[00:03:37] <FromDiscord> <undersquire> u cant use it in a static context can you?
[00:03:40] <FromDiscord> <undersquire> or no
[00:04:01] <FromDiscord> <Yardanico> In reply to @Yardanico "anyway, execProcess wouldn't work": ^
[00:04:02] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3wnW
[00:04:12] <FromDiscord> <undersquire> ye k
[00:50:28] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:50:42] <arkanoid> do you know if someone has already built a macro that given a type builds it's init? I mean a proc where all the object's attributes are layed horizontally as proc parameters just like an init
[00:50:53] *** Joins: supakeen (~user@python/site-packages/supakeen)
[00:54:59] <FromDiscord> <Elegantbeef> Apparently my construct macro does, not that i remember including that https://github.com/beef331/constructor#construct
[00:55:25] <FromDiscord> <Elegantbeef> All required though, cause if you want them optional, use the object constructor syntax
[00:57:40] <arkanoid> great! thanks beef!
[01:03:04] <FromDiscord> <undersquire> In reply to @Elegantbeef "Apparently my construct macro": this is really cool!
[01:04:40] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 240 seconds)
[01:54:00] *** Quits: tdc_ (~tdc@217.61.224.137) (Ping timeout: 268 seconds)
[01:55:16] <NimEventer> New Nimble package! notcurses - A low-level Nim wrapper for Notcurses: blingful TUIs and character graphics, see https://github.com/michaelsbradleyjr/nim-notcurses
[01:55:51] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 268 seconds)
[02:19:19] <FromDiscord> <undersquire> wow i never realized how close nim syntax is to pascal
[02:19:25] *** Quits: max22- (~maxime@2a01cb08833598003f4830a9e9f0c724.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:21:10] <FromDiscord> <Yardanico> In reply to @undersquire "wow i never realized": yeah, nim is quite influenced by pascal, in fact nim's compiler was written in Object Pascal in the past before being rewritten in Nim itself
[02:21:24] <FromDiscord> <undersquire> lol htats pretty cool
[02:21:48] <FromDiscord> <undersquire> Nim feels like modern pascal now after comparing the two
[02:21:58] <FromDiscord> <undersquire> (edit) "two" => "syntax's"
[02:23:09] <FromDiscord> <tandy> why does seq.add() need to have a var string?
[02:23:21] <FromDiscord> <Yardanico> huh?
[02:25:11] <FromDiscord> <tandy> im trying to add a parameter from a proc into a seq
[02:25:40] <FromDiscord> <tandy> oh
[02:25:41] <FromDiscord> <Yardanico> but it doesn't need to be a var string, can you show the full error and the code?
[02:25:44] <FromDiscord> <tandy> wait i think i know why
[02:26:01] <FromDiscord> <tandy> its the seq which im adding it to
[02:26:07] <FromDiscord> <tandy> can i pass by reference in nim?
[02:26:14] <FromDiscord> <Yardanico> use `var`
[02:26:27] <FromDiscord> <Yardanico> https://nim-lang.org/docs/manual.html#procedures-var-parameters
[02:27:05] <FromDiscord> <tandy> nice that works
[02:27:17] <FromDiscord> <Yardanico> also, you don't usually need to optimize pass-by-reference yourself,  Nim will pass by reference if it thinks that it's better for performance
[02:27:22] <FromDiscord> <Yardanico> `var` in parameters is used for mutability
[02:28:06] *** Joins: byanka (~byanka@78.137.43.40)
[02:28:24] <FromDiscord> <tandy> i see, that makes sense
[02:39:22] <FromDiscord> <treeform> In reply to @Ayy Lmao "Has anyone gotten pixie": I remember having this problem with visual studio, I think we fixed it, but maybe the problem is back, you can just disable the SIMD with -d:pixieNoSimd and that should make it compile.
[02:40:11] <FromDiscord> <Elegantbeef> I assume tandy you got confused by the mismatch error message?
[02:40:28] <FromDiscord> <tandy> yepp
[02:40:59] <FromDiscord> <Elegantbeef> I should add that `Atleast one mismatch due to a parameter not being mutable`
[02:41:58] <FromDiscord> <tandy> that would be much clearer
[02:42:11] <FromDiscord> <Elegantbeef> Well it'd still say the mismatches, but it'd give more concise errors
[02:42:18] <FromDiscord> <Elegantbeef> Though i think there are other PR's that also help
[03:09:09] *** Quits: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:14:41] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[03:38:04] <FromDiscord> <Ayy Lmao> In reply to @treeform "I remember having this": Yeah I am able to compile it with `-d:pixieNoSimd` on visual studio
[03:40:53] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:43:28] <FromDiscord> <treeform> We are able to use simd with visual studio
[03:43:39] <FromDiscord> <treeform> maybe your nimsimd package is old?
[03:43:52] <FromDiscord> <treeform> maybe your visual studio is older or newer then what we use?
[04:07:27] <FromDiscord> <Ayy Lmao> @treeform It seems to be specifically when compiling to c++ for me
[04:08:39] <FromDiscord> <Ayy Lmao> The errors have the note `note: Conversion from 'void' to pointer to non-'void' requires an explicit cast`
[04:17:27] <madprops> what's wrong here? s &= &"{i + 1}) {s}"
[04:18:20] <madprops> oh wait
[04:18:59] <FromDiscord> <Elegantbeef> You found out nothing was wrong ðŸ˜€
[04:21:12] <madprops> I have a question though
[04:21:20] <madprops> if I do.. var new_array: seq[string]
[04:21:33] <madprops> without initializing it, I can still add stuff to it later, why is that?
[04:21:43] <madprops> i mean why is specifying the type enough
[04:21:48] <FromDiscord> <Elegantbeef> Cause nim seq's and string's are not nilable
[04:22:13] <FromDiscord> <Elegantbeef> As such they're 0 init'd to a usable sequence
[04:23:09] <FromDiscord> <konsumlamm> ig by 0 init'd you mean they're initialized to an empty seq/string
[04:23:49] <FromDiscord> <Elegantbeef> Yea didnt mean 0 init'd but yea
[04:24:02] <FromDiscord> <Elegantbeef> just they're init'd to something usable which reduces errors
[04:24:07] <madprops> i see
[05:17:47] <FromDiscord> <Ayy Lmao> Is there a way to get the generic type from a generic?
[05:18:52] <FromDiscord> <Ayy Lmao> As in get `float` from `Foo[float]`
[05:19:49] <nrds> <06ComputerTech99> hai
[05:20:23] <FromDiscord> <konsumlamm> In reply to @Ayy Lmao "Is there a way": https://nim-lang.github.io/Nim/typetraits.html#genericParams.t%2Ctypedesc
[05:23:06] <FromDiscord> <Ayy Lmao> In reply to @konsumlamm "https://nim-lang.github.io/Nim/typetraits.html#gene": Awesome, thanks!
[05:24:18] <FromDiscord> <Ayy Lmao> Neat, there's elementType too. I was wondering about that as well.
[05:39:00] <madprops> how can I pass an int to a proc by reference?
[05:39:14] <madprops> i just want the proc to modify the int
[05:39:14] <FromDiscord> <Elegantbeef> `someInt: var int`
[05:39:21] <madprops> i tried that
[05:39:34] <madprops> https://play.nim-lang.org/#ix=3wp7
[05:40:14] <FromDiscord> <Elegantbeef> It replaces all `` at the same time
[05:43:20] <FromDiscord> <konsumlamm> it doesn't call `insertnum_rep` multiple times, if you thought that
[05:45:17] <madprops> ah right
[05:51:05] <madprops> can't seem to find if re replace can replace one by one
[05:53:06] <FromDiscord> <Elegantbeef> Me disliking regex\: https://play.nim-lang.org/#ix=3wp9
[05:55:04] <madprops> :o
[05:55:57] <madprops> that's p complex
[05:56:35] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[05:56:43] <madprops> what if you liked re though ?
[05:56:50] <FromDiscord> <Elegantbeef> I wouldnt
[05:57:18] <madprops> \w+
[05:57:24] <FromDiscord> <Elegantbeef> Probably use the modern api https://nim-lang.org/docs/nre.html#replace%2Cstring%2CRegex%2Cproc%28RegexMatch%29
[05:57:25] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:57:58] <madprops> thought nre was deprecated? https://github.com/nim-lang/RFCs/issues/31
[05:58:48] <madprops> or idk what the decision was
[05:59:43] <FromDiscord> <Elegantbeef> Ah maybe i'm wrong which is modern, but it has more functionality ðŸ˜€
[06:00:32] <FromDiscord> <konsumlamm> there's no real consensus on re vs nre vs regex vs ... afaik
[06:00:36] <FromDiscord> <Elegantbeef> Could also use the `nim-regex` package
[06:03:07] <FromDiscord> <Elegantbeef> Yea idk use whatever module you prefer
[06:03:07] <FromDiscord> <Elegantbeef> Sure my logic has an issue somewhere
[06:21:35] <madprops> well here's another way https://play.nim-lang.org/#ix=3wpe
[06:22:56] *** _KurtGodel_ is now known as KurtGodel
[06:38:46] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:55:47] <madprops> smaller version https://dpaste.org/q6vL
[07:37:13] <FromDiscord> <rxx> whats the IRC channel
[07:39:02] <FromDiscord> <Elegantbeef> libera.chat#nim
[07:50:03] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:10:00] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[08:10:42] *** Joins: xet7 (~xet7@user/xet7)
[08:30:05] <madprops> what happens when 2 libs have the same proc name?
[08:30:15] <madprops> since everything is auto-imported
[08:30:42] <FromDiscord> <Elegantbeef> If there is ambiguity you have to remove it somehow
[08:30:49] <madprops> you get warned?
[08:30:58] <FromDiscord> <Elegantbeef> You get a compiler warning
[08:31:05] <madprops> ah that's good
[08:31:18] <FromDiscord> <Elegantbeef> There isnt often ambiguity since it's rather rare for two procedures to match parameters and types
[08:32:27] <FromDiscord> <Elegantbeef> But then you can do multiple things to resolve ambiguity do `import someModule except ambigousSym` or do `someOtherModule.ambigousSym(arg1, arg2...)`
[08:32:42] <FromDiscord> <Elegantbeef> The former works if you dont need the symbol whatsoever, the latter works if you need both
[08:34:14] <madprops> yeah makes sense
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:40] *** Quits: dmu (~darkmusic@user/darkmusic) (Quit: leaving)
[08:43:28] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Ping timeout: 268 seconds)
[08:43:43] <FromDiscord> <Rika> If two things have the same name, no issue if they have different argument signatures
[08:44:25] <FromDiscord> <Rika> If they further do have the same argument signatures, you donâ€™t just get a warning, the code doesnâ€™t compile
[08:45:52] <FromDiscord> <Elegantbeef> Yea i corrected myself but matrix -\> discord doesnt propagate edits apparently
[08:49:20] <madprops> discord to irc edits do propagate :)
[08:54:33] <FromDiscord> <Rika> Beef is not on discord
[09:00:01] <FromDiscord> <InventorMatt> he is. he just usually uses matrix these days
[09:02:43] <FromDiscord> <Rika> Thatâ€™s not what I mean
[09:03:10] <FromDiscord> <Rika> I know he used discord but he rarely does nowadays. I mean that he did not use discord when the compiler warning message was sent
[09:03:20] <FromDiscord> <Rika> And when he edited it, the edit did not show because of that
[09:04:49] <FromDiscord> <InventorMatt> I realized that more after i actually sent the message
[09:06:16] <FromDiscord> <Rika> Haha thatâ€™s fine
[09:06:34] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:07:42] *** Joins: flynn (~mcbloch@user/flynn)
[09:11:24] <FromDiscord> <Elegantbeef> Matt checks if i'm on discord daily!
[09:11:24] <FromDiscord> <Elegantbeef> "That beef fucker is still here?!"
[09:11:43] <FromDiscord> <Rika> Nah thatâ€™s me I just donâ€™t say it
[09:14:57] <FromDiscord> <Elegantbeef> Dont blame you
[10:42:15] <NimEventer> New post on r/nim by 1985Ronald: Is it possible to create a standalone exe using nim?, see https://reddit.com/r/nim/comments/p796zq/is_it_possible_to_create_a_standalone_exe_using/
[11:23:50] *** Joins: jjido (~textual@2a02:c7f:5c91:e700:b0d5:8fc4:eb2:f27)
[11:46:42] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[11:52:02] *** Joins: tdc_ (~tdc@217.61.224.137)
[12:21:20] *** Joins: max22- (~maxime@2a01cb08833598000a495e1997baa69b.ipv6.abo.wanadoo.fr)
[12:25:44] <FromDiscord> <j-james> Is there any way to specify file imports from a certain directory, instead of using a bunch of relative paths?
[12:29:54] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[12:31:04] <FromDiscord> <Elegantbeef> Macros can get all of them in a specific directory, but there is nothing built in
[12:31:57] <FromDiscord> <Elegantbeef> An example of this is this mess https://github.com/GaryM-exkage/GDGW-Maverick-Bot/blob/master/src/nimcordbot/utils.nim#L3-L21
[12:34:59] <FromDiscord> <j-james> Oh, that wasn't quite what I meant, but I found what I was looking for with `nim.cfg`
[12:36:46] *** Quits: jjido (~textual@2a02:c7f:5c91:e700:b0d5:8fc4:eb2:f27) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[12:39:26] <FromDiscord> <Elegantbeef> Ah yea that makes more sense
[12:42:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b0d5:8fc4:eb2:f27)
[12:51:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b0d5:8fc4:eb2:f27) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[12:52:24] <FromDiscord> <Yardanico> In reply to @Elegantbeef "An example of this": i mean it's not that messy :P
[12:53:13] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3wqu
[12:54:25] <FromDiscord> <Yardanico> it can be pretty useful if you have some kind of a module system in your bot
[12:54:59] <NimEventer> New thread by Bitstorm: Is it possible to mix c and c++ backend?, see https://forum.nim-lang.org/t/8343
[12:55:17] <FromDiscord> <Elegantbeef> Yea havnet touched the bot in a while so it's mostly just my fancy command handler
[12:55:29] <FromDiscord> <Yardanico> how fancy? :P
[12:55:34] <FromDiscord> <Yardanico> oh I see
[12:55:41] <FromDiscord> <Yardanico> lol you did almost the same thing as I did in the past for my social network bot
[12:55:56] <FromDiscord> <Yardanico> great minds think alike
[12:56:00] <FromDiscord> <Elegantbeef> Parse test is best example of it
[12:56:40] <FromDiscord> <Yardanico> yeah mine was a bit worse in that regard since I didn't have argument listing, the modules were just getting an argument list of strings
[12:57:23] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3wqv
[12:57:34] <FromDiscord> <Elegantbeef> Ah mine also has fewer russian string lits ðŸ˜›
[12:57:38] <FromDiscord> <Yardanico> lol
[12:57:48] <FromDiscord> <Yardanico> well this one was written for a russian social network, so I used russian for commands :P
[13:02:34] *** Quits: Helios (~dwaglemat@2001:470:69fc:105::5f8) (Quit: Bridge terminating on SIGTERM)
[13:02:35] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Bridge terminating on SIGTERM)
[13:02:37] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Quit: Bridge terminating on SIGTERM)
[13:05:55] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[13:18:58] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[13:18:58] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[13:44:14] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:26:58] *** Joins: jjido (~Denis@90.213.58.125)
[14:41:00] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:41:22] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 252 seconds)
[14:42:07] *** Joins: flynn (~mcbloch@user/flynn)
[14:42:48] <FromDiscord> <enthus1ast> what is a good way to make an iterator to a No Op? currently in my "no op when case" i iterate through the param and yield it, but is there a better way?
[14:52:57] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[14:53:11] <FromDiscord> <Rika> huh? im unsure of what you mean
[14:55:20] <FromDiscord> <enthus1ast> i have an iterator that transforms the input to something else, but this can be deactivated by a define, when the define is set i want to just use the input
[14:55:30] <FromDiscord> <enthus1ast> and not have a runtime impact
[14:56:56] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[14:57:44] <FromDiscord> <Rika> is the input another iterators
[14:57:45] <FromDiscord> <Rika> (edit) "iterators" => "iterator\"
[14:58:46] <FromDiscord> <enthus1ast> ah i got the solution i guess
[14:59:27] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wqV
[14:59:37] <FromDiscord> <enthus1ast> seems to work
[15:02:53] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wqX
[15:05:41] <FromDiscord> <haxscramper> Otherwise, you have different symbol kinds based on define, and `iterator` sometimes behaves differently from `template` etc.
[15:05:45] <FromDiscord> <haxscramper> for example `mapIt` has issues with terators, but it would work with tempalte
[15:05:53] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wr0
[15:06:00] <FromDiscord> <haxscramper> and putting everything in one implementation allows you to make `noCondenseStrings` a parameter instead of a global whole-project configuration swtich
[15:06:28] <FromDiscord> <haxscramper> that is - if you will need this at some point
[15:10:11] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wr1
[15:10:50] <FromDiscord> <enthus1ast> in theory it should result in less overall string concatinations
[15:11:40] <FromDiscord> <enthus1ast> but more compile time \:)
[15:11:53] <FromDiscord> <enthus1ast> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/877864679286902825): in theory it should result in less overall string concatinations on runtime/production
[15:13:15] <FromDiscord> <haxscramper> Wwe have `std/ropes` for O(1) concatenation of strings
[15:14:02] <FromDiscord> <enthus1ast> i tried ropes in my tests (the user actually can decide) but it was much slower
[15:14:26] <FromDiscord> <enthus1ast> only faster for huge strings (but this is kinda expected)
[15:16:10] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wr2
[15:18:10] <FromDiscord> <haxscramper> Except for strings (which has it implemented via magic) `&=` is an alias for `add`
[15:18:18] <FromDiscord> <haxscramper> Just like `notin`, `in` etc
[15:18:22] <FromDiscord> <haxscramper> `!=`
[15:18:45] <FromDiscord> <haxscramper> In most cases you don't write these operators, but rather defined `==`, `contains` and `add`
[15:19:23] <FromDiscord> <haxscramper> So if you require `.add` instead, you would get both
[15:20:06] <FromDiscord> <enthus1ast> i was even thinking about also give the user the option to have the template compile macro generates an iterator body, yielding every string etc, then it would also work for a later "streaming template"
[15:20:31] <FromDiscord> <enthus1ast> an template that never finish rendering
[15:25:10] <FromDiscord> <enthus1ast> and it would also use less memory, if the underlying httpserver can send data in chunks
[15:42:04] *** Joins: tdc (~tdc@217.61.224.137)
[15:44:39] *** Quits: tdc_ (~tdc@217.61.224.137) (Ping timeout: 268 seconds)
[15:46:15] <FromDiscord> <PsychoClay> is there a way to do this `TypeReg = TableRef[uint32, typedesc]` without making TypeReg generic?
[15:46:54] <FromDiscord> <Rika> No, that makes no sense
[15:46:59] <FromDiscord> <Rika> How would that work?
[15:47:09] <FromDiscord> <PsychoClay> i just want a table to map ints to types
[15:47:36] <FromDiscord> <Rika> For what?
[15:47:43] <FromDiscord> <Rika> You canâ€™t use types in runtime anyway
[15:48:29] <FromDiscord> <PsychoClay> for ecs
[15:53:29] <FromDiscord> <haxscramper> types does not exist at runtime and cannot be used as a value
[15:53:47] <FromDiscord> <PsychoClay> hmm
[15:53:48] <FromDiscord> <haxscramper> The best you can do is `Table[uint32, NimNode]` where nim node has a symbol of a type
[16:07:10] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wrd
[16:07:49] <FromDiscord> <PsychoClay> In reply to @enthus1ast "<@596976507033747466>\: in my (toy)": oh nice tnx
[16:07:55] <FromDiscord> <enthus1ast> but idk if the speed is comparable to real ecs \:)
[16:10:04] <FromDiscord> <enthus1ast> it was fast enough for my purpose, though
[16:14:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9cef:7c5:9943:44fb)
[16:16:10] <FromDiscord> <planetis> do you need something comparable to rust anymap?
[16:22:04] <FromDiscord> <haxscramper> you can write a macro that uses https://nim-lang.org/docs/macros.html#symBodyHash%2CNimNode and accepts `typedesc`
[16:22:18] <FromDiscord> <haxscramper> And then do `const typeHash = getTypeHash(T)`
[16:23:57] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wrm
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:38] *** Quits: max22- (~maxime@2a01cb08833598000a495e1997baa69b.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:42:53] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9cef:7c5:9943:44fb) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[16:52:39] *** Joins: rockcavera (~rc@192.12.114.207)
[16:52:39] *** Quits: rockcavera (~rc@192.12.114.207) (Changing host)
[16:52:39] *** Joins: rockcavera (~rc@user/rockcavera)
[17:01:41] <FromDiscord> <PsychoClay> sent a code paste, see https://play.nim-lang.org/#ix=3wrB
[17:06:08] *** Joins: arkurious (~arkurious@user/arkurious)
[17:10:01] <FromDiscord> <PsychoClay> sent a code paste, see https://play.nim-lang.org/#ix=3wrC
[17:17:18] <PMunch> Ã¥/query #federico
[17:17:24] <PMunch> Whoops
[17:17:33] <federico3> :D
[17:17:52] <PMunch> Just a small question about SBCs
[17:24:55] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[17:26:06] *** Joins: xet7 (~xet7@user/xet7)
[17:26:57] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wrF
[17:27:11] <FromDiscord> <haxscramper> As usual, working with types in macro would involve random numbero of `getype()` and typedesc unwraps that are placed around the code
[17:28:11] <FromDiscord> <PsychoClay> sent a code paste, see https://paste.rs/cLF
[17:28:29] <FromDiscord> <NumLock> Hello
[17:29:38] *** Quits: xet7 (~xet7@user/xet7) (Read error: Connection reset by peer)
[17:30:48] *** Joins: xet7 (~xet7@user/xet7)
[17:31:38] <FromDiscord> <haxscramper> Well, it uses actual tool designed for that kind of task (mapping types to hashes), but if you are fine with `hash($T)` then okâ†µ(@PsychoClay)
[17:37:19] <FromDiscord> <haxscramper> also you can just do `const h = hash($typeof(T))`
[17:39:41] <FromDiscord> <PsychoClay> isnt `typeof T == T`?
[17:40:43] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[18:13:31] <FromDiscord> <gerwy> how do i know if threads are on or off?â†µi tried using `defined(threads)` but it works for -d symbol, not the threads option
[18:13:44] <FromDiscord> <Rika> compileoption
[18:13:46] <FromDiscord> <Rika> ?
[18:13:49] <FromDiscord> <gerwy> :o
[18:14:19] <FromDiscord> <Rika> https://nim-lang.org/docs/system.html#compileOption%2Cstring
[18:14:20] <FromDiscord> <gerwy> oooh in system module
[18:14:30] <FromDiscord> <gerwy> thaaank you<3
[18:20:23] *** Joins: Vladar (~Vladar@46.162.2.53)
[18:29:17] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:31:52] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[18:43:57] *** Joins: max22- (~maxime@2a01cb0883359800c602eedd9973c4e4.ipv6.abo.wanadoo.fr)
[18:46:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9cef:7c5:9943:44fb)
[18:48:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9cef:7c5:9943:44fb) (Client Quit)
[18:55:20] <FromDiscord> <TechnoRazor> Is there such thing as an `else when` statement, similar to `else if`?
[18:55:57] <FromDiscord> <TechnoRazor> (edit) "`else if`?" => "`elif`?"
[19:01:19] <FromDiscord> <Rika> Exactly that
[19:01:25] <FromDiscord> <Rika> You can use those with when statements
[19:04:05] <FromDiscord> <TechnoRazor> Oh, I didn't realize, thanks
[19:06:08] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:36:43] <FromDiscord> <enthus1ast> can i test if i'm in a compiletime or runtime context?
[19:37:29] <FromDiscord> <enthus1ast> like\:`when compileTime:`
[19:38:06] <FromDiscord> <xflywind> `when nimvm`?
[19:39:05] <FromDiscord> <enthus1ast> let me try
[19:41:14] <FromDiscord> <enthus1ast> yes seems to work, thanks @xflywind
[19:41:27] <FromDiscord> <xflywind> np
[20:29:33] <FromDiscord> <gerwy> Made Julia set today, that is optimized like mandelbrot version :D
[20:30:23] *** Joins: xxov (~xxov@37.172.65.212)
[20:56:06] *** Joins: Pyautogui (~Pyautogui@cpe-23-241-96-47.socal.res.rr.com)
[20:57:43] <Pyautogui> I am trying to assign the maximum value of a uint64 as a constant to a uint64. However, I keep getting a value out of range error. I can do it by decrementing the uint at zero, but not by assigning it. Is this a bug?
[21:00:35] <FromDiscord> <moein> hi is it possible to get a key value from object?â†µlike in javascript i can do Object['key'] and the value of 'key' will return
[21:03:37] <FromDiscord> <linux user> In reply to @Pyautogui "I am trying to": no u cant
[21:03:59] <FromDiscord> <linux user> you have to stop beofre it resets
[21:04:34] <Pyautogui> Could you clarify? I am a beginner at using Nim.
[21:05:30] <FromDiscord> <exelotl> Sounds like a bug to me
[21:05:40] <FromDiscord> <linux user> ...
[21:06:03] <FromDiscord> <exelotl> Unless you're trying to assign 2^64
[21:06:09] <FromDiscord> <undersquire> ^
[21:06:11] <FromDiscord> <linux user> sent a code paste, see https://play.nim-lang.org/#ix=3wtg
[21:06:19] <FromDiscord> <undersquire> there is a stdlib thing for max values
[21:06:52] <Pyautogui> Got it
[21:07:06] <Pyautogui> 2^64 - 1 was the value I was trying to assign.
[21:07:12] <FromDiscord> <linux user> (edit) "https://play.nim-lang.org/#ix=3wtg" => "https://play.nim-lang.org/#ix=3wth"
[21:07:29] <Pyautogui> thanks
[21:07:41] <FromDiscord> <linux user> ðŸ˜ƒ>
[21:07:45] <FromDiscord> <linux user> (edit) "ðŸ˜ƒ>" => "ðŸ˜ƒ."
[21:07:47] <FromDiscord> <konsumlamm> well, that would require evaluating 2^64 first, which would overflow
[21:07:55] <FromDiscord> <linux user> ohyes lol
[21:08:26] <Pyautogui> No, I was writing it out as a explicit number
[21:08:32] <Pyautogui> No evaluation required
[21:08:52] <Pyautogui> 18446744073709551615
[21:10:11] <FromDiscord> <exelotl> I guess it would work if you included the type postfix like 18446744073709551615'u64
[21:10:40] <Pyautogui> Yes, thanks, that works.
[21:10:52] <Pyautogui> I was trying to do uint64(18446744073709551615)
[21:13:35] <FromDiscord> <moein> In reply to @moein "hi is it possible": hash table is my answer apparently
[21:29:11] <FromDiscord> <enthus1ast> is there a runtime replacement of parseStmt that returns PNode?
[21:36:09] *** Quits: Pyautogui (~Pyautogui@cpe-23-241-96-47.socal.res.rr.com) (Ping timeout: 248 seconds)
[21:40:44] <FromDiscord> <linux user> In reply to @Pyautogui "I was trying to": is this a proc
[21:45:13] <FromDiscord> <enthus1ast> maybe https://nim-lang.org/docs/compiler/parser.html#parseString%2Cstring%2CIdentCache%2CConfigRef%2Cstring%2Cint%2CErrorHandler
[22:01:35] <FromDiscord> <haxscramper> yes. or `parseAll` https://github.com/haxscramper/hnimast/blob/master/src/hnimast/pnode_parse.nim#L44
[22:01:51] *** Joins: rockcavera (~rc@192.12.114.207)
[22:01:51] *** Quits: rockcavera (~rc@192.12.114.207) (Changing host)
[22:01:51] *** Joins: rockcavera (~rc@user/rockcavera)
[22:21:45] <FromDiscord> <gerwy> does c2nim works on C code that uses SDL?
[22:24:06] <FromDiscord> <haxscramper> SDL is a c simple C library, so there should be no issues
[22:29:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9cef:7c5:9943:44fb)
[22:36:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9cef:7c5:9943:44fb) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[22:58:37] <FromDiscord> <moein> when i'm returning a hash table using table module what should i set my return in proc?
[22:59:11] <FromDiscord> <enthus1ast> Table[Hash, YourStuff]
[22:59:15] <FromDiscord> <moein> sent a code paste, see https://play.nim-lang.org/#ix=3wtR
[22:59:39] <FromDiscord> <enthus1ast> ok then Table[string, int]
[23:01:13] <FromDiscord> <enthus1ast> nope newTable is TableRef[string, int]
[23:01:44] <FromDiscord> <moein> nice thanks
[23:02:00] <FromDiscord> <enthus1ast> but, there is also toTable
[23:02:15] <FromDiscord> <enthus1ast> do you want a Table\_Ref\_ ?
[23:03:43] <FromDiscord> <moein> I'm not sure i need a map that i can iterate on it. maybe there is better options i'm not aware of
[23:03:59] <FromDiscord> <enthus1ast> yeah then better use toTable
[23:05:15] <FromDiscord> <moein> thanks
[23:07:37] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[23:10:23] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3wtT
[23:10:49] <FromDiscord> <enthus1ast> he wants to iterate
[23:12:38] <FromDiscord> <moein> In reply to @Yardanico "also, just so you": yes keys won't change but i need to iterate over them
[23:30:27] *** Quits: idf (~idf@198.23.223.146) (*.net *.split)
[23:30:27] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[23:30:27] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[23:30:38] *** Joins: idf (~idf@198.23.223.146)
[23:31:09] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[23:33:15] *** Joins: mjsir911 (~bnc@user/mjsir911)
[23:38:21] <FromDiscord> <moein> does nim support || operator?
[23:38:40] <FromDiscord> <moein> in a if statement i need to check variable against two values
[23:38:50] <FromDiscord> <moein> like this: if goal == "weightLoss" || goal == "weightGain":
[23:39:17] <FromDiscord> <enthus1ast> `or`?
[23:40:04] <FromDiscord> <moein> yeah exactly
[23:40:24] <FromDiscord> <moein> nice
[23:50:43] <FromDiscord> <haxscramper> In reply to @moein "like this: if goal": IIRC You can also do `goal in ["weightGain", "weightLoss"]`
[23:53:09] <FromDiscord> <enthus1ast> yes
[23:53:35] <FromDiscord> <enthus1ast> `for goal in ["weightGain", "weightLoss"]: ` you mean?
[23:55:09] <FromDiscord> <enthus1ast> but yes
