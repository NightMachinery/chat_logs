[01:05:49] <Bayes> Cressie and Hawkins (1980) found that the fourth-root of χ1 has a skewness of 0.08 and a kurtosis of 2.48 (compared with 0 and 3 for the Gaussian distribution). Estimates of location, such as the mean and the median, can then be applied to sqrt(X). Finally, these estimates can be raised to the 4th power and adjusted for bias.
[01:06:09] <Bayes> that's pretty crazy but it works for me o.o
[01:09:54] <since_> I wish i had more stats knowledge
[01:23:56] *** Joins: Colombo (~jmoravec@132.181.20.202)
[01:34:48] *** Quits: debianero (~debianero@60.132.134.77.rev.sfr.net) (Quit: Leaving)
[01:56:31] *** Joins: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net)
[02:15:01] <Bayes> I wish I had more knowledge on...
[02:15:57] * Bayes pulls out a long Papyrus
[02:16:38] <rickyrick> ( ͡° ͜ʖ ͡°)
[02:17:01] <Bayes> ITEM 492: Linear algebra
[02:17:05] <rickyrick> ( ͡o ͜ʖ ͡o)
[02:17:18] <rickyrick> Just remember that Gauss-Jordan elimination solves 99% of your LA problems
[02:17:23] <Bayes> ITEM 2105: Trigonometric functions
[02:17:47] <Bayes> ITEM 9587: Physics beyond the "shit falls fast" basics
[02:20:20] <Bayes> rickyrick that helps but...
[02:20:47] * Bayes gets intrusive thoughts with marginalizing conditionals over multivariate normal et al
[02:21:41] <Bayes> also I wouldn't mind being better at taking derivatives of log-posteriors and loglikes by hand
[02:22:32] <rickyrick> ( ͡° ͜ʖ ͡°)
[02:23:20] <Bayes> (◕︵◕)
[02:23:54] <rickyrick> ( ͠° ͟ʖ ͡°)
[02:27:14] <Bayes> ( ͡° ︵ ͡°)
[02:27:20] <Bayes> sadlenny
[02:29:55] <twrk> log-posteriors...
[02:30:02] <twrk> thanks Bayes for keeping the channel academic
[02:30:15] <Bayes> gah you gave me the goosebumps
[02:30:36] <Bayes> ^ rickyrick that was for you ;_;
[02:30:53] <Bayes> I have done this so far https://i.imgur.com/bDRH8vX.png
[02:32:08] <Bayes> and now it happens that K_y(x, x') is a function of theta of the form... h(g(x, x', f(theta)))
[02:32:20] <Bayes> twrk:D  happy to oblige
[02:32:31] <Bayes> or maybe it was sarcastic （．＿．）
[02:35:58] <Bayes> ^ hence why autodiff is the way https://th.bing.com/th/id/OIP.egBqIHrLhc16LuzJN5OWYAHaEd
[02:41:36] *** Quits: usr725635 (~User@cpe-45-47-86-32.twcny.res.rr.com) (Ping timeout: 272 seconds)
[02:50:20] <rickyrick> ( ͡o ͜ʖ ͡o)
[02:51:12] <rickyrick> Bayes: One chain rule to rule them all
[02:51:21] <rickyrick> Reminds me of GLMs
[03:20:07] <Colombo> I have PhD in stats and I don't know any of this shit. I feel bad.
[03:22:29] <Colombo> I think my github contributions spell something: https://imgur.com/HvcwAjE.png
[03:22:34] <mefistofeles> Colombo: no worries, PhDs are experts in pretending they know their fields completely, that works for every field out there
[03:22:37] <mefistofeles> :P
[03:22:48] <mefistofeles> Colombo: lol
[03:22:57] <rickyrick> Colombo: You got half a space invader in Nov-Dec
[03:23:28] <Colombo> there is S, A, P, G, S, R,S... and then a heavy metal hand sign.
[03:25:29] <Colombo> mefistofeles: I want to know more of stats. I read something interesting... and in a week I completely forget it.
[03:25:32] <Colombo> Even stuff I derived myself.
[03:26:00] <mefistofeles> Colombo: yeah, I think that's also expected, even though there are definitely some that do remember everything they read 
[03:26:26] <mefistofeles> Colombo: the trick is practicing, I've figured out lately that whatever I read I try to put into code (as possible), once I do that, it's much harder to forget
[03:26:35] <mefistofeles> even just a mock up non-functioning code works
[03:27:21] <Colombo> mefistofeles: haha, no. I forgot that as well. But I will try to remember that.
[03:51:46] <Colombo> anyone knows when |> will be public?
[03:52:00] <Colombo> (and all the \( stuff that come with it)
[03:52:11] <Colombo> is there some status of it I can read?
[03:53:00] <rickyrick> wat
[03:53:04] <rickyrick> |> is already out
[03:55:27] <Colombo> oOo
[03:55:37] <Colombo> tried to use it last week and got an error
[03:55:48] <rickyrick> 4.1.0+
[03:56:03] <rickyrick> => isn't officially out yet though
[03:56:20] <Colombo> what => was for again?
[03:56:31] <rickyrick> Assigning the result to an intermediate variable
[03:56:44] <rickyrick> tbh I'd just be happy if they'd let us |> to an anonymous function
[03:56:58] <Colombo> wat, you can't?
[03:57:01] <rickyrick> Nope :^)
[03:57:06] <rickyrick> Which is why I'm still using %>%
[03:57:48] <Colombo> you can
[03:58:04] <rickyrick> wat
[03:58:07] <Colombo> 1:3 |> (function(x){print(x)})()
[03:58:14] <Colombo> its even in ?"|>" documentation
[03:58:19] <rickyrick> I get Error: function '(' not supported in RHS call of a pipe
[03:58:28] <rickyrick> Oh pfpfpfpfpt
[03:58:31] <rickyrick> You need the trailing ()
[03:58:34] <Colombo> yes
[03:58:36] <Colombo> always
[03:58:47] <rickyrick> Yeah that's another reason why I use %>% still :^)
[03:58:50] <Colombo> 1:3 |> print won't work either
[03:58:58] <Colombo> I always use () anyway
[03:58:59] <rickyrick> I can do x %>% f %>% g and not x |> f() |> g()
[03:59:29] <Colombo> x %>% f %>% g is spawn of Belzebub anyway
[03:59:32] <rickyrick> ( ͡° ͜ʖ ͡°)
[03:59:37] <rickyrick> Works for me (TM)
[03:59:41] <Colombo> how is => used?
[04:00:32] <rickyrick> x |> f() => y |> g(a,b,c,y)
[04:01:20] <Colombo> is this: g(a,b,c,f(x)) ?
[04:02:01] <rickyrick> Yep
[04:03:34] <Colombo> so more wordy replacement of . ?
[04:04:19] <rickyrick> 01Yep01
[04:32:04] <Colombo> ba = "BA"; paste0(ba[1], ba[2], ba[3])
[04:35:14] <rickyrick> ( ͡o ͜ʖ ͡o)
[04:38:53] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:33:54] *** Joins: twrk_ (~user@user/twrk)
[05:34:30] *** Quits: twrk (~user@user/twrk) (Ping timeout: 272 seconds)
[07:51:00] *** Joins: px (~px@ool-457980ed.dyn.optonline.net)
[07:53:37] *** Quits: px (~px@ool-457980ed.dyn.optonline.net) (Changing host)
[07:53:37] *** Joins: px (~px@user/px)
[08:59:06] *** Quits: Colombo (~jmoravec@132.181.20.202) (Quit: Leaving.)
[09:53:20] *** Joins: debianero (~debianero@60.132.134.77.rev.sfr.net)
[09:56:14] *** Joins: busker (~b@64.106.196.104.bc.googleusercontent.com)
[09:59:09] <busker> I have 2 lists, (eg a <- c(1, 2, 3) and b <- c(10, 20, 30).  I want to create a dataframe where `a` is the index, and `b` are the columns, and the values are the result of some function `f(a[i], b[j])`.  Any tips?
[10:00:55] <rickyrick> So you're expecting a 3x3 matrix?
[10:01:59] <busker> ya
[10:04:06] <rickyrick> outer(a, b, f)
[10:04:16] <rickyrick> The caveat is that f needs to be a vectorized function over both it's parameters
[10:04:46] <rickyrick> Which you can automagically vectorize using Vectorize(f) if you need
[10:05:11] <rickyrick> row and col names aren't automatically assigned though
[10:05:30] <busker> cool that gets me mostly there! 
[10:05:32] <busker> thanks
[10:05:37] <rickyrick> ( ͡° ͜ʖ ͡°)
[10:08:31] <twrk_> i prefer to see ͡ as the eyes
[10:08:40] <rickyrick> ( ͡o ͜ʖ ͡o)
[10:09:00] <rickyrick> I'm gonna just shave my eyebrows ( ° ͜ʖ °)
[10:44:09] <busker> I'm coming from Python land - R is tangling my mind!.... I have a tibble and I want to sum a subset of the columns (the names of the columns are in the array `frequencies`)... this is what I have `as_tibble(base) %>% rowwise() %>% mutate(L = 10 * log10(sum(10 ** (frequencies / 10))))` ... how do I tell R that `frequencies` are the column names?
[11:02:37] <rickyrick> Did you want to collapse the number of rows to one or just have the same value in each row
[11:03:13] <rickyrick> mutating like that will also get you a single new column called L
[11:10:01] <rickyrick> d'oh I think I misread your question
[11:11:48] <rickyrick> busker: See ?c_across
[11:26:12] <busker> perfect!
[11:26:14] <busker> thanks heaps
[11:26:42] <rickyrick> ( ͡° ͜ʖ ͡°)
[11:29:07] *** Joins: triberio13 (~triberio1@195.53.32.158)
[11:35:47] <twrk_> thanks stacks
[11:38:02] *** Joins: palasso (~palasso@user/palasso)
[11:42:25] *** Joins: OP-0 (~pca290122@adsl-d146.84-47-79.t-com.sk)
[11:44:00] *** Quits: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net) (Killed (NickServ (GHOST command used by rickyrick_)))
[11:44:00] *** Joins: rickyrick_ (~rickyrick@d23-16-13-108.bchsia.telus.net)
[11:44:37] *** rickyrick_ is now known as rickyrick
[11:44:43] *** Quits: OP-0 (~pca290122@adsl-d146.84-47-79.t-com.sk) (Client Quit)
[11:44:52] <rickyrick> heapoverflow
[11:48:55] *** Quits: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net) (Read error: Connection reset by peer)
[11:49:38] *** Joins: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net)
[12:04:52] *** Joins: Vojtaeus (~vojta@user/vojtaeus)
[12:18:55] *** Joins: mooes (~mooes@p4fdc6d07.dip0.t-ipconnect.de)
[13:48:07] *** Joins: davor_ (~davor@user/davor)
[13:48:23] *** Quits: davor (~davor@user/davor) (Ping timeout: 256 seconds)
[14:01:02] *** Quits: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net) (Ping timeout: 260 seconds)
[14:17:11] *** Quits: Vojtaeus (~vojta@user/vojtaeus) (Ping timeout: 260 seconds)
[14:40:06] *** Joins: halabund (~halabund@2a02:2454:9d42:8500:50ec:1be3:8e2a:9d1e)
[14:40:36] <halabund> Is there a function in R which takes two vectors, x and y, and a function f, and returns a matrix m so that m[i,j] = f(x[i], y[j])?
[14:40:49] <halabund> If not, what is the best way to implement this? R novice here.
[14:43:05] <mooes> outer()
[14:59:39] <confuzeus> also Map()?
[15:00:48] *** Joins: usr725635 (~User@cpe-45-47-86-32.twcny.res.rr.com)
[15:01:20] <confuzeus> oops map does not return a matrix.
[15:05:43] <halabund> what is instead of vectors x and y, I have two matrices, which I want to effectively treat as "vectors of rows"?
[15:06:18] <halabund> I am looking for the same output as from outer(), but I want to operate together the rows of two input matrices
[15:08:55] <mooes> matrices are stored internally as vectors - they are in essence just vectors with dimensions attached to them.
[15:09:47] <mooes> if you want them by row, you will have to transpose them
[15:09:52] <mooes> see: c(t(matrix(1:6, 2, 3, byrow=TRUE)))
[15:14:58] *** Joins: baffodoro (~raffaem@77-32-119-245.dyn.eolo.it)
[15:17:15] *** Joins: julius3 (~raffaem@45.91.20.212)
[15:18:16] *** Quits: halabund (~halabund@2a02:2454:9d42:8500:50ec:1be3:8e2a:9d1e) (Quit: Leaving...)
[15:20:23] *** Quits: baffodoro (~raffaem@77-32-119-245.dyn.eolo.it) (Ping timeout: 260 seconds)
[15:23:52] *** Quits: julius3 (~raffaem@45.91.20.212) (Ping timeout: 246 seconds)
[16:17:50] <Bayes> `x |> f() => y |> g(a,b,c,y)` that's quite the expression
[16:57:24] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[18:07:32] *** Quits: triberio13 (~triberio1@195.53.32.158) (Quit: Konversation terminated!)
[20:03:00] *** Joins: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net)
[20:28:57] *** Joins: rickyrick_ (~rickyrick@d23-16-13-108.bchsia.telus.net)
[20:28:57] *** Quits: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net) (Killed (NickServ (GHOST command used by rickyrick_)))
[21:28:35] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[21:28:52] *** Quits: mooes (~mooes@p4fdc6d07.dip0.t-ipconnect.de) (Quit: mooes)
[22:40:50] *** Joins: triberio13 (~triberio1@195.53.32.158)
[23:33:46] <Bayes> (＾▽＾)
[23:42:35] *** Quits: triberio13 (~triberio1@195.53.32.158) (Quit: Konversation terminated!)
[23:43:55] *** rickyrick_ is now known as rickyrick
[23:48:48] <rickyrick> ( ͡° ͜ʖ ͡°)
