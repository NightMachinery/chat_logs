[00:03:41] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Quit: WeeChat 3.4)
[00:07:54] *** Joins: kaarmu (~kaarmu@2001:2002:4e46:88d7:da60:17d3:5adb:8a4)
[00:23:16] <andrewrk> tsmanner, ability to select different libc++ versions is not something zig offers; our goal is to always ship an up-to-date libc++ that "just works" with everything
[00:23:29] <andrewrk> (clearly the goal is not being accomplished in this example for you)
[00:32:56] <tsmanner> Gotcha, I must be thinking of linking against some precompiled system libc versions or something.  Would an issue be appropriate then for the deque example then?
[00:35:21] <andrewrk> yes
[00:36:24] <tsmanner> Just kidding, looking through the source, this define does it `_LIBCPP_ABI_INCOMPLETE_TYPES_IN_DEQUE`
[00:38:53] <andrewrk> is that something we should enable in src/libcxx.zig or src/libcxxabi.zig?
[00:41:34] <tsmanner> It's not clear to me yet how it's used.  Looks like it is related to how the deque does memory allocation, that define sets it to 0 rather than making it a function of the size of the contained type.
[00:42:19] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Ping timeout: 250 seconds)
[00:42:34] *** Joins: Giovanni (~Giovanni@176.54.32.122)
[00:43:23] <tsmanner> My intuition is that setting it globally is disabling some memory optimizations that are probably good for normal use, it's just this recursive case that needs to punt, so it's probably better to put the `#define` in the source file that needs a deque of Self
[00:57:42] <tsmanner> Yup, the alloc/dealloc calls are passing __block_size around, and copy/move operations are a function of __block_size.  0 (what the define sets it to) nullifies the block size terms so all that stuff operates on sizeof(_ValueType).
[01:09:08] *** Joins: elves-upstate (~elves-ups@129-2-180-42.wireless.umd.edu)
[01:10:17] *** Quits: elves-upstate (~elves-ups@129-2-180-42.wireless.umd.edu) (Client Quit)
[01:12:29] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:28:27] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:33:38] *** Quits: kaarmu (~kaarmu@2001:2002:4e46:88d7:da60:17d3:5adb:8a4) (Quit: WeeChat 3.4.1)
[01:40:15] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[01:50:55] *** Quits: qbit (~qbit@h.suah.dev) (Quit: WeeChat 3.3)
[01:51:33] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[01:53:34] *** Joins: kron (~weechat@user/qaph)
[02:00:54] <haze> good afternoon ifreund how are we doing this fine evening
[02:15:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:17:32] *** Quits: jemius (~imperator@200116b82d784b0094b455ea259c6385.dip.versatel-1u1.de) (Quit: Leaving)
[02:24:36] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Ping timeout: 240 seconds)
[02:24:47] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:2015:9361:6306:3ac4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:07] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 256 seconds)
[03:04:18] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[03:06:41] *** Quits: erik` (~erik@168.235.65.21) (Ping timeout: 256 seconds)
[03:07:03] *** Joins: erik` (~erik@168.235.65.21)
[03:10:57] *** Joins: moog (~moog@107.126.53.19)
[03:23:44] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:2015:9361:6306:3ac4)
[03:27:24] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[03:33:22] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:2015:9361:6306:3ac4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:34:10] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[03:37:36] *** Joins: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net)
[03:44:07] *** Quits: factor (~factor@c-73-68-120-166.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[03:51:21] *** Quits: d0p1 (~d0p1@gateway/tor-sasl/d0p1) (Remote host closed the connection)
[03:51:45] *** Joins: d0p1 (~d0p1@gateway/tor-sasl/d0p1)
[03:52:29] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[04:01:53] *** Joins: qbit (~qbit@h.suah.dev)
[04:01:54] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:24:00] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[04:42:57] *** Joins: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net)
[04:51:34] *** Joins: rgrinberg (~textual@177.244.18.30)
[05:00:23] *** Quits: rb (~augh@alogs.space) (Remote host closed the connection)
[05:01:37] *** Joins: rwb (~augh@alogs.space)
[05:17:04] *** Joins: polykernel[m] (~polykerne@user/polykernel)
[05:17:15] *** Parts: polykernel[m] (~polykerne@user/polykernel) ()
[05:21:38] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[05:27:55] *** Quits: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[05:46:14] *** Joins: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles)
[05:47:14] *** Joins: ltriant_ (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com)
[05:48:04] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 250 seconds)
[05:49:51] *** Joins: cabal704 (~cabal704@user/cabal704)
[06:35:53] *** Quits: cabal704 (~cabal704@user/cabal704) (Quit: WeeChat 3.3)
[06:45:15] *** Quits: ltriant_ (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com) (Quit: leaving)
[07:04:54] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:10:19] *** Joins: sheeldotme[m]1 (~sheeldotm@2001:470:69fc:105::1:d886)
[07:20:54] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:24:47] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[07:25:06] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[07:37:33] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[07:46:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 245 seconds)
[07:52:52] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 250 seconds)
[07:53:28] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[07:57:56] *** Joins: rgrinberg (~textual@177.244.18.30)
[07:59:24] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Ping timeout: 240 seconds)
[08:08:54] <sm2n> quick question: is it possible to do IO at comptime? For example, to parse some data file to initialize a data structure?
[08:11:08] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:14:15] *** Quits: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[08:14:44] <daurn> sm2n: in general, no.
[08:14:56] <daurn> sm2n: the one thing you have those is `@embedFile` which lets you read an entire file as a string at comptime
[08:15:07] <daurn> which might let you do what you're trying to do
[08:17:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[08:29:41] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[08:33:35] *** Quits: Giovanni (~Giovanni@176.54.32.122) (Remote host closed the connection)
[08:34:15] *** Joins: Giovanni (~Giovanni@176.54.32.122)
[08:37:38] <sm2n> thanks
[08:38:22] *** Quits: Giovanni (~Giovanni@176.54.32.122) (Remote host closed the connection)
[08:39:36] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[08:48:16] *** Quits: LostKobrakai (~LostKobra@dia.uberspace.de) (Ping timeout: 245 seconds)
[08:48:25] *** Joins: LostKobrakai (~LostKobra@dia.uberspace.de)
[08:58:42] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[09:24:39] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 256 seconds)
[09:24:39] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 256 seconds)
[09:24:53] *** Joins: shodan45 (~quassel@107.161.22.155)
[09:25:54] *** Joins: finsternis (~X@23.226.237.192)
[09:48:39] *** Quits: Snetry (~snetry@ipservice-092-209-081-052.092.209.pools.vodafone-ip.de) (Quit: left Libera)
[09:49:50] *** Joins: Snetry (~snetry@ipservice-092-209-081-052.092.209.pools.vodafone-ip.de)
[10:01:49] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[10:18:14] *** Quits: d0p1 (~d0p1@gateway/tor-sasl/d0p1) (Remote host closed the connection)
[10:29:00] *** Joins: notzmv (~zmv@user/notzmv)
[10:49:54] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[10:55:09] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[11:09:09] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 252 seconds)
[11:17:02] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:22:10] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 250 seconds)
[11:23:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[11:36:36] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:53:39] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[11:56:59] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: Konversation terminated!)
[11:59:42] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[12:05:18] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[12:15:53] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[12:21:15] *** Joins: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl)
[12:22:48] *** Joins: lispy (~lispy@user/lispy)
[12:22:59] *** Quits: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl) (Client Quit)
[12:23:16] *** Joins: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl)
[12:25:36] *** Quits: bozo (~bozo@188.252.187.234) (Ping timeout: 252 seconds)
[12:28:09] *** Joins: bozo (~bozo@188.252.188.196)
[12:34:57] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:35:15] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[12:47:26] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 245 seconds)
[12:47:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[12:56:21] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:2015:9361:6306:3ac4)
[13:01:36] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[13:09:24] *** Joins: tomedtan (~tomec@197.210.71.162)
[13:10:19] *** Parts: tomedtan (~tomec@197.210.71.162) ()
[13:12:46] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Remote host closed the connection)
[13:18:49] *** Joins: mitchyg (~mitchygt_@110-175-21-190.static.tpgi.com.au)
[13:20:57] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Ping timeout: 240 seconds)
[13:30:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:33:59] *** Joins: mitchy_g (~mitchygt_@61.69.254.102)
[13:36:30] *** Quits: mitchyg (~mitchygt_@110-175-21-190.static.tpgi.com.au) (Ping timeout: 250 seconds)
[13:45:53] *** Quits: mitchy_g (~mitchygt_@61.69.254.102) (Quit: Leaving)
[13:47:15] *** Quits: duck2 (~duck2@146.185.156.161) (Quit: Ping timeout (120 seconds))
[13:47:43] *** Joins: duck2 (~duck2@146.185.156.161)
[14:28:16] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[14:33:49] *** Joins: dtan (~dta@102.91.4.168)
[14:34:12] *** Parts: dtan (~dta@102.91.4.168) ()
[14:41:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:10:27] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[15:15:02] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[15:24:50] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[15:32:31] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[15:39:11] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[15:43:38] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[15:48:17] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[16:34:09] *** Joins: jemius (~imperator@200116b82de20500ecfedc3f56b424eb.dip.versatel-1u1.de)
[16:46:37] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[16:55:43] <cot> If I create an EnumFieldStruct, is there any way to get that struct's field by an invariant of the enum without iterating over each struct field and checking if the string matches?
[16:55:59] <cot> (Oh, and which enum invariant it is isn't comptime known)
[17:07:23] *** Joins: vent (~user@185.201.0.197)
[17:10:03] <vent> Hi, I'm seeing a function named 'align()' in the std source code, and I'm wondering where I can find it's definition? I've tried grepping around and I can't find it. Is it a qualifier?
[17:10:38] <ifreund> vent: it's not a function, but rather part of the language's syntax yeah
[17:10:57] <ifreund> it's valid as a pointer attribute and on struct fields
[17:11:44] <ifreund> and variables, and functions too I believe
[17:12:40] <vent> Ahhh okay that explains why I can't find the definition then haha. So does it just modify the type's alignment?
[17:13:42] *** Joins: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles)
[17:14:34] <ifreund> pretty much, alignment is part of the type system in zig
[17:15:17] <ifreund> i.e. @alignCast() and @ptrCast() are distinct
[17:15:37] <vent> Yeah I've noticed that when interopping with C
[17:16:54] <vent> Example that comes to mind is casting a *void to something else. I had to do something like @ptrCast(T, @alignCast(@alignOf(T), c_ptr))
[17:35:57] <braewoods> it probably is used for determining alignment of structs and allocated pointers
[17:38:46] *** Quits: braewoods (~braewoods@user/braewoods) (Quit: WeeChat 2.8)
[17:42:58] *** Joins: braewoods (~braewoods@user/braewoods)
[17:54:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[18:01:01] *** Quits: jemius (~imperator@200116b82de20500ecfedc3f56b424eb.dip.versatel-1u1.de) (Remote host closed the connection)
[18:09:11] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[18:10:35] *** Joins: arkurious (~arkurious@user/arkurious)
[18:12:45] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[18:19:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[18:32:03] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[18:35:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:36:30] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:38:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:42:59] <tsmanner> cot: check out FieldEnum https://github.com/ziglang/zig/blob/master/lib/std/meta.zig#L571 you should be able to use that with a switch on a runtime known value
[18:43:30] <cot> Ah, thanks
[19:10:46] *** Quits: nullheroes (~nullheroe@168.235.66.22) (Quit: WeeChat 2.8)
[19:30:43] *** Quits: vent (~user@185.201.0.197) (Read error: Connection reset by peer)
[19:44:21] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:48:46] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: Konversation terminated!)
[20:03:51] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:2015:9361:6306:3ac4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:14:06] *** Joins: d0p1 (~d0p1@gateway/tor-sasl/d0p1)
[20:21:42] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:2015:9361:6306:3ac4)
[20:25:08] *** Joins: phaleth (~user@user/phaleth)
[20:28:10] <haze> andrewrk stream when?
[21:00:56] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[21:01:05] *** Joins: rgrinberg (~textual@177.244.18.30)
[21:02:57] *** Joins: xackus (~xackus@185.15.0.3)
[21:15:21] <andrewrk> haze, soon
[21:15:30] <andrewrk> let me just wake up and drink my tea :)
[21:16:37] <haze> epic
[21:26:52] *** Quits: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:37:35] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[21:40:00] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[21:45:19] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[21:45:44] *** Joins: kron (~weechat@user/qaph)
[21:54:31] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:55:10] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:03:57] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[22:08:51] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[22:14:40] <haze> has anyone used timer w/ async code? for whatever reason I get a super slow number with timer.read() after launching a bunch of tasks (that clearly take longer than the reported duration)
[22:24:41] <andrewrk> haze, I don't think std.timer is integrated with evented I/O yet
[22:24:48] <haze> that would explain it
[22:24:58] <andrewrk> e.g. if you sleep it just sleeps the kernel thread
[22:25:38] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 252 seconds)
[22:27:58] <haze> have you also witnessed arena allocator flipping out when used in async? it happens sparingly, but something in getAddressList w/r/t the arena allocator accesses something dangerous
[22:29:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[22:42:30] *** Quits: inr_ (~a@c-5817e555.040-159-73746f16.bbcust.telenor.se) (Quit: WeeChat 3.4)
[22:49:24] <andrewrk> nope I am not aware of any arena allocator bugs
[22:53:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[22:57:20] *** Joins: pkap (~pkap@193.32.127.213)
[22:57:29] <haze> I don't think its synchronized 
[23:02:32] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Ping timeout: 240 seconds)
[23:02:54] *** Joins: inr (~a@c-5817e555.040-159-73746f16.bbcust.telenor.se)
[23:08:19] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[23:08:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[23:31:22] *** Joins: ndwk (~ndwk@2607:fea8:c320:ce00:5980:ac15:b182:dca3)
[23:31:22] *** Quits: ndwk (~ndwk@2607:fea8:c320:ce00:5980:ac15:b182:dca3) (Changing host)
[23:31:22] *** Joins: ndwk (~ndwk@user/ndwk)
[23:35:13] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:38:03] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:b921:6822:fa0e:e017)
[23:44:24] <andrewrk> hmm I want to do a live stream but I also need to eat lunch and hit the gym
[23:44:40] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[23:44:59] <haze> put yourself first
[23:45:25] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: Textual IRC Client: www.textualapp.com)
[23:46:28] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Client Quit)
[23:46:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[23:47:26] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7::4)
[23:48:15] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[23:48:19] *** Joins: notzmv (~zmv@user/notzmv)
[23:48:37] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[23:53:00] *** Joins: kenran (~kenran@200116b82b1f7700d4eceb26990aed28.dip.versatel-1u1.de)
