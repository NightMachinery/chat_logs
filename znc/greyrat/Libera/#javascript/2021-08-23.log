[00:02:37] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[00:02:40] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:6db2:ea9e:70e8:1b11) (Ping timeout: 240 seconds)
[00:07:33] *** Quits: wintersky (uid453465@id-453465.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[00:08:12] *** Joins: matsaman (~matsaman@user/matsaman)
[00:10:43] *** Quits: Guest0 (~Guest0@170.78.96.182) (Quit: Client closed)
[00:15:38] *** Joins: CoolerX (~CoolerX@user/coolerx)
[00:16:18] *** Quits: CoolerX (~CoolerX@user/coolerx) (Client Quit)
[00:18:02] *** Joins: silly_ (~silly@user/silly)
[00:19:47] *** Joins: OhTheCode (~OhTheCode@143.165.220.203.dial.dynamic.acc01-west-rcm.comindico.com.au)
[00:20:46] *** Quits: cthulchu (~Cthulchu@46.211.59.153) (Ping timeout: 252 seconds)
[00:21:38] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 250 seconds)
[00:31:40] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[00:42:03] <gde35> what is everyones prefered hack to get text in the middle of a button? I'm trying to do arrows but they dont even line up. >«
[00:42:31] <gde35> https://jsfiddle.net/0kqrs58j/
[00:42:34] <gde35> lol
[00:45:59] *** Quits: Haxxa (~Haxxa@122.199.46.17) (Read error: Connection reset by peer)
[00:46:20] <gde35> guess ill draw them in css -.-
[00:46:39] *** Joins: pulse (~pulse@user/pulse)
[00:49:06] *** Joins: Haxxa (~Haxxa@122.199.46.17)
[00:49:54] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[00:50:13] <matsaman> gde35: tf is this fiddle?
[00:50:28] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 252 seconds)
[00:50:34] <gde35> matsaman: on my windos box the 2 "arrows" don't line up
[00:50:50] <gde35> these are suppose to be in the center of the line:  >«
[00:50:55] <gde35> on most fonts they are
[00:51:52] <gde35> I want buttons like [ > ][ » ]
[00:52:28] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[00:52:45] <GreenJello> so specify a font
[00:53:03] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:53:06] <gde35> yeah
[00:53:07] <matsaman> neither of those are arrows
[00:53:17] <GreenJello> that too
[00:53:35] <gde35> you want me to say raquo and greater than??
[00:53:46] <matsaman> no not that either
[00:54:00] <gde35> ofc out of the bazillion unicode symbols there is nothing usable
[00:54:15] <gde35> heaven forbid they even include a decent close button
[00:54:52] <gde35> but ok, how should I make next and previous buttons the right way?
[00:54:57] <matsaman> X?
[00:55:07] <matsaman> you coulde use > & <
[00:55:24] <matsaman> or raquo & laquo
[00:55:43] <matsaman> or just provide your own images/glyphs
[00:55:52] <matsaman> like GreenJello said
[00:55:53] <GreenJello> gde35, https://ject.dev/?saved=9HHHWDfG251DD
[00:56:12] <GreenJello> you could alternatively just use one character
[00:57:23] <gde35> <button>s seem a good idea
[00:57:39] <gde35> span is not accessable
[00:57:41] <GreenJello> maybe with a better character to repeat, like https://ject.dev/?saved=mkxou9UNyqeYz
[00:58:05] <GreenJello> was just an example
[00:58:28] <GreenJello> I'm just too lazy to reset button styles
[00:58:33] <matsaman> JS isn't accessible =P
[00:58:47] <gde35> matsaman: auw my head
[00:58:56] <matsaman> heh
[00:59:24] <gde35> setting a font was really a good answer I think
[00:59:46] <gde35> one brain cycle short of answering my own question
[00:59:48] <gde35> lol
[01:00:12] <matsaman> if you're already using fonts, may as well
[01:00:25] <matsaman> otherwise there are plenty of plain ascii chars you can use, as already mentioned
[01:01:28] *** Quits: dachinat (~dachinat@37.232.98.166) (Ping timeout: 252 seconds)
[01:03:17] *** Joins: Guest0 (~Guest0@170.78.96.182)
[01:03:49] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[01:06:11] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[01:07:31] <gde35> https://jsfiddle.net/tv706b42/
[01:09:25] *** Joins: dachinat (~dachinat@37.232.98.166)
[01:09:31] <matsaman> you're trying to line up an angle bracket and a quotation mark
[01:09:34] <matsaman> there's no reason for them to line up
[01:10:02] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Client Quit)
[01:10:05] <gde35> matsaman: no no, I'm trying to center them in the button
[01:10:31] <GreenJello> would you try to center a letter and a "?
[01:10:49] <gde35> matsaman: either one is fine rly. I can sort of manage by setting paddings line height etc but I'm simply wondering what should be the right approach
[01:10:58] <GreenJello> they're characters, not icons
[01:11:05] <gde35> I know
[01:11:06] <matsaman> button { font: 52px/52px sans-serif; }
[01:11:36] <gde35> matsaman: wild!
[01:12:38] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:12:45] <gde35> that looks considerably better than the ugly hacks I keep running into and made myself
[01:13:13] <gde35> button { font: 99px/99px sans-serif;width:99px }
[01:13:42] * matsaman shrugs
[01:15:52] <gde35> min-width:99px
[01:18:05] *** Joins: mikrosis (~mikrosis@dynamic-046-114-173-229.46.114.pool.telefonica.de)
[01:18:59] <gde35> https://jsfiddle.net/2vygj6ez/
[01:22:09] <GreenJello> not centered for me
[01:22:29] <gde35> oh? what os/browser?
[01:22:37] <GreenJello> macos chrome
[01:22:49] <gde35> windos chrome works
[01:22:51] <gde35> odd
[01:23:09] <GreenJello> you're not really specifying a font
[01:23:42] <gde35> I tried some but the arrow seemed to look the same
[01:24:00] *** Joins: CiaoSen (~Jura@p200300c957490d002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[01:24:18] *** Joins: onosendi (~onosendi@user/onosendi)
[01:24:25] <gde35> GreenJello: how far off is it?
[01:24:26] <GreenJello> Arial seems to work for me
[01:24:47] <GreenJello> might be off by a pixel or so still
[01:24:49] <GreenJello> not sure
[01:25:01] <gde35> oh I'm not worried about that
[01:25:04] <GreenJello> it was like 10% off before
[01:25:14] <GreenJello> with sans-serif
[01:25:18] <gde35> cool, thanks man
[01:25:43] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Ping timeout: 244 seconds)
[01:27:03] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:28:24] <gde35> didn't even know there was a font shorthand
[01:29:14] *** Quits: CiaoSen (~Jura@p200300c957490d002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:30:15] *** Joins: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de)
[01:38:00] <gde35> iphone adds a ton of padding :(
[01:40:07] *** Joins: Junxter (~Junxter@121.237.61.175)
[01:42:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[01:46:49] *** Quits: kakashiAL (~kakashi@188.111.42.10) (Ping timeout: 248 seconds)
[01:47:23] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[01:47:26] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[01:47:34] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:47:36] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[01:48:12] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:20] *** Joins: venue (~venue@user/venue)
[01:49:49] *** Gustavo6046_ is now known as Gustavo6046
[01:52:25] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[01:52:54] <matsaman> https://www.visibone.com/font/FontResults.html
[01:53:24] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:57:08] *** Joins: wroathe (~wroathe@user/wroathe)
[01:57:23] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[01:57:33] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[01:57:33] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[01:57:33] *** Joins: wroathe (~wroathe@user/wroathe)
[02:06:28] *** Junxter is now known as ooxoo
[02:22:54] *** Joins: autistic (~linguist@170.84.56.192)
[02:24:58] <gde35> I'm going with this and give up https://jsfiddle.net/2vygj6ez/17/
[02:24:59] *** Quits: autistic (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[02:26:15] *** Joins: autistic (~linguist@170.84.56.192)
[02:26:42] <systemfault> The background is evil for the eyes...
[02:26:55] <systemfault> UX Jesus is sad.
[02:26:57] <gde35> its there for that purpose
[02:27:19] <gde35> the buttons should be seeable regardless of how terrible the background
[02:27:43] *** Joins: matsaman (~matsaman@user/matsaman)
[02:31:34] *** Joins: sillyslux__ (~silly@user/silly)
[02:32:25] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[02:32:56] *** Quits: dachinat (~dachinat@37.232.98.166) (Ping timeout: 250 seconds)
[02:33:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[02:38:16] *** Quits: autistic (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[02:39:30] *** Joins: autistic (~linguist@170.84.56.192)
[02:43:35] <autistic> Hello!
[02:44:25] <autistic> Which of the mentioned solutions on this question would be the 'best practice' for a literal-to-template conversion? https://stackoverflow.com/questions/29182244/convert-a-string-to-a-template-string
[02:45:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[02:45:37] <autistic> I thought the first one (setting String.prototype) would be handy and cool, but I'm unsure whether it's a goodp practice and how far would the new prototype go (i.e. inside a module, would it change it in a code importing that module?)
[02:45:49] <autistic> If anyone could explain the whys I would thank you a lot
[02:48:21] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[02:48:57] <gde35> GreenJello: how does safari deal with lazy loading out of the box if it doesn't have loading="lazy" ?
[02:49:14] <gde35> GreenJello: does it just attempt to load everything or does it do its own thing?
[02:49:16] <matsaman> autistic: using an object key/value lookup is pretty normal
[02:49:49] <GreenJello> not familiar with that attribute
[02:50:10] <gde35> GreenJello: it loads images outside the viewport depending on connection speed
[02:50:25] <matsaman> that's probably just ordinary old fashioned loading
[02:50:27] <gde35> GreenJello: on a fast connection it doesn't load them until in the viewport
[02:50:40] <matsaman> gde35: how do you know?
[02:50:45] <autistic> matsaman you mean adding the prototype that does the lookup?
[02:50:48] <codebam> what's the correct way of handling promises without using await?
[02:51:02] <GreenJello> autistic, a standalone function is better than modifying native prototypes in all cases
[02:51:09] <gde35> matsaman: which part?
[02:51:09] <matsaman> autistic: that's just an implementation detail
[02:51:17] <codebam> I use then right, but how do I actually handle the promise?
[02:51:24] <matsaman> autistic: looking up a value from a key allows you to avoid eval
[02:51:34] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 250 seconds)
[02:51:46] <matsaman> gde35: that the images aren't loaded till you scroll to them
[02:51:49] <GreenJello> autistic, modifying built-in things is likely to break unrelated code on a page
[02:52:37] <autistic> Ohhh, I got what you mean, matsaman but, I'm worried about multiple levels on that object for instance
[02:52:39] <autistic> Or arrays
[02:52:52] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[02:53:00] <gde35> matsaman: you see it? https://css-tricks.com/native-lazy-loading/
[02:53:10] <autistic> If I have something like: ${parameters.var1.something.anything[5]}
[02:53:14] <GreenJello> autistic, there are relatively simple template languages like mustache you could use here
[02:53:20] <matsaman> gde35: in Safari?
[02:53:42] <gde35> matsaman: I don't have safari, that is why I ask ;)
[02:53:57] <matsaman> gde35: oh
[02:54:00] <autistic> GreenJello I'm using a very specific js library, sadly it's not an option
[02:54:06] <matsaman> gde35: I assume it doesn't happen, as it's listed as unsupported by default everywhere
[02:54:07] <gde35> matsaman: the iphone seems to load stuff in the viewport fast enough if there is a lot below
[02:54:24] <GreenJello> autistic, can you elaborate on the restriction?
[02:54:41] <matsaman> gde35: well, phone OSes are pretty good at prioritizing resources, vs desktop OSes
[02:54:49] <codebam> if I use then and I'm calling more code after it it's going to give an unhandled promise error right?
[02:54:49] <gde35> yeah
[02:55:04] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:55:13] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:55:30] <gde35> matsaman: pretty good but then again between lazy loading and webp apple is the new microsoft holding back the web -.-
[02:55:37] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[02:55:57] <matsaman> apple has always been that apple =P
[02:56:01] <GreenJello> codebam, you're either returning the promise, in which case the caller is responsible for handling errors, or you're the end of the promise chain, where you need to handle errors
[02:56:10] <matsaman> Microsoft held it back by doing zero work while they were most popular
[02:56:15] <matsaman> Apple actively holds it back on purpose
[02:56:18] <matsaman> and always has
[02:56:38] <matsaman> but these aren't even real problems
[02:57:06] <autistic> GreenJello sure... I am writing a psychologial experiment using lab.js, and lab.js has a canvas which receives an object {} containing options... The options.content parameter is an array of objects, some of them being template-like strings (i.e. { ..., width: '${parameters.objectwidth} + 5 '})
[02:57:19] <matsaman> there was a time when there wasn't even a single video format you could expect to work in every browser
[02:57:38] <gde35> matsaman: <embed> was hysterical
[02:57:39] <autistic> I need to use this library because response-time measuring with precision is somewhat tricky to do things on my own
[02:57:50] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:57:53] <autistic> Anyway, I need to handle several things not supported in the library
[02:57:59] <matsaman> now you get to waste time adopting webp because Safari's about to have it most places, even though we already have plenty of functioning image formats
[02:58:17] <gde35> matsaman: but today, if I put some video on my server and use <video> firefox cant seek in it
[02:58:30] <matsaman> well you probably made it poorly
[02:58:34] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[02:58:37] <matsaman> or aren't using a proper web server that supports h.264 streaming
[02:58:39] <matsaman> or both
[02:58:59] <gde35> matsaman: certainly both but that is no excuse for ff not to download the video and play it
[02:59:09] <autistic> And the library has poor error handling, so when I do things a little bit more dynamic it bites me, for instance, I wanna pass a series of objects that might not be used, depending on the model of the problem for each iteraction in a trial...
[02:59:19] <matsaman> gde35: instead of pretending like it's streaming it and make you wait? I s'pose
[02:59:38] <gde35> if there is no seeking there is no seeking
[02:59:39] *** Joins: pycurious (~Adium@user/pycurious)
[02:59:46] <matsaman> seeking is nice, but
[02:59:54] <autistic> It works fine if I have a ${something} parameter, but when I have ${something.something2.something3}, in the absence of something2 in something it breaks
[03:00:07] <matsaman> even better is when you aren't trying to communicate tons of bits of information via video, and instead use text =P
[03:01:31] <GreenJello> autistic, it is generally expected that this would fail, in any language
[03:01:40] <GreenJello> but can you modify the templates?
[03:02:26] <GreenJello> you might be able to do something like ${get(something, 'something2.something3')}
[03:02:35] <GreenJello> and have it fail soft
[03:02:42] *** Joins: _xxoxx (~Junxter@121.237.61.175)
[03:02:50] <autistic> GreenJello yes, I can, the template is mine, but that doesn't solve... Ohhhh yes, a function
[03:02:57] <autistic> I'll take a look if it works!!
[03:03:03] <GreenJello> !extract
[03:03:03] <jellobot> GreenJello, extract({a: {b: {c: 5}}}, "a.b.c") gives 5 -- code: https://gist.github.com/brigand/8324917
[03:03:43] <GreenJello> the second version of the function there handles missing parts of the path, and lets you specify a fallback value
[03:03:49] <autistic> That sounds like precisely what I'm looking for
[03:03:53] *** Joins: byanka (~byanka@78.137.43.40)
[03:06:11] <autistic> Ohhh, the use of a function inside the template seems to work
[03:06:25] *** Quits: ooxoo (~Junxter@121.237.61.175) (Ping timeout: 268 seconds)
[03:06:43] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:6db2:ea9e:70e8:1b11)
[03:07:48] <autistic> Now about the extract, would the second version not throw the TypeError when I do, for instane, extract({a: {b: {c: 5}}}, "a.d.e") ?
[03:08:14] <autistic> Well, I could write an intermediate function handling the error
[03:09:21] <autistic> Ohhh I see, alternative is the default value, I could just pass an empty string and be all done
[03:09:23] <autistic> Thanks!!
[03:09:50] *** Quits: _xxoxx (~Junxter@121.237.61.175) (Quit: Leaving)
[03:10:30] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:12:56] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:13:02] <codebam> how do I use Promise.all() but concat the two arrays that are returned?
[03:17:03] <GreenJello> codebam, you're asking how to concat two arrays, or...?
[03:18:00] <codebam> do I just concat them in the .then()?
[03:18:50] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:19:11] <GreenJello> not clear, but probably
[03:19:27] *** Joins: brunodOut (~linguist@170.84.56.192)
[03:19:59] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:20:33] <codebam> I have two async methods that each return [{}, {}, {}]
[03:21:07] <codebam> so I can either make the second function take a promise and return the concatenated arrays or I can concat them in the .then() of Promise.all()
[03:21:10] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:21:22] <codebam> but then I still need to await in my return statement?
[03:21:27] <codebam> or no?
[03:22:36] <GreenJello> ah, then yes, if you want them to run concurrently you should concat the arrays after Promise.all resolves
[03:22:51] <GreenJello> in a .then or after awaiting it
[03:23:39] *** Quits: autistic (~linguist@170.84.56.192) (Ping timeout: 258 seconds)
[03:24:24] <GreenJello> Promise.all([m1(), m2()]).then(([a, b]) => a.concat(b))
[03:24:41] <electrostatic> Promise.all(promiseList).then(returnList => concat(returnList));
[03:24:47] <codebam> oh okay I didn't realize I could use that a, b syntax
[03:24:49] <codebam> thank you
[03:25:06] <electrostatic> What I said was slightly different, but same idea
[03:25:07] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:25:50] <electrostatic> there is a list of all return values form all the promises in Promise.all that automagically becomes the first argument to and lambda put in then()
[03:26:01] <electrostatic> *any
[03:29:51] *** Joins: tonelo (~tonelo@host-82-63-114-167.business.telecomitalia.it)
[03:30:22] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[03:30:29] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:31:42] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 258 seconds)
[03:31:43] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:32:20] *** Joins: Guest64 (~Guest64@165-73-119-36.ip.afrihost.capetown)
[03:32:48] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:33:55] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:39:01] *** Quits: Guest0 (~Guest0@170.78.96.182) (Ping timeout: 246 seconds)
[03:40:02] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[03:40:33] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:42:17] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:42:33] <codebam> I switched it to using a reducer and concat, but thank you
[03:46:16] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[03:47:53] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:48:46] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[03:49:13] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[03:54:14] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[03:55:11] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:58:03] *** Quits: Guest64 (~Guest64@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[03:59:37] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[04:07:15] *** Joins: k162 (k162@user/k162)
[04:18:08] *** Joins: l__q (~modinfo@user/modinfo)
[04:20:58] *** Joins: Naan` (~Naan@user/naan)
[04:21:30] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[04:22:03] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[04:24:18] *** Quits: brunodOut (~linguist@170.84.56.192) (Ping timeout: 250 seconds)
[04:25:11] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[04:25:43] *** Quits: voltage_ (voltage@user/voltage) (Remote host closed the connection)
[04:25:54] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[04:26:18] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[04:26:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[04:27:24] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[04:27:48] *** Joins: voltage_ (voltage@user/voltage)
[04:33:32] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:38:40] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[04:47:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:50:16] <mikrosis> hi
[04:51:07] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[04:53:01] <matsaman> ohai
[04:54:24] <sheetjs> ohai
[04:55:08] <sheetjs> "The call would have succeeded against this implementation, but implementation signatures of overloads are not externally visible."
[04:55:12] <sheetjs> surprisingly informative error message
[04:55:59] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:56:28] <matsaman> quite
[04:58:04] <neshpion> an error message in javascript?
[04:58:06] <neshpion> whoah
[04:58:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:58:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:58:08] *** Joins: wroathe (~wroathe@user/wroathe)
[04:58:12] <sheetjs> typescript
[04:58:16] <neshpion> oh
[04:58:55] <sheetjs> so this function has 5 overloads because the original designer thought it clever to allow different ways to specify the first argument
[05:00:13] <sheetjs> letting S = string and N = number, the valid signatures are SS SSS SNNS NNSS NNNNS
[05:00:25] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[05:00:36] <neshpion> T_T
[05:01:08] <neshpion> honestly at that point i think it would just be more sensible to take a single object argument
[05:01:22] <sheetjs> the context is the first argument is supposed to be a "range", which can be specified as a string "A1:C3", as two strings "A1" "C3", or replacing either or both cell arguments as a pair of numbers
[05:01:42] <neshpion> does typescript have range types?
[05:01:44] <sheetjs> not our API design
[05:02:00] <sheetjs> no but it makes the types a mess
[05:02:52] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[05:05:01] *** Joins: nomic (~nomic@185.192.69.192)
[05:05:04] <sheetjs> sheetjs library functions that take a range will either take a string or a range or cell object, never messing with the function arity
[05:05:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:05:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:05:07] *** Joins: wroathe (~wroathe@user/wroathe)
[05:08:03] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[05:15:13] *** Joins: Cyp_ (~cyp@192038133070.mbb.telenor.dk)
[05:17:53] *** Quits: Cyp (~cyp@192038130244.mbb.telenor.dk) (Ping timeout: 258 seconds)
[05:22:57] *** Quits: em (~em@li247-180.members.linode.com) (Changing host)
[05:22:57] *** Joins: em (~em@user/emnode)
[05:27:40] *** Quits: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:29:46] *** Joins: libera_chat_user (uid514280@id-514280.highgate.irccloud.com)
[05:36:32] *** Joins: jazzy (~jaziz@2600:380:4533:7020:c055:7f23:886:f4ac)
[05:38:11] *** Joins: Bombo_ (atom@p4ff006c0.dip0.t-ipconnect.de)
[05:38:58] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 258 seconds)
[05:38:59] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[05:46:42] <sheetjs> n> delx = (o) => void delete o.x; var a = {x: 3, y: 4}; delx(o); a
[05:46:43] <jellobot> (fail) ReferenceError: o is not defined
[05:46:51] <sheetjs> n> delx = (o) => void delete o.x; var a = {x: 3, y: 4}; delx(a); a
[05:46:52] <jellobot> (okay) { y: 4 }
[05:56:48] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[05:59:34] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:01:34] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[06:07:10] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[06:17:55] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[06:24:48] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:35:21] *** Joins: kmh_ (~kmh@p2e5117f2.dip0.t-ipconnect.de)
[06:37:20] *** Quits: kmh (~kmh@p200300df5f47f400a948c5200deef743.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:40:09] *** Quits: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:43:01] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[06:43:09] *** Joins: keypushe- (keypusher@user/keypusher)
[06:44:15] *** Joins: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net)
[06:46:22] *** keypushe- is now known as keypusher
[06:46:49] *** Joins: Guest0 (~Guest0@170.78.96.182)
[06:52:22] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[06:57:35] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[06:59:58] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[07:00:16] *** Joins: nomic (~nomic@185.192.69.192)
[07:02:16] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[07:04:43] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[07:08:37] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[07:13:31] *** Joins: Rockwood (~Rocky@user/rocky)
[07:13:59] *** Joins: gggp (~textual@123.113.180.13)
[07:20:42] *** Joins: matsaman (~matsaman@user/matsaman)
[07:34:30] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:36:46] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[07:38:40] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 240 seconds)
[07:39:32] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[07:40:37] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[07:47:46] *** Quits: matsaman (~matsaman@user/matsaman) (Ping timeout: 258 seconds)
[07:50:49] *** Quits: Guest0 (~Guest0@170.78.96.182) (Quit: Client closed)
[07:51:40] *** Quits: gggp (~textual@123.113.180.13) (Ping timeout: 240 seconds)
[07:52:43] <twainwek> jsdoc question: I have a class called 'Foo' in file called 'Foo.js'. In another file, I have a function called 'bar' that takes a Foo. in the generated html docstrings, how can i have the type for 'Foo' have a hyper link to Foo class documentation?
[07:54:43] <pavonia> `@param {Foo} bar` doesn't work?
[07:55:27] <GreenJello> not sure there's a general solution. TS/vscode lets you use require or import syntax in a type
[07:55:38] <twainwek> in the html, it does say the type is Foo, but it doesn't have a link to Foo documetation
[07:56:25] *** Joins: matsaman (~matsaman@user/matsaman)
[07:56:34] <twainwek> Not sure if I am not invoking jsdoc with the right command line arguments for it to link the docs
[07:57:01] *** Quits: matsaman (~matsaman@user/matsaman) (Client Quit)
[07:57:59] <twainwek> Oh heh. my bad, I was missing the docstring for the other class
[07:58:04] <twainwek> now it does link them
[08:01:44] *** Quits: killall (~killown@user/killown) (Quit: Leaving)
[08:05:38] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[08:16:57] *** Joins: gggp (~textual@123.113.178.246)
[08:30:05] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[08:35:10] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:6db2:ea9e:70e8:1b11) (Ping timeout: 240 seconds)
[08:37:48] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 250 seconds)
[08:38:04] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:cd9c:aafd:2e39:3f9c)
[08:38:14] *** Quits: pizdets (~pizdets@183.182.110.111) (Ping timeout: 250 seconds)
[08:39:12] *** Joins: pizdets (~pizdets@183.182.110.30)
[08:43:32] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:53:24] *** Quits: gggp (~textual@123.113.178.246) (Ping timeout: 250 seconds)
[08:55:46] *** Joins: gggp (~textual@125.33.91.221)
[08:56:08] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:59:11] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:01:19] *** Joins: safe (~safe@cpe-74-64-165-24.nj.res.rr.com)
[09:02:08] *** Quits: gggp (~textual@125.33.91.221) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:03:48] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[09:04:24] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:05:44] *** Joins: vysn (~vysn@user/vysn)
[09:06:16] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:10:35] <theskillwithin> iv never used jsdoc b4, is it good?
[09:13:34] <twainwek> it's ok...
[09:13:37] <twainwek> what do you use
[09:14:58] *** Joins: grumanoid (sid510567@id-510567.tinside.irccloud.com)
[09:15:28] *** Joins: yaymukun1 (~yaymukund@185.21.216.136)
[09:15:32] *** Joins: ario_ (~ario@159.65.220.102)
[09:15:34] *** Joins: evulish_ (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[09:15:37] *** Joins: gkatsev_ (~gkatsev@spacecompute.com)
[09:15:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[09:15:37] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:15:37] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[09:15:37] *** Quits: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) (*.net *.split)
[09:15:37] *** Quits: ario (~ario@159.65.220.102) (*.net *.split)
[09:15:37] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[09:15:37] *** Quits: a1paca_ (~a1paca@user/a1paca) (*.net *.split)
[09:15:37] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[09:15:37] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[09:15:37] *** Quits: Stx (stx@libera/staff/stx) (*.net *.split)
[09:15:37] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:15:37] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[09:15:37] *** Quits: gkatsev (~gkatsev@spacecompute.com) (*.net *.split)
[09:15:37] *** Quits: yaymukund (~yaymukund@user/yaymukund) (*.net *.split)
[09:15:37] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[09:15:39] *** Joins: mattf_ (~mattf@li908-138.members.linode.com)
[09:15:41] *** Joins: Anarchic` (~Anarchic@getlegit.co.uk)
[09:15:42] *** Joins: dostoyev1ky2 (~sck@user/dostoyevsky2)
[09:15:45] *** Joins: glider_ (~glider@user/glider)
[09:15:46] *** Joins: calcmandan (~quassel@user/calcmandan)
[09:15:48] *** Joins: Stx_ (stx@libera/staff/stx)
[09:15:59] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[09:15:59] *** gkatsev_ is now known as gkatsev
[09:16:00] *** Joins: dlam1 (~dlam@dlam.me)
[09:16:03] *** Quits: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[09:16:20] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[09:16:40] *** Joins: a1paca (~a1paca@user/a1paca)
[09:18:50] *** Quits: VectorX (~VectorX@user/vectorx) (*.net *.split)
[09:18:50] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:18:50] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[09:18:50] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (*.net *.split)
[09:18:50] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (*.net *.split)
[09:18:50] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (*.net *.split)
[09:18:50] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[09:18:50] *** Quits: LIERO (~no@user/liero) (*.net *.split)
[09:18:50] *** Quits: Kingsy (~chris@kingsy.co.uk) (*.net *.split)
[09:18:50] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[09:18:50] *** Quits: jacekowski (jacekowski@jacekowski.org) (*.net *.split)
[09:18:50] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[09:18:50] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[09:18:50] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[09:18:50] *** Quits: percY- (~percY@138.68.239.19) (*.net *.split)
[09:18:50] *** Quits: robyndrake (~robyndrak@user/robyndrake) (*.net *.split)
[09:18:50] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[09:18:50] *** Quits: velix (~velix@user/velix) (*.net *.split)
[09:18:50] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:18:50] *** Quits: Koopz (~Koopz@koopz.rocks) (*.net *.split)
[09:18:50] *** Quits: Selicre (~x@hello.i.am.selic.re) (*.net *.split)
[09:18:54] *** Joins: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:18:55] *** Joins: Kingsy_ (~chris@kingsy.co.uk)
[09:19:00] *** Joins: LIERO_ (~no@vmi473477.contaboserver.net)
[09:19:00] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[09:19:03] *** Joins: robyndrake (~robyndrak@theasylum.team)
[09:19:04] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[09:19:05] *** Joins: jacekows1i (jacekowski@jacekowski.org)
[09:19:06] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[09:19:10] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[09:19:19] *** Joins: Bitflux (~byte@byteflux.net)
[09:19:22] *** Joins: CuriousErnestBri (~CuriousEr@user/curiousernestbro)
[09:19:22] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[09:19:24] *** Joins: percY- (~percY@138.68.239.19)
[09:19:33] *** Joins: Koopzington (~Koopz@koopz.rocks)
[09:19:36] *** robyndrake is now known as Guest2405
[09:19:39] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:19:40] *** Joins: abirkill- (snoopy@d172-218-198-90.bchsia.telus.net)
[09:19:53] *** Joins: velix (~velix@user/velix)
[09:19:54] *** Joins: phenom (~primus@user/phenom)
[09:19:55] *** Joins: Selicre (~x@hello.i.am.selic.re)
[09:20:49] *** abirkill- is now known as abirkill
[09:20:55] <theskillwithin> twainwek i don't think I use something like that, i just use md files I guess
[09:21:22] <theskillwithin> might look into swagger soon, but thats for api's
[09:22:20] *** Joins: VectorX (~VectorX@user/vectorx)
[09:22:30] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:26:22] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[09:26:22] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[09:27:14] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:36:53] *** Quits: xsperry (~as@user/xsperry) ()
[09:41:10] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[09:41:41] *** Joins: mei (~mei@user/mei)
[09:48:04] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:48:07] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[09:50:03] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[09:50:12] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[09:50:39] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:56:29] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:58:20] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:00:01] *** Joins: gggp (~textual@125.33.81.186)
[10:09:40] *** Quits: gggp (~textual@125.33.81.186) (Ping timeout: 250 seconds)
[10:12:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:14:28] *** Koopzington is now known as Koopz
[10:18:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:19:46] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[10:22:16] *** Joins: rcoote (~rcoote@2a02:908:692:81c0:27cd:61e5:613:b283)
[10:31:16] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[10:32:36] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:dc34:e14f:68d8:e563)
[10:32:53] *** Joins: codebam (~codebam@user/codebam)
[10:33:13] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[10:33:35] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[10:34:30] *** Joins: gggp (~textual@60.10.23.160)
[10:35:07] *** Quits: gggp (~textual@60.10.23.160) (Client Quit)
[10:36:50] *** Joins: xsperry (~as@user/xsperry)
[10:39:42] *** Joins: l__q (~modinfo@user/modinfo)
[10:40:04] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[10:42:13] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:53:52] *** Quits: Haxxa (~Haxxa@122.199.46.17) (Ping timeout: 250 seconds)
[10:54:13] *** Quits: sagax (~sagax@213.138.71.146) (Remote host closed the connection)
[10:56:04] *** Joins: Haxxa (~Haxxa@122.199.46.17)
[10:57:04] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[10:57:25] *** Joins: WishBoy (~WishBoy@user/wishboy)
[10:59:11] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[11:01:48] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[11:06:07] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[11:07:48] *** Joins: codebam (~codebam@user/codebam)
[11:15:07] *** Joins: silly_ (~silly@user/silly)
[11:16:10] *** Quits: jazzy (~jaziz@2600:380:4533:7020:c055:7f23:886:f4ac) (Ping timeout: 240 seconds)
[11:16:17] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[11:17:49] *** Joins: gggp (~textual@60.10.23.160)
[11:18:58] *** Quits: gggp (~textual@60.10.23.160) (Client Quit)
[11:20:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[11:24:01] *** Joins: dachinat (~dachinat@37.232.98.166)
[11:24:03] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[11:27:07] *** Joins: kakashiAL (~kakashi@ppp-188-174-50-234.dynamic.mnet-online.de)
[11:28:51] *** Joins: gehn (~gehn@user/gehn)
[11:30:47] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[11:31:45] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:33:27] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 240 seconds)
[11:34:28] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:34:31] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[11:36:40] *** Parts: LIERO_ (~no@vmi473477.contaboserver.net) ()
[11:36:49] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:37:02] *** Joins: LIERO (~no@user/liero)
[11:37:49] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[11:38:36] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:39:47] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[11:40:05] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:43:38] *** Joins: sQVe (~sQVe@user/sqve)
[11:43:51] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[11:44:17] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[11:55:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Ping timeout: 244 seconds)
[11:55:28] *** Quits: safe (~safe@cpe-74-64-165-24.nj.res.rr.com) (Quit: Leaving)
[11:56:40] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[11:57:12] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[12:06:06] *** CuriousErnestBri is now known as CuriousErnestBro
[12:07:23] *** Parts: Kingsy_ (~chris@kingsy.co.uk) ()
[12:08:22] *** Joins: gggp (~textual@60.10.23.160)
[12:10:03] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[12:16:01] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:6fa4:9aff:db69:8cff) (Remote host closed the connection)
[12:21:46] *** Joins: sagax (~sagax@213.138.71.146)
[12:28:07] *** Quits: gggp (~textual@60.10.23.160) (Ping timeout: 240 seconds)
[12:29:40] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:dc34:e14f:68d8:e563) (Ping timeout: 240 seconds)
[12:30:26] *** Joins: gggp (~textual@60.10.23.160)
[12:34:05] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:dc34:e14f:68d8:e563)
[12:35:46] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:10] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:38:56] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:41:05] *** Joins: wintersky (uid453465@id-453465.brockwell.irccloud.com)
[12:42:02] *** Joins: tfe (~tfe@213.195.122.71)
[12:42:05] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:45:11] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[12:46:04] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[13:02:35] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:26:33] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 248 seconds)
[13:32:38] *** Joins: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de)
[13:35:02] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 245 seconds)
[13:36:36] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[13:37:07] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[13:37:40] <theskillwithin> holly, there was conjoined twins at the head that could speak to each other, and even look thru the eyes of the other?
[13:43:30] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:cd9c:aafd:2e39:3f9c) (Changing host)
[13:43:30] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[13:46:49] *** Quits: jonifen (~jonifen@user/jonifen) (Ping timeout: 248 seconds)
[13:48:14] *** Joins: federico_it (~textual@151.95.116.125)
[13:48:40] <DPA> Wait, you mean like >2 eyes to look trough? And speak as in audibly, or "thelepatically" (shared inner voice)?
[13:49:15] <theskillwithin> like they could tell each other jokes, without speaking
[13:50:26] <DPA> That's quiet impressive.
[13:50:53] <theskillwithin> to be clear, their brains were fused together.  but yes thats mind blowing excuse the pun
[13:52:40] <theskillwithin> DPA also i only heard about it, i haven't looked up
[13:53:19] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:57:21] <DPA> It'd be interesting to see some brain scans of that. I wonder how those brains have connected themselves.
[13:58:54] <theskillwithin> https://www.amazopedia.com/these-conjoined-twins-can-see-through-each-others-eyes/
[14:00:43] <theskillwithin> DPA theres gotta be some studies, i mean this is huge for the nature of consciousness.  idk tho, i haven't looked into much
[14:04:01] <CuriousErnestBro> Anyone worked with Potree? What did you think?
[14:06:47] *** Joins: thiras (~thiras@user/thiras)
[14:09:44] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:dc34:e14f:68d8:e563) (Ping timeout: 250 seconds)
[14:11:00] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[14:11:10] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[14:17:39] *** Joins: yte3 (~0@151.15.36.56)
[14:20:37] *** Joins: silly (~silly@user/silly)
[14:25:14] *** Joins: jazzy (~jaziz@2600:380:8773:c113:1093:1c01:217f:efb2)
[14:44:09] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:70b0:8bd4:3605:ce5c) (Quit: Textual IRC Client: www.textualapp.com)
[14:44:32] *** Joins: silly_ (~silly@user/silly)
[14:48:10] *** Quits: silly (~silly@user/silly) (Ping timeout: 240 seconds)
[14:49:15] <ross> is there a reference somewhere for which properties of `window.parent` can be accessed by a cross-origin child iframe?
[14:53:43] <theskillwithin> welcome to the shadow dom.  dun dun dun
[14:54:53] <ross> I have found a reference: https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#cross-origin_script_api_access
[14:57:22] <ross> here's another question, in that case, asked this time out of curiosity: to get an array of the parent frames I should be able to do `Array.from(window.parent.frames)` (or just window.parent lmao), but that raises an exception "Permission denied to access property Symbol.iterator on cross-origin object". But I can just swap Array.from out for the old way, Array.prototype.slice.call, and that works. what's happening there? why does only one work?
[15:05:58] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[15:07:46] *** Joins: sillyslux__ (~silly@user/silly)
[15:09:30] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[15:10:48] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[15:12:08] *** Quits: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:12:13] *** Quits: k162 (k162@user/k162) (Remote host closed the connection)
[15:13:04] *** Joins: k162 (k162@user/k162)
[15:16:49] *** Joins: pwnd_sfw5 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[15:17:44] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[15:17:44] *** pwnd_sfw5 is now known as pwnd_sfw
[15:25:39] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[15:29:57] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:30:06] *** Joins: autistic (~linguist@170.84.56.192)
[15:38:41] <DPA> Each window has it's own instance of Symbol, Node, HTMLElement, and all the other global symbols. So window.Symbol != other_window.Symbol, and Symbol.iterator != other_window.Symbol.iterator
[15:40:36] *** Joins: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de)
[15:42:07] *** Quits: sysRPN (~sysRPL@ec2-3-17-180-170.us-east-2.compute.amazonaws.com) (Remote host closed the connection)
[15:42:14] *** Joins: pulse (~pulse@user/pulse)
[15:42:27] *** Quits: alyx (alyx@atheme/alyx) (Quit: AAAAAAAAA)
[15:43:11] *** Joins: alyx (alyx@atheme/alyx)
[15:44:26] <ross> so I guess .from uses "their" iterator and .prototype.slice.call uses "our" iterator?
[15:47:32] *** Joins: silly_ (~silly@user/silly)
[15:49:05] <DPA> n> Array.from({length: 3, 0:1,1:2,2:3})
[15:49:06] <jellobot> (okay) [ 1, 2, 3 ]
[15:49:19] <DPA> I think Array.from just uses the length property.
[15:50:40] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 240 seconds)
[15:50:40] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:52:25] *** autistic is now known as linguist
[15:53:24] <theskillwithin> the 2nd param is super cool,maps
[15:55:35] <DPA> Array.from({length:3},(x,i)=>i)
[15:55:48] <DPA> n> Array.from({length:3},(x,i)=>i)
[15:55:49] <jellobot> (okay) [ 0, 1, 2 ]
[16:00:53] *** Joins: brunodOut (~linguist@170.84.56.192)
[16:01:27] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:65e9:6f2b:5308:7e2f)
[16:03:21] *** Quits: linguist (~linguist@170.84.56.192) (Ping timeout: 248 seconds)
[16:04:18] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[16:04:37] *** Quits: Bombo_ (atom@p4ff006c0.dip0.t-ipconnect.de) (Changing host)
[16:04:37] *** Joins: Bombo_ (atom@user/bombo)
[16:04:37] *** Bombo_ is now known as Bombo
[16:05:03] *** Joins: Naan (~Naan@user/naan)
[16:05:52] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:13:16] *** Joins: sillyslux__ (~silly@user/silly)
[16:14:52] *** Joins: silly (~silly@user/silly)
[16:15:03] *** Joins: AndrewYu (~andrew@user/andrewyu)
[16:15:06] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[16:16:27] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 240 seconds)
[16:17:02] *** Joins: gggp (~textual@60.10.23.160)
[16:18:48] *** Joins: henry40408 (~henry4040@112-105-246-24.adsl.dynamic.seed.net.tw)
[16:22:40] *** Joins: ArchNoob (~maotora@user/archnoob)
[16:23:01] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[16:23:47] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:65e9:6f2b:5308:7e2f) (Ping timeout: 240 seconds)
[16:25:12] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:27:41] *** Joins: digimyth (~electr0n@c-73-83-154-47.hsd1.wa.comcast.net)
[16:30:54] *** Quits: digimyth (~electr0n@c-73-83-154-47.hsd1.wa.comcast.net) (Quit: WeeChat 3.2)
[16:34:53] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[16:36:47] *** Quits: gggp (~textual@60.10.23.160) (Ping timeout: 240 seconds)
[16:37:45] *** Joins: gggp (~textual@60.10.23.160)
[16:42:00] <brunodOut> Hello, good morning everyone in closer timezones, or good any-part-of-the-day
[16:42:15] *** Quits: gggp (~textual@60.10.23.160) (Client Quit)
[16:45:09] <brunodOut> GreenJello, just a question about that template (${}) implementation we talked about yesterday... Do you think the lookup alternative using extract would be closer, in time of execution, to the eval alternative? Do you know which one would be theoretically 'faster'?
[16:45:14] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[16:46:40] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 240 seconds)
[16:47:29] *** Joins: Praise (~Fat@user/praise)
[16:48:00] *** Joins: sunbae (~euk@user/sunbae)
[16:50:40] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 240 seconds)
[16:52:52] *** Joins: Guest0 (~Guest0@170.78.96.182)
[16:54:24] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[17:04:22] *** Quits: brunodOut (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[17:05:59] *** Joins: linguist (~linguist@170.84.56.192)
[17:14:49] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[17:15:34] *** Joins: linguist (~linguist@170.84.56.192)
[17:16:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[17:17:04] *** Joins: gggp (~textual@125.33.83.189)
[17:18:06] *** Joins: Naan` (~Naan@user/naan)
[17:19:40] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:19:44] *** Quits: sunbae (~euk@user/sunbae) (Quit: bye :D)
[17:20:18] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:21:07] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[17:22:33] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:24:18] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[17:26:30] *** Quits: gggp (~textual@125.33.83.189) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:28:11] *** Quits: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr) (Quit: All for nothing)
[17:30:30] * linguist I have to work
[17:33:10] *** Quits: mikrosis (~mikrosis@dynamic-046-114-173-229.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[17:33:27] *** Quits: silly (~silly@user/silly) (Ping timeout: 240 seconds)
[17:36:25] *** Quits: k162 (k162@user/k162) (Ping timeout: 252 seconds)
[17:37:37] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:bdb0:1299:ed93:e6f9)
[17:38:09] *** Joins: k162 (k162@user/k162)
[17:38:46] <DnzAtWrk> https://web.dev/cls/
[17:38:52] <DnzAtWrk> why does this seem to be a forgotten lesson?
[17:40:45] *** Joins: daoudr (~daoudr@178.197.213.56)
[17:41:15] <DnzAtWrk> I have seriously developed a bit of anxiety using google lately
[17:41:18] <DnzAtWrk> due to that
[17:41:48] <thykka> because it's too hard to fix it when your architecture is a bunch of serverless mumbo jumbo components
[17:41:52] <thykka> ¯\_(ツ)_/¯
[17:42:31] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[17:42:44] <thykka> and even then some marketer would cram GTM full of plugins
[17:43:02] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:43:04] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:45:19] *** Quits: Guest0 (~Guest0@170.78.96.182) (Ping timeout: 246 seconds)
[17:46:43] *** Joins: jmft2 (~JMFT@82.3.54.26)
[17:48:33] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[17:48:33] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[17:48:33] *** Joins: Heraes (~Heraes@user/romarain)
[17:48:38] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[17:55:23] *** Joins: gggp (~textual@60.10.23.160)
[17:57:33] *** Joins: silly (~silly@user/silly)
[17:59:05] *** Quits: daoudr (~daoudr@178.197.213.56) (Ping timeout: 248 seconds)
[17:59:11] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:59:11] *** Quits: tfe (~tfe@213.195.122.71) (Remote host closed the connection)
[18:03:22] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 252 seconds)
[18:04:47] *** Quits: CiaoSen (~Jura@p549cb0b5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:05:24] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:06:50] *** Joins: CiaoSen (~Jura@p549cbd40.dip0.t-ipconnect.de)
[18:11:07] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[18:16:57] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[18:20:37] *** Joins: daoudr (~daoudr@178.197.213.56)
[18:21:21] *** Joins: Akimb (~Akimb@86.100.13.100)
[18:21:47] *** Quits: CiaoSen (~Jura@p549cbd40.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:21:49] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:26:10] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[18:28:23] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:29:46] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:32:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:33:01] *** Quits: avu (~jan@user/avu) (Quit: o/)
[18:35:41] *** Joins: avu (~jan@user/avu)
[18:36:56] *** Quits: daoudr (~daoudr@178.197.213.56) (Quit: Leaving)
[18:41:18] *** Joins: daoudr (~daoudr@178.197.213.56)
[18:45:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[18:55:35] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.2)
[18:59:27] *** Quits: silly (~silly@user/silly) (Ping timeout: 240 seconds)
[18:59:27] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[19:00:01] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 252 seconds)
[19:00:33] *** Joins: linguist (~linguist@170.84.56.192)
[19:03:43] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:06:33] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:06:40] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:07:53] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[19:10:04] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[19:11:43] *** Joins: cthulchu (~Cthulchu@176.113.163.227)
[19:12:53] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:16:10] *** Quits: jazzy (~jaziz@2600:380:8773:c113:1093:1c01:217f:efb2) (Ping timeout: 240 seconds)
[19:16:13] <pizza> i've got an express server on port 5000 trying to set a cookie for a react client on port 3000, the set-cookie header is in the response but my browser is ignoring it. is this because i have to set the cookie SameSite to "none" and have to use https?
[19:16:14] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:17:56] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[19:18:03] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:18:54] *** Joins: Junxter (~Junxter@121.237.62.179)
[19:19:37] *** Quits: cthulchu (~Cthulchu@176.113.163.227) (Ping timeout: 248 seconds)
[19:21:25] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:22:40] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:22:45] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:27cd:61e5:613:b283) (Quit: Konversation terminated!)
[19:23:26] *** Joins: NeoCron (~NeoCron@45.158.175.19)
[19:24:01] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:24:44] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:25:03] *** Joins: gggp (~textual@60.10.194.43)
[19:29:47] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[19:30:21] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:30:29] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:32:40] *** Quits: henry40408 (~henry4040@112-105-246-24.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[19:32:56] *** Quits: rexar89 (~alexi5@208.83.82.233) ()
[19:34:57] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:36:24] *** Joins: nomic (~nomic@185.192.69.143)
[19:36:56] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:37:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:37:22] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Read error: Connection reset by peer)
[19:38:18] *** Joins: gggp (~textual@123.113.176.64)
[19:42:27] *** Quits: gggp (~textual@123.113.176.64) (Ping timeout: 240 seconds)
[19:43:07] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[19:43:15] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:44:34] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[19:45:53] *** Joins: linguist (~linguist@170.84.56.192)
[19:47:31] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:47:31] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:47:31] *** Joins: wroathe (~wroathe@user/wroathe)
[19:49:44] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[19:50:27] *** Quits: linguist (~linguist@170.84.56.192) (Ping timeout: 250 seconds)
[19:52:02] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[19:52:24] *** Joins: cthulchu (~Cthulchu@176.113.163.227)
[19:52:30] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[19:52:54] <jwpapi> Is there a project that tries to create custom sized text to speech based on emphasis and pronounciation length of an audio file?
[19:53:02] <jwpapi> Like the Instagram automated captions feature
[19:59:39] *** Joins: codebam (~codebam@user/codebam)
[20:00:48] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[20:01:34] *** Quits: dostoyev1ky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[20:01:47] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[20:02:05] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[20:07:15] *** Quits: mikkel (~mike@208.110.120.167) (Quit: leaving)
[20:09:45] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Ping timeout: 248 seconds)
[20:10:06] *** Quits: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[20:12:02] *** Stx_ is now known as Stx
[20:12:40] *** Joins: voltage_ (voltage@user/voltage)
[20:15:14] *** Joins: gehn (~gehn@user/gehn)
[20:15:18] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[20:16:09] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 248 seconds)
[20:18:40] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[20:21:33] *** Quits: nomic (~nomic@185.192.69.143) (Quit: Leaving)
[20:23:58] *** Joins: Rockwood (~Rocky@user/rocky)
[20:26:50] *** Joins: daoudr_ (~daoudr@178.197.213.56)
[20:26:53] *** Quits: daoudr (~daoudr@178.197.213.56) (Read error: No route to host)
[20:30:39] *** Quits: daoudr_ (~daoudr@178.197.213.56) (Read error: No route to host)
[20:31:55] *** Joins: cheater (~Username@user/cheater)
[20:31:58] <cheater> hi
[20:32:13] <cheater> is there a channel for user scripts? specifically violentmonkey but maybe also others
[20:32:58] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 252 seconds)
[20:33:00] *** Joins: nomic (~nomic@185.192.69.143)
[20:33:13] *** Quits: kakashiAL (~kakashi@ppp-188-174-50-234.dynamic.mnet-online.de) (Ping timeout: 248 seconds)
[20:33:20] <GreenJello> you can ask here
[20:33:28] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[20:35:10] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[20:37:10] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:37:49] *** Joins: kakashiAL (~kakashi@ppp-188-174-50-234.dynamic.mnet-online.de)
[20:37:54] *** Quits: nomic (~nomic@185.192.69.143) (Quit: Leaving)
[20:39:34] *** Joins: gggp (~textual@221.219.64.36)
[20:39:37] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:39:57] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:42:07] *** Quits: kakashiAL (~kakashi@ppp-188-174-50-234.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:44:27] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[20:47:21] *** Quits: gggp (~textual@221.219.64.36) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:48:17] *** Quits: NeoCron (~NeoCron@45.158.175.19) (Remote host closed the connection)
[20:50:21] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[20:51:43] *** Joins: nomic (~nomic@185.192.69.143)
[20:52:13] *** Quits: cthulchu (~Cthulchu@176.113.163.227) (Ping timeout: 252 seconds)
[20:53:25] <codebam> I'm using useSWR and some of the data I'm fetching is coming back as undefined for some reason even though the actual fetcher call works fine when I try it. Is there a way I can check to see if data or error are ever getting populated here? https://paste.sbehan.ca/k8t.txt
[20:54:10] <codebam> by undefined I mean both data and error are undefined in this scenario, and I can't figure out why
[20:54:39] <GreenJello> that would be the case while loading
[20:55:32] <codebam> how do I wait for it to load before using it?
[20:55:44] <codebam> I don't think useSWR is async
[20:55:51] <codebam> or... I don't know
[20:56:22] <GreenJello> you can check if you're in the loading state
[20:56:33] <codebam> isValidating?
[20:56:49] <GreenJello> iirc the property is just 'loading'
[20:56:56] *** Joins: mikrosis (~mikrosis@dynamic-046-114-168-049.46.114.pool.telefonica.de)
[20:57:17] <codebam> oh okay I'll try that, thank you
[20:57:48] <gggpkm> is there default constructor for object
[20:57:58] <GreenJello> or in the very first example: https://swr.vercel.app/#overview
[20:57:58] <GreenJello> they consider error and data being falsy to mean it's loading
[20:58:06] <GreenJello> codebam, ^
[20:59:05] <codebam> oh okay I see. is there a way I could do that using console.log so I can just see the data?
[20:59:13] <codebam> instead of returning
[20:59:33] <codebam> since it'll always just give me error if I do that, no?
[20:59:59] <codebam> wait never mind
[21:00:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:00:24] *** Joins: kill (~killown@user/killown)
[21:00:27] <GreenJello> you need to tell React what to render in any possible state, and loading is a possible state
[21:00:54] <GreenJello> you could return null, or a loading indicator
[21:01:07] <GreenJello> or part of the UI
[21:02:49] *** Joins: linguist (~linguist@170.84.56.192)
[21:03:13] <codebam> right that makes sense, I just wanted to wait to see the last state to make sure my code works first
[21:03:20] <codebam> but I'll write out the states
[21:04:33] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[21:04:48] <omen> btw. does react "call home"? Being made by facebook people i believe
[21:06:46] <codebam> I still don't really understand how I should be doing this, because having multiple return statements in react is somewhat odd
[21:08:31] *** Joins: daoudr_ (~daoudr@178.197.213.56)
[21:08:57] <omen> multiple returns are normal, just not in single function (at same time)
[21:09:06] <omen> you know, only first return executes
[21:09:54] <codebam> oh that works, never mind
[21:10:14] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[21:10:38] <Alexendoo> omen: It doesn't, but you can always check the network panel to confirm
[21:10:45] *** Joins: silly (~silly@user/silly)
[21:10:50] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Remote host closed the connection)
[21:11:09] <omen> maybe it uses smoke to communicate
[21:11:10] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Remote host closed the connection)
[21:11:12] *** Joins: retrograde (retrograde@gateway/vpn/protonvpn/retrograde)
[21:11:31] <omen> (a joke)
[21:11:49] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[21:12:18] <systemfault> Chances are that their SDK is already loaded on most of your websites... they don't need to add anything to React.
[21:12:44] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:15:29] *** Joins: jess (~jess@libera/staff/jess)
[21:16:35] <codebam> even with those two if's it's still coming back as undefined
[21:20:00] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[21:20:37] *** Joins: linguist (~linguist@170.84.56.192)
[21:24:02] <gggpkm> var a=new Object() and var a=Object() , is this the same
[21:25:31] <GreenJello> yes, in that specific case
[21:26:52] <omen> do you discourage using one-liner if? if(foo) bar();
[21:27:20] <omen> I love it, it's like python script inside javascript
[21:27:45] <GreenJello> I think more people would discourage it than encourage it
[21:28:44] <GreenJello> the arguments tend to be more against the two-line version without {}s, though
[21:28:53] <wroathe> It depends, but I personally don't mind omitting curly braces
[21:30:29] *** Joins: CiaoSen (~Jura@p200300c9571d3d002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:30:42] <omen> tbh it's really nice to not have brackets. Python syntax is so nice
[21:31:27] <omen> readability goes up two folds and as a bonus: no more missing brackets
[21:31:44] <wroathe> It really depends. If you've got a conditional expression with multiple terms, and you're using multiple commas to fit your expressio into that single statement, then it's probably time to submit to the curly brace and semicolon gods.
[21:32:15] *** Joins: zebrag (~chris@user/zebrag)
[21:32:20] <omen> good point
[21:32:27] <gggpkm> is object lvalue or rvalue
[21:33:47] <GreenJello> JS is not C++
[21:34:12] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Ping timeout: 244 seconds)
[21:34:16] <GreenJello> you aren't going to get far viewing it through that lens
[21:34:23] <omen> what does those even mean
[21:37:08] <gggpkm> object and instance ,
[21:37:16] <gggpkm> is the same ?
[21:37:29] <gggpkm> js object is an instance already?
[21:38:19] <wroathe> n> ({}) instanceof Object
[21:38:20] <jellobot> (okay) true
[21:39:35] <omen> n> ({}) instanceof Function
[21:39:37] <jellobot> (okay) false
[21:39:48] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[21:40:12] *** Joins: Akimb (~Akimb@86.100.13.100)
[21:40:25] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 248 seconds)
[21:41:28] <omen> n> new Array(5).join("a"-10) + " Batman!"
[21:41:29] <jellobot> (okay) 'NaNNaNNaNNaN Batman!'
[21:43:27] *** Quits: mikrosis (~mikrosis@dynamic-046-114-168-049.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[21:43:42] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[21:44:27] *** Quits: CiaoSen (~Jura@p200300c9571d3d002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:44:40] <gggpkm> why does not Object have prototype?
[21:44:58] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[21:45:13] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:45:37] *** Joins: CiaoSen (~Jura@p549cbd40.dip0.t-ipconnect.de)
[21:45:42] *** Joins: Trieste (T@user/pilgrim)
[21:47:27] <omen> i believe it has bunch of prototypes, like .toString()
[21:47:53] <omen> or do you mean that !Object has prototype
[21:48:49] *** Quits: k162 (k162@user/k162) (Remote host closed the connection)
[21:49:07] *** Joins: k162 (k162@user/k162)
[21:49:07] *** Joins: pavonia (~user@user/siracusa)
[21:49:17] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[21:49:27] <systemfault> I sometimes wonder if gggpkm is a bot or someone in China who really wants to discuss but doesn't know enough english to do so.
[21:50:33] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 248 seconds)
[21:53:14] *** Joins: _banana_ (~banana_@2603-6000-b500-9ce3-057f-1778-3762-2f77.res6.spectrum.com)
[21:54:13] *** Joins: pycurious (~Adium@user/pycurious)
[21:54:39] <Rockwood> systemfault, o/
[21:54:47] <systemfault> Hi
[21:55:24] <Rockwood> that name likes a BOT :D me too agree with your statement
[21:56:10] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[21:57:42] <pycurious> I'm trying to serialize an object using json.stringify() - but this object has function pointers - which I also want to be able to stringify() - its currently skipping it - any ideas on how to serialize objects well? (preferably with socket/networking support) - is that even possible?
[21:59:09] <GreenJello> there are lots of values you can't serialized
[21:59:19] *** Joins: Betal (~Betal@user/betal)
[22:05:18] <systemfault> Use the replace argument of JSON.stringify and do your own serialization
[22:05:24] <systemfault> *replacer
[22:07:34] *** Quits: k162 (k162@user/k162) (Remote host closed the connection)
[22:07:51] *** Joins: k162 (k162@user/k162)
[22:08:37] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[22:09:06] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[22:09:56] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[22:10:17] *** Quits: nomic (~nomic@185.192.69.143) (Quit: Leaving)
[22:13:13] <codebam> oh cool I didn't know that was a thing
[22:13:31] <codebam> are there other serializer packages that work that way?
[22:13:55] <codebam> JSON works fine though I guess
[22:16:26] *** Quits: konrados (~konrados@user-5-173-173-2.play-internet.pl) (Ping timeout: 272 seconds)
[22:17:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:18:35] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[22:20:07] *** Joins: linguist (~linguist@170.84.56.192)
[22:23:40] *** Joins: onosendi (~onosendi@user/onosendi)
[22:24:31] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[22:27:26] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:bdb0:1299:ed93:e6f9) (Quit: Textual IRC Client: www.textualapp.com)
[22:28:07] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[22:28:07] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[22:28:07] *** Joins: Heraes (~Heraes@user/romarain)
[22:28:27] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[22:33:58] *** Joins: Northwoods (~Northwood@103.223.8.125)
[22:34:06] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:34:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:34:07] *** Joins: wroathe (~wroathe@user/wroathe)
[22:35:27] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[22:36:44] *** Joins: linguist (~linguist@170.84.56.192)
[22:38:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[22:41:38] *** Joins: jmft2_ (~jmft2@81.149.115.87.dyn.plus.net)
[22:41:40] *** Joins: jmft2__ (~jmft2@81.149.115.87.dyn.plus.net)
[22:42:23] *** Quits: jmft2 (~JMFT@82.3.54.26) (Killed (NickServ (GHOST command used by jmft2__!~jmft2@81.149.115.87.dyn.plus.net)))
[22:42:34] *** Parts: jmft2__ (~jmft2@81.149.115.87.dyn.plus.net) ()
[22:42:47] *** Joins: jmft2__ (~JMFT@82.3.54.26)
[22:43:10] *** Quits: jmft2_ (~jmft2@81.149.115.87.dyn.plus.net) (Client Quit)
[22:46:43] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[22:47:08] <codebam> how do I fix typescript thinking something is a different type than it actually is?
[22:47:53] <codebam> it works fine on the dev server but typescript tells me it's a completely different type
[22:48:15] *** Joins: vysn (~vysn@user/vysn)
[22:50:02] <systemfault> codebam: Well, do you have a more concrete example? :(
[22:50:15] <codebam> systemfault: sure. I can share some code
[22:50:20] <systemfault> In the end... you can always do "as unknown as whatevertheF" but...
[22:50:34] <codebam>  <>{JSON.stringify({ data: data.data[0] })}</>
[22:50:42] <codebam> data.data when I stringify is an array []
[22:51:02] <codebam> but I can't index it with typescript because it thinks it's an object with { data: ..., pagination: ...}
[22:51:25] <codebam> but on the dev server that pasted line works
[22:51:38] <codebam> however it doesn't compile because of typescript thinking the type is something else
[22:52:15] <codebam> I think it must be a bug in typescript, but I just want to work around it
[22:52:45] <GreenJello> it's confusing when you have two things named 'data' here
[22:52:58] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[22:53:01] <codebam> sorry. data is what's being returned by useSWR
[22:53:10] <codebam> and data contains { data, pagination }
[22:53:31] <codebam> so data.data, but typescript for some reason wants data.data.data (which is {} and wrong)
[22:54:05] <GreenJello> first, use console.log instead of json.stringify
[22:54:18] <codebam> I can't console.log because it's useSWR
[22:54:23] <GreenJello> yes you can
[22:54:32] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:54:34] <codebam> oh right I can console.log inside the {}
[22:54:45] <GreenJello> or before your return...
[22:55:07] <GreenJello> data.data.data wouldn't be {} if data.data is an array
[22:55:10] <codebam> that console.log isn't working
[22:55:23] <GreenJello> unless it's both an array and has properties
[22:55:27] <codebam> GreenJello: I'm not sure. that's what json.stringify shows at least
[22:55:57] <GreenJello> don't rely on stringify to be accurage
[22:55:59] <GreenJello> accurate*
[22:56:12] <GreenJello> and what do you mean by it not working?
[22:56:53] <codebam> the console.log isn't outputting
[22:57:03] <codebam> I put it before the return
[22:58:35] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:59:05] <GreenJello> maybe you have a filter in the console?
[22:59:23] <GreenJello> or you're looking at a fake console
[22:59:47] *** Quits: CiaoSen (~Jura@p549cbd40.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[22:59:53] <codebam> fixed it
[23:00:01] <codebam> according to console.log data.data is Array(100)
[23:00:13] <codebam> so it's an array like I said but typescript says it's this
[23:00:13] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:00:24] *** Joins: Moyst (~moyst@user/moyst)
[23:00:30] <codebam> https://paste.sbehan.ca/pvY.png
[23:00:57] <GreenJello> show the useSWR line
[23:01:23] <GreenJello> you're probably specifying the wrong type there in some way
[23:01:50] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:02:26] <codebam> https://paste.sbehan.ca/7W-.png
[23:02:38] <GreenJello> and GetPage...
[23:03:18] <codebam> I'm doing GetPageResponse which is https://paste.sbehan.ca/TZX.png
[23:03:37] <GreenJello> there's your extra nesting
[23:04:21] <codebam> oh okay that fixed it
[23:04:23] <codebam> thank you
[23:04:29] <codebam> :)
[23:05:22] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:05:52] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[23:06:07] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[23:06:12] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:14:09] *** Joins: junktext (~junktext@109.201.152.169)
[23:15:19] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[23:21:09] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 244 seconds)
[23:22:04] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[23:22:38] *** Joins: earendel (uid498179@user/earendel)
[23:25:11] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[23:25:33] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:27:48] *** Quits: albertlast (~nix@0exclusive.de) (Quit: quit)
[23:27:49] *** Joins: junktext_ (~junktext@109.201.152.175)
[23:28:01] *** Quits: Benett (~Benett@2a03:4000:1a:7aa::2) (Quit:  )
[23:28:07] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[23:28:36] *** Joins: Benett (~Benett@2a03:4000:1a:7aa::2)
[23:29:43] *** Quits: junktext (~junktext@109.201.152.169) (Ping timeout: 250 seconds)
[23:30:22] *** Joins: AlbertLast (~nix@0exclusive.de)
[23:35:58] *** Joins: 040AAADSY (~linguist@170.84.56.192)
[23:39:07] *** Quits: linguist (~linguist@170.84.56.192) (Ping timeout: 240 seconds)
[23:41:13] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[23:45:42] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:81cb:e05c:7358:d198)
[23:47:03] *** Quits: 040AAADSY (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[23:48:20] *** Joins: linguist (~linguist@170.84.56.192)
[23:53:24] *** Joins: nomic (~nomic@185.192.69.143)
[23:55:32] <celphi> is there a reason why my curl is working and not ajax
[23:56:06] <celphi> i mean i know cors protects only in browser- but i have permissions set to *
[23:57:47] <onosendi> celphi: turn XHR on in your browser's dev tools and make sure the request is actually being sent.
[23:58:09] *** Joins: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[23:58:18] <celphi> it's being sent kinda- but i see cors error
[23:58:57] <silly> you can turn off XHR?
[23:59:12] <onosendi> silly: in browser?
[23:59:20] <celphi> i guess he meant unhide
[23:59:27] <onosendi> silly: you can turn the logging of it on or off.
[23:59:44] <celphi> in any event not working
