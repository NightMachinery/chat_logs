[00:07:09] *** Joins: d1cor (~diego@179.63.242.122)
[00:22:15] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[01:17:46] *** Quits: lavaball (felix@31.204.155.215) (Quit: Spass und Freude.)
[01:18:19] *** Joins: lavaball (felix@31.204.155.215)
[01:18:53] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:19:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:28:52] *** Joins: lavaball (felix@31.204.155.215)
[01:32:48] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[01:40:02] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:52:01] *** Joins: re101-owl-51 (~re101-owl@47.75.115.161)
[01:53:00] *** Quits: re101-owl-51 (~re101-owl@47.75.115.161) (Client Quit)
[01:56:58] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:59:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:06:59] *** Joins: JanC_ (~janc@user/janc)
[02:07:09] *** JanC is now known as Guest5415
[02:07:09] *** Quits: Guest5415 (~janc@user/janc) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:07:09] *** JanC_ is now known as JanC
[02:09:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:21:20] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:b43b:ba1d:a4b3:8c7b)
[02:36:47] *** Joins: proc (uid412603@wikipedia/procrastinatingreader)
[02:47:09] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-b0ed-1a92-719b-f6c2.res6.spectrum.com)
[02:56:07] *** Joins: re101-oyster-69 (~re101-oys@95-28-211-223.broadband.corbina.ru)
[02:56:12] *** Quits: re101-oyster-69 (~re101-oys@95-28-211-223.broadband.corbina.ru) (Client Quit)
[03:06:21] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 256 seconds)
[03:15:05] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[03:28:09] *** Quits: proc (uid412603@wikipedia/procrastinatingreader) (Read error: Connection reset by peer)
[03:28:18] *** Joins: proc (uid412603@wikipedia/procrastinatingreader)
[03:37:34] *** Quits: mannibis (~mannibis@162.211.65.25) (Quit: I have to return some videotapes.)
[03:45:31] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:b43b:ba1d:a4b3:8c7b) (Quit: Leaving)
[03:57:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[04:01:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:11:57] *** Quits: timm (~timm@user/timm) (Ping timeout: 240 seconds)
[04:47:32] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[05:10:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:20:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:33:22] *** Joins: vlm (~vlm@user/vlm)
[05:34:49] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:50] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:50] *** Joins: maetthew (~maetthew@user/maetthew)
[05:37:08] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[06:00:35] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:26:36] *** Quits: proc (uid412603@wikipedia/procrastinatingreader) (Quit: Connection closed for inactivity)
[07:06:32] *** Joins: adeliktas5 (~adeliktas@i59F52980.versanet.de)
[07:07:48] *** Quits: adeliktas (~adeliktas@i59F52D25.versanet.de) (Ping timeout: 240 seconds)
[07:07:48] *** adeliktas5 is now known as adeliktas
[07:14:22] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[07:26:57] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:46:14] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[07:50:44] *** Quits: AMG (ghebo@user/amg) (Quit: Quit)
[08:39:13] *** Joins: AMG (ghebo@2605:6400:c847:1449::9441)
[09:27:41] *** Quits: AMG (ghebo@2605:6400:c847:1449::9441) (Changing host)
[09:27:41] *** Joins: AMG (ghebo@user/amg)
[09:30:21] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[09:59:29] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[10:08:45] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[10:29:48] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:58:43] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[11:06:58] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Ping timeout: 272 seconds)
[11:21:49] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:24:41] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:f058:960c:b5ef:b751) (Remote host closed the connection)
[11:25:16] *** Joins: p-i- (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th)
[11:34:41] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:35:40] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:43:52] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:47:13] *** Joins: timm (~timm@user/timm)
[12:07:16] *** Quits: timm (~timm@user/timm) (Remote host closed the connection)
[12:07:25] *** Joins: f00 (~timm@user/timm)
[12:15:52] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[12:16:53] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[12:31:36] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:39:44] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:48:26] *** Joins: palasso (~palasso@user/palasso)
[12:58:52] *** Joins: lavaball (felix@31.204.155.215)
[13:01:58] *** Joins: re101-otter-36 (~re101-ott@199-189-89-135.sktn.hsdb.sasknet.sk.ca)
[13:26:06] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:57:27] *** Joins: Firecatmon (~firecatmo@pa49-186-30-228.pa.vic.optusnet.com.au)
[14:37:00] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[14:41:10] *** Joins: re101-lion-61 (~re101-lio@106.217.23.71)
[14:42:20] <re101-lion-61> Match all lowercase letters which are followed by two or more capital letters then three or more digits: (the capital letters and digits should not be included in the match)
[14:43:30] <re101-lion-61> https://regex101.com/
[14:45:03] <mysticspiral[m]> Match all lowercase letters which are followed by two or more capital letters then three or more digits: (the capital letters and digits should not be included in the match)
[14:45:06] <mysticspiral[m]> https://regex101.com/r/MVAdSD/1
[14:47:35] <p-i-> https://regex101.com/r/kQB0yB/3 Can anyone see why, when I remove the 'SL' line from the text, the regex fails to match?
[14:47:43] <p-i-> I'm 100% confused here.
[14:47:52] <re101-lion-61> Match all numbers, letters, or underscores <em>using the shortest possible pattern
[14:47:59] <p-i-> I'm making it optional
[14:48:13] <re101-lion-61> Match all numbers, letters, or underscores using the shortest possible pattern
[14:50:11] <p-i-> re101-lion-61: You're asking "Please make my regex for me". What's the essential problem you are stuck with? Narrow it down. Do some work your end.
[14:51:04] <mysticspiral[m]> > Match all numbers, letters, or underscores using the shortest possible pattern
[14:51:04] <mysticspiral[m]> that would be \w
[14:51:18] *** Quits: re101-lion-61 (~re101-lio@106.217.23.71) (Quit: Client closed)
[14:51:27] <mysticspiral[m]> shortest possible = 1 character
[14:59:12] <mysticspiral[m]> p-i-: [Ss][Ll] is not optional
[14:59:47] <p-i-> mysticspiral[m]: But it's encompassed within an optional (?: ... ) match
[15:00:12] <p-i-> I thought the logic was: If that optional match isn't matched, it is ignored
[15:00:20] <mysticspiral[m]> (?:...) is a non capturing group
[15:00:28] <mysticspiral[m]> has nothing to do with optionality
[15:00:33] <p-i-> ohhhh
[15:00:41] <mysticspiral[m]> (...) is a capturing group
[15:00:43] <p-i-> got my ?s in a muddle
[15:01:04] <mysticspiral[m]> (?:...)? is an optional non-capturing group
[15:01:10] <mysticspiral[m]> (...)? is an optional capturing group
[15:02:15] <mysticspiral[m]> you might want to make (^ Target .+? \n)+ non capturing, since you dont need to capture it
[15:02:26] <mysticspiral[m]> apparently
[15:03:02] <p-i-> https://regex101.com/r/kQB0yB/4 ... now at least it doesn't parse-fail when SL is missing
[15:03:14] <p-i-> But it's not capturing SL
[15:03:27] <p-i-> I thought a capturing group inside a non-capturing group still gets captured
[15:04:11] <mysticspiral[m]> the ? at the end makes the whole group optional. so either the whole thing succeeds to match or the whole thing is ignored
[15:05:00] <p-i-> That's what I want, I think.
[15:05:05] <p-i-> But I can't get it to work.
[15:05:31] <mysticspiral[m]> also you know that every space character in your regex is ignored as it was not there, right?
[15:05:50] <p-i-> yeah, I'm on 'x' mode
[15:05:54] <p-i-> That's intended
[15:09:24] <p-i-> https://regex101.com/r/kQB0yB/5 I can't get it to capture SL
[15:13:11] <karhunkynsi> Remove the empty line before SL and see if that gives you a lead.
[15:14:57] <p-i-> ok, so I've reduced it towards a testcase. https://regex101.com/r/kQB0yB/6
[15:15:14] <p-i-> Now this works. But if I put a blank line before SL, now it fails.
[15:15:31] <p-i-> And I can't see how to code it to allow for that blank line.
[15:16:00] <p-i-> My attempt of [\s\S]*? before the SL-match-line down't do what I think it should.
[15:16:13] <karhunkynsi> No.
[15:16:32] <p-i-> To my understanding it should be matching all chars until the next match gets matched.
[15:16:33] <karhunkynsi> It first tries to advance without consuming anything.
[15:16:55] <digitok> quantify \n with +
[15:17:17] <p-i-> yeah but I might have cruft in between the 2 lines
[15:17:52] <p-i-> I want to be eating up all dead-chars between the \n on Entries until I hit the SL line (if it exists)
[15:17:58] <digitok> put [\s\S]*? inside the optional group
[15:18:06] <karhunkynsi> Right, so you can make the entire thing of cruft and SL line optional.
[15:19:27] <p-i-> Yes! https://regex101.com/r/kQB0yB/7 finally, it works!
[15:20:00] <p-i-> I don't understand why it matters to put [\s\S]*? inside the optional group
[15:20:26] <p-i-> But I have something working now.
[15:20:33] <karhunkynsi> Because then it's connected with the SL line.
[15:21:05] <karhunkynsi> Otherwise it tries to advance past the SL line as well if SL doesn't match on the first round.
[15:21:31] <karhunkynsi> That's why it matched without the empty line.
[15:21:53] <mysticspiral[m]> how about doing something like this? https://regex101.com/r/gSYHMj/1
[15:24:28] <p-i-> ^(?:Entries\ *(?P<entries>.*)| ... That leading * is confusing me. What's the purpose?
[15:24:41] <p-i-> Is *(... a special syntax?
[15:24:59] <mysticspiral[m]> \ *
[15:25:19] <mysticspiral[m]> slash space asterisk
[15:25:33] <p-i-> But we're in 'x' mode. So the space is ignored.
[15:25:34] <mysticspiral[m]> space is escaped because of x option
[15:25:44] <karhunkynsi> Probably no need for x flag when all the whitespace is escaped :D
[15:25:47] <mysticspiral[m]> with the slash its no longer ignored
[15:26:07] <p-i-> oh I see
[15:26:10] <mysticspiral[m]> karhunkynsi: i wanted it to be x ready
[15:26:15] <p-i-> it's stripping multiple spaces
[15:27:46] <p-i-> Great, now I've got the original regex working https://regex101.com/r/kQB0yB/8
[15:27:54] <p-i-> I can remove the SL line and it works fine.
[15:28:08] <purplex> i might also catch numbers at the end with [\d.] than .*
[15:28:46] <p-i-> I've got a second-level regex that pulls out the numbers.
[15:28:56] <p-i-> First level just gets the text-chunk for each field.
[15:29:11] <p-i-> I've got a few different formats to worry about
[15:29:47] <mysticspiral[m]> you are aware that a quantified group like (...)+ will only capture the last occurrence? 
[15:30:34] <mysticspiral[m]> depends on the regex flavor though
[15:31:05] <p-i-> It seems my named 'targets' group catches all of them, and regex101 is showing me an unnamed "group 7" just catching the last one.
[15:41:37] *** Joins: txtsd (~txtsd@user/txtsd)
[15:42:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:43:22] *** Joins: proc (uid412603@wikipedia/procrastinatingreader)
[15:47:10] *** Joins: src (~src@user/src)
[15:53:57] *** Quits: f00 (~timm@user/timm) (Ping timeout: 240 seconds)
[16:16:52] *** Hash is now known as stoned
[16:21:01] *** stoned is now known as Hash
[16:22:02] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 250 seconds)
[16:23:22] *** Quits: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com) (Quit: JohnDoe1)
[16:35:26] <re101-otter-36> Is it possible to match markdown emphasis even when it includes strong markers within the emphasis markers in one regex. my take https://regex101.com/r/isNjF6/1
[16:41:01] *** Quits: AMG (ghebo@user/amg) (Quit: Quit)
[16:44:18] *** Quits: Firecatmon (~firecatmo@pa49-186-30-228.pa.vic.optusnet.com.au) (Remote host closed the connection)
[16:48:31] *** Quits: re101-otter-36 (~re101-ott@199-189-89-135.sktn.hsdb.sasknet.sk.ca) (Quit: Client closed)
[16:48:41] *** Joins: re101-otter-36 (~re101-ott@199-189-89-135.sktn.hsdb.sasknet.sk.ca)
[16:51:10] *** Joins: AMG (ghebo@2605:6400:c847:1449::9441)
[16:53:43] <digitok> 07re101-otter-36, which language
[16:54:39] <re101-otter-36> any language
[16:55:34] <digitok> unfortunately, regex does not work that wya
[16:55:36] <digitok> way*
[16:55:47] <digitok> which programming language are you using the regex in
[16:55:55] <re101-otter-36> cpp
[16:57:25] *** Joins: rvalue (~rvalue@user/rvalue)
[16:57:41] <digitok> unfortunate lol
[17:00:58] <re101-otter-36> need a parser for markdown documents with  ctre. i thought it might be simpler and faster than writing a parser
[17:01:12] <re101-otter-36> too lazy to write one
[17:04:01] <purplex> i don't understand what needs to match
[17:04:34] <purplex> _this should match_ not match _match again_?
[17:04:40] <re101-otter-36> yep
[17:05:07] <purplex> only the part _this should match_?
[17:05:48] <re101-otter-36> test zero should pass while passing all other matches ie one...four
[17:06:46] <re101-otter-36> purplex the first and last should match but the 'not match' in the middle should not match
[17:08:35] <purplex> so you want two matches _this should match_ and _match again_ on first line
[17:08:57] <re101-otter-36> correct
[17:09:50] *** Quits: AMG (ghebo@2605:6400:c847:1449::9441) (Changing host)
[17:09:50] *** Joins: AMG (ghebo@user/amg)
[17:12:23] *** Joins: d1cor (~diego@179.63.242.122)
[17:12:44] <purplex> for 2nd line you want a single match for "_this match __with__ all this_" ?
[17:13:33] <re101-otter-36> yes
[17:14:16] <re101-otter-36> basically all matches should still match
[17:15:08] <purplex> why should this match: __this should also match_ is it a valid syntax for emphasis?
[17:15:37] <purplex> seems to be missing _ on the right
[17:17:39] <re101-otter-36> its valid emphasis. its intentional some documentation contain double underscore words wrapped in emphasis
[17:18:30] <purplex> so you want to ignore one _ and only match emphasized text
[17:20:46] <purplex> seems like a recursion thing, but tuff to know where the _ is attached
[17:20:58] <re101-otter-36> test two match works as its suppose to. changes should still match
[17:22:37] <re101-otter-36> though not standard may lib use __name so long as they don't collide with standard libc or libc++
[17:22:52] <purplex> if the text is always valid, and no need to validate incorrect use of emphasis then it can be possible
[17:27:17] <purplex> well we'll to handle all the cases not just your test cases
[17:27:24] <purplex> we'll need^
[17:27:27] <re101-otter-36> if you have a solution that somewhat works please do share
[17:27:54] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th)
[17:28:38] <purplex> i don't usually write somewhat works solution, but try to understand all cases which can be lengthy process
[17:29:14] <purplex> _match _ again_ for example seems to behave in unexpected way, i think you want to replicate the way how markdown behaves
[17:31:39] *** Quits: p-i- (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[17:32:48] <re101-otter-36> Yes its markdown. all other markers have been implemented just this seams to be the bane of the whole process
[17:34:20] <re101-otter-36> I believe the five test cover most all edges cases in emphasis for both documentation and editor based markdown
[17:34:50] <re101-otter-36> PS: most edge cases
[17:41:21] *** Joins: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com)
[17:49:18] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:02:18] *** Quits: proc (uid412603@wikipedia/procrastinatingreader) (Quit: Connection closed for inactivity)
[18:45:31] *** Quits: src (~src@user/src) (Quit: Leaving)
[18:58:10] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 272 seconds)
[19:00:02] *** Joins: f00 (~timm@user/timm)
[19:04:36] *** Quits: f00 (~timm@user/timm) (Ping timeout: 240 seconds)
[19:08:45] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th) (Remote host closed the connection)
[19:09:21] *** Joins: p-i- (~Ohmu@183.89.29.122)
[19:13:24] *** Quits: karhunkynsi (~karhunkyn@user/karhunkynsi) (Remote host closed the connection)
[19:13:41] *** Joins: karhunkynsi (~karhunkyn@user/karhunkynsi)
[19:13:41] *** ChanServ sets mode: +v karhunkynsi
[19:44:45] *** Joins: dandyn (~dandyn@user/dandyn)
[20:31:28] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:f107:35d2:9019:655d)
[20:35:04] *** Quits: p-i- (~Ohmu@183.89.29.122) (Ping timeout: 272 seconds)
[20:46:43] *** Joins: aphysically (~aphysical@user/aphysically)
[21:34:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:45:46] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[21:46:42] *** Joins: lavaball (felix@31.204.155.215)
[21:53:30] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[21:54:29] *** Joins: lavaball (felix@31.204.155.215)
[22:05:29] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:06:38] *** Joins: lavaball (felix@31.204.155.215)
[22:25:37] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-b0ed-1a92-719b-f6c2.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:28:45] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[22:39:38] *** Joins: src (~src@user/src)
[23:03:47] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[23:16:57] *** Quits: VarunAgw_ (~VarunAgw@ip5f5bd251.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[23:21:02] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:34:36] *** Joins: re101-sponge-57 (~re101-spo@41.203.117.95)
[23:36:17] <re101-sponge-57> hello, I need help with parsing through a python text to find every line that has a particular word eg r"example_word and printing that line. The output I am getting shows that the line has the word but doesn't print the actual content of the line
[23:37:06] <re101-sponge-57> sorry parsing through a text file with python
[23:38:01] <mysticspiral[m]> you mean this?  ^.example.$
[23:38:05] <mysticspiral[m]> ^.*example.*$
[23:39:34] <re101-sponge-57> I just tried this but got an error
[23:40:05] <mysticspiral[m]> .*example.* should be enough
[23:42:10] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:43:27] *** Joins: lavaball (felix@31.204.155.215)
[23:45:17] <re101-sponge-57> okay, thank you. Its printing the result of re.match as <re.Match object; span=(36, 41), match='example'>
[23:45:39] <re101-sponge-57> Is there a way I can get the actual string it finds
[23:50:51] <mysticspiral[m]> re101 has a code generator feature. so you can put in any regex, click on code generator and get an example
[23:50:53] <mysticspiral[m]> https://regex101.com/r/glFfWG/1/codegen?language=python
[23:50:53] *** Quits: re101-sponge-57 (~re101-spo@41.203.117.95) (Quit: Client closed)
[23:51:14] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[23:51:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
