[00:04:22] *** Quits: haniaF (~haniaF@83.24.199.163.ipv4.supernova.orange.pl) (Ping timeout: 260 seconds)
[00:04:55] *** Joins: haniaF (~haniaF@83.24.189.244.ipv4.supernova.orange.pl)
[00:10:16] <getivan> The problem, bayes, is that use-case isn't really that universal. Unless you find a community of people who are doing your method, or using your exact software, you're not gonna really be able to spot anything that is that widely used, I think. 
[00:11:57] <Bayes> getivan I get it, yeah, use cases aren't universal at all but I thought maybe somebody compiled a cookbook or something
[00:12:06] <Bayes> the regex101 lib is something like that
[00:12:55] *** Joins: re101-akbash-97 (~re101-akb@2600:387:8:11::2f)
[00:13:29] *** Quits: re101-akbash-97 (~re101-akb@2600:387:8:11::2f) (Client Quit)
[00:13:42] *** Joins: re101-akbash-62 (~re101-akb@2600:387:8:11::2f)
[00:14:20] *** Quits: re101-akbash-62 (~re101-akb@2600:387:8:11::2f) (Client Quit)
[00:14:26] <getivan> It's so broad, though, that it wouldn't really be convenient to navigate it... lol ... That's why I think just doing a search is still best... but werd...
[00:27:18] <purplex> Yeah, I agree. It's not easy to generalize regexes since every use-case has a slightly different goal. I still use some regexes commonly e.g. searching for two near words, cleaning up programming comments, and finding messages based on timestamps. They work all the time the same way. You don't really need a list if you don't know what you'll be using since regex can be very personalized.
[00:29:20] *** Joins: lntl (~joey@ool-44c539e6.dyn.optonline.net)
[00:30:09] <getivan> Yeah, you could use some regex a ton, for certain activities, but then it's totally useless for 99% of everything else you do, so I think it's unlikely that there would ever need a top ten most used regex list by everybody ever, for example. :p 
[00:32:13] <lntl> Whats the best way to match a line which contains only one occurance of a specific character? For #, want to match "foo#bar" but not match foo##bar" or "foo#bar#"
[00:33:11] <purplex> Simple and "classic" regexes such as validating an email, or, a floating number already exist and no one wants to re-invent them. But even they have a lot of variants. Try !email command.
[00:33:24] <getivan> Looks like it'd just be things like email address regex, phone numbers, validation for various things, etc... so, there's a bit, but with all the email regex out there, for example, I still had to find a specific line that would work for my use-case, so even that wasn't universal.
[00:33:58] <getivan> !email
[00:33:59] <perlbot> http://www.regular-expressions.info/email.html, https://emailregex.com/, https://regex101.com/library?orderBy=MOST_POINTS&search=email
[00:34:28] <getivan> Nice...
[00:36:07] <OnlineCop> lntl: Can the line have 'foo#bar baz baf #' ?
[00:36:48] <OnlineCop> `^[^#]*#[^#]*$` would be one way, so long as `[^#]` won't span multiple lines.
[00:37:10] <OnlineCop> You might change that to `[^#\r\n]` instead if you want it to stop at line breaks.
[00:41:19] <purplex> https://regex101.com/r/nrQLnN/1
[00:44:25] <purplex> If they want two # then I could use: https://regex101.com/r/nrQLnN/2
[00:47:16] <lntl> No match on 'foo#bar baz baf #'
[00:48:05] *** Quits: lntl (~joey@ool-44c539e6.dyn.optonline.net) (Remote host closed the connection)
[00:59:37] *** Joins: Floflobel_ (~Floflobel@82-64-37-152.subs.proxad.net)
[01:00:51] <getivan> Heh... he gave up quick...
[01:02:15] <purplex> Even though I created a link to make it simple to understand.
[01:09:42] <getivan> I thought he just wanted a match on lines with just one # ... anyways... ;p
[01:37:27] <purplex> Yep that's he got I believe
[01:51:53] *** Joins: Steeve (~steve@user/steeve)
[02:18:05] *** Joins: army (~aL@user/army)
[02:27:58] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:35:10] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[03:19:27] *** Quits: Firecatmon (~firecatmo@89.187.163.193) (Remote host closed the connection)
[03:56:24] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:10:16] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 268 seconds)
[04:13:50] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[04:14:52] *** Quits: tinytoast (~squeek@user/tinystoat) (Remote host closed the connection)
[04:15:01] *** Joins: tinystoat (~squeek@user/tinystoat)
[04:17:36] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[04:28:39] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[04:33:16] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[04:38:01] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 268 seconds)
[04:46:36] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[04:58:58] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 252 seconds)
[05:06:33] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:09:08] *** Quits: wizhurd (~cr6pt2r@147.253.130.182) (Remote host closed the connection)
[05:27:46] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:22] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:32:26] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 265 seconds)
[05:35:30] *** Joins: vlm (~vlm@user/vlm)
[05:37:18] *** Joins: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se)
[05:37:18] *** Quits: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se) (Changing host)
[05:37:18] *** Joins: maetthew (~maetthew@user/maetthew)
[06:00:24] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[06:05:18] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 265 seconds)
[06:26:02] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[06:30:39] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 268 seconds)
[06:33:06] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[07:02:11] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[07:04:43] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[07:05:42] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[07:12:02] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[07:16:31] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 252 seconds)
[07:50:51] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[07:55:58] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 268 seconds)
[08:21:40] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[08:26:11] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 268 seconds)
[08:26:15] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.2)
[08:32:36] *** Quits: Friithian (gunqqer@friithian.dev) (Remote host closed the connection)
[08:33:18] *** Joins: ray (~ray@user/re)
[08:45:57] *** Joins: re101-dogo-83 (~re101-dog@99-135-14-35.lightspeed.wepbfl.sbcglobal.net)
[08:47:13] <re101-dogo-83> Hello what's the easiest way to find regex for response like "3232323d32323sas2dde323" can someone please help
[08:48:42] <re101-dogo-83> I tried "(.+?)" but that does not work
[08:49:59] <digitok> why do you need regex
[08:55:12] <yitz> .*  ?
[08:55:45] <digitok> inb4 it perfectly works
[08:58:03] *** Joins: re101-koala-7 (~re101-koa@192.95.39.118)
[08:58:17] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[08:58:31] <re101-koala-7> hi i need some regex to grab number 56
[09:01:14] <digitok> 56
[09:02:12] <re101-koala-7> its uncle's age, it comes after his name
[09:02:58] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 268 seconds)
[09:03:14] <digitok> uncle's name (\d+)
[09:04:11] *** Quits: re101-dogo-83 (~re101-dog@99-135-14-35.lightspeed.wepbfl.sbcglobal.net) (Quit: Client closed)
[09:04:32] <re101-koala-7> perfeeeeeect work and have nice good day
[09:04:43] *** Quits: re101-koala-7 (~re101-koa@192.95.39.118) (Quit: Client closed)
[09:39:48] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[09:44:44] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 265 seconds)
[10:11:58] *** Quits: eblip (~eb0t@90.209.54.144) (Ping timeout: 260 seconds)
[10:13:58] *** Joins: eblip (~eb0t@90.199.241.57)
[10:18:41] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[10:35:28] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[10:40:19] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 265 seconds)
[11:03:31] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 265 seconds)
[11:05:16] *** Joins: salitos (~salitos@154.153.201.141)
[11:10:06] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[11:22:52] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[11:24:34] *** Joins: palasso (~palasso@user/palasso)
[11:26:56] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[11:27:08] <no_gravity> Good Morning
[11:27:59] <no_gravity> Can I extend this submatch to stop if it encounters "world"? ^hello([a-z ]
[11:28:09] <no_gravity> Can I extend this submatch to stop if it encounters "world"? ^hello([a-z ]+[a-z])
[11:28:44] <no_gravity> So that in "hello pale old world" it would match "hello pale old"
[11:31:58] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[11:32:20] <digitok> you could do 07^hello(?: (?!world)[a-z]+)*
[11:34:05] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[11:34:24] <no_gravity> digitok: That only matches "hello p"
[11:34:38] <Me-me> !rehelp
[11:34:55] <no_gravity> digitok: https://regex101.com/r/7ikAP4/1
[11:35:04] <digitok> i'm busy atm, but i'll get to you next, Me-me
[11:35:12] <Me-me> :P
[11:35:22] <digitok> 07no_gravity, that isn't what i gave you
[11:35:39] <no_gravity> digitok: Oh, you are right.
[11:35:48] <no_gravity> https://regex101.com/r/h5IMnA/1
[11:35:56] <no_gravity> Works indeed. What black magic does it do?
[11:36:03] <digitok> the blackest
[11:36:15] <no_gravity> Oh, I understand.
[11:36:19] <digitok> :)
[11:36:54] <digitok> it ensures that each word it matches is not world
[11:37:00] <no_gravity> But it does not do it in the submatch.
[11:37:06] <digitok> at least doesn't start with world
[11:37:16] <digitok> what do you mean
[11:37:29] <Me-me> It says "1) world, followed by (2) steps 3 and 4 zero or more times. (3) a space, followed by (4) one or more letters
[11:37:32] <Me-me> "
[11:37:50] <no_gravity> My version matches it in a submatch: ^hello([a-z ]+[a-z])
[11:37:59] <digitok> the magic is so black Me-me couldn't even describe that part
[11:38:01] <no_gravity> So I guess I have to use this: ^hello((?: (?!world)[a-z]+)*)
[11:38:09] <Me-me> I described it fine >:|
[11:38:15] <digitok> you missed the magic part
[11:38:27] <digitok> 07no_gravity, yea, that's right
[11:38:31] <no_gravity> Nice
[11:38:36] <no_gravity> digitok: Thanks man!
[11:38:43] <digitok> although then you'll get a leading space
[11:38:45] <digitok> are you using pcre?
[11:38:52] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:01] <Me-me> Oh the lookahead part.
[11:39:03] <Me-me> Sure.
[11:39:04] <no_gravity> digitok: I think so. Python.
[11:39:13] <digitok> that's a no :p
[11:39:30] <no_gravity> So I guess I have to use this: ^hello\s*([a-z](?: (?!world)[a-z]+)*)
[11:39:45] <digitok> with an extra +, yea
[11:39:59] <no_gravity> extra +?
[11:40:04] <digitok> [a-z]+
[11:40:20] <no_gravity> I don't think it makes a difference.
[11:40:34] <digitok> it doesn't as long as the 2nd word is always 1 letter
[11:40:40] <digitok> but that seems unlikely
[11:42:06] *** Parts: hanif (~hanif@gateway/tor-sasl/hanif) ()
[11:42:10] <Me-me> + turns [a-z] from "A letter" to "one or more letters".
[11:42:32] <digitok> light grey magic
[11:42:43] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 252 seconds)
[11:43:19] <no_gravity> I wonder if there is a different approach that is less complicated.
[11:44:10] <digitok> you could use 07^hello(.*?)(?=world|$) and trim() the result
[11:44:35] <digitok> or 07^hello (.*?)(?= *world|$) and not trim it
[11:44:49] <digitok> or 07^hello (.*?)(?= world|$) and not trim it
[11:44:50] <digitok> rather
[11:44:53] <no_gravity> That would match "hello üüü world" I think.
[11:45:04] <digitok> it would
[11:45:12] <digitok> you can change .*? to [a-z ]+
[11:45:35] <digitok> you can change .*? to [a-z ]+?
[11:45:36] <digitok> rather
[11:45:53] <digitok> https://regex101.com/r/h5IMnA/2
[11:46:15] <no_gravity> Nice
[11:46:19] <no_gravity> I like this one better
[11:46:38] <no_gravity> digitok: Thanks. That is awesome!
[11:46:43] <digitok> np
[11:47:07] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[11:48:54] *** Joins: jinsun (~quassel@user/jinsun)
[11:57:48] <no_gravity> digitok: Still two problems: https://regex101.com/r/RMUfNF/1
[11:59:17] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 245 seconds)
[11:59:30] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.2)
[12:00:43] <no_gravity> digitok: First one solved: https://regex101.com/r/kSW84u/1
[12:00:51] <no_gravity> The space after the match is the tricky one.
[12:01:50] <no_gravity> Maybe like this: https://regex101.com/r/tYWGtk/1
[12:02:04] <no_gravity> Ah no
[12:03:02] *** Joins: yitz (~yitz@exercism/yitz)
[12:03:02] *** ChanServ sets mode: +v yitz
[12:03:05] *** Joins: lavaball (felix@31.204.155.215)
[12:04:04] *** Quits: salitos (~salitos@154.153.201.141) (Quit: Leaving)
[12:18:02] <digitok> https://regex101.com/r/tYWGtk/3
[12:18:24] <digitok> https://regex101.com/r/tYWGtk/4 more complicated, more efficient
[12:18:40] <digitok> also fyi, you can click update to append a new version to your link
[12:21:15] *** Joins: ahmedelgabri (~ahmedelga@102.190.213.91)
[12:21:15] <no_gravity> digitok: That matches "green     world" which it should not :)
[12:21:38] <digitok> oops
[12:21:45] <digitok> https://regex101.com/r/tYWGtk/5
[12:22:58] *** Joins: jrofd (~test@cpc127052-lewi23-2-0-cust30.2-4.cable.virginm.net)
[12:26:04] *** Quits: ahmedelgabri (~ahmedelga@102.190.213.91) (Ping timeout: 268 seconds)
[12:26:48] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[12:43:11] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[12:43:40] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:52:38] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[12:57:35] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 265 seconds)
[13:07:31] *** Joins: monoxane3 (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[13:09:14] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (Ping timeout: 268 seconds)
[13:09:14] *** monoxane3 is now known as monoxane
[13:16:24] *** Joins: re101-budgie-28 (~re101-bud@ptr-goqtcedosmoo8r8vlrn.18120a2.ip6.access.telenet.be)
[13:21:20] *** Quits: re101-budgie-28 (~re101-bud@ptr-goqtcedosmoo8r8vlrn.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[13:31:43] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[13:36:31] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 252 seconds)
[13:42:27] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:50:51] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[13:56:33] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 265 seconds)
[14:12:56] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[14:17:13] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 252 seconds)
[14:33:36] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[15:07:25] *** Quits: Floflobel_ (~Floflobel@82-64-37-152.subs.proxad.net) (Ping timeout: 268 seconds)
[15:08:29] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Remote host closed the connection)
[15:15:02] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 268 seconds)
[15:15:56] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[15:28:41] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[15:30:01] *** Joins: re101-ferret-64 (~re101-fer@183.83.154.24)
[15:31:10] <re101-ferret-64> What regex should I use to change "hello Fox" to "h***o F*x"
[15:32:40] <testuser[m]> isnt that too broad
[15:34:34] <re101-ferret-64> Only the first and last character should be seen. In between characters should be replaced with asterisk
[15:41:31] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 252 seconds)
[15:44:34] <digitok> which programming language are you using
[15:47:23] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[15:47:36] <re101-ferret-64> I am using erlang
[15:49:14] <digitok> https://regex101.com/r/XaSbpH/1
[15:50:02] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:50:16] <digitok> https://regex101.com/r/XaSbpH/2 better
[15:51:00] <digitok> https://regex101.com/r/XaSbpH/3 slightly more efficient
[15:51:10] <digitok> that's the final version :p
[15:51:25] *** Quits: re101-ferret-64 (~re101-fer@183.83.154.24) (Quit: Client closed)
[15:54:21] <digitok> -_-
[15:54:37] <digitok> https://regex101.com/r/XaSbpH/4 made one more anyway
[16:10:53] *** Joins: Guest83 (~Guest83@ptr-goqtceg0gymeyzcmpha.18120a2.ip6.access.telenet.be)
[16:14:12] *** Joins: X-Scale` (~ARM@92.250.99.192)
[16:15:23] *** Quits: Guest83 (~Guest83@ptr-goqtceg0gymeyzcmpha.18120a2.ip6.access.telenet.be) (Client Quit)
[16:16:29] *** Quits: X-Scale (~ARM@46.50.0.45) (Ping timeout: 268 seconds)
[16:16:29] *** X-Scale` is now known as X-Scale
[16:23:08] *** Joins: re101-beagle-70 (~re101-bea@a85-139-158-25.cpe.netcabo.pt)
[16:24:21] *** Joins: Floflobel_ (~Floflobel@cosium-fo-152-18.fib.nerim.net)
[16:24:57] <re101-beagle-70> Hey there I'm new to UiPath and I'm trying to use the Matches activity to find a keyword inside an Email, I'm having trouble because I'm getting matches I'm not expecting.
[16:25:27] <re101-beagle-70> https://regex101.com/r/9SATEz/1
[16:25:43] <re101-beagle-70> I get "empty" matches
[16:26:33] <re101-beagle-70> I'm expecting to only get Matches 1 and 3 from the above example
[16:27:45] <re101-beagle-70> And I'm also missing a match on line 9 of the test string
[16:28:18] <digitok> https://regex101.com/r/9SATEz/2
[16:28:38] <digitok> * means 0 or more, + means 1 or more, so with yours you will get empty matches
[16:29:02] <re101-beagle-70> Right
[16:29:05] <re101-beagle-70> Thank you so much
[16:29:16] <digitok> yw
[16:30:25] <digitok> you only wanted the one word?
[16:30:37] <re101-beagle-70> Yes
[16:30:41] <digitok> ok :)
[16:30:46] <re101-beagle-70> That part is handled
[16:30:51] <digitok> cool
[16:40:46] <rapha> hi all
[16:59:14] <rapha> did i write https://regex101.com/r/PWusOv/1 correctly so that it will, under all circumstances, only match if there's at least two hex characters present?
[17:06:40] <digitok> pretty much
[17:06:45] <digitok> you can remove the +
[17:25:36] *** Joins: Firecatmon (~firecatmo@180.149.228.180)
[17:27:29] *** Joins: lavaball (felix@31.204.155.215)
[17:37:17] *** Joins: JanC_ (~janc@user/janc)
[17:38:34] *** Quits: JanC (~janc@user/janc) (Ping timeout: 252 seconds)
[17:39:13] *** Joins: re101-oyster-20 (~re101-oys@2405:201:100f:5004:3cf9:af5a:6604:2b7)
[17:41:08] <re101-oyster-20> how can i extract filename from string ex "their is a pot /abc/gft/skg/file.json: end" 
[17:41:23] <re101-oyster-20> need filepath and filename only
[17:41:31] <re101-oyster-20> without colon
[17:41:38] <re101-oyster-20> which is at the end
[17:47:00] <re101-oyster-20> i need to extract /abc/gft/skg/file.json 
[17:49:31] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 252 seconds)
[17:50:48] <re101-oyster-20> ?
[17:51:22] <digitok> where will you be using the regex
[17:51:27] <digitok> which programming language
[17:51:32] <re101-oyster-20> golang
[17:52:49] <digitok> /[^\s:]*
[17:53:21] <re101-oyster-20> and what if it have , intest of :
[17:53:53] <digitok> /[^\s:,]*
[17:53:58] *** Quits: army (~aL@user/army) (Quit: Going offline, see ya! (www.adiirc.com))
[17:54:09] <re101-oyster-20> you are great 
[17:54:11] <re101-oyster-20> thanks 
[17:54:23] <digitok> yw
[17:55:46] <purplex> I did one too: https://regex101.com/r/kIAPjv/1/
[17:56:24] <re101-oyster-20> thanks dude 
[17:56:48] <purplex> np
[18:08:25] *** Quits: re101-beagle-70 (~re101-bea@a85-139-158-25.cpe.netcabo.pt) (Quit: Client closed)
[18:08:56] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 268 seconds)
[18:12:10] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[18:18:28] *** JanC_ is now known as JanC
[18:27:05] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[18:27:16] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[18:27:52] <daoudr_> why  /\w/gi is matching the numbers too in this string   'ultr53o'
[18:28:23] <Me-me> Because numbers are word characters.
[18:28:32] <Me-me> [A-Za-z0-9_] are word characters.
[18:28:48] <Me-me> Or, to put it another way, \w is shorthand for [A-Za-z0-9_]
[18:32:09] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 268 seconds)
[18:33:55] <daoudr_> That is not what my mother told me. she never lied
[18:34:58] <daoudr_> Thank you for the nice answer. 
[18:35:43] <Me-me> Happy to help.
[18:41:52] <digitok> she didn't lie, she just omitted the truth
[18:42:08] <Me-me> I believe it was a joke, digitok.
[18:42:25] <digitok> yes, i definitely did not realise that, Me-me, thank you
[18:42:33] <digitok> mine was definitely not a joke
[18:42:57] *** Quits: re101-oyster-20 (~re101-oys@2405:201:100f:5004:3cf9:af5a:6604:2b7) (Quit: Client closed)
[18:43:12] <Me-me> Good thing I was here to inform you, then.
[18:43:26] <digitok> yes, very good indeed
[18:50:33] <NiLon> I actually wonder why numbers are "words". It would make sense if it would include unicode by default, because in some languages numbers actually are part of words or words itself
[18:51:20] <NiLon> but I fail to think any ascii language where this would be the case
[18:52:02] <NiLon> and if idea is to just have "word looking" segments, then it fails on mostly any language but english
[18:52:17] <digitok> because it's words in the context of programming and things such as variable names
[18:52:58] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[18:54:03] <NiLon> in context of programming language, a word means amount of bits, not what it contains
[18:56:20] <digitok> ok
[18:56:43] <purplex> which programming language has 'word'?
[18:57:04] <NiLon> ~every compiled language
[18:57:30] <NiLon> but it's not really about the language, but the system it is in
[18:58:16] <NiLon> like x86 might have word size of 64 bits and ARM might have word size of 32 bits
[18:58:33] <digitok> \w represents characters that make up an english "word" used in almost every programming language to represent a variable name
[18:58:44] <digitok> no need for a silly unrelated discussion about it
[18:59:10] <purplex> seems more 'architecture' related than 'type' 
[18:59:22] <NiLon> well same way as ints are
[18:59:33] <NiLon> it's not really fixed amount of bits, even if every language has int type
[19:00:11] <purplex> seems right, i have only seen 'WORD' type in Win32API
[19:01:24] <NiLon> but the whole point of this was that word and variable names are totally different concepts in context of programming
[19:01:50] <NiLon> so using "word" makes no sense to mean valid variable name, and even then it is wrong
[19:02:08] <purplex> int has a signed range, but a word doesn't
[19:02:09] <NiLon> the rule only fits mostly to C, and \w is not valid variable name even in C
[19:03:27] <purplex> anyway, DWORD was the type i used most often
[19:03:41] <digitok> \w is exactly a valid variable name in C
[19:03:47] <digitok> letters, digits, and underscores
[19:05:21] <NiLon> but that's not the rule of it being a valid variable name
[19:05:38] <digitok> did anyone claim it was the rule
[19:05:46] <digitok> it matches every valid character in a variable name
[19:05:48] <digitok> simple
[19:06:08] <NiLon> sure, and that makes it a "word"?
[19:07:13] <NiLon> and it is weird because in perl there are variables like "$." that no way match the rule, yet pcre shorthand
[19:07:17] <NiLon> it just makes no bloody sense
[19:08:08] <purplex> poor python programmers will have no idea what we are talking about
[19:10:20] <NiLon> and even if we go with the idea that it is shorthand for parsing C variable names, then is that really so common task that you need a shorthand for it
[19:10:38] <NiLon> how many times you have done it
[19:10:49] <digitok> the concept of word characters in regex predates perl
[19:12:45] <daoudr_> what is the best  regex crash video you recommend?
[19:13:27] <digitok> the only one i know of
[19:13:30] <digitok> !tutorials
[19:13:31] <perlbot> https://www.regular-expressions.info/tutorial.html, http://www.rexegg.com/, https://regexone.com/, https://youtu.be/_6QBBT9Sq1U
[19:13:36] <digitok> that one
[19:13:50] <digitok> i should probably watch it at some point
[19:14:08] <NiLon> I think the idea of "word" is to match natural language, rather than programming languages
[19:14:21] <digitok> in regex?
[19:14:30] <purplex> too late to watch, video unavailable
[19:14:41] <digitok> wow
[19:14:59] <digitok> that's OnlineCop's favourite video
[19:15:23] <purplex> then he must have downloaded it, i download all my favorites 
[19:16:51] <NiLon> digitok in the regex yes
[19:20:01] <purplex> i bet onlinecop found a bug in video, reported and then video removed
[19:21:35] <NiLon> hmm actually I need to do bit research on the combining characters because this seems to bizarre https://en.wikipedia.org/wiki/Combining_character
[19:21:38] <NiLon> never seen these to be used
[19:22:02] <NiLon> and that is what regex includes in "word"
[19:23:01] <NiLon> like this https://www.fileformat.info/info/unicode/char/2040/index.htm no idea how and where you would use it
[19:25:31] <NiLon> oh, https://en.wikipedia.org/wiki/Voiced_labial%E2%80%93velar_plosive
[19:25:42] <NiLon> so does this mean the "word" means more of phonetic word
[19:26:57] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[19:30:32] <NiLon> or maybe it is just for filesystems that didn't have whitespace support, so _ was used instead of space and then \w does match a filename
[19:30:39] <NiLon> I guess that makes most sense
[19:30:51] <NiLon> because that is also practical reason why you would have shorthand
[19:31:58] <NiLon> and word is random unrelated-to-anything word chosen for it
[19:36:45] <rapha> digitok: thx!
[19:42:17] <purplex> np
[19:44:36] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[19:45:04] *** Quits: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:59:06] *** Joins: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1)
[20:06:08] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) ()
[20:10:45] *** Joins: re101-cogo-73 (~re101-cog@192.95.39.118)
[20:11:33] <re101-cogo-73> my sister needs a regex, it should match name of college followed by where it is located
[20:18:06] *** Quits: re101-cogo-73 (~re101-cog@192.95.39.118) (Quit: Client closed)
[20:21:28] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 252 seconds)
[20:35:55] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[20:38:48] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[20:39:56] <daoudr_> Thank you digitok 
[20:40:28] *** Joins: re101-deer-32 (~re101-dee@188.247.226.197)
[20:40:45] <daoudr_> digitok: https://www.youtube.com/watch?v=_6QBBT9Sq1U this video is not available
[20:44:02] *** Quits: re101-deer-32 (~re101-dee@188.247.226.197) (Client Quit)
[20:44:28] <purplex> well you can still find plenty of regex crashes
[20:46:01] <purplex> so what do you need it for? school, or, just personal learning?
[20:46:46] <purplex> that video i think was by some university professor, may be too academic for your interest
[20:48:26] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 268 seconds)
[21:02:23] *** Joins: re101-snail-6 (~re101-sna@pool-71-171-104-246.clppva.fios.verizon.net)
[21:03:50] <daoudr_> i have technical acceptance test in a fullstack bootcamp 
[21:04:11] *** Joins: re101-dunker-73 (~re101-dun@137.220.83.127)
[21:04:16] *** Quits: re101-dunker-73 (~re101-dun@137.220.83.127) (Client Quit)
[21:04:40] *** Joins: rojerian (~rojerian@137.220.83.127)
[21:05:23] <daoudr_> I made crash course in javascript and training kata in codewars as they recommended for the technical test so I want to grasp regex to be able to solve level 7 kata that involves regex
[21:05:26] <purplex> have you tried youtube at all? daoudr_
[21:05:51] <daoudr_> I am trying but I thought to have a recommendation too
[21:06:26] <daoudr_> I am watching this one which has the most views https://www.youtube.com/watch?v=sa-TUpSx1JA
[21:06:58] <purplex> well i never personality learned from crash courses, do you really need a "video" and not written tutorial?
[21:07:06] <purplex> personally*
[21:07:26] <daoudr_> it is harder for me to grasp when I read, I learn faster with videos and learning by doing
[21:07:41] <re101-snail-6> Hi folks i was hoping to get help with a regex pattern. Is there a simple way to execute something like this >>  {pattern1}\n{remove string}\n{pattern2}
[21:08:18] <purplex> yea understood, in videos you need less effort to put together information
[21:09:15] <purplex> but this tutorial i read is just fine:  https://www.regular-expressions.info/tutorial.html it explains stuff with example
[21:09:37] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[21:10:10] <daoudr_>  I will read it once I finish this video
[21:10:17] <purplex> alright, first you can watch that video you're currently watching, and then go to that tutorial, it will make sense
[21:10:29] <purplex> yea thats what i'm saying
[21:11:26] <purplex> if it doesn't make sense, we are all here most of the time just hanging out so you can ask your question..
[21:13:53] *** Quits: rojerian (~rojerian@137.220.83.127) (Quit: Ping timeout (120 seconds))
[21:24:55] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[21:29:58] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 268 seconds)
[21:41:58] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[21:44:41] <re101-snail-6> Hi folks i was hoping to get help with a regex pattern. Is there a simple way to find something like this >>  {pattern1}\n{a sentence to remove}\n{pattern2}
[21:47:28] <purplex> what do you mean a simple way?
[21:47:40] <purplex> shorter regex?
[21:55:44] <re101-snail-6> ok ignore simple.. i need a regex
[21:58:31] <purplex> !rehelp @ re101-snail-6
[21:59:28] <re101-snail-6> i seem to only be able to match the first pattern or second pattern but i cant match >> {pattern1}\n{a sentence to remove - could consider this also a pattern but i don't want this / ignore this }\n{pattern2} 
[21:59:47] <purplex> okay, probably that command was removed, but essentially we need some data and your question because "{pattern1}\n{a sentence to remove}\n{pattern2}" makes not much sense
[22:00:08] <re101-snail-6> ok... onesec
[22:01:00] <purplex> if you want the solution give to you be "reliable" describe problem as clearly as possible..
[22:01:13] <purplex> given*
[22:06:45] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[22:07:01] <re101-snail-6> https://regex101.com/r/00C6xx/1
[22:08:25] *** Quits: Floflobel_ (~Floflobel@cosium-fo-152-18.fib.nerim.net) (Remote host closed the connection)
[22:08:53] *** Joins: army (~aL@user/army)
[22:09:06] <re101-snail-6> revised
[22:09:07] <re101-snail-6> √
[22:09:10] <re101-snail-6> https://regex101.com/r/JOV8vv/1
[22:11:54] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 268 seconds)
[22:14:13] <purplex> okay you want anything between JID.* and RedID.* to be removed?
[22:18:10] *** mozgalom is now known as bomb-on
[22:18:32] <purplex> https://regex101.com/r/JOV8vv/3
[22:30:02] *** bomb-on is now known as le_koober
[22:37:38] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[22:42:10] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 240 seconds)
[22:54:45] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[22:59:10] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 260 seconds)
[23:01:01] *** Quits: le_koober (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[23:01:05] *** Joins: re101-quokka-38 (~re101-quo@115.114.81.229)
[23:13:01] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[23:17:39] <re101-snail-6> @purplex the JID identified should be the one right before the RedID even tho it occurs at other places
[23:18:31] <re101-snail-6> i only want its occurrence before the RedID hilighted
[23:19:10] <re101-snail-6> This was i can see this RedID is associated to this one JID 
[23:25:48] <purplex> i see
[23:26:05] <purplex> let me check it
[23:28:01] <purplex> https://regex101.com/r/JOV8vv/4
[23:36:27] *** Joins: ahmedelgabri (~ahmedelga@102.190.25.109)
[23:40:58] *** Quits: ahmedelgabri (~ahmedelga@102.190.25.109) (Ping timeout: 252 seconds)
[23:41:59] *** Quits: haniaF (~haniaF@83.24.189.244.ipv4.supernova.orange.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[23:42:59] *** Joins: re101-cow-23 (~re101-cow@65.201.221.179)
[23:43:04] *** Quits: re101-cow-23 (~re101-cow@65.201.221.179) (Client Quit)
[23:44:13] *** Joins: haniaF (~haniaF@83.24.226.252.ipv4.supernova.orange.pl)
[23:51:50] *** Joins: re101-gar-84 (~re101-gar@bras-vprn-toroon474aw-lp130-02-174-88-169-119.dsl.bell.ca)
[23:52:00] <re101-gar-84> what's that mean sed -i 's/$/\r/' input.txt
[23:53:58] <re101-gar-84> Can you translate this command to sed perl -pi -e 's/\n/\r\n/' input.txt
[23:59:38] *** Joins: re101-quoll-24 (~re101-quo@159.53.174.143)
