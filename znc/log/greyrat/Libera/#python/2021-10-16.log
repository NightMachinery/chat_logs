[00:00:14] <mefistofeles> vfbsilva: I thought the workaround was using firefox, if that doesn't work, no idea
[00:00:53] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:01:11] *** Joins: lethu (~lethu@user/lethu)
[00:01:14] *** Joins: lothar_m (~lothar_m@90.241.139.72)
[00:02:18] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:03:26] *** LordOfThePings is now known as Hash
[00:03:29] *** Quits: lothar_m (~lothar_m@90.241.139.72) (Client Quit)
[00:03:29] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667)
[00:03:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[00:04:16] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[00:04:54] *** Joins: wyclif (~wyclif@user/wyclif)
[00:04:55] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[00:05:34] <aphysically> ayy my first few (Python) OSS PRs merged
[00:06:42] <mefistofeles> aphysically: congrats!
[00:06:52] * FunkyBob pops a bottle of celebratory bev of choice...
[00:06:59] <mefistofeles> aphysically: it feels good, doesn't it? :P
[00:07:21] *** Joins: orbatos (~orbatos@user/orbatos)
[00:07:26] <aphysically> :)
[00:07:53] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 264 seconds)
[00:08:01] *** Quits: greentree (~greentree@pool-108-30-9-123.nycmny.fios.verizon.net) (Quit: greentree)
[00:08:59] *** Quits: ska (~ska@user/ska) (Quit: Leaving)
[00:09:11] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[00:09:14] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[00:09:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[00:10:26] *** Joins: wyclif (~wyclif@user/wyclif)
[00:11:46] *** Joins: lothar_m (~lothar_m@185.107.80.86)
[00:11:56] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 268 seconds)
[00:12:36] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Quit: Haxxa flies away.)
[00:13:41] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[00:14:52] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[00:14:53] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[00:14:57] *** Joins: emf (~emf@2620:10d:c090:400::5:35f6)
[00:15:16] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:15:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:15:57] *** Joins: wyclif (~wyclif@user/wyclif)
[00:17:24] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 265 seconds)
[00:18:30] *** Joins: wender (~Wender@189.37.64.234)
[00:19:24] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[00:20:37] *** Joins: khrbt (~znc@user/khrbt)
[00:20:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:20:50] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[00:21:28] *** Joins: wyclif (~wyclif@user/wyclif)
[00:21:35] *** Quits: lothar_m (~lothar_m@185.107.80.86) (Remote host closed the connection)
[00:21:55] *** Joins: lothar_m (~lothar_m@185.107.80.86)
[00:22:02] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) ()
[00:22:19] *** Quits: lothar_m (~lothar_m@185.107.80.86) (Changing host)
[00:22:19] *** Joins: lothar_m (~lothar_m@user/lothar-m/x-8875873)
[00:22:28] *** Quits: computeiro (~Wender@189.37.64.234) (Ping timeout: 252 seconds)
[00:22:39] *** Quits: lothar_m (~lothar_m@user/lothar-m/x-8875873) (Client Quit)
[00:23:03] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:23:22] *** Quits: newpy (~newpy@2601:280:4381:1390:78c6:edb:15c0:8a3f) (Quit: Leaving)
[00:23:45] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[00:23:54] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:24:10] *** Joins: computeiro (~Wender@189.15.135.143)
[00:24:27] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[00:25:31] *** Quits: wender (~Wender@189.37.64.234) (Ping timeout: 245 seconds)
[00:25:33] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667) (Ping timeout: 256 seconds)
[00:26:00] *** Joins: wender (~Wender@189.37.64.234)
[00:26:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:26:35] <ChrisWarrick> vfbsilva: you can try this: https://github.com/mapbox/mapboxgl-jupyter/issues/165
[00:26:59] *** Joins: wyclif (~wyclif@user/wyclif)
[00:27:04] * ChrisWarrick doesn’t really get why jupyter bothers with all those protections if it’s running on localhost
[00:27:22] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[00:27:48] * foo checks to see if there is a way to feed glom multiple specs and pick whichever one has a value
[00:29:07] *** Quits: computeiro (~Wender@189.15.135.143) (Ping timeout: 252 seconds)
[00:29:17] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[00:29:43] <foo> glom() or glom() works fine.
[00:30:37] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:30:41] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:30:56] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:31:43] *** Joins: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108)
[00:31:54] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[00:32:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[00:32:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[00:32:30] *** Joins: wyclif (~wyclif@user/wyclif)
[00:33:27] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:33:32] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[00:33:40] *** hanaan is now known as Naan
[00:35:00] *** Joins: obx (~orange@user/orangeboxcutter)
[00:36:44] <SnoopJ> ChrisWarrick, sometimes it _isn't_ runnin on localhost, or is that your point, that they could be turned off when it is?
[00:36:54] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[00:36:55] <ChrisWarrick> the latter
[00:37:17] <SnoopJ> hmm, fewer cases to think about maybe?
[00:37:22] <SnoopJ> you probably know more about it than I do, considering
[00:37:22] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 252 seconds)
[00:37:34] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[00:37:41] *** Quits: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108) (Read error: Connection reset by peer)
[00:37:49] *** Joins: prirai (~Priyanshu@2409:4063:6d0c:b492::7208:8108)
[00:38:11] *** Quits: emf (~emf@2620:10d:c090:400::5:35f6) (Quit: emf)
[00:38:36] *** Quits: prirai (~Priyanshu@2409:4063:6d0c:b492::7208:8108) (Remote host closed the connection)
[00:38:48] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[00:39:25] *** Joins: michael_ (~michael@dslb-088-076-140-237.088.076.pools.vodafone-ip.de)
[00:39:34] *** Quits: rundown (~eb0t@90.213.43.87) (Ping timeout: 252 seconds)
[00:40:46] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[00:40:50] <CrtxReavr> He's actually popped in for a bit the past several days.
[00:40:53] <CrtxReavr> whoops
[00:40:59] <CrtxReavr> fstrings in 3.6?
[00:41:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:41:13] <foo> I don't think there's a better way to do this with glom but let me know: https://bpa.st/4FVQ - thanks :)
[00:41:17] <foo> if there is, that is
[00:42:09] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) ()
[00:42:19] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[00:45:55] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[00:46:47] *** Joins: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108)
[00:47:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:47:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a8be-5e8c-f3b4-9539.res6.spectrum.com)
[00:47:32] *** Joins: wyclif (~wyclif@user/wyclif)
[00:47:36] <raek> CrtxReavr: yes, f-strings were introduced in 3.6. (neat summary: https://nedbatchelder.com/blog/201803/whats_in_which_python_3436.html)
[00:48:47] *** Quits: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[00:48:53] *** Joins: fedorafan_altern (~fedorafan@user/fedorafan)
[00:49:06] <fedorafan_altern> hey guys
[00:49:11] *** Joins: Smedles (~quassel@2403:580d:1:0:aaa1:59ff:fe53:1a69)
[00:49:45] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:50:01] *** Parts: fedorafan_altern (~fedorafan@user/fedorafan) (Textual IRC Client: www.textualapp.com)
[00:50:16] *** Joins: mickey8 (~user@user/mickey)
[00:50:18] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[00:50:47] *** Joins: mickey8 (~user@user/mickey)
[00:51:05] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 264 seconds)
[00:51:24] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[00:51:32] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc9e:1427:a97:e25a)
[00:51:50] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[00:52:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[00:52:43] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[00:52:45] <zen_coder> I want to throw an exception when an environment variable is not defined https://bpa.st/ZOOQ
[00:52:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[00:52:51] <zen_coder> is this the right way to do?
[00:52:55] *** Joins: wyclif (~wyclif@user/wyclif)
[00:53:54] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[00:55:50] *** Quits: whatsupdoc (~whatsupdo@148.64.20.69) (Quit: Client closed)
[00:55:51] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:55:57] *** Quits: Player001 (~Player001@user/player001) (Quit: Quitting)
[00:56:07] <nedbat> zen_coder: It might be nicer to separate the two variables so you can be specific
[00:56:20] *** Joins: Player001 (~Player001@user/player001)
[00:56:51] <nedbat> i might also not use "from error", since the KeyError won't provide more information than you've already given
[00:57:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[00:57:11] *** Lord_of_Life_ is now known as Lord_of_Life
[00:57:18] *** Joins: emf (~emf@2620:10d:c090:400::5:35f6)
[00:57:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a8be-5e8c-f3b4-9539.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:57:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:58:02] <zen_coder> nedbat: how can I avoid getting two tracebacks
[00:58:03] <zen_coder> ?
[00:58:15] <nedbat> zen_coder: use "from None"
[00:58:24] *** Joins: wyclif (~wyclif@user/wyclif)
[00:59:58] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[01:01:51] *** Joins: whatsupdoc (~whatsupdo@148.64.20.69)
[01:02:19] *** BytesAndCoffee|a is now known as BytesAndCoffee
[01:03:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:03:56] *** Joins: wyclif (~wyclif@user/wyclif)
[01:04:32] *** Joins: korg815 (~korg815@user/korg815)
[01:05:02] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[01:06:31] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 252 seconds)
[01:08:04] *** Quits: kurfen (~kurfen@37.120.204.67) (Quit: WeeChat 2.3)
[01:08:38] *** Joins: iryd (~jamesm@c-174-56-254-152.hsd1.ga.comcast.net)
[01:08:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:08:50] *** Parts: iryd (~jamesm@c-174-56-254-152.hsd1.ga.comcast.net) ()
[01:09:28] *** Joins: wyclif (~wyclif@user/wyclif)
[01:12:08] *** Joins: FireFish5000 (~FireFish5@user/firefish5000)
[01:12:36] *** Quits: wender (~Wender@189.37.64.234) (Ping timeout: 245 seconds)
[01:12:38] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[01:12:48] *** Quits: Smedles (~quassel@2403:580d:1:0:aaa1:59ff:fe53:1a69) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:13:04] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[01:13:49] *** Quits: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108) (Remote host closed the connection)
[01:13:53] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 264 seconds)
[01:14:16] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[01:14:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:14:42] *** Joins: douglascorrea_io (~douglasco@200.146.85.128.static.gvt.net.br)
[01:14:48] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[01:14:58] *** Joins: wyclif (~wyclif@user/wyclif)
[01:16:27] *** Joins: vd24 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[01:16:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Client Quit)
[01:18:39] *** Quits: ubert (~Thunderbi@178.165.181.201.wireless.dyn.drei.com) (Remote host closed the connection)
[01:18:44] *** Quits: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:19:19] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:19:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:19:57] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:20:13] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[01:20:13] *** Joins: Smedles (~quassel@2403:580d:1:0:aaa1:59ff:fe53:1a69)
[01:20:30] *** Quits: cliluw (~cliluw@47.147.80.149) (Read error: Connection reset by peer)
[01:20:30] *** Joins: wyclif (~wyclif@user/wyclif)
[01:21:41] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 264 seconds)
[01:22:15] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:23:53] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[01:24:55] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Quit: Leaving.)
[01:25:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:26:01] *** Joins: wyclif (~wyclif@user/wyclif)
[01:26:20] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:3c81:12c5:ede2:fb22) (Quit: Textual IRC Client: www.textualapp.com)
[01:27:03] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:27:36] *** Quits: ElPresidente (~ElPreside@2605:a601:55be:bb00:2107:91d9:bdcb:298b) (Ping timeout: 245 seconds)
[01:30:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:31:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:31:33] *** Joins: wyclif (~wyclif@user/wyclif)
[01:32:29] *** Quits: philipp64|work (~philipp64@mail.redfish-solutions.com) (Quit: philipp64|work)
[01:33:20] *** Quits: Telvana (~capo@user/telvana) (Read error: Connection reset by peer)
[01:33:28] *** Quits: stockholm (~Andreas@p200300d2c706510050cb9f8f1ec3a5bd.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[01:33:58] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Ping timeout: 252 seconds)
[01:34:15] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[01:35:49] *** Quits: QuaternionsRock (~Quaternio@76.191.39.82) (Ping timeout: 256 seconds)
[01:36:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:36:49] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:37:04] *** Joins: wyclif (~wyclif@user/wyclif)
[01:37:05] <Celelibi> Oh. I had a question, but instead I just discovered (or reinvented) a trick.
[01:37:18] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[01:37:47] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[01:38:03] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[01:38:13] <Celelibi> I was looking for a function argmin. But with a key= argument, like sort. (Which numpy.argmin lacks.)
[01:38:26] *** Quits: brickfat (~brickfat@user/brickfat) (Ping timeout: 245 seconds)
[01:38:56] <SnoopJ> Celelibi, right, key= doesn't really make sense because numpy dtypes should already know how (and there's only one way)
[01:39:09] <SnoopJ> and if you have dtype=object, .tolist() and use Python
[01:39:27] *** Joins: djapo (~archangel@user/djapo)
[01:39:30] <Celelibi> But I guess I can use min(range(len(l)), key=lambda x: l[x].foo)
[01:40:13] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:40:57] *** Quits: Player001 (~Player001@user/player001) (Quit: Quitting)
[01:41:27] <Celelibi> Doesn't work on every iterable. But non-indexable iterables would probably not need an index anyway.
[01:41:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:42:35] *** Joins: wyclif (~wyclif@user/wyclif)
[01:44:09] <energizer> i think the real reason is that argmin doesnt actually need it: argmin(f(xs)) == argmin(xs, key=f)
[01:44:53] <energizer> for example f=abs
[01:46:17] *** Joins: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108)
[01:47:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:48:07] *** Joins: wyclif (~wyclif@user/wyclif)
[01:48:50] *** Joins: semeion (~semeion@user/semeion)
[01:48:50] *** mnemonic is now known as Guest5568
[01:48:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:50:19] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:50:27] <SnoopJ> Celelibi, indexable ones are sometimes called Sequences, FWIW
[01:50:59] *** Quits: magla (~gelignite@55d44e8b.access.ecotel.net) (Quit: Stay safe!)
[01:51:09] <sgt_chuckles> how can I specify test descriptions in pytest and have them show in the test output?
[01:51:42] <sgt_chuckles> also, I'd like pytest to display the name of a group of tests
[01:52:05] *** Quits: Guest5568 (~semeion@user/semeion) (Ping timeout: 260 seconds)
[01:52:34] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:52:47] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[01:53:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:53:24] <energizer> sgt_chuckles: test description you can (and should) do with a docstring. to make it display on failure, there might be a plugin or you can make your own
[01:53:39] *** Joins: wyclif (~wyclif@user/wyclif)
[01:53:50] <sgt_chuckles> okay, good to know i can do that
[01:53:52] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:55:01] <SnoopJ> the --verbose flag is also useful, you get output like this: https://bpa.st/EXAA
[01:57:58] <sgt_chuckles> don't need all of that, just the descriptions. but they're not showing
[01:58:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:58:54] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:59:09] *** Joins: wyclif (~wyclif@user/wyclif)
[01:59:30] <energizer> sgt_chuckles: they dont show. maybe they should, especially under -v. you could file an issue to discuss it with them
[01:59:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[02:00:08] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[02:00:12] <sgt_chuckles> i'm using pytest -rA
[02:00:48] <SnoopJ> --tb=no will suppress the tracebacks and give you the fully qualified names of each test along with --verbose, but not sure about docstrings, never seen a feature like that
[02:01:08] <energizer> pytest is pretty hackable, its probably a quick change if you want to add it
[02:01:15] <SnoopJ> probably you could do this with a plugin, yea
[02:01:29] <SnoopJ> inspect.getdoc() on the test object
[02:02:33] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[02:03:41] <energizer> might be pytest_runtest_makereport
[02:03:59] <Klinda> why can't I define dict = {{}}
[02:04:00] <Klinda> ?
[02:04:12] <energizer> Klinda: {x} is a set
[02:04:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:04:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[02:04:19] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[02:04:36] <Klinda> how to define a dictioanry of dictionary then
[02:04:40] *** Joins: wyclif (~wyclif@user/wyclif)
[02:04:46] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[02:04:47] <KirkMcDonald> Klinda: A dict maps keys to values.
[02:04:59] <energizer> Klinda: {99:{}}
[02:05:04] <KirkMcDonald> Klinda: You can use a dict as a value in another dict, but you still need a key.
[02:05:44] *** Joins: Haxxa (~Haxxa@122.199.46.62)
[02:05:57] <KirkMcDonald> And you can't use a dict as a key, because dicts are mutable.
[02:06:01] *** Joins: fikran (~fikran@user/fikran)
[02:07:18] *** Joins: rundown (~eb0t@2a02:c7d:f20e:ed00:216:44ff:fe6a:c888)
[02:07:35] <SnoopJ> the stuff in a set has to be "hashable" (i.e. you have to be able to call hash() on it)
[02:07:45] <Klinda> will this work? https://dpaste.org/eFRg
[02:08:29] *** Quits: agireud (~agireud@136.49.88.21) (Ping timeout: 268 seconds)
[02:08:58] *** Joins: agireud (~agireud@136.49.88.21)
[02:09:11] <Klinda> no gh
[02:09:22] <KirkMcDonald> Klinda: I don't think we have enough context to answer that, though there are a couple of things which seem questionable about it.
[02:09:23] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 264 seconds)
[02:09:27] <Hash> Yes it does
[02:09:44] <Hash> If you call Hash, good things will happen. Good things.
[02:09:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:09:47] *** Joins: blei (~blei@209.201.38.106)
[02:10:12] *** Joins: wyclif (~wyclif@user/wyclif)
[02:10:15] <SnoopJ> energizer, that's a pytest hook?
[02:10:21] <energizer> SnoopJ: yeah
[02:10:21] <blei> i am looking for query languages for large arbitrary dicts/lists that are pure python such as https://github.com/sixty-north/asq
[02:10:21] *** Quits: Haxxa (~Haxxa@122.199.46.62) (Read error: Connection reset by peer)
[02:10:30] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:10:35] <SnoopJ> energizer, seems about right, since those can include the source
[02:10:52] <Klinda> I just want {idex_m:{indexq:value}}
[02:10:58] <mat001_> quick check: is empty dict = {} same as dict = None?
[02:11:03] *** Joins: zebrag (~chris@user/zebrag)
[02:11:06] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[02:11:09] <ChrisWarrick> mat001_: no
[02:11:53] <mat001_> ChrisWarrick: thx, debugging smth, thx for confirmation
[02:11:55] <KirkMcDonald> Klinda: Just to clarify: What are `D` and `scores`? If D is a dict, then it's weird to call enumerate() on it.
[02:12:16] <KirkMcDonald> Not necessarily *wrong*, but it's unusual.
[02:12:17] <energizer> blei: glom and lenses are the main ones i can think of, and lenses seems more academic to me
[02:12:55] <SnoopJ> blei, the glom library is a powerful (but complex) way to specify queries over dicts, and is pure Python I believe
[02:13:27] <SnoopJ> agree that lenses is more academic and when last I'd looked seemed like it was missing some features? but it's been quite a while
[02:13:34] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 252 seconds)
[02:14:06] <KirkMcDonald> Klinda: But, as written, you can phrase that as: {i: dict(enumerate(scores)) for i, scores in enumerate(D)}
[02:15:23] *** Joins: MercilessDeth (~brad@136.49.61.2)
[02:15:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:15:44] *** Joins: wyclif (~wyclif@user/wyclif)
[02:15:51] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:16:08] *** Quits: douglascorrea_io (~douglasco@200.146.85.128.static.gvt.net.br) (Quit: Leaving)
[02:17:34] *** Joins: Player001 (~Player001@user/player001)
[02:18:07] <blei> i was able to import lenses into brython (but not glom). there is something wrong with the lenses API, probably that it was inspired by Haskell and so feels awkward
[02:18:38] <blei> it kind of looks like they never learned a lisp
[02:19:18] *** Joins: elkclone (~elkclone@user/elkclone)
[02:19:21] <blei> if you learned haskell "lenses" but didn't know a lisp or bash pipelines, i bet they'd seem more like magic
[02:19:44] *** Joins: Echoz (~chris@user/echoz)
[02:20:23] *** Parts: drew (~drew@user/drew) ()
[02:20:23] <blei> that said i am looking for a nice API, so far I have available to me dpath (modelled after XPath, kind of clunky), asq and lenses
[02:20:27] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:3c81:12c5:ede2:fb22)
[02:20:39] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 265 seconds)
[02:20:40] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:20:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:21:15] *** Joins: wyclif (~wyclif@user/wyclif)
[02:21:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:22:05] <energizer> blei: you should be able to import glom
[02:22:08] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:22:22] <blei> it breaks brython unfortunately. i did file a bug report though
[02:22:49] <SnoopJ> breaks it how?
[02:22:57] <SnoopJ> oh, brython
[02:23:02] <energizer> it's pure python
[02:23:12] * SnoopJ misread as bpython
[02:23:33] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[02:23:52] <blei> brython is a python->js transpiler hand written in js
[02:23:54] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:3bcf:5af0:4ba9:f7db) (Ping timeout: 268 seconds)
[02:24:16] <SnoopJ> I'm familiar, I just was responding to the wrong question
[02:24:33] <blei> (i was indicating as to why glom doesn't work; brython is an imperfect implementation)
[02:25:15] <SnoopJ> it's a bug in brython, or glom?
[02:25:44] <blei> it's a bug in brython
[02:25:52] <SnoopJ> gotcha, nice
[02:26:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:26:34] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[02:26:46] *** Joins: wyclif (~wyclif@user/wyclif)
[02:26:48] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[02:26:54] *** Joins: Haxxa (~Haxxa@122.199.46.62)
[02:26:59] <blei> i was thinking of a sql interface to a pure python document-oriented database that allowed you to do cross-joins etc
[02:27:11] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 245 seconds)
[02:27:32] <ChrisWarrick> why not just use postgres?
[02:27:36] <SnoopJ> I'd invert the problem and look for what databases brython supports, and branch out from there
[02:27:46] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[02:27:49] <SnoopJ> given that brython is still as idiosyncratic as it is
[02:28:03] <blei> brython doesn't support anything except python itself, plus some browser features; nothing supports brython
[02:28:03] <SnoopJ> (but RustPython->wasm seems to be coming along nicely, so that's cool?)
[02:28:24] <blei> i can use rust->wasm from brython btw
[02:28:41] <SnoopJ> blei, yes, that's rather my point. brython is by far the constraint because so much software breaks on it. Starting with a search space {stuff that does not fail in brython} is a good search strategy
[02:28:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:28:56] *** Joins: wladimir (~doforlove@user/doforlove33)
[02:28:57] <blei> there's no list
[02:29:02] *** wladimir is now known as ethrl
[02:29:19] <SnoopJ> I suppose that does make what I described absolutely impossible to do
[02:29:21] *** Joins: Nspace (~Nspace@user/nspace)
[02:29:44] <SnoopJ> sorry, that was uncalled-for. I don't know the answer to your question, good luck.
[02:30:46] <energizer> blei: does brython support the standard libray sqlite3?
[02:30:48] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.0.1)
[02:30:49] <energizer> library
[02:31:10] *** Joins: Echoz (~chris@user/echoz)
[02:31:14] <blei> there is a 'package manager' for brython now called brip that allows me to quickly check if a package works; small-intermediate size packages work, sometimes larger packages work. the entire dependency chain has to be pure python
[02:31:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:31:44] <energizer> there are some pure-python pandas alternatives
[02:31:54] * SnoopJ would be surprised if it supported it since _sqlite is a thing
[02:32:17] *** Joins: wyclif (~wyclif@user/wyclif)
[02:33:16] <SnoopJ> although maybe you could swap out the libsqlite parts?
[02:33:22] *** Quits: gitly2 (~gitly@85.255.233.120) (Ping timeout: 265 seconds)
[02:33:51] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[02:34:10] <SnoopJ> if brython is doing rust and wasm these days, I guess I'm out of touch with brython.
[02:34:12] <energizer> also there's xml in the stdlib. brython mightve put in some effort to make the stdlib work
[02:34:32] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:34:36] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:34:56] <blei> this excellent RealPython tutorial shows how to use use rust->wasm in brython code https://realpython.com/brython-python-in-browser/
[02:35:13] *** Joins: gitly2 (~gitly@148.252.128.84)
[02:35:44] <blei> i should actually do it so i can search through rust packages for what i need
[02:35:44] <energizer> realpython is like the only good python tutorial website
[02:36:10] <SnoopJ> yea, RealPython is fantastic
[02:36:19] <SnoopJ> I really liked the CPython book Anthony Shaw did with them
[02:41:33] *** Quits: tbcr (~brclark@user/tbcr) (Quit: WeeChat 2.8)
[02:42:22] *** Joins: drew (~drew@user/drew)
[02:42:36] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[02:42:36] *** Quits: rundown (~eb0t@2a02:c7d:f20e:ed00:216:44ff:fe6a:c888) (Ping timeout: 245 seconds)
[02:43:13] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[02:43:16] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[02:44:31] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:46:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[02:46:44] <blei> that RustPython is slooooooow
[02:47:00] *** Joins: Skyfire (~pyon@user/pyon)
[02:47:29] *** Quits: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108) (Remote host closed the connection)
[02:47:39] *** Quits: MrSpooky (Ben@mrbenc.net) (Remote host closed the connection)
[02:48:20] <mefistofeles> blei: yeah, optimization is in their roadmap, but they first have bigger things to attend
[02:51:29] *** Joins: y1n (~y1n@178.165.199.156.wireless.dyn.drei.com)
[02:52:31] *** Quits: Akuli (~Akuli@82-203-166-33.bb.dnainternet.fi) (Quit: Leaving)
[02:53:41] *** Joins: MrC (Ben@mrbenc.net)
[02:54:16] *** Quits: Haxxa (~Haxxa@122.199.46.62) (Ping timeout: 252 seconds)
[02:54:22] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:54:29] *** Quits: hudo__ (~hudo@62.68.20.210) (Ping timeout: 265 seconds)
[02:54:46] <blei> brython is doing more work with the python AST, if they reach 100% compliance, it will be an incredible feat to beat it in speed
[02:56:49] <mefistofeles> yeah, but brython has been in the game for more years. It is good that there are alternatives
[02:58:32] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667)
[02:59:29] *** Joins: rock (~rock@user/rock)
[03:00:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:02:06] <mat001_> I called mock_calls on my mock object and I get one element in the list list of calls containing three objects. The type of this element is <class 'mock.mock._Call'>. How can I get values of those three objects in the calls list?
[03:02:41] *** Joins: Wulf (~Wulf@user/wulf)
[03:02:59] <mat001_> I'd get this: [call(<pbject1>, <object2>, <object3>)]
[03:03:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[03:03:35] <nedbat> mat001_: i think you want mock_calls[0].args
[03:04:13] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[03:05:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[03:05:46] *** vd24 is now known as vd
[03:06:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:07:02] *** Joins: rundown (~eb0t@90.197.81.245)
[03:09:19] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[03:09:27] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[03:09:41] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc9e:1427:a97:e25a) (Ping timeout: 245 seconds)
[03:10:46] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[03:11:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[03:11:30] *** Joins: freeman_h (~freeman_h@94.5.86.162)
[03:11:59] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[03:12:00] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[03:12:25] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 252 seconds)
[03:12:27] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:14:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:15:16] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[03:15:39] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9)
[03:17:53] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[03:18:47] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:18:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:23:23] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[03:25:41] <mat001_> nedbat: thx that helped. .args didn't quite worked. Had to tuple unpack into three args per docs "calls as tuples": https://docs.python.org/3/library/unittest.mock.html#calls-as-tuples
[03:25:43] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:28:26] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[03:28:57] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[03:30:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[03:30:45] <nedbat> mat001_: ok, sorry about that
[03:31:18] <mat001_> no probs, your comment made me look deeper
[03:33:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667) (Quit: Client closed)
[03:35:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:37:36] *** Quits: flokuehn (~flokuehn@muedsl-82-207-236-130.citykom.de) (Ping timeout: 245 seconds)
[03:39:31] *** Joins: flokuehn (~flokuehn@i5E86B311.versanet.de)
[03:40:09] *** Quits: rock (~rock@user/rock) (Ping timeout: 276 seconds)
[03:40:27] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Read error: Connection reset by peer)
[03:40:45] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:41:04] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 252 seconds)
[03:43:01] *** Joins: pycurious (~Adium@user/pycurious)
[03:43:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:45:25] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Remote host closed the connection)
[03:45:44] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[03:45:47] *** Quits: ethrl (~doforlove@user/doforlove33) (Quit: WeeChat 3.3)
[03:48:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:53:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[03:54:20] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:54:30] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:55:04] *** Joins: jazzy (~jaziz@user/jaziz)
[03:55:52] *** Quits: mat001_ (~mat001@213.143.69.121) (Remote host closed the connection)
[03:58:12] *** Joins: cheater (~Username@user/cheater)
[03:58:28] *** Joins: Fiji (~Fiji@user/fiji)
[04:01:17] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[04:01:48] *** Joins: PJBoy (~PJBoy@user/pjboy)
[04:03:09] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[04:03:18] *** Joins: moose (~moose@user/moose)
[04:03:33] *** Quits: obx (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[04:04:07] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[04:05:16] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[04:05:35] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:06:30] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:06:49] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:07:43] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:08:29] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:12:18] *** Quits: death916 (~death916@user/death916) (Ping timeout: 265 seconds)
[04:12:26] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[04:13:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[04:15:22] *** Joins: fikran (~fikran@user/fikran)
[04:16:46] *** Quits: kharloss (~kharloss@82.77.183.170) (Ping timeout: 252 seconds)
[04:17:25] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:18:00] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[04:18:44] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[04:18:59] *** Quits: y1n (~y1n@178.165.199.156.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[04:20:31] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[04:22:47] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:27:08] *** Joins: diamondbond (~diamondbo@175.157.91.8)
[04:28:51] *** Quits: diamondbond (~diamondbo@175.157.91.8) (Client Quit)
[04:29:18] *** Joins: iryd (~jamesm@c-174-56-254-152.hsd1.ga.comcast.net)
[04:29:29] *** Parts: iryd (~jamesm@c-174-56-254-152.hsd1.ga.comcast.net) ()
[04:29:36] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:30:01] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:30:08] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (WeeChat 3.2)
[04:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:41] *** Joins: diamondbond (~diamondbo@175.157.91.8)
[04:32:17] *** Joins: y1n (~y1n@91.141.57.250.wireless.dyn.drei.com)
[04:32:44] *** Quits: subopt (~subopt@2603-8081-2302-459a-182d-4560-ba55-797c.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:33:23] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 264 seconds)
[04:34:06] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[04:35:08] *** Joins: vlm (~vlm@user/vlm)
[04:37:57] *** Joins: redrum88 (~redrum88@user/redrum88)
[04:39:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[04:40:02] *** Quits: diamondbond (~diamondbo@175.157.91.8) (Quit: Leaving)
[04:40:08] <vfbsilva> guys my machine started to report: Blocking request from unknown origin error on my jupyter-notebooks I did not modify any configs what can I do?
[04:40:12] *** Joins: wyclif (~wyclif@user/wyclif)
[04:43:13] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 252 seconds)
[04:45:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[04:45:24] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667)
[04:45:40] *** Joins: wyclif (~wyclif@user/wyclif)
[04:45:59] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 264 seconds)
[04:46:14] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[04:46:19] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:46:42] <stewie925> hi guys, is this code fragment valid?  https://bpa.st/V3TQ.
[04:47:21] <stewie925> the `MissingArgumentError` function doesn't have anything but the pass statement, so it doesn't do anything, right?
[04:47:24] <SnoopJ> stewie925, Line 1 is missing a colon
[04:47:38] <SnoopJ> and is probably intended to be a class, not a function...
[04:48:18] <stewie925> oh I missed the colon
[04:48:24] <stewie925> oh dang youre right
[04:48:43] <stewie925> yes so its supposed to be a class
[04:49:07] <SnoopJ> that's usually how you make a new Exception class, yep :)
[04:49:56] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[04:50:04] *** Joins: diamondbond (~diamondbo@175.157.91.8)
[04:50:14] <stewie925> so basically its a long-winded way of saying "raise Exception"?
[04:50:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[04:50:48] *** Quits: diamondbond (~diamondbo@175.157.91.8) (Read error: Connection reset by peer)
[04:50:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[04:50:52] <stewie925> and I wonder what type of exception message it will push
[04:51:09] *** Joins: wyclif (~wyclif@user/wyclif)
[04:51:47] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:52:23] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[04:52:29] <stewie925> SnoopJ: thanks btw :)
[04:53:18] <stewie925> I just googled the answer
[04:54:42] *** Parts: bambams (~bambams@user/bambams) ()
[04:54:43] *** Joins: xiongxin (~quassel@113.116.224.79)
[04:54:55] *** Joins: aknot (~aknot@2603-900a-1503-17bb-f1f8-e73f-21a6-c63e.inf6.spectrum.com)
[04:56:12] *** Joins: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net)
[04:59:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:00:08] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[05:02:00] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:02:11] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 264 seconds)
[05:02:25] *** Joins: brabrax (~brabrax@user/brabrax)
[05:03:32] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 265 seconds)
[05:04:37] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[05:04:55] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:05:05] *** Joins: mrproper (sid382572@uxbridge.irccloud.com)
[05:05:39] <mrproper> I have a dictionary and when I try to print `rule['value']['id']` it works but when I do `rule['value'].pop('id')` I get a `KeyError` on `id`?
[05:05:42] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[05:07:59] <SnoopJ> stewie925, no, because when you raise a subclass of Exception, someone can catch *just* that exception, not *all* exceptions. `raise Exception` is pretty much an antipattern (I usually use `RuntimeError` as my one-size-fits-all exception)
[05:08:00] <Compu-Celebi> What is the value of `rule["value"]`?
[05:08:15] <mrproper> Compu-Celebi: https://bpa.st/WGQA
[05:08:32] <mrproper> That's the whole data structure. So that's rule
[05:08:39] <SnoopJ> mrproper, these are both dictionaries?
[05:08:56] <SnoopJ> i.e. `type(rule)` and `type(rule['value'])` are both `dict`?
[05:09:04] <mrproper> Lets see.
[05:09:44] <SnoopJ> It should work if they're dictionaries, but you might have objects that have a repr like dicts, but are not dicts.
[05:10:14] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Client Quit)
[05:10:26] <mrproper> I'm getting an interesting result. Lets see.
[05:10:37] <mrproper> `type(rule)` is giving...
[05:10:38] <Compu-Celebi> If that were indeed the value of `rule`, `rule["value"].pop("id")` should evaluate to `"meraki:layer7/application/33"` and invoking the method should not trigger an exception.
[05:10:55] <mrproper> https://bpa.st/24HQ
[05:10:55] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[05:11:11] <mrproper> `The error was: TypeError: Value of unknown type: <class 'type'>, <class 'dict'>`
[05:11:15] <SnoopJ> oh dear.
[05:11:23] <SnoopJ> mrproper, is that the complete error report? It helps to see the complete context
[05:11:34] <mrproper> https://bpa.st/C3AQ
[05:11:39] <mrproper> That's the full traceback.
[05:12:17] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667) (Ping timeout: 256 seconds)
[05:12:58] *** Joins: reset (~reset@user/reset)
[05:13:03] <mrproper> I'm getting this data from an API response. I'm wondering if it's not properly deserializing it.
[05:13:27] <SnoopJ> "module_stderr": is a serialized string of the traceback, yea
[05:15:55] *** Joins: tracey (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[05:17:02] <SnoopJ> mrproper, it looks like this code is running in a sandbox of some sort, possibly? The traceback is talking about runpy. Maybe it's messed around with the builtins, `type` is usually available anywhere.
[05:17:19] <mrproper> It's an Ansible module, so there's all sorts of stuff wrapped around it
[05:17:29] <mrproper> I think I fixed the output error.
[05:17:35] <SnoopJ> if it's doing that it'll be near line 82 of /root/.ansible/tmp/ansible-tmp-1634348420.6298468-101-12943946881801/AnsiballZ_meraki_mx_l7_firewall.py
[05:17:42] *** Joins: kristine86 (~kristine8@2603-7080-af03-588a-6f0e-b475-0851-0e1b.res6.spectrum.com)
[05:18:03] <mrproper> Yup. Fixed that, now I need to verify the types.
[05:18:03] <SnoopJ> mrproper, seeing the complete traceback for the original KeyError might help, too
[05:18:08] <SnoopJ> ah, okay
[05:18:26] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[05:18:26] <SnoopJ> yea give that a go, I have a hunch about it, but failing that, let's see the originating tb
[05:18:39] <kristine86> how do you work with loggers in python? If I will be logging in every file of a project, do I include import logger in every file or is there a clever way to go about it?
[05:18:42] <mrproper> FWIW, I had to do a `str(type(whatever))` and not just `type()` when outputting.
[05:19:13] <aphysically> kristine86: what I do is logger = logging.getLogger(__name__) in every file and log to the logger, then you can attach a handler to the root logger in your app
[05:20:24] <nedbat> kristine86: you import logger in ever y file, then do what aphysically said
[05:20:29] <mrproper> SnoopJ: FWIW, the type of `rule['value']` is  dict
[05:20:33] <nedbat> kristine86: sorry, import logging
[05:20:54] <kristine86> is there any example/documentation for that? I'm using structlog, and I don't completely understand what you mean aphysically
[05:21:29] <SnoopJ> mrproper, I'm not sure why it's failing, then. Can we see the original traceback in the same output form (i.e. complete)?
[05:21:32] <aphysically> hmm, there's some recipes in the logging module but I don't think they really correspond exactly to the normal behavior of logger = logging.getLogger(__name__); what I did was I looked around open source projects to suss out what they were doing
[05:21:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667)
[05:21:45] <kristine86> At the moment, I do >> import structlog and log = structlog.get_logger(). Then log.info(".....") in every file.
[05:21:50] <mrproper> SnoopJ: https://bpa.st/SZXA
[05:22:03] <nedbat> kristine86: ok, is that working?
[05:22:07] <aphysically> unfortunately I'm not familiar with structlog, only logging
[05:22:11] <SnoopJ> kristine86, if you want to do fine-grained configuration of those loggers, you can also use logging's configuration facilities.
[05:22:33] *** Joins: extropiator (~extropiat@user/extropiator)
[05:22:53] *** Quits: vfbsilva (~manjaro-u@179.176.188.199) (Quit: Konversation terminated!)
[05:23:00] <kristine86> nedbat it's working perfectly fine, I just wanted to make sure in case I need to change things later then I don't have to change in every file.
[05:23:37] <kristine86> SnoopJ that's a good suggestion. Can I create a global structlog configuration rather than doing it for every file?
[05:23:58] <kristine86> I want to configure the same structlog for the whole project.
[05:24:48] <SnoopJ> kristine86, yep, https://docs.python.org/3/library/logging.config.html#logging.config.fileConfig
[05:24:58] <kristine86> Maybe I can create my own logger that extends structlog then configure in there. And import my custom log in every file?
[05:25:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:25:55] <nedbat> kristine86: my quick read of the docs says that you can configure once in your app main
[05:26:01] <nedbat> kristine86: https://www.structlog.org/en/stable/configuration.html
[05:26:10] *** Quits: whatsupdoc (~whatsupdo@148.64.20.69) (Quit: Client closed)
[05:26:45] <kristine86> SnoopJ thanks, good find. (y)  I will look into it. That's a good idea.
[05:27:28] <nedbat> kristine86: i don't think structlog uses the logging configuration
[05:27:51] <mrproper> SnoopJ: I'm heading out for the night but I'm going to look into this a bit more tomorrow. Thank you for your time!
[05:27:59] <kristine86> Is there also a way to only show certain level of logs, for example how to only show non-debugging logs while in production mode. And show debug logs when in debugging mode. How to let structlog know these modes?
[05:28:07] <SnoopJ> mrproper, it looks like the KeyError is coming from rename_id_to_appid() rather than user code? Unless I'm misunderstanding. Does ansible do some translation or something? It seems like that code would fail if the key is already named "appId" or isn't present at all.
[05:28:17] *** Joins: The_Jag_ (~The_Jag@host-80-180-125-109.retail.telecomitalia.it)
[05:28:28] <nedbat> kristine86: a typical way is to use an environment variable
[05:28:32] <mrproper> SnoopJ: rename_id_to_appid() is a function I created. And that's indeed where it's coming from.
[05:29:04] <mrproper> SnoopJ: Basically, I need to go through the data structure and if there's a key of `id` I rename it to `appId` by poping from the `id` onto the `appId` key.
[05:29:21] <SnoopJ> huh, okay
[05:29:57] <kristine86> nedbat ok I'll look into it
[05:30:02] <SnoopJ> well, this operation should be valid on a dict that has this key, so I'm not really sure what's going on here. You might try calling `list(thedict.keys())` next to confirm what keys are there at runtime
[05:30:20] <SnoopJ> or perhaps str(that)
[05:30:32] <SnoopJ> since it sounds like you have some idiosyncrasies with the form of this evaluation to deal with, heh.
[05:30:43] *** Quits: driib (~driib@185.195.233.168) (Read error: Connection reset by peer)
[05:30:59] *** Quits: The_Jag (~The_Jag@host-79-51-167-242.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[05:31:02] *** Joins: driib (~driib@185.195.233.168)
[05:31:11] <mrproper> SnoopJ: I do. It's all a little quirky :/
[05:31:24] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[05:31:30] <SnoopJ> quirkops :)
[05:31:35] <mrproper> Ha I like that.
[05:31:42] * SnoopJ has two CI wrangling tickets this sprint
[05:31:58] <mrproper> SnoopJ: I can go into details if you're interested. And honestly, I just thought of potentially a better way to do this that would avoid rename altogether.
[05:32:13] <mrproper> SnoopJ: Output from `list(thedict.keys())` gives me `["id"]`
[05:32:28] <SnoopJ> ...bizarre?
[05:32:37] <mrproper> Right? It seems like it should work.
[05:32:49] <SnoopJ> mrproper, and these are absolutely the dicts that are failing, right? Or is this a sample datum you're checking among many that will be seen at runtime?
[05:33:14] <mrproper> It's a sample as part of my test suite.
[05:33:31] <mrproper> I strongly believe these are the dicts that are failing. Do you think it's potentially somewhere else?
[05:33:55] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:33:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[05:34:02] *** Joins: jazzy2 (~jaziz@user/jaziz)
[05:34:06] <SnoopJ> I dunno, it's hard to tell what I've missed out here, but certainly it's something. When stuck with that, I try to remember that "Most bugs are a result of the execution state not being exactly what you think it is."
[05:34:20] <mrproper> That's a good lesson.
[05:34:25] <SnoopJ> John Carmack's a smart cookie
[05:34:58] *** Quits: freeman_h (~freeman_h@94.5.86.162) (Read error: Connection reset by peer)
[05:35:01] <SnoopJ> So yea, when I get here I usually start doing some sanity checks of that sort. 'What do I believe about this program that I have *not* verified? What among those beliefs could plausibly cause this if I were wrong?'
[05:35:11] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Quit: leaving)
[05:35:27] <mrproper> SnoopJ: https://github.com/CiscoDevNet/ansible-meraki/blob/5a1ed7e58a8bc472165a28adc454fd2c30d81bab/plugins/modules/meraki_mx_l7_firewall.py#L330 is the line of code.
[05:36:22] <SnoopJ> mrproper, when all else fails, I like to use https://pypi.org/project/q/ to get directly into the failing code and do some "machete debugging"
[05:36:34] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Ping timeout: 252 seconds)
[05:36:34] *** Quits: ericoc (sid179921@id-179921.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: flagrama (sid145621@id-145621.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: Gaurhoth (sid75085@id-75085.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[05:36:43] <SnoopJ> might be helpful here in getting the other stuff out of the way, if applicable
[05:36:58] <mrproper> Is that better than calling gdb?
[05:37:07] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[05:37:07] *** Quits: circuitbone (sid355934@user/circuitbone) (Ping timeout: 252 seconds)
[05:37:07] *** Quits: jposer (sid132110@id-132110.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[05:37:13] <SnoopJ> It's a different approach, I wouldn't say either is "better"
[05:37:13] *** Quits: josh_h (sid301834@id-301834.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[05:37:13] *** Quits: rburton (rburton@user/rburton) (Ping timeout: 252 seconds)
[05:37:13] *** Quits: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:37:19] *** Quits: dez (uid92154@user/dez) (Ping timeout: 268 seconds)
[05:37:19] *** Quits: briian (uid321220@id-321220.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[05:37:32] *** Quits: lk (sid504574@2a03:5180:f:3::7:b2fe) (Ping timeout: 268 seconds)
[05:37:35] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[05:37:36] *** Quits: han-` (sid293063@id-293063.helmsley.irccloud.com) (Ping timeout: 245 seconds)
[05:37:53] <SnoopJ> I usually use a Python debugger (I like pudb) or just plain ol' prints (or q), and gdb is what I bust out when I'm doing extension modules or really need to see the state of the whole runtime
[05:37:54] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[05:38:09] *** Quits: graingert (sid128301@2a03:5180:f::1:f52d) (Ping timeout: 268 seconds)
[05:38:09] <SnoopJ> I have needed to do the latter in work stuff basically never, but it's a fun way to learn.
[05:38:13] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 252 seconds)
[05:38:13] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:38:13] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:38:13] *** Quits: EWDurbin (sid38710@id-38710.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:38:13] *** Quits: drmessano (drmessano@user/drmessano) (Ping timeout: 252 seconds)
[05:38:13] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 252 seconds)
[05:38:19] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[05:38:19] *** Quits: WhyNotHugo (sid269118@id-269118.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:38:19] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 252 seconds)
[05:38:20] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:38:25] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[05:38:26] *** Quits: crazysim (sid86009@id-86009.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[05:38:29] *** Quits: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[05:38:33] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 268 seconds)
[05:38:46] *** Quits: nem (sid113421@user/nem) (Ping timeout: 268 seconds)
[05:38:46] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[05:38:57] <mrproper> Ansible doesn't seem happy with pdb. Wondering if they suppress it somehow, need to ask. I am running this in a container so adding q isn't 100% trivial if it's not already installed.
[05:38:58] *** Quits: stepnivlk (uid522743@id-522743.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[05:39:03] *** Joins: WhyNotHugo (sid269118@hampstead.irccloud.com)
[05:39:06] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[05:39:08] *** Joins: nem (sid113421@user/nem)
[05:39:08] *** Joins: graingert (sid128301@tinside.irccloud.com)
[05:39:11] *** Joins: EWDurbin (sid38710@tinside.irccloud.com)
[05:39:12] *** Joins: fweht (uid404746@lymington.irccloud.com)
[05:39:13] *** Joins: han-` (sid293063@helmsley.irccloud.com)
[05:39:14] *** Joins: briian (uid321220@uxbridge.irccloud.com)
[05:39:14] *** Joins: Sheilong (uid293653@ilkley.irccloud.com)
[05:39:14] *** Joins: rburton (rburton@user/rburton)
[05:39:15] *** Joins: Gaurhoth (sid75085@ilkley.irccloud.com)
[05:39:16] *** Joins: lk (sid504574@ilkley.irccloud.com)
[05:39:17] *** Joins: josh_h (sid301834@helmsley.irccloud.com)
[05:39:21] *** Joins: circuitbone (sid355934@user/circuitbone)
[05:39:22] *** Joins: bjs (sid190364@user/bjs)
[05:39:23] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[05:39:34] <SnoopJ> yea, I wondered if that might not be the case. Would it be inappropriate to edit it in-container, or to install the modified lib into a separate sanity-check container?
[05:39:46] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[05:39:55] <mrproper> I've been known to be inappropriate ;)
[05:40:13] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[05:40:15] *** Joins: crazysim (sid86009@hampstead.irccloud.com)
[05:40:18] *** Joins: pjlsergeant (sid143467@hampstead.irccloud.com)
[05:40:20] *** Joins: flagrama (sid145621@hampstead.irccloud.com)
[05:40:23] *** Joins: drmessano (drmessano@user/drmessano)
[05:40:25] *** Joins: Evolver (sid32215@user/evolver)
[05:40:26] <mrproper> I'm going to ask the Ansible developers if there is a recommended way to do this. And if they say "Not really" I'll figuer out how to call my own container and add q to that one.
[05:40:26] *** Joins: JayDoubleu (sid339529@hampstead.irccloud.com)
[05:40:30] *** Joins: Knyght (sid365271@helmsley.irccloud.com)
[05:40:30] *** Joins: AhmedAmerican (sid470527@ilkley.irccloud.com)
[05:40:31] *** Joins: dez (uid92154@user/dez)
[05:40:39] *** Joins: Pent (sid313808@lymington.irccloud.com)
[05:40:42] *** Joins: ericoc (sid179921@uxbridge.irccloud.com)
[05:40:43] *** Joins: matthewwilkes (sid500242@uxbridge.irccloud.com)
[05:40:46] *** Joins: jposer (sid132110@uxbridge.irccloud.com)
[05:40:58] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[05:41:07] <kristine86> Just learned about how environment vars can be stored and imported from .env. That's helpful. :]
[05:41:32] <grym> direnv and friends are super handy
[05:41:45] *** Joins: eichin (sid27120@tinside.irccloud.com)
[05:42:04] <SnoopJ> direnv is great, yea
[05:42:12] *** Joins: Memory (sid459764@user/memory)
[05:42:45] <mrproper> SnoopJ: Thank you so much for your help tonight.
[05:43:17] <SnoopJ> mrproper, I wish I could have been helpful enough to help you solve the problem, but hopefully you've got some fresh perspective
[05:44:57] <mrproper> SnoopJ: For sure. And if nothing else you confirmed that I wasn't missing something really really obvious.
[05:45:31] <SnoopJ> Yea, what you're doing looks sane given the priors and should be okay, so I turn and question the priors :)
[05:46:26] <mrproper> That's what I'm thinking I need to do.
[05:46:29] <stewie925> dotenv is nice too
[05:46:54] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[05:47:18] <mrproper> SnoopJ: Wait I found somehting. Check this out!
[05:47:24] <ComputerTech> https://bpa.st/BIFA
[05:47:28] <ComputerTech> what would be the closest to switching instead of multiple "if"'s ?
[05:47:57] <mrproper> If I wrap that in a try/except it is showing the expression has already been correctly executed.  https://bpa.st/N4QQ
[05:48:12] <nedbat> ComputerTech: those if's are probably the best thing
[05:48:22] <ComputerTech> okay
[05:48:44] <ComputerTech> what about elif, would in that situation, the if and elif do the same?
[05:49:15] <nedbat> ComputerTech: well, is elif the same thing there?
[05:49:34] <ComputerTech> i suppose
[05:49:48] <nedbat> ComputerTech: can you have PING in lline[0] and also 001 in lline[1]?
[05:50:03] <mrproper> Anyways I'm tired, heading to bed. Thank you again.
[05:50:14] <ComputerTech> Well no, Ping isn't on lline[1]
[05:50:58] <nedbat> ComputerTech: sounds like you want elif.  because you could get ["PING", "001"], and you don't want to do both actions
[05:51:12] <ComputerTech> okay
[05:51:23] *** Quits: rundown (~eb0t@90.197.81.245) (Ping timeout: 264 seconds)
[05:51:33] <SnoopJ> mrproper, aha! Perhaps it has been applied twice, somewhere? It would be helpful to know when the function is called. `traceback.format_stack()` (or other stuff in `traceback`) is useful for this
[05:51:50] <SnoopJ> or a dumber version: printing where it's called, heh.
[05:51:57] *** Quits: extropiator (~extropiat@user/extropiator) (Ping timeout: 256 seconds)
[05:52:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667) (Quit: Client closed)
[05:53:00] *** Joins: rundown (~eb0t@90.194.34.18)
[05:55:55] *** Joins: stockholm (~Andreas@p200300d2c72b7e0034e0e778f130be9a.dip0.t-ipconnect.de)
[05:57:12] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[05:57:39] <SnoopJ> mrproper, the term "machete debugging" that I used comes from an excellent talk about this kind of strategy, by the way: https://www.youtube.com/watch?v=bAcfPzxB3dk
[05:57:50] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:01:56] *** Joins: cloudbender49 (~cloudbend@user/cloudbender)
[06:02:28] *** Joins: shawwwn (uid6132@helmsley.irccloud.com)
[06:02:55] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[06:03:11] *** Joins: cloudbender10 (~cloudbend@user/cloudbender)
[06:03:39] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:05:11] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 264 seconds)
[06:06:05] *** Joins: frost (~frost@59.71.244.189)
[06:06:59] *** Quits: cloudbender49 (~cloudbend@user/cloudbender) (Ping timeout: 264 seconds)
[06:10:02] *** Quits: stockholm (~Andreas@p200300d2c72b7e0034e0e778f130be9a.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[06:12:12] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:12:47] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:12:59] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 264 seconds)
[06:13:17] *** Joins: gegenschein (~james@ec2-52-91-126-104.compute-1.amazonaws.com)
[06:14:18] *** Quits: Togra (~Togra@user/togra) (Quit: I am in the upside down)
[06:14:21] *** Quits: mistery (~mistery@96.59.174.9) (Remote host closed the connection)
[06:15:02] *** Joins: Togra (~Togra@user/togra)
[06:15:17] <enrh> In classes, can I safely do like so?   files: list[str] = []   I know the risks of doing   def myfunc(files=[])   and just wanted to see if that was the same with class attributes?
[06:15:53] <SnoopJ> enrh, they'll be defined at class definition time only
[06:18:42] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:19:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:19:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 265 seconds)
[06:20:17] <nedbat> enrh: which is to say that all class instances will share the same `files` attribute
[06:20:31] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 252 seconds)
[06:21:03] <SnoopJ> if you want per-instance properties that look something like this, attrs + dataclasses are good libraries to learn about
[06:21:05] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:21:44] <enrh> I'm using pydantic BaseModel
[06:22:01] <enrh> Suppose I need to use a method with validator dectorator and set it in there
[06:22:35] <kristine86> OK, environment variable worked really well. I looked into structlog configure but didn't understand how to hide certain level of log. For example, I don't want to show debug log when environment var debug is false. How do I do that?
[06:22:54] <SnoopJ> enrh, `files: list[str] = pydantic.Field(default_factory=list)`
[06:23:02] <nedbat> enrh: sorry, didn't know it was pydantic
[06:23:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[06:23:23] *** Joins: khrbt (~znc@user/khrbt)
[06:23:33] <SnoopJ> or I think list[str] might suffice actually?
[06:23:40] <enrh> nedbat, no worries! I didn't mention that. And you sir apologize to know one! Thanks for your work :)
[06:23:48] <enrh> s/know/no
[06:23:57] <enrh> SnoopJ, thank you!
[06:24:08] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[06:24:42] *** Joins: fikran (~fikran@user/fikran)
[06:24:55] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[06:25:07] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:25:41] <enrh> Pretty soon I will have no classes in my lib w/o pydantic BaseModel :D
[06:27:25] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:27:39] *** Quits: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[06:28:05] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[06:29:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:29:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:31:18] <SnoopJ> I was right the first time, you want Field :)
[06:34:23] *** Joins: tsandstr (~user@nat-130-132-173-11.central.yale.edu)
[06:34:32] <tsandstr> Hey, I have a weird indexing task in numpy that I can't quite figure out. I have an array a of shape (m, n, p), and another array b of shape (m, n). The elements of b are integers. I would like to use b to index into a in the following sense. It should create a new array c of shape (m, n), where c[i,j] = a[i, j, b[i, j]]. What is the canonical way of achieving this in numpy?
[06:34:49] <tsandstr> (If this is the wrong place to ask, let me know)
[06:34:54] *** Quits: Subsentient (~WhiteRat@universe2.us) (Remote host closed the connection)
[06:35:14] *** Joins: Subsentient (~WhiteRat@universe2.us)
[06:37:33] *** Quits: syntaxman (~wade@li227-215.members.linode.com) (Quit: leaving)
[06:38:38] <InPhase> ComputerTech: "in" is risky.  Imagine lline[3] is 'dont!quit!join'
[06:38:38] *** Joins: node1 (~node1@user/node1)
[06:43:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:43:33] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[06:44:45] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[06:45:09] *** Quits: sreve (~quassel@p549d7004.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:45:59] *** Joins: Maikel (~Maikel@130.61.63.136)
[06:47:04] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:47:36] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:48:19] *** Joins: philipp64|work (~philipp64@174.27.28.163)
[06:51:18] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[06:51:32] *** Quits: rundown (~eb0t@90.194.34.18) (Ping timeout: 268 seconds)
[06:53:04] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:53:17] *** Joins: rundown (~eb0t@90.194.37.187)
[06:53:36] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:53:58] *** Joins: sirquack (~sirquack@2601:643:8680:526:ac83:b340:7bfe:12a9)
[06:54:17] *** Quits: Sheilong (uid293653@ilkley.irccloud.com) ()
[06:55:03] *** Joins: Joco (~JoCo@modemcable177.112-161-184.mc.videotron.ca)
[06:56:35] <sirquack> how should you go about sending and receiving sensitive information? i would use post and get requests, but i saw that they shouldnt be used for that.
[06:58:28] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Ping timeout: 252 seconds)
[07:00:27] <KirkMcDonald> sirquack: As long as it's HTTPS, POST is fine. GET isn't so bad, either, but GET parameters are more likely to end up logged, so POST should be preferred (for e.g. sending passwords).
[07:00:53] *** Joins: Macuser (~Macuser@216.30.159.201)
[07:01:25] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[07:02:48] *** Hash is now known as OpenSores
[07:05:02] *** Quits: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net) (Quit: I am disconnecting from this network.)
[07:05:15] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[07:05:31] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[07:06:26] *** Joins: sertsa (~sertsa@209.140.9.160)
[07:06:36] *** Quits: sertsa (~sertsa@209.140.9.160) (Client Quit)
[07:07:12] *** Quits: tar_xvf_ (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:07:31] *** Joins: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:08:59] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Remote host closed the connection)
[07:09:33] *** Joins: p-i- (~Ohmu@223.206.71.4)
[07:11:58] *** Joins: Macuser (~Macuser@216.30.159.201)
[07:12:52] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[07:12:54] <InPhase> tsandstr: a.ravel()[b.ravel() + a.shape[2]*np.arange(np.prod(a.shape[:2])).ravel()].reshape(a.shape[:2])
[07:13:52] <InPhase> tsandstr: That was a little trickier than it seemed at first glance.  Fortunately the contiguous storage opens up some options there.
[07:18:14] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[07:20:19] * SnoopJ winces
[07:20:57] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[07:21:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[07:21:34] <InPhase> tsandstr: Top-level perspective, you need to mash the natural indices together with the selector array numericall before you can proceed, and that's just a whole lot easier done numerically in 1D.
[07:21:56] <InPhase> s/numericall /numerically /
[07:22:29] * SnoopJ would capture the bits inside the square brackets to a name to reduce it to `idx = ...; a.ravel()[idx].reshape(a.shape[:2])`
[07:22:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:22:47] <InPhase> Permissible.  :)
[07:23:05] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:23:51] *** Joins: alzgh (~alzgh@user/alzgh)
[07:24:11] *** Quits: p-i- (~Ohmu@223.206.71.4) (Remote host closed the connection)
[07:24:47] *** Joins: p-i- (~Ohmu@138.199.31.193)
[07:25:04] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[07:26:08] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:27:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[07:28:26] *** Joins: alzgh (~alzgh@user/alzgh)
[07:28:52] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:29:24] *** Quits: fr_sleepy (~fr_sleepy@209.94.138.128) (Quit: gnite)
[07:29:38] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:29:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:29:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[07:30:39] *** Joins: fr_sleepy (~fr_sleepy@209.94.138.128)
[07:30:46] *** Joins: wyclif (~wyclif@user/wyclif)
[07:31:14] *** Joins: alzgh (~alzgh@user/alzgh)
[07:33:19] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[07:33:48] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[07:33:59] *** Quits: aknot (~aknot@2603-900a-1503-17bb-f1f8-e73f-21a6-c63e.inf6.spectrum.com) (Ping timeout: 264 seconds)
[07:35:06] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 245 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:39:31] *** Joins: yeirr (~yeirr@user/yeirr)
[07:39:43] *** Joins: Haxxa (~Haxxa@122.199.45.217)
[07:40:17] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[07:41:03] *** Joins: yeirr (~yeirr@user/yeirr)
[07:42:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:43:07] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:44:11] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:44:30] *** Quits: cloudbender10 (~cloudbend@user/cloudbender) (Quit: Connection closed)
[07:44:43] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:46:12] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[07:46:34] *** Joins: yeirr (~yeirr@user/yeirr)
[07:46:35] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[07:47:32] *** Joins: yeirr (~yeirr@user/yeirr)
[07:48:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:48:23] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[07:49:04] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[07:49:32] *** Joins: ano (~ano@user/ano)
[07:53:26] *** Quits: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[07:54:05] *** Joins: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net)
[07:54:21] *** Quits: kristine86 (~kristine8@2603-7080-af03-588a-6f0e-b475-0851-0e1b.res6.spectrum.com) (Ping timeout: 256 seconds)
[07:55:19] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[08:00:01] <Joco> Hello. Is anyone here is good building a gui using page?
[08:00:37] <Joco> I'm having issues getting le selected data from a listbox
[08:02:34] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[08:02:51] *** Quits: LiftLeft (~LiftLeft@37.19.197.194) (Ping timeout: 268 seconds)
[08:04:28] *** Quits: y1n (~y1n@91.141.57.250.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[08:04:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[08:05:30] *** Quits: Joco (~JoCo@modemcable177.112-161-184.mc.videotron.ca) ()
[08:05:47] *** Quits: Haxxa (~Haxxa@122.199.45.217) (Ping timeout: 264 seconds)
[08:06:08] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[08:06:35] *** Joins: Maikel (~Maikel@130.61.63.136)
[08:07:41] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[08:07:50] *** Joins: Squatch (~Squatch@c-71-193-161-16.hsd1.or.comcast.net)
[08:09:12] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:09:45] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:10:12] *** Quits: Player001 (~Player001@user/player001) (Quit: Quitting)
[08:11:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[08:12:47] *** Joins: wyclif (~wyclif@user/wyclif)
[08:12:47] *** Joins: yeirr (~yeirr@user/yeirr)
[08:13:19] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[08:13:44] *** Joins: yeirr (~yeirr@user/yeirr)
[08:13:57] *** Quits: flyback (~flyback@2601:540:8201:1e60:c8bc:a341:7c45:6534) (Ping timeout: 268 seconds)
[08:14:25] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[08:15:04] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:15:59] *** Quits: gitly2 (~gitly@148.252.128.84) (Ping timeout: 264 seconds)
[08:16:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:17:07] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:17:34] *** Joins: gitly2 (~gitly@148.252.128.166)
[08:19:31] *** Joins: Lazenca (~lazenca@user/lazenca)
[08:21:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[08:23:14] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:23:15] *** Joins: yeirr (~yeirr@user/yeirr)
[08:25:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:26:45] *** Joins: flyback (~flyback@2601:540:8201:1e60:2596:f16c:6dfd:8410)
[08:26:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:27:55] *** Quits: FurCoatStarlette (FurCoatSta@159.196.89.115) (Remote host closed the connection)
[08:29:21] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[08:29:30] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[08:29:54] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:30:09] *** Quits: p-i- (~Ohmu@138.199.31.193) (Read error: Connection reset by peer)
[08:32:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[08:33:39] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:b210:b5ce:6253:365b)
[08:34:02] *** Joins: fikran (~fikran@user/fikran)
[08:36:00] *** Joins: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com)
[08:40:32] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:40:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:44:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[08:44:41] *** Joins: wyclif (~wyclif@user/wyclif)
[08:49:22] *** Quits: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com) (Read error: Connection reset by peer)
[08:50:30] *** Joins: whatsupdoc (~whatsupdo@148.64.18.9)
[08:50:55] <whatsupdoc> Hi, in python, how do you generate an iterator that generates all possible subsets of length 3?
[08:51:40] <whatsupdoc> is that the same as combinations?
[08:52:52] <Repiphany> itertools.combinations if order doesn't matter
[08:53:48] *** Joins: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com)
[08:54:06] <whatsupdoc> What do you use if order does matter?
[08:54:14] <Repiphany> permutations
[08:54:45] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Remote host closed the connection)
[08:54:55] <whatsupdoc> Oh, I see
[08:55:03] <whatsupdoc> Maybe permutate on your subset
[08:55:20] *** Joins: p-i- (~Ohmu@138.199.31.193)
[08:56:12] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:56:22] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[08:57:49] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[08:59:41] <whatsupdoc> How would i do this efficiently in python? Remove all duplicate permutations: [[1,2] [2,1] [3,2] [2,3]]
[08:59:57] <whatsupdoc> [[1,2] [2,1] [3,2] [2,3]] => [[1,2] [2,3]]
[09:01:05] *** Joins: stengah (~stengah@user/stengah)
[09:04:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:04:36] <Repiphany> Could do a set of sorted tuples or frozensets or something
[09:04:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:05:11] *** Quits: sirquack (~sirquack@2601:643:8680:526:ac83:b340:7bfe:12a9) (Ping timeout: 264 seconds)
[09:06:12] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:06:46] <whatsupdoc> Why does this not work? set([[1,2,3], [1,2,3]])
[09:06:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:07:04] *** Joins: upsala (~zcb@185.213.155.160)
[09:07:08] <InPhase> {tuple(set(e)) for e in [[1,2], [2,1], [3,2], [2,3]]}
[09:07:37] <InPhase> whatsupdoc: Because lists are mutable, and thus it doesn't allow storing them in sets or as dict keys, as the hash would change upon appending to a list.
[09:08:04] <whatsupdoc> Ok, I figured, for some reason I thought that only applied to dictionaries
[09:08:20] *** Joins: stockholm (~Andreas@p200300d2c72b7e00a90c789e9d2d2326.dip0.t-ipconnect.de)
[09:08:59] <Repiphany> Converting the inner list to set wouldn't work if there could be duplicates there
[09:09:57] <whatsupdoc> list(set((tuple(sorted(l)) for l in ans)))
[09:12:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:12:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:13:39] *** OpenSores is now known as Hash
[09:15:52] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:18:44] *** Joins: kurfen (~kurfen@37.120.204.67)
[09:19:01] *** Joins: Hazza (~Haxxa@122-199-44-126.ip4.superloop.com)
[09:19:42] *** Quits: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com) (Ping timeout: 265 seconds)
[09:19:43] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[09:23:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:23:36] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:26:45] *** Joins: xiongxin (~quassel@113.116.224.79)
[09:27:31] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[09:27:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:27:51] *** Quits: whatsupdoc (~whatsupdo@148.64.18.9) (Ping timeout: 256 seconds)
[09:27:53] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:29:11] *** Quits: Hazza (~Haxxa@122-199-44-126.ip4.superloop.com) (Ping timeout: 264 seconds)
[09:29:49] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[09:30:01] *** Quits: rundown (~eb0t@90.194.37.187) (Ping timeout: 268 seconds)
[09:30:09] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[09:34:50] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[09:35:27] *** Joins: p-i-_ (~Ohmu@138.199.31.193)
[09:35:29] *** Joins: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com)
[09:35:54] *** Joins: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202)
[09:36:57] *** Quits: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202) (Client Quit)
[09:38:04] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 265 seconds)
[09:38:09] *** Joins: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202)
[09:39:02] *** Quits: p-i- (~Ohmu@138.199.31.193) (Ping timeout: 265 seconds)
[09:39:34] *** Quits: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202) (Client Quit)
[09:39:59] *** Quits: stengah (~stengah@user/stengah) (Ping timeout: 264 seconds)
[09:40:44] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:40:59] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[09:41:19] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[09:41:48] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:42:51] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:43:23] *** Joins: Vonter (~Vonter@user/vonter)
[09:43:49] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:44:21] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:45:06] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 245 seconds)
[09:46:14] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Client Quit)
[09:46:17] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[09:46:27] *** Joins: xiongxin_ (~quassel@113.116.33.28)
[09:46:57] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:41] *** Joins: seednode (~seednode@user/seednode)
[09:49:33] *** Joins: Elodin (~weechat@user/elodin)
[09:54:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:54:59] *** Quits: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com) (Ping timeout: 264 seconds)
[09:58:49] *** Joins: manti7 (~manti7@176.10.104.94)
[10:00:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:00:44] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[10:02:52] *** Joins: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com)
[10:06:07] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[10:09:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[10:10:31] *** Joins: wyclif (~wyclif@user/wyclif)
[10:10:43] *** Joins: Tuor (~quassel@user/tuor)
[10:11:11] *** Quits: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com) (Ping timeout: 264 seconds)
[10:12:35] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:13:08] *** Joins: _zipper (~zipper@static.171.23.69.159.clients.your-server.de)
[10:14:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[10:15:59] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:16:46] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[10:18:10] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 252 seconds)
[10:18:18] *** Quits: _zipper (~zipper@static.171.23.69.159.clients.your-server.de) (Quit: Quit)
[10:21:26] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:21:52] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[10:22:00] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:22:22] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[10:25:00] *** Joins: rendar (~rendar@user/rendar)
[10:26:19] *** Joins: yeirr (~yeirr@user/yeirr)
[10:26:24] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: It's too late now.)
[10:26:43] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[10:30:03] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[10:30:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[10:30:24] <aphysically> whatsupboy: you want the subset of the power set with length 3
[10:30:36] <aphysically> there's recipes in itertools for the power set and probably a lot online
[10:30:54] <aphysically> after you have the powerset just do i for i in powerset if len(i)==3
[10:31:25] <aphysically> oh they're gone
[10:32:51] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:33:32] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:33:32] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[10:34:36] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:35:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:35:23] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:36:26] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:37:04] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:37:29] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[10:38:12] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[10:38:55] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[10:39:19] *** Joins: n0n_b1n4ry_c0d3 (~n0b0dy@156.67.18.13)
[10:40:19] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:41:02] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:41:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[10:43:22] *** Joins: fikran (~fikran@user/fikran)
[10:43:40] *** Joins: jpic (~jpic@82.142.13.78)
[10:45:15] *** Quits: stockholm (~Andreas@p200300d2c72b7e00a90c789e9d2d2326.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:46:38] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[10:47:10] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[10:49:11] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:49:29] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:50:03] *** Joins: rapha (~jrs@user/rapha)
[10:50:09] <rapha> good morning all!
[10:50:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:50:56] *** Joins: stockholm (~Andreas@p200300d2c72b7e00a90c789e9d2d2326.dip0.t-ipconnect.de)
[10:51:04] <rapha> how can i convert [['1', 'a'], ['2', 'b']] into {'a': '1', 'b': '2'} ?
[10:52:46] <Peng> I guess I'd use a for loop
[10:53:03] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[10:53:59] <jinsun> `dict(reversed(x) for x in [['1', 'a'], ['2', 'b']])`
[10:54:11] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:54:55] <aphysically> jinsun: my first chunk of rich PRs was merged :^)
[10:55:08] <aphysically> but not the one that fixes the pyright errors :^(
[10:55:27] <Peng> jinsun: Fair enough
[10:55:33] <aphysically> maintainer wanted to know alternative workarounds so I provided https://github.com/willmcgugan/rich/pull/1596 as a second option
[10:55:51] <jinsun> aphysically: congrats!, which one then? the mypy-git ones?
[10:56:05] <aphysically> the mypy ones and I found a bug
[10:56:11] <aphysically> yeah the mypy-git ones
[10:56:52] <aphysically> while looking at the typing information from pyright I coincidentally noticed a bug that should have been caught by type checkers, but wasn't because of cast() being used in a way that hid it
[10:57:03] <aphysically> I was looking at the cast trying to figure out why on earth it was being used when I noticed it was hiding a bug
[10:57:19] <aphysically> https://github.com/willmcgugan/rich/pull/1583 -> it's pretty self explanatory
[10:58:34] <aphysically> I looked at the blame and it looks like the casts were added during the conversion of the project to being mypy --strict compatible, so I'm guessing they were added to workaround something as part of the conversion and nobody ever realized they weren't needed when it was done (and the casts were wrong in a subtle way - they should have been Optional[]_
[10:58:45] <aphysically> that or there was a bug in an older mypy version that isn't present anymore
[10:58:57] <aphysically> (but the casts still should have been Optional[] even if they were needed)
[10:59:52] *** Joins: talismanick (~talismani@76.78.246.30)
[11:00:01] <talismanick> I just learned about "poetry config virtualenvs.in-project true"
[11:00:25] <talismanick> Is there a way to use this when I already have venvs in ~/.cache/pypoetry/virtualenvs?
[11:00:30] <jinsun> bug present in mypy that are not present anymore is likely
[11:01:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:02:00] <aphysically> at any rate, the casts should have been Optional[] to signal that the 'or's afterward are actually possible to be evaluated
[11:02:20] <aphysically> but they weren't needed anymore so I went ahead and removed them while fixing the bug
[11:02:22] <jinsun> oh yes
[11:02:33] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[11:02:51] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[11:02:54] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:03:03] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[11:05:05] <aphysically> I finally converted my regex code the other day to stop checking is None/is not None to determine if there was a match
[11:05:38] <aphysically> (the documentation states matches are always truthy and goes further to explicitly recommend using truthiness to determine if there was a match)
[11:05:53] <aphysically> so there's no need to is not None/is None
[11:06:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:13:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:18:23] *** Joins: sandb0y (~pirate@user/sandb0y)
[11:18:58] *** Joins: palasso (~palasso@user/palasso)
[11:19:00] *** Joins: brickfat (~brickfat@user/brickfat)
[11:19:14] *** Joins: greedom (~greedom@2001:16b8:2e1e:ae00:2c10:9af3:8137:a1a6)
[11:20:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:20:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[11:21:49] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[11:22:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:24:14] <rapha> Peng: jinsun: thank you! :)
[11:25:45] <ChrisWarrick> talismanick: did you try just removing ~/.cache/pypoetry/virtualenvs? virtualenvs should be considered ephemeral anyway
[11:28:11] *** Joins: stengah (~stengah@user/stengah)
[11:29:02] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 268 seconds)
[11:29:03] <talismanick> ChrisWarrick:  weeeeeell no, not yet
[11:29:10] <talismanick> I've removed individual ones before
[11:29:46] <talismanick> and broken things when I forgot to, first things first, rebuild a virtualenv with `poetry install'
[11:30:39] *** Joins: noyb (~noyb@user/noyb)
[11:30:47] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[11:30:57] *** Joins: kosh (~kosh@user/kosh)
[11:31:56] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[11:32:26] <talismanick> Is this safe? remove ~/.cache/pypoetry/... -> "poetry config virtualenvs.in-project true" -> "poetry install" on all projects?
[11:32:40] <ChrisWarrick> talismanick: try it and see
[11:32:56] <talismanick> ChrisWarrick: What it if breaks all the stuff I need now? lol
[11:33:14] <ChrisWarrick> talismanick: move ~/.cache/pypoetry to trash instead of removing it fully?
[11:33:18] <hexnewbie> talismanick: You remove by renaming, and have backups, correct? :)
[11:33:45] <talismanick> hexnewbie: I don't have backups for my Python projects, no
[11:33:54] <talismanick> I have git for the source, and that's about it
[11:34:54] *** Joins: jpp (~jpp@user/jpp)
[11:35:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[11:35:50] <talismanick> Trying on my new laptop, where I have all the repos, but actually have so far only activated one venv
[11:36:05] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[11:36:07] <talismanick> deleted, reconfigured, and ran "poetry install" - seems to be working
[11:36:24] *** Joins: wyclif (~wyclif@user/wyclif)
[11:36:31] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:38:03] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[11:38:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[11:38:19] <talismanick> phew, looks like it does work
[11:38:24] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:38:53] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:38:53] *** Joins: Laibsch (~leggewie@93.152.184.249)
[11:38:53] *** Joins: mat001 (~mat001@213.143.69.121)
[11:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:26] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[11:39:34] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:40:03] <lesshaste> I am confused by gitter. If you go to scipy's gitter page for example there is nothing since september. Is there another place scipy is discussed these days
[11:40:08] *** Quits: stockholm (~Andreas@p200300d2c72b7e00a90c789e9d2d2326.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[11:40:25] *** Joins: brabrax (~brabrax@user/brabrax)
[11:40:52] <talismanick> Although, it appears to be confusing Emacs that ~/.cache/pypoetry/virtualenvs no longer exists
[11:41:09] <ChrisWarrick> talismanick: confusing emacs?
[11:41:26] <talismanick> ChrisWarrick: Yeah, I have something called `poetry-tracking-mode' enabled
[11:42:07] <ChrisWarrick> talismanick: it’s possible this plugin is not compatible with virtualenvs.in-project, or requires extra configuration
[11:42:20] <talismanick> https://0x0.st/-k3X.txt
[11:44:28] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:44:36] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:45:06] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[11:45:08] *** Joins: mickey8 (~user@user/mickey)
[11:46:28] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:47:02] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:49:25] *** Joins: whatsupdoc (~whatsupdo@148.64.18.72)
[11:49:27] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[11:49:41] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 245 seconds)
[11:51:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:51:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 264 seconds)
[11:53:51] *** Joins: Haxxa (~Haxxa@122-199-44-188.ip4.superloop.com)
[11:54:44] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[11:54:49] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:55:16] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[11:55:56] <gitesh> Hi. Do you understand this line of code `blurred_image=image.filter(PIL.ImageFilter.BLUR)` ? Here BLUR is a class in ImageFilter module as far as I know. Here I didn't make an object of that class, still It's working. How so?
[11:56:43] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[11:56:49] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:58:03] *** Gustavo6046_ is now known as Gustavo6046
[11:58:43] <jinsun> gitesh: well classes are objects too, so functions can take those as well
[11:58:44] *** Quits: Haxxa (~Haxxa@122-199-44-188.ip4.superloop.com) (Remote host closed the connection)
[11:59:03] <gitesh> oh jinsun thanks
[11:59:50] <lucidreamachine> I have json returned from an api and believed I parsed the data with json.loads. How would I access that data? data.foo isn't working because I believe it's a string.
[12:00:33] <gitesh> lucidreamachine: if you load it you get a python object
[12:00:49] <lucidreamachine> so data[
[12:00:54] <gitesh> lucidreamachine: if you got a string python object then you have to work with it i guess
[12:01:02] * talismanick muses about the nature of Python's MOP
[12:01:03] <gitesh> I get mostly dict or list
[12:01:08] <lucidreamachine> so data['foo'] like a dict
[12:01:14] <lucidreamachine> hmm
[12:01:21] <talismanick> Is the meta-object hierarchy accessible?
[12:01:37] <lucidreamachine> talismanick: I do not believe so
[12:01:42] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (Quit: ZNC - http://znc.in)
[12:01:57] <talismanick> Drats. Then what's the point of objects?
[12:02:06] <hexnewbie> lucidreamachine: Yeah, json.load* in Python would result in dictionaries, not objects, so unlike JavaScript, you'd use x['a'], not x.a to access the properties
[12:02:12] <lucidreamachine> talismanick: that's what I'm thinking
[12:03:25] <lucidreamachine> hexnewbie: the conversion table specifies it converts a string to a string. so, json (a string) would be converted into a string
[12:03:39] <hexnewbie> lucidreamachine: Well, yeah.
[12:03:54] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[12:03:55] <lucidreamachine> parsing the data does nothing. that's why I'm confused
[12:03:59] *** Joins: shangxiao (~davids@124.187.230.212)
[12:04:03] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:04:04] *** Joins: frost (~frost@59.71.244.189)
[12:04:20] <lucidreamachine> I guess I could google it, but that's boring.
[12:04:24] <hexnewbie> lucidreamachine: I don't think strings (not enclosed in dictionary/‘object’ or list) are valid JSON, though. Python's json, however, would explicitly support such
[12:05:48] <lucidreamachine> hexnewbie: if it wasn't valid json,  it would throw a specific error per the documentation.
[12:07:40] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 268 seconds)
[12:08:39] *** Joins: src (~src@user/src)
[12:09:00] <hexnewbie> OK, my bad. Strings were invalid JSON according to RFC 4627, but are valid according to  RFC 7159.
[12:09:35] <hexnewbie> Point is moot, since I'm confident Python's json library supported those prior to 2014 :)
[12:11:22] <lucidreamachine> The api returns a string, which is parsed and converted into a string. The conversion table also specifies parsing would convert an object into a dictionary, so wouldn't that be JSON as well.
[12:12:50] <hexnewbie> The JSON text is a string, the result from parsing it can be anything - list, dictionary, str, int, float or None - according to RFC 7159, though it's customary for it to be a dictionary or list (as was required previously by RFC 4627)
[12:13:35] *** Quits: stengah (~stengah@user/stengah) (Ping timeout: 264 seconds)
[12:13:45] <hexnewbie> After parsing it, the result would no longer be JSON, but a hierarchy of Python objects. Unless the author of the JSON text made it with json.dumps(json.dumps(json.dumps(value)))
[12:17:13] <lucidreamachine> Yeah, it looks like the API isn't quite up to par. I don't know how it was built, but they have some API Python wrappers that are a pain to find. The data prints to the console different after "parsing" with json.loads,but i still believe it's a string.
[12:17:26] *** Quits: imp (~imp@192-141-191-231.alternativaip.net.br) (Quit: imp)
[12:17:42] <lucidreamachine> A hieararchy of Python objects would be wonderful
[12:19:29] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[12:19:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[12:19:36] <lucidreamachine> The docs state deserialize to a Python object, so I could be doing something wrong
[12:19:56] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[12:20:02] *** Quits: Subsentient (~WhiteRat@universe2.us) (Remote host closed the connection)
[12:20:20] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[12:20:28] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Client Quit)
[12:20:43] *** Joins: Subsentient (~WhiteRat@universe2.us)
[12:21:05] <hexnewbie> lucidreamachine: That's valid for any function you ever call, since everything is a Python object, and thus every return value also is
[12:21:15] *** Quits: whatsupdoc (~whatsupdo@148.64.18.72) (Ping timeout: 256 seconds)
[12:21:30] *** Quits: brickfat (~brickfat@user/brickfat) (Ping timeout: 260 seconds)
[12:21:42] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:22:44] <lucidreamachine> hexnewbie: Got it. Thanks for clarifying.
[12:23:05] *** Joins: Snyp (~Snyp@49.207.212.233)
[12:23:09] *** Quits: l4yer (~l4yer@159.48.55.9) (Read error: Connection reset by peer)
[12:24:15] <hexnewbie> The documentation also gives examples
[12:24:47] <lucidreamachine> data['foo'] throws "byte indices must be integers or clices, not str", so I guess it's bytes. That's great.
[12:25:11] *** Joins: brelod (~me@90.244.150.142)
[12:26:53] <hexnewbie> lucidreamachine: bytes is the one thing json.loads() will not return, not without an explicit object_hook anyway
[12:27:14] *** Quits: Snyp (~Snyp@49.207.212.233) (Quit: Textual IRC Client: www.textualapp.com)
[12:27:39] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:27:39] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:28:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:28:39] *** Joins: Haxxa (~Haxxa@122-199-44-254.ip4.superloop.com)
[12:29:49] <gloomy> Hey I have a functional data processing pipeline built from generators, something like `a = initial_generator(); b= do_something(a); c = do_something_more(b); final_result = foo(c)`. I'm struggling to find a nice way to show/monitor progression. I tried a single progress bar  `final_result = foo( el for el in tqdm(c, total=xxx))`, but  that only gives a very rough idea of what is happening
[12:30:07] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[12:30:54] <lucidreamachine> hexnewbie: there's no object hook applied. I don't json.loads is doing much for me in this instance.
[12:31:01] <gloomy> I also tried making one progress bar for each generator but 1. tqdm seems to get really janky with multiple bars and 2. it's still confusing because different functions consume elements at different rates and it's hard to understand which function is working at any given time
[12:31:05] <gloomy> Any ideas?
[12:31:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:31:47] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[12:33:45] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[12:34:17] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[12:34:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:35:01] *** Joins: brabrax (~brabrax@user/brabrax)
[12:35:44] <gitesh> `ModuleNotFoundError: No module named 'PIL'`
[12:35:50] <gitesh> any idea on this error?
[12:35:55] <gitesh> I'm in a virtual env
[12:36:01] *** Joins: l4yer (~l4yer@2a02:6ea0:e102:0:1011:23c9:cfaf:3bc9)
[12:36:06] <gitesh> I have installed PIL in the virtual env
[12:36:21] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 245 seconds)
[12:36:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[12:36:52] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[12:37:43] *** Joins: brabrax (~brabrax@user/brabrax)
[12:38:39] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[12:39:54] <gitesh> it worked with `python file.py`
[12:41:09] *** Joins: tobybl_ (~tobybl@38.247.200.146.dyn.plus.net)
[12:42:01] *** Joins: Snyp (~Snyp@49.207.212.233)
[12:42:05] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Quit: Leaving)
[12:42:23] *** Quits: Haxxa (~Haxxa@122-199-44-254.ip4.superloop.com) (Ping timeout: 264 seconds)
[12:43:40] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Ping timeout: 265 seconds)
[12:44:36] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[12:44:39] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[12:45:17] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Quit: Leaving.)
[12:45:25] *** Joins: hudo__ (~hudo@62.68.20.210)
[12:45:26] *** Joins: brabrax (~brabrax@user/brabrax)
[12:46:27] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[12:47:11] *** Joins: brabrax (~brabrax@user/brabrax)
[12:47:20] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:47:44] <mdk> gitesh: how have you installed PIL?
[12:48:16] <gitesh> mdk: i worked I have install PIL using `pip install pillow` in the venv
[12:48:20] <gitesh> *it
[12:48:45] <mdk> gitesh: ok nice ou worked it out :)
[12:48:48] <mdk> s/ou/you/
[12:48:49] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[12:49:26] <gitesh> mdk: if I just did `file.py` i guess it means system wide even if I'm in venv, so when I did `python file.py` it worked.
[12:50:08] <gitesh> I want to change python version to latest, I have already installed latest version but it didn't change.
[12:50:26] *** Quits: jpic (~jpic@82.142.13.78) (Ping timeout: 268 seconds)
[12:50:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[12:51:03] *** Joins: Kaya (~KC@2a01:4f9:c010:3917::1)
[12:52:01] *** Joins: jpic (~jpic@82.142.29.22)
[12:52:21] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[12:52:30] *** Joins: p-i- (~Ohmu@223.206.71.4)
[12:52:43] *** Joins: fikran (~fikran@user/fikran)
[12:53:07] *** Joins: brabrax (~brabrax@user/brabrax)
[12:53:23] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2.1)
[12:53:45] *** Joins: stengah (~stengah@user/stengah)
[12:55:24] *** Quits: OPK (~OPK@user/opk) (Quit: Textual IRC Client: www.textualapp.com)
[12:56:05] *** Joins: OPK (~OPK@user/opk)
[12:56:14] *** Quits: p-i-_ (~Ohmu@138.199.31.193) (Ping timeout: 265 seconds)
[12:58:22] <Hash> Hi
[12:58:44] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:9899:c474:c3b6:1ce9)
[12:58:53] <Hash> I'm doing some python scripting and looking for an editor with a build in run script function. i keep having to go to console and run it after saving.
[12:59:13] <be3uykpy> pycharm?
[12:59:20] <be3uykpy> community edition is free
[12:59:25] <Hash> Something easy, fast, simple, not need for a full fledged ide
[12:59:25] <be3uykpy> vscode
[12:59:31] <be3uykpy> sublime
[12:59:33] <be3uykpy> D:
[13:01:04] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:01:24] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[13:02:50] *** Joins: rundown (~eb0t@90.212.144.152)
[13:03:17] <Hash> Oh thonny is amazing!
[13:03:33] <Hash> Perfect! Tabbed, colored text, play button to run script, output in bottom
[13:03:35] <Hash> PerfecT!
[13:03:38] <Hash> OMG!
[13:03:58] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 265 seconds)
[13:04:06] <Hash> https://thonny.org/
[13:05:20] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:06:22] *** Quits: Snyp (~Snyp@49.207.212.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:08:18] <ChrisWarrick> a full-fledged IDE will be much more productive in the long term
[13:08:22] *** Joins: loududo (~textual@203.99.159.205)
[13:08:51] *** Parts: loududo (~textual@203.99.159.205) ()
[13:08:56] *** Joins: loududo (~textual@203.99.159.205)
[13:09:34] <mdk> Hash: You can even add friendly-traceback to Thonny: https://github.com/thonny/thonny/wiki/Friendly-traceback, the thing is amazing :)
[13:09:48] <Hash> Thank you
[13:09:59] *** Quits: rundown (~eb0t@90.212.144.152) (Ping timeout: 264 seconds)
[13:10:53] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[13:11:07] *** Joins: rundown (~eb0t@90.210.94.119)
[13:11:08] *** Quits: tobybl_ (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[13:12:13] <AhmedAmerican> `pip install lxml` is giving an error
[13:12:15] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:12:30] *** Joins: brickfat (~brickfat@user/brickfat)
[13:12:45] <AhmedAmerican> https://bpa.st/FZFQ
[13:12:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:14:03] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[13:14:22] <ChrisWarrick> AhmedAmerican: you’re on python 3.10, which is brand new, and there aren’t any wheels for lxml for python 3.10 on windows yet, so it tries to compile it
[13:14:36] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:15:54] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[13:16:18] *** Joins: maromau (~mauro@151.62.228.166)
[13:16:31] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:19:39] *** Joins: gndu91 (~nadir@2a01:e0a:a71:3370:2e56:dcff:fea9:5e20)
[13:19:57] <gndu91> Hi, I have a question about PyCharm. Why does Pycharm think that list(os.scandir())) is of the type List[str]?
[13:20:14] <AhmedAmerican> ChrisWarrick: thank you.
[13:21:51] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:22:15] *** Joins: dhanesh (~Dhanesh@117.211.157.56)
[13:22:48] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[13:23:07] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:23:11] <ChrisWarrick> gndu91: most likely, the type stubs it’s basing its data on are incorrect
[13:23:25] *** Quits: loududo (~textual@203.99.159.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:23:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:23:58] <Hash> https://bpa.st/BQPQ Trying to convert this python script from rackspace to cloudflare
[13:24:08] <Hash> https://bpa.st/MR6A here's the target format
[13:24:28] <Hash> what are the {} things inside the [] called?
[13:24:38] <Hash> I am not good in python, I use it rarely
[13:25:09] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[13:25:12] <gndu91> ChrisWarrick: In the stubs there is nothing, just a comment stating " # real signature unknown"
[13:25:37] <gndu91> Full line: "def scandir(*args, **kwargs): # real signature unknown"
[13:25:59] <gndu91> Followed by the description in triple quotes and a pass
[13:26:54] *** Quits: thnee (~thnee@h-85-24-144-199.A328.priv.bahnhof.se) (Quit: WeeChat 3.2)
[13:27:20] <Phase> Hash: in python [] denotes a list, and {} is a dictionary
[13:27:27] *** Joins: y1n (~y1n@91.141.48.199.wireless.dyn.drei.com)
[13:28:19] <Hash> Thanks
[13:30:59] *** Quits: rundown (~eb0t@90.210.94.119) (Ping timeout: 264 seconds)
[13:31:10] *** Quits: p-i- (~Ohmu@223.206.71.4) (Remote host closed the connection)
[13:31:59] <ChrisWarrick> gndu91: so for some reason it guesses it’s a string
[13:32:23] *** Joins: rundown (~eb0t@90.196.142.168)
[13:36:14] *** Joins: p-i- (~Ohmu@223.206.71.4)
[13:36:17] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[13:36:18] *** Joins: loududo (~textual@203.99.159.205)
[13:37:41] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[13:38:09] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[13:38:45] *** Joins: stockholm (~Andreas@p200300d2c72b7e00500fc1b050d6deb4.dip0.t-ipconnect.de)
[13:38:53] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:39:25] *** Joins: tuck (~lightstor@user/tuck)
[13:41:11] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[13:41:25] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Read error: Connection reset by peer)
[13:42:22] *** Joins: Atque (~Atque@user/atque)
[13:42:29] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:44:09] *** Joins: ColonelJ (~ColonelJ@user/colonelj)
[13:44:14] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[13:45:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[13:47:02] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Quit: ZNC 1.8.2 - https://znc.in)
[13:47:20] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[13:51:41] <Hash> Hello agin
[13:51:44] <Hash> {'name':'ding', 'type':'A', 'content':'216.58.194.206'},
[13:52:13] <Hash> https://bpa.st/MR6A is it possible in the python indentation model to somehow make this more readable, where each thing inside the {} is on a separate line
[13:53:51] <rendar> if i have multiple coroutines into asyncio.gather(), and one of them cancels with a message, how can i get the proper CancelledError exception with that message, if there are multiple coros inside gather() ?
[13:55:31] <Hash> https://bpa.st/Q33A I have like this, but I get error on indentation about: line 52: domain_email = "admin@"+domain_name
[13:55:38] <Hash> TabError: inconsistent use of tabs and spaces in indentation
[13:55:47] <Hash> I it looks normal to me, I matched up the indentation
[13:56:01] <Hash> Oh maybe you can't mix tabs and spaces
[13:56:12] *** Joins: src_ (~src@user/src)
[13:56:12] <Repiphany> Yes, don't mix tabs and spaces
[13:56:16] *** Quits: src_ (~src@user/src) (Remote host closed the connection)
[13:56:50] <Hash> That's peculiar, becuase when I tabbed out/indented out the stuff inside the {}
[13:56:52] <jinsun> Hash: doesn't look normal on bpaste (where tabs looks like 8 spaces)
[13:56:56] <Hash> I used tabs, nto spaces, and it works.
[13:57:15] <Hash> Oh
[13:57:19] <Hash> jinsun: thanks!
[13:57:32] <ColonelJ> for me it looks fine on bpa.st, tabs are 4 spaces
[13:57:32] *** Joins: montxero (~user@123.208.58.133)
[13:58:11] *** Joins: _zipper (~zipper@41.75.188.9)
[13:58:20] *** Quits: _zipper (~zipper@41.75.188.9) (Client Quit)
[13:58:49] <jinsun> oh really? then maybe it is my browser setting
[13:58:52] *** Joins: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202)
[13:58:57] <montxero> I have a problem with object's method not being called in a call back.
[13:59:14] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:59:47] *** Quits: src (~src@user/src) (Ping timeout: 264 seconds)
[14:01:07] <montxero> I am dealing with Caproto if that helps
[14:02:13] *** Joins: Haxxa (~Haxxa@122-199-44-32.ip4.superloop.com)
[14:02:40] *** Joins: me-sudoer-dentne (~me-sudoer@2405:204:53ab:d5ed:583f:8b00:175b:9f05)
[14:02:51] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[14:05:06] *** Quits: xiongxin_ (~quassel@113.116.33.28) (Ping timeout: 245 seconds)
[14:05:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:05:38] *** Joins: computeiro (~Wender@189.37.68.145)
[14:06:06] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[14:06:24] *** Joins: ravan (~ravan@user/ravan)
[14:07:21] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[14:08:34] *** Quits: Haxxa (~Haxxa@122-199-44-32.ip4.superloop.com) (Quit: Haxxa flies away.)
[14:09:47] *** Quits: p-i- (~Ohmu@223.206.71.4) (Quit: Leaving...)
[14:11:00] *** Joins: Haxxa (~Haxxa@122-199-44-32.ip4.superloop.com)
[14:13:05] *** Quits: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202) (Quit: Quit)
[14:15:30] *** Joins: _zipper (~zipper@vps-a54fc387.vps.ovh.net)
[14:15:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:16:48] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[14:19:57] *** Joins: fedorafan_altern (~fedorafan@user/fedorafan)
[14:20:11] <fedorafan_altern> hey guys == in strings is fine right
[14:20:15] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:20:20] *** Quits: Haxxa (~Haxxa@122-199-44-32.ip4.superloop.com) (Ping timeout: 265 seconds)
[14:20:24] <fedorafan_altern> stringequality well in java it means it checks the reference
[14:21:25] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:22:01] <nedbat> fedorafan_altern: == in python checks the value
[14:22:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:23:21] <nedbat> fedorafan_altern: "is" in python checks the object identity
[14:26:05] <fedorafan_altern> thanks
[14:26:21] <fedorafan_altern> is there some magic behind ' vs "
[14:26:24] <fedorafan_altern> or equal usage
[14:27:26] <ColonelJ> https://docs.python.org/3/tutorial/introduction.html#strings
[14:28:04] *** Joins: Snyp (~Snyp@49.207.212.233)
[14:28:45] *** Quits: gndu91 (~nadir@2a01:e0a:a71:3370:2e56:dcff:fea9:5e20) (Quit: Leaving)
[14:28:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:29:13] *** Quits: Snyp (~Snyp@49.207.212.233) (Client Quit)
[14:30:15] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:30:50] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:30:54] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:31:02] *** Quits: greedom (~greedom@2001:16b8:2e1e:ae00:2c10:9af3:8137:a1a6) (Remote host closed the connection)
[14:31:05] <nedbat> fedorafan_altern: ' and " are the same (except for what must be escaped)
[14:31:21] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:34] *** Quits: stockholm (~Andreas@p200300d2c72b7e00500fc1b050d6deb4.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[14:32:41] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[14:32:45] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[14:32:58] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[14:33:21] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[14:33:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[14:33:33] *** Joins: Snyp (~Snyp@49.207.212.233)
[14:33:56] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[14:33:58] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:34:39] *** Joins: beuys (~beuys@user/beuys)
[14:34:46] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[14:35:01] *** Joins: xiongxin (~quassel@113.116.32.200)
[14:35:29] *** Joins: srhm (~srhm@user/srhm)
[14:35:33] *** Joins: darksun (~darksun@user/darksun)
[14:35:42] *** Quits: Snyp (~Snyp@49.207.212.233) (Client Quit)
[14:35:44] <beuys> Hello! When you get an error like this: "if n=="": print("Missing: "+i+":"+k): TypeError: can only concatenate str (not "NoneType") to str - how do you find out which of the 3 variables are of type NoneType?
[14:35:51] *** Joins: src (~src@user/src)
[14:36:11] *** Joins: Snyp (~Snyp@49.207.212.233)
[14:36:55] <nedbat> beuys: there are only two it could be: i or k.  i would print them each on the line before.
[14:37:06] <nedbat> beuys: btw, Python 3.11 is going to show you which of them was bad
[14:37:25] <beuys> nedbat: Ok. So good old print debugging :)
[14:37:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[14:38:39] <nedbat> beuys: 3.11: https://gist.github.com/nedbat/1b563b9633df6506807b211ed1b1d61d
[14:40:27] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[14:41:19] <beuys> nedbat: https://packages.debian.org/bullseye/python3
[14:41:39] <nedbat> beuys: i understand 3.11 is in the future for most people :)
[14:41:51] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:42:03] <_zipper> beuys: just print out type() of each before using them
[14:42:22] <Hash> Hey guys, Debug says: anti.guru     60 MX    anti.guru ; proxied=False proxiable=False  I get this error in output, and it comlains: 9100 priority is a required field. - api call failed.  https://bpa.st/FMMQ full python script, and i'm sending it the 'priority':  10 on line 78
[14:42:33] <Hash> I'm very confused by this. What am I doing wrong?
[14:42:39] <beuys> nedbat: Yeah, even Debian 11 is in the future here. Will probably switch to it in about 2 years.
[14:42:52] <jinsun> beuys: you can get 3.11 from pyenv (though it is alpha right now so maybe you want to wait a bit)
[14:43:13] <beuys> jinsun: We only use packages from the Debian repos.
[14:43:36] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:43:58] <nedbat> Hash: help us understand what is wrong with the output you're seeing
[14:44:31] *** Quits: _zipper (~zipper@vps-a54fc387.vps.ovh.net) (Quit: Quit)
[14:44:48] <Hash> So when I fire the full script
[14:44:58] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:45:13] <Hash> It says api called failed because it's not sending the priority for the MX record
[14:45:52] <fedorafan_altern> nedbat  (except for what must be escaped) what does that mean
[14:46:10] <Hash> I expect it to not fail, as I'm sending the required field, 'priority' with value 10 on line 78
[14:46:16] *** Quits: Snyp (~Snyp@49.207.212.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:46:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[14:46:22] *** Lord_of_Life_ is now known as Lord_of_Life
[14:46:37] <Hash> You define your list of dns_records and then you send it in r = cf.zones.dns_records.post(zone_id, data=dns_record
[14:47:17] <nedbat> fedorafan_altern: in ", you have to escape ".  In ' you have to escape '
[14:47:43] <Hash> nedbat: https://bpa.st/QR2Q
[14:47:54] <fedorafan_altern> no idea
[14:48:47] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:48:52] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[14:49:04] *** Joins: raxor2k (~raxor2k@78.158.254.247)
[14:49:18] <raxor2k> how do you convert (175,) to a number?
[14:49:22] <raxor2k> i always forget it ..
[14:49:41] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:49:50] <ColonelJ> raxor2k: [0] ?
[14:50:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:52:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:52:54] *** Joins: cdown (~cdown@163.114.131.1)
[14:53:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 264 seconds)
[14:53:33] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[14:55:00] *** Quits: xiongxin (~quassel@113.116.32.200) (Ping timeout: 268 seconds)
[14:55:20] *** Lord_of_Life_ is now known as Lord_of_Life
[14:55:31] <jinsun> beuys: mypy --show-column-numbers (plus a good editor that shows you colum number for the cursor)  can also help https://mypy-play.net/?mypy=latest&python=3.10&flags=show-column-numbers&gist=de1896c73be3426f07e7682ba49e0b2d
[14:55:32] <raxor2k> ColonelJ: thanks!
[14:56:05] <fedorafan_altern> its cool
[14:56:06] <fedorafan_altern> ciao ciao
[14:56:10] *** Parts: fedorafan_altern (~fedorafan@user/fedorafan) (Textual IRC Client: www.textualapp.com)
[14:56:50] *** Joins: xiongxin (~quassel@113.116.224.79)
[14:56:56] <Hash> nedbat: any idea?
[14:57:43] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[14:57:54] *** Quits: raxor2k (~raxor2k@78.158.254.247) ()
[14:58:56] <gloomy> Json is human-readable but only handles the most basic types. pickle handles almost everything but is binary. Is there something in-between?
[14:59:01] <beuys> jinsun: What is mypy?
[14:59:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:59:15] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[14:59:38] <nedbat> Hash: i guess print the full data before line 104? I don't see why it wouldn't have priority
[14:59:48] <gloomy> So I can serialize slightly more complex things (like enums, sets, etc.) but can still easily scan the results visually
[14:59:52] *** Joins: wyclif (~wyclif@user/wyclif)
[15:00:00] <nedbat> gloomy: pyyaml will output python things with tags
[15:00:02] <ColonelJ> nedbat: you're looking at the wrong error, it's put that is failing
[15:00:16] <jinsun> beuys: it is a static type checker https://github.com/python/mypy
[15:00:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:00:50] <gloomy> nedbat: thanks, checking
[15:00:51] <beuys> jinsun: Aha. Thanks for the info.
[15:01:02] <nedbat> Hash: you aren't putting priority into new_dns_record on line 122
[15:01:19] <nedbat> ColonelJ: thanks.  feel free to jump in
[15:01:56] *** Joins: defiant (~defiant@user/defiant)
[15:02:04] *** Quits: beuys (~beuys@user/beuys) (Quit: leaving)
[15:02:04] *** Joins: fikran (~fikran@user/fikran)
[15:02:10] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:d6b4:e384:6135:1552)
[15:02:12] *** Joins: lethu (~lethu@user/lethu)
[15:02:47] *** Quits: sandb0y (~pirate@user/sandb0y) (Ping timeout: 264 seconds)
[15:04:16] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[15:04:39] <jinsun> beuys: but I guess it won't help much if the line is inside a unannotated function (which would be most of your code if you are not using static type checkers already)
[15:04:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:05:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 264 seconds)
[15:05:20] *** Joins: wyclif (~wyclif@user/wyclif)
[15:08:39] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[15:10:25] <Hash> nedbat: oh my god.
[15:10:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[15:10:35] <Hash> 540am.
[15:10:46] <Hash> I need to sleep. My eyes didn't catch/realize to put that in.
[15:11:06] <Hash> It's good now.
[15:11:09] *** Quits: fweht (uid404746@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:12:40] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[15:14:26] *** Joins: stockholm (~Andreas@p200300d2c72b7e00500fc1b050d6deb4.dip0.t-ipconnect.de)
[15:15:06] *** Quits: stengah (~stengah@user/stengah) (Ping timeout: 265 seconds)
[15:15:31] *** Joins: Snyp (~Snyp@49.207.212.233)
[15:17:04] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:20:03] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[15:20:32] *** Joins: wyclif (~wyclif@user/wyclif)
[15:21:10] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 260 seconds)
[15:21:13] <tsujp> given the list of elements [a, b, c, d, e] and a number say 2 or 3 or 4 (smaller than the list length) how can I construct all possible number-combinations of elements of that list? E.g. if the number was 2 then I'd construct a, b and a, c and a, d and so forth. Order doesn't matter.
[15:21:37] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[15:21:54] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[15:22:24] <Yhg1s> tsujp: itertools.combinations
[15:22:50] *** Quits: loududo (~textual@203.99.159.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:26:40] *** Joins: stengah (~stengah@user/stengah)
[15:27:02] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:27:45] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[15:28:03] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[15:28:31] *** Quits: stengah (~stengah@user/stengah) (Client Quit)
[15:28:44] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:2d92:73f7:d59c:e482)
[15:29:58] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 252 seconds)
[15:30:35] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[15:30:47] *** Joins: pycurious (~Adium@user/pycurious)
[15:33:19] <tsandstr> InPhase: I think I figured out a cleaner solution to the Numpy problem. I was able to use `np.take_along_axis` to do almost exactly what I wanted (just had to throw in a `newaxis`))
[15:33:27] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[15:34:45] *** Joins: c4017__ (~c4017@S0106c0943583f893.vf.shawcable.net)
[15:34:46] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:13] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:41] *** Joins: zinc (~zinc@163.ip-51-254-203.eu)
[15:38:16] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:3546:be8e:e7b8:5f67) (Ping timeout: 252 seconds)
[15:38:31] *** Joins: Nspace (~Nspace@user/nspace)
[15:38:42] *** Joins: Klinda (~superleag@user/klinda)
[15:43:12] *** Joins: Atque (~Atque@user/atque)
[15:45:00] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[15:45:05] *** Joins: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com)
[15:45:23] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 264 seconds)
[15:45:40] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: Textual IRC Client: www.textualapp.com)
[15:47:16] *** Joins: rMdes (~rmdes@my.armada.digital)
[15:48:37] *** Joins: _zipper (~zipper@vps-a54fc387.vps.ovh.net)
[15:49:15] *** Joins: control (~v1@user/control)
[15:49:25] <control> is sympy is faster than itertools?
[15:49:30] *** Quits: _zipper (~zipper@vps-a54fc387.vps.ovh.net) (Client Quit)
[15:49:40] *** Joins: _zipper (~zipper@vps-a54fc387.vps.ovh.net)
[15:49:58] *** Quits: me-sudoer-dentne (~me-sudoer@2405:204:53ab:d5ed:583f:8b00:175b:9f05) (Quit: Leaving)
[15:50:14] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[15:51:25] <nedbat> control: they do very different things overall. what do you have in mind specifically?
[15:53:23] <control> multiset_permutations and permutations
[15:53:44] *** Joins: Macuser (~Macuser@216.30.159.201)
[15:54:29] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[15:54:48] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[15:57:19] *** Joins: gulzar (~gulzar@123.201.116.103)
[15:57:22] *** Joins: ethrl (~morty@user/doforlove33)
[15:57:54] *** Quits: ethrl (~morty@user/doforlove33) (Client Quit)
[15:58:08] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[16:00:10] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[16:00:58] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:01:01] *** Quits: audiocat (~audio@2603-8081-1800-1546-569f-5b62-b4a9-4493.res6.spectrum.com) (Ping timeout: 265 seconds)
[16:01:20] *** Joins: death916 (~death916@user/death916)
[16:05:39] *** Quits: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[16:06:17] <gitesh> I guess there is asynchronous programming in python
[16:06:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[16:06:44] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[16:06:44] <AhmedAmerican> gitesh: yes
[16:06:53] <gitesh> I want tutorial on that specifically
[16:07:09] <AhmedAmerican> gitesh: start with trio / asyncio
[16:07:23] <gitesh> In js async let you use await in the function
[16:07:37] <AhmedAmerican> same in Python, `await ..`
[16:07:38] <gitesh> Are both concept same as in js and python
[16:07:45] <gitesh> Okay
[16:09:11] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:09:19] *** Joins: timkofu (~timkofu@user/timkofu)
[16:09:47] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[16:10:21] *** Joins: slav0nic (slav0nic@python.su)
[16:12:27] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[16:13:07] <tsujp> i installed autopep8 with pip but I cannot run it? autopep8 command not found
[16:13:16] <tsujp> can I `pip xxx` to try and run it or something?
[16:16:16] *** Joins: Nspace (~Nspace@user/nspace)
[16:16:32] *** Quits: _zipper (~zipper@vps-a54fc387.vps.ovh.net) (Quit: Quit)
[16:17:01] *** Joins: audiocat (~audio@2603-8081-1800-1546-b8ca-8a53-a084-61fd.res6.spectrum.com)
[16:17:36] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 245 seconds)
[16:18:26] *** Quits: tuck (~lightstor@user/tuck) (Ping timeout: 245 seconds)
[16:18:30] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[16:20:56] *** Quits: gulzar (~gulzar@123.201.116.103) (Ping timeout: 245 seconds)
[16:22:28] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[16:22:52] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:23:56] *** Joins: gulzar (~gulzar@123.201.116.103)
[16:25:07] *** Joins: pycurious (~Adium@user/pycurious)
[16:26:10] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:26:22] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:27:06] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[16:27:23] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 264 seconds)
[16:29:44] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[16:29:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:30:01] *** Joins: akinode (~akinode@2a02:908:1394:cce0:97:9583:231f:daba)
[16:30:51] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[16:30:59] <akinode> hello, is anyone here who is good at thinking of algorhithms that has an idea how this problem could be solved? https://stackoverflow.com/questions/69594914/creating-an-efficient-algorhithm-to-find-all-the-concurrent-timeframes-in-a-list
[16:32:06] *** Joins: brickfat (~brickfat@user/brickfat)
[16:32:22] *** Joins: Nspace (~Nspace@user/nspace)
[16:32:43] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[16:32:47] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[16:33:23] <gulzar> Hi. I have a pandas dataframe like this https://paste.debian.net/1215635/. The important column are "chain" , "res_num" , "b_fact" . res_num can be repeated  between chains. eg: res_num 5 is present in chain A, B,C. What I  need is to get b_fact of chain+res_num combos, take average of all of these b_fact and replace average in place.  eg: for A_5 it will be (2.8+2.9+3.7)/3 = 3.1  so replace all three rows b_fact  with 3.1. and so on. Any ideas please
[16:34:04] *** Quits: Nspace (~Nspace@user/nspace) (Client Quit)
[16:34:35] *** Joins: wladimir (~doforlove@user/doforlove33)
[16:35:44] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[16:37:01] *** Quits: wladimir (~doforlove@user/doforlove33) (Client Quit)
[16:37:54] *** Joins: ethrl (~morty@user/doforlove33)
[16:39:58] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[16:40:36] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: leaving)
[16:41:49] *** Quits: michael_ (~michael@dslb-088-076-140-237.088.076.pools.vodafone-ip.de) (Remote host closed the connection)
[16:42:44] *** Joins: mcon (~Thunderbi@host-79-55-31-159.retail.telecomitalia.it)
[16:43:15] <raek> tsujp: which OS do you use?
[16:43:28] <tsujp> why tsujp? Void Linux
[16:43:44] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[16:43:49] <tsujp> why raek ^
[16:44:38] <raek> if you install a package as non-root, then pip will put the executable in ~/.local/bin/ . Is that in your PATH?
[16:45:36] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[16:46:04] *** Joins: jess (~jess@libera/staff/jess)
[16:46:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:47:46] *** Joins: xiongxin (~quassel@113.116.33.28)
[16:48:30] <tsujp> it is yeah raek
[16:48:43] <tsujp> as in, it's in my PATH but there is nothing there from pip
[16:49:04] *** Quits: Snyp (~Snyp@49.207.212.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:49:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:50:56] <control> how can i replace " ".join(strings) to make a code run faster?
[16:51:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:52:35] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[16:52:51] <raek> tsujp: hmmm. what Location do you get if you run "pip show autopep8"?
[16:53:29] <tsujp> raek `/home/tsujp/.asdf/installs/python/3.9.7/lib/python3.9/site-packages`
[16:53:37] <tsujp> hmm maybe im missing an entry for asdf shims then
[16:54:46] <tsujp> got it, `asdf reshim` and now it shows up
[16:54:52] <raek> great!
[16:55:03] <mcon> I need to understand a bit better list comprehension (if they are pertinent). I have a  list of lists and I need to compute the maximum length of the sublists. my curremt code is something like: `count = 0;        for c in self._data:  count = max(count, len(c))` ... but it looks very un-pythonic.
[16:55:06] *** Joins: jasper_ (~user@styria.daemonized.org)
[16:55:13] <tsujp> thanks for the help raek
[16:57:36] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[16:57:52] <ColonelJ> mcon: it's really easy: max(len(l) for l in lists)
[16:58:02] *** Quits: ethrl (~morty@user/doforlove33) (Quit: WeeChat 3.0)
[16:59:35] <mcon> ColonelJ: Uhmmm... I see. That works because `max()` accepts an iterable. Thanks.
[17:00:21] *** Joins: ethrl (~morty@user/doforlove33)
[17:00:41] *** Quits: defiant (~defiant@user/defiant) (Ping timeout: 264 seconds)
[17:00:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:01:58] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:45] *** Joins: defiant (~defiant@user/defiant)
[17:05:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 245 seconds)
[17:05:58] *** Joins: aknot (~aknot@2603:900a:1503:17bb:36d9:d30e:234a:99ca)
[17:06:25] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:06:30] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[17:06:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:07:28] *** Joins: wyclif (~wyclif@user/wyclif)
[17:07:45] *** Quits: gulzar (~gulzar@123.201.116.103) (Quit: Konversation terminated!)
[17:07:51] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[17:09:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:10:15] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 260 seconds)
[17:11:25] *** Joins: fikran (~fikran@user/fikran)
[17:12:02] *** Joins: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com)
[17:12:10] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[17:12:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:12:57] *** Joins: wyclif (~wyclif@user/wyclif)
[17:13:35] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 264 seconds)
[17:15:26] *** Quits: control (~v1@user/control) (Quit: leaving)
[17:15:52] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[17:17:47] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[17:17:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:18:21] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[17:18:28] *** Joins: wyclif (~wyclif@user/wyclif)
[17:18:50] *** Quits: src (~src@user/src) (Quit: Leaving)
[17:19:09] *** Joins: src (~src@user/src)
[17:21:00] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:21:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[17:21:17] *** Joins: Stella (aoei@nethackscoreboard/aoei)
[17:21:21] <Stella> hai thar
[17:21:58] *** Quits: maromau (~mauro@151.62.228.166) (Quit: Konversation terminated!)
[17:22:10] *** Quits: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[17:22:36] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[17:22:41] *** Joins: brnwx (~brnwx@cpe-74-71-226-69.nyc.res.rr.com)
[17:23:09] *** Joins: brnwx_ (~brnwx@cpe-74-71-226-69.nyc.res.rr.com)
[17:23:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:23:51] <Stella> do y'all have any nice python book recs for the hacker who can already code pretty complex projects in python,
[17:23:59] *** Joins: wyclif (~wyclif@user/wyclif)
[17:24:02] <Stella> but realises there's still A LOT she don't know about python
[17:25:44] <Stella> i guess im lookin for somethin relatively advanced and broad in scope
[17:25:49] <Stella> not necessarily beginner book
[17:25:51] <Stella> idk
[17:27:19] *** Quits: brnwx (~brnwx@cpe-74-71-226-69.nyc.res.rr.com) (Ping timeout: 268 seconds)
[17:29:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:29:31] *** Joins: wyclif (~wyclif@user/wyclif)
[17:30:17] <ColonelJ> akinode: I wrote a program that does it https://bpa.st/L3AA let me know if you have any question
[17:30:30] *** Joins: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com)
[17:30:43] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:30:47] *** Parts: tsandstr (~user@nat-130-132-173-11.central.yale.edu) (Killed buffer)
[17:30:58] <akinode> ColonelJ I will take a look, thanks for replying
[17:30:59] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 264 seconds)
[17:32:00] *** Joins: dontyouloveshort (~dontyoulo@ip5f5bc188.dynamic.kabel-deutschland.de)
[17:32:02] <dontyouloveshort> hi
[17:32:39] <dontyouloveshort> cursor.execute("SELECT id FROM programs WHERE name =?", (programname))       <-      the right syntax to use near '?' at line 1               why?
[17:32:47] *** Quits: audiocat (~audio@2603-8081-1800-1546-b8ca-8a53-a084-61fd.res6.spectrum.com) (Ping timeout: 264 seconds)
[17:33:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[17:33:28] <dontyouloveshort> this one works:   cursor.execute("SELECT id FROM approved_connections where comment=? and source=? and destination=? and protocol=?", (comment, source, destination, protocol))
[17:34:05] <ColonelJ> dontyouloveshort: I think you need a comma to make it a tuple, so (programname,)
[17:34:34] <dontyouloveshort> correct
[17:34:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:35:01] *** Joins: wyclif (~wyclif@user/wyclif)
[17:35:35] *** Joins: Laibsch (~leggewie@93.152.184.249)
[17:35:55] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:38:13] <mcon> ColonelJ: actually your solution does not work in the special case where `lists` is empty (I would like to get a `0` in that case). Any further hint?
[17:38:54] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[17:39:07] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:d6b4:e384:6135:1552) (Quit: Konversation terminated!)
[17:39:22] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[17:39:24] *** Joins: Nspace (~Nspace@user/nspace)
[17:40:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:40:33] *** Joins: wyclif (~wyclif@user/wyclif)
[17:43:02] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:43:08] *** Quits: Nspace (~Nspace@user/nspace) (Client Quit)
[17:43:29] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:44:06] *** Joins: sincorchetes (~Srain@246.red-79-146-32.dynamicip.rima-tde.net)
[17:44:36] <jinsun> mcon: max(..., default=0)
[17:45:26] <redgloboli> hi, i'm new to python and programming in general. I'm trying to read some data from a mssql database which is working so far, but i don't get why pyodbc/my_script is not keeping the GROUP BY. Maybe someone in here has some thoughts about this. my script is here: https://bpa.st/M7AA
[17:45:32] *** Joins: eem (~eem@user/eem)
[17:46:22] <mcon> jinsun: Thanks.
[17:46:51] *** Quits: ethrl (~morty@user/doforlove33) (Read error: Connection reset by peer)
[17:47:36] *** Quits: montxero (~user@123.208.58.133) (Remote host closed the connection)
[17:48:39] *** brnwx_ is now known as brnwx
[17:48:42] <sincorchetes> Hi, I've created a script in Python that's send a password with pexpect. But It's does not work. https://nekobin.com/woyohoyebe I don't understand.
[17:49:42] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:50:37] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:51:03] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:53:02] *** Joins: rsx (~dummy@ppp-188-174-157-165.dynamic.mnet-online.de)
[17:54:31] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[17:56:34] *** Joins: akk (~akk@75.161.146.115)
[17:56:57] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[17:57:08] *** Quits: Karyon_ (~Karyon@user/karyon) (Quit: Good bye)
[17:57:24] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[17:57:52] *** Joins: srhm (~srhm@user/srhm)
[17:58:37] *** Joins: Karyon (~Karyon@user/karyon)
[18:01:35] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[18:01:59] *** Quits: dontyouloveshort (~dontyoulo@ip5f5bc188.dynamic.kabel-deutschland.de) (Quit: Leaving)
[18:02:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[18:03:14] *** Joins: dontyouloveshort (~dontyoulo@185.181.10.29)
[18:03:37] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:03:40] *** Joins: semeion (~semeion@user/semeion)
[18:04:01] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[18:09:32] *** Quits: xiongxin (~quassel@113.116.33.28) (Read error: Connection reset by peer)
[18:09:57] *** Joins: xiongxin (~quassel@113.116.224.79)
[18:10:31] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[18:10:57] *** Joins: tuck (~lightstor@user/tuck)
[18:12:14] *** Joins: punkgeek (~punkgeek@151.245.157.114)
[18:14:55] <punkgeek> I want to access the server to run the python script code through ssh. What tools can I use?
[18:15:16] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:16:57] <InPhase> punkgeek: An ssh client?
[18:17:06] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[18:17:49] <InPhase> punkgeek: On a good OS, this is just done by typing in the terminal, ssh username@hostname
[18:17:50] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[18:17:53] <punkgeek> No i'm not search for a ssh client like spur
[18:18:10] <ChrisWarrick> okay, what are you looking for then?
[18:18:44] <punkgeek> something lik this: https://github.com/tomerfiliba-org/rpyc
[18:18:52] <punkgeek> which use ssh protocl
[18:19:01] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:19:07] <ChrisWarrick> punkgeek: why ssh in particular?
[18:20:06] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[18:20:19] *** Joins: Karyon (~Karyon@user/karyon)
[18:20:19] <InPhase> punkgeek: ssh can run commands instead of a shell when those commands are placed into the command line for it.  See the man page for ssh for details.  Alternatively, you can leave a server process running and open an ssh tunnel that allows two processes to communicate through the ssh tunnel.
[18:21:08] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:21:15] <InPhase> punkgeek: That ssh tunnel approach works like any other network connection, routing traffic directly from one end to the other.
[18:23:13] <punkgeek> For example, I have a python script. I want to run this script on the remote machine. however, I can have access only through ssh. But it is not a good way to upload the script into the machine and run it. So I'm searching for a way that I can run the script on the remote machine without uploading it.
[18:24:49] *** Joins: kosh (~kosh@user/kosh)
[18:24:56] *** Joins: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce)
[18:24:56] <ChrisWarrick> punkgeek: ssh whatever python - < myscript.py
[18:25:01] *** Quits: Karyon (~Karyon@user/karyon) (Client Quit)
[18:25:14] *** Joins: Karyon (~Karyon@user/karyon)
[18:25:37] <punkgeek> No I don't want to use CLI or os tools
[18:26:01] *** Quits: stockholm (~Andreas@p200300d2c72b7e00500fc1b050d6deb4.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:26:31] <ChrisWarrick> why not?
[18:26:54] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[18:27:07] <punkgeek> Because I want to run the script by php
[18:27:27] <ChrisWarrick> by php?
[18:27:53] <ChrisWarrick> how is php involved in running a python script through ssh?
[18:28:12] *** Joins: Naan (~naan@user/naan)
[18:28:42] *** Quits: nicode (~nic@2607:f2c0:93bd:8400:2df4:e232:663d:7638) (Quit: WeeChat 2.8)
[18:29:07] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:29:09] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[18:30:16] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-9009-f260-44a7-6529.fixed6.kpn.net) (Remote host closed the connection)
[18:30:59] *** Quits: y1n (~y1n@91.141.48.199.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[18:31:32] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-b1bf-d5d1-5dbe-b2b8.fixed6.kpn.net)
[18:31:55] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:33:43] *** Quits: sincorchetes (~Srain@246.red-79-146-32.dynamicip.rima-tde.net) (Remote host closed the connection)
[18:34:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[18:36:25] <foo> Note to self: pdb'ing my way through async code isn't too friendly
[18:36:25] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:36:57] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:39:59] *** Quits: aknot (~aknot@2603:900a:1503:17bb:36d9:d30e:234a:99ca) (Ping timeout: 264 seconds)
[18:43:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:43:58] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:44:21] *** Joins: Nspace (~Nspace@user/nspace)
[18:44:34] *** Joins: wyclif (~wyclif@user/wyclif)
[18:46:41] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[18:46:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[18:48:46] *** Joins: fikran (~fikran@user/fikran)
[18:48:47] *** Joins: nomic (~nomic@185.217.117.88)
[18:49:20] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[18:49:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:50:04] *** Joins: wyclif (~wyclif@user/wyclif)
[18:50:08] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:50:27] <foo> Trying to test some asyncio code in ipython. Getting this: RuntimeError: There is no current event loop in thread 'MainThread'. *investigates
[18:51:16] *** Quits: The_Jag_ (~The_Jag@host-80-180-125-109.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[18:51:34] <foo> loop = asyncio.new_event_loop(); asyncio.set_event_loop(loop) worked
[18:51:38] <ferros> I'm curious what punkgeek is trying to do but I'm also scared to ask
[18:53:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[18:53:37] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:54:00] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[18:54:44] *** Quits: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce) (Quit: Leaving)
[18:55:09] <ede> i'm curious how code is meant to run on a machine in which it's not present.
[18:55:16] *** Parts: mcon (~Thunderbi@host-79-55-31-159.retail.telecomitalia.it) ()
[18:55:37] * ChrisWarrick thinks malware
[18:56:10] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[18:57:39] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[18:57:52] *** Quits: talismanick (~talismani@76.78.246.30) (Ping timeout: 252 seconds)
[18:59:09] <ede> i think the relevant part on the GH page linked is “A screenshot of a Windows client connecting to a Linux server.”
[18:59:51] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:00:05] <ede> so first of all the nature of ”the server” from the initial sentence would need some clarification.
[19:02:07] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 265 seconds)
[19:02:11] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 264 seconds)
[19:03:54] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[19:04:16] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[19:04:37] *** Joins: The_Jag (~The_Jag@host-79-35-46-54.retail.telecomitalia.it)
[19:04:56] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[19:05:57] *** Joins: lidless (uid523173@id-523173.tinside.irccloud.com)
[19:08:49] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[19:10:39] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[19:13:44] *** Joins: kexec (~kexec@user/kexec)
[19:15:33] *** Quits: xiongxin (~quassel@113.116.224.79) (Read error: Connection reset by peer)
[19:16:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:18:02] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:18:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[19:19:46] *** Quits: sirn (~sirn@user/sirn) (Remote host closed the connection)
[19:21:29] *** Joins: sirn (~sirn@user/sirn)
[19:22:44] *** Joins: nunggu (q@gateway/vpn/protonvpn/nunggu)
[19:24:20] *** Joins: xiongxin (~quassel@113.116.33.28)
[19:24:40] *** Quits: sirn (~sirn@user/sirn) (Client Quit)
[19:26:15] <punkgeek> I'm searching for a way to tunnel my python script through ssh to the remote machine and run the python script.
[19:26:26] *** Joins: sirn (~sirn@user/sirn)
[19:26:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:27:50] *** Joins: wyclif (~wyclif@user/wyclif)
[19:29:03] *** Quits: brnwx (~brnwx@cpe-74-71-226-69.nyc.res.rr.com) (Quit: Leaving)
[19:29:12] <ferros> That would not require PHP punkgeek
[19:29:37] <ramblebamble> punkgeek, `cat script.py|ssh server "cat|python" ??
[19:29:52] <nunggu> punkgeek: something like this? cat script.py | ssh user@host python3
[19:30:06] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:2d92:73f7:d59c:e482) (Read error: Connection reset by peer)
[19:30:13] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[19:30:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:30:34] <nunggu> ramblebamble: what coincidence that the script name on both our mind is script.py
[19:30:45] <ramblebamble> yes eerie
[19:31:00] <ramblebamble> but you know what they say. greate minds think alike :D
[19:31:11] <ChrisWarrick> (and you both had a useless use of cat!)
[19:31:24] <ramblebamble> nope only me
[19:32:05] <ramblebamble> nunggu's snippet is more efficiant that way, I have to admit
[19:32:49] <ramblebamble> punkgeek, FYI that feature of ssh allows you to do all sort of funky things, from tar-pipes to streaming entire databases across environments,Ansible utilizes this heavily
[19:33:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:33:13] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Remote host closed the connection)
[19:33:40] *** Joins: wyclif (~wyclif@user/wyclif)
[19:33:58] *** Joins: Barones (~Barones@2804:7f3:8987:c42f:e519:2999:4571:c6ce)
[19:34:20] <nunggu> ChrisWarrick: fine, let  me try again: ssh user@host python3 < script.py
[19:35:28] <ramblebamble> I never new that was possible as well nice
[19:35:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[19:35:56] *** Quits: rsx (~dummy@ppp-188-174-157-165.dynamic.mnet-online.de) (Quit: rsx)
[19:36:03] *** Joins: AStorm (astralstor@bc01n02.hswaw.net)
[19:36:32] <jinsun> ChrisWarrick: wrote that an hour ago :D
[19:36:32] <AStorm> hello, does anyone know what the "fkiss" module is and where it comes from?
[19:36:39] <AStorm> has something fortran related and termcolor in it
[19:36:54] *** Joins: stockholm (~Andreas@p200300d2c72b7e00500fc1b050d6deb4.dip0.t-ipconnect.de)
[19:38:22] *** Quits: death916 (~death916@user/death916) (Ping timeout: 265 seconds)
[19:38:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:39:09] *** Joins: wyclif (~wyclif@user/wyclif)
[19:39:32] <jinsun> AStorm: this maybe https://github.com/abinit/abinit/tree/master/fkiss
[19:39:50] <AStorm> huh
[19:40:05] <AStorm> honestly I should kick them for removing it from release package
[19:41:28] <AStorm> I am also a bit miffed that the dev is done on login-only gitlab server
[19:42:38] *** Quits: xiongxin (~quassel@113.116.33.28) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:43:15] *** Joins: Auron (~Auron956@user/auron)
[19:44:03] *** Joins: Enitin (~enitin@5.180.62.232)
[19:47:50] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:2d92:73f7:d59c:e482)
[19:49:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:50:19] *** Joins: wyclif (~wyclif@user/wyclif)
[19:50:54] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[19:51:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:51:41] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[19:51:49] *** Joins: vimart (~vimart@85.255.233.156)
[19:53:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:55:31] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[19:55:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:55:59] *** Joins: wyclif (~wyclif@user/wyclif)
[19:56:11] *** abc_ is now known as zwindl
[19:56:23] <Payam> what http/request library do you use for async operations?
[19:56:29] <Payam> xhttp or aiohttp?
[19:58:27] <jinsun> xhttp? or httpx?
[19:58:41] <Payam> one of them. I misspell all the time
[19:59:10] <jinsun> I've seen httpx recommended more often here
[19:59:50] <jinsun> at my work though mostly people use aiohttp or just don't do async at all and use requests
[19:59:51] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:00:10] <Payam> correct
[20:00:14] <Payam> okey I undrestand
[20:00:33] <WhyNotHugo> I'm pushing to PyPI a package where `project_url` is being rejected as invalid. I think it's due to using a non-https URL. Where's the source code for PyPI so I can check?
[20:00:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:01:32] *** Joins: wyclif (~wyclif@user/wyclif)
[20:01:42] *** Quits: dhanesh (~Dhanesh@117.211.157.56) (Quit: Leaving)
[20:02:45] <jinsun> WhyNotHugo: https://github.com/pypa/warehouse
[20:03:05] <WhyNotHugo> jinsun: Thanks!
[20:03:47] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:05:00] *** Joins: bloody (~bloody@user/bloody)
[20:05:10] *** Joins: Telvana (~capo@user/telvana)
[20:06:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:06:27] <WhyNotHugo> Hmmm, it seems that only https/https URLs are allowed. I'm trying to add a link to IRC for my project, wonder if that would be an acceptable change to warehouse.
[20:06:55] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[20:07:04] *** Joins: wyclif (~wyclif@user/wyclif)
[20:10:05] <ChrisWarrick> I wouldn’t consider that acceptable, the URL is meant to be of a website or some other "static" resource, not a chat
[20:10:39] <rakoon> In python 3.10 was added the itertools.pairwise. Why didn't they make it to accept a 'n' argument to create more than pairs, like triples etc? Just wondering
[20:11:13] <rakoon> I mean we can use zip(iterable, iterable[1:]) already :|
[20:11:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:12:36] *** Joins: wyclif (~wyclif@user/wyclif)
[20:14:59] *** Joins: subopt (~subopt@2603-8081-2302-459a-440b-995f-5377-b6c9.res6.spectrum.com)
[20:15:03] *** subopt is now known as _subopt
[20:16:39] <aphysically> jinsun: the rest of my PRs to rich were merged :); that will fix pyright errors for downstream users and I also fixed the vast majority of pyright errors internal to the project
[20:16:39] <jinsun> rakoon: something like this? https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.windowed
[20:17:02] <jinsun> aphysically: oh we entered at the same time :D
[20:17:13] <aphysically> :)
[20:17:19] *** Joins: jazzy (~jaziz@user/jaziz)
[20:17:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[20:18:03] <WhyNotHugo> ChrisWarrick: Oh, I opened a ticket for that. I'm not sure why an IRC channel is so unacceptable as a support channel, but maybe a better error than "Use valid URL" would be good to describe this?
[20:18:07] *** Joins: wyclif (~wyclif@user/wyclif)
[20:18:08] <aphysically> the remaining pyright errors are possibly unbound ones which I can or should look into individually or really weird ones
[20:18:33] <ChrisWarrick> WhyNotHugo: it’s not meant to be the URL of a support channel
[20:18:50] <aphysically> but it's no longer an unmanageable mess of pyright errors
[20:19:21] <jinsun> nice so now you are pyright strict mode complaint? (or your code was already complaint? andyou're just fixing rich for fun)
[20:19:35] *** Quits: gitly2 (~gitly@148.252.128.166) (Ping timeout: 264 seconds)
[20:19:37] <punkgeek> Sorry guys, I have explained the issue clearly on this script. please check: https://paste.ofcode.org/b2x6hpgUNM4kBHQaEeNtqQ
[20:20:01] *** Quits: noyb (~noyb@user/noyb) (Quit: leaving)
[20:20:02] <jinsun> s/complaint/compliant
[20:20:08] <WhyNotHugo> ChrisWarrick: Why not? There's some pretty free form examples in the documentation: https://packaging.python.org/guides/distributing-packages-using-setuptools/#project-urls
[20:20:12] *** Joins: noyb (~noyb@user/noyb)
[20:20:18] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:20:20] <jinsun> very different meaning otherwise :D
[20:20:22] <WhyNotHugo> Is having a non-http support channel so... bad somehow?
[20:21:03] <Stella> yo, asked earlier but didn't get any reply so far: anyone got any nice recs for a.. let's say "second book" of Python
[20:21:08] *** Quits: kexec (~kexec@user/kexec) (Quit: Client closed)
[20:21:09] *** Joins: gitly2 (~gitly@185.69.144.188)
[20:21:12] <Stella> lookin for something a lil more advanced than your "be
[20:21:19] <Stella> "beginners" or "intro to" python
[20:22:37] *** Joins: punkgeek- (~punkgeek@5.121.237.134)
[20:23:14] <aphysically> jinsun: yeah, the rich bug actually threw an error for all rich users using table or live even in non-strict mode
[20:23:20] <punkgeek-> Sorry guys, I have explained the issue clearly on this script. please check: https://paste.ofcode.org/b2x6hpgUNM4kBHQaEeNtqQ
[20:23:36] <aphysically> but yes after rich pushes a new release I'll be pyright strict compliant and mypy strict compliant (with no checks disabled in either)
[20:24:02] <MacGyver> WhyNotHugo: I agree with you, but you could consider in the meantime to link through something like web.libera.chat.
[20:24:09] <aphysically> and I fixed like ~80% of the non-strict pyright complaints in the rich codebase
[20:24:23] *** Quits: punkgeek (~punkgeek@151.245.157.114) (Ping timeout: 264 seconds)
[20:24:25] <bjs> Stella: once you have the basics most resources will specialise,  maybe the closest is some kind of reference text of all of Python (e.g. docs.python.org or something)
[20:24:27] <aphysically> either by reporting bugs to pyright which were fixed or adjusting the rich codebase in PRs
[20:24:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[20:24:36] <MacGyver> WhyNotHugo: Not everyone has an IRC client configured to open irc: URIs, and those who do can easily work backwards from (the text of) such a link.
[20:25:10] <bjs> Stella: I think Learning Python by Mark Lutz (the O'Reily one) i've heard decent things about although it's old and I'm not sure how up-to-date the recent editions are
[20:25:16] <Stella> bjs: hmmm, dunno. I of course use ref docs but a reference resource isn't quite what im lookin' for
[20:25:34] <Stella> O'Reilly 'learning python' might be a good thing
[20:25:45] <WhyNotHugo> MacGyver: Hm, true. I guess I'm mostly targeting the "IRC channel" link to IRC users and not to those who don't have IRC. I find that people who click on a web link ask a question and leave before being answered (at least on low-traffic channels).
[20:25:45] <Stella> esp. if it is python3 based
[20:25:51] *** Joins: wyclif (~wyclif@user/wyclif)
[20:26:37] <MacGyver> WhyNotHugo: Well, sure, that happens, but also doesn't really require gatekeeping the support channel.
[20:27:00] <MacGyver> If anything, it's one more reason to go through a static http-page with a blurb explaining the need to stick around.
[20:27:17] <bjs> Stella: i'm not really sure what you're looking for then
[20:27:32] <WhyNotHugo> MacGyver: True, true. I didn't analised the "gatekeeping" aspect of it.
[20:27:48] <WhyNotHugo> Guess it's best to continue rejecting non-http URLs, though likely indicating why they're being rejected.
[20:28:26] <MacGyver> Well, I don't necessarily agree it should be *rejecting* the URLs outright. But I also think you may want to consider the approach via a web client or a landing page.
[20:28:46] <aphysically> I might work on the remaining rich incompatibilities with pyright, but some of them are seriously weird
[20:29:36] <Stella> bjs: something more in-depth than an intro but not reference documentation
[20:29:45] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Quit: Leaving)
[20:30:21] *** Quits: reset (~reset@user/reset) (Read error: Connection reset by peer)
[20:30:59] <Stella> Learning Python O'Reilly book is prolly good
[20:31:02] <Stella> i will check that out
[20:31:12] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[20:31:29] <Stella> thanks!
[20:31:32] <akk> Stella: I had Learning Python when I was learning, and I found it mostly tedious and unhelpful, too basic.
[20:32:40] <MacGyver> Isn't this sort-of what "Learning Python the hard way" is supposed to be?
[20:32:46] <akk> Stella: humblebundle.com sometimes has deals on books with titles like "Expert Python Programming", "Mastering Python" etc., though they don't have any python bundles running right now.
[20:33:09] <Stella> akk: oic
[20:33:25] <MacGyver> But I'm not sure where "basic" ends and "less basic" begins.
[20:33:40] <akk> Stella: In fact, though I didn't find the first half of the book useful, the second half was a wonderful clear language reference
[20:33:48] <Stella> :o
[20:33:56] <akk> Stella: ... which I later figured out was just an exact copy of the online docs on python.org :)
[20:34:02] <Stella> LOL
[20:34:04] <Stella> ok
[20:34:40] <Stella> so yeah Learning Python possibly not quite what I was after... I will maybe keep an eye out for stuff on humblebundle or just google titles like 'mastering python' and see what i find
[20:34:45] <MacGyver> I also find that Python's reference documentation does double duty as a "detailed explanation of these things"
[20:35:05] <Stella> well that's good
[20:35:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:35:42] *** Joins: wyclif (~wyclif@user/wyclif)
[20:36:15] <Stella> so one of the things i just learnt today which made me feel there are some gaps I need to fill in my knowledge/understanding came about because of a discussion about truthiness and the 'is' and 'is not' operators / identity vs equality
[20:36:57] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[20:37:00] <Stella> because this was stuff i didn't know about
[20:37:46] *** Joins: imp (~imp@192-141-191-231.alternativaip.net.br)
[20:37:49] *** Joins: Tempesta (~Tempesta@user/tempesta)
[20:38:07] *** Pixi_ is now known as Pixi
[20:38:22] <Stella> e.g. i had nullable integer type (backed by a database) in a django app and a friend told me i can or should check foo is not None rather than not foo if i want to distinguish between the uninitialized case vs foo is equal to 0 which would also be falsey
[20:38:35] <bjs> MacGyver: LPTHW is supposed to take you from "never having touched a computer" to somewhat wishing you never had :P
[20:38:40] <Stella> and another thing i didnt know about was that containers are falsey if empty
[20:38:52] <Stella> so you can just go if mylist: # do something with list
[20:38:59] <MacGyver> bjs: Well software *was* a mistake, so...
[20:39:02] <bjs> it's probably not what Stella had in mind,  and well, in my opinion generally not a great resource in general
[20:39:08] <Stella> rather than checking for len(list) == 0 or != 0
[20:39:10] <bjs> Stella: the tutorial is good and covers a lot of that stuff
[20:39:25] <Stella> bjs: ok nice
[20:39:33] <Stella> ty
[20:39:55] <bjs> but afaik there is no "I'm a programmer, teach me Python" book.  That's roughly what the tutorial tries to be,  but inevitably no one resource *can* be
[20:39:57] <Stella> i've read bit sof i the tutorial but not the whole way through so maybe going through that properly is a good idea
[20:40:12] <rakoon> jinsun: yes exactly
[20:40:46] <Stella> i mean, yea, but its liek, i already know a fair bit of python and have worked on relatively complex projects with it
[20:40:54] <Stella> while at the same time realising there are still some gaps here and there to fill
[20:41:09] <bjs> Stella: is Python your first language?
[20:41:13] <Stella> no
[20:41:29] <Stella> my first langs were mostly C and Perl back in the early naughties
[20:41:45] <Stella> I also am reasonably proficient with Rust and can get by in Java
[20:41:49] <akk> Stella: I understand what you're looking for, but I don't know of a good answer. I've been picking up stuff like that very slowly, by things like going to pycon or following python blogs or podcasts.
[20:41:57] <Stella> akk: yeah ok fair
[20:42:19] <Stella> django's tutorials and how-to/ref docs are pretty good too ofc
[20:42:28] <Stella> and have been quite helpful with what im doing now which is a django project
[20:42:47] <akk> Stella: Going to pycon was maybe the biggest help -- some talks there really opened my eyes and made me realize how much I didn't know, and wanted to, about Python.
[20:42:55] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 252 seconds)
[20:42:56] <Stella> :o
[20:42:58] <Stella> nice
[20:43:19] *** Joins: Akuli (~Akuli@82-203-166-158.bb.dnainternet.fi)
[20:43:19] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[20:43:34] <akk> Stella: Which is unfortunate because I generally learn better from printed tutorials I can follow at my own pace, not videos/live talks, so a book would really be better for me.
[20:43:35] <nunggu> i started with python when i encountered a bug on a python script and start deleting line one by one until i know what the problem was
[20:43:57] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Quit: nyaa~)
[20:43:58] <Stella> akk: yea i get that, altho if a talk is really good i find they can be really valuable
[20:44:08] <Stella> imho the problem is a LOT of speakers are not very good at presenting
[20:44:22] <jinsun> rakoon: well itertools docs themselves recommend more-itertools for extra stuff, so you could install it and use the windowed (and you can use it with python versions below 3.10 also)
[20:44:26] <Stella> i saw a great pycon talk from this dude who was involved in django and stuff
[20:44:29] <Stella> all about how to write good documentation
[20:44:32] <Stella> it was a great talk
[20:44:49] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[20:45:04] <KirkMcDonald> I originally learned a lot about what makes Python tick by prying apart the C API.
[20:45:09] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:8eb7:32cd:5358:1e44)
[20:45:13] *** Parts: henistein (~henistein@2001:8a0:fd33:b801:8eb7:32cd:5358:1e44) ()
[20:45:19] <akk> Stella: I went to one pycon tutorial years ago where the presenter basically typed stuff into the python repl to explore things like how variables are stored, while we all followed along on our own machines ... it was great.
[20:45:28] <Stella> akk: neat!
[20:45:34] <Stella> interactive stuff is super cool
[20:45:41] <jinsun> rakoon: but wanting it in the stdlib itertools also seems reasonable, you can try opening an issue at https://bugs.python.org/ and submitting a pull request for it on github
[20:45:46] <Stella> probably hard to do it well, but definitely very valuable if done well
[20:45:57] <akk> Stella: So now sometimes when I get some spare time, I try just exploring stuff in the python console.
[20:46:02] <Stella> akk: this is the talk i was thinking about btw https://www.youtube.com/watch?v=t4vKPhjcMZg
[20:46:09] <Stella> akk: yeah that's often very helpful to me as well
[20:46:20] <akk> Yeah, it must be hard to do a tutorial like that and make sure everybody keeps up and understands.
[20:46:21] <Stella> useful for quick tests and such
[20:46:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[20:46:39] *** _subopt is now known as subopt
[20:46:57] *** Joins: Atque (~Atque@user/atque)
[20:47:08] <Stella> akk: exactly. i was at a similar tutorial recently and it was really hard to keep up after i missed a few key commands at the beginning
[20:47:42] <Stella> which imo poor pacing on the part of the presenter
[20:48:45] *** Joins: Pickchea (~private@user/pickchea)
[20:49:00] *** morrigan_ is now known as morrigan
[20:50:15] *** Joins: georgios (~georgios@user/georgios)
[20:51:06] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:51:55] * aphysically just noticed the - in -x is its own operator
[20:52:15] <aphysically> I guess that makes sense, it makes the expression I was trying to do simple anyway
[20:52:17] <bjs> aphysically: yes, https://docs.python.org/3/reference/expressions.html#unary-arithmetic-and-bitwise-operations
[20:52:25] <Stella> akk: i dooooo also know a guy in my city who is/was involved in python meetups
[20:52:26] <bjs> there is also +x and ~x
[20:52:37] <Stella> just texted him to ask if there's anything int he pipeline
[20:53:02] * aphysically still doesn't know what the ~ means in version (440?) strings
[20:53:08] <aphysically> every tiem I see it I mean to look it up and then I don't
[20:53:59] <jinsun> aphysically: yup pep 440, https://www.python.org/dev/peps/pep-0440/#compatible-release
[20:55:31] *** Joins: dMartian (~dMartian@2a0d:5600:24:a80::a77d)
[20:55:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[20:58:07] *** Joins: fikran (~fikran@user/fikran)
[20:59:27] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[21:00:00] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[21:01:12] <akk> Stella: Oh, the python mailing list sometimes has useful stuff, too. Though a lot of the traffic is people asking everybody to do their homework for them.
[21:01:13] *** Joins: Bakunin (~Lindis@user/lindis)
[21:01:26] <Stella> LOL
[21:01:31] <Stella> classic
[21:01:36] *** Quits: ST47 (~ST47@wikimedia/st47) (Remote host closed the connection)
[21:01:40] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[21:02:00] *** Joins: nomic (~nomic@185.217.117.88)
[21:02:16] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:2d92:73f7:d59c:e482) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:02:56] <akk> And Windows users saying "I installed Python, why can't I run it?"
[21:03:30] <nedbat> "I installed module xyz, but I can't import it"
[21:03:44] *** Joins: Laibsch (~leggewie@93.152.184.249)
[21:03:57] *** Quits: punkgeek- (~punkgeek@5.121.237.134) (Read error: Connection reset by peer)
[21:07:13] *** Joins: punkgeek- (~punkgeek@151.245.157.114)
[21:07:44] <Roey> hey all!!!!!!
[21:07:47] <Roey> https://www.youtube.com/watch?v=vCLetdhswMg <-- really good!
[21:07:59] <Roey> mCoding - Which Python @dataclass is best? Feat. Pydantic, NamedTuple, attrs...
[21:08:24] <Roey> nedbat: ^
[21:09:57] <aphysically> when mypy does next release I can start using TypeAlias :^)
[21:10:03] <aphysically> no paramspec yet though :^(
[21:14:43] <nedbat> Roey: why did you point *me* at that video?
[21:14:56] *** Joins: plastico (~plastico@neomutt/plastico)
[21:16:37] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[21:17:30] *** Quits: n0n_b1n4ry_c0d3 (~n0b0dy@156.67.18.13) (Remote host closed the connection)
[21:18:14] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[21:18:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:19:05] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:21:45] *** Joins: whatsupdoc (~whatsupdo@148.64.18.218)
[21:21:50] <Roey> nedbat: because you're someone whom I've interacted before in this channel, and you happened to be chatting
[21:22:06] <nedbat> Roey: ok, no problem, i'm interested to see how people make these
[21:22:13] <Roey> and if I say anything about dataclass, I'd suspect that you or the other regulars here would immediately chime in with "but attrs"
[21:22:18] <Roey> nedbat: ah :) :)
[21:23:20] *** Joins: p-i- (~Ohmu@223.206.71.4)
[21:24:01] <nedbat> Roey: i know we can have our hot-buttons, but dataclasses vs attrs is not one of mine :)
[21:24:03] <p-i-> glob(f'{TEST_IMAGES_FOLDER}/*.jpg')  # This fetches all .jpg files in folder. But what if I have subfolder1/foo.jpg and sf2/bar.jpg? Is there a way to fetch *.jpg in all subfolders?
[21:24:11] <nedbat> Roey: just don't say you want a singleton class :) :)
[21:24:25] <Roey> lolol
[21:24:42] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[21:24:44] <Roey> OH
[21:25:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:25:02] <Roey> nedbat, there was a good story on Slashdot this morning about speeding up Python by changing the way that the GIL keeps track of stuff.
[21:25:10] <Roey> nedbat: 18x improvement in multi-threaded cases
[21:25:19] <nedbat> Roey: yes, that's big news these days. it sounds good.
[21:25:26] <Roey> ok, so you've seen it.
[21:25:47] <deniska> Roey: the real best dataclasses were normal classes we made along the way :)
[21:25:48] <Roey> that's wonderful that these kind of breakthroughs still happen, despite Python's maturiyt
[21:25:51] <aphysically> jinsun: ahah! some of these pyright errors are mypy errors too, mypy just didn't have the pygments typing package and rich had set it to treat all pygments stuff as Any
[21:25:58] <ColonelJ> p-i-: I think glob(f'{TEST_IMAGES_FOLDER}/**/*.jpg')
[21:26:00] <Roey> deniska: interesting thing to say :)
[21:26:38] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 265 seconds)
[21:26:48] <Roey> deniska: I'm ithing to see real-world use-cases of dataclass.  As in, I want to see how others are using it in their own code
[21:26:51] <p-i-> https://developers.slashdot.org/story/21/10/16/022256/proposed-change-could-speed-python-dramatically ... interesting!
[21:26:55] <Roey> I'm itching *
[21:26:58] <Roey> to see
[21:27:03] <Roey> that stuff.
[21:27:04] <Roey> yeah.
[21:27:18] <p-i-> Maybe they could throw in inline functions while they're at it 😝
[21:27:31] *** Joins: Klinda (~superleag@user/klinda)
[21:27:42] <p-i-> tx ColonelJ
[21:27:45] * p-i- tries that
[21:27:47] <deniska> Roey: well, fastapi uses pydantic for all the things
[21:27:52] <ColonelJ> p-i-: it seems you need to use recursive=True
[21:28:00] <aphysically> PEP 505 would be useful for this
[21:28:38] <Roey> deniska: regarding Pydantic, in that video, mCoding states, it's a very pointed library meant for parsing
[21:29:05] <jinsun> aphysically: ah, mypy complains about the missing types- package usually, but I guess rich somehow ended up disabling that?
[21:30:13] <aphysically> jinsun: yeah https://github.com/willmcgugan/rich/blob/22e95c9b10219eed0e679508348fe880477c7415/mypy.ini#L3
[21:31:17] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:32:22] <Roey> aphysically: thanks for the PEP 505 reference.  I looked it up.  It's adding a whole bunch of operators to the language, like "A ??= B" (assign B to A iff A is not None).  It just sounds alittle too terse for me
[21:32:25] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-c420-d162-78e2-1319.res6.spectrum.com) (Quit: Leaving)
[21:33:19] <aphysically> yeah, guido just posted to the ML a day or two ago saying he wants to see the steering council accept it so it will be interesting to see what happens
[21:33:46] <jinsun> aphysically: oh just ignore missing imports is enough to  silence that? I remembered differently, then it is more understandable, maybe the types-pygments didn't exist when they did that
[21:35:05] <jinsun> Roey: makes perfect sense if you used C# before https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/null-coalescing-operator
[21:37:31] <Roey> ok, so that's where the python devs got it from
[21:37:39] <Roey> gosh that C# page gets hairy quite fast
[21:37:53] <Roey> int? a = null;
[21:37:53] <Roey> int b = a ?? -1;
[21:38:09] *** Joins: Nspace (~Nspace@user/nspace)
[21:38:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[21:38:22] <Roey> Perl-ish behavior would suggest "a = b if c"
[21:38:28] <Roey> Perl-ish behavior would suggest "a = b if c else d
[21:38:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:38:47] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:39:29] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[21:39:53] <jinsun> `a ?? -1` is kinda like `a or -1` that you can already do in python
[21:40:31] <jinsun> (except that or chooses -1 for any falsy thing, not just None)
[21:40:50] <jinsun> more fun than ?? is .? https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/member-access-operators#null-conditional-operators--and-
[21:41:19] <jinsun> oh not .?, it is  ?.
[21:41:30] <jinsun> and ?[]
[21:41:47] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 264 seconds)
[21:42:38] *** Joins: ST47 (~ST47@wikimedia/st47)
[21:42:40] *** Quits: p-i- (~Ohmu@223.206.71.4) (Ping timeout: 260 seconds)
[21:43:33] <jinsun> helps a lot with deeply nested objects/dicts where there can be null anywhere
[21:43:46] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:44:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[21:45:31] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[21:45:46] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:45:55] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:46:54] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:46:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:47:21] <jinsun> PEP 505 and PEP 645 both should be accepted (or rejected) together I think, both have ? and both make python more like C#
[21:47:23] *** Joins: wyclif (~wyclif@user/wyclif)
[21:47:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:47:58] <Swayze> why are they introducing ";" as line ends
[21:48:01] <Swayze> hhhh
[21:48:05] *** Quits: m_tadeu (~quassel@bl5-182-86.dsl.telepac.pt) (Quit: No Ping reply in 180 seconds.)
[21:48:34] <Swayze> ja neee until that happens we've got nothing to worry about
[21:49:05] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:49:14] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[21:49:45] <jinsun> well you can already use semi-colons as line ends
[21:49:55] <jinsun> (but linters won't like that at all)
[21:51:54] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: quick everyone out of the universe)
[21:52:08] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:52:20] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[21:52:27] <tcsilver> "going nowhere fast I've reacehd the py max!"
[21:52:32] <tcsilver> it's too late
[21:52:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[21:52:40] <tcsilver> it's too late, I've reached the py max!
[21:52:49] <tcsilver> lol
[21:52:51] *** Joins: wyclif (~wyclif@user/wyclif)
[21:52:57] <tcsilver> lol hi wyclif
[21:53:19] *** Stella is now known as mermaid
[21:54:47] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:55:15] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9) (Remote host closed the connection)
[21:55:16] <bjs> Swayze: who are "they" ?
[21:55:37] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[21:55:51] <Swayze> the illuminati
[21:56:04] <Swayze> the lizard ppl
[21:56:10] <Swayze> the germans?
[21:56:14] <Swayze> anyone will do
[21:56:30] <tcsilver> what is the "py max" ? usher keeps singing about it.
[21:57:02] <bjs> Swayze: you can already end lines in Python with semicolon
[21:57:04] <bjs> if youw ant
[21:57:20] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[21:58:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:58:21] *** Joins: wyclif (~wyclif@user/wyclif)
[21:58:41] *** Quits: whatsupdoc (~whatsupdo@148.64.18.218) (Ping timeout: 256 seconds)
[21:59:16] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[21:59:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[21:59:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:01:03] *** Joins: ericzolf (~ericzolf@hsi-kbw-46-223-148-95.hsi.kabel-badenwuerttemberg.de)
[22:02:26] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[22:03:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:03:51] *** Joins: wyclif (~wyclif@user/wyclif)
[22:03:56] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[22:04:50] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 250 seconds)
[22:05:06] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[22:05:52] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[22:06:15] <aphysically> jinsun: some spurious "possibly unbound" in the rich codebase due to some usage being in parallel conditions again
[22:06:54] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Remote host closed the connection)
[22:08:25] *** Joins: whatsupdoc (~whatsupdo@148.64.18.132)
[22:08:35] <jinsun> aphysically: like your executor.submit thing?
[22:08:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:09:20] <aphysically> yeah, idk how receptive upstream will be to workarounds for that though
[22:09:23] *** Joins: wyclif (~wyclif@user/wyclif)
[22:09:39] *** Joins: pycurious (~Adium@user/pycurious)
[22:10:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[22:10:52] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:10:53] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[22:11:11] *** Quits: punkgeek- (~punkgeek@151.245.157.114) (Ping timeout: 264 seconds)
[22:11:17] *** Joins: punkgeek (~punkgeek@151.245.157.114)
[22:12:03] *** Quits: Enitin (~enitin@5.180.62.232) (Quit: Konversation terminated!)
[22:12:19] *** Joins: brickfat (~brickfat@user/brickfat)
[22:12:42] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 265 seconds)
[22:13:07] *** Quits: ericzolf (~ericzolf@hsi-kbw-46-223-148-95.hsi.kabel-badenwuerttemberg.de) (Ping timeout: 252 seconds)
[22:13:27] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[22:13:41] *** Joins: Milos (~Milos@user/milos)
[22:14:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:14:34] <jinsun> yeah if they don't run pyright theselves then they won't be too happy with that change alone I guess
[22:14:49] *** Joins: nomic (~nomic@185.217.117.88)
[22:14:53] *** Joins: wyclif (~wyclif@user/wyclif)
[22:15:04] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[22:15:07] <jinsun> do that with bunch of other typig fixes maybe
[22:16:01] <aphysically> they pulled one of my changes only making an adjustment for how literals are treated in pyright, idk we'll see
[22:17:05] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[22:18:55] *** Quits: AndrewYu (~andrew@user/andrewyu) (Remote host closed the connection)
[22:19:39] *** Joins: AndrewYu (~andrew@user/andrewyu)
[22:19:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:20:26] *** Joins: wyclif (~wyclif@user/wyclif)
[22:22:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[22:23:02] *** Joins: reset (~reset@user/reset)
[22:24:08] *** Quits: whatsupdoc (~whatsupdo@148.64.18.132) (Quit: Client closed)
[22:24:38] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[22:25:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:25:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:25:57] *** Joins: wyclif (~wyclif@user/wyclif)
[22:26:36] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[22:27:03] *** Quits: fstd (~fstd@xdsl-78-35-82-134.nc.de) (Ping timeout: 265 seconds)
[22:28:32] *** Joins: magla (~gelignite@55d4f7e4.access.ecotel.net)
[22:28:36] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[22:28:53] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[22:29:14] *** Joins: JanC (~janc@user/janc)
[22:29:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:3c81:12c5:ede2:fb22) (Quit: Textual IRC Client: www.textualapp.com)
[22:30:09] *** Joins: slav0nic (slav0nic@python.su)
[22:30:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:31:28] *** Joins: wyclif (~wyclif@user/wyclif)
[22:32:26] *** Joins: Betal (~Betal@user/betal)
[22:34:51] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:36:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:36:40] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[22:36:59] *** Joins: wyclif (~wyclif@user/wyclif)
[22:39:12] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[22:40:56] <luke-jr> has anyone ever suggested a try: thing like lambda, but catching exceptions as a return value?
[22:41:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:42:31] *** Joins: wyclif (~wyclif@user/wyclif)
[22:42:57] <fakenullie> you can easily implement your own
[22:43:43] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[22:45:13] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[22:46:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:47:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:47:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:47:42] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Quit: Leaving.)
[22:48:02] *** Joins: wyclif (~wyclif@user/wyclif)
[22:48:25] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[22:51:18] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Excess Flood)
[22:51:45] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[22:52:22] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:52:34] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[22:53:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:53:34] *** Joins: wyclif (~wyclif@user/wyclif)
[22:55:42] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[22:56:01] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[22:56:37] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 268 seconds)
[22:56:43] *** Joins: ghosts3301 (~Guest9432@2a02-a458-57a-1-40ad-8d55-bbed-59a7.fixed6.kpn.net)
[22:57:07] <ghosts3301> Can I ask someone something about my python code?
[22:58:20] <ColonelJ> ghosts3301: just ask, don't ask to ask :)
[22:58:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:58:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:59:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:59:38] <nedbat> ghosts3301: post a link to the code, ask your question, and you will get responses!
[23:00:52] <ghosts3301> how do i make a link of my code? haha sorry im new to python; my code is in spyder
[23:01:31] <Swayze> copy and paste it in  https://bpa.st/+pytho
[23:01:33] <Swayze> as per the topic
[23:01:40] <nedbat> ghosts3301: https://openedx.atlassian.net/wiki/spaces/OXA/pages/158076804/How+to+use+a+pastebin
[23:01:46] *** Quits: tuck (~lightstor@user/tuck) (Quit: leaving)
[23:03:19] <ghosts3301> okayy hold on :)
[23:03:52] *** Quits: catdog2 (~quassel@2001:470:50f7:cdcd::cd1) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:03:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:04:16] *** Joins: catdog (~quassel@birdperson.tuxzone.org)
[23:04:37] *** Joins: wyclif (~wyclif@user/wyclif)
[23:04:38] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[23:05:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:05:40] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[23:06:07] *** Joins: AkechiShiro (~licht@user/akechishiro)
[23:06:22] *** Joins: maharshipatel (~maharship@2409:4041:261f:4a4f:30bb:ce61:e78d:521a)
[23:06:30] *** Joins: fstd (~fstd@xdsl-81-173-175-11.nc.de)
[23:07:28] *** Joins: fikran (~fikran@user/fikran)
[23:09:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:10:07] *** Joins: wyclif (~wyclif@user/wyclif)
[23:10:35] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:11:12] <aphysically> jinsun: wow really interesting typing problem in rich
[23:11:28] <aphysically> I'm thinking about maaaaybe bringing it up with pyright but I don't think it would be received well
[23:11:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:12:15] <aphysically> okay look at this try/except on the import https://github.com/willmcgugan/rich/blob/eb673d1204340738d3084ebc2e4c789a35a4e49b/rich/pretty.py#L27
[23:12:32] <aphysically> so _attr_module is either the module or none, now jump down to the function on line 63 of the file
[23:13:20] <aphysically> the function properly checks if its None, but the annotation confuses pyright because it still thinks it could be None despite the type: ignore
[23:13:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:13:47] *** Quits: maharshipatel (~maharship@2409:4041:261f:4a4f:30bb:ce61:e78d:521a) (Quit: Client closed)
[23:13:55] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Quit: Connection closed for inactivity)
[23:14:10] *** Joins: maharshipatel (~maharship@2409:4041:261f:4a4f:30bb:ce61:e78d:521a)
[23:14:35] <aphysically> I can assert the module is not None and this fixes the pyright error but it obviously can't work because the module *can* be None so this would throw a runtime error
[23:15:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:15:39] *** Joins: wyclif (~wyclif@user/wyclif)
[23:16:18] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:8eb7:32cd:5358:1e44)
[23:18:09] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:18:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:20:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:20:39] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:21:10] *** Joins: wyclif (~wyclif@user/wyclif)
[23:25:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:25:41] *** Joins: _zipper (~zipper@vps-a54fc387.vps.ovh.net)
[23:26:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:26:22] *** Quits: _zipper (~zipper@vps-a54fc387.vps.ovh.net) (Client Quit)
[23:26:37] *** Quits: maharshipatel (~maharship@2409:4041:261f:4a4f:30bb:ce61:e78d:521a) (Quit: Client closed)
[23:26:42] *** Joins: wyclif (~wyclif@user/wyclif)
[23:28:16] <jinsun> aphysically: yeah the type ignore just shuts it up on that line, doesnt change how it infers the type
[23:29:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:29:32] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:8eb7:32cd:5358:1e44) (Quit: Client closed)
[23:29:41] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[23:29:56] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:8eb7:32cd:5358:1e44)
[23:30:53] <aphysically> idk a workaround here
[23:31:34] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:32:30] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[23:32:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:33:10] <aphysically> that's not just setting the return type to Any
[23:34:04] *** Joins: wyclif (~wyclif@user/wyclif)
[23:34:05] <aphysically> weirdly enough if I remove the return type annotation then pyright seems to infer one that's completely fine
[23:34:12] <jinsun> an ugly way is a # pyright comment
[23:34:24] <aphysically> those disable stuff on the entire file :\
[23:34:26] <aphysically> not ideal
[23:34:42] <jinsun> ah yes I forget always
[23:34:54] <jinsun> those input parameter types could be object instead of Any btw
[23:35:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:36:09] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:8eb7:32cd:5358:1e44) (Ping timeout: 256 seconds)
[23:36:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:36:46] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 252 seconds)
[23:37:08] <aphysically> yes I'm planning to make a pass on Any -> object in the entire project in a separate PR at some point
[23:37:24] <aphysically> or maybe in a general PR with typing changes that aren't addressing specific actual bugs
[23:37:47] *** Quits: dMartian (~dMartian@2a0d:5600:24:a80::a77d) (Quit: Until next time! Farewell!)
[23:37:51] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[23:37:52] <aphysically> maybe this PR
[23:38:11] *** Joins: _zipper (~zipper@vps-a54fc387.vps.ovh.net)
[23:38:14] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[23:38:22] *** Joins: dMartian (~dMartian@2a0d:5600:24:a80::a77d)
[23:38:44] <aphysically> ohwait I have an idea
[23:39:07] *** Joins: beterraba (~beterraba@185.183.107.221)
[23:39:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:39:39] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[23:39:51] <aphysically> put assert _attr_module is not None in a TYPE_CHECKING guard
[23:39:56] <aphysically> TYPE_CHECKING is already imported in this file anyway
[23:41:11] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 264 seconds)
[23:41:15] *** Quits: ghosts3301 (~Guest9432@2a02-a458-57a-1-40ad-8d55-bbed-59a7.fixed6.kpn.net) (Ping timeout: 256 seconds)
[23:41:28] *** Joins: bam32 (~bambams@user/bambams)
[23:41:43] <aphysically> okay but separate problem, pyright doesn't understand that it's a typing annotation if it's a quoted string literal and I'm guessing if the module is NOne at runtime then the non-quoted version will be a runtime error
[23:42:59] *** Quits: bam32 (~bambams@user/bambams) (Client Quit)
[23:43:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:43:25] <aphysically> this might actually be worth reporting to pyright, it works if it's unquoted but fails if it's quoted
[23:43:46] *** Joins: wyclif (~wyclif@user/wyclif)
[23:43:47] *** Joins: y1n (~y1n@77.119.197.188.wireless.dyn.drei.com)
[23:45:59] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 264 seconds)
[23:46:00] <jinsun> maybe it works because they know that None case will throw an error before the function could be defined :D
[23:46:01] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[23:46:34] <jinsun> so they don't have to worry about it not being None bythe time this function is actually used
[23:46:49] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[23:47:02] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[23:47:16] <aphysically> jinsun: minimal example https://bpa.st/X75Q
[23:47:30] <jinsun> would be smart if it really worked that way, raise it anyway to confirm
[23:47:52] <aphysically> this might be something to report to pyright but it's a bit iffy and I'm not sure if I'm annoying them yet :P
[23:48:16] <aphysically> but quoted stuff is supposed to work if the unquoted stuff works isn't it?
[23:48:38] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[23:48:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:48:59] *** Quits: _zipper (~zipper@vps-a54fc387.vps.ovh.net) (Ping timeout: 264 seconds)
[23:49:19] *** Joins: wyclif (~wyclif@user/wyclif)
[23:50:58] <aphysically> okay I think this is definitely a bug, it doesn't understand the assert at all in the quoted case
[23:51:15] <aphysically> I'll go ahead and report it
[23:51:59] *** Quits: Xeago (~Xeago@user/xeago) (Ping timeout: 250 seconds)
[23:52:04] *** Quits: src (~src@user/src) (Quit: Leaving)
[23:53:11] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 264 seconds)
[23:53:27] *** Joins: akk (~akk@75.161.146.115)
[23:54:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:54:53] *** Joins: djapo (~archangel@user/djapo)
[23:54:59] *** Joins: wyclif (~wyclif@user/wyclif)
[23:55:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:57:49] <jinsun> the use case is a bit weird, but then the behavior in the quoted case also doesn't make much sense, so good to report just to get some clarity about why it is complaining
[23:58:26] *** Joins: nomic (~nomic@185.217.117.88)
[23:58:39] <jinsun> mypy doesn't complain because i infers the type as the module always (and you just silence it when it complains about the None assignment)
[23:58:50] *** Joins: upsala (~zcb@185.213.155.160)
[23:58:51] *** gitly2 is now known as gitly
[23:59:22] <jinsun> only pyright thinks it is attrs | None
[23:59:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
