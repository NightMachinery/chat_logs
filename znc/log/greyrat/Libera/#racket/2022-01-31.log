[00:33:52] *** Joins: ASau (~user@lmpc.drb.insel.de)
[00:53:52] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[01:40:56] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:1c5c:392d:9c8d:7200)
[01:43:16] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:3d9b:c665:cba6:306b)
[01:46:51] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:1c5c:392d:9c8d:7200) (Ping timeout: 250 seconds)
[01:51:41] *** Quits: kengruven (~kengruven@c-67-185-58-144.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:51:49] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 250 seconds)
[01:53:10] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[01:56:10] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 260 seconds)
[01:56:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[01:57:02] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[02:15:24] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[02:15:27] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:36:29] *** Joins: kengruven (~kengruven@c-67-185-58-144.hsd1.wa.comcast.net)
[02:37:35] *** Quits: kengruven (~kengruven@c-67-185-58-144.hsd1.wa.comcast.net) (Client Quit)
[02:39:10] *** Joins: klf (~klf@66.220.205.98)
[02:50:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:50:50] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:3d9b:c665:cba6:306b) (Ping timeout: 252 seconds)
[02:54:41] <klf> Hi
[02:55:06] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Remote host closed the connection)
[02:55:39] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[02:55:52] <klf> A google search on "is there a main function in racket?" returns an article at http://reference-error.org/2014/02/24/loading-main-function-in-racket.html on this subject
[02:56:41] <klf> Something tells me that the main function isn't really a thing in Racket.
[02:56:59] <klf> Can someone comment on this.
[02:57:04] <klf> ?
[02:58:17] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[03:02:01] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 250 seconds)
[03:07:11] <williewillus> klf: can you describe more the actual problem you're trying to solve?
[03:07:58] <williewillus> there is `module main` as the top of that post mentions
[03:08:11] <williewillus> which directly corresponds to if __name__ == main in python
[03:09:05] <klf> williewillus, nothing specific.  It just seems to me that it isn't really a thing in Racket since I haven't come across it much and there are a lot of search results on this subject.
[03:16:47] <williewillus> not sure what you mean by "not really a thing", the `module main` approach is the canonical way
[03:17:56] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[03:17:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[03:29:43] *** Joins: notzmv (~zmv@user/notzmv)
[03:35:10] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[03:38:46] *** Joins: cwebber (~user@user/cwebber)
[03:40:33] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[03:56:04] *** Quits: vraid (~vraid@c188-148-15-182.bredband.tele2.se) (Ping timeout: 256 seconds)
[04:00:29] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[04:04:00] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[04:04:51] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[04:05:46] *** Joins: vraid (~vraid@c188-148-15-182.bredband.tele2.se)
[04:10:37] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Ping timeout: 240 seconds)
[04:19:31] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[04:27:09] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[04:33:54] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 260 seconds)
[04:44:35] *** Quits: klf (~klf@66.220.205.98) (Quit: This computer has gone to sleep)
[04:46:51] *** Joins: klf (~klf@66.220.205.98)
[04:51:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Quit: WeeChat 3.4)
[05:08:03] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:10:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:11:01] *** Joins: s-liao46 (~s-liao@101.86.96.21)
[05:14:03] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:15:56] *** Quits: winny (~weechat@user/winny) (Remote host closed the connection)
[05:16:33] *** Joins: winny (~weechat@user/winny)
[05:24:49] *** Quits: s-liao46 (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:27:17] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[05:33:01] <winny> There is a `main` function that can be loaded in certain cases, but you really do want the `(module+ main ...)` thing you'll see online
[06:09:31] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:29:27] *** Quits: klf (~klf@66.220.205.98) (Quit: Leaving)
[07:33:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:47:43] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[07:52:22] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[08:10:17] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:33:51] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:36:00] *** Quits: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[08:59:35] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:01:12] *** Joins: s-liao (~s-liao@101.86.96.21)
[09:04:07] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:06:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:10:21] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:12:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[09:17:05] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Remote host closed the connection)
[09:18:20] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[09:19:47] *** Joins: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net)
[09:35:09] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[09:40:57] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[09:46:29] *** Joins: cynomys (~cynomys@user/cynomys)
[10:18:57] *** Quits: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[10:21:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:23:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:54:21] *** Joins: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net)
[11:08:27] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[11:11:14] *** Quits: Fare (~fare@pool-72-94-152-64.phlapa.fios.verizon.net) (Quit: Leaving)
[11:12:50] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[11:21:06] *** Joins: notzmv (~zmv@user/notzmv)
[11:33:23] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:899e:dfb6:fe21:e622)
[11:37:07] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 256 seconds)
[11:46:10] *** Quits: tgbugs (~hyperion2@cpe-70-95-172-122.san.res.rr.com) (Ping timeout: 250 seconds)
[11:46:17] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[11:52:59] *** Joins: tgbugs (~hyperion2@cpe-70-95-172-122.san.res.rr.com)
[12:05:23] *** Joins: terrorjack5 (~terrorjac@2a01:4f8:1c1e:509a::1)
[12:05:52] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:a696:8e79:2f37:9aef)
[12:06:04] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: chris2 (cky@meredith.poweredbytaylor.com) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: krono (sid197855@user/krono) (Ping timeout: 268 seconds)
[12:06:04] *** terrorjack5 is now known as terrorjack
[12:06:29] *** Joins: vraid_ (~vraid@c188-148-15-182.bredband.tele2.se)
[12:08:36] *** Joins: krono (sid197855@user/krono)
[12:09:59] *** Quits: vraid (~vraid@c188-148-15-182.bredband.tele2.se) (Ping timeout: 256 seconds)
[12:19:52] *** Joins: chris2 (cky@meredith.poweredbytaylor.com)
[12:35:38] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:51:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[13:07:32] *** vraid_ is now known as vraid
[13:08:30] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 250 seconds)
[13:09:06] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[13:09:19] *** Joins: ski (~ski@remote12.chalmers.se)
[13:10:45] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[13:11:12] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[13:14:45] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[13:16:11] *** Quits: b625e17 (sid505475@id-505475.tinside.irccloud.com) (Ping timeout: 245 seconds)
[13:16:30] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[13:17:35] *** Joins: b625e17 (sid505475@id-505475.tinside.irccloud.com)
[13:19:41] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 256 seconds)
[13:35:11] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[13:36:13] *** Quits: ermo (~ermo@user/ermo) (Read error: Connection reset by peer)
[13:36:19] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:39:50] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[13:40:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:42:16] *** Joins: ermo (~ermo@user/ermo)
[13:52:06] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:54:32] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[14:02:00] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[14:05:48] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[14:23:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[14:24:17] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:a696:8e79:2f37:9aef) (Ping timeout: 256 seconds)
[14:24:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:27:34] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[14:31:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[14:33:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:43:04] *** Joins: cynomys (~cynomys@user/cynomys)
[14:45:44] *** Quits: cynomys (~cynomys@user/cynomys) (Client Quit)
[14:45:46] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:899e:dfb6:fe21:e622) (Ping timeout: 245 seconds)
[15:00:33] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[15:05:31] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 268 seconds)
[15:06:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:08:28] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:16:53] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Quit: leaving)
[15:25:48] *** Joins: notzmv (~zmv@user/notzmv)
[15:33:12] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[15:36:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:37:36] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[16:04:53] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:99d9:ca30:6a40:daf8)
[16:30:16] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[16:39:36] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:42:54] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[16:43:07] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:44:02] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[16:47:52] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:c6b8:ceb9:9a96:eaac)
[17:28:03] *** Joins: klf (~klf@66.220.205.98)
[17:29:01] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:c6b8:ceb9:9a96:eaac) (Ping timeout: 256 seconds)
[17:29:08] <klf> (for ([id sequence-expr] ...)
[17:29:08] <klf>   body ...+)
[17:29:26] <klf> (for ([i 3])
[17:29:26] <klf>     (display i))
[17:29:35] <klf> why is 3 a sequence-expr ?
[17:32:27] <vraid> shorthand for (range 3) maybe?
[17:34:25] <bremner> rudybot_: (sequence? 3)
[17:34:34] <bremner> rudybot_: init racket
[17:34:37] <rudybot_> bremner: error: with-limit: out of time
[17:34:49] <rudybot_> bremner: your sandbox is ready
[17:34:53] <bremner> rudybot_: (sequence? 3)
[17:34:53] <rudybot_> bremner: ; Value: #t
[17:34:58] <bremner> klf: ^
[17:35:12] <bremner> you can follow the docs to the actual contract there
[17:36:13] <bremner> "An exact number k that is a non-negative integer acts as a sequence similar to (in-range k), except that k by itself is not a stream."
[17:36:55] <klf> rudybot_ is one lazy mf... (i guess it's still early)
[17:47:41] <klf> What does the '+' in '...+' mean?
[17:49:01] <klf> '...' alone denotes that there can be zero or more of the preceding pattern
[17:50:24] <bremner> without checking, one or more
[17:53:20] <klf> 👍
[18:12:49] <klf> rudybot_, '"hello world"
[18:12:50] <rudybot_> klf: your sandbox is ready
[18:12:51] <rudybot_> klf: ; Value: "hello world"
[18:13:04] <klf> rudybot_, (string->symbol "hello world")
[18:13:05] <rudybot_> klf: ; Value: '|hello world|
[18:13:38] <klf> Why don't I get an interned symobol in the first attempt?
[18:15:06] <klf> rudybot_,'hello\ world' ; I get it here
[18:15:19] <klf> rudybot_,'hello\ world ; I get it here
[18:15:39] <rudybot_> klf: does anyone here run Emacs25 in OSX and use the GDB debugger? I installed Emacs 25.0.50 and GDB 7.8.1 through Homebrew, so fairly vanilla setup. Yet I seem to have a bug where any process (even a simple hello world program) run through m-x gdb hangs up Emacs (100% CPU infinitely) after finishing. gud-gdb works fine.
[18:15:39] <rudybot_> klf: ; Value: '|hello world|
[18:17:11] <klf> I broke rudybot_ yay!
[18:20:34] <bremner> klf: quote is not about interning?
[18:21:40] <klf> also, " in the same way that an identifier can be quoted to produce a symbol, a keyword can be quoted to produce a value." (https://docs.racket-lang.org/guide/keywords.html)
[18:21:50] <klf> a string is not* an identifier.
[18:23:55] <bremner> OK, but keywords are something different, not strings.
[18:24:42] <bremner> rudybot_: '#:foo
[18:24:42] <rudybot_> bremner: ; Value: '#:foo
[18:25:47] <bremner> rudybot_: #:foo
[18:25:47] <rudybot_> bremner: error: eval:1:0: #%datum: keyword used as an expression <NEWLINE>   in: #:foo
[18:26:04] <bremner> without the quote, the keyword isn't an expression
[18:37:53] *** Quits: cwebber (~user@user/cwebber) (Remote host closed the connection)
[18:38:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe)
[18:38:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe) (Changing host)
[18:38:18] *** Joins: skapata (~Skapata@user/skapata)
[18:41:49] <klf> "Keywords are intended for use (unquoted) as special markers in argument lists and in certain syntactic forms. "
[18:43:58] <klf> I see.
[18:44:25] <bremner> roughly speaking, they behave like punctuation
[18:46:25] <klf> let's take a look at the example in the docs:
[18:46:33] <klf> (with-output-to-file (build-path dir "stuff.txt")
[18:46:33] <klf>     (lambda () (printf "example\n"))
[18:46:33] <klf>     ; optional #:mode argument can be 'text or 'binary
[18:46:33] <klf>     #:mode 'text
[18:46:33] <klf>     ; optional #:exists argument can be 'replace, 'truncate, ...
[18:46:33] <klf>     #:exists 'replace)
[18:47:33] <klf> intutively, one would think that the '#:mode' "marker" (or so they call it) is not really necessary in "#mode 'text'"
[18:48:07] <klf> err... I put an extra single quote in there.  it should be "#mode 'text"
[18:48:49] <bremner> it's the same as keyword arguments in e.g. python and common lisp. They are not only optional but the order can change
[18:48:58] <klf> at the end of the day you are passing the symbol 'text as an argument to the function "with-output-to-file"
[19:09:14] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[19:11:48] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[19:16:02] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[19:19:11] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Read error: Connection reset by peer)
[19:20:01] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[19:20:05] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[19:21:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:36:20] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:99d9:ca30:6a40:daf8) (Read error: Connection reset by peer)
[19:36:54] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:159e:d2a3:c9a0:9ae9)
[19:44:52] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:159e:d2a3:c9a0:9ae9) (Ping timeout: 268 seconds)
[20:16:13] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10ed:252e:a8fa:6b59:d4cb:97e1)
[20:39:04] *** Quits: codingquark (~quassel@user/codingquark) (Ping timeout: 256 seconds)
[20:39:21] *** Joins: codingquark (~quassel@user/codingquark)
[20:57:49] *** Joins: sagax (~sagax_nb@user/sagax)
[21:06:19] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Remote host closed the connection)
[21:06:51] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[21:09:42] <klf> https://docs.racket-lang.org/guide/Module_Syntax.html
[21:10:08] <klf> "The #lang at the start of a module file begins a shorthand for a module form"
[21:11:17] <klf> Are these specific types of "shorthands" built-in and cannot be defined by the user?
[21:14:46] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[21:16:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:32:12] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e9:d728:a8fa:6b59:d4cb:97e1)
[21:36:29] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10ed:252e:a8fa:6b59:d4cb:97e1) (Ping timeout: 268 seconds)
[21:36:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:37:13] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:f810:eec9:8a20:6a95)
[21:38:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:44:30] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[21:50:11] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[21:54:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748)
[21:54:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748) (Changing host)
[21:54:21] *** Joins: skapata (~Skapata@user/skapata)
[21:54:47] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[22:17:11] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e9:d728:a8fa:6b59:d4cb:97e1) (Ping timeout: 268 seconds)
[22:18:55] *** Joins: avelino (~avelino@2804:431:c7f4:bf5d:4804:e64c:20e1:4e13)
[22:20:17] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[22:22:20] *** Quits: avelino (~avelino@2804:431:c7f4:bf5d:4804:e64c:20e1:4e13) (Quit: Client closed)
[23:24:00] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[23:42:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:55:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[23:55:37] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
