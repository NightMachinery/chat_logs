[02:35:44] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:35:44] *** Server sets mode: +nt 
[10:56:50] *** Joins: piyo`` (~user@kbmfx-06p4-5.ppp11.odn.ad.jp)
[10:57:03] *** Quits: piyo` (~user@KBMfx-06p4-5.ppp11.odn.ad.jp) (Ping timeout: 252 seconds)
[11:14:03] *** Quits: munen (~munen@2001:470:69fc:105::c2e) (Ping timeout: 250 seconds)
[11:14:17] *** Joins: munen (~munen@2001:470:69fc:105::c2e)
[12:12:30] *** Quits: corwin (someone@fosshost/director/corwin) (Ping timeout: 252 seconds)
[12:12:48] *** Joins: corwin (~someone@fosshost/director/corwin)
[12:37:40] *** Quits: piyo`` (~user@kbmfx-06p4-5.ppp11.odn.ad.jp) (Ping timeout: 252 seconds)
[12:37:53] *** Joins: piyo`` (~user@KBMfx-06p4-5.ppp11.odn.ad.jp)
[18:50:54] *** Joins: macnewb2 (~u0_a168@106.51.24.232)
[18:51:29] <macnewb2> I am on android, and have a webdav server running on 127.0.0.1:8080
[18:51:46] <macnewb2> after I enter the creds, it shows a blurred page
[18:51:48] <macnewb2> at /files
[18:52:01] <macnewb2> then when i reload it takes me back to /sign_in
[18:52:04] <macnewb2> what do i do;
[19:31:18] <munen> qbit: *hihi*, anyway - you put in the extra effort to get it done(;
[19:31:42] <munen> greyrat and macnewb2: Welcome to #organice üëã
[19:32:44] <munen> macnewb2: Thank you for checking out organice! Did you follow the WebDAV FAQ(https://organice.200ok.ch/documentation.html#faq_webdav)?
[19:32:45] <macnewb2> munen: hi
[19:33:38] <macnewb2> munen: no, sorry. let me go through that real quick
[19:33:47] <munen> üëçÔ∏è
[19:34:09] <qbit> :D
[19:34:38] <munen> Alternatively, qbit has build a self-contained organice instance / WebDAV server which you can find here: https://github.com/qbit/gavin/
[19:34:56] <macnewb2> munen: alright, read it; but that didn't help
[19:36:08] <munen> macnewb2: That was quick. So you did use the WebDAV image described in the docs?
[19:37:07] <macnewb2> macnewb2: no, i used another server
[19:37:18] <macnewb2> one sec, i'll send a vid
[19:37:38] <munen> No need for a vid.
[19:37:44] <munen> If you've read the docs, then you've seen:
[19:38:14] * munen uploaded an image: (467KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/NnQpVshXZZtpOboeugRURHAI/image.png >
[19:38:39] <macnewb2> https://drive.google.com/open?id=139TF1ZUdSXRdsZfjZe7p5nA4_LkBCBFY
[19:39:07] <munen> I can't do support for other WebDAV servers. I suggest to look into their support channels if you don't want to use the setup which is documented.
[19:39:23] <macnewb2> i understand
[19:39:27] <munen> Or, to re-iterate: qbit has build a self-contained organice instance / WebDAV server which you can find here: https://github.com/qbit/gavin/
[19:39:28] <munen> He's in this channel, as well, and quite responsive to questions.
[19:39:52] <macnewb2> alright, sure, thanks
[19:40:36] <macnewb2> btw, the gdrive link was a screen recording of what happened after i log in webdav
[19:40:37] <munen> From that video, I unfortunately didn't learn anything about how you've set up your WebDAV server and what could be amiss. At this point, it's the same as if you had no server set up.
[19:40:58] <macnewb2> oh
[19:41:08] <macnewb2> i used rclone for webdav
[19:41:16] <macnewb2> within termux
[19:41:30] <munen> Sorry about that. But there's a lot of WebDAV servers and I'm neither a user of them nor qualified to debug them remotely.
[19:41:30] <macnewb2> but anyway, thanks, gavin seems nice
[19:41:41] <macnewb2> yeah, right
[19:42:42] <qbit> :D
[19:42:46] <munen> I'm a user of rclone. I'm not aware that it can act as a WebDAV server. Glancing at the docs (https://rclone.org/webdav/), I also don't see such an option. rclone is basically rsync with adapters to different storage facilities.
[19:42:50] <qbit> macnewb2: let me know if you have any questions or issues!
[19:43:00] <munen> üôè
[19:43:03] <macnewb2> qbit: sure
[19:43:13] <munen> Or better, even: üöÄ
[19:43:27] <qbit> :D
[19:43:50] <macnewb2> munen: yeah, its probably a problem on my end now i think of it. i used  an app called rcx which was an android wrapper for rclone, and used that to serve webdav
[19:46:12] <macnewb2> qbit: any idea about 'go/pkg/mod/suah.dev/gavin@v1.0.0/main.go:26:12: pattern organice: no matching files found'
[19:46:30] <macnewb2> happens when i 'go install suah.dev/gavin@latest'
[19:47:00] <qbit> ah, dang - because I don't have the organice files in tree...
[19:47:36] <qbit> macnewb2: easiest would be to snag a binary from the releases page: https://github.com/qbit/gavin/releases/tag/v1.0.0
[19:48:27] <munen> qbit: We quite often get questions regarding WebDAV. Now, with the 1.0.0 release of gavin, if you're up for more users/requests, we could consider adding gavin as an alternative server which 'works out of the box'‚Ñ¢Ô∏è at the end of the FAQ.
[19:48:44] <macnewb2> ok. i was installing gavin from termux lol
[19:48:52] <qbit> or download the source (git clone https://github.com/qbit/gavin ) and extract the organice assets into "organice" dir
[19:49:13] <qbit> munen: sure :D 
[19:50:37] <qbit> https://github.com/qbit/gavin/releases/download/v1.0.0/organice-assets.tar.gz <-- prebuilt assets, or they can be built from the organice repo
[19:51:01] <qbit> i'll update the install instructions
[19:51:05] <macnewb2> i went with the prebuilt ones
[19:51:47] <macnewb2> suprisingly worked, most other compiled go binaries would usually have linkererrors
[19:54:30] <macnewb2> qbit: what url do i use for webdav in gavin?
[19:54:45] <macnewb2> sorry for the dumb question
[19:58:53] <munen> qbit: I've just tried gavin with the recent release and couldn't log in. Here's a video of what I did including installation: https://www.dropbox.com/s/b3hfjs0b3rzdwax/2021-10-01%2018-25-03.mkv?dl=0
[19:59:20] <qbit> macnewb2: na, that's a good question
[19:59:32] <qbit> if you are just running it it should be localhost:8080
[19:59:40] <qbit> with /dav as the dav stuff
[19:59:44] <macnewb2> and no pass?
[19:59:52] <munen> Args, `/dav` of course.
[20:00:07] <qbit> you will need to create a .htpasswd file 
[20:00:34] <qbit> with bcrypt passwords
[20:01:05] <macnewb2> got it, thanks!
[20:02:54] <qbit> i'll add the ability to generate the .htpasswd 
[20:02:59] <qbit> in addition to the updated docs
[20:04:48] <qbit> munen should be: https://127.0.0.1:8080/dav for the URL
[20:07:27] <macnewb2> idk if its just me, but all i see is https://drive.google.com/open?id=1W1GuY8swsxrQBhwV6kI6Eo1m1q9RYKn2
[20:07:40] <macnewb2> this one is with gavin
[20:07:55] <munen> qbit: Sorry, no dice. I tried the above URL with https and http: https://www.dropbox.com/s/92misummsnhm2cp/2021-10-01%2018-35-52.mkv?dl=0
[20:08:15] <munen> Basically same as macnewb2.
[20:09:07] <qbit> can you paste the output of `httpasswd -h`?
[20:09:25] <munen> hihi
[20:09:29] <munen> munen@lambda:~% httpasswd -h
[20:09:29] <munen> zsh: command not found: httpasswd
[20:09:56] <qbit> sorry: htpasswd -h
[20:10:07] <munen> Yes, just wanted to be non-funny(;
[20:10:08] <munen> https://gist.github.com/munen/8d065659d7d8aefd1985923511d07b69
[20:11:01] <qbit> try with -B
[20:11:05] <qbit> to tell it to use bcrypt
[20:11:11] <munen> For the secure password `123456`, it creates this file: https://gist.github.com/munen/ac25a4ccab985ca07812048d7d7230aa
[20:11:42] <munen> qbit: That works!
[20:11:47] <qbit> woo
[20:11:55] <munen> Sweet^^
[20:12:33] <munen> Nice job, it works out of the box, then!
[20:12:36] <munen> üëçÔ∏è
[20:12:59] <qbit> sweet!
[20:13:17] <qbit> sorry for the glitches :D
[20:13:41] <munen> Minor stuff. Are you a openBSD user?
[20:14:34] <macnewb2> works for me as well, thanks
[20:15:21] <qbit> munen: indeed
[20:15:25] <qbit> macnewb2: woo
[20:15:39] <macnewb2> i think it would be helpful to mention the webdav url in the readme
[20:16:02] <qbit> ya, here are the changes i will push later: http://ix.io/3Awz
[20:16:17] <qbit> i will also add code to generate a .htpasswd file from gavin itself
[20:16:27] <qbit> so people don't have to install htpasswd
[20:16:37] <macnewb2> cool, great work again!
[20:17:07] <qbit> thanks :) - glad others find it useful!
[20:17:17] <macnewb2> are notifications a thing in organice?
[20:19:16] <munen> Ah, that makes my PRs (in progress moot)^^
[20:19:34] <munen> Thanks for the quick support and the changes to the doc üôè
[20:19:56] <munen> And kudos to using OpenBSD as a daily driver. I only know few people doing that - all smart people^^
[20:21:02] <munen> One further question: Would you consider adding configuration for the required CORS headers for https://organice.200ok.ch/ and https://staging.organice.200ok.ch/ to a prod build or make them configurable in some way?
[20:21:34] <munen> Then, I would set up a gavin server for myself and run with it for a while as my daily driver. But I could still push to staging and production without a gavin build.
[20:22:25] <munen> That's not to say that a completely bundled version is not very helpful. That'll bring the gavin/organice combo even into offline scenarios, so I really do appreciate this option you've come up, as well!
[20:23:30] <munen> Maybe adding http://localhost:3000 for CORS would be a reasonable option, since that would enable the organice devs to use gavin locally while developing.
[20:24:51] <munen> That is, again, totally optional. I'm just typing what I'm thinking. If this works well, we could start pushing gavin quite a bit more as a 'works out of the box' solution for those who want to self-host their storage.
[20:26:19] <qbit> heh, originally I had everything setup so that you _had_ to tell gavin where your organice files were
[20:26:30] <qbit> vs them being embedded in the binary
[20:26:43] <qbit> i can very easily bring that feature back :)
[20:27:03] <macnewb2> how does one create a new org file from organice?
[20:27:13] <macnewb2> i dont see a new file button
[20:27:15] <munen> Hm, as a feature flag? And then the required CORS config would be created on the fly? That would be pretty magical, I think(;
[20:27:52] <qbit> i am not sure on the cors stuff :D - ill have to think about it
[20:28:08] <qbit> do you have another webserver running on :3000? 
[20:28:14] <qbit> must if you need cors
[20:28:15] <munen> macnewb2: https://github.com/200ok-ch/organice/issues/87
[20:28:42] <munen> The dev instance of organice runs on :3000 (by default).
[20:28:50] <qbit> ah, ok
[20:30:07] <munen> So, if I wanted to run organice locally for development, but test with gavin as a back-end, the necessary CORS headers would be nice. organice itself has code hot-reloading, so not having to copy the newly generated JS files over to a different webserver would be quite nice(;
[20:31:28] <qbit> well bringing back the flag would just mean gavin would load the files from your dev dir
[20:32:02] <qbit> gavin -new_old_flag ~/src/organice/build -davdir ~/org
[20:33:00] <munen> I see. That would be a quick-fix for using gavin for local development. Then, after making changes to JS/CSS files, instead of relying on the code hot-reloading, the dev would have to reload the browser. That's certainly not impossible, many web devs have to work like this.
[20:33:54] *** Quits: macnewb2 (~u0_a168@106.51.24.232) (Quit: WeeChat 3.0.1)
[20:35:18] <munen> On the other hand, after more thinking, it wouldn't be that easy. When not run within the code hot-reload context of webpack, organice needs to be compiled. You've hinted at it with the correct folder (`/build`). So, after making changes, the dev would need to run `yarn run build` which takes a while and then reload. That's still possible, but a bit of pain for quick iterative development^^
[20:36:56] <qbit> it would be trivial to make gavin reload on file change
[20:39:56] <munen> Sure, but that would add another layer of workarounds on top(; The code hot-reloading is near instant and does not reload the web app, it swaps the code within the browser. Running `yarn run build` takes 27s on my 6-core i7 dev machine (just tested).
[20:40:35] <munen> On the other hand, when the CORS headers are set, the same code hot-reloading will work with gavin, too. And the same gavin instance will work with different deployed organice versions.
[20:41:20] <munen> But as I said, it's just an idea. I haven't done any coding in Golang, so I can't really help out unfortunately.
[20:52:02] <qbit> :D
[20:52:14] <qbit> np - i'll poke around with both ideas and see what sticks
[20:52:36] <munen> üëçÔ∏è
