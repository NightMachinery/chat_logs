[00:05:27] <jemius> motiejus, what kind of employer would pay for that?
[00:06:20] <ifreund> it's not impossible, I'm lucky enough to get paid to write zig :P
[00:09:02] <jemius> I feel lucky when I get payed for the software I write
[00:09:45] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:09:50] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[00:10:21] *** Joins: lispy (~lispy@84.69.59.93)
[00:13:09] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[00:14:39] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:22:59] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Quit: WeeChat 3.4)
[00:27:45] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7)
[00:32:46] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[00:36:39] *** Quits: neceve (~quassel@2.26.93.228) (Read error: Connection reset by peer)
[00:44:43] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[00:47:58] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[00:59:21] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:14:16] *** Parts: lispy (~lispy@84.69.59.93) ()
[01:22:18] <ebb> Evo2: I don't think that's anything to be concerned about legally -- it's just a header for a DOS MZ executable
[01:22:32] <ebb> hexdump: https://paste.debian.net/plainh/c43d2f76
[01:22:34] *** Joins: kron (~weechat@user/qaph)
[01:23:42] <ebb> or a PE executable, actually (for Windows NT)
[01:24:06] <ebb> every Windows .exe has this at the start
[01:35:52] *** Joins: Belgin[m] (~belginbel@2001:470:69fc:105::1:6aa0)
[01:44:12] *** Quits: Tekk (~Tekk@206.217.205.113) (Remote host closed the connection)
[01:48:58] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[01:52:59] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[01:59:14] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[02:03:20] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7)
[02:10:39] *** Joins: breavyn_ (~breavyn@user/breavyn)
[02:11:26] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 252 seconds)
[02:11:50] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:21:01] *** cr1901_ is now known as cr1901
[02:28:14] <Evo2> ebb: As it is it can not go into Debian with that binary blob.
[02:30:49] <Evo2> And why is an msdos related file needed in builds for other operating systems?
[02:33:49] <ifreund> Evo2: so that other operating systems can cross compile to windows
[02:34:22] <Evo2> You can see the package that I made that I'm trying to get into Debian at https://mentors.debian.net/package/zig/
[02:35:24] <Evo2> Note the line "W source-contains-prebuilt-windows-binary", and the page it links to.
[02:35:29] <ifreund> acutually, that doesn't seem to be related to cross compilation
[02:36:07] <ifreund> it's the WIP Coff backend of the self-hosted compiler
[02:36:42] <Evo2> Are the source and build system for it available?
[02:36:51] <andrewrk> huh. turns out the default -std flag for clang++ is -std=gnu14
[02:37:03] <ifreund> Evo2: pretty sure it was created by hand
[02:37:10] <ifreund> see the hexdump ebb linked
[02:37:15] <andrewrk> umm for the -gnu target. that makes a lot of sense actually
[02:37:28] <ifreund> it's just a header that the Coff backend uses to produce binaries
[02:38:08] <ifreund> the alternative would be embedding that bit of data in the source code of the zig compiler
[02:39:12] <ebb> You can find that lintian rule fired on golang packages as well - https://lintian.debian.org/tags/source-contains-prebuilt-windows-binary
[02:39:33] <ebb> and a whole load of mono :P
[02:39:49] <Evo2> Ok. Is this documented in the source somewhere? I'll need some sort of solid refrence to point people to.
[02:40:03] <andrewrk> ooh I want to see all the tags for a debian zig package
[02:40:25] <Evo2> Appart from that one it's basically clean.
[02:40:34] <ifreund> Evo2: not really documented, you can see the usage in src/link/Coff.zig
[02:40:45] <andrewrk> looks like no zig package in debian yet
[02:40:57] <ebb> The documentation might be as simple as "this is how Windows PE executables work"
[02:41:10] <ifreund> the header stub is embedded in the resulting binary with @embedFile()
[02:41:36] <ifreund> it's just a convient way to implement the executable format
[02:42:02] <Evo2> andrewrk: I'm working on one. See https://mentors.debian.net/package/zig/
[02:42:33] <andrewrk> Evo2, ah neat, I'm happy to help
[02:43:15] <andrewrk> are we looking at `src/link/msdos-stub.bin` ?
[02:43:24] <Evo2> There are at least two others also working towards this but their efforts seem to be stalled. 
[02:43:41] <Evo2> See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=995670
[02:44:16] <andrewrk> I think this is a false positive for `source-contains-prebuilt-windows-binary`. it's not a windows binary, but rather a header that is copy+pasted into every .exe that zig makes
[02:44:32] <Evo2> andrewrk: Yes that is the file I was concerned about.
[02:44:49] <Evo2> I hadn't yet tried to understand what it was actually for.
[02:45:32] <andrewrk> Evo2, here you can see where it is used: https://github.com/ziglang/zig/blob/0.9.0/src/link/Coff.zig#L37
[02:46:30] <andrewrk> I don't mind addressing those long line length ones
[02:46:45] <Evo2> Thanks. Is this irc channel logged somehwere?
[02:47:42] <Evo2> Note that there were way more warnings before I had the package strip out everything under lib other than lib/std.
[02:48:04] <ifreund> uh, that's not ok
[02:48:18] <Evo2> Removing unused soruce?
[02:48:32] <ifreund> zig uses all that stuff under lib for cross compilation without system dependencies
[02:49:01] <ifreund> it bundles that source code, which is what allows it to target e.g. arbitrary glibc versions or musl for many targets
[02:49:11] <Evo2> Isn't it using a standard cmake build with system libs and compilers?\
[02:49:26] <ifreund> to build the zig compiler yes
[02:50:04] <ifreund> these bundled source files are not for building the zig compiler but rather for compiling things using the resulting zig compiler
[02:50:09] <ifreund> the are not "unused source"
[02:50:10] <Evo2> So it is only needed if I want to build a zig compiler that can cross compile?
[02:50:35] <ifreund> if you delete them, you are not building a zig compiler but rather an unsupport gimped fork of zig
[02:51:08] <Evo2> See the discussion at https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=995670#15
[02:52:45] <ifreund> andrew explains their purpose pretty well there
[02:53:41] <Evo2> Seems I need to reread it.
[02:54:24] <Evo2> Ahh, the last paragraph is the important one.
[02:55:12] <andrewrk> long source lines shortened in 68fc26cd08c46dfef606e58b07a3f492f2295d5c. I left one of them because it is a fuzz test input and would compromise the maintainability of the test to adjust it.
[02:57:52] <Evo2> That same mentors page has a version of the package without those libs removed.
[02:58:22] <Evo2> It has some other minor issues that I can fix. I'll revert to that branch.
[03:00:36] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 250 seconds)
[03:00:46] <andrewrk> oops I never replied to Jason Ernst in that thread
[03:06:25] *** Quits: jemius (~imperator@200116b82d5dc600ca2e01a5f7fa0efb.dip.versatel-1u1.de) (Quit: Leaving)
[03:14:30] <andrewrk> I'm happy to go over any of the files in lib/ and explain their purpose and how they are used
[03:19:51] <Evo2> andrewrk: I think the best place for such discussion is probably in that ITP bug thread. Please note that I am *not* a member of the Debian project. I'm just someone who uses Debian and wanted to use river :-)
[03:22:34] <andrewrk> well I'm not planning on doing the work of packaging zig for debian. just happy to help someone else if they come here looking for help
[03:22:47] <andrewrk> reading Jason's message again, it looks like someone from the Debian project should respond since his questions are about Debian, not Zig
[03:23:13] <andrewrk> my debian packaging days are over :)
[03:25:40] <Evo2> Ok, I'm just trying to say that while I'm happy to do packaging work I don't have any say on what happens in Debian.
[03:34:37] *** Quits: gwizon (~gwizon@ool-45798eff.dyn.optonline.net) (Ping timeout: 240 seconds)
[03:40:26] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 260 seconds)
[03:40:49] *** Joins: syrusakbary (~syrusakba@2601:645:4100:927:6123:5bcd:3660:f702)
[03:43:34] *** Joins: ickk (~ickk@user/ickk)
[03:47:40] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[03:51:58] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[03:55:38] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[04:06:09] *** Quits: gawenr (~textual@2a01:e0a:21c:99a0:2160:e3a:a3d:f805) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:09:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:24:04] *** Joins: gawenr (~textual@2a01:e0a:21c:99a0:10a6:915e:61fe:52f7)
[04:27:43] *** Quits: gawenr (~textual@2a01:e0a:21c:99a0:10a6:915e:61fe:52f7) (Client Quit)
[04:33:36] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 268 seconds)
[04:33:50] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:35:25] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 240 seconds)
[04:47:04] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[04:54:25] *** Joins: fwg (~fwg@user/fwg)
[05:04:37] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9plitnrxudwj9omd0nch.ipv6.telus.net)
[05:14:55] *** Quits: fwg (~fwg@user/fwg) (Quit: so long and thanks for all the fish.)
[05:20:18] <marler8997> azure CI time seems to be much lower now? what happened?
[05:36:05] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7)
[05:37:55] *** Joins: fwg (~fwg@user/fwg)
[05:49:36] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:02:06] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Quit: Client closed)
[06:10:26] <andrewrk> my first glibc patch: https://patchwork.sourceware.org/project/glibc/patch/20220129023727.1496360-1-andrew@ziglang.org/
[06:12:34] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[06:15:09] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[06:15:22] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[06:15:41] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[06:21:40] *** Quits: Arnavion (arnavion@user/arnavion) (Ping timeout: 250 seconds)
[06:28:36] *** Joins: Arnavion (arnavion@user/arnavion)
[06:34:44] *** Joins: Techcable (~Techcable@168.235.93.147)
[06:40:52] *** Quits: ickk (~ickk@user/ickk) (Ping timeout: 260 seconds)
[06:44:54] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:56:25] *** Quits: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com) (Quit: WeeChat 2.8)
[07:13:22] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:14:47] <koakuma> Hi all, so I'm trying to build Zig stage 2 following the instructions at https://github.com/ziglang/zig/wiki/Building-Zig-From-Source#stage-2-build-self-hosted-zig-from-zig-source-code
[07:15:11] <koakuma> But when I ran the zig build command I got this error instead
[07:15:11] <koakuma> error: unable to open zig lib directory from 'zig-lib-dir' argument: 'lib': FileNotFound
[07:15:27] <koakuma> What should I do?
[07:15:53] <koakuma> The command should be run in the same directory where I built stage 1, right?
[07:22:39] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:29:11] <andrewrk> koakuma, I edited the page just now to remove the suggestion to pass --zig-lib-dir, can you try following the instructions again?
[07:31:01] *** Joins: ur5us (~ur5us@203.86.198.200)
[07:31:48] <koakuma> Okay, lemme try rebuilding
[07:32:09] <andrewrk> (just don't pass the --zig-lib-dir argument)
[07:41:34] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7)
[07:46:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:46:46] *** Quits: syrusakbary (~syrusakba@2601:645:4100:927:6123:5bcd:3660:f702) (Quit: Client closed)
[07:56:10] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 260 seconds)
[08:11:05] *** Quits: Arnavion (arnavion@user/arnavion) (Quit: Arnavion)
[08:21:11] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[08:26:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[08:28:37] *** Joins: Arnavion (arnavion@user/arnavion)
[08:30:31] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[08:40:55] *** Quits: moog (~moog@107.77.244.129) (Remote host closed the connection)
[08:41:41] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:56:49] *** Joins: Arw| (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr)
[08:57:32] *** Quits: Arw- (~Arwalk@lfbn-dij-1-1310-217.w92-141.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[09:10:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:18:13] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[09:31:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:34:17] *** Joins: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com)
[09:38:57] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[10:48:20] <marler8997> andrewrk do you recall why you handled BUFFER_OVERFLOW by ignoring it in this commit after calling NtQueryInformationFile? It's happening on my machine and results in an access violation afterwards, I'm assuming because the file information is not "filled out" because of the BUFFER_OVERFLOW
[10:52:55] <marler8997> woops I forgot to include the commit hash: 49d1a4c56218cf932adddf60ad2f56a8386c76fc
[10:58:15] <marler8997> hmm, looks like it can return that if the filename length is not long enough, and here we're not allocating any data for the filename, so makes sense
[11:04:10] <marler8997> oh I see what's happening, fromSysTime is having an overflow with the last access time
[11:12:33] <marler8997> something really funky going on, my filesystem time stamps are overflowing and breaking zig in all sorts of ways
[11:26:05] *** Joins: phaleth (~user@user/phaleth)
[11:28:05] *** Joins: zig-irc-logger (~zig-irc-l@216.117.174.63)
[11:40:11] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:53:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[12:23:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:28:58] *** Joins: ickk (~ickk@user/ickk)
[12:30:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[12:31:09] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[12:31:12] <koakuma> andrewrk: Okay, it seems to work now, thanks!
[13:09:11] *** Joins: xackus (~xackus@185.15.0.3)
[13:10:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:29:29] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[13:32:56] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9plitnrxudwj9omd0nch.ipv6.telus.net) ()
[13:38:46] *** Quits: xackus (~xackus@185.15.0.3) (Quit: Leaving)
[13:41:48] *** Joins: xackus (~xackus@185.15.0.3)
[14:03:45] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[15:00:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983)
[15:03:22] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:11:06] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[15:29:17] *** Quits: frmdstryr (~jrm@172.58.206.148) (Ping timeout: 240 seconds)
[15:32:25] *** Joins: frmdstryr (~jrm@172.58.206.148)
[15:36:57] *** Quits: frmdstryr (~jrm@172.58.206.148) (Ping timeout: 240 seconds)
[15:44:02] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Ping timeout: 256 seconds)
[15:47:22] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[16:03:40] *** Quits: ickk (~ickk@user/ickk) (Ping timeout: 260 seconds)
[16:18:21] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Read error: Connection reset by peer)
[16:20:59] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[16:30:35] *** Joins: frmdstryr (~jrm@172.58.206.148)
[16:37:59] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[17:02:30] *** Joins: lumo_e (~enrico@151.29.57.144)
[17:19:03] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[17:19:19] *** Quits: b_jonas (~x@catv-176-63-3-122.catv.fixed.vodafone.hu) (Quit: leaving)
[17:45:17] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 240 seconds)
[17:47:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[17:49:31] *** Joins: xackus (~xackus@185.15.0.3)
[18:04:34] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[18:14:37] *** Quits: lumo_e (~enrico@151.29.57.144) (Ping timeout: 240 seconds)
[18:19:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:21:45] *** Joins: arkurious (~arkurious@user/arkurious)
[18:33:12] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[18:37:14] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[18:41:32] *** Joins: tenshi (~red@user/tenshi)
[18:44:00] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[18:50:36] *** Joins: littlebitle (~littlebit@178.71.1.181)
[19:09:12] *** Joins: pkap (~pkap@185.209.196.180)
[19:41:39] *** Joins: moog (~moog@107.126.53.129)
[19:44:08] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[19:58:53] *** Quits: phaleth (~user@user/phaleth) (Quit: phaleth)
[20:02:50] *** Quits: moog (~moog@107.126.53.129) (Ping timeout: 250 seconds)
[20:18:20] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Quit: WeeChat 3.3)
[20:29:12] *** Quits: pkap (~pkap@185.209.196.180) (Quit: Client closed)
[20:51:32] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[21:23:25] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:25:19] *** Joins: moog (~moog@107.126.53.88)
[21:28:13] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c)
[21:34:16] *** Quits: moog (~moog@107.126.53.88) (Ping timeout: 250 seconds)
[21:35:04] *** Joins: moog (~moog@107.126.53.88)
[21:37:33] *** Joins: jemius (~imperator@200116b82dd6d3006b16e0730e179c3b.dip.versatel-1u1.de)
[21:37:37] *** Parts: jemius (~imperator@200116b82dd6d3006b16e0730e179c3b.dip.versatel-1u1.de) (Leaving)
[21:41:55] *** Joins: jemius (~imperator@200116b82dd6d3006b16e0730e179c3b.dip.versatel-1u1.de)
[21:59:35] *** Quits: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com) (Ping timeout: 250 seconds)
[22:01:08] *** Quits: frmdstryr (~jrm@172.58.206.148) (Ping timeout: 250 seconds)
[22:01:17] *** Joins: tane (~tane@user/tane)
[22:02:09] *** Joins: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com)
[22:18:19] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:27:50] *** Quits: yeti (~username@user/yeti) (Ping timeout: 268 seconds)
[22:28:14] *** Joins: yeti (~username@user/yeti)
[22:36:36] <andrewrk> koakuma, happy hacking
[22:37:05] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 268 seconds)
[22:37:15] <andrewrk> marler8997, that commit is just "moved std/ to lib/std/"
[22:37:40] <marler8997> andrewrk gotcha, well I figured out what was going on
[22:37:40] <andrewrk> ifreund, did you mention you used some CLI tool for a handy git blame interface?
[22:37:50] <marler8997> BUFFER_OVERFLOW is expected
[22:37:52] <andrewrk> it does take a while to explore backwards via CLI
[22:38:00] <marler8997> it's a really weird function
[22:38:01] <ifreund> andrewrk: indeed, tig blame -MC is killer
[22:38:15] <ifreund> (-MC are normal very useful git blame options)
[22:38:30] <marler8997> right now I'm debugging why __muloti4 is causing a segfault in Zig's fromSysTime :(
[22:39:14] <andrewrk> ifreund, pretty nice - is there a keyboard shortcut to go 1 past the commit from the line you're currently on?
[22:39:28] <andrewrk> ah, found the help menu
[22:39:35] <ifreund> ,
[22:39:48] <andrewrk> "Going back is not supported by the help view" rip
[22:40:07] <ifreund> close the help menu first
[22:40:30] <andrewrk> oh yeah this is a game changer
[22:40:33] <andrewrk> nice, thanks for the tip!
[22:40:33] <ifreund> the interface is a little bit clunky, but it still beats using the CLI for this specific task I find
[22:40:38] <ifreund> no problem!
[22:40:59] <ifreund> , is pretty much the only keybinding I know xD
[22:41:10] <andrewrk> hahaha
[22:41:17] *** Joins: jake_ (~jake@2600:6c44:257f:e1f7::1a29)
[22:41:24] <andrewrk> yeah I was doing it manually with like `git blame <paste>^ -- [file]`
[22:42:21] <ifreund> yeah same
[22:43:25] *** Quits: jake_ (~jake@2600:6c44:257f:e1f7::1a29) (Client Quit)
[22:43:46] *** Joins: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29)
[22:44:22] <marler8997> any idea why building a small test app would call .weak.__muloti4.default._alloca but when building the zig executable it calls __muloti4?
[22:45:46] <andrewrk> what's "weak" "default" and "alloca" ? 
[22:45:56] <andrewrk> what target is this?
[22:46:02] <marler8997> windows x86_64
[22:46:23] <marler8997> that's what the debugger is showing, but when I'm debugging the zig exe it just says: __muloti4:
[22:46:32] <andrewrk> __muloti4 is the expected symbol name
[22:46:37] <andrewrk> not sure what's going on with that other one
[22:47:08] <marler8997> when zig exe calls __muloti4 it crashes, when my small test app calls .weak.__muloti4.default._alloca it works
[22:47:17] <marler8997> and I can see that they are different functions, their assembly is different
[22:47:35] <marler8997> I can't even declare extern __muloti4 in my test app and call it, it still calls the weird one
[22:47:39] <andrewrk> did you notice that compiler-rt selects a different linkage for symbols if you're using `zig test` on compiler_rt directly?
[22:47:45] <marler8997> yes
[22:48:23] <marler8997> does zig compiler compiler_rt as a static library and link it to all exes?
[22:48:59] *** Joins: gawenr (~textual@2a01:e0a:21c:99a0:396c:f385:596b:8153)
[22:55:25] <andrewrk> correct
[22:55:48] *** Quits: factor (~factor@c-73-68-120-166.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[22:55:50] <marler8997> tried this but now linker is saying __muloti4 is a duplicate symbol??!?
[22:55:50] <marler8997> https://gist.github.com/marler8997/9f2b453764fa6121b45bc8ad14dc3926
[22:56:42] <andrewrk> weak linkage makes it so that the linker is allowed to replace the definition with a same-named symbol from any other compilation unit
[22:56:53] *** Joins: frmdstryr (~jrm@172.58.206.178)
[22:56:55] <marler8997> right
[22:56:59] <marler8997> so this makes no sense
[22:57:12] <andrewrk> oh an an export I mean. on `extern` it means that it will be null at runtime if it didn't get linked in
[22:57:41] <marler8997> so how is creating an @extern creating a "duplicate symbol"?
[22:58:41] <marler8997> I don't know why but I can't figure out how to call the actual "__muloti4".  It seems LLVM replaces it with the other one and I'm not sure what the magic trickery is to prevent that
[22:59:07] <andrewrk> I can repro the issue. It seems like a bug. I don't expect to get a duplicate linker symbol for this code
[23:00:11] <marler8997> lol, I tried adding library_name "compiler_rt" and it says "DLL import librayr for -lcompiler_rt not found"
[23:00:25] <andrewrk> yeah I don't think library name is what you want here
[23:01:37] <marler8997> The Zig exe calls the real one, it must be using some LLVM option that changes which one it calls or something
[23:08:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[23:15:21] *** Joins: factor (~factor@c-73-68-120-166.hsd1.ma.comcast.net)
[23:21:35] <andrewrk> I wonder what non-working-on-zig activity I should do on this fine saturday. perhaps give River a spin? play some oxygen not included? both??
[23:22:17] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[23:24:21] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Read error: Connection reset by peer)
[23:24:39] <Franciman> andrewrk: what about going for a walk?
[23:25:02] <andrewrk> ehh today is gym day, that'll be enough exercise
[23:25:09] <Franciman> ohh then alright!
[23:25:12] <Franciman> makes sense :)
[23:25:31] <Franciman> watching a movie?
[23:25:46] <Franciman> while giving river a spin and playing some oxygen not included (which i don't know what is)
[23:27:50] <andrewrk> it's quite fun: https://www.klei.com/games/oxygen-not-included
[23:28:40] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[23:29:08] *** Joins: lumo_e (~enrico@131.114.212.19)
[23:34:22] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[23:39:26] *** Joins: kiedtl|web (~kiedtl|we@kisslinux/kiedtl)
[23:40:04] <kiedtl|web> Is it possible to "unwrap" an enum invariant, passing it to a function that takes anytype, without switch()'ing it?
[23:40:26] <kiedtl|web> e.g., something like this: @truncate(u8, unwrap(foo))
[23:40:37] <ifreund> kiedtl|web: you mean @enumToInt()?
[23:40:56] <kiedtl|web> Hm no, the enum's value being a number was just an example
[23:41:59] <kiedtl|web> So, in that example I want to avoid doing "switch (foo) { .Variant => |_| @truncate(u8, foo.Variant), .Variant2 => |_| @truncate(u8, foo.Variant2), ...}" for all variants
[23:42:11] <andrewrk> you can just do `foo.Variant`
[23:42:14] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:42:36] <andrewrk> this has a runtime safety check to make sure Variant is the active tag
[23:42:37] <kiedtl|web> But, I don't know what variant it is beforehand. (the function can take any variant though)
[23:42:49] <andrewrk> ah I understand the question now
[23:42:59] <kiedtl|web> I'm terrible at explaining :|
[23:43:06] <andrewrk> I think this issue solves your problem: https://github.com/ziglang/zig/issues/7224
[23:43:16] <andrewrk> accepted but not implemented yet
[23:43:46] <andrewrk> basically you would do `switch (foo) { inline else => |payload| { ... } }`
[23:44:03] <andrewrk> and then payload would be the unwrapped variant
[23:44:19] <andrewrk> at runtime it would be generated as a bunch of switch cases
[23:44:34] <kiedtl|web> Hm, yes, it appears that's what I'm looking for
[23:44:43] <kiedtl|web> Guess I'm waiting for 0.10.0 then :)
[23:44:48] <ugla> could you do it currently with `inline for` over the possible variants?
[23:45:00] <andrewrk> yes I believe so
[23:45:06] <kiedtl|web> hm, possibly
[23:45:17] <kiedtl|web> Verbose but better than doing each variant
[23:45:22] <kiedtl|web> Thanks y'all :^)
[23:45:24] <ugla> yeah
[23:49:24] <gw1> you could just bitcast it if they all have the same representation
[23:49:40] <squeek502> if the payloads are the same type, i believe you can group them in a switch case: switch (foo) { .Variant, .Variant2 => |x| @truncate(u8, x) }
[23:49:47] <gw1> also ^
[23:57:03] *** Joins: cr1901_ (~cr1901@2601:8d:8600:911:802e:6f0e:4f0b:6265)
[23:59:04] *** af is now known as Borisa_Johnsona
