[00:00:17] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[00:02:11] <ouestbillie> netsplit... don't really know what triggered it
[00:02:20] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[00:03:21] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:03:34] *** Quits: gproto_23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[00:05:29] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[00:07:49] *** Joins: xsperry (~xs@user/xsperry)
[00:13:16] *** NobleNibble is now known as f8l
[00:13:58] *** Quits: leah2 (~leah@vuxu.org) (Quit: trotz alledem!)
[00:14:06] *** Joins: leah2 (~leah@vuxu.org)
[00:24:09] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:29:33] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[00:34:34] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[00:37:46] *** Joins: Bi[m] (~bimatrixo@2001:470:69fc:105::109a)
[00:37:59] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:38:47] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:48:35] *** Joins: Everything (~Everythin@37.115.210.35)
[00:52:04] *** Joins: yewscion (~yewscion@52.94.133.128)
[00:52:49] *** Quits: webshinra_ (~shinra@2a01cb080779fc003f6926a195b6d607.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:54:33] *** Joins: webshinra (~shinra@2a01cb080779fc003f6926a195b6d607.ipv6.abo.wanadoo.fr)
[01:04:22] *** Joins: edmrk[m] (~edmrkmatr@2001:470:69fc:105::1:5a63)
[01:05:05] *** Parts: groomvy_ (sid62069@id-62069.hampstead.irccloud.com) ()
[01:05:21] *** Joins: groovy (sid62069@id-62069.hampstead.irccloud.com)
[01:09:51] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[01:10:08] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) ()
[01:10:52] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: Lost terminal)
[01:11:15] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[01:18:55] *** Quits: edmrk[m] (~edmrkmatr@2001:470:69fc:105::1:5a63) (Write error: Connection reset by peer)
[01:18:55] *** Quits: DeeEff_ (~deeeff@user/deeeff) (Read error: Connection reset by peer)
[01:18:56] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Write error: Connection reset by peer)
[01:18:56] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Write error: Connection reset by peer)
[01:18:59] *** Quits: Bi[m] (~bimatrixo@2001:470:69fc:105::109a) (Write error: Connection reset by peer)
[01:18:59] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (Read error: Connection reset by peer)
[01:21:05] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[01:23:09] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[01:27:59] <mdhughes> There's a lot of uses for non-list cons, when making trees, or a key-value pair. So you can't just ban non-list structures in it.
[01:28:00] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[01:28:00] *** Joins: edmrk[m] (~edmrkmatr@2001:470:69fc:105::1:5a63)
[01:28:00] *** Joins: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44)
[01:28:00] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[01:28:00] *** Joins: ormaaj2 (~ormaaj@user/ormaaj)
[01:28:00] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:28:01] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[01:28:01] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[01:28:01] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[01:28:03] *** Joins: Bi[m] (~bimatrixo@2001:470:69fc:105::109a)
[01:29:08] <mdhughes> I do use lists a lot, of course, they're just slightly dangerous and a na√Øve application is very slow. If I know anything about the data, I prefer to put things in vectors, and I have a growable vector type.
[01:29:39] <Zipheir> Key-value pair: (a b)
[01:29:59] <mdhughes> That's a waste of a cons, it's (a . (b . ())
[01:30:08] <Zipheir> Oh my.  An extra cons!
[01:30:36] <Zipheir> I kid, but it doesn't seem worth the wonkiness of improper lists.
[01:30:39] *** robin_ is now known as robin
[01:30:44] <mdhughes> Look, I grew up with 16K, 48K, then 64K machines. Best case I ever had was 38K free RAM after OS & BASIC. So every byte still matters to me.
[01:30:55] <Zipheir> You could use 2-vectors.
[01:30:58] <wasa> every byte is sacred
[01:31:05] <wasa> every byte is great
[01:31:10] <wasa> if a byte is wasted
[01:31:11] <tokie> the last work desktop i had had 256GB ram
[01:31:16] <Zipheir> wasamasa got split in the netsplit, I see. :)
[01:31:16] <wasa> mark gets quite irate
[01:31:22] *** wasa is now known as wasamasa
[01:31:29] <mdhughes> wasa: +1
[01:31:35] <wasamasa> thanks
[01:34:14] <Zipheir> Nicely done. :)
[01:34:16] *** Joins: karlosz (~karlosz@136.56.98.53)
[01:37:22] *** Joins: seninha (~seninha@user/seninha)
[01:38:48] <sonny> If I just want to print to stdout, what should I choose from ~a ~s and ~v
[01:41:16] <mdhughes> format's not standard, but in impls that have it, it usually does all the CL options. I use ~s mostly.
[01:41:36] <mdhughes> The standard is (display) and (newline)
[01:42:34] *** Joins: eddof13 (~textual@2806:102e:12:4fba:54d5:85ef:67d1:ca00)
[01:43:43] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Quit: Client limit exceeded: 20000)
[01:44:01] *** Quits: eddof13 (~textual@2806:102e:12:4fba:54d5:85ef:67d1:ca00) (Client Quit)
[01:44:02] *** Quits: atw` (~user@2601:5c2:c500:76b0::36e1) (Ping timeout: 240 seconds)
[01:44:24] *** Quits: DeeEff_ (~deeeff@user/deeeff) (Quit: Client limit exceeded: 20000)
[01:44:29] *** Quits: ormaaj2 (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[01:44:42] *** Quits: edmrk[m] (~edmrkmatr@2001:470:69fc:105::1:5a63) (Quit: Client limit exceeded: 20000)
[01:45:26] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[01:46:46] *** Quits: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44) (Quit: Client limit exceeded: 20000)
[01:47:18] *** Quits: sdu_ (~sidu@185.44.146.214) (Ping timeout: 260 seconds)
[01:48:24] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Quit: Client limit exceeded: 20000)
[01:49:34] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (Quit: Client limit exceeded: 20000)
[01:56:28] <sonny> ok, I'm going to use ~a
[01:56:42] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[01:56:42] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[01:56:42] *** Joins: edmrk[m] (~edmrkmatr@2001:470:69fc:105::1:5a63)
[01:56:54] *** Joins: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44)
[01:56:54] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[01:56:54] *** Joins: ormaaj2 (~ormaaj@user/ormaaj)
[01:56:54] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:56:54] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[02:02:46] *** Joins: tatsumaru (~tatsumaru@82.147.131.155)
[02:03:54] <tatsumaru> just saw a video on computerphile about finite state automata, aka machines without memory. the example given was a vending machine. for some reason i felt appreciative that you can build a computer without memory.
[02:05:35] <sonny> you can't
[02:06:18] <tatsumaru> why not?
[02:07:54] <sonny> well, I dunno how to make one without registers
[02:08:01] <sonny> sorry for my terrible answer
[02:09:24] <tatsumaru> well I am not sure a vending machine has registers. it's just a mechanical computer that changes state, but isn't capable of tracing back.
[02:10:05] <sonny> yeah, it doesn't
[02:10:22] <sonny> when you say computer, I think of something specific
[02:10:56] <sonny> and it's not just something made with finite state elements
[02:10:57] <mdhughes> I'm sure almost any vending machine made this century has a microcontroller and some RAM.
[02:11:17] <sonny> yeah, they have digital displays
[02:11:24] <sonny> but I'm just going with the example
[02:11:30] *** Quits: zap1 (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[02:11:43] <tatsumaru> mdhughes: yeah most likely, but the point is you can build the core functionality without microchips
[02:12:12] <sonny> sure
[02:12:26] <sonny> but what's the point, computers are cost effect and dirt cheap
[02:12:46] <tatsumaru> no point, I just like extremely simple things that aren't completely useless
[02:13:41] <sonny> I mean, I guess you could just make do with some sr latches I guess
[02:14:07] <sonny> but that's probably more expensive :P
[02:14:10] <tatsumaru> i guess from my point of view, even an abacus is a computer
[02:14:10] <mdhughes> Some of it, you only need a sensor to light up when something's out. Change is probably too hard to do mechanically with different prices, bills. Credit cards require a computer.
[02:14:36] <sonny> oh right, they do use cards now
[02:14:56] <sonny> tatsumaru so any automaton?
[02:15:14] <sonny> even a light switch?
[02:16:35] <tatsumaru> hmm have to think about this, if it can only do one operation, not sure it qualifies, maybe two light switches though
[02:18:58] <tatsumaru> i take that back, you are right, just remembered morse code
[02:20:21] <tatsumaru> although in the case of morsecode the computer is the brain, so maybe i didn't think this very well through
[02:20:35] <sonny> automata is very useful, my frontend will be two machines
[02:20:48] <sonny> just need to get the hang of state in scheme
[02:21:27] *** ormaaj2 is now known as oormaaj
[02:21:49] *** oormaaj is now known as ormaaj
[02:21:57] <Zipheir> sonny: Also take a look at https://srfi.schemers.org/srfi-166/srfi-166.html
[02:22:38] <sonny> monad is such a scary word
[02:22:40] <Zipheir> Formatting combinators are very powerful, and they compose better than magic format strings.
[02:23:01] <sonny> the srfi's are really impressive
[02:23:09] <tatsumaru> sonny are you writing a scheme
[02:23:26] <sonny> no, just oberon subset compiler for now
[02:23:45] <sonny> what do srfi's require? just a scheme with a standard?
[02:23:54] <sonny> it'd be nice to get all that code for free :P
[02:25:25] <Zipheir> sonny: The implementations are usually portable.
[02:25:48] <sonny> ok great
[02:26:17] <Zipheir> CHICKEN and chibi already have SRFI 166, so it definitely works in practice.
[02:26:34] <Zipheir> Well, it's called 'fmt' in chicken.
[02:28:36] *** Quits: tatsumaru (~tatsumaru@82.147.131.155) (Quit: Leaving.)
[02:30:49] *** Joins: livoreno (~livoreno@user/notzmv)
[02:32:10] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Quit: Client limit exceeded: 20000)
[02:36:35] *** Joins: tristero (~nobody@user/tristero)
[02:41:03] *** Joins: madage (~madage@user/madage)
[02:48:23] *** Quits: civodul` (~user@91-160-117-201.subs.proxad.net) (Ping timeout: 256 seconds)
[02:55:02] *** Joins: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4)
[02:58:09] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 256 seconds)
[03:08:47] *** Quits: light_ (~light@user/light) (Ping timeout: 256 seconds)
[03:13:17] <wasamasa> https://github.com/pollrobots/scheme
[03:13:17] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[03:13:46] <wasamasa> the sources are a chore to read
[03:16:00] <wasamasa> > Its written directly in the WebAss...
[03:16:26] <edgar-rft> in the ass of the web?
[03:17:14] <wasamasa> perhaps
[03:17:55] <edgar-rft> but you're right: greatest source code ever :-)
[03:31:59] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:44:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[03:49:16] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:49:22] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:49:32] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[03:49:52] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:50:37] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 240 seconds)
[03:52:17] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[03:53:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:54:52] *** Joins: phoebos (~phoebos@kisslinux/phoebos)
[03:55:27] *** Joins: akarle (~akarle@user/akarle)
[03:58:37] *** ouestbillie is now known as desproges
[03:58:41] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[04:00:13] *** Quits: akarle (~akarle@user/akarle) (Ping timeout: 240 seconds)
[04:02:16] *** Quits: desproges (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[04:02:36] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:08:51] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[04:11:44] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Closing Window)
[04:12:43] *** Joins: akarle (~akarle@user/akarle)
[04:22:34] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:23:25] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[04:24:57] *** Quits: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4) (Ping timeout: 240 seconds)
[04:25:21] *** Joins: atw` (~user@2601:5c2:c500:76b0::2e59)
[04:45:17] *** Dap is now known as DaPinkOne
[04:51:22] *** Joins: taiju (~taiju@m014013236064.v4.enabler.ne.jp)
[05:19:46] *** Quits: atw` (~user@2601:5c2:c500:76b0::2e59) (Remote host closed the connection)
[05:20:22] *** Joins: atw` (~user@2601:5c2:c500:76b0::12a7)
[05:29:20] *** Joins: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi)
[05:30:37] *** Quits: atw` (~user@2601:5c2:c500:76b0::12a7) (Ping timeout: 240 seconds)
[05:39:59] *** Joins: atw` (~user@2601:5c2:c500:76b0::77ad)
[05:58:17] *** Quits: atw` (~user@2601:5c2:c500:76b0::77ad) (Ping timeout: 240 seconds)
[06:24:51] *** Quits: taiju (~taiju@m014013236064.v4.enabler.ne.jp) (Ping timeout: 256 seconds)
[06:25:58] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[06:39:23] <Spawns> how do schemes normally handle top level code? are they considered a lambda or is it just kind of its own special cased thing
[06:40:36] *** Joins: jgart (16dd2205e4@irc.cheogram.com)
[06:44:06] *** Quits: nalaginrut_ (~nalaginru@121.35.188.14) (Ping timeout: 260 seconds)
[06:53:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[06:53:57] *** Quits: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi) (Quit: Client closed)
[06:55:31] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[06:58:31] *** Joins: nalaginrut_ (~nalaginru@121.35.188.14)
[06:58:52] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:59:42] *** Joins: livoreno (~livoreno@user/notzmv)
[07:02:49] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:07:59] *** Joins: scheme-scribe (~scheme-sc@gmw.xen.prgmr.com)
[07:25:02] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:b0a0:2acf:d5f8:7b92)
[07:26:02] *** Quits: lottaquestions_ (~nick@2607:fa49:5041:a200:b0a0:2acf:d5f8:7b92) (Ping timeout: 240 seconds)
[07:28:19] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[07:31:19] <jrincayc> Spawns: Hm, at the top level, just evaluate each expression.  There is also the various library imports and such.  (Section 5 of r7rs has the details).
[07:43:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[07:56:39] *** Quits: ns12 (~ns12@user/ns12) (Ping timeout: 256 seconds)
[08:00:38] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Ping timeout: 260 seconds)
[08:02:04] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:06:52] <Spawns> I am compiling the scheme to bytecode so I was wondering how I should handle storing the opcodes, since functions are first class I store the "program" directly in the lambda object itself
[08:07:05] <Spawns> but top level code is in this sort of weird state on its own
[08:07:22] <Spawns> i was considering just making the top level an implict lambda 
[08:11:07] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[08:15:28] *** Joins: atw` (~user@2601:5c2:c500:76b0::4915)
[08:19:24] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:31:35] *** Joins: frost (~frost@user/frost)
[08:40:32] *** evdubs_ is now known as evdubs
[08:45:17] *** Quits: atw` (~user@2601:5c2:c500:76b0::4915) (Ping timeout: 240 seconds)
[08:47:46] *** Joins: light (~light@user/light)
[08:56:58] <Zipheir> Spawns: That sounds like one way to do it.
[09:00:13] <Zipheir> Spawns: It's also worth considering whether you want to implement a module system.
[09:00:53] *** Joins: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi)
[09:25:41] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[09:45:35] *** Quits: ZombieChicken (~weechat@user/zombiechicken) (Remote host closed the connection)
[09:47:29] <Spawns> at some point I would like to Zipheir, but right now I need to just get the very basics working
[09:47:47] *** Joins: ZombieChicken (~weechat@user/zombiechicken)
[10:19:12] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[10:30:58] *** Quits: taylan (~taylan@user/taylan) (Quit: Leaving)
[10:46:02] *** Joins: sdu (~sidu@185.44.146.214)
[10:52:42] *** Joins: taylan (~taylan@user/taylan)
[10:54:41] *** Quits: taylan (~taylan@user/taylan) (Client Quit)
[10:55:16] *** Joins: eMBee (~eMBee@realss.com)
[11:07:56] *** Joins: taylan (~taylan@user/taylan)
[11:15:26] *** Quits: taylan (~taylan@user/taylan) (Quit: Leaving)
[11:19:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[11:21:20] *** Joins: taylan (~taylan@user/taylan)
[11:22:50] *** Quits: taylan (~taylan@user/taylan) (Client Quit)
[11:26:33] *** Quits: karlosz (~karlosz@136.56.98.53) (Quit: karlosz)
[11:28:03] *** Joins: civodul (~user@guix/contributor/civodul)
[11:55:28] *** Joins: taylan (~taylan@user/taylan)
[12:05:47] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:09:56] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:29:47] *** Quits: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi) (Ping timeout: 256 seconds)
[12:30:52] <dpk> identifier macros marked ready to merge into Chibi. let's hope Alex approves!
[12:32:28] *** Joins: klovett (~klovett@107.115.32.130)
[12:34:54] *** Quits: klovett_ (~klovett@107.115.32.130) (Ping timeout: 268 seconds)
[12:42:53] *** massimo_zaniboni is now known as mzan
[12:55:44] *** Joins: zap1 (~zap@gateway/tor-sasl/zap)
[12:59:25] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:11:50] *** Quits: zap1 (~zap@gateway/tor-sasl/zap) (Remote host closed the connection)
[13:12:12] *** Joins: zap1 (~zap@gateway/tor-sasl/zap)
[13:23:06] *** Joins: ns12 (~ns12@user/ns12)
[13:27:50] *** Joins: notzmv (~zmv@user/notzmv)
[13:51:45] *** Joins: Darkcoal (~user@2001:16a2:7a92:bc00:1f6a:511c:8c43:ad3e)
[13:57:57] *** Quits: Darkcoal (~user@2001:16a2:7a92:bc00:1f6a:511c:8c43:ad3e) (Ping timeout: 240 seconds)
[13:58:14] *** Joins: Darkcoal (~user@2001:16a2:7a92:bc00:1f6a:511c:8c43:ad3e)
[14:05:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[14:05:48] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:05:56] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:13:14] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:13:22] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:15:20] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:15:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:18:12] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:18:20] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:18:40] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:18:49] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:26:05] *** Quits: zap1 (~zap@gateway/tor-sasl/zap) (Remote host closed the connection)
[14:26:07] *** Quits: Darkcoal (~user@2001:16a2:7a92:bc00:1f6a:511c:8c43:ad3e) (Ping timeout: 250 seconds)
[14:26:23] *** Joins: Darkcoal (~user@2001:16a2:7a92:bc00:1f6a:511c:8c43:ad3e)
[14:26:39] *** Joins: zap1 (~zap@gateway/tor-sasl/zap)
[14:33:09] *** Quits: madage (~madage@user/madage) (Ping timeout: 276 seconds)
[14:33:25] *** Joins: madage (~madage@user/madage)
[14:40:27] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:47:02] *** Quits: Darkcoal (~user@2001:16a2:7a92:bc00:1f6a:511c:8c43:ad3e) (Ping timeout: 240 seconds)
[14:48:44] *** Joins: Darkcoal (~user@167.86.150.114)
[14:59:12] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[15:08:32] *** Joins: Everything (~Everythin@37.115.210.35)
[15:16:35] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:24:32] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[15:26:49] *** Joins: lloda (~user@11-206-127-185.static.world-connect.ch)
[15:42:09] *** Quits: robin (~robin@user/terpri) (Ping timeout: 250 seconds)
[15:44:48] *** Quits: Bi[m] (~bimatrixo@2001:470:69fc:105::109a) (Quit: Client limit exceeded: 20000)
[15:45:57] *** Joins: seninha (~seninha@user/seninha)
[16:19:21] *** Joins: yewscion (~yewscion@72-21-196-64.amazon.com)
[16:20:14] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:25:44] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:54:10] *** Joins: atw` (~user@2601:5c2:c500:76b0::9818)
[16:54:44] *** Oxyd- is now known as Oxyd
[16:56:59] *** Quits: Kooda (~kooda@natsu.upyum.com) (Remote host closed the connection)
[17:00:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b440:1fdb:a9a9:c6fa)
[17:00:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b440:1fdb:a9a9:c6fa) (Changing host)
[17:00:25] *** Joins: skapata (~Skapata@user/skapata)
[17:12:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[17:21:36] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[17:33:47] *** Joins: Kooda (~kooda@natsu.upyum.com)
[17:37:34] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[17:41:39] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Client Quit)
[17:44:54] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:47:54] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:54:13] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[17:54:14] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[17:56:13] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Client Quit)
[17:58:39] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[18:12:55] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[18:20:34] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:24:57] *** Quits: atw` (~user@2601:5c2:c500:76b0::9818) (Ping timeout: 240 seconds)
[18:32:08] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:ccd0:14b:7955:8e0f)
[18:36:40] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[18:49:49] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:56:29] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[19:01:30] *** Joins: xsperry (~xs@user/xsperry)
[19:03:02] *** Joins: sub0 (~bc8147f2@cerf.good1.com)
[19:12:05] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[19:24:52] *** Quits: xgqtd (~xgqt@gentoo/developer/xgqt) (Quit: WeeChat 3.3)
[19:25:07] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[19:27:18] *** Quits: lagash_ (lagash@lagash.shelltalk.net) (Quit: ZNC - https://znc.in)
[19:30:16] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[19:30:35] *** Joins: lagash (lagash@lagash.shelltalk.net)
[19:37:38] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[19:45:41] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 256 seconds)
[19:46:15] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[19:48:21] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[19:56:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[20:08:47] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[20:10:12] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[20:31:22] *** Joins: seninha (~seninha@user/seninha)
[20:32:52] *** Quits: yewscion (~yewscion@72-21-196-64.amazon.com) (Quit: Connection closed)
[20:33:26] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:35:41] *** Joins: robin (~robin@user/terpri)
[20:45:27] *** Joins: yewscion (~yewscion@72-21-196-64.amazon.com)
[20:54:57] *** Quits: robin (~robin@user/terpri) (Ping timeout: 240 seconds)
[21:02:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[21:02:38] *** Joins: atw` (~user@2601:5c2:c500:76b0::c9b5)
[21:06:03] *** Joins: TomWesterhout[m] (~twesterho@2001:470:69fc:105::1:2918)
[21:11:07] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:ccd0:14b:7955:8e0f) (Ping timeout: 256 seconds)
[21:12:06] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[21:21:50] *** Joins: robin (~robin@user/terpri)
[21:22:48] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:23:18] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[21:24:59] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[21:25:15] <sonny> Can a list of symbols have an ordering?
[21:25:16] *** Joins: Bi[m] (~bimatrixo@2001:470:69fc:105::109a)
[21:26:05] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[21:31:57] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[21:36:23] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:38:39] <Zipheir> sonny: Sure.  One possibly ordering is given by (lambda (a b) (string<= (symbol->string a) (symbol->string b)))
[21:39:03] <Zipheir> *string<=?
[21:39:14] <sonny> hmm, ok
[21:39:31] <sonny> sounds like for what I want, an association list will suffice
[21:40:28] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[21:41:52] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[21:46:57] *** Quits: atw` (~user@2601:5c2:c500:76b0::c9b5) (Ping timeout: 240 seconds)
[21:51:31] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:52:38] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[21:59:15] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:00:17] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 240 seconds)
[22:02:09] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[22:15:28] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[22:16:37] *** Joins: jao (~jao@71.red-176-80-138.dynamicip.rima-tde.net)
[22:19:10] *** Joins: livoreno (~livoreno@user/notzmv)
[22:21:01] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:21:17] *** ec_ is now known as ec
[22:28:32] *** Joins: karlosz (~karlosz@136.56.98.53)
[22:37:24] *** Quits: zap1 (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[22:50:17] *** Joins: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060)
[23:07:10] *** Quits: eddof13 (~textual@2806:102e:12:4fba:a0ad:8e00:9345:9060) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:09:19] *** Quits: Darkcoal (~user@167.86.150.114) (Quit: Darkcoal)
[23:09:51] *** Quits: karlosz (~karlosz@136.56.98.53) (Quit: karlosz)
[23:14:47] *** Quits: jao (~jao@71.red-176-80-138.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[23:15:19] *** Quits: sub0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Error))
[23:15:50] *** Joins: sub0 (~bc8147f2@cerf.good1.com)
[23:26:59] *** Joins: karlosz (~karlosz@136.56.98.53)
[23:41:17] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 240 seconds)
[23:45:11] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Remote host closed the connection)
[23:53:58] *** Quits: sdu (~sidu@185.44.146.214) (Remote host closed the connection)
[23:54:59] *** Quits: rx80 (~quassel@user/rx80) ()
[23:57:24] *** Joins: rx80 (~quassel@user/rx80)
[23:59:30] *** Joins: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi)
