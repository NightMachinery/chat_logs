[00:00:41] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:00:43] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:01:20] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:35:59] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:36:32] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[01:37:58] *** Joins: hashfunc133c (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be)
[02:37:38] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[03:17:17] *** Quits: hashfunc133c (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be) (Ping timeout: 240 seconds)
[03:20:41] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[03:20:59] *** Joins: eugercek (~user@user/eugercek)
[03:22:42] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[04:00:48] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[04:26:37] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[04:28:28] *** Joins: Oladon (~olad@98.43.81.226)
[05:36:46] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[06:28:43] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Read error: Connection reset by peer)
[06:39:10] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[06:40:25] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[07:28:22] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[07:30:27] <beach> Good morning everyone! 
[09:20:20] <kagevf> beach: style question ... in Cluffer at the top of the source files, why do you prefix in-package with cl-? is it avoid any potential clashes with some other package's in-package? and once you do cl-in-package, you can safely assume that your "in" cl- so you don't have to prefix other things like defmethod with cl- ... is that correct?
[09:21:37] <beach> It's (cl:in-package ...) with the : package prefix.
[09:22:47] <beach> Well, it is more a question of making sure that the operator IN-PACKAGE is available at all and not so much to avoid a clash.
[09:24:05] <kagevf> ah! right cl:in-package
[09:24:25] <beach> Once that (cl:in-package <mumble>) has been evaluated, you are sure to be in the <mumble> package, but that package could perhaps not :USE the CL package, so you can use only symbols available in the <mumble> package without a package prefix.
[09:26:20] <beach> Does that make sense?
[09:26:41] <kagevf> it makes sense, and I'm trying to think of the implications
[09:27:21] <kagevf> the part about not being able to assume :USE <the CL package> is a great point I hadn't thought of
[09:28:05] <kagevf> so I would then think "ok, so during something like (asdf:load-system) that would be smart and ensure in-package is available"
[09:28:09] <kagevf> but then
[09:28:31] <beach> I mean, if you do (cl:in-package <mumble>) presumably, you know how <mumble> was made, so you wouldn't try to use symbols that are not available in it.
[09:28:45] <kagevf> right
[09:28:56] <kagevf> but given that premise, why isn't the rest of the file cl-defun cl-defmethod, etc ... ?
[09:29:42] <kagevf> how would we know that <mumble> has :USE CL ...?
[09:29:50] <beach> Because presumably you know how <mumble> was made, and if you know that it :USE-es CL, then you can use CL operators without any package prefix.
[09:30:15] <kagevf> ahhhhh ok I get it now
[09:30:22] <beach> You would not do (cl:in-package <mumble>) with <mumble> being someone else's package, so you know how it was created.
[09:30:38] <kagevf> the difference is whether you're in <mumble> or not ...
[09:31:27] <beach> Before the evaluation of (cl:in-package <mumble>) you don't know the current package.  After the evaluation, you know you are in <mumble>.
[09:31:46] <kagevf> right, if I'm writing code that consumes <mumble> there wouldn't be any (normal) reason to do (in-package <mumble>)
[09:32:11] <kagevf> and right, to your last point ... that was the part I was missing
[09:33:23] <beach> If by "consumes" you mean client code, then yes, client code should never do (IN-PACKAGE ...) with ... being the supplier package. 
[09:33:37] <kagevf> yes, that is what I meant
[09:34:14] <kagevf> it's pretty impressive that Line 1 of a file already had this much to teach! :) 
[09:34:27] <beach> Heh, yes.
[09:34:31] <opcode> okay so I have a lisp image running in a repl on a server, and I want to have it run but not have the repl prompt open.... is it a simple matter of sbcl:save-lisp-and-die ?
[09:35:23] <kagevf> thank you for taking the time to explain, beach!
[09:35:29] <beach> Pleasure.
[09:35:42] <Josh_2> opcode: you have a deployed application?
[09:35:54] <opcode> well, I suppose I do, yes
[09:36:03] <Josh_2> And you dont want it to drop into the repl?
[09:36:13] <opcode> well i want to run it as a systemd service
[09:36:16] <opcode> in the background
[09:36:19] <Josh_2> Okay no problem
[09:36:21] <Josh_2> give me a second
[09:37:03] <Josh_2> Take a look at this https://github.com/K1D77A/LunaMech/blob/master/src/bot/bot.lisp the important parts are setup-and-go which is the entry function, add-exit-hooks and front-end-loop
[09:37:21] <opcode> nice, thanks
[09:37:48] <Josh_2> You need to make a function that does nothing, as you can see I just (sleep 1000) over and over
[09:39:03] <Josh_2> The exit hooks are invoked when systemd shuts down the app, so its useful for performing any cleanup
[09:39:03] <opcode> my code makes use of timers to provide recurring function calls
[09:39:14] <opcode> do I still need a loop to just spin and do nothing?
[09:39:21] <opcode> i wasn't aware systemd would do that
[09:39:38] <Josh_2> well it'll shut it down if you tell it to or if you shutdown the machine
[09:39:56] <Josh_2> opcode: perhaps you dont, if you have a function that basically never returns then that will work
[09:40:15] <opcode> yeah okay, i just wasn't sure because timers run in their own threads
[09:40:48] <Josh_2> in the code I sent the work is done in a background thread so I have to have something running the foreground or the app will be constantly restarted by systemd
[09:41:17] <opcode> ah okay, that answers my question then
[09:41:28] <opcode> good ol systemd
[10:00:25] *** Quits: jealousmonk (~user@user/jealousmonk) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 27.1))
[10:30:33] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[10:31:01] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[11:36:20] *** Joins: silasfox (~sbv@p200300cec71b7900525c480533030ba1.dip0.t-ipconnect.de)
[11:55:02] *** Joins: shka (~herr@109.231.3.55)
[12:29:44] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:51:12] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[12:52:08] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:28:36] *** Quits: lisp123 (~lisp123@120.154.103.52) (Read error: Connection reset by peer)
[13:29:06] *** Joins: lisp123 (~lisp123@120.154.103.52)
[14:06:55] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[14:09:13] *** Joins: st_iron (uid370243@id-370243.uxbridge.irccloud.com)
[14:09:17] <st_iron> hello
[14:09:37] <beach> Hello st_iron.
[15:24:19] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:39:42] *** Joins: eugercek (~user@user/eugercek)
[16:20:54] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[16:47:19] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:56:19] *** Joins: eugercek (~user@user/eugercek)
[17:01:04] *** Quits: lisp123 (~lisp123@120.154.103.52) (*.net *.split)
[17:01:04] *** Quits: shka (~herr@109.231.3.55) (*.net *.split)
[17:01:04] *** Quits: opcode (~opcode@user/opcode) (*.net *.split)
[17:01:04] *** Quits: il (~il@user/f/x-7830992) (*.net *.split)
[17:01:04] *** Quits: derelict (derelict@user/derelict) (*.net *.split)
[17:01:04] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[17:01:04] *** Quits: antoszka (sid528518@id-528518.uxbridge.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105) (*.net *.split)
[17:01:04] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (*.net *.split)
[17:01:04] *** Quits: Andrew (Andrew@user/AndrewYu) (*.net *.split)
[17:02:30] *** Joins: lisp123 (~lisp123@120.154.103.52)
[17:02:30] *** Joins: shka (~herr@109.231.3.55)
[17:02:30] *** Joins: opcode (~opcode@user/opcode)
[17:02:30] *** Joins: il (~il@user/f/x-7830992)
[17:02:30] *** Joins: derelict (derelict@user/derelict)
[17:02:30] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[17:02:30] *** Joins: antoszka (sid528518@id-528518.uxbridge.irccloud.com)
[17:02:30] *** Joins: Andrew (Andrew@user/AndrewYu)
[17:02:30] *** Joins: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105)
[17:02:30] *** Joins: commandoline (~commandol@ubuntu/member/commandoline)
[17:18:58] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:14:59] *** Quits: silasfox (~sbv@p200300cec71b7900525c480533030ba1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:15:16] *** Joins: silasfox (~sbv@p4fe8dfb9.dip0.t-ipconnect.de)
[20:10:43] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:27:30] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[21:51:07] *** Quits: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru) (Ping timeout: 256 seconds)
[21:56:25] *** Joins: v88m (~Xiro@213.87.152.231)
[22:13:26] *** Joins: Psybur (~Psybur@mobile-166-171-56-243.mycingular.net)
[22:15:53] *** Quits: v88m (~Xiro@213.87.152.231) (Read error: Connection reset by peer)
[22:16:10] *** Joins: jealousmonk (~user@user/jealousmonk)
[22:17:59] *** Joins: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru)
[22:21:19] *** Quits: silasfox (~sbv@p4fe8dfb9.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[22:24:04] *** Joins: silasfox (~sbv@p200300cec71b7900525c480533030ba1.dip0.t-ipconnect.de)
[22:38:48] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[22:39:06] *** Joins: eugercek (~user@user/eugercek)
[22:39:44] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[22:58:29] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[23:04:09] *** Joins: Oladon (~olad@98.43.81.226)
[23:51:00] *** Quits: silasfox (~sbv@p200300cec71b7900525c480533030ba1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:53:02] *** Joins: silasfox (~sbv@p4fe8dfb9.dip0.t-ipconnect.de)
