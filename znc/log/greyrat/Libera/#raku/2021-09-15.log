[00:21:29] *** Quits: cognominal (~cognomina@lfbn-idf1-1-1362-51.w90-79.abo.wanadoo.fr) (Quit: Leaving)
[00:24:42] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Quit: WeeChat 3.2)
[00:42:39] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[00:47:41] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Quit: WeeChat 3.2)
[01:02:57] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[01:12:32] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[01:15:49] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Client Quit)
[01:21:39] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Quit: WeeChat 3.2)
[01:24:34] <immediate> i see thank you
[01:25:59] <immediate> does it not make sense to have WHICH as a sub
[01:31:55] <japhb> I'm not entirely sure why *WHAT* is a sub ...
[01:33:25] <moritz_> probably so you can .map(&WHAT)?
[01:38:31] <gfldex> immediate: many month ago I asked that question in #perl6-dev (many many months ago) and this is by design. In some places it's the only way to find out what a thing is.
[01:43:45] <immediate> gfldex: Did you mean WHICH question? and "it" in your second sentence refers to "by design"?
[01:44:10] <gfldex> The bahaviour of .WHAT is by design.
[01:44:51] <japhb> moritz_: I'd write that as .map(*.WHAT) anyway I think
[01:45:38] <moritz_> but then .WHAT needs to be a real method as well, not a macro
[01:45:52] <moritz_> m: class A { method WHAT() { 'X' }; say A.WHAT
[01:45:52] <camelia> rakudo-moar 10b327292: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3ss A { method WHAT() { 'X' }; say A.WHAT7⏏5<EOL>␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        stat…»
[01:46:00] <moritz_> m: class A { method WHAT() { 'X' }}; say A.WHAT
[01:46:00] <camelia> rakudo-moar 10b327292: OUTPUT: «(A)␤»
[01:46:26] <moritz_> if that were the case, the line above should return X, not A
[01:47:46] <japhb> moritz_: Why would we support override of WHAT?
[01:48:17] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[01:48:20] <japhb> m: .say for (3, "b").map(*.WHAT)
[01:48:21] <camelia> rakudo-moar 10b327292: OUTPUT: «Cannot map a List using 'Whatever'␤Did a * (Whatever) get absorbed by a list?␤  in block <unit> at <tmp> line 1␤␤»
[01:48:30] <japhb> Oh interesting
[01:48:59] <gfldex> I don't think we have a name for the things that are like .WHAT .
[01:49:15] <japhb> I figured that it would macroize the WhateverCode, but I guess not.
[01:49:39] <gfldex> `$foo.do-stuff` <-- what kind of thing is `.`?
[01:51:41] <gfldex> I link to think about those things as grammar- or AST-level operators. So `.WHAT` is a "postfix at compile time".
[01:51:52] <gfldex> s/link/like/
[01:55:50] *** Quits: immediate (~immediate@37.155.237.197) (Ping timeout: 268 seconds)
[01:56:07] <tonyo> isn't that the gist of a macro?
[01:57:47] <gfldex> The macros we have right now are written like a sub. Is a sub an operator?
[01:59:29] <japhb> gfldex: Are you asking that in the type-theoretic sense or the Raku practical sense?
[02:01:12] <gfldex> In a natural language sense. Because we are talking about it and have difficulty to name the catigory.
[02:04:25] <gfldex> Actually, natural language is hard. Let's stick with Raku. :D
[02:08:28] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[02:08:41] <melezhik> is raku `dir()` function keeps it state?
[02:08:54] <melezhik> https://github.com/melezhik/topsdevops/blob/master/app.raku#L18-L20
[02:09:23] <melezhik> this 2 lines returns the same results even though content of directories change across requests
[02:09:48] <gfldex> melezhik: the function itself doesn't but the c-level stuff it uses does
[02:09:51] <melezhik> they only give another result when I restart my cro app
[02:10:12] <melezhik> so, how can I "flush" dir state?
[02:10:12] <gfldex> however, keeping that state around for to long might result in strange errors
[02:10:40] <melezhik> I don't need to keep state, here is the thing ))
[02:10:54] <gfldex> dir returns a list. The state is bound to that list. If you call dir() again you get a fresh list with it's own state
[02:11:24] <melezhik> I expect dir() is called per every cro request ...
[02:11:56] <melezhik> oh, it is not ...
[02:12:13] <melezhik> only now noticed it is not under a certain router
[02:12:22] <melezhik> that explains the behavior ))))
[02:12:34] <melezhik> thanks for thinking with me gfldex ))))
[02:22:58] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Ping timeout: 260 seconds)
[02:23:06] <tonyo> gfldex: it's still a macro, syntax doesn't preclude something from being a macro
[03:22:58] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:22:59] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:24:22] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 252 seconds)
[03:25:15] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 268 seconds)
[03:25:36] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[03:26:00] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[03:26:04] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 252 seconds)
[03:26:26] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 260 seconds)
[03:30:46] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[03:30:59] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[03:31:13] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[03:31:16] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[04:07:35] *** Joins: bronco_creek (~bronco_cr@c-73-181-19-253.hsd1.co.comcast.net)
[04:10:26] *** Quits: bronco_creek (~bronco_cr@c-73-181-19-253.hsd1.co.comcast.net) (Client Quit)
[04:32:40] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:33:14] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:50:21] *** Quits: lichtkind (~lichtkind@p200300d0a7115de1ac072a13f09fa777.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:06:10] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[05:43:03] *** Joins: frost (~frost@59.71.242.61)
[05:58:08] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[06:55:07] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[07:22:34] *** Joins: codesections (2d10c979@67.205.143.82)
[08:22:34] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:22:34] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:22:34] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:34] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:22:35] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:22:35] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:22:35] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:22:35] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:22:35] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:23:10] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[08:23:32] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[08:23:34] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:23:48] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[08:23:48] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[08:23:51] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[08:24:05] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[08:24:27] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[08:24:29] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[08:25:42] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:25:49] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:39:40] *** Quits: jcallen (quassel@user/jcallen) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[08:48:30] *** Joins: jcallen (~quassel@user/jcallen)
[09:22:51] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[09:23:17] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:23:38] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:25:01] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[09:25:25] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:25:30] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:31:35] *** Joins: keutoi (~keutoi@157.47.42.87)
[10:24:39] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[10:33:14] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:36:33] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[10:41:17] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 265 seconds)
[10:42:17] *** Joins: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at)
[10:52:12] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Remote host closed the connection)
[10:52:36] *** Joins: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at)
[10:54:13] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Remote host closed the connection)
[10:56:26] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:01:05] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 265 seconds)
[11:02:17] *** Joins: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at)
[12:02:17] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:02:17] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:02:17] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:17] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:17] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:17] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:17] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:17] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:17] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:17] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:17] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:02:18] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[12:02:18] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[12:02:18] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[12:02:18] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[12:02:18] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[12:02:18] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[12:03:12] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[12:03:20] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[12:03:28] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[12:03:45] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[12:04:22] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[12:04:31] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:05:03] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[12:05:03] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[12:05:19] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[12:24:56] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[12:30:35] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[13:02:46] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[13:02:56] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[13:03:16] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[13:15:55] *** Joins: lichtkind (~lichtkind@p200300d0a7115df0ac072a13f09fa777.dip0.t-ipconnect.de)
[13:35:04] *** Joins: immediate (~immediate@37.155.254.17)
[13:46:48] *** SmokeMachine__ is now known as SmokeMachine
[14:03:07] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[14:03:33] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[14:05:46] *** Quits: immediate (~immediate@37.155.254.17) (Ping timeout: 260 seconds)
[14:21:59] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Quit: WeeChat 2.8)
[14:22:20] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[14:30:51] *** Joins: immediate (~immediate@5.177.206.26)
[14:34:35] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[15:04:16] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[15:04:26] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[15:23:43] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[16:03:08] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[16:03:17] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[16:23:06] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Read error: Connection reset by peer)
[16:27:27] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[16:32:57] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:33:13] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 252 seconds)
[16:34:13] *** Joins: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at)
[16:34:15] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[17:00:46] *** Quits: immediate (~immediate@5.177.206.26) (Ping timeout: 260 seconds)
[17:22:02] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[17:22:18] <Xliff> \o
[17:24:34] <Altreus> vrurg: saw your post on reddit :) glad something grew out of that
[17:25:35] <Altreus> apparently it's an ADHD trait to only realise some time later that you weren't saying what you actually intended to say
[17:47:05] *** Joins: immediate (~immediate@5.177.206.26)
[18:04:54] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Quit: WeeChat 2.8)
[18:08:42] <vrurg> Altreus: I wouldn't say I was intended to say that. :) But really, it was a productive discussion and not only on that aspect.
[18:09:54] <Altreus> vrurg: I mean I failed to realise what I was trying to say :D
[18:10:33] <vrurg> Ah, ok... :D
[18:29:23] <tbrowder> g'day all
[18:30:31] <tbrowder> i'm getting a when using mi6 that reports Tap is using deprecated code
[18:31:21] <tbrowder> but zef says the module isn't installed!
[18:32:14] <tbrowder> any idea what i should do, if anything? thnx
[18:32:51] <tbrowder> *a msg when...
[18:33:53] <lizmat> perhaps zef is using one internally ?
[18:34:01] <tbrowder> hm
[18:34:22] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:36:09] <tbrowder> i think you're right, thnx, lizmat, nick has been very busy lately  :-)
[18:40:08] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[18:58:22] *** Quits: frost (~frost@59.71.242.61) (Ping timeout: 260 seconds)
[18:58:51] *** Quits: guifa (~guifa@static-host-66-18-47-4.epbinternet.com) (Quit: guifa)
[19:35:06] <tbrowder> modules.raku shows Tap but zef can't find it...
[19:37:02] <tbrowder> ok, it must be parent of Tap::Harness, Raku.land shows that
[19:37:14] <tbrowder> bye
[19:38:57] <ugexe> its TAP not Tap
[19:45:04] *** Quits: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:48:01] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[19:49:15] <patrickb> tonyo: I'm wondering about https://raku.land/cpan:SEGOMOS/fez Is SEGOMOS your CPAN handle?
[19:52:32] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:52:48] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[19:53:34] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:53:50] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[19:57:45] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Remote host closed the connection)
[19:59:06] *** Joins: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1)
[20:08:34] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:19:10] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[20:30:01] <tbrowder> yes, TAP
[20:32:35] <discord-raku-bot> <Slaytanical#9737> I'm going to be giving all the documentation i can find a good read tonight, but I'm going to attempt to setup "rakudo on a (usb) stick" where everything related to it (including zef stuff) stays on the usb stick. Any pointers? or has someone done this in the past and can point me to the instructions? Ty in advance (:
[20:52:15] *** Quits: keutoi (~keutoi@157.47.42.87) (Quit: leaving)
[21:09:29] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[21:09:48] <melezhik> how can I do http redirect in cro , after processing post request?
[21:09:50] <tellable6> 2021-09-15T15:12:34Z #raku-dev <lizmat> melezhik you might find this interesting: https://raku.land/zef:lizmat/Rakudo::Options
[21:10:28] <melezhik> lizmat++
[21:11:45] <melezhik> this is not good - https://github.com/melezhik/topsdevops/blob/master/app.raku#L121 as it redirect user to "/" with POST method
[21:11:55] <melezhik> but I need to redirect with GET
[21:18:07] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 252 seconds)
[21:20:46] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Quit: Ping timeout (120 seconds))
[21:21:35] *** Joins: patrickb (~patrickb@55d4e49e.access.ecotel.net)
[21:21:49] *** Quits: patrickb (~patrickb@55d4e49e.access.ecotel.net) (Remote host closed the connection)
[21:22:02] *** Joins: patrickb (~patrickb@55d4e49e.access.ecotel.net)
[21:22:15] *** Quits: patrickb (~patrickb@55d4e49e.access.ecotel.net) (Remote host closed the connection)
[21:22:27] *** Joins: patrickb (~patrickb@55d4e49e.access.ecotel.net)
[21:22:35] *** Quits: patrickb (~patrickb@55d4e49e.access.ecotel.net) (Remote host closed the connection)
[21:22:52] *** Joins: patrickb (~patrickb@55d4e49e.access.ecotel.net)
[21:23:37] *** Quits: patrickb (~patrickb@55d4e49e.access.ecotel.net) (Remote host closed the connection)
[21:42:34] <Altreus> I don't think redirect specifies a method at all
[21:42:51] <Altreus> you can use redirect :see-other to give it a 303
[21:43:21] <Altreus> oh they went
[21:43:30] <Altreus> I think the answer is to use created, not redirect
[21:52:20] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[22:11:16] <tonyo> .tell patrickb that is a cpan test account i have, fez is there in reference to:  https://github.com/ugexe/zef/issues/410
[22:11:17] <tellable6> tonyo, I'll pass your message to patrickb
[22:15:29] *** Joins: patrickb (~patrickb@55d4e49e.access.ecotel.net)
[22:24:16] *** Quits: patrickb (~patrickb@55d4e49e.access.ecotel.net) (Remote host closed the connection)
[22:30:28] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:32:39] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:33:24] <grondilu> how do I reverse an array?  from <a b> how do I get { "a" => 0, "b" => 1 }  ?  I thought .pairs.invert.hash would work but apparently not
[22:34:35] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:35:36] <[Coke]> m: my @a=<a b>; dd @a.kv.reverse.Hash
[22:35:37] <camelia> rakudo-moar 10b327292: OUTPUT: «Hash % = {:a(0), :b(1)}␤»
[22:36:02] <[Coke]> kv is probably faster/cheaper than doing pairs. 
[22:36:17] <immediate> m: say <a b>.antipairs.Hash
[22:36:17] <camelia> rakudo-moar 10b327292: OUTPUT: «{a => 0, b => 1}␤»
[22:36:37] <[Coke]> even better. :)
[22:36:52] <grondilu> nice, never seen .antipairs before
[22:36:57] <[Coke]> if you wanted to manually do the pairs, you'd need to invert the pairs themselves, you're inverted the list of paris.
[22:37:25] <[Coke]> *you've
[22:40:47] <grondilu> unrelated: wasn't there a `=finished` directive to comment everything from here to EOF?
[22:44:13] <lizmat> =finish
[22:45:37] <lizmat> which oddly does not appear to findable on docs.raku.org
[22:48:06] <[Coke]> not documented on https://docs.raku.org/language/pod
[22:48:43] <[Coke]> https://github.com/Raku/doc/issues/2284
[22:50:25] <[Coke]> (That ticket also notes the current state (as of last year) about various pod features.
[23:12:14] *** Joins: patrickb (~quassel@55d4e49e.access.ecotel.net)
[23:26:36] <grondilu> damn I think I will never understand grammars :(
[23:27:09] <grondilu> m: say "000" ~~ /0*<digit>+/
[23:27:10] <camelia> rakudo-moar 10b327292: OUTPUT: «｢000｣␤ digit => ｢0｣␤»
[23:27:32] <grondilu> ^this I understand, but then...
[23:27:35] <codesections> does anyone have access to a Windows install handy?  This SO question (https://stackoverflow.com/questions/69191917/how-to-get-a-help-functionality-in-repl ) makes me think that `$PATH` might not be set properly in Windows
[23:27:56] <grondilu> m: ay grammar { token TOP { <leading-zeros><digit>+ }; token leading-zeros { 0* } }.parse: "000"
[23:27:56] <camelia> rakudo-moar 10b327292: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    ay used at line 1␤␤»
[23:28:00] <grondilu> m: say grammar { token TOP { <leading-zeros><digit>+ }; token leading-zeros { 0* } }.parse: "000"
[23:28:01] <camelia> rakudo-moar 10b327292: OUTPUT: «Nil␤»
[23:28:34] <grondilu> isn't it supposed to be the same thing?
[23:29:38] <codesections> m: say grammar { regex TOP { <leading-zeros><digit>+ }; regex leading-zeros { 0* } }.parse: "000"
[23:29:39] <camelia> rakudo-moar 10b327292: OUTPUT: «｢000｣␤ leading-zeros => ｢00｣␤ digit => ｢0｣␤»
[23:30:57] <grondilu> ok, can you explain to me why it doesn't work with tokens?
[23:32:14] <grondilu> oh I see
[23:32:26] <grondilu> "Regex methods are slow but thorough, they will look back in the string and really try."
[23:32:48] <codesections> grondilu: yep! token { 'some pattern' } is like regex { :ratchet 'some pattern' } see https://docs.raku.org/language/regexes#Named_regex_definition_syntax
[23:32:56] <grondilu> so tokens don't backtrack.  got it.
[23:34:04] <codesections> which means the token version matches "0001" just fine
[23:34:57] <grondilu> it's really not a token that I'm parsing, now that I think about it.
[23:49:03] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[23:53:31] <grondilu> hum...  wasn't there a way to cut a long sequence of method calls into several lines?  I can't make it work anymore.
[23:54:24] <grondilu> do I have to backslash the newlines?
[23:55:53] <lizmat> you can put whitespace between the invocant and the method nowadays
[23:56:02] <lizmat> m: dd 42    .Str
[23:56:02] <camelia> rakudo-moar 10b327292: OUTPUT: «"42"␤»
[23:56:18] <moon-child> lizmat: I have had problems with doing that in the (recent) past
[23:56:22] <grondilu> but no newlines apparently
[23:56:22] <lizmat> grondilu ^^
[23:56:30] <lizmat> yes, they can be newlines, afaik
[23:56:37] <moon-child> however you can use ==> instead in some cases
[23:57:26] <gfldex> grondilu: in doubt you can use \ to quote the newline
[23:57:53] <grondilu> but that is very ugly
[23:58:26] <grondilu> it used to work fine and was very nice
