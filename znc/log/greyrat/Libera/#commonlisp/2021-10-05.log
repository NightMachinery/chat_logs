[00:00:26] *** Quits: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-1006-static.midco.net) (Ping timeout: 246 seconds)
[00:07:36] <copec> Thanks, I wont worry about it then
[00:07:50] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[00:09:01] <Josh_2> I am trying to use UIOP to execute a linux command but  it is  telling me that the command is not found even though I can invoke it from my terminal
[00:09:02] <Josh_2> what do?
[00:09:59] *** Joins: commandoline (~commandol@ubuntu/member/commandoline)
[00:10:21] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:11:09] <White_Flame> probably a path issue
[00:11:46] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (Client Quit)
[00:12:11] *** Joins: commandoline (~commandol@ubuntu/member/commandoline)
[00:12:36] <White_Flame> hmm, I thought there was a function or keyword option for using the system path somewhere
[00:13:32] <phoe> Josh_2: is the command available on your global PATH or in some sort of local directory?
[00:13:43] <phoe> if the latter, you may need to uiop:chdir explicitly
[00:13:46] <Josh_2> I installed it with apt
[00:13:52] <phoe> oh, hmmm
[00:13:56] <phoe> so it should be available globally
[00:13:58] <Josh_2> yes
[00:14:15] <Josh_2> one sec lemme check my system file, could be using the wrong user
[00:14:34] <White_Flame> you could also launch the shell and give it your cmdline, and it will use your path
[00:14:49] <White_Flame> although that tends to be less portable
[00:14:58] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:15:16] <Josh_2> nope, idk
[00:15:50] <etimmons> Can you share the call and error?
[00:16:50] <Josh_2> sure
[00:17:24] <Josh_2> https://plaster.tymoon.eu/view/2658#2658
[00:17:42] <Josh_2> The call is just (uiop:run-program "ffmpeg -v")
[00:17:44] <Josh_2> just for the test
[00:19:55] <etimmons> I don't actually see a problem there.
[00:20:07] <etimmons> `ffmpeg -v` does exit with code 1
[00:21:06] <phoe> Josh_2: (uiop:run-program "ffmpeg -v" :error-output :string)
[00:21:14] <phoe> and invoke the first restart
[00:21:49] <Josh_2> phoe: well that worked
[00:22:05] <Josh_2> So whys it signalling a condition?
[00:22:32] <phoe> Josh_2: because it did not exit with code 0
[00:22:33] <White_Flame> "Signal a continuable subprocess-error if the process wasnâ€™t successful (exit-code 0), unless ignore-error-status is specified."
[00:22:43] <Josh_2> hmm
[00:22:45] <Josh_2> alright
[00:22:53] <Josh_2> well guess my original command doesn't work properly then
[00:22:54] <phoe> and this is because ffmpeg does not understand the -v option
[00:22:55] *** Joins: JeromeLon (~jerome@2a00:23c7:99da:6600:ff34:361b:29ac:e7ef)
[00:22:57] <Josh_2> ye
[00:24:03] <White_Flame> -v is an option, it just takes a parameter, and the lack of that is giving you the error
[00:24:10] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[00:24:15] <phoe> oh! even better
[00:24:41] <White_Flame> did you mean -version? :-P
[00:24:47] <Josh_2> Nope not really
[00:24:56] <Josh_2> My actual command fails as well
[00:25:05] <Josh_2> it was working before :cry:
[00:25:43] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[00:26:24] <bwestbro> have you tried typing the full path to the command?
[00:27:34] <White_Flame> he is getting the executable itself called, just with bad args
[00:28:28] <Josh_2> ye
[00:29:54] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[00:30:40] <bwestbro> ah, I see now. my mistake
[00:31:21] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com) (Quit: ERC (IRC client for Emacs 27.2))
[00:32:40] <Josh_2> I fixed it :P
[00:32:50] <Josh_2> Turns out it was because the file I was trying to create already existed
[00:32:57] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[00:34:02] *** Quits: gaqwas (~john@dynamic-095-118-172-142.95.118.pool.telefonica.de) (Ping timeout: 246 seconds)
[00:36:41] *** Joins: Lycurgus (~juan@98.4.112.204)
[00:39:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:40:35] *** Quits: pve (~pve@188-67-134-99.bb.dnainternet.fi) (Quit: leaving)
[00:43:29] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 246 seconds)
[00:44:12] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:45:57] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[00:55:49] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:09:31] *** Quits: Inline (~Inline@2a02:908:1252:7a80:aa6b:53c1:b5fc:147) (Quit: Leaving)
[01:12:58] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[01:15:15] *** Joins: wilfred (uid159@id-159.uxbridge.irccloud.com)
[01:22:05] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:23:48] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:28:27] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:47:11] *** Quits: JeromeLon (~jerome@2a00:23c7:99da:6600:ff34:361b:29ac:e7ef) (Ping timeout: 246 seconds)
[01:50:08] *** Joins: dre (~dre@2001:8003:c932:c301:bf2a:6b91:a200:3687)
[01:53:04] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[01:53:42] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:55:58] *** Quits: loskutak (~loskutak@gw.mecom.cz) (Ping timeout: 260 seconds)
[01:56:12] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:05:48] *** Joins: cjb (~cjb@user/cjb)
[02:06:56] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[02:08:18] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[02:13:05] *** Quits: frgo (~frgo@p200300deef0cee00501727d1a25228cd.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:13:30] *** Joins: akoana (~ah@user/akoana)
[02:13:33] *** Joins: frgo (~frgo@p200300deef0cee00413f5e38f01b19c6.dip0.t-ipconnect.de)
[02:21:52] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 252 seconds)
[02:23:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:27:49] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:34:05] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 246 seconds)
[02:42:22] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:46:39] *** Joins: sm2n_ (~sm2n@user/sm2n)
[02:46:50] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 260 seconds)
[02:48:47] *** Joins: Inline (~Inline@2a02:908:1252:7a80:aa6b:53c1:b5fc:147)
[02:51:09] *** Quits: CptKirk (~CptKirk@165.237.199.143) (Ping timeout: 256 seconds)
[03:02:30] *** Quits: Inline (~Inline@2a02:908:1252:7a80:aa6b:53c1:b5fc:147) (Ping timeout: 250 seconds)
[03:04:54] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 245 seconds)
[03:05:09] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[03:05:39] *** Quits: Catie (~user@2603:3023:523:400:82e8:2cff:fed9:cc84) (Quit: leaving work)
[03:05:53] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[03:06:07] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[03:10:24] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:14:33] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:24:41] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[03:26:05] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[03:26:31] *** Joins: igemnace (~ian@user/igemnace)
[03:31:14] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[03:31:49] *** Quits: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c) (Ping timeout: 268 seconds)
[03:33:52] *** Quits: charles_ (~charles@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 252 seconds)
[03:33:54] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[03:34:07] *** Joins: nature (~nature@146.115.43.132)
[03:35:38] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:36:59] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[03:38:31] <nature> Hi
[03:39:13] <nature> I have a question regarding asdf, is there a way to make it download the dependencies when they are not present (with quicklisp I suppose)?
[03:40:08] <nature> Like the scenario is that I am working on a project, I setup a new machine, clone the project, do I have to manually quickload all the dependencies again?
[03:41:16] <White_Flame> if you quickload a project, it will automatically download the configured dependencies
[03:41:17] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 246 seconds)
[03:41:25] <White_Flame> if you asdf load it, it doesn't
[03:41:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:42:59] <nature> When I try to quickload my project it says something like 'System "hunchentoot" not found'....
[03:44:09] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:45:51] <nature> Never mind, something screwd up on the network for me
[03:45:54] <nature> Thanks!
[03:46:58] <Arcsech> Yeah Quicklisp doesn't have a great "hey you're not connected to the internet" error message
[03:47:23] <hayley> It can't be any good without the dinosaur game.
[03:53:56] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[03:55:08] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[04:08:56] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[04:09:32] *** Joins: srhm (~srhm@user/srhm)
[04:13:56] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[04:16:59] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[04:21:53] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[04:23:26] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[04:25:01] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[04:25:01] *** Joins: greaser|q (greaser@user/greasemonkey)
[04:25:04] *** greaser|q is now known as GreaseMonkey
[04:25:48] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:29:11] *** Joins: recordgroovy (~recordgro@205.175.118.81)
[04:29:19] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[04:30:04] *** Joins: patrice (~patrice@2603:301c:604:2a00:f93a:2d78:3826:3235)
[04:37:04] *** Quits: recordgroovy (~recordgro@205.175.118.81) (Quit: leaving)
[04:38:43] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[04:38:52] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[04:39:34] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[04:41:29] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[04:42:37] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[04:44:45] *** Quits: wilfred (uid159@id-159.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:49:48] *** Joins: leo_song (~leo_song@user/leo-song/x-7207016)
[04:54:24] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:58:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[05:10:24] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[05:16:02] *** Quits: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu) (Ping timeout: 268 seconds)
[05:22:21] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[05:25:46] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[05:28:36] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[05:36:08] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[05:37:30] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[05:48:11] *** Quits: Josh_2 (~user@37.25.47.130) (Quit: ERC (IRC client for Emacs 27.1))
[05:52:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[05:56:04] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[06:02:24] *** Quits: prxq (~quassel@x4db51366.dyn.telefonica.de) (Ping timeout: 245 seconds)
[06:02:53] *** Joins: prxq (~quassel@x4db5ab29.dyn.telefonica.de)
[06:16:57] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[06:28:00] *** Joins: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net)
[06:29:43] *** Joins: ldb (~user@user/ldb)
[06:32:50] <beach> Good morning everyone!
[06:36:27] <ldb> hey
[06:37:34] *** Quits: patrice (~patrice@2603:301c:604:2a00:f93a:2d78:3826:3235) (Quit: Leaving)
[06:40:11] *** Quits: jealousmonk (~user@2804:431:e7c4:cbd0:ae30:e39b:f4a:15d4) (Quit: ERC (IRC client for Emacs 27.1))
[06:44:51] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[06:46:51] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[06:49:15] *** Joins: karlosz (~karlosz@135-180-102-220.fiber.dynamic.sonic.net)
[06:51:59] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[06:52:35] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:57:10] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[07:12:49] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[07:20:27] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[07:26:29] *** Joins: semz (~none@user/semz)
[07:31:02] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[07:32:00] *** Parts: abrantesasf (~abrantesa@187.36.170.211) ()
[07:32:25] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[07:36:17] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:59:47] *** Quits: sm2n_ (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[08:00:38] *** Joins: sm2n_ (~sm2n@user/sm2n)
[08:10:41] *** Quits: frgo (~frgo@p200300deef0cee00413f5e38f01b19c6.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:15:30] *** Joins: cjb54763 (~cjb@user/cjb)
[08:15:30] *** Quits: cjb54763 (~cjb@user/cjb) (Client Quit)
[08:17:52] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[08:23:14] *** Quits: ldb (~user@user/ldb) (Ping timeout: 245 seconds)
[08:28:53] *** Joins: ldb (~user@user/ldb)
[08:29:14] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[08:33:08] *** Quits: ldb (~user@user/ldb) (Ping timeout: 250 seconds)
[08:38:59] *** Joins: ldb (~user@user/ldb)
[08:44:28] *** Quits: ldb (~user@user/ldb) (Ping timeout: 268 seconds)
[08:49:24] *** Joins: ldb (~user@user/ldb)
[08:52:13] *** Quits: ldb (~user@user/ldb) (Remote host closed the connection)
[08:52:32] *** Joins: ldb (~user@user/ldb)
[08:58:10] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[09:01:09] *** Joins: frgo (~frgo@p200300deef0cee00413f5e38f01b19c6.dip0.t-ipconnect.de)
[09:03:31] <susam> beach: Good morning!
[09:03:34] <susam> Good morning, everyone!
[09:04:38] <hayley> Good morning susam!
[09:06:03] *** Quits: frgo (~frgo@p200300deef0cee00413f5e38f01b19c6.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[09:08:29] <susam> hayley: Good afternoon! :)
[09:12:16] <White_Flame> (dolist (nick (get-nicks "#commonlisp")) (greet nick (get-day-quadrant (local-time nick))))
[09:18:16] *** Joins: pve (~pve@37-33-27-173.bb.dnainternet.fi)
[09:19:30] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 250 seconds)
[09:20:46] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[09:27:38] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 268 seconds)
[09:28:03] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[09:28:27] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[09:39:40] *** Joins: gaqwas (~john@dynamic-095-118-089-174.95.118.pool.telefonica.de)
[09:40:20] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[09:50:19] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[09:53:39] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 245 seconds)
[09:54:29] *** Joins: amb007 (~a_bakic@121.134.22.93.rev.sfr.net)
[09:55:26] *** Quits: karlosz (~karlosz@135-180-102-220.fiber.dynamic.sonic.net) (Quit: karlosz)
[09:57:34] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[10:04:55] *** Quits: ldb (~user@user/ldb) (Quit: ERC (IRC client for Emacs 27.2))
[10:16:37] *** Joins: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd)
[10:20:55] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[10:20:55] *** Quits: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd) (Ping timeout: 252 seconds)
[10:21:30] *** Joins: srhm (~srhm@user/srhm)
[10:26:12] *** Quits: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net) (Ping timeout: 256 seconds)
[10:27:24] *** Quits: amb007 (~a_bakic@121.134.22.93.rev.sfr.net) (Ping timeout: 245 seconds)
[10:27:50] *** Joins: amb007 (~a_bakic@125.132.22.93.rev.sfr.net)
[10:31:33] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[10:32:47] *** Joins: igemnace (~ian@user/igemnace)
[10:35:46] *** Quits: gaqwas (~john@dynamic-095-118-089-174.95.118.pool.telefonica.de) (Ping timeout: 252 seconds)
[10:43:14] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[10:43:14] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[10:43:14] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[10:44:20] *** Quits: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[10:44:20] *** Quits: amb007 (~a_bakic@125.132.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[10:44:33] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[10:44:40] *** gin_ is now known as gin
[10:44:58] *** Quits: gin (~gin@2400:8904::f03c:92ff:fe28:e8a7) (Changing host)
[10:44:58] *** Joins: gin (~gin@user/gin)
[10:45:43] *** Joins: rotateq (~user@b2b-78-94-235-194.unitymedia.biz)
[10:46:13] <gin> why does (string< nil "123") return NIL but (string< nil "abc") return 0?
[10:47:14] <_death> STRING< works on string designator.. NIL becomes the string "NIL"
[10:47:14] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[10:47:45] <_death> (list (char< #\N #\1) (char< #\N #\a))
[10:47:54] <gin> _death: thanks
[10:48:53] <gin> is there an opposite of zerop? Like nonzerop? I know I can make one. But is there something already?
[10:49:10] <gin> Or positive-integer-p?
[10:49:36] <_death> there's plusp and minusp, but no nonzerop
[10:49:43] <phoe> alexandria:positive-integer-p
[10:50:12] <gin> _death: thanks
[10:50:39] <phoe> in theory you could (complement #'zerop) to get an inverted predicate
[10:51:03] <phoe> but in most cases it's easier to flip your logic from (when (zerop ...)) to (unless (zerop ...))
[10:51:37] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[10:52:12] <gin> thanks
[10:53:54] *** Joins: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd)
[10:54:21] <jackdaniel> ecl defines types like a positive-integer, positive-integer-p, non-negative-short-float and couple of others in the ext package per cdr-5 specification
[10:54:30] <jackdaniel> https://common-lisp.net/project/cdr/document/5/index.html (sub-interval numerical types for common lisp)
[10:54:40] <gin> is (when (first list) ...) a sane to test whether the list has at least one element? Or is it preferrable to use (when (not (zerop (length list))) ...)? Or something else is preferred?
[10:54:59] <mfiano> Probably better to use emptyp
[10:55:10] <mfiano> err
[10:55:14] <jackdaniel> gin: (when (consp list) â€¦)
[10:55:17] <_death> (nil) has at least one element but your test will fail
[10:55:23] <jackdaniel> if it is not empty, then it is a cons
[10:55:24] <mfiano> alexandria:emptyp
[10:55:27] <gin> thanks
[10:55:56] <jackdaniel> calling (zerop (length list)) is not a good approach, because first you traverse whole list to compute its length
[10:56:04] <jackdaniel> so for long lists you'll have n unnecessary steps
[10:56:28] <mfiano> Well n-1 but yeah
[10:56:30] <jackdaniel> there is a function (alexandria:length= 0 list) that when the first argument is integer has a compiler macro
[10:56:34] <hajovonta> (null list)
[10:56:54] <jackdaniel> hajovonta: 3 will return NIL, so the "list" is not null
[10:57:49] <hajovonta> ok, but it's not a list
[10:57:51] <jackdaniel> mfiano: n-1?
[10:58:11] <hajovonta> also definitely not empty
[10:58:19] *** Quits: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd) (Ping timeout: 252 seconds)
[10:58:33] <hajovonta> maybe (and (listp list) (null list))
[10:58:35] <mfiano> Looks like alexandria has a compiler macro on emptyp, but my image is hosed right now and can't M-.
[10:58:42] <mfiano> might want to look up what it does
[10:58:50] <hajovonta> depending on what is needed
[10:58:52] <mfiano> Seems like it would be readable if it optimizes that
[10:58:55] <jackdaniel> hajovonta: and listp null is consp indeed ,)
[10:59:22] <phoe> hajovonta: (and (listp list) (null list)) will also return NIL if LIST is 3
[10:59:32] *** Joins: frgo (~frgo@185.66.193.56)
[10:59:50] *** Joins: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu)
[11:00:15] <phoe> but that's already the issue of why would someone pass a 3 to a function that accepts a list
[11:00:24] <hajovonta> yea it's not a list
[11:00:35] <phoe> and typechecking is kinda orthogonal to the original question
[11:00:40] <phoe> (and kinda not)
[11:05:16] *** Joins: dec0d3r_ (~dec0d3r@101.181.0.45)
[11:07:24] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Ping timeout: 250 seconds)
[11:13:49] *** Quits: frgo (~frgo@185.66.193.56) (Remote host closed the connection)
[11:26:03] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[11:27:56] *** Joins: frgo (~frgo@5.254.56.252)
[11:32:25] *** Quits: frgo (~frgo@5.254.56.252) (Ping timeout: 252 seconds)
[11:36:01] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:58] *** Joins: JeromeLon (~jerome@2a00:23c7:99da:6600:b753:77aa:9ca8:5ffa)
[11:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:42:30] *** Joins: selwyn (~selwyn@user/selwyn)
[11:42:39] *** Quits: Alfr (~Alfr@user/alfr) (*.net *.split)
[11:42:39] *** Quits: Krystof (~user@81.174.155.115) (*.net *.split)
[11:42:39] *** Quits: andreyorst (~andreyors@2.92.125.242) (*.net *.split)
[11:42:40] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (*.net *.split)
[11:42:40] *** Quits: katya (~mariari@user/mariari) (*.net *.split)
[11:42:40] *** Quits: borodust (~irc@user/borodust) (*.net *.split)
[11:42:40] *** Quits: utis_ (~utis@84.208.165.160) (*.net *.split)
[11:42:40] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (*.net *.split)
[11:42:40] *** Quits: mingus (~jan-magnu@ti0135a400-1977.bb.online.no) (*.net *.split)
[11:42:40] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (*.net *.split)
[11:42:40] *** Quits: samebchase (~thelounge@51.15.68.182) (*.net *.split)
[11:46:01] *** Quits: dec0d3r_ (~dec0d3r@101.181.0.45) (Remote host closed the connection)
[11:47:25] *** Joins: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd)
[11:49:24] *** Joins: notzmv (~zmv@user/notzmv)
[11:51:05] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[11:51:40] *** Quits: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd) (Ping timeout: 252 seconds)
[11:54:23] *** Joins: Alfr (~Alfr@user/alfr)
[11:54:23] *** Joins: Krystof (~user@81.174.155.115)
[11:54:23] *** Joins: andreyorst (~andreyors@2.92.125.242)
[11:54:23] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[11:54:23] *** Joins: katya (~mariari@user/mariari)
[11:54:23] *** Joins: borodust (~irc@user/borodust)
[11:54:23] *** Joins: utis_ (~utis@84.208.165.160)
[11:54:23] *** Joins: mingus (~jan-magnu@ti0135a400-1977.bb.online.no)
[11:54:23] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[11:54:23] *** Joins: samebchase (~thelounge@51.15.68.182)
[11:54:37] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:54:51] *** Quits: dre (~dre@2001:8003:c932:c301:bf2a:6b91:a200:3687) (Quit: Leaving)
[11:55:00] *** Joins: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd)
[11:55:00] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Read error: Connection reset by peer)
[11:55:30] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Max SendQ exceeded)
[11:56:15] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[11:59:33] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[12:00:37] *** Quits: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd) (Remote host closed the connection)
[12:04:26] *** Joins: Everything (~Everythin@37.115.210.35)
[12:17:51] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[12:29:33] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 268 seconds)
[12:31:15] *** Joins: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c)
[12:35:37] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Ping timeout: 252 seconds)
[12:38:11] *** Quits: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c) (Ping timeout: 268 seconds)
[12:38:51] *** Joins: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c)
[12:49:04] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[12:50:16] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[12:53:40] *** Joins: random-nick (~random-ni@87.116.183.117)
[12:56:31] *** Joins: loskutak (~loskutak@gw.mecom.cz)
[13:02:09] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[13:02:56] *** Joins: scymtym (~user@2001:638:504:20e0:a511:8858:bc9:9aae)
[13:14:29] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 264 seconds)
[13:29:14] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[13:38:08] *** Joins: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd)
[13:40:08] *** Quits: random-nick (~random-ni@87.116.183.117) (Ping timeout: 246 seconds)
[13:42:32] *** Quits: frgo (~frgo@2a03:2260:3016:1306:2525:31a9:138e:aabd) (Ping timeout: 250 seconds)
[13:57:04] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[13:57:46] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[14:00:24] *** Joins: hisacro (~OBSD@my.displ.nl)
[14:10:49] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 252 seconds)
[14:15:55] *** Joins: amb007 (~a_bakic@125.132.22.93.rev.sfr.net)
[14:17:55] *** Joins: selwyn (~selwyn@user/selwyn)
[14:22:10] *** Quits: amb007 (~a_bakic@125.132.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[14:26:13] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[14:39:00] *** Joins: jealousmonk (~user@2804:431:e7c4:cbd0:ae30:e39b:f4a:15d4)
[15:01:31] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:14:33] *** Joins: abrante5 (~abrantesa@2804:18:5025:37a5:2:1:4e6f:b180)
[15:14:38] *** Joins: heisig (~heisig@p508b531b.dip0.t-ipconnect.de)
[15:17:29] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Ping timeout: 264 seconds)
[15:33:39] *** Quits: loskutak (~loskutak@gw.mecom.cz) (Ping timeout: 245 seconds)
[15:33:58] *** Joins: loskutak (~loskutak@gw.mecom.cz)
[15:34:47] *** Quits: abrante5 (~abrantesa@2804:18:5025:37a5:2:1:4e6f:b180) (Read error: Connection reset by peer)
[15:36:34] *** Joins: abrantesasf (~abrantesa@189.50.14.58)
[15:38:13] *** Quits: andreyorst (~andreyors@2.92.125.242) (Ping timeout: 252 seconds)
[15:38:16] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[15:40:19] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 245 seconds)
[15:44:26] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[15:45:19] *** Joins: andreyorst (~andreyors@2.92.124.83)
[15:49:41] *** Joins: makomo (~makomo@user/makomo)
[15:50:45] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:53:03] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 268 seconds)
[15:55:08] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:55:50] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[16:00:05] *** Joins: hisacro (~OBSD@my.displ.nl)
[16:01:39] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[16:02:12] *** Joins: igemnace (~ian@user/igemnace)
[16:11:42] *** Quits: scymtym (~user@2001:638:504:20e0:a511:8858:bc9:9aae) (Remote host closed the connection)
[16:13:05] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2c3a:e391:22f1:c223)
[16:14:12] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:68dc:c10c:d421:9fd7)
[16:24:48] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[16:31:04] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[16:31:52] *** Joins: Bike (~Glossina@71.69.170.70)
[16:31:52] *** ChanServ sets mode: +o Bike
[16:32:49] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:38:09] *** Quits: rotateq (~user@b2b-78-94-235-194.unitymedia.biz) (Quit: ERC (IRC client for Emacs 26.3))
[16:42:01] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[16:45:50] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:59:37] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:00:27] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[17:01:47] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[17:02:50] *** Joins: Josh_2 (~user@37.25.47.130)
[17:05:19] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2.1)
[17:06:48] *** Joins: igemnace (~ian@user/igemnace)
[17:08:47] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Read error: Connection reset by peer)
[17:14:04] *** Quits: Everything (~Everythin@37.115.210.35) (Ping timeout: 245 seconds)
[17:23:48] *** Joins: scymtym (~user@2001:638:504:20e0:a511:8858:bc9:9aae)
[17:29:29] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 264 seconds)
[17:32:08] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:35:25] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[17:38:01] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[17:38:29] *** Joins: makomo (~makomo@user/makomo)
[17:38:34] *** Quits: heisig (~heisig@p508b531b.dip0.t-ipconnect.de) (Quit: Leaving)
[17:48:39] *** pjb is now known as Guest8892
[17:48:59] *** Quits: Guest8892 (~pjb@user/pjb) (Ping timeout: 246 seconds)
[17:49:21] *** Joins: pjb (~pjb@user/pjb)
[18:02:08] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[18:02:30] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[18:07:15] *** Quits: bwestbro (~user@quantum2.chem.olemiss.edu) (Remote host closed the connection)
[18:07:18] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 250 seconds)
[18:07:28] *** Joins: bwestbro (~user@quantum2.chem.olemiss.edu)
[18:07:43] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[18:15:21] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[18:18:40] *** Quits: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b) (Remote host closed the connection)
[18:19:58] *** Quits: abrantesasf (~abrantesa@189.50.14.58) (Ping timeout: 252 seconds)
[18:20:51] *** Joins: Everything (~Everythin@37.115.210.35)
[18:22:49] *** Joins: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b)
[18:25:16] *** Joins: abrante19 (~abrantesa@177.79.117.129)
[18:45:17] *** Quits: abrante19 (~abrantesa@177.79.117.129) (Read error: Connection reset by peer)
[18:45:35] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[18:53:44] *** Quits: Inline (~Inline@2a02:908:1252:7a80:2c3a:e391:22f1:c223) (Ping timeout: 246 seconds)
[19:00:28] <gin> what is the SLIME command to see the list of workers/threads? one of my infinite loop code is running and I want to kill that
[19:02:12] <Alfr> gin, slime-list-threads may help.
[19:03:31] <gin> Alfr: thanks
[19:05:59] *** Joins: abrante49 (~abrantesa@2804:18:5025:37a5:2:1:4e6f:b180)
[19:08:22] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Ping timeout: 252 seconds)
[19:09:56] *** Joins: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net)
[19:10:34] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 250 seconds)
[19:11:46] *** Joins: NeoCron (~NeoCron@p200300c4cf1c96002e5e9f24316d1b2a.dip0.t-ipconnect.de)
[19:16:22] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[19:18:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[19:19:04] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 245 seconds)
[19:24:39] *** Joins: hisacro (~OBSD@my.displ.nl)
[19:26:00] <gin> I want to test if a string is non-empty. is this the simplest test: (string/= s "") ? is there another idiomatic test?
[19:26:18] <beach> (zerop (length string))
[19:26:42] <beach> Or, rather (plusp (length string))
[19:26:42] *** Quits: abrante49 (~abrantesa@2804:18:5025:37a5:2:1:4e6f:b180) (Read error: Connection reset by peer)
[19:27:48] <gin> beach: thanks
[19:27:54] *** Joins: abrantesasf (~abrantesa@189.50.14.58)
[19:27:58] <beach> Sure.
[19:31:35] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[19:34:11] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:35:02] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 246 seconds)
[19:37:12] *** Joins: aeth (~aeth@user/aeth)
[19:44:48] *** Joins: frgo (~frgo@p200300deef0cee00c939094f51644eb3.dip0.t-ipconnect.de)
[19:46:16] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 252 seconds)
[19:47:57] *** Joins: hisacro (~OBSD@my.displ.nl)
[19:51:08] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[19:52:46] *** Joins: makomo (~makomo@user/makomo)
[19:54:31] *** Joins: Catie (~user@2603:3023:523:400:82e8:2cff:fed9:cc84)
[19:59:08] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[19:59:47] *** Joins: dra (~dra@2a04:4540:6407:9700:9579:ff72:bd33:3a9b)
[20:03:39] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 245 seconds)
[20:03:43] *** Joins: makomo_ (~makomo@user/makomo)
[20:09:55] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[20:10:44] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 245 seconds)
[20:12:14] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:13:22] *** Joins: hisacro (~OBSD@my.displ.nl)
[20:14:06] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[20:25:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[20:25:39] *** Joins: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net)
[20:28:08] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 250 seconds)
[20:29:12] *** Joins: amb007 (~a_bakic@104.39.22.93.rev.sfr.net)
[20:33:52] *** Quits: raeda__ (~raeda@72.49.219.33) (Quit: Leaving)
[20:34:45] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[20:35:16] *** Joins: hendursa1 (~weechat@user/hendursaga)
[20:37:12] *** Joins: cage (~cage@dynamic-adsl-84-220-249-98.clienti.tiscali.it)
[20:46:09] *** Quits: amb007 (~a_bakic@104.39.22.93.rev.sfr.net) (Ping timeout: 245 seconds)
[20:46:42] *** Joins: amb007 (~a_bakic@27.13.23.93.rev.sfr.net)
[20:50:05] *** Quits: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net) (Ping timeout: 256 seconds)
[21:07:01] *** Quits: dra (~dra@2a04:4540:6407:9700:9579:ff72:bd33:3a9b) (Quit: Leaving)
[21:11:52] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 268 seconds)
[21:13:05] <copec> Has anyone made a reader macro for latex math symbols, that transform it into a unicode
[21:14:37] * copec thinks on that
[21:15:09] <copec> I suppose what I really want is something in the editor (emacs)
[21:15:58] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[21:21:54] *** Joins: selwyn (~selwyn@user/selwyn)
[21:22:48] <hexology> copec: i'm pretty sure there's an emacs thing for that
[21:25:52] *** Quits: amb007 (~a_bakic@27.13.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[21:26:10] *** Joins: amb007 (~a_bakic@27.13.23.93.rev.sfr.net)
[21:28:16] *** Quits: amb007 (~a_bakic@27.13.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[21:29:04] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 245 seconds)
[21:29:06] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:29:16] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[21:29:46] *** Joins: random-nick (~random-ni@87.116.183.117)
[21:30:00] <lisp123> copec: Would this help? https://github.com/ashok-khanna/math-hydras
[21:30:52] <pjb> copec: in the editor it's trivial and probably already exist.
[21:31:39] <pjb> copec: you may also just want to display them differently. I have pretty-greek: https://github.com/informatimago/emacs/blob/master/pjb-sources.el#L735
[21:32:38] <pjb> you can use keyboard translations if you want to insert the unicode, or abbrev to "expand" a char name to the unicode itself.
[21:36:36] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[21:36:52] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Ping timeout: 252 seconds)
[21:38:20] *** Joins: aeth (~aeth@user/aeth)
[21:39:45] *** Joins: hisacro (~OBSD@my.displ.nl)
[21:42:20] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[21:42:47] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:43:26] <akater[m]> I just have my own shortcuts.  I type â‡’  â‡’  âŠ—  â†’  â†¦ often enough to have them summoned by two-char labels.
[21:45:20] <akater[m]> Some LaTeX commands are just way too long to be practical.
[21:46:58] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[21:48:50] <jkordani> Last time I tried Latex directly in emacs I had to shell out to a program to convert them to pdf and open that in emacs.  I was surprised there wasn't direct rendering into a buffer
[21:48:54] <jkordani> or maybe I missed that
[21:49:11] <lisp123> jkordani: There is for maths
[21:49:42] <lisp123> But honestly I'm not a huge fan of latex within Emacs, so yeah I didn't really set it up
[21:50:04] <copec> I used latex for a long time, so I have it all memorized
[21:51:04] <copec> Is there a standard for international symbol names within an English Alphabet I wonder?
[21:51:23] <copec> So a pinyin type input could become standardized
[21:52:11] <lisp123> jkordani: https://tex.stackexchange.com/questions/18498/how-to-preview-latex-in-emacs if you are still interested
[21:53:41] <jkordani> actually that was exactly what I was looking for
[21:53:59] <jkordani> thank you!
[21:54:15] <lisp123> :)
[21:54:37] <pjb> but abbrev only works on words, not on special characters :-(
[21:55:12] *** Joins: tfeb (~tfb@88.98.95.237)
[21:57:33] <copec> math hydras looks like what I need
[21:57:41] <copec> I was looking at this too https://github.com/kawabata/math-symbols
[21:58:50] <lisp123> Yeah I saw that one too
[22:02:06] <dieggsy> If I wanted to keep a directory of external CL libraries in my project source tree, could I use quicklisp to manage that ?
[22:04:19] <dieggsy> ideally i'd just want a simple project-directory/dep-diretory/ library-source directory structure
[22:04:48] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[22:05:51] <Catie> I've seen something like that as a build option for Nyxt
[22:06:19] <Catie> They depend on Quicklisp libraries, and you can either have them managed in the Nyxt source tree or in your local Quicklisp base directory
[22:06:28] <Catie> I'm not sure if that's the sort of thing you're looking for though
[22:06:50] <dieggsy> Mostly I'd want them only in our source tree, but with the option to update them using quicklisp i guess
[22:07:15] <jkordani> dieggsy: are you taking these dependencies from quicklisp or all they all non-quicklisp projects
[22:07:36] <Catie> Could you bind QL:*QUICKLISP-HOME* within your project?
[22:07:48] <dieggsy> I believe they're all available in quicklisp
[22:08:18] *** Joins: srhm (~srhm@user/srhm)
[22:08:25] <jkordani> you could use quicklisp-quickbundle to export them, then use the resulting bundle.lisp file and load that
[22:08:40] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[22:08:43] <jkordani> you might need to modify the resulting bundle if you want to include your own libraries
[22:09:06] <jkordani> and I think that should be as simple as providing the path to it, or the asd file
[22:09:33] <dieggsy> Well, I guess the situation is this - we already have a directory of dependencies, and I'm looking for the easiest way to update those libraries. If quicklisp let me download the sources of a particular library to an arbitrary location, that'd be nice
[22:10:03] <dieggsy> I suppose I could put quicklisp home under the project root, but I don't actually want to track anything other than the sources of the libs themselves
[22:10:46] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[22:11:55] <dieggsy> Might be worth just doing manually given the frequency at which we update things (almost never) lol
[22:13:33] <etimmons> ql:bundle-systems (assuming that's what you're referring to) can also miss dependencies of package inferred systems.
[22:14:44] *** Joins: srhm (~srhm@user/srhm)
[22:15:19] <etimmons> dieggsy: why do you want to do this? I feel like you're just making it harder on yourself to update your deps.
[22:16:17] <dieggsy> eric: We are already tracking our deps in our project, that part's not really in my control. i'm just looking for a better way to actually update them, without having to propose removing the sources from the project tree
[22:16:23] <etimmons> Plus it would encourage folks to modify the sources of your deps directly (making both updates and getting improvements upstreamed harder)
[22:17:53] <dieggsy> See above i guess. Nobody touches the dep sources though. And they haven't been updated in years. Which in most cases is fine, but i'm looking for a better way to do that should it be necessary
[22:18:42] <etimmons> Ooph, I'm sorry. When I first started working on my group's code base it also had dep sources just copy pasted in. Was a nightmare.
[22:19:15] *** Joins: gaqwas (~john@dynamic-095-118-089-174.95.118.pool.telefonica.de)
[22:23:27] <dieggsy> ...I guess I could just have a script that copy pastes from wherever quicklisp is installed. That feels pretty messy. ay ay ay.
[22:29:28] <Alfr> dieggsy, if your deps use git and your project does that too, try gitsubmodules.
[22:30:17] <dieggsy> Hey, that or subtrees might not be a terrible idea
[22:30:59] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[22:31:17] <dieggsy> ...assuming they do all use git
[22:33:35] *** molson__ is now known as molson
[22:38:50] *** Quits: cage (~cage@dynamic-adsl-84-220-249-98.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[22:38:57] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[22:42:42] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[22:44:46] <copec> I have the dependency in the asdf definitions, and pre-populate the quicklisp cache
[22:45:31] <copec> not that I have anything other than amateur projects
[22:45:48] <dieggsy> copec: do you keep the quicklisp cache in the source tree?
[22:46:37] <copec> No, but I suppose I could
[22:49:01] <copec> That actually brings up a question I've had. I don't really distribute anything, what do people use to build their programs (ie from a shell)?
[22:49:32] <copec> make(1)?
[22:51:14] <pve> copec: I usually do it with a lisp script
[22:51:30] <Fade> I tend to bundle a make file for my systems.
[22:51:44] <dieggsy> copec: at work we just use asdf + extra lisp addons and then save an image, but there is  makefile that I think just calls that lisp. at home i've experimented with roswell but mostly just lisp scripts
[22:52:54] <Fade> nyxt just calls out to asdf in a Makefile
[22:53:00] <etimmons> dieggsy: I feel like the problem is a little underspecified still. When you decide to perform your hypothetical update, do you want all of your deps to be upgraded? A single direct dep? A single direct dep and all of its direct deps?
[22:53:07] <Fade> pgloader has an interesting build process.
[22:54:18] <etimmons> If you upgrade all deps at once, that's easier but is more likely to break things, especially if you haven't done an upgrade in forever
[22:55:00] <copec> I've never dug into more, can you specify package versions like a python venv?
[22:55:20] <copec> If I specified versions, I would probably feel the need to replicate the specific versions for the deps
[22:55:48] <copec> nothing I do is that important though, I can see someone wanting a project where something is always buildable though
[22:56:11] <etimmons> copec: I use CL scripts (ASDF pretty much does everything make(1) does that I'd be interested in)
[22:56:22] <dieggsy> eric: yeah, it's been 5+ years since we've updated most of these, so i'm hesitant to update at all lol. I'd think i'd want to update a single direct dep + all of its deps at a time though
[22:57:32] <Fade> dieggsy: that's an epic in your code base.
[22:57:45] <Fade> depending, I guess, on the size of the code base.
[22:58:37] <copec> Since image based, does there exist systems to stepwise inspect and upgrade an existing image?
[22:58:56] <etimmons> copec: versioning in CL is a mess. You can specify system versions and version constraints on your dependencies using ASDF. But most dependency management solutions (like QL) ignore those. I'm trying to improve that situation with CLPM, but it is slow going
[22:58:58] <copec> out of curiosity for a clusterfsk
[22:59:42] <copec> I keep meaning to jump into CLPM
[22:59:58] <dieggsy> Fade: an epic?
[23:00:14] <Fade> a long story
[23:00:20] <Fade> much time and effort
[23:00:42] <Fade> sorry, agile drain bammage leaking into the real world.
[23:01:06] <dieggsy> Fade: Oh, it's a very large and very very old code base so, yeah. it's kind of a backburner "maybe at some point we should look into this, but CL is stable enough and it may be more hassle than it's worth" thing
[23:01:17] <dieggsy> mostly i'm concerned about whether there's been any important security updates to these libraries since they were last updated
[23:02:14] <greyrat> When working via SLIME, one major problem I have is that most variables are bound via `let` or function arguments. So I can't eval small chunks of code one at a time. How do you overcome this issue? (Julia has a macro that can export all local variables to the globl scope for this purpose. Is such a macro possible in commonlisp?)
[23:03:35] <Bike> such a macro is probably not possible, but i don't think i understand the problem you describe. could you maybe give a little example of the workflow here?
[23:03:58] <Fade> if I was on that teaam, I guess I'd start with anything using cffi.
[23:04:32] <etimmons> dieggsy: That might be difficult to ascertain at a glance. There are some CL projects that maintain changelogs, but I think that's more the exception than the rule.
[23:05:45] <dieggsy> eric: hm, that's unfortunate. appreciate the insight though
[23:07:12] <White_Flame> greyrat: printing has always been the most flexible means of debugging
[23:07:13] <etimmons> A fairly complex program of mine has 100 deps and I count 17 with changelogs
[23:07:39] <White_Flame> I usually have a macro like (debug x) which prints "X = <val of X>", also taking multiple variable names/expressions
[23:08:16] <copec> Can you inspect objects with slime and your implementation greyrat?
[23:08:16] <White_Flame> however, if you insert breakpoints, you can use sldb to inspect the local variable state, but you'd need to ensure that your debug optimization is set pretty high
[23:08:56] <White_Flame> printing just ends up being quick, easy, and comprehensive, with the lingering downside of being swamped in too much info, but that can still be sifted through
[23:10:39] <copec> Bike, I'm trying to think of the interactions that could take place from within the image to using dtrace on it :-P
[23:11:19] <greyrat> Bike: say we have a let* that defines a lot of variables. I want to eval some code using these vars. But the vars are not global, so the only way to do this is to run the whole let* block. 
[23:12:09] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[23:13:00] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[23:13:15] <greyrat> White_Flame: I also like printing and have a similar printer macro, but printing is not a very good solution for experimenting.
[23:13:33] <Bike> hm. well, i guess you could make them global with defparameter or whatnot. maybe you could actually make that into a macro. i don't think i usually need to do stuff like that with more than like three to five bindings, in which case it's pretty easy to just use globals to begin with, i guess
[23:14:32] <greyrat> Bike: Yes, I can usually get away with using globals, but globals make the code less refactorable for future use.
[23:14:47] <White_Flame> greyrat: hmm, I think it aligns with experimentation pretty well, as both experimentation and adding/removing print output both touch the code anyway
[23:14:49] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[23:14:59] <Bike> i thought you said you used globals in julia
[23:15:42] <greyrat> Bike: I used a macro that automatically exported local vars as globals, so my code was still sound. In CL, I write bad code that uses globals from the start.
[23:16:37] <Bike> how does using globals affect the code? i mean, you still write like, (foo bar) and temporarily have bar be a global variable, and then later it's lexical but the "(foo bar)" code is the same
[23:17:18] <pve> greyrat: is there a problem with running the whole let block?
[23:17:45] <greyrat> Hmm. Can you give an actual example? Say we have (let ((a "a")) ...). How do you export `a' as global?
[23:18:59] <Bike> (defparameter a "a")
[23:19:25] <Bike> normally you're supposed to do *a* but that's just a convention, and doing otherwise temporarily isn't a big issue
[23:19:26] <greyrat> pve: The biggest problem is that only the last expression of the block is returned, so I would need add additional glue code.
[23:20:10] <greyrat> Bike: I do not want to repeat the value of `a' when exporting it globally.
[23:20:38] <greyrat> Sth like `(let ((a "a")) (export-me 'a) ...)` would be best.
[23:20:49] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[23:21:06] <Bike> oh, you mean like within the let block. (let ((a "a")) (defparameter a a)) probably works
[23:21:15] <greyrat> let me test that
[23:21:41] <Bike> failing that, (setf (symbol-value 'a) a), assuming a isn't locally special
[23:21:58] <pve> greyrat: I also never considered it a problem, but could you make (debug-let ((a "a") ...) ... ) that does what you need?
[23:22:29] <pve> i.e. defparameter all the bindings
[23:23:17] <greyrat> pve: exactly. That's what I want.
[23:23:19] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[23:23:31] <greyrat> defparameter worked btw.
[23:23:49] <pve> possibly with a suitable naming convention like %*A* or %A or just straight A
[23:23:50] <Alfr> If it's for debugging, maybe progv and read-eval-print? But other lexical stuff won't be there.
[23:23:50] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[23:24:06] <pve> greyrat: are you asking how to make debug-let?
[23:25:40] <greyrat> defparameter only worked once; After that, `a' was special I guess, and so it no longer worked?
[23:26:25] <greyrat> setf worked well though.
[23:27:11] <greyrat> pve: I guess I will take a crack at it myself first. I think I will be able to manage, though I am new to CL.
[23:27:25] <pve> greyrat: ah, ok hang on a second
[23:30:27] <greyrat> How do I declare `a' as not special? (basically undoing the defparamter)
[23:31:19] <Alfr> greyrat, you can't.
[23:31:47] <greyrat> Alfr: I did not understand what you mean. `progv''s docs are rather vague.
[23:32:41] <pve> greyrat: maybe something like this?
[23:32:49] <pve> https://plaster.tymoon.eu/view/2659
[23:33:47] <pjb> greyrat: (unintern 'a) and create a new symbol.
[23:34:04] <Alfr> pjb, that changes the symbol.
[23:34:05] <pjb> greyrat: this is why it should not be a, but *A* !!!
[23:34:09] <pjb> Alfr: indeed.
[23:35:18] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[23:36:47] <pve> greyrat: whoops, fixed a mistake :)
[23:37:03] <pve> please reload if you checking out that macro
[23:38:48] <greyrat>  
[23:38:49] <greyrat> pve: is `(format nil "%~A" name)` correct?
[23:39:12] <greyrat> (The `%` seems to be extra?)
[23:39:19] <pve> greyrat: no it's on purpose
[23:39:58] <greyrat> Well it gives me `The variable %A12 is unbound.`
[23:40:09] <greyrat> When I use:
[23:40:10] <greyrat> (letd ((a12 "MiNA"))
[23:40:10] <greyrat>   (concat a12))
[23:40:59] <greyrat> I changed the collect line to ``(setf (symbol-value ,(intern (format nil "%~A" name))) ,symbol)`, if it matters.
[23:41:26] <pve> oh do you need let*?
[23:41:38] <Alfr> greyrat, progv establishes dynamic bindings valid for the duration of its body. So to get what you asked for, my idea is to introduce something like (debug-vars (foo bar ...) body) which then transforms to (progv '(foo bar ..) (list . (foo bar ..)) (print (eval `(locally (declare special ,@(foo bar ..)) ,(read))))).
[23:42:02] <greyrat> pve: usually, I prefer let*.
[23:42:24] <Alfr> greyrat, ^ likely isn't valid, but I think you get the idea.
[23:42:36] <pve> greyrat: well I didn't test it a whole lot, but it does work here
[23:42:48] <pve> it lets me eval %a etc in the repl
[23:43:12] <pve> greyrat: try macroexpanding to see what you get
[23:43:28] <Alfr> greyrat, also forget about that body part, as we're reading the thing to evaluate anyway.
[23:44:43] <pve> greyrat: it interns into *package* if that matters
[23:46:14] <pve> greyrat: oh btw you a quote in that change you made
[23:46:20] <pve> ',(intern ...
[23:46:24] *** Joins: scymtym_ (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[23:46:38] <greyrat> pve: Yeah, that was exactly what was stumping me!
[23:46:51] <pve> should've kept the defparameter :)
[23:47:29] <greyrat> pve: So this worked for me:
[23:47:32] <greyrat> (defmacro letd (bindings &body body)
[23:47:32] <greyrat>   `(let ,bindings
[23:47:32] <greyrat>      ,@(loop :for b :in bindings
[23:47:32] <greyrat>              :for symbol = (if (consp b)
[23:47:34] <greyrat>                                (first b)
[23:47:37] <greyrat>                                b)
[23:47:40] <greyrat>              :for name = (symbol-name symbol)
[23:47:41] <pve> please don't paste here
[23:47:43] <greyrat>              :collect `(setf (symbol-value ',(intern (format nil "~A" name))) ,symbol))
[23:47:46] <greyrat>      ,@body))
[23:47:53] *** Quits: scymtym (~user@2001:638:504:20e0:a511:8858:bc9:9aae) (Ping timeout: 268 seconds)
[23:48:05] <greyrat> Mistakenly thought pressing RET on emacs paste prompt will use a pastebin.
[23:48:15] <greyrat> It defaulted to not using one. :face-palms:
[23:48:20] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 250 seconds)
[23:49:09] <pjb> pve: don't use ~A to generate symbol name, without controling other variables such as *print-case* !!!
[23:49:57] <pjb> (loop for *print-case* in '(:upcase :downcase :capitalize) collect (intern (format nil "%~A" 'foo))) #| --> (%foo |%foo| |%Foo|) |#
[23:50:06] <pve> pjb: thanks, I guessed it properly done :)
[23:50:13] <pve> wasn't properly done
[23:50:30] <pjb> use concatenate or symbol-name.
[23:50:35] <pjb> or both.
[23:51:35] *** Quits: scymtym_ (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 246 seconds)
[23:52:27] <pve> pjb: hm wait, I gave a string to format.. does it matter?
[23:53:30] <greyrat> pjb: I dropped the format completely: `(setf (symbol-value ',(intern name)) ,symbol)
[23:54:19] <greyrat> BTW, what does this `%` do?
[23:57:00] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[23:57:16] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[23:57:25] <greyrat> I also don't understand how `setf` bypassed the lexical scope and set the variable globally. Does `setf` always work in the global scope?
[23:58:02] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[23:58:37] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[23:58:57] <pve> greyrat: perhaps *%foo* would have been better
[23:59:10] *** Quits: abrantesasf (~abrantesa@189.50.14.58) (Ping timeout: 250 seconds)
[23:59:57] <greyrat> Oh, it's just a naming convention you adopted. It's not necessary for the code to function, right?
