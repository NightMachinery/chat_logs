[00:00:17] <TimMc> Officially, this was sold for weighing spices and gemstones.
[00:00:33] <TimMc> but I suspect many of the buyers used it for other powders and rocks
[00:01:39] <moose> TimMc: oh and crystals too I am sure!
[00:02:35] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[00:09:30] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[00:10:06] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[00:14:04] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:14:36] *** Joins: cwebber (~user@user/cwebber)
[00:21:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:22:53] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:28:10] *** Joins: mikrosis (~mikrosis@dynamic-046-114-168-006.46.114.pool.telefonica.de)
[00:33:30] *** Quits: mikrosis (~mikrosis@dynamic-046-114-168-006.46.114.pool.telefonica.de) (Quit: Connection closed)
[00:34:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:40:18] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[00:41:01] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[00:41:15] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[00:55:16] *** Joins: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt)
[00:55:33] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 250 seconds)
[00:56:32] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[01:03:05] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[01:04:49] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Read error: Connection reset by peer)
[01:07:24] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[01:11:14] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[01:11:56] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[01:21:28] *** Joins: ivii (~ivan@user/ivii)
[01:42:09] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[01:42:45] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[01:44:35] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[01:52:20] *** Joins: sektor|2 (~kvirc@87.227.175.182)
[01:55:17] *** Quits: sektor|3 (~kvirc@94.155.193.66) (Ping timeout: 252 seconds)
[01:57:28] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[02:01:58] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[02:11:02] *** Joins: llorllale (~llorllale@198.98.119.85)
[02:11:30] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[02:11:51] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[02:12:58] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[02:13:22] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[02:16:02] *** Quits: epony (~epony@user/epony) (Ping timeout: 240 seconds)
[02:23:21] *** Quits: hg (~halosghos@user/halosghost) (Quit: WeeChat 3.4)
[02:26:11] *** Joins: Guest59 (~Guest59@p5ddd0cd1.dip0.t-ipconnect.de)
[02:31:17] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[02:32:21] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[02:38:39] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:38:48] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[02:43:34] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[02:44:16] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[02:45:17] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[02:46:37] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 240 seconds)
[02:51:19] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[02:53:22] *** Joins: epony (epony@user/epony)
[02:55:29] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[02:55:57] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[02:57:39] *** Joins: igemnace (~ian@user/igemnace)
[02:59:16] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[03:03:40] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[03:14:24] <rk4> not used it yet...but tailscale seems like a very well done project
[03:14:29] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[03:15:18] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[03:19:13] *** Quits: aleck (~aleck@user/aleck) (Remote host closed the connection)
[03:19:32] *** Joins: aleck (~aleck@user/aleck)
[03:21:00] <Peng> I use Tailscale :)
[03:22:27] <rk4> work or personal?
[03:22:48] <rk4> i suspect others are the same...that for personal use the bar is far higher than for work use
[03:25:21] <Peng> Personal
[03:27:37] *** Quits: tex (~super@user/dix) (Ping timeout: 240 seconds)
[03:30:12] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[03:40:57] <snappy> did you see that article from fly.io about implementing wireguard in user mode with a self contained tcp/ip stack that'd autoconfigure without any administrative work
[03:41:27] <snappy> no tun/tap devices or anything
[03:42:16] <maroon> about the issue of primality test being probabalistic, how much of an issue is that really? the worst example i can find is where someone created a trapdoor number which passes a specific series of 15 rounds of miller-rabin which used hard-coded bases
[03:43:27] <snappy> what's a trapdoor number?
[03:44:01] <maroon> something that tests as prime but its not
[03:44:22] <snappy> ah interesting
[03:44:45] <snappy> i've heard of something similar with carmichael numbers passing fermat witnesses
[03:45:31] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[03:46:24] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[03:47:14] <rk4> not bad @ fly.io, old kind of idea though...just not common for businesses to be savy enough to pull it off
[03:49:14] <rk4> one supposes it doesn't matter if you are generating the prime you are relying on being prime
[03:55:28] <maroon> page14 is a 1024-bit composite contrived to pass GMP's primality test https://eprint.iacr.org/2018/749.pdf
[03:57:56] <maroon> true rk4, it's difficult to accidentally stumble across numbers that would pass a round of miller rabin, much less 2 rounds
[03:58:09] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:59:31] *** Joins: Wulf (~Wulf@user/wulf)
[04:01:15] <TimMc> I'm guessing the primality tests tend to throw out a lot of primes?
[04:02:19] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 250 seconds)
[04:02:26] <maroon> nope, the tests are testing for characteristics that 100% of primes will mimic, but the problem is that rare composites fake it too
[04:04:57] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:06:55] *** Quits: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt) (Quit: leaving)
[04:07:36] <sarnold> what's congress doing about these imposter primes that's what I want to know
[04:08:02] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[04:10:31] <iz> subprime primes
[04:11:44] <sarnold> lol
[04:13:08] *** Quits: Malvolio (~Malvolio@user/malvolio) (Remote host closed the connection)
[04:16:31] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[04:17:14] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[04:18:10] *** Joins: Malvolio (~Malvolio@user/malvolio)
[04:23:51] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[04:25:21] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[04:34:06] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[04:34:50] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[04:38:56] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:39:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:42:08] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.4)
[04:42:35] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[04:43:09] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[04:43:29] *** Joins: jtgd (~jtgd@user/jtgd)
[04:43:58] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Quit: Klotz)
[04:46:20] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[04:47:27] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[04:47:30] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Ping timeout: 260 seconds)
[04:47:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[04:47:51] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[04:52:22] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[05:07:03] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Ping timeout: 256 seconds)
[05:07:22] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[05:10:07] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:10:53] *** A_Dragon is now known as [
[05:10:59] *** [ is now known as A_Dragon
[05:40:02] *** Joins: kish` (~aqua@user/aqua)
[05:40:45] *** Quits: yauhsien (~Yau-Hsien@61-231-45-223.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[05:45:01] *** Joins: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[05:50:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:58:00] *** Joins: madder_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[05:58:13] *** Quits: madder_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Remote host closed the connection)
[05:59:06] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Read error: Connection reset by peer)
[06:55:29] *** Quits: callq (~callq@2409:4062:2296:71d:c827:aaf6:4fa7:dd61) (Quit: callq)
[07:12:10] *** Quits: xx (~xx@user/xx) (Ping timeout: 260 seconds)
[07:12:31] *** Quits: ua__ (~ua@public-gprs226401.centertel.pl) (Ping timeout: 256 seconds)
[07:23:24] <snappy> not sure i understand what's going on since i never quite understood the linux kernel rng lfsr, but this looks very soothing https://git.kernel.org/pub/scm/linux/kernel/git/crng/random.git/commit/?id=d512f889f8c7c7b80fe556748b90ae290b92f610
[07:26:24] <Peng> "1 files changed, 55 insertions, 249 deletions" Nice, though most of it is comments
[07:29:59] <snappy> yeah this mix_pool_bytes looks like such a pita to understand
[07:31:00] <snappy> Ideas for constructing this random number generator were derived from Pretty Good Privacy's random number generator ....
[07:53:01] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[07:55:34] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[07:55:55] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[07:57:57] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[08:10:21] *** Joins: Sofia (~sofia@user/sofia)
[08:22:00] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpz4slttb85jt56.ipv6.telus.net) (Remote host closed the connection)
[08:26:08] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[08:26:27] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[08:36:30] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:40:59] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[08:46:32] *** Joins: frost (~frost@user/frost)
[08:56:40] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[08:57:11] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[09:08:42] *** Quits: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) (Quit: Leaving)
[09:27:24] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[09:27:57] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[09:40:40] *** Joins: andreasbuhr (~quassel@p549db7e2.dip0.t-ipconnect.de)
[09:58:08] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[09:58:37] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[10:02:03] *** Joins: Vitto (~Vitto@2a01:e0a:26e:28c0:4f09:b3a5:389d:7c8a)
[10:16:50] *** Joins: tex (~super@user/dix)
[10:17:04] *** Quits: andreasbuhr (~quassel@p549db7e2.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:19:32] *** Quits: tex (~super@user/dix) (Client Quit)
[10:25:52] *** Quits: Vitto (~Vitto@2a01:e0a:26e:28c0:4f09:b3a5:389d:7c8a) (Ping timeout: 268 seconds)
[10:28:49] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[10:29:39] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[10:32:33] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[10:58:19] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[10:59:52] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[10:59:57] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-89e3-b4c9-4809-69ad.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:00:19] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[11:02:18] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[11:02:36] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9d31-9506-2e45-538c.res6.spectrum.com)
[11:02:38] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[11:03:50] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[11:19:10] *** Joins: machinedgod (~machinedg@24.105.81.50)
[11:30:26] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[11:30:46] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[11:33:01] *** Joins: viridian (~viridian@user/viridian)
[11:33:06] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[11:33:44] *** Quits: viridian (~viridian@user/viridian) (Client Quit)
[11:50:00] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[11:53:18] *** Joins: ua_ (~ua@public-gprs220227.centertel.pl)
[11:57:15] *** Joins: nadio (ice@starlight.iextreme.org)
[11:57:44] <nadio> anyone got experience with truecrypt ? finding the salt of a container
[12:00:58] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[12:01:24] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[12:03:19] *** Joins: frost (~frost@user/frost)
[12:16:39] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[12:20:24] *** Quits: igemnace (~ian@user/igemnace) (Read error: Connection reset by peer)
[12:25:54] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:29:36] *** Joins: drathir87 (~drathir@wireguard/tunneler/drathir)
[12:29:39] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[12:29:49] *** drathir87 is now known as drathir_tor
[12:31:36] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[12:32:03] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[12:35:58] <maroon> nadio, ask SlimmyJimmy
[12:36:11] <maroon> when the clock is pointing the correct direction
[12:37:35] *** Joins: igemnace (~ian@user/igemnace)
[12:44:01] *** Joins: Sofia (~sofia@user/sofia)
[12:45:03] <nadio> aight thanks
[12:45:42] <yawkat> i thought the idea was that you cant, without the password.
[12:46:30] <yawkat> ah no, that cant work for the salt.
[12:46:44] <yawkat> https://www.truecrypt71a.com/documentation/technical-details/truecrypt-volume-format-specification/
[12:46:47] *** Joins: vernaz (~vernaz@148.63.127.167)
[12:46:56] <yawkat> 0-64 unencrypted salt
[12:49:24] <nadio> yawkat: specifically what I am looking at, 1) is it actually the salt for the password? or used just as a header key ? The salt consists of random values generated by the TrueCrypt random number generator during the volume creation process. The header key derivation function is based on HMAC-SHA-512, HMAC-RIPEMD-160, or HMAC- Whirlpool
[12:50:40] <yawkat> yes thats the actual salt
[12:51:48] <nadio> yawkat: 2) format its writen in?  echo salt:password = sha512 string?
[12:54:38] <yawkat> https://datatracker.ietf.org/doc/html/rfc8018
[12:55:59] *** Joins: Sofia_ (~sofia@user/sofia)
[13:00:12] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[13:01:30] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[13:03:08] <nadio> yawkat: where do I find the salt in a rescue disc? having hard time finding any specifications about that
[13:04:34] <yawkat> first 64 bytes, it says here https://www.truecrypt71a.com/documentation/technical-details/truecrypt-volume-format-specification/
[13:04:41] *** Sofia_ is now known as Sofia
[13:04:45] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 276 seconds)
[13:07:02] <nadio> yawkat: volumes, bootable drives, and rescue disc for a bootable drive, isnt the same.. its volume specifications.. "containers"
[13:09:02] <yawkat> i doubt it follows a particular format then
[13:15:03] <nadio> yawkat: in truecrypt volume, what bytes is actually that is extracted for recovery ? to generate the hash file?
[13:15:29] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:16:09] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[13:16:17] <nadio> truecrypt2john says, it grabs 512bytes but the code is very messy so hard to see exactly what its grabbing...
[13:16:24] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Remote host closed the connection)
[13:17:32] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[13:18:35] *** Joins: frost (~frost@user/frost)
[13:21:26] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[13:27:39] *** Joins: ivii (~ivan@user/ivii)
[13:33:57] *** Quits: kish` (~aqua@user/aqua) (Quit: laters!)
[13:37:34] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[13:37:49] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[13:39:39] *** Joins: ardell (~ardell@user/ardell)
[13:49:53] *** Joins: kish` (~aqua@user/aqua)
[13:49:58] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0)
[13:54:03] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[13:55:47] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:00:07] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[14:04:17] *** Joins: vusis (~vu@user/vusis)
[14:04:43] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9d31-9506-2e45-538c.res6.spectrum.com) (Quit: jarthur)
[14:05:37] *** Joins: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt)
[14:09:13] *** Quits: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9) (Ping timeout: 250 seconds)
[14:11:03] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[14:11:32] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[14:12:19] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[14:17:09] *** Joins: labrador (~labrador@user/labrador)
[14:23:28] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[14:25:01] *** Joins: d34dh0r53 (~d34dh0r53@104-191-10-248.lightspeed.snantx.sbcglobal.net)
[14:30:43] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[14:31:36] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[14:32:51] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:33:33] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0) (Quit: dingdreher)
[14:35:25] *** Joins: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[14:37:17] *** Quits: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[14:49:20] *** Joins: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[14:59:49] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[15:01:16] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[15:05:45] *** Quits: vusis (~vu@user/vusis) (Remote host closed the connection)
[15:18:11] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[15:30:45] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[15:38:37] *** Joins: frost (~frost@user/frost)
[15:56:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 252 seconds)
[15:56:56] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[15:57:11] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[15:57:24] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[16:20:05] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:31:20] *** Joins: frost (~frost@user/frost)
[16:41:08] *** Joins: xx (~xx@user/xx)
[16:46:21] *** Joins: Everything (~Everythin@37.115.210.35)
[16:48:44] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[16:51:44] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[16:52:17] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[17:05:41] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[17:08:24] *** PJBoy is now known as Guest2587
[17:08:42] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:10:40] *** Joins: BOKALDO_ (~BOKALDO@user/bokaldo)
[17:10:57] *** Quits: Guest2587 (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[17:12:18] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Read error: Connection reset by peer)
[17:17:21] *** Quits: vernaz (~vernaz@148.63.127.167) (Remote host closed the connection)
[17:17:23] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: WeeChat 3.4)
[17:19:38] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[17:22:44] *** Quits: frost (~frost@user/frost) (Ping timeout: 268 seconds)
[17:31:35] *** Joins: mspe (~user@tilde.team/user/mspe)
[17:32:02] *** Parts: mspe (~user@tilde.team/user/mspe) (WeeChat 2.8)
[17:32:49] *** Joins: mspe (~user@tilde.team/user/mspe)
[17:34:49] *** Parts: mspe (~user@tilde.team/user/mspe) (WeeChat 2.8)
[17:35:28] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:46:54] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[17:55:04] *** Joins: vernaz (~vernaz@148.63.127.167)
[17:58:42] *** Joins: callq (~callq@157.41.35.249)
[18:01:03] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:01:30] *** Quits: halosghost (~halosghos@user/halosghost) (Ping timeout: 250 seconds)
[18:02:09] *** Joins: vernaz_ (~vernaz@2001:818:d8da:9b00:3d91:af6:fa1c:47f7)
[18:04:31] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 256 seconds)
[18:05:24] *** Quits: xx (~xx@user/xx) (Quit: xx)
[18:07:10] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[18:07:59] *** Joins: metal_elephant (~metal_ele@216-107-200-130.static.firstlight.net)
[18:11:16] *** Joins: xx (~xx@user/xx)
[18:15:07] *** Quits: metal_elephant (~metal_ele@216-107-200-130.static.firstlight.net) (Quit: Leaving)
[18:16:38] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[18:18:11] <gurkenglas> So I just discovered the surprisingly simple and strong principle that if you don't care what the adversary figures out about a password, only whether he knows it, then you can allow him to ask arbitrary yes/no questions about the password, ruling him out as knowing it the first time he answers no, and then he can't do better than guessing randomly. Does this have a name?
[18:19:26] <gurkenglas> s/he answers no/you answer no/
[18:20:30] <TimMc> Wouldn't it instead be *you* asking the questions?
[18:21:00] <iz> are you talking about zero-knowledge tests?
[18:21:01] <int-e> "dangerous" comes to mind
[18:21:14] <TimMc> I don't know exactly what you're proposing, but I don't think it would stand up to an iterated attack.
[18:21:14] <int-e> (several colluding attackers of this type can learn *a lot*)
[18:26:25] <gurkenglas> int-e: well of course, i did assume that you don't care what the attacker learns
[18:27:02] <gurkenglas> which is the case, for example, when the password was randomly generated for this specific interaction
[18:27:51] <gurkenglas> TimMc: the attacker asks arbitrary yes/no questions, you answer them.
[18:28:51] <int-e> Let's have some fun woth this... "[Elaborates encoding scheme for Turing Machines] Does the password describe a halting TM?"
[18:28:53] <TimMc> Why would I answer questions about a password?
[18:29:32] <TimMc> "Randomly generated for this specific interaction" -- then it's not a password. How about you start at the beginning?
[18:30:00] <gurkenglas> TimMc: Who knows! There may be any number of use cases. This is a lemma, which seems to me to deserve a name. Maybe y'all think it absolutely must not have a name or then people might be tempted to use it :D
[18:30:05] <TimMc> What are you trying to accomplish, and what's the protocol you're picturing?
[18:32:54] <ms7821> also, depending on how you define randomly and better I'm not sure it's true at all
[18:33:02] <int-e> "Does this have a name?" is a poor proxy for finding out whether a concept has been found useful or at least interesting by enough people. Oh and non-obvious, which is another thing that fails here.
[18:33:15] <gurkenglas> "then it's not a password" <- it was just an example of how the assumption might come to hold.
[18:33:24] <ms7821> someone who focuses on guessing trying to guess the first character has a higher chance of gaining information about the password than someone who guesses from the entire keyspace
[18:33:45] <gurkenglas> int-e, a lot of good math is obvious/trivial in hindsight
[18:33:48] * int-e is filling in a gap here: Presumably the attacker "wins" if they can narrow the passwords down to a single candidate.
[18:34:09] <ms7821> if you define your problem as one where you only get one guess before the password changes, then maybe it's a usable principle, but that's a critical part of your lemma
[18:34:26] <gurkenglas> The attacker wins if you think he is the user.
[18:34:39] <int-e> gurkenglas: Your protocol never gets to that point.
[18:35:08] <int-e> gurkenglas: I mean, with that objective, I'll just ask no questions about the password and you'll never think that I don't know it. I win.
[18:35:14] <ms7821> also, have a look at the number of people on twitter writing "Wordle 1/6 🎉"
[18:35:33] <ms7821> with enough attackers one of them will guess on the first try
[18:35:47] <gurkenglas> int-e, I don't think you're describing an actual issue with the math I'm talking about
[18:36:10] <int-e> gurkenglas: In any case, this is *not* interesting. I'd be surprised if it has a name. There may be a more general concept that this is an instance of which does have a name. Maybe. Nothing comes to mind.
[18:37:02] <gurkenglas> int-e, how is it not interesting? i gather that it is rare that one gets a proof of information-theoretical security
[18:37:28] <ms7821> it's sounds like it means something but the stuff about "what the adversary figures out" is misdirection
[18:37:47] <ms7821> there's no chance to figure anything out because for it to work you can only allow one guess
[18:38:20] <ms7821> "if you allow an adversary to guess a secret key, they can't do better than random"
[18:38:26] <ms7821> that's your lemma
[18:38:34] <int-e> gurkenglas: In the meantime cryptographers have working zero-knowledge proofs, which do something actually useful.
[18:39:30] <gurkenglas> ms7821: no it's "if you allow an adversary to guess random properties of the secret key, they can't do better than guessing the secret key"
[18:39:52] <labrador> gurkenglas, isn't that a duh kinda concept?
[18:39:54] <labrador> Like ofc
[18:40:01] <gurkenglas> -random properties+arbitrary properties
[18:40:05] <ms7821> gurkenglas: what do you mean by better
[18:40:34] <ms7821> if I ask whether the first bit of the key is 1, your response tells me some information about the key
[18:41:20] <int-e> P(Y) * P(X|Y) <= P(X), where X = guessed all the password correctly, and Y = guessed a property of the password correctly.
[18:41:45] <gurkenglas> ms7821: let's say: if they want to eventually ask "is the secret key exactly _" for any _ and be answered yes, no protocol for selecting a sequence of questions will get them there with higher likelihood than one that always outputs a sequence of length 1.
[18:41:55] <int-e> It's still way too elementary to have a name.
[18:42:13] *** Joins: vernaz (~vernaz@148.63.127.167)
[18:42:37] <gurkenglas> int-e, there are lots of elements with a name. triangle inequality, associativity, etc
[18:42:45] <ms7821> gurkenglas, your protocol as you've described it will always have a sequence of length 1
[18:43:04] <ms7821> because you'd defined it as rejecting them on the first guess if they're wrong
[18:43:06] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[18:43:25] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[18:43:31] <int-e> gurkenglas: Yes. They come up a lot in their respective context, and used constantly.
[18:43:39] <int-e> +are
[18:43:55] <int-e> So people talk about them, which makes a having a name useful.
[18:44:04] *** Joins: epony (epony@user/epony)
[18:44:19] *** Joins: sektor|3 (~kvirc@94.155.193.66)
[18:44:59] *** Quits: sektor|2 (~kvirc@87.227.175.182) (Ping timeout: 256 seconds)
[18:44:59] *** Quits: callq (~callq@157.41.35.249) (Read error: Connection reset by peer)
[18:45:42] *** Quits: vernaz_ (~vernaz@2001:818:d8da:9b00:3d91:af6:fa1c:47f7) (Ping timeout: 250 seconds)
[18:45:56] <gurkenglas> ms7821: ...misunderstanding? i'll try again: if they want to eventually ask "is the secret key exactly _" for any _ and be answered yes, then whatever questions they were going to ask, they can instead of asking it pretend they were answered yes, continue until they would have asked some winning question, and ask only that one.
[18:46:21] <TimMc> Why would you ever answer?
[18:46:38] <ms7821> gurkenglas: that's not true
[18:46:39] *** Joins: sektor|2 (~kvirc@94.155.193.66)
[18:47:15] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 256 seconds)
[18:47:42] <ms7821> if you're allowing multiple questions, then you're not rejecting them on the first incorrect guess
[18:48:27] <ms7821> if you are, and you change the password afterwards, then yes there's no difference between asking if the first bit is 1 (a strategy that would otherwise complete in O(n) guesses) and guessing a full n-length password
[18:48:36] <ms7821> but that's _not interesting_ because you're only allowing one guess
[18:48:48] *** labrador is now known as labrador_
[18:48:48] <int-e> . o O ( Let's just jump to the obvious conclusion that timing attacks on password comparisons are not a thing because passwords are changed on every attempt and move on. )
[18:48:56] *** labrador_ is now known as labrador__
[18:49:03] <gurkenglas> ms7821: I allow multiple yes/no questions, but only until any of them is answered no.
[18:49:31] *** Quits: sektor|3 (~kvirc@94.155.193.66) (Ping timeout: 256 seconds)
[18:49:32] *** Parts: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Leaving)
[18:49:46] <ms7821> that has the effect of setting your protocol up to only allow one question
[18:50:04] *** labrador__ is now known as labrador
[18:50:11] <ms7821> because, as you've pointed out, an attacker guessing one bit at a time might as well just guess all of them
[18:50:26] <ms7821> there'd be no point in guessing only one bit
[18:50:51] <gurkenglas> ms7821: And a deterministic turing machine can decide the same languages as a nondeterministic one. Sometimes one perspective is more useful than the other.
[18:51:11] <ms7821> waht the fuck?
[18:52:08] <gurkenglas> You're gonna have to be more specific.
[18:52:28] <ms7821> nah I'm gonna do some work, enjoy your discovery
[18:52:32] <int-e> gurkenglas: No, *you* have to be more specific about why something this obvious should be remotely useful.
[18:53:02] <int-e> Sigh. Not sure why this is so upsetting.
[18:54:10] <TimMc> It's frustrating when people are cagey.
[18:55:01] <gurkenglas> int-e, I discovered it when I was looking for a proof that a protocol I was imagining is safe, knowing that that's a losing proposition when one plans to actually roll the protocol. I was pleased that the proof was unusually simple/likely to have no flaw once I saw the lemma.
[18:56:14] <gurkenglas> I can write the protocol, of course, it just didn't seem particularly relevant and I can already extrapolate that there'll be a bunch of misunderstandings. typing...
[18:58:05] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[18:59:27] *** Joins: defjam (~eb0t@90.196.141.185)
[19:00:15] <yawkat> I have discovered a truly marvelous proof of this, which this channel is too narrow to contain.
[19:02:52] *** Joins: frost (~frost@user/frost)
[19:03:50] <gurkenglas> The protocol I was contemplating when I discovered this lemma was: You wish to be tolerant of the user having a typo in what he said the password is. Suppose all passwords have length 8 (adjust constants to moore's law.) and were generated randomly. In addition to its hash, you store a plaintext copy after scrambling a random 6 out of 8 characters. (this shortens the bruteforce attack if someone steals 
[19:03:56] <gurkenglas> the database.) When someone types in a guess, ban them until personal reverification if their guess is the same as the scrambled copy at 0 out of 8 places. (This makes imposing a reverification cost on the user as cheap as issuing a guess.) How might one prove that there is no clever sequence of guesses that will let an attacker log in with disproportionate probability? By the lemma.
[19:04:49] <gurkenglas> (Though it only *almost* applies, since one implicitly asks both "is this password close" and "is this password exact")
[19:06:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[19:09:59] <ms7821> your lemma very much doesn't apply here, unfortunately
[19:10:31] <ms7821> because 1) you're not rejecting after the first wrong guess, you're allowing an unlimited number of guesses as long as they include at least one matching character
[19:11:16] <ms7821> 2) you're allowing the attacker to make guesses across all the passwords in the system, which pretty much guarantees they'll get some success
[19:12:12] <int-e> If the attacker guesses one of the two non-scrambled characters correctly (1/(8*256) if chracters are bytes) and commit to that guess, they can launch a brute force attack for the rest.
[19:12:16] <gurkenglas> doesn't 2) hold for the default protocol as well?
[19:12:48] <int-e> Which gives them much better odds than a single guess, which would be (1/256)^8.
[19:13:05] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 256 seconds)
[19:13:37] <gurkenglas> Indeed. The lemma might inform what versions of the protocol don't have that issue.
[19:13:45] <ms7821> I'll also add that you really shouldn't be writing new password matching systems in 2022, particularly not ones that keep part of the plaintext password
[19:14:52] *** Joins: sektor|3 (~kvirc@87.227.175.182)
[19:15:32] <ms7821> google password stuffing if you're not sure why
[19:18:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[19:18:25] *** Quits: sektor|2 (~kvirc@94.155.193.66) (Ping timeout: 256 seconds)
[19:21:52] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:21:55] <int-e> Oh there's research on doing this kind of thing properly, interesting. https://www.reddit.com/r/crypto/comments/aybzif/fuzzy_password_matching/
[19:22:44] <ms7821> the facebook way is (used to be?) store a hash of the password titlecased and inverted-cased
[19:23:06] <int-e> (Though I'd argue that the common approach of rate limiting guesses is preferrable to reducing the low entropy of passwords further. You'll need such a scheme anyway lest attackers can deny your user's service if they know the accound name.)
[19:23:33] <int-e> Oh, caps lock is a nightmare. I don't know why it's still a thing.
[19:24:17] <int-e> ms7821: wait, wouldn't you just send two hashes for verification instead though?
[19:25:07] <ms7821> oh yeah maybe I'm misremembering. there's a dedicated password-checking server that does the check so maybe that does the magic
[19:26:16] <int-e> Though I guess if you do that then you can't verify the relationship, so an attacker could test twice as many all lower case passwords (which are probably most common)
[19:26:36] <int-e> It's not important :)
[19:27:06] <ms7821> https://www.youtube.com/watch?v=7dPRFoKteIU&t=16m6s I think this is it
[19:27:40] <ms7821> but still, passwords should die
[19:28:11] <ms7821> and any existing systems should be using 3 random words or random strings stored in a password manager, so fuzziness is pointless
[19:30:56] <gurkenglas> ohh because then you can just tell the user that he did a typo because his password is not made of english words?
[19:31:11] <ms7821> no, because humans can remember words better than passwords
[19:31:24] <ms7821> passwords suck in every way
[19:31:44] <ms7821> https://www.ncsc.gov.uk/blog-post/the-logic-behind-three-random-words
[19:32:27] <maroon> question 1: is bit 1 of the key a 1-bit...
[19:35:37] <int-e> maroon: The lemma is better phrased as a guess-the-number game. Party A generates a random number n in range {1..N}. Party B wants to guess it. But rather than guessing it directly, B is allowed to ask questions like "is n odd?", and continue as long as the answer is "yes". The lemma says that the chance of finding the number is still 1/N, or less if you ask stupid questions.
[19:36:23] <ms7821> but the scenario actually described here is Parties A-ZZZZ generate random numbers, and all reply when B guesses
[19:36:26] <int-e> The password angle basically doesn't work because it's not between two parties.
[19:37:11] <ms7821> and given these are actually useful numbers (let's say it's their PINs) B can determine useful information from the game
[19:37:52] <ms7821> if there are enough users, or B is lucky, they end up with only people standing who've just revealed their PIN
[19:38:04] <maroon> so this is a boring variant of 20 questions :)
[19:38:21] <maroon> is it bigger than a breadbox
[19:39:24] <int-e> I don't doubt that g. had an epiphany, but there's a huge difference between that and an Earth-moving discovery.
[19:40:39] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[19:41:22] <ms7821> to map this to the 8-digit password scenario, I think guessing at least one of the two non-scrambled characters correctly is 2/256 (or more likely 2/~64), and guessing either at a fixed position is 1/256*2/56 = 1/7168 (or more likely 1/~1800)
[19:41:25] <maroon> so like 20 questions the idea is to come up with questions that are efficient at excluding wrong answers
[19:42:48] <ms7821> so chances are you can brute force the password for one in every 2k users
[19:43:06] <int-e> Oh, my 1/(8*256) should've been 1/(4*256); my attacker commits to both a position (chance 1/4 of being one of the two fixed ones) and a character.
[19:43:13] <maroon> so it depends whether you ask a safe question with a 50/50 answer, or you get lucky on something that excludes a high percentage "is the next to last digit 3"
[19:43:21] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 256 seconds)
[19:43:22] *** Guyver2_ is now known as Guyver2
[19:43:22] <int-e> ms7821: what's your 1/256 for?
[19:43:43] <ms7821> 1/256 was guessing that character (but ~64 is a more likely character set)
[19:43:57] <int-e> I'm now getting 1/(4*56) with a more realistic reduced  character set.
[19:44:22] <ms7821> hmm, I had 1/8*1/7*2
[19:44:28] <int-e> (where 1/4 = 2/8)
[19:44:50] <int-e> you only need to fix one character to pass the test
[19:44:59] <ms7821> true
[19:45:08] <ms7821> one in every 1k users then :)
[19:45:32] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[19:46:49] <ms7821> and let's not ignore that password stuffing goes both ways. if you get half the passwords for a bunch of users, you can take that away for use with other password dumps
[19:46:57] <int-e> Hmm, s/56/62/ (alphanumeric)
[19:47:39] <int-e> And yes, that's assuming random passwords, which are rare in reality.
[19:52:57] *** Joins: epony (epony@user/epony)
[20:00:33] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[20:00:36] *** Joins: labrador (~labrador@user/labrador)
[20:05:29] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[20:06:49] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[20:09:17] *** Joins: callq (~callq@2409:4062:2296:71d:2439:c59b:32a7:f93)
[20:13:52] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Quit: ZNC 1.8.2 - https://znc.in)
[20:15:14] *** Joins: cwebber (~user@user/cwebber)
[20:21:29] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:cc2e:c6c1:f875:b99)
[20:24:18] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Quit: WeeChat 3.4)
[20:25:02] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[20:28:02] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:43:27] *** Joins: adaank[m]1 (~adaanknok@2001:470:69fc:105::1:b5fa)
[20:48:04] *** Joins: brolin (~brolin@179.13.18.50)
[20:48:38] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[20:59:19] *** Quits: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt) (Quit: leaving)
[21:07:51] *** Quits: ua_ (~ua@public-gprs220227.centertel.pl) (Read error: Connection reset by peer)
[21:20:01] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[21:25:55] *** Joins: ua_ (~ua@public-gprs220227.centertel.pl)
[21:30:14] *** Quits: Malvolio (~Malvolio@user/malvolio) ()
[21:32:30] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[21:35:19] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 256 seconds)
[21:35:22] *** Guyver2_ is now known as Guyver2
[21:35:27] *** Joins: halosghost (~halosghos@user/halosghost)
[21:38:02] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[21:44:38] *** Quits: callq (~callq@2409:4062:2296:71d:2439:c59b:32a7:f93) (Quit: callq)
[21:51:33] *** Joins: aleck1 (~aleck@user/aleck)
[21:54:15] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 256 seconds)
[21:57:25] *** Joins: SlimmyJimmy (~blank@user/slimmyjimmy)
[22:00:50] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[22:01:07] *** Joins: madage (~madage@user/madage)
[22:08:13] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:cc2e:c6c1:f875:b99) (Quit: Leaving...)
[22:09:04] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[22:12:36] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[22:15:36] *** Quits: phebus (~phebus@fsf/member/phebus) (Quit: POKE 1,0)
[22:18:47] *** Joins: labrador (~labrador@user/labrador)
[22:19:37] *** Quits: labrador (~labrador@user/labrador) (Remote host closed the connection)
[22:23:08] *** Quits: vernaz (~vernaz@148.63.127.167) (Remote host closed the connection)
[22:25:59] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Ping timeout: 256 seconds)
[22:28:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:29:21] *** Joins: instantp10neer (~instantp1@user/instantp10neer)
[22:31:10] *** Joins: epony (epony@user/epony)
[22:39:17] *** Joins: machinedgod (~machinedg@24.105.81.50)
[22:40:03] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[22:54:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:54:06] *** Joins: Vitto (~Vitto@2a01:e0a:981:cd30:1216:5465:cd5f:e5ba)
[22:54:39] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:e42c:4e1a:c83f:940)
[22:58:43] *** Quits: BOKALDO_ (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:00:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[23:01:20] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[23:01:23] *** Joins: phebus (~phebus@fsf/member/phebus)
[23:14:41] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpz5igz2mq1z4zh.ipv6.telus.net)
[23:18:42] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:e42c:4e1a:c83f:940) (Remote host closed the connection)
[23:20:15] *** Joins: gproto23_ (~gproto23@user/gproto23)
[23:22:50] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 260 seconds)
[23:29:50] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[23:40:16] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[23:51:27] *** Joins: epony (epony@user/epony)
