[00:02:37] *** Joins: Throgkt (~Throgkt@user/throgkt)
[00:04:24] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[00:04:44] *** Joins: prodigius_ (~prodigius@75-163-174-136.clsp.qwest.net)
[00:17:06] *** Joins: thiras (~thiras@user/thiras)
[00:24:51] <hylje> shodan45: does the django cursor have the rowcount attribute?
[00:25:27] <shodan45> hylje: actually I was about to try that but realized I don't really need the info any more :)
[00:28:03] <hylje> well you're welcome :p
[00:37:45] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[00:39:29] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:59:28] *** Joins: ajb (~ajb@cupid.whatbox.ca)
[01:00:14] *** Joins: audio (~audio@user/audio)
[01:03:15] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[01:09:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[01:24:08] *** Quits: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea) (Remote host closed the connection)
[01:24:21] *** Joins: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea)
[01:29:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:29:33] *** ChanServ sets mode: +v EvilDMP
[01:32:23] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:32:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[01:36:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:51:22] *** Joins: glazed (~glazed@108.5.30.126)
[01:54:04] <glazed> hi all, i'm trying to implement infinite scrolling with django templates. i have some javascript ajax code that seems to trigger correctly. however, i'm struggling with how to actually display new content. first of all, what should the response to ajax call actually be? should it be json or another django template? i've been returning a django
[01:54:04] <glazed> template that is supposed to render more items in the list, but nothing is being rendered. can anyone tell me what i'm missing? it could very well be something super obvious. i can't find anything useful on google, so i'm assuming i have some fundamental misunderstanding of how it works
[01:59:45] *** Quits: Oxygene (~Oxygene@lfbn-lil-1-1117-117.w90-103.abo.wanadoo.fr) (Quit: Leaving)
[02:00:30] *** Joins: Atque (~Atque@user/atque)
[02:01:24] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[02:06:07] *** Joins: fikran (~fikran@user/fikran)
[02:07:29] <doismellburning> glazed: fundamentally infinite scrolling is about "on scroll, fetch more, add it to the page"
[02:07:51] <doismellburning> glazed: that could be JSON that your JS templates and renders; it could be HTML that it just inserts
[02:08:03] <doismellburning> but your JS needs to do the addition
[02:14:26] *** Joins: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it)
[02:15:51] *** Quits: prodigius_ (~prodigius@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[02:15:51] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[02:16:08] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[02:16:12] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:19:27] *** Joins: audio (~audio@user/audio)
[02:40:10] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[02:40:19] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[02:43:27] <sheepman[m]> If you're like me and your JS skill amounts to copying and pasting (or you'd rather just not deal with it) you might consider doing infinite scroll with HTMX
[02:44:22] *** Quits: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it) (Quit: Leaving.)
[02:48:23] *** Quits: audio (~audio@user/audio) (Remote host closed the connection)
[02:52:28] <nbjoerg> might want to look at django rest framework and any of the hundreds of grid implementations in JS
[02:52:39] <nbjoerg> (data grid that is)
[02:59:38] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[03:03:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:06:03] <glazed> thanks all. my immediate issue turned out that i was using the js library incorrectly. http://imakewebthings.com/waypoints/shortcuts/infinite-scroll/ i wasn't wrapping my individual items in the necessary css class. that said, the scroll-triggered loading became janky so i'm throwing my hands up for now and sticking to good old button based
[03:06:04] <glazed> pagination
[03:08:02] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[03:09:29] *** Joins: cebor (~cebor@user/cebor)
[03:09:41] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:12:11] *** Quits: glazed (~glazed@108.5.30.126) (Ping timeout: 256 seconds)
[03:12:15] *** Joins: schinckel (uid38120@user/schinckel)
[03:20:40] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:25:00] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[03:25:26] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 272 seconds)
[03:39:31] *** Quits: mattfoxxx (~mattfoxxx@200116b822640300aca7387ac9215c19.dip.versatel-1u1.de) (Ping timeout: 245 seconds)
[03:41:41] *** Joins: mattfoxxx (~mattfoxxx@200116b8243b6f006edc21f6256c0633.dip.versatel-1u1.de)
[04:04:53] *** Joins: audio (~audio@user/audio)
[04:08:29] <jim> I'm at the point in the tutorial where it's introducing templating, and I'm having problems understanding how {% url %} works
[04:10:55] <jim> (of course, it's probably a misunderstanding of the whole templating system)
[04:12:54] <jim> another thing I'm not understanding yet, is {% ... %} versus {{ ... }}
[04:16:21] <GinFuyou> {{ are variables {% are tags - special operators that do something, often with args
[04:19:03] <GinFuyou> url is just a counter part of reverse() it looks url pattern in urls.py by name and given arms, reconstructing the link
[04:20:06] *** Joins: yanchai (~yanchai@222.127.97.162)
[04:23:24] <jim> I notice python code can go in {% ... %}
[04:23:35] <GinFuyou> no
[04:24:18] <GinFuyou> templates have no python code. It's DTL. Some syntax element might be same or similar
[04:25:40] <jim> Django Templatng Language
[04:26:05] <GinFuyou> Yes. And it's intentionally limited
[04:26:32] <jim> ok, I'm here, reading: https://docs.djangoproject.com/en/4.0/topics/templates/#module-django.template
[04:27:02] *** Joins: cliluw (~cliluw@47.147.77.43)
[04:32:37] *** Quits: mattfoxxx (~mattfoxxx@200116b8243b6f006edc21f6256c0633.dip.versatel-1u1.de) (Ping timeout: 240 seconds)
[04:34:55] *** Joins: mattfoxxx (~mattfoxxx@200116b8228996005781a32f1b31023c.dip.versatel-1u1.de)
[04:38:47] *** Quits: mattfoxxx (~mattfoxxx@200116b8228996005781a32f1b31023c.dip.versatel-1u1.de) (Client Quit)
[04:39:13] *** Joins: teut (~teut@122.161.83.81)
[04:39:47] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:42:47] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[04:52:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:52:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:57:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[05:00:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:06:35] *** Joins: Siecje (~Siecje@97.111.200.32)
[05:07:00] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:07:08] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[05:07:47] *** Joins: Atque (~Atque@user/atque)
[05:08:47] <Siecje> What is the correct way to add a signal on the auth.User model?
[05:08:57] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:13:44] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:17:49] <schinckel> Siecje: You can do it in any app’s AppConfig.ready() method.
[05:18:04] <Siecje> schinckel: I'm in models.py
[05:18:07] <schinckel> I tend to put receivers in `app/receivers.py`, and import that inside the ready method.
[05:18:24] <Siecje> Should it be settings.AUTH_USER_MODEL ?
[05:18:42] <schinckel> Yeah, probably.
[05:19:15] <Siecje> https://github.com/Siecje/debt/blob/master/api/models.py#L38
[05:20:04] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 272 seconds)
[05:22:56] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:23:41] <Siecje> schinckel: With settings.AUTH_USER_MODEL I get error "Token matching query does not exist. "
[05:27:41] *** Joins: cliluw (~cliluw@47.147.77.43)
[05:28:30] *** Quits: cliluw (~cliluw@47.147.77.43) (Read error: Connection reset by peer)
[05:30:23] *** Joins: cliluw (~cliluw@47.147.77.43)
[05:35:54] <schinckel> Show the stack trace.
[05:37:22] <Siecje> Should settings.AUTH_USER_MODEL be set to the proxy model?
[05:37:50] <Siecje> schinckel: It is because I'm creating an instance of my User model (above in that link) and not auth.User.
[05:45:30] <schinckel> If you are going to be using that model as your user model, then I htink you should set settings.AUTH_USER_MODEL to that.
[05:45:48] <schinckel> I think signals only run on the actual model.
[05:46:08] <schinckel> ie, not proxies.
[05:58:04] *** Joins: bambanxx (~bambanx@2800:150:106:1061:c008:90ed:2a05:281)
[06:00:29] *** Quits: F40PH (~david@d54C34DA5.access.telenet.be) (Ping timeout: 256 seconds)
[06:01:20] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[06:06:40] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:08:09] *** Joins: justAstache (~justache@user/justache)
[06:08:29] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[06:14:36] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:15:02] <Siecje> Okay I used settings.AUTH_USER_MODEL and get_user_model() everywhere, and if I want my User model then I will do an extra lookup.
[06:19:28] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:22:40] *** Quits: Siecje (~Siecje@97.111.200.32) (Remote host closed the connection)
[06:36:09] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[06:41:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:42:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:43:02] *** Quits: ahadi (~ahadi@23-63-142-46.pool.kielnet.net) (Ping timeout: 272 seconds)
[06:44:58] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 256 seconds)
[06:47:11] *** Joins: ahadi (~ahadi@182-42-142-46.pool.kielnet.net)
[06:50:08] <jim> so dtl, has four constructs, {{variables}}, {%tags%}. filters and comments... and everything else gets sent to the browser?
[06:55:51] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[06:58:11] <dodobrain> theres something weird going on thats i'm prolly missing: i'm running through a debugger and in a function: ...; foo.save(); return foo
[06:59:04] <dodobrain> why am i getting an integrityerror: null value in column "something" violates not-null constraint  ?  on the *return* statement, not the save()
[06:59:31] <dodobrain> after the save i can see the object has an id, meaning it was saved to the database!
[07:01:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:02:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:07:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[07:07:48] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:22:38] <audio> dodobrain, show your code
[07:23:05] <audio> schinckel, i need some pretty involved help. i am using a custom authentication system in conjunction with allauth. think you can help me?
[07:23:20] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:25:59] <Guest80> yuck what kind of authentication system is that using your own plus allauth?
[07:26:30] <Guest80> i used allauth a while ago for a long time but then i learned how to do it myself and it is SOOO much better
[07:26:32] <audio> Guest80, so i was tasked with porting an app from a desktop app to a web app, and we had to keep the old auth system so everyone wouldnt have to change their passwords
[07:26:50] <Guest80> oh makes sense
[07:27:02] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[07:27:28] <audio> yea, problem is, the change password view isnt integrated into the ported auth system
[07:27:38] <audio> and i'm having trouble finding out exactly how to get it to work
[07:27:48] <Guest80> you mean a custom password view?
[07:27:52] <Guest80> not allauth?
[07:28:35] <audio> im talking about the view that handles changing a password when a user requests to reset their password after filling out a "forgot password" form
[07:28:38] <audio> Guest80,
[07:29:00] <audio> let me show you my code
[07:29:02] <Guest80> oh one sec let me find. Hopefully i understand what you mean
[07:30:06] <Guest80> https://github.com/django/django/blob/main/django/contrib/auth/views.py#L356
[07:30:24] <Guest80> password change done view maybe
[07:30:43] <dodobrain> audio, err.. not sure why theres a special need to see the code here, but heres a snippet: https://dpaste.org/UPtw
[07:30:55] <schinckel> audio: Not sure I’ll be able to help, but you _can_ use multiple auth backends.
[07:30:55] <Guest80> password reset confirm view is the other one
[07:31:24] <schinckel> We do this to handle incoming auth from external systems (NetSuite, WorldManager) as well as our local auth.
[07:31:24] <Guest80> and password reset completeview
[07:31:31] <jim> dodobrain, I believe so. an object that was created from a subclass of model.Model inherits a save() method, that writes the object to the database
[07:31:45] <Guest80> https://www.youtube.com/watch?v=y7k3QyiiZ1k&t=3331s
[07:31:50] <Guest80> This video helped me a lot
[07:32:56] <jim> Guest80, did you also run the tutorial?
[07:33:03] <Guest80> yup
[07:33:13] <Guest80> my custom auth system uses a lot of that code
[07:33:25] <jim> I'm a little stuck on the templating part
[07:34:41] <Guest80> https://dpaste.org/uLud
[07:34:46] <Guest80> These are some of my bookmarks
[07:35:13] <dodobrain> jim, ?
[07:36:59] <jim> goin out for food... dodobrain, not sure what part you didn't understand, I thought you were confused about how orm objects can write themselves back
[07:37:03] <dodobrain> not sure what you are referring to. i'm specifically asking about why i'm getting an integrity error on a return statement when there is no such error on the creation-on-db statement and save-on-db statements prior
[07:37:23] <dodobrain> jim, what? you didnt even read my original statement(s)/question
[07:37:48] <jim> a broken integrity constraint would have to do with the table definition
[07:38:16] <dodobrain> seriously? i;'m not sure what to make of your statements here.,
[07:38:18] <Guest80> watch the whole video from start to finish it is honestly better than the django docs tutorial and helps you understand the auth framework. Then use thee stackoverflow + other links to refine your code and learn a few things
[07:38:52] <jim> if you have robust constraints, the name of the constraint should tell you what happened and point in the general direction
[07:39:01] <dodobrain> i know what that integrity error means! i'm asking why it is being reported
[07:39:06] <dodobrain> what the heck ?
[07:39:37] <jim> would it be because the database thinks something's wrong?
[07:40:21] <dodobrain> please see the paste, on creation of the object the organization is being set. then the object is even being saved later on *with NO integrity error* showing up. on the `return` statement there is an intregrityerror
[07:40:47] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:40:58] <dodobrain> mentioning that the organization is not set. i have verified with a debugger that breaking on the return statement, i can see the quote object has an organization set on it
[07:41:07] <dodobrain> what other part do i need to explain in detail to you?
[07:42:03] *** Quits: sreve (~quassel@p4ff44fcc.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:42:10] <jim> anyway, sorry if I'm not being so helpful... I'm trying to learn too. right now I need to turn my attention elsewhere. hope you find the problem/stay safe/be well
[07:42:23] *** Joins: sreve (~quassel@p549d70eb.dip0.t-ipconnect.de)
[07:42:34] <dodobrain> yes, thanks for the attempt though :)
[07:42:41] <jim> and, I am curious which database you're using
[07:42:45] <dodobrain> postgres
[07:42:52] <jim> ok
[07:43:00] <Guest80> I have a few questions myself for the group. 1) does it make sense to persist user session logins in redis? 2) Thoughts on richtextfield for models? 3) What is more efficient for performance, database .get() or .filter() and what is the difference - it seems like you can do more with .filter()?
[07:44:11] <dodobrain> .filter() returns you a queryset matching your "rules". .get() gives you a single object
[07:44:35] <Guest80> that is what i figured ty
[07:44:45] <dodobrain> get() can raise exceptions, filter does no such thing, will simply return an empty queryset if there are no recults matching your "rules"
[07:44:51] <Guest80> i feel that if you can use get though, it'll be faster
[07:45:24] <Guest80> interesting did not know that
[07:45:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:45:57] <dodobrain> i dont think there ere performance implications unless you have an extremely broad filter and a massive amount of records that match (i'm talking prolly millions) and the only thing you do is pick the first one and do something with it
[07:46:26] <dodobrain> also note that querysets are lazy. so most likely theres almost no penalty even if there *are* million records
[07:46:49] <Guest80> ok makes sense
[07:47:24] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:47:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:48:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:51:18] <schinckel> Sometimes it is better to do a .get() and catch an exception, rather than doing a .filter().exists() and then a .get(), as it will only do one query.
[07:51:51] <schinckel> (and you could still end up with an exception anyway, unless you are querying on a unique field(s)
[07:52:07] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:52:20] <dodobrain> who does filter().exists() and then a get? foo = Foo.objects..filter(...).first(); if foo: ...
[07:52:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[07:52:41] <dodobrain> or something of the sort
[07:52:42] <schinckel> Yeah, that’s another approach.
[07:54:10] <Guest80> cool thanks guys. Any other thoughts based on my other questions?
[07:54:38] <dodobrain> ok, i'm an idiot that needs to either eat lunch or fix my eyes
[07:55:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:55:30] <dodobrain> the integrityerror was on a context manager that was wrapping this code
[07:55:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:55:36] <dodobrain> sigh.. prolly need to do both
[07:56:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:57:07] <Guest80> https://www.geeksforgeeks.org/richtextfield-django-models/
[07:57:55] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:58:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:58:52] <Guest80> I think a good use case is for my terms and conditions to have it customizable in admin. Because right now I am using a regular textfield
[07:59:34] <Guest80> as for redis, i don't think i would need to persist login sessions?
[08:09:33] <schinckel> T&C is an interesting thing - if you need to be able to make changes to them, do you then need to check which users have agreed to the current version?
[08:10:32] <schinckel> We store a new T&C instance each time it is updated, and then on any login we check to see if the (stored) T&C agreement time for that user is earlier than the last time we updated, and if so prompt them to agree to the changed T&C.
[08:12:24] <Guest80> schinckel you mean this? https://github.com/cyface/django-termsandconditions
[08:13:06] <Guest80> I have my own without middleware / version checking because that library only deals with terms. I made the same thing for privacy policy.
[08:13:28] <Guest80> idk if that is the best approach legally though
[08:14:16] <Guest80> i store a person's consent to terms on signup via a checkbox in my custom user table
[08:14:37] <Guest80> then i guess i will always have them agreed to the terms no matter how much i update them
[08:15:25] <Guest80> i might add that to mine though idk yet
[08:15:33] <Guest80> depends on the legal way to do it
[08:15:53] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:17:35] <Guest80> i haven't seen other websites really go to that level though
[08:20:54] <dodobrain> Guest80, if you have an FK on your user model to the termsandconditions, you can now link them to specific instances
[08:21:53] <dodobrain> e.g. userA has agreed to the termsandconditions generated on 2022-02-22
[08:21:58] <Guest80> i don't though. i simply have a terms table with an id, terms html, and a date last updated
[08:22:11] <Guest80> then the user table populates as consented on signup
[08:22:33] <dodobrain> if you do that then how do you get consent again for updates to the terms?
[08:22:51] <Guest80> but yea if i do it that way you are right that is the right approach
[08:22:58] <dodobrain> as you say, they would have consented to the updated termsmaybe even not knowing the terms were updated!
[08:23:24] <Guest80> say in my terms explicitly "you agree to consent to terms no matter how many times the terms are updated"
[08:23:25] <dodobrain> and also likely you might want to store the datetime the user consented
[08:24:21] <Guest80> yea i know what you are talking about - its like that library from github i linked
[08:24:32] <dodobrain> i.e. you might have userA signup to your services on 2022-02-17, but because they didnt consent until 2022-02-22 during that period they were not able to use the services "fully"/"completely" (whatyever that means
[08:24:36] <Guest80> i used it but the problem was it was only for terms not terms and privacy
[08:25:33] <dodobrain> Guest80, you can build your own rudimentary version. you dont have to use that lib. i can certainly understand the motivation to not use a lib that offers too much or almost everything one needs
[08:25:35] <Guest80> good point. i am not that much of a control freak i will allow them to use features
[08:27:02] <Guest80> then i thought about the UX and just seems annoying to have people consent again and not read it lol
[08:31:49] <Guest80> ok gtg thanks all
[08:33:18] *** Joins: rob4227 (~Thunderbi@2.57.168.214)
[08:34:57] *** Quits: rob4226 (~Thunderbi@154.6.25.216) (Ping timeout: 240 seconds)
[08:34:57] *** rob4227 is now known as rob4226
[08:36:08] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[08:36:19] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:37:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:37:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:38:51] *** Joins: mattil (~mattil@helsinki.portalify.com)
[08:42:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[08:43:23] <schinckel> Yeah, that looks similar to our stuff - but we just store an agreement with a timestamp, rather than relating to different versions directly.
[08:46:11] *** Quits: bambanxx (~bambanx@2800:150:106:1061:c008:90ed:2a05:281) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:11:06] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:26:15] <audio> schinckel, i figured it out
[09:35:42] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[09:40:12] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[09:46:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[10:00:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:04:26] <serafeim> hello friends
[10:04:40] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:09:14] <jim> serafeim, hi
[10:11:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[10:39:35] *** Joins: jmd (~user@de.cellform.com)
[10:40:21] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[10:40:47] *** Joins: jmd (~user@de.cellform.com)
[10:48:30] *** Joins: mrwick (~mrwick@user/mrwick)
[10:55:33] *** Joins: sandeepk (~sandeepk@223.130.30.95)
[11:02:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:02:12] *** ChanServ sets mode: +v EvilDMP
[11:07:30] <jim> so dtl, has four constructs, {{variables}}, {%tags%}. filters and comments... and everything else gets sent to the browser?
[11:15:05] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[11:17:15] <serafeim> probably
[11:17:18] <serafeim> why do you ask
[11:18:03] <jim> trying to understand templating (at least DTL)
[11:18:19] <serafeim> it's very simple
[11:18:31] <jim> I'm starting to see that
[11:18:35] <serafeim> and very restrictive
[11:18:46] <serafeim> some people like restrictiveness others don't. so they use jinja
[11:19:14] <jim> which would make them jinua ninjas?
[11:19:19] <serafeim> me ? i think it ain't worth using jinja. there are ways to hoop around that restrictiveness
[11:19:30] <serafeim> meh. they just wanna call functions and methods with parameters
[11:19:56] <jim> you mean inside {{ ... }}?
[11:20:34] <jim> or is that something that's inside DTL and not inside jinja?
[11:21:24] <jim> actually never mind that part :) I'm nlt looking to study the other templating systems right now :)
[11:21:42] <serafeim> in junja you can do {{ foo.bar("baz") }}. in dtl you cant
[11:22:47] <jim> where foo.bar is a callable, and foo.bar("baz")
[11:23:17] <jim> where foo.bar is a callable, and foo.bar("baz") is what you can't do in a DTL {{ ... }}?
[11:24:00] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[11:24:25] <jim> what I read, was that if DTL sees a {{ ... }} with a callable, it will call that with no params
[11:24:52] *** Quits: spacexdragon (~spacexdra@1.224.172.98) (Ping timeout: 272 seconds)
[11:25:38] <jim> that said, can't you put a callable with args in a {% ... %}?
[11:25:55] <serafeim> no
[11:26:02] <serafeim> you need to create a template tag
[11:27:08] <jim> which sounds like something you create to go inside a {% ... %}, and which calls your function with only those args?
[11:27:10] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[11:28:14] <jim> (i.e., a constant set of args per template tag?
[11:28:21] <jim> )
[11:28:28] <serafeim> no you can do something like {% template_tag param1 param2 %}
[11:28:35] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[11:28:36] <serafeim> but i don't wanna tell you about this just read the docs
[11:28:40] <serafeim> or try it yourself
[11:29:01] <jim> link? :)
[11:30:07] <jim> I'm already looking here: https://docs.djangoproject.com/en/4.0/topics/templates/
[11:34:14] <audio> can anyone help? i get this error when trying to install an old python package: https://bpa.st/BK3A
[11:34:23] *** Joins: pycode (~pycode3@2001:b07:5d28:551:1632:2957:5a3c:8d2e)
[11:37:28] <serafeim> audio: try to update your pip and setuptools
[11:38:53] *** Joins: djapo (~archangel@user/djapo)
[11:39:16] <audio> serafeim, i did
[11:39:30] <audio> serafeim, keep in mind its a super old package
[11:39:57] <serafeim> hmmm then i'm not sure
[11:40:13] <jim> do you need it to have the functionality of the super old package? would something else not do?
[11:41:31] <serafeim> this is a package frm 2011
[11:41:58] <jim> also... can you clean out the results of the error-producing pip install, and then try again?
[11:42:05] <serafeim> so i guess you need a python pip setuptools from 2011
[11:43:51] <audio> jim, clean out the results? i don't know what this means
[11:44:22] <audio> serafeim, eh
[11:44:32] <jim> I'm guessing that when you tried to install the package, it may have left remnants. can you get rid of those?
[11:44:42] <audio> jim, how
[11:45:01] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:45:06] <jim> dunno, I'd think they could tell you more on #python
[11:45:28] <jim> also, did you run pip to install into a venv?
[11:47:46] <jim> if yes, you may wish to recreate that venv and install the stuff you installed before -then back it up-
[11:48:15] <jim> once you have the backup, you can try stuff
[11:51:40] <jim> (and of course, if an attempt fails, you could blow away the venv, and untar the backup)
[11:52:27] <jim> that said... what is the purpose of this old package?
[11:56:05] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:01:03] *** Quits: moldy (~rene@user/moldy) (Read error: Connection reset by peer)
[12:01:48] *** Quits: jmd (~user@de.cellform.com) (Ping timeout: 240 seconds)
[12:01:57] <audio> jim, im going to use the package i chose first before this one
[12:02:02] <audio> jim, its a music fingerprinter
[12:02:08] <audio> jim, im downloading songs
[12:02:11] <audio> to train a neural net
[12:02:17] <audio> need real songs
[12:02:27] <audio> not STINKY covers
[12:02:38] <audio> and tributes
[12:02:56] *** Quits: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[12:03:14] *** Joins: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl)
[12:03:21] <jim> howbout this one: https://www.youtube.com/watch?v=MTKJ2ErFbkk
[12:06:16] *** Joins: mattil (~mattil@dy6psnsqf3pbq6nc7rb2y-4.rev.dnainternet.fi)
[12:11:24] *** Quits: dor (~erg@188.147.34.92.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[12:15:59] *** Quits: mattil (~mattil@dy6psnsqf3pbq6nc7rb2y-4.rev.dnainternet.fi) (Remote host closed the connection)
[12:16:09] *** Joins: slav0nic (slav0nic@python.su)
[12:16:34] *** Joins: mattil (~mattil@37-33-224-229.bb.dnainternet.fi)
[12:16:35] *** Quits: mattil (~mattil@37-33-224-229.bb.dnainternet.fi) (Read error: Connection reset by peer)
[12:16:47] *** Joins: mattil (~mattil@dy6psnsqf3pbq6nc7rb2y-4.rev.dnainternet.fi)
[12:16:57] *** Joins: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl)
[12:18:04] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[12:22:01] *** Quits: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl) (Read error: Connection reset by peer)
[12:23:00] *** Quits: mattil (~mattil@dy6psnsqf3pbq6nc7rb2y-4.rev.dnainternet.fi) (Remote host closed the connection)
[12:23:35] *** Joins: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl)
[12:29:28] *** Quits: carlorat1 (carloratm@tilde.club) (Quit: leaving)
[12:36:57] *** Joins: mattil (~mattil@dy6psnsqf3pbq6nc7rb2y-4.rev.dnainternet.fi)
[12:38:17] *** Quits: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[12:41:17] *** Quits: mattil (~mattil@dy6psnsqf3pbq6nc7rb2y-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[12:41:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[12:41:47] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:43:54] *** Joins: F40PH (~david@d54c34da5.access.telenet.be)
[12:46:35] *** Joins: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl)
[13:12:18] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[13:13:02] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[13:13:27] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[13:13:59] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[13:15:21] *** Quits: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 245 seconds)
[13:16:49] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[13:21:11] *** Joins: thiras (~thiras@user/thiras)
[13:23:26] *** Joins: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl)
[13:34:06] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[13:34:47] *** Joins: cliluw (~cliluw@47.147.77.43)
[13:42:56] *** Joins: esirumeran (~noctis@122.pool85-61-159.dynamic.orange.es)
[13:44:16] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:50:20] *** Quits: esirumeran (~noctis@122.pool85-61-159.dynamic.orange.es) (Quit: WeeChat 3.3)
[13:52:12] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:55:55] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[13:58:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:00:16] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:12:05] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[14:17:32] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:37:29] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[14:41:29] *** Joins: moldy (~rene@user/moldy)
[14:41:29] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[14:41:56] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[14:44:22] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[14:46:58] *** Quits: pycode (~pycode3@2001:b07:5d28:551:1632:2957:5a3c:8d2e) (Ping timeout: 250 seconds)
[14:53:05] *** Joins: teut (~teut@122.161.83.81)
[14:53:38] *** Joins: pepper (~pepper@user/pepper)
[15:00:37] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[15:04:46] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:05:03] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[15:09:01] *** Joins: pycode (~pycode3@2001:b07:5d28:551:202d:df41:5a0c:e343)
[15:17:57] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:19:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:202d:df41:5a0c:e343) (Ping timeout: 252 seconds)
[15:43:08] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:46:57] *** Joins: ambasta (~ambasta@2001:470:69fc:105::1:3973)
[16:09:08] *** Joins: mogoh (~mogoh@2001:470:69fc:105::4fd5)
[16:10:19] *** Joins: whitefly (~whitefly@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:16:24] *** Quits: mogoh (~mogoh@2001:470:69fc:105::4fd5) (Quit: Reconnecting)
[16:16:43] *** Joins: mogoh (~mogoh@2001:470:69fc:105::4fd5)
[16:22:09] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[16:22:47] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[16:29:38] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Quit: Leaving)
[16:29:53] *** Joins: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br)
[16:31:06] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Client Quit)
[16:31:21] *** Joins: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br)
[16:32:00] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[16:32:26] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Read error: Connection reset by peer)
[16:32:40] *** Joins: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br)
[16:41:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[16:42:01] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:42:14] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[16:42:59] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:47:19] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[16:48:54] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[16:53:34] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[16:56:43] *** Quits: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[16:57:49] *** Joins: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl)
[16:58:25] *** Joins: MangoBango (~MangoBang@195.52.200.146.dyn.plus.net)
[16:59:46] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:01:49] <MangoBango> Hey guys. I have a problem where overriding admin.ModelAdmin for multiple databases as detailed here: https://docs.djangoproject.com/en/4.0/topics/db/multi-db/#exposing-multiple-databases-in-django-s-admin-interface does not call save_model at all, and results in trying to call the default database instead of the one specified
[17:01:50] <MangoBango> https://dpaste.org/PA1b
[17:05:43] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:07:10] *** Quits: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[17:12:56] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Quit: WeeChat 3.4)
[17:14:21] *** Joins: pycode (~pycode3@2001:b07:5d28:551:e89:bf0d:3aee:c475)
[17:19:32] *** Joins: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl)
[17:20:37] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[17:28:27] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:49:57] *** Quits: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[17:52:14] *** Joins: dor (~erg@188.147.4.62.nat.umts.dynamic.t-mobile.pl)
[17:52:43] *** Joins: jmd (~user@de.cellform.com)
[17:55:23] <prodigius> MangoBango, looks according to the docs to me. What do your db settings look like?
[17:57:17] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[17:57:42] *** Joins: thiras (~thiras@user/thiras)
[18:02:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[18:09:20] *** Quits: MangoBango (~MangoBang@195.52.200.146.dyn.plus.net) (Quit: Client closed)
[18:14:00] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[18:14:30] *** Joins: pepper (~pepper@user/pepper)
[18:17:56] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[18:18:19] *** Joins: pepper (~pepper@user/pepper)
[18:19:25] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[18:23:07] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:23:57] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[18:24:56] *** Joins: sw (~sw@user/sw)
[18:27:42] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[18:28:10] *** Joins: pepper (~pepper@user/pepper)
[18:28:41] *** Joins: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it)
[18:31:36] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[18:34:01] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[18:34:17] *** Joins: pepper (~pepper@user/pepper)
[18:47:33] *** Joins: dez (uid92154@user/dez)
[18:48:15] *** Joins: pro_z (~pro_z@37.214.61.103)
[18:51:09] *** Quits: teut (~teut@122.161.83.81) (Ping timeout: 256 seconds)
[19:05:22] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:07:36] *** Quits: sandeepk (~sandeepk@223.130.30.95) (Remote host closed the connection)
[19:13:17] *** Joins: bambanxx (~bambanx@2800:150:106:1061:c008:90ed:2a05:281)
[19:14:21] *** Joins: rotherfuchs (~rotherfuc@81.93.112.104)
[19:15:59] <rotherfuchs> Hi there - quick question: I'm using AWS OpenID Connect to authenticate users. OIDC will then redirect to my Django UI, providing a JWT token in the header. This token is to be validated on Django side and - if valid - the user is logged in. Am I supposed to write a custom Authentication Backend here or is a custom view sufficient? The Django login
[19:16:00] <rotherfuchs> form will not be used at all.
[19:22:53] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 256 seconds)
[19:34:43] <moldy> probably a custom auth backend, but first i'd check if you can use an existing solution
[19:34:54] <moldy> there are probably some apps that implement openid support
[19:41:24] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[19:47:09] *** Quits: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it) (Quit: Leaving.)
[19:48:29] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:48:40] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:48:56] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:50:57] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[19:56:13] *** Joins: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it)
[19:57:33] *** Parts: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it) ()
[19:59:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:32] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:01:58] *** Joins: xkuru (~xkuru@user/xkuru)
[20:02:54] *** Quits: bambanxx (~bambanx@2800:150:106:1061:c008:90ed:2a05:281) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:06:17] *** Quits: pycode (~pycode3@2001:b07:5d28:551:e89:bf0d:3aee:c475) (Ping timeout: 256 seconds)
[20:10:09] *** Joins: mintograde (~mintograd@47.201.5.61)
[20:13:39] *** Quits: rotherfuchs (~rotherfuc@81.93.112.104) (Quit: Client closed)
[20:13:57] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[20:15:02] <fikran> I have a somewhat large, older code-base that I am going to be modernizing in a few weeks.
[20:15:40] <fikran> When I was using django years ago, the HTML code and application code were integrated (not PHP integrated, but a 1:1 realtionship)
[20:15:50] <fikran> I'm wondering if there is a way to have application code be API code
[20:16:03] <fikran> and the web interface be different that just populates based on the API?
[20:16:12] <fikran> Thoughts? Anyone done this?
[20:17:18] <GinFuyou> Django templates were never fully integrated with code, it's intentionally designed to be problematic
[20:17:25] <GinFuyou> Not sure what exactly you mean
[20:17:32] <fikran> intentionally designed to be problematic?
[20:18:04] <GinFuyou> Yes, since DTL is much more limited than python
[20:18:23] <fikran> so for exmaple, if I run /page/, it executes Page(). And at the end sends back a rendered webpage with the HTML.
[20:18:34] <fikran> Wondering if I could do /api/page/, which is called by the client from /page/
[20:18:43] <fikran> does that make sense? My terminology is probably off.
[20:18:52] *** Joins: aselman4 (~aselman4@chipr001-p2.nls.ford.com)
[20:19:00] <GinFuyou> Not sure what is the point of that?
[20:19:07] <GinFuyou> Single-page application?
[20:19:26] <fikran> in the event that I wanted a separate application to call the API.
[20:19:44] <dang`r`us> you don't have to use django templates, you can write a pure API in Django
[20:19:53] <dang`r`us> django views are not tied to django templates
[20:19:58] <GinFuyou> You mean view that can send both HTML and (for example) JSON?
[20:20:04] <GinFuyou> SUre that's possible too
[20:21:10] <fikran> I think what I might do is have an internal separation first (ie, page() calls backend_page()) and then in the long-run create an API around backend_api()
[20:21:13] <GinFuyou> Or yeah, you can do rendering by javascript client-side and django will only provide JSON api for whatever consumer is: webbrowser or some other application
[20:21:37] <fikran> wondering how widely used django is? compared to INSERTNAME.js
[20:22:31] <dang`r`us> your internal logic can produce e.g. python dicts and those can be either passed to a django template or serialized to JSON
[20:23:23] *** Quits: aselman4 (~aselman4@chipr001-p2.nls.ford.com) (Quit: Client closed)
[20:23:36] <fikran> yeah
[20:23:38] <fikran> cool!
[20:27:04] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[20:46:48] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[20:47:07] *** Joins: pepper (~pepper@user/pepper)
[20:48:12] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 252 seconds)
[20:52:49] <moldy> fikran: sure you can do that, but i'd think about why first...
[20:59:31] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:00:05] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[21:00:22] *** Joins: pepper (~pepper@user/pepper)
[21:03:18] *** Parts: LordKalma (~LordKalma@server.portaldoradioamador.pt) (The Lounge - https://thelounge.chat)
[21:11:08] *** Joins: Elzington (~Elzington@68.235.43.84)
[21:14:57] *** Joins: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it)
[21:30:20] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[21:30:33] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[21:30:41] *** Joins: pepper (~pepper@user/pepper)
[21:30:58] *** Parts: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it) ()
[21:34:18] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:34:54] *** Joins: paprika (~pepper@user/pepper)
[21:36:13] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 250 seconds)
[21:41:47] *** Joins: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it)
[21:44:56] *** Parts: blackout69 (~blackout6@net-31-156-75-167.cust.vodafonedsl.it) ()
[21:59:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:08:24] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:10:01] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[22:14:37] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[22:29:32] *** Quits: crowbar (~crowbar@user/crowbar) (Remote host closed the connection)
[22:30:35] *** Joins: crowbar (~crowbar@user/crowbar)
[22:35:39] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[22:36:28] *** Quits: rob4226 (~Thunderbi@2.57.168.214) (Quit: rob4226)
[22:43:23] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[22:43:55] *** Joins: pycode (~pycode3@2001:b07:5d28:551:3cbd:a3bd:ace0:3635)
[22:51:00] *** Joins: rob4226 (~Thunderbi@2.57.168.214)
[22:52:37] *** Quits: pro_z (~pro_z@37.214.61.103) (Ping timeout: 240 seconds)
[23:02:51] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[23:04:41] *** paprika is now known as pepper
[23:07:38] *** Stench is now known as Staunch
[23:25:22] *** Joins: csm3105 (~csm3105@31.177.98.6)
[23:27:42] *** Quits: pycode (~pycode3@2001:b07:5d28:551:3cbd:a3bd:ace0:3635) (Ping timeout: 260 seconds)
[23:27:52] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[23:32:44] *** Quits: csm3105 (~csm3105@31.177.98.6) (Quit: Leaving)
[23:38:17] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[23:50:15] <nbjoerg> fikran: look at e.g. django rest framework?
[23:50:26] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[23:52:54] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:55:57] *** Joins: djapo (~archangel@user/djapo)
