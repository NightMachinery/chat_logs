[00:01:11] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[00:05:06] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 245 seconds)
[00:09:30] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:39fc:118b:ca93:c1bd)
[00:12:33] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[00:17:21] *** Quits: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es) (Quit: Quit)
[00:24:34] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[00:28:02] <dostoyevsky2> Will the Gods of Computer Science curse me if I generate a uuid from a sha256?
[00:29:14] <bookworm> any reason you need to roll your own rather than just using the algo everyone else uses?
[00:29:46] <dostoyevsky2> I want to be able to generate the same UUIDs in a distributed system
[00:31:50] <dostoyevsky2> it won't help you much that server 1 says the UUID of your thing is x and the other claims the UUID is y
[00:36:53] <seebs> that's not a UUID
[00:37:03] <seebs> that's a hash that's being used as an identifier
[00:37:40] <seebs> basically, if you are doing a hash, don't call it a UUID, you'll be misleading people, such as "yourself later when you're looking at the code again"
[00:37:44] <dostoyevsky2> Can one verify whether something is a uuid or just a hash if it looks like a uuid?
[00:37:49] <seebs> no
[00:37:55] <seebs> which is sort of the problem
[00:38:08] <seebs> because it means that you might expect something to have the mathematical properties of a UUID when it doesn't
[00:38:49] <dostoyevsky2> E.g. SSNs or CC numbers have validation properties.. checksum etc... it's not just random numbers
[00:39:21] <dostoyevsky2> If UUID doesn't have that... then I do not see why it couldn't be a hash
[00:39:42] <fizzie> UUIDs have a few special bits denoting the variant and version.
[00:40:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[00:42:22] <JPT> "A universally unique identifier (UUID) is a 128-bit label used for information in computer systems. The term globally unique identifier (GUID) is also used [...]" - If your goal is to generate shared identifiers for things, don't call them unique. :)
[00:42:30] *** Joins: fikran (~fikran@user/fikran)
[00:42:52] <seebs> it shouldn't be a hash because if someone submits the same thing, they'll get the same hash, but that isn't what UUIDs are *for*.
[00:43:02] <seebs> UUIDs aren't supposed to identify identical things.
[00:43:09] <dostoyevsky2> So, ok, this actually from my S3 implementation... do you expect that the version id of your s3 object depends on which server it was stored on?
[00:43:22] <ikke> seebs: No, it's about identity
[00:43:29] <dostoyevsky2> Because S3 doesn't handle it that way
[00:43:36] <seebs> i guess one question is what you'd be hashing, exactly
[00:43:47] <dostoyevsky2> The UUID of your thing doesn't depend on how often it was replicated
[00:43:52] <seebs> but also i note that many hashes have been found to be vulnerable to hash collision attacks, and more will be in time, probably
[00:43:56] <seebs> right
[00:44:06] <seebs> but if you submit an identical file, you get a new UUID for it
[00:44:20] <seebs> because it's a new file even if it happens to be the same as another file
[00:44:22] <dostoyevsky2> Yeah
[00:45:01] <seebs> UUID is supposed to be unique-per-thing, and this admits the possibility of having identical things which each get their own UUID.
[00:45:11] <seebs> hashing is supposed to identify things by whatever data you feed into the hash
[00:46:04] <seebs> if you want a thing that's being used to represent the sameness of identical files, that's a hash, and you shouldn't call it a UUID or treat it as one, because it has the possibly-undesireable trait that if two users submit things that get the same hash, they get the same UUID
[00:46:15] <seebs> also note that a UUID for a file could be persistent over time even when the file gets edited
[00:46:41] <ikke> this
[00:46:53] <b0nn> hrm, all hashes are (eventually) vulnerable to collision attacks because it's impossible to have a space broad enough for every object in the universe for all time - it's always a case of "this hash is safe until computers catch up and calculate faster
[00:46:53] <ikke> a UUID is not dependent on the contents
[00:46:55] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[00:47:04] <ikke> pigeon hole principle
[00:47:14] <dostoyevsky2> seebs: UUIDs are for versions in S3, which cannot be edited... you just generate a new version
[00:47:37] <ikke> That's just an implementation detail
[00:48:04] <dostoyevsky2> but if you hash the bucket+path+version_count of an object that doesn't change..
[00:48:22] <ikke> Call it a hash if it depends on content, call it a UUID if it depends on identity
[00:49:46] <ikke> 2 people could upload the same file, but they could have different UUIDs
[00:50:40] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:51:07] <dostoyevsky2> yeah, that is true... you could delete the file and create it again, expecting a different uuid than before
[00:53:22] *** Joins: hornhack (~hackingho@user/hackinghorn)
[00:56:10] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 260 seconds)
[00:56:26] <seebs> yeah
[00:56:35] <seebs> identity refers to which thing, hash refers to which contents
[01:03:46] *** Joins: Torr (~Torr@user/torr)
[01:03:59] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[01:05:11] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 264 seconds)
[01:18:00] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[01:19:42] *** hornhack is now known as haunthack
[01:20:58] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 258 seconds)
[01:28:33] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[01:30:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:31:28] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[01:33:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:40:54] *** Quits: normen (~normen@p200300d7170f72009cc6613dcc25cd8f.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[01:47:11] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 264 seconds)
[01:47:32] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[01:47:40] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:61fc:fc35:aa18:5e3)
[01:47:46] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:48:54] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:39fc:118b:ca93:c1bd) (Quit: WeeChat 3.3)
[01:49:20] *** Joins: rcernin (~rcernin@124.190.139.235)
[01:51:21] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-41b1-20c0-527b-f316.inf6.spectrum.com) (Ping timeout: 265 seconds)
[01:55:50] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Quit: No Ping reply in 180 seconds.)
[01:57:07] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[01:57:40] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[01:58:42] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.123) (Ping timeout: 260 seconds)
[02:00:19] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[02:00:37] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[02:01:07] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Client Quit)
[02:01:30] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[02:03:36] *** Quits: haunthack (~hackingho@user/hackinghorn) (Quit: Leaving)
[02:13:34] *** Joins: normen (~normen@p200300d7170f72009cc6613dcc25cd8f.dip0.t-ipconnect.de)
[02:22:07] *** Quits: normen (~normen@p200300d7170f72009cc6613dcc25cd8f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:24:22] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Ping timeout: 260 seconds)
[02:24:51] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[02:30:38] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[02:32:18] *** Quits: mikey__ (mikey__@user/mikey/x-6463285) (Ping timeout: 260 seconds)
[02:34:15] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[02:38:27] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:40:09] *** Parts: mikey__ (mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[02:44:30] *** Joins: dfch (~dfch@user/dfch)
[02:45:31] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Ping timeout: 245 seconds)
[02:49:04] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[02:49:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[02:49:59] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[02:50:06] <SJrX> I have a global variable in a framework, Gin, that takes an io.Writer. I need to write an adapter from that to a logging framework (rs/zerolog). In Java I could just write a lambda that implements the single method, in Go it seems like I need to create a whole new type just for this one place. Is there a more idiomatic way?
[02:51:51] *** Joins: fikran (~fikran@user/fikran)
[02:53:13] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[02:54:44] <b0nn> Are you saying that you want to change the io.Writer such that it tees to a logger as well as whatever is being written to it
[02:55:02] <SJrX> Nope I just want it to write to the logger.
[02:55:29] <b0nn> uhhh, you want to replace the io.Writer to write to a logger?
[02:55:36] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[02:55:36] <SJrX> Yes
[02:55:40] <b0nn> replace the existing one
[02:55:56] *** Joins: normen (~normen@p200300d7170f72009cc6613dcc25cd8f.dip0.t-ipconnect.de)
[02:56:01] <SJrX> Yeah except that a logger doesn't implement io.Writer so I need an adapter.
[02:56:24] <b0nn> does the logger not expose an implementation of the io.Writer interface?
[02:58:07] <SJrX> It actually does, but I need to tweak the log message slightly (the writer interface doesn't put a log level on the message), so I need a new implementation to actually log it as debug.
[02:59:39] <fizzie> Creating a "whole new type" isn't really a big thing, and no, there's no generic syntax sugar for implementing single-method ("functional") interfaces with a function literal like in Java.
[03:00:10] <b0nn> zerolog.SetGlobalLevel(zerolog.DebugLevel)
[03:00:49] <b0nn> I'm thinking you mean.. debug for certain lines, and some other level for others though
[03:01:18] <fizzie> In some contexts there are function-to-interface adapters, like http.HandlerFunc, and such a thing could easily be made for io.Writer as well (and it'd be exactly 4 lines of code), but there isn't a generic shorthand notation for it.
[03:02:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:02:09] <SJrX> Thanks fizzie
[03:03:06] <SJrX> b0nn, so it looks like zerolog supports logging without a level: https://github.com/rs/zerolog#logging-without-level-or-message , which is what the default logger does, which is what we actually don't want :) But I think I'm fine with creating a type, I just didn't want people to judge me as a n00b :)
[03:03:36] *** Joins: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale)
[03:04:23] <b0nn> Oh, here we only judge people by the cars that they drive (apologies to Ellen)
[03:16:28] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[03:17:36] *** Joins: orthoplex64 (~crm@70.120.0.94)
[03:17:55] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[03:25:10] *** Quits: normen (~normen@p200300d7170f72009cc6613dcc25cd8f.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[03:26:18] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:30:03] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[03:34:12] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[03:34:32] *** Joins: alzgh (~alzgh@user/alzgh)
[03:36:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[03:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[03:52:12] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:53:25] *** Joins: INeedAHandle (~INeedAHan@211.192.133.205)
[03:57:08] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[03:57:21] <chilversc> Tv_: thanks, yeah I know it's just annoying when its some random appliance that I have no control over belonging to some other company
[03:57:49] *** Quits: adip (~adip@aedv46.neoplus.adsl.tpnet.pl) (Ping timeout: 252 seconds)
[03:58:01] *** Quits: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Read error: Connection reset by peer)
[03:58:49] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[03:59:18] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[04:02:47] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Ping timeout: 264 seconds)
[04:05:11] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[04:09:41] *** Joins: adip (~adip@aedv46.neoplus.adsl.tpnet.pl)
[04:12:58] *** Quits: INeedAHandle (~INeedAHan@211.192.133.205) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:14:11] *** Quits: adip (~adip@aedv46.neoplus.adsl.tpnet.pl) (Ping timeout: 264 seconds)
[04:15:07] *** Joins: INeedAHandle (~INeedAHan@211.192.133.205)
[04:42:49] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-61fc-fc35-aa18-05e3.inf6.spectrum.com)
[04:44:54] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:61fc:fc35:aa18:5e3) (Ping timeout: 258 seconds)
[04:51:58] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 265 seconds)
[04:58:32] *** Joins: frost (~frost@59.71.244.189)
[04:59:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[05:01:12] *** Joins: fikran (~fikran@user/fikran)
[05:08:56] *** Quits: INeedAHandle (~INeedAHan@211.192.133.205) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:11:20] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Remote host closed the connection)
[05:11:50] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[05:11:54] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[05:18:08] *** Quits: jespada (~jespada@2803:9800:9842:7a62:a1db:843b:ed19:cad6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:18:28] *** Quits: jasper_ (~user@styria.daemonized.org) (Read error: Connection reset by peer)
[05:18:53] *** Joins: jasper_ (~user@styria.daemonized.org)
[05:24:02] *** Joins: normen (~normen@p54b344f9.dip0.t-ipconnect.de)
[05:25:27] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[05:25:51] *** Joins: Jigsy (~Jigsy@user/jigsy)
[05:27:39] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:61fc:fc35:aa18:5e3)
[05:30:47] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-61fc-fc35-aa18-05e3.inf6.spectrum.com) (Ping timeout: 265 seconds)
[05:37:24] *** Quits: normen (~normen@p54b344f9.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[05:50:59] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:03:22] *** Joins: cskr (~cskr@49.207.204.186)
[06:11:10] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:12:07] *** Joins: gggpkm__ (~gggpkm@60.10.194.46)
[06:15:22] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 258 seconds)
[06:16:01] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[06:20:28] *** Quits: cskr (~cskr@49.207.204.186) (Quit: Leaving)
[06:22:17] *** Quits: gggpkm__ (~gggpkm@60.10.194.46) (Read error: Connection reset by peer)
[06:26:34] *** Quits: yelnah (~felix@110-175-211-144.static.tpgi.com.au) (Ping timeout: 260 seconds)
[06:27:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:38:37] *** Joins: yelnah (~felix@110-175-192-219.static.tpgi.com.au)
[06:42:05] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[06:44:39] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:7476:ca4a:729e:7f0f)
[06:47:30] *** Joins: normen (~normen@p54b344f9.dip0.t-ipconnect.de)
[06:48:00] *** Joins: ztx (~ztx@user/ztx)
[06:48:19] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:f1e1:7728:cb2c:3648) (Ping timeout: 252 seconds)
[06:49:52] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[06:54:23] *** Quits: bkircher (~bkircher@200116b84646c600f2b6ff3b366cc350.dip.versatel-1u1.de) (Ping timeout: 264 seconds)
[06:59:25] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[07:01:20] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:08:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[07:08:47] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[07:08:48] *** Joins: bkircher (~bkircher@200116b846bca7003faa9f75caa7a1a2.dip.versatel-1u1.de)
[07:10:33] *** Joins: fikran (~fikran@user/fikran)
[07:14:36] *** Quits: darkapex (~darkapex@user/darkapex) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:14:48] *** Joins: darkapex_ (~darkapex@user/darkapex)
[07:15:59] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 264 seconds)
[07:16:21] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 245 seconds)
[07:16:21] *** Quits: lebster (sid17131@id-17131.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[07:16:46] *** Quits: theckman (sid295081@user/theckman) (Ping timeout: 245 seconds)
[07:17:11] *** Quits: hdm (sid500490@aha/hacker/hdm) (Ping timeout: 268 seconds)
[07:17:28] *** Quits: psb (sid500598@user/psb) (Ping timeout: 258 seconds)
[07:17:28] *** Quits: eric_hill (sid323132@id-323132.tinside.irccloud.com) (Ping timeout: 258 seconds)
[07:17:43] *** Joins: psb (sid500598@user/psb)
[07:17:49] *** Joins: theckman (sid295081@user/theckman)
[07:19:25] *** Joins: hdm (sid500490@aha/hacker/hdm)
[07:19:32] *** Joins: r0bby (r0bby@user/r0bby)
[07:19:34] *** Joins: Memory (sid459764@user/memory)
[07:19:38] *** Joins: eric_hill (sid323132@id-323132.tinside.irccloud.com)
[07:19:48] *** Joins: lebster (sid17131@hampstead.irccloud.com)
[07:20:47] *** Quits: normen (~normen@p54b344f9.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[07:41:33] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[07:46:49] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[07:51:26] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 265 seconds)
[07:53:16] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[07:55:36] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:1d99:5d01:effe:f5b0)
[07:56:38] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 260 seconds)
[07:58:29] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:61fc:fc35:aa18:5e3) (Ping timeout: 258 seconds)
[08:03:33] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:05:29] <SymbioticFemale> i don't write go. does "return checksum[:2]" mean the first or last two bytes?
[08:07:01] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Remote host closed the connection)
[08:07:41] <nitrix> First twos.
[08:08:50] <SymbioticFemale> thanks
[08:09:02] <nitrix> start_index:end_index, the end is exclusive.
[08:14:04] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[08:18:00] *** Quits: kodah (~kodah@user/kodah) (Quit: kodah)
[08:22:06] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[08:23:25] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:24:37] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[08:28:09] <KirkMcDonald> Same syntax as Python, approximately.
[08:30:06] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:23] *** Joins: c10l (~c10l@user/c10l)
[08:34:53] <seebs> except without the negative-offsets magic
[08:38:08] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:6d20:41c:fca7:7362)
[08:41:25] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:1d99:5d01:effe:f5b0) (Ping timeout: 258 seconds)
[08:43:41] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[08:49:44] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[08:54:59] *** Quits: pepee (~pepee@user/pepee) (Ping timeout: 264 seconds)
[08:55:40] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[08:58:01] <KirkMcDonald> There are actually a lot of differences in the syntax, heh.
[09:00:47] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.123)
[09:01:58] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[09:13:08] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:16:48] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f)
[09:17:12] *** Joins: normen (~normen@p200300d71725e8002d402b3ddef807ce.dip0.t-ipconnect.de)
[09:17:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[09:18:49] <b0nn> Anyone created a github action for a go project using their supplied go.yml? Am trying to work out what Makefile is being referenced and why it's failing
[09:19:26] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.123) (Quit: mikoto-chan)
[09:19:53] *** Joins: fikran (~fikran@user/fikran)
[09:19:53] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:6d20:41c:fca7:7362) (Ping timeout: 265 seconds)
[09:20:48] *** Joins: mrig (~AdiIRC@user/mrig)
[09:22:17] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:22:52] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[09:24:16] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[09:25:05] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[09:25:10] *** Quits: _\_ (~o@user/ding) (Read error: Connection reset by peer)
[09:25:18] *** Joins: mrig (~AdiIRC@user/mrig)
[09:25:35] *** Joins: jpw (~jpw@user/jpw)
[09:25:38] *** Joins: _\_ (~o@user/ding)
[09:28:14] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Client Quit)
[09:28:34] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Ping timeout: 260 seconds)
[09:29:07] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[09:30:35] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f)
[09:31:32] <b0nn> gah, fixed it, was following an out of date tute
[09:32:32] <b0nn> replaced `run: make unit-tests` with `run: go test ./...`
[09:33:25] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f) (Ping timeout: 265 seconds)
[09:39:01] *** Quits: cim (~cim@205.185.117.110) (Quit: Ping timeout (120 seconds))
[09:39:13] *** Joins: cim (~cim@205.185.117.110)
[09:40:22] *** Joins: RayS (~raysl@sdf1.xen.prgmr.com)
[09:40:25] *** Quits: RaySl (~raysl@sdf1.xen.prgmr.com) (Ping timeout: 252 seconds)
[09:47:08] *** Joins: dr0n (~nabromov@94.11.23.235)
[09:49:59] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[09:50:25] *** Quits: normen (~normen@p200300d71725e8002d402b3ddef807ce.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[09:54:25] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Remote host closed the connection)
[09:55:51] *** Joins: _xor (~xor@72.49.199.147)
[09:56:50] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[09:57:11] *** Joins: _xor (~xor@72.49.199.147)
[10:02:46] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:03:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:04:38] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[10:05:11] *** Quits: mikey__ (mikey__@user/mikey/x-6463285) (Ping timeout: 264 seconds)
[10:06:22] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 260 seconds)
[10:17:04] *** Joins: bluehoney (~pylong@cpe-75-81-204-188.mi.res.rr.com)
[10:19:34] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[10:24:40] *** Quits: bluehoney (~pylong@cpe-75-81-204-188.mi.res.rr.com) (Remote host closed the connection)
[10:25:40] *** Joins: bluehoney (~pylong@cpe-75-81-204-188.mi.res.rr.com)
[10:33:39] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[10:34:30] *** Quits: bluehoney (~pylong@cpe-75-81-204-188.mi.res.rr.com) (Remote host closed the connection)
[10:35:33] *** Joins: adip (~adip@aedv46.neoplus.adsl.tpnet.pl)
[10:37:33] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[10:38:31] *** Quits: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[10:40:17] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:41:32] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:47:12] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:56] *** Joins: algiss (~algiss@91.234.200.247)
[10:51:48] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:54:58] *** Joins: hentai (~hentai@2a01:e0a:a5c:a070:fba5:427e:b3e0:eb)
[10:54:58] *** Quits: hentai (~hentai@2a01:e0a:a5c:a070:fba5:427e:b3e0:eb) (Changing host)
[10:54:58] *** Joins: hentai (~hentai@user/hentai)
[10:56:21] *** Quits: dr0n (~nabromov@94.11.23.235) (Read error: Connection reset by peer)
[10:56:22] *** Quits: porn (~hentai@user/hentai) (Ping timeout: 252 seconds)
[10:56:48] *** Joins: dr0n (~nabromov@94.11.23.235)
[10:57:32] *** Joins: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney)
[10:58:23] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:02:58] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:04:53] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[11:10:20] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:15:06] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:20:47] *** Quits: bkircher (~bkircher@200116b846bca7003faa9f75caa7a1a2.dip.versatel-1u1.de) (Ping timeout: 264 seconds)
[11:24:21] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:26:08] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:27:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[11:29:14] *** Joins: fikran (~fikran@user/fikran)
[11:30:07] *** Joins: arinov (~arinov@213.194.126.155)
[11:30:11] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[11:30:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:32:13] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:32:59] *** Joins: bkircher (~bkircher@200116b846bca70010f3fbac31fd7801.dip.versatel-1u1.de)
[11:34:37] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[11:40:46] *** Quits: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale) (Remote host closed the connection)
[11:41:01] *** Joins: mei6 (~mei@user/mei)
[11:41:05] *** Joins: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale)
[11:47:33] *** Joins: normen (~normen@p200300d71725e8002d402b3ddef807ce.dip0.t-ipconnect.de)
[11:51:03] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[11:53:45] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:54:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:55:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:55:41] *** Quits: eNV25 (~quassel@user/env25) (Quit: 😳)
[11:56:10] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:56:26] *** Joins: eNV25 (~quassel@user/env25)
[12:03:49] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 258 seconds)
[12:19:35] *** Joins: jla (~jordi@tao.ddns.jazztel.es)
[12:23:33] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff)
[12:27:58] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff) (Ping timeout: 258 seconds)
[12:48:52] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff)
[12:50:15] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:01:21] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff) (Ping timeout: 245 seconds)
[13:01:35] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f)
[13:04:23] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f) (Ping timeout: 258 seconds)
[13:05:12] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:07:17] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:08:12] *** Joins: mickey8 (~user@user/mickey)
[13:12:10] *** Quits: shtirlic (~shtirlic@95-55-26-134.dynamic.avangarddsl.ru) (Remote host closed the connection)
[13:19:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:36:34] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[13:36:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:38:34] *** Joins: fikran (~fikran@user/fikran)
[13:46:35] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Ping timeout: 264 seconds)
[13:50:20] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:51:48] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:ada8:abf:5ec6:8011)
[13:53:22] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:ada8:abf:5ec6:8011) (Client Quit)
[13:54:13] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:58:44] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:b51d:c497:2031:7214)
[14:04:37] *** Joins: porn (~hentai@2a01:e0a:a5c:a070:fba5:427e:b3e0:eb)
[14:04:37] *** Quits: porn (~hentai@2a01:e0a:a5c:a070:fba5:427e:b3e0:eb) (Changing host)
[14:04:37] *** Joins: porn (~hentai@user/hentai)
[14:05:43] *** Quits: hentai (~hentai@user/hentai) (Ping timeout: 258 seconds)
[14:05:52] *** Parts: jla (~jordi@tao.ddns.jazztel.es) ()
[14:11:20] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:11:25] *** Quits: bkircher (~bkircher@200116b846bca70010f3fbac31fd7801.dip.versatel-1u1.de) (Quit: WeeChat 3.2)
[14:16:53] *** Joins: cskr (~cskr@49.207.204.186)
[14:24:35] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[14:32:09] *** Quits: nehsou^ (~nehsou@70.166.66.234) (Remote host closed the connection)
[14:36:02] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Read error: Connection reset by peer)
[14:36:08] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:36:53] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[14:43:02] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[14:45:59] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 264 seconds)
[14:54:30] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[14:54:49] <azidhaka> anyone doing audio on windows? i am searching for a way to get the names of all available audio devices on the system
[14:57:14] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:57:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:00:30] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[15:01:50] *** Joins: thing (~thing@user/thing)
[15:03:44] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[15:04:01] *** Joins: shtirlic (~shtirlic@95-55-26-134.dynamic.avangarddsl.ru)
[15:04:04] *** Joins: thing (~thing@user/thing)
[15:06:46] *** Parts: LordRishav (~LordRisha@user/lordrishav) (Ight Imma head out)
[15:08:35] *** Quits: dza (~dza@user/dza) (Ping timeout: 258 seconds)
[15:10:18] *** Quits: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale) (Quit: leaving)
[15:10:39] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:11:47] <MrElendig> azidhaka: use your favorite win32 api wrapper
[15:12:22] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9)
[15:12:32] <MrElendig> core audio api have functions for ennumerating devices and sinks
[15:12:57] <MrElendig> s/sinks/streams/
[15:20:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:23:11] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[15:26:44] *** Quits: algiss (~algiss@91.234.200.247) (Quit: algiss)
[15:27:48] <azidhaka> MrElendig: thanks
[15:30:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:31:10] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[15:32:18] *** Joins: amk (~amk@109.255.169.126)
[15:35:03] *** Joins: silbermm (~silbermm@user/ahappydeath)
[15:37:14] *** Joins: alzgh (~alzgh@user/alzgh)
[15:41:47] *** Quits: zwr (~zwr@2804:d45:b966:fb00:433c:7503:c491:fd59) (Ping timeout: 264 seconds)
[15:42:33] *** Joins: zwr (~zwr@2804:d45:b966:fb00:3928:72f5:d7d7:f752)
[15:43:13] *** Quits: mei6 (~mei@user/mei) (Read error: Connection reset by peer)
[15:46:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:47:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:47:41] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 258 seconds)
[15:47:55] *** Joins: fikran (~fikran@user/fikran)
[15:48:42] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[15:52:56] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:53:23] *** Joins: Torr (~Torr@user/torr)
[15:55:30] *** Quits: Torr (~Torr@user/torr) (Read error: Connection reset by peer)
[15:56:43] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9) (Remote host closed the connection)
[15:57:04] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9)
[15:58:24] *** Joins: dalan62367 (~dalan@59-102-54-91.tpgi.com.au)
[15:58:46] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:01:40] *** Joins: pepee (~pepee@user/pepee)
[16:03:01] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9) (Ping timeout: 245 seconds)
[16:03:31] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[16:09:54] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[16:11:08] *** Quits: kochchef (~quassel@80.146.255.46) (Quit: brb)
[16:11:38] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:13:50] *** Joins: kochchef (~quassel@80.146.255.46)
[16:18:09] <Mattiaslndstrm> Someone on Codewars commented "this shows a proper understanding of strings and runes in go" on the first solution here, why would it be preferred? https://gist.github.com/Mattiaslndstrm/2036c335d85bbda959ed5185265420b9
[16:19:02] <Mattiaslndstrm> Or is it not necessarily preferred, but just shows an understanding that's actually irrelevant in the current function?
[16:19:52] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:20:18] <Sam> Mattiaslndstrm: the second one is operating on bytes, not runes, so it will not always return the correct result in the case of a multi-byte rune
[16:20:41] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:20:54] <Sam> For example: https://play.golang.org/p/y8OvpQ1vICi
[16:21:40] <Sam> Assuming by "character" they mean "rune", these are also not the same thing and "char" is kind of ambiguous.
[16:21:59] <Mattiaslndstrm> Excellent! Thank you for your very clear response Sam!
[16:23:13] <Sam> Depending on what you mean by character though the first one may not be correct either, for example, see https://play.golang.org/p/s-I2g0jYKdr
[16:23:24] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: Textual IRC Client: www.textualapp.com)
[16:23:36] <Sam> (in this case the flag is a glyph made up of multiple runes which are made up of multiple bytes; Unicode is tricky)
[16:24:51] <Mattiaslndstrm> Oh, wow! Yeah, I have never actually taken the time to really understand different encodings. I'll do it when I have to!
[16:25:02] <mickey8> hi everyone. i'm trying to create a OOBE thing for windows installations. i need it to run with administrator privs to modify settings in the registry and such, but i also need it to run as the local user for installations of most programs. what would be the best way to approach this?
[16:25:23] <Sam> The first one was a problem with the encoding, the second isn't about the encoding though, it's just about how Unicode works, which is even more confusing :)
[16:25:31] <mickey8> i could probably run the same binary with some flag with RUNAS the local user, but that seems like too much of a hack
[16:26:01] <mickey8> and i could also run the same binary with some -admin flag to make it ask for administrator privs, etc.
[16:26:09] <mickey8> but im guessing there's a better approach
[16:26:57] <mickey8> maybe launch a goroutine with the stuff that needs admin and escalate permissions from within there? (is that even possible?)
[16:28:38] <fizzie> Just for fun, there's also RemoveCharThree: https://play.golang.org/p/gySxtU5_6NO
[16:28:51] *** Joins: jespada (~jespada@2803:9800:9842:7a62:5d33:6404:2aef:9813)
[16:34:35] <Sam> (note that the upper limit on those is kind of pointless, in the correct examples it won't do anything)
[16:35:00] *** Joins: xiongxin (~quassel@113.116.34.23)
[16:35:05] <Sam> But the third one fizzie just posted is probably how you'd actually want to do it. No sense in decoding the entire string then re-encoding it just to remove the first rune.
[16:35:37] <Sam> But that's a micro-optimization that's also not likely to matter, so ¯\_(ツ)_/¯
[16:36:11] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 265 seconds)
[16:39:23] <fizzie> It removes both the first and last runes (or bytes, in case of the second one). Not sure if that was intentional or not.
[16:39:35] *** Quits: kochchef (~quassel@80.146.255.46) (Quit: brb)
[16:39:53] <fizzie> https://play.golang.org/p/ygEIgJNJwNF "abcde" → "bcd".
[16:40:34] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:41:00] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:41:19] <Sam> Oh wait, I wasn't paying enough attention and it should. I have no idea what was going on in my copy/pasted example then; apparently my off-by-one-ness is high.
[16:41:51] <fizzie> There was an odd codepoint at the end of your string.
[16:42:17] *** Joins: kochchef (~quassel@80.146.255.46)
[16:42:31] <Sam> oops, copy/paste issue. I just printed the bytes and noticed that ;)
[16:42:52] <fizzie> [U+FE0E VARIATION SELECTOR-15] apparently. :)
[16:44:16] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:b51d:c497:2031:7214) (Ping timeout: 245 seconds)
[16:44:28] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[16:50:13] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f)
[16:52:51] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f) (Ping timeout: 258 seconds)
[16:52:52] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[16:54:37] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f)
[16:54:57] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:57:27] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f) (Ping timeout: 258 seconds)
[16:58:13] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[16:59:02] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:03:13] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[17:03:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:03:36] *** Joins: iateadonut (~dan@121.177.17.154)
[17:03:44] *** Joins: Daneel (~Daneel@15.ip-54-37-159.eu)
[17:03:47] *** Parts: iateadonut (~dan@121.177.17.154) ()
[17:03:48] *** Joins: iateadonut (~dan@121.177.17.154)
[17:04:33] <Daneel> Hi, can i get some help about this PR https://github.com/voxpupuli/webhook-go/pull/25 ? This is my first peace of code in Golang
[17:05:08] <Daneel> of i use tls_enabled in yaml file it looks ignored, if i use TLSEnabled is works
[17:05:34] <Daneel> s/of i use/if i use/
[17:06:47] <Daneel> in fact when i use tls_enabled in server in yaml, the default value is used every time
[17:07:16] <Daneel> whatever value I put on it
[17:09:30] *** Joins: arinov (~arinov@213.194.126.155)
[17:09:34] <MD87> Looks reasonable to me. Are you sure it's reading the config you think it's reading? Looks like it checks a bunch of different places. (Try changing one of the other options and see if it works as expected?)
[17:10:20] <Daneel> MD87: when i change the server.port and restart the app it uses the new port, so yes
[17:11:00] <Daneel> and i used the debugger dlv and it show me values of config
[17:11:30] <Daneel> exactly is it read the file for others keys but not the tls_* one
[17:11:42] <Daneel> exactly if* it
[17:13:02] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[17:13:18] <Daneel> if it does not ready the config file the port modification should be ignored
[17:13:29] <Daneel> but no it is used as defined in the config file
[17:15:26] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:15:30] <MD87> Hmm. What about changing one of the existing ones that uses underscores? I don't know if viper actually respects those yaml tags
[17:15:58] <MD87> Basically what I'm saying is: from what I can see, if the existing ones work then your new ones should also work
[17:18:37] <MD87> https://github.com/spf13/viper#unmarshaling it looks like the config fields should have `mapstructure` tags rather than `yaml` tags
[17:21:33] <Daneel> MD87: ha yes i tested to modify an other key like port, but not one with underscore
[17:22:08] <Daneel> and it looks with r10k.allow_uppercase that i got same wrong behaviors
[17:22:28] <Daneel> i modify from a value different from default and the value stay to default
[17:22:43] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:24:16] <Daneel> lets me try a mapstructure
[17:26:04] <Daneel> MD87: thank you mapstructure looks to solve it
[17:26:19] <MD87> No problem :)
[17:31:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:34:27] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9)
[17:40:28] *** Quits: PedroG1 (~android@45.77.216.181) (Ping timeout: 265 seconds)
[17:40:54] *** Quits: yelnah (~felix@110-175-192-219.static.tpgi.com.au) (Ping timeout: 260 seconds)
[17:40:59] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:41:47] *** Quits: cskr (~cskr@49.207.204.186) (Ping timeout: 264 seconds)
[17:42:25] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:42:58] *** Joins: PedroG1 (~android@45.77.216.181)
[17:42:59] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:43:53] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[17:46:04] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[17:48:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:50:36] *** Joins: yelnah (~felix@110-174-200-149.static.tpgi.com.au)
[17:55:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[17:55:55] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[17:57:16] *** Joins: fikran (~fikran@user/fikran)
[17:58:01] *** Joins: ASSISTENZA (~Username@net-47-53-74-164.cust.vodafonedsl.it)
[17:58:19] *** Quits: ASSISTENZA (~Username@net-47-53-74-164.cust.vodafonedsl.it) (Excess Flood)
[17:59:33] *** Quits: yelnah (~felix@110-174-200-149.static.tpgi.com.au) (Ping timeout: 258 seconds)
[18:02:26] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9) (Remote host closed the connection)
[18:02:46] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9)
[18:02:50] *** Quits: realtime-neil- (~realtime-@76.24.118.23) (Quit: Leaving)
[18:06:01] *** Joins: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7)
[18:09:10] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:4d84:d26f:b7ab:547d:ccdd:48f9) (Quit: Leaving)
[18:09:32] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff)
[18:11:56] <chilversc> In the TLS config, can I turn off verifying the host name, but still verify the certificate chain, so that I can handle the host name validation myself?
[18:12:11] *** Joins: ASSISTENZA (~Username@net-47-53-74-164.cust.vodafonedsl.it)
[18:12:30] *** Quits: ASSISTENZA (~Username@net-47-53-74-164.cust.vodafonedsl.it) (Excess Flood)
[18:13:33] <chilversc> I don't really want to set "InsecureSkipVerify: true" as this disables a lot of other validations
[18:14:02] *** Quits: xiongxin (~quassel@113.116.34.23) (Ping timeout: 260 seconds)
[18:14:05] <chilversc> or if I do set that, I want a simple set of functions I can call for all the other validations other than CN/SAN
[18:14:12] *** Joins: xiongxin_ (~quassel@113.116.35.81)
[18:16:46] *** Quits: tristero (~nobody@user/tristero) (Quit: WeeChat 3.3)
[18:24:05] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff) (Ping timeout: 258 seconds)
[18:24:23] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:a0f2:c3e1:b2c4:1d22)
[18:24:28] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:dc8a:d23a:47fa:3351)
[18:26:55] *** Joins: tristero (~nobody@user/tristero)
[18:27:54] <siXy> If you're talking to a device old enough to not have a SAN field in the cert, "insecure" is probably a fairly accurate description. However as noted previously you can write your own validator if you _really_ want
[18:28:14] <siXy> the godebug trick won't work though
[18:28:18] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c8cb:dc71:3cf6:c7f) (Ping timeout: 258 seconds)
[18:29:11] <chilversc> yeah, I don't really want to write my own validator because there's a lot to validate such as date, etc, pretty much all I want to do is use the common name as a DNS name
[18:30:12] *** Quits: LTCD (~LTCD@2a02:c7f:dd1c:b600:a0f2:c3e1:b2c4:1d22) (Quit: Client closed)
[18:30:46] <siXy> Far as I'm aware those are your only two choices, I'm afraid. CN has been deprecated for a very, VERY long time.
[18:31:15] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: No Ping reply in 180 seconds.)
[18:31:26] <siXy> I get that it's not your fault and you can't fix this ancient appliance... but that doesn't really change anything in terms of what the language supports.
[18:31:27] <chilversc> I know, it just seems overkill to have to disable all verification just to ignore the hostname
[18:31:45] <chilversc> I was hoping for some sort of option that was more finegrained so that I can then implement VerifyPeerCertificate
[18:32:37] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[18:34:42] <siXy> you wouldn't have to do it completely from scratch. I think you could probably just call https://pkg.go.dev/crypto/x509#Certificate.Verify with a verifyopts with a blank dnsname
[18:35:00] <siXy> I haven't tested that - but I think it's got a decent chance of working
[18:35:38] <siXy> of course you're then skipping all hostname verification, which isn't completely what you want, but you could manually check cert.CN == hostname
[18:35:52] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:36:24] *** Quits: shtirlic (~shtirlic@95-55-26-134.dynamic.avangarddsl.ru) (Remote host closed the connection)
[18:38:09] *** Joins: dan01 (~dan01@2a02:2f09:3c05:ca00:6c85:3a2c:f47a:1e3d)
[18:39:49] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[18:45:14] *** Joins: cskr (~cskr@49.207.204.186)
[18:46:31] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[18:47:53] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[18:51:06] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:dc8a:d23a:47fa:3351) (Read error: Connection reset by peer)
[18:51:51] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:dc8a:d23a:47fa:3351)
[18:52:18] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Ping timeout: 260 seconds)
[18:53:29] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:dc8a:d23a:47fa:3351)
[18:54:41] <chilversc> that's annoying it looks like it could be pretty much a direct copy from https://github.com/golang/go/blob/master/src/crypto/tls/handshake_client.go#L858 only a few of the methosd such as c.config.time() are private
[18:56:59] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:dc8a:d23a:47fa:3351) (Ping timeout: 265 seconds)
[18:58:28] <siXy> chilversc: Hmm? I don't think you need to do that though.
[18:58:53] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:dc8a:d23a:47fa:3351)
[18:58:55] <siXy> sec, let me put together a rough example
[18:59:45] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:a0f2:c3e1:b2c4:1d22)
[18:59:53] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:dc8a:d23a:47fa:3351) (Ping timeout: 265 seconds)
[19:00:01] <LTCD> Hey I am trying to make some small changes to the HelloWorld GRPC example. https://stackoverflow.com/questions/69633441/basic-changes-to-hello-world-grpc
[19:01:02] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:01:39] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 258 seconds)
[19:01:46] *** Joins: haux (~null@yo.haux.haus)
[19:03:34] *** Quits: xiongxin_ (~quassel@113.116.35.81) (Ping timeout: 258 seconds)
[19:04:51] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[19:05:50] *** Joins: jla (~jordi@tao.ddns.jazztel.es)
[19:11:12] *** Joins: chikai_ (~chikai@39.152.151.215)
[19:11:29] *** Quits: cskr (~cskr@49.207.204.186) (Quit: Leaving)
[19:11:46] *** Quits: chikai_ (~chikai@39.152.151.215) (Quit: leaving)
[19:12:12] <siXy> chilversc: sorry, got a little distracted with other stuff, but I think this should broadly work in concept: https://play.golang.org/p/pQTdtoamGAP
[19:12:55] <siXy> you might also want to do a tls.VerifyConnection callback to check ciphers etc, though I'd not be surprised if those are also rather old on this box...
[19:17:17] *** Quits: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney) (Remote host closed the connection)
[19:17:50] *** Joins: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney)
[19:19:59] *** Joins: W7 (~W7@69.168.242.47)
[19:20:21] *** Quits: ztx (~ztx@user/ztx) (Read error: Connection reset by peer)
[19:20:57] *** Parts: W7 (~W7@69.168.242.47) ()
[19:21:28] <chilversc> siXy: that can work, but you can't get the server name from there so I was looking at the ValidateConnection instead
[19:24:03] <siXy> LTCD: That proto doesn't contain anything called 'TheGRPCNotificationMessage'. See https://pkg.go.dev/google.golang.org/grpc/examples/helloworld/helloworld for what it does contain.
[19:24:03] <chilversc> siXy: would still want a bit more work to bring it closer to the original implementation https://play.golang.org/p/PeiPJ25Tz6b
[19:24:54] <siXy> oh this is a _netapp_. damn. yeah I see why you can't just chuck it out the window.
[19:25:19] *** Parts: jla (~jordi@tao.ddns.jazztel.es) ()
[19:25:35] <chilversc> yeah, though I've sent them some feedback as this is the Cloud Volumes ONTAP, so ideally they should be able to add a SAN to the self-signed cert when its provisioned
[19:25:41] <LTCD> siXy So how do I define my own service name then?
[19:26:09] <siXy> LTCD: write your own proto which has the services/messages you want.
[19:26:11] *** Quits: dan01 (~dan01@2a02:2f09:3c05:ca00:6c85:3a2c:f47a:1e3d) (Ping timeout: 258 seconds)
[19:26:20] *** Joins: ztx (~ztx@user/ztx)
[19:26:26] <chilversc> though it's not actually my NAS, I'm just writing a tool for a client, so no idea what cert the client will have provisioned on their NAS
[19:27:48] <chilversc> however, in my testing that basic hack does seem to work, I gave it a valid certificate as the root and it connected, then pointed it at a different root cert and got the standard "x509: certificate signed by unknown authority"
[19:28:21] <siXy> chilversc: yeah, I was thinking of trying to make my version a closure that contained the servername, but I like your way a lot better.
[19:29:38] <siXy> I wish I could say I was surprised that netapp have yet to learn how to generate certificates correctly :(
[19:29:38] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 258 seconds)
[19:29:40] <chilversc> shame ConnectionState doesn't include a reference to the conn.config, then the verify function could be wrote in a generic way, this is fine if you only have a single tls.Config, though for a proper solution I'd probably use a closure
[19:30:47] <chilversc> I suspect its an oddity/oversight of the Cloud Volume ONTAP service as on-prem you'd probably use your own cert
[19:33:39] <siXy> Mmm. Suggests that not too many people are using it, honestly, as CN-only certs are extremely dead now
[19:34:11] <siXy> (I'd never heard of it until today)
[19:36:31] <chilversc> siXy: from some of the bug reports they still seem fairly poplar for internal appliances, until recently even AWS used CN when connecting to RDS https://github.com/golang/go/issues/39568
[19:36:32] <LTCD> siXy Okay, done that if you checked the link I have GRPCNotification.proto. I also used the proto compiler. Next step?
[19:36:59] <chilversc> especially older appliances where updating the software pretty much means buying new hardware
[19:38:06] <chilversc> on that verify method, I think if the hostname doesn't match the common name I should probably then call cert[0].VerifyHostname so that the function supports both CN and SAN
[19:39:04] <siXy> LTCD: in e.g. server.go you have pb "google.golang.org/grpc/examples/helloworld/helloworld" so that's what pb is. You probably want an ltcdpb "/path/to/your/proto"
[19:39:11] *** Joins: dan01 (~dan01@2a02:2f09:3c05:ca00:6c85:3a2c:f47a:1e3d)
[19:39:12] <chilversc> siXy: also saw similar bug reports about rancher and docker, so I suspect there's just a of old scripts out there for generating self-signed certs that forget to include a SAN
[19:40:41] <siXy> chilversc: eh, I was honestly (pleasantly) surprised about how little stuff broke in 1.15 when it was finally deprecated. A lot of the pain had already been dealt with when FF/chrome rolled out the same thing several years previously, so it's really just odd ends of things that never get a browser connection, but still use tls
[19:41:58] <siXy> even for creaky old appliances, most of them have some form of management UI, so most of them got fixed around that era
[19:44:12] <siXy> chilversc: And I'd probably do it the other way around: Verify the SAN first, and only do CN as a fallback.
[19:44:40] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[19:46:17] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[19:46:34] <LTCD> siXy Okay, and after fixing that path how do I run the go mod init command?
[19:46:55] <chilversc> siXy: good point, I can just have if err != nil { verifyCN(...) ...
[19:47:54] *** Joins: amk (~amk@109.255.169.126)
[19:48:08] <chilversc> though not sure the order makes a massive difference, as its only going to be considered an error if both checks fail
[19:49:20] <chilversc> I'll probably hide it behind a flag in the actual tool, so I'll have options for both "-insecure" and "-use-cn"
[19:49:23] *** Quits: iateadonut (~dan@121.177.17.154) (Quit: Leaving.)
[19:50:39] <siXy> LTCD: sorry, not sure what you're asking there
[19:52:20] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:53:54] <LTCD> siXy So I set the path as you suggested above to the directory with my GRPCNotification.proto. Does the proto file need to have the same name as what I use with the go mod init command?
[19:56:02] <LTCD> nvm I think someone replied on stackoverflow.
[19:56:20] <siXy> the proto can be named whatever you want. protoc will build a go library with the name of the proto.
[19:56:25] <siXy> See here: https://github.com/grpc/grpc-go/tree/master/examples/helloworld/helloworld
[19:56:28] <LTCD> Ahh
[19:57:15] <siXy> you can import however many different protos you want, named anything you want to call em. By convention you name the import foopb when importing the foo proto
[19:57:49] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-dd3c-edaa-fc36-fbd2.inf6.spectrum.com)
[20:00:47] *** Quits: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney) (Remote host closed the connection)
[20:01:00] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-dd3c-edaa-fc36-fbd2.inf6.spectrum.com)
[20:01:04] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:dc8a:d23a:47fa:3351) (Ping timeout: 258 seconds)
[20:01:13] *** Joins: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney)
[20:02:43] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-dd3c-edaa-fc36-fbd2.inf6.spectrum.com) (Ping timeout: 265 seconds)
[20:04:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[20:06:37] *** Joins: fikran (~fikran@user/fikran)
[20:08:40] *** Joins: Torr (~Torr@user/torr)
[20:12:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:15:42] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:20:01] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[20:21:59] *** Quits: ilpanda (ilpanda@user/ilpanda) (Ping timeout: 268 seconds)
[20:22:08] *** Joins: ilpanda (ilpanda@2607:5300:60:21b::1)
[20:24:40] *** Quits: jhchabran (~jhchabran@user/jhchabran) (Ping timeout: 260 seconds)
[20:25:11] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[20:25:51] <mikoto-chan> is it good practice to use integers for sessions? I'm currently using the username string but all projects seem to be using integers
[20:28:35] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:29:18] *** Joins: silbermm (~silbermm@user/ahappydeath)
[20:29:50] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:30:04] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[20:33:27] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:33:47] *** Joins: alzgh (~alzgh@user/alzgh)
[20:36:05] <MrElendig> yes
[20:36:14] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:36:15] <MrElendig> or uuid
[20:36:22] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[20:37:26] <MrElendig> even more so if you want to support user name changes
[20:38:58] *** Joins: mickey8 (~user@user/mickey)
[20:40:05] *** Joins: Guest8 (~Guest8@2a02:8108:483f:9049:19a2:9362:817f:c7ee)
[20:42:08] *** Quits: haux (~null@yo.haux.haus) (Quit: Lost terminal)
[20:42:13] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:42:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[20:42:42] *** Joins: pylong_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[20:44:20] *** Joins: CoolerX (~CoolerX@user/coolerx)
[20:45:06] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[20:45:22] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:45:23] *** Quits: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney) (Ping timeout: 264 seconds)
[20:47:32] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[20:48:11] *** Quits: Guest8 (~Guest8@2a02:8108:483f:9049:19a2:9362:817f:c7ee) (Quit: Client closed)
[20:54:28] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[20:55:05] *** Joins: mickey8 (~user@user/mickey)
[20:57:15] *** Joins: jpw_ (~jpw@user/jpw)
[20:59:11] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 264 seconds)
[20:59:37] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: No route to host)
[21:00:05] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[21:03:13] *** Joins: arinov (~arinov@31.142.50.8)
[21:05:06] *** Joins: edrocks (~Ed@user/edrocks)
[21:09:50] <Tv_> mikoto-chan: as in web sessions? better make it large enough to be unguessable, that's not normally what is understood from "integer"
[21:10:42] <mikoto-chan> Tv_:  session.Put(r, "user", user)
[21:10:49] <mikoto-chan> I'm just using the sqlite rowid here
[21:10:54] <mikoto-chan> is that a good idea?
[21:11:07] <Tv_> you're talking about some abstraction you haven't told the group about
[21:11:36] <Tv_> but that sounds like data you associate with the session in your backend
[21:12:00] <Tv_> whether to store a username or something else there is a question of what you want to use to identify users inside your app
[21:12:05] <Tv_> can they change their username?
[21:13:00] <mikoto-chan> Tv_: https://github.com/golangcollege/sessions
[21:13:00] <mikoto-chan> this is the session manager that I'm using, the users shouldn't be able to modify their name
[21:13:27] <Tv_> this is the first time i hear about that organization and i hate them already
[21:13:41] <Tv_> could people please stop namesquatting all things /golang/
[21:14:19] <Tv_> i sometimes wish Google would smack some of the worst offenders with a trademark cease & desist order
[21:14:43] <mikoto-chan> Tv_: golangcollege? yeah idk why they picked it but what's wrong with it?
[21:15:39] <Tv_> it looks like someone trying to spin up a training business with falsely implied authority
[21:16:02] <Tv_> https://github.com/golang-standards/project-layout/issues/117 all over again
[21:25:22] *** Quits: LTCD (~LTCD@2a02:c7f:dd1c:b600:a0f2:c3e1:b2c4:1d22) (Quit: Client closed)
[21:27:16] <andlabs_> I'm not bothered by the college one but the standards one makes me want to shove my head through drywall
[21:27:50] <andlabs_> good thing I haven't really paid attention to the community in years, I guess 🙃
[21:28:33] <andlabs_> especially given the lack of a response
[21:30:28] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:31:21] <Tv_> the lack of response is just that one person being an asshole
[21:31:29] <Tv_> hence me wishing they'd smack him with a C&D already
[21:31:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[21:42:05] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:43:22] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:56ec:93f7:805d:a273:a1c5) (Remote host closed the connection)
[21:47:31] *** Joins: khyr0n (~khyr0n@2806:2f0:9140:56ec:93f7:805d:a273:a1c5)
[21:47:52] <Tv_> mwahaha my laptop now also drives 34" ultrawide + 24" portrait monitors... i'm gonna get neck pain from turning my head this much
[21:48:01] *** Quits: normen (~normen@p200300d71725e8002d402b3ddef807ce.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[21:48:35] <foobaz> have you considered a desktop
[21:48:54] <Tv_> foobaz: this laptop is beefier than my beefy tower..
[21:49:02] <foobaz> time for a new beefy tower
[21:49:08] <Tv_> the only thing it loses at is cooling and silent cooling
[21:49:09] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[21:49:16] *** Joins: jpw (~jpw@user/jpw)
[21:49:21] <Tv_> yeah i honestly can't justify specs higher than this
[21:50:16] <Tv_> or, more appropriately, i don't want more compute than this in the same room as me for the whole day
[21:53:22] *** Quits: jpw_ (~jpw@user/jpw) (Ping timeout: 260 seconds)
[21:53:40] *** Joins: stealth[] (~stealth]@i6DFA2725.versanet.de)
[21:54:36] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:d8a9:28d8:19ca:f9b9)
[21:58:58] <chilversc> siXy: I think something like this would work well, so only look for a CN if there's no SAN present https://play.golang.org/p/-dOIKdjO9PO
[22:04:13] <siXy> chilversc: I'm not sure you need lines 62..64, as VerifyOptions already does that if you pass a zero time.
[22:05:03] <siXy> You probably want to do some length checking on the certs slice around L68 too
[22:06:20] <siXy> other than that it looks pretty good to me
[22:06:27] <chilversc> I just took that directly from verifyServerCertificate https://github.com/golang/go/blob/go1.17.2/src/crypto/tls/handshake_client.go#L846
[22:06:59] <chilversc> I guess there's a guarantee of at least 1 certificate or the TLS connection won't even get that far
[22:07:48] <siXy> yeah I suppose that's fair
[22:08:30] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[22:09:41] <chilversc> On the upside, at least go is wrote in go. Annoying in other languages when you try to do this lower level stuff and find its implemented in something like C with interop so you can't just port the code over
[22:13:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:15:22] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff)
[22:15:58] *** Joins: fikran (~fikran@user/fikran)
[22:17:02] <foobaz> is anyone familiar with the PIC diagramming language?
[22:17:35] <foobaz> i'm wondering which implementation i should get started with, Dpic or Pikchr
[22:19:41] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff) (Ping timeout: 245 seconds)
[22:20:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:20:50] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:22:37] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[22:24:15] *** Joins: gustaw (~gustaw@89-65-136-177.dynamic.chello.pl)
[22:25:11] *** Parts: gustaw (~gustaw@89-65-136-177.dynamic.chello.pl) ()
[22:25:35] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 258 seconds)
[22:26:26] *** Joins: noarb- (~noarb@user/noarb)
[22:27:36] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 245 seconds)
[22:29:39] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[22:33:07] *** Quits: silbermm (~silbermm@user/ahappydeath) (Quit: WeeChat 3.3)
[22:40:53] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:42:10] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[22:45:30] *** Joins: CoolerX (~CoolerX@user/coolerx)
[22:46:13] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:48:05] *** Joins: dza (~dza@user/dza)
[22:49:07] *** Quits: kaleido (~adam@user/kaleido) (Quit: peas)
[22:51:37] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-dd3c-edaa-fc36-fbd2.inf6.spectrum.com)
[22:53:19] *** Joins: kaleido (~adam@user/kaleido)
[22:54:20] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-dd3c-edaa-fc36-fbd2.inf6.spectrum.com) (Ping timeout: 258 seconds)
[22:58:51] *** Quits: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de) (Quit: Leaving)
[22:59:43] *** Joins: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de)
[23:00:00] *** Quits: keiser0091075852 (~keiser@83.25.208.187.ipv4.supernova.orange.pl) (Quit: The Lounge - https://thelounge.chat)
[23:01:00] *** Quits: rek2 (~ReK2@47.62.9.10) (Quit: WeeChat 3.3)
[23:01:12] *** Joins: keiser0091075852 (~keiser@83.25.208.187.ipv4.supernova.orange.pl)
[23:02:44] *** Joins: rek2 (~ReK2@47.62.9.10)
[23:04:35] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-dd3c-edaa-fc36-fbd2.inf6.spectrum.com) (Read error: Connection reset by peer)
[23:05:15] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:dd3c:edaa:fc36:fbd2)
[23:05:42] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 260 seconds)
[23:07:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[23:08:52] <andlabs_> someone should suggest filing a C&D somehow then
[23:09:20] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[23:11:15] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:15:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:18:14] *** Quits: dr0n (~nabromov@94.11.23.235) (Quit: WeeChat 3.3)
[23:18:24] *** Joins: evocatus (~evocatus@84.51.113.13)
[23:22:33] <seebs> ?
[23:23:15] <seebs> oh, the golangcollege thing?
[23:24:08] *** Joins: lionrouge_ (~evocatus@84.51.113.13)
[23:24:16] <lionrouge_> hi
[23:24:33] *** Quits: lionrouge_ (~evocatus@84.51.113.13) (Remote host closed the connection)
[23:27:00] *** Joins: evocatus_ (~evocatus@84.51.113.13)
[23:27:11] *** Quits: stealth[] (~stealth]@i6DFA2725.versanet.de) (Quit: Leaving)
[23:27:29] <evocatus_> is there a command line tool to build dependency graph function-wise?
[23:28:17] *** Joins: stzsch (~stzsch@187.44.81.18)
[23:39:36] *** Joins: arinov (~arinov@213.194.126.155)
[23:46:51] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 258 seconds)
[23:47:00] *** Quits: teasea (~teasea@user/teasea) (Quit: teasea)
[23:47:13] <b0nn> evocatus_: https://github.com/ofabry/go-callvis maybe
[23:47:21] *** Joins: teasea (~teasea@user/teasea)
[23:47:23] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff)
[23:48:43] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.114)
[23:50:16] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[23:51:14] <evocatus_> b0nn, thanks, looks like it
[23:51:30] *** Joins: jjonah (~jjonah@p4fd3a593.dip0.t-ipconnect.de)
[23:53:28] *** Quits: evocatus_ (~evocatus@84.51.113.13) (Quit: Leaving)
[23:53:35] *** Quits: evocatus (~evocatus@84.51.113.13) (Quit: Leaving)
[23:56:03] *** Joins: _xor (~xor@72.49.199.147)
[23:57:54] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-f47e-a571-bfa2-b984.inf6.spectrum.com)
