[00:20:51] *** Joins: XDiamond7D7 (~XDiamond7@176.32.22.114)
[00:27:46] *** Quits: XDiamond7D7 (~XDiamond7@176.32.22.114) (Quit: Client closed)
[01:28:40] *** Quits: pro (~pro@user/pro) (Ping timeout: 240 seconds)
[01:38:58] <FromDiscord> <JSONBash> anyone with a github pages website for their repo willing to help me test https://www.nim.wiki/
[01:41:57] *** Quits: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:02:19] *** Quits: beshr (~beshr@user/beshr) (Remote host closed the connection)
[02:04:36] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:05:36] <FromDiscord> <Kimmy> hey, i have a question about specialization of generics: seems when i'm making a type that has multiple generics, they aren't being instantiated properly and i'm not sure what's going on?
[02:05:47] <FromDiscord> <Kimmy> sent a code paste, see https://paste.rs/ITG
[02:06:39] <FromDiscord> <Kimmy> what's going on?
[02:06:40] <FromDiscord> <Kimmy> sent a code paste, see https://play.nim-lang.org/#ix=3wCe
[02:07:27] <FromDiscord> <Kimmy> my `Ply[A,B]` should flip back and forth between `Ply[B,A]`, so i can model successive turns, see
[02:08:29] <FromDiscord> <Kimmy> (edit) "https://play.nim-lang.org/#ix=3wCe" => "https://play.nim-lang.org/#ix=3wCf"
[02:08:40] <FromDiscord> <Kimmy> (edit) "https://play.nim-lang.org/#ix=3wCf" => "https://play.nim-lang.org/#ix=3wCg"
[02:13:56] <FromDiscord> <treeform> In reply to @JSONBash "anyone with a github": Cool, so it's kinda like nimdocs.com ?
[02:14:32] <FromDiscord> <JSONBash> yeah! just a different domain, wanted a .nim domain, thought it would be cool
[02:17:39] <FromDiscord> <JSONBash> In reply to @treeform "Cool, so it's kinda": and uses a subdomain
[02:19:52] *** Joins: sagax (~sagax@213.138.71.146)
[02:26:09] *** Quits: max22- (~maxime@2a01cb08833598005d2c299cc1335a53.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:28:09] <FromDiscord> <Kimmy> sent a code paste, see https://play.nim-lang.org/#ix=3wCl
[02:28:27] <FromDiscord> <Kimmy> why does the second work but not the first o-o
[03:03:01] <FromDiscord> <theangryepicbanana> In reply to @Kimmy "an even simpler example:": curious, does `FlipFlop[B.type, A.type]` fix anything?
[03:22:42] <FromDiscord> <Kimmy> you mean the type definition for the `next` field?
[03:22:55] <FromDiscord> <Kimmy> sent a code paste, see https://play.nim-lang.org/#ix=3wCB
[03:25:17] <FromDiscord> <theangryepicbanana> oof
[03:25:42] <FromDiscord> <theangryepicbanana> dunno then. does it change if you switch `value` to type `B`?
[03:27:35] <FromDiscord> <theangryepicbanana> as a side note, my program takes ~3 minutes to compile rn 🥲
[03:28:26] <FromDiscord> <konsumlamm> looks like a bug to me
[03:28:34] <FromDiscord> <theangryepicbanana> it definitely is
[03:28:37] <FromDiscord> <Kimmy> interesting thought, but no change, sadly
[03:28:43] <FromDiscord> <Kimmy> hmmmm~ time to file an issue?
[03:28:45] <FromDiscord> <konsumlamm> you should open an issue for it
[03:28:56] <FromDiscord> <Kimmy> (thanks for working this through with me while waiting for your compiles! :p )
[03:29:10] <FromDiscord> <theangryepicbanana> re: 3 minutes to compile, it's related to that typeclass issue I was having a few weeks ago
[03:31:30] <FromDiscord> <theangryepicbanana> lol anyways it gors into an infinite loop at some point
[03:31:34] <FromDiscord> <theangryepicbanana> probably another bug
[03:31:40] <FromDiscord> <theangryepicbanana> (edit) "gors" => "goes"
[03:43:24] *** Quits: fputs (~fputs@137.220.33.212) (Ping timeout: 258 seconds)
[04:03:25] <FromDiscord> <Kimmy> r.i.p. :/
[04:03:37] <FromDiscord> <Kimmy> i filed https://github.com/nim-lang/Nim/issues/18728 if anyone's curious
[04:16:24] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:17:32] *** Joins: flynn (~mcbloch@user/flynn)
[04:26:32] *** Joins: audiophile_ (~audiophil@user/audiophile)
[04:29:03] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[04:29:16] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[04:29:44] <FromDiscord> <theangryepicbanana> aha, I forgot that `default(ref)` is `nil`
[04:41:16] <FromDiscord> <theangryepicbanana> poggers I got generic interfaces working in nim https://replit.com/@theangryepicbanana/nim-interface-test
[04:41:27] <FromDiscord> <theangryepicbanana> takes about a minute to compile, have fun
[04:41:32] <FromDiscord> <ElegantBeef> jeez
[04:41:40] <FromDiscord> <theangryepicbanana> yeah
[04:41:48] <FromDiscord> <theangryepicbanana> and that's without extra RTTI lol
[04:42:02] <FromDiscord> <theangryepicbanana> typeinfo adds another 1-2 mins
[04:42:34] <FromDiscord> <theangryepicbanana> also type errors cause an infinite loop, unsure how to fix
[04:42:40] <FromDiscord> <theangryepicbanana> (edit) "also type ... errors" 03added "mismatch"
[04:48:22] <FromDiscord> <ElegantBeef> @Kimmy it's not elegant but it's a workaround https://play.nim-lang.org/#ix=3wCR
[04:48:55] <FromDiscord> <ElegantBeef> Well it was wron in the template, but still works
[05:01:56] *** Quits: [R] (~rs@genoce.org) (Quit: No Ping reply in 180 seconds.)
[05:02:04] *** Joins: [R] (~rs@genoce.org)
[05:09:46] <FromDiscord> <⃟⃟> new thing i found
[05:09:50] <FromDiscord> <⃟⃟> `a.x`
[05:10:11] <FromDiscord> <⃟⃟> is this accessing the field named `x` in sturct `a` or calling function `x` on it
[05:10:23] <FromDiscord> <Elegantbeef> Could be any
[05:10:41] <FromDiscord> <⃟⃟> and thats what i dont like
[05:11:17] <FromDiscord> <Elegantbeef> Well... this is Nim
[05:11:18] <FromDiscord> <⃟⃟> this language is feeling more like c++ with the more i think about it
[05:11:26] <FromDiscord> <⃟⃟> where everything is so context dependent
[05:11:31] <FromDiscord> <theangryepicbanana> c++ doesn't do that lol
[05:11:32] <FromDiscord> <⃟⃟> even the import statement is
[05:11:35] <FromDiscord> <⃟⃟> i know it dosent
[05:11:40] <FromDiscord> <⃟⃟> i didnt say it did
[05:11:43] <FromDiscord> <theangryepicbanana> why would you even need to distinguish those things in the first place
[05:11:48] <FromDiscord> <⃟⃟> i said it feels ""like"" C++
[05:11:56] <FromDiscord> <Elegantbeef> But it doesnt feel like C++
[05:12:13] <FromDiscord> <theangryepicbanana> if you need `x(a)` and `a.x` to do different things, then your code doesn't sound very clean
[05:12:25] <FromDiscord> <theangryepicbanana> and yeah, this is miles better than c++ lol
[05:12:50] <FromDiscord> <⃟⃟> its about clearity, these features make code less clear when these features are used
[05:13:42] <FromDiscord> <Elegantbeef> How is it clarity if it's a proc, a property or a method
[05:13:57] <FromDiscord> <⃟⃟> nim has methods?
[05:14:01] <FromDiscord> <Elegantbeef> Yes
[05:14:10] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 240 seconds)
[05:14:17] <FromDiscord> <⃟⃟> i think i missed those in the manual
[05:14:21] <FromDiscord> <⃟⃟> can you show me how they look
[05:14:37] <FromDiscord> <Elegantbeef> `method yourMethodName(someRefObj: SomeRefType)`
[05:15:12] <FromDiscord> <Elegantbeef> Let's look at treeforms vmath library, he has multiple different base vectors, and does it really matter his `.x` is a template that gets the x component?
[05:15:37] <FromDiscord> <⃟⃟> ok i see this method thing now
[05:15:56] <FromDiscord> <⃟⃟> its basically a function in terms of syntax
[05:15:56] <FromDiscord> <Elegantbeef> If you're concerned what a symbol is you have tooling use it
[05:16:06] <FromDiscord> <Elegantbeef> Well it's a dynamically dispatched procedure
[05:16:26] <FromDiscord> <⃟⃟> its not about being "concerned", i dont want to spend my time deciphering what some code is doing
[05:16:37] <FromDiscord> <theangryepicbanana> they should all function the same, no?
[05:16:38] <FromDiscord> <⃟⃟> (edit) "its not about being "concerned", i dont want to spend my time deciphering what some code is doing ... " 03added "because the syntax is confusing"
[05:17:00] <FromDiscord> <⃟⃟> according to the manual methods use dynamic dispatch
[05:17:07] <FromDiscord> <theangryepicbanana> yes that's intentional
[05:17:13] <FromDiscord> <⃟⃟> so they dont function the same
[05:17:14] <FromDiscord> <theangryepicbanana> `a.x` does not imply a method
[05:17:22] <FromDiscord> <Elegantbeef> `if httpClient.code notin HttpCode200..HttpCode207` how is this worse than `if httpClient.code() notin HttpCode200..HttpCode207`?
[05:17:27] <FromDiscord> <theangryepicbanana> methods are just funcs that are attatched to the object
[05:17:35] <FromDiscord> <theangryepicbanana> like `virtual` in c++
[05:17:55] <FromDiscord> <Elegantbeef> They're overridable procedures that are dispatched at runtime
[05:18:04] <FromDiscord> <Elegantbeef> They behave identically to procedures aside from that
[05:18:54] <FromDiscord> <⃟⃟> that seems like a pretty good example actually, if i saw you accessing some "code" from a http client i would probably have to check if im calling a function or its a field access
[05:19:16] <FromDiscord> <Elegantbeef> But why does it matter?
[05:19:23] <FromDiscord> <⃟⃟> atleast they didnt do `not in` instead of `notin`
[05:19:26] <FromDiscord> <⃟⃟> like python
[05:19:36] <FromDiscord> <⃟⃟> because now everything is less clear on what its doing
[05:19:51] <FromDiscord> <⃟⃟> a field access has differences to calling a function
[05:20:08] <FromDiscord> <⃟⃟> not just performance ones too
[05:20:15] <FromDiscord> <Elegantbeef> If you have a performance issue cause you're calling a function instead of getting a property you're in a good place
[05:20:27] <FromDiscord> <Elegantbeef> Is your tooling really that bad it doesnt tell you what it is?
[05:21:45] <FromDiscord> <⃟⃟> if i cant write code comfortably without using some fancy tools its probably a sign theres some design flaw
[05:24:18] <FromDiscord> <Elegantbeef> I dont see it as an issue since if the code is written well it's a non issue
[05:24:49] <FromDiscord> <⃟⃟> well then either the code example you just showed me is a poorly written or it is an issue
[05:25:01] <FromDiscord> <Elegantbeef> How is it poorly written?
[05:25:24] <FromDiscord> <⃟⃟> you tell me
[05:25:34] <FromDiscord> <theangryepicbanana> it was an example lol
[05:25:50] <FromDiscord> <Elegantbeef> Well let's look at that example
[05:26:00] <FromDiscord> <Elegantbeef> Should you set the code of a http response? No
[05:26:29] <FromDiscord> <Elegantbeef> Ok so that means it shouldnt be a settable value, so now we know it's not a `var HttpCode`
[05:27:14] <FromDiscord> <⃟⃟> i dont understand what youre saying anymore
[05:27:25] <FromDiscord> <Elegantbeef> So now let's look at the source ` return response.status[0 .. 2].parseInt.HttpCode` is the `code` accessor
[05:27:43] <FromDiscord> <⃟⃟> source of what?
[05:27:51] <FromDiscord> <Elegantbeef> the `httpclient.code`
[05:28:12] <FromDiscord> <⃟⃟> so you have to look at the source code to tell me if its a field access or function call?
[05:28:17] <FromDiscord> <Elegantbeef> Nope
[05:28:39] <FromDiscord> <Elegantbeef> I'm using my braincells to talk about how you know it's not a field by looking at it
[05:28:50] <FromDiscord> <Elegantbeef> you'd never set the `code` of a `httpresponse` that makes 0 sense to do
[05:29:04] <FromDiscord> <Elegantbeef> So since we're in a language with the ability to limit access it's certainly a getter
[05:29:25] <FromDiscord> <Elegantbeef> Which when you look at the source you can see it's a relatively cheap getter that parses the stored code
[05:29:41] <FromDiscord> <Elegantbeef> No tooling required aside from your brain
[05:30:16] <FromDiscord> <⃟⃟> so essentially to figure out what code did you↵1. had to make an assumption about how the library works↵2. looked at the source code↵3. looked at the source again?
[05:30:27] <FromDiscord> <⃟⃟> heres how its done in go
[05:30:38] <FromDiscord> <⃟⃟> httpClient.code()
[05:30:39] <FromDiscord> <Elegantbeef> Well to figure out what the code did i looked at the source, like you should do
[05:30:45] <FromDiscord> <⃟⃟> thats a method call
[05:30:49] <FromDiscord> <⃟⃟> httpClient.code
[05:30:53] <FromDiscord> <⃟⃟> thats a field access
[05:30:57] <FromDiscord> <Elegantbeef> Oh i missed day one of Nim where the language was called `Go`
[05:31:09] <FromDiscord> <⃟⃟> it was?
[05:31:28] <FromDiscord> <Elegantbeef> Well you seem to think it was
[05:31:54] <FromDiscord> <⃟⃟> i was showing you a different language as an example
[05:32:05] <FromDiscord> <⃟⃟> its more clear in go without this feature
[05:32:37] <FromDiscord> <Elegantbeef> what about go's templates/macros?
[05:32:41] <FromDiscord> <Elegantbeef> Oh right
[05:34:59] <FromDiscord> <Yardanico> In reply to @Elegantbeef "Oh right": XD
[05:35:06] <FromDiscord> <Elegantbeef> so how about setters?
[05:35:25] <FromDiscord> <Elegantbeef> `someVector.x() = 100`?
[05:36:05] <FromDiscord> <⃟⃟> what
[05:36:47] <FromDiscord> <Elegantbeef> You can have properties that set internal values
[05:37:03] <FromDiscord> <Elegantbeef> How do you manage that without hiding it as a field?
[05:37:19] <FromDiscord> <⃟⃟> whats a "property"
[05:37:28] <FromDiscord> <⃟⃟> what is "hiding it as a field"
[05:37:39] <FromDiscord> <Elegantbeef> A property is a field that is only accessed with getters/setters
[05:37:55] <FromDiscord> <Elegantbeef> This way you control the logic to get to/from it
[05:38:30] <FromDiscord> <⃟⃟> you would do `SetX` ?
[05:38:40] <FromDiscord> <⃟⃟> (edit) "`SetX`" => "`v.SetX(100)`"
[05:38:42] <FromDiscord> <Elegantbeef> no you'd do `someVector.x = 100`
[05:39:03] <FromDiscord> <⃟⃟> i thought you wanted a setter
[05:40:15] <FromDiscord> <Elegantbeef> that's a setter
[05:40:15] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3wCZ
[05:40:30] <FromDiscord> <Elegantbeef> hence the `=`
[05:40:53] <FromDiscord> <⃟⃟> so now theres even more confusion on whats happening
[05:41:24] <FromDiscord> <Elegantbeef> Almost like it only matters when it's an issue, and it's hardly ever an issue. If using a setter/getter is the bottleneck you have very few worries
[05:41:53] <FromDiscord> <Elegantbeef> C# is a language that has extensive usage of properties like this and they're doing well, so hardly seems like an issue
[05:41:55] <FromDiscord> <⃟⃟> performance is not the issue for me
[05:42:47] <FromDiscord> <⃟⃟> and c++/python are more popular than nim
[05:42:54] <FromDiscord> <⃟⃟> do you think they are better?
[05:43:26] <FromDiscord> <Elegantbeef> Who said anything about better
[05:44:14] <FromDiscord> <⃟⃟> "they're doing well"
[05:44:46] <FromDiscord> <Elegantbeef> C# is a relatively popular language that uses getters/setters abundantly and the code is still written without hassle
[05:45:19] <FromDiscord> <⃟⃟> i dont know how it works in that language
[05:45:25] <FromDiscord> <Elegantbeef> It's not about better it's about "does it take away or add to the language" and i think setters/getters add not take away as do probably most Nim programmers
[05:45:47] <FromDiscord> <theangryepicbanana> getters/setters are just syntax sugar for fields to make their syntax look consistent
[05:46:09] <FromDiscord> <theangryepicbanana> nobody like java's common `obj.getFoo()` and `obj.setFoo(value)` pattern
[05:46:11] <FromDiscord> <theangryepicbanana> (edit) "like" => "likes"
[05:46:30] <FromDiscord> <Elegantbeef> You'd be hardpressed to break all the nim code that exists for this change
[05:46:32] <FromDiscord> <theangryepicbanana> so instead, getters/setters let you do `obj.foo` and `obj.foo = value`
[05:47:03] <FromDiscord> <theangryepicbanana> they're very common in modern languages, and can even be optimized to not add overhead
[05:47:20] <FromDiscord> <⃟⃟> i think i would rather have what java does
[05:47:25] <FromDiscord> <theangryepicbanana> oh?
[05:47:43] <FromDiscord> <theangryepicbanana> so then you'd want field access to look different from property access?
[05:47:56] <FromDiscord> <theangryepicbanana> sounds like a massive pain to me
[05:48:02] <FromDiscord> <Elegantbeef> That's the first time someone looked at java and said "Yea i want some of that"
[05:48:20] <FromDiscord> <theangryepicbanana> honestly, I've done my fair share of java and it's not great
[05:48:33] <FromDiscord> <exelotl> yeah one of the biggest reasons I'm using Nim is because of nice sugar like this
[05:49:00] <FromDiscord> <Elegantbeef> You dont like `vectorA.add(vectorB);`? 😛
[05:49:29] <FromDiscord> <Elegantbeef> On top of it can also be 0 cost so there is no reason to make it a procedure call
[05:49:30] <FromDiscord> <⃟⃟> `v1 + v2` can be accomplished without adding this confusion
[05:49:47] <FromDiscord> <theangryepicbanana> operator overloading is the same thing as getters/setters
[05:51:51] <FromDiscord> <Elegantbeef> Nim is not an overly verbose language, being expressive is one of it's goals
[05:54:46] <FromDiscord> <exelotl> if you want explicitness Zig is probably for you. Personally I don't mind the mental overhead/time taken in Nim to figure out whether foo.a is a procedure call, field, iterator, template/macro, etc.
[05:55:24] <FromDiscord> <⃟⃟> i dont like that language because of the person running it
[05:55:46] <FromDiscord> <exelotl> o
[05:55:57] <FromDiscord> <Elegantbeef> Turns out very few languages actually lack this syntax sugar
[05:56:34] <FromDiscord> <theangryepicbanana> yeah I think it's just java, c, and c++
[05:56:51] <FromDiscord> <⃟⃟> + go
[05:56:53] <FromDiscord> <⃟⃟> + mathematica
[05:56:55] <FromDiscord> <Elegantbeef> Go, Zig
[05:57:36] <FromDiscord> <theangryepicbanana> still not as many as those that support it
[05:58:55] <FromDiscord> <theangryepicbanana> anyways, unrelated issue: can I have a variadic user-defined pragma? if so, how?
[06:01:06] <FromDiscord> <theangryepicbanana> nvm, I'll just not have a trailing argument ._.
[06:01:32] <FromDiscord> <Elegantbeef> Well might be time to checkout odin or hare lang and hope those tickle your fancy
[06:01:32] <FromDiscord> <Elegantbeef> Though they're both relatively new \:D
[06:01:33] <FromDiscord> <Elegantbeef> Cause based off your issues over the past 2 days Nim doesnt seem like it's for you, it's full of making life easier by hiding details that dont matter
[06:02:35] <FromDiscord> <Elegantbeef> Well let me answer the question anyway
[06:02:36] <FromDiscord> <Elegantbeef> What do you mean
[06:15:39] <FromDiscord> <exelotl> > it's full of making life easier by hiding details that dont matter↵this ^
[06:19:39] <FromDiscord> <Elegantbeef> Dont agree with me too much exelotl might go to my head
[06:31:18] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[06:31:52] *** Joins: audiophile_ (~audiophil@user/audiophile)
[06:33:09] <FromDiscord> <Kimmy> In reply to @ElegantBeef "<@!376850432540147712> it's not elegant": oh that’s fascinating! I’ll have to study why this works
[06:33:44] <FromDiscord> <Kimmy> (edit) "works" => "works, thanks for the hint!"
[06:34:48] *** Quits: audiophile_ (~audiophil@user/audiophile) (Client Quit)
[06:47:42] *** Joins: diamond (~diamond@176.32.22.114)
[06:47:54] <diamond> Hi
[06:48:44] <FromDiscord> <Yardanico> hi
[06:48:53] <FromDiscord> <Elegantbeef> Hello
[06:50:33] <diamond> I love Nim, but I don't know what can I do with it
[06:50:39] <diamond> I want to start a project 
[06:51:09] <FromDiscord> <Elegantbeef> You can do a lot with it, so any single subject catch your eye?
[06:59:01] <FromDiscord> <Canelhas> there is a compiler option to allow declaring procs out of order, if i'm not mistaken↵which is it ?↵what is the reasoning behind it not being default? https://media.discordapp.net/attachments/371759389889003532/878828073871614002/unknown.png
[06:59:52] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual_experimental.html#code-reordering Nim has a bunch of features implemented which may not be fully function which is why, also some people are opposed to things like iit
[07:00:45] <FromDiscord> <Canelhas> In reply to @Elegantbeef "https://nim-lang.org/docs/manual_experimental.html#": why would anyone be opposed to qol things like this?
[07:01:21] <FromDiscord> <Elegantbeef> Cause it makes it harder to read code since the logic can be declared after where you are
[07:02:14] <FromDiscord> <Canelhas> is there any way i could write this without code reorder? https://media.discordapp.net/attachments/371759389889003532/878828882856390727/unknown.png
[07:02:28] <FromDiscord> <Elegantbeef> Forward declare the procedure
[07:03:13] <FromDiscord> <Elegantbeef> `proc parseExpression(parser: var Parser): Option[Expression]` before your `parsePrefixExpression` and it'll work without code reorder
[07:03:36] <FromDiscord> <Canelhas> i see↵thank you very much
[07:04:16] <FromDiscord> <Elegantbeef> It's arguably better than code reordering since it's explicitly saying "Hey here this is accessible but will be given a body later"
[07:05:48] <FromDiscord> <Canelhas> doesn't really solve the "code is harder to read because logic is declared after"↵i don't even agree with the code is harder to read part, but whatever
[07:06:39] <FromDiscord> <Elegantbeef> To each their own, i dont necessarily agree with what i said just was giving a reason some asy
[07:07:39] <FromDiscord> <Canelhas> yeah, i understand that↵thanks for the tips↵beef being helpful as always
[07:09:08] *** Quits: diamond (~diamond@176.32.22.114) (Quit: Leaving)
[07:18:07] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:28:21] <FromDiscord> <Elegantbeef> @treeform\: Sorry to bother you, but i'm trying to draw a circle that goes black to white along it's length, and this is close but seems I'm missing something with the gradient handles, present code\: https://play.nim-lang.org/#ix=3wDg
[07:29:46] <FromDiscord> <Elegantbeef> Expecting something like this but only a circle segment
[07:29:47] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/878835819002101760/image.png
[07:38:02] <FromDiscord> <treeform> gradient handles are not intuitive, let me see if I can fix it
[07:39:30] <FromDiscord> <treeform> why do you stroke if you want fill?
[07:40:31] <FromDiscord> <Elegantbeef> I dont want a fill, i want a segment of the above shape
[07:40:41] <FromDiscord> <Elegantbeef> Was best example i could find without making it in an art program
[07:40:49] <FromDiscord> <retkid> https://github.com/mozilla/rhino
[07:40:52] <nrds> <04prestigebot99> 4GitHub: 7"Rhino is an open-source implementation of JavaScript written entirely in Java"
[07:40:59] <FromDiscord> <retkid> you think i can use this to leapfrog my way into jim-java
[07:41:06] <FromDiscord> <retkid> (edit) "jim-java" => "nim-java"
[07:41:35] <FromDiscord> <treeform> In reply to @Elegantbeef "I dont want a": This good?
[07:41:39] <FromDiscord> <treeform>  https://media.discordapp.net/attachments/371759389889003532/878838799906517002/test.png
[07:41:44] <FromDiscord> <Elegantbeef> Yea
[07:41:59] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3wDl
[07:42:04] <FromDiscord> <treeform> you got to first point in the middel
[07:42:08] <FromDiscord> <treeform> and the other two to the sides
[07:42:25] <FromDiscord> <retkid> holy shit i think i can
[07:43:27] <FromDiscord> <treeform>  https://media.discordapp.net/attachments/371759389889003532/878839253600178196/unknown.png
[07:44:30] <FromDiscord> <treeform> In reply to @retkid "holy shit i think": You can already call nim from java, no need to go through Rhino
[07:45:00] <FromDiscord> <retkid> wait really
[07:45:08] <FromDiscord> <retkid> i thought i was told no
[07:45:08] <FromDiscord> <retkid> hm
[07:45:10] <FromDiscord> <Elegantbeef> Ok so the handles are tangent and bitangent basically?
[07:45:50] <FromDiscord> <retkid> i can package nim and run nim in java bytecode?
[07:45:54] <FromDiscord> <Yardanico> no
[07:46:02] <FromDiscord> <treeform> make a regular "c" style dll with nim, use ffi to talk to it.
[07:46:02] <FromDiscord> <treeform> https://github.com/jnr/jnr-ffi
[07:46:05] <nrds> <04prestigebot99> 4GitHub: 7"Java Abstracted Foreign Function Layer"
[07:46:06] <FromDiscord> <Yardanico> but you can call native code in any language including nim from java
[07:46:24] <FromDiscord> <Elegantbeef> Anyway thanks treeform makes a bit more sense 😀
[07:46:39] <FromDiscord> <treeform> In reply to @Elegantbeef "Ok so the handles": Yes
[07:47:01] <FromDiscord> <treeform> For all gradients is center point, up point, and right point.
[07:47:30] <FromDiscord> <Elegantbeef> also you've angered me with having the comment `## Gradient stop position 0..1.` 😀
[07:47:55] <FromDiscord> <Elegantbeef> Possible PR eventually for `position: 0f..1f`
[07:48:12] <FromDiscord> <treeform> lol
[07:48:23] <FromDiscord> <treeform> You can do a lot with just 3 points:
[07:48:24] <FromDiscord> <treeform>  https://media.discordapp.net/attachments/371759389889003532/878840503590862858/unknown.png
[07:48:56] <FromDiscord> <treeform> maybe I would not call them tangent and bitangent...
[07:49:03] <FromDiscord> <Elegantbeef> Why does this look a lot like some internal tooling?
[07:49:13] <FromDiscord> <retkid> why is it doing libc.puts("Hello World)
[07:49:15] <FromDiscord> <retkid> what does that show me
[07:49:19] <FromDiscord> <treeform> That just a screen shot from Figma ...
[07:49:26] <FromDiscord> <Elegantbeef> Ah
[07:49:40] <FromDiscord> <Elegantbeef> A boy could dream 😛
[07:50:23] <FromDiscord> <treeform> In reply to @retkid "why is it doing": puts is a libc function
[07:50:43] <FromDiscord> <treeform> so in theory it could be `yourlib.yourfunction("stuff")`
[07:51:25] <FromDiscord> <retkid> ah so its jut calling a generic c function
[07:51:30] <FromDiscord> <treeform> yes
[07:51:30] <FromDiscord> <retkid> (edit) "jut" => "just"
[07:51:36] <FromDiscord> <treeform> it could be your nim function
[07:51:37] <FromDiscord> <retkid> very very cool
[07:51:46] <FromDiscord> <treeform> for java-nim inter-op
[07:52:11] <FromDiscord> <retkid> can i nim-java inter-op with wrapper code
[07:52:31] <FromDiscord> <treeform> I have not done it with java but in theory it is possible
[07:53:22] <FromDiscord> <treeform> java is probably most annoying lang to inter-op because they really like keeping everything in java more so then other langs like python, ruby, js and even C#.
[07:53:44] <FromDiscord> <retkid> well\
[07:53:45] <FromDiscord> <retkid> (edit) "well\" => "well"
[07:53:47] <FromDiscord> <retkid> java is its own JVM
[07:53:54] <FromDiscord> <retkid> special boy pretty pants
[07:54:01] <FromDiscord> <treeform> but every lang has its own lang-vm?
[07:54:23] <FromDiscord> <retkid> yes but java refuses to work outside of javahbyte code and exists in and of itself
[07:54:36] <FromDiscord> <retkid> and its hard to get anything to work inside its margins
[07:54:42] <FromDiscord> <treeform> well refuses... no makes it more annoying that is for sure
[07:59:56] <FromDiscord> <retkid> i suppose i should look into calling java from C to learn how to do it with nim
[08:00:22] <FromDiscord> <retkid> I will finally have an excuse to work with my this language
[08:00:36] <FromDiscord> <retkid> at the cost of making it so other people cannot work on my code lol
[08:23:13] <FromDiscord> <leorize> @retkid\: check out jnim
[08:23:31] <FromDiscord> <leorize> https://github.com/yglukhov/jnim
[08:23:34] <nrds> <04prestigebot99> 4GitHub: 7"Nim - Java bridge"
[08:24:07] <FromDiscord> <Yardanico> that's the other way
[08:24:12] <FromDiscord> <Yardanico> nim -> java, not java -> nim
[08:24:17] <FromDiscord> <retkid> you ever think something is so unlikely to exist you dont bother to look it up
[08:24:37] <FromDiscord> <retkid> oh
[08:25:11] <FromDiscord> <retkid> i need nim-java->byte and java-nim-java->byte
[08:31:46] <FromDiscord> <linux user> we can target jvm now?!!!
[08:31:54] <FromDiscord> <linux user> O_O
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:20:42] *** Quits: pch (~pch@66.49.131.33) (Remote host closed the connection)
[09:22:51] *** Joins: pch (~pch@66.49.131.33)
[09:26:24] *** Quits: pch (~pch@66.49.131.33) (Remote host closed the connection)
[09:26:47] *** Joins: pch (~pch@66.49.131.33)
[09:33:36] <FromDiscord> <Yardanico> In reply to @richard stallmen(crazy GNU guy) "we can target jvm": we can't
[09:33:42] <FromDiscord> <Yardanico> well it depends
[09:50:31] <NimEventer> New thread by Walkre: How to use external packages from the test directory, see https://forum.nim-lang.org/t/8350
[10:24:54] <FromDiscord> <TechnoRazor> I have hardly any experience with C/C++ compilers and linkers. All I'm trying to do is somehow, in any way, use a C++ library in Nim. I tried including the header file, and I get "undefined reference to..." errors. I tried using the `compile` pragma to compile everything, and I get errors from the g++ compiler. I tried using a precompiled DLL, both with and without linking the lib, and it says the function I'm trying to use isn't decl
[10:26:55] <FromDiscord> <Elegantbeef> Any example of the code you've tried?
[10:28:04] <FromDiscord> <haxscramper> does C++ library itself has any dependendcies?
[10:28:27] <FromDiscord> <haxscramper> what "undefined reference to ..." errors on exactly?
[10:28:45] <FromDiscord> <haxscramper> you might need to `{.passl:-l<C++ dependency>.}` as well
[10:30:40] <FromDiscord> <haxscramper> Also what C++ library are you using?
[10:30:57] <FromDiscord> <TechnoRazor> The library I'm trying to use is Optick: https://github.com/bombomby/optick
[10:31:00] <nrds> <04prestigebot99> 4GitHub: 7"C++ Profiler For Games"
[10:33:56] <FromDiscord> <TechnoRazor> sent a code paste, see https://play.nim-lang.org/#ix=3wDG
[10:34:31] <FromDiscord> <haxscramper> what errors do you get exactly?
[10:36:55] <FromDiscord> <TechnoRazor> sent a code paste, see https://paste.rs/zTE
[10:37:20] <FromDiscord> <haxscramper> isn't `OPTICK_FRAME` a macro?
[10:37:30] <FromDiscord> <TechnoRazor> Yes, it is
[10:37:40] <FromDiscord> <haxscramper> then you can't dynlib it by definition
[10:38:06] <FromDiscord> <TechnoRazor> Right, that makes sense, but then how am I expected to use the dll?
[10:39:44] <FromDiscord> <haxscramper> I think you are supposed to wrap macros using importcpp, and wrap procs that it calls using dynlib. I'm not sure what exact combinations is the best here
[10:40:57] <FromDiscord> <haxscramper> it is sad that this library does not have any normal instructions, and instead uses this bs "click here, click there"
[10:41:55] <FromDiscord> <TechnoRazor> In any case, I can't include the header file without all those errors. Am I doing something wrong there?
[10:44:29] <FromDiscord> <haxscramper> when you include header and use macro, it internally expands/calls `Optick::EndFrame(Optick::FrameType::Type, long long, unsigned long long)` method. The method itself is visible through the header, but compiler does not know it's implementation - it was placed somehwere in `.cpp` file that was compiled to static or dynamic library.
[10:45:01] <FromDiscord> <haxscramper> Normally you would be able to fix this by simply `{.passl:"-l<optic_static_library>".}`
[10:45:33] <FromDiscord> <haxscramper> But looking at `CMakeLists.txt` in the Optick repo I don't see that static version is even built
[10:45:51] *** Joins: pro (~pro@user/pro)
[10:46:17] <FromDiscord> <haxscramper> And there is no standalone example that shows compilation flags either
[10:47:08] <FromDiscord> <TechnoRazor> Should I try building a static library myself?
[10:48:14] <FromDiscord> <haxscramper> This might be a solution, yes, though I'm not sure if that is how this library is supposed to be used
[10:48:35] <FromDiscord> <haxscramper> You can wrap macro manually into template
[10:48:42] <FromDiscord> <haxscramper> And then dynlib things that it calls
[10:49:12] <FromDiscord> <haxscramper> I have never wrapped method from shared library though, so I can't tell how this is supposed to work
[10:53:02] <FromDiscord> <TechnoRazor> I think if you want to include it statically, you're expected to just include the whole source code in your project, which I don't know if I can do in Nim.
[10:54:30] <FromDiscord> <haxscramper> > I tried using the compile pragma to compile everything, and I get errors from the g++ compiler.↵What errors did you get there?
[10:55:35] <FromDiscord> <haxscramper> And no, `Optick::EndFrame(Optick::FrameType::Type, long long, unsigned long long)` is not a method but just a `OPTICK_API uint32_t BeginFrame(Optick::FrameType::Type frameType, int64_t timestamp, uint64_t threadID)` so I think you still can use it normally
[10:56:29] <FromDiscord> <TechnoRazor> I was trying to do something like `{.compile:"optick/.cpp".}` and got `g++.exe: fatal error: cannot specify '-o' with '-c', '-S' or '-E' with multiple files`
[10:56:35] *** Quits: pch (~pch@66.49.131.33) (Remote host closed the connection)
[10:58:12] <FromDiscord> <TechnoRazor> sent a code paste, see https://play.nim-lang.org/#ix=3wDP
[10:58:29] <FromDiscord> <TechnoRazor> (edit) "https://play.nim-lang.org/#ix=3wDP" => "https://play.nim-lang.org/#ix=3wDQ"
[11:00:22] <FromDiscord> <haxscramper> I can't even built this thing
[11:01:03] <FromDiscord> <TechnoRazor> They have some sort of guide for building it yourself: https://github.com/bombomby/optick/wiki/How-to-start?-(Programmers-Setup)
[11:01:03] <FromDiscord> <haxscramper> Using build instructions from the repo
[11:16:42] <NimEventer> New thread by Chat_noir: [newbie] Question about downloading image files programming, see https://forum.nim-lang.org/t/8351
[11:23:55] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wDR
[11:24:02] <FromDiscord> <haxscramper> I've confirmed that function is implemented in the .so
[11:24:21] <FromDiscord> <haxscramper> With mangled (?) name `Optick::BeginFrame_Optick::FrameType::Typelongunsigned_long_` and demangled `Optick::Core::BeginUpdateFrame(Optick::FrameType::Type, long, unsigned long)`
[11:24:31] <FromDiscord> <haxscramper> but I don't know how to correctly importc this
[11:24:45] <FromDiscord> <haxscramper> `importc: "Optick::Core::BeginUpdateFrame(Optick::FrameType::Type, long, unsigned long)"` or `imporc: "Optick::BeginFrame_Optick::FrameType::Typelongunsigned_long_"` has failed
[11:25:14] <FromDiscord> <haxscramper> So I suggest you make a forum post about this, since surely someone has already done this
[11:25:17] <FromDiscord> <haxscramper> @TechnoRazor\:
[11:26:43] *** Joins: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547)
[11:28:03] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wDT
[11:28:56] <FromDiscord> <haxscramper> Compile implementation using `gcc name.cpp -fpic -shared -oliblibname.so`
[11:31:05] <FromDiscord> <TechnoRazor> I'm not sure if I even understand the problem, so I wouldn't know how to ask about this
[11:33:35] <FromDiscord> <haxscramper> well, I'm interested too, so I can make a post
[11:33:45] <FromDiscord> <TechnoRazor> Thanks
[11:43:39] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wDY
[11:43:49] <FromDiscord> <haxscramper> but this is just hell
[11:47:20] <FromDiscord> <haxscramper> well, this is "nevermind I figured it out" moment before I even asked the question
[11:53:30] *** Joins: max22- (~maxime@2a01cb088335980095d939fc95c94f70.ipv6.abo.wanadoo.fr)
[11:58:32] <FromDiscord> <haxscramper> https://forum.nim-lang.org/t/8352#53847
[11:58:46] <NimEventer> New thread by Haxscramper: Interfacing with C++ shared library that uses macros, see https://forum.nim-lang.org/t/8352
[12:28:50] <FromDiscord> <Cark> is there a way to see which underlying c compiler is used by my nim install ? like interrogating nim.exe about it ?
[12:30:19] <FromDiscord> <Cark> (edit) "interrogating" => "asking"
[12:33:35] <FromDiscord> <haxscramper> nim defaults to gcc, also you can compile with `--verbosity:3 --hint[CC]:on` IIRC it would show all compiler calls
[12:34:36] <FromDiscord> <Cark> thanks !
[12:46:31] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[12:47:52] *** Joins: pro (~pro@user/pro)
[12:53:22] <FromDiscord> <Ondrejoda> sent a long message, see http://ix.io/3wEc
[12:53:28] <FromDiscord> <Ondrejoda> so yeah
[12:53:33] <FromDiscord> <Ondrejoda> i'll be using nim now
[12:53:34] <FromDiscord> <Elegantbeef> Welcome \:D
[12:53:41] <FromDiscord> <impbox [ftsf]> aye =)
[12:53:56] <FromDiscord> <impbox [ftsf]> not sure if it's perfect, but it's the best thing i've found
[13:01:24] *** Quits: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:06:35] <FromDiscord> <Rika> Depending on what you think is complicated ehem Nim is complicated
[13:08:14] <madprops> nim has cubed vim! https://github.com/oakes/vim_cubed
[13:08:17] <nrds> <04prestigebot99> 4GitHub: 7"Vim rendered on a cube for no reason"
[13:11:50] <madprops> I still don't understand how much can be done natively without using c libraries/wrappers
[13:12:45] <FromDiscord> <haxscramper> it uses opengl
[13:13:17] <FromDiscord> <impbox [ftsf]> natively?
[13:13:55] <FromDiscord> <impbox [ftsf]> not much can be done "natively" in c without using a c library
[13:14:00] <madprops> I mean, a lot of stuff seem to require wrappers
[13:14:07] <madprops> qt, ncurses ..
[13:14:14] <madprops> im guessing xorg interfacing too
[13:14:32] <FromDiscord> <impbox [ftsf]> well it makes sense to reuse that existing work rather than recode everything
[13:14:38] <madprops> yeah that's true
[13:14:46] <FromDiscord> <impbox [ftsf]> that's one of the advantages of nim, it can easily interface with existing c libraries
[13:14:54] <FromDiscord> <impbox [ftsf]> but you could recode it all in nim if you really wanted to
[13:14:58] <FromDiscord> <impbox [ftsf]> but it would be a lot of work
[13:15:12] <madprops> like recoding libc
[13:15:17] <FromDiscord> <impbox [ftsf]> yep
[13:15:26] <FromDiscord> <Rika> What is “native” anyway?
[13:15:43] <FromDiscord> <Rika> You can make a wrapper feel completely native
[13:17:07] <madprops> but is something lost along the way?
[13:17:16] <madprops> can qt applications be done perfectly with nim?
[13:18:04] <madprops> I remember that being a requested feature
[13:18:19] <madprops> requested library
[13:18:20] <FromDiscord> <impbox [ftsf]> i haven't tried, i don't see why not?
[13:18:42] <FromDiscord> <impbox [ftsf]> though QT is c++, so you'd probably want to output c++ instead of c
[13:18:48] <FromDiscord> <haxscramper> not "perfectly", but you can easily import qt classes
[13:18:49] <FromDiscord> <haxscramper> but then you
[13:18:49] <FromDiscord> <haxscramper> well
[13:18:50] <FromDiscord> <haxscramper> you can't derive from C++ classes
[13:18:50] <FromDiscord> <haxscramper> at least not easily
[13:18:52] <FromDiscord> <haxscramper> I have tried and there are some roablocks
[13:19:04] <FromDiscord> <impbox [ftsf]> C++ is troublesome for libraries
[13:21:11] <FromDiscord> <haxscramper> `nim r --backend:cpp qhello.nim`
[13:21:13] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wEf
[13:22:45] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/PWy
[13:22:53] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[14:01:09] <FromDiscord> <PressF> Hey.↵Does anyone have a good resource explaining {.importc.} {.constructor.} and other stuff like that (pragas is what they are called right?)
[14:02:04] <FromDiscord> <Yardanico> https://nim-lang.org/docs/manual.html can help you, it lists most pragmas that are available by default
[14:02:32] <FromDiscord> <Yardanico> specifically https://nim-lang.org/docs/manual.html#pragmas and  https://nim-lang.org/docs/manual.html#implementation-specific-pragmas
[14:04:33] <FromDiscord> <PressF> In reply to @Yardanico "https://nim-lang.org/docs/manual.html can help you,": Thx. Ill add that to the reading list.
[14:12:05] <FromDiscord> <Neko~Neko~ni> Hello!.nim in apt package manager is not being updated is there a reason for that.
[14:13:20] <FromDiscord> <Rika> Probably
[14:13:28] <FromDiscord> <Neko~Neko~ni> (edit) "updated" => "updated."
[14:13:53] <FromDiscord> <Rika> It is probably due to Ubuntu/Debian being a “stability over cutting edge” distro
[14:14:05] <FromDiscord> <Neko~Neko~ni> i installed nim from apt package manager but it installed a really old version
[14:14:21] <FromDiscord> <PsychoClay> u can use choosenim
[14:14:36] <FromDiscord> <Neko~Neko~ni> yeah after which i installed from choosenim
[14:16:24] <FromDiscord> <Neko~Neko~ni> installing nim from tarballs ,also had a problem.like nim was installed but nimble wasn't.i also checked the $PATH .doesn't the install.sh script adds the dir containing nimble to $PATH.
[14:37:34] <FromDiscord> <Ondrejoda> i got a question
[14:37:44] <FromDiscord> <Ondrejoda> can you compile a .exe file on linux
[14:37:47] <FromDiscord> <Ondrejoda> (edit) "linux" => "linux?"
[14:38:01] <FromDiscord> <Ondrejoda> by that i guess i mean cross-compiling
[14:39:18] <FromDiscord> <Ondrejoda> just found out <https://nim-lang.org/docs/nimc.html#crossminuscompilation-for-windows>
[14:47:03] <FromDiscord> <impbox [ftsf]> you can
[14:47:39] *** Joins: beshr (~beshr@user/beshr)
[15:01:39] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:02:39] *** Joins: xet7 (~xet7@user/xet7)
[15:21:52] <NimEventer> New thread by Rforcen: Heap mgr improved?, see https://forum.nim-lang.org/t/8353
[15:31:40] *** Quits: max22- (~maxime@2a01cb088335980095d939fc95c94f70.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[15:36:13] <FromDiscord> <Bren> What release is the http-client for js planned to be in?
[15:36:26] <FromDiscord> <Ondrejoda> how can i turn `1..100` into a seq?
[15:36:51] <FromDiscord> <haxscramper> `toSeq(1..100)` from
[15:36:56] <FromDiscord> <haxscramper> `toSeq` is from `std/sequtils`
[15:37:05] <FromDiscord> <Ondrejoda> oh
[15:41:14] <FromDiscord> <konsumlamm> In reply to @Bren "What release is the": it will be in https://github.com/nim-lang/standardjs
[15:41:16] <nrds> <04prestigebot99> 4GitHub: 7"Wrappers for standardized JS modules."
[15:42:21] <nrds> <11sorcerer99> accident sorry lmao, meant to set that as my usermode
[15:43:50] *** Joins: [R] (~rs@genoce.org)
[15:56:57] *** Joins: pch (~pch@66.49.131.33)
[16:12:02] <FromDiscord> <dauuricus (haywhnk)> hello
[16:13:09] <FromDiscord> <dauuricus (haywhnk)> I need to know how to write `image file download` code in nimlang
[16:13:42] <FromDiscord> <dauuricus (haywhnk)> can i ask it here?
[16:14:02] <FromDiscord> <PsychoClay> try `httpclient.downloadFile`
[16:14:11] <FromDiscord> <dauuricus (haywhnk)> ok
[16:14:18] <FromDiscord> <dauuricus (haywhnk)> https://forum.nim-lang.org/t/8351
[16:15:25] <FromDiscord> <dauuricus (haywhnk)> i want to download image file over `403 fobidden error` ...
[16:16:10] <FromDiscord> <PsychoClay> then you might need to set some headers
[16:19:35] <FromDiscord> <dauuricus (haywhnk)> IS THERE some document about the setting up httpclient ?
[16:19:56] <FromDiscord> <PsychoClay> https://nim-lang.org/docs/httpclient.html
[16:21:58] <FromDiscord> <dauuricus (haywhnk)> uuh
[16:24:00] <FromDiscord> <dauuricus (haywhnk)> i can't understand how to set and i don't know where is problem in get method in nim
[16:24:16] <FromDiscord> <PsychoClay> show code
[16:28:48] <FromDiscord> <dauuricus (haywhnk)> sent a code paste, see https://play.nim-lang.org/#ix=3wEK
[16:31:07] <FromDiscord> <dauuricus (haywhnk)> or
[16:31:40] <FromDiscord> <dauuricus (haywhnk)> var res = client.get(url)
[16:31:51] <FromDiscord> <PsychoClay> yea u cant download a file if the server returns a 403
[16:31:52] <FromDiscord> <dauuricus (haywhnk)> echo res.body
[16:32:05] <FromDiscord> <dauuricus (haywhnk)> yes
[16:32:45] <FromDiscord> <dauuricus (haywhnk)> sent a code paste, see https://play.nim-lang.org/#ix=
[16:33:01] <FromDiscord> <dauuricus (haywhnk)> \`\`\`\`\`\`
[16:34:35] <FromDiscord> <dauuricus (haywhnk)> in case Python
[16:34:48] <FromDiscord> <dauuricus (haywhnk)> sent a code paste, see https://play.nim-lang.org/#ix=
[16:35:18] <FromDiscord> <dauuricus (haywhnk)> sent a code paste, see https://play.nim-lang.org/#ix=3wEM
[16:35:55] <FromDiscord> <dauuricus (haywhnk)> I need binary res.body ...
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:44] <FromDiscord> <PsychoClay> dude u cant download a file if the server returns 403, it wont work
[16:38:36] <FromDiscord> <dauuricus (haywhnk)> In python request case\: no
[16:39:44] <FromDiscord> <dauuricus (haywhnk)> i can get the jpg file binary to local file
[16:39:53] <FromDiscord> <dauuricus (haywhnk)> Over 403
[16:40:20] <FromDiscord> <PsychoClay> i doubt that
[16:41:31] <FromDiscord> <dauuricus (haywhnk)> res.content == binary
[16:41:52] <FromDiscord> <dauuricus (haywhnk)> in requests(python)
[16:42:16] <FromDiscord> <PsychoClay> ur request example just puts the error html page into a jpg file
[16:42:45] <FromDiscord> <dauuricus (haywhnk)> yes,yes
[16:44:21] <FromDiscord> <fae> huh, Nim forum confirmation email went to my spam 😬
[16:44:25] <FromDiscord> <dauuricus (haywhnk)> sent a code paste, see https://paste.rs/hBu
[16:44:28] <FromDiscord> <dauuricus (haywhnk)> ruby case
[16:44:45] <FromDiscord> <Rika> run the code now
[16:44:48] <FromDiscord> <Rika> does it work now?
[16:44:55] <FromDiscord> <Rika> the python/ruby code i mean
[16:46:11] <FromDiscord> <dauuricus (haywhnk)> I want to know how to do the same effect in nim...
[16:46:21] <FromDiscord> <dauuricus (haywhnk)> https://forum.nim-lang.org/t/8351
[16:46:29] <FromDiscord> <Rika> no, run the same code in python now
[16:46:31] <FromDiscord> <Rika> does it still work
[16:46:37] <FromDiscord> <Rika> try it
[16:46:43] <FromDiscord> <Rika> now, not before
[16:48:46] <FromDiscord> <Rika> i'll help you further if you can verify that the python code still works now
[16:48:55] <FromDiscord> <haxscramper> > AttributeError\: 'list' object has no attribute 'len'↵Pain of having to write python after nim is just
[16:49:01] <FromDiscord> <haxscramper> absolutely unbearable
[16:49:24] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[16:50:32] *** Joins: flynn (~mcbloch@user/flynn)
[17:00:28] <FromDiscord> <dauuricus (haywhnk)> sorry i understand
[17:01:34] <FromDiscord> <dauuricus (haywhnk)> yes that python code is not working
[17:01:48] <FromDiscord> <dauuricus (haywhnk)> yes i understand
[17:01:54] <FromDiscord> <Rika> okay
[17:02:28] <FromDiscord> <dauuricus (haywhnk)> it was block by area region
[17:02:40] <FromDiscord> <dauuricus (haywhnk)> now i understand
[17:04:01] <FromDiscord> <dauuricus (haywhnk)> i did both code in googlecolab == not working 403
[17:04:39] <FromDiscord> <dauuricus (haywhnk)> but in local termux case works
[17:05:02] <FromDiscord> <dauuricus (haywhnk)> so its not 403,it was 200
[17:05:14] <FromDiscord> <Rika> i see
[17:05:17] <FromDiscord> <dauuricus (haywhnk)> yes thanks.
[17:05:26] <FromDiscord> <Rika> that is strange
[17:05:35] <FromDiscord> <Rika> i thought it was an expired link
[17:05:49] <FromDiscord> <dauuricus (haywhnk)> but i canot use local termux nim
[17:06:27] <FromDiscord> <dauuricus (haywhnk)> so i didnt test in local nim code
[17:06:45] <FromDiscord> <Rika> i see
[17:07:06] <FromDiscord> <dauuricus (haywhnk)> it maybe fixed termux nim compiler yesterday..
[17:07:40] <FromDiscord> <dauuricus (haywhnk)> https://forum.nim-lang.org/t/8345
[17:08:50] <FromDiscord> <dauuricus (haywhnk)> i will try when termux\`s pkg has updeted
[17:14:32] <FromDiscord> <dauuricus (haywhnk)> thanks.
[17:16:01] <FromDiscord> <krisppurg> Is there in any way to change my nim to something `[Windows: amd64]`, because when I do install from choosenim, it always installs nim with `[Windows: i386]` which is pretty slow for compiling code.↵(If you are confused, I got this information from `nim -v`)
[17:16:28] <FromDiscord> <krisppurg> (edit) "amd64]`," => "amd64]`?"
[17:23:16] <FromDiscord> <Yardanico> you can install Nim on windows yourself instead of choosenim
[17:23:37] <FromDiscord> <Yardanico> just add mingw to path (choosenim already did that) and build_all.bat
[17:23:43] <FromDiscord> <Yardanico> then add the bin folder to PATH
[17:25:48] <FromDiscord> <Yardanico> Also changing from nim i386 to amd64 won't really make the compilation much faster
[17:30:33] <FromDiscord> <dom96> In reply to @krisppurg "Is there in any": yeah, doubt amd64 will improve speed
[17:30:50] <FromDiscord> <dom96> but choosenim will install amd64 as long as you don't have an i386 gcc in your PATH
[17:31:00] <FromDiscord> <dom96> also, make sure you've got the newest choosenim
[17:35:47] *** Joins: max22- (~maxime@2a01cb0883359800a9efcdab2f942a9b.ipv6.abo.wanadoo.fr)
[17:36:18] <FromDiscord> <krisppurg> In reply to @dom96 "also, make sure you've": I can just update choosenim through nimble , right
[17:39:51] *** Joins: arkurious (~arkurious@user/arkurious)
[18:03:06] <FromDiscord> <konsumlamm> you can update choosenim through itself
[18:03:22] <FromDiscord> <konsumlamm> `choosenim update self`
[18:10:22] *** Joins: pro (~pro@user/pro)
[18:11:44] <FromDiscord> <Ondrejoda> how can i covert a float to a uint8? i tried `toU8(toInt(my_float_num))` but that doesn't work
[18:12:01] <FromDiscord> <impbox [ftsf]> myFloat.uint8
[18:13:31] <FromDiscord> <impbox [ftsf]> or you can do it c style `(uint8)myFloat`
[18:14:03] <FromDiscord> <impbox [ftsf]> or `uint8(myFloat)`
[18:14:05] <FromDiscord> <impbox [ftsf]> lots of options
[18:15:53] <FromDiscord> <Ondrejoda> In reply to @impbox "myFloat.uint8": hey, that worked! thanks
[18:16:16] <FromDiscord> <impbox [ftsf]> note that it works a bit differently to `toInt` in how it's rounded
[18:16:51] <FromDiscord> <impbox [ftsf]> if you want the same rounding as toInt you can do `myFloat.toInt.uint8`
[18:18:04] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3wFc
[18:26:48] <FromDiscord> <dankrad> after updating a pull request, do i need to ping someone/write something or do i just need to wait?
[18:28:05] <FromDiscord> <xflywind> link?
[18:28:38] <FromDiscord> <dankrad> https://github.com/nim-lang/Nim/pull/18727
[18:29:19] <FromDiscord> <dankrad> because I've a second pr ready, it fixes 14511, but I need to wait for the other to be merged
[18:29:40] <FromDiscord> <xflywind> I think araq will review it.
[18:29:57] <FromDiscord> <dankrad> ok
[18:33:06] <NimEventer> New Nimble package! composition - Composition pattern with event handling library in Nim, see https://github.com/DavidMeagher1/composition
[18:33:09] <nrds> <04prestigebot99> 4GitHub: 7"Composition pattern with event handling module in Nim"
[18:38:59] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3wFk
[18:39:50] <FromDiscord> <Rika> that would be nice
[18:39:58] <FromDiscord> <Rika> im pretty sure some langs have such a tool
[18:40:09] <FromDiscord> <Rika> code quality tools i think is what theyre called
[19:00:25] *** Joins: audiophile_ (~audiophil@user/audiophile)
[19:01:17] *** Quits: audiophile_ (~audiophil@user/audiophile) (Client Quit)
[19:05:04] <FromDiscord> <dom96> In reply to @krisppurg "I can just update": no, update through choosenim
[19:05:13] <FromDiscord> <dom96> I think I will just remove choosenim from Nimble
[19:06:39] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wFp
[19:06:51] <FromDiscord> <haxscramper> well, not as bad as I imagined
[19:07:01] <FromDiscord> <haxscramper> That excludes `"bluu", "netwatch", "gcplat", "atoz", "compiler", "finalseg"`
[19:07:24] <FromDiscord> <haxscramper> because these are 1m+ auto-codegened packages
[19:07:40] <FromDiscord> <haxscramper> or will skew test number very much
[19:08:45] *** Quits: max22- (~maxime@2a01cb0883359800a9efcdab2f942a9b.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[19:49:03] <FromDiscord> <fae> One of the coolest features I’ve seen in a package manager is Elms automatic semver checking on publish. Looks at public api and forces breaking changes if necessary.
[19:50:27] <FromDiscord> <fae> Granted it’s easier to do with a centralized host
[19:50:49] <FromDiscord> <Rika> how does it cope when behavior changes
[19:50:57] <FromDiscord> <Rika> and nothing from the public api?
[19:51:08] <FromDiscord> <Rika> (edit) "and nothing from the ... public" 03added "surface of the"
[19:51:31] <FromDiscord> <fae> Just looks at the api
[19:51:52] <FromDiscord> <fae> But considering it’s a pure language behavior is pretty transparent
[19:52:15] <FromDiscord> <Rika> what would constitute a minor change over a major one
[19:52:20] <FromDiscord> <Rika> and a patch
[19:52:30] <FromDiscord> <Rika> actually i assume this is specced in elm's repos or something no
[19:52:32] <FromDiscord> <Rika> ill see
[19:52:51] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[19:54:17] <FromDiscord> <Rika> i assume this would be very difficult in nim due to the strong metaprogramming
[19:55:00] <FromDiscord> <Rika> actually perhaps not, unless the output of someones macro changed depending on the time, in which case they are insane
[19:55:17] <FromDiscord> <Rika> i remember this being discussed before though
[19:55:34] <FromDiscord> <haxscramper> In reply to @Rika "how does it cope": it is possible to implement, just hard
[19:55:39] <FromDiscord> <haxscramper> but this can be done
[19:55:42] <FromDiscord> <Rika> i understand yes
[19:55:44] <FromDiscord> <Rika> i can see it
[19:55:46] <FromDiscord> <haxscramper> AST diffing, semantic diffing etc
[19:55:46] <FromDiscord> <fae> Yea I have no idea, was just musing. It was always a feature that impressed me, static types ftw
[19:56:36] <FromDiscord> <Rika> In reply to @haxscramper "AST diffing, semantic diffing": yes i see, this seems like it is in the realm of "practically doable"
[19:56:53] <FromDiscord> <haxscramper> I had POC for haxdoc that can tell you as much https://media.discordapp.net/attachments/371759389889003532/879023830146891816/rMqkcDUbdqaAJNUQENfHKmtK.png
[19:56:58] <FromDiscord> <haxscramper> AST diffing is
[19:57:04] <FromDiscord> <haxscramper> well, I have it done too, but not in usable form
[19:57:26] <FromDiscord> <haxscramper> complete ast diffing is NP hard (with moves)
[19:57:38] <FromDiscord> <Rika> wait, really? why?
[19:58:04] <FromDiscord> <haxscramper> I don't remember exact paper that links to the proof, but the whole problem is in moves
[19:58:26] <FromDiscord> <Rika> moves are defined as
[19:58:44] <FromDiscord> <haxscramper> move one part of subtree into any other part of subtree
[19:59:12] <FromDiscord> <Rika> okay
[19:59:58] <FromDiscord> <haxscramper> and algorithms that deal with this stuff look like horrible nest of heursitcs that makes zero sense whatsoever
[20:00:09] <FromDiscord> <haxscramper> but thanfylly someone rewrote it in java, and I rewrote it in nim
[20:00:20] <FromDiscord> <haxscramper> still don't understand 80% of ti
[20:00:57] <FromDiscord> <haxscramper> basically main issue with AST diffing is to get sensible output
[20:01:12] <FromDiscord> <haxscramper> there is no shortage of tools to copy btw
[20:01:25] <FromDiscord> <haxscramper> about a month ago HN had tons of links
[20:01:35] <FromDiscord> <Rika> im looking at https://www.monperrus.net/martin/tree-differencing
[20:01:41] <FromDiscord> <Rika> looks old though
[20:01:50] <FromDiscord> <haxscramper> I used https://github.com/GumTreeDiff/gumtree/
[20:01:53] <nrds> <04prestigebot99> 4GitHub: 7"A neat code differencing tool"
[20:02:04] <FromDiscord> <haxscramper> they have reference implementation for lots of alogs
[20:02:04] <FromDiscord> <Rika> yes the link i sent recommends gumtree first
[20:02:18] <FromDiscord> <haxscramper> yes, and it the best one I've seen in terms of
[20:02:23] <FromDiscord> <Rika> are the algos commented ^^;
[20:02:28] <FromDiscord> <haxscramper> "can copy implementatin"
[20:02:37] <FromDiscord> <haxscramper> In reply to @Rika "are the algos commented": no
[20:02:58] <FromDiscord> <Rika> which folder did you read
[20:03:21] <FromDiscord> <haxscramper> and as I said, they implemented as please-kill-me code style https://github.com/GumTreeDiff/gumtree/blob/dc3cbd3d412ec8f2bd2afb78de329b04884c0e74/core/src/main/java/com/github/gumtreediff/matchers/optimal/rted/RtedAlgorithm.java#L452
[20:03:26] <FromDiscord> <haxscramper> I've read the paper
[20:03:27] <FromDiscord> <haxscramper> well, tried
[20:03:42] <FromDiscord> <Rika> oh goodness
[20:03:55] <FromDiscord> <haxscramper> I just wrote java -> nim transpiler and fixed compilation errors
[20:04:05] <FromDiscord> <haxscramper> thankfully enough nim is very close to java
[20:05:04] <FromDiscord> <Rika> i feel like ive seen this algorithm before
[20:05:58] <FromDiscord> <haxscramper> RTED?
[20:06:48] <FromDiscord> <haxscramper> gumtree final algorithm is a composition of seveal subalgorithms total, some of them simple (lcs of dfs subnode arrangement)
[20:06:49] <FromDiscord> <Rika> yeah i thought it was that
[20:06:58] <FromDiscord> <haxscramper> some of them pretty complex
[20:07:14] <FromDiscord> <haxscramper> but they just compute mapping between two trees and then I feed things into edit script generator
[20:07:19] <FromDiscord> <haxscramper> script generator is pretty easy
[20:07:48] <FromDiscord> <haxscramper> so it can process any mappings constructed in any (reasonable) form
[20:08:14] <FromDiscord> <haxscramper> and  yes my impl is https://github.com/haxscramper/hmisc/tree/f0645f534184dae9dff3ee84ce0f022e58e84e8e/src/hmisc/extra/treediff
[20:08:26] <FromDiscord> <Rika> im sorry i have to go its late for me ;;
[20:08:31] <FromDiscord> <Rika> this is mind melting though
[20:08:55] <FromDiscord> <haxscramper> some guy on hn said he spent like ~10 years on something like that
[20:10:26] *** Joins: max22- (~maxime@2a01cb0883359800e5c1a9a1b34924d2.ipv6.abo.wanadoo.fr)
[20:14:06] *** Quits: max22- (~maxime@2a01cb0883359800e5c1a9a1b34924d2.ipv6.abo.wanadoo.fr) (Client Quit)
[20:15:18] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:15:23] <Gustavo6046> Hello :)
[21:11:20] <FromDiscord> <rishavs (Rishav Sharan)> Has anyone written a lexer/parser in nim? I am interested in seeing how I can repesent a simple grammar using nim types
[21:13:20] <FromDiscord> <dom96> sure, this is pretty old but could still be useful https://github.com/dom96/nael/
[21:13:22] <nrds> <04prestigebot99> 4GitHub: 7"Stack-based language similar to Factor."
[21:14:28] <FromDiscord> <haxscramper> https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6
[21:19:10] <FromDiscord> <rishavs (Rishav Sharan)> Thanks!↵(@dom96)
[21:23:20] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[21:23:51] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[21:26:55] <FromDiscord> <gerwy> Its not really Nim related but do you think that book about optimization from 1994 is still useful? Like i don't think they had vectorization or multithreading
[21:29:35] <FromDiscord> <gerwy> Even better↵For you to imagine how long ago it was it was year after release of first Doom and two years before Duke Nukem 3D
[21:31:17] <FromDiscord> <gerwy> And two years before dom being born i guess hah
[21:36:29] <FromDiscord> <noxabellus> howdy yall✌️day 1 in nim here
[21:37:48] <FromDiscord> <noxabellus> was wondering if theres some way to access a seq without throwing an exception if my index is out of bounds. like, in rust i can get an option value with the `get` method. is there any way to do that, or will i have to make a try/except wrapper?
[21:38:42] <FromDiscord> <noxabellus> the docs im finding dont really cover built ins such as seq's [] very well
[21:39:28] <FromDiscord> <konsumlamm> there's no version that returns an `Option[T]` in the stdlib
[21:50:34] <FromDiscord> <exelotl> Hey!
[21:51:12] <FromDiscord> <exelotl> yeah I think you'll have to write your own helper for that
[21:52:10] <FromDiscord> <noxabellus> sent a code paste, see https://play.nim-lang.org/#ix=3wGe
[21:52:18] <FromDiscord> <leorize> please don't catch the Defect produced by an out of bounds array access, use `.len` instead↵(@noxabellus)
[21:52:25] <FromDiscord> <noxabellus> interesting
[21:52:26] <FromDiscord> <noxabellus> ok
[21:52:57] <FromDiscord> <exelotl> you could probably use `openArray` instead of making a concept for this
[21:53:18] <FromDiscord> <leorize> openArray doesn't work when you need the index type
[21:53:24] <FromDiscord> <noxabellus> why is it not okay to use try/except here?
[21:53:29] <FromDiscord> <noxabellus> more overhead?
[21:53:30] <FromDiscord> <leorize> ie. an array with enum for index
[21:54:04] <FromDiscord> <exelotl> out of bounds accesses raise a "defect" which is not supposed to be catchable
[21:54:13] <FromDiscord> <leorize> Defect is meant to signify a programming error and in the future will crash your program immediately
[21:54:13] <FromDiscord> <noxabellus> ohh
[21:54:24] <FromDiscord> <noxabellus> well thats good to know lol
[21:54:50] <FromDiscord> <leorize> currently it doesn't do that because there are a lot of people who catch them, but things might change by the time nim 2.0 is out
[21:55:12] <FromDiscord> <noxabellus> fair enough
[21:58:16] <FromDiscord> <noxabellus> so, i just wrote `index < s.len` and it compiled fine which was sort of surprising to me
[21:59:29] <FromDiscord> <noxabellus> this is more like c++ templates than it is generics, i suppose?
[21:59:43] <FromDiscord> <exelotl> ah, you were expecting it to fail because it's not listed in the concept?
[21:59:47] <FromDiscord> <noxabellus> right
[22:00:18] <FromDiscord> <exelotl> yeah they are more like templates I think
[22:03:54] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Quit: WeeChat 3.2)
[22:06:13] <FromDiscord> <haxscramper> I hope defect will be simply removed in 2.0
[22:18:58] <FromDiscord> <⃟⃟> what is the purpose of defect?
[22:21:59] <FromDiscord> <haxscramper> To show that you know what errors library user should and should not handle, do better than themselves
[22:22:19] <FromDiscord> <haxscramper> But in reality it does not work, and can not work
[22:22:24] <FromDiscord> <haxscramper> (edit) "can not" => "cannot"
[22:22:54] <FromDiscord> <haxscramper> (edit) 04removed "do better than themselves"
[22:23:33] <FromDiscord> <haxscramper> Basically create pain in the ass for no reason
[22:25:29] <FromDiscord> <haxscramper> Well, at least I don't remember anyone praising defect, and I've seen a lot of coplaints about it's counter-intuitiveness, the fact that it "can but should not" be caught
[22:25:49] <FromDiscord> <haxscramper> special language dialects where `--pandics:on` now changes semantics of the code
[22:26:54] <FromDiscord> <haxscramper> You can't test for defects really (because you have to catch them, and that's exactly what you are "not supposed" to do)
[22:33:01] <FromDiscord> <Ondrejoda> is there something like python
[22:33:15] <FromDiscord> <Ondrejoda> is there something like python's turtle in python?
[22:33:20] <FromDiscord> <Ondrejoda> nim
[22:33:26] <FromDiscord> <Ondrejoda> what is wrong with me
[22:33:41] <FromDiscord> <Ondrejoda> (edit) "python?" => "nim?"
[22:34:54] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[22:41:53] <emery> is `shr` supposed to work like this `(1'u64 shr 64) == 1`?
[22:59:19] <FromDiscord> <exelotl> no, that would be a bit rotate rather than a bit shift
[23:05:28] <FromDiscord> <konsumlamm> sent a code paste, see https://play.nim-lang.org/#ix=3wGw
[23:05:49] <FromDiscord> <noxabellus> :brainpower: holy crap
[23:06:01] <FromDiscord> <noxabellus> thank you
[23:09:34] <emery> exelotl: that is what it does https://play.nim-lang.org/#ix=3wGx
[23:11:44] <FromDiscord> <exelotl> emery: ohh it's UB
[23:12:04] <FromDiscord> <exelotl> https://stackoverflow.com/a/52784557
[23:14:52] <emery> heh, its not nim's fault then
[23:15:51] <FromDiscord> <exelotl> I'm surprised there's no warnings output during compilation though
[23:17:09] <emery> different compiler comunities have different assumptions about what people should know is UB?
[23:22:14] *** Joins: max22- (~maxime@2a01cb088335980075e51662c51f4c09.ipv6.abo.wanadoo.fr)
[23:35:56] <FromDiscord> <Neko~Neko~ni> Does anyone know pythons requests module in nim.↵i mean a HTTP module like pythons request,httpx ?
[23:44:45] <FromDiscord> <treeform> In reply to @Life Sucks "Its not really Nim": I think that pretty much all algorithmic optimizations from 1994 are still useful. Huge difference between big O of N, log N, N^2, N! ... true for all computers.
[23:45:15] <FromDiscord> <treeform> People in 1994 had to always optimize
[23:45:26] <FromDiscord> <treeform> it was not like its now were we can just meh it and computers are still fast
[23:45:37] <FromDiscord> <gerwy> i know, its just i was concerned about the technology used in those years vs what we use now
[23:45:57] <FromDiscord> <gerwy> but knowing algorithms is always a good idea i guess
[23:46:37] <FromDiscord> <gerwy> but remember that this was made far before inventing Fast Inevrse Square Root
[23:46:44] <FromDiscord> <gerwy> (edit) "Inevrse" => "Inverse"
[23:48:06] <FromDiscord> <treeform> Carmack's Fast Inverse Square Root is pretty fun intellectual thing, but its not like its solves all optimization problems. I don't know if people still use it even, I don.t
[23:48:08] <FromDiscord> <treeform> (edit) "don.t" => "dont."
[23:48:41] <FromDiscord> <treeform> its only useful for numbers that are closer to 1
[23:49:01] <FromDiscord> <treeform> so only good for like normals and lighting calculations
[23:49:08] <FromDiscord> <treeform> so GPUs just do the real sqrt in its place now
[23:49:25] <FromDiscord> <gerwy> yeah its very smart imo, but thats the point, it was needed then because of the limitations, but now, its a lot slower than native inverse square roots instructions that pc does or for example made for C
[23:49:36] <FromDiscord> <gerwy> and its not precise too
[23:53:28] <FromDiscord> <treeform> I remember reading how it was faster to use lookup tables for sine rather then use the CPU's sine function. Back then memory speed propitiation to cpu seed was way different.
[23:53:44] <FromDiscord> <treeform> Now days memory is a lot slower compared to cpu.
[23:54:15] <FromDiscord> <treeform> This is what also made linked lists more viable on older hardware
[23:54:24] <FromDiscord> <treeform> now days linked lists are pretty much always a bad idea
