[00:07:53] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:55:03] *** Joins: Guest4934 (~joe@46.7.172.98)
[01:20:23] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[01:40:22] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:57:41] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Read error: Connection reset by peer)
[01:57:59] *** ChanServ sets mode: +o Chunky_Ks
[01:58:08] *** Chunky_Ks changes topic to 'Topic for ##sqlite: (current)-3.38.0 https://sqlite.org/ | Need help? Ask and wait patiently. All questions will be answered eventually | Pastebins: http://ideone.com/ (pick SQLite) | Alternative support channel: https://sqlite.org/forum - if you ask here and there, and get an answer here, please post the solution in your forum thread'
[01:58:13] *** ChanServ sets mode: -o Chunky_Ks
[02:13:40] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[02:14:51] *** Quits: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:16:07] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:19:21] *** Quits: AmR (~AmREiSa@156.199.47.115) (Quit: Konversation terminated!)
[02:48:35] *** Joins: ferdna (~ferdna@user/ferdna)
[02:55:40] *** Joins: jaix (~jaix@user/jaix)
[02:59:20] *** Quits: Guest4934 (~joe@46.7.172.98) (Ping timeout: 256 seconds)
[03:15:26] *** Joins: Guest4934 (~joe@46.7.172.98)
[03:46:52] *** Joins: danshearer (~dansheare@2001:8b0:dfb4:de56:9c11:5547:36cb:1f36)
[04:11:52] *** Quits: Guest4934 (~joe@46.7.172.98) (Ping timeout: 256 seconds)
[05:37:48] *** Quits: jaix (~jaix@user/jaix) (Quit: Leaving)
[06:07:46] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[07:27:46] *** Joins: aknot (~aknot@2603:900a:1503:17bb:ef10:5507:4cde:2970)
[07:46:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:52:36] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[08:23:06] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:27:26] *** Quits: aknot (~aknot@2603:900a:1503:17bb:ef10:5507:4cde:2970) (Ping timeout: 245 seconds)
[09:10:21] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[10:24:13] *** Quits: [Arfrever] (~Arfrever@apache/committer/Arfrever) (Ping timeout: 256 seconds)
[10:37:29] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:43:19] <leotaku> Hi! I've implemented a writable virtual table that works by filling a shadow table on xUpdate and updating the actual backing files on xSync/xCommit/xRollback. With this design, will transactions work as expected, or do I still have to implement my own transaction handling?
[10:44:45] <Habbie> that might be the hardest question i've seen here so far
[10:44:51] <Habbie> which suggests you might be better off on the forum
[10:50:30] <leotaku> Okay thanks, maybe I'll try that.
[10:55:12] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:56:23] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:56:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:15:24] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:32:23] *** Joins: colo_work (~colo_work@212095007235.public.telering.at)
[11:32:33] <colo_work> hi
[11:32:45] *** Joins: AmR (~AmREiSa@156.199.47.115)
[11:34:13] <colo_work> I am looking for a way to concatenate tables with identical schema from physically distinct databases (residing on the same POSIX filesystem); primary keys don't matter. is there a more clever way to this rather than having an application connect to both, SELECT the rows from table X in db #1, and INSERT those rows in table X in db #2?
[11:35:58] <pekster> That's probably what I'd do; if any kind of non-PK constraints are a possible issue and you want to ignore them, an 'INSERT OR IGNORE â€¦' may be preferred.
[11:40:32] <colo_work> thanks. there are no constraints on the schema - it's really just lists of records stored in sqlite for convenient querying later on.
[12:25:31] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[12:28:34] *** Joins: Guest4934 (~joe@46.7.172.98)
[12:51:33] *** Quits: ysch (~ysch@91.211.93.148) (Ping timeout: 256 seconds)
[12:56:53] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[13:15:43] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:20:00] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Read error: Connection reset by peer)
[13:20:25] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:24:47] *** Quits: Guest4934 (~joe@46.7.172.98) (Ping timeout: 252 seconds)
[13:30:46] *** Joins: califax (~califax@user/califx)
[13:40:48] <danshearer> leotaku, another approach could be to intercept ops in vdbe.c . Code showing how to do that for different purposes, for the last 20 or so versions of SQLite is at https://lumosql.org/src/lumosql/dir?ci=tip&name=not-fork.d/sqlite3
[13:46:49] *** Joins: Guest4934 (~joe@78.158.110.114)
[13:49:08] *** Joins: [Arfrever] (~Arfrever@apache/committer/Arfrever)
[14:01:13] *** Quits: Jong (~Jong@2620:10d:c090:400::5:b24b) (Quit: Textual IRC Client: www.textualapp.com)
[14:29:57] *** Quits: Habbie (peter@lorentz.7bits.nl) (Ping timeout: 240 seconds)
[14:36:48] *** Joins: Habbie (peter@lorentz.7bits.nl)
[15:10:44] *** Joins: ysch (~ysch@91.211.93.148)
[15:44:16] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[15:57:48] *** Quits: Guest4934 (~joe@78.158.110.114) (Ping timeout: 240 seconds)
[16:05:54] *** Joins: Guest4934 (~joe@78.158.110.114)
[16:56:13] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:54:31] *** Joins: aknot (~aknot@2603:900a:1503:17bb:f481:91b7:219c:c327)
[18:26:48] *** Joins: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net)
[18:28:08] *** Quits: colo_work (~colo_work@212095007235.public.telering.at) (Remote host closed the connection)
[18:28:26] *** Joins: colo_work (~colo_work@212095007235.public.telering.at)
[18:47:52] *** Guest4934 is now known as revoltingPeasant
[18:48:05] *** Quits: revoltingPeasant (~joe@78.158.110.114) (Changing host)
[18:48:05] *** Joins: revoltingPeasant (~joe@user/revoltingpeasant)
[18:48:19] *** Quits: revoltingPeasant (~joe@user/revoltingpeasant) (Quit: WeeChat 2.8)
[18:49:20] *** Joins: revoltingPeasant (~joe@user/revoltingpeasant)
[18:50:51] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:04:41] *** Quits: aknot (~aknot@2603:900a:1503:17bb:f481:91b7:219c:c327) (Ping timeout: 252 seconds)
[19:16:36] *** Quits: MBrod208 (MBrod208@pool-72-94-148-71.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[19:18:26] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[19:18:40] *** Joins: califax (~califax@user/califx)
[19:19:52] <Chunky_Ks> colo_work: it's worth noting that sqlite can do all that for you, itself.
[19:20:30] <Chunky_Ks> sqlite3 db1.db "ATTACH db2.db AS db2; INSERT INTO main.tbl SELECT * FROM db2.tbl;"
[19:21:36] <colo_work> Chunky_Ks, using the shared library interface from python as well?
[19:21:46] <Habbie> yes
[19:21:49] <Chunky_Ks> yes.
[19:21:58] <Chunky_Ks> that's literally two SQL queries you execute on an open handle
[19:22:10] <Chunky_Ks> the first attaches the second database into your handle, and the second copies records across.
[19:22:38] <colo_work> cool, thanks for letting me know. might refactor to use this later on.
[19:22:40] <Chunky_Ks> much easier and faster than trying to manage two connections, two cursors, etc, which I'm inferring was your original plan
[19:22:53] <colo_work> yup. I have already implemented it by now, and it works.
[19:23:19] <colo_work> but simpler is always better, all other things being equal :)
[20:10:08] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[20:13:03] *** Joins: aknot (~aknot@2603:900a:1503:17bb:edb7:933e:af00:e586)
[20:31:36] *** Quits: aknot (~aknot@2603:900a:1503:17bb:edb7:933e:af00:e586) (Ping timeout: 245 seconds)
[20:33:45] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:43] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[20:55:42] *** Quits: revoltingPeasant (~joe@user/revoltingpeasant) (Ping timeout: 272 seconds)
[21:20:26] *** Quits: danshearer (~dansheare@2001:8b0:dfb4:de56:9c11:5547:36cb:1f36) (Ping timeout: 260 seconds)
[21:41:21] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a1ka9ch2071qn.ipv6.telus.net)
[21:49:54] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a1ka9ch2071qn.ipv6.telus.net) (Remote host closed the connection)
[21:53:23] *** Joins: jaix (~jaix@user/jaix)
[22:45:33] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[22:46:09] *** Quits: jaix (~jaix@user/jaix) (Remote host closed the connection)
[22:46:32] *** Joins: jaix (~jaix@user/jaix)
[23:41:11] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:44:31] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
