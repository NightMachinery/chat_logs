[00:01:38] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[00:13:32] <Zipheir> Just and Nothing are both highly respectable gondoliers.
[00:14:35] <mdhughes> "Help please, I am Just." https://www.youtube.com/watch?v=s5oshQMtYOE
[00:23:29] <dpk> so, i mentioned this idea recently https://gitlab.com/dpk/presrfis/-/blob/master/iterators/cursors.md
[00:23:44] <dpk> implementation with at least one ghastly premature optimization https://gitlab.com/dpk/presrfis/-/blob/master/iterators/cursors.scm
[00:29:00] <amazigh> what is the premature optimization?
[00:29:12] <amazigh> what do you think about cursor-close?
[00:29:13] <dpk> the case-lambda in cursor-next!
[00:30:28] <dpk> what would cursor-close do?
[00:31:27] <amazigh> maybe nothing.
[00:31:37] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Ping timeout: 256 seconds)
[00:31:38] <amazigh> what is cursor-state-vars?
[00:32:27] <amazigh> I mean the field `state-vars` of <cursor>
[00:33:43] <jcowan> yes, that mystified me too.  The best I could come up with is that they are boxes.
[00:36:10] <amazigh> ah!
[00:39:05] <amazigh> does list->cursor pass the whole cdr as rest to `cursor-advance-proc`?
[00:43:06] <amazigh> in cursor-next, line 27, I do not think it is a good idea to pass state-vars as the last argument of apply
[00:43:18] <amazigh> anyway!1
[00:43:20] <amazigh> I like it.
[01:03:02] <jcowan> dpk: ^^
[01:03:14] <dpk> jcowan: ??
[01:06:05] <amazigh> dpk: do you plan to add tests, or may I help you?
[01:06:30] * amazigh Zzzz..
[01:06:35] <dpk> initially i'm hoping for general feedback on the approach before doing too much more work on this
[01:07:53] <amazigh> (I need to pratice e.g. see with actual code how it looks to replace generator-map, generator-fold and what about make-coroutine-generator)
[01:08:48] <dpk> i think an analogue to make-coroutine-generator would be possible, though i'd regard it with suspicion in this context
[01:09:42] <amazigh> (I built several generators following the protocol, without relying on srfi-158 public interface)
[01:10:07] <amazigh> (I mean prolly, building your own cursor (without call/cc) should be easy too)
[01:23:07] <jcowan> dpk: the mystery of the "state-vars" argument/s in make-cursor: what are they?
[01:24:33] <dpk> they maintain the state of the iteration, and get passed to the advance-proc to move forward. the advance-proc sets the value for the next step as well as updating the state-vars ready for the step after the next step
[01:25:34] <jcowan> okay, so it is initial-values-of-state-vars ?
[01:25:59] <dpk> yes
[01:26:56] <dpk> i should probably call them state-values or something instead …
[01:27:43] <jcowan> Yes.
[01:28:30] <jcowan> Also, does it really make sense to do next and next! over the same cursor?  ISTM that it should be a cursor-level property.
[01:29:26] <dpk> hmmm, i think you're right
[01:38:41] *** Quits: torbjornsd (~torbjorns@213.158.35.13) (Quit: Leaving)
[01:39:37] *** Quits: tripfandango (~tripfanda@5.29.56.77) (Ping timeout: 256 seconds)
[01:39:45] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[02:22:20] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:22:52] *** Joins: badkins (~badkins@136.56.92.199)
[02:27:41] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[02:30:03] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 256 seconds)
[02:30:14] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[02:31:40] *** Joins: ad-absurdum (~ad-absurd@2600:100a:b02d:5aba:3d76:28ce:508d:cece)
[02:48:57] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 252 seconds)
[02:55:40] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[03:09:44] *** Joins: badkins (~badkins@136.56.92.199)
[03:11:28] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Quit: jrincayc)
[03:20:56] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:27:25] *** Joins: s-liao (~s-liao@101.86.99.70)
[03:30:45] *** Quits: taiju (~taiju@240b:253:ec40:2400:651e:f83b:5890:99a6) (Ping timeout: 252 seconds)
[03:30:50] *** Joins: seninha (~seninha@user/seninha)
[03:33:38] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[03:34:38] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[03:36:59] *** Quits: jao (~jao@194.99.104.13) (Ping timeout: 252 seconds)
[03:39:03] *** Joins: jao (~jao@45.152.183.54)
[03:43:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[03:47:20] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:e1ca:8d5a:1c5d:18a6)
[03:47:20] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:e1ca:8d5a:1c5d:18a6) (Changing host)
[03:47:20] *** Joins: skapata (~Skapata@user/skapata)
[03:50:23] *** Joins: klovett_ (~klovett@107.115.32.2)
[03:53:29] *** Quits: klovett (~klovett@107.115.32.2) (Ping timeout: 252 seconds)
[03:57:20] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[04:02:39] *** Quits: ad-absurdum (~ad-absurd@2600:100a:b02d:5aba:3d76:28ce:508d:cece) (Ping timeout: 252 seconds)
[04:22:58] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[04:26:34] *** Joins: badkins (~badkins@136.56.92.199)
[04:33:29] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[04:35:00] *** Joins: badkins (~badkins@136.56.92.199)
[04:39:18] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[04:39:44] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[04:44:41] *** Quits: klovett_ (~klovett@107.115.32.2) (Quit: ZZZzzz…)
[04:47:25] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:50dc:b7dd:488:5235)
[05:08:20] *** Joins: ad-absurdum (~ad-absurd@98.sub-174-210-128.myvzw.com)
[05:39:54] *** Joins: Fare (~fare@pool-72-94-36-127.phlapa.fios.verizon.net)
[05:43:54] *** Quits: ad-absurdum (~ad-absurd@98.sub-174-210-128.myvzw.com) (Ping timeout: 256 seconds)
[05:44:17] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[05:49:17] *** Joins: ad-absurdum (~ad-absurd@5.sub-174-210-161.myvzw.com)
[05:49:21] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 252 seconds)
[05:49:34] *** Quits: ad-absurdum (~ad-absurd@5.sub-174-210-161.myvzw.com) (Client Quit)
[05:57:49] *** Joins: s-liao (~s-liao@101.86.99.70)
[05:58:38] *** Joins: klovett (~klovett@107.115.32.2)
[06:25:48] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Remote host closed the connection)
[06:26:03] *** Joins: taiju (~taiju@240b:253:ec40:2400:651e:f83b:5890:99a6)
[06:38:39] *** Joins: badkins (~badkins@136.56.92.199)
[06:43:15] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 252 seconds)
[07:00:51] *** Quits: jao (~jao@45.152.183.54) (Ping timeout: 252 seconds)
[07:02:08] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[07:09:52] *** Joins: livoreno (~livoreno@user/notzmv)
[07:19:55] *** Quits: taiju (~taiju@240b:253:ec40:2400:651e:f83b:5890:99a6) (Ping timeout: 252 seconds)
[07:36:14] *** Joins: klovett_ (~klovett@107.115.32.2)
[07:37:09] *** Joins: klovett__ (~klovett@107.115.32.2)
[07:38:22] *** Quits: klovett (~klovett@107.115.32.2) (Ping timeout: 256 seconds)
[07:40:38] *** Joins: klovett (~klovett@107.115.32.2)
[07:40:38] *** Quits: klovett_ (~klovett@107.115.32.2) (Ping timeout: 256 seconds)
[07:41:36] *** Joins: klovett_ (~klovett@107.115.32.2)
[07:42:07] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[07:43:02] *** Joins: klovett___ (~klovett@107.115.32.2)
[07:44:02] *** Quits: klovett__ (~klovett@107.115.32.2) (Ping timeout: 268 seconds)
[07:44:19] *** Joins: klovett__ (~klovett@107.115.32.2)
[07:45:00] *** Joins: klovett____ (~klovett@107.115.32.2)
[07:45:13] *** Quits: klovett (~klovett@107.115.32.2) (Ping timeout: 252 seconds)
[07:45:57] *** Quits: klovett_ (~klovett@107.115.32.2) (Ping timeout: 252 seconds)
[07:47:28] *** Joins: klovett (~klovett@107.115.32.2)
[07:47:44] *** Quits: klovett___ (~klovett@107.115.32.2) (Ping timeout: 268 seconds)
[07:48:09] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[07:48:16] *** Joins: klovett_ (~klovett@107.115.32.2)
[07:48:53] *** Quits: klovett__ (~klovett@107.115.32.2) (Ping timeout: 252 seconds)
[07:49:28] *** Joins: klovett__ (~klovett@107.115.32.2)
[07:49:35] *** Quits: klovett____ (~klovett@107.115.32.2) (Ping timeout: 268 seconds)
[07:50:13] *** Joins: klovett___ (~klovett@107.115.32.2)
[07:51:39] *** Quits: klovett___ (~klovett@107.115.32.2) (Client Quit)
[07:52:03] *** Quits: klovett (~klovett@107.115.32.2) (Ping timeout: 268 seconds)
[07:53:07] *** Quits: klovett_ (~klovett@107.115.32.2) (Ping timeout: 256 seconds)
[07:54:01] *** Quits: klovett__ (~klovett@107.115.32.2) (Ping timeout: 252 seconds)
[07:55:14] *** Joins: mononote (~mononote@user/mononote)
[07:58:38] *** Joins: klovett (~klovett@107.115.32.2)
[08:03:33] *** Quits: klovett (~klovett@107.115.32.2) (Ping timeout: 252 seconds)
[08:07:11] *** Joins: s-liao (~s-liao@101.86.99.70)
[08:15:01] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[08:22:01] *** Quits: theruran_ (uid11305@id-11305.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:23:06] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[08:43:08] *** Quits: Oxyd (~oxyd@user/oxyd) (Remote host closed the connection)
[08:43:52] *** Joins: Oxyd (~oxyd@user/oxyd)
[08:47:05] *** Joins: m455 (~m455@user/m455)
[08:51:55] *** Quits: m455 (~m455@user/m455) (Client Quit)
[08:55:22] *** Joins: m455 (~m455@user/m455)
[08:56:25] *** Joins: s-liao (~s-liao@101.86.99.70)
[09:02:41] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[09:05:44] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[09:07:09] *** Quits: flatwhatson (~flatwhats@115-64-234-110.tpgi.com.au) (Remote host closed the connection)
[09:27:20] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 252 seconds)
[09:28:49] *** Quits: lazr (~lazr@45.76.248.123) (Ping timeout: 256 seconds)
[09:32:04] *** Joins: seninha (~seninha@user/seninha)
[09:44:47] *** Joins: shawn (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[09:47:13] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[09:47:27] *** Joins: s-liao (~s-liao@101.86.99.70)
[09:55:24] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[09:56:39] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[09:59:19] *** Joins: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03)
[10:00:36] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Client Quit)
[10:00:48] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[10:13:00] *** Parts: shawn (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) ()
[10:13:05] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[10:13:14] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[10:16:43] *** Joins: seninha (~seninha@user/seninha)
[10:19:16] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[10:23:32] *** Joins: ASau (~user@lmpc.drb.insel.de)
[10:29:33] <ns12> Why do Schemers prefer RnRS standards over the official IEEE Scheme standard?
[10:30:35] <sham1> Because the IEEE Scheme is old
[10:34:45] <lockywolf> ns12, because it is old?
[10:35:58] <ns12> Why wasn't it updated?
[10:37:01] <lockywolf> nobody cared?
[10:37:17] <sham1> Well there's this discussion: http://lambda-the-ultimate.org/node/5324
[10:37:22] <sham1> From 2016
[10:38:21] <sham1> I don't know if it was actually renewed or not
[10:41:06] *** Joins: badkins (~badkins@136.56.92.199)
[10:41:32] <Zipheir> Old?  More like it provides next to nothing of what's used in most current Scheme programs.
[10:42:05] <sham1> Well it's based somewhat on R4
[10:42:11] <Zipheir> Programmers!  Always with the "old = bad" thing...
[10:43:04] <sham1> Well in this case old is bad, since as you said, it doesn't include a lot of the useful things that later revisions do
[10:45:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[10:46:47] <Zipheir> Yes, in this case the limitations are due to its antiquity.
[10:47:29] <Zipheir> ns12: Another big reason: you can't get a free copy of it.
[10:48:25] <Zipheir> Non-public programming language standards tend to fade away when there are free standards.
[10:48:54] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[10:57:40] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:ebd1:d304:8195:da29)
[11:01:14] *** Joins: badkins (~badkins@136.56.92.199)
[11:05:18] <ns12> Zipheir: The C standard is not free.
[11:05:25] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 252 seconds)
[11:06:46] <sham1> That also has freely available drafts that are used for implementations
[11:07:05] <sham1> Same way how the Scheme community uses the R^nRS revisions
[11:21:05] <wasamasa> the IEEE standardization effort is a joke
[11:21:22] <wasamasa> doing worse than the community standards is an achievement
[11:23:34] <wasamasa> IIRC there's like one or two implementations actually supporting it
[11:23:49] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:24:57] <lockywolf> I suspect that when big money come, standards would appear.
[11:25:20] <sham1> Certainly. Another question is whether that's something we want
[11:25:38] <wasamasa> ah, gambit does
[11:26:07] <wasamasa> and SCM
[11:26:28] <wasamasa> jscheme mentions it
[11:28:39] <sjamaan> IIRC it's very similar to R4RS anyway, so there's very little point in supporting it
[11:29:25] <sjamaan> (buying the standard to ensure 100% compat with IEEE, if you already have verified R4RS support, that is)
[11:45:46] *** Joins: civodul (~user@guix/contributor/civodul)
[11:47:02] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:50dc:b7dd:488:5235) (Ping timeout: 252 seconds)
[11:54:33] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[11:56:17] *** Joins: aeth (~aeth@user/aeth)
[11:59:09] <amazigh> heyo!
[12:07:59] *** Joins: tripfandango (~tripfanda@5.29.44.178)
[12:19:47] <ns12> amazigh: So... did you sleep for 10 hours? 😆
[12:21:37] <amazigh> yes :)
[12:40:00] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[12:42:25] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[12:42:52] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[12:44:35] *** Joins: s-liao (~s-liao@101.86.99.70)
[13:10:38] *** Joins: flatwhatson (~flatwhats@115-64-234-110.tpgi.com.au)
[13:12:58] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:09:20] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[14:11:07] *** Joins: s-liao (~s-liao@101.86.99.70)
[14:23:56] <amazigh> is there some controversy / debate regarding match?
[14:26:01] <amazigh> at least, there is SRFI-200 https://srfi.schemers.org/srfi-200/ and SRFI-204 https://srfi.schemers.org/srfi-204/
[14:26:21] * amazigh reads SRFI-200
[14:45:36] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[14:47:07] *** Joins: s-liao (~s-liao@101.86.99.70)
[15:09:00] <amazigh> FOSDEM 2022 is on its way https://libreplanet.org/wiki/FOSDEM2022-devroom-declarative-and-minimalistic-computing-cfp
[15:10:16] <amazigh> dpk: keep us posted about the cursor pre-srfi
[15:10:42] <amazigh> btw, I am not sure cursor the good term. The cursors I know allow to iterate backward and forward.
[15:11:27] <amazigh> in the current spec, cursor only moves forward, and when cursor-next! is not used, can be backtracked
[15:12:05] <amazigh> re what jcowan, what do you think about dropping cursor-next! completly
[15:12:47] <amazigh> because a generator can be implemented with cursor-next, the only thing is that it will not be possible to backtrack it
[15:13:37] <dpk> the whole point is to get away from the broken SRFI 158 generator design ;-)
[15:13:41] <amazigh> re cursor macro, what do you think about "named `cursor`" in the spirit of "named `let`"
[15:13:51] <Franciman> is there any srfi about unicode?
[15:15:26] <amazigh> generators are not broken imo, they only do not satisfy the strictly functional paradigm in the sense they have side-effects where you can't backtrack
[15:15:41] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[15:16:18] <dpk> and they can't contain every Scheme datum
[15:16:20] <amazigh> and the eof thing
[15:17:53] <amazigh> (end-of-file) is legacy
[15:18:09] <sham1> Of course, because it's actually called (eof-object)
[15:18:13] <amazigh> it should not be possible to produce one of those out-of-the-blue
[15:19:13] <amazigh> like i wrote yesterday, the spec looks useful for me possibly in the future
[15:19:27] <amazigh> e.g. implementing pattern combinators
[15:19:33] <jcowan> Just because dpk (to whom all praise) has waved a proposal under Schemers' noses, does not make SRFI 158 * "legacy".
[15:19:48] <jcowan> s/*//
[15:20:07] <amazigh> that is SRFI-158 that is legacy, I mean (eof-object) looks legacy to me
[15:20:15] <amazigh> that is NOT SRFI-158 that is legacy, I mean (eof-object) looks legacy to me
[15:23:54] <dpk> correct. i probably have a more acute sense of the flaws in my design than anyone, being the person who designed it
[15:24:05] <dpk> (well, M N-W will probably have some things to say)
[15:24:31] <jcowan> Yes, he's very good at that.
[15:24:54] <amazigh> sorry.
[15:26:48] <sham1> Well being opinionated isn't all that bad as long as you're also open to other arguments
[15:28:41] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[15:29:08] *** Joins: civodul` (~user@nat-eduroam-36-gw-01-bso.bordeaux.inria.fr)
[15:29:13] <amazigh> dpk: I was trying to be helpful, seems like you posted your work just to have jcowan feedback, or at least not mine, let me know if I should avoid interacting with you.
[15:29:33] <dpk> that was not my intention. i apologize if i gave that impression
[15:30:35] <jcowan> MN-W is often right on the line, and he often says that something "must" be done when what he means is "if this is not done, the result will be theoretically inelegant", as he gives no weight to history whatsoever.
[15:30:53] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 252 seconds)
[15:31:07] <jcowan> (Typical mathematician.)
[15:31:40] <Franciman> mathematicians are the bane of my existence
[15:34:22] *** Joins: badkins (~badkins@136.56.92.199)
[15:35:32] <sham1> Well that's a bit harsh isn't it
[15:36:56] * Franciman is a mathematician
[15:39:29] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[15:44:51] <mdhughes> No more math in the year THIS.
[16:16:02] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:17:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[16:21:45] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:25:55] <amazigh> mdhughes: you might be interested with https://git.sr.ht/~amirouche/ruse-exe/refs/v0.2.3 see the README at https://git.sr.ht/~amirouche/ruse-exe/
[16:26:07] <amazigh> it create an executables from chez code
[16:30:53] <ecraven> like gwatt's chez-exe?
[16:38:11] <mdhughes> Interesting. But A) Mac. B) I don't have a scheme.h? Not sure I want to install a dev package just now. C) I still need to build all my app infrastructure, because Mac apps are more than just a bare binary.
[16:39:23] *** Joins: seninha (~seninha@user/seninha)
[16:39:39] <mdhughes> I have kind of a dumb but working script bouncer system right now, my one test on supported systems worked.
[16:48:43] *** Joins: civodul`` (~user@193.50.110.120)
[16:49:21] *** Joins: jao (~jao@194.99.104.13)
[16:50:27] *** Quits: civodul` (~user@nat-eduroam-36-gw-01-bso.bordeaux.inria.fr) (Ping timeout: 252 seconds)
[17:11:49] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[17:21:35] <mdhughes> Turns out I do have scheme.h, but it's buried in a weird subdir, not sure where I'd tell ruse-exe -I LONGPATH?
[17:22:45] <amazigh> mdhughes: sorry, I did not test macos -x
[17:23:23] <amazigh> try with ruse-exe .ext library-directory/ -- -I path/to/dir where path/to/dir  contains scheme.h
[17:23:29] *** Quits: civodul`` (~user@193.50.110.120) (Quit: ERC (IRC client for Emacs 27.2))
[17:23:54] *** Joins: civodul (~user@guix/contributor/civodul)
[17:24:33] <amazigh> mdhughes: !
[17:24:37] <amazigh> mdhughes: forget about it!
[17:24:59] <amazigh> mdhughes: I just recalled that boot files are hardcoded, it won't work.
[17:25:04] <amazigh> mdhughes: thanks for trying
[17:25:09] * amazigh todo++
[17:25:25] <mdhughes> OK!
[17:30:42] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:ebd1:d304:8195:da29) (Quit: WeeChat 2.8)
[17:37:18] *** Quits: ASau (~user@lmpc.drb.insel.de) (Read error: Connection reset by peer)
[17:41:38] *** Joins: badkins (~badkins@136.56.92.199)
[17:44:27] *** Joins: ASau (~user@lmpc.drb.insel.de)
[17:47:00] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[17:47:09] *** Joins: badkins (~badkins@136.56.92.199)
[17:47:50] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 252 seconds)
[18:22:45] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:ebd1:d304:8195:da29)
[18:29:29] *** Quits: tripfandango (~tripfanda@5.29.44.178) (Ping timeout: 256 seconds)
[18:35:09] <gwatt> mdhughes: chez-exe should work with mac, presumably ruse-exe will too
[18:35:58] <mdhughes> It can make a binary, but that's not a full Mac app.
[18:36:06] <gwatt> ah, sure
[18:38:20] <dTal> what's a "full Mac app"?
[18:38:43] <mdhughes> Something you can click on and get it to launch, without Terminal.
[18:38:55] <dTal> You can't click on binaries to launch them on macs?
[18:39:10] <mdhughes> ".app" is a folder structure with an Info.plist, and resources in correct places.
[18:39:14] <dTal> What must you do then?
[18:39:16] <dTal> ah.
[18:39:41] <dTal> That sounds extremely annoying.
[18:39:49] <mdhughes> You can, if you don't mind it opening in a junk Terminal window for every run.
[18:40:05] <dTal> ...that sounds extremely annoying.
[18:40:11] <mdhughes> Well, the nice part is we have icons, and resource files, and libraries, and everything in one "file".
[18:40:35] <mdhughes> As opposed to Linux, where you either scatter files in 15 directories, or use flatpak etc. which is a copy of Mac apps.
[18:40:53] <mdhughes> or Windows, where you give the user a directory full of junk and they try to find the binary.
[18:40:59] <dTal> I think you mean AppImage? Flatpak as I understand it is essentially a distro.
[18:41:39] <dTal> FYI, "directory full of junk" works on Linux too and is in fact the most common binary distribution method, used by Blender and Firefox etc
[18:42:00] <mdhughes> No, it's the same thing. Has more security options like a container, but you need those on Linux because it has no security.
[18:42:07] <dTal> It's not hard to find the binary - it's "blender" and "firefox" respectively :p
[18:43:02] <gwatt> which are usually somewhere in /usr/bin/ 
[18:43:23] <dTal> gwatt: I mean in the "big tarball" distribution method
[18:43:50] <dTal> I'm struggling to come up with compelling advantages to putting everything in a single file.
[18:44:10] <mdhughes> Right, you wouldn't normally distribute a Linux program as a ball of junk, without an install script/makefile to put it in 15 places.
[18:44:18] <dTal> Filesystems are already quite competent at managing heirarchical data.
[18:44:31] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[18:44:33] <mdhughes> You don't see how that's more convenient for installing, uninstalling, updating?
[18:44:34] <gwatt> Having everything in a single file is easy to move, easy to find, easy to distribute
[18:44:43] <gwatt> and easier to uninstall
[18:44:51] <dTal> mdhughes, you say that, but it's not true. Like I said - the most common distribution method is a tarball which you unpack and then just run the named binary.
[18:45:04] <dTal> You can unpack it into /opt if you want.
[18:45:11] <mdhughes> Yeah. On the Mac, you know you can drop an app in trash, look in Library/Application Support/Foo and drop that in trash, you're clean.
[18:45:25] <dTal> It's easy to move a whole directory around too.
[18:45:28] <gwatt> uh, that's probably not true. I would imagine the most common distribution method in linux is to use the package manager
[18:45:37] <mdhughes> ^
[18:45:43] <dTal> gwatt: outside the package manager, that is.
[18:46:28] <gwatt> I think flatpak / snap are gaining ground if not already moore popular than tarballs
[18:47:06] <dTal> Apart from Blender and Firefox, off the top of my head I can think of Julia, Mathematica, and SALOME.
[18:47:25] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[18:47:36] <mdhughes> I expect only the nerdiest of nerds ever tar, configure, make.
[18:47:43] <dTal> AppImages are just the same thing but with a single-file magic wand waved over it.
[18:47:46] <dTal> Oh, and Racket.
[18:48:07] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:209d:2106:a0ce:2fa2)
[18:48:14] <mdhughes> Firefox on Linux has packages, and a wizard-type installer last time I had to set it up.
[18:48:37] <dTal> It has packages but you can just download, unpack, run
[18:48:59] <dTal> Admittedly the mac-style "drag the icon to Applications" is cute
[18:49:12] *** Joins: aeth (~aeth@user/aeth)
[18:49:30] <dTal> but it doesn't really seem much different to me than "drag the contents of the tarball to /opt"
[18:50:14] *** Joins: klovett (~klovett@107.115.32.2)
[18:50:30] <gwatt> There's also the fact that you double-click the Whatever.app folder to run the program and don't have to grub around inside the parts to find the executable
[18:50:39] <mdhughes> And then you navigate thru a directory structure and guess at the binary (with no icon) to start it. As opposed to drag the app into Applications, click, there's no guessing game.
[18:51:14] <dTal> They do usually give you an icon in the tarball, but it's true, it's not a completely automated thing
[18:51:22] <mdhughes> If you live in terminal, you might not have known, programs often have easily-identifiable icons now!
[18:51:38] <dTal> it strikes me that there's enough convention there to make the Linux system as seamless as the Mac one
[18:52:25] <dTal> There's no need to condescend mdhughes, I do use a GUI ya know :p
[18:52:30] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:209d:2106:a0ce:2fa2) (Ping timeout: 268 seconds)
[18:52:56] <mdhughes> It is, it's called flatpak (or appimage, etc). There's a lot of problems with that, since no two Linux distros are compatible, but at least it's copying the right interface.
[18:53:15] <dTal> I've never had a problem with the tarball method.
[18:53:31] <mdhughes> Nobody normal wants to build source. And I don't want to give them source in many cases!
[18:53:39] <gwatt> I think flatpak isn't nearly as convenient as a user when compared to installing via package manager.
[18:53:43] <dTal> I've occasionally had misbehaving AppImages. I've also occasionally had misbehaving distro packages, and had to fetch the official tarball.
[18:53:50] <dTal> Oh, Cura, another one
[18:54:11] <dTal> flatpak is ew.
[18:54:29] <gwatt> for one, each flatpak (afaict) has it's own cgroup namespace and it's a PITA to give flatpaks access to your home directory
[18:54:46] <dTal> My preference order goes - distro package, official binary tarball, official AppImage, build from source
[18:54:59] <gwatt> and of course, running flatpaks requires `flatpak run fully.qualified.package.name`
[18:55:14] <dTal> yeah I don't know who thought I'd be thrilled by that system
[18:55:17] <gwatt> outside of .desktop files, that is
[18:55:27] <gwatt> I think flatpak is a better docker
[18:55:49] <dTal> Arduino, another one
[18:56:02] <gwatt> in that you can actually make incremental changes to your application and the base system independently without rebuilding a fully layered linux image
[18:56:41] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[19:02:18] <amazigh> I am not sure ruse-exe ubuntu binary release will work on mac, you would need to compile it on a mac.
[19:02:56] <amazigh> the advantage of ruse-exe, is that you can mv ruse-exe /usr/local/bin/ruse-exe and then use it from whereever you want
[19:03:20] <amazigh> my understanding is that chez-exe works only within the chez-exe .git but I may be mistaken
[19:03:32] <amazigh> s/.git/git repo/
[19:03:34] <gwatt> amazigh: chez-exe will work from anywhere
[19:03:40] <mdhughes> Right, but if the source is all Scheme you don't need to compile the compiler. Just needs a cc for the stubs, but finding libraries/headers is harder.
[19:03:43] <amazigh> oh then ruse-exe is useless
[19:04:14] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Remote host closed the connection)
[19:13:05] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Ping timeout: 252 seconds)
[19:13:24] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[19:15:57] <gwatt> chez-exe needs to know where the boot and object files are, but the executable itself can be anywhere
[19:17:14] <amazigh> what about the stubs.c, setup.h?
[19:18:03] <amazigh> those and other need to be around when calling cc.
[19:21:53] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:6875:9d65:d898:a509)
[19:21:53] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:6875:9d65:d898:a509) (Changing host)
[19:21:53] *** Joins: skapata (~Skapata@user/skapata)
[19:23:52] <gwatt> those are compiled into the object files
[19:40:46] *** Joins: fancycade (~fancycade@2600:1700:eec0:8e80:8639:beff:fe6a:1bb3)
[19:43:20] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Ping timeout: 252 seconds)
[19:48:36] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:55:00] *** Joins: mononote (~mononote@user/mononote)
[19:59:39] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[20:08:34] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:ebd1:d304:8195:da29) (Quit: WeeChat 2.8)
[20:10:38] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[20:15:42] *** Joins: livoreno (~livoreno@user/notzmv)
[20:18:17] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 256 seconds)
[20:27:41] *** Quits: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03) (Quit: Leaving)
[20:46:34] *** Joins: Inline (~Inline@aftr-37-201-240-43.unity-media.net)
[20:51:43] *** Quits: Inline (~Inline@aftr-37-201-240-43.unity-media.net) (Ping timeout: 256 seconds)
[20:55:37] *** Quits: torbjornsd (~torbjorns@213.158.35.13) (Ping timeout: 256 seconds)
[20:58:22] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[20:59:54] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (Remote host closed the connection)
[21:02:03] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[21:04:44] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[21:05:13] *** Joins: badkins (~badkins@136.56.92.199)
[21:05:42] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[21:09:41] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 252 seconds)
[21:17:31] *** Joins: wnklmnn (~wnklmnn@2a02:908:4e2:9740:13a7:8835:9f41:37f9)
[21:18:49] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:209d:2106:a0ce:2fa2)
[21:24:30] *** Joins: badkins (~badkins@136.56.92.199)
[21:26:44] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 252 seconds)
[21:27:41] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[21:37:28] <ecraven> amazigh: chez-exe is really nice, I've used it to create single binaries that I then moved to an entirely different machine (where chez isn't even installed), and everything works fine
[21:39:44] *** Joins: gerund (~user@dsl-lprbng12-54f9b9-129.dhcp.inet.fi)
[21:53:38] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[21:54:13] *** Joins: badkins (~badkins@136.56.92.199)
[21:55:20] *** Quits: torbjornsd (~torbjorns@213.158.35.13) (Ping timeout: 252 seconds)
[21:59:21] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[22:02:11] *** Joins: klovett_ (~klovett@107.115.32.2)
[22:02:39] *** Joins: jasonmason (~bc8165b6@cerf.good1.com)
[22:03:35] *** Quits: klovett (~klovett@107.115.32.2) (Ping timeout: 252 seconds)
[22:16:07] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[22:17:00] * amazigh is looking into fossil
[22:17:16] <Franciman> pretty cool
[22:17:17] <amazigh> the version control system
[22:18:12] <amazigh> Franciman: does it support importing git history into an existing fossil repo? Like merging several git repository into one?
[22:18:15] <amazigh> I guess I can try
[22:18:26] <Franciman> yes
[22:18:38] <Franciman> https://fossil-scm.org/home/doc/trunk/www/inout.wiki
[22:21:41] <amazigh> that is awesome
[22:34:01] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[22:36:03] *** Joins: aeth (~aeth@user/aeth)
[22:49:33] *** Joins: robin__ (~robin@user/terpri)
[22:50:55] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[22:52:11] <amazigh> making a fossil monorepo from many git repos is not supported
[22:52:46] <amazigh> I mean, you can like with git, import several repos into several fossil branches, but then, when trying to merge those it gently say no
[22:53:06] <amazigh> because their history is unrelated.../
[23:02:26] <Zipheir> Yeah, fossil has exactly one set of commits.
[23:02:33] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Quit: WeeChat 3.3)
[23:02:41] <Zipheir> Branches are just tags.
[23:02:50] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[23:06:06] <amazigh> I will copy all my code into a single fossil repository. It will easier to backup.
[23:10:26] <amazigh> Zipheir: I became op on the channel for the first time yesterday... but I did nothing of importance :)
[23:10:29] <amazigh> just for testing.
[23:10:53] <amazigh> what do you use to become an op and then devoice / unvoice someone?
[23:11:19] <amazigh> say, there is bot that is too much noisy or a spammer, it is preferable to remove the voice rights or kick them?
[23:13:16] <gwatt> unless the channel mode is set to only allow voiced people to talk it's probably better to kick
[23:13:38] <gwatt> I think the normal IRC indication for voice is a "+" in front of the name
[23:14:33] *** ChanServ sets mode: +o amazigh
[23:14:44] *** amazigh was kicked by amazigh (amazigh)
[23:14:49] *** Joins: amazigh (~amirouche@user/amirouche)
[23:14:57] <amazigh> ok I think I got it
[23:16:22] <amazigh> With weechat, the command I used are
[23:16:24] <amazigh>   /query chanserv op #scheme
[23:16:33] <amazigh>  /kick amazigh
[23:24:02] <sham1> gwatt: + is indeed what tends to be used
[23:36:29] *** robin__ is now known as robin
[23:36:52] <edgar-rft> + sould be used to subtract numbers, I'm sick of that old behaviour, it's too predictable
[23:37:11] *** Quits: klovett_ (~klovett@107.115.32.2) (Ping timeout: 256 seconds)
[23:38:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:5d0a:d7eb:30c:e02b)
[23:38:33] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:5d0a:d7eb:30c:e02b) (Changing host)
[23:38:33] *** Joins: skapata (~Skapata@user/skapata)
[23:38:58] <Zipheir> Mathematicians have been repurposing + for a long time now.
[23:40:01] <dpk> i noticed the other day that, to my knowledge, mathematicians haven't repurposed ϗ yet
[23:40:02] <Zipheir> amazigh: Yes, just kick intentional/unintentional spammers.
[23:40:54] <Zipheir> amazigh: In the past, I've left memos (MemoServ) for people who have been kicked while idle for e.g. join/quit spam.
[23:41:17] <Zipheir> "Sorry for the kick, please fix your bouncer", or some such.
[23:41:22] <dpk> til i can type digamma with my greek keyboard. ϝ (⌥W)
[23:41:52] <dpk> (= ⌥ς when in Greek mode)
[23:42:15] <Zipheir> dpk: You have a greek keyboard?
[23:42:40] <dpk> i have Mac OS set up with normal UK English, plus Polytonic Greek and ‘Devanagari (QWERTY)’ keyboard layouts
[23:42:50] <dpk> and an Old English one of my own creation
[23:43:51] <Zipheir> Ah, OK.
[23:44:11] <dpk> i recently discovered the useful feature that you can set the caps lock key to switch between your most recently used Latin and non-Latin keyboard layouts, making using these considerably more convenient
[23:48:35] <sham1> + can be used to subtract when you're in a modular ring
[23:55:35] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[23:56:02] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
