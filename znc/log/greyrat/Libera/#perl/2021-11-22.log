[00:00:50] <jdv> dha++
[00:01:43] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200DC6F86E7592E5C33.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[00:03:03] *** Joins: hudo__ (~hudo@62.68.19.39)
[00:04:35] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[00:04:39] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[00:06:00] *** Quits: EGD_ (~egd@user/egd) ()
[00:06:18] <aquanight> ... am I an idiot?
[00:06:33] <aquanight> or does dzil need something to understand .xs?
[00:06:50] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 246 seconds)
[00:07:26] <aquanight> sigh. a perldocing I go I guess because I apparently don't know what the eff I'm doing.
[00:19:40] <Grinnz> no but your installer plugin does
[00:20:08] <ehuelsmann[m]> I'd like to help the maintainer of JSON-schema-validator to fix CPANTESTERS failures, but he can't reproduce (as per https://github.com/skbkontur/perl-jsonschema-validator/issues/13#issuecomment-958663129)
[00:20:09] <Paperbot> Link title(s): [ Test failures on CPANTESTERS (v0.008) · Issue #13 · skbkontur/perl-jsonschema-validator · GitHub ]
[00:20:13] <aquanight> yeah I figured that would be the case
[00:20:21] <ehuelsmann[m]> Is there a way to get more information about the setup of test machines?
[00:21:45] <Grinnz> 1. use @Starter::Git 2. ask about the actual errors you're getting
[00:23:02] <Grinnz> ehuelsmann[m]: mostly just ask the owners of them or add diag/note output to the tests
[00:24:13] <ehuelsmann[m]> ok. the owners have handles. are those the CPAN/PAUSE handles?
[00:24:30] <Grinnz> usually
[00:24:32] <ehuelsmann[m]> in other words, should I simply mail OWNER@cpan.org?
[00:24:34] <ehuelsmann[m]> ok. 
[00:24:38] <ehuelsmann[m]> thanks!
[00:24:53] <Grinnz> bingos and srezic are easiest to contact
[00:25:21] <ehuelsmann[m]> ok. perfect. this is at least on one of the boxes run by srezic
[00:27:36] <aquanight> shiiiit it occurs to me I don't even have this shit setup in a git repo. That's annoying.
[00:27:37] *** Joins: xenial-user5 (~androirc@20014C4C17E1D200DC6F86E7592E5C33.catv.pool.telekom.hu)
[00:40:38] *** Quits: X-Scale (~ARM@83.223.249.106) (Ping timeout: 260 seconds)
[00:40:47] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[00:41:18] *** Quits: jjhoo (jahakala@user/jjhoo) (Remote host closed the connection)
[00:41:50] *** X-Scale` is now known as X-Scale
[00:42:44] <Adura> sweval: !!"1.#NAN" != "1.#NAN"
[00:42:45] <perlbot> Adura: 1
[00:43:30] *** Joins: jjhoo (~jahakala@user/jjhoo)
[00:46:46] *** Quits: defjam (~eb0t@90.198.60.224) (Ping timeout: 268 seconds)
[00:48:37] *** Joins: defjam (~eb0t@90.196.140.50)
[00:50:31] <aquanight> do I maybe have my directory structure wrong?
[00:50:45] <aquanight> O:P has it going lib/Object/Pad.{xs,pm} so I figured that was the way to do it.
[00:52:03] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:00:44] <aquanight> fucking hell. This shit absolute lawless wasteland of documentation is why I stuck to pure perl for so long. Like EU:MM's "basic directory layout" is all perl, nothing about XS.
[01:01:34] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 268 seconds)
[01:01:53] <aquanight> well part of why anyway
[01:03:43] <xenu> iirc with MakeMaker .xs files have to be in the main directory
[01:03:47] <xenu> unless you enable XSMULTI
[01:04:40] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[01:04:42] <aquanight> right... I hate that.
[01:04:48] <aquanight> I like how O:P does it.
[01:04:53] <xenu> well then enable XSMULTI
[01:08:35] <aquanight> or i just change dzil to ModuleBuild
[01:09:06] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 260 seconds)
[01:09:30] <haarg> ew
[01:10:11] <aquanight> maybe
[01:10:46] <aquanight> but right this moment I just need to get this to start building the xs so I can start fixing all the things I fucked up from just blind-monkey mashing code into vim and never even so much as seeing if it even compiles
[01:11:23] *** Quits: magla (~gelignite@55d4124a.access.ecotel.net) (Quit: Stay safe!)
[01:16:32] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[01:17:43] *** Joins: X-Scale` (~ARM@31.22.202.54)
[01:18:46] *** X-Scale` is now known as X-Scale
[01:20:18] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[01:21:45] *** Joins: monkey_ (~user@190.104.116.153)
[01:28:45] *** Quits: martinus__ (~martin@95.31.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[01:55:15] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200DC6F86E7592E5C33.catv.pool.telekom.hu) (Read error: Connection reset by peer)
[01:56:39] * GumbyPAN CPAN Upload: Apache2-Mogile-Dispatch-0.3 by JDEGUEST https://metacpan.org/release/JDEGUEST/Apache2-Mogile-Dispatch-0.3
[01:59:10] *** Joins: xenial-user5 (~androirc@20014C4C17E1D200DC6F86E7592E5C33.catv.pool.telekom.hu)
[02:00:32] *** Quits: bmodotdev (~bmo@user/bmodotdev) (Quit: Lost terminal)
[02:01:37] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:10:03] *** Joins: seand (~sean@69.54.142.196)
[02:11:41] *** Quits: seand (~sean@69.54.142.196) (Client Quit)
[02:12:11] *** Joins: seand (~seand@69.54.142.196)
[02:15:06] *** Quits: drbean (drbean@thinks.life.is-a.beauty) (Remote host closed the connection)
[02:16:41] *** Joins: Colt (~Colt@user/colt)
[02:26:27] *** Joins: drbean (drbean@thinks.life.is-a.beauty)
[02:33:55] *** Quits: pizdets (~pizdets@183.182.111.52) (Ping timeout: 256 seconds)
[02:33:58] *** Joins: pizdets_ (~pizdets@183.182.114.60)
[02:41:11] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200DC6F86E7592E5C33.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[02:51:57] *** Quits: zhmylove (~zhmylove@178.252.127.211) (Read error: Connection reset by peer)
[02:52:24] *** Joins: zhmylove (~zhmylove@178.252.127.211)
[02:58:39] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.3)
[03:06:54] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[03:11:53] *** Quits: Su-Shee (~Susanne@p4ffc7639.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:12:06] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:13:20] *** Joins: Su-Shee (~Susanne@p50894fb9.dip0.t-ipconnect.de)
[03:17:33] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[03:29:54] *** Joins: nica (~quassel@2603-6010-9105-4982-9e4e-8f2d-4f48-0133.res6.spectrum.com)
[03:47:03] *** Quits: nica (~quassel@2603-6010-9105-4982-9e4e-8f2d-4f48-0133.res6.spectrum.com) (Ping timeout: 250 seconds)
[03:51:51] * GumbyPAN CPAN Upload: AWS-Lambda-0.0.33 by SHOGO https://metacpan.org/release/SHOGO/AWS-Lambda-0.0.33
[03:54:02] *** Quits: jess (~jess@libera/staff/jess) ()
[03:54:19] <aquanight> object version 0.001 does not match bootstrap parameter 0.01 at /usr/lib/x86_64-linux-gnu/perl-base/DynaLoader.pm line 204
[03:54:22] <aquanight> what the christ is this
[03:55:59] <aquanight> oh bloody hell
[03:56:27] <aquanight> that's better
[03:57:27] <simcop2387> https://zachholman.com/posts/only-90s-developers/ for any old web devs.  a lot of really nice nostalgia
[03:57:28] <Paperbot> Link title(s): [ Only 90s Web Developers Remember This ]
[03:57:47] <aquanight> I'm not exactly clear how a '0.001' in the dist.ini got into the "object version" but that's a really weird frickin thing
[03:59:50] *** Parts: nicoz- (unixlab@user/nicoz) ()
[04:00:41] <aquanight> simcop2387: https://zachholman.com/posts/only-90s-developers/#:~:text=DHTML%2C%20which%20stands%20for ## I don't remember that being what DHTML stood for
[04:00:42] <Paperbot> Link title(s): [ Only 90s Web Developers Remember This ]
[04:01:04] <simcop2387> aquanight: the whole thing is full of little tidbits and corrections like that
[04:01:55] <aquanight> "optimized for internet exploder 4.0" oh those were the days
[04:03:51] <aquanight> how you know you're in deep on something: 20 tabs open across 3 windows, 17 of which are metacpan and probably 3 are duplicates
[04:05:16] <simcop2387> only 3?
[04:06:04] *** Quits: hudo__ (~hudo@62.68.19.39) (Quit: Leaving)
[04:16:09] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:21:34] <mmlj4> only 20 tabs? amateur
[04:22:50] <mmlj4> but I can tell you from experience that firefox really starts to bog down after you get 400 tabs open
[04:26:55] * GumbyPAN CPAN Upload: CAD-Mesh3D-0.004 by PETERCJ https://metacpan.org/release/PETERCJ/CAD-Mesh3D-0.004
[04:27:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:44:44] *** Joins: rgrinberg (~textual@201.192.183.53)
[04:46:57] * GumbyPAN CPAN Upload: Alt-Data-Frame-ButMore-0.0059_01 by SLOYD https://metacpan.org/release/SLOYD/Alt-Data-Frame-ButMore-0.0059_01
[04:50:45] *** Quits: jpmh (uid510532@id-510532.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:59:53] <aquanight> ok so when it comes to attributes and MODIFY_CODE_ATTRIBUTES ... is it better to push it into caller via Exporter or by @ISA ?
[05:02:22] <aquanight> I don't have a blood clue what the best way to do this is.
[05:02:45] <aquanight> I'm guessing I should do something like Attribute::Handlers or such
[05:10:46] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 260 seconds)
[05:21:39] <aquanight> sweval: our @q; sub MODIFY_CODE_ATTRIBUTES { my ($p, $c, @attr) = @_; push @q, [@attr]; return (); } sub test :Pure :Hello(xyz) {  } \@q;
[05:21:41] <perlbot> aquanight: [["Pure","Hello(xyz)"]]
[05:33:00] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[05:40:46] *** Joins: G_SabinoMullane (~G_SabinoM@c-73-57-253-123.hsd1.fl.comcast.net)
[05:42:37] *** Joins: pucara (~i@host207.181-14-157.telecom.net.ar)
[05:42:58] *** Joins: stanrifkin (~stanrifki@p200300dbcf4b3700fabea4d597b405bd.dip0.t-ipconnect.de)
[05:43:31] <stanrifkin> is there an command line source code beautifier like "indent" for C?
[05:43:58] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 260 seconds)
[05:45:00] <stanrifkin> i want just to reformat my code in vim with something like :%!indent-perl
[05:45:50] <aquanight> stanrifkin: perltidy
[05:46:39] <stanrifkin> aquanight: thank you
[05:47:03] * GumbyPAN CPAN Upload: Cookie-v0.1.4 by JDEGUEST https://metacpan.org/release/JDEGUEST/Cookie-v0.1.4
[05:50:44] *** Quits: stanrifkin (~stanrifki@p200300dbcf4b3700fabea4d597b405bd.dip0.t-ipconnect.de) (Quit: Leaving)
[05:51:50] <aquanight> >>Bizarre copy of ARRAY in list assignment at t/03-callable.t line 22. ## dammit
[05:53:05] *** Joins: whynot (~whynot@37.73.135.153)
[06:00:40] *** Quits: proller (~p@2a02:6b8:b081:8813::1:20) (Ping timeout: 268 seconds)
[06:03:27] <aquanight> hmm
[06:04:59] *** Quits: Su-Shee (~Susanne@p50894fb9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:06:08] *** Joins: Su-Shee (~Susanne@p50894316.dip0.t-ipconnect.de)
[06:08:23] *** Joins: aquanite (~aquanight@174-126-159-166.cpe.sparklight.net)
[06:08:43] <aquanite> oh I get it OP_CONST contains the actual array, not a reference to one
[06:08:47] <aquanite> weird
[06:08:56] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Killed (NickServ (GHOST command used by aquanite)))
[06:09:01] *** aquanite is now known as aquanight
[06:13:16] *** Joins: proller (~p@80.240.216.69)
[06:14:26] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[06:15:14] *** Quits: omegatron (~some@p5484903d.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:17:34] <aquanight> the hell do you mean undefined value as a subroutine reference
[06:21:08] <aquanight> well that was easy
[06:26:44] *** Joins: aquanite (~aquanight@174-126-159-166.cpe.sparklight.net)
[06:27:57] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 256 seconds)
[06:27:57] *** aquanite is now known as aquanight
[06:34:59] *** Quits: pucara (~i@host207.181-14-157.telecom.net.ar) (Quit: Lost terminal)
[06:42:55] <aquanight> LeoNerd: do you know if there's a public interface to S_traverse_op ?
[06:43:01] <aquanight> er
[06:43:05] <aquanight> S_traverse_op_tree that is
[06:43:25] <aquanight> doesn't look like there is
[06:47:10] * GumbyPAN CPAN Upload: Sisimai-v4.25.12 by AKXLIX https://metacpan.org/release/AKXLIX/Sisimai-v4.25.12
[06:53:26] *** Quits: rgrinberg (~textual@201.192.183.53) (Ping timeout: 260 seconds)
[06:59:51] <aquanight> oh hell
[07:00:13] <aquanight> rv2cv_op_cv apparently can't operate if the relevant op has been "optimized"
[07:00:34] <aquanight> it expects RV2CV><something>
[07:00:50] <aquanight> and apparently can't recognize the NULL>GV pair that it can optimize into
[07:01:15] <aquanight> this is bad because I want to be able to detect if a *completed* sub contains un-inlined calls
[07:01:24] <aquanight> I mainly want this for t/*.t purposes
[07:21:30] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[07:23:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[07:25:47] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:28:09] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[07:34:07] *** Joins: Colt2 (~Colt@ptr-1w23zewqpabrx5264q3.18120a2.ip6.access.telenet.be)
[07:34:07] *** Quits: Colt2 (~Colt@ptr-1w23zewqpabrx5264q3.18120a2.ip6.access.telenet.be) (Changing host)
[07:34:07] *** Joins: Colt2 (~Colt@user/colt)
[07:35:01] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 268 seconds)
[07:36:12] *** Quits: Colt2 (~Colt@user/colt) (Client Quit)
[07:37:01] *** Joins: Colt (~Colt@user/colt)
[07:45:45] *** Joins: PavelB (uid298625@id-298625.helmsley.irccloud.com)
[07:48:40] *** Joins: Martchus (~martchus@dynamic-077-004-023-245.77.4.pool.telefonica.de)
[07:48:42] <PavelB> Lets say I have a list of keys ('a', 'b', 'c') and a list of values (1, 2, 3), what's a good way to form them into a hash (a => 1, b => 2, c => 3)?
[07:48:58] *** Quits: Martchus_ (~martchus@2a01:c22:6e1a:e00:d250:99ff:fe49:3cce) (Ping timeout: 260 seconds)
[07:51:29] <aquanight> PavelB: @hash{ your_keys } = your_values
[07:51:49] <aquanight> assuming the relative order of key/value is correct
[07:51:49] <PavelB> Aw yeah I forgot that works
[07:52:07] <emanuele6> :q!
[07:52:15] <emanuele6> oops, sorry
[07:52:17] <emanuele6> wrong terminal
[07:54:26] *** Quits: jabberwok (~wlindley@75.105.20.104) (Quit: Leaving.)
[07:56:21] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:01:18] * GumbyPAN CPAN Upload: Crypt-Perl-0.37_03 by FELIPE https://metacpan.org/release/FELIPE/Crypt-Perl-0.37_03
[08:06:28] *** Joins: krismatrix (~krismatri@38.80.149.51)
[08:06:55] <krismatrix> Is there a web resource that can teach me how to format the .perltidyrc file and what options are available?
[08:12:59] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[08:15:07] *** Quits: whynot (~whynot@37.73.135.153) (Quit: leaving)
[08:15:25] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[08:21:18] <Grinnz> https://metacpan.org/pod/perltidy
[08:21:19] <Paperbot> Link title(s): [ perltidy - a perl script indenter and reformatter - metacpan.org ]
[08:21:28] <Grinnz> it is just all of the commandline options
[08:21:41] <Grinnz> my suggestion is to use the spelled out versions so you can tell what they mean
[08:33:38] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:4cbd:61c7:e4a0:2ac4) (Ping timeout: 246 seconds)
[08:38:17] *** Quits: defjam (~eb0t@90.196.140.50) (Ping timeout: 256 seconds)
[08:40:20] *** Joins: defjam (~eb0t@90.197.81.95)
[08:45:06] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:02:43] *** Joins: mixfix41 (~homefame@user/mixfix41)
[09:07:54] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 260 seconds)
[09:18:08] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[09:18:48] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[09:18:48] *** Quits: edf0_ (edef@panther.nathan7.eu) (*.net *.split)
[09:18:48] *** Quits: depesz (~quassel@lana.depesz.com) (*.net *.split)
[09:18:48] *** Quits: murrayn (~murray@user/murrayn) (*.net *.split)
[09:18:48] *** Quits: BinGOs (bitbucket@user/bingos) (*.net *.split)
[09:18:48] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[09:18:48] *** Quits: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru) (*.net *.split)
[09:18:48] *** Quits: huf (huf@user/huf) (*.net *.split)
[09:18:48] *** Quits: megaTherion (~therion@unix.io) (*.net *.split)
[09:18:48] *** Quits: greeb (~greeb@blahblahblah.anime.horse) (*.net *.split)
[09:18:48] *** Quits: gabiruh (~gabiruh@vps19177.publiccloud.com.br) (*.net *.split)
[09:18:59] *** Joins: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru)
[09:18:59] *** Joins: bingos (~bitbucket@user/bingos)
[09:19:01] *** Joins: edf0 (edef@panther.nathan7.eu)
[09:19:01] *** Joins: huf (huf@user/huf)
[09:19:06] *** Joins: depesz (~quassel@lana.depesz.com)
[09:19:17] *** Joins: gabiruh (~gabiruh@vps19177.publiccloud.com.br)
[09:19:31] *** Joins: greeb (~greeb@blahblahblah.anime.horse)
[09:20:09] *** Joins: bkhl (~bkhl@user/bkhl)
[09:21:36] *** Joins: murrayn (~murray@static.38.4.181.135.clients.your-server.de)
[09:24:59] *** Quits: castaway (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[09:24:59] *** Quits: corwin (someone@fosshost/director/corwin) (*.net *.split)
[09:24:59] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[09:24:59] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (*.net *.split)
[09:24:59] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (*.net *.split)
[09:24:59] *** Quits: nshp (hi@2600:3c03::f03c:91ff:fe2c:cd67) (*.net *.split)
[09:24:59] *** Quits: judabuda (kowbunga@user/judabuda) (*.net *.split)
[09:24:59] *** Quits: mteo (francis@user/francis) (*.net *.split)
[09:24:59] *** Quits: cooper (~mitchell@user/cooper) (*.net *.split)
[09:25:00] *** Quits: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host) (*.net *.split)
[09:25:00] *** Quits: Getty (getty@stardestroyer.de) (*.net *.split)
[09:25:00] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[09:25:00] *** Quits: gko (~user@user/gko) (*.net *.split)
[09:25:00] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[09:25:00] *** Quits: peder (4822@nidur.ifi.uio.no) (*.net *.split)
[09:25:00] *** Quits: dustinm`_ (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[09:25:00] *** Quits: jrayhawk (~jrayhawk@user/jrayhawk) (*.net *.split)
[09:25:00] *** Quits: torbjorn1 (~torbjorn@88.81-166-205.customer.lyse.net) (*.net *.split)
[09:25:00] *** Quits: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (*.net *.split)
[09:25:00] *** Quits: leosilva (~leosilva@canonical/leosilva) (*.net *.split)
[09:25:00] *** Quits: alh (~alh@hiddenrealms.org) (*.net *.split)
[09:25:00] *** Quits: ingy (~ingy@143.244.187.20) (*.net *.split)
[09:25:00] *** Quits: nicomen (~nicolas@178.124.223.35.bc.googleusercontent.com) (*.net *.split)
[09:25:00] *** Quits: jercos (~sage@xyl.be) (*.net *.split)
[09:25:00] *** Quits: jink (mrjink@chat.jink.net) (*.net *.split)
[09:25:00] *** Quits: bocaneri (~bismilah@about/linux/staff/sauvin) (*.net *.split)
[09:25:00] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[09:25:00] *** Quits: pierrot (~pi@user/pierrot) (*.net *.split)
[09:25:07] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[09:25:07] *** Joins: jercos (jercos@xyl.be)
[09:25:08] *** Joins: bocaneri (~bismilah@li889-61.members.linode.com)
[09:25:09] *** Joins: nshp (hi@2600:3c03::f03c:91ff:fe2c:cd67)
[09:25:11] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[09:25:11] *** Joins: Getty (getty@stardestroyer.de)
[09:25:20] *** Joins: torbjorn_ (~torbjorn@88.81-166-205.customer.lyse.net)
[09:25:24] *** Joins: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[09:25:31] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[09:25:34] *** Joins: cooper (~mitchell@205.185.116.128)
[09:25:41] *** Joins: mtj (quasselcor@2400:8902::f03c:91ff:fe93:b7f1)
[09:26:12] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[09:26:13] *** Joins: gko (~user@user/gko)
[09:26:27] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[09:26:28] *** Joins: skyl4rk (~tlvb@user/tlvb)
[09:26:37] *** Joins: corwin (someone@ghostwheel.bru.st)
[09:26:40] *** Quits: corwin (someone@ghostwheel.bru.st) (Changing host)
[09:26:40] *** Joins: corwin (someone@fosshost/director/corwin)
[09:26:53] *** Joins: pierrot (~pi@user/pierrot)
[09:26:58] *** Joins: alh (~alh@hiddenrealms.org)
[09:27:05] *** Joins: leosilva (~leosilva@canonical/leosilva)
[09:27:17] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[09:27:30] *** Joins: ingy (~ingy@143.244.187.20)
[09:28:03] *** Joins: megaTherion (~therion@unix.io)
[09:29:35] *** Joins: Ekho (~Ekho@user/ekho)
[09:30:11] *** Joins: nicomen (~nicolas@178.124.223.35.bc.googleusercontent.com)
[09:30:13] *** Joins: jink (mrjink@chat.jink.net)
[09:30:16] *** Joins: jrayhawk (~jrayhawk@user/jrayhawk)
[09:30:17] *** Joins: peder (4822@nidur.ifi.uio.no)
[09:30:20] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[09:30:22] *** Joins: castaway (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[09:37:13] *** Quits: G_SabinoMullane (~G_SabinoM@c-73-57-253-123.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[09:37:15] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[09:39:11] <ology> Grrr. https://metacpan.org/pod/RPi::WiringPi doesn't seem to work at all on my rpi4. Guess I'll have to plumb the depths and see where it goes sideways.
[09:39:13] <Paperbot> Link title(s): [ RPi::WiringPi - Perl interface to Raspberry Pi's board, GPIO, LCDs and other various items - meta... ]
[09:47:41] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:56:16] *** Quits: murrayn (~murray@static.38.4.181.135.clients.your-server.de) (Changing host)
[09:56:16] *** Joins: murrayn (~murray@user/murrayn)
[10:01:00] *** Joins: rgrinberg (~textual@201.192.183.136)
[10:06:31] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:07:48] *** Joins: rwp (~invalid@havoc.proulx.com)
[10:09:46] *** Joins: disconnect_me (~marcin@gl94-41.master.pl)
[10:11:04] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 260 seconds)
[10:14:43] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[10:19:06] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 245 seconds)
[10:23:03] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[10:23:42] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[10:24:46] *** Joins: diskin (~diskin@31.23.126.221)
[10:27:32] *** Quits: Su-Shee (~Susanne@p50894316.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:29:40] *** Joins: Su-Shee (~Susanne@p4ffc7a26.dip0.t-ipconnect.de)
[10:44:58] *** Joins: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi)
[10:47:46] *** Quits: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:48:13] *** Joins: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi)
[10:52:48] *** Quits: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[10:53:51] *** Joins: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi)
[10:54:16] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[10:54:16] *** Quits: diskin (~diskin@31.23.126.221) (Killed (sodium.libera.chat (Nickname regained by services)))
[10:54:16] *** diskin_ is now known as diskin
[10:55:05] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[10:56:15] *** Quits: randir (~randir@95-25-138-85.broadband.corbina.ru) (Remote host closed the connection)
[10:56:29] *** Quits: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:56:55] *** Joins: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi)
[10:58:40] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[10:59:02] *** Quits: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:59:33] *** Joins: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi)
[11:01:14] *** Quits: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:01:42] *** Joins: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi)
[11:01:56] *** Quits: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[11:02:13] *** Joins: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi)
[11:02:30] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[11:08:27] *** Quits: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:08:46] *** Joins: randir (~randir@93.159.239.42)
[11:08:54] *** Joins: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi)
[11:13:55] *** Quits: mattil (~mattil@dzd1hh8gmm9nr6v-zmz-4.rev.dnainternet.fi) (Ping timeout: 268 seconds)
[11:19:56] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 245 seconds)
[11:21:30] *** Joins: mattil (~mattil@dzd1hhgsx1h6yp38v5f-4.rev.dnainternet.fi)
[11:22:46] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[11:22:52] *** Quits: nrr__ (sid20938@id-20938.lymington.irccloud.com) (Ping timeout: 265 seconds)
[11:24:34] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[11:24:34] *** Joins: nrr__ (sid20938@id-20938.lymington.irccloud.com)
[11:24:56] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:27:01] *** Quits: mattil (~mattil@dzd1hhgsx1h6yp38v5f-4.rev.dnainternet.fi) (Ping timeout: 245 seconds)
[11:28:18] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[11:29:24] *** Joins: tobybl (~tobybl@213.31.134.21)
[11:41:41] * GumbyPAN CPAN Upload: API-Mathpix-0.01 by ERIAM https://metacpan.org/release/ERIAM/API-Mathpix-0.01
[11:44:51] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 264 seconds)
[11:50:14] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[11:57:04] <Botje> don't plumb the depths with your rpi. they hate wter
[12:00:33] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[12:00:48] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[12:06:36] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[12:07:45] *** Joins: Pali (~pali@user/pali)
[12:21:45] * GumbyPAN CPAN Upload: Business-Fixflo-0.46 by LEEJO https://metacpan.org/release/LEEJO/Business-Fixflo-0.46
[12:22:41] *** Quits: masticass (~gzc@host-85-201-176-158.dynamic.voo.be) (Ping timeout: 256 seconds)
[12:28:16] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 260 seconds)
[12:36:33] *** Quits: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[12:38:05] *** bingos is now known as BinGOs
[12:44:38] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[12:46:47] * GumbyPAN CPAN Upload: Mojo-mysql-1.25 by JHTHORSEN https://metacpan.org/release/JHTHORSEN/Mojo-mysql-1.25
[12:48:16] *** Quits: Penguin666x (~Penguin66@217.138.205.135) (Ping timeout: 268 seconds)
[12:51:20] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[12:56:48] * GumbyPAN CPAN Upload: Task-FreecellSolver-Testing-MultiConfig-0.0.5 by SHLOMIF https://metacpan.org/release/SHLOMIF/Task-FreecellSolver-Testing-MultiConfig-0.0.5
[12:57:32] *** Quits: NotAres (uid527990@user/notares) (Ping timeout: 240 seconds)
[12:57:40] *** Quits: itok_ (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[12:57:40] *** Quits: mjgardner (sid182628@id-182628.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[12:57:41] *** Joins: rgrinberg (~textual@201.192.183.136)
[12:57:59] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:58:08] *** Quits: perigrin (sid218253@id-218253.lymington.irccloud.com) (Ping timeout: 268 seconds)
[12:58:08] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:58:09] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 268 seconds)
[12:58:09] *** Quits: liam_ (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[12:58:28] *** Quits: ggherdov (sid11402@id-11402.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[12:58:34] *** Quits: mruszczyk (sid160336@id-160336.tinside.irccloud.com) (Ping timeout: 265 seconds)
[12:58:34] *** Quits: karjala (sid176588@id-176588.lymington.irccloud.com) (Ping timeout: 265 seconds)
[12:58:34] *** Quits: patterner_ (sid212303@id-212303.ilkley.irccloud.com) (Ping timeout: 265 seconds)
[12:58:34] *** Quits: rjbs (sid498898@id-498898.uxbridge.irccloud.com) (Ping timeout: 265 seconds)
[12:58:35] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (Ping timeout: 246 seconds)
[12:58:35] *** Quits: stephen87 (sid33834@user/stephen87) (Ping timeout: 246 seconds)
[12:58:35] *** Quits: timeless (sid4015@id-4015.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[12:58:35] *** Quits: Exodist (sid433366@id-433366.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:58:36] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:58:36] *** Quits: neilb___ (sid492745@id-492745.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[12:58:36] *** Quits: leont (sid489095@id-489095.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:58:41] *** Quits: nrr__ (sid20938@id-20938.lymington.irccloud.com) (Ping timeout: 245 seconds)
[12:58:45] *** Quits: kiwiroy (sid374179@id-374179.lymington.irccloud.com) (Ping timeout: 268 seconds)
[12:58:54] *** Quits: mjones (sid6844@id-6844.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[12:59:03] *** Quits: integral (sid296274@user/integral) (Ping timeout: 265 seconds)
[12:59:03] *** Quits: tag (sid271787@id-271787.lymington.irccloud.com) (Ping timeout: 265 seconds)
[12:59:11] *** Joins: Exodist (sid433366@hampstead.irccloud.com)
[12:59:11] *** Quits: kawaii_ (sid345572@id-345572.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: Mithaldu_ (sid27181@id-27181.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:59:16] *** Joins: toddr_ (sid457681@tinside.irccloud.com)
[12:59:17] *** Quits: genio (sid223130@id-223130.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[12:59:22] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Ping timeout: 268 seconds)
[12:59:22] *** Quits: Grinnz (sid183254@id-183254.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:59:22] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:59:23] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[12:59:32] *** Quits: Yaakov (sid19863@user/Yaakov) (Ping timeout: 240 seconds)
[12:59:32] *** Quits: toddr (sid457681@id-457681.tinside.irccloud.com) (Ping timeout: 265 seconds)
[12:59:32] *** Quits: skaji (sid178483@id-178483.tinside.irccloud.com) (Ping timeout: 265 seconds)
[12:59:32] *** Quits: davebaker_ (sid143727@id-143727.lymington.irccloud.com) (Ping timeout: 265 seconds)
[12:59:33] *** Quits: PavelB (uid298625@id-298625.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[12:59:34] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:59:38] *** toddr_ is now known as toddr
[12:59:44] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[12:59:47] *** Quits: ranguard (sid496095@id-496095.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:59:47] *** Quits: mstevens (sid285816@id-285816.tinside.irccloud.com) (Ping timeout: 264 seconds)
[12:59:47] *** Quits: TBSliver (sid321952@id-321952.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:59:59] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[13:00:01] *** Quits: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com) (Ping timeout: 265 seconds)
[13:00:02] *** Joins: kawaii_ (sid345572@hampstead.irccloud.com)
[13:00:16] *** Joins: odc (sid197788@helmsley.irccloud.com)
[13:00:18] *** Joins: Yaakov (sid19863@user/Yaakov)
[13:00:18] *** Joins: ggherdov (sid11402@helmsley.irccloud.com)
[13:00:21] *** Joins: mruszczyk (sid160336@tinside.irccloud.com)
[13:00:24] *** Joins: tag (sid271787@lymington.irccloud.com)
[13:00:39] *** Joins: mstevens (sid285816@tinside.irccloud.com)
[13:00:40] *** Joins: Bodger1234_ (sid503511@uxbridge.irccloud.com)
[13:00:44] *** Joins: liam_ (sid7517@helmsley.irccloud.com)
[13:00:49] *** Joins: TBSliver (sid321952@hampstead.irccloud.com)
[13:01:42] *** Joins: patterner_ (sid212303@ilkley.irccloud.com)
[13:01:45] *** Joins: timeless (sid4015@ilkley.irccloud.com)
[13:01:47] *** Joins: leont (sid489095@uxbridge.irccloud.com)
[13:01:47] *** Joins: genio (sid223130@ilkley.irccloud.com)
[13:01:48] *** Joins: bn_work (uid268505@uxbridge.irccloud.com)
[13:01:49] *** Joins: rjbs (sid498898@uxbridge.irccloud.com)
[13:01:49] *** Joins: nrr__ (sid20938@lymington.irccloud.com)
[13:01:59] *** Joins: davebaker_ (sid143727@lymington.irccloud.com)
[13:02:02] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 240 seconds)
[13:02:27] *** Joins: Mithaldu_ (sid27181@hampstead.irccloud.com)
[13:02:47] *** Joins: pjlsergeant (sid143467@hampstead.irccloud.com)
[13:02:48] *** Joins: pwillard (sid136981@hampstead.irccloud.com)
[13:02:54] *** Joins: Grinnz (sid183254@hampstead.irccloud.com)
[13:02:59] *** Joins: jakesyl_ (sid56879@hampstead.irccloud.com)
[13:03:12] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[13:03:18] *** Joins: kiwiroy (sid374179@lymington.irccloud.com)
[13:03:23] *** Joins: stephen87 (sid33834@user/stephen87)
[13:03:26] *** Joins: mjones (sid6844@helmsley.irccloud.com)
[13:03:56] *** Joins: ranguard (sid496095@lymington.irccloud.com)
[13:04:00] *** Joins: PavelB (uid298625@helmsley.irccloud.com)
[13:04:07] *** Joins: skaji (sid178483@tinside.irccloud.com)
[13:04:52] *** Joins: sa (sid1055@tinside.irccloud.com)
[13:04:53] *** Joins: BlueShark (sid10311@user/blueshark)
[13:05:03] *** Joins: integral (sid296274@user/integral)
[13:05:14] *** Joins: NotAres (uid527990@user/notares)
[13:05:46] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[13:07:46] *** Quits: BlueShark (sid10311@user/blueshark) (Max SendQ exceeded)
[13:07:55] *** Quits: jakesyl_ (sid56879@hampstead.irccloud.com) (Max SendQ exceeded)
[13:08:05] *** Joins: BlueShark (sid10311@user/blueshark)
[13:08:20] *** Joins: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com)
[13:12:16] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[13:12:36] *** Joins: mjgardner (sid182628@id-182628.ilkley.irccloud.com)
[13:12:39] *** Joins: perigrin (sid218253@id-218253.lymington.irccloud.com)
[13:12:53] *** Joins: itok_ (sid418430@id-418430.ilkley.irccloud.com)
[13:12:53] *** Quits: hethw (~heth@46.238.32.56) (Quit: Leaving)
[13:13:38] *** Joins: neilb___ (sid492745@id-492745.ilkley.irccloud.com)
[13:13:44] *** Joins: karjala (sid176588@id-176588.lymington.irccloud.com)
[13:26:04] *** Quits: seand (~seand@69.54.142.196) (Quit: Leaving)
[13:38:23] <Altreus> \o/
[13:46:39] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 264 seconds)
[13:47:44] *** Joins: rgrinberg (~textual@201.192.183.136)
[13:50:11] *** Joins: xse (~xse@user/xse)
[13:55:43] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:990:f1e:8987:d5f9)
[13:58:03] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 264 seconds)
[13:59:11] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7816:2c69:3dcc:933a) (Ping timeout: 264 seconds)
[14:02:04] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:e931:44b2:abc5:155b)
[14:04:54] *** ircuser is now known as merpaderp
[14:05:51] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:990:f1e:8987:d5f9) (Ping timeout: 264 seconds)
[14:13:55] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:29bf:5ae9:f17:83c0)
[14:17:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:e931:44b2:abc5:155b) (Ping timeout: 245 seconds)
[14:30:20] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[14:43:19] *** Joins: rgrinberg (~textual@201.192.183.136)
[14:47:39] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 250 seconds)
[14:49:03] *** Joins: rgrinberg (~textual@201.192.183.136)
[14:50:34] *** Joins: ufobat (~martin@dynamic-077-002-053-248.77.2.pool.telefonica.de)
[14:50:41] *** Quits: ufobat (~martin@dynamic-077-002-053-248.77.2.pool.telefonica.de) (Client Quit)
[14:50:56] *** Joins: G_SabinoMullane (~G_SabinoM@c-73-57-253-123.hsd1.fl.comcast.net)
[14:53:16] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 245 seconds)
[15:04:38] *** Joins: randir_ (~randir@93.159.239.42)
[15:04:38] *** Quits: randir (~randir@93.159.239.42) (Read error: Connection reset by peer)
[15:05:17] *** Quits: PavelB (uid298625@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:05:45] <Ovid> Is there a clean way for a module to know if it's been loaded via `use` or `require`? I could check if `"START" eq ${^GLOBAL_PHASE}`, but that fails if I've been required in a `BEGIN` block.
[15:06:11] <Altreus> This sounds like an XY problem
[15:06:57] *** Joins: X-Scale` (~ARM@31.22.202.54)
[15:07:15] <Altreus> If you were new here I'd be wanting to know why that matters - I'm pretty sure you can't tell the difference between use vs BEGIN { require; import; }
[15:08:05] <Altreus> oh you mean whether you are currently being use'd or require'd
[15:08:16] *** Quits: X-Scale (~ARM@31.22.202.54) (Ping timeout: 268 seconds)
[15:08:21] *** X-Scale` is now known as X-Scale
[15:09:05] <Altreus> Ovid: perldoc says use is exactly equivalent to BEGIN { require Module; Module->import( LIST ); }
[15:09:14] <Altreus> so the reason you can't tell the difference is there isn't one
[15:09:21] <Ovid> Client has some modules which must be required, never used. Their toolchain is built around this assumption.
[15:09:53] <Altreus> ^GLOBAL_PHASE sounds like the correct semantics then
[15:10:08] <Altreus> Cos the fundamental differences are a) BEGIN and b) import
[15:10:27] <Ovid> Fair enough. Thanks, Altreus.
[15:14:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:5cca:96d9:7234:6761)
[15:17:51] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:29bf:5ae9:f17:83c0) (Ping timeout: 245 seconds)
[15:20:25] *** Joins: art1 (~romeyke@p200300ccdf08a7000cd845cc2f0795e7.dip0.t-ipconnect.de)
[15:21:19] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:22:05] *** Joins: csrf (~csrf@user/csrf)
[15:35:13] *** Joins: proller (~p@2a02:6b8:b081:a404::1:c)
[15:40:57] *** Quits: blinky42 (~quassel@user/blinky42) (Ping timeout: 268 seconds)
[15:41:27] *** Quits: PlayerOne (~PlayerOne@user/playerone) (Quit: Client closed)
[15:43:39] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 264 seconds)
[15:47:46] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[15:50:11] *** Joins: rgrinberg (~textual@201.192.183.136)
[15:53:03] *** Joins: masticass (~gzc@host-85-201-222-202.dynamic.voo.be)
[15:54:49] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 250 seconds)
[15:56:15] *** Quits: proller (~p@2a02:6b8:b081:a404::1:c) (Ping timeout: 264 seconds)
[16:01:22] <simcop2387> playing with iscsi this morning and might need to power down main server to restart the secondary if it doesn't do it on it's own here in a moment
[16:01:29] <simcop2387> stupid acpi
[16:04:15] <Altreus> quick, while it's quiet
[16:10:31] <LeoNerd> Mods are asleep, post.. er... powercycle commands?
[16:14:12] <simcop2387> didn't need to, it FINALLY rebooted.
[16:14:24] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[16:19:13] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Changing host)
[16:19:13] *** Joins: judabuda (kowbunga@user/judabuda)
[16:20:41] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 256 seconds)
[16:21:25] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:22:15] <simcop2387> sweet, now i have iscsi from my big server onto my proxmox server.  now i just need another 10G switch and 10G card for the proxmox server to be able to use it reasonably.  plan is https://www.amazon.com/gp/product/B07NFXN4SS/ for the switch and some https://www.amazon.com/10G-SFP-DAC-Cable-SFP-H10GB-CU2M/dp/B09FJG97FM/ to connect things around between my 24 port switch and the new one.  going to
[16:22:18] <Paperbot> Link title(s): [ Amazon.com: MikroTik 9-Port Desktop Switch, 1 Gigabit Ethernet Port, 8 SFP+ 10Gbps Ports (CRS309-... ] [ Amazon.com: #10Gtek# SFP+ DAC Twinax Cable, Passive, Compatible with Cisco SFP-H10GB-CU0.3M, Ubiq... ]
[16:22:21] <simcop2387> do LACP stuff to get a 20G link between them and then 10G to the servers and rest of the place
[16:26:17] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[16:27:15] *** Quits: phenom (~primus@user/phenom) (Quit: See ya! Wouldn't want to blah blah..)
[16:28:04] *** Joins: phenom (~primus@user/phenom)
[16:28:45] <aquanight> LeoNerd: why must rv2cv_op_cv be such a jerk :(
[16:30:41] <simcop2387> aquanight: because you didn't say the magic words
[16:31:26] <aquanight> said magic words apparently being "un-peephole this opcode and switch PL_curpad to the sub containing it"
[16:35:27] *** Joins: rgrinberg (~textual@201.192.183.136)
[16:37:26] *** Quits: Linux77 (~Linux7_7@186.233.179.193) (Remote host closed the connection)
[16:37:44] *** Joins: Linux77 (~Linux7_7@186.233.179.193)
[16:40:39] *** Joins: pucara (~i@host207.181-14-157.telecom.net.ar)
[16:41:39] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[16:45:42] *** Joins: tobybl_ (~tobybl@213.31.134.21)
[16:45:44] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 265 seconds)
[16:47:51] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 264 seconds)
[16:53:21] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:53:41] *** Joins: proller (~p@2a02:6b8:0:40c:7e34:b469:2593:da6e)
[16:56:23] *** Joins: jabberwok (~wlindley@75.105.20.104)
[16:57:13] * GumbyPAN CPAN Upload: WebService-Mailgun-0.13 by MIKIHOSHI https://metacpan.org/release/MIKIHOSHI/WebService-Mailgun-0.13
[16:58:07] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Quit: What is Hope? That all of your wishes and all of your dreams come true? To turn back time because things were not supposed to happen like that (C) Rau Le Creuset)
[16:59:55] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[17:02:57] *** Quits: edef (~edef@user/edef) (Remote host closed the connection)
[17:04:10] *** Joins: edef (~edef@user/edef)
[17:08:13] *** Joins: rgrinberg (~textual@201.192.183.136)
[17:20:12] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[17:24:03] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:24:06] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[17:30:53] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:31:25] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:32:05] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:32:18] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:32:26] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:35:21] *** Quits: proller (~p@2a02:6b8:0:40c:7e34:b469:2593:da6e) (Ping timeout: 250 seconds)
[17:36:09] *** Quits: xse (~xse@user/xse) (Quit: Client closed)
[17:40:18] *** Joins: mattil (~mattil@dzd1hjyd0zkwj5wgrwk-4.rev.dnainternet.fi)
[17:40:42] *** Joins: omegatron (~some@p54bd5e02.dip0.t-ipconnect.de)
[17:41:18] * GumbyPAN CPAN Upload: Alt-Data-Frame-ButMore-0.0060 by SLOYD https://metacpan.org/release/SLOYD/Alt-Data-Frame-ButMore-0.0060
[17:44:51] *** Quits: mattil (~mattil@dzd1hjyd0zkwj5wgrwk-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:45:03] *** Quits: judabuda (kowbunga@user/judabuda) (Quit: Gone.)
[17:46:18] * GumbyPAN CPAN Upload: App-perlbrew-0.93 by GUGOD https://metacpan.org/release/GUGOD/App-perlbrew-0.93
[17:47:32] *** Joins: mattil (~mattil@dzd1hjyd0zkwj5wgrwk-4.rev.dnainternet.fi)
[17:47:35] *** Joins: proller (~p@2a02:6b8:0:40c:c7f:13d7:c631:f2f1)
[17:47:53] *** Quits: mattil (~mattil@dzd1hjyd0zkwj5wgrwk-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:50:09] *** Joins: mattil (~mattil@dzd1hjyd0zkwj5wgrwk-4.rev.dnainternet.fi)
[17:56:49] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[18:02:23] *** Quits: mattil (~mattil@dzd1hjyd0zkwj5wgrwk-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:09:31] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 245 seconds)
[18:19:09] *** Joins: mattil (~mattil@87-92-90-94.bb.dnainternet.fi)
[18:23:51] *** Quits: mattil (~mattil@87-92-90-94.bb.dnainternet.fi) (Ping timeout: 264 seconds)
[18:25:21] *** Joins: mattil (~mattil@87-92-90-94.bb.dnainternet.fi)
[18:27:00] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:28:30] *** Quits: mattil (~mattil@87-92-90-94.bb.dnainternet.fi) (Read error: Connection reset by peer)
[18:29:02] *** Quits: fuzzix (~fuzzix@46.7.53.110) (Ping timeout: 240 seconds)
[18:31:31] <Mandevil> Hm, when I do s/blabla$/something/ the EOL gets dropped... how can I preserve it correctly?
[18:32:26] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 245 seconds)
[18:32:37] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[18:33:23] <alh> Err, it does?
[18:33:49] *** Parts: disconnect_me (~marcin@gl94-41.master.pl) ()
[18:33:54] <Mandevil> It somehow does.
[18:34:00] <Mandevil> Maybe I'm doing something wrong.
[18:34:00] <alh> Can you show a sample?
[18:34:41] <Mandevil> https://l.perl.bot/p/yjjezw
[18:34:42] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[18:35:02] <Mandevil> See how the two latter lines get smushed together?
[18:36:37] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:37:48] <simcop2387> Mandevil: put an eol in the replacement
[18:38:02] <revhippie> and maybe drop the -n
[18:38:33] <Mandevil> simcop2387: But why...?
[18:38:54] <Mandevil> It really chomps the newline?
[18:39:06] <choroba> Never seen -n used together with -p
[18:39:36] <Mandevil> It doesn't change anything anyway.
[18:39:41] <alh> Yeah something is up with your input
[18:39:47] <alh> Because $ doesn't take away EOL
[18:39:56] <Mandevil> This works fine: echo -e "line1\nline2\nline3" | perl -pe 's/line2$/LINEB/'
[18:40:02] <choroba> mswin line ends?
[18:40:11] <Mandevil> I checked, they are all 0x0a
[18:40:15] <Mandevil> Ie. unix LF
[18:40:45] <revhippie> \s+ is eating the newline, and $ is becoming "end of line" instead of "before newline at end of line"
[18:40:47] <Botje> Mandevil: ahem. \s matches \n
[18:40:57] <alh> Ah yes
[18:41:00] <simcop2387> basheval: echo -e "line1\nline2\nline3" | perl -pe 's/line2$/LINEB/'
[18:41:01] <perlbot> simcop2387: line1␤LINEB␤line3␤
[18:41:04] <Mandevil> https://l.perl.bot/p/2aa4ku
[18:41:05] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[18:41:14] <simcop2387> basheval: echo -e "line1\nline2\nline3" | perl -npe 's/line2$/LINEB/'
[18:41:16] <perlbot> simcop2387: line1␤LINEB␤line3␤
[18:41:56] <Mandevil> Botje: \s matches \n even when I am matching single lines?
[18:42:08] <Mandevil> Botje: I thought it only does it with m modifier?
[18:42:18] <simcop2387> m cvhanges .
[18:42:22] <Mandevil> Ah
[18:42:30] <Mandevil> So what's the proper way to do this?
[18:42:38] <Mandevil> Ie match whitespace but not \n?
[18:43:01] <revhippie> \h is "horizontal whitespace"
[18:43:05] <simcop2387> sadly \n is white space.  not sure
[18:43:08] <simcop2387> ah \h
[18:43:20] <Altreus> [\s[^\n]] ?
[18:43:27] <Mandevil> Yeah, \h works!
[18:43:31] <Altreus> oh nice
[18:43:44] <Mandevil> Never heard of \h ... #til
[18:43:46] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[18:43:49] <Mandevil> Thanks revhippie 
[18:43:51] <simcop2387> Mandevil: that'll also avoid vertical tabs too then
[18:43:59] <Mandevil> simcop2387: That's fine :)
[18:44:06] <Mandevil> simcop2387: Those don't appear in router configs
[18:44:19] <simcop2387> sesriously those are a thing.  never seen them in reality
[18:44:36] <revhippie> i wonder if \h matches 0x0d
[18:45:03] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[18:45:10] <simcop2387> eval: "\x0d" =~ /\h/
[18:45:12] <perlbot> simcop2387: No output.
[18:48:59] <choroba> simcop2387: Also, /m changes ^ and $. /s changes the dot.
[18:49:17] <simcop2387> choroba: i always get them backwards
[18:49:36] <choroba> s = single thing, m = multiple things. That's how I remember them.
[18:50:11] <simcop2387> thats how the named were chosen too but it doesnt see, to help
[18:51:02] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 240 seconds)
[18:51:16] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[18:51:25] * GumbyPAN CPAN Upload: Mojolicious-Plugin-AutoRoutePm-0.22 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-AutoRoutePm-0.22
[18:52:01] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 245 seconds)
[18:52:05] <aquanight> perlbot: sweval [scalar map { $_ * 2 } 1..5]
[18:52:06] <perlbot> aquanight: [5]
[18:52:18] *** Joins: mattil (~mattil@87-92-90-94.bb.dnainternet.fi)
[18:53:06] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:53:28] <choroba> perlbot: sweval [scalar map $_ * 2, 0 .. 5]
[18:53:29] <perlbot> choroba: [6]
[18:54:12] <choroba> perlbot: sweval [scalar grep $_ * 2, 0 .. 5]
[18:54:13] <perlbot> choroba: [5]
[18:55:25] *** Joins: mixfix41 (~homefame@user/mixfix41)
[18:55:39] <Botje> simcop2387: shift-enter in powerpoint produces a vtab
[18:56:03] *** Quits: randir_ (~randir@93.159.239.42) (Remote host closed the connection)
[18:56:19] <simcop2387> Botje: what fresh hell did you emcounter to learn that
[18:56:36] *** Quits: mattil (~mattil@87-92-90-94.bb.dnainternet.fi) (Ping timeout: 245 seconds)
[18:57:09] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:58:19] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[19:00:48] <Altreus> > powerpoint
[19:01:55] <Botje> copy-pasting Kubernetes manifests into a training presentation. 
[19:01:55] <Botje> either a jumbled mess or tons of whitespace inbetween lines.
[19:01:55] <Botje> got tired of doing the delete-shift+enter dance
[19:06:38] *** Joins: hethw (~heth@46.238.32.56)
[19:28:21] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[19:30:01] <aquanight> sweval: sub foo { 1..10 }; [() = foo]
[19:30:02] <perlbot> aquanight: []
[19:30:15] <aquanight> .
[19:32:43] <aquanight> are you freaking kidding me
[19:34:01] <aquanight> sweval: sub foo { 1..10 }; [(my @z) = foo]
[19:34:03] <perlbot> aquanight: [1,2,3,4,5,6,7,8,9,10]
[19:34:11] <aquanight> oh fucking of course
[19:34:16] <aquanight> sweval: sub foo { 1..10 }; [(my $z) = foo]
[19:34:17] <perlbot> aquanight: [1]
[19:34:40] <aquanight> well that just isn't going to frickin work then.
[19:36:41] <gordonfish> sweval: sub foo { 1..10 }; [(my $z, local @_) = foo];
[19:36:43] <perlbot> gordonfish: [1,2,3,4,5,6,7,8,9,10]
[19:36:49] <aquanight> looks like I'll need to find a different operator to do what I'm after
[19:37:56] <aquanight> please tell me I don't have to do this with RV2AV > ANONLIST instead
[19:38:40] *** Quits: rgrinberg (~textual@201.192.183.136) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:38:51] <aquanight> what would be nice is to do that, come back around during peephole when I now it whether it's scalar or list, rewrite it as NULL > AASSIGN or just null both out
[19:38:53] <gordonfish> sweval: sub foo { 1..10 }; [(my $z, []->@*) = foo]
[19:38:54] <perlbot> gordonfish: [1,2,3,4,5,6,7,8,9,10]
[19:39:10] <aquanight> I mean
[19:39:13] <aquanight> yeah I could do *that*
[19:39:36] *** Joins: Guest112222 (~Guest1122@84-238-170-30.ip.btc-net.bg)
[19:39:44] <aquanight> hell in that case I don't even need ANONLIST, I could just embed a random AV with OP_CONST
[19:40:09] <aquanight> the deparse will be fucked up
[19:41:13] <alh> What are you trying to do
[19:42:54] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[19:42:56] *** Joins: randir (~randir@95-25-138-85.broadband.corbina.ru)
[19:43:43] <aquanight> alh: force a given subroutine call to execute with list context regardless of its surrounding context
[19:44:09] <aquanight> (in the event it's actually called in scalar context, the final result hsould be "number of items returned")
[19:44:18] *** Joins: ozzzo_home (~ozzzo_hom@h87.s239.verisign.com)
[19:44:28] <aquanight> the catch: this is happening during call checker so I know nothing about the expression it's about to be put into
[19:44:42] <ozzzo_home> I'm running a command like this: my @create_result_array = `$create_command`;
[19:44:44] <aquanight> and also I know nothing about the sub itself so I can't just go rewriting its return statements
[19:44:59] <ozzzo_home> What's the best way to capture errors?
[19:45:23] <aquanight> ozzzo_home: https://metacpan.org/pod/IPC::Open3
[19:45:23] <Paperbot> Link title(s): [ IPC::Open3 - open a process for reading, writing, and error handling using open3() - metacpan.org ]
[19:45:28] <gordonfish> IPC::Open3
[19:45:34] <gordonfish> Bah too slow
[19:46:34] <aquanight> alh: I was originally hoping I could wrap the ENTERSUB op into AASSIGN (list assignment), which gets the correct "scalar" behavior
[19:46:46] <aquanight> but now the "list" behavior is fucked because of course aassign returns an empty frickin list
[19:46:59] <alh> heh
[19:47:22] <aquanight> so I either need to embed a throwaway list so that aassign returns everything like I want
[19:47:25] <alh> Couldn't you muck with its gimme and call it a day?
[19:47:46] <aquanight> I don't think it's safe to make it G_ARRAY when it's still really a list
[19:47:52] <aquanight> if only because of PUSHMARKs
[19:47:55] <gordonfish> aquanight: So.. you want a sub that always thinks it's in list context but you want it to return the number of items when it is in scalar context?
[19:48:01] <alh> mmm
[19:48:22] <aquanight> gordonfish: effectively yes. The translation is to happen "outside" the sub. The sub itself never needs to know.
[19:48:39] <gordonfish> Oh
[19:48:40] <aquanight> gordonfish: literally, wantarray/caller/etc even will still claim it's a list
[19:48:56] <aquanight> gordonfish: the reason I'm doing this is part of my attempt at :Pure/:PureList
[19:49:18] <gordonfish> Then how would you be able to detect if it was in scalar context in order to return the number of items?
[19:49:18] <aquanight> I have to basically decide by choice of attribute whether the sub is "scalar" or "list" because at call checker I *do not know* what expression it will go into.
[19:49:36] <aquanight> gordonfish: that was where OP_AASSIGN was meant to help
[19:49:52] <aquanight> by wrapping the sub in OP_AASSIGN, the expression context would apply to AASSIGN and it would theoretically do the right thing
[19:50:00] <aquanight> except it does the right thing in only one half
[19:50:23] <aquanight> basically rewriting some_random_sub(stuff) into ()=some_Random_sub(stuff)
[19:50:29] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:50:39] <aquanight> if the expression is ultimately scalar context this does the right thing (sub calls in list and I get the number of items)
[19:50:48] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:84c2:1e6a:e7be:3a11)
[19:50:50] <aquanight> problem is aassign tossing the list because it returns the assign*ee*
[19:51:11] <aquanight> my next alternative is to instead wrap it in RV2AV > ANONLIST
[19:51:16] <aquanight> aka @{ [ ... ] }
[19:51:24] <LeoNerd> Have you thought of just making a new op type?
[19:51:30] <aquanight> this will do the right thing in both contexts but I don't like being forced to allocate
[19:51:49] <aquanight> LeoNerd: considering how much goes into that, I'm considering that my "weapon of last resort"
[19:51:51] <LeoNerd> Make a "list or count" op, that returns the list itself in list context, or a count of it in scalar
[19:51:59] <LeoNerd> It's tiny.. it's about 10 lines of code
[19:52:03] <aquanight> LeoNerd: so far, I've managed to avoid breaking deparse, for example.
[19:52:07] <LeoNerd> Bah
[19:52:17] <LeoNerd> Deparse breaks if you sneeze at it the wrong way. I wouldn't worry
[19:52:23] <LeoNerd> Almost /everything/ I make breaks it
[19:52:41] <LeoNerd> Besides, a lot of simpler things are actually quite easy to hack back in
[19:54:36] <gordonfish> sweval: sub foo { return my @x = 1..10 }; [ [foo], [scalar foo] ];
[19:54:37] <perlbot> gordonfish: [[1,2,3,4,5,6,7,8,9,10],[10]]
[19:55:08] *** Joins: gryzli (~gryzli@84-238-170-30.ip.btc-net.bg)
[19:55:09] <LeoNerd> 1..N is a terrible test for that, because you can't distinguish "final value" from "count of elements"
[19:55:14] <LeoNerd> I usually demonstrate with 'a'..'e'
[19:55:20] <LeoNerd> So you can tell 'e' vs 5
[19:55:24] *** Joins: ratagin (~ratagin@208.96.144.68)
[19:55:55] <aquanight> .... and now I have to rewrite 4 different tests where my dumbass did exactly that.
[19:56:02] <aquanight> but to be fair
[19:56:05] <gordonfish> LeoNerd: Yep, I had to double check that
[19:56:24] <gordonfish> sweval: sub foo { return my @x = 'a'..'e'; } [ [foo], [scalar foo] ];
[19:56:25] <perlbot> gordonfish: [["a","b","c","d","e"],[5]]
[19:56:26] <aquanight> my test case is { 1 .. shift }
[19:56:57] <aquanight> specifically thinking that if it runs in scalar context with an explicit $. = 0 I would get a false rather than anything from the list at all
[19:57:32] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[19:58:10] <aquanight> oh bloody hell ANONLIST is a listop.
[19:58:21] * gordonfish mind blown
[19:58:39] <aquanight> I mean yes
[19:58:48] <aquanight> it's just that those are a pain in the butt compared to other ops
[19:59:03] <aquanight> because instead of just newWHATEVEROP(OP_THING, 0, param)
[19:59:14] <aquanight> it's this big song and dance with op_append_elem and op_convert_list and stuff
[19:59:27] <gordonfish> Ah yes
[19:59:33] <LeoNerd> Making listops is nontrivial, yah..
[19:59:39] <LeoNerd> At least, listops with more than just a single thing in them
[20:00:14] <aquanight> and trying to puzzle out newLISTOP I'm not sure when I need to put in a PUSHMARK myself or not.
[20:00:15] <LeoNerd> If it's just one thing you can get away with  newLISTOP(OP_WHATEVER, flags, newOP(OP_PUSHMARK, 0), thing)
[20:00:46] <aquanight> because I discovered the SEGV way that when it's OP_LIST it puts a PUSHMARK in for you
[20:01:00] <LeoNerd> Do you know how I tell? I roll a dice, guess one, then op_dump() the resulting optree and see if I was correct
[20:01:28] <LeoNerd> Some you do, some you don't because the opchecker will insert it. The best way is to just try one and see if it was correct. It won't -change- over time
[20:01:34] <aquanight> currently my method is "try it, dzil test fails with Wstat: 11, dzil run perl -MO=Concise t/whatever"
[20:01:42] <LeoNerd> Yes it sucks. Welcome to optree mangling ;)
[20:01:54] *** Joins: rgrinberg (~textual@201.192.183.136)
[20:01:55] <LeoNerd> And one among the hundreds of reasons why adding a "pureperl" interface on these things isn't going to be simple
[20:02:20] <aquanight> except pure perl has a great way to build optrees
[20:02:28] <aquanight> specifically: sub { <optree> } and *make perl do it*
[20:03:00] <aquanight> sure you'll probably have to do some transforms to, e.g., lift PADSVs but still
[20:03:49] <aquanight> I figure if optree manipulation became a thing maybe we could also incorporate something equivalent to .NET's System.Linq.Expressions
[20:03:50] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[20:03:52] <LeoNerd> Ohman no don't do that. You really don't want to splice optree fragments from one CV to another
[20:04:02] <LeoNerd> That's an almost-guaranteed way to segv
[20:04:19] <aquanight> I was thinking the point would be to use the CV as a template to *copy* an optree structure
[20:04:38] <aquanight> I mean yes obviously you're not going to just rip the ops right out of it.
[20:04:41] <LeoNerd> You could copy the entire thing as a selfcontained sub, sure
[20:04:46] <LeoNerd> But that won't help you splice it into a larger one
[20:04:58] <aquanight> hmm
[20:05:07] <simcop2387> i still think it's funny we went from thick coax cables for networking to unshielded twisted pair for speed and reliability reasons, to shielded twisted pair for reliability and performance, to coax and fiber for re3liability and performance reasons
[20:05:17] <LeoNerd> E.g. look at all the crazy lengths Object::Pad goes through to compile all of the init blocks as blocks of the *same* CV
[20:05:23] <LeoNerd> so as not to have an ENTERSUB overhead per slot
[20:06:03] <LeoNerd> simcop2387: Yeah; turns out that modern electronics are fast enough to get enough bits down a single conductor, and multiple conductors have lane-skew
[20:06:17] <ozzzo_home> I tried 2>&1 but that dumps the error into the array and then I have to dig thru the array to find it. Is there a better way?
[20:06:42] <LeoNerd> If you have multiple wires it turns out even a few mm of length difference actually matters, and the bits arrive all in the wrong order
[20:06:57] <simcop2387> LeoNerd: yea i think the new twin ax stuff is basically the same as the old coax but just a differential pair for common mode rejection.
[20:07:24] <LeoNerd> Ahyes twinax, not triax.. that latter stuff is crazy-ass expensive
[20:07:49] *** Quits: hethw (~heth@46.238.32.56) (Quit: Leaving)
[20:08:01] <aquanight> oh bloody hell
[20:08:12] <aquanight> I can't *just* do RV2AV > ANONLIST can I
[20:08:31] <aquanight> oh no
[20:08:33] <aquanight> that should work
[20:08:39] <aquanight> that should be [...]->@*
[20:08:46] <aquanight> @{ [...] } also has a SCOPE op
[20:09:11] <aquanight> so why am I getting a "Bizarre copy of ARRAY" nonsense
[20:10:43] <aquanight> there we go now it works
[20:11:43] <LeoNerd> "Hey perl, what do you mean 'bizarre'? It's a perfectly normal copy of an array, thank you very much"
[20:12:23] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 264 seconds)
[20:12:35] <gordonfish> ozzzo_home: Instead of 2>&1, you could use 2>/tmp/file (perhaps generated with File::Temp or Path::Tiny->tempfile) and read after, if you don't want to use something like IPC::Open3.
[20:13:07] <aquanight> LeoNerd: I don't know how but my first attempt wound up with RV2AV > ANONLIST > ANONLIST > ENTERSUB
[20:13:10] <gordonfish> LeoNerd: How bizarre, how bizarre
[20:13:59] <aquanight> I don't even think there was a pushmark for the first anonlist
[20:14:02] <gordonfish> Everytime I allocate..... everytime I allocate... it's in my array
[20:14:13] <aquanight> I have no idea how that happened
[20:14:56] *** Quits: proller (~p@2a02:6b8:0:40c:c7f:13d7:c631:f2f1) (Ping timeout: 245 seconds)
[20:15:07] <LeoNerd> Tom Lehrer since a song about "there's an epsilon for every delta".. I wonder about redoing it as "there's a pushmark for every anonlist"
[20:15:51] <LeoNerd> s/since/sings/
[20:15:58] <LeoNerd> (wow I managed to typo that??)
[20:16:21] <gordonfish> there's a delta for every perl
[20:16:58] <gordonfish> LeoNerd: Autocorrect?
[20:17:37] <gordonfish> (Recently had 'fish n chips' corrected to 'things in chips' some how)
[20:18:01] <Altreus> some of us have meat-based autocorrect that fails just as regularly!
[20:18:05] <LeoNerd> If your fish is /in/ the chips I'd complain to your shop
[20:18:20] <gordonfish> Indeed
[20:18:24] <aquanight> it's possible I just don't understand how op_append_elem is supposed to work
[20:18:44] <LeoNerd> op_append_elem is sortof like a push on an optree fragment
[20:19:31] <aquanight> because it seems both times I've tried using it to build a LISTOP I end up getting doubled ops
[20:19:32] <LeoNerd> Make a new OP_LIST op, then push items into it one at a time with op_append_elem(), then finally op_convert_list() at the end
[20:19:47] <LeoNerd> Have a hunt around several of my modules, it's a common pattern I use a fair bit
[20:19:54] <aquanight> so you are expected to start with OP_LIST?
[20:20:11] <LeoNerd> Oh.. yes definitely. Don't -start- with the target op, that defeats the entire point
[20:20:11] <aquanight> even though it's destined to be something else?
[20:20:20] <aquanight> that might've been what I did wrong
[20:20:23] <LeoNerd> :)
[20:20:37] <aquanight> what about op_append_elem itself? Is that OP_LIST also?
[20:20:43] <LeoNerd> It's best to
[20:20:54] <aquanight> I'll have to remember that for next time.
[20:20:56] <LeoNerd> If you are just making a new op, do it that way
[20:21:33] * GumbyPAN CPAN Upload: Dancer2-Plugin-ControllerAutoload-0.01 by GILS https://metacpan.org/release/GILS/Dancer2-Plugin-ControllerAutoload-0.01
[20:21:55] <aquanight> for now I'm going with the RV2AV>ANONLIST approach. It's not the best thing in the world but it won't be hard to revisit later.
[20:22:41] <aquanight> and as far as "make it a list or a count of said list" that's pretty much the opcode I need.
[20:23:18] <aquanight> I mean if one were writing a sub to do that you'd do return @result or something it's pretty much the same idea
[20:23:46] <aquanight> it *would* be nice if I could hijack peephole to swing back around and null out the RV2AV>ANONLIST ops if RV2AV is list context
[20:24:03] <Altreus> It's been a long time since I had this little understanding of what people are talking about in #perl
[20:24:22] <aquanight> Altreus: indeed we be in deep fun stuff :)
[20:25:01] <Altreus> otoh I did manage to help ... well I don't want to needlessly highlight him
[20:25:03] <vague> Fun stuff for somebody is deep shit for somebody else
[20:25:05] *** Joins: proller (~p@2a02:6b8:0:40c:e4bb:aee9:bc1b:6952)
[20:25:15] <Altreus> especially when I'm blowing my own trumpet
[20:25:43] <huf> cos it's about the language that dare not speak its name, not perl.
[20:26:34] * GumbyPAN CPAN Upload: PPIx-Regexp-0.081_02 by WYANT https://metacpan.org/release/WYANT/PPIx-Regexp-0.081_02
[20:28:55] <gordonfish> vague: I read that in the voice of Mike Rowe
[20:29:02] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[20:30:07] <Altreus> as in Mike Rowe Software?
[20:30:33] <vague> No, as in dirty jobs rowe
[20:31:24] <gordonfish> vague: Yes
[20:33:10] *** Joins: magla (~gelignite@55d4a3e3.access.ecotel.net)
[20:34:56] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 245 seconds)
[20:37:08] <mmlj4> what kinda honker you got, Altreus?
[20:37:46] * gordonfish has africans and a toulouse
[20:38:13] * gordonfish also sees lots of canadas flying by all the time
[20:38:36] <gordonfish> Oh you meant an actual horn
[20:39:27] <Altreus> a real-life metaphor!
[20:44:23] *** Quits: tobybl_ (~tobybl@213.31.134.21) (Remote host closed the connection)
[20:45:49] *** Joins: e1f (~user@141.117.1.157)
[20:52:45] *** Quits: rgrinberg (~textual@201.192.183.136) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:53:09] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:53:54] *** Joins: rgrinberg (~textual@201.192.183.136)
[20:54:49] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Quit: brb)
[20:55:14] *** Quits: jabberwok (~wlindley@75.105.20.104) (Quit: Leaving.)
[20:55:41] *** Quits: rgrinberg (~textual@201.192.183.136) (Client Quit)
[20:57:30] *** Joins: mattil (~mattil@helsinki.portalify.com)
[20:59:16] *** Quits: G_SabinoMullane (~G_SabinoM@c-73-57-253-123.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[21:02:44] *** Joins: mattil_ (~mattil@87-92-90-94.bb.dnainternet.fi)
[21:05:46] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 245 seconds)
[21:07:39] *** Quits: mattil_ (~mattil@87-92-90-94.bb.dnainternet.fi) (Ping timeout: 264 seconds)
[21:10:46] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[21:11:58] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[21:13:39] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Client Quit)
[21:16:29] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[21:23:17] <graham> hi, in my application I have use Catalyst::View::TT and I have used `expose_methods` to pass some subs in to the templates. I'd like to test these subs.  I can just call them from my tests, but I need to pass the the Catalyst context object. Can I get the context object from within the test, or is there a better way to test these? The only way I've seen to get the context object is `($_res, $c) = ctx_request('index.html');` 
[21:28:14] <ozzzo_home> it looks like Capture::Tiny will be the easiest way
[21:28:30] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[21:30:57] *** choroba is now known as choroba_
[21:31:22] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[21:31:39] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[21:32:35] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:36:07] <ether> wat
[21:36:18] <ether> Capture::Tiny is for external processes
[21:37:37] <Altreus> graham: a lot of the time you can use Catalyst via class name instead of an instantiated object
[21:37:52] <Altreus> So just give it the string 'TheApp' for $c and see if it works :D
[21:38:11] <graham> oh interesting, thanks!
[21:38:19] <Altreus> graham: in general if you haven't done a request there is no context
[21:38:37] <Altreus> graham: as a result your methods can't rely on it if you want to call them outside of a request - or they can rely on its static behaviour
[21:39:39] <Altreus> I papered over a lot of stuff, some of which I don't actually know in the first place, saying that
[21:53:51] *** Quits: proller (~p@2a02:6b8:0:40c:e4bb:aee9:bc1b:6952) (Ping timeout: 264 seconds)
[21:57:59] <graham> oh okay yeah that makes sense, thank :) 
[22:04:28] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[22:07:31] *** Quits: daex (~daex@user/daex) (Quit: /me 's znc kicks the bucket)
[22:07:36] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[22:10:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:13:21] *** Quits: art1 (~romeyke@p200300ccdf08a7000cd845cc2f0795e7.dip0.t-ipconnect.de) (Quit: Leaving.)
[22:19:59] *** Joins: rgrinberg (~textual@201.192.183.136)
[22:33:52] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:34:11] *** Joins: G_SabinoMullane (~G_SabinoM@c-73-57-253-123.hsd1.fl.comcast.net)
[22:38:12] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[22:39:26] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 260 seconds)
[22:40:46] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[22:41:02] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[22:42:10] *** Joins: jabberwok (~wlindley@75.105.20.104)
[22:49:59] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:50:28] *** Joins: proller (~p@80.240.216.69)
[22:51:06] *** Quits: Lemniscate (~sauvin@about/linux/staff/sauvin) (Ping timeout: 260 seconds)
[22:57:35] *** Quits: Guest112222 (~Guest1122@84-238-170-30.ip.btc-net.bg) (Quit: Client closed)
[23:03:46] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[23:10:52] *** Quits: ozzzo_home (~ozzzo_hom@h87.s239.verisign.com) (Quit: Client closed)
[23:19:03] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 264 seconds)
[23:22:01] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[23:22:01] *** Quits: Botje (~Botje@mang.sgaap.be) (*.net *.split)
[23:22:08] *** Joins: Botje (~Botje@mang.sgaap.be)
[23:22:19] *** Joins: marienz (~marienz@libera/staff/marienz)
[23:27:50] <Mandevil> JSON is not in core?
[23:28:06] <Ovid> No. There's been arguments about that.
[23:28:17] <Mandevil> Well, TIL
[23:28:31] <Ovid> For some, it shouldn't be in core for the same reason XML modules shouldn't. For others, it should be in core because it's ubiquitous.
[23:29:12] <Mandevil> No big deal for me.
[23:29:26] <Mandevil> Just for some reason expected it to be available.
[23:30:22] <ether> JSON::PP is in core.
[23:30:41] <LeoNerd> Is it dual-life, or just-core?
[23:30:45] <Grinnz> dual life
[23:30:55] <ether> don't use JSON.pm at any rate though. use Mojo::JSON if Mojolicious is in your ecosystem, or JSON::MaybeXS otherwise
[23:30:55] <LeoNerd> Aww, boo. That means I can't have it call  builtin::isbool  then
[23:31:06] <Grinnz> a fork of Cpanel::JSON::XS in core would be nice, but that requires someone to want to do that
[23:31:53] * GumbyPAN CPAN Upload: Encode-DIN66003-0.04 by CORION https://metacpan.org/release/CORION/Encode-DIN66003-0.04
[23:31:53] * GumbyPAN CPAN Upload: App-Licensecheck-v3.2.14 by JONASS https://metacpan.org/release/JONASS/App-Licensecheck-v3.2.14
[23:32:08] <Grinnz> (and there are much lower hanging fruit missing from core)
[23:32:31] <Ovid> Oh, I didn't realize that was there.
[23:33:03] <Grinnz> you usually don't want to use JSON::PP unless it's for one-offs because it is *slow*
[23:33:15] * Ovid hastily prepares a TIL for Reddit before remembering that they don't care.
[23:33:21] <Grinnz> much, much slower than Mojo::JSON even without its XS backend
[23:34:05] *** Quits: proller (~p@80.240.216.69) (Remote host closed the connection)
[23:35:04] <ether> I wouldn't mind a core JSON.pm that allowed a totally customizable list of backends via a global variable or something, but we'd still have to negotiate with the owner of JSON.pm for that namespace
[23:35:37] <ether> people tend to use JSON.pm simply because it's an "obvious" name, and the tragedy is they get a suboptimal XS implementation as a result
[23:35:57] <LeoNerd> It's unfortunate
[23:36:21] <LeoNerd> I can't help thinking we should declare all toplevel names as "p5p could yoink them at any time"
[23:36:26] <LeoNerd> ... and yes I'm aware I have about 5
[23:37:14] *** Joins: proller (~p@80.240.216.69)
[23:37:28] <ether> hmm, I have first-come on 3, and comaint on 69 (!)
[23:37:51] <ether> many of which look to be bad entries from test modules
[23:38:11] <LeoNerd> Oh.. yeah, if PAUSE indexed t/ directories too I'd have hundreds
[23:38:22] <LeoNerd> package TestThingy, package TestWhatsit, package A, package B, ...
[23:38:28] <ether> exatly
[23:38:29] <ether> +c
[23:38:36] <LeoNerd> I probably shouldn't name one "B"
[23:38:57] <ether> heh I forgot about this one:  MY                                 7.62  B/BI/BINGOS/ExtUtils-MakeMaker-7.62.tar.gz
[23:39:11] <LeoNerd> Hah
[23:40:06] <ether> pumpkin                           undef  M/MS/MSTROUT/pumpkin-pragma-placeholder-0.001.tar.gz
[23:40:07] *** Joins: whynot (~whynot@37.73.138.224)
[23:41:13] <Grinnz> B and Test tend to be pretty unfortunate dummy-package names
[23:41:33] *** Joins: deadmarshal (~deadmarsh@95.38.230.45)
[23:46:05] *** Quits: deadmarshal (~deadmarsh@95.38.230.45) (Ping timeout: 256 seconds)
[23:46:50] <Mandevil> Hm... how do I make Mojo::UserAgent force no ceritificate verification?
[23:47:52] <Mandevil> Ah, 'insecure'
