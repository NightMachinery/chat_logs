[00:01:22] *** Joins: stevensaus (~steven_sa@cpe-74-131-36-220.kya.res.rr.com)
[00:01:43] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:08:29] *** Quits: bud (~bud@user/bud) (Remote host closed the connection)
[00:09:08] *** Quits: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Quit: Quit)
[00:09:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:10:14] *** Quits: junebug (~junebug@2600:1700:3db0:2540:128d:5e50:6657:edb) (Quit: Leaving)
[00:10:35] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:6ca3:1933:1d08:7ad8) (Read error: Connection reset by peer)
[00:11:21] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:16:35] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[00:16:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[00:16:45] <rendar> what is the best way to do this: 1) run a command 2) checking the exit code 3) if the exit code is != 0 grep the stderr for some words that may have been printed on stderr
[00:18:02] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[00:19:22] *** Quits: sinaowolabi (~SinaOwola@41.58.49.11) (Ping timeout: 260 seconds)
[00:19:32] <twkm> "best" varies.  it sounds like you want to save stderr, because you can't inspect it otherwise (retroactively or not).
[00:19:34] *** Joins: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[00:20:10] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:21:13] <rendar> i can inspect it immediately
[00:21:13] <dodo> rendar: can the error succeed with output to stderr?
[00:21:24] <twkm> you can see it.  bash can't.
[00:21:30] *** Quits: mr-red (~drd@93.55.19.103) (Ping timeout: 268 seconds)
[00:21:30] <rendar> the error succeed?
[00:21:31] <twkm> if ! stderr=$(program 2>&1 >/dev/null); then if [[ $stderr == @(some|words) ]]; then ...
[00:22:13] <rendar> twkm, but that command won't write stderr in /dev/null? how $( ) can reap the text?
[00:22:32] <llua> via the first redirection
[00:22:52] <rendar> oh, right
[00:22:57] *** Quits: MrBlue (~MrBlue@24.114.84.33) (Ping timeout: 240 seconds)
[00:23:00] <rendar> 2>&1 comes first
[00:23:08] <rendar> yes, that's it
[00:23:28] *** Joins: MrBlue (~MrBlue@37.19.213.194)
[00:24:20] <rendar> # a="there are problems with the ZFS filesystem"; [[ $a == @(with|the) ]]; echo $?
[00:24:21] <shbot> rendar: 1
[00:24:27] <rendar> it seems the if doesn't work
[00:24:47] <llua> use a glob that matches the text then
[00:24:57] *** Joins: sinaowolabi (~SinaOwola@160.152.140.189)
[00:24:58] <twkm> do you mean it must find all the words?
[00:25:15] <rendar> only some words, with whatever in between them
[00:25:22] <twkm> or the exact words together.  i took it to mean any of the words.
[00:25:23] *** Joins: docmax__ (~docmax@dynamic-077-010-065-041.77.10.pool.telefonica.de)
[00:26:10] <rendar> twkm, well, yes, basically there must be all the words, but whatever in between them, other words, spaces, or \n
[00:27:45] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[00:27:49] *** Quits: docmax_ (~docmax@dynamic-095-116-051-107.95.116.pool.telefonica.de) (Ping timeout: 240 seconds)
[00:28:29] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[00:29:46] *** Joins: nyex (~Thunderbi@177.84.107.54)
[00:34:09] *** Quits: sinaowolabi (~SinaOwola@160.152.140.189) (Ping timeout: 256 seconds)
[00:34:46] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[00:34:55] *** Joins: sinaowolabi (~SinaOwola@160.152.140.189)
[00:35:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[00:35:55] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:35:55] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:37:14] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:41:33] *** Joins: sinaowolabi_ (~SinaOwola@41.190.2.118)
[00:42:25] *** Joins: ItsColdOutside (~max@gateway/vpn/pia/coldoutside)
[00:43:43] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:43:55] *** Quits: ItsColdOutside (~max@gateway/vpn/pia/coldoutside) (Client Quit)
[00:44:11] *** Joins: ItsColdOutside (~max@gateway/vpn/pia/coldoutside)
[00:45:43] *** Joins: BadWolf (~qwerty@user/badwolf)
[00:45:45] *** Quits: BadWolf (~qwerty@user/badwolf) (Client Quit)
[00:47:17] <twkm> so [[ $stderr == *with*the* ]]
[00:47:24] <twkm> oops, gone.
[00:49:46] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.5-dev)
[00:51:09] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[00:51:12] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[00:53:28] *** Quits: ItsColdOutside (~max@gateway/vpn/pia/coldoutside) (Quit: Konversation terminated!)
[00:53:41] *** Quits: jkwnki (~jkwnki@p4ff31198.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[00:55:24] *** Quits: sinaowolabi_ (~SinaOwola@41.190.2.118) (Ping timeout: 268 seconds)
[00:55:32] *** Quits: magla (~gelignite@55d4d2a6.access.ecotel.net) (Quit: Stay safe!)
[01:03:25] *** Quits: sdu (~doo@185.44.146.214) (Remote host closed the connection)
[01:05:57] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.235) (Quit: leaving)
[01:06:27] *** Joins: sinaowolabi_ (~SinaOwola@41.58.246.230)
[01:17:28] <stemid> what determines file glob list order? LOCALE? I want to list a file last and I've tried naming it 99-auth.yaml but it doesn't help. I have two files, values.yaml and auth.yaml. if I just do *.yaml I get auth first.
[01:17:38] <greycat> locale sorting order, yes
[01:18:00] <stemid> naming it zauth.yaml does the trick
[01:18:15] <stemid> just looks stupid :)
[01:21:20] <omegatron> or you could just prepend each file with a two-digit prefix, then you can control the order
[01:22:08] <stemid> yeah I'd rather do that, thanks
[01:22:11] <omegatron> it's not that rare - you can check the contents of  /usr/lib/udev/rules.d  for example
[01:22:31] <omegatron> (assuming you are on a linux machine right now )
[01:23:20] *** Quits: Kobboi (~christoph@2a02:a03f:847d:9b00:54be:b4af:d33d:ea0d) (Read error: Connection reset by peer)
[01:30:54] *** Joins: drd (~drd@host-62-211-44-179.retail.telecomitalia.it)
[01:38:58] *** Joins: bloodfart69 (~bloodfart@131.150.105.232)
[01:39:59] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[01:40:35] *** Joins: unop (~unop@194.154.249.71)
[01:42:19] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Quit: WeeChat 3.3)
[01:43:06] <Kobaz> what can i use as a noop
[01:43:17] *** Quits: MrBlue (~MrBlue@37.19.213.194) (Ping timeout: 256 seconds)
[01:43:17] <Kobaz> while [ `iptables -D custom-INPUT-pre -j RETURN` != 0 ]; do echo .; done
[01:43:36] <Kobaz> i don't really want to echo
[01:43:53] <Kobaz> more like: while [ "`iptables -D custom-INPUT-pre -j RETURN`" != "0" ]; do echo .; done
[01:44:47] <omegatron> ':'  (colon)    https://www.gnu.org/software/bash/manual/bash.html#Bourne-Shell-Builtins   maybe?
[01:45:16] *** Quits: sazawal (~sazawal@122.161.85.84) (Quit: Leaving)
[01:45:20] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[01:45:30] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de)
[01:45:44] <Kobaz> iptables -L custom-INPUT-pre | wc -l  ---> 2574
[01:45:55] <Kobaz> firewall script went a little cra-cra
[01:46:08] <Kobaz> it's all -J RETURN's  ... heh
[01:46:28] <Kobaz> er whoops that's completely wrong
[01:46:31] <Kobaz> i need to check $?
[01:46:37] <earnestly> nft (nftables) can return json
[01:46:48] <Kobaz> oh. nice
[01:46:55] <Kobaz> i'm using xml
[01:47:15] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[01:47:27] <earnestly> And with json you have access to jq
[01:48:13] <Kobaz> echo; while [ "$?" == "0" ]; do iptables -D security-ASTERISK -j RETURN ; done
[01:48:21] <Kobaz> i didn't need a noop after all... but the : operator is cool
[01:48:38] <earnestly> Kobaz: while iptables -D ...; do ...; done
[01:48:46] <Kobaz> oh, ah
[01:49:17] <earnestly> Where in the inner loop you might want to sleep or something, not sure how much you can spam failing commands
[01:49:26] <Kobaz> no sleep is needed
[01:49:41] <Kobaz> the faster the better
[01:49:47] <earnestly> It does if you don't want to throw a fork+exec at your CPU every nanosecond
[01:50:00] <earnestly> This entire situation seems bad
[01:50:03] <Kobaz> heh
[01:50:05] <Kobaz> well it's good now
[01:50:11] <Kobaz> only had to remove like 5000 rules
[01:50:57] <Kobaz> so my issue was... it was creating rules that didn't exist... or... didn't think they existed
[01:51:11] <Kobaz> because iptables-save  | iptables-xml   was returning  # Warning: iptables-legacy tables present, use iptables-legacy-save to see them.... on this particular system
[01:51:33] <Kobaz> so every time it cycled around to ensure sanity and certain rules existed... it was adding more
[01:52:11] <earnestly> Where I have scripted nftables I've noticed that it will insert duplicate rules, so I make sure the rule exists before adding it
[01:52:24] <Kobaz> yeah
[01:52:24] <earnestly> E.g. if ! nft -j list ruleset | jq -e '.nftables[].rule | select(.expr[]?.match.right == "@blacklist")' > /dev/null; then
[01:52:26] <Kobaz> i do that with iptables
[01:52:37] *** Joins: seninha (~seninha@user/seninha)
[01:53:20] <Kobaz> assuming iptables-save outputs the current rules... which it won't if legacy rules are in palce
[01:53:22] <Kobaz> *place
[01:53:39] <Kobaz> and then you need to do iptables-legacy-save | iptables-xml instead
[01:54:21] <earnestly> Guess you'll have to find a way to determine if 'legacy rules' are in play first
[01:54:24] <Kobaz> yeah
[01:54:26] <Kobaz> i just did
[01:54:38] <Kobaz> all fixored
[01:54:40] <earnestly> Does iptables tooling have a way to answer that question?
[01:55:00] <Kobaz> with some parsing, yes
[01:55:00] <earnestly> (And can they be converted to not-legacy?)
[01:55:03] <earnestly> Eh.
[01:55:21] <Kobaz> there's probably many ways
[01:55:46] <Kobaz> iptables-save 2>&1 | grep 'iptables-legacy tables present'
[01:55:54] <Kobaz> then... you have legacy rules
[01:56:29] <earnestly> Yeah, that's awful though lol
[01:56:32] <Kobaz> in order to make it non-legacy... i believe you either need to reboot (ick)  or drop the rules entirely and then re-add
[01:57:02] <earnestly> The idea is to not have to deal with legacy rules at all, convert them all
[01:57:11] <Kobaz> you would need to drop them all, and then re-add with iptables-nft
[01:57:17] <Kobaz> and then it's no longer legacy
[01:57:43] <earnestly> Yeah, normalising is usually a nice approach
[01:58:04] <Kobaz> IS-COMM-NYC-01 {~} root# iptables -V iptables v1.8.2 (legacy)
[01:58:17] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[01:58:24] <Kobaz> so.. could use that
[01:58:55] <earnestly> I'm surprised that they provided no way to detect, convert, or any way to deal with migration in a reasonable manner
[01:59:09] <Kobaz> typically the distro takes care of that
[01:59:09] *** Quits: martinus__ (~martin@2.56.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[01:59:22] <earnestly> Kobaz: Does the legacy-save stuff also dump non-legacy rules?
[01:59:30] <Kobaz> but in the case of... the distro was upgraded to something that suports nft... but hasn't been rebooted yet... it will use -legacy
[01:59:44] <Kobaz> i think if you mix and match, that's bad
[02:00:06] <Kobaz> it should be either all legacy or all nft compatible
[02:00:08] <earnestly> Oh I see, they're both their own thing, that's pretty meh
[02:01:07] <Kobaz> like the reproduction is... 1) use iptables (legacy)... 2) upgrade distro to one that supports nft 3) don't reboot yet  4) still using -legacy
[02:04:00] <earnestly> The only option is to bodge until fixed
[02:04:05] <Kobaz> https://developers.redhat.com/blog/2020/08/18/iptables-the-two-variants-and-their-relationship-with-nftables#
[02:04:48] <Kobaz> time for foods
[02:04:56] <earnestly> This website is very broken, displays nothing without javascript, displays nothing with javascript and no cookies (and no external javascript)
[02:05:03] <Kobaz> fun
[02:05:12] <Kobaz> it worked for me ?
[02:05:26] <earnestly> rofl, they even have that fake 'accepting cookie settings' time delay
[02:05:53] <Kobaz> the web is turning into javascript entirely
[02:05:55] <omegatron> redhat itself is broken beyond repair ..   -_-
[02:06:01] <earnestly> Their website smooth scrolls lol
[02:06:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:06:15] <earnestly> Kobaz: Yes and no, almost anything worthwhile remains usable without js
[02:06:26] <omegatron> for now, yes
[02:06:27] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[02:06:39] <omegatron> but I fear for the worst in the upcoming 10 years
[02:06:41] <earnestly> When js is like this, I just take it as a reason to never use the website, and so far nothing of real value has been lost
[02:06:55] <earnestly> omegatron: I see it returning
[02:07:01] <Kobaz> smooth scrolling used to give me motion sickness
[02:07:13] <Kobaz> i'm fine now, if i'm the one driving
[02:07:29] <Kobaz> but then if i'm watching someone elses screen with smooth scrolling, i still get motion sickness
[02:07:58] <earnestly> Yeah, this website is a special kind of terrible, which is surprising.  rh should be much better than this
[02:12:37] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[02:21:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:23:00] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[02:23:09] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:29:49] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:31:27] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[02:31:34] *** Joins: Circuitsoft (uid393878@id-393878.lymington.irccloud.com)
[02:31:42] *** Joins: rgrinberg (~textual@2806:265:5401:9431:1190:319b:cdf4:fd53)
[02:32:50] *** Quits: drd (~drd@host-62-211-44-179.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[02:33:03] *** Joins: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it)
[02:33:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::4f) (Ping timeout: 240 seconds)
[02:36:44] *** Joins: mixfix41 (~homefame@user/mixfix41)
[02:37:02] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[02:39:13] *** Joins: Roedy- (Roedy@user/roedy)
[02:39:17] *** Quits: Roedy (Roedy@user/roedy) (Ping timeout: 252 seconds)
[02:42:14] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[02:42:39] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[02:42:59] *** Quits: maromau (~mauro@151.95.237.215) (Quit: Konversation terminated!)
[02:49:25] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Remote host closed the connection)
[02:56:40] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[03:00:13] *** Quits: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it) (Ping timeout: 240 seconds)
[03:00:30] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[03:01:01] *** Joins: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it)
[03:01:08] *** Joins: ferdna (~ferdna@user/ferdna)
[03:05:27] *** Quits: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it) (Ping timeout: 256 seconds)
[03:05:41] *** Quits: tsp (~tsp@srv1.xen.prgmr.com) (Quit: ZNC - http://znc.in)
[03:05:51] *** Joins: tsp (~tsp@srv1.xen.prgmr.com)
[03:06:02] *** Joins: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it)
[03:08:59] *** Joins: cliluw (~cliluw@47.147.73.223)
[03:09:18] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[03:12:58] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 260 seconds)
[03:13:37] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:26] *** Joins: igemnace (~ian@user/igemnace)
[03:15:33] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:17:47] *** Joins: arinov (~arinov@213.194.126.155)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:17] *** Joins: mr-red (~drd@host-62-211-44-179.retail.telecomitalia.it)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:21:08] *** Joins: Daisenryaku (~sh4@user/sh4)
[03:21:19] *** Quits: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it) (Ping timeout: 256 seconds)
[03:22:08] <Daisenryaku> is there a way to restrict a certain task that's likely to get stuck, called from script to abort when it takes longer than X seconds ?
[03:22:51] <llua> !timeout
[03:22:52] <greybot> http://mywiki.wooledge.org/BashFAQ/068 -- How do I run a command, and have it abort (timeout) after N seconds?
[03:24:20] <Daisenryaku> thanks
[03:24:43] *** Quits: mr-red (~drd@host-62-211-44-179.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[03:26:03] *** Joins: totenkoph (~scythe@user/totenkoph)
[03:26:27] *** Quits: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:29:18] *** Joins: chenqisu1 (~bhca7d@183.217.200.22)
[03:29:28] *** Quits: nyex (~Thunderbi@177.84.107.54) (Remote host closed the connection)
[03:31:02] *** Joins: millido (~millido@84.210.150.128)
[03:33:57] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[03:35:35] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[03:35:57] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[03:36:58] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:85f4:5f76:4849:adb1)
[03:36:58] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:85f4:5f76:4849:adb1) (Changing host)
[03:36:58] *** Joins: skapata (~Skapata@user/skapata)
[03:38:10] *** CartmanBrah is now known as Hash
[03:38:55] *** Joins: MrBlue (~MrBlue@37.19.213.239)
[03:39:46] *** Quits: The_Loko (~The_Loko@79.116.24.80) (Quit: Leaving)
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:3914:8c6e:d32:f3d5) (Remote host closed the connection)
[03:41:05] *** Hash is now known as SemperUbiSubUbi
[03:45:16] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[03:45:45] *** Quits: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net) (Remote host closed the connection)
[03:46:19] *** Quits: malina (~malina@user/malina) (Quit: malina)
[03:46:27] *** Joins: thebombzen__ (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[03:47:35] *** Joins: cdown_ (~cdown@188.214.11.14)
[03:48:02] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[03:48:41] *** Quits: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Ping timeout: 268 seconds)
[03:49:57] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[03:50:02] *** cdown_ is now known as cdown
[03:54:45] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 256 seconds)
[03:57:26] *** SemperUbiSubUbi is now known as Hash
[04:02:39] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[04:10:55] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[04:11:08] *** Quits: micah (~micah@199.254.238.42) (Changing host)
[04:11:08] *** Joins: micah (~micah@debian/micah)
[04:12:29] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[04:14:51] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Quit: WeeChat 3.4)
[04:15:55] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[04:16:24] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[04:20:53] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:26:57] *** Quits: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[04:29:19] *** Joins: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net)
[04:29:54] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:31:37] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[04:37:24] *** Joins: humky (~humky@user/humky)
[04:41:06] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[04:45:08] *** Joins: sublim20 (~sublim20@user/sublim20)
[04:45:37] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Ping timeout: 240 seconds)
[04:45:47] *** Joins: greenriot (~greenriot@user/gr33nr10t)
[04:46:30] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[04:47:02] *** Quits: nattiestnate (~nate@114.122.107.61) (Quit: WeeChat 3.4)
[04:47:17] *** Joins: millido (~millido@84.210.150.128)
[04:47:23] *** Joins: nattiestnate (~nate@114.122.107.61)
[04:56:29] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[04:56:47] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[05:01:15] *** Quits: nattiestnate (~nate@114.122.107.61) (Quit: WeeChat 3.4)
[05:01:38] *** Joins: nattiestnate (~nate@114.122.107.61)
[05:02:10] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[05:10:11] *** Quits: fazz234234368 (~fazz23423@c-73-235-104-195.hsd1.ca.comcast.net) (Quit: Connection closed)
[05:20:18] *** Quits: Circuitsoft (uid393878@id-393878.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:20:53] *** Quits: MrBlue (~MrBlue@37.19.213.239) (Quit: Leaving)
[05:21:20] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[05:32:11] *** Quits: eht (~eht@user/eht) (Remote host closed the connection)
[05:32:20] *** Quits: rgrinberg (~textual@2806:265:5401:9431:1190:319b:cdf4:fd53) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:33:04] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:37:25] *** Joins: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[05:48:49] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[05:49:17] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 240 seconds)
[05:57:54] *** Quits: sublim20 (~sublim20@user/sublim20) (Read error: Connection reset by peer)
[05:58:49] *** Joins: rgrinberg (~textual@2806:265:5401:9431:1190:319b:cdf4:fd53)
[06:01:56] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:05:26] <JyZyXy> to get the highest numbered directory, is this even close to good? find /var/lib/backuppc/pc/localhost/ -maxdepth 1 -type d -name '[0-9]*' -printf '%f\n' | sort -n | tail -n1
[06:07:04] <JyZyXy> i feel like there is some obvious simpler solution
[06:08:32] <llua> depends on the filenames in the directory
[06:08:39] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[06:09:05] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:09:34] <JyZyXy> https://paste.debian.net/hidden/dc409781/
[06:12:17] *** Quits: greenriot (~greenriot@user/gr33nr10t) (Ping timeout: 240 seconds)
[06:12:35] <llua> those sort lexicographically, put them in an array and get the last element
[06:15:00] *** Quits: bloodfart69 (~bloodfart@131.150.105.232) (Quit: Leaving)
[06:15:02] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[06:17:14] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:17:45] *** Quits: nattiestnate (~nate@114.122.107.61) (Quit: WeeChat 3.4)
[06:18:00] *** Joins: jensen (~jensen@65.78.100.184)
[06:18:06] *** Joins: nattiestnate (~nate@114.122.107.61)
[06:18:38] *** Joins: jinsun (~quassel@user/jinsun)
[06:19:15] <JyZyXy> arr=(/var/lib/backuppc/pc/localhost/[0-9]*); basename ${arr[${#arr[@]}-1]}
[06:20:19] <llua> unless you are trying to support an old bash, just -1 as the index is fine
[06:21:18] <llua> +([0-9]) with extglob is safer than just hoping no other files starts with a digit too
[06:23:12] <jensen> can anyone suggest a CLI performant, e.g. C/C++, timer accurate to at least a second over a many hours? Should be lightweight and battery-efficient  used for simple tasks like a stopwatch/timer, potentially used for benchmarking. `at` doesn't seem suitable because it takes into account system load and `sleep` is not shell builtin. Most I checked online are written in python. I want to integrate it as
[06:23:14] <jensen> a module for a status bar (waybar)
[06:23:39] <JyZyXy> llua: can't use +([]) within an array definition
[06:24:11] <llua> yeah you can
[06:24:24] <JyZyXy> i got syntax error
[06:24:42] <llua> note the "with extglob"
[06:24:49] <llua> its a option you have to enable
[06:25:16] <llua> # ary=( /proc/+([0-9])); typeset -p ary
[06:25:17] <shbot> llua: declare -a ary=([0]="/proc/1" [1]="/proc/10" [2]="/proc/11" [3]="/proc/12" [4]="/proc/13" [5]="/proc/2" [6]="/proc/3" [7]="/proc/4" [8]="/proc/43" [9]="/proc/44" [10]="/proc/5" [11]="/proc/6" [12]="/proc/7" [13]="/proc/8" [14]="/proc/9")
[06:26:00] <JyZyXy> i guess thats the problem with extglob, it doesn't work when you forget to enable it :)
[06:26:27] <JyZyXy> takes only seconds to forget
[06:27:17] <tirnanog> unless it's being used as a pattern with [[
[06:28:45] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:28:54] <JyZyXy> echo ${arr[-1]##*/} to get rid of the basename
[06:29:16] <JyZyXy> now we bashin'
[06:34:47] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[06:35:02] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:37:03] *** Joins: dob1_ (~dob1@user/dob1)
[06:39:17] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:39:39] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 256 seconds)
[06:40:03] *** Joins: uc50ic4more (~uc50ic4mo@104.254.8.73)
[06:43:42] *** Joins: dob1 (~dob1@user/dob1)
[06:45:03] *** Quits: jos1 (~jos3@host-091-097-184-209.ewe-ip-backbone.de) (Ping timeout: 268 seconds)
[06:45:19] *** Quits: dob1_ (~dob1@user/dob1) (Ping timeout: 256 seconds)
[06:49:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 240 seconds)
[06:51:26] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[06:53:09] *** Quits: nattiestnate (~nate@114.122.107.61) (Quit: WeeChat 3.4)
[06:55:00] *** Joins: lalitmee__ (~lalitmee@180.94.32.14)
[06:55:01] <Blondie101010> that definitely looks good
[06:55:06] *** Joins: nattiestnate (~nate@114.122.104.173)
[06:57:23] <tirnanog> other than the lack of quotes and nullglob (or an existence test).
[06:58:03] *** Joins: jos1 (~jos3@dyndsl-091-096-033-229.ewe-ip-backbone.de)
[07:02:00] *** Joins: lalitmee_ (~lalitmee@180.94.33.168)
[07:04:26] *** Quits: lalitmee__ (~lalitmee@180.94.32.14) (Ping timeout: 260 seconds)
[07:06:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[07:14:44] *** Joins: zebrag (~chris@user/zebrag)
[07:15:12] *** Joins: Guest64 (~Guest64@192-195-83-130.static.monkeybrains.net)
[07:15:20] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[07:17:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[07:18:03] *** Joins: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net)
[07:18:35] *** Joins: thysermip (~thysermip@191.17.235.140)
[07:18:50] *** Quits: thysermip (~thysermip@191.17.235.140) (Client Quit)
[07:24:13] *** Joins: drkshadow (~drkshadow@209.6.106.114)
[07:24:23] <drkshadow> How can I "efficiently" check a file for a 1MB block of nulls?
[07:27:42] *** Joins: BUSY (~BUSY@user/busy)
[07:28:01] *** Joins: jinsun (~quassel@user/jinsun)
[07:30:57] *** Quits: sinaowolabi_ (~SinaOwola@41.58.246.230) (Ping timeout: 240 seconds)
[07:31:47] *** Quits: sinaowolabi (~SinaOwola@160.152.140.189) (Ping timeout: 256 seconds)
[07:32:46] <Blondie101010> that can be enhanced with a logical algo, like parsing only half of the block size
[07:33:12] <tirnanog> [[ $(stat -c %s file) == 4194304 ]] && ! od -An -t x1 < file | LC_ALL=C grep -q '[1-9a-f]'
[07:33:24] <tirnanog> not that stat is standard or portable but that shouldn't be too bad.
[07:33:36] <tirnanog> er, 1048576, rather.
[07:33:49] <drkshadow> neither of those are responses to me... right?
[07:33:51] <tirnanog> assuming you mean 1MiB
[07:33:53] *** Quits: nattiestnate (~nate@114.122.104.173) (Quit: WeeChat 3.4)
[07:34:03] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:34:46] <Blondie101010> drkshadow:  you asked for efficiency, so I mentioned a potential way to optimize it
[07:35:11] <Blondie101010> reading only every half block unless you get a half match
[07:35:27] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:35:30] <Blondie101010> could probably gain 40% processing
[07:35:30] <drkshadow> what is the tool that does the scan?
[07:35:31] <tirnanog> actually, I probably misinterpreted the question. a file containing a block of nulls.
[07:35:45] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[07:36:00] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:02] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[07:36:07] <drkshadow> I'm lookintg at, `xxd -ps -cols 256 | sed "$( seq 1 15 | while read i; do echo 'N;'; done); s/\\n//g" | head -n 1 | wc -l` .... or similar
[07:36:26] <drkshadow> "how many null sectors are there"
[07:37:15] <drkshadow> not head, but `grep '^0\+$' |`
[07:37:50] <Blondie101010> with the correct lenght, sure
[07:38:32] <Blondie101010> note that there is a difference between choosing a simple solution versus an efficient one, and both can be applicable
[07:39:04] <e36freak> drkshadow: how fast/efficient do you need to be? how often are you doing this?
[07:39:18] <drkshadow> just once. I'd prefer it finish in under a couple day.s
[07:39:20] <e36freak> obviously the most offecient way would just be to roll your own program in C or similar
[07:39:23] <e36freak> ah
[07:39:38] <drkshadow> definitely bash, not writing a program. :-)
[07:39:42] <drkshadow> too many projects already...
[07:39:58] *** Joins: sinaowolabi (~SinaOwola@160.152.140.189)
[07:40:01] <e36freak> i mean that shouldn't be hard, but sure. how big of a file are we talking
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:14] <drkshadow> 1TB on a very busy filesystem, so probably about 16 hours to read it.
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:31] <drkshadow> xxd + grep will _probably_ process it in real time..
[07:40:57] <e36freak> Blondie101010's idea of reading it in half-meg chunks and checking if the whole chunk is zeroes is a good start, then you can backtrack to the last half chunk, find the start of it, and the size from there
[07:41:01] <Blondie101010> that makes optimization be more apparent
[07:41:04] <drkshadow> xxd is using 3% cpu, sed... doesn't even appear in the list. so yeah.
[07:41:14] <Blondie101010> exactly
[07:41:54] <e36freak> you'd need something that can store NULs in a buffer for that though, which is not bash
[07:42:12] <drkshadow> "chunks" -- xxd has a max column length of 256 bytes. So I have to combine then with sed. As I'm "really" looking for number of null sectors, that's ... better. If there are multiple half-meg chunks, that would tell me quicker whether it's worth re-sparsing the file (it might only have 100G used, I don't know)
[07:42:30] <Blondie101010> could be doable with dd and cmp
[07:42:42] <e36freak> sed is not something i'd even consider for this problem
[07:42:53] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 252 seconds)
[07:42:59] <drkshadow> i'm open to options but I haven't gotten a workable alternative.
[07:43:19] <Blondie101010> drkshadow:  there's coding (effort) involved
[07:43:30] <drkshadow> blondie: denied.
[07:43:32] <e36freak> if i'd use any standard tool on xxd output it'd be awk
[07:43:33] <Blondie101010> otherwise just grep it
[07:43:41] <e36freak> or that
[07:43:45] <drkshadow> you can't grep it. Grep doesn't support binary.
[07:43:54] *** Joins: sinaowolabi_ (~SinaOwola@160.152.140.189)
[07:44:29] <Blondie101010> is it a match/no match situation, or you need to know the exact location, and can there be more than 1?
[07:44:39] <drkshadow> `grep '\000' <(dd if=/dev/zero bs=10 count=1)` returns false.
[07:45:06] <drkshadow> go up to the xxd/sed/grep. Is there a more efficient way?
[07:45:12] <drkshadow> one tool, or two, instead of three?
[07:45:41] <Blondie101010> yes but it will require you a couple of days of effort
[07:45:48] <Blondie101010> is it worth it?
[07:46:33] <Blondie101010> I'd prefer to do it in PHP, but could do it in C, or with dd and cmp in bash
[07:47:22] <drkshadow> that's already been answered.
[07:47:30] <drkshadow> cmp won't work.
[07:47:39] <drkshadow> it compares full data, not partial. it'll only do it once.
[07:47:40] <Blondie101010> ugh why not?
[07:47:45] <Blondie101010> yes
[07:47:58] <Blondie101010> you compare half blocks to half blocks of nulls
[07:48:11] <Blondie101010> once you get a match, you find the position
[07:48:19] <drkshadow> that would be a while loop over dd extracting half-megs at a time. a hundred million process invocations. nope.
[07:48:25] <Blondie101010> but I asked for clarifications about your specs and you did not reply
[07:48:27] *** Joins: nvrhome (~Bop@user/nvrhome)
[07:48:54] <Blondie101010> you said that you're IO bound, so that optimization could make a huge difference
[07:49:07] <drkshadow> tbh, the suggestion is uninformed and not helpful.  reasons stated above. You don't seem to know the tool `cmp`. I've already rejected writing a program to do it.
[07:50:03] *** Quits: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[07:50:10] <Blondie101010> cmp <(echo hello) <(echo hello)
[07:50:23] *** Joins: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net)
[07:50:36] <Blondie101010> it can do exactly as I described
[07:50:36] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Remote host closed the connection)
[07:50:42] <Blondie101010> you get the chunks and compare
[07:50:51] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[07:50:55] *** Quits: uc50ic4more (~uc50ic4mo@104.254.8.73) (Quit: uc50ic4more)
[07:51:16] <drkshadow> I'm searching a 1TB block. That's been stated. `cmp` works on the full data. If I'm to compare every half-meg, then I need a process to extract a half-meg at a specific location, another process to extract a half-meg of /dev/zero, and a `cmp` instantiation -- for every half meg of a 1 000 000 meg file.
[07:51:25] <Blondie101010> that's not the simplest solution, but it's more efficient, as YOU asked for
[07:51:41] <Blondie101010> drkshadow:  look at the command I just posted
[07:51:41] <drkshadow> even if it's for one match, if there are no matches, then that's 1.5m process invocations. That would take probably a week.
[07:51:56] <Blondie101010> nope
[07:51:57] <drkshadow> "you get the chunks and compare" -- and therein lies the problem.
[07:52:08] <Blondie101010> a seek is not a sequential operation
[07:52:15] <drkshadow> i'm done with cmp. It is not a viable suggestion.
[07:52:22] <Blondie101010> it goes directly where you tell it to
[07:53:53] *** Quits: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net) (Client Quit)
[07:57:42] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[07:57:53] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[07:58:44] <lockywolf> is there a way to escape a string for usage in bash -c or in ssh -c ?
[07:58:59] <lockywolf> According to bash word-splitting rules
[07:59:00] <e36freak> drkshadow: is it just a yes/no or do you need the position?
[07:59:08] <e36freak> lockywolf: what version of bash?
[07:59:18] <lockywolf> e36freak, 5.1
[07:59:29] <e36freak> lockywolf: "${var@Q}"
[07:59:52] <e36freak> # var='thing with spaces'; echo "$var"; echo "${var@Q}"
[07:59:53] <shbot> e36freak: thing with spaces
[07:59:53] <shbot> e36freak: 'thing with spaces'
[08:00:05] <e36freak> adds quotes and otherwise escapes it for you for re-use
[08:00:21] <e36freak> for pre-bash-5 you can use printf %q
[08:00:38] <e36freak> # var='thing with spaces'; printf -v new %q "$var"; echo "$new"
[08:00:39] <shbot> e36freak: thing\ with\ spaces
[08:00:51] <e36freak> different method, with backslashes, same result though
[08:01:12] <lockywolf> that's omghowcoold
[08:01:12] <lockywolf> thank you!
[08:01:12] <lockywolf> Does this construction have a special name
[08:01:12] <lockywolf> ?
[08:01:15] <drkshadow> locky: `printf %q` in bash will escape an argument.
[08:01:30] <drkshadow> e36 got it. ;-)
[08:01:42] <e36freak> lockywolf: it's under "Parameter transformation" in the man page
[08:01:52] <drkshadow> printf %q is special to bash. It just prints an escaped string.
[08:02:11] *** Joins: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[08:03:06] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:03:46] <tirnanog> drkshadow: let me see if I have this right. you want to count the number of contiguous blocks of NUL bytes that amount to a particular size (such as 1 MiB)?
[08:03:47] <e36freak> and %q is obviously explained under printf
[08:04:00] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Quit: Lost terminal)
[08:04:09] <drkshadow> xxd + sed + grep isn't the bottle neck, so I'm going to stop focusing on this problem and do something else.
[08:04:26] *** Joins: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net)
[08:06:10] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:06:13] *** Joins: KombuchaKip (~kip@192.252.230.5)
[08:06:43] *** Joins: gg (~gg@88.160.100.84)
[08:06:50] <gg> hi
[08:07:07] <gg> its hard to find on the web why
[08:07:31] <gg> ahr sry
[08:07:40] <gg> question for zsh
[08:07:51] <KombuchaKip> Is there any reason why pclose() after running a shell command is returning 25856 when the process should have returned a 101? I see the former is 256 times the value of the latter.
[08:08:05] <tirnanog> drkshadow: and if, so, are they always aligned at regular boundaries? I ask this because you mentioned sectors.
[08:08:16] <Blondie101010> just tried with grep and it refused a regex with a quantifier > 64K
[08:08:40] <Blondie101010> could maybe combine them though
[08:08:55] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:09:17] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Ping timeout: 240 seconds)
[08:09:24] <Blondie101010> nope, grep: regular expression is too large
[08:09:51] <Blondie101010> grep doesn't seem like it can do it
[08:11:28] *** Quits: lalitmee_ (~lalitmee@180.94.33.168) (Remote host closed the connection)
[08:11:51] <tirnanog> KombuchaKip: because you didn't extract the exit status portion.
[08:11:59] <tirnanog> # echo $(( 25856 >> 8 ))
[08:12:00] <shbot> tirnanog: 101
[08:12:10] <KombuchaKip> tirnanog: Indeed. I just came to learn of the WEXITSTATUS macro.
[08:12:11] <tirnanog> use WIFEXITED, WEXITSTATUS and such.
[08:12:51] * KombuchaKip nods
[08:14:06] <tirnanog> Blondie101010: I had a somewhat OT one-liner brewing that's very fast but it appears they're not interested at this point.
[08:14:31] * Blondie101010 nods
[08:15:34] <drkshadow> I'm interested in a one-liner, just for curiosity-sake, but I'm no longer entertaining abstract suggestions without a working method.
[08:15:39] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:15:44] <drkshadow> it's also an hour in so I'm not going to restart the process.
[08:15:53] <tirnanog> are my questions unreasonable?
[08:16:21] <drkshadow> perhaps so. The question is: what's possible, and what's available? From that I'd have considered toward the best one.
[08:16:46] <tirnanog> so you're not going to answer them. alright.
[08:17:08] <drkshadow> you're constraining the problem too much. It's possible that what I'm trying to do isn't efficient, and so an answer is outside the scope of the original question.
[08:17:15] *** Joins: ravan (~ravan@user/ravan)
[08:18:00] *** Joins: vishal (~vishal@fedora/vishal)
[08:18:37] *** Quits: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[08:18:43] <drkshadow> in the end I'd be told that the answers are too inconvenient, and I won't know what path you were going down. it's incorrect to provide such a limitation.
[08:18:48] <tirnanog> suit yourself.
[08:19:25] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 268 seconds)
[08:19:32] <drkshadow> ... I did. I made an executive descision to stop the abstract processes and focus on a solution.
[08:19:52] <Blondie101010> that was one of the two options I mentioned
[08:20:10] <Blondie101010> it can be the best choice for the situation
[08:20:18] *** Parts: drkshadow (~drkshadow@209.6.106.114) (Leaving)
[08:20:27] <Blondie101010> but it doesn't qualify as "efficient"
[08:20:36] <Blondie101010> just "normal"
[08:21:13] <Blondie101010> go through the file byte by byte and count the nulls as you go
[08:21:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:21:52] *** Quits: sinaowolabi_ (~SinaOwola@160.152.140.189) (Ping timeout: 268 seconds)
[08:22:45] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:23:42] <e36freak> damn he left right as i finished writing a program to do it
[08:23:43] <e36freak> heh
[08:23:51] <e36freak> oh well, fun little exercise
[08:24:01] <tirnanog> yes. wasn't going to share mine anyway. not with that attitude.
[08:24:11] <Blondie101010> didn't put as much effort as you did, but I'm curious to see it
[08:24:26] <e36freak> it's nothing great, uses your algo idea
[08:24:29] <e36freak> http://ix.io/3JTb
[08:24:42] <e36freak> just a quick 54-liner
[08:24:51] <e36freak> quick *and* dirty
[08:25:09] <tirnanog> Blondie101010: well, I don't know whether it applied. that's the problem. mine relies on aligned blocks of NULs (which might be right, given the talk of "sectors" but I never found out).
[08:25:14] <e36freak> tested it looking for 1024-byte nul chunks, seems to work
[08:25:55] <tirnanog> nice. saved. I never do anything in C so simple examples like this are interesting.
[08:26:30] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[08:26:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:27:27] <Blondie101010> I'd be tempted to unit test a few things but it looks very good
[08:27:30] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[08:27:34] <e36freak> seriously he spent more time bitching and looking for an "efficient" bash solution with xxd/sed/whatever than it took just to write the damn thing, and i'm no C wizard
[08:28:04] <Blondie101010> he wanted the best solution with no effort
[08:28:09] <Blondie101010> and I'm glad he didn't get it
[08:28:13] <e36freak> fair enough
[08:29:12] <tirnanog> mine was along the lines of: perl -e '$sz = 1048576; open $fh, "<", $ARGV[0]; while (0 != sysread $fh, $buf, $sz) { $i++ if length $buf == $sz && $buf =~ /^\0+/ } END { print "$i\n" }'. no rolling buffer so obviously relies on aligned NUL blocks. takes about 0.8s to count them in a 1GB file on my potato which isn't bad, given it's not C.
[08:29:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:29:35] *** Quits: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[08:29:57] <Blondie101010> not bad
[08:30:06] <e36freak> how'd you generate the test file?
[08:30:13] <e36freak> yeah that's not bad at all
[08:30:26] <aetnaeus> he generated it with a 54 line c program
[08:30:30] <e36freak> heh
[08:30:32] <tirnanog> with dd reading from /dev/zero. it gave the correct answer of 1024.
[08:30:48] <e36freak> ah
[08:31:14] *** Quits: bliminse (~bliminse@host86-186-4-210.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[08:31:37] <tirnanog> typo. should be /^\0+\z/.
[08:31:44] <e36freak> i didn't think about extra big chunks or chunks concatenated, might not handle that great
[08:31:46] *** Joins: gg_ (~gg@2a01:e0a:819:1510:5063:ea56:8c6b:6e93)
[08:32:04] <Blondie101010> I should have dd'd, but the first thing that came to mind was: (for i in {1..524288}; do echo -ne "\0"; done) > test
[08:32:16] <e36freak> yeah i just used printf and some for loops
[08:32:34] <aetnaeus> for shame
[08:32:40] <e36freak> not sure how he would want to handle larger chunks, treat them all as one or stop at each MiB and restart counting
[08:32:56] <e36freak> guess it doesn't really matter at this point
[08:33:06] *** Joins: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com)
[08:33:32] <tirnanog> he was too good for us. I don't know if it's just me, but there seems to be have been quite a few of this sort in here lately.
[08:33:41] <e36freak> always has been, always will be
[08:33:43] <e36freak> that's nothing new
[08:33:47] <tirnanog> yeah. sigh.
[08:34:11] *** Quits: thebombzen__ (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Quit: Quit)
[08:34:17] *** Joins: dre (~dre@2001:8003:c932:c301:e3ff:3fa1:c907:2ee4)
[08:34:49] *** Quits: gg (~gg@88.160.100.84) (Ping timeout: 268 seconds)
[08:35:52] *** Joins: sinaowolabi_ (~SinaOwola@41.58.52.96)
[08:39:43] <tirnanog> ah. using $buf !~ /[^\0]/ shaves off about 300 millis.
[08:40:23] <e36freak> heh
[08:40:36] <e36freak> that's pretty significant
[08:41:34] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[08:42:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:43:06] *** Quits: sinaowolabi_ (~SinaOwola@41.58.52.96) (Read error: Connection reset by peer)
[08:44:51] *** Joins: sinaowolabi_ (~SinaOwola@41.58.52.96)
[08:44:53] *** Joins: et_ (~et@user/et)
[08:45:17] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[08:45:23] *** et_ is now known as et
[08:46:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:50:00] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[08:51:32] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Remote host closed the connection)
[08:55:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:55:38] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[08:55:49] *** Joins: demonbane (~demonbane@71.247.72.217)
[08:55:57] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[08:59:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:00:39] *** Quits: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Remote host closed the connection)
[09:04:17] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[09:04:18] <mihaiadrian> guys, need your help
[09:04:40] <mihaiadrian> how can i grep for a line that has a string, but doesn't contain another
[09:04:56] <mihaiadrian> i'm scraping a web page in a loop
[09:05:14] <mihaiadrian> curl -s google.com | grep mystring > file
[09:05:17] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[09:05:26] <mihaiadrian> i want to make sure that line doesn't contain a string
[09:05:48] <mihaiadrian> is it possible to do in pipeline?
[09:06:04] <mihaiadrian> i know i can do it with if ! grep -q otherstring
[09:06:17] <mihaiadrian> but i'm curious if i can do it in the same pipeline
[09:10:05] <tirnanog> by not using grep.
[09:10:28] <tirnanog> awk '/have/ && ! /have-not/'
[09:13:54] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[09:14:17] *** Quits: sinaowolabi_ (~SinaOwola@41.58.52.96) (Ping timeout: 240 seconds)
[09:14:17] *** Quits: sinaowolabi (~SinaOwola@160.152.140.189) (Ping timeout: 240 seconds)
[09:14:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:17:11] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[09:18:14] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.4)
[09:18:46] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:18:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:20:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:20:39] *** Joins: treble (~treble@user/treble)
[09:23:46] <mihaiadrian> tirnanog: thanks a lot!!!
[09:25:00] <tirnanog> welcome.
[09:26:49] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[09:26:56] *** Joins: sinaowolabi_ (~SinaOwola@41.190.2.118)
[09:28:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:33:56] *** Joins: timj (~timj@user/timj)
[09:41:04] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::1f)
[09:41:10] *** Parts: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::1f) ()
[09:49:31] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 245 seconds)
[09:56:54] *** Joins: seninha (~seninha@user/seninha)
[10:00:27] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:06:07] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[10:07:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:08:18] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[10:08:36] *** Joins: JanC (~janc@user/janc)
[10:12:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:17:19] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[10:26:33] *** Quits: armands (~armands@46.109.8.165) (Remote host closed the connection)
[10:33:27] *** Quits: MarchHare (~MarchHare@2602:47:161:8200::a57) (Quit: Leaving)
[10:34:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[10:35:30] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:36:58] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[10:37:07] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[10:37:43] *** Joins: kurahaupo (~martin@115.69.27.211)
[10:37:55] *** Joins: sdu (~doo@185.44.146.214)
[10:38:16] *** Quits: dre (~dre@2001:8003:c932:c301:e3ff:3fa1:c907:2ee4) (Quit: Leaving)
[10:39:26] *** Joins: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr)
[10:41:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:42:47] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:75de:a4d8:aac6:c5de)
[10:48:53] *** Joins: tobybl (~tobybl@213.31.132.151)
[10:50:10] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[10:53:24] *** Joins: sazawal (~sazawal@122.161.85.84)
[10:58:10] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[10:59:59] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:00:15] *** Joins: unop (~unop@194.154.249.71)
[11:03:35] *** Quits: Guest64 (~Guest64@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[11:04:45] *** Quits: kurahaupo (~martin@115.69.27.211) (Excess Flood)
[11:05:39] * jaggz hides
[11:05:40] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[11:05:53] *** Joins: drd (~drd@93.55.12.223)
[11:05:55] *** Quits: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[11:07:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:07:17] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[11:11:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:13:53] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:15:05] *** Joins: lavaball (aj@31.204.155.215)
[11:19:32] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 240 seconds)
[11:19:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:21:41] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[11:24:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:25:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:29:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:35:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:38:55] *** Joins: kurahaupo (~martin@115.69.27.211)
[11:39:06] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[11:39:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:40:22] *** Joins: chenqisu12 (~bhca7d@183.217.200.22)
[11:43:17] *** Quits: chenqisu1 (~bhca7d@183.217.200.22) (Ping timeout: 240 seconds)
[11:44:27] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:46:37] *** Joins: armands (~armands@46.109.8.165)
[11:48:43] *** Joins: adac (~adac@31.207.101.82)
[11:49:37] *** Quits: nvrhome (~Bop@user/nvrhome) (Ping timeout: 256 seconds)
[11:53:23] <bob_x2> grep has -v flag which inverts
[11:53:24] *** Joins: sinaowolabi (~SinaOwola@160.152.58.59)
[11:55:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:59:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:59:50] *** Quits: polve (~polve@user/polve) (Ping timeout: 260 seconds)
[12:05:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:05:39] *** Joins: polve (~polve@user/polve)
[12:06:22] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[12:09:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:13:12] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:15:59] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[12:18:16] *** Joins: epony (epony@user/epony)
[12:19:54] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[12:21:23] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:24:57] *** Quits: lavaball (aj@31.204.155.215) (Ping timeout: 240 seconds)
[12:25:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:27:44] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:28:19] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:28:48] <kurahaupo> GNU grep has -L which inverts -l (show names of files containing NO matching lines)
[12:30:09] *** Quits: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[12:33:22] *** Joins: rendar (~rendar@user/rendar)
[12:34:13] <pagios> silly question, record="${mail},${pass},${display}"; print record ;     what am i doing wrong? it is not printing the content ofthe cars
[12:35:38] <epony> print $record
[12:36:12] <epony> or ${record} if you want consistent style
[12:37:01] <pagios> it is not printing the , :/
[12:37:33] <epony> \,
[12:37:48] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:39:32] <pagios> thank epony
[12:40:11] <kurahaupo> epony: "print" isn't the command for sending out
[12:41:13] <epony> talk to pagios ;-)
[12:41:14] <kurahaupo> epony: try « printf '%s\n' "$record" » instead.
[12:41:21] <kurahaupo> er, sorry
[12:41:38] <epony> plain echo would do
[12:41:41] <kurahaupo> pagios: ^^ that's for you
[12:42:02] * kurahaupo mumbles something about !echo
[12:44:14] *** Joins: arinov (~arinov@178.240.175.124)
[12:44:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:45:05] <epony> https://www.dartmouth.edu/~rc/classes/ksh/print_pages.shtml section 15
[12:46:21] <epony> (of course it is)
[12:49:01] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:49:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:50:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:54:21] *** Quits: sazawal (~sazawal@122.161.85.84) (Quit: Leaving)
[12:55:19] *** Joins: sazawal (~sazawal@122.161.85.84)
[12:56:06] *** Quits: sazawal (~sazawal@122.161.85.84) (Remote host closed the connection)
[12:56:49] *** Joins: sazawal (~sazawal@122.161.85.84)
[12:57:36] *** Quits: sazawal (~sazawal@122.161.85.84) (Remote host closed the connection)
[12:58:14] *** Joins: sazawal (~sazawal@122.161.85.84)
[12:59:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:59:36] *** Quits: sazawal (~sazawal@122.161.85.84) (Remote host closed the connection)
[13:00:33] *** Joins: sazawal (~sazawal@122.161.85.84)
[13:01:06] *** Quits: sazawal (~sazawal@122.161.85.84) (Remote host closed the connection)
[13:06:56] *** Parts: gg_ (~gg@2a01:e0a:819:1510:5063:ea56:8c6b:6e93) (Leaving)
[13:08:12] *** Joins: Mo (~Mo@dynamic-077-010-036-013.77.10.pool.telefonica.de)
[13:14:03] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[13:15:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:19:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:20:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:21:51] <rendar> # while /bin/true do; sleep 3; echo "miao"; done;
[13:21:52] <shbot> rendar: bash: syntax error near unexpected token `done'
[13:21:56] <rendar> why?
[13:22:01] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[13:22:09] <epony> ; do
[13:22:17] <rendar> oh thanks
[13:22:32] <rendar> # while /bin/true; do sleep 3; echo "miao"; done;
[13:22:39] <shbot> rendar: miao
[13:25:41] *** Joins: lavaball (~Melissa@31.204.155.215)
[13:26:03] <rendar> i have an infinite while loop that launches a command and when that command crashes it restart it, but i want a script that launches this infinite loop but returns immediately.. can a script run a function in background like 'my_fn &' and exit?
[13:26:51] <lopid> you could have tias in the time it took to write that
[13:28:04] <bonsaikitten> rendar: you could also consider a process monitoring tool like monit for such a job
[13:28:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:30:39] <epony> https://en.wikipedia.org/wiki/Daemontools
[13:31:20] <emanuele6> daemontools is great
[13:32:15] <epony> yep, http://cr.yp.to/daemontools/faq/create.html
[13:32:20] *** Joins: aakashi2001 (~aakashi20@103.61.255.19)
[13:32:20] *** Quits: aakashi2001 (~aakashi20@103.61.255.19) (Changing host)
[13:32:20] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[13:36:09] *** Quits: lavaball (~Melissa@31.204.155.215) (Ping timeout: 256 seconds)
[13:36:57] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 240 seconds)
[13:37:57] *** Joins: joshu_ (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[13:39:08] *** Joins: joo-_ (~joo-_@80-62-117-1-mobile.dk.customer.tdc.net)
[13:39:08] *** Quits: joo-_ (~joo-_@80-62-117-1-mobile.dk.customer.tdc.net) (Changing host)
[13:39:08] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[13:39:58] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[13:40:01] *** Joins: maromau (~mauro@151.95.237.215)
[13:40:46] *** Quits: adac (~adac@31.207.101.82) (Ping timeout: 245 seconds)
[13:43:17] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[13:45:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:46:18] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[13:46:47] *** Quits: joshu_ (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[13:47:09] *** Quits: rgrinberg (~textual@2806:265:5401:9431:1190:319b:cdf4:fd53) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:48:32] *** Quits: arinov (~arinov@178.240.175.124) (Ping timeout: 240 seconds)
[13:49:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:50:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:51:56] *** Joins: mongy (~mongy@user/mongy)
[13:54:07] <rendar> thanks i'll consider that
[13:55:59] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:56:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:56:33] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[13:57:16] *** Lord_of_Life_ is now known as Lord_of_Life
[13:58:25] *** Joins: alius (~alius@2001:861:4444:49c0:3db0:d0c2:b370:4385)
[13:58:26] *** Joins: mixfix41 (~homefame@user/mixfix41)
[13:58:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:00:47] *** Joins: stealth[] (~stealth]@i6DFA2498.versanet.de)
[14:01:35] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[14:01:59] *** Quits: stealth[] (~stealth]@i6DFA2498.versanet.de) (Client Quit)
[14:02:32] *** Joins: stealth[] (~stealth]@i6DFA2498.versanet.de)
[14:03:01] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[14:08:12] *** Joins: remirol (~lorimer@user/lorimer)
[14:08:12] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[14:08:20] *** remirol is now known as lorimer
[14:08:22] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[14:08:24] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[14:09:49] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[14:12:03] *** Joins: mixfix41 (~homefame@user/mixfix41)
[14:18:09] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[14:18:39] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[14:22:09] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[14:23:15] *** Joins: jinsun (~quassel@user/jinsun)
[14:23:45] *** Joins: stealth[]- (~stealth]@2001:9e8:36e1:6300:701c:fb77:fe98:95f6)
[14:26:37] *** Quits: stealth[] (~stealth]@i6DFA2498.versanet.de) (Ping timeout: 240 seconds)
[14:31:32] *** Quits: foul_owl (~kerry@212.102.47.57) (Ping timeout: 252 seconds)
[14:33:32] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[14:34:31] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[14:34:35] *** Quits: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de) (Quit: lavaball)
[14:36:12] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[14:38:39] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[14:41:28] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[14:41:45] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[14:42:10] *** Quits: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[14:43:06] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[14:43:40] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[14:44:09] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[14:45:02] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[14:45:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:46:01] *** Joins: foul_owl (~kerry@97-126-11-68.tukw.qwest.net)
[14:47:12] *** Joins: bluedust (~bluedust@103.165.167.220)
[14:49:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:50:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:50:57] *** Quits: foul_owl (~kerry@97-126-11-68.tukw.qwest.net) (Ping timeout: 240 seconds)
[14:52:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 260 seconds)
[14:54:12] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[14:55:15] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[14:55:29] *** Joins: bluedust_ (~bluedust@117.204.159.226)
[14:55:50] *** Joins: unop (~unop@194.154.249.71)
[14:58:17] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[14:59:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:59:07] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[15:01:54] *** Quits: maromau (~mauro@151.95.237.215) (Quit: Konversation terminated!)
[15:02:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[15:04:18] *** Joins: foul_owl (~kerry@212.102.47.57)
[15:04:57] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[15:05:14] <rendar> can i do `if [[ "$a" != (hello|world) ]]; then ...` in the meaning of if a != "hello" or a != "world" then... ?
[15:05:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:05:53] <emanuele6> > a != "hello" or a != "world"
[15:06:03] <emanuele6> that is always true
[15:06:15] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[15:06:32] <emanuele6> if you mean AND: [[ a != @(hello|word) ]]
[15:06:39] <emanuele6> s/word/world/
[15:07:41] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[15:07:48] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[15:08:13] *** Joins: libc (~weechat@user/tessio)
[15:08:49] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[15:09:08] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[15:09:31] <emanuele6> (and s/a/$a/1)
[15:09:39] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[15:10:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[15:11:57] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[15:12:05] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[15:12:59] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[15:13:00] <libc> good
[15:13:42] *** Joins: millido (~millido@84.210.150.128)
[15:14:19] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Max SendQ exceeded)
[15:20:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:20:19] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[15:21:13] *** Joins: netpipe43 (~netpipe@user/netpipe)
[15:21:41] *** netpipe43 is now known as netpipe
[15:25:06] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[15:27:40] <rendar> emanuele6, yes AND
[15:31:08] *** Joins: legola (~legola@46.235.101.65)
[15:34:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:35:03] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[15:35:16] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[15:35:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:37:24] *** Quits: chenqisu12 (~bhca7d@183.217.200.22) (Ping timeout: 240 seconds)
[15:39:48] *** Parts: pagios (~pagios@life.is-a.beauty) (Leaving...)
[15:43:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:48:37] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[15:51:11] *** Quits: alius (~alius@2001:861:4444:49c0:3db0:d0c2:b370:4385) (Ping timeout: 245 seconds)
[15:53:06] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de)
[15:53:11] *** Quits: XV8 (~XV8@2601:5cb:c001:50:bd72:41d1:6a0f:1d3a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:54:39] <chiselfuse> i want to get a value from an httpd using http GET and then send a POST request to that same httpd on that *same* tcp connection without closing it, also the POST request has to use the value retrieved from the GET request, this is what i got to:
[15:54:47] <chiselfuse> mkfifo /tmp/p; mkfifo /tmp/p2; curl test.com -o /tmp/p --next -x post -H "$(cat /tmp/p2)" test.com >/dev/null 2>&1 & sed 's/.*fgtauth?\(.*\)">Click.*/\1/'>; rm /tmp/p /tmp/p2
[15:55:06] <chiselfuse> the --next in curl makes it do another request using the same tcp connection
[15:55:29] <chiselfuse> i'm starting curl and sed in parallel to process the output of the GET request
[15:55:35] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[15:56:19] <chiselfuse> i just don't know what to do at this point, every way seems like a not working hack at this point
[15:57:45] *** Joins: n4dir (~user@i577BC8D9.versanet.de)
[15:58:45] <chiselfuse> mkfifo /tmp/p; mkfifo /tmp/p2; curl test.com -o /tmp/p --next -x post -H "$(cat /tmp/p2)" test.com >/dev/null 2>&1 & sed 's/.*fgtauth?\(.*\)">Click.*/\1/' /tmp/p >/tmp/p2; rm /tmp/p /tmp/p2
[15:59:13] <chiselfuse> this ^
[15:59:48] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[16:00:25] *** Joins: zeden (~zeden@user/zeden)
[16:00:29] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[16:01:39] *** Joins: arinov (~arinov@213.194.126.155)
[16:04:45] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[16:05:09] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[16:06:01] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[16:06:33] *** Joins: mohab (~mohab@156.223.37.45)
[16:06:43] *** Quits: mohab (~mohab@156.223.37.45) (Remote host closed the connection)
[16:10:37] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[16:11:15] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[16:12:43] *** Joins: nochi (~nochi@static.216.66.130.94.clients.your-server.de)
[16:12:54] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[16:14:42] *** Joins: ham5urg (~ham5urg@149.224.94.118.dynamic-pppoe.dt.ipv4.wtnet.de)
[16:15:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[16:16:31] *** Quits: drd (~drd@93.55.12.223) (Ping timeout: 256 seconds)
[16:16:36] <chiselfuse> should i just write it in libcurl?
[16:16:39] *** Quits: bluedust_ (~bluedust@117.204.159.226) (Remote host closed the connection)
[16:17:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[16:18:19] <ham5urg> Is it in a short way possible to use find and to execute a command and to alter the filename for each finding? E.g. find . -type f -name "*.pdf" -exec myocrpdf {} some_shorthand_renaming.ocr.pdf
[16:19:27] <Pinchiukas> Should I put "every ${variable} in curly braces" every time or just when I need to separate it from non-whitespace characters?
[16:20:37] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[16:20:49] *** Joins: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de)
[16:21:30] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[16:24:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:28:48] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[16:33:59] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[16:34:53] <koollman> ham5urg: not directly like that. You could write a script taking the filename as an argument, and doing the renaming. or use a while read ... loop
[16:38:48] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[16:39:39] *** Joins: jinsun__ (~quassel@user/jinsun)
[16:40:53] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[16:40:59] *** Joins: MrBlue (~MrBlue@162.253.71.237)
[16:41:42] *** Joins: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[16:44:57] *** Joins: alius (~alius@2001:861:4444:49c0:3db0:d0c2:b370:4385)
[16:48:16] <uuidNuniq> Pinchiukas: you don't have to use ${} all the time. use it when needed
[16:49:36] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[16:50:37] *** Joins: martinus__ (~martin@2.56.202.77.rev.sfr.net)
[16:51:05] <geirha> ham5urg: -exec sh -c 'myocrpdf "$1" "${1%.*}.ocr.pdf"' _ {} \;
[16:51:48] <geirha> but you'll also want to filter out *.ocr.pdf first, else you end up with foo.ocr.ocr.ocr.pdf if you run it multiple times
[16:51:49] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[16:51:57] *** Quits: sinaowolabi (~SinaOwola@160.152.58.59) (Ping timeout: 240 seconds)
[16:52:21] <geirha> find . -type f -name "*.pdf" ! -name "*.ocr.pdf" -exec sh -c 'myocrpdf "$1" "${1%.*}.ocr.pdf"' _ {} \;
[16:54:19] *** Joins: cdown_ (~cdown@163.114.131.1)
[16:55:58] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[16:56:59] <koollman> geirha: yeah ... it becomes ugly quickly, I prefer advising a separate script ;)
[16:57:19] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[16:57:28] *** cdown_ is now known as cdown
[16:57:44] <uuidNuniq> chiselfuse: you did not say which part failed ...
[16:57:47] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[16:58:02] *** Joins: unop (~unop@194.154.249.71)
[17:01:19] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[17:01:33] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:01:57] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[17:02:55] *** Joins: arinov (~arinov@213.194.126.155)
[17:03:17] *** Joins: cdown_ (~cdown@188.214.11.14)
[17:04:44] *** Joins: sinaowolabi (~SinaOwola@160.152.171.143)
[17:05:37] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[17:05:40] *** cdown_ is now known as cdown
[17:06:30] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[17:07:18] <ham5urg> geirha, thanks a lot
[17:08:38] *** Joins: seninha (~seninha@user/seninha)
[17:10:42] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[17:11:20] *** Joins: Kyuzo68 (~Kyuzo@host-79-45-237-213.retail.telecomitalia.it)
[17:12:46] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:90de:bade:1639:c5d2)
[17:12:46] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:90de:bade:1639:c5d2) (Changing host)
[17:12:46] *** Joins: skapata (~Skapata@user/skapata)
[17:15:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:15:19] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:15:33] *** Joins: tmm88 (~tmm88@user/tmm88)
[17:17:55] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:18:57] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[17:19:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[17:21:01] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[17:21:12] *** Joins: Crassus (~Crassus@user/crassus)
[17:21:22] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[17:21:59] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[17:22:17] *** Quits: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:23:44] *** Joins: miique (~miique@181.46.139.166)
[17:26:39] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[17:26:50] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[17:32:34] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 268 seconds)
[17:33:25] *** Joins: drd (~drd@host-62-211-44-179.retail.telecomitalia.it)
[17:35:29] *** Quits: jelly (~me@user/jelly) (Read error: Connection reset by peer)
[17:35:36] *** Joins: WinterStar (~IceLight@user/icelight)
[17:38:21] *** Joins: arinov (~arinov@213.194.126.155)
[17:39:47] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[17:41:43] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 250 seconds)
[17:41:49] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[17:43:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[17:44:13] *** Quits: sinaowolabi (~SinaOwola@160.152.171.143) (Read error: No route to host)
[17:46:58] *** Quits: arinov (~arinov@213.194.126.155) (Quit: Konversation terminated!)
[17:47:17] *** Joins: arinov (~arinov@213.194.126.155)
[17:47:31] *** Joins: WinterStar (~IceLight@user/icelight)
[17:49:01] *** Joins: jelly (jelly@user/jelly)
[17:49:30] *** Joins: _gabriele (~gabriele@95.236.107.86)
[17:55:53] *** Joins: sinaowolabi (~SinaOwola@160.152.171.143)
[17:55:56] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[17:56:57] *** Quits: NoelFlantier (~Hubert@gifi.cassossie.net) (Read error: Connection reset by peer)
[17:57:34] *** Joins: bluedust (~bluedust@117.204.159.226)
[17:58:08] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[17:59:54] *** Quits: _gabriele (~gabriele@95.236.107.86) (Changing host)
[17:59:54] *** Joins: _gabriele (~gabriele@user/gabriele)
[17:59:54] *** _gabriele is now known as gabriele
[18:00:04] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Quit: Quitting)
[18:00:22] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[18:01:23] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[18:01:57] *** Quits: Dotz0cat (~Dotz0cat@h118.166.187.173.ip.windstream.net) (Ping timeout: 240 seconds)
[18:02:27] *** Joins: Dotz0cat (~Dotz0cat@h8.47.90.75.dynamic.ip.windstream.net)
[18:02:29] *** Joins: mr-red (~drd@93.55.12.223)
[18:02:46] *** Quits: drd (~drd@host-62-211-44-179.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[18:03:42] *** Joins: GuiToris (~GuiToris@user/guitoris)
[18:04:03] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[18:04:47] <GuiToris> hello, a tutorial says : Exec=/bin/sh -c ";<YOUR COMMANDS HERE>"   is that ; a typo there? (I'm going to use bash, I'm not sure if the syntax changes)
[18:05:25] <GuiToris> this is what I actually wrote: Exec=konsole -e bash -c "mediainfo %u | less"
[18:05:28] <GuiToris> is this good?
[18:05:59] *** Joins: thiras (~thiras@user/thiras)
[18:08:59] <lopid> looks ok, though you might want to escape %u, if whatever substitutes it doesn't do that already
[18:09:52] <GuiToris> lopid, like so:  "mediainfo \%u | less"
[18:10:16] <GuiToris> ?
[18:10:19] <lopid> sorry, i meant quote
[18:10:58] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:11:09] *** Joins: pigweed (~pigweed@97.119.249.142)
[18:11:14] <GuiToris> this was a dilemma, if I use single quotes I guess it won't be substituted
[18:12:12] <GuiToris>  "mediainfo "%u" | less"   if I did this, I guess everything would be quoted but %u
[18:12:14] <lopid> i'd imagine whatever parses the Exec value just substitutes %u wherever it appears
[18:12:29] <lopid> "mediainfo '%u' | less"
[18:12:36] <GuiToris> I'll give it a try, thank you :)
[18:14:39] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 250 seconds)
[18:17:43] <GuiToris> it works, thanks a lot
[18:17:49] <lopid> :)
[18:18:15] *** Joins: WinterStar (~IceLight@user/icelight)
[18:18:37] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:18:55] *** Quits: oj (oj@user/oj) (Quit: Eyy)
[18:19:15] *** Joins: oj (oj@user/oj)
[18:20:51] *** Quits: Kyuzo68 (~Kyuzo@host-79-45-237-213.retail.telecomitalia.it) (Quit: Konversation terminated!)
[18:27:50] *** Joins: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud)
[18:28:10] *** Joins: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be)
[18:28:38] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[18:28:44] *** Joins: furrymcgee (~devuan@cgn-213-196-210-78.nc.de)
[18:30:19] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de)
[18:33:17] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:33:36] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:35:25] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[18:35:26] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:35:43] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de)
[18:37:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[18:40:14] *** Joins: bluedust_ (~bluedust@89.238.130.72)
[18:41:05] *** Joins: greycat (~greg@209.142.155.49)
[18:42:23] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 250 seconds)
[18:42:51] *** Quits: kurahaupo (~martin@115.69.27.211) (Ping timeout: 268 seconds)
[18:43:32] *** Quits: bluedust (~bluedust@117.204.159.226) (Ping timeout: 240 seconds)
[18:45:14] *** Joins: bluedust (~bluedust@117.204.159.226)
[18:46:02] <kurahaupo_> GuiToris: The quotes don't affect the substitution for %u because that's done before the shell starts
[18:46:32] *** Quits: mr-red (~drd@93.55.12.223) (Ping timeout: 240 seconds)
[18:46:43] <GuiToris> I see, thanks :)
[18:48:57] *** Quits: bluedust_ (~bluedust@89.238.130.72) (Ping timeout: 256 seconds)
[18:51:12] *** Joins: deuxexmachina (worker@2a01:7e01::f03c:92ff:fecb:5a96)
[18:51:57] <deuxexmachina> https://stackoverflow.com/a/68487487/5481431 -> any idea why this doesn't work?
[18:52:13] <deuxexmachina> I get "sh: SKIP_PREFLIGHT_CHECK=0: not found"
[18:52:44] <greycat> first guess without looking at the web page is a quoting error
[18:52:50] <greycat> # "a=3"
[18:52:51] <shbot> greycat: bash: a=3: command not found
[18:52:57] <phy1729> seems like a node issue
[18:53:28] <deuxexmachina> yes idk how to do that in node
[18:53:37] <deuxexmachina> and can't find any examples of what I want except that one
[18:55:37] <phy1729> Maybe you missed the yarn cross-env part, but we don't have enough information on a question that's not really a shell question
[18:56:12] *** Quits: n4dir (~user@i577BC8D9.versanet.de) (Remote host closed the connection)
[18:57:29] *** Joins: karakedi (~eAC53C340@user/karakedi)
[18:58:15] <rendar> if i do "hello" \ "world" the resulting string if "hello world", it seems bash automatically adds a space, how can i prevent this?
[18:58:19] <greycat> Well, trying to read that web page in lynx was a mistake.  Won't try that again soon.
[18:58:36] <greycat> If you have a bash question or even an sh question in the future, we can try to address that.
[18:59:37] <rendar> uhm, it seems "hello"\ "world" will be "helloworld", while "hello" \ "world" will be "hello world", can someone confirm that?
[18:59:49] <greycat> If you can even figure out what the exact arguments passed to 'sh' are, which generate your error, that might be enlightening.  I have no idea what languages or tools you're using, though, so I don't have concrete advice on how to trace what they're doing.
[19:00:34] <tirnanog> "The cross-env module exposes two bins: cross-env and cross-env-shell. The first one executes commands using cross-spawn [...]". just another completely untested 'solution' at toiletoverflow, it seems.
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:20] <tirnanog> yarn cross-env $(grep SKIP_PREFLIGHT_CHECK ../../.env). duh.
[19:01:27] <deuxexmachina> meh ive been visiting toiletoverflow for over a decade and could never game it enought o even get the status to vote or post
[19:01:32] <deuxexmachina> it is an echo chamber or sorts
[19:01:53] <greycat> wtf is yarn, wtf is cross-env ...
[19:02:13] <phy1729> yarn is a node.js related thing
[19:03:09] <greycat> Is this whole shitshow related to Docker in some way?
[19:03:26] <greycat> This feels like a Docker question somehow.
[19:03:34] <phy1729> $search_engine says it's a package manager, but I thought that's what npm is, but meh the whole ecosystem is a dumpster fire
[19:05:03] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[19:05:38] *** Joins: Kyuzo68 (~Kyuzo@host-79-45-237-213.retail.telecomitalia.it)
[19:07:40] <tirnanog> the fact that it contains an apparently working command substitution implies the entire string is injected into sh. why not just do "SKIP_PREFLIGHT_CHECK=0 yarn ..."? or whatever the intended command is, in place of yarn.
[19:08:58] <greycat> Requires knowledge of the 17 layers of bullshit.
[19:09:08] <tirnanog> and assuming it is meaningful as an environment variable, of course, which is by no means clear.
[19:10:35] <tirnanog> or "set -a; . /path/to/relevant_envfile && yarn ...", for example.
[19:10:44] <koollman> yarn is one package manager, npm is another package manager
[19:11:13] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[19:11:33] <koollman> and some projects use both (or more :) )
[19:14:09] <kurahaupo_> rendar: Why are you putting \ between two quoted strings?
[19:14:43] <rendar> kurahaupo_, there is a \n which you can't see and i can't reproduce on IRC
[19:14:47] <rendar> to split too long strings
[19:15:03] <kurahaupo_> rendar: If you want just one string, then write one string; don't close the quotes and reopen them, and use \ to suppress the newline
[19:15:58] <rendar> kurahaupo_, i can't do that, because of indentation
[19:16:51] <kurahaupo_> rendar: Indentation is secondary to the lexical and grammar rules.
[19:17:04] <rendar> kurahaupo_, if i don't close the quotes, and i go to the next line, i must use tabs to align indentation, then the string will be messed up
[19:17:15] <koollman> don't use tab
[19:17:17] <kurahaupo_> Sometimes adding Indentation makes the code wrong
[19:17:26] <rendar> koollman, that's a problem also with spaces
[19:17:34] <kurahaupo_> STOP ADDING INDENTING
[19:17:35] <koollman> rendar: don't use any indentation there
[19:17:44] <tirnanog> if absolutely must do this, use printf -v mylongstr %s, then expand mylongstr.
[19:17:52] <koollman> or find an editor that gets what you mean (or maybe a setting in your current editor)
[19:17:53] <rendar> so the string that goes to the new line, should be at the column 0?
[19:17:54] <tirnanog> if you, I mean.
[19:18:02] *** Quits: GuiToris (~GuiToris@user/guitoris) (Ping timeout: 240 seconds)
[19:18:34] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[19:18:37] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:18:40] <koollman> rendar: yes
[19:18:59] *** Quits: sinaowolabi_ (~SinaOwola@41.190.2.118) (Ping timeout: 256 seconds)
[19:19:17] <koollman> rendar: or, to read it a bit differently. that string contains a newline, and then continue with the next character
[19:19:30] <kurahaupo_> Also, what is imposing a line length limit?
[19:19:46] <rendar> kurahaupo_, readability
[19:19:54] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[19:20:09] <kurahaupo_> again, secondary to correctness
[19:20:20] <koollman> first, make it work. Then make it nice ;)
[19:20:35] <kurahaupo_> koollman++
[19:20:50] <deuxexmachina> tirnanog: why not just execute it like that? because it is different in different envs... that is why i have the var in .env
[19:21:07] <tirnanog> deuxexmachina: have you read my second suggestion?
[19:21:25] <rendar> it works
[19:21:39] <rendar> i'm just making it nice :)
[19:22:08] <kurahaupo_> rendar: It would help to know what the context is, because leaving a gap means you don't have a string with a space, you do have two strings.
[19:22:15] <deuxexmachina> "set -a; . /path/to/relevant_envfile && yarn ..." this one?
[19:22:53] <rendar> kurahaupo_, ok, but still "hello"\ "world" is "helloworld" and "hello" \ "world" is "hello world"
[19:23:11] <tirnanog> deuxexmachina: yes. it would export the variables that are assigned by the sourced file, prior to the execution of yarn. maybe that's enough.
[19:23:34] <kurahaupo_> rendar: are you using "echo"?
[19:23:38] <greycat> make sure the file contains valid sh syntax
[19:24:08] <rendar> kurahaupo_, yes
[19:24:32] <koollman> rendar: it's not. How do you check the value of it ? (or do you need to display it on some paste site to show the actual syntax with newlines, maybe?)
[19:24:47] *** Joins: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com)
[19:24:51] <kurahaupo_> rendar: Consider using printf instead, so you can control the insertion of spaces between arguments
[19:24:52] <rendar> # echo "hello"\ "world"; echo "hello" \ "world"
[19:24:53] <shbot> rendar: hello world
[19:24:53] <shbot> rendar: hello  world
[19:24:59] <rendar> wtf?
[19:25:24] <kurahaupo_> rendar: That's exactly what I'd expect
[19:25:31] <rendar> kurahaupo_, why?
[19:25:32] <tirnanog> deuxexmachina: it if contains other things that you don't want to be exported. it could also be ". /path/to/file && export SKIP_PREFLIGHT_CHECK && yarn ..." but, as greycat said, the file must contain syntax that's valid to sh.
[19:25:33] <kurahaupo_> there's no wtf
[19:25:46] <koollman> rendar: why not ? :)
[19:25:50] <soren_> How can I re-use the following code replacing "pb $file" with "pb2" conditionally? `capture && qimgv "$file" && prompt "Upload?" && pb "$file" && ...`
[19:26:16] <rendar> # echo "hello"\"world"
[19:26:22] <shbot> rendar: Missing terminating quote, bracket or keyword
[19:26:23] <kurahaupo_> rendar: because outside quotes, \ quotes the single next char, unless it's newline, in which case it deletes it
[19:26:26] <rendar> LOL.
[19:26:37] *** Parts: ham5urg (~ham5urg@149.224.94.118.dynamic-pppoe.dt.ipv4.wtnet.de) (Leaving)
[19:26:41] <rendar> what a messed scripting lang
[19:26:44] <kurahaupo_> That includes quoting a "
[19:26:47] <rendar> ok
[19:26:55] <kurahaupo_> rendar: Just think it through
[19:27:17] <koollman> rendar: that's probably the same in many languages, though. open with a quote, close with a quote. And a escaped quote does not count. so you're missing a quote
[19:27:45] <kurahaupo_> rendar: You're too used to thinking that quote marks make "strings". That thought is the beginning of what's wrong for you
[19:27:48] <rendar> koollman, in C "hello" "world" will *ALWAYS* be "helloworld" no additional spaces
[19:27:56] <rendar> i'm just used to that
[19:28:02] <koollman> rendar: correct. but that's quite different
[19:28:23] <rendar> so it's echo that adds the additional space?
[19:28:29] <kurahaupo_> correct
[19:28:39] <koollman> rendar: echo takes each argument, and display them one by one separated by spaces
[19:29:00] <koollman> it probably helps if you write a function that shows each argument separately, to understand how they are handled
[19:29:11] <kurahaupo_> # echo a     b c "" d
[19:29:12] <shbot> kurahaupo_: a b c  d
[19:29:23] <rendar> ok, i see
[19:29:42] <kurahaupo_> # printf '(%s)' a     b c "" d
[19:29:43] <shbot> kurahaupo_: (a)(b)(c)()(d)
[19:29:52] <tirnanog> rendar: you probably wouldn't be happy if you ran, say, cp "source" "destination" and that happened. shells are different for a reason.
[19:30:02] <kurahaupo_> # printf '(%s)' a\ \  \  b c "" d
[19:30:04] <shbot> kurahaupo_: (a  )( )(b)(c)()(d)
[19:30:29] <rendar> tirnanog, exactly, hence i'm here asking
[19:31:11] <soren_> How can I re-use the following code replacing "pb $file" with "pb2" conditionally so I don't have to write another if statement with just that part changed? `capture && qimgv "$file" && prompt "Upload?" && pb "$file" && ...`
[19:31:14] <tirnanog> yes. just trying to put a certain perspective on it. tradeoffs are made in favour of convenient command dispatching.
[19:31:53] <greycat> soren_: put the command name (pb or pb2) in a variable, and expand it
[19:32:03] <kurahaupo_> rendar: Read the documentation explaining how the shell parses its input; it's too long for me to recapitulate here
[19:32:21] <soren_> ty
[19:32:36] <rendar> ok
[19:32:41] <rendar> thanks
[19:32:46] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:33:41] <kurahaupo_> rendar: But a key point is that there are only strings; everything is a string, whether quoted or not. What quotes are for is to control (limit) whether variables are expanded, whether spaces delimit separate strings, and whether strings are subject to globbing and other expansions
[19:34:27] <kurahaupo_> rendar: Note that in the documentation "word" refers to a string
[19:34:53] <rendar> clear now, thanks
[19:35:09] <koollman> rendar: https://dpaste.org/6Z5J (feel free to test more examples)
[19:35:18] <rendar> thanks
[19:38:29] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:39:00] *** Joins: seninha (~seninha@user/seninha)
[19:39:59] *** Parts: deuxexmachina (worker@2a01:7e01::f03c:92ff:fecb:5a96) (WeeChat 3.1)
[19:41:32] *** Joins: zebrag (~chris@user/zebrag)
[19:41:58] *** Joins: eroux (~eroux@102-65-85-177.ftth.web.africa)
[19:44:45] *** Joins: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it)
[19:45:15] *** Joins: sinaowolabi_ (~SinaOwola@41.58.232.135)
[19:45:58] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:50:14] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Ping timeout: 260 seconds)
[19:50:28] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[19:50:40] *** Joins: gdd (~gdd@129.199.146.230)
[19:52:36] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[19:55:47] <soren_> will expanding arrays work with arguments are am I better off making a function inside this case statement? https://0x0.st/osrP.txt
[19:56:38] <tirnanog> they work.
[19:57:37] <tirnanog> # arr=(looks fine to); scalar="me"; printf '<%s>' "${arr[@]}" "$scalar"
[19:57:38] <shbot> tirnanog: <looks><fine><to><me>
[19:58:27] *** Quits: Mo (~Mo@dynamic-077-010-036-013.77.10.pool.telefonica.de) (Read error: Connection reset by peer)
[19:58:51] *** Joins: gabriele (~gabriele@user/gabriele)
[20:03:07] <tirnanog> better to think of them as just words after expansion (because they are).
[20:03:12] *** Joins: yitz (~yitz@exercism/yitz)
[20:05:00] <soren_> ty, my intuition was that they get expanded as strings but it makes sense the shell attempts to execute it so its fine
[20:05:22] <soren_> i mean it does get expanded as strings
[20:06:03] <greycat> the primary thing the shell does is generate a list of strings which are used as arguments when running a command
[20:06:07] <tirnanog> yes. as long as it forms the simple command that you wanted, it's fine.
[20:06:10] *** Quits: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud) (Quit: Textual IRC Client: www.textualapp.com)
[20:06:11] *** Joins: adac (~adac@31.207.101.82)
[20:06:38] <tirnanog> given that the first element of the array is intended as the command name in your case.
[20:06:49] <greycat> that's allowed as well
[20:07:18] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[20:08:13] *** Quits: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it) (Ping timeout: 240 seconds)
[20:08:55] *** Joins: A|an (~Alan@173.218.175.171)
[20:09:23] *** Joins: drd (~drd@host-62-211-44-179.retail.telecomitalia.it)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:06] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:12:20] *** Joins: Mo (~Mo@dynamic-077-010-036-013.77.10.pool.telefonica.de)
[20:13:07] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[20:13:38] *** Joins: GuiToris (~GuiToris@user/guitoris)
[20:14:10] *** Joins: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[20:16:57] *** Quits: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[20:17:05] *** Quits: alius (~alius@2001:861:4444:49c0:3db0:d0c2:b370:4385) (Quit: Leaving)
[20:17:31] *** Joins: mr-red (~drd@host-62-211-44-179.retail.telecomitalia.it)
[20:18:29] *** Quits: drd (~drd@host-62-211-44-179.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[20:18:30] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[20:20:35] *** Joins: arinov (~arinov@213.194.126.155)
[20:21:12] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.4)
[20:21:34] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[20:24:12] <uuidNuniq> in script, do i need to export PATH?
[20:24:45] <greycat> if you set it, you should export it... in bash it won't matter, but I'm not sure about other sh implementations
[20:24:51] *** Joins: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr)
[20:24:52] *** Quits: mz` (~mz`@user/mz/x-8532539) (Remote host closed the connection)
[20:26:25] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[20:26:30] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.4)
[20:27:27] <uuidNuniq> greycat: why it won't matter in bash?
[20:27:47] <greycat> in bash, once a variable is marked as exported, any subsequent changes of the variable are automatically exported
[20:28:07] *** Joins: mz` (~mz`@user/mz/x-8532539)
[20:28:18] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[20:29:15] <uuidNuniq> i know PATH is exported by default, that -x also pass to script?
[20:29:40] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[20:29:48] <emanuele6> it is the same in POSIX
[20:29:52] <greycat> I can't parse that question.
[20:30:44] <mehwork> is there a way to say "find the subdir bar inside of foo"? I.e., a "find" command that matches bla/foo/bar/  but not bla/bar ?
[20:30:49] <tirnanog> it's not that bash exports it by default per se. rather, that PATH is usually inherited as it was defined by the parent process, which is why it ends up being already flagged as exportable in bash.
[20:30:49] *** Joins: frostwork (~frostwork@user/frostwork)
[20:30:50] <uuidNuniq> i mean, let's say after login, run export, it shows all the vars with -x attr. right?
[20:30:54] <greycat> mehwork: -path
[20:30:56] <tirnanog> # declare -p PATH
[20:30:56] <shbot> tirnanog: declare -x PATH="/usr/bin:/bin"
[20:30:57] *** Quits: mr-red (~drd@host-62-211-44-179.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[20:31:01] <tirnanog> that value came from bash's parent.
[20:31:04] <tirnanog> # ( unset PATH; /bin/bash -c 'declare -p PATH' )
[20:31:05] <shbot> tirnanog: declare -- PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:."
[20:31:33] <tirnanog> note the difference. it's not flagged as exportable in the second case.
[20:31:41] <greycat> OK, rephrasing: in bash IN SANE EXECUTION ENVIRONMENTS it won't matter
[20:31:43] <tirnanog> so, yes, to be absolutely sure, using export is sensible.
[20:31:44] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Quit: WeeChat 3.4)
[20:31:56] <tirnanog> yeah, most of the time it doesn't matter.
[20:31:56] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:31:57] *** Joins: zebrag (~chris@user/zebrag)
[20:31:58] <mehwork> greycat: hmm, the reason i ask is i want a script that can run on different projects that put 'foo/bar' under difference places, but always needs to find it
[20:32:09] <emanuele6> mehwork: -path '*/foo/*/bar/*'
[20:32:10] *** Joins: drd (~drd@93.55.12.223)
[20:32:15] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[20:32:16] <mehwork> emanuele6: ah thanks
[20:32:28] <uuidNuniq> yes. so my second question is : when a script is run, all the output of `export` are passed to the script?
[20:32:30] <greycat> -path wasn't enough? :(
[20:32:36] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Client Quit)
[20:32:53] <tirnanog> uuidNuniq: any variable with the x attribute is given to any sub-process (which could be another script, sure).
[20:33:27] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[20:33:45] <mehwork> greycat: it was apparently, i just wanted to make sure i was framing the question right thanks
[20:34:34] <tirnanog> greycat: interesting that bash defines a default value there. in fact, it seems a little surprising that it doesn't go the whole hog and export it in that case.
[20:35:18] <greycat> I can see a rational argument for it -- the invoker wanted to not have PATH in the environment.
[20:35:38] <uuidNuniq> tirnanog: including all the output of `export` in a login shell? right now my login shell has stuff like : GREP_COLOR HOME LANG ... etc are passed to my script with a shellbang #!/bin/bash ?
[20:35:48] <tirnanog> greycat: hmm. yeah, true. but, by that logic, bash should just leave it alone then?
[20:36:00] * greycat waits for uuidNuniq to ask the real question... I think we're getting closer!
[20:36:07] *** Quits: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com) (Ping timeout: 250 seconds)
[20:36:20] <emanuele6> uuidNuniq: the shebang does not matter
[20:36:41] <tirnanog> yes, all of it.
[20:36:53] <tirnanog> unless you act so as to have it be otherwise.
[20:37:34] <greycat> uuidNuniq: the environment variables that you see in your interactive shell are passed to all programs that you run FROM that interactive shell, but NOT necessarily to all programs that you run by other means (e.g. window manager menu)
[20:37:57] <uuidNuniq> greycat: ok, my realquestion is : 1. i login with my username and passwd, then i run export , i see the outputs ... 2. i run my simple script , do those "outputs" get passed to my script?
[20:38:05] <uuidNuniq> maybe i need to do a test :P
[20:38:10] <tirnanog> hence the use of the term, sub-processes. it doesn't matter whether the sub-process is a shell or not.
[20:38:27] <tirnanog> nor whether it was a shell that came into existence by way of a shebang.
[20:38:35] <greycat> uuidNuniq: only if you run that script FROM your login shell.  Not cron, not other stuff.
[20:38:54] <tirnanog> it affects children, not parents, nor siblings.
[20:39:03] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[20:39:10] <uuidNuniq> greycat: then why is $PATH with -x is passed to my script?
[20:39:15] <emanuele6> and does not affect children after birth
[20:39:20] <greycat> because PATH is one of those environment variables
[20:39:26] <tirnanog> ... because it's flagged as being exportable.
[20:39:28] *** Quits: bluedust (~bluedust@117.204.159.226) (Remote host closed the connection)
[20:39:36] <greycat> !environment
[20:39:36] <greybot> Each process has its own private variable space called the "environment". A child inherits a *copy* of the parent's. See http://mywiki.wooledge.org/Environment
[20:39:58] <tirnanog> when bash prepares to launch a sub-process, the environment is propagated accordingly.
[20:40:18] <tirnanog> and the child then has its own environment.
[20:40:44] <tirnanog> the bot put it better.
[20:41:00] <uuidNuniq> greybot: so, if i run my script with ssh -T user@ip "/path/to/myscript", then the $PATH in my script does not have a -x attr?
[20:41:24] *** Quits: sinaowolabi_ (~SinaOwola@41.58.232.135) (Ping timeout: 240 seconds)
[20:42:34] <tirnanog> here's what happens. bash launches ssh as a sub-process. PATH _is_ copied into the environment that's created for the ssh process. ssh proceeds to do its own thing. whether it conveys environment variables to the remote shell depends on how _both_ ssh and sshd are configured.
[20:42:51] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[20:43:00] <tirnanog> normally, PATH is completely ignored by ssh (as well it should be).
[20:43:11] *** Quits: sdu (~doo@185.44.146.214) (Quit: leaving)
[20:43:36] <emanuele6> `/path/to/myscript' is not a sub-process of your shell; it is a subprocess of a remote shell.
[20:43:52] <tirnanog> the one variable that ssh(1) is guaranteed to send is TERM. that's it.
[20:43:55] <tirnanog> everything else is down to configuration.
[20:44:09] <uuidNuniq> ssh -T n1 export.test | grep PATH: declare -x PATH="/usr/local/sbin:/usr/local/bin:/usr/bin"
[20:44:17] *** Quits: usrnamewastaken (~Delvien@gateway/vpn/pia/delvien) (Ping timeout: 240 seconds)
[20:45:46] <uuidNuniq> cat /usr/local/bin/export.test:
[20:45:51] <uuidNuniq> #!/bin/bash
[20:45:55] <uuidNuniq> declare -p
[20:46:12] <uuidNuniq> it get passed ...
[20:46:21] *** Joins: usrnamewastaken (~Delvien@gateway/vpn/pia/delvien)
[20:46:32] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[20:46:41] <tirnanog> no it doesn't.
[20:47:20] <tirnanog> try PATH="/foo" /usr/bin/ssh ... instead.
[20:47:39] <tirnanog> you should still get the same answer.
[20:47:41] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[20:47:47] *** Joins: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com)
[20:48:15] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:49:08] <uuidNuniq> oh man. i don;t mean that pass the PATH from local to remote. i mean, where did remote script get this "declare -x PATH"
[20:49:14] <tirnanog> oh, I see.
[20:49:19] <tirnanog> in that case, yes.
[20:49:43] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:50:42] *** Joins: mr-red (~drd@host-62-211-44-179.pool62211.interbusiness.it)
[20:51:03] <tirnanog> sshd is initially responsible for defining PATH, but it could be that it was tweaked further thereafter. regardless, it's inherited by the sub-process of the remote shell, which just happens to be an executable bash script in this case.
[20:51:44] *** Quits: drd (~drd@93.55.12.223) (Ping timeout: 268 seconds)
[20:51:46] <uuidNuniq> ssh -t  n1 export.test | grep -F -- -x | 0x0
[20:51:59] <uuidNuniq> https://0x0.st/osrx.txt
[20:52:05] <uuidNuniq> that's everything got passed ...
[20:52:14] *** Quits: mz` (~mz`@user/mz/x-8532539) (Remote host closed the connection)
[20:53:09] <uuidNuniq> this is unbelieable
[20:53:35] *** Joins: mz` (~mz`@user/mz/x-8532539)
[20:54:26] <uuidNuniq> the export.test on remote /usr/local/bin has only 2 lines : a shellbang and declare -p
[20:54:54] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:55:16] <uuidNuniq> let me test cron
[20:55:16] <tirnanog> it's possible that your sshd is configured to accept LANG and LC_* vars. some platforms like to do that by default. most of the rest won't be coming from ssh(1) though, except TERM.
[20:55:21] <mehwork> emanuele6: shouldn't it be -path '*/foo/bar/*' ?
[20:55:39] <tirnanog> cron implementations usually set their own PATH, which is baked in at compile time.
[20:55:39] <mehwork> '*/foo/*/bar/*' didn't work to find blah/foo/bar
[20:55:43] <tirnanog> for their sub-processes.
[20:56:05] <uuidNuniq> tirnanog: yes, i understand the LANG and LC_* that's fine. but others...
[20:56:44] <tirnanog> uuidNuniq: much of it is probably logind, pam etc. you can read the sshd man page to see which variable it is directly responsible for.
[20:56:49] <uuidNuniq> so, the conclution: export PATH is not needed in a bash script. just use PATH="...."
[20:57:39] <uuidNuniq> because in all cases. PATH is set with "-x"
[20:57:41] <tirnanog> most of the time yes. but coming full circle, it's technially possible that your script was not given a sane execution environment, with PATH missing. in that case, you'd be in trouble because the x attribute would be missing on PATH.
[20:57:45] <tirnanog> I demonstrated that earlier.
[20:57:48] <tirnanog> so export doesn't hurt.
[20:58:26] <tirnanog> # unset PATH; /bin/bash -c 'declare -p PATH'
[20:58:27] <shbot> tirnanog: declare -- PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:."
[20:58:51] <tirnanog> it's a curious situation. bash filled in a default value given that PATH was missing entirely in the inherited environment. but note how the x attribute is now missing. that's not good.
[20:58:57] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:59:10] <tirnanog> in summary, export is technically the safest option.
[20:59:51] *** Quits: mr-red (~drd@host-62-211-44-179.pool62211.interbusiness.it) (Ping timeout: 256 seconds)
[20:59:51] <tirnanog> as an aside, including "."? yuck.
[21:00:02] *** Joins: n4dir (~user@i577BC8D9.versanet.de)
[21:00:25] <uuidNuniq> lol. what is that .
[21:00:40] <tirnanog> a stupid default that's baked into bash, it seems. or, at least, the build of bash that the bot is using.
[21:00:51] <tirnanog> it's not the fault of the bot environment. rather, it's baked into bash itself.
[21:01:04] *** Joins: Betal (~Betal@user/betal)
[21:01:09] *** Joins: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it)
[21:01:23] <uuidNuniq> tirnanog:thanks. yes. i agree, in a script export does no harm, using it is the safest optipon
[21:01:30] <tirnanog> # unset PATH; /bin/dash -c 'echo "PATH = $PATH"'
[21:01:31] <shbot> tirnanog: PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
[21:01:32] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:01:35] <tirnanog> hmm.
[21:02:25] <earnestly> # unset PATH; dash -c 'echo glibc'
[21:02:26] <shbot> earnestly: bash: dash: No such file or directory
[21:02:39] <earnestly> Hm, glibc should/did work with this
[21:02:40] <tirnanog> dash is also filling in there, by whatever means.
[21:02:46] <tirnanog> oh well.
[21:02:55] <earnestly> I.e. glibc fallsback on /bin if no PATH
[21:03:06] <earnestly> Might be a compiletime thing
[21:03:45] *** Joins: ttys000 (~ttys000@user/ttys000)
[21:04:29] <emanuele6> mehwork: it depends
[21:04:36] <yitz> That's interesting/odd behavior. I wasn't aware of a PATH fallback
[21:04:42] <mehwork> emanuele6: on what?
[21:05:11] <tirnanog> yitz: the oddest thing to me is that bash would have one while also not bothering to export it where it's needed.
[21:05:30] <emanuele6> if you want to only match a bar directory directly inside foo:  \( -path 'foo/bar/*' -o -path '*/foo/bar/*' \)
[21:05:50] *** Joins: sdu (~doo@185.44.146.214)
[21:06:12] <emanuele6> if you want to match a bar directory inside foo (also indirectly):
[21:06:21] <tirnanog> or called upon, I should say. not necessarily needed.
[21:06:23] <yitz> tirnanog: why would bash export something that isn't set?
[21:06:37] <emanuele6>  \( -path 'foo/bar/*' -o -path '*/foo/bar/*' -o '*/foo/bar/*' -o '*/foo/*/bar/*' \)
[21:07:02] <emanuele6> oops
[21:07:09] <emanuele6>  \( -path 'foo/bar/*' -o -path '*/foo/bar/*' -o 'foo/*/bar/*' -o '*/foo/*/bar/*' \)
[21:07:26] <mehwork> oh
[21:07:31] <emanuele6> (you can omit 'foo/bar/*' and 'foo/*/bar/*' if you are not going to run `find foo')
[21:07:35] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:07:47] *** Quits: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it) (Ping timeout: 256 seconds)
[21:07:53] <tirnanog> yitz: let's consider it from a different vantage point. why would bash set something that wasn't set in the environment (potentially against the wishes of the user), and what is the utility in bash taking it upon itself to do that in the case of PATH, specifically, while not bothering to toggle the x attribute on?
[21:08:07] *** Joins: drd (~drd@host-62-211-44-179.retail.telecomitalia.it)
[21:08:12] <emanuele6> if you are going to use `find .' or `find whatever'; 'foo/*/bar/*', 'foo/bar/*' are unnecessary
[21:08:13] *** Joins: bbju (~bbju@103.144.149.218)
[21:08:14] <mehwork> emanuele6: all i want to do is find foo/bar wether it exists in the root or somewhere nested
[21:08:16] <tirnanog> who would find that useful? I would have thought that it should just either leave it alone completely or at least have the courtesy of exporting it, given what PATH is for.
[21:08:24] <greycat> # env '/!\=\o/' bash -c env | grep o/
[21:08:25] <shbot> greycat: /!\=\o/
[21:08:28] <emanuele6> they are only necessary if you pass foo as a starting point
[21:08:53] <emanuele6> mehwork: oh.
[21:08:59] <greycat> bash will propagate environment variables it receives which are not valid shell variables (not "set")
[21:09:12] <emanuele6> you want to find a directory named "bar" inside "foo"
[21:09:18] <mehwork> emanuele6: yes
[21:09:44] <tirnanog> I just can't imagine a situation in which a use is going to think "thanks, bash! you really saved my hide by noticing PATH was missing and setting some value I wasn't privy to until now. and thanks for not exporting it! you sure saved me a declare +x!"
[21:09:49] <greycat> emanuele6: -path '*/foo/bar/*'
[21:09:55] <emanuele6> that is just    find / -path '*/foo/*' -name bar -type d
[21:10:01] <yitz> tirnanog: bash sets all sorts of bash vars
[21:10:09] <greycat> emanuele6: that would match ./bar/foo/x
[21:10:13] <greycat> err...
[21:10:25] <yitz> But it doesn't muddle the child environment with them, by and large
[21:10:27] <emanuele6> it would not because there is -name bar -type d after
[21:10:49] <emanuele6> it would match foo/x/bar
[21:10:53] *** Joins: sinaowolabi_ (~SinaOwola@41.58.232.135)
[21:11:07] <greycat> -path '*/foo/bar' then
[21:11:12] <emanuele6> if that is not wanted, use   find / -path '*/foo/bar' -type d
[21:11:14] <tirnanog> yitz: sure, most of which are shell variables and it can do with those as it pleases. that's fine. the definition and purpose of PATH goes beyond bash.
[21:11:52] <tirnanog> anyway, I tried to explain it as best I can. if you don't agree, that's also fine.
[21:12:22] <emanuele6> mehwork: if you are searching root, you are better of using the `locate' command from `mlocate'
[21:12:30] <yitz> tirnanog: PATH is a shell variable. By whose definition is it going beyond bash?
[21:12:35] <emanuele6>   locate --regex '/foo/bar/'
[21:12:48] <greycat> PATH is an environment variable used by the execve() call and so on
[21:12:52] <tirnanog> yitz: um, no? it has a meaning that's defined by POSIX
[21:13:04] <yitz> POSIX defines a lot of shell things
[21:13:04] <greycat> err, execlp()
[21:13:08] <emanuele6> or   locate --regex '/foo(/.*)?/bar/'
[21:13:13] <tirnanog> and its obvious utility is in its capacity as an environment variable.
[21:13:15] <emanuele6> `find /' will be very slow
[21:13:24] <greycat> never run find from /
[21:13:41] <greycat> not without -xdev, anyway
[21:14:00] <tirnanog> have you ever met anyone that runs declare +x PATH in their .bashrc? I doubt it.
[21:15:12] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[21:15:25] <uuidNuniq> tirnanog: that is funny "saved me a declare +x!"
[21:15:32] <tirnanog> uuidNuniq: glad you liked it ;)
[21:15:55] <yitz> tirnanog: given that I met a lot of people that tinker with their .bashrc, I'd be pretty surprised if I *didn't* meet someone with that in their .bashrc
[21:16:08] <yitz> But I appreciate you attempting to predict my social interactions
[21:16:31] <tirnanog> I don't think you're arguging in good faith at this point. so I'll just back off and leave it at that.
[21:16:32] <mehwork> emanuele6: -path '*/foo/bar' seems fine
[21:16:51] <mehwork> emanuele6: since i'm running it from a project root already, not /
[21:17:20] <emanuele6> oh
[21:17:37] *** Quits: Kyuzo68 (~Kyuzo@host-79-45-237-213.retail.telecomitalia.it) (Quit: Konversation terminated!)
[21:17:42] <emanuele6> then use find, sure
[21:17:54] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[21:18:21] <mehwork> emanuele6: thanks for the other tips though, it's a good point to use locate in other situations
[21:18:56] <uuidNuniq> emanuele6: i  hate find.
[21:19:13] <sdu> why is GLOBIGNORE not working for dotfiles (e.g. .git) in my script? (with shopt -s dotglob)
[21:19:20] <uuidNuniq> stuff like  {}
[21:19:25] <uuidNuniq> {} \;
[21:20:01] <tirnanog> what's not working? show a test case.
[21:20:40] <tirnanog> find -exec doesn't care about GLOBIGNORE, if that's what you mean. find is its own application.
[21:22:06] <uuidNuniq>  However, setting GLOBIGNORE to a non-null value
[21:22:08] <uuidNuniq>        has the effect of enabling the dotglob shell option, so all other filenames beginning with a ``.''  will match.
[21:22:33] <tirnanog> yes. and it should effect globs. what's not working exactly in your case?
[21:22:52] *** Joins: bluedust (~bluedust@117.204.159.226)
[21:23:12] <sdu> GLOBIGNORE="*.DS_Store*:.git/*:README*" matches .DS_Store on Mac and .git on linux, that is it doesn't ignore them
[21:23:32] <uuidNuniq> so. if you have GLOBIGNORE="bala" you don't need shopt -s dotglob.
[21:24:51] <uuidNuniq> that *
[21:24:55] <uuidNuniq> is expanded
[21:25:43] <tirnanog> are you actually using bash on the Mac? also, what is the glob that you are testing? the value of GLOBIGNORE is only half of the picture.
[21:26:17] <greycat> one fourth of the picture, because we also need to know what files exist, and what output they're seeing
[21:26:29] *** Quits: drd (~drd@host-62-211-44-179.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[21:26:30] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[21:26:42] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[21:26:51] *** Joins: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it)
[21:28:51] *** Quits: bluedust (~bluedust@117.204.159.226) (Remote host closed the connection)
[21:30:06] <sdu> I am in my dotfiles repo and I want to match .bashrc etc in order to do a diff with the actual $HOME dotfiles
[21:30:37] <sdu> but in different machines/use cases I had problem with .DS_Store and .git
[21:30:51] <tirnanog> this isn't adding any new information.
[21:30:58] <sdu> that is the loop for i in **/* matched them
[21:31:07] <tirnanog> ok. that's a start.
[21:31:12] <greycat> oh, suddenly globstar enters the picture
[21:31:42] <uuidNuniq> lol:  if (( _optsavetree )) && [[ -z ${_optpreset[*]} ]]; then // that is from arch mkinitcpio
[21:32:04] <tirnanog> regarding the mac discrepancy, are you using bash there and, if so, which version? the default login shell is zsh these days.
[21:32:15] <uuidNuniq> it uses -z ${var[*]}
[21:32:39] <sdu> The git case didn't have globstar, was only for i in * and then cp -r
[21:32:52] <greycat> !b2
[21:32:52] <greybot> bashphorism 2: The questioner will keep changing the question until it drives the helpers in the channel insane.
[21:33:23] <uuidNuniq> on macOS the bash version is : 3.2
[21:33:34] <greycat> yeah, good luck with that
[21:33:50] <tirnanog> I just tested 3.2. works for me.
[21:33:54] <uuidNuniq> i am sure of that, because i use mac
[21:34:11] <greycat> oh wait, that was an interjection from a spectator
[21:34:26] <tirnanog> so it was.
[21:34:49] <greycat> uuidNuniq: you're not helping us get actual facts out of sdu
[21:35:06] <tirnanog> 3# touch .DS_Store; GLOBIGNORE="*.DS_Store*"; shopt dotglob; printf '%s\n' *
[21:35:08] <shbot> tirnanog: dotglob         on
[21:35:08] <shbot> tirnanog: .bashrc
[21:35:08] <shbot> tirnanog: .mkshrc
[21:35:12] <tirnanog> works fine.
[21:36:46] <tirnanog> but it wouldn't cover **/*. that's probably it.
[21:37:06] <greycat> bash 3.2 doesn't even HAVE globstar
[21:38:09] <tirnanog> I totally forgot.
[21:38:21] <sdu> I use the latest bash from macports which is 5.*
[21:38:40] <tirnanog> in any case, it's true.
[21:38:45] <uuidNuniq> then what is your shebang?
[21:38:49] *** jinsun__ is now known as jinsun
[21:39:26] *** Quits: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it) (Ping timeout: 252 seconds)
[21:39:39] <greycat> sdu: we need a full set of information to try to reproduce the problem.  Shell, actual shell version, files that exist, value of GLOBIGNORE, relevant shopts that are in effect, the glob you tried to match, and the results you saw.
[21:40:29] <uuidNuniq> :O
[21:40:34] <tirnanog> it's actually a pain. assuming the availability of globstar, you'd actually have to write it something like GLOBIGNORE='.DS_Store:**/.DS_Store'
[21:40:37] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[21:40:51] <tirnanog> I don't think it can be done with a single pattern in GLOBIGNORE and also cover the present working directory.
[21:40:58] *** Joins: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it)
[21:41:11] <uuidNuniq> tirnanog: **/*.* is fine?
[21:41:38] *** Joins: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[21:42:01] *** Joins: bloodfart69 (~bloodfart@131.150.105.232)
[21:42:10] *** Quits: bloodfart69 (~bloodfart@131.150.105.232) (Client Quit)
[21:42:26] *** Joins: bloodfart69 (~bloodfart@131.150.105.232)
[21:42:29] *** Joins: anonymouscucumbe (~bloodfart@131.150.105.232)
[21:42:41] *** Quits: anonymouscucumbe (~bloodfart@131.150.105.232) (Client Quit)
[21:43:13] <uuidNuniq> ignore me..
[21:43:17] <uuidNuniq> it is not fine.
[21:43:33] *** Quits: bloodfart69 (~bloodfart@131.150.105.232) (Client Quit)
[21:43:51] *** Joins: bloodfart69 (~bloodfart@131.150.105.232)
[21:44:06] *** Quits: bloodfart69 (~bloodfart@131.150.105.232) (Client Quit)
[21:44:23] <sdu> this is the script that matched .DS_Store http://ix.io/3JXN
[21:44:37] *** Quits: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[21:44:42] <tirnanog> actually, even that's not enough. ** doesn't work in GLOBIGNORE as far as I can gather, even with globstar enabled.
[21:44:58] *** Joins: bloodfart69 (~bloodfart@131.150.105.232)
[21:45:08] <tirnanog> # mkdir -p dir/{,dir}; touch {,dir/{,dir/}}.DS_Store; GLOBIGNORE='**/*.DS_Store'; printf '<%s> ' **/.*
[21:45:09] <shbot> tirnanog: <.DS_Store> <.bashrc> <.mkshrc> <dir/dir/.DS_Store>
[21:45:11] <sdu> I had another scratch script to install my dotfiles but I didn't want to copy .git (or .gitignore), same GLOBIGNORE, no globstar
[21:45:14] <tirnanog> note how it only omitted dir/.DS_Store there.
[21:45:20] *** Quits: bloodfart69 (~bloodfart@131.150.105.232) (Client Quit)
[21:45:42] <tirnanog> (the bot has globstar on)
[21:46:24] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Ping timeout (120 seconds))
[21:46:35] <tirnanog> given all that, I think you'd be better off just matchin with [[
[21:46:48] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[21:47:43] <tirnanog> and skipping the pathnames that you don't want to operate on.
[21:48:39] *** Quits: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[21:48:56] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[21:50:52] *** Joins: rgrinberg (~textual@2806:101e:7:33a5:7059:f90b:c049:c6ca)
[21:50:54] *** Joins: arinov (~arinov@178.240.175.124)
[21:50:54] <omegatron> i'm too lazy to scroll up, but from experience, I know with mac os x it's possible to create a disk image (with diskutil for example) and then make special preparations, so the fu**ing os doesn't create those nasty .DS_Store files on that volume ..  use such a disk/volume then for your work .. (and maybe even make it case-sensitive, so that you could untar a linux kernel archive file for example)
[21:52:04] <uuidNuniq> omegatron: that is a rare hack
[21:52:08] <tirnanog> I'm surprised that globstar doesn't influence GLOBIGNORE. it seems that it would be useful if it did.
[21:52:14] <omegatron> 'rare' ?  lol
[21:52:51] <tirnanog> ah well. the manual doesn't claim that it does. only extglob.
[21:53:17] *** Joins: mr-red (~drd@93.55.12.223)
[21:53:24] *** Quits: drd (~drd@host-62-211-44-179.pool62211.interbusiness.it) (Ping timeout: 268 seconds)
[21:54:02] *** Quits: sinaowolabi_ (~SinaOwola@41.58.232.135) (Ping timeout: 268 seconds)
[21:54:23] <omegatron> I tried many things, before that approach turned out to be the best after all
[21:54:32] *** Quits: adac (~adac@31.207.101.82) (Ping timeout: 240 seconds)
[21:54:49] <omegatron> it has the advantage, that your disk image can be encrypted ..
[21:55:57] *** Quits: arinov (~arinov@178.240.175.124) (Ping timeout: 256 seconds)
[21:57:13] <tirnanog> sdu: [[ $gdotfile == */@(.DS_Store|.git?(/*)|*:Windows:*:README* ]] && continue. somthing like that.
[21:57:25] <tirnanog> with the closing parenthesis that I just missed.
[21:58:34] *** Quits: furrymcgee (~devuan@cgn-213-196-210-78.nc.de) (Quit: leaving)
[21:58:46] <tirnanog> alternatively, build a pruning find command.
[21:59:05] <tirnanog> it would be more efficient.
[21:59:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:59:54] <sdu> thank you tirnanog et al
[22:02:00] <tirnanog> as a starting point: find . -name '.*' \( -name '.DS_Store' -o -name '.git' \) -prune -o -print0
[22:02:53] *** Quits: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com) (Quit: WeeChat 3.4)
[22:03:14] <phy1729> If this is a git repo, why not use .gitignore and git ls-files?
[22:05:57] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[22:06:41] *** Joins: sinaowolabi_ (~SinaOwola@160.152.171.143)
[22:06:54] *** Quits: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Remote host closed the connection)
[22:07:35] *** Joins: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[22:08:13] <sdu> nice idea! and thanks again tirnanog for the code fragments
[22:09:26] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[22:09:56] <uuidNuniq> # f1 () { f2 () { return 1 ; }; f2 ; echo hi ; } ; f1
[22:09:57] <shbot> uuidNuniq: hi
[22:10:00] *** Quits: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Remote host closed the connection)
[22:10:11] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[22:10:13] *** Joins: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[22:10:41] <uuidNuniq> oh no.
[22:11:24] <greycat> -e is not on by default
[22:12:05] <uuidNuniq> i mean, return only apply to the specific function
[22:12:21] <greycat> nothing in this example looks at the return status of anything
[22:12:24] *** Joins: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[22:12:54] <uuidNuniq> not looking at exit status, but to see if that return effect the 'echo hi'
[22:12:58] <greycat> if you change "f2 ; echo hi" to "f2 || echo hi" you will see a different result
[22:13:11] *** Quits: stealth[]- (~stealth]@2001:9e8:36e1:6300:701c:fb77:fe98:95f6) (Quit: Leaving)
[22:14:15] <uuidNuniq> the return only end the rest of codes in f2, it does not end the rest of codes after f2 in f1
[22:14:57] *** Quits: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[22:14:59] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[22:17:18] <greycat> Are you SURPRISED by this?  Pleased?  Displeased?  Confused?  I don't get it.  Did you think there was such a thing as a "multi-level return", analogous to "break 2"?
[22:17:45] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:17:54] <uuidNuniq> SURPRISED
[22:18:03] <greycat> think of f2 as "false".
[22:18:06] <greycat> f1() { false; echo hi; }
[22:18:14] <greycat> did you think "false" would terminate the function?
[22:18:26] <uuidNuniq> but exit does
[22:18:30] *** Quits: bbju (~bbju@103.144.149.218) (Quit: Client closed)
[22:18:38] <greycat> exit terminates the entire shell
[22:19:32] *** Joins: acypa (~nampuk-cm@46.36.14.191)
[22:20:13] <uuidNuniq> i got to rewrite my code ... because i thought return in a different way
[22:20:28] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:f189:ff4:8e52:c4d6)
[22:22:27] <uuidNuniq> was looking at this code from mkinitcpio and i thought i found a BUG :( https://0x0.st/oss9.png
[22:23:15] *** Parts: micah (~micah@debian/micah) ()
[22:24:39] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:f189:ff4:8e52:c4d6) (Client Quit)
[22:28:26] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:29:25] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:29:32] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:29:50] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[22:32:14] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:33:46] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:7059:f90b:c049:c6ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:36:17] *** Joins: MrBlue_ (~MrBlue@37.19.212.13)
[22:37:31] *** Joins: rgrinberg (~textual@187.223.75.25)
[22:37:53] *** Quits: MrBlue (~MrBlue@162.253.71.237) (Ping timeout: 250 seconds)
[22:45:12] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 268 seconds)
[22:45:15] *** MrBlue_ is now known as MrBlue
[22:45:57] *** Quits: acypa (~nampuk-cm@46.36.14.191) (Ping timeout: 240 seconds)
[22:46:44] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:53:17] *** Quits: sinaowolabi_ (~SinaOwola@160.152.171.143) (Ping timeout: 240 seconds)
[22:53:55] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 250 seconds)
[22:56:24] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[23:08:17] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[23:09:34] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[23:10:37] *** Joins: semeion (~semeion@user/semeion)
[23:15:20] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[23:17:08] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:18:09] *** Joins: somlis (~somlis@user/somlis)
[23:18:56] <Thanatermesis> is there a way to redirect the error output to a specific file, but defined directly on the script ?
[23:19:56] <Thanatermesis> or more like "tee" (sending the error output to a file plus the terminal too)
[23:20:49] <greycat> !faq logging
[23:20:49] <greybot> https://mywiki.wooledge.org/BashFAQ/106 -- Logging! I want to send all of my script's output to a log file. But I want to do it from inside the script. And I want to see it on the terminal too!
[23:21:11] <greycat> first approximation: 2> >(tee logfile >&2)   # note that this will affect timing
[23:24:13] *** Quits: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (Ping timeout: 240 seconds)
[23:26:18] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[23:27:33] *** Joins: sazawal (~sazawal@122.161.85.84)
[23:29:07] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:29:34] *** Joins: magla (~gelignite@55d4b9f8.access.ecotel.net)
[23:30:39] <Thanatermesis> thx!
[23:32:50] *** Joins: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de)
[23:32:51] *** Quits: usrnamewastaken (~Delvien@gateway/vpn/pia/delvien) (Ping timeout: 256 seconds)
[23:34:39] *** Joins: usrnamewastaken (~Delvien@gateway/vpn/pia/delvien)
[23:34:57] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[23:37:17] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Ping timeout: 240 seconds)
[23:37:39] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[23:37:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[23:37:54] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[23:38:28] *** Quits: libc (~weechat@user/tessio) (Quit: WeeChat 3.2)
[23:41:48] *** Joins: zeden (~zeden@user/zeden)
[23:42:35] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[23:43:14] *** Joins: gabriele (~gabriele@user/gabriele)
[23:43:38] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[23:48:40] *** Quits: n4dir (~user@i577BC8D9.versanet.de) (Remote host closed the connection)
[23:50:03] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[23:51:23] *** Joins: adac (~adac@31.207.101.82)
[23:51:59] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 252 seconds)
[23:57:15] *** Joins: hellstabber (~hellstabb@178.233.16.12)
