[00:21:16] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[00:39:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[00:42:09] <NimEventer> New Nimble package! networkutils - Various networking utils, see https://github.com/Q-Master/networkutils.nim
[00:50:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:05:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[01:33:08] <NimEventer> New thread by Tmsa04: (Linux) removeDir fails on directory without rw permission, see https://forum.nim-lang.org/t/8883
[01:34:40] *** Joins: lumo_e (~enrico@37.162.50.231)
[01:39:02] *** Quits: lumo_e (~enrico@37.162.50.231) (Read error: Connection reset by peer)
[01:40:00] *** Joins: lumo_e (~enrico@37.162.50.231)
[01:50:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:02:28] <FromDiscord> <planetis> does the docker nimlang/nim include clang?
[02:04:26] <FromDiscord> <planetis> dump question I've never used containers
[02:10:00] <euantorano> This probably doesn't get said enough, but darn does the standard library have some useful tools
[02:11:11] <euantorano> Like, I was just using `strtabs` with a format string and wondered what options there were to handle missing keys - and it turns out they can be pulled from environment variables (which, as it happens is exactly what I wanted!) and you can also specify whether to error, use a blank string, or use the variable name if still missing
[02:11:22] <euantorano> For anybody wondering, see: https://nim-lang.org/docs/strtabs.html#%25%2Cstring%2CStringTableRef%2Cset%5BFormatFlag%5D
[02:12:47] <euantorano> And `strscans` continues to be one of my favourite hidden gems, which I don't think enough people know about
[02:13:22] <FromDiscord> <Elegantbeef> strscans lovely
[02:13:32] <FromDiscord> <Elegantbeef> What's your favourite part of it?
[02:14:40] <euantorano> The sheer simplicity
[02:15:05] <euantorano> It's so easy to use if all you want to do is quickly parse some value from a string
[02:16:49] <FromDiscord> <Elegantbeef> Yay that's what i love aswell, too many people grasp for regex
[02:19:39] <FromDiscord> <Waldecir Santos> do we have any equivalent to python descriptors (https://docs.python.org/3/howto/descriptor.html) in Nim ?
[02:20:46] <FromDiscord> <Elegantbeef> are descriptors just properties?
[02:22:52] <FromDiscord> <Waldecir Santos> They are "classes" that define how the field behave. we can kind do the same overloading the operators, but I'm missing a way to set "defaults" to it
[02:23:14] <FromDiscord> <Waldecir Santos> This is a clear example: https://docs.python.org/3/howto/descriptor.html#orm-example
[02:24:10] <FromDiscord> <Elegantbeef> That's properties afaict
[02:24:48] <FromDiscord> <Waldecir Santos> Kind of yes, do you know how does models ?
[02:25:08] <FromDiscord> <Waldecir Santos> (edit) "Kind of yes, do you know how ... does" 03added "Django"
[02:25:16] <FromDiscord> <Elegantbeef> Npe
[02:25:32] <FromDiscord> <Waldecir Santos> This is why I'm trying to reproduce:
[02:25:40] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3P4K
[02:26:02] <FromDiscord> <Waldecir Santos> It creates a property that also have some "porperties/options" within it
[02:26:32] <FromDiscord> <Elegantbeef> Ah i see
[02:28:20] <FromDiscord> <b4mbus> sent a code paste, see https://paste.rs/6BV
[02:28:55] <FromDiscord> <b4mbus> The compiler is very helpful and says `Error: type expected` üôÇ
[02:30:34] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3P4R here you go wald
[02:30:52] <FromDiscord> <Elegantbeef> named parameters use `=` not `:`
[02:31:04] <FromDiscord> <Elegantbeef> should be `headers = newHttpHeaders(...)`
[02:31:40] <FromDiscord> <b4mbus> yeah it does seem to compile nicely now
[02:31:42] <FromDiscord> <b4mbus> Thanks a lot üôè
[02:32:09] <FromDiscord> <xigoi> This is a really weird inconsistency in Nim's syntax. I always get it wrong.
[02:32:24] <FromDiscord> <Elegantbeef> It's `=` everywhere but typedefs
[02:32:37] <FromDiscord> <Elegantbeef> and constructors
[02:33:06] <FromDiscord> <xigoi> Yeah, and it's the constructors that trip me up most of the time.
[02:36:33] <FromDiscord> <Waldecir Santos> In reply to @Elegantbeef "https://play.nim-lang.org/#ix=3P4R here you go": I need to store more data within the field `nameBacker` I'ld need something like this
[02:36:41] <FromDiscord> <xigoi> I think the Nim equivalent would be just specialized types‚Ä¶‚Üµ(@Waldecir Santos)
[02:37:03] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3P4U
[02:37:06] <FromDiscord> <Elegantbeef> Well make a new type üòÄ
[02:37:36] <FromDiscord> <Elegantbeef> Nim allows you to make as many types as you little heart can desire
[02:37:42] <FromDiscord> <Waldecir Santos> Yeap I know but I'm not sure how to make a "configurable" type in the type block
[02:38:20] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3P4V
[02:38:35] <FromDiscord> <congusbongus> Char is a confusing type name
[02:39:03] <FromDiscord> <Elegantbeef> I dont disagree but i was being lazy
[02:39:05] <FromDiscord> <Waldecir Santos> I got that far, how would you use it/instantiate in a new type declaration ?
[02:39:30] <FromDiscord> <xigoi> sent a code paste, see https://paste.rs/Pg1
[02:39:45] <FromDiscord> <Elegantbeef> Really depends what you're after
[02:40:01] <FromDiscord> <Waldecir Santos> This is what I'm missing https://play.nim-lang.org/#ix=3P4Y
[02:40:47] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3P4Z
[02:40:56] <FromDiscord> <Elegantbeef> `LimitedString[30]`
[02:41:03] <FromDiscord> <Elegantbeef> This would be statically typed by the way
[02:41:22] <FromDiscord> <Elegantbeef> so `LimitedString[30]` cannot be assigned by a `LimitedString[20]`
[02:41:26] <FromDiscord> <xigoi> `[]` is Nim's syntax for generic types. Just like Python.‚Üµ(@Waldecir Santos)
[02:41:36] <FromDiscord> <Elegantbeef> Python has generics?
[02:42:19] <FromDiscord> <Waldecir Santos> @ElegantBeef it dosen't work https://play.nim-lang.org/#ix=3P51
[02:42:29] <FromDiscord> <Waldecir Santos> `Error: initialization not allowed here``
[02:42:40] <FromDiscord> <Elegantbeef> `field: LimitedString[20, 10]`
[02:43:03] <FromDiscord> <xigoi> sent a code paste, see https://play.nim-lang.org/#ix=3P52
[02:43:37] <FromDiscord> <xigoi> sent a code paste, see https://play.nim-lang.org/#ix=3P54
[02:47:55] <FromDiscord> <nothratal (nothratal)> sent a long message, see https://paste.rs/MfL
[02:48:17] <FromDiscord> <nothratal (nothratal)> I probably didn't understand how to evaluate at compile time
[02:48:27] <FromDiscord> <Elegantbeef> `const fileCOntent = staticRead("file.txt")`
[02:49:00] <FromDiscord> <Elegantbeef> You can do `var fileContent {.compileTime.} = staticRead("file.txt")` aswell
[02:49:12] <FromDiscord> <Elegantbeef> Depends what you're doing though
[02:50:29] <FromDiscord> <Waldecir Santos> In reply to @xigoi "Then you would do": I don't need to really do any check these values are going to be used when I need to communicate with the DB server, I'm trying to create a ORM like django on top of nim, that is my goal
[02:51:14] <FromDiscord> <Waldecir Santos> I need either a way to "instantiate" the property in the type declaration block or create a type with "internal values"
[02:51:57] <FromDiscord> <Waldecir Santos> I think that the only way right would be to create a macro with a custom block for model declaration and with that I can inject some procs to handle this at run time
[02:53:15] <FromDiscord> <Waldecir Santos> or I can probably create something like a "procvar" that could work, hmmmm
[02:53:20] <FromDiscord> <Elegantbeef> You can use generics to instantiate it
[02:53:34] <FromDiscord> <Elegantbeef> Like there isnt much reason to use macros here afaict
[02:58:00] <FromDiscord> <Waldecir Santos> Sorry I don get it, can you show me what you mean ?
[02:59:24] <FromDiscord> <nothratal (nothratal)> thanks all, all nice ideas, but I stick to the const-version. Just read that const enforces compile time evaluation
[02:59:43] <FromDiscord> <Elegantbeef> I mean i need a more elaborate example of what you're after
[02:59:57] <FromDiscord> <Elegantbeef> I'm a dullard so i can only have understand you want to put restrictions on types
[03:00:01] <FromDiscord> <Elegantbeef> half understand
[03:01:15] <FromDiscord> <nothratal (nothratal)> I just wanted to embed the content of a file into the code as string, so it doesn't need to be present at runtime.
[03:01:23] <FromDiscord> <Elegantbeef> Not you
[03:01:25] <FromDiscord> <Elegantbeef> Wald
[03:01:30] <FromDiscord> <nothratal (nothratal)> üòÉ
[03:01:32] <FromDiscord> <nothratal (nothratal)> sorry
[03:01:58] <FromDiscord> <Waldecir Santos> @ElegantBeef No I don't want to add restrictions I want types with Hidden values so I can use to build the DB query/tables
[03:02:12] <FromDiscord> <Waldecir Santos> like in here: https://docs.djangoproject.com/en/4.0/topics/db/models/#quick-example
[03:12:23] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3P59
[03:12:28] <FromDiscord> <Elegantbeef> I dont know this seems like what you'd want
[03:12:37] <FromDiscord> <Elegantbeef> I dont know the actual API so not a clue
[03:37:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[03:42:29] <FromDiscord> <Waldecir Santos> Yeah I don't think it's possible rightnow, but maybe I can mimic procvar and that could work, I'll try tomorrow, thank you for helping @ElegantBeef
[04:04:27] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Read error: Connection reset by peer)
[04:04:41] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:04:52] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:04:57] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[04:19:09] *** Quits: lumo_e (~enrico@37.162.50.231) (Quit: Quit)
[04:21:53] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[05:41:29] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[05:49:26] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:29:10] <FromDiscord> <michaelb> sent a long message, see http://ix.io/3P5X
[06:29:50] <FromDiscord> <michaelb> (edit) "http://ix.io/3P5X" => "https://paste.rs/xrk"
[06:30:35] <FromDiscord> <michaelb> I was looking at the blog post re: the announcement for Nim v1.2, but nothing jumped out at me yet, though I may have missed something
[06:30:55] <FromDiscord> <michaelb> (edit) "sent" => "was there something that changed between Nim v1.0 and v1.2 re: order of proc declaration/definition?‚Üµ‚Üµwith Nim v1.2.x, I'm seeing compiler errors re: https://github.com/jackhftang/lrucache.nim/blob/master/src/lrucache.nim#L59-L61‚Üµunless `proc len` gets moved to an earlier pos in the module or there is" | "long message, see http://ix.io/3P5Z" => "forward decl for it earlier in the module"
[06:31:25] <FromDiscord> <Rika> If you wanna figure it out yourself you could git bisect the compiler
[06:31:38] <FromDiscord> <michaelb> sounds fun üòµ
[07:10:41] <FromDiscord> <Require Support> sent a code paste, see https://play.nim-lang.org/#ix=3P66
[07:11:20] <FromDiscord> <Require Support> (edit) "https://play.nim-lang.org/#ix=3P66" => "https://play.nim-lang.org/#ix=3P67"
[07:14:06] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3P68
[07:14:21] <FromDiscord> <Arathanis> you can also use `cs` instead of `csharp` if you wish, means the same thing
[07:14:43] <FromDiscord> <Require Support> In reply to @Arathanis "while i don't know": Thanks sir
[07:14:48] <FromDiscord> <Arathanis> you are welcome
[07:16:11] <FromDiscord> <Rika> You can change the ‚Äústdout‚Äù variable by setting a new file
[07:16:17] <FromDiscord> <Rika> No, they are not streams
[07:19:58] <FromDiscord> <Elegantbeef> Nim does have streams and memory mapped files, https://nim-lang.org/docs/streams.html https://nim-lang.org/docs/memfiles.html though
[07:21:37] <FromDiscord> <Rika> Yes but you cannot set the std variables to them
[07:27:03] <FromDiscord> <Arathanis> @ElegantBeef took a crack at a typed macro
[07:27:34] <FromDiscord> <Elegantbeef> "It got very confused and lost"
[07:27:59] <FromDiscord> <Arathanis> you mentioned making a typed macro that uses `sameType` yesterday
[07:29:44] <FromDiscord> <Arathanis> so i tried setting that up after work today
[07:30:03] <FromDiscord> <Arathanis> was an interesting exercise, `error` is very cool
[07:32:08] <FromDiscord> <Elegantbeef> What's it look like?
[07:32:52] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3P6b
[07:33:48] <FromDiscord> <Elegantbeef> lol `filterit` exists
[07:34:09] <FromDiscord> <Arathanis> i don't really understasnd the implications of `filterit` in this context
[07:34:26] <FromDiscord> <Elegantbeef> for `candidates = handelrParams.filterIt(it[^1].sameType(msProcParam[^2]))`
[07:34:50] <FromDiscord> <Elegantbeef> I'm laughing at the closure statement and pointing out an alternative
[07:35:55] <FromDiscord> <Arathanis> haha yeah i knew there had to be a better way
[07:35:57] <FromDiscord> <Require Support> In reply to @Rika "You can change the": Yes, I've been doing that until now but was just wondering if its possible to do it through memorystreams, memfiles, etc.
[07:36:00] <FromDiscord> <Arathanis> ive run into that closure problem before
[07:36:26] <FromDiscord> <Arathanis> updated code block w/ your suggestion
[07:36:28] <FromDiscord> <Arathanis> really cleans it up
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:32] <FromDiscord> <Elegantbeef> Make a memfile or stream then do `stdout.open(memFile.handle)`
[07:37:22] <FromDiscord> <Elegantbeef> You also dont check that the return type is empty üòõ
[07:38:24] <FromDiscord> <Elegantbeef> Anyway looks good!
[07:38:57] <FromDiscord> <Arathanis> ill have to add that! and thank you
[07:39:25] <FromDiscord> <Arathanis> using the std/sugar anon function syntax lets me not have ot use {.inject.} but I do have to type the params
[07:40:47] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/rpY
[07:41:37] <FromDiscord> <Elegantbeef> This is where i mention that your handler will not work on `proc doThing(a = "hello")` afaik
[07:41:38] <FromDiscord> <Arathanis> yeah, i was also just fiddling with it lol
[07:42:42] <FromDiscord> <Arathanis> true, though it doesn't make much sense to me for it to support that since the idea is for it to be given any parameters it will use when called as a handler.
[07:42:58] <FromDiscord> <Arathanis> though i can see how you might have some params with defaults you expect to not be bound
[07:43:05] <FromDiscord> <Arathanis> it wouldn't be hard to make that ok i think
[07:43:26] <FromDiscord> <Arathanis> basically if there is no candidate but it has a default then its fine
[07:44:56] <FromDiscord> <Require Support> sent a code paste, see https://play.nim-lang.org/#ix=3P6d
[07:45:04] <FromDiscord> <Elegantbeef> I think so
[07:45:30] <FromDiscord> <Require Support> Thanks ill test it out
[07:47:13] <FromDiscord> <Elegantbeef> probably need to pass `fmWrite`
[07:49:00] <FromDiscord> <Arathanis> In reply to @Elegantbeef "probably need to pass": how can i check if the return type is either empty or void
[07:49:17] <FromDiscord> <Arathanis> oop
[07:49:20] <FromDiscord> <Arathanis> why did it reply to that
[07:49:26] <FromDiscord> <Arathanis> must have misclicked
[07:49:50] <FromDiscord> <Elegantbeef> `params[0].kind == nnkEmpty`
[07:50:06] <FromDiscord> <Elegantbeef> or `params[0].sameType(bindsym"void")`
[07:50:41] <FromDiscord> <Arathanis> i tried that and it did not work
[07:50:54] <FromDiscord> <Arathanis>  https://media.discordapp.net/attachments/371759389889003532/940824553893003264/unknown.png
[07:51:01] <FromDiscord> <Arathanis>  https://media.discordapp.net/attachments/371759389889003532/940824584108785664/unknown.png
[07:51:20] <FromDiscord> <Elegantbeef> `and not`
[07:51:37] <FromDiscord> <Arathanis> mmm small omissions totally changing functionality :]
[07:51:43] <FromDiscord> <Elegantbeef> if it's void it's `!= nnkEmpty`
[07:52:40] <FromDiscord> <Arathanis> ok cool that worked, I was on the right track just made a boolean algebra error
[07:53:08] <FromDiscord> <Arathanis> im happy with that, starting to understand the high level concepts. I can forgive myself the occasional boolean algebra error
[07:53:18] <FromDiscord> <Arathanis> (edit) "im happy with that, starting to understand ... theconcepts" 03added "and internalize" | "concepts." => "concepts and ideas."
[07:57:54] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3P6e
[07:58:35] <FromDiscord> <Require Support> sent a code paste, see https://play.nim-lang.org/#ix=3P6f
[07:58:48] <FromDiscord> <Elegantbeef> `cint memFile.fHandle`
[07:59:49] <FromDiscord> <Elegantbeef> Oh nice you need to do `fHandle` on windows and `handle` on \nix
[08:00:07] <FromDiscord> <Require Support> ye im on windows
[08:00:11] <FromDiscord> <Elegantbeef> No clue what `mapHandle` vs. `fHandle` is
[08:01:27] <FromDiscord> <Require Support> sent a code paste, see https://play.nim-lang.org/#ix=3P6g
[08:01:42] <FromDiscord> <Elegantbeef> Uh oh
[08:03:50] <FromDiscord> <Require Support> mapHandle and fHandle seems to be the same thing
[08:04:23] <FromDiscord> <Elegantbeef> I dont know if you can reassign stdout then
[08:04:37] <FromDiscord> <Require Support> might go check how std/osproc does it
[08:05:00] <FromDiscord> <leorize> btw you can't reassign stdout in nim
[08:05:13] <FromDiscord> <leorize> stderr too, for that matter
[08:05:32] <FromDiscord> <Require Support> In reply to @leorize "btw you can't reassign": ü•≤
[08:05:35] <FromDiscord> <leorize> well you can probably do a `reopen`, but it's not very well supported
[08:06:30] <FromDiscord> <Require Support> ye i tried it, but that works for redirecting to another file only I think
[08:06:36] <FromDiscord> <leorize> yep
[08:08:11] <FromDiscord> <leorize> if you are wondering what is osproc's trick, it's simply assigning the input/output handle of the process it's launching to a pipe
[08:08:42] <FromDiscord> <leorize> which you can do for the current process on linux with some `dup2`
[08:09:09] <FromDiscord> <leorize> on Windows it's not that simple the last time I checked
[08:09:15] <FromDiscord> <Require Support> for windows its probably namedpipes?
[08:10:10] <FromDiscord> <leorize> the pipe is less of concern here but rather replacing what the handle refers to
[08:10:26] <FromDiscord> <Require Support> I see
[08:10:39] <FromDiscord> <leorize> on linux you have `dup2()` to do that, I don't know if windows have an equivalent
[08:52:17] <NimEventer> New thread by Mardiyah: How's regex modifier in nim PCRE ?, see https://forum.nim-lang.org/t/8884
[09:00:03] <NimEventer> New question by itil memek cantik: Do a Nim regex modifier just like Perl one, see https://stackoverflow.com/questions/71044343/do-a-nim-regex-modifier-just-like-perl-one
[10:07:46] <FromDiscord> <Arathanis> Can you make a macro factory? A procedure that generates and returns a macro?
[10:09:52] <FromDiscord> <Elegantbeef> No you can make a procedure that operates on `NimNode`s and returns it
[10:09:59] <FromDiscord> <Elegantbeef> So you can just make procedures that do the macro body
[10:10:42] <FromDiscord> <Arathanis> Ah ok, I do see lots of macros implemented with the macro as a wrapper but the heavy lifting is several procs
[10:11:10] <FromDiscord> <Elegantbeef> It's ideal as it enables code reuse for future features
[10:11:15] <FromDiscord> <Elegantbeef> and it breaks them up
[10:11:34] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3P6z
[10:11:36] <FromDiscord> <Arathanis> does not work
[10:11:44] <FromDiscord> <Elegantbeef> Of course not
[10:11:57] <FromDiscord> <Elegantbeef> one `let exampleMacro = macro` makes no sense
[10:12:34] <FromDiscord> <Elegantbeef> two what's the purpose of aliasing the macro?
[10:13:05] <FromDiscord> <Arathanis> well if you could pass parameters to the factory proc you could do interesting things succinctly
[10:13:18] <FromDiscord> <Elegantbeef> I dont follow
[10:14:18] <FromDiscord> <Arathanis> and i figured `let exampleMacro = buildMacro()` made sense in the same way you can do it with procs
[10:14:40] <FromDiscord> <Elegantbeef> Well macros are compile time only
[10:15:06] <FromDiscord> <Elegantbeef> They're not procedures, you cannot take an address of them
[10:15:47] <FromDiscord> <Elegantbeef> Assuming you're just wanting to set state for macros, you could make a template that passes the state then you could just use that
[10:16:10] <FromDiscord> <Arathanis> oh you could do that, huh?
[10:16:13] <FromDiscord> <Arathanis> a template would work
[10:16:24] <FromDiscord> <Arathanis> lots of interesting interaction
[10:17:06] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3P6A
[10:17:31] <FromDiscord> <Elegantbeef> You can use templates or overloads for optional things
[10:18:00] <FromDiscord> <Elegantbeef> https://github.com/beef331/constructor/blob/master/src/constructor/defaults.nim#L76-L94 for a real world example
[10:33:12] <FromDiscord> <Arathanis> can anonymous procs have more than one statement? what about anonymous procs using std/sugar's `=>` syntax?
[10:35:06] <FromDiscord> <Elegantbeef> anonymous procs can have as many statements as normal procs
[10:35:20] <FromDiscord> <Elegantbeef> No clue about sugar cause i dont tend to use that
[10:37:07] <FromDiscord> <Elegantbeef> Thinking about it you may have to use `()` to make it happy for instance `(a, b: int) => (doThing(a, b); echo("Hello", a, b))`
[10:38:08] <FromDiscord> <Elegantbeef> Yes you can make that multilined if you wanted aslong as you have `()`
[10:39:03] <FromDiscord> <Arathanis> looks like you need to use `;` as well
[10:39:45] <FromDiscord> <Arathanis>  https://media.discordapp.net/attachments/371759389889003532/940867046588182578/unknown.png
[10:39:57] <FromDiscord> <Elegantbeef> You shouldnt need `;`
[10:40:09] <FromDiscord> <Rika> ? why not
[10:40:20] <FromDiscord> <Arathanis> well if I remove the semicolons it gets mad lol
[10:40:20] <FromDiscord> <Elegantbeef> It's multiline
[10:40:38] <FromDiscord> <Arathanis>  https://media.discordapp.net/attachments/371759389889003532/940867269955825704/unknown.png
[10:41:54] <FromDiscord> <Arathanis> it just wants the one semicolon https://media.discordapp.net/attachments/371759389889003532/940867587925999616/unknown.png
[10:41:56] <FromDiscord> <Arathanis> it was lonely
[10:42:44] <FromDiscord> <Arathanis> and its cool if the semicolon wants to visit its friend `echo` https://media.discordapp.net/attachments/371759389889003532/940867800019370064/unknown.png
[10:43:04] <FromDiscord> <Arathanis> but not `discard`, we hate that guy https://media.discordapp.net/attachments/371759389889003532/940867883532169217/unknown.png
[10:43:16] <FromDiscord> <Arathanis> i love this behavior its so weird
[10:44:44] *** Joins: PMunch (~PMunch@user/pmunch)
[10:44:51] <FromDiscord> <Rika> idk, i personally would never use =>
[10:47:15] <FromDiscord> <Arathanis> doesn't make it less weird
[10:47:49] <FromDiscord> <Rika> it is weird
[10:48:05] <FromDiscord> <Arathanis> god, I can't figure out how to increment a character to the next character
[10:48:10] <FromDiscord> <Arathanis> im sure its painfully obvious
[10:48:22] <FromDiscord> <Elegantbeef> `char ord(char) + 1`
[10:48:30] <FromDiscord> <Arathanis> not as painfull obvious as I thought
[10:48:33] <FromDiscord> <Elegantbeef> or `chr.succ`
[10:48:37] <FromDiscord> <Arathanis> there it is
[10:48:52] <FromDiscord> <Rika> succ deez nuts
[10:50:42] <PMunch> -_-
[10:51:41] <FromDiscord> <Elegantbeef> "Go pred yourself"
[10:52:49] <FromDiscord> <Arathanis> Is there a way to get a generic, guaranteed unused identifier that I can call repeatedly? like an ident factory
[10:52:57] <FromDiscord> <Arathanis> well, other than rolling your own of course
[10:53:01] <FromDiscord> <Elegantbeef> `genSym`
[10:53:32] <FromDiscord> <Arathanis> nice that is very useful
[10:56:29] <FromDiscord> <Arathanis> can you give them types?
[10:56:44] <FromDiscord> <Elegantbeef> what do you mean it's just a name
[10:56:52] <FromDiscord> <Arathanis> yeah im asking the wrong question
[10:56:55] <FromDiscord> <Arathanis> an example would be better
[10:57:11] <FromDiscord> <Arathanis>  https://media.discordapp.net/attachments/371759389889003532/940871433775644742/unknown.png
[10:57:12] <FromDiscord> <Arathanis> ->
[10:57:25] <FromDiscord> <Arathanis>  https://media.discordapp.net/attachments/371759389889003532/940871493833850891/unknown.png
[10:59:53] <FromDiscord> <Elegantbeef> do `genSym(nskParam)`
[11:00:56] <FromDiscord> <Arathanis> gives me the same error
[11:03:18] <FromDiscord> <Elegantbeef> runnable version?
[11:04:09] <FromDiscord> <Arathanis> like, source code you can fiddle with?
[11:04:17] <FromDiscord> <Elegantbeef> With an example
[11:04:30] <FromDiscord> <Arathanis> im just playing with that macro i specified above
[11:04:44] <FromDiscord> <Arathanis> instead of declaring my own idents im trying to generate them so i dont need specific names
[11:04:45] <FromDiscord> <Elegantbeef> Sure but i want a runnable example i can quickly fix and explain why
[11:04:58] <FromDiscord> <Arathanis> oh ok, one sec
[11:07:30] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3P6M
[11:08:54] <FromDiscord> <Arathanis> made a small edit
[11:08:59] <FromDiscord> <Arathanis> (edit) "https://play.nim-lang.org/#ix=3P6P" => "https://play.nim-lang.org/#ix=3P6O"
[11:09:18] <FromDiscord> <Arathanis> though i guess i should try and figure that part out myself
[11:12:22] <PMunch> Hmm, is there no way to get a type name easily in a macro?
[11:12:37] <FromDiscord> <Elegantbeef> `getTypeImpl[0]`?
[11:12:53] <PMunch> getTypeInst kinda works, but e.g. for a ValueError it returns a nnkRefTy(nnkSym("ValueError"))
[11:13:22] <FromDiscord> <Arathanis> reverted edit, ill try tackling the further work myself first
[11:13:28] <PMunch> For non-ref types it only returns a nnkSym, so getTypeImpl[0] won't work
[11:17:55] <FromDiscord> <Elegantbeef> Oh the issue is your names arent used anywhere but the call
[11:21:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[11:22:15] <FromDiscord> <Arathanis> ah ok
[11:22:31] <FromDiscord> <Arathanis> that error goes away, but i get a redefinition error when i try and use them in the genAst
[11:22:35] <FromDiscord> <Arathanis> ill have to tackle this tomorrow
[11:23:02] <FromDiscord> <Arathanis> got to: https://media.discordapp.net/attachments/371759389889003532/940877937513730119/unknown.png
[11:23:10] <FromDiscord> <Arathanis> resulting in https://media.discordapp.net/attachments/371759389889003532/940877972599107605/unknown.png
[11:42:20] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Ping timeout: 252 seconds)
[11:46:21] *** Joins: Vladar (~Vladar@46.162.2.53)
[11:53:01] *** Joins: Jjp137 (~Jjp137@cpe-172-250-98-9.socal.res.rr.com)
[12:07:00] *** Joins: tiorock (~rc@192.12.112.240)
[12:07:00] *** Quits: tiorock (~rc@192.12.112.240) (Changing host)
[12:07:00] *** Joins: tiorock (~rc@user/rockcavera)
[12:07:00] *** rockcavera is now known as Guest6517
[12:07:00] *** tiorock is now known as rockcavera
[12:09:39] *** Quits: Guest6517 (~rc@user/rockcavera) (Ping timeout: 256 seconds)
[12:11:55] <PMunch> What's the easiest way to get an ISO timestamp in Nim?
[12:12:20] <PMunch> I guess now.format(<ISO format string here>) would work, but I was wondering if that format string was defined somewhere convenient?
[12:12:34] <PMunch> I mean now.format(iso) would be great
[12:18:39] <PMunch> Oh neat, I triggered a compiler error, been a while since I've seen one of those
[12:19:26] <FromDiscord> <Elegantbeef> Fun fun fun
[12:19:46] <FromDiscord> <Elegantbeef> Is this to do with that logging library?
[12:20:11] <PMunch> Haha, yes
[12:20:27] <PMunch> I was doing something I expected to fail, but I expected to get a nice error message
[12:32:25] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:36:55] <NimEventer> New Nimble package! tim - Really lightweight template engine, see https://github.com/openpeep/tim
[12:43:56] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[12:44:24] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[12:44:52] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[13:09:50] <FromDiscord> <Waldecir Santos> Is it possible to use a macro as a "type", e.g:
[13:10:07] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3P7f
[13:10:23] <FromDiscord> <Elegantbeef> Yes you can use macro/templates as a type annotation
[13:12:04] <FromDiscord> <Waldecir Santos> Hmm do you have one example ? I tried and got this
[13:12:05] <FromDiscord> <Waldecir Santos>  https://media.discordapp.net/attachments/371759389889003532/940905385466949642/unknown.png
[13:12:21] <FromDiscord> <planetis> guys should I add usemalloc in the benchmarks\: https://github.com/hanabi1224/Programming-Language-Benchmarks/pull/245 ?
[13:12:25] <FromDiscord> <Waldecir Santos> or do I need to return a `nk?????` that represents a string ?
[13:12:47] <FromDiscord> <planetis> you need to return untyped
[13:13:08] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3P7g
[13:13:42] <FromDiscord> <demotomohiro> `name; myType()` doesn't work?
[13:14:02] <FromDiscord> <demotomohiro> `name: myType()`
[13:14:10] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3P7h
[13:14:17] <FromDiscord> <Waldecir Santos>  https://media.discordapp.net/attachments/371759389889003532/940905938783703050/unknown.png
[13:15:01] <FromDiscord> <Elegantbeef> You didnt invoke it
[13:15:07] <FromDiscord> <Elegantbeef> `name: myType()`
[13:15:19] <FromDiscord> <Waldecir Santos> Oh right, thank you
[13:18:00] <FromDiscord> <Elegantbeef> May i ask what you hope the macro to do?
[13:20:49] <FromDiscord> <Elegantbeef> I know it's in relation to your problem yesterday, just curious
[13:22:04] <FromDiscord> <Waldecir Santos> Yeah it's about yesterdays problem, I'm just messing around with crazy ideas at this moment, if non work, I'll create a new full macro/block for model declaration, I really want to leave this as close as possible as django works, to make entrance easy to nim+web development
[13:22:12] <FromDiscord> <Waldecir Santos> But tbh my main goal is to learn Nim.
[13:23:27] <FromDiscord> <Elegantbeef> Well jumping into macros headfirst is one way to learn it üòÄ
[13:24:15] <PMunch> Is there an easy way to get the name of the current module?
[13:25:31] <FromDiscord> <Elegantbeef> There is not that i know of you need to have a symbol of the variable to propagate up the owners to find
[13:25:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:26:40] <PMunch> Well that's annoying..
[13:27:03] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/Yzs
[13:29:24] <PMunch> I mean you can sorta get it from instantiationInfo
[13:51:20] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[13:53:20] <FromDiscord> <vindaar> @PMunch\: I recently started to embrace first a `typeKind` call on a node and then dispatch based on that. Then have a proc extracting the type from a typedesc, an alias, a generic insantiation, etc. Makes "type extraction" code a bit more sane. Problem is still that getting the type is very tricky, but partially that is because the type one wants is often very specific and not exactly the first thing that might come up
[13:54:28] *** Joins: Vladar (~Vladar@46.162.2.53)
[13:55:58] <PMunch> Yeah inspecting the whole type hierarchy is a bit tricky
[13:57:56] <FromDiscord> <Elegantbeef> Really we need an expanded macros module that has all that stuff
[14:00:50] <FromDiscord> <Elegantbeef> Need a `micros` module which makes your macros smaller üòõ
[14:01:18] <FromDiscord> <vindaar> sent a long message, see http://ix.io/3P7u
[14:02:02] <FromDiscord> <Elegantbeef> disruptek's assume handles that all with options
[14:02:23] <FromDiscord> <vindaar> have a link?
[14:02:28] <FromDiscord> <Elegantbeef> https://github.com/disruptek/assume/blob/master/assume/typeit.nim#L5-L12
[14:02:59] <FromDiscord> <Elegantbeef> This isnt identical this is about the fields, but the same thing can be used for your above logic
[14:03:32] <FromDiscord> <vindaar> yeah, something like that is probably the right approach
[14:03:57] <FromDiscord> <Elegantbeef> I mean it's just one part of the thing that makes sense
[14:04:58] <FromDiscord> <Elegantbeef> more named things like `returnType` or an `parameters` which yields `(name, type, default)`
[14:05:54] <FromDiscord> <vindaar> yep, that would also be very helpful
[14:06:14] <FromDiscord> <vindaar> everything that helps to avoid having to carefully deal with the actual tree structure by hand each time would be a big win
[14:06:33] <FromDiscord> <Elegantbeef> Yea
[14:06:51] <FromDiscord> <vindaar> biggest problem is that in every new macro, I'm never certain what kind of edge cases might come up that will break the code
[14:07:24] <FromDiscord> <Elegantbeef> Yea being a compiler dev isnt fun üòõ
[14:09:22] <FromDiscord> <Elegantbeef> Ideally you replace most indexing with properties but that's hellish üòÄ
[14:09:47] <FromDiscord> <vindaar> properties in what sense?
[14:10:06] <FromDiscord> <Elegantbeef> `myProcDef.body = newStmtList()`
[14:10:32] <FromDiscord> <Elegantbeef> `myIdentDef.typ`
[14:10:34] <FromDiscord> <vindaar> ah, ok
[14:11:16] <FromDiscord> <Elegantbeef> I'm kinda partial to converting common NimNodes into distinct types and work with them that way
[14:11:53] <FromDiscord> <Elegantbeef> The fact all the Nimnodes are exposed to everyone as just an undescript box is absurd imo
[14:12:44] <FromDiscord> <vindaar> well, I think it is good to have that access, but it would be nice to have a type safe layer on top of that
[14:13:38] <FromDiscord> <Elegantbeef> Anyway i'm off, i dont need to talk about this more and encourage myself to do something else
[14:13:49] <FromDiscord> <Elegantbeef> Though i mean i havent touched my game in a few days so clearly that's not working üòÄ
[14:13:49] <FromDiscord> <vindaar> haha, fair enough
[14:29:36] <PMunch> Okay, I got a bit carried away: https://github.com/PMunch/superlog
[14:34:17] <FromDiscord> <MrOkram> Hello, quick question, is it somehow possible to bind a Nim http server to a specific network interface ? (Linux env)
[14:41:56] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[14:47:15] *** tinystoat is now known as typoholic
[15:23:14] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:05] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[15:40:29] *** Joins: rockcavera (~rc@192.12.112.240)
[15:40:29] *** Quits: rockcavera (~rc@192.12.112.240) (Changing host)
[15:40:29] *** Joins: rockcavera (~rc@user/rockcavera)
[15:50:12] <PMunch> @MrOkram, yes, it's just a matter of listening to the correct IP
[15:52:29] <NimEventer> New thread by Mardiyah: Any practical configuration for Nim "REPL", see https://forum.nim-lang.org/t/8885
[16:12:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[16:18:30] *** Joins: arkurious (~arkurious@user/arkurious)
[16:39:58] <FromDiscord> <Rika> In reply to @PMunch "Okay, I got a": Nice
[16:40:16] <PMunch> It's a pretty neat concept
[16:41:50] <PMunch> But I think the `log` macro should just grab whatever is in activeLoggers and the `register` proc should do all the processing. This way it would be possible to define some stuff which is currently not possible.
[16:43:40] <FromDiscord> <Rika> maybe it should be easy to filter modules
[16:43:48] <PMunch> Filter modules?
[16:44:01] <FromDiscord> <Rika> easier since you already can distinguish by instinfo
[16:44:57] <PMunch> Oh yeah, I was considering to add a Module type which you could insert to get the module name as a string or something
[16:45:19] <PMunch> But getting the currently executing module is surprisingly cumbersome
[16:45:30] <FromDiscord> <Rika> Ah, loggers are per loggable type
[16:45:38] <FromDiscord> <Rika> thats kinda crazy
[16:46:31] <FromDiscord> <Rika> maybe you should implement/encourage the usage of some common loggable types
[16:46:36] <PMunch> You can define one over multiple types as well, but then you of course need to use `when x is Y` to determine which fields you have
[16:47:34] <PMunch> Yeah I thought about maybe defining a LogMessage(msg: string) or something like that. But I'm a bit afraid that that would mean everyone would just use that and then you can't filter anything without looking at instantiationInfo any more
[16:48:11] <PMunch> I guess it could be a LogMessage[T: static[string]](msg: string, module: T) though
[16:48:32] <PMunch> With a nice constructor that grabs the current module
[16:49:05] <PMunch> The current implementation doesn't support registerLogger(someType[Generic]) though
[16:50:18] <PMunch> The activeLoggers table should really map from signatureHash to code instead of a string that I manually build from the module
[16:51:59] <PMunch> But then it might be hard to support registering all the versions of a generic type..
[16:55:16] <PMunch> Oh no, that should be fine, I think
[16:59:30] <PMunch> Yeah, since you get a BracketExpr you should be able to extract both the hash for the generic type, and the generic argument, so you'd just need a slight change to the table and a minor fix in the registering macro to support it.
[17:00:42] <PMunch> In fact it would already work if you just made a type alias for your specific version of the generic
[17:28:57] <NimEventer> New thread by Mardiyah: To insert regex pattern into another, see https://forum.nim-lang.org/t/8886
[17:31:58] <PMunch> @Rika, in fact the generic version of LogMessage would work really well. A library could then just `import superlog` which would contain the definition for the generic message and a `log` template which took a string and grabbed the module automatically. Then the user library could register a logger for either the generic type or it could register a logger for a specific module.
[17:33:00] <PMunch> So if you just want to log some strings quick and dirty you don't have to create a separate loggable types file, and the user can then filter messages based on module
[17:35:02] *** Joins: fvs (freevryhei@2600:3c00::f03c:92ff:fe55:ff21)
[17:46:03] <PMunch> Added a small note on the various improvements that could be made: https://github.com/PMunch/superlog#improvements
[17:46:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:49:38] <FromDiscord> <Rika> In reply to @PMunch "<@259277943275126785>, in fact the": ill try to understand you at another time, my brain isnt working for some reason so im prolly gonna go back to sleep
[17:50:25] <PMunch> Haha, sorry for the monologue. I just start thinking about this and my mind fires on all cylinders :P
[17:53:37] <FromDiscord> <Rika> i mean thats good innit
[17:53:55] <FromDiscord> <Rika> i currently understood nothing and i dont know why, i should have
[17:54:10] <FromDiscord> <Rika> i also have one hell of a headache so i should probably go back sleep
[17:54:11] <FromDiscord> <Rika> (edit) "i also have one hell of a headache so i should probably go back ... sleep" 03added "to"
[18:05:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[18:26:18] <PMunch> Damn it, I can't get the symbol for a module without triggering an import..
[18:29:30] <PMunch> I wanted to support something like `registerLogger(LogMessage[module(someModule/someModule)], myLogger)` where `module` would be a macro to get the signatureHash of the module symbol. However `someModule/someModule` isn't an import statement, so I can't just use that. By making `module` a template which called a macro on `import someModule/someModule` I managed to extract a module symbol for `someModule` but that triggers Nim to process the file (which expands 
[18:29:30] <PMunch> the log statements to empty ones since I haven't registered a logger yet).
[18:32:18] <FromDiscord> <narimiran> Nim v1.6.4 is out!! https://nim-lang.org/blog/2022/02/08/version-164-released.html
[18:35:39] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:39:09] <NimEventer> New thread by Miran: Nim 1.6.4 released, see https://forum.nim-lang.org/t/8887
[19:46:37] <FromDiscord> <Waldecir Santos> On a macro how do I return a type ? I can do with string using `ident"string"`. But not sure how to do for my custom type
[19:57:20] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[20:45:37] <NimEventer> New post on r/nim by miran1: Nim 1.6.4 released, see https://reddit.com/r/nim/comments/soinu5/nim_164_released/
[20:59:48] <FromDiscord> <untoreh> sent a code paste, see https://play.nim-lang.org/#ix=3P9u
[21:00:36] <FromDiscord> <untoreh> do I have to hash `w` ?
[21:03:40] <FromDiscord> <Rika> its because you're selectively importing
[21:03:58] <FromDiscord> <Rika> `from sets import toHashSet, contains` or more ideally just `import sets`
[21:52:43] *** Quits: Jjp137 (~Jjp137@cpe-172-250-98-9.socal.res.rr.com) (Quit: Leaving)
[21:52:50] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[21:53:43] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Client Quit)
[21:53:50] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[21:57:00] <FromDiscord> <untoreh> sent a code paste, see https://play.nim-lang.org/#ix=3P9R
[22:00:07] *** Quits: Nuc1eoN (~Nuc1eoN@odin.csportal.net) (Remote host closed the connection)
[22:01:13] <FromDiscord> <Rika> how do you measure the time
[22:02:03] <FromDiscord> <Rika> going from python to nim to python has overhead
[22:03:00] *** Joins: Nuc1eoN (~Nuc1eoN@odin.csportal.net)
[22:06:07] <arkanoid> is there an implicit limit on the amount of await I can do at the same time on a I/O bound system?
[22:26:02] *** Joins: vicfred (~vicfred@user/vicfred)
[22:29:18] <FromDiscord> <auxym> I would assume the limit is just when you become cpu-bound or memory-bound
[22:55:42] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Quit: The Lounge - https://thelounge.chat)
[22:56:05] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:40:36] *** Joins: tiorock (~rc@192.12.112.240)
[23:40:36] *** Quits: tiorock (~rc@192.12.112.240) (Changing host)
[23:40:36] *** Joins: tiorock (~rc@user/rockcavera)
[23:40:36] *** rockcavera is now known as Guest3024
[23:40:36] *** Quits: Guest3024 (~rc@user/rockcavera) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[23:40:36] *** tiorock is now known as rockcavera
[23:40:38] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[23:41:09] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[23:41:35] <FromDiscord> <Waldecir Santos> What NimNode should I use in a macro to return a type ? I know how to do strings with `ident"string"` but I need to do it with my custom type, but no luck
[23:42:04] *** Joins: tiorock (~rc@192.12.112.240)
[23:42:04] *** Quits: tiorock (~rc@192.12.112.240) (Changing host)
[23:42:04] *** Joins: tiorock (~rc@user/rockcavera)
[23:42:04] *** rockcavera is now known as Guest7790
[23:42:04] *** tiorock is now known as rockcavera
[23:43:28] <Amun-Ra> I check the code with dumpAst in reproduce it in macro
[23:45:17] *** Quits: Guest7790 (~rc@user/rockcavera) (Ping timeout: 240 seconds)
