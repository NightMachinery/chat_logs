[00:04:52] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:08:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[00:21:45] *** Quits: nerozero (~nerozero@87.253.63.54) (Ping timeout: 250 seconds)
[00:31:09] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:33:35] *** Joins: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net)
[00:34:37] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[00:37:39] *** Quits: danisztls (~weechat@user/danisztls) (Ping timeout: 268 seconds)
[00:57:31] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 244 seconds)
[01:08:46] *** Joins: aeo1ack (~sg@91.245.82.2)
[01:09:27] <aeo1ack> Hi. How to replace something that's matched by an "outer" s// command in SED? Like if the following would have sense and whould be running the inner s// on \0 (i.e.: on whole matched string of outer s//): s/A.*$/{s/#//g}/g'
[01:10:57] <lopid> you can run substitutions in series, if that's what you mean
[01:15:07] <aeo1ack> My problem is: I have a line with tags before a separator (say, `|`), and with description afterwards. I've preceded each word with # (to "taggiffy" it) and now I want to strip # from the descriptions. Hence I'm aiming at: s/|.*$/{s/#//g}/, i.e.: to replace hashes in first (initially) matched second half of the line
[01:16:29] <geirha> right, you can't "nest" anything inside an s command
[01:17:26] <lopid> you want 'a#b#c|x#y#z' to be 'a#b#c|xyz'?
[01:17:32] <geirha> you can replace |.*# and loop it until there's no more matches
[01:17:46] <geirha> or better, do that to begin with
[01:17:52] <aeo1ack> lopid:  yes
[01:18:20] <aeo1ack> geirha:  that's quite acceptable
[01:19:45] <geirha> # sed -e :a -e 's/\(|.*\)#/\1/; ta' <<< 'a#b#c|x#y#z'
[01:19:46] <shbot> geirha: a#b#c|xyz
[01:21:03] <geirha> you can use a similar loop to add the #-es instead
[01:23:25] <aeo1ack> thanks. I would still be curious if one can run a sub-expression substitute command somehow? To substitute on the second argument of s/// command before it gets substituted?
[01:26:51] <geirha> you can't, but you can use hold space to help. For example by putting the original line into hold space, then removing the first part in pattern space, do the global substitute, then combine hold and pattern space and put a new line together with first part from hold space and second part from pattern space
[01:28:32] <geirha> # sed 'h;s/[^|]*|//;s/#//g;G;s/\(.*\)\n\([^|]*\).*/\2|\1/' <<< 'a#b#c|x#y#z'
[01:28:34] <shbot> geirha: a#b#c|xyz
[01:28:53] <lopid> simples
[01:28:58] <geirha> puh, on the first try for once
[01:30:23] <geirha> I'd use a loop because it's slightly easier on the eyes
[01:32:05] *** Joins: danisztls (~weechat@user/danisztls)
[01:34:54] <aeo1ack> thanks. Could it be that sed is automatically stripping color codes from input?
[01:36:22] <geirha> nope
[01:39:20] <aeo1ack> ok, so it's probably disrupting them by matching the trailing 'm' with the [a-z]+ pattern…
[01:40:22] <aeo1ack> is there an "except" construct maybe? Like in Zsh, ~except-for-this, e.g.: *~*.txt… To be used as: s/[a-z]+~m/…/g' ?
[01:43:20] <lopid> [a-ln-z]
[01:44:27] <aeo1ack> not faithfull, will exclude e.g.: "main"
[01:45:33] <geirha> trying to parse data with terminal escapes in them with sed ... you've really set yourself up for some pain
[01:46:03] <aeo1ack> I suppose there isn't such construct in Sed, as it is a very rare and interesting regex extension found only in Zsh. I must say that it's very powerful, I suppose that one can make up a nice phd white paper out of it
[01:47:08] <aeo1ack> basically, it provides zsh globs (ie. regexs) with an additional negation, hence there are two negations, ^ and ~, and things like: matching in an AND fashion became possible
[01:50:51] <aeo1ack> For example: *Hi*~^*everyone* will match: "Hi there everyone" but not "Hi there everybody". It is read as: lines containing "Hi" and NOT those that DO NOT contain "everyone" ↔ … and those that contain also "everyone"
[01:52:18] <aeo1ack> Nice, isn't it? Normal posix behavior currently is to pipe grep into grep… That's why I think that it's a very peculiar regex extension worth implementing and spreading, and a phd papers :)
[01:52:33] <llua> *use awk*
[01:53:24] <aeo1ack> llua: awk doesn't have any second negation in its regex AFAIK
[01:53:54] <llua> no, but it can do what zsh pattern matching can do with ease
[01:56:37] <llua> # awk '/Hi/ && !/everyone/' <<<$'Hi there everyone\nHi there everybody'
[01:56:38] <shbot> llua: Hi there everybody
[01:58:01] <llua> people that pipe grep to grep solely for pattern matching don't know awk.
[02:00:41] <llua> but yeah, for file name generation, zsh is hard to beat.
[02:05:05] <aeo1ack> ahso, nice :)
[02:10:19] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 265 seconds)
[02:19:30] *** Quits: danisztls (~weechat@user/danisztls) (Ping timeout: 265 seconds)
[03:27:30] *** Joins: danisztls (~weechat@user/danisztls)
[03:28:49] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[03:54:02] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:00:24] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 258 seconds)
[04:37:43] *** Quits: aeo1ack (~sg@91.245.82.2) (Quit: WeeChat 1.6)
[04:39:11] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:40:21] *** Quits: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[04:42:55] *** Joins: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net)
[04:43:27] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 245 seconds)
[04:55:00] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:57:43] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:16] *** Joins: vlm (~vlm@user/vlm)
[05:37:46] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[05:39:04] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[05:52:20] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 258 seconds)
[06:39:11] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[07:35:48] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[07:58:18] *** Quits: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[08:31:05] *** Joins: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:51:37] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[09:03:37] *** Quits: nate3 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 258 seconds)
[09:26:40] *** Quits: danisztls (~weechat@user/danisztls) (Ping timeout: 256 seconds)
[10:05:37] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[10:33:37] *** Joins: nerozero (~nerozero@87.253.63.54)
[10:49:48] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 258 seconds)
[11:01:46] *** Quits: llua (~llua@zsh/developer/llua) (Ping timeout: 240 seconds)
[11:05:25] *** Joins: llua (~llua@zsh/developer/llua)
[11:15:47] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:21:49] *** Joins: Atque (~Atque@user/atque)
[12:01:32] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 268 seconds)
[12:14:21] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[13:16:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:32:12] *** Joins: earnestly (~earnest@user/earnestly)
[14:10:58] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[14:35:04] *** Joins: [R] (~rs@genoce.org)
[15:06:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[15:09:34] *** Joins: psydroid (~psydroid@user/psydroid)
[15:12:25] *** Joins: danisztls (~weechat@user/danisztls)
[15:17:00] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[17:03:53] *** Joins: Torr (~Torr@user/torr)
[17:08:09] *** Joins: TomyWork (~TomyLobo@p200300e80f133c006404b90521ff8120.dip0.t-ipconnect.de)
[17:19:03] *** Joins: lgc (~lgc@user/lgc)
[17:20:33] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 276 seconds)
[17:21:18] *** Joins: Torr (~Torr@user/torr)
[17:53:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[19:09:14] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[19:09:47] *** Joins: totenkoph (~scythe@user/totenkoph)
[19:23:30] *** Joins: ferdna (~ferdna@user/ferdna)
[19:43:46] *** Quits: danisztls (~weechat@user/danisztls) (Ping timeout: 256 seconds)
[19:57:12] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[20:08:55] *** Joins: Torr (~Torr@user/torr)
[20:09:02] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:33:44] *** Joins: danisztls (~weechat@user/danisztls)
[20:41:08] *** Quits: TomyWork (~TomyLobo@p200300e80f133c006404b90521ff8120.dip0.t-ipconnect.de) (Quit: Leaving)
[21:20:04] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[21:50:22] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[22:04:06] *** Quits: danisztls (~weechat@user/danisztls) (Quit: I will return...)
[22:05:50] *** Joins: danisztls (~weechat@user/danisztls)
[22:17:19] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[22:43:52] *** Joins: fafner (~fafner@dslb-094-217-056-198.094.217.pools.vodafone-ip.de)
[23:00:32] *** Quits: nerozero (~nerozero@87.253.63.54) (Ping timeout: 245 seconds)
[23:16:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:30:32] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
