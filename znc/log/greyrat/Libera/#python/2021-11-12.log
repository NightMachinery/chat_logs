[00:00:56] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[00:01:26] *** Joins: teut (~teut@223.182.71.245)
[00:01:29] <shodan45> super noob question.... is there a way to do a "dumb include" with python?
[00:01:40] <SnoopJ> shodan45, what is a "dumb include?"
[00:01:53] <shodan45> SnoopJ: like C or PHP
[00:01:57] <SnoopJ> Like how C's #includ--ah, okay
[00:02:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[00:02:04] <shodan45> "put contents of X file here"
[00:02:19] <SnoopJ> shodan45, `from thingy import *` will define all the same names in the current namespace, but it's pretty bad practice.
[00:02:30] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[00:02:35] *** Quits: MikZyth (~MikZyth@host-206-152-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[00:02:35] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 268 seconds)
[00:02:53] <shodan45> I'm trying to separate server-specific stuff from other stuff in my django settings.py
[00:03:02] <kop> shodan45: You could always layer a macro processor like cpp or m4 on top.  :-/
[00:03:14] <shodan45> I thought it would be super easy, but it isn't
[00:03:31] <SnoopJ> shodan45, ahh, well, it's more acceptable to do a so-called "star import" when you're using it to bring a bunch of separate files together this way
[00:03:32] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 240 seconds)
[00:03:38] *** Joins: davor (~davor@user/davor)
[00:04:07] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[00:04:11] *** Parts: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) ()
[00:04:12] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[00:04:29] <SnoopJ> not uncommon to see `from .implementation import *` in `foo/__init__.py` where `foo/implementation.py` is where the magic actually lives
[00:04:34] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:04:35] <shodan45> I was trying to, for example, put debug_toolbar in INSTALLED_APPS when on dev server
[00:04:36] <deniska> shodan45: for quick and dirty settings management in django I sometimes do `from .local_settings import *` at the bottom of setup.py under try-except
[00:04:53] <deniska> s/setup.py/settings.py/
[00:05:03] <shodan45> deniska: yeah, that's what I'm doing now
[00:05:15] *** Quits: bfortified (~bfortifie@user/bfortified) (Ping timeout: 256 seconds)
[00:05:31] <Tas-sos> I have *exactly* the same inveronment locally and in docker container
[00:05:32] *** Joins: bfortified (~bfortifie@user/bfortified)
[00:05:53] <Tas-sos> but when I execute from docker I have the followin weird unexpected error:
[00:05:58] <Tas-sos> https://pastebin.com/raw/wqKd4VZ7
[00:06:00] <shodan45> but I'm realizing this won't work: MIDDLEWARE.append('debug_toolbar.middleware.DebugToolbarMiddleware')
[00:06:33] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[00:06:36] <Tas-sos> what is different and when I execute from docker container I get this :
[00:06:46] <Tas-sos> AttributeError: 'TestCaseFunction' object has no attribute 'errors'
[00:06:54] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[00:07:44] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[00:07:44] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[00:07:56] <TML> Tas-sos: Hard to say much without seeing the code that defines TestCaseFunction
[00:08:32] *** Joins: Elodin (~weechat@user/elodin)
[00:08:46] <Tas-sos> TML: https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/agora_unit_tests.py#L30-L33
[00:09:12] <Tas-sos> without commend oun these 4 lines
[00:09:25] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[00:09:46] <Tas-sos> when I had it comment out everything and everywhere works perfect
[00:10:25] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Remote host closed the connection)
[00:10:37] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[00:10:38] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[00:11:03] <Tas-sos> but when I use this `def run...` works *only* when I execute the code locally - without docker container
[00:11:46] *** Quits: pogotech (~pogotech@047-132-047-100.res.spectrum.com) (Remote host closed the connection)
[00:11:49] *** Quits: beli6174 (~beli6174@cpe-76-175-52-6.socal.res.rr.com) (Remote host closed the connection)
[00:11:57] <teut> is this selenium?
[00:12:05] <teut> Tas-sos
[00:13:03] <Tas-sos> when I execute it from this Docker:
[00:13:04] <Tas-sos> https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/Dockerfile
[00:13:13] <Tas-sos> I have the error :-|
[00:13:38] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[00:13:46] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Read error: Connection reset by peer)
[00:14:18] <SnoopJ> Tas-sos, how did you install Python 3.7.3 in stretch? AIUI there isn't a package for it.
[00:14:39] <Tas-sos> teut:yes it is selenium tests, but the problem occurs in unittest.TestCase
[00:14:53] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[00:15:37] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[00:16:21] <Tas-sos> SnoopJ: I'm not sure ( I'm running Python 3.7.3 in Debian GNU/Linux 10 (buster) but the `python:3.7.3-stretch` is the only image that I find with Python 3.7.3
[00:17:39] <SnoopJ> oh, right, you're using the image from dockerhub
[00:17:47] <Tas-sos> yes :-/
[00:17:53] <Tas-sos> it is not good practice ?
[00:18:05] *** Joins: Pickchea (~private@user/pickchea)
[00:18:12] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[00:18:13] <SnoopJ> no opinion personally, but they seem fine (N.B. they are community images, though)
[00:19:38] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:19:42] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[00:19:43] <SnoopJ> Tas-sos, I can't imagine why unittest would be subtly different in this case. I'd probably drop a breakpoint just before the usage of .errors and see where the call history diverges
[00:20:23] *** Joins: yaalon (~yaalon@24.243.76.137)
[00:21:12] <SnoopJ> It's possible the (Python) environments are the same, but the code paths actually executed are not
[00:21:40] <TML> Tas-sos: what is agora_unit_tests-local.py?
[00:21:45] <TML> It doesn't appear in the github repo
[00:21:57] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[00:22:15] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[00:22:28] <TML> You're executing agora_unit_tests-local.py in your primary environment but agora_unit_tests.py in Docker
[00:22:39] <TML> what is the difference between those files?
[00:22:49] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[00:23:00] <TML> (in case you're not seeing it, one has `-local` affixed before the .py extension)
[00:23:46] <Tas-sos> TML: Actaully is exactly this file : https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/agora_unit_tests.py but with different instance - no differences
[00:24:22] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[00:24:38] *** Quits: yaalon (~yaalon@24.243.76.137) (Ping timeout: 246 seconds)
[00:24:46] <Tas-sos> Actually I just set : ContactFormValidations("Firefox", headless=False, instance="http://localhost:8000/")
[00:24:54] <Tas-sos> in order to see what happens
[00:25:12] <TML> Well, your Dockerfile fails to build here because argo-ams-library-0.4.2.tar.gz uses Python2 print statements
[00:25:29] <TML> print "Make sure that %s is in directory"  % (NAME+'.spec')
[00:25:31] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:25:41] <Tas-sos> SnoopJ: What do you mean ?
[00:26:22] *** Joins: Klinda (~superleag@user/klinda)
[00:26:52] <Tas-sos> TML: Where are you find the `argo-ams-library` ?
[00:27:10] <TML> First line of requirements.txt
[00:27:15] <stewie925> does anyone use vagrant vms here?
[00:27:24] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:27:28] <TML> https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/requirements.txt#L1
[00:27:54] <TML> stewie925: It's been a hot minute, but I used them pretty heavily for a long time
[00:28:57] <stewie925> TML: thanks, I'll let you finish helping the other guy...  I havent used vagrant for a while so I kinda need some refresher....
[00:29:08] <Tas-sos> TML: If I'm not wrong, Dockerfile loads this : https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/requirements.txt
[00:29:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:29:55] <TML> Tas-sos: I see - you have multiple Dockerfiles in the repo, so I didn't know where you at
[00:30:07] <Tas-sos> this is the folder from this Dockerfile : https://github.com/Tas-sos/agora-sp/tree/DEVOPS-523/login_error_message/tests/selenium_tests
[00:30:33] *** Joins: nomic (~nomic@185.192.69.7)
[00:30:42] <TML> I didn't realize you had multiple Dockerfiles, so I ran the first one I found
[00:30:45] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[00:31:02] <nomic>   self.di = [{}] * self.digits makes a list di with {} which is the same id, address
[00:31:20] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[00:31:20] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:31:21] <nomic> how would i make self.di[{},{}] where they aren't the same id the dicts
[00:31:23] <Tas-sos> TML: Yes, you are right about that ( sorry ^_^' ) now I try to create a specific docker container only from this file
[00:31:43] <Tas-sos> https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/Dockerfile
[00:31:53] <nomic> so i assign to self.di[0][key] and im assigning to self.di[1][key]
[00:32:14] <ironbeard> Is there a string formatting pattern that will turn "1.234" -> "+$1.234" and -1.234 to "-$1.234"? I'm struggling with the placement of the dollar sign (I've tried "${:+.3f}", but that puts +/- after the dollar sign).
[00:32:33] <grym> nomic: [{} for _ in range(howmanyyouwant)] makes a list of dicts
[00:32:48] <nomic> ok thanks
[00:33:52] <ChrisWarrick> ironbeard: you might need to do the formatting manually
[00:33:58] <nomic> whats the underscore .. i aint seen that before
[00:34:03] <nomic> represent
[00:34:11] <grym> nomic: it doesn't mean anything
[00:34:14] <grym> (special)
[00:34:15] <TML> nomic: it's a variable name
[00:34:21] <TML> like x or foo
[00:34:23] <grym> it's a conventional variable name for "i'm not important"
[00:34:25] <nomic> ok foo
[00:34:39] <ironbeard> ChrisWarrick: I was afraid of that.. just hoping for something succinct I can pass to Pandas, but it seems I might need to make a function to detect sign and then spit out one of two string formats
[00:34:47] <Tas-sos> Oh! When I run:   python agora_unit_tests.py  *locally* everything goes well.. BUT
[00:34:56] <ChrisWarrick> ironbeard: functions are great
[00:35:07] <ironbeard> @ChrisWarrick lol, well, sure :)
[00:35:11] <Tas-sos> when I run pytest agora_unit_tests.py also now locally I have : https://pastebin.com/raw/S1fUczw4
[00:35:23] <Tas-sos> so, the problem is the pytest ?
[00:35:56] <nomic> so u can use underscore as a throwaway variable name .. just undersvcore as a var name
[00:36:03] *** Joins: iflema (~ian@user/iflema)
[00:36:34] <grym> nomic: yes
[00:37:03] <nedbat> Tas-sos: can you link us to your code?
[00:37:05] <jinsun> Tas-sos: ah I was just going to say that, I could reproduce with a very simple case https://bpa.st/QVBA
[00:37:08] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[00:37:53] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 264 seconds)
[00:37:59] <Tas-sos> now I also upgrate locally to   `pytest-6.2.5`  but again now I have the same error from pytest *only* also locally
[00:38:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[00:39:27] <Tas-sos> now I'm in a better way.. I can reproduce it also locally ( without docker environmetn ) the problem occurs when I run pytest ( no python )
[00:39:33] <nedbat> Tas-sos: are you defining your own run() method?
[00:39:47] <Tas-sos> nedbat: This is my code : https://github.com/Tas-sos/agora-sp/blob/DEVOPS-523/login_error_message/tests/selenium_tests/agora_unit_tests.py
[00:40:13] <Tas-sos> jinsun: how you run it this ?
[00:40:16] <nedbat> Tas-sos: and what error are you getting?
[00:40:23] <Tas-sos> python a_test.py
[00:40:23] <Tas-sos> or
[00:40:29] <Tas-sos> pytest a_test.py
[00:40:30] <Tas-sos> ?
[00:40:31] *** Parts: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Até logo)
[00:40:40] <nedbat> Tas-sos: btw, you don't need lines 26-27 and 81-82
[00:40:42] <TML> nedbat: AttributeError: 'TestCaseFunction' object has no attribute 'errors'
[00:40:51] <TML> that's Tas-sos' error
[00:40:56] <nedbat> Tas-sos: can you pastebin the full error report?
[00:41:02] <Tas-sos> when I execute python a_test.py   everything goes well,
[00:41:10] <jinsun> Tas-sos: tried both, and and I get same error as you when I run with pytest and no errors with python
[00:41:34] <Tas-sos> when I execute   pytest a_test.py  I have the error : https://pastebin.com/raw/S1fUczw4
[00:41:37] <jpic> hi all, thank you for helping me upgrading my asyncio subprocess code today! This is the little asyncio subprocess wrapper I needed to create and that I'm sharing with you: https://yourlabs.io/oss/shlax
[00:41:38] <Tas-sos> AttributeError: 'TestCaseFunction' object has no attribute 'errors'
[00:41:48] <jinsun> nedbat: you can try running this https://bpa.st/QVBA with python and pytest (I have no idea why that happens)
[00:41:51] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[00:41:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[00:42:00] <nedbat> Tas-sos: that error is from a commented-out line in your code....
[00:42:11] <nedbat> Tas-sos: why do you have your own run method?
[00:42:29] <nedbat> Tas-sos: you don't need to define run(), you can ask pytest to stop on the first error
[00:42:39] *** Joins: sharksauce (sharksauce@user/sharksauce)
[00:42:40] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 268 seconds)
[00:43:02] *** Quits: binary011 (~binary01@192.110.171.216) (Ping timeout: 240 seconds)
[00:44:37] <Tas-sos> jinsun: Thanks! Exactly! Thanks for th reproducing! Now you have exactly the same case  python OK  , pytest ERROR
[00:44:58] <Tas-sos> nedbat: I commend out lines 26-27 and 81-82  but again with pytest I get the same error
[00:45:16] <nedbat> Tas-sos: you get that same error, even with the lines commented out? Then you aren't running that code.
[00:45:21] <TML> In python, result is a unittest.runner.TextTestResult; in pytest, it's a TestCaseFunction
[00:45:28] <nedbat> Tas-sos: I recommend getting rid of the run() method.
[00:45:58] <Tas-sos> nedbat: Yes I just this `der run` only in order to stop the test cases if I have every failure in my code
[00:46:16] <Tas-sos> in FAIL ( actually in login ) stop everyting!
[00:46:17] <nedbat> Tas-sos: right: you don't need that method. pytest can do that for you
[00:46:29] <Tas-sos> thats why I put this def run()...
[00:47:01] <nedbat> Tas-sos: you're kind of writing for unittest, but sometimes using pytest.  Choose one or the other, and stick with it.
[00:47:05] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[00:48:59] *** Joins: emerent_ (~quassel@p200300cd573070b2ba27ebfffed28a59.dip0.t-ipconnect.de)
[00:48:59] *** Quits: emerent (~quassel@p200300cd57307093ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (erbium.libera.chat (Nickname regained by services)))
[00:48:59] *** emerent_ is now known as emerent
[00:49:27] <Tas-sos> how can I do that when I run pytest ( I'm not sure if I understand you.. )
[00:50:07] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:980f:52b1:3588:6451)
[00:50:09] <Tas-sos> ok.. maybe I mixed bit.. sorry.. my fault..  Actually I want to execute only with pytest this is my goal
[00:50:22] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:50:28] <Tas-sos> but when I have the first failure to stop all other tests
[00:50:42] <nedbat> Tas-sos: pytest --max-fail=1
[00:50:51] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:51:00] <nedbat> sorry, --maxfail=1
[00:54:28] *** Joins: vd65 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:54:42] <Tas-sos> nedbat: Oh my god!
[00:54:49] *** Joins: cliluw (~cliluw@47.147.80.149)
[00:54:49] <Tas-sos> yes! It's work!! 0.0
[00:55:04] <Tas-sos> pytest agora_unit_tests.py --maxfail=1
[00:55:26] <Tas-sos> Oh! My god guys! Unbelievable!
[00:56:44] <nedbat> Tas-sos: pytest is wonderful, and if it can't do something you need, there's probably a plugin that does.
[00:57:34] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Remote host closed the connection)
[00:57:57] <Tas-sos> So many hours..! I didn't now that and the and I think the biggest problem I had was that I expected exactly the same behavior from both `python` and `pytest`
[00:58:34] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[00:58:47] <Tas-sos> oh my god.. Hm.. yes looks.. good ( maybe ^_^ ).. but when you use it, its need to forget the `python` ?
[00:59:00] <Tas-sos> to only work with  `pytest` and only ?
[00:59:24] <grym> Tas-sos: i typically run python -m pytest, but ... :)
[00:59:30] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[00:59:50] <Tas-sos> grym: A! It's the same ? *exactly* ?
[01:02:00] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[01:02:10] *** Joins: hanaan (~naan@user/naan)
[01:02:16] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[01:02:36] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 245 seconds)
[01:02:44] <grym> Tas-sos: when i /the/full/path/to/some/python -m pytest i know *exactly* what's getting run; i have to trust my $PATH to know what `pytest` runs
[01:02:57] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[01:03:27] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:04:02] *** Quits: d3sync (~d3sync@62.1.63.20.dsl.dyn.forthnet.gr) (Ping timeout: 260 seconds)
[01:05:05] <jinsun> there is slight difference in how sys.path is handled in case of pytest, but still mostly the same thing
[01:05:14] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[01:05:23] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9cac:50bd:54aa:d4c2) (Quit: Client closed)
[01:05:32] <Tas-sos> Hm.!! Ok guys! Interesting! Thank you!!
[01:06:18] *** Joins: zebrag (~chris@user/zebrag)
[01:06:24] <Tas-sos> I really-really really THANK you all of you for the help!! I tired you but I was freezing with this problem many hours!
[01:06:31] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:07:00] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:07:03] <SnoopJ> +1 to pytest plugins, it's the gold standard for a plugin system, to me
[01:07:04] <Tas-sos> I really thank you and appriciate you help community!! :-) <3
[01:07:07] <Tas-sos> Thank you!
[01:07:15] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:07:33] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[01:07:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9cac:50bd:54aa:d4c2)
[01:09:17] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[01:09:34] *** Joins: d3sync (~d3sync@130.43.1.88.dsl.dyn.forthnet.gr)
[01:09:45] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:10:46] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d4e2:b355:67fe:933c)
[01:12:52] *** hanaan is now known as Naan
[01:12:57] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Quit: WeeChat 2.3)
[01:13:30] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:9c57:4715:1ac5:a700) (Ping timeout: 268 seconds)
[01:13:39] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:13:49] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:14:55] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9cac:50bd:54aa:d4c2) (Quit: Client closed)
[01:14:57] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 256 seconds)
[01:15:14] *** Joins: alkino (~quassel@user/alkino)
[01:15:58] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[01:16:02] *** Quits: Jefren1 (~Jefren@70.35.67.14) (Ping timeout: 240 seconds)
[01:18:04] *** Joins: Jefren1 (~Jefren@70.35.67.178)
[01:18:10] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[01:19:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:22:17] *** Quits: magla (~gelignite@55d4f4a1.access.ecotel.net) (Quit: Stay safe!)
[01:22:18] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[01:22:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:23:07] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:23:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[01:24:30] <rakoon> Why in asyncio loop.set_exception_handler doesnt hit my handler function? I've read somewhere that not all exceptions end up there, but whatever i try none ends up in my function
[01:25:11] *** Quits: Jefren1 (~Jefren@70.35.67.178) (Ping timeout: 246 seconds)
[01:25:13] *** Quits: stockholm (~Andreas@p200300d2c70bc1009009eef634f80b9d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:25:18] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:27:29] *** Joins: Jefren1 (~Jefren@70.35.66.242)
[01:28:03] *** Quits: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl) (Ping timeout: 250 seconds)
[01:29:36] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[01:31:10] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:31:50] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:32:08] *** Joins: binary01 (~binary01@192.110.171.216)
[01:33:53] *** Joins: vladoski (~vladoski@2001:b07:add:d406:3c91:4335:8b8a:b120)
[01:34:44] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:50] *** Quits: ouzel8___ (~ouzel8_@shams.boastblast.com) (Ping timeout: 260 seconds)
[01:37:44] *** Joins: Gerula (~Gerula@user/gerula)
[01:38:38] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:38:44] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[01:38:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:39:06] *** bloody is now known as fucking
[01:39:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[01:39:46] *** fucking is now known as bloody
[01:39:51] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d4e2:b355:67fe:933c) (Read error: Connection reset by peer)
[01:39:53] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 246 seconds)
[01:39:53] *** ayusta is now known as ayustae
[01:39:54] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[01:40:56] *** Quits: Jefren1 (~Jefren@70.35.66.242) (Ping timeout: 245 seconds)
[01:41:24] *** Joins: fikran (~fikran@user/fikran)
[01:42:57] *** Joins: Jefren1 (~Jefren@70.35.67.216)
[01:43:02] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 240 seconds)
[01:43:13] *** Quits: eblip (~eb0t@90.209.246.132) (Ping timeout: 250 seconds)
[01:44:06] <stewie925> any current users of vagrant vm here?
[01:44:26] *** Joins: Bakunin (~Lindis@user/lindis)
[01:44:31] <SnoopJ> stewie925, let's assume the answer is "yes," what is your next question?
[01:44:37] <dreamer> ++
[01:44:49] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[01:46:03] <stewie925> hi SnoopJ:  I havent access my vagrant vm for a few months.  So I ran started  it up [ (vagrant up) today and saw the message about insecure keys
[01:46:18] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[01:46:26] <stewie925> I let it ran anyway and I saw that vagrant installed and ran some updates, which is fine...
[01:47:01] <stewie925> however, after the process has completed, I checked and noticed it created a new vagrant box,  and the files from my original vagrant vm didnt get ported to the new one.
[01:47:33] *** Quits: gloomy_desktop (~ldorigo@81.161.167.135) (Ping timeout: 250 seconds)
[01:47:41] <stewie925> I tried the #vagrant channel and it is lively as a cemetery
[01:48:18] <stewie925> ok, this question for the vagrant users:) . appreciate the help
[01:49:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[01:49:46] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[01:50:56] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Quit: Client closed)
[01:51:13] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[01:51:20] *** Quits: vladoski (~vladoski@2001:b07:add:d406:3c91:4335:8b8a:b120) (Quit: Textual IRC Client: www.textualapp.com)
[01:51:53] *** Joins: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com)
[01:51:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Read error: Connection reset by peer)
[01:51:55] *** Joins: Enitin (~Enitin@82.102.22.86)
[01:52:31] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[01:52:38] <Pi-sistance> im very confused. im forced to make input arguments in a function a certain type for an assignment, which I don't think i've done yet. do I just set the imput arguments inside tto whatever type by using int(x), float(z) whatever etc?
[01:52:40] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:53:11] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 264 seconds)
[01:53:12] <grym> Pi-sistance: usually, you just act like the function's accepting the proper type and do what you need to do
[01:53:29] *** Quits: Jefren1 (~Jefren@70.35.67.216) (Ping timeout: 256 seconds)
[01:53:41] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:53:48] <grym> you certainly can `def foo(x): x = int(x)`; note that'll raise a ValueError if you pass "foo" for x
[01:53:53] <grym> (an unhandled one)
[01:54:14] <Pi-sistance> yeah, it feels weird. But it seems I must be specific
[01:54:31] <grym> is this homework hoop-jumping or something more real
[01:54:53] <grym> and if the former, can you bpaste the problem description
[01:55:20] *** Joins: Jefren1 (~Jefren@70.35.67.216)
[01:55:32] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[01:55:37] *** Quits: cosimone (~user@93-44-184-239.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:55:48] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[01:55:56] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 245 seconds)
[01:56:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[01:57:29] *** Quits: sfields (~sfields@2605:a601:adea:7a00:a73:feb1:e03c:b9f5) (Quit: Leaving)
[01:57:29] <Pi-sistance> its technically coursework so I dont think I can paste anything. to test the coursework answers im forced to use their variable, input and output argument names, and it specifies that they must be floats. its ok I can just set input argument 1, input argument 2 to floats in the function, was just new to me.
[01:58:07] <grym> i don't think the problem description is proprietary
[01:59:07] <sveinse> How can I get the string that print() outputs? I want to overload print in a class. I remember seeing something once about the possibility to have a file-like object that collects the data in memory. Anyone knows?
[01:59:30] <bjs> sveinse: str(x)  usually
[01:59:46] <bjs> sveinse: oh sorry, I misunderstood.  You can redirect stdout if that's what you mean
[01:59:53] <bjs> (there's a helper contextlib.redirect_stdout to do that)
[02:00:30] <sveinse> bjs: great, thanks
[02:01:51] *** Quits: Jefren1 (~Jefren@70.35.67.216) (Ping timeout: 250 seconds)
[02:03:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:03:21] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:1978:a50e:68ec:4ddb)
[02:03:32] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[02:04:13] *** Joins: Jefren1 (~Jefren@70.35.66.163)
[02:04:17] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[02:05:41] <parv> bjs, Thanks for contextlib.redirect_stdout pointer
[02:08:40] <Luke> What's the least-bad way of packaging a module so it can be installed globally?
[02:08:47] *** Quits: Jefren1 (~Jefren@70.35.66.163) (Ping timeout: 250 seconds)
[02:09:07] <Luke> for execution via its entry point (s), rather than importing by other Python code
[02:09:47] <Luke> sudo pip seems to be the only way to do this so that it's installed somewhere that everyone has on their PATH
[02:10:17] <SnoopJ> It definitely is not, you could `pip install` into a venv that everyone has on their PATH
[02:10:24] <grym> Luke: you don't need to be root to.. ^
[02:10:32] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 240 seconds)
[02:10:42] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[02:10:59] <Luke> sorry, that is on everyone's PATH by default
[02:11:01] *** Joins: Jefren1 (~Jefren@70.35.67.88)
[02:11:03] <SnoopJ> You could also put a symlink to your entrypoint in e.g. /usr/local/bin
[02:11:44] <Luke> hrm, and then install somewhere that everyone can read and execute?
[02:11:54] <SnoopJ> right
[02:12:11] <SnoopJ> if you install it in a venv, the entrypoint's shebang will point to that venv's interpreter
[02:12:17] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:12:35] <Luke> it works, it's just more manual than I'd like
[02:12:54] <SnoopJ> pip is a package manager, not a system configuration tool
[02:13:18] <SnoopJ> You might consult your distribution's packaging system for other ideas, e.g. on Debian/Ubuntu you could make a .deb
[02:13:24] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[02:13:57] <Luke> sure, and I'd be otherwise happy with sudo pip. Distro won't work for me, I'm developing on Ubuntu and deploying on Arch
[02:13:59] <grym> Luke: i bet you could get https://pypa.github.io/pipx/   to do this if you set PIPX_HOME and PIPX_BIN_DIR somewhere useful
[02:14:10] <SnoopJ> `sudo pip` is pretty much always a bad idea
[02:14:19] <Pi-sistance> the definitions here are really f**ing with me knowing exactly wtf I should do. If I am forced to have multiple output arguments in a function do I always have to write them in the format x+a, z+x?
[02:14:27] <SnoopJ> the chance of damaging your system python is relatively high
[02:14:29] <grym> sudo pip is a really unwise course of action
[02:14:30] <Pi-sistance> no ffs! return!
[02:14:39] <Luke> so I've picked up :p
[02:14:56] <grym> Pi-sistance: technically you're only ever returning one thing anyway
[02:15:01] <Pi-sistance> return and then a comma. Im used to using the print command, but seems that isnt an output argument technically?
[02:15:07] <bookworm> so? then dev in a venv as usual and for Arch write a pkgbuild
[02:15:18] <Pi-sistance> if theres a comma, im returning a tuple though?
[02:15:21] <bjs> Pi-sistance: functions always return 1 value, `return 1, 2` is just returning a tuple
[02:15:22] <grym> Pi-sistance: `return foo, bar` returns one object, a tuple, with two elements foo and bar in that order
[02:15:35] *** Quits: Jefren1 (~Jefren@70.35.67.88) (Ping timeout: 256 seconds)
[02:15:39] <bjs> Luke: oh no `sudo pip` the devil
[02:15:49] <Luke> yup ;)
[02:15:49] <bjs> should be a halloween costume
[02:15:52] <Luke> haha
[02:15:58] <grym> Pi-sistance: you can add parens for clarity if you like; `return (foo, bar)`
[02:16:01] <Luke> !remindme 11 months
[02:16:08] <SnoopJ> Luke, if you are just trying to make a 'tool' available to users, you might also consider using a zipapp (if you don't have third-party dependencies) or shiv (if you do)
[02:16:09] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:16:26] <SnoopJ> and there's also PyInstaller
[02:16:30] <bookworm> or you now, an actual distro package
[02:16:34] <bookworm> know*
[02:16:39] <SnoopJ> bookworm, it has been mentioned, yes.
[02:16:46] <grym> bookworm: but then you have to write them! :D
[02:17:04] <Luke> I've only got pypi dependencies, that looks helpful!
[02:17:10] <Luke> ^^
[02:17:11] <grym> shiv is pretty slick
[02:17:17] <Pi-sistance> grym: thanks, is print(foo) is not an output argument though? it always has to be return foo,bar right? an output argument always has to have return in it I mean?
[02:17:23] *** Joins: Jefren1 (~Jefren@70.35.67.214)
[02:17:34] <bjs> Pi-sistance: What do you mean by "output argument" exactly?
[02:17:35] <SnoopJ> automating the process described earlier is relatively straightforward, too: `python3 -m venv /usr/share/app_venv && /usr/share/app_venv/bin/python3 -m pip install something.whl && sudo ln -s /usr/share/app_venv/bin/app_entrypoint /usr/bin/app_entrypoint` or something in this vein.
[02:17:38] <grym> Pi-sistance: printing and returning are not the same.  if you `def foo(): print('hello!')` then foo returns None
[02:18:05] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-237-69.pool.digikabel.hu) (Quit: leaving)
[02:18:15] <grym> (python functions always return _a_ value even if you never type `return`; it's just that that value is None
[02:18:22] <SnoopJ> assuming you have a suitable host Python available to begin with, anyway. On Debian/Ubuntu this usually means installing python3-venv at least
[02:18:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[02:19:45] <Pi-sistance> for it to be an output argument Im not allowed to print the string then?
[02:20:52] <bjs> Pi-sistance: I'm still a little confused by your phrase "output argument", do you just mean function returning?
[02:20:53] *** Joins: grimvar (~grimvar@92.117.245.255)
[02:21:12] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 260 seconds)
[02:21:14] <grym> Pi-sistance: https://bpa.st/M3SA
[02:21:17] <Pi-sistance> bjs: I dont know, thats the problem.
[02:21:26] <bjs> Pi-sistance: where are you seeing this term "output argument" then?
[02:21:38] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[02:22:28] <bjs> an "argument" is usually some kind if input, so an "output input".  These notions do exist (to have an input which is used for the output).  Is that what you're asking about? Or something else
[02:22:36] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:24:02] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 240 seconds)
[02:24:05] *** Joins: stoneware (~stoneware@user/stoneware)
[02:24:30] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[02:24:46] *** Quits: Jefren1 (~Jefren@70.35.67.214) (Ping timeout: 260 seconds)
[02:24:47] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:25:07] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:25:17] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[02:25:42] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:25:55] <bjs> Because this phrase "output argument" is not one that Python itself uses and isn't a common phrase when talking about Python (because we can always just write functions with a `return`)
[02:26:02] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[02:26:20] <Pi-sistance> bjs: I am told to implement a python function with the following input and ouput arguments. one of the output arguments is a string, but it has to have a variable in it, I dont know how to do that unless I use the print function for a string. but is the print function used inside the main function considered an output argument of the main funcion? I dont think so.
[02:26:20] *** Joins: gossie (~gossie@2001:1c02:18d:2900:ab04:8a13:19b2:197e)
[02:26:48] *** Joins: Jefren1 (~Jefren@70.35.66.73)
[02:26:55] *** Quits: mallkrampus (~mallkramp@172.93.177.92) (Ping timeout: 256 seconds)
[02:26:55] <bjs> Pi-sistance: I really don't know what they mean then, where does this text come from?
[02:27:00] *** Joins: grooverman (~grooverma@179.99.123.165)
[02:28:04] *** Joins: TJ- (~root@about/linux/staff/tj-)
[02:30:37] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:980f:52b1:3588:6451) (Quit: Konversation terminated!)
[02:30:50] *** Joins: cheater (~Username@user/cheater)
[02:31:34] *** Joins: Inline (~Inline@2a02:908:1252:7a80:eac0:c033:fea2:56dd)
[02:33:02] *** Quits: Tas-sos (~Tas-sos@46-174-70.adsl.cyta.gr) (Ping timeout: 240 seconds)
[02:33:04] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 268 seconds)
[02:33:16] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[02:33:19] <Pi-sistance> ty for the paste grym
[02:33:30] <Pi-sistance> ill just have to ask the teacher I guess bjs
[02:34:26] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:35:16] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[02:37:24] *** Joins: vd6577 (~vd65@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[02:37:48] <Pi-sistance> oh I can just return a variable I set to equal the print function doh, man im so slow, that will work for any interpretation
[02:38:10] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[02:38:17] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[02:38:19] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[02:38:37] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[02:39:08] <octav1a> Given a (N by m) and (m by 1) column matrix in numpy, how can I add the column to all columns in the other array?
[02:39:22] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Client Quit)
[02:39:45] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:39:51] *** Joins: mallkrampus (~mallkramp@172.93.177.93)
[02:40:37] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:41:08] *** Quits: vd65 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:41:20] *** Joins: Enitin (~Enitin@82.102.22.86)
[02:42:11] *** Quits: mimmy (~mimmy@72.142.88.18) (Quit: WeeChat 3.3)
[02:42:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:42:36] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[02:43:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:43:34] *** Joins: pycurious (~Adium@user/pycurious)
[02:44:59] *** Quits: gossie (~gossie@2001:1c02:18d:2900:ab04:8a13:19b2:197e) (Quit: = "bye bye")
[02:45:23] *** Joins: gossie (~gossie@2001:1c02:18d:2900:ab04:8a13:19b2:197e)
[02:45:28] *** Quits: _xor (~xor@72.49.199.147) (Quit: WeeChat 3.3)
[02:46:03] *** Joins: phryk (~totallyno@user/phryk)
[02:46:29] *** Quits: mallkrampus (~mallkramp@172.93.177.93) (Ping timeout: 250 seconds)
[02:47:21] *** Quits: phryk (~totallyno@user/phryk) (Remote host closed the connection)
[02:48:13] *** Quits: Jefren1 (~Jefren@70.35.66.73) (Ping timeout: 250 seconds)
[02:48:43] *** Joins: phryk (~totallyno@user/phryk)
[02:56:26] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[02:57:12] *** Joins: iflema (~ian@user/iflema)
[02:58:27] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:58:40] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Quit: Client closed)
[02:59:38] *** Joins: mallkrampus (~mallkramp@172.93.207.90)
[03:00:50] *** Joins: Jefren1 (~Jefren@70.35.66.73)
[03:01:01] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:01:53] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 264 seconds)
[03:04:54] *** Joins: dohtem (uid524096@user/dohtem)
[03:05:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:05:11] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:05:38] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 246 seconds)
[03:06:49] *** Quits: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f) (Remote host closed the connection)
[03:06:57] *** Joins: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f)
[03:07:26] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[03:09:14] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:09:27] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:10:16] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[03:10:31] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:10:57] *** Joins: ghostbuster (~admin@user/ghostbuster)
[03:11:43] <ghostbuster> why doesn't print(range(0,5)) print the actual numbers? why doesn't range() return a list unless it's in a for loop?
[03:12:12] <Peng> things don't really know if they're in a for loop
[03:12:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:12:36] <ghostbuster> ah, so why doesn't range print the values?
[03:12:43] <tpr> range returns a so-called generator for optimization reasons
[03:12:56] <Peng> You can convert it to a list
[03:13:37] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[03:13:49] <ghostbuster> ah i see, thank you
[03:13:51] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:17:02] *** Quits: philectro (~quassel@2a02:2788:9a4:946:82ea:b277:6640:1c7f) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:18:39] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[03:19:04] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:19:59] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[03:20:42] *** Quits: mort (~mort@188.166.114.29) (Quit: Ping timeout (120 seconds))
[03:21:00] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[03:21:26] *** Joins: mort (~mort@188.166.114.29)
[03:21:36] <tpr> erm, I did some googling and range isn't apparently returning a generator either..
[03:21:38] *** Quits: olbat (~olbat@user/olbat) (Quit: Bye ...)
[03:21:39] *** Quits: _slate_ (~slate@2a01:4f8:c0c:f0a9::1) (Quit: quit)
[03:21:41] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[03:21:41] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[03:21:42] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Quit: *evaporates*)
[03:21:45] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Quit: ZNC - https://znc.in)
[03:21:50] *** Joins: _slate_ (~slate@2a01:4f8:c0c:f0a9::1)
[03:21:55] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[03:22:00] *** Joins: cebor (~cebor@user/cebor)
[03:22:04] *** Joins: Russell- (~russell@bnc4free/staff/russell)
[03:22:53] *** Quits: Russell (russell@bnc4free/staff/russell) (Read error: Connection reset by peer)
[03:23:37] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[03:24:02] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[03:24:16] *** Russell- is now known as Russell
[03:24:46] <Pi-sistance> can I use while NOT true, and have something loop between different elifs?
[03:25:18] <Pi-sistance> I was confused by while true before, hang on brb.
[03:25:30] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[03:25:39] *** Parts: mawk (mawk@wireguard/contributor/mawk) ()
[03:25:40] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[03:25:46] <mawk> hmm
[03:27:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 240 seconds)
[03:27:41] <Pi-sistance> yes it should keep going through whichever elif aor else statement is relevant UNTIL it IS true, right?
[03:27:56] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[03:28:15] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[03:28:31] <Pi-sistance> I dont think I have to actually write any other looping code for the elifs, else when I use while NOT true?
[03:28:41] *** Joins: Enitin (~Enitin@82.102.22.85)
[03:29:13] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[03:29:23] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:30:08] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[03:31:27] <Pi-sistance> well I can check, unless I get errors elsewhere .
[03:31:32] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[03:31:37] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:34:32] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[03:35:32] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 240 seconds)
[03:36:25] *** Joins: pycurious (~Adium@user/pycurious)
[03:37:36] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[03:38:00] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:38:22] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Ping timeout: 256 seconds)
[03:38:25] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:40:58] *** Joins: luigibu (~luigibu@80.30.201.209)
[03:41:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:42:14] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:43:32] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[03:45:11] *** Joins: jonthesnow (~xizhendu@36.112.204.20)
[03:45:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[03:49:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:49:05] *** Quits: anonymeowo (~anonymeow@45.90.57.51) (Ping timeout: 256 seconds)
[03:49:19] *** Quits: jpic (~jpic@82.142.20.182) (Remote host closed the connection)
[03:49:32] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:ba48:e218:7214:7e82) (Ping timeout: 240 seconds)
[03:50:05] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[03:50:05] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[03:50:19] *** Joins: adder (~adder@user/adder)
[03:50:28] *** Joins: Elodin (~weechat@user/elodin)
[03:50:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:50:44] *** Joins: fikran (~fikran@user/fikran)
[03:51:16] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[03:54:31] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 250 seconds)
[03:55:51] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[03:56:11] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:56:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[03:57:59] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:01:27] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:01:54] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[04:04:02] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 240 seconds)
[04:05:16] *** Quits: luigibu (~luigibu@80.30.201.209) (Quit: WeeChat 3.3)
[04:06:32] *** Quits: grimvar (~grimvar@92.117.245.255) (Ping timeout: 246 seconds)
[04:08:04] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[04:08:32] *** Joins: grimvar (~grimvar@i5C75F5D0.versanet.de)
[04:09:29] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Ping timeout: 256 seconds)
[04:09:35] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[04:14:27] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[04:15:04] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[04:17:59] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[04:18:03] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[04:18:12] *** Quits: wereii (~wereii@2a03:3b40:fe:4f::1) (Quit: ZNC - https://znc.in)
[04:18:58] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[04:19:25] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[04:19:41] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:19:46] *** Joins: wereii (~wereii@2a03:3b40:fe:4f::1)
[04:20:20] *** Joins: anonymeowo (~anonymeow@45.90.57.51)
[04:20:39] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:20:49] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[04:21:04] *** Joins: Wulf (~Wulf@user/wulf)
[04:22:35] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 264 seconds)
[04:22:58] *** Joins: jazzy (~jaziz@user/jaziz)
[04:24:49] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[04:25:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[04:26:38] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:27:22] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[04:29:37] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[04:30:04] *** Joins: naranja (~orange@user/orangeboxcutter)
[04:30:23] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[04:30:25] *** Joins: _xor (~xor@72.49.199.147)
[04:30:36] *** Joins: rapido_edwardo (~rapido_ed@user/rapido-edwardo/x-5639012)
[04:31:02] *** Quits: rapido_edwardo (~rapido_ed@user/rapido-edwardo/x-5639012) (Client Quit)
[04:32:00] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-944c-6b84-6164-e53e.res6.spectrum.com) (Read error: Connection reset by peer)
[04:32:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:33:21] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[04:33:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:33:42] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:34:03] *** Joins: seednode (~seednode@user/seednode)
[04:34:33] <Pi-sistance> if inside my function im in a while loop does returning break it  even if the while condition isnt met???
[04:34:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:35:19] <grym> Pi-sistance: that's something that's easier to test in a REPL than it is to ask
[04:36:00] <Pi-sistance> im trying to make a simpler function to test it now ty
[04:36:01] <octav1a> does anyone know in numpy how to pick points of one array based on a bunch of indexes?   Like if I h ave an array with just two points 0,1 and 4,4  say, and a big 25x25 matrix, and I just want to get points 0, 1 and 4,4 from it, how could I do that?
[04:36:33] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 250 seconds)
[04:37:10] *** Joins: TJ- (~root@about/linux/staff/tj-)
[04:37:53] <mh3f> Pi-sistance:  def test(): \ while True: return 1   # if test() returns, you have your answer :)
[04:38:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[04:39:02] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 240 seconds)
[04:39:20] *** Joins: fluffyballoon (~user@131.93.208.196)
[04:40:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:eac0:c033:fea2:56dd) (Ping timeout: 250 seconds)
[04:40:39] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[04:41:15] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[04:42:24] *** Quits: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net) (Quit: Leaving)
[04:43:36] <SnoopJ> octav1a, `arr[(0, 4), (1, 4)]` will do what you want, but see also np.take()
[04:43:41] <SnoopJ> (note: this makes a copy)
[04:44:49] <octav1a> data_arr = np.array([[5,6],[7,8],[9,10]])  ;  idx_arr = np.array([[0, 1],[0,2]])
[04:45:12] <octav1a> I can do it with tuples like you said but when indexing using idx_arr, it gives some strange shaped results instead.
[04:45:20] <octav1a> same with .take
[04:45:41] <octav1a> I just want a result with the value at 0, 1  followed by the value at 0,2
[04:45:59] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:46:14] <Pi-sistance> sweet
[04:46:14] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[04:46:18] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Read error: Connection reset by peer)
[04:47:36] <phantomotap> working on some code, what's a good word to use for a method that creates the type of a thing?
[04:47:39] <octav1a> oh whoops 0,2 is oob, just say 1,1 instead
[04:47:57] <octav1a> data_arr[(0, 1), (1, 1)] gives array([6, 8])  ;  correct
[04:47:58] <grym> phantomotap: a factory, sometimes
[04:48:28] <octav1a> data_arr[idx_arr] gives array([[[ 5,  6],        [ 7,  8]],       [[ 5,  6],        [ 9, 10]]])
[04:48:36] <octav1a> like wut
[04:48:41] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[04:48:41] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[04:51:12] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 268 seconds)
[04:53:35] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[04:57:26] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[04:57:39] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 256 seconds)
[04:57:56] <SnoopJ> octav1a, https://numpy.org/doc/stable/reference/arrays.indexing.html
[04:58:17] <SnoopJ> specifically the section on "advanced indexing"
[04:58:24] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[04:59:12] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:59:51] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[05:00:05] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[05:00:51] <Pi-sistance> im so frickin slow'
[05:01:09] <Pi-sistance> but experimenting with functions is slowly helping
[05:01:15] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[05:01:40] <grym> Pi-sistance: it's really the only way to learn
[05:02:00] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[05:02:02] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[05:02:32] <Pi-sistance> Aye, especially when there's a huge difficulty gap between the lessons and the coursework :S
[05:03:40] <grym> well, that's kind of par for the course usually
[05:03:45] <grym> "and now draw the rest of the owl"
[05:05:56] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[05:08:13] <Pi-sistance> ah damn, I barely scraped through the lessons haha
[05:08:37] <Pi-sistance> nah, I think ill make it though.. in 10 more hours for question 1 of 4 xD
[05:09:43] *** Joins: onichomp (~onichomp@2806:264:4404:805a:18c1:ca66:416f:eb86)
[05:10:34] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:8509:70f4:4d4:87cd)
[05:10:58] *** Joins: NeoCore (~neocore@45.152.181.13)
[05:11:02] *** Quits: fluffyballoon (~user@131.93.208.196) (Ping timeout: 240 seconds)
[05:11:07] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:13:16] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-b1c5-5665-681a-caa6.res6.spectrum.com)
[05:14:31] <octav1a> SnoopJ: sorry I'm taking a walk, my sanity ran out
[05:14:32] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7cfd-7535-6a92-0681.res6.spectrum.com) (Ping timeout: 240 seconds)
[05:15:33] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[05:15:56] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[05:16:28] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[05:16:40] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:17:04] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:08] <grym> Pi-sistance: good old reverse pareto principle https://www.youtube.com/watch?v=Iz6aYWxYZnI
[05:21:08] <octav1a> SnoopJ: okay that us still a large section but it looks like.. it's only supported if you have a separate array of rows and columns? Or using simple indexing, which is what i want
[05:21:23] <Pi-sistance> ty grym, makes sense.
[05:21:57] <octav1a> So best idea would be to convert the np array of indexes, into a simple python list of tuples, and use that?
[05:22:18] <octav1a> Maybe with a generator in the index brackets?
[05:22:29] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:25:21] *** Lando-HoloNet is now known as Lando-SpacePimp
[05:26:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[05:26:49] *** Quits: flokuehn (~flokuehn@87.123.247.50) (Ping timeout: 250 seconds)
[05:26:54] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:27:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:28:47] *** Joins: flokuehn (~flokuehn@87.123.247.94)
[05:28:47] <Pi-sistance> well the while loop will just stop when its not true anymore.... so will try an if statement and nest a while loop under the first else statement then have another if statement nested under there that will return and break it, and a couple more elifs that should automatically cycle up to the function return
[05:29:38] <Pi-sistance> need tot est in somethibng simpler first, cos my main function could give errors for other reasons
[05:29:53] * octav1a dramatically falls on the floor and faints
[05:30:00] <Pi-sistance> fml, will take me ages to write a test function even
[05:30:11] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[05:30:12] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[05:30:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:01] <grym> Pi-sistance: at first, yes
[05:31:04] <grym> later, no
[05:31:06] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[05:32:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[05:32:46] <Pi-sistance> so tempted just to go straight to the main function, but will prob regret. ok ty grym.
[05:33:27] *** Quits: mallkrampus (~mallkramp@172.93.207.90) (Read error: Connection reset by peer)
[05:37:45] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[05:38:31] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[05:39:40] *** Quits: knstn (~knstn@ppp-94-66-57-29.home.otenet.gr) (Quit: leaving)
[05:41:42] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Ping timeout: 260 seconds)
[05:42:05] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[05:42:24] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[05:42:32] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:8509:70f4:4d4:87cd) (Read error: Connection reset by peer)
[05:47:56] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[05:50:03] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[05:50:05] *** Joins: mallkrampus (~mallkramp@172.93.177.92)
[05:50:33] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:50:34] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[05:51:02] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 260 seconds)
[05:52:27] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[05:52:44] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[05:52:56] *** Joins: luva8 (~luva@146.70.62.252)
[05:54:02] *** Quits: luva (~luva@37.120.197.53) (Ping timeout: 240 seconds)
[05:54:02] *** luva8 is now known as luva
[05:55:49] *** Joins: cheater (~Username@user/cheater)
[05:56:00] *** Joins: Chex (~Chex@user/chex)
[05:56:59] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[05:57:08] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[05:57:44] <Pi-sistance> if and elif statements should keep looping if they are nested in a while loop right?
[05:58:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:58:49] <Pi-sistance> about to hopefully find out xD
[05:59:25] *** Joins: Weizhong (~Weizhong@2601:647:5200:62c:655b:4c99:4a6:a8df)
[06:00:05] *** Joins: fikran (~fikran@user/fikran)
[06:01:38] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[06:02:16] <grooverman> OK, so I now have the multiprocessing module working on my script.
[06:02:41] <grooverman> The problem is that all the outputs from all the spwan processes get mixed up on my terminal.
[06:02:59] <grooverman> How to suppress them or just separate them?
[06:03:22] <Weizhong> Folks, I am trying to do a python migration from 2.7 to 3.8.10. But I hit "TypeError: can not pickle '_thread.lock'" Error.
[06:04:23] <Weizhong> We are subclassing from multiprocessing.Process. Is this scheme not working?
[06:04:24] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:06:11] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[06:06:26] <Weizhong> grooverman I do not have much experience on this, but how about adding a tag for each process, so that you can parse on the tag later?
[06:06:29] *** Joins: hifi (hifi@m.vi.fi)
[06:06:44] *** Joins: audiobirb (~audio@user/audio)
[06:08:13] <grooverman> Weizhong: I thought of this, I think it would be ugly, to add this option to each print line. For that much effort I'd rather drop print() completely and begin using proper logging, for both standalone mode and spawn process mode.
[06:08:26] *** Quits: reset (~reset@user/reset) (Ping timeout: 245 seconds)
[06:08:48] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Quit: guenhael)
[06:09:05] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[06:09:32] <grooverman> I thought multiprocessing could do something like >/dev/null, to supress stdout
[06:11:27] *** Joins: Bakunin (~Lindis@user/lindis)
[06:11:41] <jinsun> with subprocess you can do that by setting stdout=subprocess.DEVNULL https://docs.python.org/3/library/subprocess.html#subprocess.DEVNULL
[06:12:02] <jinsun> I don't think multiprocessing has anything to do that
[06:13:07] <Weizhong> Agreed. Also python's logger facility has log level control. So if you still want to keep the log so that it can be useful sometimes, you can use that?
[06:13:46] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[06:13:51] <jinsun> you could wrap the function you are passing to multiprocessing inside https://docs.python.org/3/library/contextlib.html#contextlib.redirect_stdout I guess
[06:14:40] <jinsun> and give os.devnull as the file there
[06:15:47] <grooverman> Thanks for the suggestions.
[06:17:28] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[06:17:32] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[06:18:32] *** Quits: mallkrampus (~mallkramp@172.93.177.92) (Ping timeout: 240 seconds)
[06:20:52] *** Joins: reset (~reset@user/reset)
[06:21:53] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:22:25] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:22:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:22:58] <Weizhong> For my question above, I put some code to illustrate the situation: https://bpa.st/43SQ
[06:23:29] <Weizhong> Had been spending a whole day on this, so would really appreciate if I could get some help.
[06:23:42] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:23:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:24:06] <Weizhong> Search on stackoverflow did not yield any useful information.
[06:25:28] <grooverman> OOOH, jinsun, it worked, you're the man, thanks!!!!
[06:26:47] <grooverman> Weizhong: bpa.st doesn't work for me, it never opens.
[06:27:18] <grym> grooverman: noscript?
[06:27:39] <grooverman> umatrix, but it doesn't even load, it times out
[06:27:58] <grym> https://bpa.st/+python  loads real quick here
[06:28:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[06:28:54] <grooverman> PING bpa.st (37.139.11.170) 56(84) bytes of data.
[06:29:24] <Pi-sistance> er i set bar=print("foo") and then returned (c,bar) and I have foo printed, then a tuple with (c,none) :S
[06:29:42] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) ()
[06:29:43] <grym> Pi-sistance: yes, print() is a function whose return value is None
[06:30:01] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:01] <grym> Pi-sistance: (it happens to also show text on, usually, your screen! but that's not its return value)
[06:30:40] <grym> so what you describe is exactly what i'd expect to see
[06:30:41] *** Joins: queue- (~nerd@rektnet.com)
[06:30:48] *** Joins: RiFo (~RiFo@user/rifo)
[06:30:54] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:31:07] <grym> Pi-sistance: bar="foo"; print(bar); return c,bar is ... possibly what you wanted
[06:31:16] <grym> then you get a tuple with (c, "foo")
[06:32:10] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[06:32:25] *** Joins: mallkrampus (~mallkramp@172.93.207.85)
[06:32:27] <grym> grooverman: i dunno, maybe it's weird in brazil
[06:32:30] <grym> pings fine here
[06:32:47] <grooverman> grym: is that the ip you're getting resolved?
[06:32:54] <grym> grooverman: yes
[06:33:26] <grooverman> maybe I got ip range blocked
[06:33:43] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:36:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[06:37:24] <Pi-sistance> that doesnt work grym becasue it's not just a string I need to return, I need to return a variable inbetween two string which I only know how to do with the print command
[06:38:21] <kevr> Is there a way to get a legit exact match with -k?
[06:38:33] <kevr> I don't want to add markers specifically for this; I just don't want it to fuzzily match.
[06:39:07] <grym> Pi-sistance: well, print only prints strings
[06:39:11] *** Joins: sgn (~sgn@user/sgn)
[06:39:16] <grym> Pi-sistance: it doesn't _make_ them
[06:40:07] <hifi> I'm trying to figure out if I can make argparse _subparser_ names case insensitive, how deep I need to dig?
[06:40:15] <jinsun> Pi-sistance: you mean like `return "string1", variable, "string2"` ?
[06:40:57] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[06:41:02] <jinsun> Pi-sistance: print doesn't return, return returns
[06:41:41] *** Quits: kostkon (~androirc@2a02:587:a108:5f73:d067:8cf:12ba:3d42) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[06:41:43] <grym> Pi-sistance: you probably want to do what is called "string formatting".  like this: https://bpa.st/OGZQ
[06:42:06] <grym> Pi-sistance: build a string out of variables and literals, return or print it wherever you want
[06:42:51] <grym> but print() _displays_ things, it doesn't assign names or make values
[06:42:59] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 264 seconds)
[06:43:22] <Pi-sistance> yeah, I managed to return what I wanted without print, but it's prettyy messy
[06:43:26] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:43:37] <grym> clean it up, then :)
[06:43:58] <phantomotap> Pi-sistance: post a snippet.
[06:43:59] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:44:48] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:44:58] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[06:45:22] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:45:34] *** Joins: rpkilby (~rpkilby@2600:100f:b108:125e:cd4:f316:59c4:87f5)
[06:46:26] *** Joins: frost (~frost@user/frost)
[06:46:44] <Pi-sistance> ah Its coursework, can only show so much. I think ill be ok, ill google formatting advice.
[06:47:00] *** Quits: Weizhong (~Weizhong@2601:647:5200:62c:655b:4c99:4a6:a8df) (Quit: Client closed)
[06:47:27] <grym> Pi-sistance: so far  you've shown nothing, and it's getting harder to handle
[06:47:51] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:50:20] <Pi-sistance> ok, as long as its just formating its ok I gues . https://bpa.st/AOVA
[06:51:41] <grym> Pi-sistance: right, you're returning a 4-tuple
[06:52:55] <grym> Pi-sistance: https://bpa.st/BAWA  this, on the other hand, is a 2-tuple
[06:53:52] <Pi-sistance> havnt been taught those brackets yet, is that called the string formatting? i can google it if I know the name, thanks.
[06:53:54] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[06:54:02] <grym> those are f-strings
[06:54:30] <grym> if you prefix a string with the character f, then values inside the string surrounded by curlies are automatically converted nicely to their string representations
[06:55:08] <grym> "make a string out of a bunch of variables" is a very common thing to want to do; this is how it's done
[06:55:36] <Pi-sistance> thanks!
[06:57:19] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:57:57] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:59:16] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:59:53] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:00:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:00:14] *** Joins: alzgh (~alzgh@user/alzgh)
[07:00:34] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[07:01:12] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[07:01:17] *** Quits: llh (~llh@user/llh) (Ping timeout: 264 seconds)
[07:04:02] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:04:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:04:03] *** finn_elija is now known as FinnElija
[07:06:02] *** Quits: luva (~luva@146.70.62.252) (Quit: Ping timeout (120 seconds))
[07:06:33] *** Joins: luva (~luva@146.70.62.252)
[07:06:42] <parv> Pi-sistance, Have you been taught how to combine strings  (or, encouraged to read `str` datat type)?
[07:08:59] <Pi-sistance> -parv, not really. im sure ill be fine with it thugh, its the bloody funtion writing thats the bigger problem
[07:09:41] <parv> Pi-sistance, Ok.
[07:09:57] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 250 seconds)
[07:13:25] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[07:14:06] *** Joins: xardas (~xardas@149.233.51.127)
[07:20:26] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:21:06] <Pi-sistance> im getting no response from the function, so I suspect that the nested elif statements in the whille loop didnt loop themselves. if the while condition isnt met then surely it should keep going through the nested if,else and elifs ffs
[07:21:50] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[07:22:04] <Pi-sistance> sxcrew this its 4am
[07:22:44] *** Joins: cdown (~cdown@89.32.122.5)
[07:25:05] *** Joins: teut (~teut@223.182.71.245)
[07:25:26] *** Joins: hemstock (~hemstock@68.71.244.6)
[07:29:16] *** Quits: emf (~emf@2620:10d:c090:400::5:538d) (Ping timeout: 245 seconds)
[07:29:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:29:25] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:1978:a50e:68ec:4ddb) (Remote host closed the connection)
[07:29:28] <Pi-sistance> and no, that should work, so ill test whats wrong tomorrow, ty for hrlp nighty
[07:29:53] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 250 seconds)
[07:31:47] *** Joins: relentless (~relentles@user/relentless)
[07:33:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[07:33:59] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 264 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:39:32] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 268 seconds)
[07:40:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:41:12] *** Joins: xah37 (~manjaro-g@2603-6000-8c0b-3200-0000-0000-0000-0001.res6.spectrum.com)
[07:42:49] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:43:40] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:44:16] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:45:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:46:57] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[07:48:15] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:4d2b:e3c2:e4e:46fc)
[07:49:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:50:11] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 264 seconds)
[07:51:08] *** Joins: noarb (~noarb@user/noarb)
[07:51:30] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[07:52:18] *** Quits: rpkilby (~rpkilby@2600:100f:b108:125e:cd4:f316:59c4:87f5) (Remote host closed the connection)
[07:52:59] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 246 seconds)
[07:52:59] *** jmiehe1 is now known as jmiehe
[07:57:01] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[07:57:28] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:57:47] *** Joins: fluter (~fluter@user/fluter)
[07:58:55] *** Joins: rpkilby (~rpkilby@104.sub-174-204-192.myvzw.com)
[08:00:02] *** Joins: iflema (~ian@user/iflema)
[08:00:54] *** Joins: mcpac82 (~textual@212.25.0.228)
[08:02:22] *** Seto_Kaiba is now known as Hunterkll
[08:03:58] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Killed (NickServ (GHOST command used by thekingofbandit5!thekingofb@thunix.net)))
[08:04:43] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[08:04:49] *** Joins: dambuster_ (~dambuster@185.193.170.225)
[08:05:30] *** Joins: masterkorp4 (~masterkor@user/masterkorp)
[08:05:37] *** Joins: the_rat_ (~ratto@emily.sorcio.org)
[08:06:26] *** Joins: llh (~llh@user/llh)
[08:06:28] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[08:06:52] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:07:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[08:09:26] *** Joins: fikran (~fikran@user/fikran)
[08:12:22] *** Joins: Scotteh_ (~Scotteh@user/scotteh)
[08:12:33] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[08:13:51] *** Quits: duoi (~duoi@user/duoi) (*.net *.split)
[08:13:51] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[08:13:51] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[08:13:51] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[08:13:51] *** Quits: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net) (*.net *.split)
[08:13:51] *** Quits: Madda (~Madda@216.51.198.146.dyn.plus.net) (*.net *.split)
[08:13:51] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[08:13:51] *** Quits: FergusL (~freenode4@user/fergusl) (*.net *.split)
[08:13:51] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[08:13:51] *** Quits: dambuster (~dambuster@185.193.170.225) (*.net *.split)
[08:13:51] *** Quits: kurfen (~kurfen@45.152.181.20) (*.net *.split)
[08:13:51] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[08:13:51] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (*.net *.split)
[08:13:51] *** Quits: mdk (~mdk@python/psf/mdk) (*.net *.split)
[08:13:51] *** Quits: masterkorp (~masterkor@user/masterkorp) (*.net *.split)
[08:13:51] *** Quits: lxdr (~lxdr@user/lxdr) (*.net *.split)
[08:13:51] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[08:13:51] *** Quits: Raichvent (~Raichvent@193.123.33.210) (*.net *.split)
[08:13:51] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[08:13:51] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[08:13:51] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[08:13:51] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[08:13:51] *** Quits: the_rat (~ratto@emily.sorcio.org) (*.net *.split)
[08:13:51] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[08:13:51] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[08:13:51] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[08:13:51] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (*.net *.split)
[08:13:51] *** Quits: zmotaj (~zmotaj@user/zmotaj) (*.net *.split)
[08:13:51] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[08:13:52] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[08:13:52] *** masterkorp4 is now known as masterkorp
[08:14:19] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[08:15:02] *** Joins: niko (~niko@libera/staff/niko)
[08:15:32] *** Quits: grooverman (~grooverma@179.99.123.165) (Ping timeout: 240 seconds)
[08:17:07] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[08:17:25] *** Quits: emerent (~quassel@p200300cd573070b2ba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:17:45] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[08:18:25] *** Joins: duoi (~duoi@user/duoi)
[08:18:25] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[08:18:25] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[08:18:25] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:18:25] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[08:18:25] *** Joins: FergusL (~freenode4@user/fergusl)
[08:18:25] *** Joins: cursey (~cursey@user/cursey)
[08:18:25] *** Joins: kurfen (~kurfen@45.152.181.20)
[08:18:25] *** Joins: mdk (~mdk@python/psf/mdk)
[08:18:25] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[08:18:25] *** Joins: lxdr (~lxdr@user/lxdr)
[08:18:25] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[08:18:25] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[08:18:25] *** Joins: foo (~foo@user/foo/x-8763512)
[08:18:25] *** Joins: chronon (~chronon@user/chronon)
[08:18:25] *** Joins: marienz (~marienz@libera/staff/marienz)
[08:18:25] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[08:18:25] *** Joins: libussa (~libussa@libussa.net)
[08:18:25] *** Joins: streety (~streety@li761-24.members.linode.com)
[08:18:25] *** Joins: moonmoon (awoo@libera/staff/moonmoon)
[08:18:25] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[08:18:25] *** Joins: rb (~augh@theguntretort.com)
[08:18:25] *** Joins: Sadale (~Sadale@user/sadale)
[08:18:31] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[08:18:39] *** Joins: emerent (~quassel@p200300cd573070b2ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:18:49] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[08:19:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[08:19:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Client Quit)
[08:20:11] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[08:20:52] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[08:21:13] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[08:21:15] *** Joins: Madda (~Madda@216.51.198.146.dyn.plus.net)
[08:21:30] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[08:21:32] <stewie925> hello night owls
[08:22:25] <stewie925> anyone here uses vagrant VMs and share how to get files from host machine to the vagrant VM?
[08:22:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:27:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:28:28] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[08:28:39] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[08:30:02] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[08:30:25] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:30:43] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[08:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:32] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[08:32:37] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:33:35] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[08:36:02] <stewie925> oh never mind, finally found the answer...
[08:37:58] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[08:39:19] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[08:41:29] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[08:42:05] *** Joins: nbin (~nbin@user/nbin)
[08:43:42] *** Joins: vd657777 (~vd6577@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[08:44:10] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[08:44:41] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 245 seconds)
[08:46:33] *** Joins: sazawal (~sazawal@122.161.85.123)
[08:47:36] *** Joins: chenqisu12 (~kfjkaljfe@183.217.200.181)
[08:47:46] *** Quits: vd6577 (~vd65@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:48:05] *** Joins: matsaman (~matsaman@user/matsaman)
[08:50:25] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[08:50:33] *** Quits: rpkilby (~rpkilby@104.sub-174-204-192.myvzw.com) (Ping timeout: 256 seconds)
[08:51:03] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:52:54] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[08:54:49] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:57:26] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Quit: WeeChat 3.3)
[08:57:28] *** Quits: onichomp (~onichomp@2806:264:4404:805a:18c1:ca66:416f:eb86) (Read error: Connection reset by peer)
[08:58:05] *** Joins: onichomp (~onichomp@2806:264:4404:805a:18c1:ca66:416f:eb86)
[08:59:41] *** Joins: rpkilby (~rpkilby@2600:100f:b139:6943:169:801b:e2f9:3c2c)
[09:02:00] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[09:03:49] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:04:02] *** Quits: rpkilby (~rpkilby@2600:100f:b139:6943:169:801b:e2f9:3c2c) (Ping timeout: 240 seconds)
[09:06:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[09:06:54] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:07:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Ping timeout: 256 seconds)
[09:09:50] *** Quits: ac_slater (~ac_slater@c-71-231-45-179.hsd1.wa.comcast.net) (Quit: WeeChat 3.2)
[09:09:55] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[09:10:10] *** Joins: mcpac82 (~textual@212.25.0.228)
[09:12:56] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:13:13] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:13:57] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:14:32] *** Joins: analoq (~yashi@user/dies)
[09:15:37] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 250 seconds)
[09:16:47] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[09:19:26] *** Joins: dvx (~dvx@5.181.92.64)
[09:19:26] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[09:20:40] *** Quits: vimart (~vimart@85.255.236.236) (Ping timeout: 268 seconds)
[09:21:37] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[09:23:05] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[09:23:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:24:04] *** Joins: binary01 (~binary01@192.110.171.216)
[09:24:35] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[09:24:55] *** Joins: alzgh (~alzgh@user/alzgh)
[09:26:35] *** Quits: dude-x (~textual@72.76.74.165) (Read error: Connection reset by peer)
[09:26:47] *** Joins: dude-x (~textual@72.76.74.165)
[09:26:50] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:27:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:28:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[09:28:52] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[09:29:11] *** Quits: Jefren1 (~Jefren@70.35.66.73) (Ping timeout: 264 seconds)
[09:29:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 260 seconds)
[09:29:58] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:13] *** Joins: seednode (~seednode@user/seednode)
[09:31:14] *** Joins: Jefren1 (~Jefren@70.35.67.241)
[09:32:36] *** Joins: vimart (~vimart@85.255.233.85)
[09:33:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[09:33:51] *** Joins: Darkfoe (sid402081@helmsley.irccloud.com)
[09:34:58] *** jarthur_ is now known as jarthur
[09:36:33] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:37:23] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:37:33] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:38:35] *** Quits: Jefren1 (~Jefren@70.35.67.241) (Ping timeout: 250 seconds)
[09:39:51] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:40:24] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[09:41:04] *** Joins: Jefren1 (~Jefren@70.35.67.219)
[09:41:51] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[09:43:02] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:46:23] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:4d2b:e3c2:e4e:46fc) (Quit: Leaving)
[09:48:46] *** Joins: aileran (~ubuntu@ec2-18-219-39-125.us-east-2.compute.amazonaws.com)
[09:49:35] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 264 seconds)
[09:53:35] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:55:56] *** Quits: onichomp (~onichomp@2806:264:4404:805a:18c1:ca66:416f:eb86) (Read error: Connection reset by peer)
[09:55:56] *** Quits: vimart (~vimart@85.255.233.85) (Quit: WeeChat 2.8)
[09:56:03] *** Quits: hemstock (~hemstock@68.71.244.6) ()
[09:56:33] *** Joins: onichomp (~onichomp@2806:264:4404:805a:18c1:ca66:416f:eb86)
[10:01:08] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Read error: Connection reset by peer)
[10:01:12] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[10:01:50] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[10:02:13] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[10:02:33] *** Joins: mickey8 (~user@user/mickey)
[10:03:15] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[10:03:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Quit: Client closed)
[10:06:29] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[10:06:36] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Remote host closed the connection)
[10:07:36] *** Joins: gulzar (~gulzar@14.139.123.36)
[10:07:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:10:17] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Ping timeout: 264 seconds)
[10:11:12] *** Joins: djapo (~archangel@user/djapo)
[10:11:20] <relentless> what does the yield keyword do?
[10:11:56] <relentless> def _get_child_candidates(self, distance, min_dist, max_dist):
[10:11:56] <relentless>     if self._leftchild and distance - max_dist < self._median:
[10:11:56] <relentless>         yield self._leftchild
[10:12:24] <bookworm> it makes a generator function
[10:12:27] <relentless>     if self._rightchild and distance + max_dist >= self._median:
[10:12:27] <relentless>         yield self._rightchild
[10:13:07] <bookworm> it "returns" the value you yield, then you can call next($thing) on it (or a for in loop) and the function will continue from there
[10:13:13] <relentless> here's the caller
[10:13:20] <relentless> result, candidates = [], [self]
[10:13:20] <relentless> while candidates:
[10:13:20] <relentless>     node = candidates.pop()
[10:13:20] <relentless>     distance = node._get_dist(obj)
[10:13:20] <relentless>     if distance <= max_dist and distance >= min_dist:
[10:13:21] <relentless>         result.extend(node._values)
[10:13:21] *** litharge sets mode: +q $a:relentless
[10:13:28] <bookworm> don't paste code directly relentless
[10:13:34] <bookworm> use a pastebin
[10:13:51] <bookworm> and if you'd read I'm already telling you what yield does ;)
[10:13:53] *** litharge sets mode: -q $a:relentless
[10:14:04] <relentless> sorry
[10:14:25] <relentless> thanks brb
[10:16:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:18:08] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[10:18:47] *** Joins: fikran (~fikran@user/fikran)
[10:18:53] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[10:19:37] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:19:54] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[10:19:55] *** Joins: Samian (~s@user/samian)
[10:20:28] *** Quits: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com) (Quit: Leaving)
[10:21:09] *** Joins: stockholm (~Andreas@p200300d2c709b9006c7e13b26ee272fa.dip0.t-ipconnect.de)
[10:22:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:22:52] <aileran> I guess his nickname is accurate
[10:24:53] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[10:25:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:25:31] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 245 seconds)
[10:26:51] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:29:19] *** Joins: grooverman (~grooverma@177.102.119.40)
[10:29:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:29:54] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[10:32:47] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Ping timeout: 264 seconds)
[10:33:05] *** Joins: pingpongball (~pingpongb@43.228.192.104)
[10:33:14] <pingpongball> So many programmers are here.
[10:33:19] *** Parts: pingpongball (~pingpongb@43.228.192.104) ()
[10:34:49] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[10:36:13] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 250 seconds)
[10:36:27] <sazawal> Hi all. I am capturing a screenshot with imagemagick. Lack of a python library made me use the cli of imagemagick through subprocess.Popen, here is the code https://bpa.st/VFQQ . After the capture I do not seem to read this image in cv2. I suppose I must decode the `out` variable but I don't know what code format to use. Please help!
[10:36:29] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:37:51] *** Joins: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se)
[10:38:17] <squid_game> red light!
[10:38:18] *** Joins: digilink (~digilink@user/digilink)
[10:38:58] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[10:39:00] *** Joins: Tas-sos (~Tas-sos@ppp079167211012.access.hol.gr)
[10:39:18] <rindolf> sazawal: does /usr/bin/file shed soem light on the format?
[10:39:24] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[10:39:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[10:40:05] <sazawal> rindolf, Sorry what do you mean? What file is this /usr/bin/file?
[10:40:50] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:41:11] *** Quits: {4144} (~{4144}@46.56.64.37) (Ping timeout: 264 seconds)
[10:41:20] <rindolf> sazawal: see https://en.wikipedia.org/wiki/File_%28command%29
[10:41:30] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:42:56] <sazawal> I see. Let me save the variable to a file and check. By the way, the output of subprocess.Popen(...).communicate() must be a known format, am I wrong?
[10:43:28] <rindolf> sazawal: no, it can be whatever
[10:44:27] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[10:44:46] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[10:46:00] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[10:46:04] *** Joins: alzgh (alzgh@user/alzgh)
[10:46:05] <sazawal> When I try to save the variable in a file, I get this, `f.write(out); TypeError: write() argument must be str, not bytes`
[10:46:07] <vlt> Hello. I inherited a Dockerfile with a Python compile step that uses --enable-optimizations. What parts of the environment does this optimize for? Does this make sense in a Docker container? (The purpose, though, are a bunch of Python instances that run number crunching jobs of several hours length.)
[10:46:10] <rindolf> sazawal: eg "cat foo.json"; "cat mydb.sqlite3"
[10:46:40] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[10:46:40] *** Quits: cation (cation@user/cation) (Remote host closed the connection)
[10:46:49] <rindolf> sazawal: "with open('foo', 'wb'):"
[10:46:57] <sazawal> Oh right
[10:47:10] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:36] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 245 seconds)
[10:47:46] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:47:56] *** Joins: seednode (~seednode@user/seednode)
[10:48:03] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[10:48:21] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[10:48:35] <rindolf> vlt: i think it adds "-O3"/etc. gcc flags and AFAIK makes sense in docker too
[10:48:53] <sazawal> rindolf, Alright I ran `file my_file_containing_out` and I just get `data` as the output. What does it mean?
[10:49:36] <rindolf> sazawal: that it is an unrecognised format
[10:49:54] <sazawal> I see
[10:49:56] *** Joins: cation (cation@user/cation)
[10:52:00] <sazawal> rindolf, What do you suggest for a solution? Well actually I tried taking screenshots and save it as a file and then read them in cv2. It works all fine except that it is very slow. Someone has suggested in a thread to not save it in a file but use the image data in the variable and convert/import it in cv2 for processing.
[10:53:34] <sazawal> When I use a filename in place of `rgb:` in the imagemagick's import command, I get it saved as an image file.
[10:53:48] <vlt> rindolf: I have to read about those gcc flags. My question is more: How exactly does the build environment have to be like the machine Python is finaly supposed to run on regarding CPU cores, RAM, or things I don't even know.
[10:53:56] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 246 seconds)
[10:54:12] <rindolf> sazawal: https://imagemagick.org/script/import.php - perhaps "-type" will work
[10:54:29] <rindolf> sazawal: https://imagemagick.org/script/import.php - perhaps the "-type" flag will work
[10:54:44] <sazawal> Let me check
[10:54:49] <catbeard> does paramiko have like no maintainer or
[10:55:04] <catbeard> i know there's a channel for it, but it ded
[10:55:43] <rindolf> vlt: itneeds to have a compatible CPU
[10:56:28] <vlt> And is there something like --enable-optimizations for the `pip install numpy scipy` process as well?
[10:56:35] <sazawal> rindolf, By the way if I exceute this command I wrote in the code I sent you, I do get something printed on the console as output, but I cannot get to understand them, also there are many `?` and I am guessing my consle's default encoding is not able to read the output either.
[10:58:45] <rindolf> vlt: i think the cpython3 runtime propagates  these flags to pip builds
[10:59:31] <vlt> rindolf: The CPU is the exact same model. On the (bare metal) processing node it appears as "Intel(R) Xeon(R) Gold 6230 CPU @ 2.10GHz" but the environment docker *builds* the image in is a libvirt kvm machine where it is listed as "Intel Xeon Processor (Cascadelake)". Do you think that matters?
[11:00:00] *** Joins: kosh (~kosh@user/kosh)
[11:00:01] <sazawal> rindolf, Well, -type has these options: Choose from: Bilevel, Grayscale, GrayscaleAlpha, Palette, PaletteAlpha, TrueColor, TrueColorAlpha, ColorSeparation, or ColorSeparationAlpha. I don't think this would help.
[11:00:21] <rindolf> vlt: i think it doesn't
[11:00:34] <vlt> rindolf: Ok, thank you!
[11:01:00] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:b694:cb3e:a172:320c)
[11:01:01] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[11:01:02] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Client Quit)
[11:01:03] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[11:01:06] <rindolf> vlt: you're welcome
[11:01:13] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[11:01:20] *** Joins: metaace (~metaace@user/metaace)
[11:01:31] *** Quits: chenqisu12 (~kfjkaljfe@183.217.200.181) (Quit: Leaving)
[11:02:02] *** Quits: stockholm (~Andreas@p200300d2c709b9006c7e13b26ee272fa.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:04:16] *** Joins: upsala (~zcb@185.213.155.252)
[11:05:01] *** Joins: pacbard_ (~pacbard@user/pacbard)
[11:05:10] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:05:32] *** Quits: pacbard (~pacbard@user/pacbard) (Ping timeout: 240 seconds)
[11:05:33] <rindolf> sazawal: maybe we need a different flag.
[11:06:33] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[11:07:34] <ExeciN> Hi people. Is there a way to set a requirement file for pip where I give a package and an alternative? like packagea or packageb
[11:08:58] <raek> ExeciN: what would it mean for a package to have an "alternative"?
[11:09:13] <raek> just trying to understand the concept
[11:09:38] <ExeciN> raek: I need packagea installed or packageb installed, if one fails, the second one would also work
[11:09:55] <Repiphany> pyside/pyqt
[11:12:21] <raek> ExeciN: can you give an example why packagea would fail to install?
[11:12:40] *** Quits: zettabyte (~zettabyte@user/zettabyte) (Quit: Leaving)
[11:13:05] <ExeciN> raek: because psycopg2 really likes to fail and I would like to use psycopg2-binary as an alternative
[11:14:17] <ExeciN> for dpkg, this relationship is noted with the pipe symbol like so `Depends: packagea | packageb`
[11:15:20] <raek> I'm not aware of any solution, sorry :-)
[11:15:23] <bookworm> pip doesn't handle split dependencies well
[11:15:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:18:11] <parv> bookworm, Any other tool that does?
[11:18:18] *** Joins: gusto (~Augustus@109.255.100.54)
[11:18:21] *** Joins: arinov (~arinov@213.194.126.155)
[11:18:30] <raek> all I can think of is to use "extras" to basically create two profiles of your package: your_package[dev] (which depends on psycopg2-binary) and your_package[prod] (which depends on psycopg2)
[11:19:02] <raek> but that just pushes the problem to the user
[11:19:05] <bookworm> parv: any sensible system package manager
[11:19:32] *** Quits: Jefren1 (~Jefren@70.35.67.219) (Ping timeout: 240 seconds)
[11:19:36] <rindolf> sazawal: perhaps create a library binding using cffi/etc. i/o can be slow too
[11:19:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:19:46] <ExeciN> raek: this makes a split on all profiles on every or relationship
[11:19:54] <bookworm> to be honest, just tell people which dep you need, how they install it is their problem
[11:19:55] <ExeciN> so if you split twice you have 4 profiles
[11:20:24] <ExeciN> bookworm: well, it would also be my problem
[11:20:41] <raek> well, you can combine extras: your_package[foo_is_dev,bar_is_prod]
[11:20:42] <ExeciN> I mean if its their problem I'm the one that they would bug
[11:20:44] <raek> but I get the idea
[11:21:43] <raek> python packages that depend on particular systems packages are a pain... :-(
[11:21:59] *** Joins: Jefren1 (~Jefren@206.253.157.211)
[11:22:21] *** Joins: palasso (~palasso@user/palasso)
[11:24:56] *** Joins: zhukovgreen (~ab017i2@2a0f:8742:88c:0:81d:d1e0:ea49:c107)
[11:26:31] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[11:27:09] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[11:27:13] <ExeciN> psycopg2 is also a pain
[11:28:15] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[11:28:23] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:28:54] *** Joins: graybeard (~graybeard@user/graybeard)
[11:29:13] <bookworm> about as fun as any other C code
[11:29:31] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 250 seconds)
[11:31:16] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:31:21] <bookworm> don't use windows, install your distros build-essentials and you should be fine, unless the thing has other deps too (probably postgres in this case)
[11:31:39] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[11:32:11] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:32:36] *** Joins: grooverman_ (~grooverma@179.99.123.165)
[11:32:37] *** Joins: manti7 (~manti7@176.10.104.94)
[11:33:02] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 240 seconds)
[11:34:23] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:34:53] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 256 seconds)
[11:35:02] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 240 seconds)
[11:35:34] *** Joins: AsenMx (~AsenMx@user/asenmx)
[11:39:16] *** Joins: Syzygy (~Syzygy@dynamic-2l4rd2xn2u83wabpag-pd01.res.v6.highway.a1.net)
[11:41:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[11:41:05] <Syzygy> I have a JSONDecodeError: Invalid control character when trying to dump the result of a database query. The DB output should be valid json, but I guess it's not. Is there a simple way to sanitize this?
[11:41:16] *** Quits: richbridger (~richbridg@089144202237.atnat0011.highway.a1.net) (Ping timeout: 268 seconds)
[11:41:58] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:42:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:42:50] *** Joins: stranac (~stranac@195.29.239.126)
[11:43:10] *** Joins: deltab (~deltab@user/deltab)
[11:43:10] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:43:44] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:43:51] <bookworm> write it to a file and look at it, fix it in the db?
[11:44:09] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:44:15] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 250 seconds)
[11:44:21] <bookworm> which db btw? at least sqlite doesn't check that it's valid json unless you tell it to validate
[11:44:29] *** Joins: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net)
[11:44:32] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 240 seconds)
[11:45:07] *** Quits: mallkrampus (~mallkramp@172.93.207.85) (Ping timeout: 250 seconds)
[11:46:10] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:48:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[11:48:03] <Syzygy> bookworm, it's SPARQL
[11:49:04] <Syzygy> guess I'll have to write it out and check line 6057717 column 17 (char 1112954228) :/
[11:49:27] *** Quits: jonthesnow (~xizhendu@36.112.204.20) (Ping timeout: 250 seconds)
[11:49:58] <Repiphany> >1gb of json seems a little excessive
[11:51:48] <Syzygy> well, so much data in the DB. but update... it's not when json.dump'ing, it's when json.load'ing. I guess I'll go with a paginated query first.
[11:52:32] <deniska> I remember Oracle SQL Developer has a really funny idea about what json is…
[11:53:26] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 246 seconds)
[11:56:12] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:56:49] *** Joins: l4yer (~l4yer@195.181.170.210)
[11:57:17] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[11:57:30] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:58:57] *** Joins: mallkrampus (~mallkramp@172.93.177.93)
[11:59:10] <sazawal> rindolf, I am checking some more options, namely -encoding and -identify
[11:59:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[11:59:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:59:54] *** Joins: gloomy_desktop (~ldorigo@81.161.167.135)
[12:01:06] <rindolf> sazawal: ok
[12:01:14] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:02:46] <raek> the JSON spec says that JSON data should be encoded in UTF-8, btw
[12:03:39] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:04:32] *** Joins: rendar (~rendar@user/rendar)
[12:04:33] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:04:42] <Syzygy> well, I can get the first 1 million documents no problem. that's about 1.4GB
[12:07:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:10:17] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[12:11:56] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:13:51] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[12:14:38] *** Joins: jonaskabrink (~jonaskabr@89.56.121.126)
[12:14:52] <sazawal> rindolf, Can't get it to work. I was following this post https://stackoverflow.com/questions/49103645/imagemagicks-import-is-frustratingly-slow . Executing `import -window windowID rgb:` does give me an output but with an unknown encoding. Suggest me something please.
[12:15:41] <rindolf> sazawal: create a library binding using cffi/etc. i/o can be slow too
[12:16:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:16:23] <sazawal> rindolf, Sorry I don't get you. What is cffi?
[12:16:26] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:16:36] <rindolf> sazawal: also https://blog.codinghorror.com/learn-to-read-the-source-luke/ ; you can pay me or whoever
[12:17:25] <sazawal> rindolf, Yea, this makes sense :)
[12:17:36] <rindolf> sazawal: cffi is https://cffi.readthedocs.io/en/latest/
[12:17:39] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[12:17:48] <sazawal> Opened already
[12:18:05] *** aoei\Chickatrice is now known as mermaid
[12:18:59] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 264 seconds)
[12:19:35] *** Joins: BlueSky (~BlueSky@user/bluesky)
[12:20:44] *** mermaid is now known as mermaid\Chickatr
[12:22:12] *** Joins: chele (~chele@user/chele)
[12:23:19] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[12:25:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[12:26:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:27:08] *** Joins: xardas (~xardas@149.233.51.127)
[12:28:08] *** Joins: fikran (~fikran@user/fikran)
[12:31:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:31:25] *** Joins: TJ- (~root@about/linux/staff/tj-)
[12:31:45] *** Joins: cosimone (~user@93-47-231-139.ip115.fastwebnet.it)
[12:31:50] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[12:32:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:33:30] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:33:35] *** Joins: Myst4 (~Myst@user/myst)
[12:33:40] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:33:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[12:33:49] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[12:35:23] *** Quits: Myst (~Myst@user/myst) (Ping timeout: 250 seconds)
[12:35:24] *** Myst4 is now known as Myst
[12:35:47] *** Quits: mallkrampus (~mallkramp@172.93.177.93) (Ping timeout: 246 seconds)
[12:35:50] *** Joins: luigibu (~luigi@80.30.201.209)
[12:36:17] *** Joins: wallbroken (wallbroken@user/wallbroken)
[12:36:19] <wallbroken> hi
[12:36:34] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 260 seconds)
[12:36:50] <wallbroken> is there some method of a STRING class to get substring and also get current string length?
[12:37:02] *** Joins: greyblue9 (sid500829@ilkley.irccloud.com)
[12:37:41] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[12:38:36] <supakeen> len(somestring) and somestring[x:y]?
[12:38:52] <Syzygy> wallbroken, not entirely sure what you want to do, but it seems like this is easier to implement then to look for the exact solution that you need.
[12:38:56] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:38:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:39:20] <wallbroken> supakeen: i'm implementing a keyword suggestion in a search bar
[12:39:34] *** Joins: asa22 (~asa22@84.125.126.235.dyn.user.ono.com)
[12:40:13] <asa22> Anybody familiar with tkinter OptionMenu?
[12:40:14] <wallbroken> if you type the first two letters, a method must show you the first three alphabetical ordered keyword with those two (or more than) letters
[12:40:25] <asa22> I dont understand what the variable parameter is for
[12:40:47] *** Quits: greyblue9 (sid500829@ilkley.irccloud.com) ()
[12:40:50] <wallbroken> hen given a minimum of two characters into the search field the system will suggest at most three keywords from the review word repository
[12:40:55] <wallbroken> it's clear?
[12:41:03] <supakeen> Sure, but what is the actual problem then?
[12:41:03] *** Joins: greyblue9 (sid500829@ilkley.irccloud.com)
[12:41:22] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[12:41:55] <asa22> So It's like OptionMenu(main, variable, "option1", "option2", "option3") but I dont understand what the variable is for
[12:42:42] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:44:11] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Ping timeout: 246 seconds)
[12:45:00] *** dcaro_away is now known as dcaro
[12:45:23] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[12:45:26] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[12:46:04] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:46:17] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:47:10] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[12:48:41] *** Joins: Pixi (~Pixi@user/pixi)
[12:49:04] *** Joins: arinov (~arinov@178.240.135.64)
[12:51:04] *** Joins: mallkrampus (~mallkramp@172.93.207.85)
[12:51:37] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Client Quit)
[12:52:02] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[12:52:53] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-17.home.otenet.gr) (Ping timeout: 264 seconds)
[12:53:01] *** Joins: mrwick (~mrwick@user/mrwick)
[12:53:09] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[12:53:39] <ChrisWarrick> asa22: google says: https://www.pythontutorial.net/tkinter/tkinter-optionmenu/ (it’s a StringVar for the output in the usual ugly tkinter fashion)
[12:55:01] <rendar> what is the best way to run a startup script which imports the library and so on, before the repl opens?
[12:55:59] <ChrisWarrick> rendar: did you try googling?
[12:56:03] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-212.home.otenet.gr)
[12:56:34] <rendar> ChrisWarrick, yes, i'm reading some solutions, but i wished to know the best one, based on your experience
[12:56:41] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[12:57:21] <rendar> many say the better thing to do is using PYTHONSTARTUP -- do you agree?
[12:57:23] <ChrisWarrick> rendar: (1) are there multiple solutions (2) I don’t think there really is a “best solution” to such a trivial thing (and personally, I never used startup scripts)
[12:57:27] *** Joins: cation (cation@user/cation)
[12:57:32] <rendar> ok
[12:58:21] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 268 seconds)
[12:58:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:59:48] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:00:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:01:07] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:01:39] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[13:02:04] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[13:03:42] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[13:03:45] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[13:04:55] *** Joins: plastico (~plastico@neomutt/plastico)
[13:06:42] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[13:08:23] *** Joins: de-facto (~de-facto@user/de-facto)
[13:09:13] <stranac> rendar: i use PYTHONSTARTUP, it works well
[13:09:14] *** Joins: nomic (~nomic@185.192.69.224)
[13:09:18] <rendar> ok
[13:10:22] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[13:12:24] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[13:12:33] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[13:13:32] *** Quits: asa22 (~asa22@84.125.126.235.dyn.user.ono.com) (Ping timeout: 256 seconds)
[13:14:01] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:14:12] <greyblue9> does PYTHONSTARTUP set the file of `__main__` to itself?
[13:15:44] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:16:53] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[13:17:23] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[13:17:28] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 268 seconds)
[13:17:45] *** Joins: ras_manny (~ras_manny@196.24.166.120)
[13:17:56] <greyblue9> looks like maybe it doesn't
[13:18:32] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-212.home.otenet.gr) (Ping timeout: 240 seconds)
[13:18:40] *** Joins: zepolen (~zepolen@ppp-94-66-223-212.home.otenet.gr)
[13:19:44] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:20:09] <stranac> greyblue9: startup scripts only run in the repl
[13:21:47] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[13:22:31] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:22:57] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:25:13] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[13:26:25] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[13:27:39] *** Joins: RiFo (~RiFo@user/rifo)
[13:29:02] <greyblue9> stranac: right, I thought maybe it would set `__file__` if you did `import __main__; __main__.__file__` or `__main__.__spec__.origin` but it doesn't
[13:29:12] *** Joins: jazzy (~jaziz@user/jaziz)
[13:29:23] <greyblue9> in fact `__main__` has neither of those attributes
[13:31:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:31:30] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:32:07] <rindolf> sazawal: any luck?
[13:32:26] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:32:26] <sazawal> Yes a little
[13:32:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[13:32:50] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:33:19] *** Joins: noyb (~noyb@user/noyb)
[13:33:59] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[13:34:13] <sazawal> rindolf, `import -window 49500621 -compress none ppm:-` . This command with a -compress option along with ppm:- works. Note it doesn't work if I use rgb instead of ppm and it doesn't work if I use no -compress option with ppm:-
[13:35:07] <rindolf> sazawal: ah, good find
[13:35:17] <sazawal> I gotta figure out how to comvert the ppm matrix format to the one recognized by opencv
[13:36:12] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[13:36:53] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Remote host closed the connection)
[13:37:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:37:56] *** Joins: onichomp666 (~onichomp@2806:264:4404:8301:6450:874c:5eb2:f9f8)
[13:38:57] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:39:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[13:39:40] *** Quits: onichomp (~onichomp@2806:264:4404:805a:18c1:ca66:416f:eb86) (Ping timeout: 268 seconds)
[13:40:49] *** Quits: jonaskabrink (~jonaskabr@89.56.121.126) (Ping timeout: 250 seconds)
[13:40:53] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:41:15] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[13:41:27] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[13:41:55] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[13:42:00] <rindolf> sazawal: can't you do s/ppm:-/bmp:-/ ?
[13:42:21] *** Joins: raxor2k (~raxor2k@78.158.246.35)
[13:43:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[13:43:38] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:44:16] <sazawal> rindolf, Just checked bmp:- and it gives strange encoding with or without -compress option
[13:45:22] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:45:56] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[13:46:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:46:35] <rindolf> sazawal: it is binary: https://en.wikipedia.org/wiki/BMP_file_format
[13:46:58] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Ping timeout: 256 seconds)
[13:47:01] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.3)
[13:48:38] *** Joins: han-solo (~hanish@user/han-solo)
[13:48:48] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Client Quit)
[13:49:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[13:49:55] <sazawal> rindolf, Right. I guess ppm would work for me if I somehow load it on cv2/opencv
[13:50:16] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:50:24] *** Joins: jug (~jug@user/jug)
[13:51:28] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[13:53:48] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[13:54:01] <rindolf> sazawal: format conversion can also be costly
[13:54:43] *** Joins: legola (~legola@46.235.101.181)
[13:55:25] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[13:55:42] <sazawal> rindolf, Hmm.
[13:57:08] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:57:11] <raxor2k> im trying to ask help here before going to reddit: anyone know why datas get "mixed" in the database if the function is called by several clients? if the same client calls the function multiple time, than it works perfectly and the data are arrived to the DB in correct order: https://bpa.st/53IA
[13:57:22] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-212.home.otenet.gr)
[13:57:33] *** Quits: zepolen (~zepolen@ppp-94-66-223-212.home.otenet.gr) (Ping timeout: 268 seconds)
[13:57:59] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:58:15] <ChrisWarrick> raxor2k: are the “several clients” running concurrently?
[13:58:17] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[14:00:13] <ChrisWarrick> raxor2k: Also, note that the order you get if you `select * from some_table` is not necessarily insertion order — if you want stable ordering, specify an ORDER BY clause
[14:00:30] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[14:00:54] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[14:01:11] *** Quits: arinov (~arinov@178.240.135.64) (Ping timeout: 246 seconds)
[14:01:27] <raxor2k> chriswarrick: yes, they are running concurrently
[14:01:30] <raxor2k> of course,
[14:02:04] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:02:09] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[14:02:13] <raxor2k> i kind of need a FIFO queue to push each single data from list to the db
[14:02:21] <ChrisWarrick> raxor2k: I’m not sure if this code actually works, you’re doing .pop(0) while iterating the list
[14:02:30] <ChrisWarrick> raxor2k: why do you need a FIFO queue?
[14:02:30] *** Joins: cyphase (~cyphase@user/cyphase)
[14:02:57] <raxor2k> i dont know
[14:03:13] <ChrisWarrick> huh?
[14:03:33] <raxor2k> maybe i dont need FIFO, as long as all the data gets in in the end
[14:03:40] <ChrisWarrick> if you don’t need a queue, then you can just push data at the database directly (BTW don’t use pymysql with asyncio)
[14:04:23] <raxor2k> chriswarrick: you think pymsql is the problem here?
[14:04:40] <raxor2k> i think the problem is more that the size of list changes during iteration and pushing
[14:04:40] <ChrisWarrick> raxor2k: you didn’t describe your problem yet
[14:04:59] <ChrisWarrick> raxor2k: pymysql in asyncio is a bad idea for performance reasons
[14:05:34] <raxor2k> havent experienced any performance issues yet, i think its much better to be honest
[14:05:55] <ChrisWarrick> raxor2k: https://bpa.st/RABA
[14:06:35] <ChrisWarrick> raxor2k: “its”?
[14:06:36] <han-solo> shouldn't different request use different cursor atleast ?
[14:07:11] <han-solo> i think, every request use the same cursor in your case ?
[14:07:58] *** Joins: cheater (~Username@user/cheater)
[14:08:34] *** Joins: obiwahn (~heini@user/obiwahn)
[14:08:43] <obiwahn> is this a well known site pypa.io
[14:08:50] *** Joins: thiras (~thiras@user/thiras)
[14:08:50] <han-solo> yep
[14:09:02] *** Quits: shawwwn (uid6132@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:09:06] <obiwahn> *me shoots han-solo*
[14:09:30] <han-solo> not if i shoot you first :p
[14:09:31] <ChrisWarrick> raxor2k: I would (1) use an asyncio-friendly mysql library (2) use executemany instead of inserting stuff one by one
[14:09:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:09:49] <raxor2k> criswarrick: i updated my paste with a description of the problem on the bottom: https://bpa.st/QIFQ
[14:09:50] <obiwahn> you usually do:P
[14:09:52] *** Quits: jazzy2 (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[14:09:55] <raxor2k>  i hope you now understand the problem
[14:13:08] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:13:28] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (Quit: The Lounge - https://thelounge.chat)
[14:14:07] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 256 seconds)
[14:14:10] *** Quits: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[14:14:52] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[14:15:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:16:17] *** Joins: xakan (~xakan@pnmx.zdx.fr)
[14:16:25] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[14:16:30] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[14:16:39] *** Joins: tobybl (~tobybl@213.31.134.235)
[14:16:55] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[14:17:21] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[14:18:05] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 256 seconds)
[14:19:05] <ChrisWarrick> raxor2k: Changing the size of a list while it’s being iterated on leads to breakage.
[14:19:27] <ChrisWarrick> raxor2k: If you rewrite the code as I suggested, it will just work and be much simpler.
[14:19:44] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 246 seconds)
[14:20:01] *** Joins: RiFo (~RiFo@user/rifo)
[14:20:02] <ChrisWarrick> raxor2k: If you need to queue data for some reason, then use a well-written queue implementation; asyncio.Queue would be one.
[14:20:32] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[14:20:55] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:23:10] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[14:23:33] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[14:23:39] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:23:55] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[14:24:11] <dob1> sorry if it's OT: I installed mkdocs via pip in virtualenv dir, to use it do I need to activate the virtualenv dir every time?
[14:24:32] <raxor2k> chriswarrick: i tried as you suggest. Error: 'dict' object cannot be interpreted as an integer
[14:24:37] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[14:24:37] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[14:24:37] *** finn_elija is now known as FinnElija
[14:24:44] <ChrisWarrick> raxor2k: what did you try?
[14:24:45] <raxor2k> the list contains dict objects you know
[14:24:48] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:25:07] <raxor2k> chriswarrick:  self.list_of_datas_to_push.pop(0)   -->  self.list_of_datas_to_push.pop(i)
[14:25:08] <ChrisWarrick> dob1: either activate or directly call venv/bin/mkdocs
[14:25:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:25:11] *** Joins: Trieste (T@user/pilgrim)
[14:25:14] <ChrisWarrick> raxor2k: I didn’t suggest that.
[14:25:24] <han-solo> dob1: no, you can just /path/to/venv/bin/mkdocs # no ?
[14:25:30] *** Joins: shutnoshut (~shutnoshu@ec2-52-29-68-122.eu-central-1.compute.amazonaws.com)
[14:25:55] <han-solo> activate just prepends the path to venv to you PATH, i think
[14:26:05] <raxor2k> chriswarrick: ehm. you sure ?
[14:26:12] <ChrisWarrick> raxor2k: yes
[14:26:50] <dob1> han-solo, ChrisWarrick it's on ~/.local/bin    why it's not in virtualenvdir/bin ?
[14:27:00] *** Joins: OlaNys (onm@irccore.ofelbar.se)
[14:27:04] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[14:27:04] <raxor2k> chriswarrick: then i leave my line 15 unchanged then? https://bpa.st/BSJQ
[14:27:04] <ChrisWarrick> dob1: you didn’t activate the venv while installing and it’s not actually installed in the venv
[14:27:10] *** Joins: jinie (~jimmy@188.114.173.37)
[14:27:15] <ChrisWarrick> raxor2k: no, you remove all this code
[14:27:30] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: Leaving)
[14:27:49] <raxor2k> Chriswarrick: ok? than what code should i use to push data to db?
[14:27:50] <ChrisWarrick> raxor2k: my suggestion is cur.executemany, with an asyncio.Queue if you really need queuing (and you don’t)
[14:28:02] <ChrisWarrick> (at least you don’t seem to)
[14:28:06] <raxor2k> ok fair enough i dont queueing
[14:28:27] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[14:28:40] <dob1> ChrisWarrick, to remove it just pip remove package ?
[14:28:55] <dob1> but I was sure to be in virtualenv when I installed it
[14:29:08] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:29:52] <dob1> or wait a sec, does virtualenv bind to dir name? because I changed it
[14:30:04] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[14:30:30] <ChrisWarrick> dob1: (1) pip uninstall — but it won’t remove dependencies (2) yes, you can’t rename virtualenvs
[14:30:40] <raxor2k> Chriswarrick: do you know what my problem is now or is that still unclear?
[14:30:42] <ChrisWarrick> dob1, see also: http://chriswarrick.com/blog/2018/09/04/python-virtual-environments/
[14:30:54] <ChrisWarrick> raxor2k: your problem is an incorrect implementation of a queue.
[14:31:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:31:20] <raxor2k> Ok,
[14:31:55] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:32:21] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[14:32:30] <gulzar> Hi. I have numbers like   2.7035e-318   which needs to be multiplied with each other and the result with next such number. numpy gives 0.0 .  Any ideas please
[14:32:45] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[14:33:10] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:33:15] *** Joins: ErkiS (~opera@85.253.103.121.cable.starman.ee)
[14:33:36] <KirkMcDonald> gulzar: Which dtype is numpy using?
[14:33:42] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:33:46] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:34:16] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:34:32] <dob1> ChrisWarrick, and If I want to remove dep too?
[14:34:33] *** Joins: Alloysious (~Alloysiou@85.195.208.173)
[14:34:40] <ChrisWarrick> dob1: that’s more difficult
[14:34:50] <ChrisWarrick> dob1: you’d need to figure out what dependencies mkdocs has installed
[14:34:55] <KirkMcDonald> gulzar: In any event, that's a number with an extremely small magnitude, so you're likely bumping up against the limit of that IEEE 754 can represent.
[14:35:05] <KirkMcDonald> s/that/what/
[14:35:05] <han-solo> pipdeptree or something can help i think, to figure out deps
[14:35:23] <dob1> ChrisWarrick, ok maybe this is more simple: if I want to remove all data that pip installed in my user home?   like a reset
[14:35:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[14:35:47] <ChrisWarrick> dob1: that’s kinda more doable but can still be problematic
[14:35:50] <KirkMcDonald> `2.7035e-318**2` gives 0.0, for instance.
[14:36:04] <gulzar> KirkMcDonald: Oh
[14:36:06] <ChrisWarrick> dob1: you could start with   ls ~/.local/lib/python*/site-packages/*-info
[14:36:20] *** Joins: sgn (~sgn@user/sgn)
[14:37:11] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 245 seconds)
[14:37:14] <gulzar> KirkMcDonald: the data is in dictionaary as 'float'
[14:37:29] *** Joins: fikran (~fikran@user/fikran)
[14:37:45] <parv> "[T]o remove all data that pip installed in [one's] user home" -- could a "rm -rf" not fix that?
[14:37:56] <gulzar> KirkMcDonald: takinng two numbers and passing them to numpy.multiply()
[14:38:03] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[14:38:43] <KirkMcDonald> gulzar: numpy.multiply is supposed to be for element-wise array multiplication, isn't it?
[14:39:04] <KirkMcDonald> It seems a bit silly to use it on two scalar values. You can just do `a * b` instead.
[14:39:28] <gulzar> KirkMcDonald: I thought maybe numpy will handle such big numbers :)
[14:39:38] <KirkMcDonald> Floats are floats.
[14:39:50] <KirkMcDonald> Also, that is a very *small* number.
[14:40:33] <gulzar> KirkMcDonald: any formaat which can handle this?
[14:40:38] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:40:45] <parv> Or, to start from srcatch, after activating virtual env (before installing anything else), put that in version control software of your choice. Then to reset after installing (& not adding them to the repository), a reset (or revert) would reset the env.
[14:40:49] <KirkMcDonald> gulzar: It really depends on the particulars.
[14:40:56] <Repiphany> np.float128('2.7035e-318')
[14:41:16] <KirkMcDonald> Simply adding more bits is one option, yes.
[14:41:29] *** Joins: gusto (~Augustus@109.255.100.54)
[14:41:48] <gulzar> how?
[14:42:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:42:19] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[14:42:20] <KirkMcDonald> np.float128 would do it, as Repiphany says.
[14:42:35] <KirkMcDonald> Python's float type is a float64.
[14:42:44] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:43:05] <gulzar> yes, float1228 worked
[14:43:11] <gulzar> Repiphany: KirkMcDonald: Thank You
[14:43:13] *** Joins: TJ- (~root@about/linux/staff/tj-)
[14:43:46] <KirkMcDonald> This strikes me as a brute-force approach.
[14:43:53] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:44:03] <parv> Needless to say a VCS then gives access to branches -- one per (main) package installation for example
[14:45:07] <ChrisWarrick> parv: no, versioning venvs isn’t something you typically do
[14:45:22] <gulzar> KirkMcDonald: other way to convert all values with log. Maybe that may work
[14:45:40] *** Joins: Pickchea (~private@user/pickchea)
[14:46:05] <ChrisWarrick> parv: virtualenvs are ephemeral and are always in .gitignore | .git/info/exclude | outside of the source tree
[14:46:15] <parv> ChrisWarrick, Suggest me then the tools to properly handle dependencies. Also, dob1  was asking how to do reset
[14:46:17] <ChrisWarrick> parv: what should live in the source tree and be committed to git is requirements.txt
[14:47:12] <ChrisWarrick> parv: I’d consider pip-tools to be the best and the most straightforward tool for dependency management
[14:47:53] <parv> ChrisWarrick, I am thinking of the version of virtual env that is created in some  home directory
[14:47:59] *** Joins: cation21 (cation@user/cation)
[14:48:46] <parv> s/in some home directory/in home directory somewhere/
[14:48:47] *** Quits: cation (cation@user/cation) (Ping timeout: 246 seconds)
[14:49:13] <ChrisWarrick> parv: that’s not a virtualenv
[14:49:29] <ChrisWarrick> parv: those are packages installed into ~/.local/ (which isn’t python-specific and python-exclusive)
[14:49:59] <dob1> I removed all the mkdocs package, not resolved the dep problems I know but I used the safe way
[14:50:17] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:51:14] *** cation21 is now known as cation
[14:52:32] *** Quits: gulzar (~gulzar@14.139.123.36) (Quit: Konversation terminated!)
[14:53:47] <parv> (Vritual env) Seems damn complicated and I may need to try that for real
[14:54:14] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[14:54:55] *** Quits: mallkrampus (~mallkramp@172.93.207.85) (Ping timeout: 250 seconds)
[14:55:40] <ChrisWarrick> I wouldn’t say venvs are complicated
[14:55:47] *** Quits: Alloysious (~Alloysiou@85.195.208.173) (Read error: Connection reset by peer)
[14:56:16] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[14:56:21] *** Joins: lbracher (~lucas@94.105.106.159.dyn.edpnet.net)
[14:56:33] *** Joins: Alloysious (~Alloysiou@85.195.208.173)
[14:56:50] <ChrisWarrick> There are some mistakes that you can easily make if you don’t know about them (like trying to rename/move/copy/copy-between-machines, or putting them in git, or not thinking of them as ephemeral and temporary)
[14:56:52] <Alloysious> Hi Python gurus - is there a way to test python scripts that don't end in .py? like when you have a package with a cli entrypoint you'd like to test?
[14:57:30] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[14:57:33] <ChrisWarrick> Alloysious: https://chriswarrick.com/blog/2014/09/15/python-apps-the-right-way-entry_points-and-scripts/
[14:57:45] <KirkMcDonald> Alloysious: One suggestion is to make the actual entry-point a short stub that calls into the "real" library.
[14:57:58] <dob1> ChrisWarrick, the packages that I find on  ~/.local/lib/python*/site-packages  are packages supposed to be installed by me via pip or pip instaleld as a dep for another package?
[14:58:08] <ChrisWarrick> dob1: both
[14:58:13] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b1c5-5665-681a-caa6.res6.spectrum.com) (Quit: jarthur)
[14:58:28] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:58:51] <dob1> ChrisWarrick, I feel a bit "stupid" but I am sure I never installed some of them that for sure I tested in virtualenv
[14:59:03] <dob1> I don't know
[14:59:52] <ChrisWarrick> dob1: There are some options: (1) dependencies you don’t recognize (2) you installed without activating the venv or the activation failed (because it sometimes does, or because you broke the venv by renaming it)
[15:00:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:00:40] *** Quits: rookie101 (~rookie@207.154.204.166) (Quit: WeeChat 1.9.1)
[15:01:18] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[15:01:42] *** Joins: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi)
[15:02:45] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:02:59] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:03:04] <ErkiS> when using pty.openpty(), should those virtual serial device handles be usable from outside the Python process?
[15:03:06] <ErkiS> I can't manage to read any content from the slave in shell, that I write to the master in Python. neither using open() nor os.fdopen() nor serial.Serial().
[15:04:38] *** Parts: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) ()
[15:04:38] *** Quits: Alloysious (~Alloysiou@85.195.208.173) (Read error: Connection reset by peer)
[15:05:32] *** Quits: cosimone (~user@93-47-231-139.ip115.fastwebnet.it) (Remote host closed the connection)
[15:05:58] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[15:06:17] *** Quits: ras_manny (~ras_manny@196.24.166.120) (Quit: Client closed)
[15:06:18] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:07:06] <raxor2k> chriswarrick: any suggestions on how i can solve the problem?
[15:07:14] <ChrisWarrick> raxor2k: I gave you my suggestion twice?
[15:07:28] *** Quits: onichomp666 (~onichomp@2806:264:4404:8301:6450:874c:5eb2:f9f8) (Read error: Connection reset by peer)
[15:07:51] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 268 seconds)
[15:08:07] *** Joins: onichomp666 (~onichomp@2806:264:4404:8301:6450:874c:5eb2:f9f8)
[15:08:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:08:41] *** Joins: jinie (~jimmy@188.114.173.37)
[15:08:43] <raxor2k> you said "remove all the code"
[15:08:48] <raxor2k> that didnt help me much
[15:08:55] *** Quits: jinie (~jimmy@188.114.173.37) (Client Quit)
[15:08:57] <ChrisWarrick> raxor2k: yes, I did. But I also provided a suggestion twice.
[15:08:57] *** Joins: mallkrampus (~mallkramp@172.93.207.90)
[15:09:39] <raxor2k> i dont see it
[15:09:42] <raxor2k> im sorru
[15:09:45] <ChrisWarrick> raxor2k: my suggestion is to use cursor.executemany with no queue
[15:10:10] *** dcaro is now known as dcaro_lunch
[15:10:10] <ChrisWarrick> raxor2k: if you need a queue, asyncio.Queue
[15:10:11] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:10:44] <raxor2k> Chriswarrick: ok thanks i have a look at it
[15:11:29] <raxor2k> Chriswarrick: this means that other parts of the code are fine then ?
[15:11:38] <ChrisWarrick> raxor2k: what other parts?
[15:12:56] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[15:13:18] *** Joins: nyah (~nyah@94.6.71.219)
[15:13:24] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[15:13:56] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[15:15:06] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:15:45] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:16:01] <raxor2k> Chriswarrick: the rest of this function(before implementing cursor.executemany() ) https://bpa.st/UTNA
[15:16:33] <ChrisWarrick> raxor2k: the loop is incorrect
[15:17:06] <ChrisWarrick> raxor2k: throw out all your queue stuff
[15:17:32] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 240 seconds)
[15:17:33] *** Joins: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de)
[15:17:43] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[15:20:17] <ChrisWarrick> raxor2k: Figure out if your library of choice can do %(foo)s in executemany. If yes, just pass the list of dicts directly to executemany. Otherwise, transform it into a list of tuples and pass that.
[15:20:49] <rindolf> ChrisWarrick: hi, what is your opinion about https://github.com/shlomif/pysol_cards/issues/4 ?
[15:21:23] *** Quits: gitly (~gitly@85.255.236.108) (Ping timeout: 264 seconds)
[15:21:33] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[15:21:35] <ChrisWarrick> rindolf: I don’t know
[15:23:16] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:23:16] *** Joins: {4144} (~{4144}@46.56.66.236)
[15:23:27] *** Joins: gitly (~gitly@148.252.132.210)
[15:23:32] *** Joins: philectro (~quassel@2a02:2788:9a4:946:d65:84c9:717a:57c)
[15:23:44] *** Quits: davegarath (~davegarat@net-93-66-98-230.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[15:24:00] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[15:24:03] *** Joins: binary01 (~binary01@192.110.171.216)
[15:24:30] *** Quits: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi) (Ping timeout: 268 seconds)
[15:25:26] <raxor2k> Chriswarrick: yes i am doing that. thanks for tips
[15:27:02] *** Joins: pycurious (~Adium@user/pycurious)
[15:27:02] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[15:27:24] *** Joins: pycurious (~Adium@user/pycurious)
[15:27:27] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[15:28:02] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[15:28:26] *** Joins: Elodin (~weechat@user/elodin)
[15:29:31] <rindolf> ChrisWarrick: ah
[15:31:52] *** Quits: raxor2k (~raxor2k@78.158.246.35) ()
[15:32:44] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[15:35:12] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[15:35:42] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:35:44] *** Parts: ErkiS (~opera@85.253.103.121.cable.starman.ee) ()
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:37:58] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:38:29] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[15:39:38] *** Joins: xardas (~xardas@149.233.51.127)
[15:40:34] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: saltrocklamp[m] (~elementio@user/hexology) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: queue[m] (~queue-@2001:470:69fc:105::1:1892) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: jopejoe1 (~jopejoe1m@2001:470:69fc:105::1:15fe) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: zommKa (~ccctttmat@2001:470:69fc:105::b947) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: psyxo[m] (~mercvrivs@user/psyxopompos) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[15:40:42] *** Quits: dngray[m] (~dngray@user/dngray) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Bridge terminating on SIGTERM)
[15:40:44] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Bridge terminating on SIGTERM)
[15:40:44] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: Nicholaus04[m] (~nicholaus@2001:470:69fc:105::1:3038) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: DX099 (~dx099@2001:470:69fc:105::21ce) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: pschmitt (~pschmitt@2001:470:69fc:105::1:24cb) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: Bridge terminating on SIGTERM)
[15:41:10] *** Abrax is now known as listchans
[15:41:14] *** listchans is now known as Abrax
[15:41:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:41:46] *** Quits: doko (~doko@2a02:8106:1a:7600:b0f9:a0a0:d4d2:7287) (Ping timeout: 268 seconds)
[15:44:29] *** Joins: Batzy (~Batzy@user/batzy)
[15:44:46] <teut> https://github.com/benoitc/gunicorn/blob/master/gunicorn/workers/base.py#L122   isnt this a bad code  ?
[15:44:52] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 268 seconds)
[15:44:57] <teut> this thing specifically
[15:45:04] <teut> function inside if
[15:45:32] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[15:45:56] <NoImNotNineVolt> teut: why?
[15:46:10] <NoImNotNineVolt> the function isn't referenced outside the if, is it?
[15:46:37] *** Joins: holgersson (~quassel@user/holgersson)
[15:46:55] <NoImNotNineVolt> would a lambda callback be better?
[15:46:56] <teut> its not?  ok , I didn't know. I put inner functions at top level of a function
[15:47:09] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[15:47:12] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:47:23] <douglaswinship> teut: if you're asking whether it's valid to define one function inside another, then it's definitely valid python and has its uses
[15:47:32] *** Quits: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:47:48] <teut> no , I am saying that  defining a function inside a if statement
[15:47:50] <NoImNotNineVolt> douglaswinship: to define one function inside an if block.
[15:47:59] <teut> that I have not seen anywhere yet
[15:48:03] <teut> except this
[15:48:25] <NoImNotNineVolt> i haven't seen it either, to be fair. but i don't usually look at other peoples' code, other than my team's at work, and my team sucks :P
[15:48:58] <NoImNotNineVolt> the way i see it, a function can be defined in the narrowest scope in which it is referenced with no issue.
[15:49:25] <douglaswinship> teut: I guess it's unusual. But if the function is only ever used inside the if-block, then that seems like the most sensible place to put it.
[15:49:27] <MacGyver> It's referenced outside the if-statement when the reloader calls its callback.
[15:49:30] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[15:49:41] <MacGyver> But I *think* this would behave like a closure?
[15:50:14] <teut> ok
[15:50:17] <NoImNotNineVolt> functions are first class citizens of python, no?
[15:50:28] <douglaswinship> MacGyver: yup, but at that point it's not referenced by name. It's just a value, the value was created inside one code block, had a name defined inside that codeblock, and then it was passed as an argument. Outisde the codeblock, the value still exists, but the name doesn't.
[15:50:31] *** Joins: sunarch (uid526836@user/sunarch)
[15:50:31] <NoImNotNineVolt> so they'd behave like any other object. they're not gonna disappear.
[15:50:44] <NoImNotNineVolt> douglaswinship: well said.
[15:50:55] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[15:51:07] <MacGyver> Yeah -- I'm mostly wondering how the self-references inside the function behave.
[15:51:12] <douglaswinship> NoImNotNineVolt: thanks
[15:51:14] <NoImNotNineVolt> the way i see it, a function can be defined in the narrowest scope in which its name is referenced with no issue.
[15:51:21] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[15:51:22] <NoImNotNineVolt> amended :P
[15:51:42] * NoImNotNineVolt thanks ned also
[15:51:54] <douglaswinship> So it's like having (`myVar = 6` .... `object.setvalue(myVar)`) inside a code block.
[15:52:01] <NoImNotNineVolt> python's variable semantics confused me for a bit.
[15:52:29] <ChrisWarrick> that code is valid, although I’d probably just make it a regular method, perhaps named _reload_callback to signify it’s private
[15:53:25] <NoImNotNineVolt> i generally don't define funtions in weird places, but that's mostly because i'm used to other languages where that's not even an option.
[15:53:35] <douglaswinship> I suppose there's no reason _not_ to make it a lambda function. But it would still be a named lambda function, so it doesn't really make any difference.
[15:53:41] *** Quits: Strom (strom@fedora/strom) ()
[15:54:02] <han-solo> multiline lambda ? :D
[15:54:03] <ChrisWarrick> douglaswinship: how would that lambda look?
[15:54:07] <MacGyver> Multi-line lambdas are ... hrrm.
[15:54:13] <MacGyver> Not as clear as one would like.
[15:54:49] <MacGyver> Don't recall ever seeing one in Python, but they're a thing in Java.
[15:54:51] <douglaswinship> Oh yeah, part of my brain isn't witched on. I forgot about lambdas  being one-line things
[15:55:02] <NoImNotNineVolt> it was my suggestion, and a bad one :P
[15:55:42] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:55:47] *** Joins: Strom (strom@fedora/strom)
[15:56:07] <douglaswinship> Well, even if you _could_ makke it a lmabda, I don't see any benefit. Unless you defined the lambda inside of the actual relaoder_cls call. Then it wouldn't need to have a name. But for such a big function that sounds ugly and harder to read. So it's not an improvement.
[15:56:37] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:56:46] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[15:57:02] <NoImNotNineVolt> douglaswinship: that's what i was suggesting.
[15:57:30] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[15:57:43] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[15:58:09] <NoImNotNineVolt> how would one string those lines together into a single lambda? other than line 124, i guess concatenating them with & would work, but how would you get the assignment in there?
[15:58:24] *** Joins: mcpac82 (~textual@212.25.0.228)
[15:58:24] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[15:58:58] *** Joins: pycurious (~Adium@user/pycurious)
[15:59:39] <douglaswinship> MacGyver: good question about the 'self' parameter. But if this is working code, then I assume it all works out however it needs to work out.
[15:59:42] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[15:59:43] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[15:59:43] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[15:59:43] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[15:59:43] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[15:59:57] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[15:59:57] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[15:59:57] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[15:59:57] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[15:59:57] *** Joins: psydroid (~psydroid@user/psydroid)
[15:59:57] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[15:59:58] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[15:59:58] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[16:00:11] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[16:00:12] *** Joins: allegary (~allegary@apache/committer/gjm)
[16:00:12] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[16:00:12] *** Joins: enick_208 (~dngray@user/dngray)
[16:00:12] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[16:00:34] <douglaswinship> NoImNotNineVolt: I forget, do assignments in python not carry a value?
[16:00:39] *** Joins: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb)
[16:00:39] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[16:00:39] *** Joins: jinsun_ (~jinsun@user/jinsun)
[16:00:43] <douglaswinship> Depending on the python version, there's always the walrus operator
[16:00:45] * NoImNotNineVolt just woke up and didn't consider self
[16:00:53] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[16:00:53] *** Joins: queue[m] (~queue-@2001:470:69fc:105::1:1892)
[16:00:53] *** Joins: Vipulk (~vipulk@user/vipulk)
[16:00:54] <NoImNotNineVolt> ah, i forgot that was a thing.
[16:01:07] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[16:01:07] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[16:01:08] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[16:01:08] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[16:01:08] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[16:01:08] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[16:01:08] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[16:01:15] *** Joins: km (sid515529@user/km)
[16:01:20] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:01:35] <han-solo> setattr(self.alive, False) # should work ?
[16:01:35] *** Joins: legola (~legola@46.235.101.181)
[16:01:40] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:01:47] <NoImNotNineVolt> han-solo: good call :)
[16:02:05] <douglaswinship> At this point though, I think we're playing code-golf :)
[16:02:15] <douglaswinship> IMHO, the original code is fine.
[16:02:24] <NoImNotNineVolt> yea sorry, i was just asking probing questions.
[16:02:35] <han-solo> er, setartr(self, 'alive', ..)`
[16:02:39] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:03:37] <han-solo> welp, guess i can't type
[16:04:30] *** Joins: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de)
[16:05:07] <douglaswinship> NoImNotNineVolt: no problem with that. It keeps us all entertained :D
[16:05:26] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 246 seconds)
[16:05:30] <douglaswinship> Incidentally, I just read your name properly for the first time.
[16:05:43] <douglaswinship> And if you're not nine volt, I'm wondering how many volts you are instead?
[16:06:54] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[16:07:12] *** Joins: zeden (~zeden@user/zeden)
[16:07:29] *** Joins: mrwick (~mrwick@user/mrwick)
[16:07:35] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 264 seconds)
[16:07:46] *** Joins: Klinda (~superleag@user/klinda)
[16:08:27] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa)
[16:08:40] *** Joins: mike18 (~geri@217-149-160-150.nat.highway.telekom.at)
[16:08:46] <mike18> hi im using @responses.activate
[16:08:50] <mike18> for unit testing
[16:09:08] <mike18> what happens if i call responses.add 2 times - will it overwrite the old one?
[16:09:12] *** Joins: brontosaurusrex (~mua@user/brontosaurusrex)
[16:10:03] <ChrisWarrick> mike18: try it and see?
[16:10:10] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[16:10:14] <mike18> according to the docs it should work
[16:10:19] <mike18> but it seems not to work
[16:10:34] <mike18> https://github.com/getsentry/responses#multiple-responses
[16:11:14] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[16:12:03] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[16:12:51] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:13:16] *** Joins: FurCoatStarlette (FurCoatSta@159.196.89.115)
[16:15:06] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[16:15:52] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[16:17:22] *** Quits: grooverman_ (~grooverma@179.99.123.165) (Remote host closed the connection)
[16:18:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:18:27] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:18:31] <lbracher> Hello! I would like to add elements from a list to another list. Is there an unpack shorthand in Python like Javascript's ... ?
[16:18:52] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 260 seconds)
[16:19:00] <nedbat> lbracher: list1.extend(list2)    ?
[16:19:02] <MacGyver> What's the precise operation you want to perform?
[16:19:07] <teut> yes   l = [*l1, *l2]
[16:19:10] <MacGyver> Selectively add? Concatenate?
[16:19:15] <nedbat> lbracher: or:  list1 = [1, 2, 3, *list2, 4, 5]
[16:19:18] <lbracher> Just concatenate
[16:19:26] <lbracher> nedbat, thanks! :)
[16:19:26] <nedbat> lbracher: list1 += list2
[16:19:40] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[16:19:41] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 265 seconds)
[16:19:51] <lbracher> Wow! Never thought about that! Thanks! :)
[16:20:01] <nedbat> lbracher: += and .extend modify list1 in-place
[16:20:16] <lbracher> Wow! Thanks! :)
[16:20:31] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Quit: Client limit exceeded: 20000)
[16:20:32] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: Client limit exceeded: 20000)
[16:20:39] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (Quit: Client limit exceeded: 20000)
[16:20:43] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[16:20:46] *** Joins: grooverman (~grooverma@179.99.123.165)
[16:20:48] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 20000)
[16:20:53] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Client limit exceeded: 20000)
[16:20:54] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Client limit exceeded: 20000)
[16:21:00] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 20000)
[16:21:00] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Client limit exceeded: 20000)
[16:21:00] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: Client limit exceeded: 20000)
[16:21:03] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Client limit exceeded: 20000)
[16:21:10] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Client limit exceeded: 20000)
[16:21:30] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: Client limit exceeded: 20000)
[16:21:31] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[16:21:36] *** Quits: graybeard (~graybeard@user/graybeard) (Quit: Leaving)
[16:21:44] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Client limit exceeded: 20000)
[16:21:48] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Client limit exceeded: 20000)
[16:21:54] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Client limit exceeded: 20000)
[16:22:09] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:22:09] *** Quits: DX099 (~dx099@2001:470:69fc:105::21ce) (Quit: Client limit exceeded: 20000)
[16:22:36] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[16:22:36] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[16:22:36] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[16:22:36] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[16:22:36] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[16:22:38] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[16:22:38] *** Joins: psydroid (~psydroid@user/psydroid)
[16:22:38] *** Joins: allegary (~allegary@apache/committer/gjm)
[16:22:38] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[16:22:38] *** Joins: Vipulk (~vipulk@user/vipulk)
[16:22:38] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[16:22:38] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[16:22:41] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[16:22:52] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[16:22:52] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[16:22:53] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[16:22:55] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:23:04] *** Joins: graybeard (~graybeard@user/graybeard)
[16:23:56] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[16:24:20] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 246 seconds)
[16:25:13] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:25:37] *** Joins: TJ- (~root@about/linux/staff/tj-)
[16:25:44] *** dcaro_lunch is now known as dcaro
[16:26:09] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 256 seconds)
[16:26:23] *** Scotteh_ is now known as Scotteh
[16:27:08] *** Joins: MikZyth (~MikZyth@host-211-152-66-217.spbmts.ru)
[16:27:19] <exarkun> Can I specify a url for a package in setup.cfg somehow?
[16:27:49] <exarkun> Instead of "version found on pypi satisfying some constraints" I want "version in this zip file not on pypi"
[16:27:51] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 256 seconds)
[16:27:59] <exarkun> It doesn't seem like I can just say `package == someurl`
[16:28:03] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[16:28:06] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Client Quit)
[16:28:31] *** Quits: upsala (~zcb@185.213.155.252) (Ping timeout: 250 seconds)
[16:28:33] <teut> https://github.com/pandas-dev/pandas/blob/master/setup.cfg
[16:28:44] <teut> check here if you can find what you need
[16:29:13] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[16:29:17] <exarkun> there's certainly many things there, but all of the `install_requires` seem like normal version-based constraints
[16:29:23] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[16:30:30] *** Joins: upsala (~zcb@185.213.155.252)
[16:31:02] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Client Quit)
[16:31:15] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[16:32:00] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: Textual IRC Client: www.textualapp.com)
[16:32:17] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[16:32:18] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:32:29] *** Quits: onichomp666 (~onichomp@2806:264:4404:8301:6450:874c:5eb2:f9f8) (Read error: Connection reset by peer)
[16:32:44] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 246 seconds)
[16:32:46] <exarkun> Or a higher level question ... I depend on a branch of one of my dependencies while I wait for the branch to be merged and released.  Supported or unsupported workflow?
[16:33:06] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Remote host closed the connection)
[16:33:07] *** Joins: onichomp666 (~onichomp@2806:264:4404:8301:6450:874c:5eb2:f9f8)
[16:33:13] <jinsun> exarkun: you can package @ url https://www.python.org/dev/peps/pep-0440/#direct-references
[16:33:29] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[16:33:44] <exarkun> aho
[16:34:11] <cluelessperson> I'm completely stuck on my project with quart trio
[16:34:21] <cluelessperson> I don't know how to broadcast to multiple clients at the same time
[16:34:35] <cluelessperson> not sure where to go from here.
[16:35:13] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[16:35:14] <exarkun> jinsun: Thanks.  This seems to work w/ pip and setup.cfg.
[16:35:17] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:35:47] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[16:36:01] *** Joins: darksun (~darksun@user/darksun)
[16:36:22] *** Joins: teut (~teut@223.182.71.245)
[16:36:31] *** Quits: onichomp666 (~onichomp@2806:264:4404:8301:6450:874c:5eb2:f9f8) (Client Quit)
[16:36:45] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:37:03] <teut> doesnt the event loop automatically assigns tasks to workers cluelessperson?
[16:38:51] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 245 seconds)
[16:39:16] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 245 seconds)
[16:39:20] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[16:39:34] <exarkun> ah great direct references break mach-nix
[16:40:12] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:40:45] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:40:47] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:42:53] <bjs> cluelessperson: do you know how to send to multiple clients one after the other?
[16:43:10] <bjs> probably you can just do that many times in a nursery to get them to hpapen "at the same time"
[16:43:14] <bjs> happen*
[16:43:40] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:43:46] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[16:44:09] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:44:09] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[16:44:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:44:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:45:06] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Remote host closed the connection)
[16:45:23] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[16:45:31] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[16:46:28] <NoImNotNineVolt> douglaswinship: depends how hard i pedal :P
[16:46:50] *** Joins: fikran (~fikran@user/fikran)
[16:47:29] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:47:38] *** Quits: lbracher (~lucas@94.105.106.159.dyn.edpnet.net) (Ping timeout: 260 seconds)
[16:49:20] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[16:49:47] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[16:51:40] <cluelessperson> bjs, one after the other yes, but the trio memory channels act like queues,  when one client reads from it, it'll delete it
[16:52:05] <cluelessperson> I suppose the alternative is to set a variable to point to the image buffer and hvae a simple counter or frame id
[16:52:18] <cluelessperson> and have all the clients just while loop and send the new frame any time the frame id changes
[16:52:30] <bjs> cluelessperson: can't you make a channel for each client and then have your "broadcaster" just re-send the message it received down each channel
[16:52:31] <cluelessperson> but that seems less "perfect" than just having a broadcast queue
[16:55:43] <exarkun> What is the practical downside?
[16:55:57] *** Joins: ham5urg (~ham5urg@p200300d1673874008ebd4eff3ffebfca.dip0.t-ipconnect.de)
[16:56:22] <cluelessperson> technically, probably less capability of controlling exactly how frames are handled, frame by frame, or whether they are potentially skipped
[16:56:27] <cluelessperson> otherwise, probably none.
[16:56:28] <mike18> ChrisWarrick: found a solution: have to use: responses.RequestsMock(assert_all_requests_are_fired=False)
[16:56:35] <mike18> any idea what that does?
[16:56:51] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:56:55] <mike18> i use responses for unit test
[16:56:57] <mike18> btw
[16:57:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:57:08] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Remote host closed the connection)
[16:57:18] <exarkun> cluelessperson: Do you need control of those behaviors?
[16:57:36] <cluelessperson> realistically not, I'm just picky.
[16:57:57] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:58:53] <ham5urg> I have several classes XA, XB, XC which I combine in different ways inside MyClass. E.g. class MyClass: class X(XA, XC) Is there a more elegant way? I would like to avoid using a nested class (e.g. class X).
[16:59:14] <exarkun> I don't think being picky is a bad thing, but I think being picky about things that don't matter might not be very useful. :)  There's surely lots of things that do matter to be picky about.
[16:59:23] *** Joins: wing (~Guest41@122.206.190.13)
[16:59:29] <cluelessperson> ham5urg, probably composition. :D
[16:59:30] <exarkun> ham5urg: Yes.  Use composition instead of inheritance, and especially instead of multiple inheritance.
[16:59:44] <ham5urg> Ok, thanks
[16:59:48] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:00:24] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[17:00:38] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:00:42] *** Parts: javabean (~javabean@user/javabean) (No boundaries on the net!)
[17:00:42] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:00:50] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[17:02:36] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[17:02:39] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[17:03:13] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[17:03:25] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[17:04:29] *** Quits: baltazar (~baltazar@178-164-254-231.pool.digikabel.hu) (Ping timeout: 250 seconds)
[17:04:32] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[17:05:40] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[17:06:12] *** Joins: baltazar (~baltazar@84-236-12-229.pool.digikabel.hu)
[17:06:18] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[17:06:55] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:06:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[17:06:59] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:07:19] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:07:34] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[17:07:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[17:08:12] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:09:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[17:10:47] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:11:20] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:11:24] *** Quits: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[17:11:35] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[17:12:54] <HiccupJul> if i have a function that opens a file for reading
[17:13:04] <HiccupJul> then calls multiple different functions to read different offsets of a file
[17:13:16] <HiccupJul> how can i get them to all operate on the same file object?
[17:13:29] <HiccupJul> do i just need to pass the file object as an argument to each function?
[17:13:50] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[17:14:11] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:14:17] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[17:14:22] *** Quits: wing (~Guest41@122.206.190.13) (Ping timeout: 256 seconds)
[17:14:36] <raek> sure, that works
[17:14:56] <HiccupJul> but wouldn't that mean each function would be operating on a different copy of the file object?
[17:15:15] <teut> use a class
[17:15:15] <HiccupJul> maybe that's totally wrong, and it only acts as a link
[17:15:19] <ChrisWarrick> HiccupJul: no, that’s not how python works
[17:15:31] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[17:15:32] <HiccupJul> ah
[17:15:37] <ChrisWarrick> HiccupJul: passing an argument to a function doesn’t copy it
[17:15:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:15:52] <HiccupJul> i see. okay that's good to know.
[17:15:54] <HiccupJul> i suppose i'm not actually modifying the file, so it wouldn't make a difference anyway
[17:16:18] <HiccupJul> re. using a class. i'm not sure how that would be any better than using a global variable...
[17:16:19] <raek> HiccupJul: good reading: https://nedbatchelder.com/text/names1.html
[17:16:35] <HiccupJul> thanks
[17:17:24] <raek> the confusion is understandable. different programming languages behave very differently.
[17:18:33] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[17:18:35] *** Quits: mike18 (~geri@217-149-160-150.nat.highway.telekom.at) (Remote host closed the connection)
[17:18:42] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:18:50] <HiccupJul> tbh, i'm just a noob at programming in general. i just made an assumption about how passing objects to functions worked.
[17:18:51] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[17:19:59] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[17:20:50] <Swayze> thats alright
[17:20:59] <Swayze> and if it doesnt work as expected the google it
[17:21:01] <Swayze> thats also ok :p
[17:21:12] <Swayze> probably a good strategy overall
[17:21:53] <Swayze> the third option is to do your own tests, like pass the object then do updates, check the values after the function etc
[17:22:47] <HiccupJul> yeah
[17:22:56] *** Quits: Syzygy (~Syzygy@dynamic-2l4rd2xn2u83wabpag-pd01.res.v6.highway.a1.net) (Quit: Leaving)
[17:23:06] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[17:23:41] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:24:05] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[17:24:06] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[17:25:39] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 256 seconds)
[17:26:04] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[17:26:12] *** Joins: legola (~legola@46.235.101.181)
[17:26:58] *** Quits: legola (~legola@46.235.101.181) (Read error: Connection reset by peer)
[17:27:17] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[17:27:23] <MrMobius> is there an easy way to replace python 3.9 with 3.10 on linux? i know the default is to have them installed side by side but everything im running is mine so id want to find and fix any incompatibilities anyway. is there a less annoying way than having to change what everything points to?
[17:27:27] *** Quits: MikZyth (~MikZyth@host-211-152-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[17:27:31] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:28:40] <grym> MrMobius: pyenv is nice!
[17:29:16] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[17:29:29] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233)
[17:29:46] <grym> MrMobius: afaik there's no simple or reliable way to change what base interpreter a venv uses, though, so you will be making multiple venvs anyway
[17:29:47] *** Joins: Trieste (~T@user/pilgrim)
[17:29:49] <exarkun> MrMobius: not "on linux", no.
[17:29:57] <exarkun> MrMobius: Your Linux distribution may have a way.
[17:30:11] <grym> exarkun: pyenv is distro agnostic ;)
[17:30:46] <exarkun> grym: Yes?
[17:30:49] <MacGyver> Yes, but it's also not systemwide.
[17:31:05] <MrMobius> exarkun, how about completely uninstalling 3.9 then installing python 3? shouldnt that get me 3.10?
[17:31:08] <MacGyver> MrMobius: What are you actually trying to do?
[17:31:17] <grym> exarkun: so "on linux", yes
[17:31:21] <MacGyver> MrMobius: Trying to test whether system software runs on 3.10 without modification?
[17:31:25] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:31:33] *** Joins: xardas (~xardas@149.233.51.127)
[17:31:35] <MacGyver> MrMobius: Or develop your own software against 3.10?
[17:31:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:31:50] <grym> MrMobius: removing the system python on a linux distribution is almost always a really bad idea
[17:32:03] <MrMobius> MacGyver, no, i saw they added pattern matching to 3.10 and i want to start using it in my scripts
[17:32:04] <exarkun> MrMobius: It depends on your distribution.
[17:32:11] *** Joins: dld (~dld@2601:197:600:1210:9992:b3e2:af1a:fbc2)
[17:32:24] <exarkun> MrMobius: If you just want Python 3.10 features in your software, you don't really care about updating the system Python package though.
[17:32:41] <exarkun> MrMobius: You should use some virtualenvs, maybe using pyenv as grym suggested.
[17:33:13] <exarkun> MrMobius: If you have a lot of custom Python software on your system that isn't run in virtualenvs, you probably needed to fix that anyway.
[17:33:18] <MrMobius> wouldnt i need to specify which venv i want then when invoking python scripts or can i set a default?
[17:33:42] <exarkun> Look at pyenv, I guess.
[17:33:43] <grym> MrMobius: general guide to best practice is one venv per project
[17:34:08] <grym> pyenv and venv aren't the same thing at all; you'd use pyenv to install 3.10, and make venvs with 3.10
[17:35:36] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[17:36:08] <grym> MrMobius: for your $USER if you install pyenv, then `pyenv install 3.10.0` then `pyenv global 3.10.0`, python will point to 3.10 for you
[17:36:11] <grym> which is handy
[17:36:28] <MrMobius> hmm, no id rather just keep my scripts working with the latest version. ive had to install random versions of python on windows to get someone else's stuff running and it was a real shitshow. id rather not inflict that on myself
[17:36:31] *** Joins: pro_z (~pro_z@37.214.56.218)
[17:37:17] <grym> that's what i'm suggesting you do
[17:37:36] <grym> i'm additionally suggesting that you ignore system python totally, because it doesn't have to matter
[17:37:39] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[17:37:45] <grym> let it go do OS things like it's meant to do
[17:37:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:37:51] <grym> pretend it's not there
[17:38:06] <MrMobius> grym, ya system python is fine if its different
[17:38:13] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:38:29] <MrMobius> so you would recommend a separate venv for each script even if 10 lines or something?
[17:38:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:39:07] <exarkun> You can put them all in one venv if you want them to all share a dependency set
[17:39:20] <exarkun> Or you can do N:M if you want something more complicated than that
[17:39:39] <exarkun> "only 10 lines long" doesn't say very much about the complexity of their dependencies, though
[17:39:48] <exarkun> maybe the 1st line pulls in 500 dependencies, who knows
[17:40:01] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 250 seconds)
[17:40:13] <MrMobius> just vanilla built in stuff like json. no numpy or anything
[17:40:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6396:dd82:eabc:bcd7)
[17:40:21] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::1e0b) (Remote host closed the connection)
[17:40:25] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[17:40:39] *** Joins: nomic (~nomic@185.192.69.224)
[17:41:13] <jinsun> you can just use a common venv for all those scripts
[17:43:26] *** xardas is now known as nofrills
[17:43:31] *** Joins: Pickchea (~private@user/pickchea)
[17:43:35] <grym> yep!
[17:43:49] <grym> separate venvs are most useful for avoiding diamond deps
[17:43:54] *** Joins: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs)
[17:44:07] <grym> a venv _in general_ is a good idea so that you don't footle around with base interpreter
[17:44:08] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) (Remote host closed the connection)
[17:44:22] <grym> and also because if you screw it up, you can just rm -rf the whole thing and not lose much
[17:46:22] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[17:49:31] *** Quits: vd657777 (~vd6577@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[17:49:50] *** Joins: vd657777 (~vd657777@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:50:25] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[17:52:13] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:52:14] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[17:54:05] *** Joins: _moep_ (~moep@user/moep/x-3358975)
[17:54:30] <bkhl> memoryview question: will doing bytes(mymemoryview) copy the content of the memoryview, or just expose the same content with the same interface.
[17:54:53] <deniska> bkhl: it will copy
[17:55:29] <bkhl> I need to pipe things from a memoryview of a blob from one DB interface into a 'large object' in PostgreSQL on the other (via psycopg2)
[17:55:44] <bkhl> What's then a reasonable way to chunk the content of the memoryview into strings that I can write into the latter?
[17:55:56] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[17:56:07] <bkhl> Or does someone know another way to get a memoryview into a psycopg2 "large object"?
[17:56:11] <deniska> bkhl: can't you just handle memoryview directly?
[17:56:11] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 264 seconds)
[17:56:31] <bkhl> Well, the 'lobject' interface in psycopg2 only accepts strings
[17:56:42] <bkhl> As far as I can find anyway
[17:57:01] <bkhl> But I can do multiple writes to it, so turning the memoryview into strings in chunks should be OK.
[17:57:07] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[17:57:14] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[17:57:51] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[17:58:02] <deniska> bkhl: seems like lobject can be open in binary mode
[17:58:25] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:58:54] <bkhl> Ah, and then I should be able to use a memoryview directly in place of a bytestring? Trying it out
[18:00:20] *** Joins: lidenbrock (~lidenbroc@186.192.87.8)
[18:00:28] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[18:00:31] <bkhl> Nope, no luck with that.
[18:00:48] *** Joins: zeden (~zeden@user/zeden)
[18:01:05] *** Quits: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs) (Quit: Leaving)
[18:01:21] *** lidenbrock is now known as eron
[18:04:23] <cluelessperson> my solution to my broadcast problem is currently designed like this:      I'll create an object that maintains a linked list of nodes, tail to head.   Each node will hold a variable "expected_acks" which is a set of expected events to be set by respective clients
[18:05:04] <cluelessperson> The idea is that in asyncio,  I should be able to iterate over the expected acks, and delete the trailing tail as long as the node is acked by all the clients.
[18:05:47] *** Joins: sfields (~sfields@2605:a601:adea:7a00:66bd:f7af:8a04:1b90)
[18:05:55] <cluelessperson> oh, also I should store  client_nodes,  to keep where each client is
[18:05:56] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 245 seconds)
[18:07:58] <cluelessperson> so each client requests the next node, the broadcast sees its place, gives it the next node, flags the node as acked by that client
[18:08:07] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:09:47] *** Quits: nofrills (~xardas@149.233.51.127) (Quit: Client closed)
[18:10:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:10:59] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 256 seconds)
[18:11:05] *** cdown_ is now known as cdown
[18:12:18] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa) (Read error: Connection reset by peer)
[18:12:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[18:12:51] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:13:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[18:13:29] *** Joins: xkuru (~xkuru@user/xkuru)
[18:13:35] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa)
[18:13:52] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:17:51] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[18:18:26] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:18:27] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[18:19:02] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 240 seconds)
[18:19:32] *** Quits: gitly (~gitly@148.252.132.210) (Ping timeout: 240 seconds)
[18:20:41] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::1e0b)
[18:20:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[18:21:56] *** Joins: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de)
[18:21:59] *** Joins: gitly (~gitly@148.252.128.93)
[18:22:12] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:22:15] <Pickchea> Hello! I need to take the log of ever element in a series. I can use map, apply and transform. Which one should I use or does it truly not matter?
[18:22:29] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::1e0b) (Remote host closed the connection)
[18:22:46] *** Joins: xardas (~xardas@149.233.51.127)
[18:23:27] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[18:23:31] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120)
[18:24:02] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:24:04] *** Quits: eron (~lidenbroc@186.192.87.8) (Ping timeout: 256 seconds)
[18:24:04] <grym> Pickchea: are you using numpy or not
[18:24:19] <Pickchea> grym, I am!
[18:24:31] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[18:24:35] <grym> then it's just np.log(thearray)
[18:25:16] <grym> or np.log2 or np.log10 as your needs demand
[18:25:59] *** Joins: Macuser (~Macuser@2607:b400:26:0:25fe:7eac:127a:fa0a)
[18:26:02] *** Quits: Macuser (~Macuser@2607:b400:26:0:25fe:7eac:127a:fa0a) (Remote host closed the connection)
[18:26:23] <Pickchea> grym, but is that efficient? For numpy the input is just iterable whereas the pandas series presumably knows how to apply the function most efficiently.
[18:26:59] *** Joins: binary01 (~binary01@192.110.171.216)
[18:27:05] <grym> np.log() can take a series, i think
[18:27:13] *** Joins: djangoaddict (~djangoadd@2601:8c:c100:6820:6dba:885e:e137:2eeb)
[18:27:14] <supakeen> what do you care about 'acks' for, cluelessperson
[18:27:15] *** Joins: |\n (~x0a@user/n/x-7623025)
[18:27:23] <renlo> numpy's log function is probably optimized in C right?
[18:27:36] <grym> Pickchea: you should in general expect numpy's vectorized operations to be fast
[18:27:38] <Pickchea> Wait no, it's not. np.log(series) returns a series. So numpy apparently knows how to handle series intimately.
[18:27:41] <grym> yes
[18:27:58] <grym> df['newcolumn'] = np.log(df['data']) should Just Work iirc
[18:28:15] *** Joins: zebrag (~chris@user/zebrag)
[18:28:22] <|\n> hi, guys i have a potentially awkward question, in general and not looking back to python version, our re.compile object containing a unicode expression - shouldn't care on if it is being applied on string or a unicode sequence?
[18:28:22] <Pickchea> Yes it works. OK thanks!
[18:28:26] <jinsun> and that is faster than .map or .apply or .transform
[18:28:46] <jinsun> those are really short way of writing for loops
[18:29:29] <grym> (and python loops over ndarrays is basically always an antipattern
[18:30:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[18:30:44] <cluelessperson> supakeen,  acks would be used to know that all the expected clients at the time of the addition of the node, have acked it, so it can be deleted.
[18:30:45] <Pickchea> Don't worry, I'd never loop over a numpy array ;-)
[18:30:50] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5888-6643-8838-ea36.res6.spectrum.com)
[18:31:05] <supakeen> yes but why do you care about that
[18:31:13] <grym> Pickchea: well, you were just proposing to :)
[18:31:20] <supakeen> it seems a bit contrary to a 'broadcast' principle
[18:31:26] <cluelessperson> supakeen, well it assures every clients gets every frame.
[18:31:32] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[18:31:37] <cluelessperson> supakeen, how is it contrary?
[18:31:37] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:31:50] <supakeen> because broadcasting tends to be 'lets throw stuff out and whoever listens gets it'
[18:32:01] <supakeen> while you seem to need qos and such
[18:32:07] <supakeen> what are you going to do when a client doesn't ack?
[18:32:37] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:32:49] <Pickchea> grym, I meant like `for i in arr'. I imagined pandas would know not to python-loop if the function is from numpy.
[18:33:08] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 246 seconds)
[18:33:58] <Pickchea> I thought series.apply(f) would do something like f(series._internal_np_array) for vectorised function f.
[18:34:40] <grym> Pickchea: oh, probably, but it wasn't clear at first that pandas was involved here at all
[18:34:59] *** Quits: zhukovgreen (~ab017i2@2a0f:8742:88c:0:81d:d1e0:ea49:c107) (Quit: WeeChat 3.3)
[18:35:40] <Pickchea> grym, yeah, maybe I should have said "pandas series" or "pandas.Series" instead...
[18:37:41] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[18:37:51] <SnoopJ> Pickchea, use np.log(series)
[18:38:04] <Pickchea> SnoopJ, that's the plan.
[18:38:18] <SnoopJ> oh, I missed the middle part of scrollback, oops
[18:38:43] <Pickchea> SnoopJ, no problem :-)
[18:41:38] <cluelessperson> supakeen, I suppose I could write it as both
[18:41:51] <cluelessperson> rather two versions
[18:42:09] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[18:42:09] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[18:42:17] <cluelessperson> supakeen, I was thinking that if a client took too long to respond, I'd time nodes out anyway
[18:42:20] <supakeen> sounds to me you have an ever progressing stream of data that you want to send out to any client connected at that moment; what the client does with it don't matter
[18:42:23] <cluelessperson> and/or create a max size
[18:42:26] <supakeen> you can't stop the stream
[18:42:33] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[18:42:39] <cluelessperson> supakeen, it's a tiny thermal camera.
[18:42:52] <supakeen> yes, who cares if you drop a frame there :)
[18:44:00] <cluelessperson> supakeen, well I feel it depends on the case
[18:44:10] <cluelessperson> supakeen, I don't care, but on principle I think some people would
[18:45:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[18:45:59] *** Quits: vd657777 (~vd657777@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[18:46:18] *** Joins: vd657777 (~vd657777@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:47:00] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:47:11] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:48:01] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[18:48:14] *** Joins: Klinda (~superleag@user/klinda)
[18:49:01] *** Joins: Roey (~Roey@user/Roey)
[18:50:45] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:51:47] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[18:51:58] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[18:52:21] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[18:52:25] *** Joins: raxor2k (~raxor2k@78.158.246.35)
[18:52:46] *** Joins: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[18:52:50] *** Joins: akk (~akk@75.161.146.115)
[18:53:35] <supakeen> you'd need to decide if you care about it, since it dictates your design
[18:53:37] <raxor2k> how can i convert list of dicts like this: [{"name" : "joshua" , "age" : 2}, {"name" : "peter" , "age" : 3}]   to tuples ?
[18:53:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[18:54:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:54:36] <han-solo> [x.items() for x in that_list] # ?
[18:54:54] <han-solo> what will you do with the tuples ?
[18:55:16] <grym> raxor2k: do you want a tuple of dicts, or a list of tuples, or a tuple of tuples? be specific.
[18:55:18] <MacGyver> And maybe no less important, how do you want the tuple to look?
[18:55:26] *** Quits: vd657777 (~vd657777@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[18:55:42] *** Joins: vd657777 (~vd657777@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:55:54] <renlo> like a tuple ofc! :p
[18:56:11] *** Joins: fikran (~fikran@user/fikran)
[18:56:21] <MacGyver> hardeehar.
[18:56:45] <raxor2k> han-solo: that gives me this: [('name', "joshua"), ('age', 2)] ... i need all info in one tuple
[18:56:55] <MacGyver> What's "all info"?
[18:56:55] *** Joins: cosimone (~user@93-47-231-139.ip115.fastwebnet.it)
[18:56:59] <raxor2k> grym: list of dicts --> list of tuples
[18:57:15] <MacGyver> Do you want a tuple ("joshua", 2)?
[18:57:23] <MacGyver> Or ("name", "joshua", "age", 2)?
[18:57:25] <MacGyver> Something else?
[18:57:28] <MacGyver> Nesting?
[18:57:52] *** Quits: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[18:58:03] *** Joins: s98259 (~s98259@user/helenah)
[18:58:05] <s98259> Hi.
[18:58:13] <supakeen> Hello.
[18:58:36] <raxor2k> macgyver: yes, i need like this: ("name", "joshua", "age", 2)
[18:58:44] <raxor2k> or
[18:58:52] <raxor2k> ( "joshua",  2)  would also work
[18:59:19] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:59:42] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com)
[18:59:49] <raxor2k> nfv
[18:59:50] <han-solo> `[(v['name'], v['age']) for v in x]` then
[18:59:51] <raxor2k> nvm
[18:59:52] <raxor2k> solved it
[19:00:00] <s98259> Is there a way to remove an entire nested list from a list of lists? I basically want to test the first element of each nexted list to see which one matches and then remove the one that matches.
[19:00:00] <raxor2k> [x.values() for x in a_list]
[19:00:04] <raxor2k> thanks han solo <3
[19:00:26] <SnoopJ> s98259, list.remove() can do that
[19:00:43] <SnoopJ> if you want to match the entire inner list, that is.
[19:00:50] <han-solo> raxor2k: .values() should be fine, as long as you are not doing any indexing on the that thingie, i guess
[19:01:07] <SnoopJ> Otherwise you might want to write a list comprehension or a filter() expression
[19:01:15] *** Joins: fdsaasdf (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[19:01:38] *** Quits: djangoaddict (~djangoadd@2601:8c:c100:6820:6dba:885e:e137:2eeb) (Quit: Client closed)
[19:01:42] <grym> raxor2k: https://bpa.st/GQQQ
[19:02:22] *** fdsaasdf is now known as NoImNotNineVolt
[19:03:07] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[19:03:07] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 256 seconds)
[19:03:12] *** Joins: doko (~doko@p200300cadf27c200b22cf16ea7201cc6.dip0.t-ipconnect.de)
[19:03:31] <s98259> Okay thanks, since you mentioned remove() it gave me an idea on how to search into remove() with different search terms and I got an explanation on how it can work for nested lists. Thank you! :)
[19:03:37] *** Joins: BlueSky (~BlueSky@user/bluesky)
[19:04:04] <raxor2k> grym: you mean i should be able to remove "dict_values(" with iterrools?
[19:04:50] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[19:05:07] <grym> raxor2k: as usual, you tell me, you know more about your data
[19:05:26] <raxor2k> grym: i dont need the keys, only the values
[19:05:45] <raxor2k> [('joshua', 2), ("tim" : 4)]
[19:05:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:06:07] *** Joins: BlueSky (~BlueSky@user/bluesky)
[19:06:20] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[19:06:21] <bjs> raxor2k: ("name", "joshua", "age", 2) is exactly what you asked for :P
[19:06:28] <grym>  > macgyver: yes, i need like this: ("name", "joshua", "age", 2)
[19:06:35] *** byzandula is now known as byzafk
[19:06:44] <grym> dancing on the ol' /ignore razor's edge :)
[19:06:54] *** Joins: BlueSky (~BlueSky@user/bluesky)
[19:07:12] <daex_> Can I get the asyncio REPL (`python -m asyncio`) to share readline history with the regular python REPL?
[19:07:19] <raxor2k> grym: and then i said : "<raxor2k> ( "joshua",  2)  would also work"
[19:07:25] <daex_> I can't tell if `AsyncIOInteractiveConsole` has anywhere to plug in a startup filename.
[19:07:50] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[19:08:16] *** Joins: BlueSky (~BlueSky@user/bluesky)
[19:08:44] *** daex_ is now known as daex
[19:10:34] *** Quits: resmo (~resmo@2a00:d420:9:8a00:3056:fa96:c708:4824) (Quit: Leaving)
[19:11:27] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Ping timeout: 268 seconds)
[19:11:43] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[19:12:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[19:12:17] *** Joins: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de)
[19:13:19] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 256 seconds)
[19:13:54] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[19:14:19] *** Joins: davidd (~hay_sup@user/memorious)
[19:14:33] <davidd> is there a way to call a method on a value without having to check that it's null?
[19:14:48] <grym> davidd: try:
[19:14:49] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[19:14:58] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[19:15:05] <grym> (so, no, not really)
[19:15:26] *** dcaro is now known as dcaro_away
[19:15:28] <davidd> ah ok. I vaguely remember a proposal to add a construct to handle nulls but maybe I am thinking of Ruby
[19:15:31] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:15:32] <davidd> thank you grym
[19:15:58] <grym> davidd: it's https://www.python.org/dev/peps/pep-0505/, but the future looks somewhat dim the last time i looked
[19:16:16] <davidd> grym++
[19:16:25] <SnoopJ> There's been renewed interest in it lately in the context of 3.11 https://mail.python.org/archives/list/python-dev@python.org/thread/XZZIV42XGG3EIHRBBCCTTCFPWWSOT7MX/
[19:16:33] <s98259> Anyone here used AsyncSSH? In the connection_closed def, how do I get client information about the client with the closed connection to remove it from a list?
[19:16:53] <grym> i know aphysically has been reading those messages, but the tone of the reports back to the channel seem variable in their optimism
[19:17:38] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:18:23] *** Quits: anonymeowo (~anonymeow@45.90.57.51) (Ping timeout: 264 seconds)
[19:18:41] *** Joins: teut (~teut@223.182.71.245)
[19:18:41] <s98259> I'm really struggling to properly terminate connections, I'm storing in a list a load of information about the client, I just need to access and remove it. I can do it from the process_factory object but not sure how to make that information available in the connection_closed definition and I haven't been able to remove that information in the process_factory object.
[19:18:48] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[19:19:27] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 268 seconds)
[19:19:54] <aphysically> grym: the situation is unique enough that I think it's still hard to say for sure which way steering is gonna go on it
[19:20:06] <aphysically> gonna have to ultimately be a wait and see thing I think
[19:20:11] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:20:14] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:20:27] *** Joins: mimmy (~mimmy@72.142.88.18)
[19:20:32] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[19:20:42] *** Joins: pycurious (~Adium@user/pycurious)
[19:20:54] <SnoopJ> ...TIL R uses distinct NaNs to represent NA
[19:21:36] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:21:55] <grym> aphysically: yeah i can see both sides.  having maybedot is nice; getting it and having that just result in having to use it bloody everwhere is ... less nice
[19:22:04] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[19:22:35] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 264 seconds)
[19:22:49] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[19:22:54] *** Joins: Socra (~Socra@206.217.216.27)
[19:22:57] *** Parts: davidd (~hay_sup@user/memorious) (WeeChat 3.0)
[19:23:26] <grym> "None and its ilk often conflate too many qualities. For example, is it
[19:23:26] <grym> missing because it doesn't exist, it never existed, or because we never
[19:23:27] <grym> received a value, despite knowing it must exist"
[19:23:28] <grym> whoops
[19:23:31] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[19:23:49] <grym> this sort of question hits real deep for me
[19:24:13] <Pi-sistance> whats the best thing to do by myself to figure out a function problem if it isnt returning anything when it should given certain input? it returns correctly in limited circumstances :/
[19:24:14] <SnoopJ> I'm not sure that's a syntactic concern
[19:24:32] <MacGyver> Nope, the semantics of None, NULL, etc, is very much a semantic concern.
[19:24:34] <grym> Pi-sistance: a debugger
[19:24:34] <Julian> Pi-sistance: A function always returns something
[19:24:41] <Julian> Pi-sistance: But yes a debugger if you can't figure it out
[19:24:52] <grym> Pi-sistance: preferably one you can step through line by line.  barring that, pythontutor.com which is much the same idea
[19:25:02] <Pi-sistance> ok thankyou.
[19:25:49] <SnoopJ> to clarify: functions always return, and the default return value (the thing you get if there isn't a return statement) is None
[19:25:49] <raxor2k> why is it so hard to remove "(dict_values(" from the result? https://bpa.st/ECKA
[19:26:20] <SnoopJ> raxor2k, because dict_values instances are what .values() gives you, by design.
[19:26:46] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 245 seconds)
[19:26:47] <SnoopJ> raxor2k, try `list(x.values())` instead there.
[19:27:20] *** Joins: resmo (~resmo@2a00:d420:9:8a00:9fdc:2eaa:9da8:5ce5)
[19:27:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:27:56] <grym> Pi-sistance: see https://teensy.info/CxEc1g7wQ0
[19:28:03] *** Quits: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:28:14] <MacGyver> raxor2k: Are you making the mistake of thinking everything is a string?
[19:28:50] <MacGyver> raxor2k: You're asking python to print the string-representation of a type. That includes the type in this case, but if you were to operate on it it doesn't.
[19:29:00] <grym> let's not conflate the repr and the thing, yeah
[19:29:01] <han-solo> i'm curious, what will you do with these values
[19:30:04] <raxor2k> han-solo: curious?
[19:30:12] *** Quits: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[19:30:17] <han-solo> yeah...
[19:30:32] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:f4e8:2c2b:55b8:85b6)
[19:30:33] <analoq> what would be the simplest way to simulate an embedded device for development purposes with which you interact via ssh/sftp?
[19:30:41] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:30:43] *** Joins: benjwadams (~benjwadam@d-67-231-77-225.ct.cpe.atlanticbb.net)
[19:31:00] <analoq> initially i thought vm. but maybe a docker container would suffice?
[19:31:27] <bparker> depends on the device
[19:31:32] <analoq> or is there even something more simple/ lightweight than docker
[19:31:32] <bparker> and how you communicate
[19:31:54] <analoq> just some dummy function calls basically
[19:32:05] <bparker> function calls, over ssh/sftp?
[19:32:20] <bparker> I'm confused
[19:32:32] <bjs> I guess some RPC like thing
[19:32:34] <analoq> well filetransfer/ restarts matching filesystem etc
[19:32:43] <analoq> yeah commands via ssh
[19:32:59] <bparker> docker should work fine then
[19:33:06] <raxor2k> han-solo:  since you asked: https://bpa.st/TVUA
[19:33:07] <analoq> ty
[19:33:49] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[19:34:32] <bjs> raxor2k: that chain looks weird
[19:35:00] <raxor2k> chain ?
[19:35:30] <bjs> raxor2k: tuple(itertools.chain(list(x))) is just a complex way of writing tuple(x) isn't it?
[19:35:40] *** Joins: arinov (~arinov@178.240.135.64)
[19:35:53] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[19:36:05] *** Joins: mimmy (~mimmy@72.142.88.18)
[19:36:06] *** Quits: doko (~doko@p200300cadf27c200b22cf16ea7201cc6.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[19:36:44] *** Parts: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Leaving)
[19:36:46] <raxor2k> bjs: i dunno, ask the other ones here who provided that solutions
[19:36:48] <raxor2k> solution
[19:37:02] <bjs> raxor2k: you mean grym ?
[19:37:18] <grym> (who used chain.from_iterable to flatten something that wasn't flat :) )
[19:37:22] <bjs> Their code didn't actually call itertools.chain at all :)
[19:37:34] <bjs> you should be more careful to read and understand others code before copy/pasting it
[19:37:51] <raxor2k> bjs: for instance, yes
[19:37:56] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:37:59] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[19:37:59] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[19:38:01] <bjs> raxor2k: but grym didn't call itertools.chain
[19:38:03] <bjs> so ...
[19:38:21] <MacGyver> I feel like we're solving someone's homework assignment.
[19:38:28] *** Joins: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[19:38:30] <MacGyver> In an extremely bad way.
[19:38:40] <SnoopJ> analoq, you could also mock the calls to the device if you're developing all the rest of the stuff and having an actually-simulated device is not important for some reason
[19:38:45] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[19:38:55] <grym> MacGyver: sadly, no
[19:39:07] <bjs> raxor2k: if you just want to turn each dict_values into a tuple, then do that: `[tuple(x.values()) for x in a_list]`
[19:39:48] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:40:31] <MacGyver> grym: How certain are you? Because apparently now how it's printed matters as well, I really get the feeling it's a really basic "given a list of dicts of records, print them in an unsorted list".
[19:40:33] <analoq> SnoopJ: I want to see that it at least works in principle. i.e. how does my code behave when the ssh target restarts without properly closing ssh etc.
[19:40:53] <MacGyver> Combined with never answering "what are you going to do with the values".
[19:40:54] <raxor2k> once again: Bjs for president <3
[19:40:55] <grym> MacGyver: Pi-sistance is worknig on homework, raxor2k is doing contract stuff afaik
[19:40:55] <bjs> raxor2k: also you may find reading through a tutorial or something will help, it should explain what dict.values() returns and what you can do with it
[19:41:10] <analoq> and it cant hurt to learn a little more about docker :)
[19:41:17] <raxor2k> bjs: everybody knows what dict.values() do
[19:41:18] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[19:41:28] <MacGyver> grym: Oof.
[19:41:34] <grym> ¯\_(ツ)_/¯
[19:41:53] <bjs> raxor2k: well that's not true at all
[19:43:08] <raxor2k> bjs: knowing the difference between .values() and .items() and .keys() are essential before working with dicts
[19:44:18] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:45:04] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[19:46:02] *** Joins: greedom (~greedom@x59cc9953.dyn.telefonica.de)
[19:46:24] *** Joins: Pixi (~Pixi@user/pixi)
[19:47:11] <SnoopJ> not really, but they're good things to know about
[19:47:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6396:dd82:eabc:bcd7) (Ping timeout: 264 seconds)
[19:49:08] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:50:46] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:51:04] *** Joins: Siecje (~Siecje@216.154.14.35)
[19:51:12] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:51:27] *** Joins: Naan (~Naan@user/naan)
[19:51:52] *** Joins: Arw (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[19:52:18] *** Joins: Klinda (~superleag@user/klinda)
[19:52:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[19:52:50] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 265 seconds)
[19:53:03] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[19:53:07] <Siecje> I'm looking for an example project that uses psycopg3. I'm trying to figure out how to re-use a connection in multiple functions.
[19:54:02] *** Joins: rsx (~dummy@ppp-188-174-134-41.dynamic.mnet-online.de)
[19:54:06] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[19:56:15] *** Quits: greedom (~greedom@x59cc9953.dyn.telefonica.de) (Remote host closed the connection)
[19:57:16] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[19:57:16] *** Joins: greedom (~greedom@x59cc9953.dyn.telefonica.de)
[19:57:19] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[19:57:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:57:37] <bjs> raxor2k: well maybe and maybe not, and that doesn't necessarily mean people know what each of them actually do.  e.g. lots of people misunderstand what type of object those methods return or how to use those objects
[19:57:44] *** Joins: Gerula (~Gerula@user/gerula)
[19:58:08] <bjs> this is why documentation and books and tutorials exist
[19:58:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:58:41] <zodd> Is there a difference between py2/py3 and/or virtenv regarding module import path? In an example from internet I see a script.sh which calls python app/prestart.py which tries to import modules starting with path 'app. ...' which in turn import modules. Seems to error all over because app is considered the root and not the directory where the shell script resides. So I must manipulate the import path, but how come this is buggy? Has
[19:58:41] <zodd> something changed (assuming the example code ran ok once)?
[19:59:15] <Wooble> zodd: yes, python 3 won't do implicit relative imports
[19:59:32] *** Quits: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[19:59:47] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 264 seconds)
[19:59:54] *** Joins: metaace (~metaace@user/metaace)
[20:00:21] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Ping timeout: 256 seconds)
[20:00:33] <Wooble> although finding a random thing on the internet that only works on the machine of the person who put it there is pretty common, and might not be related to that change.
[20:00:46] <zodd> Wooble, ok. Clear. ty. Quite sad that code 3 months old still suffers from this.
[20:01:02] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Quit: happy math or coding)
[20:01:34] <bjs> zodd: if the code was written 3 months ago it seems unlikely it ever worked, unless there's some part of the instructions you're missing
[20:01:49] <bjs> (e.g. some environment variable you're supposed to set or some other installation step)
[20:02:37] <zodd> Not sure if the code is 3 months old. The check in on Github is
[20:03:02] *** Joins: wladimir (~doforlove@user/doforlove33)
[20:03:14] *** wladimir is now known as ethrl
[20:03:21] <zodd> it is code in a series of articles. Most likely a bit older then, but even so. Python2 is ancient...
[20:03:27] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[20:03:31] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[20:03:33] <zodd> anyway. Now I can fix things. thanks
[20:05:10] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:05:23] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:06:04] *** Quits: rsx (~dummy@ppp-188-174-134-41.dynamic.mnet-online.de) (Quit: rsx)
[20:06:40] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:06:48] *** Joins: shawwwn (uid6132@helmsley.irccloud.com)
[20:08:11] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[20:08:31] <HiccupJul> is it sensible to do "from sys import stdout as sys.stdout"
[20:08:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:08:42] <grym> HiccupJul: no
[20:08:56] <HiccupJul> why not?
[20:09:04] <SnoopJ> HiccupJul, it's not syntactically valid, for one
[20:09:06] <HiccupJul> ah
[20:09:12] <HiccupJul> i know i can just do "import sys"
[20:09:16] * SnoopJ nods
[20:09:17] <HiccupJul> but i don't need everything from sys
[20:09:27] <Wooble> HiccupJul: do you know it imports the entire module anyway?
[20:09:37] <HiccupJul> ah good point
[20:09:40] <SnoopJ> yea, `from` doesn't "save" you any expense here
[20:09:44] <Wooble> (although it was imported long before your code even ran)
[20:09:44] <SnoopJ> it just extracts a name
[20:09:52] <SnoopJ> yea sys should be basically free :)
[20:10:10] <HiccupJul> i forgot that doing "import x" doesn't necessarily load a lot of stuff into memory
[20:10:25] <HiccupJul> thanks
[20:11:09] <SnoopJ> HiccupJul, either kind of import will execute the module, but the stuff changed in the module where the import runs depends on which one you use. If you import a module, you get the module as its name. If you use `from`, you get the name(s) you requested, possibly renamed
[20:11:39] <SnoopJ> but the thing you rename to has to be a valid identifier and dots violate that (which is why it's a SyntaxError)
[20:11:45] <HiccupJul> i see
[20:11:58] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[20:12:28] <Wooble> even for modules that do load a lot of stuff into memory, using from loads all of the same stuff, just doesn't make it easy to access.
[20:13:09] <HiccupJul> ah
[20:13:57] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[20:14:02] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[20:14:08] <Wooble> the `sys` module itself is so built-in it doesn't even show as an import with python -v... it's just already there.
[20:14:21] <HiccupJul> is there any difference between using "from" and reassigning afterwards like "foo = sys.stdout"?
[20:14:42] <SnoopJ> HiccupJul, the end result is exactly equivalent
[20:14:47] <HiccupJul> ah okay
[20:14:49] <HiccupJul> that clears things up
[20:14:57] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[20:15:02] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[20:15:10] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:15:10] <SnoopJ> using `from` just makes it happen inside the runtime so you skip a statement, basically
[20:16:09] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[20:16:31] <launchd> does anyone have some pointers on the best way to store a runtime variable in a fastapi project with multiple files?
[20:17:01] <launchd> i'm trying to store a database connection object that can be accessed across all the api routers located in different files on my project
[20:17:02] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[20:17:40] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:18:11] <han-solo> https://github.com/developmentseed/timvt/blob/master/timvt/db.py#L96 # something like that ?
[20:19:46] <launchd> oh app.state looks perfect. thanks!
[20:20:04] <han-solo> i'm assuming you didn't wanna create a dependency on each route ?
[20:20:44] *** Joins: djangoaddict (~djangoadd@2601:8c:c100:6820:493e:c6f2:75b9:764d)
[20:21:02] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[20:21:42] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[20:22:41] *** Quits: obiwahn (~heini@user/obiwahn) (Quit: obiwahn)
[20:22:43] *** Joins: mimmy (~mimmy@72.142.88.18)
[20:23:03] *** Joins: anonymeowo (~anonymeow@45.90.57.51)
[20:23:34] *** Joins: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de)
[20:23:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:23:59] <launchd> han-solo: yeah
[20:24:23] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 264 seconds)
[20:24:26] <han-solo>  👍
[20:25:41] <HiccupJul> if i want a script i made to be easily accessible as a module in other scripts on my PC, is the proper way to do that to create a python package then install it?
[20:25:46] <HiccupJul> or is there an easier way?
[20:26:05] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[20:26:29] <bjs> HiccupJul: "proper" and "easier" are not the same thing
[20:26:32] <SnoopJ> HiccupJul, making an installable package is probably the best idea
[20:26:37] *** Quits: greedom (~greedom@x59cc9953.dyn.telefonica.de) (Remote host closed the connection)
[20:27:03] <HiccupJul> well i guess i was asking if there was *another* proper way to do it, that was easier than making a package
[20:27:05] <mdk> HiccupJul: this is a good way, note that you can `pip install path/to/the/project`. It's not that hard neither (drop a pyproject.toml and a setup.cfg and you're done)
[20:27:10] <bjs> yes it's the proper way, there may be "easier" ways but they're less proper (because they're less reliable/not portable/not supported by other tools)
[20:27:29] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[20:27:35] <HiccupJul> but i see, i'll look into making a package then
[20:27:37] <SnoopJ> the import system gives you a bunch of options (i.e. you can import from a .py, a .zip, etc.) but the routes here that aren't making an installable package come with a lot of sharp edges
[20:27:39] *** Joins: greedom (~greedom@x59cc9953.dyn.telefonica.de)
[20:27:44] <HiccupJul> ignore "but" in my last message
[20:27:56] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:28:09] *** Quits: greedom (~greedom@x59cc9953.dyn.telefonica.de) (Client Quit)
[20:28:20] <HiccupJul> it'll be good practice for if/when i want to distribute scripts for use by other people, anyway
[20:30:42] *** Joins: greedom (~greedom@x59cc9953.dyn.telefonica.de)
[20:31:13] <SnoopJ> it's a good skill to have on deck for a lot of reasons :)
[20:31:24] *** Joins: brabrax (~brabrax@user/brabrax)
[20:32:00] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[20:32:16] <Wooble> HiccupJul: bit.ly/pypackages has some good advice (although some may consider it dated)
[20:33:13] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[20:33:23] <HiccupJul> would i need to use pip install each time i modified my script?
[20:33:51] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 245 seconds)
[20:34:03] <HiccupJul> i mean, currently i just have a "programming" directory and i symlink the python files into a folder in my path, in order to run them
[20:34:20] <Wooble> HiccupJul: you can do pip install -e to get the changes as they occur
[20:34:44] *** Joins: Sheilong (uid293653@ilkley.irccloud.com)
[20:34:45] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[20:35:05] *** Joins: metaace (~metaace@user/metaace)
[20:35:10] <HiccupJul> ah, that looks like that uses symlinks itself. thanks.
[20:35:42] <Wooble> if you do complex stuff like adding new entry points, you may need to reinstall.
[20:37:10] *** Joins: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net)
[20:37:29] *** Joins: Izem (~user@bras-base-london1483w-grc-27-70-51-121-200.dsl.bell.ca)
[20:37:47] <Izem> how do you import a module so the function is available without the module name?
[20:38:01] <han-solo> from mod import function
[20:38:26] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[20:39:11] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:40:14] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:40:19] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[20:40:39] <Izem> thx
[20:40:41] <SnoopJ> HiccupJul, note that if you want to use the "editable" install option, that is currently *not* supported by pyproject.toml, which is a shame, but worth knowing about if you decide to make a package
[20:40:43] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:41:11] <grym> SnoopJ: apparently quite soon though! https://github.com/pypa/pip/pull/8212
[20:41:48] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[20:42:02] <grym> i _think_ that's the right pr; it came up here earlier this week
[20:42:22] <SnoopJ> neat
[20:43:24] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:43:34] <HiccupJul> i guess i can just follow this https://packaging.python.org/tutorials/packaging-projects/
[20:44:01] <HiccupJul> although i'm not sure if my project requires any particular pip/setuptools version, since it doesn't use compiled code
[20:44:05] <SnoopJ> yup
[20:44:10] *** Joins: lacrymology (~lacrymolo@37.223.216.138)
[20:44:15] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[20:44:44] <SnoopJ> HiccupJul, you might be able to get away with just setup.cfg (or pyproject.toml if you're not attached to editable installs)
[20:45:08] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Read error: Connection reset by peer)
[20:45:34] <HiccupJul> yeah i might just start with setup.cfg for now, but anyway i'll read those docs on packacging.python.org
[20:46:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:47:18] *** Joins: nortoh (~nortoh@user/nortoh)
[20:47:23] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[20:50:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:51:00] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:52:54] *** Quits: ethrl (~doforlove@user/doforlove33) (Quit: WeeChat 3.3)
[20:54:23] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:54:28] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:55:14] *** Joins: magla (~gelignite@55d446ec.access.ecotel.net)
[20:57:01] *** Joins: pycurious (~Adium@user/pycurious)
[20:58:24] *** Parts: Izem (~user@bras-base-london1483w-grc-27-70-51-121-200.dsl.bell.ca) (ERC (IRC client for Emacs 27.2))
[20:59:59] *** Quits: raxor2k (~raxor2k@78.158.246.35) ()
[21:00:06] *** Quits: arinov (~arinov@178.240.135.64) (Ping timeout: 260 seconds)
[21:00:50] *** Quits: Siecje (~Siecje@216.154.14.35) (Remote host closed the connection)
[21:01:06] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[21:01:24] *** Joins: greentree (~greentree@pool-108-6-121-44.nycmny.fios.verizon.net)
[21:01:30] <greentree> does requests library support fetching local files?
[21:01:49] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[21:01:51] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[21:01:59] <phy1729> I suppose you could mount an adaptor on file:// and make it so
[21:02:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:03:10] <phy1729> https://docs.python-requests.org/en/latest/user/advanced/#transport-adapters
[21:03:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[21:03:37] <bjs> greentree: that question is a bit curious,  it's hard to answer because requests doesn't talk about "fetching files" really, it's just doing HTTP requests (hence the name).
[21:04:19] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:04:41] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Quit: Peace homie)
[21:05:32] *** Joins: fikran (~fikran@user/fikran)
[21:06:21] *** Joins: mimmy (~mimmy@72.142.88.18)
[21:07:35] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[21:08:05] *** Joins: mrwick (~mrwick@user/mrwick)
[21:09:18] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:10:36] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:11:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:12:09] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:12:36] *** Joins: subopt (~subopt@2603-8081-2302-459a-a076-3cd4-87ec-15d6.res6.spectrum.com)
[21:12:55] *** Joins: famubu (~famubu@user/famubu)
[21:14:56] <famubu> Is there a `re.Match()` method to build an `re.Match` object (part of re module in stdlib)? Just realized that match objects are really something called `_sre.SRE_Match` objects. I was looking to build some match objects to be used in some tests.
[21:15:01] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[21:15:16] <akk> greentree: No, it doesn't. I've had to write wrappers or alternate handlers after checking for url.startswith('file:') or similar.
[21:15:17] <famubu> Was a bit intimidated by the underscore in `_sre`.
[21:15:24] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[21:15:36] *** Joins: nem (sid113421@user/nem)
[21:16:03] *** Quits: anonymeowo (~anonymeow@45.90.57.51) (Quit: Konversation terminated!)
[21:17:15] <Yhg1s> famubu: _sre.SRE_Match is not something you should access directly, no, and it may not be accessible by that name on all Python versions. It's an implementation detail. re.Match is the thing to use, if you must use it (usually just for typechecks or something).
[21:17:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:19:29] <SnoopJ> context: SRE is "Secret Labs' Regular Expression Engine", the stuff in _sre is all the machinery (written in C) that makes the engine go
[21:20:48] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 265 seconds)
[21:20:50] <SnoopJ> ...huh, never noticed before that Pattern and Match are defined using type(): https://github.com/python/cpython/blob/main/Lib/re.py#L258
[21:20:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:21:19] <han-solo> greentree: https://bpa.st/repaste/WPTA # pretty sure didn't handle a lot of things, but anyway
[21:21:21] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[21:21:25] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:21:39] <Yhg1s> SnoopJ: well, before 3.7, they weren't defined :)
[21:21:40] <han-solo> seemed to work ftm :)
[21:22:00] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[21:22:13] <SnoopJ> Yhg1s, aha, that may explain it, much of my pokin' happened on the 3.6 codebase :)
[21:22:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:24:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:50d1:715b:3051:a68)
[21:24:57] *** Quits: benjwadams (~benjwadam@d-67-231-77-225.ct.cpe.atlanticbb.net) (Quit: Client closed)
[21:26:29] *** Quits: ham5urg (~ham5urg@p200300d1673874008ebd4eff3ffebfca.dip0.t-ipconnect.de) (Quit: Leaving)
[21:28:48] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[21:29:07] <stewie925> hello... just checking why its super quiet on this channel...
[21:30:02] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[21:30:06] <Yhg1s> stewie925: it's not been particularly quiet.
[21:30:53] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[21:30:54] *** Quits: greedom (~greedom@x59cc9953.dyn.telefonica.de) ()
[21:31:03] <stewie925> thank you Yhg1s - its been like that since last night US time.  I was afraid I was inadvertently blocked hehe
[21:31:20] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[21:31:28] <Yhg1s> stewie925: you only just connected.
[21:31:53] <grym> scrollback is lost in the aether unless you lurk
[21:31:58] <Yhg1s> looks like you disconnected 12 hours ago.
[21:32:03] <bjs> depending on your client ofc :)
[21:32:07] * stewie925 agrees
[21:32:13] <grym> i just never disconnect; problem solved :)
[21:32:39] <han-solo> grym lurks in the Aether
[21:32:48] <grym> i don't, but this VPS sure does
[21:32:51] <stewie925> I stay with the online KiwiIRC client so es, I get disconnected quite a lot after inactivity :)
[21:33:09] <grym> stewie925: think of all the things you've missed out on!
[21:33:26] *** Quits: infernix (nix@spirit.infernix.net) (Quit: ZNC - http://znc.sourceforge.net)
[21:34:03] <stewie925> grym: hehe  :) I feel at home with this group
[21:35:12] <stewie925> just feeling depressed with so many python jobs but no one comes knocking
[21:35:24] <grym> that's not normally how job searches go
[21:36:06] <stewie925> I'd call my intermediate, but the job market mostly call for expert in Python
[21:36:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[21:36:50] *** Joins: ignaloidas (~ignaloida@2001:bc8:182c:1c02::1)
[21:36:52] <famubu> Yhg1s: Is there a way to manually construct a re.Match object though? Without depending on implementation details?
[21:37:42] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[21:38:17] <Yhg1s> famubu: you will always be depending on implementation details. I would recommend performing a re.search that produces the re.Match you are expecting.
[21:38:28] <Yhg1s> or, you know, not craft re.Match objects at all.
[21:38:36] <SnoopJ> famubu, what are you trying to test
[21:38:46] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:39:31] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:39:46] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:40:05] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[21:41:21] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:42:09] *** Joins: greedom (~greedom@x59cc9953.dyn.telefonica.de)
[21:44:31] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 3.3)
[21:44:58] *** Quits: stockholm (~Andreas@p200300d2c709b90045ccc9d134f14e03.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[21:45:54] <famubu> SnoopJ: A function accepting a list of re.Pattern and string to return match object. Was trying to test with pytest
[21:46:17] <famubu> Yhg1s: So maybe it's better to another way, I guess..
[21:46:34] <famubu> Without relying on re.Match objects.
[21:46:47] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[21:47:16] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:47:59] <SnoopJ> if you want to test the contents of the returned object, just do that
[21:49:09] <famubu> I needed to feed in some re.Match objects as input to the test. That's when I realized there was no such thing as a re.Match() constructor.. :D
[21:50:56] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 245 seconds)
[21:51:23] <SnoopJ> my questions are aimed at trying to understand why it must be a Match object instead of counting on `re` to produce one for you, and then testing properties of that returned object
[21:51:25] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 256 seconds)
[21:51:42] <SnoopJ> i.e. "does the Match object produced contain what we expect?"
[21:53:11] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:1441:e3a1:9c75:8917)
[21:53:18] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 260 seconds)
[21:54:15] *** Joins: Bakunin (~Lindis@user/lindis)
[21:55:06] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[21:55:29] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[21:56:37] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[21:56:45] *** Quits: famubu (~famubu@user/famubu) (Quit: Lost terminal)
[22:01:03] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[22:02:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:03:01] *** Quits: gitly (~gitly@148.252.128.93) (Ping timeout: 245 seconds)
[22:03:25] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[22:03:29] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[22:05:12] *** Joins: koo5_ (~quassel@51.140.155.227)
[22:06:13] *** Joins: gitly (~gitly@148.252.128.93)
[22:11:15] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[22:11:52] <dulanic> pandas read_html should be a dataframe no? For some reason it's loading as a list? Yet I can print it and it looks like a df.
[22:12:12] *** Joins: eson123 (~eson123@118.69.128.37)
[22:12:42] <grym> dulanic: a list of dataframes
[22:12:56] <grym> dulanic: as the docs say, "Read HTML tables into a list of DataFrame objects."
[22:13:09] <dulanic> ahhhh thank you! I got it, so df[0] gets me the first one
[22:13:10] <grym> you probably have a one element list
[22:13:12] <eson123> i am trying to setup a very simple UDP server just to recv some simple messages with this https://pastebin.com/8uKMucN5, but when i tried to run "ncat -u localhost -p 8080" on Windows powershell and try to send messages, it doesn't work, anyone knows why ?
[22:13:35] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[22:13:39] <grym> dulanic: try `dfs = pd.read_html(...) ; df = df[0]`
[22:13:58] <grym> dulanic: try `dfs = pd.read_html(...) ; df = dfs[0]`
[22:14:01] <grym> derp
[22:14:19] <dulanic> yeah that's what Im doing now, thanks. I was thrown off for some reason, probably since the print worked because it only has 1 table
[22:14:19] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 250 seconds)
[22:15:18] *** Joins: s0k1t (~user@68.235.43.76)
[22:15:30] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:16:27] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[22:16:57] *** Quits: menace (~someone@user/menace) (Read error: Connection reset by peer)
[22:17:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:18:39] *** Joins: nomic (~nomic@185.192.69.224)
[22:19:36] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[22:20:11] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 264 seconds)
[22:20:19] *** Quits: gitly (~gitly@148.252.128.93) (Ping timeout: 256 seconds)
[22:20:31] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[22:21:29] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[22:22:15] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[22:22:33] *** Joins: gitly (~gitly@148.252.128.93)
[22:23:51] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[22:24:15] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[22:25:08] *** Joins: causa_sui (~causasui@192.241.228.169)
[22:27:59] *** Quits: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[22:28:15] *** Quits: cosimone (~user@93-47-231-139.ip115.fastwebnet.it) (Ping timeout: 256 seconds)
[22:28:46] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 268 seconds)
[22:29:26] *** Joins: node1 (~node1@user/node1)
[22:29:45] *** Joins: p-i- (~Ohmu@223.206.149.15)
[22:30:07] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[22:31:24] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[22:32:29] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:32:36] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[22:33:05] *** Quits: gitly (~gitly@148.252.128.93) (Ping timeout: 268 seconds)
[22:33:14] *** Joins: bindu (~bindu@user/bindu)
[22:33:27] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:34:03] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[22:35:06] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[22:35:24] *** Joins: bloody (~bloody@user/bloody)
[22:38:34] *** Quits: eson123 (~eson123@118.69.128.37) (Ping timeout: 260 seconds)
[22:41:10] *** Joins: emf (~emf@2620:10d:c090:400::5:6b1)
[22:42:18] *** Joins: gitly (~gitly@148.252.128.93)
[22:43:42] *** Joins: schumaml (~schumaml@p200300e2ef1bef0053c1821a43d17d29.dip0.t-ipconnect.de)
[22:45:56] *** Joins: Bakunin (~Lindis@user/lindis)
[22:47:56] *** Joins: naranja (~orange@user/orangeboxcutter)
[22:48:43] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Quit: Leaving)
[22:48:45] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[22:49:22] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[22:49:51] *** Quits: papa (~papa@user/papa) (Quit: connection reset again by peer.)
[22:50:55] *** Quits: gitly (~gitly@148.252.128.93) (Ping timeout: 256 seconds)
[22:51:36] *** Quits: glider (~glider@user/glider) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[22:52:13] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[22:53:11] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[22:54:09] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[22:57:24] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[22:58:10] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 260 seconds)
[22:58:24] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[22:58:51] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[22:59:04] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[23:00:03] *** Joins: mimmy (~mimmy@72.142.88.18)
[23:02:01] *** Joins: glider (~glider@user/glider)
[23:02:11] *** Quits: pro_z (~pro_z@37.214.56.218) (Ping timeout: 264 seconds)
[23:02:24] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:02:59] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:03:59] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:05:02] *** Quits: greedom (~greedom@x59cc9953.dyn.telefonica.de) (Remote host closed the connection)
[23:05:10] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 268 seconds)
[23:06:22] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[23:06:22] *** Joins: StickyIcky (~StickyIck@187.211.13.67)
[23:06:57] *** Quits: s98259 (~s98259@user/helenah) (Quit: WeeChat 3.3)
[23:07:30] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[23:08:22] *** Joins: binary01 (~binary01@192.110.171.216)
[23:08:53] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:09:16] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 245 seconds)
[23:09:53] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[23:10:14] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:10:45] *** Quits: Jefren1 (~Jefren@206.253.157.211) (Ping timeout: 256 seconds)
[23:11:00] *** Quits: dav1d (~dav1d@user/dav1d) (Quit: bye)
[23:12:18] *** Joins: dav1d (~dav1d@user/dav1d)
[23:12:24] *** Joins: Jefren1 (~Jefren@70.35.66.187)
[23:12:59] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[23:13:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:13:13] *** Quits: djangoaddict (~djangoadd@2601:8c:c100:6820:493e:c6f2:75b9:764d) (Quit: Client closed)
[23:13:24] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[23:14:23] <hailhydra> vscode has the wrong pathmappings for a file I need. I created a virtualenv but I noticed neither the location of the venv is in my $PATH and $PYTHONPATH is empty. What can I do to fix this?
[23:14:53] *** Joins: fikran (~fikran@user/fikran)
[23:14:55] *** Joins: nicholaus04 (~nicholaus@172.58.17.115)
[23:16:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:17:34] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:17:45] <Pi-sistance> oh crap, python tutor shows that one of my keyword arguments default values is 0 , it should be 10^^-12
[23:17:47] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[23:18:05] *** Quits: nicholaus04 (~nicholaus@172.58.17.115) (Client Quit)
[23:18:17] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:18:45] <Pi-sistance> cant see anythign wrong, I dont think i should wrap it up all in brackets, I usually do, python doesnt seem to care if I don't do that though'
[23:18:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:20:17] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:20:18] *** Joins: WantToHelp (~WantToHel@user/wanttohelp)
[23:20:19] <Wooble> hailhydra: pretty sure you want to set the Venv folders or Venv path variables in settings (although it's been years since I used vs code for python, largely because this annoyed me.)
[23:20:51] <Wooble> Pi-sistance: pretend we can't hack into your computer and see your screen, and bpa.st your code.
[23:21:23] <Wooble> (or if you can manage to get a shortened python tutor link I guess do that :) )
[23:21:36] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[23:22:38] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:23:17] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:55ba:3218:beb2:ccb4)
[23:23:19] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:24:23] *** Quits: jess (~jess@libera/staff/jess) (Quit: I try to be an optimist / but my glass is always bone dry)
[23:25:32] <Wooble> Pi-sistance: or, nevermind. pythontutor is just rounding for display, which is somewhat annoying of it but then your value *is* pretty close to 0. :)
[23:25:40] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:26:19] *** bambams is now known as bambot
[23:26:34] *** bambot is now known as bambams
[23:26:36] *** Joins: arinov (~arinov@213.194.126.155)
[23:26:47] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[23:27:30] *** Joins: djapo (~archangel@user/djapo)
[23:27:34] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:28:19] <Pi-sistance> oh, phew, well ty. its very very useful, so good. I should be able to solve problems by myself :))
[23:29:24] <Wooble> no idea what's going on there; you'd think it would use the repr or something. :/
[23:29:59] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:31:18] <Pi-sistance> z=10**(-12) I mean I dont need the whole RHS in brackets.
[23:31:34] <Pi-sistance> although ill check later (just in case)
[23:32:15] <Wooble> nah, the brackets aren't needed at all since that's unambiguous.
[23:32:30] <Wooble> you can also just write 1e-12
[23:32:55] *** Quits: Tas-sos (~Tas-sos@ppp079167211012.access.hol.gr) (Quit: Lost terminal)
[23:33:05] *** Joins: heldwin (~heldwin@user/asmodee)
[23:33:37] *** Quits: Madda (~Madda@216.51.198.146.dyn.plus.net) (Read error: Connection reset by peer)
[23:33:44] <Pi-sistance> ty, never knew
[23:34:03] *** Joins: Madda (~Madda@216.51.198.146.dyn.plus.net)
[23:34:13] <Wooble> the compiler will fold 10**-12 into that anyway :)
[23:35:21] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:35:42] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[23:35:55] *** Joins: binary01 (~binary01@192.110.171.216)
[23:35:59] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[23:36:36] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[23:36:39] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 250 seconds)
[23:39:40] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[23:40:44] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Gone.)
[23:42:07] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[23:42:27] <Pi-sistance> I just changed the code to include my problem input arguments, and the whole thing just skips the first 14 steps on python tutor wtf does that mean?
[23:42:51] <Pi-sistance> its exactly the same code that worked perfectly before, I just changed two positonal input arguments'
[23:43:48] *** Quits: StickyIcky (~StickyIck@187.211.13.67) (Quit: Leaving)
[23:44:11] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[23:44:14] *** Joins: zmt00 (~zmt00@user/zmt00)
[23:44:49] *** Quits: INeedAHandle (~INeedAHan@user/ineedahandle) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:46:26] *** Joins: ethrl (~morty@user/doforlove33)
[23:46:53] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:47:49] <jinsun> are you expecting answers? then probably should show code
[23:47:56] *** Joins: parv (~quass@user/parv)
[23:48:52] *** Joins: jkcoxson (~jkcoxson@67.199.177.214)
[23:49:00] *** Joins: gitly (~gitly@148.252.128.93)
[23:49:14] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[23:50:26] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[23:50:36] *** Joins: damonlynch (~ngaio@static-68-235-44-57.cust.tzulo.com)
[23:52:35] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 264 seconds)
[23:52:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[23:54:06] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:55:57] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[23:56:30] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[23:57:23] <Pi-sistance> seemed to just be a glitch with the website, so weird. I pasted the same cod again and it was fine.
[23:57:56] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[23:58:47] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:59:18] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
