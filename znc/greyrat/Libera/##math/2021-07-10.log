[00:02:17] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 252 seconds)
[00:04:50] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[00:05:05] *** Joins: cheater (~Username@user/cheater)
[00:06:48] *** Joins: Guest62 (~Guest62@187.83.249.216.dyn.smithville.net)
[00:07:56] *** Quits: gb73d (gb73d@host-92-10-215-96.as13285.net) ()
[00:08:44] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:10:00] <dextaa> for a structure A, the class of all structures elementary equivalent to A is always axiomatizable?
[00:10:04] <dextaa> by Th(A)
[00:12:04] <dextaa> so {A in Structures(signature t) : the class of structures elementary equilavent to A is FO-axiomatizable} is just {A in structures(t)}?
[00:12:08] *** Quits: female_student_4 (~female_st@2a01:388:243:150::1:4) (Quit: Client closed)
[00:14:35] *** Quits: Pollion (bombar@zamok.crans.org) (Quit: WeeChat 3.0)
[00:19:01] <Imk0tter> anyone interested in helping me invent a new type of number (hybrid triangle base numbers) ?
[00:19:36] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[00:20:26] <Imk0tter> hybrid triangle base numbers have two components: the primary triangle base component, and the sub base component (which can be hybrid triangle base numbers)
[00:20:55] *** Joins: Pollion (bombar@zamok.crans.org)
[00:22:12] <Z-module> weird little result I just read:  Call natural n "highly powerful" if the product of the exponents in its prime factorization is > that same product for all natural m < n.  Then: only finitely many cubefree highly powerful numbers exist (19 of them, in fact).
[00:22:38] *** Quits: johnjay (~pi@38.120.10.99) (Ping timeout: 252 seconds)
[00:22:44] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: WeeChat 3.2)
[00:22:58] *** Joins: johnjay (~pi@38.120.10.99)
[00:23:18] <riv> that isn't surprising?
[00:26:44] <rubiksdream> dextaa well yes, always axiomatizable, because you can just use the entire theory as the axioms
[00:27:39] <rubiksdream> dextaa but thats kind of redundant, normally people are interested in whether or not the theory of some structure is finitely axiomatizable
[00:28:09] <rubiksdream> Z-module, that is weird.. is the proof easy?
[00:28:37] <Imk0tter> IE: Hybrid Triangle [Base 4] and [Base 2] in [Base 1]
[00:31:03] <Z-module> rubiksdream: not so bad:   https://www.ams.org/journals/proc/1984-091-02/S0002-9939-1984-0740165-6/S0002-9939-1984-0740165-6.pdf
[00:32:19] <dextaa> rubiksdream: right, it's a contrived question i guess
[00:32:45] <Imk0tter> https://pastebin.com/6u5JP9JW
[00:33:05] *** Quits: Pollion (bombar@zamok.crans.org) (Ping timeout: 252 seconds)
[00:33:58] <Imk0tter> https://pastebin.com/gY5f6uXw : anyone want to help me figure out how to generate Hbyrid Triangle [Base 4] and [Base 2] numbers in [Base 2] ?
[00:34:04] <rubiksdream> cool Z-module
[00:34:51] <Imk0tter> #hybrid-triangle-base-numbers
[00:35:29] *** Quits: rubiksdream (~a@user/rubiksdream) (Remote host closed the connection)
[00:35:46] *** Joins: rubiksdream (~a@cm61-15-252-242.hkcable.com.hk)
[00:35:49] <Z-module> (also, how great to do math if you're first name is Mathukumalli )
[00:35:53] <Z-module> your*
[00:37:23] <Imk0tter> anyone?
[00:39:10] <Imk0tter> Hybrid Triangle Base Numbers [Base 4] and [Base 2] in [Base 1] is similar to [Base 10] in the context that each digit is a power of 10
[00:39:37] <Imk0tter> 10 can be written as 0:1|0:0
[00:39:45] <Imk0tter> 100 as 0:1|0:0|0:0
[00:42:10] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[00:42:57] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: ZNC - https://znc.in)
[00:46:36] <Imk0tter> the [Base 1] component might be Hybrid Triangle Base Numbers [Base 1] and [Base 2] in [Hybrid Triangle Base Numbers [Base 1] and [Base 2] in [Hybrid Triangle Base Numbers [Base 1] and [Base 2] in... ]]
[00:46:44] *** Quits: HisShadow (~HisShadow@188.170.72.223) (Ping timeout: 272 seconds)
[00:47:50] <dextaa> so first order logic is undecidable
[00:48:01] <dextaa> but some subclasses of first order logic are decidable?
[00:48:18] <Imk0tter> maybe i should try generating numbers in Hybrid Triangle Base Numbers [Base 4] and [Base 2] in [Hybrid Triangle Base Numbers [Base 4] and [Base 2] in [Base 1]]
[00:48:44] *** Joins: female_student_4 (~female_st@2a01:388:243:150::1:4)
[00:49:54] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[00:51:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:51:48] *** Joins: chomwitt (~Pitsikoko@ppp-94-67-202-202.home.otenet.gr)
[00:52:04] <Imk0tter> i'm trying to figure out how to generate Hybrid Triangle Base Numbers [Base 4] and [Base 2] in [Base 2]
[00:52:18] *** Joins: HisShadow (~HisShadow@188.170.78.247)
[00:54:09] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[00:54:58] *** Quits: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:55:05] *** Joins: Crassus (~Crassus@user/crassus)
[00:55:38] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[00:57:10] *** Quits: noobly6 (~noobly@50.38.126.25) (Ping timeout: 246 seconds)
[00:57:10] *** Quits: somiaj (~somiaj@fvwm/admin) (Remote host closed the connection)
[00:58:14] *** Joins: tempate99 (~tempate99@90.167.167.97)
[01:00:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:02:38] *** Quits: turlando (~turlando@user/turlando) (Read error: Connection reset by peer)
[01:04:16] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[01:04:16] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[01:04:16] *** Joins: turlando (~turlando@user/turlando)
[01:05:20] *** Joins: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de)
[01:06:22] *** Quits: patchie (~sdf@63.79-160-77.customer.lyse.net) (Ping timeout: 272 seconds)
[01:06:53] *** Joins: AskerX (~Guest98@209.58.147.245)
[01:08:58] *** Quits: oxide (~lambda@user/oxide) (Quit: oxide)
[01:14:11] *** Joins: noobly (~noobly@50.38.126.25)
[01:15:06] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 240 seconds)
[01:15:56] *** Quits: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[01:17:17] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[01:18:06] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:19:28] *** Quits: AskerX (~Guest98@209.58.147.245) (Quit: Client closed)
[01:20:08] <riv> interesting
[01:20:10] <riv> how is that proven?
[01:20:40] <riv> https://en.wikipedia.org/wiki/Monadic_predicate_calculus this is decidable
[01:20:53] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 255 seconds)
[01:21:17] <riv> https://en.wikipedia.org/wiki/Bernays%E2%80%93Sch%C3%B6nfinkel_class
[01:21:51] <dextaa> i have a couple of examples in my script
[01:22:20] <dextaa> satisfiability is decidable for formulas containing only monadic relation symbols
[01:22:28] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 246 seconds)
[01:23:05] <dextaa> proof: show using EF games
[01:24:01] <dextaa> that any model has max m*2q (m is quantifier rank, q is number of rel symbols)
[01:24:06] <dextaa> elements
[01:24:20] <dextaa> *it's an exercise not an example
[01:25:04] <dextaa> oh right that's https://en.wikipedia.org/wiki/Monadic_predicate_calculus
[01:25:46] <rubiksdream> i think the proof is simple if you reduce it to the halting problkem
[01:25:47] <rubiksdream> *problem
[01:26:16] <rubiksdream> as long as you have some predicate that can accept 'input' and 'turing machine' you can ask 'does turing machine halt on input' and exists input, 'does turing machine halt on input'
[01:26:28] <rubiksdream> and thats is not computable by the halting problem
[01:26:59] *** Parts: expix (~1@amontpellier-652-1-215-41.w90-57.abo.wanadoo.fr) ()
[01:27:52] <dextaa> but that's for FO as a whole?
[01:28:03] <riv> FO plus a 2-ary predicate symbol is undecidable
[01:28:10] <riv> you need the 2-ary to build lists, I think
[01:28:45] <rubiksdream> whoops, i mean you can define a sentence for each turingmachine  'S(turingmachine) = forall input. 'Halt(turingmachine,input)'
[01:30:06] <dextaa> Also satisfiability for existential formulas (over artbirary signatures) is decidable apparently
[01:30:48] <rubiksdream> wait what
[01:30:52] <rubiksdream> that seems unbelievable
[01:31:55] <dextaa> I have it as an exercise
[01:32:01] <dextaa> but i havent done it yet :)
[01:32:59] *** Joins: horseface_ (~horseface@202-63-77-102.ip4.superloop.com)
[01:35:44] *** Quits: horseface (~horseface@82.221.128.46) (Ping timeout: 255 seconds)
[01:36:35] <rubiksdream> well i guess satisfiability is conceivable actually
[01:36:47] <rubiksdream> you can't formulate things that are obviously undecidable with that
[01:37:05] *** Quits: Imk0tter (~Imk0tter@172.58.231.3) (Ping timeout: 255 seconds)
[01:38:46] *** Joins: Imk0tter (~Imk0tter@172.58.231.3)
[01:39:27] <Imk0tter> *p = Hybrid Triangle Base [Base 1] and [Base 2] in [p]
[01:40:03] <dextaa> there are a whole bunch of them https://logic.rwth-aachen.de/~graedel/kalmar.pdf . Pretty cool
[01:40:52] <Imk0tter> Hybrid Triangle Base [Base 1] and [Base 2] in [Hybrid Triangle Base [Base 1] and [Base 2] in [Hybrid Triangle Base [Base 1] and [Base 2] in [...]]]]
[01:41:55] <int-e> Imk0tter: I don't think anyone can help you. Bringing it up again and again will not change that. Please let it rest.
[01:46:58] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Quit: Leaving)
[01:47:44] *** Quits: Imk0tter (~Imk0tter@172.58.231.3) (Ping timeout: 258 seconds)
[01:49:52] *** Parts: jason1235 (fltk@thunix.net) ()
[01:50:58] *** Quits: ^[ (~user@user//x-8473491) (Ping timeout: 240 seconds)
[01:52:26] *** Quits: horseface_ (~horseface@202-63-77-102.ip4.superloop.com) (Quit: SPACE IS DONUTS!)
[01:52:40] *** Joins: ^[ (~user@user//x-8473491)
[01:52:58] *** Quits: rubiksdream (~a@cm61-15-252-242.hkcable.com.hk) (Ping timeout: 240 seconds)
[01:54:30] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:55:08] *** Quits: KevinX (~KevinX@94.140.11.95) (Ping timeout: 272 seconds)
[01:56:45] *** Joins: specing_ (~specing@user/specing)
[01:57:10] *** Joins: Imk0tter (~Imk0tter@172.58.231.3)
[01:57:32] *** Quits: HisShadow (~HisShadow@188.170.78.247) (Read error: Connection reset by peer)
[01:57:51] *** Joins: KevinX (~KevinX@94.140.11.98)
[01:59:08] *** Quits: ^[ (~user@user//x-8473491) (Ping timeout: 255 seconds)
[01:59:35] *** Quits: specing (~specing@user/specing) (Ping timeout: 255 seconds)
[01:59:35] *** specing_ is now known as specing
[02:01:54] *** Joins: HisShadow (~HisShadow@188.170.82.90)
[02:02:05] *** Quits: hammond_ (proscan@user/hammond2) (Ping timeout: 252 seconds)
[02:02:05] *** Quits: noteness (noteness@user/noteness) (Ping timeout: 252 seconds)
[02:04:39] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[02:06:20] *** Quits: Imk0tter (~Imk0tter@172.58.231.3) (Ping timeout: 255 seconds)
[02:06:57] *** Joins: Imk0tter (~Imk0tter@172.58.231.3)
[02:06:59] *** Quits: slidercrank (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[02:10:11] *** Joins: coeus (~coeus@250.sub-174-205-176.myvzw.com)
[02:10:53] <coeus> using computer to do all my force-vectoring analysis and having a lot of fun
[02:13:13] *** Quits: female_student_4 (~female_st@2a01:388:243:150::1:4) (Quit: Client closed)
[02:18:00] *** Joins: slidercrank (~slidercra@user/slidercrank)
[02:18:50] *** Joins: noteness (noteness@user/noteness)
[02:18:58] *** Joins: hammond_ (proscan@gateway02.insomnia247.nl)
[02:21:13] *** Joins: ^[ (~user@user//x-8473491)
[02:21:31] *** Quits: noobly (~noobly@50.38.126.25) (Ping timeout: 246 seconds)
[02:22:31] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[02:26:22] *** Joins: Julian (~tos9@python/site-packages/Julian)
[02:29:51] *** Joins: hyper (uid493485@id-493485.charlton.irccloud.com)
[02:31:11] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[02:31:42] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[02:32:06] *** Quits: Guest62 (~Guest62@187.83.249.216.dyn.smithville.net) (Quit: Client closed)
[02:32:28] *** Joins: Guest12 (~Guest12@187.83.249.216.dyn.smithville.net)
[02:35:18] *** Joins: horseface (~horseface@82.221.128.46)
[02:35:47] *** Quits: Guest12 (~Guest12@187.83.249.216.dyn.smithville.net) (Client Quit)
[02:36:27] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[02:40:26] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 268 seconds)
[02:43:25] *** Joins: HarveyPwca (~HarveyPwc@2601:246:c180:a570:29df:3b00:ad0e:3a06)
[02:44:24] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Read error: Connection reset by peer)
[02:44:30] *** Joins: Julian (~tos9@python/site-packages/Julian)
[02:44:55] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[02:47:01] *** Joins: Mat1010 (~Mat1010@168.181.209.58)
[02:51:19] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:c53e:e94d:8e10:acd1) (Quit: WeeChat 3.2)
[02:53:30] *** Joins: son0p (~ff@181.136.122.143)
[02:56:28] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[03:04:04] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Quit: Leaving)
[03:07:32] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[03:11:17] <biberao> hi
[03:14:16] *** Joins: Neologik (~Neologik@cpc85670-dund15-2-0-cust7.16-4.cable.virginm.net)
[03:14:36] *** Quits: Neologik (~Neologik@cpc85670-dund15-2-0-cust7.16-4.cable.virginm.net) (Client Quit)
[03:18:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:25:02] *** Joins: Thoams (~Thoams@88.97.45.247)
[03:25:04] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[03:25:32] <int-e> riv: B2 D2 R2 D2 F2 R2 F2 D2 R2 B2 U2 F2 is cursed but shorter than what GAP gave you
[03:25:57] *** Quits: tolarz (bfa39a78db@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 2.3)
[03:26:32] <int-e> riv: and there are no shorter solutions than that, so the whole configuration is pretty nasty
[03:28:19] <Fangs> int-e: I thought that was dunscrotus
[03:29:06] *** Quits: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net) (Remote host closed the connection)
[03:32:31] <int-e> riv: And the group diameter of that halfturn subgroup is 15.
[03:34:13] *** Joins: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[03:35:17] *** Quits: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de) (Read error: Connection reset by peer)
[03:35:30] *** Quits: Mat1010 (~Mat1010@168.181.209.58) (Quit: Client closed)
[03:36:57] *** Quits: red_owl (~red_owl@p5b24307d.dip0.t-ipconnect.de) ()
[03:37:20] <int-e> riv: statistics: https://paste.debian.net/1203947/ (I did nothing particularly clever; this group is small enough for direct brute force)
[03:39:41] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[03:40:18] <int-e> Of course OEIS has it too... https://oeis.org/A080627
[03:40:53] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[03:43:12] <Z-module> OEIS is a fabulous resource
[03:44:14] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[03:44:49] *** Joins: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net)
[03:44:57] <alphamule> You need to explain what 'triangle' base means.  Like, what it is useful for, why you needed them, etc.
[03:45:29] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[03:45:37] <Panther> I base my triangles on them.
[03:46:10] <alphamule> Triangle numbers:  1,3,6,...
[03:46:11] <alphamule> :D
[03:47:07] <Panther> There is some combinatorial issue connected with those, but I forget what it is.
[03:47:27] <alphamule> Seriously though, it reminds me of some of the older ways they did 3D math
[03:47:42] <alphamule> Designed for one specific application
[03:47:53] <alphamule> Then adapted because yes, that's how tools work
[03:48:23] <Panther> t3wlz
[03:49:05] <alphamule> There used to be a method to estimate a product using cosine and sine, but they replaced with far better ones by the time microcomputers were popular.
[03:49:28] <alphamule> Log rule, basically
[03:50:06] *** Quits: cul8r (~cul8r@2600:1702:2160:13e0::44) (Quit: abducted by aliens)
[03:51:36] *** Quits: trbp (~trbp@user/trbp) ()
[03:53:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:56:32] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:00:19] *** Joins: frelleck (~frelleck@user/frelleck)
[04:01:55] *** Joins: Guest29 (~Guest29@209-195-74-216.cpe.distributel.net)
[04:03:20] *** Quits: Thoams (~Thoams@88.97.45.247) (Ping timeout: 255 seconds)
[04:05:46] *** Joins: Fohsap (~Muimi@119.112.254.166)
[04:08:15] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[04:18:38] *** Joins: ferdna (~ferdna@user/ferdna)
[04:21:45] *** Joins: ra4king (~ra4king@roiatalla.com)
[04:23:33] <Guest29> how can i show that kernel is contained in H? http://mathb.in/59972
[04:26:31] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[04:26:51] *** Joins: CombatVet (~c4@user/combatvet)
[04:32:32] <int-e> Guest29: consider g = e in "g'(gH) = H for all g in G"
[04:35:44] *** Quits: coeus (~coeus@250.sub-174-205-176.myvzw.com) (Ping timeout: 255 seconds)
[04:36:13] <Guest29> if g = e, then g' can be anything in H
[04:36:30] <Guest29> but what if g != e?
[04:37:15] <int-e> Guest29: you don't need to worry about that
[04:37:49] <int-e> Guest29: if g' is in the kernel then g' H = H, so g' in H, and that's what you wanted to show
[04:38:23] <int-e> the other possibilities for g can only make the kernel smaller
[04:38:58] <Guest29> oh i see
[04:39:42] <Guest29> do you think the rest of the proof is correct im not that familiar with group actions
[04:41:15] <int-e> seems fine to me
[04:41:23] <cherim___> Arguably the fact "the map ... is a permutation" stated as obvious is of about the same overall complexity as the original problem
[04:41:59] <cherim___> But with these standard constructions which are so familiar it doesn't catch the eye
[04:42:13] *** Quits: tempate99 (~tempate99@90.167.167.97) (Ping timeout: 246 seconds)
[04:43:46] <Z-module> note that "G/H" here is a somewhat ill-advised notation: it's not a group in general. This set being acted on is just the set of all left cosets of H.  (and even if H isn't normal, the claim is true)
[04:45:34] <Guest29> oh right
[04:45:37] <Guest29> thanks
[04:46:32] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:5507:d01e:412a:ed6a)
[04:52:29] *** Quits: horseface (~horseface@82.221.128.46) (Quit: SPACE IS DONUTS!)
[05:00:20] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:03:25] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[05:09:53] *** Joins: somiaj (~somiaj@fvwm/admin)
[05:10:01] *** Joins: begui (~begui@2600:1700:1950:5fa0:2297:8e3e:cfa1:6c1d)
[05:14:02] *** Quits: tempate (~tempate@user/tempate) (Ping timeout: 252 seconds)
[05:15:33] *** Joins: phillbush (~phillbush@user/phillbush)
[05:17:15] *** Joins: tempate (~tempate@90.173.107.9)
[05:17:16] *** Quits: tempate (~tempate@90.173.107.9) (Changing host)
[05:17:16] *** Joins: tempate (~tempate@user/tempate)
[05:17:44] <Guest594> what are some examples of Hard maths problems?
[05:19:23] *** Joins: Arcorann (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net)
[05:19:36] <rex> The millenium problems?
[05:20:09] <Guest594> rex: can you tell me more about that?
[05:20:32] <Guest594> (never heard of it)
[05:20:44] *** Joins: hmmmas (~fidnc@183.217.200.144)
[05:21:09] *** Joins: brownorange (~brownoran@user/brownorange)
[05:21:40] <brownorange> I think I've figured out why basic arithmetic can't be demonstrated to be complete
[05:23:00] <brownorange> briefly speaking, the fault lay in the oversaturation of possible proofs for a statement
[05:24:49] <brownorange> statements of the form A+B=C can have very many proofs.
[05:25:53] <brownorange> this matters because the closed forms of those proofs would also need a proof
[05:26:01] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[05:27:38] *** Quits: phillbush (~phillbush@user/phillbush) (Remote host closed the connection)
[05:27:39] <brownorange> and i think proving those closed forms from axioms, because increasingly "unrealistic" when starting from the successor function
[05:28:34] <brownorange> becomes*
[05:30:42] <brownorange> i have no proof of this but i think it may be true
[05:31:19] *** Quits: Arcorann (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net) (Ping timeout: 246 seconds)
[05:32:02] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Quit: Leaving)
[05:32:17] <rex> Guest594: well you could look them up on wikipedia, but those are considered the most important unsolved math problems
[05:32:20] <rex> I think one got solved
[05:32:26] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 255 seconds)
[05:32:54] <brownorange> ..unlike propositional calculus or predicate calculus which have completeness theorems, i think arithmetic can't be demonstrated as complete because paradoxically it has too many ways to arrive at a correct solution.
[05:33:41] <Imk0tter> https://math.stackexchange.com/questions/4194664/hybrid-discrete-triangular-number-base-numbers
[05:36:04] <brownorange> for prop-calc and pred-calc the symbols don't grow into a larger set. For arithmetic, the application of the successor function by definition introduces additional symbols ad infinitum
[05:38:19] *** Joins: horseface (~horseface@82.221.128.46)
[05:39:38] *** Quits: chomwitt (~Pitsikoko@ppp-94-67-202-202.home.otenet.gr) (Ping timeout: 255 seconds)
[05:41:00] *** Joins: kmh_ (~kmh@p2e5110fe.dip0.t-ipconnect.de)
[05:42:47] *** Quits: kmh (~kmh@p200300df5f086f00577dac48d2ae195c.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[05:43:37] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:fdae:68c:c6bd:3a25)
[05:44:04] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:44:22] *** Quits: Teacup_ (~teacup@user/teacup) (Quit: Teacup_)
[05:44:44] *** Joins: Teacup (~teacup@user/teacup)
[05:45:08] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[05:45:11] *** Joins: Arcorann (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net)
[05:45:25] <int-e> brownorange: not really. https://en.wikipedia.org/wiki/Presburger_arithmetic (basically Peano arithmetic without multiplication) has infinitely many constants in pretty much the same way (0, 1, 1+1, 1+1+1, etc.) and is complete...
[05:52:02] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[05:54:57] *** Quits: kmh_ (~kmh@p2e5110fe.dip0.t-ipconnect.de) (Quit: Leaving)
[05:55:19] <brownorange> i can't tell what the successor function is from that page
[05:57:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:58:26] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[05:58:49] *** Joins: Teacup (~teacup@user/teacup)
[05:59:20] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:00:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:01:18] *** Quits: Teacup (~teacup@user/teacup) (Client Quit)
[06:01:39] <brownorange> so induction is its successor?
[06:01:43] *** Joins: Teacup (~teacup@user/teacup)
[06:01:57] *** Joins: spugna (~spugna@c-71-195-168-246.hsd1.ca.comcast.net)
[06:02:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:02:58] *** Quits: xff0x (~xff0x@2001:1a81:521d:ec00:3970:2542:2f1d:feb7) (Ping timeout: 240 seconds)
[06:03:07] <brownorange> this may be easier if i formulate how to falsify my claims
[06:03:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 255 seconds)
[06:05:08] *** Joins: xff0x (~xff0x@2001:1a81:525a:ea00:9e1e:6e15:b03f:8acc)
[06:05:49] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[06:07:38] *** Parts: spugna (~spugna@c-71-195-168-246.hsd1.ca.comcast.net) ()
[06:09:07] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[06:09:08] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[06:09:30] *** Joins: Teacup (~teacup@user/teacup)
[06:12:39] <brownorange> 1) there is a successor function that lets you build infinitely many constants 2) you actually build the constants into unique numerals 3) you can setup statements in the form of A+B=C 4) your proof system allows you to construct proofs how you wish as long as its hilbert format 5) axioms suggest there's a closed form version of each of your proofs
[06:13:23] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 265 seconds)
[06:14:11] *** Quits: Teacup (~teacup@user/teacup) (Client Quit)
[06:14:35] *** Joins: Teacup (~teacup@user/teacup)
[06:14:44] *** Quits: Teacup (~teacup@user/teacup) (Client Quit)
[06:15:07] *** Joins: Teacup (~teacup@user/teacup)
[06:15:33] <brownorange> if there's an arithmetic formal system meeting those conditions that is complete (not because of a contradiction), then i'd have to admit my speculation was wrong
[06:16:49] *** Quits: Teacup (~teacup@user/teacup) (Client Quit)
[06:17:12] *** Joins: Teacup (~teacup@user/teacup)
[06:18:03] <Guest594> brownorange have you ever taken a course in propositional logic?
[06:18:31] <brownorange> not a course. but i think i know my way around it.
[06:18:34] <[itchyjunk]> I wish I knew some propositional logic.
[06:19:03] <Guest594> brownorange: ok well basically there's this thing called a proposition
[06:19:10] <Guest594> like if p then q
[06:19:31] <Guest594> ever heard of it?
[06:19:33] <brownorange> and p, then q
[06:19:53] <brownorange> my completion offered is modus ponens, common roi
[06:20:10] <brownorange> if ((p then q) and p) then q
[06:20:52] <brownorange> Guest594  the answer is yes , i know implies
[06:23:13] <brownorange> [itchyjunk] you should pick it up
[06:23:56] <brownorange> http://www.appstate.edu/~hirstjl/primer/hirst.pdf covers it
[06:24:52] <Guest594> brownorange: do you know first order logic?
[06:24:56] <Guest594> (please do not spam the channel)
[06:25:04] <brownorange> nope
[06:25:23] <Guest594> ok you sound like a beginner in propositional logic?
[06:25:27] <Guest594> am I correct?
[06:25:37] <brownorange> i'm not a beginner
[06:26:09] <Guest594> ok sorry
[06:26:45] <Guest594> so you know first order logic?
[06:27:08] <brownorange> nope. that one i know very little of. even though i've read about it.
[06:27:20] *** Joins: Mat1010 (~Mat1010@168.181.209.58)
[06:28:20] *** Quits: MrVulcan (~MrVulcan@101.175.88.138) (Ping timeout: 258 seconds)
[06:28:42] <Guest594> ok ... well basically to answer your question: https://en.wikipedia.org/wiki/First-order_logic
[06:28:56] <Guest594> if you have any questions I'd love to answer them
[06:29:02] <brownorange> what question?
[06:29:10] <Guest594> can you be more specific?
[06:29:18] <brownorange> you said to answer my question
[06:29:50] <brownorange> what question?
[06:31:37] *** Joins: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:32:12] <tusko> I need a good introductory ODEs book to get me through
[06:32:57] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[06:34:29] <brownorange> it appears to me mathematical induction is somehow the successor function for presburger arithmetic
[06:34:42] <Guest594> tusko: are the Des PDE heavy or not?
[06:35:11] <tusko> I'm in an ODEs course. However, the books lists in /topic are either lacking DEs or are PDE heavy.
[06:35:31] <tusko> I just need a first-course in ODEs so I can build a spaceship and get the fuck off this planet.
[06:38:03] <[itchyjunk]> tusko, you could try grabbing several ODE books and seeing if you like any of them
[06:38:12] <[itchyjunk]> I can't remember which book i used. i assume it wasn't that good
[06:38:56] *** Joins: X-Scale` (~ARM@46.207.28.37.rev.vodafone.pt)
[06:40:59] *** Quits: X-Scale (~ARM@46.207.28.37.rev.vodafone.pt) (Ping timeout: 258 seconds)
[06:40:59] *** X-Scale` is now known as X-Scale
[06:44:54] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[06:45:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:45:59] *** Quits: Arcorann (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net) (Ping timeout: 252 seconds)
[06:46:32] *** Quits: krator44 (~krator44@user/krator44) (Ping timeout: 252 seconds)
[06:47:21] *** Joins: krator44 (~krator44@user/krator44)
[06:47:48] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:50:23] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[06:54:27] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[06:54:30] *** Quits: madez (~madez@ip-176-198-251-181.hsi05.unitymediagroup.de) (Quit: .)
[06:54:59] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:58:10] *** Joins: madez (~madez@ip-176-198-251-181.hsi05.unitymediagroup.de)
[07:01:32] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Ping timeout: 255 seconds)
[07:04:15] *** Joins: qeed (~qeed@072-190-106-143.res.spectrum.com)
[07:06:31] *** Quits: hittoska (~hittoska@user/hittoska) (Ping timeout: 246 seconds)
[07:10:32] <tusko> I have Boyce, DiPrima, and Meade as well as Tenenbaum and Pollard
[07:12:28] *** Quits: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[07:12:43] <brownorange> To re-iterate conditions from before:
[07:12:43] <brownorange> 1) There is a successor function f(x) = x + 1. 2) There are defined numerals that abbreviate for uses of this function. 1 := s(0), 2 := s(1) etc 3) you can setup statements like A+B=C 3) proofs are hilbert style 4) every proof is assured to have a provable closed form version meaning A |- B, must also mean |- (A -> B)
[07:13:40] <brownorange> so if a formal system capable of expressing arithmetic also meets those conditions and is complete, i'd be proven wrong (assuming it had no contradictions)
[07:16:58] <brownorange> i can't tell if presburger satisfies the conditions because its would-be successor function appears to be replaced with mathematical induction.
[07:19:37] <Guest594> brownorange: presburger is it related to aresburgers theorem?
[07:20:10] <brownorange> no idea.  https://en.wikipedia.org/wiki/Presburger_arithmetic
[07:21:18] <Guest594> wow
[07:21:54] <PlanckWalk> brownorange: There is vagueness in what you mean by "a formal system capable of expressing arithmetic"
[07:22:10] <PlanckWalk> Expressing what aspects of arithmetic?
[07:22:36] <brownorange> basically increment operation which is the successor, and A+B=C being provable
[07:22:37] <PlanckWalk> There are certainly statements that are considered "arithmetic" that are not expressable in Presbuger arithmetic.
[07:23:15] <PlanckWalk> If alOh then yes, Presburger arithmetic can express all sentences of the form A+B=C
[07:23:53] <PlanckWalk> And yes, "x+1" expresses "successor to x"
[07:25:02] <brownorange> the key point is the introduce of numbers as additional symbols
[07:26:05] *** Joins: hittoska (~hittoska@2a02:c7f:16ab:2200:602e:be67:13c1:275)
[07:26:10] <brownorange> is it still complete when literally have something like 7844+534=8378
[07:26:48] *** Joins: oxum (~oxum@106.201.34.214)
[07:27:21] <PlanckWalk> I don't know what you mean by that
[07:27:44] <PlanckWalk> It can prove 7844+534=8378 (once you replace the numerals by successor notation) yes
[07:28:53] <PlanckWalk> It can also prove things like "there exists x such that x+x = 8378"
[07:29:59] <brownorange> is this the successor function for presburger, (P(0) âˆ§ âˆ€x(P(x) â†’ P(x + 1))) â†’ âˆ€y P(y).   ?
[07:30:04] <PlanckWalk> No
[07:30:31] <PlanckWalk> Functions are not part of the language.
[07:31:16] <PlanckWalk> You have to interpret functions yourself.
[07:31:35] <PlanckWalk> It doesn't prove anything about them, except via whatever interpretation you've chosen.
[07:32:04] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 272 seconds)
[07:32:08] <brownorange> that might be why its complete. my claim is arithmetic is incomplete when you start with an actual successor function, then using the formal system try to prove results like A+B=C. The reason is oversaturation of possible proofs for any positive integer solution
[07:32:45] <PlanckWalk> You can fairly trivially rewrite Presburger arithmetic to include a successor function symbol
[07:32:54] <PlanckWalk> And the new system is still complete
[07:33:25] <brownorange> and have a hilbert system, where every proof has a provable closed form version from the axioms as well?
[07:33:30] <PlanckWalk> Yes
[07:34:00] <PlanckWalk> But you can't prove things like "for any prime p there exists a greater prime q"
[07:34:09] <brownorange> yeah that's fine. i guess i was wrong
[07:35:20] <brownorange> i was speculating there was a greater finities just like there are greater infinities
[07:35:22] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[07:36:19] <brownorange> prop-calc,pred-calc don't have over-saturated ways to prove a result like arithmetic does. and i guessed that's why they are complete and arithmetic generally isn't.
[07:37:04] <PlanckWalk> They're too weak to be incomplete, if that's what you mean
[07:37:15] <brownorange> basically yes
[07:37:32] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 255 seconds)
[07:37:47] <PlanckWalk> "Complete" through being unable to express things, but capable of provable what little they can express.
[07:38:02] <PlanckWalk> proving*
[07:38:31] <brownorange> idk arithmetic allows for a growing of symbols as you go via numeral assignments
[07:39:20] <PlanckWalk> Well, technically that defines a family of different formal systems
[07:40:12] <PlanckWalk> You can prove that they're conservative extensions though, and don't prove any more or less than the straight textual replacements.
[07:40:19] *** Joins: candyman (~candyman@user/candyman)
[07:40:26] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 244 seconds)
[07:40:41] *** Quits: krator44 (~krator44@user/krator44) (Ping timeout: 255 seconds)
[07:41:01] *** Quits: hittoska (~hittoska@2a02:c7f:16ab:2200:602e:be67:13c1:275) (Quit:  )
[07:41:01] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[07:41:08] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 255 seconds)
[07:41:16] <brownorange> Seems so. But I would have thought for A+B=C, the number of proofs for a positive integer solution, grows as A,B grow. this is ddifferent than prop-calc or pred-calc.
[07:41:55] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[07:42:16] *** Joins: Julian (~tos9@python/site-packages/Julian)
[07:42:20] <PlanckWalk> No, it's not different.
[07:42:33] <PlanckWalk> There are infinitely many proofs for anything in all of those systems.
[07:43:12] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[07:43:29] <brownorange> which brings me to the greater infinities, but for finistic hopes of proving completeness greater 'finities' (not infinities)
[07:43:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[07:43:52] <PlanckWalk> The cardinality of proofs is countable.
[07:44:29] <PlanckWalk> There are only countably many strings in any of their formal languages.
[07:45:23] <brownorange> for prop-calc and pred-calc only right?
[07:45:33] <PlanckWalk> For all formal systems.
[07:46:32] <PlanckWalk> (Well, occasionally some wacky mathematicians consider systems with uncountable alphabets and/or infinitary proofs, but they're wacky)
[07:46:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[07:49:12] <brownorange> There are a number of ways to write a number though, especially through summing
[07:49:34] <brownorange> as you go higher, you only have more and more ways, like non-linearly more
[07:50:04] <brownorange> this is not so with prop-calc and its propositions.
[07:51:28] <PlanckWalk> Eh, you can implicitly define 6 as "the value x satisfying x+70341 = 70347"
[07:51:41] <PlanckWalk> I.e. infinitely many ways
[07:52:41] <brownorange> what's common to all the incomplete arithmetics? my understanding, its the successor function.
[07:53:27] <PlanckWalk> Mostly, both addition and multiplication
[07:53:38] <PlanckWalk> But there's nothing really in common to *all*
[07:53:46] <PlanckWalk> Yuo can always remove axioms
[07:54:01] <PlanckWalk> If you have no axioms, you can't prove anything!
[07:54:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[07:54:09] <PlanckWalk> And therefore you get an incomplete system
[07:54:26] <brownorange> that's why i insisted on hilbert style, and that for every proof there's a closed form version provable from axioms
[07:54:31] *** Joins: cheater (~Username@user/cheater)
[07:55:12] <PlanckWalk> That doesn't help if there's no proof
[07:56:01] <brownorange> i personally have no proof
[07:57:27] <brownorange> i would bet half my socks that have holes in them, that graphing what im' saying would show i'm right about the correlation.
[07:57:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:57:50] <PlanckWalk> Correlation between what and what?
[07:57:53] <tusko> I remember when I got to Calc 2 I thought I had really made it.
[07:58:02] <tusko> Then in Calc 3 I thought I was the shiznit
[07:58:03] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:58:08] <tusko> then DEs happened.
[07:58:18] <tusko> I haven't even touched real analysis yet :(
[07:58:27] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:58:29] <tusko> math humbled me
[07:58:33] <PlanckWalk> tusko: Hehe, "I've made it!" <looks at math journals> "... to the bottom of the mountain"
[07:58:56] <brownorange> imagine a graphic where on the bottom there is a data on total different possible statements that can be stated. and on the left side it is labeled number of ways to prove those statements.
[07:59:19] <tusko> true story. I tried to read an undergraduate math journal recently and still couldn't understand it
[07:59:28] <tusko> I will probably always be dumb.
[07:59:34] <brownorange> if i am correct the number of ways to prove overtake the number of statements to be proved at some rate
[07:59:37] <PlanckWalk> brownorange: In practically every system worth considering, the left hand side only needs one mark: "aleph_0"
[08:00:01] <PlanckWalk> That includes propcalc, predcalc, presburger arithmetic, peano, ZFC, and so on.
[08:00:45] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:01:19] <brownorange> that may be the limit of how far we track, but we'd see the line move a little slower than aleph 0
[08:01:36] <PlanckWalk> You could perhaps do a graph of number of proofs as a function of proof length limit and statement length limit
[08:01:45] <PlanckWalk> brownorange: That makes no sense whatsoever.
[08:02:09] <PlanckWalk> aleph_0 is just a cardinal number.  There is no "little slower than aleph_0"
[08:02:49] <PlanckWalk> Everything cardinal number less than aleph_0 is finite.
[08:02:52] <PlanckWalk> Every*
[08:03:16] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:03:22] <Guest594> what about the cardinal numbers formed by every subset of cardinal numbers less than aleph_0?
[08:03:38] <brownorange> i think my point is number of ways you can utilize ways to write the operands.  2+3=5   well for {2,3} there's only so many ways to write those, so this indicates a limit on how many proofs can be done
[08:04:22] <loopspace> Are brownorange and lmk0tter different people?
[08:04:50] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[08:04:53] <Guest594> brownorange 2,3 and 3,2 are different in the real world
[08:05:01] <Guest594> don't think 'associative property' means theyre not
[08:05:08] <Guest594> thats a very very "special" maths property
[08:05:21] <Guest594> 2,3 and ,32 can be difference of a million dollars on the stock marker
[08:05:23] <Guest594> market*
[08:05:26] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[08:05:42] <Guest594> most maths is "associative"
[08:05:50] <Guest594> including set theories which discard ordering
[08:06:09] <Guest594> makes things simpler but is of little application in real world
[08:06:09] *** Joins: krator44 (~krator44@user/krator44)
[08:06:24] <Guest594> {1,2,3} is very very different than {3,2,1}
[08:06:24] <Guest594> or {2,3,1}
[08:06:37] <Guest594> ZF is a bit of a 'crackpot' theory these days
[08:06:37] <Guest594> imo
[08:07:29] <brownorange> ii was not really talking about 3+2=5 versus 2+3=5, or for that matter 5=2+3 or 5=3+2
[08:07:29] <brownorange> i mean ways to write 2, like 1+1=2, waays you might write 3
[08:07:58] <brownorange> these shape your proofs and give you options of how you prove the result A+B=C
[08:08:08] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 255 seconds)
[08:08:33] *** Quits: woky (~woky@li1651-31.members.linode.com) (Quit: Nothing in this world is hopeless!)
[08:08:43] <brownorange> graphed you would see as A,B grow larger, the proofs for A+B=C grow larger.
[08:08:48] *** Joins: woky (~woky@li1651-31.members.linode.com)
[08:08:53] <brownorange> possible proofs*
[08:09:07] <Guest594> brownorange don't 'graph' things
[08:09:13] <Guest594> it's considered amateur
[08:09:26] <Guest594> if you can't derive something from logic
[08:09:30] <Guest594> it's not worth considering
[08:10:10] <Guest594> logic is the ultimate "proof"
[08:10:23] <Guest594> we always assume it
[08:10:39] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[08:14:54] <Guest594> is like the compiler of maths
[08:15:17] <tusko> surely you don't include set theory in that
[08:15:19] <Guest594> maths assembly language
[08:15:26] <Guest594> sets are just the binary
[08:15:27] <tusko> the disease of set theory
[08:15:30] <Guest594> not the language
[08:15:34] <Guest594> yes
[08:15:37] <Guest594> exactly
[08:15:48] <Guest594> dont confuse representation with logics
[08:16:00] <Guest594> or logics with maths
[08:16:47] <Guest594> you could write category or set theory all day and know nothing about proofs
[08:16:58] <Guest594> or other areas of maths
[08:17:08] <Guest594> is like writing binary by hand
[08:17:16] <Guest594> any idiot could do it
[08:17:18] <Guest594> but
[08:17:35] *** Quits: LiftLeft (~LiftLeft@154.21.28.156) (Ping timeout: 255 seconds)
[08:17:37] <Guest594> you get outward impression of being 'low level'
[08:18:13] *** Joins: oxum (~oxum@106.201.34.214)
[08:19:22] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:19:25] <Guest594> 'proofs' (hardest thing in maths) has nothing to do with representation
[08:19:38] <Guest594> ramanujaun was a high level maths 'programmer'
[08:19:58] <Guest594> analogy is opposite in maths
[08:20:10] <Guest594> higher level = more knowledge required
[08:20:26] <Guest594> a lot of scrubs try to exploit that
[08:20:42] <Guest594> you can't just write high level maths
[08:20:55] <Guest594> but anyone can write set theories
[08:21:14] <Guest594> with a few 'rules'
[08:21:19] <Guest594> that are rigid
[08:22:31] <brownorange> i know how to do proofs, but a metamathematcal proof i do not. i can't even find the word for ways to write N with numbers less than N
[08:22:32] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 255 seconds)
[08:22:48] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[08:22:58] <Guest594> brownorange yes exactly
[08:23:05] <Guest594> meta blah blah mathematical is an oxymoron
[08:23:09] <Guest594> think about it ...
[08:23:20] <Guest594> "higher" you climb up the maths abstraction stack
[08:23:24] <Guest594> more you have to know
[08:23:26] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[08:23:28] <Guest594> any idiot can go backwards
[08:23:41] <Guest594> and try to "encode" maths objects that are already known
[08:23:52] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 246 seconds)
[08:24:03] <Guest594> discovering new concepts is hard
[08:24:13] <Guest594> describing them once discovered is dead easy
[08:24:21] <Guest594> opposite in cs
[08:24:26] <Guest594> or "real world" subjects
[08:24:38] <Guest594> so scrubs exploit that fact and try to look the expert
[08:29:09] <tusko> proofs are taught very slopily in amerikkan schools
[08:29:14] <Guest594> imagine how dumb you had to be to invent idea of groups
[08:29:18] <Guest594> like
[08:29:23] <tusko> by profs who know nothing of the rigour of proof
[08:29:28] <Guest594> sets were known for a century
[08:29:33] <Guest594> and people naturally think in terms of groups
[08:29:37] <Guest594> and operators
[08:29:46] <tusko> Hey, say what you want about sets but leave my boy Galois out of this
[08:29:52] <Guest594> how much of a jump was it to go from that to groups lol
[08:30:16] <tusko> Evariste was a gangbanging thug who never seen it coming
[08:30:35] <Guest594> tusko: well like what about topologies
[08:30:38] <Guest594> a function is a set
[08:30:48] <Guest594> and they just took idea of set and combined it with another type of set
[08:30:51] <Guest594> and marketed it
[08:31:09] <Guest594> with some made up definitions like "continuous function"
[08:31:21] <Guest594> thats bullshit
[08:31:39] <Guest594> its made up
[08:31:53] *** Joins: oxum (~oxum@106.201.34.214)
[08:31:56] <Guest594> Newton already thought of hard stuff
[08:32:09] <Guest594> so some idiot just had to convert that to a "lower level" concept
[08:32:33] <Guest594> a function is just a type of set
[08:32:45] <Guest594> so a topology is just a tuple of sets which is itself a set
[08:33:00] <Guest594> theres 0 abstraction required
[08:33:21] <Guest594> its like some dude developing a 'theory' of binary numbers
[08:33:28] <tusko> is a function not a relation?
[08:33:54] <Guest594> and a relation is a set?
[08:34:00] <Panther> It might be related to a relation.
[08:34:06] <Guest594> if there were a 'real' theory of binary numbers like set theory
[08:34:11] <Guest594> itd translate over into practical reality
[08:34:26] <Panther> reality is not practical.
[08:34:28] <Guest594> unless you assume maths is the inverse of reality
[08:34:32] <tusko> I wish I had a PhD in maths so I could understand
[08:34:44] <Guest594> Panther yea so its the inverse of reality?
[08:35:05] <Guest594> tusko: well any idiot can understand a phd is the result of 60 years of study
[08:35:08] <Panther> Some sort of inextricable interweaving.
[08:35:11] <Guest594> even an idiot like you can understand that
[08:35:26] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-116-246-202.internet.virginmobile.ca)
[08:35:27] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-116-246-202.internet.virginmobile.ca) (Changing host)
[08:35:27] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[08:35:47] <Panther> Practicality is contextual, tho, reality ought not to be.
[08:36:06] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:36:11] <brownorange> When it comes to formal system i'm pretty sure not everything is simple logic. it's more like everything is substitution. logical rules help us do the substitutions. and substitution let us do far bigger leaps than 'pure machine code' of the matter.
[08:36:32] <Guest594> take equality, addition and brackets to separate your shit
[08:36:32] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 252 seconds)
[08:36:39] <Guest594> even an idiot like you should be able to do a lot of maths with that
[08:37:18] <brownorange> when you're working on real things, not just the fundamentals, one does not literally breakdown into every conceivable step. rather the theorems already proven let us take in some sense larger steps
[08:37:32] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:37:59] <Panther> They do, but the basics are still important.
[08:38:51] <Guest594> brownorange yes because we stand on 'shoulders of giants'
[08:38:54] <Guest594> unlike cs
[08:39:06] <Guest594> where knowledge of high level languages is democratized
[08:39:18] <Guest594> with maths you have some virgin calling shots
[08:39:19] <PlanckWalk> No need to be calling people in the channel idiots.
[08:39:37] <Panther> I like teaching younger children sometimes. I see old things in new ways, and then I go back and see the new things in newer ways. :)
[08:40:59] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 255 seconds)
[08:44:48] *** Joins: qeed_ (~qeed@072-190-106-143.res.spectrum.com)
[08:46:16] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Ping timeout: 246 seconds)
[08:47:13] <brownorange> let f(x) = y, where y is maximum possible of ways to write x by summing numbers less than x.
[08:47:47] <brownorange> then  f(A)*f(B)=minimum number of variations POSSIBLE in proofs of A+B=C
[08:47:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[08:48:42] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[08:48:55] <Guest594> do you know ABC conjecture brownorange
[08:49:26] <Guest594> define it for me buddy
[08:49:34] <Guest594> since youre hinting at it
[08:49:39] <brownorange> no i don't. i've only heard of it
[08:49:43] <Guest594> in front of everyone trying to "show off"
[08:49:50] <Guest594> ok what is it?
[08:50:02] <Guest594> since you just hinted at it but didn't state it in full
[08:50:04] <brownorange> i wasn't intending to relate this to abc conjecture
[08:50:25] <brownorange> X+Y=Z  could have worked
[08:50:27] <Guest594> A + B  = C
[08:50:28] <Guest594> ok
[08:50:46] <Guest594> and somehow "knowing" the number of permutations of A + B was related to C
[08:51:00] <Guest594> either you have a Ph.D in maths or youre trolling
[08:51:17] <brownorange> i just need variables for each operands
[08:51:26] <Guest594> nobody is that smart
[08:51:34] <Guest594> brownorange: ok such as?
[08:52:11] <Guest594> be explicit or im going to ban you soon
[08:52:20] <Fangs> you dont have the ability to ban them
[08:52:21] <Guest594> because a I'll know you're trolling
[08:52:31] <Guest594> Fangs ok but someone else will
[08:52:40] <brownorange> well let's be clear my whole thing is about positive integer solutions to A+B=C like 2+3=5.  the formal system shouldn't have any focus on algebraic statements
[08:52:43] <Fangs> if anything they might ban you
[08:53:35] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:53:38] <Guest594> Fangs: ok! I'm out of here.
[08:53:39] <brownorange> i'm keeping to the simplest statement i can think of that people can follow. i doubt abc conjecture is all that related
[08:53:55] <Mat1010> Hello. The gradient in a scalar field where there are several minimum maximums. When was the gradient calculated where the vector is pointing?
[08:53:56] <Guest594> I hope someone more knowledgeable than me can explain why this guy is wrong
[08:54:08] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 252 seconds)
[08:54:35] <Guest594> I have my PhD in topology and number theory and this is craziest thing ive seen in my life
[08:54:36] <brownorange> i was wrong i think, if PlanckWalk is right about Presburger
[08:57:09] <brownorange> however i think there is this relationship:   f(A)*f(B)=minimum number of variations POSSIBLE in proofs of A+B=C     maybe i need more refinement
[08:58:32] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 255 seconds)
[08:59:18] <Mat1010> But a scalar field can have maxima and minima?
[08:59:40] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:fdae:68c:c6bd:3a25) (Quit: Leaving)
[08:59:48] <brownorange> @Guest594 what's crazy?
[09:02:16] <Mat1010> What I do not understand is whether to calculate the direction of greatest change and I know that there are 2 possible directions, seeing the graph
[09:02:27] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[09:02:40] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[09:02:46] <Mat1010> How do I proceed to the calculation?
[09:05:55] *** Quits: brownorange (~brownoran@user/brownorange) (Quit: Leaving)
[09:08:33] *** Quits: hmmmas (~fidnc@183.217.200.144) (Quit: Leaving.)
[09:09:31] *** Quits: hyper (uid493485@id-493485.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[09:10:53] *** Quits: zwisch_ (~zwisch@135-23-67-207.cpe.pppoe.ca) (Quit: Leaving)
[09:11:08] *** Parts: Guest594 (~Guest59@S01069050ca4e3573.cg.shawcable.net) ()
[09:11:10] *** Joins: zwisch (~zwisch@135-23-67-207.cpe.pppoe.ca)
[09:11:53] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[09:12:39] *** Joins: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[09:13:30] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[09:13:34] *** Joins: oxide (~lambda@user/oxide)
[09:14:29] *** Joins: hyper (uid493485@id-493485.charlton.irccloud.com)
[09:14:41] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Read error: Connection reset by peer)
[09:15:25] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[09:16:22] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 246 seconds)
[09:21:52] *** Joins: rex_victor (~rex@2a02:8071:2280:a200:3285:a9ff:fe3a:67fa)
[09:23:01] *** Quits: rex (~rex@2a02:8071:22c1:2400::58e) (Ping timeout: 246 seconds)
[09:27:55] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:29:42] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[09:30:09] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:32:23] *** Joins: oxum (~oxum@106.201.34.214)
[09:34:17] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[09:37:14] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 255 seconds)
[09:40:12] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[09:44:28] *** Quits: Mat1010 (~Mat1010@168.181.209.58) (Quit: Client closed)
[09:44:34] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[09:48:09] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[09:49:23] *** Quits: xff0x (~xff0x@2001:1a81:525a:ea00:9e1e:6e15:b03f:8acc) (Ping timeout: 255 seconds)
[09:50:18] *** Joins: xff0x (~xff0x@2001:1a81:525a:ea00:a07c:46ec:2ccb:d36d)
[09:58:50] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 255 seconds)
[10:00:49] *** Joins: oxide (~lambda@user/oxide)
[10:03:51] *** Joins: LiftLeft (~LiftLeft@154.21.23.73)
[10:05:59] *** Joins: oxum (~oxum@106.201.34.214)
[10:07:51] *** Quits: horseface (~horseface@82.221.128.46) (Quit: SPACE IS DONUTS!)
[10:08:44] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 255 seconds)
[10:09:03] *** Joins: Guest59 (~Guest59@S01069050ca4e3573.cg.shawcable.net)
[10:09:26] <Guest59> I also wanted to say I'm most genius
[10:09:34] <Guest59> I invented Abel theorem
[10:09:45] <Guest59> a lot of theorems aren't even named after me
[10:09:51] <Guest59> cause ppl are shit
[10:10:06] <Guest59> I can answer any question in maths
[10:10:46] <Guest59> I could set this channel forward 10 years with 1 answer
[10:11:22] <Guest59> AMA
[10:11:47] *** Joins: horseface (~horseface@82.221.128.46)
[10:12:05] *** Guest59 is now known as God
[10:12:11] *** God is now known as MathsGod
[10:12:17] *** MathsGod is now known as TheMathsGod
[10:12:29] <TheMathsGod> ask me literally any maths question
[10:12:41] <TheMathsGod> and I'll prove it on the fly
[10:13:01] <TheMathsGod> but please phrase it using correct maths notation
[10:15:02] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 255 seconds)
[10:15:45] <TheMathsGod> https://www.youtube.com/watch?v=tFuw-YZaTNo
[10:16:03] <TheMathsGod> I mean
[10:16:04] <TheMathsGod> https://www.youtube.com/watch?v=Wx4No_RIHjk
[10:16:13] <TheMathsGod> haha
[10:16:36] <TheMathsGod> I just farted
[10:16:57] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[10:17:52] <TheMathsGod> I just started
[10:17:59] <TheMathsGod> sharted
[10:18:05] <TheMathsGod> out my anus
[10:18:22] *** Quits: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[10:18:39] *** Joins: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[10:19:53] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 265 seconds)
[10:19:55] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Client Quit)
[10:20:16] *** Joins: ua__ (~ua@public-gprs227485.centertel.pl)
[10:21:09] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[10:25:00] *** Joins: oxum (~oxum@106.201.34.214)
[10:26:14] *** Quits: LiftLeft (~LiftLeft@154.21.23.73) (Ping timeout: 272 seconds)
[10:28:37] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Quit: Leaving)
[10:29:45] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[10:29:50] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 252 seconds)
[10:31:31] *** Quits: Guest29 (~Guest29@209-195-74-216.cpe.distributel.net) (Quit: Client closed)
[10:33:45] *** Joins: kmh (~kmh@p200300df5f30ad0070a4f56ee8e84d8b.dip0.t-ipconnect.de)
[10:33:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 255 seconds)
[10:34:01] *** Quits: TheMathsGod (~Guest59@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[10:40:55] *** Joins: Julian (~tos9@python/site-packages/Julian)
[10:41:54] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Remote host closed the connection)
[10:46:33] *** Quits: frelleck (~frelleck@user/frelleck) ()
[10:46:52] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[10:47:07] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Client Quit)
[10:47:26] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[10:47:58] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:53:08] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:54:38] *** Quits: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net) (*.net *.split)
[10:54:38] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (*.net *.split)
[10:54:38] *** Quits: cherim___ (~UserNick@host-217-197-197-182.rev.as20985.net) (*.net *.split)
[10:54:38] *** Quits: APic (apic@apic.name) (*.net *.split)
[10:54:38] *** Quits: leah2 (~leah@vuxu.org) (*.net *.split)
[10:54:38] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (*.net *.split)
[10:54:38] *** Quits: D-04 (~D-04@185.130.184.204) (*.net *.split)
[10:54:38] *** Quits: mnrmnaugh (~mnrmnaugh@pool-96-252-87-182.bstnma.fios.verizon.net) (*.net *.split)
[10:54:38] *** Quits: moon-child (~moon-chil@cardinal.elronnd.net) (*.net *.split)
[10:54:38] *** Quits: gdarko_ (~me@dg.mk) (*.net *.split)
[10:54:38] *** Quits: NmAmDa (~melashri@melashri.xyz) (*.net *.split)
[10:54:38] *** Quits: join_subline (~join_subl@135-23-248-74.cpe.pppoe.ca) (*.net *.split)
[10:54:38] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[10:54:38] *** Quits: causative_ (~halberd@user/causative) (*.net *.split)
[10:54:38] *** Quits: davros (~davros@host86-185-61-40.range86-185.btcentralplus.com) (*.net *.split)
[10:54:38] *** Quits: spinningCat-away (~qweasdzxc@vps46179.public.cloudvps.com) (*.net *.split)
[10:54:38] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[10:54:38] *** Quits: shachaf (~shachaf@user/shachaf) (*.net *.split)
[10:54:38] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[10:54:38] *** Quits: spirit (~spirit@user/spirit) (*.net *.split)
[10:54:38] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[10:54:38] *** Quits: thebes (~thebes@userwer.net) (*.net *.split)
[10:54:38] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[10:54:38] *** Quits: RemiYuko (~licht@user/akechishiro) (*.net *.split)
[10:54:38] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[10:54:38] *** Quits: hammond_ (proscan@gateway02.insomnia247.nl) (*.net *.split)
[10:54:38] *** Quits: darkapex (~darkapex@user/darkapex) (*.net *.split)
[10:54:38] *** Quits: voidah (~voidah@user/voidah) (*.net *.split)
[10:54:38] *** Quits: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net) (*.net *.split)
[10:54:38] *** Quits: iibewegung (~iibewegun@114.70.12.205) (*.net *.split)
[10:54:38] *** Quits: drogas (~drogas@jump2.jet.uk) (*.net *.split)
[10:54:38] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (*.net *.split)
[10:54:38] *** Quits: vaporatorius (~vaporator@user/vaporatorius) (*.net *.split)
[10:54:38] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[10:54:38] *** Quits: tkr_ (tkr@pi.ip.fi) (*.net *.split)
[10:54:38] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[10:54:39] *** Quits: deego`` (~user@69.90.132.173) (*.net *.split)
[10:54:39] *** Quits: _tjr_ (~tjr@233.ip-144-217-92.net) (*.net *.split)
[10:54:39] *** Quits: mh_le (~Mads@user/mh-le/x-4465771) (*.net *.split)
[10:54:39] *** Quits: Capso_ (~Capso@wopr.sciops.net) (*.net *.split)
[10:54:39] *** Quits: szdani10 (~szdani10@unix-comp-airnet.net) (*.net *.split)
[10:54:39] *** Quits: Tordek (tordek@triton.blinkenshell.org) (*.net *.split)
[10:54:39] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[10:54:39] *** Quits: Z-module (~user@aero-astro-estates.mit.edu) (*.net *.split)
[10:54:39] *** Quits: Galois (djao@efnet.math.uwaterloo.ca) (*.net *.split)
[10:54:39] *** Quits: int-e (~noone@int-e.eu) (*.net *.split)
[10:54:39] *** Quits: djinni (~djinni@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[10:54:39] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (*.net *.split)
[10:54:39] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[10:54:39] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[10:54:39] *** Quits: p3n (~p3n@217.198.124.246) (*.net *.split)
[10:54:39] *** Quits: rak (~rak@debian/rak) (*.net *.split)
[10:54:39] *** Quits: Svjatoslav (~Svjatosla@62-210-108-187.rev.poneytelecom.eu) (*.net *.split)
[10:54:39] *** Quits: ethoxy (~exit-host@slave.sapi01.de) (*.net *.split)
[10:54:57] *** Joins: ra4king (~ra4king@roiatalla.com)
[10:54:57] *** Joins: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net)
[10:54:57] *** Joins: hammond_ (proscan@gateway02.insomnia247.nl)
[10:54:57] *** Joins: darkapex (~darkapex@user/darkapex)
[10:54:57] *** Joins: voidah (~voidah@user/voidah)
[10:54:57] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[10:54:57] *** Joins: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net)
[10:54:57] *** Joins: cherim___ (~UserNick@host-217-197-197-182.rev.as20985.net)
[10:54:57] *** Joins: iibewegung (~iibewegun@114.70.12.205)
[10:54:57] *** Joins: APic (apic@apic.name)
[10:54:57] *** Joins: drogas (~drogas@jump2.jet.uk)
[10:54:57] *** Joins: leah2 (~leah@vuxu.org)
[10:54:57] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[10:54:57] *** Joins: D-04 (~D-04@185.130.184.204)
[10:54:57] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[10:54:57] *** Joins: mnrmnaugh (~mnrmnaugh@pool-96-252-87-182.bstnma.fios.verizon.net)
[10:54:57] *** Joins: vaporatorius (~vaporator@user/vaporatorius)
[10:54:57] *** Joins: _tjr_ (~tjr@233.ip-144-217-92.net)
[10:54:57] *** Joins: nisstyre (~wes@user/nisstyre)
[10:54:57] *** Joins: tkr_ (tkr@pi.ip.fi)
[10:54:57] *** Joins: deego`` (~user@69.90.132.173)
[10:54:57] *** Joins: greenbagels (~gb@user/greenbagels)
[10:54:57] *** Joins: moon-child (~moon-chil@cardinal.elronnd.net)
[10:54:57] *** Joins: gdarko_ (~me@dg.mk)
[10:54:57] *** Joins: NmAmDa (~melashri@melashri.xyz)
[10:54:57] *** Joins: mh_le (~Mads@user/mh-le/x-4465771)
[10:54:57] *** Joins: Capso_ (~Capso@wopr.sciops.net)
[10:54:57] *** Joins: join_subline (~join_subl@135-23-248-74.cpe.pppoe.ca)
[10:54:57] *** Joins: szdani10 (~szdani10@unix-comp-airnet.net)
[10:54:57] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[10:54:57] *** Joins: Tordek (tordek@triton.blinkenshell.org)
[10:54:57] *** Joins: causative_ (~halberd@user/causative)
[10:54:57] *** Joins: shachaf (~shachaf@user/shachaf)
[10:54:57] *** Joins: davros (~davros@host86-185-61-40.range86-185.btcentralplus.com)
[10:54:57] *** Joins: spinningCat-away (~qweasdzxc@vps46179.public.cloudvps.com)
[10:54:57] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[10:54:57] *** Joins: Z-module (~user@aero-astro-estates.mit.edu)
[10:54:57] *** Joins: Galois (djao@efnet.math.uwaterloo.ca)
[10:54:57] *** Joins: int-e (~noone@int-e.eu)
[10:54:57] *** Joins: Duckle (~Duckle@user/duckle)
[10:54:57] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[10:54:57] *** Joins: djinni (~djinni@static.38.6.217.95.clients.your-server.de)
[10:54:57] *** Joins: spirit (~spirit@user/spirit)
[10:54:57] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[10:54:57] *** Joins: swistak (~swistak@185.21.216.141)
[10:54:57] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[10:54:57] *** Joins: thebes (~thebes@userwer.net)
[10:54:57] *** Joins: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[10:54:57] *** Joins: p3n (~p3n@217.198.124.246)
[10:54:57] *** Joins: rak (~rak@debian/rak)
[10:54:57] *** Joins: Svjatoslav (~Svjatosla@62-210-108-187.rev.poneytelecom.eu)
[10:54:57] *** Joins: RemiYuko (~licht@user/akechishiro)
[10:54:57] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[10:54:57] *** Joins: ethoxy (~exit-host@slave.sapi01.de)
[10:55:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[10:57:11] *** Joins: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de)
[10:57:14] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 252 seconds)
[11:00:02] *** Joins: darkapex_ (~darkapex@user/darkapex)
[11:02:34] <taeaad> Have any of you twads read Shinichi Mochizuki's work?
[11:02:35] *** Joins: darkapex- (~darkapex@user/darkapex)
[11:02:38] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[11:03:01] <taeaad> If you have, my question is: Where does he claim to solve the abc-conjecture?
[11:04:50] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 265 seconds)
[11:05:13] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 246 seconds)
[11:15:38] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[11:17:08] *** Quits: darkapex- (~darkapex@user/darkapex) (Ping timeout: 255 seconds)
[11:18:10] *** Joins: darkapex (~darkapex@user/darkapex)
[11:24:16] <riv> I have not read it, apparently it's quite difficult reading
[11:25:51] <riv> > In March 2018, Peter Scholze and Jakob Stix visited Kyoto for discussions with Mochizuki.[31][32] While they did not resolve the differences, they brought them into clearer focus. Scholze and Stix wrote a report asserting and explaining an error in the logic of the proof and claiming that resulting gap was "so severe that â€¦ small modifications will not rescue the proof strategy";[33] Mochizuki claimed that they misunderstood vital aspects of th
[11:25:51] <riv> e theory and made invalid simplifications.[34][35][36]
[11:26:44] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[11:27:13] *** Joins: qbt (~edun@user/edun)
[11:28:41] <riv> https://math.mit.edu/~roed/writings/talks/2012_11_16.pdf
[11:33:57] <riv> https://mathoverflow.net/questions/106560/philosophy-behind-mochizukis-work-on-the-abc-conjecture
[11:35:25] *** Joins: carlino3 (~carlino3@user/carlino3)
[11:39:41] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[11:40:45] <HisShadow> it's still in limbo, and it's very complex, there was a workshop about trying to understand it, but it went nowhere I think
[11:41:10] <carlino3> hi
[11:43:33] <riv> hi
[11:45:55] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[11:46:38] *** Joins: acresearch (~acresearc@user/acresearch)
[11:47:20] *** Joins: Pollion (bombar@zamok.crans.org)
[11:49:43] *** Quits: kmh (~kmh@p200300df5f30ad0070a4f56ee8e84d8b.dip0.t-ipconnect.de) (Quit: Leaving)
[11:52:08] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[11:56:31] <taeaad> OK, but do we know where does Mochizuki originally claim to solve the abc conjecture?
[12:00:14] *** Joins: oxum (~oxum@106.201.34.214)
[12:01:20] <carlino3> pikapika hi! remember me?
[12:01:37] <pikapika> DOn't think so
[12:02:17] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[12:02:27] <acresearch> question related to microscopy (not sure it can be solved though): i have a circle with diameter 450um within this circle is a rectangle with dimentions 4912x3864 pixels, rectangle does not touch circle edges ... how can I calculate the size of a pixel in um?
[12:03:25] <carlino3> what is the length of a pixel?
[12:03:29] *** Quits: PendulumSwinger (~PendulumS@user/pendulumswinger) (Ping timeout: 255 seconds)
[12:03:29] *** Quits: Proximyst (~Proximyst@baldr.proximyst.com) (Quit: Robbing a bank)
[12:04:02] <causative_> if the rectangle doesn't touch the circle edges, what does it matter how big or small the circle is?
[12:04:08] <causative_> there isn't enough information given
[12:04:13] <HisShadow> taeaad: I think it follows trivially from the results he proved
[12:04:41] *** Joins: expix (~1@amontpellier-652-1-208-124.w90-57.abo.wanadoo.fr)
[12:04:42] *** Joins: Proximyst (~Proximyst@baldr.proximyst.com)
[12:05:18] *** Joins: gas51627 (uid91066@id-91066.brockwell.irccloud.com)
[12:06:07] *** Quits: Proximyst (~Proximyst@baldr.proximyst.com) (Client Quit)
[12:06:49] *** Joins: Proximyst (~Proximyst@baldr.proximyst.com)
[12:09:12] <taeaad> HisShadow: Hmm. I would have to read more about it. The last paper IV doesn't seem to claim anything. The previous ones do.
[12:09:26] <taeaad> Or well, construct things and make conclusions, I believe.
[12:13:04] <gas51627> Hi
[12:13:29] <HisShadow> taeaad: https://en.wikipedia.org/wiki/Szpiro%27s_conjecture is what he proved supposedly
[12:14:21] <acresearch> carlino3: that is what i am trying to calculate
[12:14:44] <acresearch> causative_: hmmm
[12:14:49] *** Joins: oxum (~oxum@106.201.34.214)
[12:15:51] *** Joins: PendulumSwinger (~PendulumS@user/pendulumswinger)
[12:15:52] <gas51627> I am recently stuck with a thing, I don't understand how to bridge the gap between simple statements, like P is true/false and the statement with a variable P(x).
[12:17:17] <gas51627> I mean, for example, if you have a statement P(x) -> Q . Then it means that for some x Q may be false, while for others not
[12:19:33] <acresearch> causative_: carlino3 ok what if therectangle touches the circle edges,,, how can i solve it in this situation?
[12:22:10] <carlino3> acresearch yes i realize that a bit later. nevermind.
[12:22:25] <carlino3> acresearch do you have a photo or graphic representing the issue?
[12:23:21] <acresearch> carlino3: no,,, i did take some photos of the cells just to make sure of the measurements, but i deleted them
[12:23:24] <taeaad> HisShadow: Alright. Perhaps the conjecture should then be mentioned somewhere in the correspondence.
[12:23:48] <acresearch> carlino3: i was hoping to calculate the pixel size mathematically rather than my meauring on the image
[12:24:20] <carlino3> yes of course
[12:25:59] *** Quits: hposca (~hposca@node-1w7jr9phoke2vlnhot95w4kak.ipv6.telus.net) (Ping timeout: 255 seconds)
[12:26:22] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[12:27:21] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[12:27:21] <causative_> acresearch,  if it touches at all 4 corners, then theta = atan(3864/4912) is the angle of a diagonal, and you know the diagonal is 450um, so 3864px * X (um/px) = 450 um * sin(theta), solve for X
[12:27:35] <riv> gas51627, P(x) -> Q  on its own is not well formed
[12:27:53] <riv> you need to write  forall x, P(x) -> Q or exists x, P(x) -> Q to finish the statement
[12:30:26] <gas51627> riv: oh, really? is P(x) -> Q not well formed?
[12:30:36] <riv> it's got a free variable
[12:30:47] <gas51627> but is P(x) well formed?
[12:30:59] <riv> P(x) also has a free variable
[12:31:20] <gas51627> but what is a problem with that?
[12:31:33] <gas51627> you say it will rain on day x
[12:32:15] <riv> in formal logic, the proof rules work on closed statements without free variables
[12:32:54] <riv> in math we use a lot of shorthands and sometimes implicitly quantify, but what we have in mind still have all the quantifiers
[12:35:46] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[12:36:04] *** Joins: candyman (~candyman@user/candyman)
[12:36:17] *** Joins: derelict (~derelict@user/derelict)
[12:36:17] *** Quits: derelict (~derelict@user/derelict) (Client Quit)
[12:36:40] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:56] <gas51627> why mathbin copies text here with each symbol on its own line
[12:38:56] *** Quits: Proximyst (~Proximyst@baldr.proximyst.com) (Quit: Robbing a bank)
[12:39:03] <riv> gas51627, although for your specific example
[12:39:09] <riv> forall x, P(x) -> Q
[12:39:09] <riv> and
[12:39:13] <riv> exists x, P(x) -> Q
[12:39:18] <riv> these are both strange statements
[12:39:23] <acresearch> causative_: ahhh i see
[12:39:28] <riv> since Q does not depend on x
[12:39:35] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:07] <riv> it is ok though
[12:40:09] <gas51627> I would paste a formula here
[12:40:22] <gas51627> but mathbin pastes every symbol on a new line for some reason
[12:40:51] *** Joins: Proximyst (~Proximyst@baldr.proximyst.com)
[12:41:11] *** Quits: amirouche (~amirouche@user/amirouche) (Quit: WeeChat 2.8)
[12:41:45] *** Joins: oxum (~oxum@106.201.34.214)
[12:41:58] *** Joins: derelict (~derelict@user/derelict)
[12:42:08] *** Quits: derelict (~derelict@user/derelict) (Client Quit)
[12:42:20] <gas51627> âˆ€x(âˆƒyP(y)â†’Q(x))
[12:42:28] <gas51627> ok, this for example
[12:43:57] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[12:44:12] <riv> that is good because all variables are quantified
[12:44:29] <gas51627> I always thought that in every formula with brackets, you can  separately look at the inner statement
[12:44:39] <riv> you can but it is in context
[12:44:41] <gas51627> in this case âˆƒyP(y)â†’Q(x)
[12:44:56] <gas51627> so I just removed (x) from Q(x) for simplicity
[12:44:59] <riv> when we consider âˆƒyP(y)â†’Q(x) we are in a context with x universally (forall) quantified
[12:45:01] <gas51627> or so I though
[12:45:14] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[12:45:34] *** Joins: oxum (~oxum@106.201.34.214)
[12:45:35] <riv> when we look at âˆ€x(âˆƒyP(y)â†’Q(x)), it is a closed formula so it is valid in the empty context
[12:46:05] <gas51627> ok, I will write the whole statement then it will probably be easier, because I am trying to dumb it down and it seems that it doesn't work
[12:46:32] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[12:48:39] *** Joins: Crassus (~Crassus@user/crassus)
[12:49:43] *** Joins: candyman (~candyman@user/candyman)
[12:50:17] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 255 seconds)
[12:51:38] *** Joins: oxum (~oxum@106.201.34.214)
[12:52:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:53:16] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:54:47] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 255 seconds)
[12:55:53] *** Lord_of_Life_ is now known as Lord_of_Life
[13:00:11] *** Quits: nick8325 (~nick8325@2001:9b1:26f9:3e00:b7ea:ac95:e18:4c1d) (Quit: Leaving.)
[13:02:27] *** Joins: Iryon (~Iryon@185-12-21-77.sigma.jaslo.pl)
[13:05:03] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[13:06:18] *** Joins: Arcorann (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net)
[13:09:50] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[13:12:59] <gas51627> this thing with mathbin is really annoying
[13:13:43] <gas51627> oh, it seems I was using the wrong mathbin, I was using https://mathbin.github.io/ instead of http://mathb.in/
[13:14:03] <gas51627> silly, it was the one that popped up first in google
[13:15:12] <gas51627> riv: here it is: http://mathb.in/59987
[13:15:17] <gas51627> sorry for a lot of text
[13:15:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 255 seconds)
[13:15:50] *** Joins: oxum (~oxum@106.201.34.214)
[13:17:32] <gas51627> https://www.irccloud.com/pastebin/CvoscHPv/
[13:18:05] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[13:18:22] <gas51627> riv: I will copy the last part here: âˆƒx(D(x)âˆ§M(x))â†’âˆ€y(âˆƒz(F(y,z)âˆ§D(z))â†’Q(y))
[13:18:22] <gas51627> so I was thinking do I really need that âˆƒz on the right part. In other words, i was thinking, if:
[13:18:22] <gas51627> âˆƒz(F(y,z)âˆ§D(z))â†’Q(y)
[13:18:22] <gas51627> and
[13:18:23] <gas51627> (F(y,z)âˆ§D(z))â†’Q(y)
[13:18:24] <gas51627> are equivalent
[13:18:43] <gas51627> because if F(y,z)âˆ§D(z) is true then for sure âˆƒz(F(y,z)âˆ§D(z)) is true and if one is false then the other false as well. So trying to figure it out, I went on to constructing some other statements which I ended up asking about.
[13:18:49] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[13:19:18] <acresearch> causative_: how did you get the formula   3864px * X (um/px) = 450 um * sin(theta)    how did you derive it?
[13:19:34] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:19:57] <causative_> you're finding the length of the 3864px side of the rectangle in two different ways
[13:20:21] <causative_> 3864px * X (um/px) finds the length in micrometers by an (unknown) unit conversion
[13:20:37] <causative_> 450 um * sin(theta) finds it by trig
[13:21:36] <acresearch> causative_: ok wait, let me think about it for a minute
[13:24:49] *** Joins: oxum (~oxum@106.201.34.214)
[13:28:56] <acresearch> causative_: so i given that i know theta, i should figure out the hyp (in px) first -> sin(theta)=3864/h    therefore    h=sin(theta)/3864    h=2379px   correct?   seems wrong to me
[13:29:08] <acresearch> hype should be the largest side
[13:29:51] <gas51627> so in other words, do I really need that existential quantifier
[13:29:54] <causative_> sin(theta) = opposite/hypotenuse, this means sin(theta) * hypotenuse = opposite
[13:30:05] <causative_> the hypotenuse is 450 um
[13:30:48] <acresearch> causative_: wait, before i use 450    i need to know 450um is how many pixels right?   then i can figure out the size of a pixel
[13:31:09] <causative_> well, that's a different way to do it
[13:32:01] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:32:05] <causative_> a better way actually
[13:32:26] <acresearch> causative_: :-)
[13:34:14] <causative_> for that you don't need to know theta, you can just do (3864^2 + 4912^2)^0.5
[13:34:35] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:37:16] <acresearch> causative_: ahhhhh yeh,  pythagoras theorem    you are right, i forgot about it
[13:38:50] <acresearch> causative_: amazing, got exactly the same answer using both methods  :-) yay logic  :-)
[13:44:05] *** Joins: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[13:45:46] *** Joins: shriekingnoise (~shrieking@186.137.144.80)
[13:46:48] *** Parts: shriekingnoise (~shrieking@186.137.144.80) ()
[13:46:56] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:48:40] <acresearch> causative_: ok i just coded it... so this protocol works (find image resolution i.e size of 1 pixel in um) given that the image must touch the edges of the field of view circle  (since this is a microscope)....   if the image is much smaller than the field of view,, i.e does not touch the edges      we cannot solve this problem give the info we have right?     not even trying to solve it using
[13:48:42] <acresearch> circle and rec areas?
[13:49:31] *** Quits: hyper (uid493485@id-493485.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[13:49:53] <causative_> well, I'm sure there's some way to know what the pixel size is on a microscope
[13:51:16] <acresearch> causative_: i have been playing with the microscope and its software, but it seems i have to "calibrate it", so it seems the developers could not figure this out and settled to manually measure the size of the image given a very small ruler, which i do not have
[13:51:33] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[13:52:48] <acresearch> causative_: i tried moving the camera in such a way so that it captures the edges, i.e the rectangle touches the circle, but it won't focus
[13:53:15] *** Joins: oxum (~oxum@106.201.34.214)
[13:54:00] <causative_> so you have a physical rectangle that you're focusing on?  why can't you just measure the rectangle?
[13:54:53] <causative_> well, I guess it might be too small to do that easily
[13:55:23] <causative_> but you know the circle is 450 um across so why can't you just measure how many pixels across the circle is?
[13:55:23] <acresearch> causative_: oh no, this is the rectangel of the image, not physical,   would make my self much easier if it was physical
[13:56:08] <acresearch> causative_: no i don't ,,, i can calculate the number of pixels in the circle only if the rectangel touches the circle
[13:56:26] <acresearch> but in reality it doesn'y
[13:56:29] *** Joins: kado (~kado@36.37.140.110)
[13:56:36] <acresearch> doesn't
[13:57:46] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 240 seconds)
[13:58:17] *** Joins: specing_ (~specing@user/specing)
[13:58:43] *** Quits: horseface (~horseface@82.221.128.46) (Quit: SPACE IS DONUTS!)
[13:59:08] *** Quits: specing (~specing@user/specing) (Ping timeout: 255 seconds)
[14:00:04] *** specing_ is now known as specing
[14:02:13] <causative_> well, I don't think there's anything to do but get an object of known size and measure it in the image
[14:03:36] <acresearch> causative_: probably
[14:03:51] *** Joins: jamtorus (~quassel@185.213.154.166)
[14:04:11] *** Quits: jellydonut (~quassel@185.213.154.166) (Read error: Connection reset by peer)
[14:04:28] *** Joins: oxum (~oxum@106.201.34.214)
[14:04:33] <causative_> unless you could get *part* of the edge of the circle in frame
[14:05:24] *** Joins: horseface (~horseface@82.221.128.46)
[14:06:30] <acresearch> causative_: yeh, this is what i was trying
[14:06:39] <causative_> and you can't do it?
[14:07:01] <acresearch> causative_: the camera won't focus for some reason,,, maybe the distance it too large for its setup
[14:07:41] <acresearch> manual measurements introduce errors and inacuracies, which is also why i want to avoid them and try to do as much as possible mathematically
[14:07:57] <gas51627> if we say "for all y ( y washes their hands)" how can it be the statement about all y, but at the same time in braces be a statement about individual y"
[14:08:11] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 252 seconds)
[14:08:56] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[14:09:08] *** Joins: oxum (~oxum@106.201.34.214)
[14:12:23] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[14:14:32] *** Joins: pasd (uid507854@id-507854.highgate.irccloud.com)
[14:21:51] *** Joins: rubiksdream (~a@cm61-15-252-242.hkcable.com.hk)
[14:23:01] *** Quits: rubiksdream (~a@cm61-15-252-242.hkcable.com.hk) (Changing host)
[14:23:01] *** Joins: rubiksdream (~a@user/rubiksdream)
[14:25:56] *** Joins: oxum (~oxum@106.201.34.214)
[14:26:10] *** Quits: horseface (~horseface@82.221.128.46) (Quit: SPACE IS DONUTS!)
[14:33:39] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[14:35:08] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 255 seconds)
[14:36:38] *** Joins: horseface (~horseface@82.221.128.46)
[14:40:30] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:40:46] *** Joins: susam (~susam@user/susam)
[14:40:57] *** Joins: a_ (~a@cm61-15-252-242.hkcable.com.hk)
[14:41:22] *** a_ is now known as Guest3295
[14:41:38] *** Quits: Guest3295 (~a@cm61-15-252-242.hkcable.com.hk) (Changing host)
[14:41:38] *** Joins: Guest3295 (~a@user/rubiksdream)
[14:41:51] *** Quits: rubiksdream (~a@user/rubiksdream) (Ping timeout: 265 seconds)
[14:43:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[14:43:03] *** Guest3295 is now known as rubiksdream
[14:44:02] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[14:46:09] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[14:46:32] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[14:46:38] *** Joins: cheater (~Username@user/cheater)
[14:50:18] *** Joins: oxum (~oxum@106.201.34.214)
[14:58:48] *** Quits: horseface (~horseface@82.221.128.46) (Quit: SPACE IS DONUTS!)
[14:58:50] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[14:59:21] *** Joins: oxum (~oxum@106.201.34.214)
[15:02:31] *** Trieste_ is now known as Trieste
[15:03:18] *** Quits: candyman (~candyman@user/candyman) (Quit: candyman)
[15:03:33] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[15:05:18] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Client Quit)
[15:05:50] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 258 seconds)
[15:06:05] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[15:06:29] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 252 seconds)
[15:07:12] *** Inline_ is now known as Inline
[15:07:30] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Client Quit)
[15:07:33] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[15:08:04] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[15:08:33] *** Joins: oxum (~oxum@106.201.34.214)
[15:09:31] <ze26zefo> that's the magic of binders
[15:09:38] <ze26zefo> i.e. constructs that bind variables like forall, exists
[15:09:40] <ze26zefo> gas51627:
[15:10:02] *** ze26zefo is now known as tolarz
[15:10:23] *** Joins: notzmv (~zmv@user/notzmv)
[15:11:26] *** Joins: horseface (~horseface@82.221.128.46)
[15:11:52] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Ping timeout: 272 seconds)
[15:12:11] *** Joins: mawk (mawk@serveur.io)
[15:12:11] *** Quits: mawk (mawk@serveur.io) (Changing host)
[15:12:11] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[15:12:27] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:13:13] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[15:15:49] *** Quits: qbt (~edun@user/edun) (Ping timeout: 246 seconds)
[15:16:05] *** Joins: tempate99 (~tempate99@90.167.166.138)
[15:16:55] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:17:33] *** Joins: oxum (~oxum@106.201.34.214)
[15:20:06] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 272 seconds)
[15:21:19] *** Joins: sebastianos (~sebastian@user/sebastianos)
[15:21:21] *** Joins: andreasbuhr (~quassel@p549dbab4.dip0.t-ipconnect.de)
[15:23:26] *** Quits: mornfall (~mornfall@user/mornfall) (Ping timeout: 252 seconds)
[15:24:52] *** Quits: oxum (~oxum@106.201.34.214) (Remote host closed the connection)
[15:26:01] *** Joins: oxum (~oxum@106.201.34.214)
[15:26:07] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[15:28:36] <tempate99> what's the difference between K(v) and K[X] ?
[15:30:18] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc04:e00:d8f7:cdfe:4658:bec4)
[15:31:03] <cherim___> Normally K(x) are rational functions in x (a field), K[x] are polynomials in x (a ring)
[15:31:25] *** Quits: galen (~gaken@user/galen) (Remote host closed the connection)
[15:31:33] *** Joins: galen (~gaken@user/galen)
[15:31:36] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[15:32:06] <rubiksdream> im trying to prove the following: Let U be an open, simply connected (proper) subset of C, and suppose that for some point (say 0) in U, the largest disk center 0 contained in U is one of some radius r > 0 . Show that this implies U is contained in a slit-plane
[15:32:43] <rubiksdream> I guess the idea is to take some boundary point of U contained on the boundary of this largest disk, and then show that a slit plane created by subtracting a half-line starting at that point contains U
[15:32:50] <rubiksdream> but im not sure if this approach is even fruitful
[15:34:03] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[15:36:01] *** Joins: Crassus (~Crassus@user/crassus)
[15:36:34] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 272 seconds)
[15:36:48] <cherim___> What do you mean by "contained in a slit-plane" exactly?
[15:36:50] *** Joins: sebastianos (~sebastian@user/sebastianos)
[15:37:30] <cherim___> Clearly a spiral-like U wouldn't, for a naive definition
[15:38:46] <rubiksdream> let z \in C be some point, and let l_z(theta) denote the line z + t(exp(itheta)) : t \in [0,infinity), (the image of this), then C \setminus l_z(theta) is a slit plane
[15:38:56] <rubiksdream> thats what I Thought, i thought a spiral like U would make this fail
[15:39:01] *** Quits: horseface (~horseface@82.221.128.46) (Quit: SPACE IS DONUTS!)
[15:39:05] <rubiksdream> but i am pretty sure this is true because its mentioned in a published paper
[15:39:14] <rubiksdream> it has something to do with the koebe-1/4 theorem
[15:40:25] <cherim___> Maybe you don't supply all the assumptions
[15:40:48] *** Joins: candyman (~candyman@user/candyman)
[15:40:55] <tempate99> cherim___: so K(x) \subseteq K[X] ?
[15:41:00] *** Quits: oxum (~oxum@106.201.34.214) (Ping timeout: 272 seconds)
[15:41:21] <cherim___> k[x] \subseteq k(x)
[15:41:41] *** Joins: horseface (~horseface@82.221.128.46)
[15:42:09] <cherim___> (x+1)/(x^2+1) is in k(x) but not in k[x]
[15:42:11] <tempate99> but I thought the only difference was that in k(x) coefficients had to be rational
[15:42:30] <tempate99> oh
[15:42:52] <tempate99> ok, I think I've got it
[15:43:27] <tempate99> thanks, cherim___
[15:44:25] <pikapika> I am a very irrational person
[15:44:58] <rubiksdream> theorem 8.6 https://imgur.com/a/HQSfb5L , the 'equality holds iff \Omega is a slit plane' is the part I am confused about, in particular the proof seems to be saying that the Koebe-1/4-theorem conclusion is sharp (i.e. no larger ball can be found) iff the image is contained in a slit plane
[15:45:05] <rubiksdream> then the comparison principle is applied
[15:45:11] <rubiksdream> (comparison principle for hyperbolic metrics)
[15:46:11] *** Joins: node1 (~node1@user/node1)
[15:46:49] <rubiksdream> which says that if S_1 \subset S_2 are (simply connected, proper) subregions of C , and p_1,p_2 are hyperbolic metrics on these regions resp., then p_1 >= p_2, and equality holds somewhere on S_1 iff S_1 = S_2
[15:47:11] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc04:e00:d8f7:cdfe:4658:bec4) (Ping timeout: 252 seconds)
[15:47:49] <tempate99> cherim___: and when will k(x) = k[x] ?
[15:48:00] *** Joins: arseniiv_ (~arseniiv@94.41.6.151.dynamic.ufanet.ru)
[15:49:00] <rubiksdream> fyi, we have computed the hyperbolic metric on a slit plane
[15:49:04] <rubiksdream> so this is not a problem
[15:49:28] <rubiksdream> its just the inclusion which is non-obvious to me
[15:50:06] <cherim___> Sometimes this notation is used when x is not a formal variable but an element of some field extension
[15:50:35] <tempate99> so if x = 1/2 you say k(1/2) ?
[15:50:47] <cherim___> Then if "x" is algebraic you can have, say K(sqrt{2})=K[sqrt{2}]
[15:50:51] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[15:51:08] <cherim___> But Q(e) is not Q[e]
[15:53:03] *** Joins: red_owl (~red_owl@p5b24307d.dip0.t-ipconnect.de)
[15:53:24] <tempate99> (e + 1)/(e^2 + 1) in Q(e) but not in Q[e] ?
[15:53:46] *** Quits: horseface (~horseface@82.221.128.46) (Quit: SPACE IS DONUTS!)
[15:53:54] <cherim___> Yes, e would have been algebraic over Q otherwise
[15:54:38] <tempate99> why does it matter for it to be algebraic?
[15:55:12] <int-e> (e + 1)/(e^2 + 1) = q would imply qe^2 - e + q - 1 = 0
[15:55:24] <int-e> hmm
[15:55:25] *** Joins: horseface (~horseface@82.221.128.46)
[15:55:46] <int-e> where q isn't a rational number, but some element of Q[e]
[15:56:05] <int-e> but it would still make e a root of a polynomial over Q
[15:56:06] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[15:56:37] <tempate99> oh, interesting
[15:56:41] <tempate99> thanks a lot
[15:56:42] <cherim___> p.116 of https://jmilne.org/math/CourseNotes/FT.pdf has an example use
[15:57:14] <gas51627> can someone tell me for the statement "y will tutor someone who got a D" both of those formulas seem to be correct:
[15:57:14] <gas51627> âˆƒz(z got D and y will teach z)
[15:57:14] <gas51627> âˆƒz(z got D)â†’y will teach z
[15:57:43] <gas51627> but why/not
[15:58:23] *** Joins: quarterback (~quarterba@user/quarterback)
[15:59:22] <gas51627> well, yes the second one is wrong because z from left and z from right are different ones
[15:59:38] <gas51627> z from left is bound and can be replaced with anything, while z on the right will stay
[16:03:51] <tempate99> int-e, cherim___: but I thought that an element being algebraic was simply an element that was the solution to a polynomial. why must there be a q such that (e^2 + 1)q - (e + 1) = 0 if e is algebraic?
[16:04:33] *** Quits: kado (~kado@36.37.140.110) (Quit: nyaa~)
[16:05:41] <cherim___> If, say, (e^2+1)/(e+1) = 3+2e-4e^2, you can multiply by e+1 to get a polynomial (of degree 3) that e is a root of
[16:05:42] *** Joins: oxum (~oxum@106.203.222.191)
[16:07:41] *** Joins: Simplar (~Simplar@188.163.94.202)
[16:08:12] <tempate99> cherim___: ok, I think I get it. thanks again.
[16:08:59] <int-e> tempate99: it may be easier to make this more general: if a/b = c/d with a,b,c,d in Q[e], then ad = bc, so one of two things happen. 1) ad and bc are equal as polynomials in e, and we have a trivial equality inherited from Q(x); or 2) we have found a polynomial nontrivial polynomial identity (ad - bc = 0) over Q for e, making it algebraic
[16:10:14] *** Quits: oxum (~oxum@106.203.222.191) (Ping timeout: 258 seconds)
[16:10:44] <rubiksdream> cherim___ never mind, i resolved my question, what I was asking was actually way too general
[16:11:45] <rubiksdream> what I really needed was : Let f : D -> U be a conformal map of the unit disk onto some simply connected (proper) region, then if the largest disk centered at f(0) has radius exactly |f'(0)|/4 (and not more), then U is a slit plane
[16:11:51] <rubiksdream> which is much more specific
[16:12:43] <rubiksdream> which comes from koebe-1/4-theorem, because if the largest disk centered at f(0) has that radius exactly, its possible to show f is a rotation of the koebe-function
[16:12:44] <tempate99> int-e: right, makes sense
[16:12:50] *** Joins: tacegory (~tacegory@user/tacegory)
[16:14:17] <cherim___> You didn't even constrain r in the original claim, it was about arbitrary open sets of R^2
[16:14:22] <rubiksdream> yeah :/
[16:14:24] <cherim___> Clearly couldn't hold
[16:14:38] <rubiksdream> well arbitrary simply connected open sets
[16:14:40] *** Quits: oxide (~lambda@user/oxide) (Read error: Connection reset by peer)
[16:14:51] <rubiksdream> so the link to them being conformal maps of D -> that set was still there
[16:14:57] <rubiksdream> its just that |f'(0)|/4 is a specific number
[16:15:16] <rubiksdream> and it turns out it cant be any other number
[16:16:49] <cherim___> I recall reading some "complex analysis from a geometric function theory viewpoint" chapter which had parts looking similar to Beardon-Minda
[16:17:02] <cherim___> But forgot what book it was
[16:17:09] <rubiksdream> oh nice
[16:17:23] <rubiksdream> damn, well if you remember id like to know if you dont mind :D
[16:17:28] <cherim___> Wanted to read about Schramm-Loewner evolution as mathematicians view it
[16:17:29] <rubiksdream> would be really useful for me
[16:17:49] *** Joins: oxum (~oxum@106.203.222.191)
[16:18:45] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[16:19:00] <rubiksdream> initially I thought |f'(0)| is still pretty arbitrary, but in fact its bounded above by some number related to the hyperbolic metric of the region f maps onto..
[16:19:05] <rubiksdream> so that is pretty not arbitrary
[16:19:22] *** Quits: xff0x (~xff0x@2001:1a81:525a:ea00:a07c:46ec:2ccb:d36d) (Ping timeout: 240 seconds)
[16:19:27] <rubiksdream> very much shape dependent
[16:20:29] *** Joins: xff0x (~xff0x@2001:1a81:525a:ea00:2bea:6319:b748:f3db)
[16:22:32] *** Joins: vaporatorius__ (~vaporator@13.red-176-84-40.dynamicip.rima-tde.net)
[16:24:53] <gas51627> for the following statement can someone tell me if there is any difference between those formulas and which one describes it more precisely: y will tutor someone who got a D
[16:24:53] <gas51627> âˆƒz(z got D and y will teach z)
[16:24:53] <gas51627> âˆƒz(z got D â†’ y will teach z)
[16:25:18] *** Quits: vaporatorius (~vaporator@user/vaporatorius) (Ping timeout: 252 seconds)
[16:26:24] <gas51627> as I see it the first one makes it mandatory that there is a z who got D for the statement to be true, while the second one can be true if there are no z's who got D's at all
[16:28:09] *** Joins: dextaa2 (~dan@p4fdc6bf8.dip0.t-ipconnect.de)
[16:28:24] <gas51627> even for the second one to be true it's enough for one z to not get D for the whole formula to be true (even no z who got D is taught by y)
[16:28:25] *** Joins: r-g (~r-g@195-154-105-157.rev.poneytelecom.eu)
[16:28:32] *** Quits: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[16:30:20] *** Joins: oxum (~oxum@106.203.222.191)
[16:31:00] <gas51627> so the second must be not true
[16:31:07] <gas51627> I mean not the correct formula
[16:32:07] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 246 seconds)
[16:32:25] <gas51627> but I wonder if the statement "y will tutor someone who got a D" mean that there should be someone who got D or it is more of a statement "if someone got a D, then y will tutor someone who got a D"
[16:32:57] <int-e> gas51627: yes, if that's the statement you want then the first formula is the correct one
[16:32:59] <Inline> if someone got a D, then y will totor someone who got a D
[16:33:11] <Inline> if someone, then y will totor someone
[16:33:12] <int-e> hmm
[16:33:22] <Inline> s/totor/tutor/
[16:33:42] <int-e> gas51627: sorry I only read the first part of your last message
[16:33:48] <Inline> given that y will really tutor someone
[16:34:29] <int-e> "if someone got a D, then y will tutor someone who got a D" is indeed captured by âˆƒz(z got D â†’ y will teach z), though that is somewhat subtle.
[16:34:33] <gas51627> it's like having someone who will tutor z who got D forces that there is a z who got D
[16:34:36] <Inline> if there no one with D and y will not teach anyone the implication is still true
[16:35:07] <int-e> the direct translation would be âˆƒz(z got D) â†’ âˆƒz(z got D and y will teach z)
[16:35:08] <Inline> F -> F (true)
[16:35:32] <int-e> but you can use the same z for both existentials and then it simplifies to âˆƒz(z got D â†’ y will teach z)
[16:35:38] <gas51627> int-e: this one: âˆƒz(z got D â†’ y will teach z) is not ok
[16:35:43] <int-e> ?
[16:35:48] <int-e> Actually, no, it doesn't
[16:36:06] <gas51627> imagine there is one z who didn't get D
[16:36:06] <int-e> I'm confusing myself here. âˆƒz(z got D â†’ y will teach z) is true if there's any student who didn't get a D.
[16:36:13] *** Quits: tempate99 (~tempate99@90.167.166.138) (Ping timeout: 246 seconds)
[16:36:19] <gas51627> yes
[16:36:22] <Inline> yes
[16:36:31] <int-e> So it's *not* the same as âˆƒz(z got D) â†’ âˆƒz(z got D and y will teach z)
[16:36:50] <Inline> heh
[16:37:11] <gas51627> no that's bad as well
[16:37:14] <gas51627> but anyway
[16:37:34] <int-e> gas51627: *that* is "if someone got a D, then y will tutor someone who got a D"
[16:37:34] <gas51627> what I am asking is that what does the original statement" y will tutor someone who got a D " mean?
[16:38:13] <gas51627> because if I read it straightforward, it makes it necessary that there is someone who got D
[16:38:19] <Inline> yah
[16:38:24] <Inline> so AND
[16:38:28] <int-e> gas51627: âˆƒz(z got D and y will teach z)  is what you want for that.
[16:38:33] <Inline> not IF
[16:38:47] <gas51627> I mean how can you tutor someone who got a D if noone got D
[16:38:56] <int-e> you can't
[16:39:00] <gas51627> but it feels a bit dumb
[16:39:02] <int-e> so the statement will be false
[16:39:09] <Inline> welp, you can but then it  just a reduction
[16:39:23] <int-e> If y tutors someone who got a D, then clearly someone got a D.
[16:39:26] <Inline> as in no one got a D so y tutors someone
[16:39:48] <gas51627> int-e: you are right
[16:40:02] <gas51627> so basically it is implied in the statement that someone got D
[16:40:40] <gas51627> but the whole sentence does not make sense then
[16:40:52] <int-e> "the whole sentence" <-- which one?
[16:41:03] <gas51627> "if nobody failed the test, then everybody who got A will tutor someone who got a D"
[16:41:23] <gas51627> I mean, I understand by analyzing it that it's what it should be
[16:41:32] <Inline> F -> T (true)
[16:41:36] <gas51627> but it still feels "abnormal"
[16:41:40] <Inline> yes
[16:41:52] <Inline> falsehood can imply anything
[16:42:04] <int-e> gas51627: you can construct test results that make this condition unsatisfiable... like, everybody gets an A.
[16:42:21] <int-e> (with at least one student)
[16:42:22] <gas51627> yeah exactly
[16:42:29] *** Joins: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de)
[16:42:38] <int-e> but you can still write it down as a formula in predicate logic
[16:42:43] *** Joins: Kaylah (~Kaylah@ptr-ekg3bnx6fmspeq0r7oh.18120a2.ip6.access.telenet.be)
[16:42:43] <gas51627> nobody failed the test, but nobody got D
[16:43:10] <gas51627> that's the worst part is logic for me
[16:43:25] <gas51627> that math logic does not always follow the "normal" logic
[16:44:12] <int-e> Nah, it's pretty normal. We consider statements and then ask whether they're false or true.
[16:45:09] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:45:22] *** Quits: red_owl (~red_owl@p5b24307d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:45:54] <gas51627> what I mean, that if someone would tell ""if nobody failed the test, then everybody who got A will tutor someone who got a D" then you would think it's also OK if noone got D
[16:45:58] <Inline> as long as the consequent is true all is true
[16:46:12] <int-e> It may be more honest to phrase them as questions. Then again, people make false claims all the time. "All primes are odd." -- "But 2 is prime and not odd." - "Oops, I guess I was wrong."
[16:46:29] <Inline> as long as you are tutoring it doesn't matter if someone got a D or not
[16:46:55] <gas51627> so you will sort of implicitly add to the statement "if there is anyone who got D"
[16:47:05] <riv> ok but isn't 2 kind of odd that it's the only even prime...
[16:47:05] <Inline> you are tutoring and if that's true then you are tutoring anyone irrespective of their grade
[16:47:07] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[16:47:07] <gas51627> but according to math logic there have to be someone who got D
[16:47:11] <int-e> gas51627: it's okay if nobody got an A nor a D.
[16:47:24] <int-e> or if somebody fails...
[16:47:52] <Inline> well, how do you say it this is not constraint logic not ?
[16:48:39] <gas51627> int-e: if nobody gets A - that is not a problem. The statement is fine with it. What I am having trouble - is that it forces there to be someone who got D (if there is at least one person who got A))
[16:48:48] *** Joins: red_owl (~red_owl@p5b23e738.dip0.t-ipconnect.de)
[16:48:54] <gas51627> and that's definitely not what anyone would mean saying it in real life
[16:49:07] <Inline> constraint logic would be different in which you'd exclude some cases
[16:49:14] *** Quits: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[16:50:05] <Inline> so it's a second order on top of falsehood can imply anything (and you want to exclude that)
[16:50:09] <int-e> gas51627: Anyway, yes, formal logic *is* different from how we treat statements in informal discourse. This tends to be most notable for implications. "0 = 1 implies that the sky is green with pink polka dots"...
[16:50:41] <PlanckWalk> "1 = 2 implies that I am the Pope" is a famous one
[16:50:47] <PlanckWalk> (With proof)
[16:50:47] <gas51627> yeah
[16:51:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:51:16] <PlanckWalk> "I and the Pope are two people.  Since 1 = 2, the Pope and I are one.  Therefore I am the Pope."
[16:52:27] <int-e> https://en.wikipedia.org/wiki/Drinker_paradox is a long time favorite of mine
[16:53:22] <Inline> lol
[16:54:36] <Inline> so someone got a D is a restriction of anyone
[16:55:03] <Inline> anyone subsumes someone got a D
[16:55:45] <Inline> so if no one got a D then there's the rest of anyone/(without a D)
[16:55:54] <int-e> gas51627: Things like that do happen in real life though. It's perfectly normal to make a *plan* like "after the test, we'll pair up students who got an A with students who got a D for tutoring" and then realize after the test that this isn't possible, and adjust the plan.
[16:56:42] <int-e> But there's a time component to this, and unknowns, neither of which are captured in precicate logic.
[16:57:17] <int-e> (without some serious effort involving special predicates talking about time and choices)
[16:57:49] <PlanckWalk> riv: Well, "even" just means "divisible by 2", so yuo're saying "isn't it odd that 2 is the only prime divisible by 2?"
[16:58:10] <int-e> yes, 2 is the odd prime.
[16:58:11] <PlanckWalk> But now that doesn't look so odd because you can substitute any other prime for 2 and still get a true statement.
[16:58:33] <gas51627> the drinker paradox seems a nonsense to me
[16:58:35] <PlanckWalk> "Isn't it odd that 997 is the only prime divisible by 997?"
[16:58:39] <gas51627> it's clearly false
[16:58:49] <gas51627> if there are 2 person in the pub, one is drinking another is not
[16:58:52] <gas51627> then it's false
[16:58:53] <PlanckWalk> Yes, it's clearly false because the pub might be empty.
[16:59:08] <int-e> gas51627: the implication of formal logic has *nothing* to do with causality
[16:59:30] <int-e> gas51627: and the drinker's paradox is one of the best examples I know of to drive this point home
[16:59:37] <gas51627> ah you are right
[16:59:40] <PlanckWalk> It is a pretty good example yes
[16:59:44] <gas51627> if at least one person not drinking
[16:59:47] <gas51627> then it's true
[16:59:54] <gas51627> and if everyone is drinking it's also true
[16:59:55] <gas51627> haha
[17:01:03] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:01:04] <gas51627> anyway big thanks
[17:02:03] *** Joins: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de)
[17:02:03] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:02:10] <gas51627> it will probably never become easy, but it becomes more clear for some time
[17:03:21] <riv> PlanckWalk, isn't it even that 3 is the only triple that's a triple?
[17:03:27] <riv> prime thats a triple*
[17:05:22] <PlanckWalk> Well, "even" can also be interpreted to mean "consistent, free from irregularity".  So yes.
[17:05:44] <riv> :D
[17:07:55] <gas51627> maybe there is one more thing you could help me with: if anyone can do it, Jones can
[17:07:56] <gas51627> âˆƒx(x can do it)â†’Jones can do it
[17:07:56] <gas51627> let D(x,y) be x can do y
[17:07:56] <gas51627> âˆƒxD(x,y)â†’D(J,y)
[17:07:56] <gas51627> or should it be
[17:07:57] <gas51627> âˆ€y(âˆƒxD(x,y)â†’D(J,y))
[17:08:31] <gas51627> I mean, do I need to bound y, or it's ok to leave it unbound
[17:09:05] <PlanckWalk> I think you mean âˆ€x(x can do it -> Jones can do it)
[17:09:59] <PlanckWalk> But it's hard to tell because English is gross.
[17:10:35] <PlanckWalk> I guess yours works too with a different parsing
[17:11:07] <int-e> âˆƒxD(x,y)â†’D(J,y) is equivalent to âˆ€x(D(x,y)â†’D(J,y))
[17:11:29] <PlanckWalk> Yeah, that's true
[17:11:36] *** Joins: mornfall (~mornfall@user/mornfall)
[17:12:18] <gas51627> int-e: equivalent? how do you mean
[17:12:26] <gas51627> I mean I understand what equivalent means
[17:12:35] <gas51627> it's just why those two are equivalent
[17:12:36] <int-e> gas51627: you need the âˆ€y to make a sentence (a closed formula)
[17:13:07] <gas51627> so is P(x) not a valid statement?
[17:13:37] <PlanckWalk> It's a statement with a free variable
[17:13:44] <PlanckWalk> Its truth depends upon what x is
[17:14:01] *** Quits: arseniiv_ (~arseniiv@94.41.6.151.dynamic.ufanet.ru) (Read error: Connection reset by peer)
[17:14:03] *** Joins: Franciman (~francesco@openglass.it)
[17:14:07] <Franciman> Hi all
[17:14:14] <Franciman> I am learning about blow-ups
[17:14:15] <int-e> a formula, also called a property (sometimes a predicate, but that's confusing when you're in predicate logic)
[17:14:18] <Franciman> of algebraic complex curves
[17:14:19] <PlanckWalk> Like "that person is over 18" depends upon who you mean by "that person"
[17:14:24] *** Joins: arseniiv_ (~arseniiv@94.41.6.151.dynamic.ufanet.ru)
[17:14:39] <Franciman> I don't quite understand how to compute the blowup of algebraic curves
[17:15:04] <Franciman> it is hard to compute the closure of the inverse image of the curve minus the singular point
[17:15:47] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Remote host closed the connection)
[17:17:13] <int-e> gas51627: as for why... âˆƒxD(x,y)â†’D(J,y)  =  Â¬âˆƒxD(x,y)âˆ¨D(J,y)  =  âˆ€xÂ¬D(x,y)âˆ¨D(J,y)  =  âˆ€x(Â¬D(x,y)âˆ¨D(J,y))  =  âˆ€x(D(x,y)â†’D(J,y))  breaks it down into smaller steps.
[17:18:01] <gas51627> I understand, what I don't get is the idea that all free variables "must be" quantified
[17:18:55] <gas51627> another thing: P(x) -> Q and âˆƒxP(x) -> Q seem to be totally equivalent to me
[17:19:19] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[17:19:52] <riv> the first is missing a quantifier for x
[17:19:55] <int-e> âˆ€x(P(x)â†’Q) and âˆƒxP(x)â†’Q are equivalent.
[17:20:00] <riv> so x is a free variable
[17:20:09] <riv> often in math we implicitly quantify things
[17:20:22] <riv> but formally you need to have all free variables quantified
[17:20:32] <gas51627> I understand what a free variables is, what I don't get is why all variables should be quantified
[17:20:43] <riv> if they are not quantified you just have a free variable
[17:20:50] <gas51627> int-e: exactly, why is âˆ€ not implied?
[17:20:56] <riv> there aren't logical proof rules to deal with that
[17:20:57] <int-e> it's a formal requirement for a formula to be a sentence.
[17:21:03] <int-e> gas51627: no, it's not.
[17:21:20] <riv> we know how to prove 'forall x, P(x)' and we know how to prove 'exists x, P(x)'
[17:21:23] <gas51627> int-e: i mean, if I write P(x) , i imply all x
[17:21:26] <riv> we don't have any way to prove 'P(x)'
[17:21:46] <Inline> heh
[17:21:55] <riv> if by P(x) we are just doing shorthand, and it really means 'exists x, P(x)' then you can use the exists proof rule
[17:22:12] <gas51627> riv: hm
[17:22:19] <riv> do you get that formally we need all quantifiers explicitly written out
[17:22:28] <riv> but informally, we can be implicit and save time by not writing them
[17:22:33] <int-e> gas51627: You don't want to leave the meaning of that free variable to the context.
[17:23:02] <Inline> but then you have to make it explicit that P(x) means exists x P(x) at least once in your text
[17:23:05] <gas51627> riv: actually I don't get. So far today is the first time I heard that all free variables should be quantified
[17:23:12] <Inline> at the beginning or so
[17:23:17] <riv> ok
[17:23:30] <gas51627> ok, so basically by adding quantifiers, we making things explicit
[17:23:36] <hanif> what's the question?
[17:23:40] *** Joins: mcfrdy (uid507892@user/mcfrdy)
[17:23:49] <Inline> well what's the opposite of a free variable ?
[17:23:53] <riv> a bound variable
[17:24:08] <int-e> Inside proofs, there are usually different kind of free variables: "arbitrary but fixed" values that can later be universally quantified, and other fixed values, usually witnesses of existential statements. (If you have âˆƒxP(x), then you can get a y with P(y) from that).
[17:24:37] <int-e> This is okay, because in the context of the proof you'll always know which kind of variable you have, for each free variable.
[17:24:41] <Inline> so with a bound variable you'd have no way of switching from x to y
[17:24:45] <int-e> Take the context away and you have a problem.
[17:24:54] <Inline> so you loose substitution
[17:25:11] <int-e> P(x) has no meaning unless you know what x is.
[17:25:14] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[17:25:18] <Inline> ok
[17:25:28] <gas51627> int-e: ok, you have a statement it will rain on monday
[17:25:40] <gas51627> but then you say, I want to make it a statement about any day
[17:25:42] <gas51627> R(x)
[17:26:00] <gas51627> where x can be any day (universe is all days in the future)
[17:26:08] *** Quits: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[17:26:11] <int-e> No.
[17:26:44] *** Quits: Pollion (bombar@zamok.crans.org) (Ping timeout: 252 seconds)
[17:26:54] <int-e> Sorry, it's just against the rules of formal logic.
[17:27:04] <gas51627> what is?
[17:27:17] <int-e> Having free variables in sentences.
[17:27:26] <Inline> so is a bound variable not a  constant ?
[17:27:30] <int-e> The *definition* of a sentence is that it's a closed formula.
[17:27:41] <gas51627> ok, then I have not learned it yet
[17:28:01] *** Joins: amirouche (~amirouche@user/amirouche)
[17:28:21] <gas51627> but you have such a things as truth sets
[17:28:27] <int-e> There are reasons for that (the distinction between arbitrary but fixed variables (also known as Skolem variables) and the other fixed ones.
[17:28:40] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[17:28:44] <gas51627> and you use truth sets for the statements such as P(x)
[17:28:44] *** Joins: cheater (~Username@user/cheater)
[17:28:45] <Inline> aha
[17:28:57] <int-e> It's also at odds with mathematical convention that often leaves quantifiers implicit ("if p is a prime larger than 2, then p is odd").
[17:29:02] <gas51627> and quantifying a statement makes it a statement about the truth set
[17:29:10] <gas51627> * of that statement
[17:29:34] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[17:29:45] <gas51627> so basically P(x) and âˆ€xP(x) are two different statements
[17:29:54] <gas51627> but it does not mean that P(x) is invalid
[17:30:04] <int-e> So there is another discrepancy between the rules of formal logic and how mathematical texts are written on the common, less formal, level.
[17:30:16] <Inline> it just means that P(x) is not well formed maybe
[17:30:24] <gas51627> P(x) has a truth set, âˆ€xP(x) has a truth value
[17:30:45] <gas51627> yeah sorry, It's all a bit confusing
[17:30:46] <int-e> P(x) expresses a property of x.
[17:31:00] <gas51627> ok
[17:31:21] <int-e> you can capture it as a set (of all values for x that satisfy the property), sure.
[17:31:22] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[17:31:29] <gas51627> yes
[17:32:24] <gas51627> let think from another point, what is the truth set of the statement without variables?
[17:32:32] <gas51627> just P
[17:33:02] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[17:33:25] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[17:34:06] <gas51627> yeah, you see here lies the problem I have - what is the difference between truth value and a truth set. In the beginning I thought that truth set is more like truth value but for different values of x. But it seems that it's a completely different thing.
[17:34:30] <gas51627> Because truth value of P may be either true or false. But in a truth set the value is always true
[17:35:32] <int-e> gas51627: no, P(x) is false if x isn't in the set of objects that satisfy P.
[17:36:01] <gas51627> yeah I understand that
[17:36:13] <gas51627> but P can be true or false, right
[17:36:22] <gas51627> but for some reason P(x1) may only be true
[17:36:27] <gas51627> that doesn't make sense
[17:36:58] <gas51627> or maybe the truth set says about the "current" value
[17:37:01] *** Joins: oxum (~oxum@106.203.222.191)
[17:37:10] <gas51627> and truth value says about "possible" value
[17:37:38] <gas51627> how would the truth table for P(x) look like
[17:38:22] <int-e> There's something non-trivial happening here, btw. There's the formula, P(x), which has a free variable, x. And then there's the semantics of that formula (which depends on a model). That semantics can be captured by the set of values of x that make P(x) a true statement. So... in order to fully make that distinction we'd have to talk about models and define semantics by some structural recursion...
[17:38:28] <int-e> ...on the formula. (And you /will/ most likely do that sooner or later.)
[17:38:41] <rubiksdream> you also have in any structure of the language S, S|=P(x) iff S|=forallx.P(x),
[17:39:10] <rubiksdream> so in some sense P(x) and forallx.P(x) are pretty similar
[17:41:56] <gas51627> int-e: is there an introduction to that thing?
[17:42:12] <int-e> gas51627: when talking about these things, we very often don't state whether we're talking about the syntactic level (P(x) as a formula) or the semantic level... even though it's a big source of potential confusion.
[17:43:06] *** Parts: Franciman (~francesco@openglass.it) (WeeChat 2.3)
[17:43:07] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[17:43:24] *** Joins: oxum (~oxum@106.203.222.191)
[17:44:22] *** Joins: Pollion (bombar@zamok.crans.org)
[17:45:13] <gas51627> well, so far things are kind of simple but only unitil you start thinking about them and then you spend all days thinking about some problem which you don't really understand what the problem is
[17:45:31] <gas51627> it's a vague feeling, that you are missing some crucial info
[17:46:13] <gas51627> so that all pieces could fall in their places
[17:46:47] <gas51627> and what's worse it's almost impossible to explain what the actual problem is
[17:49:54] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[17:50:09] *** Joins: oxum (~oxum@106.203.222.191)
[17:50:32] *** Joins: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de)
[17:51:14] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[17:52:57] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:8de0:a840:44e1:eebc)
[17:55:35] <tolarz> i think it's pretty basic to never use something that wasn't declared beforehand
[17:55:43] <tolarz> same holds for writing `P(x)` without introducing x befopre
[17:55:45] <tolarz> *before
[17:56:02] <tolarz> of course the whole conversation before (as I've skimmed now) is way deeper
[17:56:06] <tolarz> but as a rule of thumb, this would suffice
[17:57:41] <tolarz> gas51627 | Because truth value of P may be either true or false.
[17:57:43] <tolarz> btw
[17:57:48] <tolarz> a formula may neither be provable nor refutable
[17:58:19] <tolarz> this whole confusion just stems from mingling syntax and semantics, something which first semester courses always do (I hate this)
[17:58:48] <rubiksdream> i think the mingling is important in first semester courses
[17:59:02] <rubiksdream> its hard to make progress otherwise
[17:59:12] *** Joins: phillbush (~phillbush@user/phillbush)
[17:59:21] *** Joins: Guest58 (~Guest58@103.125.235.22)
[18:00:29] <gas51627> rubiksdream: and here I am, progressing 70 pages for a few months
[18:00:31] <gas51627> ...
[18:00:51] *** Parts: Guest58 (~Guest58@103.125.235.22) ()
[18:01:44] <gas51627> not complaining or anything, but at least for me it would be simpler if things were clearly explained without shortcuts
[18:01:57] <gas51627> because I feel that something is not right and try to find out what it is
[18:02:04] <rubiksdream> yeah, it may just be your course is truly not explaining things well
[18:02:06] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:02:21] <rubiksdream> if its a university course you should ask the instructor
[18:02:21] <gas51627> and because I don't know what is wrong, it cost me enormous effort to figure it out
[18:02:26] *** Parts: mra90 (~Martin@192.198.151.54) (Leaving)
[18:02:29] <gas51627> no, I just study a book
[18:02:34] <gas51627> on my own
[18:03:06] <gas51627> "How to proove it"
[18:03:16] *** Joins: AskerX (~Guest58@103.125.235.22)
[18:05:24] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[18:05:37] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[18:05:49] <int-e> tolarz: you have a very interesting bootstrapping process to go through... the language for defining the semantics of predicate logic is set theory, and you need a firm grasp on logical connections, quantifiers, predicates and functions to do that with sufficient level of confidence.
[18:05:58] <rubiksdream> btw, this is still open (well i haven't thought about it since i last asked about it) 'Are the structures <N,x |-> x^3> and <N,x|->x^2> elementarily equivalent'?
[18:06:31] <int-e> tolarz: so... this is worryingly close to "in order to understand predicate logic, you first have to understand predicate logic."
[18:07:00] <gas51627> haha
[18:07:20] <rubiksdream> its like a very weak set theory isnt it
[18:07:28] <rubiksdream> in my mind its basically 'theory of sequences'
[18:08:11] <rubiksdream> but actually not really, to define a model (L-structure) you formally need to be working in some form of set theory
[18:08:29] <rubiksdream> i agree its pretty circular
[18:08:54] <int-e> rubiksdream: they're isomorphic, so yes.
[18:09:31] <rubiksdream> so maybe thats what 'understanding math' means
[18:09:34] <int-e> rubiksdream: you can map 0 to 0, 1 to 1, then fix a bijection between the non-squares and the non-cubes, and fill in the rest
[18:09:56] <rubiksdream> wait really
[18:10:22] <rubiksdream> hmm
[18:11:51] <gas51627> so, should be âˆ€y in front of âˆƒxD(x,y)â†’D(J,y) ?
[18:12:09] <gas51627> for now I will just remember it as an axiom
[18:12:26] <int-e> gas51627: to make it a sentence rather than a property of x, yes.
[18:12:36] <gas51627> like if you say all variables must be quantified - ok, I don't understand why or how, I will just do it
[18:12:50] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Ping timeout: 244 seconds)
[18:12:57] *** Joins: coeus (~coeus@246.sub-174-205-174.myvzw.com)
[18:12:57] <gas51627> ok got it thanks
[18:13:22] <int-e> sorry, a property of y
[18:13:52] <gas51627> by sentence you mean statement, right?
[18:14:04] <gas51627> and a formula
[18:14:59] <rubiksdream> int-e oh yeah.. the 'rest' really does fill itself in..
[18:15:01] <rubiksdream> lol
[18:15:12] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[18:15:13] <rubiksdream> its determined after you fix the bijection
[18:18:50] *** Joins: chomwitt (~Pitsikoko@ppp-94-67-202-202.home.otenet.gr)
[18:19:09] <rubiksdream> wou
[18:19:23] <rubiksdream> wouldnt this also work for $x^m$ , $x^n$? for any m,n?
[18:19:37] <rubiksdream> doesnt seem like we used anything special about cubes/squares
[18:20:01] *** Quits: red_owl (~red_owl@p5b23e738.dip0.t-ipconnect.de) ()
[18:21:06] <int-e> rubiksdream: yes, indeed (apart from exponent 0)
[18:21:11] <int-e> and 1. oops.
[18:21:58] <int-e> (exponent 0 destroys injectivity; exponent 1 gives you too many fixed points)
[18:22:49] <rubiksdream> ah , yes sure
[18:23:41] <rubiksdream> now im tempted to see if it extends to polynomials with natural coefficients of positive degree
[18:23:46] <rubiksdream> it feels like it should
[18:25:23] <Z-module> those polys certainly act as strictly increasing functions on N
[18:25:48] <rubiksdream> right, more generally ,strictly increasing
[18:29:04] <int-e> You need to watch the number of fixed points, and you need that the difference of f(x) - x is unbounded (so that you start an infinite number of chains x -> f(x) -> f^2(x) -> ...)
[18:29:11] *** Joins: qbt (~edun@user/edun)
[18:29:14] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[18:30:24] *** Quits: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net) (Quit: leaving)
[18:30:38] *** Joins: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net)
[18:30:59] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[18:31:08] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-09dd-4ce8-9138-5b64.res6.spectrum.com)
[18:32:45] *** Joins: oxum (~oxum@106.203.222.191)
[18:37:46] *** Quits: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[18:38:17] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[18:38:30] *** Joins: oxum (~oxum@106.203.222.191)
[18:40:49] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:8de0:a840:44e1:eebc) (Ping timeout: 246 seconds)
[18:41:25] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[18:42:30] *** Joins: oxum (~oxum@106.203.222.191)
[18:43:57] *** Joins: mrdata (~mrdata@user/mrdata)
[18:47:02] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[18:47:37] *** Quits: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net) (Quit: FragmentedCurve)
[18:48:12] *** Joins: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net)
[18:48:56] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[18:51:54] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[18:52:23] *** Quits: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net) (Client Quit)
[18:52:39] *** Joins: FragmentedCurve (~FC@pool-173-68-82-134.nycmny.fios.verizon.net)
[18:52:59] *** Joins: node1 (~node1@user/node1)
[18:53:52] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[18:54:06] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[18:54:24] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[18:55:28] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:8de0:a840:44e1:eebc)
[18:56:19] *** Joins: oxum (~oxum@106.203.222.191)
[18:56:27] <dextaa2> hi all
[18:56:39] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:56:54] *** Joins: aruns (~aruns@94.12.74.9)
[18:56:54] *** Joins: phao (~phao@2804:d45:8e7a:de00:ad59:61db:f854:9224)
[18:57:05] <aruns> Hi, going through https://i.imgur.com/UUspjYl.png in my introductory calculus book
[18:58:23] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[18:58:35] *** Joins: oxum (~oxum@106.203.222.191)
[18:59:58] <aruns> Trying to work out how they get the interval notation 0 < | x - 3 | < 2
[19:00:12] <aruns> Presume the 0 is because you can't have the point as a value
[19:00:47] <int-e> right
[19:01:43] <int-e> So you have 3 - 2 < x < 3 + 2 *and* x != 3.
[19:03:18] *** Joins: Czernobog (~Czernobog@user/czernobog)
[19:04:59] *** Quits: phao (~phao@2804:d45:8e7a:de00:ad59:61db:f854:9224) (Quit: Leaving)
[19:07:29] <dextaa2> I have a question: Let K be the class of cliques G=(V,E). Show the following problem is decidable: Let phi in FO({E}) be a sentence, is there a clique G that satisfies phi?
[19:07:47] <dextaa2> can this be done with quanitifier elimination?
[19:08:43] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[19:08:48] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[19:09:22] *** Joins: gareppa (~gareppa@user/gareppa)
[19:10:38] <aruns> Thanks int-e
[19:10:59] *** Joins: oxum (~oxum@106.203.222.191)
[19:11:40] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[19:11:58] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:13:07] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[19:13:14] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[19:13:20] *** Joins: oxum (~oxum@106.203.222.191)
[19:15:02] <gas51627> int-e: can you have a formula âˆ€n(if n>xâ†’n > y) where the universe of discourse is R
[19:15:16] <gas51627> with 2 free variables
[19:15:22] <gas51627> or is it not valid?
[19:16:59] <gas51627> formula/logical form of the statement
[19:17:28] *** Joins: notzmv (~zmv@user/notzmv)
[19:19:30] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[19:19:45] *** Quits: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[19:20:01] *** Joins: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[19:20:15] <riv> didn't we cover free variables?
[19:20:33] *** Joins: oxum (~oxum@106.203.222.191)
[19:22:36] *** Quits: deavmi (~tbk@user/deavmi) (Read error: Connection reset by peer)
[19:23:07] <gas51627> no, no, in this case x and y are free variables
[19:23:10] *** Joins: deavmi (~tbk@user/deavmi)
[19:23:16] <riv> ?
[19:23:18] <gas51627> so there are no implicit assumptions
[19:23:43] <gas51627> I explicitly state them as free variables
[19:23:49] <riv> lol
[19:24:36] <gas51627> basically, the excercise is to write a logical form of the statement and name free variables
[19:24:54] <gas51627> so I am just asking if I am making a mistake by writing âˆ€n(if n>xâ†’n > y)
[19:25:12] <gas51627> (as it does not have every variable quantified (as it shouldn't))
[19:25:48] *** Joins: oxide (~lambda@user/oxide)
[19:27:37] *** Joins: xse (~xse@user/xse)
[19:30:05] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[19:30:20] *** Joins: oxum (~oxum@106.203.222.191)
[19:31:09] *** Joins: dez (uid92154@user/dez)
[19:32:26] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[19:33:18] *** Quits: oxum (~oxum@106.203.222.191) (Remote host closed the connection)
[19:33:32] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[19:35:11] *** Joins: oxum (~oxum@106.203.222.191)
[19:35:55] *** Joins: zrk (~zrk@2a02:168:5223:fc:30ae:4d48:eb3b:1a69)
[19:36:52] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[19:37:16] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:38:06] *** Joins: LiftLeft (~LiftLeft@154.21.114.114)
[19:38:30] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Ping timeout: 272 seconds)
[19:46:14] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 252 seconds)
[19:47:45] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:53:51] <riv> https://www.jaapsch.net/puzzles/pgl25.htm here's a proof about the exotic S5 in S6 wrt the 6 corners in the rubiks cube subset <R,U>
[19:56:31] <riv> https://math.stackexchange.com/questions/1288812/exotic-maps-s-5-to-s-6 a nice construction of S5 acting on its 6 Sylow 5-sugroups
[19:57:24] <Z-module> exotic in what sense?
[20:00:02] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 255 seconds)
[20:00:31] <riv> it's just called that
[20:01:04] <riv> the Outer Automorphism of S_6
[20:02:07] <riv> you can find S_5 <= S_6 via point stabilizers, but there is also an S_5 subgroup of S_6 that is not a point stabilizer
[20:02:19] <riv> and it is called exotic for that reason
[20:02:29] <riv> it has 6 conjugates
[20:02:50] <riv> the action of S_6 on those conjugates gives an outer automorphism
[20:04:51] <loopspace> Hah I just explored outer autos of S_6 about 2 hours ago. Small world
[20:04:56] *** Quits: Arcorann (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net) (Ping timeout: 252 seconds)
[20:05:02] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:06:50] <riv> no way loopspace
[20:07:02] <riv> what did you find?
[20:07:04] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[20:07:22] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:07:23] <riv> I have a very nice construction using a colored graph
[20:07:33] <riv> (not that I came up with it)
[20:08:49] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[20:09:07] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:09:43] <loopspace> riv: was just working through rotman's treatment where he proves the existence of outer-autos of S_6, shows that in fact they comprise half of the autos, and provides on of order 2
[20:10:16] <loopspace> *one
[20:10:22] <riv> that's good!
[20:11:23] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[20:11:40] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:12:29] <loopspace> riv: forced me to do lots of counting, and pull together some concepts. An interesting exercise came up along the way: https://usercontent.irccloud-cdn.com/file/BEzu7Ku4/image.png
[20:13:15] <riv> oh i think that i did that one and found it very ahrd
[20:13:17] <riv> hard*
[20:13:28] <riv> I probably could not do it again
[20:13:42] <loopspace> The weird copy transitive copy of S_5 in S_6 without transpositions was also interesting
[20:13:50] <riv> yeah
[20:14:06] <riv> and this is all completely unique to S_6
[20:14:17] <loopspace> That exercise wasn't too bad once I recollected all the appropriate definitions, only one real choice. But something about it seemed interesting
[20:14:28] *** Joins: leib (~leib@2409:4061:405:275b:3d7d:739c:79d9:7ea7)
[20:14:49] <Z-module> loopspace: I prefer to state that as "the normalizer operation is idempotent on Sylow subgroups", but yeah.
[20:14:52] <loopspace> riv: I see. Haven't got that far yet, just at the part where he's showing that any exist at all
[20:14:56] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[20:15:14] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[20:15:15] <loopspace> Z-module: yeah, seems to be a well-known exercise/fact.
[20:15:17] <Z-module> oh wait, this is stronger, I guess
[20:16:00] <Z-module> reminds me a bit of the stronger form of Sylow III
[20:16:15] *** Quits: leib (~leib@2409:4061:405:275b:3d7d:739c:79d9:7ea7) (Client Quit)
[20:17:05] <loopspace> For some reason, Rotman didn't number the Sylow theorems
[20:17:27] <loopspace> Here's the outer-auto I mentioned, BTW https://usercontent.irccloud-cdn.com/file/BFq7MpmI/image.png
[20:18:42] *** Joins: econo (uid147250@user/econo)
[20:19:21] <Z-module> namely: If the p-Sylows of finite G have size p^n, then for any nonnegative integers  m <= t <= n, and any fixed subgroup H of order p^m, the # of distinct subgroups of order p^t that contain H is = 1 (mod p).   Taking m = 0, t = n gives the usual Sylow III.
[20:20:46] <loopspace> https://usercontent.irccloud-cdn.com/file/x8ZAlISP/image.png
[20:21:55] *** Joins: tempate99 (~tempate99@90.167.99.55)
[20:23:56] <Z-module> (that's also a special case of what I jsut cited)
[20:24:21] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[20:25:54] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:26:16] *** Quits: Dotz0cat (~Dotz0cat@h179.194.186.173.dynamic.ip.windstream.net) (Ping timeout: 246 seconds)
[20:28:56] <Z-module> by the way, loopspace, though this is kind of silly and pointless--did you know that every infinite group *also* contains maximal p-subgroups for each prime p (assuming AC), but that those maximal p-subgroups, far from being necessarily conjugates of each other, can even have different cardinalities?
[20:30:31] <loopspace> Hah, that's curious. Haven't explored the non-finite cases too deeply so far. Mainly been servicing the project of basic grasp of extensions/group cohomology
[20:32:15] <Z-module> sure
[20:32:20] *** Quits: chomwitt (~Pitsikoko@ppp-94-67-202-202.home.otenet.gr) (Remote host closed the connection)
[20:35:54] *** Joins: kmh (~kmh@p200300df5f30ad00c00521c3c33cf4ab.dip0.t-ipconnect.de)
[20:39:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[20:40:17] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:41:47] <Z-module> (weird how Sylow III has Sylow I as an immediate corollary, but most places still spell out all three anyway)
[20:42:43] <Z-module> (I is: some p-Sylow exists.  II is: all of them are conjugate.   III is: the # of distinct p-Sylows = 1 (mod p) )
[20:45:09] <Z-module> Now that II can't be extended to smaller p-subgroups:  For each n >= 3, there exist finite G having a non-conjugate pair of subgroups of order p^1, and also a non-conjugate pair of order p^2, ..., and also a non-conjugate pair of order p^(n-1)
[20:45:12] <Z-module> Note* that
[20:45:37] <biberao> hiiiiii
[20:46:17] <loopspace> rotman presents II and III as "Sylow" and then gives a corollary https://usercontent.irccloud-cdn.com/file/n9gi39En/image.png
[20:46:38] <Z-module> oh right
[20:48:18] <Z-module> well, you could leave that out and just separate do a useful/basic theorem: If G is a finite p-group, of order p^n, then it has normal subgroups of all possible orders  (all p^j with j <= n
[20:48:19] <Z-module> )
[20:48:45] *** Joins: noobly (~noobly@50.38.126.25)
[20:58:52] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[20:59:10] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[21:01:26] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[21:01:38] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[21:03:16] *** Quits: AskerX (~Guest58@103.125.235.22) (Ping timeout: 246 seconds)
[21:04:53] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[21:09:42] *** Quits: rubiksdream (~a@user/rubiksdream) (Ping timeout: 272 seconds)
[21:11:14] *** Joins: lerzer (~lerzer@101.175.100.42)
[21:11:20] <lerzer> how would one decrypt this simple algorithm? https://pastebin.com/MDPC6Dx2
[21:14:06] <riv> lerzer, looks like it would take ages to figure out
[21:14:31] <lerzer> riv how so>
[21:14:34] <lerzer> ?
[21:15:01] <riv> how so ??
[21:15:18] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[21:15:19] <lerzer> why would it take ages to figure out?
[21:16:31] <loopspace> What is interesting about it?
[21:18:00] <lerzer> the way it uses bit operations
[21:18:25] <lerzer> XOR OR bitshifts etc
[21:28:04] *** Quits: qbt (~edun@user/edun) (Ping timeout: 272 seconds)
[21:29:13] *** Joins: usr123 (~usr123@27.255.220.177)
[21:31:32] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:8de0:a840:44e1:eebc) (Quit: Client closed)
[21:32:21] <usr123> Hello, I'm reading Addison-Wesley Introductory Mathematics. I'm having a hard time understanding this part: https://imgur.com/a/ljglvIs , first of all, why is it that in the previous pages they plot negative numbers to the right of zero and the image I posted -a is plotted to left of zero. Secondly, from the line represented here, how is it deduced that a = -(-a) ?
[21:32:53] <usr123> In the previous pages they tell how - means moving units to the left of the number line and + means moving units to the right of the number line.
[21:33:17] <usr123> So how are they deducing from that line that a = -(-a) ?
[21:34:19] <usr123> Also the notion of multiplication has not been introduced in the book until now.
[21:36:35] <usr123> I'm sort of looking for a better explanation for the direction method answer given here: https://www.quora.com/How-can-we-prove-a-a#:~:text=From%20the%20axiom%20of%20the,existence%20of%20the%20neutral%20element, I'm unable to make intuitive sense out of it.
[21:37:08] <Z-module> the notation  -a   does not mean that -a is a negative number, here. It merely means it is on the opposite side of 0 from a, by the same distance.
[21:37:45] <Z-module> in that diagram, where -a is on the right of 0, this implies that a itself must be negative.
[21:37:56] <Z-module> since we (by convention) put all the positives on the right of 0, all the negatives on the left
[21:37:57] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Ping timeout: 244 seconds)
[21:38:16] *** Quits: tempate99 (~tempate99@90.167.99.55) (Ping timeout: 246 seconds)
[21:39:10] <usr123> Z-module: I'm sorry, I didn't understand your second message.
[21:43:10] <Z-module> You are right that on previous pages, negative values are plotted to the left (that's where we do it). You are not right that this Fig. 1-3 contradicts that practice: the number  -a   is not negative, in spite of having a minus sign present.
[21:43:17] <Z-module> the point is that the value of a itself is negative
[21:43:55] <Z-module> so if a happens to be -3, then -a is -(-3) = 3 which is positive
[21:45:07] <Z-module> (you actually wrote "and the image I posted  -a is plotted to left of zero." but you meant right, not left)
[21:45:23] <usr123> Yeah, I was wrong there, my bad.
[21:45:40] <Z-module> oh wait, *and* you said previously negatives are on the right. Hopefully you meant left.
[21:46:05] <Z-module> (you might be dyslexic)
[21:46:13] <usr123> What I fail to visualize is how is -(-3) equal to 3?
[21:47:06] <usr123> Z-module: maybe just not attentive. My bad, I meant to say in previous pages all negative numbers are to the left and in the image I posted it's towards the right.
[21:47:42] *** Quits: Imk0tter (~Imk0tter@172.58.231.3) (Ping timeout: 272 seconds)
[21:48:09] <Z-module> -(anything) is on the opposite side of 0 from the (anything), at the same distance.  So -(-3) is on the opposite side -- meaning right side -- from 0 as -3 is (which is on the left side). Since -3 is 3 units away from 0 to the left, then -(-3) is 3 units away from 0 to the right. That's exactly where 3 is.
[21:48:15] <usr123> And that's only the little part. What I don't see is how does -(-a) become a? -a means the we move "a" units to the left. So what does -(-a) mean? That we move in the opposite direction of left?
[21:48:18] *** Joins: Imk0tter (~Imk0tter@172.58.228.76)
[21:49:29] <usr123> Oh, I think I'm beginning to see what you're saying.
[21:49:37] <usr123> I'll read that a couple more times.
[21:49:39] <Z-module>  -(...)  means use the opposite side from the (...), *whichever* side (...) is on.
[21:49:48] <Z-module> - does not itself indicate a fixed direction.
[21:50:08] <usr123> Z-module: Yes. Yes, that makes sense.
[21:51:43] <usr123> Am I too dumb? Will I survive math? It's always been a weakness of mine, but now I want to get good at it and get a degree in it.
[21:51:45] <Z-module> so in the case of  -(-a)   the outer - there is not "paying any attention" to the inner - there, as a symbol. You're merely noting which side of 0 the -a point is on, and now switching to the opposite side.
[21:51:53] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[21:52:04] <Z-module> you can master this
[21:52:09] <usr123> Z-module: Right. Now that I see - as a direction, it makes sense.
[21:54:40] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 272 seconds)
[21:54:59] *** Joins: Dotz0cat (~Dotz0cat@h56.70.29.71.dynamic.ip.windstream.net)
[21:57:58] *** Quits: raekye (~raekye@creatifcubed.com) (Ping timeout: 246 seconds)
[22:05:02] *** Joins: Franciman (~francesco@openglass.it)
[22:06:27] *** Joins: Crassus (~Crassus@user/crassus)
[22:06:35] <riv> nice how PGL_2(Z_5) is S_5
[22:08:08] *** Quits: xse (~xse@user/xse) (Quit: mwah)
[22:11:19] *** Joins: ppw (~ppw@user/ppw)
[22:11:24] <ppw> hey guys
[22:11:35] <ppw> is this an acceptable form of compact matrix notation? http://mathb.in/60002
[22:11:36] <Franciman> wewe ppw
[22:11:46] <Franciman> for me it is
[22:12:00] <ppw> :) nice to know :)
[22:12:20] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 255 seconds)
[22:12:45] *** Joins: cheater (~Username@user/cheater)
[22:13:04] <ppw> hopefully you're at least a PhD :)
[22:13:14] <Franciman> unfortunately I am not
[22:13:21] <Franciman> I am a composer
[22:13:23] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[22:13:45] <Franciman> I compose music in a late romantic, and post serial style
[22:16:32] <riv> ppw that is not good
[22:16:39] <ppw> uh oh
[22:16:45] <riv> put the i,j bit before this line
[22:17:16] <riv> http://mathb.in/60003 like this
[22:17:35] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[22:18:25] <Franciman> what the heck
[22:19:06] <usr123> Z-module: So, it's not a proof, it's a notation? -(-A) is just the counterpart of -A, and since there are only two directions, -(-A) has to be A.
[22:19:51] <TOB_CyxoB> Z-module, maybe this helps -1 * -1 = 1
[22:20:29] <usr123> TOB_CyxoB: Umm, was that for me?
[22:20:43] <TOB_CyxoB> usr123, sorry
[22:21:41] <usr123> TOB_CyxoB: Yeah, I've studied in high school -a * a = -a and -a * -a = a, but they just shoved it up on me. Until now, I didn't really understand why. And the book I'm reading hasn't introduced multiplication yet.
[22:23:17] <usr123> Until now, I never really understood what - and + meant.
[22:26:15] *** Quits: usr123 (~usr123@27.255.220.177) (Read error: No route to host)
[22:28:04] <TOB_CyxoB> usr123, I see. There are so many ways to think about this kind of stuff, just choose the one that makes more sense to you. Addition means putting things together, subtraction means taking things away. But your book makes a good point in the sense that you can think of it as moving in some direction. So moving forward is + and let's say going back is -. But what is going back backwards -(-a)? It is simply moving forward a units.
[22:28:04] <TOB_CyxoB> :) Hope it is not more confusing...
[22:28:31] *** Parts: ppw (~ppw@user/ppw) ()
[22:30:17] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[22:30:48] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[22:32:13] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[22:34:30] *** Quits: gas51627 (uid91066@id-91066.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[22:38:31] *** Joins: cheater (~Username@user/cheater)
[22:39:08] *** Quits: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:40:29] *** meingtsil is now known as meingtsla
[22:45:07] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Ping timeout: 244 seconds)
[22:47:56] <PJBoy> -a * a is not -a
[22:47:59] <PJBoy> it's -a^2
[22:53:17] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[22:53:58] *** Joins: Mat1010 (~Mat1010@168.181.209.58)
[22:55:22] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[23:00:03] <TOB_CyxoB> PJBoy, good point
[23:03:54] *** Joins: qbt (~edun@user/edun)
[23:07:53] *** Quits: Hanii (~textual@host86-184-47-37.range86-184.btcentralplus.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:08:39] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Quit: quit)
[23:21:26] *** Quits: aruns (~aruns@94.12.74.9) (Ping timeout: 272 seconds)
[23:22:25] *** Joins: aruns (~aruns@94.12.74.9)
[23:23:21] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc04:e00:85d7:f442:7698:9c9a)
[23:24:57] <taeaad> Here it says that there is a geometric Szpiro and a arithmetic Szpiro: https://en.wikipedia.org/wiki/Fedor_Bogomolov#Other_works_in_arithmetic_geometry.
[23:25:23] <Z-module> riv: hmm, I guess every centerless group of order 120 that contains A_5 has to be S_5 ?
[23:25:30] <taeaad> Is the geometric one proven? And is it a different thing...? I don't see a comment on Wikipedia about it.
[23:26:11] <taeaad> I guess it's not all written up on Wikipedia.
[23:26:28] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[23:26:35] *** Joins: n283 (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[23:27:26] *** Joins: aruns_ (~aruns@94.12.74.9)
[23:27:46] *** Quits: aruns (~aruns@94.12.74.9) (Ping timeout: 240 seconds)
[23:28:41] *** Quits: Dotz0cat (~Dotz0cat@h56.70.29.71.dynamic.ip.windstream.net) (Read error: Connection reset by peer)
[23:29:41] <riv> Z-module, sounds like it would be true, correct me if im wrong but wouldn't any group of order 120 containing A_5 be S_5?
[23:30:01] <riv> oh C_2 x A_5
[23:30:31] <Z-module> right, that one is not S_5 since it has a center
[23:31:48] <taeaad> It seems odd that Bogomolov "proved" the conjecture 20 years ago. It must then be an analogous theorem but not the same thing as the Szpiro conjecture.
[23:31:58] *** Joins: Dotz0cat (~Dotz0cat@h234.70.213.151.dynamic.ip.windstream.net)
[23:35:52] <Z-module> oops, riv, there's one more!   https://math.stackexchange.com/questions/3655477/extensions-of-a-5-by-c-2   (except the third one isn't centerless, I think)
[23:37:40] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[23:38:03] <riv> binary icosahedral group. O_O
[23:38:04] <riv> neat!!!
[23:39:16] <riv> > I don't know any way to prove that without using the theory of Schur Multipliers, or cohomology groups
[23:39:27] <riv> so those must be the next level of group theory tech
[23:39:44] *** Quits: Mat1010 (~Mat1010@168.181.209.58) (Quit: Client closed)
[23:40:49] <riv> https://en.wikipedia.org/wiki/Baumslag%E2%80%93Solitar_group ive never seen this either
[23:43:33] <Z-module> it's neat that the great Derek Holt answers so many MSE group-theory questions
[23:46:03] *** Quits: Simplar (~Simplar@188.163.94.202) (Quit: Going offline, see ya! (www.adiirc.com))
[23:46:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[23:47:18] <Z-module> anyway, it's also neat that, for each n >= 2, PSL_n(K) is simple for *all* fields (including infinite) K, with the sole exceptions of n = 2 and simultaneously |K| < 4.
[23:48:34] <riv> ooh
[23:50:08] <Z-module> (and there are just finitely many redundancies among those)
[23:50:35] *** Joins: Pectic (~biskit@bzq-109-64-247-234.red.bezeqint.net)
[23:50:36] <Z-module> ( PSL_2(F_4) =~ PSL_2(F_5) is one: it's fun to write down an explicit isomorphism)
[23:51:30] *** Joins: nick8325 (~nick8325@2001:9b1:26f9:3e00:b7ea:ac95:e18:4c1d)
[23:54:13] <Z-module> (so anyhow, yeah, if you ever need a countably infinite simple group, PSL_2(Q) is quite handy; of course there's also Alt(N), the group of all finite-support even permutations of a countably infinite set like N )
[23:54:52] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[23:55:05] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[23:58:02] *** Pectic is now known as eXistenZ
