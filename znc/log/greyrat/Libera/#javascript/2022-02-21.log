[00:00:38] *** Joins: trevors (~trevors@user/trevors)
[00:01:07] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:03:16] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:03:43] <TubbyTommy> So, if I tried to create an associative array in JavaScript it's really just an object with the outermost property being isolated to itself, is that right?
[00:04:05] <TubbyTommy> And that outermost property would be used to index the other objects of the array.
[00:04:28] <systemfault> n> const myAssociativeArray = {}; myAssociativeArray.foo = 10; myAssociativeArray.bar = 20; myAssociativeArray['omg-lol'] = 30; myAssociativeArray;
[00:04:29] <jellobot> (okay) { foo: 10, bar: 20, 'omg-lol': 30 }
[00:05:07] <ljharb> TubbyTommy: objects only have one level of properties, there's no "outermost"
[00:05:14] <ljharb> TubbyTommy: (a property can of course contain another object)
[00:05:47] <TubbyTommy> Okay, I'm confusing myself. I think Ill just play with this stuff awhile and it should come together later on.
[00:05:51] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[00:05:52] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[00:05:52] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[00:06:24] <onosendi> !eloquent @ TubbyTommy
[00:06:25] <jellobot> TubbyTommy, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[00:06:31] <TubbyTommy> I guess once you use an associative value for an index you can no longer use an actual numerical index to get at the same data also? The book I'm reading seems to suggest that.
[00:06:43] <matsaman> TubbyTommy: you can have an array of objects or an objects with arrays as values, and almost any combination
[00:06:47] <systemfault> TubbyTommy: It's one or the other.
[00:07:03] <TubbyTommy> Ok, thank you. I'll try that link.
[00:07:14] <systemfault> If you want an array then it's [], an associative array then {}
[00:07:15] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:07:28] <TubbyTommy> Ah, which is just an object.
[00:07:31] <systemfault> In non-JSON context then you can also use "Map"
[00:07:37] <TubbyTommy> A picture is worth a hundred words.
[00:08:12] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:08:17] <blueagain> Normally it's a thousand, but hundred works as well. :)
[00:08:39] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[00:09:52] <TubbyTommy> I know, but I'm a cheap bastard.
[00:10:10] <TubbyTommy> Or I just don't get as much understaind out of the picture as others. :)
[00:10:24] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[00:10:28] <TubbyTommy> understanding
[00:11:02] *** Quits: xtd8865 (~textual@39.71.93.209.dyn.plus.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:11:16] <TubbyTommy> What was that first link to? I didn' really understand it. It was a graph. Is that word usage of "associative array" over time?
[00:11:24] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[00:11:33] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:11:39] <TubbyTommy> It just came about in the 1950's it seems.
[00:11:52] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[00:11:57] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[00:12:09] <TubbyTommy> 1959
[00:12:22] <TubbyTommy> That's pretty cool, I'll have to use that for other terms.
[00:13:50] *** Joins: onosendi1 (~onosendi@user/onosendi)
[00:14:09] <blueagain> TubbyTommy: I think the point was that that term gained in popularity during the time PHP was very popular.
[00:14:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:14:12] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[00:14:13] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[00:14:18] *** onosendi1 is now known as onosendi
[00:15:05] <TubbyTommy> Okay, I like the word dictionary sense I have some experience using C#. but it's good to be familiar with all the different lingo.
[00:15:06] <ljharb> blueagain: only because php uses it tho.
[00:15:22] <TubbyTommy> since
[00:15:36] <blueagain> ljharb: sure, but that was point I think. That it became a thing only because of PHP.
[00:16:11] <blueagain> I never heard it before PHP was a thing or outside of a PHP context, fwiw.
[00:16:29] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[00:17:47] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:18:03] <matsaman> it gained more popularity
[00:18:16] <matsaman> as soon as there were two implementations without the same name, it would've needed a generic way to refer to it
[00:18:20] <matsaman> and that happened long before PHP
[00:18:54] <TubbyTommy> So what's the "most" generic term again, just an object?
[00:19:06] <matsaman> 'associative array'
[00:19:08] <blueagain> When I was at uni, they used the term 'hash map'.
[00:19:27] <systemfault> A "map" is usually the common term
[00:19:34] <blueagain> Sometimes hash table.
[00:24:11] <matsaman> the point is that 'associative array' is plain english
[00:24:14] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:24:18] *** Joins: Akiva (~Akiva@user/Akiva)
[00:24:19] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:25:38] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[00:28:20] *** Quits: mikrosis (~mikrosis@dynamic-046-114-173-173.46.114.pool.telefonica.de) (Ping timeout: 272 seconds)
[00:28:38] <ljharb> TubbyTommy: the generic term is "object"
[00:29:01] <matsaman> yes, in javascript
[00:29:11] *** Quits: g2anj_ (~v@58.228.230.4) (Ping timeout: 256 seconds)
[00:29:29] <ljharb> in pretty much every language that's not php
[00:29:34] <matsaman> nah
[00:29:42] <systemfault> There's no "nah"
[00:29:49] <matsaman> I just typed one =P
[00:30:49] <blueagain> Python calls it a ... dictionary.
[00:31:08] <systemfault> C# too
[00:31:14] <systemfault> Java calls it "Map"
[00:31:14] <matsaman> 'associative array' is the language-agnostic term for it
[00:31:19] <matsaman> 'object' is the JS term for it
[00:31:24] <matsaman> that's all you gotta know =)
[00:31:37] *** Joins: pavonia (~user@user/siracusa)
[00:32:06] <matsaman> n> typeof {}
[00:32:06] <jellobot> (okay) 'object'
[00:32:55] <matsaman> or you can say "hey I come from JS what do we call an 'object' in this language?"
[00:32:58] <matsaman> and they'll tell you
[00:33:24] *** Joins: bprompt (~default@207.98.72.135)
[00:33:41] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[00:33:50] <systemfault> matsaman: The word "array" in associative array doesn't make sense, associative container does
[00:34:08] <matsaman> it does, in English, which is what it is
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:26] *** Quits: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca) (Changing host)
[00:34:26] *** Joins: darkdrgn2k (~darkdrgn2@user/darkdrgn2k)
[00:34:32] <matsaman> it's not a term for users of a specific language
[00:34:42] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[00:34:43] <matsaman> I think we just got done listing every language-specific term for it
[00:35:08] <ljharb> anyways, a generic term doesn't really have value. just use the term that fits the language you're using.
[00:35:21] <ljharb> matsaman: and no, "array" doesn't make sense in english for a dictionary
[00:35:25] *** Quits: Senz (whoa@ool-ad0244e9.dyn.optonline.net) (Ping timeout: 256 seconds)
[00:35:36] <ljharb> "an array of things" isn't even a list, it's a wide-ranging variety
[00:35:37] <matsaman> it has value because you can know what you're talking about while switching to and from different languages
[00:35:49] *** Quits: bprompt (~default@207.98.72.135) (Client Quit)
[00:35:53] <ljharb> if you aren't switching your idioms at the same time, then you don't know what you're taking about :-)
[00:35:58] <matsaman> ljharb: that's an expression, not a definition of 'array'
[00:36:10] <matsaman> an expression in English
[00:36:35] <systemfault> For PHP, it's simple.. because it simply doesn't have "arrays" (Beside the Spl stuff)
[00:36:38] <matsaman> the conversations today are surreal =P
[00:36:51] <ljharb> matsaman: right, you literally just said "it does, in english"
[00:37:10] <matsaman> ljharb: I'm always going to agree with you when you say that I said things
[00:37:12] <ljharb> matsaman: and the first definition in OED for "array" is "an impressive display or range of a particular type of thing."
[00:37:12] <matsaman> what of it
[00:37:19] <ljharb> matsaman: so you're wrong
[00:37:31] <ljharb> "associative array" is a fine generic term in computer science, but it has no association to the english meaning
[00:37:32] <matsaman> uhuh
[00:37:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:37:49] <matsaman> it has, try looking at the second definition
[00:37:51] <ljharb> and, imo it has no value, because talking about multiple languages at once is a useless academic exercise
[00:37:59] <ljharb> matsaman: "an ordered series or arrangement", sure
[00:38:05] <ljharb> matsaman: objects aren't ordered.
[00:38:14] <matsaman> that's why it's _associative_ =P
[00:38:16] * matsaman laughs
[00:38:23] <matsaman> it's an adjective =P
[00:38:30] <ljharb> and thus, generically, associative arrays aren't ordered either
[00:38:34] <ljharb> which means it's a shitty generic term
[00:38:38] <matsaman> shhhhhh =P
[00:38:43] <ljharb> so, you lose, hush now
[00:38:49] <matsaman> I'm not even reading your msgs anymore
[00:38:55] <matsaman> ridiculous
[00:39:01] <ljharb> lol
[00:39:19] <systemfault> You should be working on your framework since you can't use one that already exists... instead of arguing with us
[00:39:31] <matsaman> systemfault: good idea, I'll get right on that
[00:39:41] <blueagain> this is totdally xkcd #386
[00:39:43] <matsaman> maybe a framework for English usage
[00:39:43] <ljharb> sick burn
[00:39:45] <blueagain> -d
[00:39:48] <systemfault> 👍
[00:40:04] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:40:36] <blueagain> systemfault: irssi still can't display that :(
[00:40:53] <matsaman> sure it can
[00:40:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:41:05] <matsaman> have to have a font for it, though
[00:41:28] <matsaman> but be careful what you wish for, heh
[00:41:36] <blueagain> yeah, good luck finding one. The one I have supports *some* smilies, but not the thumbs up
[00:42:03] <ljharb> an english language framework would need to support similies, not smilies
[00:42:23] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[00:42:40] <matsaman> I'm sure you can find a copy of twemoji somewhere to install
[00:42:44] <matsaman> among others
[00:42:46] <matsaman> <shrug>
[00:43:45] *** Spitfire is now known as Spitteh
[00:43:54] *** Spitteh is now known as Spitfire
[00:44:46] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[00:45:03] <onosendi> blueagain: rxvt-unicode?
[00:45:39] <onosendi> blueagain: it's not irssi, it's your terminal, or you need to patch your font with a nerd font to display emojis.
[00:46:09] <matsaman> I wonder how many distros come with big emoji fonts preinstalled so far, yeah
[00:46:25] <blueagain> onosendi: terminal is alacritty.
[00:46:39] <matsaman> opengl terminal, zooooom!
[00:46:45] <matsaman> like the logo
[00:46:56] <onosendi> blueagain: yeah, it's not your terminal then.
[00:47:30] <matsaman> or maybe the 'noto' font, which is enormous AF
[00:47:35] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:48:21] *** Joins: trevors (~trevors@user/trevors)
[00:49:15] *** Quits: rcoote (~rcoote@2a02:908:690:a140:3067:9736:59ae:716) (Quit: Konversation terminated!)
[00:50:12] <blueagain> Used to run termite till development was halted.
[00:51:45] <onosendi> Alacritty is where it's at.
[00:52:37] <fweht> is there a cheaper way to change the identity of an object other than do `foo = {...foo}`?
[00:53:00] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:53:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:55:42] <systemfault> Not that I know
[00:56:04] <onosendi> Is `Object.assign({}, foo)` cheaper than spreading?
[00:57:04] <systemfault> Good question... I don't know but in theory, they should be about the same, hmm
[00:59:12] <blueagain> As per MDN "Shallow-cloning (excluding prototype) or merging of objects is now possible using a shorter syntax than Object.assign()."
[00:59:43] <blueagain> (Talking about the spread operator.)
[01:00:48] <onosendi> At a million iterations, `Object.assign({}, foo)` averaged 128, and spreading averaged 93.
[01:01:00] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[01:01:10] <systemfault> onosendi: Try adding a lot of props to foo in your test
[01:01:19] <onosendi> systemfault: how many?
[01:01:28] <systemfault> I don't know, 50?
[01:02:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:03:08] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:557c:fb1f:da99:8b6d) (Ping timeout: 252 seconds)
[01:04:36] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[01:07:17] *** Joins: mikrosis (~mikrosis@dynamic-046-114-173-173.46.114.pool.telefonica.de)
[01:07:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:08:06] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:08:25] <onosendi> 10k properties in the object at 1M iterations, spreading: 8309, `Object.assign` is still running... it's been about 3 minutes.
[01:08:40] <onosendi> Probably shouldn't have done 10k properties :)
[01:08:42] <mikrosis> hello again
[01:08:50] <matsaman> 9001 would've been enough
[01:08:51] <matsaman> mikrosis: hi
[01:09:00] <onosendi> matsaman: I was thinking the same.
[01:09:32] <mikrosis> onosendi: well, it seems that you trying something new, something cool probably. Better bothering with edge cases than never having tried something new... I also have mental blocks sometimes, but in software "good enough" is actually the way to success...
[01:10:00] <onosendi> mikrosis: hmm?
[01:10:01] <matsaman> onosendi: and then there's https://www.reddit.com/r/node/comments/rp6jb8/discussion_object_spread_much_faster_than/hq4g2du/ =P
[01:10:13] <mikrosis> just some pep talk
[01:10:34] <onosendi> :)
[01:10:56] <systemfault> 10k properties? TYPICAL SCENARIO!
[01:10:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:11:05] <mikrosis> mongodb? :P
[01:11:09] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[01:11:21] <blueagain> I don't like the idea that systems can't be good unless they perform well under extreme conditions.
[01:11:32] <blueagain> Sure, that might apply in the case of security, but not everywhere.
[01:11:52] <blueagain> There is middle ground to be had here imho.
[01:11:55] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[01:12:13] <systemfault> I love "middle ground" but with easy wins...
[01:12:41] <systemfault> Example... Array#reduce to create an object is going to be stupidly slow in every case..
[01:12:49] *** Joins: audio (~audio@user/audio)
[01:13:01] <systemfault> So these days, I use Object.entries  + Array#map + Object.fromEntries
[01:13:09] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[01:13:16] <systemfault> But before Object.fromEntries, it was not possible..
[01:13:32] <mikrosis> https://www.youtube.com/watch?v=1L2hrG-7i2Y
[01:13:32] <skillbot> YouTube Title: The Shocking State of JavaScript // The Code Report
[01:13:34] <mikrosis> :/
[01:14:10] <KevinX> you realize that's a meme channel right?
[01:14:12] <mikrosis> I have some headache with the linter (eslint + typescript): TS2532: Object is possibly 'undefined'.
[01:14:21] *** Joins: pgr (~pgr@37.120.156.253)
[01:14:25] <mikrosis> if (typeof this !== 'undefined') {
[01:14:25] <mikrosis>   this.close();
[01:14:26] <mikrosis> }
[01:14:27] <mikrosis> why?
[01:14:31] <mikrosis> I check this
[01:14:38] <mikrosis> why is the linter unhappy?
[01:14:45] <mikrosis> what do I have to do to make the linter happy?
[01:14:47] <systemfault> Is it the linter or typescript?
[01:14:53] <mikrosis> oh, good question
[01:14:55] <mikrosis> it happens during build
[01:15:02] <mikrosis> TS2532: Object is possibly 'undefined'.
[01:15:03] <systemfault> Then it's TypeScript.
[01:15:12] <mikrosis> oh, that is a good hint
[01:15:24] <matsaman> mikrosis: heh
[01:15:26] <mikrosis> alright, then I can use ?
[01:15:27] <mikrosis> hehe
[01:15:31] <blueagain> systemfault: thanks for the Object.fromEntries, I wasn't aware of it and I use quite a lot of reduce. Always happy for performance improvements.
[01:15:38] <mikrosis> `?`
[01:15:55] <systemfault> blueagain: Usually, I don't care... but in this specific case, it's sooooo slow it's not even funny
[01:16:04] <KevinX> mikrosis show the rest of your code.
[01:16:28] <systemfault> mikrosis: May I ask why it's even possible to "this" to be undefined?
[01:16:30] <onosendi> systemfault: didn't we benchmark reduce a while back, and found it was surprisingly as fast as other methods?
[01:16:30] <mikrosis> KevinX: yea, it is inside a custom react component, in an event handler thing
[01:16:47] <mikrosis> systemfault: .bind(undefined)? but there is more to it, it is a react component thing
[01:16:48] <blueagain> systemfault: If I can get free performance with no downsides and without sacrificing legibility, why not.
[01:16:55] <mikrosis> onIonDrag
[01:17:05] <mikrosis> a minimal reproducible sample is needed
[01:17:16] <systemfault> mikrosis: If you know the type of "this" and it cannot be undefined, you can just annotate it
[01:17:55] *** Quits: pgr (~pgr@37.120.156.253) (Quit: leaving)
[01:17:56] <mikrosis> systemfault: I am not even sure. My fault here: I should post more about my issue than just the isolated piece of code
[01:17:59] <systemfault> mikrosis: Like this https://tsplay.dev/mqEnRm
[01:18:20] <mikrosis> yes, indeed
[01:18:30] <systemfault> mikrosis: "this", when specified as the first parameter of a function allows you to set the type of "this"
[01:18:40] <systemfault> It's like a magic dummy parameter
[01:18:49] <KevinX> "this" also changes context when in an event handler so it likely doesnt have the close method on it
[01:19:10] <systemfault> ^ This too
[01:19:10] <mikrosis> `this` could be considered dangerous :/
[01:19:12] <mikrosis> https://github.com/ionic-team/ionic-framework/issues/18069#issuecomment-486275798
[01:19:14] <mikrosis> yes, this seems to be it
[01:19:22] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Read error: Connection reset by peer)
[01:20:07] <blueagain> oh, ionic is based on web components? Wondering how that mess went since I plan on *trying* to integrate web components into my framework as well.
[01:20:24] <systemfault> blueagain: These days, I believe that Ionic is based on "everything"
[01:20:31] <mikrosis> I really love ionic :/
[01:20:41] <systemfault> (You can have Ionic + Vue or React or Angular)
[01:20:50] <systemfault> I never used it...
[01:21:00] <mikrosis> systemfault: I am interested - how can I annotate `this`?
[01:21:05] <blueagain> My first dabble with web components went to hell, so I'm not really confident there is a nice wrap-around to be had.
[01:21:16] <systemfault> mikrosis: Like this https://tsplay.dev/mqEnRm ?
[01:21:28] <mikrosis> ohhh
[01:21:29] <KevinX> you should first `console.log(this)` and make sure it has the value you expect
[01:21:44] <systemfault> mikrosis: The function "lol" has that dummy parameter, you don't need to pass anything when calling it
[01:21:58] <mikrosis> ah I see
[01:23:26] <mikrosis> systemfault: learned something new!
[01:23:28] <mikrosis> thanks
[01:25:20] *** Joins: ejjfunky0 (~ejjfunky2@125.164.18.221)
[01:25:24] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[01:25:36] <blueagain> I think the thing that most confused/annoyed me was that css is handled so badly in web components, like you can't (or only with effort) style elements from without the shadow DOM.
[01:26:15] <blueagain> Wonder how ionic solves that.
[01:27:01] <mikrosis> there is still no mechanism for isolating multiple SVGs with their classes in the same document (when embedded with their DOM)... :/
[01:27:09] <mikrosis> still have to use svgo inlinestyles/prefixids
[01:27:28] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[01:28:51] <blueagain> mikrosis: I was trying to reuse SVGs as icon tags in my first foray into wc, it went so bad.
[01:29:37] <mikrosis> blueagain: I recommend using svgo with inlinestyles+prefixids, and CSS variables that use data attributes
[01:29:52] <mikrosis> or as CSS background image with string manipulation
[01:30:17] <mikrosis> systemfault: so I found out that the `onIonDrag` event handler in ionic doesn't get a reference to the `IonItemSliding` element - no `this`:/  is there a mechanism in react where the event handler can get a reference to the originating element?
[01:30:25] *** Joins: defn (~n0b0dy@user/defn)
[01:30:34] *** Quits: d3fn (~n0b0dy@user/defn) (Ping timeout: 250 seconds)
[01:32:56] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[01:33:32] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:34:24] <blueagain> mikrosis: thanks, will look into t.
[01:34:26] <blueagain> it*
[01:34:50] *** Quits: blezz (~blez@213-130-92-213.ip.btc-net.bg) (Ping timeout: 272 seconds)
[01:36:06] *** Quits: mikrosis (~mikrosis@dynamic-046-114-173-173.46.114.pool.telefonica.de) (Ping timeout: 272 seconds)
[01:36:55] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:37:24] *** audio is now known as audioburn
[01:38:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:38:17] *** audioburn is now known as audio
[01:39:16] *** Quits: Junxter (~Junxter@222.95.164.193) (Ping timeout: 272 seconds)
[01:39:17] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d1e0:a278:ec0d:b0b1) (Ping timeout: 240 seconds)
[01:40:08] *** Joins: mikrosis (~mikrosis@dynamic-046-114-170-099.46.114.pool.telefonica.de)
[01:40:41] <mikrosis> wtf, my internet:/  was offline, sorry.
[01:40:51] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d1e0:a278:ec0d:b0b1)
[01:41:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:41:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[01:42:05] *** Quits: TubbyTommy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[01:43:23] <blueagain> mikrosis: welcome back!
[01:43:27] <mikrosis> :O
[01:43:40] <mikrosis> so `this` inside the react event handler is actually `undefined` :/
[01:43:48] <mikrosis> how can I get the originating element
[01:43:52] <mikrosis> srcElement is deprecated
[01:45:11] *** Joins: g2anj (~v@58.228.230.4)
[01:46:30] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[01:52:39] <mikrosis> hmmm
[01:52:46] <Dorward> mikrosis: onClick={ event => console.log(event.currentTarget) } ?
[01:53:30] *** Joins: teut (~teut@122.161.83.81)
[01:53:59] <mikrosis> Dorward: ah, yes! But TypeScript thinks now that `currentTarget` is an EventTarget and not `<IonItemSliding>`. Do I have to hint that?
[01:55:18] <Dorward> mikrosis: It's going to be the underlying HTML element rather than the component. You can hint it as HTMLElement or HTMLDivElement etc.
[01:56:41] <Dorward> Maybe something like: (event: React.MouseEvent<HTMLElement>) => ? I'm not sure what type of event it will be.
[01:57:05] <systemfault> Is mikrosis even using React? (I don't know)
[01:57:35] <systemfault> But usually, if you need to bother with DOM nodes when using any framework, it's because you
[01:57:38] <Dorward> Oh, good point. I do so much react that I forget other things are out there :)
[01:57:44] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:57:52] *** Quits: myq (~user@c-73-67-223-145.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[01:57:52] *** Joins: quartz (~quartz@user/quartz)
[01:57:55] <systemfault> 're not doing something right or you're wrapping low-level code
[01:59:59] <quartz> Hi. Can someone please tell me what the result["data"] does at line 22 of this JS code? https://bpa.st/4GCQ
[02:00:35] <Dorward> quartz: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors
[02:00:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d50:ed7b:88e6:c382) (Read error: Connection reset by peer)
[02:02:42] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[02:04:01] <mikrosis> systemfault: I am "using" react, but not "using" in terms of understanding it completely :/
[02:04:06] *** Joins: Akiva (~Akiva@user/Akiva)
[02:04:16] <mikrosis> Dorward: hmm, this could be the way, typecasting
[02:05:21] <quartz> Dorward: OK thanks so much. But can you tell me what the purpose of "result" parameter is?
[02:06:17] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[02:06:36] <Dorward> quartz: https://api.jquery.com/jquery.ajax/ — "The data returned from the server, formatted according to the dataType parameter or the dataFilter callback function, if specified;"
[02:09:16] <quartz> Dorward: Ok thanks.
[02:10:11] <mikrosis> at some point one could make a jquery shim that just wires vanilla js with the jquery functions :)
[02:11:51] <Dorward> mikrosis: That's jQuery ;) (They do rewrite the internals to take advantage of browser features as they are added. See https://api.jquery.com/last-selector/ for example where they deprecated :last because queries using it can't just be passed directly to querySelectorAll)
[02:13:31] *** Quits: paule32 (~paul@user/paule32) (Read error: Connection reset by peer)
[02:13:56] *** Joins: onosendi (~onosendi@user/onosendi)
[02:13:57] <mikrosis> Dorward: cool, at some point jquery would be as fast as vanilla js - because it is then just a thin layer
[02:15:13] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[02:16:47] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:16:49] <blueagain> mikrosis: I don't use jquery anymore today tbh, just vanilla.
[02:17:00] <blueagain> mikrosis: it was good while it lasted, I don't know if it's justified today.
[02:17:39] <mikrosis> blueagain: do you know some react? :/
[02:17:45] <mikrosis> I have trouble with refs and such
[02:18:28] <blueagain> mikrosis: I do it in my day job but don't really like it, shoot.
[02:20:41] <mikrosis> blueagain: ok, so the <IonItemSliding> `onIonDrag` event handler doesn't get a `this` - it isn't implemented. How can I get a reference back to `<IonItemSliding>` inside the event handler?
[02:21:30] <quartz> Dorward: Sorry to bother you again, but can you tell me how they expect me to implment this function? It takes in "new_sales" which is in the format that looks like JSON. This is what I have so far: https://bpa.st/W5BA
[02:21:50] <quartz> Oh, this is the function description: https://i.ibb.co/B4t8K3C/image.png
[02:22:01] <blueagain> mikrosis: Can you send me a paste, for orientation?
[02:22:07] <KevinX> mikrosis pass in your callback. Share code if you want specifics
[02:22:33] <Dorward> quartz: Sorry. I don't have time to process all that.
[02:22:34] <quartz> The example I posted earlier "saved" data to the server with "get and save name", but it didn't take in any parameters.
[02:22:48] <quartz> Dorward: Ahh OK, thanks for your help earlier.
[02:24:03] <quartz> Anyone else haha
[02:24:56] <KevinX> quartz what are you missing?
[02:25:38] <mikrosis> blueagain,  systemfault, KevinX: finally - here the minimal code piece: https://gist.github.com/strarsis/f2d300714cb27de420241aea06826dd1
[02:25:56] <quartz> KevinX: I'm not sure how to write the function. I'm suppose to take in "new_sale", that looks like the image I posted, but I'm not sure how to write the function according to what they want.
[02:26:13] <mikrosis> when the <IonItemSliding> is not completely slided out, it should close itself. calling `close()` on the sliding element should accomplish that - but I have no reference inside the event handler
[02:26:31] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[02:27:06] <systemfault> mikrosis: And what do the children declarations look like?
[02:27:36] <KevinX> is `this.close` defined if you log it above the return? if yes, then do `const close = this.close` and call it with close()
[02:27:38] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[02:28:24] <KevinX> quartz you have some of it already, right? save_sale? what doesnt work?
[02:28:26] <mikrosis> systemfault: https://gist.github.com/strarsis/f2d300714cb27de420241aea06826dd1#file-usage-js
[02:28:40] <mikrosis> KevinX: oh I can define close outside of the handler and use it as a variable?
[02:28:52] <quartz> KevinX: i'm just confused conceptually.
[02:28:57] <mikrosis> KevinX: this.close is not undefined in the event handler, this is also undefined
[02:29:00] <blueagain> mikrosis: so `this` in `this.close` would refer to IonItemSlidingBack? Since you're binding lexically.
[02:29:02] <quartz> How do I save data to the server that looks like the image I posted.
[02:29:50] <KevinX> quartz seems like they provide the data so you don't need to worry about it. Just save it to the server.
[02:29:54] <mikrosis> blueagain: it should refer to the IonItemSliding element that emits the ionDrag event - I thought so - but this is actually undefined in the `onIonDrag` handler.
[02:30:09] <mikrosis> like onClick this should refer to the element that is clicked
[02:30:09] <quartz> KevinX: yes but how???
[02:30:19] <mikrosis> but this is not defined for ionDrag events
[02:30:43] <KevinX> quartz or is it form data? you just have to build it like you started to on line 52
[02:31:12] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 272 seconds)
[02:31:18] <KevinX> you're missing salseperson
[02:31:28] <KevinX> did you log the data? is it formatted properly?
[02:32:21] <KevinX> Or are you asking how to persist it on the server? If so, where's the server?
[02:32:34] *** Quits: pizdets_ (~pizdets@183.182.110.129) (Ping timeout: 250 seconds)
[02:33:06] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:33:49] *** Joins: pizdets (~pizdets@183.182.114.226)
[02:34:02] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[02:35:00] *** Quits: eugercek (~user@user/eugercek) (Ping timeout: 240 seconds)
[02:36:32] <mikrosis> const ionItemSliding = useRef<IonItemSliding>(null);
[02:36:38] <mikrosis> this doesn't work:(  :(
[02:36:48] <mikrosis> 'IonItemSliding' refers to a value, but is being used as a type here. Did you mean 'typeof IonItemSliding'?ts(2749)
[02:37:15] <mikrosis> and when I go further down this rabbit hole I get this: `Type 'RefObject<ForwardRefExoticComponent<IonItemSliding & Pick<HTMLAttributes<HTMLIonItemSlidingElement>,`
[02:37:21] <mikrosis> ForwardRefExoticComponent ... yea
[02:37:59] <blueagain> Lol, hate to be grandstanding here, but that's exactly what I mean when I talk about when we introduce too much complexity that we don't understand ourselves when we use stuff like react/typescript/JSX.
[02:38:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:38:55] <EdFletcher> that type looks like something the C++ compiler would spit out when using templates. what hell hath we wrought? 😆
[02:40:10] <blueagain> mikrosis: I'm sure there are people out there to whom this is perfectly understand, but this surpasses my react knowledge.
[02:40:18] <blueagain> understandable*
[02:40:23] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:41:28] <mikrosis> EdFletcher: hehe, this stuff tickles my brain and gives me nightmares
[02:41:33] <mikrosis> blueagain: thanks for looking into this.
[02:41:37] <mikrosis> yes, this stuff can be hard
[02:41:38] <mikrosis> :(
[02:41:44] <EdFletcher> mikrosis: for real! i still have C++ PTSD, so be careful 😉
[02:41:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:42:07] *** Joins: darkexceedplatim (~darkexcee@180.254.75.104)
[02:42:19] <mikrosis> EdFletcher: like enterprise java, but low level :O
[02:42:35] <EdFletcher> hahaha indeed
[02:42:36] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d1e0:a278:ec0d:b0b1) (Ping timeout: 240 seconds)
[02:42:45] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[02:43:22] <mikrosis> ah, I found something that should go around the TypeScript demon that does strict typechecking: https://forum.ionicframework.com/t/how-to-call-methods/186879/10?u=strarsis
[02:43:30] <mikrosis> const ref = useCallback((slidesRef) => {
[02:43:31] <mikrosis>     if (slidesRef) {
[02:43:32] <mikrosis> ahh ahhhhh
[02:43:45] <mikrosis> like a co-programmer with ocd
[02:45:56] *** Quits: darkexceedplatim (~darkexcee@180.254.75.104) (Quit: Leaving)
[02:46:33] *** Joins: fawwaz (~fawwaz___@180.254.75.104)
[02:47:09] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:47:22] *** Joins: TubbyTommy (~blank@user/slimmyjimmy)
[02:47:47] <mikrosis> https://github.com/ionic-team/ionic-react-conference-app/blob/master/src/components/SessionListItem.tsx#L15
[02:47:51] <mikrosis> wow - this seems to work
[02:48:22] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:78cf:6f3f:4205:5ab9)
[02:48:48] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[02:49:43] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[02:49:46] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[02:50:36] *** Joins: llorllale (~llorllale@198.98.119.85)
[02:51:30] *** Quits: linearbit (~linearbit@p200300d6ef4da90016deffc48cbad5ac.dip0.t-ipconnect.de) (Quit: Leaving)
[02:54:24] *** Joins: N4buc0- (~N4buc0@189.26.49.16.dynamic.adsl.gvt.net.br)
[02:54:30] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 260 seconds)
[02:54:48] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[02:54:49] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:7576:b860:c17f:3363:8fd9) (Remote host closed the connection)
[02:57:41] *** Joins: nomic (~nomic@185.217.117.193)
[02:58:50] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[02:58:58] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:00:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:00:52] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[03:01:44] *** Quits: jalil (~jalil@2a01:e0a:277:4100:5321:349f:8c6a:80f8) (Quit: jalil)
[03:02:09] <buu> Does tsc allow me to use obj.?foo syntax
[03:02:14] <buu> or whatever it is
[03:02:24] <mikrosis> well well, of course that ion sliding thing doesn't have any other events, it uses private gesture stuff for that :/
[03:03:06] <EdFletcher> buu: other way around, but yes because it's not typescript but just javascript 😃 <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining>
[03:03:23] <buu> Well, the implicit question was when it was added I guess
[03:03:36] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[03:03:49] <buu> 14.0 to node
[03:03:52] *** Joins: pulse (~pulse@user/pulse)
[03:03:52] <buu> Good to know
[03:04:35] <blueagain> buu: https://caniuse.com/mdn-javascript_operators_optional_chaining
[03:05:08] <blueagain> Oh, nvm, missed that Ed already got that.
[03:07:20] <buu> For some reason I just assumed optional chaining was still in beta or something
[03:07:24] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[03:07:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:07:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:07:41] *** Joins: wroathe (~wroathe@user/wroathe)
[03:08:46] <blueagain> buu: Yeah, optional chaining with ?? gives you really nice default-setting behaviour.
[03:09:45] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[03:09:46] <blueagain> buu: something along the lines of `given?.value ?? default_value`
[03:10:11] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[03:10:21] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Client Quit)
[03:10:34] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:c061:67fb:4108:943c) (Remote host closed the connection)
[03:17:35] *** Quits: TubbyTommy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[03:17:45] <ljharb> buu: yes, it’s in ES2019
[03:17:54] <ljharb> as is nullish coalescing
[03:18:21] *** Joins: trevors (~trevors@user/trevors)
[03:18:43] *** Joins: TubbyTommy (~blank@user/slimmyjimmy)
[03:19:05] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[03:19:24] <systemfault> There's should be a nice chart somewhere of ES versions and the added features...
[03:19:39] <TubbyTommy> I'm sure that is somewhere on the Internet.
[03:20:14] <buu> ljharb: Just a few more features left from perl to copy =]
[03:20:35] <ljharb> buu: when did Perl add that feature
[03:20:49] <ljharb> systemfault: the kangax compat table?
[03:21:09] <blueagain> From the Object.is() page: "For example, the === operator (and the == operator) treats the number values -0 and +0 as equal".
[03:21:18] <blueagain> Me: When you do *not* want to treat them as equal.
[03:21:29] <blueagain> do you*
[03:21:30] <ljharb> blueagain: when do you, do you mean?
[03:21:33] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:21:41] <ljharb> blueagain: all the time. -0 means zero from the negative direction.
[03:21:47] <TubbyTommy> What is this doo doo?
[03:22:26] <systemfault> ljharb: Assuming the Kangaxx table is right, the operator was added to ES2020, not 2019... but I'll probably believe you before Kangaxx because I don't know who that is.
[03:22:31] <blueagain> ljharb: but where does the difference have relevance?
[03:22:50] <ljharb> blueagain: i just told you. In math
[03:23:06] <ljharb> systemfault: hmm, i maintain it, so one sec
[03:23:35] <ljharb> nope, I’m wrong, they’re both ES2020 https://github.com/tc39/proposals/blob/main/finished-proposals.md
[03:24:59] <ljharb> n> [0, -0].map(x => 1/x) @ blueagain
[03:25:00] <jellobot> blueagain, [ Infinity, -Infinity ]
[03:25:06] <ljharb> blueagain: also in JavaScript :-p
[03:25:11] <systemfault> Just saw that private fields are going to make it for ES2022?
[03:25:20] <ljharb> systemfault: already have made it, yes
[03:25:27] <systemfault> Cool
[03:25:28] <ljharb> class fields landed like a year ago
[03:25:32] <blueagain> ljharb: yeah, I was just looking at the example with Infinity and -Infinity.
[03:25:46] <ljharb> and I’ll be cutting es2022 in the next month or so
[03:26:22] <blueagain> I guess the spec dictates +0 === -0 for practical purposes, then?
[03:26:23] <systemfault> (Table says 2022 for class fields... )
[03:27:02] <systemfault> Anyway, that table is definitely better than nothing
[03:27:19] <ljharb> blueagain: i mean, really it’s just historical legacy
[03:27:35] <ljharb> blueagain: js should probably have omitted -0, but since it has it, imo it’s stupid that 0 === -0
[03:27:50] <ljharb> it’s also stupid that NaN !== NaN
[03:27:58] <ljharb> but at least that one makes some sense
[03:28:34] <systemfault> -0 is just a signed arithmetics thing...
[03:29:28] <blueagain> I see, and Object.is(NaN, NaN) is true
[03:29:36] <blueagain> So those are the two differences.
[03:29:56] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[03:32:45] <SpiceMan> ljharb: he probably refers to Raku which has $object.?method()
[03:33:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[03:36:53] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[03:38:08] <audio> is there a js framework that is built on jquery
[03:39:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:39:11] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Remote host closed the connection)
[03:39:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:39:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:39:57] *** Joins: wroathe (~wroathe@user/wroathe)
[03:40:00] *** Quits: sa0 (~sa0sin@88.120.82.205) (Remote host closed the connection)
[03:40:36] *** Joins: masoudd (~masoudd@user/masoudd)
[03:41:33] <ljharb> SpiceMan: what’s raku
[03:41:41] <ljharb> blueagain: yep
[03:41:57] <SpiceMan> ljharb: the artist formerly known as perl 6(?)
[03:42:13] <systemfault> audio: Yes, it's called Backbone but it's been dead for a while..
[03:42:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:42:39] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b)
[03:42:51] <ljharb> SpiceMan: coffeescript predates Perl 6
[03:44:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[03:45:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:45:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:45:20] *** Joins: wroathe (~wroathe@user/wroathe)
[03:46:28] <SpiceMan> ljharb: I thought it was a rethorical question (because perl 5 doesn't have optional chaining), not an actual question inquiring for a date. I... don't care about the direction that line of conversation leads to.
[03:46:59] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:47:03] <ljharb> i just didn’t know when Perl got it
[03:47:11] <ljharb> (because like most people, i don’t pay attention to Perl)
[03:47:13] <SpiceMan> yes, I get that now
[03:47:14] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b) (Ping timeout: 260 seconds)
[03:47:24] <ljharb> thanks!
[03:48:27] <TubbyTommy> What do you mean by 'cutting'?
[03:48:54] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:49:05] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[03:50:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[03:51:39] <ljharb> TubbyTommy: like branching off main, and making the pdf to submit to ecma
[03:52:55] <TubbyTommy> I see...you're one of the developers of the language itself.
[03:53:36] *** Joins: trevors (~trevors@user/trevors)
[03:53:39] <ljharb> yeah, I’m on tc39, and was an editor from 2018-2021
[03:56:24] <stenno> n> new Set([-0,0])
[03:56:24] <jellobot> (okay) Set(1) { 0 }
[03:56:44] <ljharb> sadly, Map and Set use SameValueZero instead of SameValue
[03:57:16] <stenno> it would be cool if you could override that comparator
[03:57:19] *** audio is now known as audiomouse
[03:57:21] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[03:57:29] <ljharb> i agree
[03:57:44] *** Quits: fawwaz (~fawwaz___@180.254.75.104) (Read error: Connection reset by peer)
[03:57:45] <stenno> maybe a well-known symbol SetUniqueness?
[03:58:05] <stenno> i guess you culd just use toprimitive
[03:58:50] <stenno> hm
[03:59:19] <ljharb> a symbol protocol would both not work and not be good, because then you could change it for a set
[03:59:25] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[03:59:33] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:a555:b496:2cfc:aa25)
[04:00:00] <stenno> n> const foo = {[Symbol.toPrimitive]() ( return 0; }; const bar = {[Symbol.toPrimitive]() { return 0; }}; new Set([foo,bar])
[04:00:01] <jellobot> (fail) SyntaxError: Unexpected token '('
[04:00:03] <stenno> mh
[04:01:04] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:01:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:01:05] *** Joins: wroathe (~wroathe@user/wroathe)
[04:01:26] <stenno> n> const foo = {[Symbol.toPrimitive]() ( return 0; }}; const bar = {[Symbol.toPrimitive]() { return 0; }}; new Set([foo,bar])
[04:01:27] <jellobot> (fail) SyntaxError: Unexpected token '('
[04:01:39] <stenno> n> const foo = {[Symbol.toPrimitive]() { return 0; }}; const bar = {[Symbol.toPrimitive]() { return 0; }}; new Set([foo,bar])
[04:01:39] <jellobot> (okay) Set(2) { { [Symbol(Symbol.toPrimitive)]: [Function: [Symbol.toPrimitive]] }, { [Symbol(Symbol.toPrimitive)]: [Function: [Symbol.toPrimitive]] } }
[04:01:42] *** Joins: karabaja4 (~karabaja4@dh207-94-120.xnet.hr)
[04:01:50] <stenno> hm ok
[04:02:57] *** Joins: sam_1 (~sam_1@87.51.251.118)
[04:10:45] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[04:13:43] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Quit: WeeChat 3.4)
[04:15:38] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[04:17:03] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:20:50] *** Joins: jazzy (~jaziz@user/jaziz)
[04:22:17] *** Joins: pulse (~pulse@user/pulse)
[04:25:29] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:27:12] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 3.3)
[04:31:51] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[04:33:48] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[04:34:53] *** Quits: mikrosis (~mikrosis@dynamic-046-114-170-099.46.114.pool.telefonica.de) (Quit: Connection closed)
[04:36:21] *** Joins: xtd8865 (~textual@39.71.93.209.dyn.plus.net)
[04:36:50] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[04:37:31] *** Quits: xtd8865 (~textual@39.71.93.209.dyn.plus.net) (Client Quit)
[04:37:57] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:38:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[04:39:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:41:15] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[04:43:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[04:45:19] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:48:16] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:49:39] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[04:52:16] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:78cf:6f3f:4205:5ab9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:57:13] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:58:36] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 240 seconds)
[04:59:26] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:00:55] *** Joins: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[05:01:09] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:01:11] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 256 seconds)
[05:03:34] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[05:05:06] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 272 seconds)
[05:05:50] *** Joins: vysn (~vysn@user/vysn)
[05:06:00] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:08:08] *** Joins: hackers (~self@user/hackers)
[05:08:28] *** hackers is now known as remote
[05:08:42] *** Joins: trevors (~trevors@user/trevors)
[05:11:05] <codebam> would anyone be able to help me write this function? for some reason it's returning {} https://pb.sbehan.ca/pJN3
[05:12:04] <stenno> pass Promise.resolve(1) as the second reduce param
[05:13:08] <stenno> i.e. in the second-to-last row
[05:13:38] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[05:13:48] <codebam> instead of {} ?
[05:14:15] <stenno> yes
[05:15:11] <stenno> n> [async() => 1, async() => 2, async() => 3].reduce((acc,cur) => acc.then(cur), Promise.resolve(1));
[05:15:12] <jellobot> (okay) 3
[05:15:19] <codebam> okay thank you
[05:15:40] <stenno> n> [async(i) => i+1, async(i) =>i+ 2, async(i) =>i+ 3].reduce((acc,cur) => acc.then(cur), Promise.resolve(1));
[05:15:41] <jellobot> (okay) 7
[05:16:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[05:16:41] <codebam> so I passed Promise.resolve({}) but it's still returning {}. my configs is an object that looks like this: https://pb.sbehan.ca/WcNF
[05:18:12] <stenno> oh wait
[05:18:38] <stenno> hmm its not that easy then
[05:19:10] <stenno> could await in the reduce call
[05:19:31] <stenno> codebam: do you want those to get handled sequentially?
[05:19:49] <codebam> nah order doesn't matter here
[05:20:07] <codebam> should I be using Promise.all()?
[05:20:13] <stenno> ok just save the result of the reduce you pasted, and then call Promise.all on it
[05:20:30] <stenno> hmm actually
[05:21:58] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 260 seconds)
[05:22:49] <codebam> trying to do that but it's not the right type
[05:23:16] <stenno> it has to be an array
[05:24:25] <stenno> don't you want const mapped = this.configs.map(bot_config => sha256(bot_config.token)); Promise.all(mapped)
[05:24:35] <stenno> or Promise.all(...mapped)
[05:28:15] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[05:28:37] <codebam> no because I want an object of key: value pairs
[05:29:30] <codebam> not just the sha256 sums but something that looks like { 'shasum_token1': config1, 'shasum_token2': config2 }
[05:29:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:30:22] <codebam> I was doing it syncronously with this reducer before but I switched to using web crypto api's and now my sha256 function is async
[05:32:44] *** Joins: pulse (~pulse@user/pulse)
[05:34:20] <stenno> how about:
[05:35:55] <stenno> const mapped = this.configs.map(bot_config => sha256(bot_config.token).then(ak => [ak, bot_config]); Object.fromEntries(Promise.all(mapped))
[05:39:26] *** Quits: TubbyTommy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[05:40:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:40:12] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[05:40:15] <codebam> Promise.all(configs.map(bot_config => sha256(bot_config.token).then(ak => [ak, bot_config]))).then(console.log)
[05:40:31] <codebam> this gives
[05:40:42] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[05:40:49] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[05:40:58] <codebam> ['sha256sum_token1': config1, 'sha256sum_token2', config2]
[05:41:12] <codebam> or I mean
[05:41:34] <codebam> [['sha256sum_token1': config1], ['sha256sum_token2', config2]]
[05:41:41] <codebam> how can I turn that into
[05:42:07] <codebam> { 'sha256sum_token1' : config1, 'sha256sum_token2' : config2 }
[05:43:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:44:34] <stenno> Object.fromEntries
[05:44:44] <stenno> as i wrote
[05:44:49] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[05:44:56] <stenno> n> Object.fromEntries([['foo', 23]])
[05:44:57] <jellobot> (okay) { foo: 23 }
[05:45:51] <codebam> oh that works thank you
[05:46:08] <codebam> I tried that once but I was just calling it wrong
[05:46:17] <codebam> had to put Object.fromEntries inside .then()
[05:47:26] <Maxdamantus> b> [['foo', 23]] |> Object.fromEntries;
[05:47:27] <jellobot> An async internal error occured: Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once. (1:18)
[05:48:09] <Maxdamantus> Meh, guess reverse application is still only a proposal.
[05:50:44] <Maxdamantus> Wait, that error message suggests it should be supported in b>
[05:51:20] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[05:51:47] <Maxdamantus> b> [['foo', 23]] |> Object.fromEntries(%);
[05:51:48] <jellobot> (okay) { foo: 23 }
[05:51:53] <Maxdamantus> O_o
[05:52:41] <stenno> n> function* foo() { yield ['foo',bar]; }; Object.fromEntries(foo()) @ Maxdamantus
[05:52:41] <jellobot> Maxdamantus, ReferenceError: bar is not defined
[05:52:50] <stenno> n> function* foo() { yield ['foo','bar']; }; Object.fromEntries(foo()) @ Maxdamantus
[05:52:51] <jellobot> Maxdamantus, { foo: 'bar' }
[05:54:04] <Maxdamantus> b> "hello" |>%+%|>%+%|>%+%|>%+%|>%+%|>%+%;
[05:54:05] <jellobot> (okay) 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'
[05:54:20] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[05:54:45] <Maxdamantus> Hmm.. Not sure I like this.
[05:55:38] <stenno> what would you have expected? just 12 times hello ?
[05:55:49] <Maxdamantus> Seems like if that should be the intention, there should just separately be a way of creating functions using that syntax.
[05:56:09] <stenno> or how % is treated
[05:56:19] <Maxdamantus> Yes, how % is treated.
[05:57:29] *** Joins: cheater (~Username@user/cheater)
[05:57:34] <stenno> there is `?` for binding functions too
[05:57:55] <stenno> b> const p10 = parseInt(?,10); ['1','2','3'].map(p10)
[05:57:56] <jellobot> (okay) [ 1, 2, 3 ]
[05:58:44] <stenno> b> parseInt(?,10) |> ['1','2','3'].map
[05:58:44] <jellobot> An async internal error occured: Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once. (1:19)
[05:58:52] <stenno> b> parseInt(?,10) |> ['1','2','3'].map(%)
[05:58:52] <jellobot> (okay) [ 1, 2, 3 ]
[05:58:54] <stenno> hmm
[05:58:58] <stenno> b> parseInt(?,10) |> ['1','2','3']::map
[05:58:58] <jellobot> An async internal error occured: Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once. (1:19)
[05:59:00] <stenno> ok
[05:59:41] <Maxdamantus> So wouldn't that just provide the functionality of "Hack"-style pipelining using F#/OCaml reverse application?
[06:00:21] <stenno> i dont understand :(
[06:00:27] <Maxdamantus> b> [['foo', 23]] |> Object.fromEntries |> ?.foo;
[06:00:27] <jellobot> An async internal error occured: Unexpected token (1:40)
[06:00:43] <stenno> try again with the same line
[06:00:49] <stenno> jellobot has some hiccups sometimes
[06:00:55] <stenno> but will need (%) here too
[06:00:58] <Maxdamantus> No need for the special % syntax if you can just construct functions like that.
[06:01:26] *** Joins: Junxter (~Junxter@222.95.164.193)
[06:01:30] <stenno> you can configure it in the babel plugin
[06:02:13] <Maxdamantus> So is % a separate proposal?
[06:02:58] <stenno> no, its currently part of the stage-2 draft
[06:03:01] <stenno> https://github.com/tc39/proposal-pipeline-operator
[06:03:05] <Maxdamantus> If so, if it gets accepted, the pipeline proposal should almost certainly switch to F#-style, since it can just use the exdsting ? syntax.
[06:03:15] *** Joins: ferdna (~ferdna@user/ferdna)
[06:03:26] <stenno> 'existing'
[06:03:32] <stenno> ? binding is also still a proposal
[06:04:53] <stenno> stage-1 https://github.com/tc39/proposal-partial-application
[06:05:53] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:06:14] <Maxdamantus> Right, so it's a separate proposal.
[06:06:31] *** Joins: justAstache (~justache@user/justache)
[06:06:47] <Maxdamantus> and it looks like b> is doing something different to what is described there.
[06:07:37] <Maxdamantus> b> const f = parseInt~(?, 16); f("100");
[06:07:37] <jellobot> An async internal error occured: Missing semicolon. (1:19)
[06:08:10] <Maxdamantus> That seems like the right way of doing it according to the proposal.
[06:08:14] <stenno> i think the currently used plugin implements an outdated version of that proposal
[06:08:51] <Maxdamantus> so with F# reverse application you could do: "100" |> parseInt~(?, 16);
[06:09:28] <stenno> just like in JS once this proposal is finalized
[06:09:36] <stenno> b> "100" parseInt(?,16)
[06:09:36] <jellobot> An async internal error occured: Missing semicolon. (1:6)
[06:09:38] <stenno> fail
[06:09:43] <Maxdamantus> No, that won't work.
[06:09:46] <stenno> b> "100" |>  parseInt(?,16)
[06:09:46] <jellobot> An async internal error occured: Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once. (1:11)
[06:09:48] <stenno> ooh
[06:09:51] <stenno> ooh i see now
[06:09:52] <Maxdamantus> Thta relies on F#-style.
[06:09:55] <stenno> yes
[06:09:57] <stenno> gotcha
[06:10:08] <systemfault> b> "100" |>  parseInt(%,16)
[06:10:09] <jellobot> (okay) 256
[06:10:25] <stenno> those two don't work well together, i see now what you meant
[06:11:00] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:11:26] <stenno> b> "100" |> parseInt(?,16)(%)
[06:11:27] <jellobot> (okay) 256
[06:11:34] <stenno> like that i guess
[06:11:38] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9da7:df1f:2ac:6bb2)
[06:11:39] *** Joins: aswsd (~helpme8@user/hlpme)
[06:12:12] <aswsd> What's the yarn counterpart to "npm run serve"?
[06:12:39] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:28ac:47ef:31d3:1f9)
[06:12:52] *** Quits: N4buc0- (~N4buc0@189.26.49.16.dynamic.adsl.gvt.net.br) (Ping timeout: 272 seconds)
[06:13:36] <systemfault> yarn serve
[06:13:52] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:14:14] <stenno> Maxdamantus: so you would like if i could declare a function similar to the ? syntax like: const p10 = parseInt(%,10) ?
[06:14:19] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b)
[06:14:37] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[06:17:24] <aswsd> systemfault: thanks. is it a good practice to never mix yarn and npm commands together? Sometimes, I mix them because I don't know which command to use as I'm more familiar with npm
[06:18:41] <stenno> you should use either yarn or npm
[06:18:46] <Maxdamantus> stenno: I'm not sure whether or not I like it, but the problems I have with it exist in the syntax for the "Hack-style" pipeline operator anyway.
[06:19:16] <systemfault> aswsd: Just be sure that you always use the same to install packages
[06:19:40] <Maxdamantus> stenno: if something like that is going to be introduced into the language either way, it should be as a way of writing function expressions, not as a special feature in the |> operator.
[06:19:50] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:20:18] <stenno> b> const foo = {bar: 'x'}; const { bar } = (foo |> %); bar
[06:20:19] <jellobot> (okay) 'x'
[06:20:24] <aswsd> can I ask the experts here which do you prefer, yarn or npm? what are the pros and cons?
[06:20:25] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th) (Remote host closed the connection)
[06:20:37] <aswsd> getting confused which to choose. yarn or npm
[06:20:42] <stenno> Maxdamantus: agreed
[06:20:48] <systemfault> Yarn was better for a while but npm has caught up
[06:21:04] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:74c7:3101:7ef7:bc18)
[06:21:42] <stenno> i'd rather just have ? for partial application and hack-style dropped
[06:21:46] <buu> ljharb: perl added // in like 5.10 or something
[06:21:53] <Maxdamantus> b> 4 |> (% |> % + 2);
[06:21:53] <jellobot> (okay) 6
[06:21:54] <buu> aswsd: just use npm
[06:22:00] <systemfault> ^
[06:22:11] <Maxdamantus> b> 4 |> (% |> % + 3 |> % + 2);
[06:22:12] <jellobot> (okay) 9
[06:22:24] *** Joins: src (~src@user/src)
[06:22:49] <aswsd> buu: thanks. When I run "vue create ", default was yarn. So, I thought yarn was better since it's chosen as default.
[06:23:14] <stenno> that just means that the vue people think yarn is better
[06:23:23] <buu> aswsd: To fully answer the question would take literal paragraphs but the short answer is everyone else uses npm so just go along with it
[06:23:30] <stenno> or easier to use for their purposes
[06:23:44] <buu> I use vue create and got npm, for the record
[06:24:08] <aswsd> stenno: hmm ... if I'm using vue, I'd better use yarn since it's the default. maybe vue supports yarn better?
[06:24:25] <systemfault> aswsd: Nah, it wouldn't make sense.
[06:24:32] <aswsd> buu: If I've already chosen yarn as default when running vue create, how do I revert back to npm?
[06:25:01] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[06:25:15] <stenno> isn't yarn a wrapper over npm anyway?
[06:25:22] <stenno> or is it new
[06:25:25] <stenno> from scratch*
[06:25:34] <ljharb> stenno: i doubt PFA will ever advance
[06:25:56] <stenno> pity
[06:25:56] <ljharb> and hack style’s the only one that will get through for pipeline, so it’s that or nothing. Entirely unrelated to PFA
[06:26:05] <ljharb> not to me, i don’t see the point
[06:26:09] <buu> aswsd: again the simplest answer is to just re-run vue-create and choose npm
[06:26:33] <ljharb> stenno: PFA vs an arrow function is a pretty negligible benefit
[06:26:42] <aswsd> buu: do I need to delete node_modules folder?
[06:26:43] <buu> I doubt there's a clever way to do it otherwise other than a bunch of hand editing files
[06:27:02] <stenno> ljharb: you mean (num) => parseInt(num, 10)
[06:27:05] <buu> aswsd: probably, you can always delete node_modules though, it shouldn't hurt anything (since you can reinstall them all with a single command)
[06:27:21] <buu> aswsd: Maybe do vue create in a new folder and see what it produces
[06:27:28] <aswsd> buu: ok. I'll delete node_modules folder and run vue create again
[06:27:30] <stenno> i guess..
[06:27:48] <ljharb> stenno: yes. And if you call it “num” it’s a huge win over PFA; PFA would call it “?”
[06:28:31] <stenno> hmm i guess, yeah
[06:29:19] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:31:25] <stenno> n> const foo = 1234..toString(?); foo(16)
[06:31:26] <jellobot> (fail) SyntaxError: Unexpected token '?'
[06:31:31] <stenno> b> const foo = 1234..toString(?); foo(16)
[06:31:32] <jellobot> (okay) '4d2'
[06:31:42] <stenno> ljharb: ^ ? binds this
[06:35:58] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[06:37:39] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[06:40:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:40:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:41:20] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-715a-97de-20cc-847c.res6.spectrum.com)
[06:43:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:44:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:44:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[06:48:41] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b) (Ping timeout: 245 seconds)
[06:50:55] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[06:51:59] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-715a-97de-20cc-847c.res6.spectrum.com) (Read error: Connection reset by peer)
[06:52:16] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-715a-97de-20cc-847c.res6.spectrum.com)
[06:56:44] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:56:44] *** Joins: trevors (~trevors@user/trevors)
[06:58:40] *** Joins: Rockwood (~Rocky@user/rocky)
[07:12:22] <ljharb> stenno: true. But the bind-this operator does that better, and is still needed even if PFA exists (much more needed, imo)
[07:13:14] *** Quits: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[07:16:22] <codebam> how would I write this so that I only have to call .split() once? https://pb.sbehan.ca/Nzny
[07:17:48] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[07:18:29] <KevinX> what url is that
[07:19:35] <codebam> would this be correct? https://pb.sbehan.ca/ibCr
[07:19:40] <codebam> KevinX: it's my pastebin
[07:19:54] <codebam> pb = pastebin
[07:20:20] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[07:20:29] <codebam> I wrote a new function and called it with an argument
[07:22:01] *** Joins: jazzy2 (~jaziz@user/jaziz)
[07:23:20] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Quit: leaving)
[07:23:27] <KevinX> ah so thats your own domain. just was curious
[07:23:38] <KevinX> I dont have an answer though. i'd have to see it in context
[07:24:03] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:25:28] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[07:27:31] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:29:30] *** Joins: karabaja4 (~karabaja4@dh207-94-120.xnet.hr)
[07:30:03] *** Quits: kadobanana (~mud@user/kadoban) (Quit: quit)
[07:34:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[07:35:07] *** Joins: mud (~mud@user/kadoban)
[07:36:26] <Rockwood> KevinX, axios also throwing similar error
[07:36:33] <Rockwood> 419
[07:37:59] <KevinX> when fetching the token or when making request 2?
[07:39:05] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[07:39:11] <Rockwood> at time matching
[07:39:34] <Rockwood> backend matching it
[07:39:45] <Rockwood> request doing fine now
[07:40:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:40:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:40:02] *** Joins: wroathe (~wroathe@user/wroathe)
[07:40:30] <Rockwood> how can i know which part is using frontend and backend?
[07:40:38] <KevinX> check some suggestions here https://stackoverflow.com/questions/63527334/laravel-7-vue-2-sanctum-login-error-419-csrf-token-mismatch
[07:40:40] <Rockwood> i forget configs
[07:41:03] <KevinX> learn how to google and research this stuff too
[07:41:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:41:10] <KevinX> will save you a lot of headache
[07:42:09] <KevinX> also practice diving into the code by following it backwards, and logging various parts
[07:42:13] <Rockwood> https://api.rockwood.test/
[07:42:29] <Rockwood> should i do .api.rockwood.test
[07:42:32] <Rockwood> ?
[07:42:40] <Rockwood> in session
[07:43:15] <KevinX> i dont know, but one way to find out is to try it
[07:43:35] <KevinX> doesn't seem right though
[07:44:19] <KevinX> you could check the request to see if the token is coming in properly
[07:44:28] <KevinX> do you have credentials: true in axios?
[07:44:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[07:44:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[07:44:45] <Rockwood> yes
[07:45:00] <Rockwood> KevinX, i chk token is fine there
[07:45:11] <KevinX> laravel has middleware you can use to log out the request info
[07:45:24] *** Quits: aswsd (~helpme8@user/hlpme) (Ping timeout: 250 seconds)
[07:45:35] <Rockwood> but $token and $request->session->token(); not coming similar
[07:45:57] <KevinX> whats the difference?
[07:46:38] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:47:10] <Rockwood> hash_equals($request->session()->token(), $token);
[07:47:17] <Rockwood> this is cause for error
[07:47:27] <KevinX> whats in each? is one an empty string?
[07:47:47] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:47:54] <KevinX> you got to think like a CSI detective and inspect everything
[07:48:01] <Rockwood> https://dpaste.com/D8M94CKFD
[07:48:12] <Rockwood> both having string
[07:48:19] <Rockwood> but not similar
[07:49:29] <KevinX> ok good to rule that out then
[07:49:32] <KevinX> https://stackoverflow.com/questions/68876100/vue-laravel-sanctum-csrf-token-mismatch-419-error
[07:49:46] <KevinX> more mentions of the domain config settings
[07:50:10] <KevinX> this is a bit out of my domain knowledge though so i'm guessing the same as you are
[07:50:21] <KevinX> have you tried the laravel discord?
[07:50:35] <Rockwood> discord dead as well as
[07:50:41] <Rockwood> very less reply
[07:50:51] <Rockwood> not useful
[07:50:55] <Rockwood> oops
[07:51:05] <Rockwood> i am thinking to skip PHP now with node
[07:51:11] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:51:19] <Rockwood> how the idea?
[07:51:21] <Rockwood> hows
[07:51:33] <KevinX> lol i see they roasted you there for spamming the server
[07:51:43] <KevinX> yeah switch to node
[07:52:22] <Rockwood> not good PHP with JS based frotend
[07:52:31] <Rockwood> anyway cya thx
[07:52:33] <Rockwood> bye
[07:52:37] <Rockwood> my shop time
[07:52:45] <KevinX> well, i cant agree with that. but node is fine too
[07:52:50] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[07:52:54] <KevinX> see ya
[07:54:37] <codebam> how do I write a class that I can call JSON.stringify on to get an object?
[07:56:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:57:25] <codebam> never mind I figured it out
[07:57:45] <buu> hurray
[07:57:50] <buu> Learning
[07:58:04] <KevinX> how'd you do it?
[07:58:16] <buu> JSON looks for a special method on objects
[07:58:56] <KevinX> couldnt you just add a valueOf or toString method?
[07:59:06] <KevinX> I havent worked with classes much
[08:01:32] *** Joins: wroathe (~wroathe@user/wroathe)
[08:01:50] <buu> KevinX: That's the general idea but you need something more specialized than toString
[08:01:53] <buu> like.. toJSON
[08:02:55] <KevinX> you'd have to invoke it manually though
[08:03:11] <KevinX> instead of `console.log(MyClass)`
[08:05:43] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[08:06:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:09:40] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[08:10:15] *** Joins: blahboybaz (~blahboyba@c-67-161-97-9.hsd1.wa.comcast.net)
[08:10:26] <blahboybaz> I'm looking at a lesson in js and something doesn't make sense (I don't see it in the code).. https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-inheritance-so-you-dont-repeat-yourself  <--  I understand the usefulness of inheritance (in this example they are showing how a function that appears in more than one object can be pulled out into
[08:10:32] <blahboybaz> a parent object) -- what I don't see (in the code) is anything that indicates a tie between the children objects and the parent (Animal.prototype). For example, in C++ the inheriting object has code in it that explicitly ties it to the partent it is inheriting from -- in C++ Bird and Dog might each look mor like class Bird : public Animal and class Dog : public Animal   I also know there is a class
[08:10:38] <blahboybaz> keyword in the latest javascript but I am not talking about that either. What I'm saying is (it seems to me) there should be some code in each of the children that ties back to that parant (in the example at that link I might expect to see the word "Animal" somewhere in the code of Bird and Dog. What am I missing
[08:12:59] <systemfault> That code is weird...
[08:13:13] <systemfault> You have to link to the parent.
[08:13:30] <systemfault> BTW, it's the old busted way to do "classes" in JS... nobody uses that these days.
[08:14:59] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[08:15:28] <systemfault> n> function Animal(){} function Bird() { Animal.call(this) } Bird.prototype = Object.assign(Object.create(Animal.prototype), { constructor: Bird }); (new Bird() instanceof Animal)
[08:15:29] <jellobot> (okay) true
[08:15:45] <systemfault> blahboybaz: Here is you you did it back in the days...
[08:16:07] <systemfault> blahboybaz: These days, you'd simply do: class Animal {} class Bird extends Animal {}
[08:17:05] <systemfault> blueagain: So, the Bird.prototype crap I do in the first example is how you link to the parent
[08:17:12] <systemfault> Sorry blueagain
[08:20:35] <blahboybaz> systemfault: so a keyword
[08:20:44] <blahboybaz> "extensds"?
[08:20:44] <systemfault> Sorry?
[08:20:46] <blahboybaz> sorry
[08:20:51] <systemfault> The new way? Yes.
[08:20:55] <blahboybaz> "extensds"?
[08:20:58] <systemfault> extends
[08:21:12] <blahboybaz> systemfault: Are we talking about js or java here?
[08:21:21] <systemfault> JS... we're on the JS channel
[08:21:27] <blahboybaz> yes
[08:21:28] <blahboybaz> ok
[08:21:30] <KevinX> java scripting
[08:21:39] <systemfault> n> class Animal {} class Bird extends Animal {} (new Bird instanceof Animal)
[08:21:40] <jellobot> (okay) true
[08:21:43] <blahboybaz> just checking  :)
[08:21:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:22:25] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:22:33] <blahboybaz> cool -- I think I may have jumped the guy with my question -- looks like they spread inheritance acrost 3 lessons (they're getting there)
[08:23:02] *** Joins: panella32 (~panella32@138.199.31.193)
[08:23:26] *** Quits: darkdrgn2k (~darkdrgn2@user/darkdrgn2k) (Read error: Connection reset by peer)
[08:23:42] *** Joins: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca)
[08:24:20] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:24:36] <blahboybaz> OH wow.. looks like they're using a totally different way of going about it (does not involve any extends keyword at all)
[08:24:45] <blahboybaz> I can see what they are doing tho and it makes sense
[08:24:54] <panella32> I'm some string with different lengths and I want to append some zeros to the end of each until each string have a 8k length (like 8, 16, 24 so on). Any idea?
[08:25:19] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Remote host closed the connection)
[08:25:26] <panella32> for example "215455" --> "21545500"
[08:25:52] <panella32> *have
[08:26:22] <leduyquang753> Compute the supposed length then use `padEnd`.
[08:26:59] <panella32> thanks leduyquang753 let me check it out
[08:30:18] *** Joins: toastloop (~toastloop@user/toastloop)
[08:32:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:32:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:32:20] *** Joins: wroathe (~wroathe@user/wroathe)
[08:36:40] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[08:36:53] *** Joins: karabaja4 (~karabaja4@dh207-94-120.xnet.hr)
[08:37:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:41:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:43:16] <panella32> solved thanks to leduyquang753
[08:45:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:45:44] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[08:45:57] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-715a-97de-20cc-847c.res6.spectrum.com) (Ping timeout: 240 seconds)
[08:46:49] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b)
[08:47:48] <vqueiroz> OMG. Been away for so long and just now I connected to ask for something, clicked on JS channel by mistake and read about GreenJello. Such sad news. RIP ='(
[08:48:09] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:49:18] <systemfault> Yeah... Too bad he's gone, he was a great person
[08:50:43] <KevinX> yep. tragic
[08:50:50] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[08:51:18] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:28ac:47ef:31d3:1f9) (Quit: Client closed)
[08:51:21] <vqueiroz> I can't believe it. he was just 27
[08:51:47] *** Joins: aswsd (~helpme8@user/hlpme)
[08:51:48] *** Quits: stagas (~stagas@2a02:587:c41b:6388:8b34:53c3:322c:bdc5) (Ping timeout: 240 seconds)
[08:52:08] <vqueiroz> Virtual hug, guys \ õ / =/
[08:52:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:53:08] <KevinX> つ ◕_◕༽つ
[08:57:43] *** Quits: panella32 (~panella32@138.199.31.193) (Quit: Textual IRC Client: www.textualapp.com)
[08:57:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:00:32] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Remote host closed the connection)
[09:01:56] *** Joins: karabaja4 (~karabaja4@dh207-94-120.xnet.hr)
[09:04:38] *** Joins: dimi1947 (~dimi1947@ppp005055071196.access.hol.gr)
[09:05:11] *** Quits: dimi1947 (~dimi1947@ppp005055071196.access.hol.gr) (Client Quit)
[09:09:30] <aswsd> After downloading a github project, how do I know whether it uses yarn or npm?
[09:09:36] *** Joins: dimi1947 (~dimi1947@ppp005055071196.access.hol.gr)
[09:09:54] *** Joins: myq (~user@c-73-67-223-145.hsd1.or.comcast.net)
[09:10:00] <ljharb> aswsd: if there's a yarn.lock, it uses yarn. otherwise, it uses npm
[09:16:09] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[09:19:21] *** Joins: mexen (uid495612@user/mexen)
[09:19:21] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b) (Ping timeout: 256 seconds)
[09:19:38] <buu> I use ljharb.lock files personally
[09:19:49] <buu> It's like yarn.lock but more opinionated
[09:20:46] *** Quits: dimi1947 (~dimi1947@ppp005055071196.access.hol.gr) (Quit: Leaving)
[09:21:15] <ljharb> buu: that sounds nice
[09:21:51] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:22:05] <ljharb> buu: altho i do not appreciate being lumped into the same sentence as yarn, tyvm
[09:27:24] *** Quits: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca) (Ping timeout: 240 seconds)
[09:30:52] <blahboybaz> Why doesn't there seem to be a way to check for properties added via a mixin?  target.hasOwnProperty(property)  does results in undefined  property in tartet  results in undefined  but, still, the property that was added with a mixin can later be changed (even to a different data type) target.property = "whatever you want";  and can then be retrieved  console.log(target.property); // result :
[09:30:58] <blahboybaz> "wahtever you want"
[09:31:22] <blahboybaz> The property must persist but can not seem to be verified to exist in any way I know of
[09:31:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:32:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[09:33:04] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:33:13] <ljharb> blahboybaz: mixins are a huge antipattern
[09:33:31] <ljharb> blueagain: and "mix in" isn't a standard thing, so whatever random thing you used to do the mixing, you'd need to know its semantics
[09:33:38] <ljharb> blahboybaz: ^
[09:33:40] <ljharb> blueagain: sorry
[09:34:08] <ljharb> blahboybaz: https://reactjs.org/blog/2016/07/13/mixins-considered-harmful.html and https://raganwald.com/2016/07/16/why-are-mixins-considered-harmful.html are worth reading
[09:34:10] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[09:34:21] <blahboybaz> Nevertheless the question still remains   https://onecompiler.com/javascript/3xttmcenp
[09:34:44] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:28ac:47ef:31d3:1f9)
[09:34:45] <blahboybaz> That code comes directly from a freeCodeCamp lesson: https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-a-mixin-to-add-common-behavior-between-unrelated-objects
[09:35:13] <ljharb> freecodecamp isn't some kind of authority :-)
[09:35:21] <blahboybaz> We can just it all we want but I still would like to know what's going on
[09:35:27] <blahboybaz> so what?
[09:35:29] <ljharb> blahboybaz: ok so `flyMixin` is just assigning
[09:35:38] <ljharb> so it's making an own property called "fly"
[09:36:00] <ljharb> so `Object.prototype.hasOwnProperty.call(bird, 'fly')` is true
[09:36:07] <ljharb> (never call `.hasOwnProperty` on an object directly)
[09:36:27] <ljharb> and since "mixins" aren't an actual thing, it's just a normal property. so of course you can change it later.
[09:36:35] <blahboybaz> right, I see that. It is the same if I were to do bird.fly = function () {...};
[09:36:38] <ljharb> yuo
[09:36:40] <ljharb> yup
[09:37:03] <blahboybaz> but I don't get why the property can not be checked (neither on the object level nor its prototype)
[09:37:11] <ljharb> what do you mean can't be checked
[09:37:14] <ljharb> `'fly' in bird` is true
[09:37:20] <ljharb> as is the thing i said above
[09:37:35] <blahboybaz> I can even console.log(typeof bird.fly); // output : function
[09:37:55] <ljharb> that's expected
[09:38:08] <Maxdamantus> Do you want the mixin to have no effect?
[09:38:34] <ljharb> blahboybaz: the line in that link tho - `console.log(fly in bird);` - is broken
[09:38:39] <ljharb> blahboybaz: it needs to be `'fly' in bird`
[09:38:43] <blahboybaz> ljharb:  https://onecompiler.com/javascript/3xttmcenp  <--  run that code and see the ouput
[09:38:52] <ljharb> ^
[09:38:58] <blahboybaz> hang on lemme see
[09:40:02] <ljharb> but also, don't trust anything telling you to use mixins :-)
[09:40:05] <blahboybaz> ljharb: OHH.. I see - thanks for pointing that out (problem solved)
[09:40:06] <blahboybaz> :)
[09:40:21] <codebam> where does the dns package come from? I'm looking for dns.reverse()
[09:40:26] <blahboybaz> thanks for the tip
[09:40:29] <ljharb> np
[09:40:32] <ljharb> codebam: it's a node core module
[09:40:39] <codebam> oh so I can't use it in workers?
[09:40:50] <codebam> can I polyfill it?
[09:41:03] <ljharb> no
[09:41:07] <codebam> :(
[09:41:13] <ljharb> i mean, you can use it in node workers
[09:41:20] <ljharb> but it can't work in browsers
[09:41:23] <buu> codebam: like in a browser?
[09:41:27] <ljharb> because browsers can't make arbitrary network requests
[09:41:28] <buu> that sounds worrying
[09:41:32] <codebam> oh okay I see
[09:42:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:42:03] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9da7:df1f:2ac:6bb2) (Remote host closed the connection)
[09:42:17] <codebam> well I'm writing a bot on a web worker and I wanted to do a reverse lookup to make sure the request came from the right place, I'll just have to whitelist the IP range instead
[09:42:22] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e6d0:8f86:be89:6d1)
[09:42:33] <ljharb> codebam: you can't do arbitrary network requests on the web
[09:42:36] <ljharb> like, at all
[09:42:40] <codebam> yes that makes sense
[09:42:43] <ljharb> so you'll have to proxy everything through a real server
[09:43:58] <buu> How.. are you getting requests.. into the web worker?
[09:44:24] <codebam> they're REST requests
[09:44:52] <codebam> I registered a webhook and just started recieving requests
[09:45:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:45:29] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[09:46:13] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[09:46:52] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:47:02] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:48:37] <blahboybaz> They're using/speaking of "Closure" as a verb (not a noun) - is that appropriate? Is that an accurate way to refer to it?  I've only ever seen "a closure" (noun) used in a santance before
[09:50:09] <Maxdamantus> "closure" should be a noun, yes. How are they using it?
[09:50:29] <blahboybaz> "Use Closure to Protect Properties Within an Object from Being Modified Externally"
[09:50:38] <Maxdamantus> That's a noun.
[09:50:59] <blahboybaz> Maxdamantus: without the definite article "A" attached to it?
[09:51:14] <Maxdamantus> Yes. It's an uncountable noun.
[09:51:33] <blahboybaz> an "uncountable" noun? I never heard of that
[09:51:36] <blahboybaz> hmm
[09:51:42] <Maxdamantus> It can be used countably or uncountably.
[09:51:59] <blahboybaz> Are we talking about language or closures?
[09:52:24] <Maxdamantus> countably it refers to a function instance (or something that is part of a function instance). Uncountably it refers to the concept that that provides.
[09:52:59] <blahboybaz> I see
[09:53:03] <Maxdamantus> "uncountable noun" is a general term used to describe certain nouns in English.
[09:53:03] <blahboybaz> interesting
[09:53:05] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2 Beta Build (2022/02/20 UTC) 64 Bit)
[09:53:25] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:53:26] <blahboybaz> Well you learn something every day now don't you?  :)
[09:53:27] <blahboybaz> thx
[09:54:19] <blahboybaz> wow I"m blown away - google countable noun - its really a thing
[09:55:10] <KevinX> im more blown away that you're blown away
[09:55:17] *** Joins: sa0 (~sa0sin@88.120.82.205)
[09:55:21] <Maxdamantus> I knew my minor in linguistics would have a use some day.
[09:55:53] <KevinX> next google how to use fewer vs less
[09:55:56] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[09:55:57] <ljharb> blahboybaz: i think it should be "use a closure"
[09:56:01] <ljharb> blahboybaz: unless it's "use closure compiler"
[09:56:20] <ljharb> "closure" without an article is definitely not correct
[09:56:21] <Maxdamantus> I think "closure" is fine there.
[09:56:31] <Maxdamantus> I'm not sure I like the title casing though.
[09:56:35] <ljharb> "use closure" does not at all sound like idiomatic english to me
[09:56:58] <Maxdamantus> From a programming language perspective it's fine.
[09:57:02] <blahboybaz> https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-closure-to-protect-properties-within-an-object-from-being-modified-externally  <--  they're using an example of making a variable private or protected by declaring it inside the constructor.
[09:57:03] <ljharb> i don't agree
[09:57:05] <KevinX> definitely "use a closure" or possibly "use closures"
[09:57:07] <Maxdamantus> "closure" is the act of capturing variables.
[09:57:14] <blahboybaz> ljharb: ^ sorry
[09:57:18] <ljharb> eh, that's "closing over"
[09:57:25] <Maxdamantus> "a closure" is something that has captured variables.
[09:57:28] <ljharb> but either way it *reads* like it's not from a native english speaker
[09:57:29] <ljharb> right
[09:57:31] <ljharb> you use a closure
[09:57:33] <ljharb> or you close
[09:57:41] <ljharb> "closure" as the verb is super weird
[09:57:50] <Maxdamantus> Right, but noone has used it as a verb.
[09:58:11] <Maxdamantus> "use closure" is fine.
[09:58:23] <ljharb> blahboybaz: right, that's the super obsolete "module pattern"
[09:58:36] <Maxdamantus> What language concept do you use to encapsulate access to variables? Closure.
[09:58:42] <ljharb> Maxdamantus: it's not fine if multiple native english speakers think it reads weird
[09:58:48] <ljharb> Maxdamantus: no, that's not the concept. it's "closures"
[09:58:49] <Maxdamantus> (you could say "closing over", but "closure" should be understood to mean the same thing there)
[09:58:49] <ljharb> or "a closure"
[09:58:51] <ljharb> it's never "closure"
[09:59:03] <KevinX> ehh it might be acceptable in this context since it reads like instructions. It still clunky though
[09:59:05] <ljharb> "closure" is what you get when you find resolution from a trauma
[09:59:10] <blahboybaz> So, given the example being shown (declaring a variable in a constructor), and the fact (fact?) that a constructor is just a function (right?) then can the same concept be acheived in any function? And, if so, does that mean that "closure" is somehow coming from or enabled by "scope" ?
[09:59:17] <ljharb> blahboybaz: yes
[09:59:21] <ljharb> !scope @ blahboybaz
[09:59:21] <jellobot> blahboybaz, http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet https://snek.dev/blag/2019-07_js_hoisting
[09:59:32] <blahboybaz> oh friffing WOW!
[09:59:40] <blahboybaz> friggin  :)
[10:02:08] <Maxdamantus> https://en.wikipedia.org/wiki/Closure_(computer_programming)
[10:02:14] <Maxdamantus> > Apple introduced blocks, a form of closure
[10:02:20] <Maxdamantus> > C# anonymous methods and lambda expressions support closure
[10:02:27] <Maxdamantus> > D version 1, has limited closure support
[10:02:45] <ljharb> that examples exist doesn't make it ok
[10:02:52] <ljharb> "limited closure support" makes sense fwiw
[10:02:58] <ljharb> and the first one is arguable
[10:03:01] <ljharb> but the second one is just ridiculous
[10:03:08] <Maxdamantus> It demonstrates that neither me nor the example quoted was made up.
[10:03:15] *** Joins: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca)
[10:03:16] <ljharb> sure, nobody accused you of making it up
[10:03:34] <Maxdamantus> The terminology is demonstrably in use, and it makes sense grammatically.
[10:03:41] <ljharb> and language evolves; maybe it wouldn't have felt weird 40 years ago. it feels weird now
[10:04:24] <ljharb> also the first sentence of that wiki article says "a closure"
[10:04:45] <Maxdamantus> Sure, most of the time it is giving examples of closures.
[10:05:02] <Maxdamantus> But when referring to the underlying concept, it sometimes uses it uncountably, in the way I described.
[10:05:14] <Maxdamantus> eg, when talking about things that are not necessarily functions.
[10:05:32] <ljharb> sure, i'm not saying it's incorrect grammar. i'm saying it sounds wrong, and so descriptively, that makes it a bad choice
[10:05:58] <ljharb> and when "use a closure" would make the headline read unambiguously fine, it's a pretty easy call to make
[10:06:03] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:06:18] <Maxdamantus> They might not be talking about a particular closure.
[10:06:26] <Maxdamantus> Maybe "use closures" would be appropriate.
[10:07:06] <ljharb> that would be 100% fine by me
[10:07:39] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[10:10:36] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 240 seconds)
[10:10:48] <Maxdamantus> This is the second thing I Googled: https://wiki.c2.com/?LexicalClosure
[10:11:01] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:11:09] <Maxdamantus> again, mostly talking about "a closure", but then in the middle it automatically refers to "The concept of lexical closure"
[10:11:17] <ljharb> sure, the adjective makes it work
[10:11:26] <ljharb> "the concept of closure" would mean something *wildly* different
[10:12:01] <Maxdamantus> "lexical closure" and "closure" are the same thing. The author is just trying to be clearer.
[10:12:09] <Maxdamantus> > A LexicalClosure, often referred to just as a closure, ...
[10:12:34] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[10:12:45] <blahboybaz> Arent arrow functions like lambda functions? If so, then arrow functions ought to be like, automatic closures (or something)
[10:12:49] <Maxdamantus> Maybe to differentiate it from emotional closure, or maybe some other concept of closure that might exist in mathematics.
[10:13:30] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[10:13:55] <ljharb> right but i'm saying that the word "closure" with no article and no adjective qualifiers overwhelmingly refers to emotional closure
[10:14:53] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[10:15:02] <Maxdamantus> Maybe in some contexts, but certainly not in a programming language context.
[10:16:04] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 272 seconds)
[10:16:10] <Maxdamantus> There's this other meaning in mathematics: https://en.wikipedia.org/wiki/Closure_(mathematics)
[10:17:06] <Maxdamantus> That article also talks about countable closures (usually it's saying "the closure [of a set]"), but it also sometimes refers to this other concept of closure, when it says "a closure property" or "axiom of closure".
[10:17:46] *** Joins: kshockey (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[10:17:46] *** Quits: kshockey (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[10:17:46] *** Joins: kshockey (~kyshoc@user/kyshoc)
[10:17:57] <ljharb> "axiom of closure" is one that doesn't have an article or an adjective, but it doesn't read weird to me
[10:18:14] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Ping timeout: 256 seconds)
[10:18:38] <Maxdamantus> Right, the point is it's referring to the concept rather than a particular instance of it.
[10:18:55] <Maxdamantus> in which case "closure" (uncountable) is the correct word.
[10:19:00] *** Quits: myq (~user@c-73-67-223-145.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[10:19:33] <Maxdamantus> Anyway, nice yarn.
[10:19:58] <ljharb> unlike yarn, which isn't nice
[10:20:46] <Maxdamantus> Haven't really used it, but I suspect I wouldn't disagree.
[10:21:56] <blahboybaz> Are IIFE (Immediately Invoked Function Expression) the ancestor of arrow functions?
[10:22:15] <Maxdamantus> blahboybaz: arrow functions can be immediately invoked too.
[10:22:24] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[10:22:40] <Maxdamantus> "IIFE" is just a name for a pattern, which could apply to arrow functions or non-arrow functions.
[10:22:45] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:23:23] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:23:36] <ljharb> !iife @ blahboybaz
[10:23:36] <jellobot> blahboybaz, An "immediately invoked function expression" is an expression that both creates and calls a function. As with any function call, a scope is created. "(function () { /* ... */ }())" is the most common form. For more info: http://benalman.com/news/2010/11/immediately-invoked-function-expression/
[10:23:46] <blahboybaz> Maxdamantus: They aren't always?
[10:23:53] <ljharb> blahboybaz: arrow functions are just normal functions, but they don't bind `this` (or `super` or `arguments`), and they don't have an explicit name
[10:24:04] <blahboybaz> I guess I'm thinking of their use as a callback
[10:24:23] <Maxdamantus> blahboybaz: if it's not immediately invoked, it's not an IIFE.
[10:24:26] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[10:24:39] <blahboybaz> I see
[10:25:02] <blahboybaz> Well this has been an interesting night - I've been learning so much
[10:25:12] <Maxdamantus> IIFEs might be useful for creating callbacks, but there'd be another function involved.
[10:25:36] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:25:49] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:26:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[10:27:06] <Maxdamantus> doSomething((counter => result => { handleResult(foo, result); })(counter)); counter++;
[10:27:18] <Maxdamantus> Though it should be very rare nowadays that you'd need to do something like that.
[10:27:38] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[10:27:47] <ljharb> indeed, IIFEs are basically obsolete now that modules exist
[10:32:58] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:28ac:47ef:31d3:1f9) (Quit: Client closed)
[10:33:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:33:09] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:33:09] *** Joins: wroathe (~wroathe@user/wroathe)
[10:36:42] *** Parts: a1paca (~a1paca@user/a1paca) (Leaving)
[10:38:05] *** Quits: Kartagis (~iegg@user/kartagis) (Remote host closed the connection)
[10:38:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[10:39:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:41:41] *** Joins: stagas (~stagas@2a02:587:c41b:6388:4bc0:6887:ad36:7515)
[10:42:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:42:40] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[10:45:16] *** Joins: p-i-_ (~Ohmu@183.89.29.122)
[10:45:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:48:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:74c7:3101:7ef7:bc18) (Ping timeout: 240 seconds)
[10:50:09] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[10:51:54] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:58:32] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:59:00] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:01:48] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[11:02:35] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:dc05:c100:25e7:ad04)
[11:03:34] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[11:09:17] *** Quits: pizdets (~pizdets@183.182.114.226) (Ping timeout: 240 seconds)
[11:10:39] <codebam> in javascript if I do, const x = 7 / 2; is that cached somewhere or does it set it in every instance? what about in rust, would the compiler know to save that value (not apply a division) instead of calculating it at runtime?
[11:11:47] <Maxdamantus> codebam: yes, the compiler will likely do constant folding on that in both cases (Rust and JS)
[11:11:55] <codebam> oh okay cool
[11:12:49] *** Joins: pizdets (~pizdets@183.182.115.230)
[11:14:23] *** Joins: thiras (~thiras@user/thiras)
[11:14:28] *** Joins: ynnos (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[11:15:28] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:16:46] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[11:17:30] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Ping timeout: 272 seconds)
[11:17:35] *** ynnos is now known as sonny
[11:20:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:26:24] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e6d0:8f86:be89:6d1) (Quit: Leaving)
[11:27:39] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:28:28] *** Joins: c4017_ (~c4017@2604:3d08:747f:7c90:55aa:d9ba:2b59:8544)
[11:29:02] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Killed (NickServ (GHOST command used by thekingofbandit1!thekingofb@thunix.net)))
[11:29:35] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[11:29:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:30:25] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[11:30:47] *** Joins: electrostatic (~electrost@2601:602:8701:536:6d5e:c47f:ee56:d9f1)
[11:32:11] *** Quits: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 256 seconds)
[11:32:57] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[11:35:25] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:35:56] *** Joins: src_ (~src@user/src)
[11:36:23] *** Quits: src (~src@user/src) (Read error: Connection reset by peer)
[11:38:42] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5647:37e6:5350:44e8)
[11:43:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:46:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:46:21] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:47:01] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[11:47:17] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[11:48:54] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:48:54] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:48:54] *** Joins: wroathe (~wroathe@user/wroathe)
[11:49:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:52:57] <buu> If I have a class Thing { x,y,z } and I have a hash with {x,y,z} keys is there a magical way to instantiate a Thing from it?
[11:53:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[11:54:21] <buu> or even thing[x,y,z]=foo[x,y,z] ?
[11:55:20] <Cork> by hash you mean an anonymous object?
[11:55:30] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[11:55:57] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[11:55:58] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[11:56:11] <buu> yes =/
[11:57:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:58:06] <Cork> n> a = {x:1,y:2,z:3};  class Thing { constructor({x,y,z}) { this.x = x, this.y = y, this.z = z } }; new Thing(a)
[11:58:07] <jellobot> (okay) Thing { x: 1, y: 2, z: 3 }
[11:58:20] *** Joins: k8yun (~k8yun@user/k8yun)
[11:58:43] *** Quits: k8yun (~k8yun@user/k8yun) (Remote host closed the connection)
[11:59:19] <Maxdamantus> Object.assign(thing, obj);
[11:59:20] <buu> Cork: That is an awful lot of typing
[11:59:36] <buu> Maxdamantus: That seems better but what if obj has fields that don't exist on thing?
[11:59:49] <buu> Also wtf, where did #privateField come from
[11:59:55] <Cork> buu: new Thing(a) is a lot of typing?!?
[11:59:58] <buu> More also: are there any methods you can call on classes?
[12:00:05] <Maxdamantus> JavaScript doesn't have a concept of particular fields belonging to a class.
[12:00:47] <buu> Maxdamantus: what about: constructor(x){this[...] = x[Object.keys(this)] }
[12:00:48] <buu> or something
[12:01:09] <Maxdamantus> You could modify Cork's solution a bit to use `Object.assign`, which I think will be a bit more concise.
[12:01:24] <Maxdamantus> constructor({ x, y, z }){ Object.assign(this, { x, y, z }); }
[12:02:50] <buu> Yeah but I'm still typing out all the fields on my object
[12:03:06] <buu> They're already defined on the class, why not use that list
[12:03:14] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:03:18] <Maxdamantus> How are they defined on the class?
[12:03:24] <Maxdamantus> You mean in TypeScript?
[12:03:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:03:38] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[12:03:46] <buu> uh
[12:03:53] <buu> Does regular js not do that?
[12:04:01] <Maxdamantus> Not as far as I know.
[12:04:15] <buu> Oops.
[12:04:43] <KevinX> just filter them out after the assign
[12:04:57] <buu> "With the JavaScript field declaration syntax, the above example can be written as:
[12:05:11] <buu> Maxdamantus: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#field_declarations
[12:05:37] *** Quits: electrostatic (~electrost@2601:602:8701:536:6d5e:c47f:ee56:d9f1) (Ping timeout: 240 seconds)
[12:05:43] <buu> I was pretty sure typescript wouldn't add that much..
[12:05:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:05:58] <Maxdamantus> Hm. I guess that just exists for documentation purposes. I don't think there's anything happening semantically there.
[12:06:33] <Decker> there's real things happening ther.
[12:06:36] <Maxdamantus> Ah, it sets them to undefined.
[12:06:50] <Decker> that's not just documentation. NO it sets them to what you saay they = or undefined
[12:07:22] <Decker> Private fields even :)
[12:07:22] <Maxdamantus> Sure, I'm aware of the `=` part. Wasn't aware of it setting them to undefined without the `=` though.
[12:07:38] <buu> Yeah
[12:07:43] <Maxdamantus> n> class Foo { bar; } "bar" in new Foo();
[12:07:43] <jellobot> (okay) true
[12:07:56] <buu> > class Bar { x; y; z; constructor(){console.log(Object.keys(this))} }
[12:08:04] <buu> n> class Bar { x; y; z; constructor(){console.log(Object.keys(this))} } new Bar()
[12:08:04] <jellobot> (okay) [ 'x', 'y', 'z' ] Bar { x: undefined, y: undefined, z: undefined }
[12:08:32] <Maxdamantus> So I guess you could do something like: constructor(o){ for(const k in o) if (k in this) this[k] = o[k]; }
[12:08:40] <Maxdamantus> or just factor that out into a separate function.
[12:09:03] <buu> Maxdamantus: other way around, just get the k from this
[12:09:07] <Maxdamantus> (might be safer using `Object.hasOwnProperty`)
[12:09:16] <Maxdamantus> Right, that works too.
[12:09:19] <Decker> no it doesn't run expressions like that...
[12:09:31] <Decker> oh that's in a constructor
[12:10:12] <Maxdamantus> n> class Foo { bar; baz; constructor(o){ for(const k in this) this[k] = o[k]; } } new Foo({ bar: 42, baz: "qux" });
[12:10:12] <jellobot> (okay) Foo { bar: 42, baz: 'qux' }
[12:10:14] <buu> n> class Bar { x; y; z; constructor(){for(let k of this){console.log(k)} } new Bar()
[12:10:15] <jellobot> (fail) SyntaxError: Unexpected identifier
[12:10:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:10:51] <Decker> needs }
[12:10:54] <buu> what does 'k in obj' do
[12:11:03] <buu> n> class Bar { x; y; z; constructor(){for(let k of this){console.log(k)}} } new Bar()
[12:11:03] <Decker> k in gets the names
[12:11:03] <jellobot> (fail) TypeError: this is not iterable
[12:11:11] <Decker> k of gets the values
[12:11:34] <buu> I think 'x in y' was deprecated or something
[12:11:38] <buu> I'm confused.
[12:11:48] <Maxdamantus> `k of` calls `.[Symbol.iterator]`
[12:12:03] <Maxdamantus> Some people might advocate for `Object.getOwnPropertyNames` instead of `in`
[12:12:08] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:12:08] <Decker> n> class Bar { x; y; z; constructor(){for(let k of this){console.log(k)} } } new Bar()
[12:12:09] <jellobot> (fail) TypeError: this is not iterable
[12:12:28] <Maxdamantus> imo `in` is okay. I'd prefer `in` in this case.
[12:12:29] <buu> Augh
[12:12:49] *** Quits: blahboybaz (~blahboyba@c-67-161-97-9.hsd1.wa.comcast.net) (Quit: leaving)
[12:13:00] <Maxdamantus> (though I'd be inclined to just take explicit arguments anyway, instead of copying things between objects)
[12:13:43] <buu> "
[12:13:44] <buu> The for...in statement iterates over all enumerable properties of an object that are keyed by strings"
[12:13:52] <buu> "The Object.keys() method returns an array of a given object's own enumerable property names,
[12:14:25] <buu> Maxdamantus: Eh, extra typing aside, now you have to update a list in two places, seems very redundant
[12:14:53] *** Joins: stardiviner (~stardivin@39.170.213.70)
[12:14:58] <Maxdamantus> buu: you mean in my preferred solution of using explicit arguments?
[12:15:15] <Maxdamantus> buu: my `for (.. in ..)` solution shouldn't require writing anything any more times than necessary.
[12:15:24] <buu> Maxdamantus: Yes, explicit
[12:15:27] <buu> n> Object.keys('foo');
[12:15:27] <jellobot> (okay) [ '0', '1', '2' ]
[12:15:30] <buu> =[]
[12:15:41] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[12:15:46] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[12:15:56] <Maxdamantus> n> for (let k in 'foo') console.log(k);
[12:15:56] <jellobot> (okay) 0 1 2
[12:16:11] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[12:16:11] *** Joins: mrdata_ (~mrdata@user/mrdata)
[12:16:21] <buu> Is there ever a difference between for in and object.keys?
[12:16:35] <blueagain> buu: https://eslint.org/docs/rules/guard-for-in
[12:16:50] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:16:56] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[12:17:14] <blueagain> buu: Object.keys only gets own enumerable
[12:17:55] <Maxdamantus> Just don't extend.
[12:18:11] <Maxdamantus> and actually, I'm not sure that's correct.
[12:18:18] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 272 seconds)
[12:18:27] <Maxdamantus> n> for (let k in Object.create({ foo: "bar" })) console.log(k);
[12:18:28] <jellobot> (okay) foo
[12:18:49] <Maxdamantus> n> console.log(Object.keys(Object.create({ foo: "bar" }));
[12:18:50] <jellobot> (fail) SyntaxError: missing ) after argument list
[12:18:56] <Maxdamantus> n> console.log(Object.keys(Object.create({ foo: "bar" })));
[12:18:57] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[12:18:57] <jellobot> (okay) []
[12:18:57] *** mrdata_ is now known as mrdata
[12:19:02] <Maxdamantus> Okay, maybe it is.
[12:19:14] <Maxdamantus> So yeah, I guess `Object.keys` is preferable.
[12:19:22] *** Joins: toastloop (~toastloop@user/toastloop)
[12:19:33] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[12:19:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:19:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:19:43] *** Joins: wroathe (~wroathe@user/wroathe)
[12:19:58] <Maxdamantus> n> class Foo { bar; baz; constructor(o){ for(const k in this) this[k] = o[k]; } woof(){ console.log("meow"); } } new Foo({ bar: 42, baz: "qux" }).woof();
[12:19:59] <jellobot> (okay) meow
[12:20:13] <buu> augh my brain
[12:20:30] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[12:20:48] *** Joins: de-facto (~de-facto@user/de-facto)
[12:20:50] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:21:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:21:33] <buu> class A { foo=42 } class B extends A { bar=43; } object.keys(new B())
[12:21:40] <buu> n> class A { foo=42 } class B extends A { bar=43; } object.keys(new B())
[12:21:41] <jellobot> (fail) ReferenceError: object is not defined
[12:21:45] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[12:21:46] <buu> n> class A { foo=42 } class B extends A { bar=43; } Object.keys(new B())
[12:21:47] <jellobot> (okay) [ 'foo', 'bar' ]
[12:22:06] <buu> n> class A { foo=42 } class B extends A { bar=43; } for(let k in new B()){console.log(k)}
[12:22:06] <jellobot> (okay) foo bar
[12:22:11] * buu shrugs
[12:22:44] <buu> What's the difference again?
[12:22:49] <systemfault> This is why I simply don't use classes anymore :P
[12:23:05] <buu> n> class A { foo=42 } class B extends A { bar=43; } B.prototype.fiddle=44; for(let k in new B()){console.log(k)}
[12:23:06] <jellobot> (okay) foo bar fiddle
[12:23:23] <buu> n> class A { foo=42 } class B extends A { bar=43; } B.prototype.fiddle=44; Object.keys(new B())
[12:23:24] <jellobot> (okay) [ 'foo', 'bar' ]
[12:23:28] <buu> ah ha
[12:23:58] <KevinX> systemfault same
[12:24:37] <buu> systemfault: There's a very complicated answer about scoping code to data and vice-versa and the upsides thereof but the downsides of class/object variables scope tending to be too large
[12:24:41] <buu> But it's 3 am
[12:25:11] <mrdata> 4am here
[12:25:14] <systemfault> Liar, 3:55am
[12:25:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[12:25:21] <mrdata> ish
[12:25:29] <buu> But being able to tab complete foo.methods is great
[12:25:31] <Maxdamantus> 9:55 pm
[12:26:24] <buu> On the other hand maybe if you couldn't hide methods in classes the js string class wouldn't have 400 of them and people would have thought slightly harder before adding yet another spelling of substring
[12:26:43] <blueagain> 9:56 am here
[12:27:07] <KevinX> nearly 4am here too
[12:27:09] <blueagain> wait Maxdamantus, where the hell are you? 9:55 pm would put you somewhere in the pacific.
[12:27:10] <buu> A definite advantange of non-OO "standard libraries" is the lack of easy method proliferation
[12:27:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:27:16] <Maxdamantus> Mon Feb 21 09:57:16 PM NZDT 2022
[12:27:18] <buu> blueagain: shh, top secret
[12:27:30] <blueagain> Oh, NZ, makes sense.
[12:27:38] <buu> I believe nz is somewhere in the pacific
[12:27:56] <Maxdamantus> Yes.
[12:28:04] <systemfault> Pretty sure that Maxdamantus is writing from his secret base in the middle of the ocean
[12:28:05] <buu> Much like half of the earth
[12:28:10] <buu> Volcano?!
[12:28:14] <KevinX> n> new Date
[12:28:15] <jellobot> (okay) 2022-02-21T08:58:15.075Z
[12:28:27] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 272 seconds)
[12:28:30] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:28:39] <systemfault> Kingdom of Trudeau here...
[12:28:43] *** Joins: wolfshappen (~waff@irc.furworks.de)
[12:28:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:28:53] <blueagain> Dunno, last time I checked there was like one man and a bunch of sheep in NZ.
[12:28:55] <buu> systemfault: Oh no! Canadian style tyranny is coming for us!
[12:29:08] <Maxdamantus> 16 sheep?
[12:29:08] <blueagain> But that might have changed, I might need to update my DB.
[12:29:11] <buu> Pop quiz: how many substr* variants are there currently in the String class?
[12:29:28] <systemfault> buu: 2?
[12:29:36] <Maxdamantus> 2 is my guess too.
[12:29:38] <systemfault> Is there more?
[12:29:57] <blueagain> buu: I believe there is substr, substring and slice. But I only ever use slice.
[12:30:02] <Maxdamantus> n> Object.getOwnPropertyNames(String.prototype).filter(n => n.startsWith("substr"));
[12:30:03] <jellobot> (okay) [ 'substr', 'substring' ]
[12:30:52] <systemfault> There's a warning on MDN for substr though
[12:31:16] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:31:59] *** Joins: va5c0 (~vasco.nun@50.0.208.46.dyn.plus.net)
[12:32:24] <blueagain> slice is nice, plus it acts pretty consistly across arrays as well, with different semantics of course.
[12:32:41] <blueagain> consistently*
[12:32:55] <systemfault> substr is in an Appendix of the standard, looks like it's a bit like .blink and other DOM-related crap
[12:33:11] <systemfault> n> 'lol'.blink()
[12:33:12] <jellobot> (okay) '<blink>lol</blink>'
[12:33:25] <systemfault> n> 'lol'.blink().p()
[12:33:26] <jellobot> (fail) TypeError: "lol".blink(...).p is not a function
[12:33:29] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:34:08] <systemfault> n> 'lol'.blink().link('https://www.google.com/search?q=lol')
[12:34:09] <jellobot> (okay) '<a href="https://www.google.com/search?q=lol"><blink>lol</blink></a>'
[12:35:03] *** Quits: laris (undead@37.221.209.36) (Ping timeout: 252 seconds)
[12:35:50] <buu> systemfault: wtf
[12:36:17] <systemfault> Blame browser vendors for adding that crap.
[12:37:07] *** Joins: c4017__ (~c4017@S0106c0943583f893.vf.shawcable.net)
[12:37:22] <codebam> how do I use dynamic imports with import syntax instead of require?
[12:38:09] <codebam> oh import();
[12:38:23] <codebam> or well, import().then(...)
[12:38:46] <systemfault> n> 'lol'.blink().big().fixed().fontcolor('red').fontsize('10').italics().small().strike().sub().sup().link('https://www.google.com/search?q=lol')
[12:38:47] <jellobot> (okay) '<a href="https://www.google.com/search?q=lol"><sup><sub><strike><small><i><font size="10"><font color="red"><tt><big><blink>lol</blink></big></tt></font></font></i></small></strike></sub></sup></a>'
[12:39:57] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:55aa:d9ba:2b59:8544) (Ping timeout: 240 seconds)
[12:40:28] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:40:31] *** Quits: va5c0 (~vasco.nun@50.0.208.46.dyn.plus.net) (Read error: Connection reset by peer)
[12:41:05] <Cork> wow... that is utterly horrible...
[12:41:45] <codebam> how do I see it
[12:42:06] <codebam> wait... never mind
[12:42:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:42:27] *** Joins: dan01 (~dan01@2a02:2f09:3805:0:9155:c3f6:45fe:d59e)
[12:43:18] *** Joins: manjaro-user (~manjaro-u@199-7-159-124.eng.wind.ca)
[12:43:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:44:15] *** Joins: va5c0 (~vasco.nun@50.0.208.46.dyn.plus.net)
[12:44:34] *** Quits: konrados (~konrados@user-94-254-225-58.play-internet.pl) (Read error: Connection reset by peer)
[12:46:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:46:57] *** Quits: shreyasminocha (51fdc93eda@user/shreyasminocha) (Ping timeout: 240 seconds)
[12:47:26] *** Quits: johnmuhl (584df448eb@user/johnmuhl) (Ping timeout: 245 seconds)
[12:48:14] *** Joins: johnmuhl (584df448eb@user/johnmuhl)
[12:48:16] *** Quits: gwn (00597634f8@2604:bf00:561:2000::390) (Ping timeout: 245 seconds)
[12:48:22] <codebam> doesn't blink :/
[12:48:34] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[12:48:41] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Ping timeout: 245 seconds)
[12:48:55] *** Quits: sm2n (ae95cb1267@user/sm2n) (Ping timeout: 250 seconds)
[12:49:03] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4065:e397:ba8c:5b7e)
[12:49:20] *** Quits: va5c0 (~vasco.nun@50.0.208.46.dyn.plus.net) (Ping timeout: 272 seconds)
[12:49:23] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[12:49:41] *** Joins: sm2n (ae95cb1267@user/sm2n)
[12:49:49] *** Joins: gwn (00597634f8@2604:bf00:561:2000::390)
[12:49:50] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[12:50:14] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[12:50:37] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:55:21] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[12:55:36] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[12:56:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:57:01] <codebam> this is the syntax for a dynamic import
[12:57:04] <codebam> import("yourmodule").then((named_import) => { ... })
[12:57:05] <codebam> can I do
[12:57:32] <codebam> import("yourmodule").then(({ non_default_import }) => { ... })
[12:58:19] <codebam> or how would I `import { non_default_import } from "yourmodule"` dynamically?
[13:02:51] *** Quits: p-i-_ (~Ohmu@183.89.29.122) (Remote host closed the connection)
[13:03:23] *** Joins: p-i- (~Ohmu@2403:6200:8978:3172:a52c:82f0:fae0:da04)
[13:03:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[13:07:31] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:07:55] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:10:36] *** Joins: rcoote (~rcoote@2a02:908:690:a140:7f7a:fd11:d1e1:ad15)
[13:12:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:12:50] *** Quits: manjaro-user (~manjaro-u@199-7-159-124.eng.wind.ca) (Ping timeout: 260 seconds)
[13:13:34] *** Quits: rvgate (~rvgate@user/rvgate) (Quit: Ping timeout (120 seconds))
[13:14:07] *** Joins: rvgate (~rvgate@user/rvgate)
[13:15:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:16:55] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[13:19:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[13:20:56] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:9c8d:bc4a:f54f:40ea)
[13:22:13] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:9c8d:bc4a:f54f:40ea) (Remote host closed the connection)
[13:22:36] *** Quits: src_ (~src@user/src) (Read error: Connection reset by peer)
[13:22:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[13:22:47] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:1daf:a0:fe39:6993)
[13:23:16] *** Joins: src (~src@user/src)
[13:24:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:3172:a52c:82f0:fae0:da04) (Ping timeout: 240 seconds)
[13:24:41] *** Joins: manjaro-user (~manjaro-u@199-7-159-124.eng.wind.ca)
[13:25:12] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[13:25:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:25:25] *** Joins: src_ (~src@user/src)
[13:27:14] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[13:28:20] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:29:12] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[13:29:50] *** Joins: konrados (~konrados@user-94-254-225-58.play-internet.pl)
[13:30:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:31:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:33:40] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[13:34:28] *** Joins: src__ (~src@user/src)
[13:35:01] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 240 seconds)
[13:36:43] *** Quits: konrados (~konrados@user-94-254-225-58.play-internet.pl) (Read error: Connection reset by peer)
[13:38:19] *** Quits: src_ (~src@user/src) (Ping timeout: 250 seconds)
[13:39:41] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:40:01] *** Joins: velix (~velix@user/velix)
[13:40:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:40:14] *** Joins: konrados (~konrados@user-94-254-225-58.play-internet.pl)
[13:40:38] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[13:41:05] *** Quits: src__ (~src@user/src) (Read error: Connection reset by peer)
[13:41:10] *** Joins: Cork (~Cork@user/cork)
[13:41:21] <velix> Let's say you've got a SPA with auth and a timeout for your session, like 10 minutes idle time. A timer in JS would be easy to hack, how would you do it in 2021? SSE, worker, ws to polling to backend?
[13:41:24] *** Joins: src__ (~src@user/src)
[13:43:03] *** Quits: src__ (~src@user/src) (Read error: Connection reset by peer)
[13:43:22] *** Joins: src__ (~src@user/src)
[13:43:34] <SpiceMan> nothing
[13:43:43] <velix> SpiceMan: good idea!
[13:43:48] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[13:44:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:44:18] <SpiceMan> just continue as usual and if the session token or whatever is invalid in the backend, the user needs to auth again
[13:44:21] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[13:45:10] *** Joins: Guest5293 (~Guest52@213.162.65.110)
[13:45:11] <SpiceMan> and the backend decides that it's invalid after 10 mins or whatever, not the frontend
[13:46:03] *** Joins: teut (~teut@122.161.83.81)
[13:46:37] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[13:47:09] <velix> SpiceMan: nah nah, the website doesn't need a backend.
[13:47:12] <silly> you can however have nagging popups to notify the user a minute before the session is about to expire
[13:47:12] <velix> that's my main problem.
[13:47:21] <velix> you're logging in, get the website and work on it.
[13:47:23] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[13:47:26] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[13:47:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:47:39] <silly> what is expiring if not the backend session?
[13:48:30] <SpiceMan> if it doesn't need a backend, it doesn't need auth nor a session
[13:48:33] <SpiceMan> choose one
[13:48:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[13:48:43] <silly> my bank does that, so i wrote a user script to make dummy requests every couple of minutes
[13:48:58] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:49:00] *** Joins: va5c0_ (~vasco.nun@91.110.154.119)
[13:49:16] <velix> silly: mate, you have to WORK ! don't type in chats.
[13:49:22] <velix> silly: your new boss will fire you!
[13:49:34] <silly> i'm free to do whatever i want!
[13:49:41] <velix> silly: (she said)
[13:49:55] <silly> boss time is 7-15 starting tomorrow
[13:50:01] <velix> silly: I want to let the website expire/close after 10 minutes of idling after the login.
[13:50:03] *** Quits: src__ (~src@user/src) (Read error: Connection reset by peer)
[13:50:15] <velix> During loging, it creates a sesson on the server.
[13:50:29] <velix> I guess, js-timer + SSE might do well here.
[13:50:36] <velix> when SSE doesn't work: ws or polling.
[13:50:38] <velix> Nice fallback.
[13:50:40] <silly> you don't need the sse part
[13:50:43] *** Joins: src (~src@user/src)
[13:50:54] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[13:50:56] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[13:51:33] <silly> not even the bank shuts the frontend down after the backend session has expired
[13:51:56] <silly> it's just that the next request will fail and then the frontend tells me to login again
[13:52:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[13:52:30] <SpiceMan> which is what I said
[13:52:38] <SpiceMan> and what the whole world does
[13:53:00] *** Quits: va5c0_ (~vasco.nun@91.110.154.119) (Ping timeout: 240 seconds)
[13:53:04] <silly> dokuwiki does the nagging thing when you edit articles, it tells you that your lock is about to expire
[13:53:34] *** Joins: src_ (~src@user/src)
[13:53:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:54:52] <silly> velix, don't get caught up with silly solutions to nonproblems
[13:54:57] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4065:e397:ba8c:5b7e) (Remote host closed the connection)
[13:55:21] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4065:e397:ba8c:5b7e)
[13:55:27] *** Joins: nomic (~nomic@185.217.117.193)
[13:56:36] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[13:56:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:57:03] *** Quits: src_ (~src@user/src) (Read error: Connection reset by peer)
[13:57:43] *** Joins: src (~src@user/src)
[14:02:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[14:02:23] *** Joins: src_ (~src@user/src)
[14:02:34] *** Joins: D4mned (~D1mned@212.101.253.32)
[14:03:03] *** Quits: Junxter (~Junxter@222.95.164.193) (Quit: Leaving)
[14:03:15] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[14:03:19] *** Joins: Junxter (~Junxter@222.95.164.193)
[14:04:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:05:15] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[14:05:45] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[14:06:29] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[14:06:33] *** Quits: src_ (~src@user/src) (Read error: Connection reset by peer)
[14:06:37] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[14:06:51] *** Joins: src_ (~src@user/src)
[14:07:46] <velix> silly: the next request to where?
[14:08:26] <silly> do you want lat/long or just the ip?
[14:08:33] *** Quits: src_ (~src@user/src) (Read error: Connection reset by peer)
[14:08:54] *** Joins: src_ (~src@user/src)
[14:09:01] <SpiceMan> velix: the next ever needed request to the backend
[14:09:38] <velix> sigh! there are no requests to a backend :D You login, get the website.
[14:09:47] <SpiceMan> then you don't need a session
[14:09:56] *** Joins: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney)
[14:10:17] <SpiceMan> either you need a session and it's managed by the back end. or you don't need a session nor backend.
[14:10:23] <SpiceMan> what you say makes no sense.
[14:10:51] <velix> sigh! okay. thanks for help.
[14:11:35] <SpiceMan> SPA doesn't mean "I will never ever make request again"
[14:11:39] *** Quits: stardiviner (~stardivin@39.170.213.70) (Remote host closed the connection)
[14:11:51] <SpiceMan> +a
[14:13:52] <silly> but you can shutdown the website after a timeout if you want bad ux
[14:14:24] <silly> and you can't control what more experienced users do in their browsers
[14:15:33] *** Quits: src_ (~src@user/src) (Read error: Connection reset by peer)
[14:16:12] *** Joins: src (~src@user/src)
[14:16:23] *** Joins: TubbyTommy (~blank@user/slimmyjimmy)
[14:16:37] *** Quits: audiomouse (~audio@user/audio) (Ping timeout: 240 seconds)
[14:17:19] *** Quits: Junxter (~Junxter@222.95.164.193) (Quit: Leaving)
[14:18:23] *** Joins: src_ (~src@user/src)
[14:19:23] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[14:19:33] *** Quits: Guest5293 (~Guest52@213.162.65.110) (Quit: Client closed)
[14:21:48] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[14:23:48] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[14:24:31] <codebam> if I pass this as an argument is it possible for args[0] to be args[1]? (args[0], args.slice(1).join(" "))
[14:24:38] <codebam> or do they run sequentially
[14:25:03] *** Quits: src_ (~src@user/src) (Read error: Connection reset by peer)
[14:25:22] *** Joins: src_ (~src@user/src)
[14:25:44] <codebam> I'll just nest another function because I'm not sure
[14:26:02] *** Quits: src_ (~src@user/src) (Remote host closed the connection)
[14:26:13] *** Joins: src (~src@user/src)
[14:26:14] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Ping timeout: 272 seconds)
[14:26:53] *** Quits: src (~src@user/src) (Read error: Connection reset by peer)
[14:27:24] *** Joins: src (~src@user/src)
[14:28:06] *** Joins: va5c0 (~vasco.nun@50.0.208.46.dyn.plus.net)
[14:28:54] *** Joins: toastloop (~toastloop@user/toastloop)
[14:29:55] *** Joins: src_ (~src@user/src)
[14:31:50] <codebam> ""functional programming"" https://pb.sbehan.ca/Rj2t
[14:32:08] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[14:32:31] <Maxdamantus> Doesn't seem very functional to me.
[14:32:38] <codebam> no?
[14:32:41] <codebam> why
[14:32:45] <Maxdamantus> Just normal functions with side effects.
[14:33:00] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[14:33:10] <codebam> no side effects? it calls an API and returns a response
[14:33:11] <Maxdamantus> `sendMessage` does something (has some effect)
[14:33:16] <codebam> no, it doesn't
[14:33:38] <codebam> it returns the response of the sendMessage API call
[14:34:10] <Maxdamantus> So why don't you just write the response directly instead of using the `sendMessage` function to figure out what it is?
[14:35:06] <Maxdamantus> in FP the two things should be equivalent.
[14:35:08] <D4mned> maybe i lack the experience
[14:35:15] <D4mned> but this thing is hard to read
[14:35:24] <Maxdamantus> you can always replace a function call with the value that it returns (assuming you know what that value is).
[14:35:31] <Maxdamantus> Indeed, it's also hard to read.
[14:35:38] <Maxdamantus> (not because of anything to do with FP)
[14:35:40] <codebam> ummm
[14:35:50] <codebam> so what are you saying I should do?
[14:36:09] *** Joins: laris (~laris@37.221.209.36)
[14:36:12] <Maxdamantus> Dunno. Just don't call it "functional programming".
[14:36:45] <D4mned> just add some curly brackets :P
[14:36:56] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[14:37:33] <codebam> but all of my functions take inputs and return outputs in a way that doesn't mutate
[14:37:55] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[14:38:01] <codebam> isn't that what functional means?
[14:38:08] <codebam> it shouldn't matter where I'm calling what from
[14:38:17] <Maxdamantus> You've got `.put(key, value).then(() => ... )`
[14:38:25] <codebam> yes that's calling an API
[14:38:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[14:38:37] <codebam> unavoidable
[14:38:38] <Maxdamantus> if `.put` doesn't mutate, why are you calling it? you're clearly ignoring its return value.
[14:38:49] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: leaving)
[14:39:01] <fweht> anyone worked with gatsbyjs?  not that i consider using it, but looking at some of their examples, they hav component files out of which they export graphql fragments but never import them anywhere else, how would that work?
[14:39:13] <Maxdamantus> in FP you never ignore return values.
[14:39:17] <codebam> it mutates persistent storage on cloudflare kv, that's the only place I .put or set anything except my configs
[14:39:23] <Maxdamantus> if you ignore the return value, there was no point in calling the function.
[14:39:28] <codebam> true I should handle the return but it returns undefined so I don't really care
[14:39:33] <fweht> e.g. in next.js, i can also export getStaticProps, but only at the actual page files, not some component files from which i manually import
[14:39:51] <codebam> I'll add a check for that actually. might as well
[14:40:21] <Maxdamantus> in FP, you don't intentionally call functions that return undefined, for the reason I described.
[14:40:34] <Maxdamantus> if you're calling an API that mutates, that's not FP.
[14:41:07] <Maxdamantus> in Haskell, you don't "call" an API by calling a function.
[14:41:34] <Maxdamantus> you call it by returning the request to the environment as part of your `IO _` action.
[14:42:04] *** Joins: _sa0sin_ (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b)
[14:42:04] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[14:42:56] <codebam> Maxdamantus: it's not my function
[14:43:00] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[14:43:09] <Maxdamantus> codebam: it doesn't matter. It's a function that has an effect.
[14:43:13] <Maxdamantus> codebam: that doesn't exist in FP.
[14:43:15] <codebam> so I should write a wrapper for it?
[14:43:34] <codebam> I could write a wrapper that checks if it's undefined or not and return a boolean
[14:43:49] <codebam> but I just did === undefined &&
[14:43:58] <codebam> which does the same thing
[14:43:59] <Alexendoo> In JS you shouldn't aim for capital F Functional Programming
[14:44:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:44:36] *** Quits: sa0 (~sa0sin@88.120.82.205) (Ping timeout: 272 seconds)
[14:44:53] <Alexendoo> Use the nice functional stuff of course, but it's not a language suitable for that
[14:45:08] <velix> SpiceMan: that's why I specified it that it's not communication with the backend.
[14:45:15] <velix> silly: yes... using a timer, I know. But this can easily be turn off.
[14:45:16] <codebam> but... I like writing it functionally
[14:45:18] <codebam> or trying to
[14:45:24] <velix> silly: Also the backend check could be easily turned off ;)
[14:45:36] <velix> silly: So the only way is: let it commnicate with the server ALL the time :D
[14:45:54] <aolko[m]> hello?
[14:45:57] <Alexendoo> functional is good, to the point where it makes sense in JS
[14:45:59] <velix> silly: okay, I'll put all the frontend stuff into the backend.
[14:46:18] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (Quit: Reconnecting)
[14:46:26] <Alexendoo> But e.g. replacing variables with IIFEs isn't making it more functional, its just making it harder to read
[14:46:32] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[14:46:41] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[14:46:47] <silly> velix, wtf... "backend check"? you said there was no backend
[14:47:15] *** Joins: Lope (~lope@user/lope)
[14:47:30] <velix> silly: sigh! read again.
[14:47:45] <velix> www.silly.org -> login -> backend sends website once.
[14:47:50] <Lope> When I render my modal the first time, I add the google maps API library to my <head> as a <script> when that's done I run `console.log('myDiv',this.manualmap.current); const map = new google.maps.Map(this.manualmap.current, mapOptions); let infoWindow = new google.maps.InfoWindow( ...` but then if I close my modal, re-render it, and run the code shown here again, the google map doesn't render. It doesn't render the map at all. Only the info tooltip thing!?
[14:48:02] <velix> silly: it sends a bundle with all the stuff needed to run the site without a backend.
[14:48:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:48:18] <velix> silly: just the initial auth is done from the backend now
[14:48:22] <silly> ok, now you want the frontend to self destruct after 10min?
[14:51:14] *** Quits: rcoote (~rcoote@2a02:908:690:a140:7f7a:fd11:d1e1:ad15) (Quit: Konversation terminated!)
[14:52:33] <velix> silly: 10 minutes of idle
[14:53:03] <silly> ok, you know you have little control of your users computers
[14:54:07] <silly> my bank thinks this isn't necessary, why do you?
[14:54:12] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[14:54:19] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[14:54:47] <silly> i have worked around this limitation with my bank and they don't care, why would you?
[14:59:01] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:00:38] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:04:15] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Read error: Connection reset by peer)
[15:05:15] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:06:55] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[15:07:00] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4065:e397:ba8c:5b7e) (Ping timeout: 240 seconds)
[15:07:19] *** Joins: bluehoney_ (~bluehoney@gateway/vpn/pia/bluehoney)
[15:07:49] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Remote host closed the connection)
[15:08:03] *** Quits: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 272 seconds)
[15:08:10] *** Joins: de-facto (~de-facto@user/de-facto)
[15:11:00] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[15:11:31] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[15:12:34] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[15:12:49] *** Joins: summersault (~summersau@179.221.251.36)
[15:13:25] <velix> silly: oh, this might get you into trouble. The PSD2 forces those timeouts
[15:13:40] <velix> silly: better report your bank that they have a serious issue.
[15:14:03] <silly> lol, there's little they can do about it
[15:14:37] *** Quits: bluehoney_ (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 240 seconds)
[15:16:37] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[15:19:03] <velix> https://dip.bundestag.de/vorgang/.../284486
[15:19:05] <velix> oops
[15:19:07] <velix> wrong chat
[15:20:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5647:37e6:5350:44e8) (Ping timeout: 250 seconds)
[15:32:03] *** Quits: Stanley (~stanley@d66-183-88-69.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[15:32:25] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[15:32:42] *** Joins: mintoyatsu_ (~mint@user/mintoyatsu)
[15:33:24] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Ping timeout: 250 seconds)
[15:33:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:33:28] *** mintoyatsu_ is now known as mintoyatsu
[15:33:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:fd4a:71a0:8bdb:db3d)
[15:35:00] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[15:36:06] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:1daf:a0:fe39:6993) (Ping timeout: 260 seconds)
[15:37:48] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[15:38:36] *** Quits: va5c0 (~vasco.nun@50.0.208.46.dyn.plus.net) (Ping timeout: 250 seconds)
[15:40:24] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[15:41:27] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[15:41:28] *** Joins: pmercado (~pmercado@186.107.38.28)
[15:41:41] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[15:41:57] *** Joins: Kartagis- (~iegg@user/kartagis)
[15:43:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3027:99e6:c0d6:7e32)
[15:43:47] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[15:45:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:45:06] *** Quits: TubbyTommy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[15:45:58] *** Joins: summersault (~summersau@179.221.251.36)
[15:46:27] *** Quits: src_ (~src@user/src) (Read error: Connection reset by peer)
[15:46:57] *** Joins: src (~src@user/src)
[15:47:11] *** Quits: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca) (Ping timeout: 256 seconds)
[15:48:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:49:19] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[15:49:38] *** Joins: de-facto (~de-facto@user/de-facto)
[15:50:18] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[15:51:58] *** Joins: Junxter (~Junxter@222.95.164.193)
[15:53:30] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[15:53:41] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[15:54:10] *** Joins: pycode (~pycode3@2001:b07:5d28:551:ea12:1261:d2ab:9138)
[15:54:27] *** Joins: summersault (~summersau@179.221.251.36)
[15:57:05] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[15:57:41] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[15:59:51] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[16:01:56] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:06:57] *** Quits: manjaro-user (~manjaro-u@199-7-159-124.eng.wind.ca) (Ping timeout: 250 seconds)
[16:06:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:10:15] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[16:11:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[16:12:34] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[16:14:43] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[16:15:21] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[16:15:56] *** Joins: va5c0_ (~vasco.nun@91.110.154.119)
[16:16:58] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[16:18:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:18:53] *** Quits: pycode (~pycode3@2001:b07:5d28:551:ea12:1261:d2ab:9138) (Ping timeout: 252 seconds)
[16:19:10] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[16:19:25] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[16:19:53] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Quit: WeeChat 3.4)
[16:20:12] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[16:21:31] *** Quits: va5c0_ (~vasco.nun@91.110.154.119) (Ping timeout: 256 seconds)
[16:24:09] *** Joins: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca)
[16:24:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:26:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:28:26] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[16:42:20] *** Quits: _var (~kdy@kiana.kdy.ch) (Quit: Fly Away~)
[16:42:39] *** Joins: _var (~kdy@kiana.kdy.ch)
[16:45:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:45:33] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:47:38] *** Joins: gohlzehn (~gohlzehn@user/gohlzehn)
[16:48:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:49:22] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[16:50:04] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[16:50:20] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[16:51:21] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:53:36] <gohlzehn> Hi. Can someone explain what the advantages are with typescript vs javascript when it comes to type hints? So far I can only think of the fact that if you were to use typescript to add type hints to your function parameters then this can be checked compile-time, otherwise in JavaScript you'd have to check the function parameter inside the function's body to check wether the incoming value is an
[16:53:37] <gohlzehn> expected type or not. Another thing I thought of is testing. If you write tests in typescript then (as far as I see) you're limiting the amount of possible test cases on your function parameter, but in javascript with no type hints you'd have lots of more options that you have to test because run-time every possible option as an argument. Does it make sense what I'm saying? Are there any other
[16:53:39] <gohlzehn> reasons why one would prefer TS over JS when it comes to type hints? Why does one need type hints?
[16:54:01] <Decker> checked at programming time ...
[16:54:30] <Decker> intellisense/code completion/hinting is what its most useful for
[16:55:12] <gohlzehn> Decker: what do you mean with "programming time"? Are you referring to compile-time?
[16:55:20] <Decker> no, while you're coding
[16:56:01] <gohlzehn> Does the testing scenario makes sense I mentioned?
[16:56:12] <gohlzehn> does it indeed reduce the amount of possibilities in TS vs JS?
[16:56:22] *** Joins: dimi1947 (~dimi1947@ppp005055071196.access.hol.gr)
[16:56:52] <Decker> *shrug* the only arguments functions get are the ones that get passed... not alot of checking there
[16:57:11] <dimi1947> does anybody know emiiter.trigger patterns...found usually in node.js
[16:57:27] <Decker> sure - that's why it helps for code hints - that the editor can know ahead of time what sorts of things fit in a place
[16:57:42] <Decker> so - sorta does reduce possibilities
[16:57:45] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[17:02:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:02:12] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[17:11:02] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[17:13:02] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:17:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[17:17:38] *** Parts: gohlzehn (~gohlzehn@user/gohlzehn) (WeeChat 3.2)
[17:19:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:22:51] *** Joins: trevors (~trevors@user/trevors)
[17:24:17] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:27:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:28:36] *** Quits: stagas (~stagas@2a02:587:c41b:6388:4bc0:6887:ad36:7515) (Ping timeout: 240 seconds)
[17:28:38] *** Quits: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca) (Ping timeout: 272 seconds)
[17:28:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:29:45] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:30:27] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[17:33:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:35:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:35:24] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 240 seconds)
[17:40:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[17:42:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:44:52] *** Joins: eugercek (~user@user/eugercek)
[17:46:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:47:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[17:48:54] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[17:50:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[17:50:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:52:50] *** Joins: pycode (~pycode3@2001:b07:5d28:551:b4f7:7e5f:2606:5f00)
[17:53:26] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[17:53:50] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:55:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:55:18] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:55:18] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:55:18] *** Joins: wroathe (~wroathe@user/wroathe)
[17:56:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:58:53] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[18:00:23] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[18:00:39] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[18:00:39] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Client Quit)
[18:01:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:01:30] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[18:03:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:05:03] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[18:07:56] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[18:08:11] *** Quits: henry40408 (~henry4040@175.181.177.116) (Quit: The Lounge - https://thelounge.chat)
[18:08:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:08:45] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[18:09:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:10:14] *** Joins: henry40408 (~henry4040@175.181.177.116)
[18:11:15] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[18:11:22] *** Quits: henry40408 (~henry4040@175.181.177.116) (Client Quit)
[18:12:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:13:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:14:31] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 256 seconds)
[18:14:31] *** Joins: trevors (~trevors@user/trevors)
[18:15:30] *** Quits: bkkk (~bkkk@dslb-088-070-030-097.088.070.pools.vodafone-ip.de) (Remote host closed the connection)
[18:16:20] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[18:17:46] *** Joins: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net)
[18:18:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[18:18:56] *** Joins: VoidSync (~sync@user/voidsync)
[18:20:47] *** Joins: pulse (~pulse@user/pulse)
[18:20:53] *** Joins: stagas (~stagas@2a02:587:c41b:6388:242a:6e77:a13e:c1d)
[18:21:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:22:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:22:47] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[18:23:48] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:24:17] *** Joins: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca)
[18:24:30] *** Quits: VoidSync (~sync@user/voidsync) (Quit: VoidSync)
[18:24:56] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:7576:82c8:2f17:d2c6:9d7a)
[18:25:39] <Harlin> Good morning javascript.
[18:27:16] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:27:16] *** Quits: aswsd (~helpme8@user/hlpme) (Ping timeout: 256 seconds)
[18:28:33] <theskillwithin> morning
[18:29:02] *** Joins: voltage_ (voltage@user/voltage)
[18:29:26] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[18:30:03] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:32:19] <gde33> theskillwithin: hey
[18:32:43] <theskillwithin> yo
[18:33:24] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[18:33:35] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:37:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:37:41] <gde33> I'm trying to do a search thingy. I split the query on spaces then have to find word number combinations like ["size", "17"]  and ["50", "cm"] but the results should include ranges like 49.0-51.0 cm
[18:38:01] <gde33> I've tried a few if else itterations but things get remarkably ugly
[18:38:53] *** Joins: henry40408 (~henry4040@175.181.177.116)
[18:39:03] <gde33> also ahve things like ["foosize","50"] that should equate ["size","50"] in category "foo" -.-
[18:39:34] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[18:40:50] <gde33> the data is a 1000 ish json. I also cant make up my mind if i should simply hide the html nodes or re-parse the json with every key stroke.
[18:40:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:41:06] <gde33> hide/show
[18:43:22] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 272 seconds)
[18:44:44] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[18:45:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[18:46:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:49:59] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:54:49] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[18:54:49] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Write error: Connection reset by peer)
[18:54:58] *** Quits: kzootech (~contact@kzoo.tech) (Quit: WeeChat 3.2.1)
[18:55:06] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[18:55:08] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[18:56:31] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[18:57:26] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[18:57:29] *** Joins: l__q (~modinfo@user/modinfo)
[18:58:48] *** Joins: junebug (~junebug@2600:1700:3db0:2540:240a:eb7a:6461:3400)
[19:01:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[19:01:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:04:54] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[19:05:07] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[19:05:16] <l__q> hey, is it posible to add in react-final-form multiple Field input components with the same name atribute like survey[answers][]? Now with 4 Fields with this name, i cant input any text into Field input
[19:05:46] <d33tah> f
[19:05:51] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[19:06:03] *** Parts: d33tah (~d33tah@2a03:b0c0:3:d0::14d2:c001) (WeeChat 2.8)
[19:07:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[19:07:24] <Dorward> l__q: https://codesandbox.io/s/kx8qv67nk5 looks like it covers what you are after (linked from the examples in the docs: https://final-form.org/docs/react-final-form/examples )
[19:07:57] *** Quits: dfg (~dfg@user/dfg) (Quit: I hate quit messages.)
[19:08:15] <l__q> Dorward: Thank you
[19:08:16] *** Quits: dan01 (~dan01@2a02:2f09:3805:0:9155:c3f6:45fe:d59e) (Ping timeout: 245 seconds)
[19:09:22] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[19:14:56] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:4898:3909:62b2:25c8)
[19:17:43] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:18:33] *** Quits: Lope (~lope@user/lope) (Ping timeout: 256 seconds)
[19:21:53] <l__q> Dorward: im sorry, can you paste the code from codesandbox to pastebin? im now on very bad internet and dosent load for me this csb
[19:22:38] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 272 seconds)
[19:22:57] <Dorward> l__q: https://pastebin.com/bXs095EM
[19:23:28] *** Joins: aswsd (~helpme8@user/hlpme)
[19:23:54] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[19:24:03] <l__q> Dorward: thanks! you save my day
[19:24:29] <hans> how do i check if a variable is an error of some kind? eg Error or TypeError or RangeError
[19:26:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:26:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:26:11] *** Joins: wroathe (~wroathe@user/wroathe)
[19:27:54] *** Quits: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:28:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:29:31] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:30:03] <pavonia> n> try { throw new RangeError("foo"); } catch (e) { if (e instanceof RangeError) console.log("safe"); else throw e; }
[19:30:04] <jellobot> (okay) safe
[19:30:11] <pavonia> n> try { throw new TypeError("foo"); } catch (e) { if (e instanceof RangeError) console.log("safe"); else throw e; }
[19:30:12] <jellobot> (fail) TypeError: foo
[19:31:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:34:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[19:37:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:38:12] <l__q> Dorward: I want to say Thank you, it works thanks you :)
[19:39:53] *** Joins: deadbeat (~quassel@user/deadbeat)
[19:41:13] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:41:23] <Dorward> l__q: Great!
[19:41:33] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[19:41:50] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[19:41:50] *** Quits: shreyasminocha (51fdc93eda@user/shreyasminocha) (Remote host closed the connection)
[19:41:50] *** Quits: gwn (00597634f8@2604:bf00:561:2000::390) (Remote host closed the connection)
[19:41:50] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[19:41:50] *** Quits: johnmuhl (584df448eb@user/johnmuhl) (Remote host closed the connection)
[19:42:38] *** Joins: gwn (00597634f8@2604:bf00:561:2000::390)
[19:42:38] *** Joins: sm2n (ae95cb1267@user/sm2n)
[19:42:38] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[19:42:38] *** Joins: johnmuhl (584df448eb@user/johnmuhl)
[19:42:44] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[19:43:25] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:47:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:47:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[19:48:35] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:48:36] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[19:49:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:51:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:52:51] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[19:52:51] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[19:53:15] <dimi1947> I cannot understand a pattern in an application-someone must read a lot of lines of code to reach a conclusion about wwhat is ggoing on....as I see it my only alternative is to pay somebody...wwhat do you think...is there any chance someone in a help chennel/forum might read many lines of code in order to help me
[19:54:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[19:57:06] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:57:55] <D4mned> how many lines is many lines
[19:58:59] *** Joins: nomic (~nomic@185.198.243.172)
[19:59:38] <gde33> 9000
[20:01:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[20:02:01] <D4mned> my code feels shitty :(
[20:02:17] <gde33> D4mned: redo it later
[20:02:51] <D4mned> thats what iam telling myself too
[20:03:41] <dimi1947> D4mned:150-200
[20:03:52] *** Joins: aLeSD (~aLeSD@139.47.41.16)
[20:03:54] *** Joins: zebrag (~chris@user/zebrag)
[20:03:56] <dimi1947> I am just seeking an opinion on these
[20:04:00] <D4mned> well dimi1947 that fits in one file
[20:04:03] <gde33> often some background character edge case takes over the lead role in the movie half way
[20:04:06] <D4mned> pastebin
[20:04:25] <gde33> then the plot needs serious work :P
[20:05:05] <gde33> dimi1947: what are you trying to accomplish?
[20:06:01] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:06:07] <D4mned> i thought making an irc client is easy
[20:06:12] *** Quits: aLeSD (~aLeSD@139.47.41.16) (Client Quit)
[20:06:20] <dimi1947> I have an emiiter.trigger patter...and I cannot understand why the mousedown eventlistener fires multpipe times....I can show you some code but I doubt it if this is enough...
[20:06:46] <D4mned> events D:
[20:06:49] <D4mned> bubbling
[20:07:02] <D4mned> up and down
[20:09:06] <dimi1947> give me a minute
[20:09:22] * D4mned holds dimi1947's beer
[20:10:06] <D4mned> i know what should be done but i cant bring myself to do it!
[20:10:10] <D4mned> instead im here
[20:11:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[20:13:20] *** Joins: sagax (~sagax_nb@user/sagax)
[20:13:21] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[20:13:32] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[20:15:11] *** Joins: Rockwood (~Rocky@user/rocky)
[20:19:23] <dimi1947> https://jsfiddle.net/fiddlehunt/fvoLu3ta/9/ click on ppp...in my machine this handler fires many times...just to get an idea
[20:19:42] *** Joins: darkdrgn2k (~darkdrgn2@bras-base-toroon4425w-grc-40-76-64-72-176.dsl.bell.ca)
[20:20:20] <dimi1947> if bubbling is the reason....try to replicate/simulate bubbling by changing the HTML to see what will happen
[20:21:14] *** LordKalma_ is now known as LordKalma
[20:22:00] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[20:22:27] <dimi1947> better/cleaner https://jsfiddle.net/fiddlehunt/fvoLu3ta/13/
[20:22:47] <dimi1947> i see no bubbling in this example
[20:23:22] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[20:26:59] *** Joins: kzootech (~contact@kzoo.tech)
[20:27:13] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:7576:82c8:2f17:d2c6:9d7a) (Remote host closed the connection)
[20:27:26] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:7576:82c8:2f17:d2c6:9d7a)
[20:28:01] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:28:11] *** Quits: shreyasminocha (51fdc93eda@user/shreyasminocha) (Remote host closed the connection)
[20:28:11] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[20:28:12] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[20:28:12] *** Quits: johnmuhl (584df448eb@user/johnmuhl) (Remote host closed the connection)
[20:28:12] *** Quits: gwn (00597634f8@2604:bf00:561:2000::390) (Remote host closed the connection)
[20:29:18] *** Joins: quartz (~quartz@user/quartz)
[20:29:24] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:31:02] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[20:32:44] *** Joins: RLa (~RLa@85.253.187.184.cable.starman.ee)
[20:32:51] *** Joins: taupiqueur (~taupiqueu@102.197.204.77.rev.sfr.net)
[20:33:42] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[20:34:26] *** Joins: sm2n (ae95cb1267@user/sm2n)
[20:34:26] *** Joins: johnmuhl (584df448eb@user/johnmuhl)
[20:34:31] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[20:34:32] *** Joins: gwn (00597634f8@2604:bf00:561:2000::390)
[20:34:37] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[20:36:07] *** Quits: henry40408 (~henry4040@175.181.177.116) (Quit: The Lounge - https://thelounge.chat)
[20:38:06] <quartz> Hello. Anyone familiar with flask? I'm trying to get my website running, but when I click on a link, it always says "page not found". This is my This is my layout.html page: https://bpa.st/NKSQ  And this is my server.py: https://bpa.st/M7SA
[20:38:28] *** Joins: Akiva (~Akiva@user/Akiva)
[20:38:59] *** Joins: henry40408 (~henry4040@175.181.177.116)
[20:40:23] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:41:30] *** Quits: taupiqueur (~taupiqueu@102.197.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[20:41:49] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[20:42:03] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[20:42:55] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:44:02] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[20:45:26] <pavonia> quartz: Your link targets don't seem to match any of your routes
[20:46:11] <quartz> pavonia: I've tried to put: templates/welcome.html but it still does not work.
[20:46:12] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:46:12] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[20:46:19] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:8a6:a8d3:62c4:7875)
[20:46:24] *** Joins: teut (~teut@122.161.83.81)
[20:46:47] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[20:47:18] <pavonia> No, because there is no such route
[20:47:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:47:48] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[20:48:12] *** Quits: dimi1947 (~dimi1947@ppp005055071196.access.hol.gr) (Quit: Leaving)
[20:48:17] <quartz> So I need '/' and '/infinity'
[20:48:49] <pavonia> Yes
[20:49:12] <pavonia> or rename the routes
[20:49:19] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[20:50:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3027:99e6:c0d6:7e32) (Ping timeout: 256 seconds)
[20:50:57] <quartz> pavonia: Ok, now I get an error that says: jinja2.exceptions.TemplateSyntaxError: Encountered unknown tag 'end'. Jinja was looking for the following tags: 'endblock'. The innermost block that needs to be closed is 'block'
[20:51:15] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:51:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:51:24] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:51:25] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:51:26] <quartz> I did place the {% endblock %} tags in my log_sales.html file
[20:52:02] <pavonia> What does this file look like?
[20:52:41] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:53:26] <quartz> pavonia: https://bpa.st/DLVA
[20:53:51] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 272 seconds)
[20:54:21] *** Joins: nehsou^ (~nehsou@50.233.120.162)
[20:54:23] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:54:28] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[20:54:29] <pavonia> Hhm, don't know what template syntax it's using
[20:54:59] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:57:27] <quartz> Jinja I'm assuming
[20:59:16] *** Joins: duds- (~duds-@user/duds)
[21:03:26] <quartz> pavonia: Thanks for your help
[21:04:22] *** Joins: kill (~killown@user/killown)
[21:04:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:07:00] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[21:10:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[21:15:35] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:16:16] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:fcaa:9882:8af0:2de7)
[21:16:26] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:fcaa:9882:8af0:2de7) (Client Quit)
[21:17:53] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[21:18:03] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:19:05] *** Quits: D4mned (~D1mned@212.101.253.32) (Read error: Connection reset by peer)
[21:19:27] *** Joins: D4mned (~D1mned@212.101.253.32)
[21:21:28] *** Parts: velix (~velix@user/velix) (Leaving)
[21:25:16] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:7576:82c8:2f17:d2c6:9d7a) (Remote host closed the connection)
[21:25:24] *** Joins: N4buc0- (~N4buc0@189.26.49.16.dynamic.adsl.gvt.net.br)
[21:26:17] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:28:16] *** Quits: aswsd (~helpme8@user/hlpme) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[21:28:44] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 250 seconds)
[21:30:27] *** Joins: crashrep (~crashrep@user/crashrep)
[21:34:14] *** Joins: maret_ (~maret@nat-88-212-37-89.antik.sk)
[21:35:17] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[21:39:26] *** Joins: Betal (~Betal@user/betal)
[21:44:06] *** Joins: trevors (~trevors@user/trevors)
[21:47:46] *** Joins: recyclehero (~alistar@ec2-3-127-140-208.eu-central-1.compute.amazonaws.com)
[21:48:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:48:13] <recyclehero> its mother language day. I hoped js was my mother languagge
[21:48:14] <recyclehero> hi guys
[21:48:30] <recyclehero> I would then made lots of money :D
[21:48:54] <recyclehero> is there a robust package for decoding and creating qrcodes
[21:49:48] <recyclehero> generating is a better word though
[21:52:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[21:53:00] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Ping timeout: 240 seconds)
[21:55:05] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:56:06] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:56:23] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[21:59:16] *** Joins: rcoote (~rcoote@2a02:908:690:a140:5565:34c7:eb58:b297)
[22:02:53] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 256 seconds)
[22:03:57] *** Quits: ravish0007_ (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:04:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:06:07] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[22:06:18] <hamess> recyclehero: https://github.com/soldair/node-qrcode
[22:08:11] *** Quits: maret_ (~maret@nat-88-212-37-89.antik.sk) (Quit: maret_)
[22:09:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:09:53] *** Joins: pmercado_ (~pmercado@186.107.38.28)
[22:09:59] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[22:10:12] *** Quits: pmercado (~pmercado@186.107.38.28) (Ping timeout: 240 seconds)
[22:14:43] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[22:15:35] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[22:15:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:17:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:18:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:18:33] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:64cd:e1df:8737:185)
[22:19:21] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:19:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:20:00] *** Quits: src (~src@user/src) (Quit: Leaving)
[22:20:37] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[22:23:53] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:e00b:cb48:98a7:f7f9)
[22:25:00] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:dc05:c100:25e7:ad04) (Ping timeout: 240 seconds)
[22:29:20] *** Joins: onr (~onr@user/onr)
[22:29:26] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[22:30:16] *** Joins: NinjaKirby (Izzy@gateway/vpn/protonvpn/ninjakirby)
[22:31:26] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:32:36] <codebam> hey would anyone be able to tell me why this messageUpdate function is returning false? it's calling kanye in telegram_bot.ts and hitting both of the console.log() that are there but I don't see how it could be returning false. log: https://pb.sbehan.ca/sbnz code: https://github.com/codebam/cf-workers-telegram-bot/blob/broken-false-response/src/bot.ts#L33
[22:33:04] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:33:05] <codebam> I've been staring at it for hours and adding guards all over the place but I can't figure out why
[22:33:32] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[22:33:45] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:9cbd:24f9:c7dd:ab0f)
[22:33:59] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[22:34:17] *** Quits: onr (~onr@user/onr) (Ping timeout: 240 seconds)
[22:35:48] <codebam> I typed all the functions with typescript but that didn't help either. I have no idea where it's coming from because I don't ever return false in my code
[22:36:42] <codebam> it shouldn't even be possible for update to return false (or Promise<false>) because it's typed with Promise<Response>
[22:37:57] <systemfault> Well, if you started using "if"s instead of using logical operators, that would certainly help making the code easier to read.
[22:38:02] <KevinX> it's logging from here: https://github.com/codebam/cf-workers-telegram-bot/blob/broken-false-response/src/bot.ts#L29
[22:38:03] <blueagain> codebam: That code is not very readable.
[22:38:11] <KevinX> `json` is false
[22:38:32] <KevinX> also, i agree it was hard to read
[22:38:51] *** Joins: mikrosis (~mikrosis@dynamic-046-114-170-099.46.114.pool.telefonica.de)
[22:40:04] <mikrosis> hi
[22:40:23] <codebam> KevinX: oh I see, okay. how is that returning false though?
[22:40:28] <codebam> should it not return a json object?
[22:42:03] <codebam> I found it thank you!
[22:42:13] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[22:42:22] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:42:33] <codebam> executeInlineCommand is returning false, I don't know why typescript didn't catch that but anyways
[22:43:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[22:44:17] <NinjaKirby> The magical power of an answer sought revealing itself when entering IRC is omnipresent in the fabric of the universe.
[22:44:41] <NinjaKirby> Has happened to me an eery numer of times.
[22:45:05] *** Quits: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:23] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:46:41] <blueagain> NinjaKirby: are you suggesting IRC has magical powers?
[22:47:41] <NinjaKirby> blueagain: Hmmm, maybe, or it's just attuned to 'the ether' by coincidence or something :)
[22:48:31] *** Joins: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com)
[22:48:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:49:11] <NinjaKirby> (The magical energy hasn't worked for me this time though)
[22:50:37] *** Joins: sam_1 (~sam_1@87.51.251.118)
[22:52:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:52:27] <blueagain> Hopefully the Old Ones don't start popping up here.
[22:52:56] <blueagain> Man, Lovecraft was a serious nutjob.
[22:53:50] <mikrosis> hii
[22:53:51] *** Joins: sdegutis (~sdegutis@2603:300a:13d1:2000:5104:806:b88e:f89a)
[22:54:10] <blueagain> mikrosis: hullo.
[22:54:15] <mikrosis> so when I need a really, really simple API - cart-tutorial level - for a react app - what can I use? what language and what framework?
[22:54:22] <mikrosis> as simple as possible - no friction and surprises
[22:54:25] <mikrosis> the most boring piece of API server pls
[22:55:09] <blueagain> I hear express is often used to write light APIs, but no idea really, I use my own things usually.
[22:55:59] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[22:56:32] *** Quits: pycode (~pycode3@2001:b07:5d28:551:b4f7:7e5f:2606:5f00) (Ping timeout: 252 seconds)
[22:56:42] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 272 seconds)
[22:57:30] <ljharb> sdegutis: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[22:58:49] *** Tobbi__ is now known as Tobbi
[22:58:50] <sdegutis> Hi everyone, I wanted to share with you a new JavaScript-based web framework I made, and kindly request your feedback: https://www.novocantico.org/
[22:59:36] *** Joins: Tempesta (~Tempesta@user/tempesta)
[22:59:37] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:64cd:e1df:8737:185) (Quit: I have gone to sleep. ZZZzzz…)
[22:59:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:00:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:02:38] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[23:04:03] *** Joins: Tangent-Man (~Tang3nt-M@31.132.2.72)
[23:05:10] <mikrosis> blueagain: hm, yes express looks simple enough.
[23:06:24] <sdegutis> Novo Cantico is a new alternative to express.
[23:06:47] *** Joins: crashrep (~crashrep@user/crashrep)
[23:07:00] <mikrosis> sdegutis: I searched for it in Google but nothing about an API framework :/
[23:07:29] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[23:07:36] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:08:16] *** Joins: nucranium (~nucranium@2a02:8010:6173:0:c0f6:d222:324b:b771)
[23:09:22] *** Joins: Lope (~lope@user/lope)
[23:09:49] <sdegutis> It's brand new as of like this weekend.
[23:10:42] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[23:11:07] *** Joins: thiras (~thiras@user/thiras)
[23:11:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:11:38] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[23:12:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[23:16:33] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:16:33] *** Joins: onr (~onr@user/onr)
[23:16:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[23:17:54] *** Joins: crashrep (~crashrep@user/crashrep)
[23:19:01] *** Joins: jazzy (~jaziz@user/jaziz)
[23:20:56] <hassoon_> facebook message bell is heard seperately for every tab
[23:20:58] <hassoon_> how annoying
[23:21:45] <blueagain> hassoon_: I have a solution for you.
[23:22:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:23:12] *** Joins: Tang3nt-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[23:23:25] *** Quits: sdegutis (~sdegutis@2603:300a:13d1:2000:5104:806:b88e:f89a) (Quit: Client closed)
[23:24:45] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[23:25:26] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Client Quit)
[23:25:37] *** Quits: Tangent-Man (~Tang3nt-M@31.132.2.72) (Ping timeout: 240 seconds)
[23:26:31] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[23:28:58] *** Joins: crashrep (~crashrep@user/crashrep)
[23:29:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 250 seconds)
[23:31:17] *** Quits: Lope (~lope@user/lope) (Ping timeout: 240 seconds)
[23:31:19] *** Joins: onosendi (~onosendi@user/onosendi)
[23:31:35] <hassoon_> blueagain: what solution
[23:32:20] <stenno> 'dont use facebook' probably
[23:32:50] <systemfault> A totally valid solution
[23:33:12] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:33:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:36:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:37:56] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[23:38:05] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[23:38:47] *** Joins: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de)
[23:41:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[23:41:15] *** Joins: crashrep (~crashrep@user/crashrep)
[23:41:49] <blueagain> hassoon_: Don't use Facebook.
[23:42:01] <blueagain> >_>
[23:43:11] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[23:45:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:46:40] *** Quits: brw (~bas@haring.bas.sh) (Remote host closed the connection)
[23:46:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:47:13] *** Joins: brw (~bas@haring.bas.sh)
[23:49:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:51:08] *** Joins: Deneb (~johnch@245.82.159.143.dyn.plus.net)
[23:52:16] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:4898:3909:62b2:25c8) (Quit: Client closed)
[23:52:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:54:17] <NinjaKirby> Is it an unwise approach to ask objects to remove themselves from arrays they reside in?
[23:54:36] <ljharb> NinjaKirby: yes
[23:54:46] <ljharb> NinjaKirby: for a number of reasons, including that you shouldn't mutate things
[23:55:30] <NinjaKirby> So from another point in the code, I should e.g. findIndex(), then Splice()?
[23:55:41] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:55:44] <ljharb> NinjaKirby: no, splice mutates, don't use that
[23:55:51] <ljharb> NinjaKirby: you should use .filter and assign to a new variable
[23:56:20] *** Joins: Tempesta (~Tempesta@user/tempesta)
[23:56:29] <NinjaKirby> Ah okay, I have tried that... if I do that, should I *not* re-assign that array to itself?
[23:56:38] <onosendi> n> const foo = [{ id: 1 }, { id: 2 }]; const new = foo.filter((obj) => obj.id === 2); console.log(new);
[23:56:39] <jellobot> (fail) SyntaxError: Unexpected token 'new'
[23:56:48] <onosendi> n> const foo = [{ id: 1 }, { id: 2 }]; const bar = foo.filter((obj) => obj.id === 2); console.log(bar);
[23:56:49] <jellobot> (okay) [ { id: 2 } ]
[23:56:54] <ljharb> NinjaKirby: best avoided, but fine if you have to
[23:57:48] <NinjaKirby> This raises some questions... but okay, hehe
[23:59:13] <teresko> NinjaKirby: what it all comes down to is: objects really should not be aware of the context outside it
