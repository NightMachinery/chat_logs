[00:00:22] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[00:00:25] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[00:00:56] <aphysically> let's try again
[00:00:56] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[00:01:10] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:f1f8:636b:7e5a:9374) (Ping timeout: 240 seconds)
[00:02:31] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[00:04:15] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[00:07:41] *** Joins: qlixed (~qlixed@181.44.129.13)
[00:07:53] <aphysically> INTERNAL ERROR: Black produced code that is not equivalent to the source on pass 1
[00:07:57] <aphysically> then asked to report a bug to black
[00:08:00] <grym> ... what did you DO
[00:08:11] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[00:08:14] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Client Quit)
[00:08:23] *** Joins: tmm88 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9)
[00:08:50] <aphysically> try it yourself: https://dpaste.com/5NQSBQCR7
[00:08:52] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[00:09:01] <aphysically> I added one # fmt: off above the array on line 34
[00:09:14] <grym> oh.  you need an enclosing # fmt:on
[00:09:54] <aphysically> oh
[00:10:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:10:41] *** Joins: zunk (~zunk@h-79-136-122-114.a240.priv.bahnhof.se)
[00:12:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[00:12:01] *** Lord_of_Life_ is now known as Lord_of_Life
[00:12:31] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:15:18] *** Joins: hyperknot (~hyperknot@catv-89-133-47-146.catv.broadband.hu)
[00:16:01] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[00:16:29] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[00:17:03] <aphysically> okay, that removes my one big gripe with black (the fmt thing and crashing)
[00:17:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:17:43] <grym> isort is the same, but for keeping your imports tidy
[00:18:34] *** Quits: tmm88 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9) (Quit: Client closed)
[00:19:27] <aphysically> line-length = 120
[00:19:28] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:19:32] <aphysically> wow a rebel over here
[00:19:45] *** Joins: Auron (Auron956@user/auron)
[00:20:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:21:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:21:52] <Adoi> hello, can unit tests print nonsense?
[00:21:52] *** Joins: rendar (~rendar@user/rendar)
[00:22:23] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:22:58] *** Joins: fikran (~fikran@user/fikran)
[00:24:01] *** Joins: nomic (~nomic@185.217.117.52)
[00:24:10] <syllin> Adoi: unit tests can do whatever you tell them to
[00:24:49] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:24:49] <syllin> if x is a dict, and i run `x.setdefault(1, {})['foo'] = 2`, does setdefault know to make a copy of the empty dict i passed in?
[00:25:04] <syllin> or will i run in to the issue like where you have mutable default kwargs
[00:26:24] <jinsun> setdefault will not copy but {} will make a new empty dict, so you will not run into that issue
[00:27:18] <syllin> oh right, thanks
[00:27:20] <syllin> makes sense
[00:27:44] <jinsun> if you do a = {}, then x.setdefault(1, a), then you will always have the same dict assigned
[00:27:46] *** Quits: raxor2k (~raxor2k@78.158.231.197) ()
[00:28:02] <syllin> thanks. i think i was worried that my example above would hoist the {}
[00:28:06] <syllin> but i think that wont happen
[00:28:55] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[00:29:47] <pretty_dumm_guy> Hi. Does anyone here have any experience with webscraping ? I have written a script for scraping a website and I would like some input on my code.
[00:31:37] *** Joins: molt (~molt@79.140.150.21)
[00:31:44] <aphysically> I need to reinstall my self-project in the venv each time I update?
[00:31:48] <pretty_dumm_guy> here is my code : https://bpa.st/VN6A
[00:31:53] <aphysically> does it at least remember the directory so I can just run upgrade?
[00:32:31] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[00:32:47] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:33:36] <pretty_dumm_guy> So this code doesn't handle parse all the websites correctly. It does handle most of them correctly.
[00:33:38] <jinsun> aphysically: if you install with pip install --editable then you don't have to reinstall every time
[00:33:59] <aphysically> I read online toml packages don't support editable
[00:34:05] <pretty_dumm_guy> wondering if there is a btter way to do it.
[00:34:17] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 248 seconds)
[00:34:20] <jinsun> ah yes you need at elast the to liner setup.py for that
[00:34:31] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[00:34:34] <jinsun> *two-liner
[00:35:10] *** Joins: ice9 (~ice9@user/ice9)
[00:35:20] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:35:30] <jinsun> actually PEP 660 is accepted now, https://www.python.org/dev/peps/pep-0660/, so maybe now tools have updated to allow editable with pyproject.toml also
[00:35:31] <aphysically> https://www.python.org/dev/peps/pep-0660/ or maybe that isn't true anymore?
[00:35:49] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[00:35:52] <jinsun> tools have to support it
[00:35:58] *** Quits: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com) (Quit: Leaving)
[00:36:00] <jinsun> I have not checked
[00:36:25] <aphysically> how much is "editable" - if I change the toml I assume I need to --upgrade?
[00:36:32] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[00:37:10] *** Joins: Enitin (~Enitin@82.102.22.85)
[00:37:29] *** Quits: sudomann (~sudomann@50.238.46.18) (Ping timeout: 248 seconds)
[00:38:37] <aphysically> I don't see PEP 660 mentioned in the pip changelog so maybe it doesn't support it yet https://pip.pypa.io/en/stable/news/
[00:39:00] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Quit: bye)
[00:39:21] *** Joins: gustik (~gustik@2a01:c844:2410:9020:63ab:4bb6:83d2:e11b)
[00:39:28] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[00:39:35] <jinsun> the backends have to support it I think setuptools, poetry etc, pip already has --editable mode
[00:39:38] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[00:40:28] *** Joins: Naan (~naan@user/naan)
[00:40:29] <aphysically> oh, I assumed it wouldn't be using any backend in the case of the PEP 660 (or it would be inbuilt into pip or something)
[00:40:55] <aphysically> but, okay - I can just use a setup.py wrapper if it doesn't work yet
[00:41:02] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[00:41:55] <jinsun> what are you using? setuptools?
[00:42:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:42:33] <jinsun> if setuptools then you just have to make a setup.py with 2 lines, `import setuptools; setuptools.setup()`
[00:42:57] <aphysically> well, I was thinking about using pyproject.toml right now, which I thought didn't use setuptools when pip called it
[00:43:09] <aphysically> err, when running 'pip install package'
[00:43:44] <aphysically> but yeah, that's what I meant by wrapper
[00:44:18] <jinsun> I think pyproject.toml will get preferrence when you do pip install, the setup.py will be used only for editable install
[00:44:26] <aphysically> but anyway - sorry, I'm at the point where I think I should learn by doing
[00:44:31] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[00:45:07] <aphysically> (sorry if questions seem silly I mean)
[00:45:16] <AhmedAmerican> if i understood correctly, Scrapy by default is retrying failed requests `2` times. even without `RETRY_TIMES` being presented within `settings.py` and in case if i want to increase the retries numbers then I've to include `RETRY_TIMES` with int value ?
[00:45:28] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed) (Quit: Client closed)
[00:46:21] <aphysically> I was thinking about following https://python-packaging.readthedocs.io/en/latest/index.html but I'll probably read but actually do something similar for a toml
[00:48:02] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:48:08] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:48:41] *** Joins: tx8r (~tx8r@gateway/tor-sasl/tx8r)
[00:48:42] <jinsun> if you want pyporject.toml based tutorial there is one by pypa https://packaging.python.org/tutorials/packaging-projects/
[00:48:59] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:49:08] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:49:43] <aphysically> :D that uses toml to use setuptools as a build system
[00:50:17] *** Joins: rendar (~rendar@user/rendar)
[00:51:09] *** Quits: morte_ (~user@190.104.116.134) (Read error: Connection reset by peer)
[00:51:22] *** Joins: morte_ (~user@190.104.116.134)
[00:51:27] *** Quits: magla (~gelignite@55d4beb4.access.ecotel.net) (Remote host closed the connection)
[00:52:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[00:54:29] *** Quits: cpif (~pi@2601:282:a00:fe50::6769) (Quit: Leaving.)
[00:55:56] *** Quits: pro_z (~pro_z@37.214.32.238) (Ping timeout: 250 seconds)
[00:57:40] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:01:07] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Quit: Off to see the wizard.)
[01:03:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[01:03:56] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:04:29] <sybariten> hey hey
[01:04:37] <aphysically> grym: so if I try to pip install your script from source, pip will actually use poetry to do so
[01:05:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[01:05:07] <grym> aphysically: tias!
[01:05:29] <sybariten> this page http://openbookproject.net/pybiblio/tips/wilson/dictionaryMenus.php may or may not have been written 15 years ago, depending on if he's done updates or not along the way. Is ther anything in how he builds that menu that is outdated with python 3.7 or so?
[01:05:38] *** Quits: hyperknot (~hyperknot@catv-89-133-47-146.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:05:51] <sybariten> I guess dictionaries are still a good tool for simple console menus?
[01:06:20] *** Joins: jdimatteo (~jdimatteo@159.21.83.34.bc.googleusercontent.com)
[01:06:55] *** Joins: hyperknot (~hyperknot@catv-89-133-47-146.catv.broadband.hu)
[01:08:14] <aphysically> I was under the impression the TOML could replace using a build system for pip packages entirely, but moreso the TOML is specifying which build system you're using and executing it - and around that several build systems have evolved to allow specifying their full config within the TOML directly (poetry, flit), while other older ones, e.g. setuptools, can still be callable from the TOML but require
[01:08:16] <aphysically> their config in a separate file
[01:08:23] <aphysically> is that an accurate summary grym?
[01:08:38] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[01:08:49] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[01:08:50] *** Quits: gloin (~gloin@user/gloin) (Remote host closed the connection)
[01:08:59] *** Joins: Enitin (~Enitin@82.102.22.86)
[01:09:05] <grym> uhh... i think you're close!
[01:10:00] <aphysically> is it possible to use the TOML directly and just very few people do this?
[01:10:03] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[01:10:22] <grym> you don't use setup.py/cfg directly, either
[01:10:55] <aphysically> in what sense? in that it requires setuptools already be on the system and that pip is preprogrammed to check it?
[01:11:38] <aphysically> (requires setuptools.... unless you made a TOML wrapper to specify it)
[01:12:07] *** Joins: ano (~weechat@user/ano)
[01:12:42] <jdimatteo> hi, I am trying to improve performance to the open source library Great Expectations with concurrency, and I'm concerned about thread safety and maintainability for a large open source library with many contributors. I did some profiling and found that a bunch of time is spent waiting for database calls and a bunch of time is spent rendering HTML. With a simple experiment I was able to get 10x performance improvement with multith
[01:12:42] <jdimatteo>  and I'd like further improvements and I'm considering leveraging multitprocessing as well. Can anyone recommend a book with design patterns to help? I think Patterns of Enterprise Application Architecture might be helpful, but it is pretty dated (published in 2002)
[01:14:26] <grym> aphysically: i'm not confident enough to answer
[01:14:36] <aphysically> ok :D
[01:14:43] *** Joins: ub (~Thunderbi@178.115.47.86.wireless.dyn.drei.com)
[01:15:00] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:8419:e600:4f7e:6af)
[01:15:27] <de-facto> where can i find v.2.21 of those docs? https://docs.python-requests.org/en/v2.2.1/
[01:15:51] <de-facto> searching for the docs of https://packages.debian.org/stretch-backports/python3-requests
[01:16:46] *** Parts: akk (~akk@174-28-98-206.albq.qwest.net) (+++)
[01:16:58] *** Quits: cth (~Cthulchu@213.174.21.101) (Read error: Connection reset by peer)
[01:17:25] *** Joins: cth (~Cthulchu@213.174.21.101)
[01:18:10] *** ub is now known as ubert
[01:18:30] <aphysically> if there are projects that use "just" the pyproject.toml without requiring an external build system to have pip installable packages from source, it seems very uncommon/ I can't find it
[01:18:47] *** Joins: audio (~audio@2603-8081-1801-3bb5-8f76-5f69-0a39-aaec.res6.spectrum.com)
[01:20:10] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:21:46] <aphysically> ok there is https://www.python.org/dev/peps/pep-0621/ but it's new, let's read!
[01:22:12] *** Parts: Intruder777 (~Intruder7@user/intruder777) (Leaving)
[01:23:04] <jinsun> you mean you want pyproject.toml without the [build-system] section?
[01:23:46] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Quit: WeeChat 3.2)
[01:24:46] *** Quits: ubert (~Thunderbi@178.115.47.86.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[01:25:13] *** Joins: cedric (~cedric@2a01:cb11:867:c200:ca59:e9e2:69e9:f6f3)
[01:25:25] <nedbat> de-facto: what version do you want?
[01:25:38] <aphysically> jinsun: well, I wouldn't say 'want', more that I was under the impression that's the only thing it was!
[01:25:49] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[01:26:06] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[01:27:20] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[01:28:08] *** Quits: gustik (~gustik@2a01:c844:2410:9020:63ab:4bb6:83d2:e11b) (Quit: Leaving)
[01:28:13] <aphysically> I (think) PEP 621 would be usable without a build-system when accepted and supported by pip? or it's just a standardized metadata for build systems to consume? (and if the latter, pip might eventually default to one?)
[01:28:35] *** Joins: portalrat_ (~portalrat@user/portalrat)
[01:28:55] *** Joins: minip (minip@user/minip)
[01:29:24] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:30:35] <de-facto> nedbat, the one from debian package, hence the docs for python3-requests (2.21.0-1~bpo9+1)
[01:31:02] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 250 seconds)
[01:31:10] <de-facto> seems https://docs.python-requests.org/en/v2.21 is a 404
[01:31:25] <nedbat> de-facto: yeah, weird that it has older versions, but not that one.
[01:32:21] <nedbat> de-facto: https://github.com/psf/requests/tree/v2.21.0/docs I guess
[01:32:58] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:33:38] <jinsun> aphysically: you can have pyproject.toml without the [build-system] section, and just store your linter settings there, but if you want it to be usable by pip install also then [build-system] is required (how will pip know which backend to use otherwise?)
[01:34:05] <de-facto> nedbat, hmm thats barely readable though
[01:34:07] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[01:34:46] <jinsun> de-facto: clone it, install sphinx and run make html
[01:35:11] <de-facto> oh god no
[01:35:12] <aphysically> yeah ok, so PEP 621 is just a standardization for a build system independent way to specify a lot of the core things (which for basic projects can probably be all of them!) but pip install still needs to actually use a build system with it that could read it
[01:35:28] <aphysically> (core things..like dependencies and such)
[01:35:42] <grym> aphysically: https://bpa.st/TA6Q
[01:35:48] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:35:52] <nedbat> de-facto: use the version you can read, and read the changelog for the delta
[01:35:53] <grym> (you don't need poetry to install a project managed with it)
[01:36:21] <The-Compiler> de-facto: why not?
[01:36:46] <de-facto> is there an alternative to python requests?
[01:37:26] <grym> de-facto: httpx, perhaps
[01:37:30] <grym> https://www.python-httpx.org/
[01:38:14] <de-facto> not available for debian
[01:38:21] <de-facto> at least not for stretch
[01:39:02] <The-Compiler> de-facto: I built them just now, it's straightforward really; https://t.cmpl.cc/sphinx-2.21.0
[01:39:11] <grym> de-facto: i don't even know what that means :P
[01:39:38] <aphysically> grym: surely that can't be right, right? I mean, if I look at the pyproject.toml your dependencies like httpx are specified in poetry-specific tool lines, yet your install pulled them in!
[01:39:52] <grym> de-facto: oh, you're trying to use os packages.  not my jam.
[01:40:02] <de-facto> yeah
[01:40:04] <grym> aphysically: pip's smart!
[01:40:11] *** Joins: tty14 (~tty14@152.67.7.96)
[01:40:19] <nedbat> de-facto: are you looking for an alternative because of the docs?
[01:40:20] <de-facto> The-Compiler, nice how did you do that so fast?
[01:40:29] <de-facto> nedbat, yes
[01:40:42] <The-Compiler> de-facto: by doing what jinsun said
[01:40:43] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[01:40:58] *** Joins: Enitin (~Enitin@82.102.22.85)
[01:41:04] <The-Compiler> de-facto: git clone, create a virtualenv, install requests and sphinx, make html. Takes a minute or two.
[01:42:27] <aphysically> grym: okay, so if pip has programmed into it enough to be smart about some common build systems, why use poetry at all? what is poetry actually doing when you're doing development that you're using?
[01:42:32] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:42:47] <hyperknot> Hi, how would you write a function which detects whether say 80% of characters in a string are cyrillic? I'm getting way too much spam over a contact form.
[01:42:55] <aphysically> just managing the TOML itself?
[01:42:56] <grym> aphysically: convenience methods and chrome
[01:42:59] <de-facto> i just dont get it why they would not provide documentation for such a widely used os like debian, maybe its not that popular?
[01:43:11] <aphysically> chrome?
[01:43:16] <grym> aphysically: "shiny stuff!"
[01:43:20] <grym> not the browser
[01:43:27] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[01:43:28] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[01:43:40] <nedbat> de-facto: it's odd that the more recent versions aren't on readthedocs.  You could open an issue in their issue tracker.
[01:43:42] <aphysically> sell it to me
[01:43:56] <aphysically> (poetry)
[01:44:54] <grym> `poetry init oxo; cd oxo; poetry add httpx 'typer[all]'; poetry add --dev black isort; poetry install; poetry run pytest`
[01:44:54] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 250 seconds)
[01:45:20] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[01:45:21] <grym> some autogeneration of code is done, some management of toml, venv creation, etc.
[01:45:21] <nedbat> de-facto: the version of the docs isn't about debian, 2.21.0 is a version that applies to all operating systems.
[01:45:29] <grym> stuff i'm going to do by hand anyway
[01:45:43] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[01:45:47] <aphysically> yeah ok
[01:46:05] *** Joins: akinode (~akinode@2a02:908:1394:cce0:f7:5db1:33e7:f8e)
[01:46:32] <de-facto> hmm also choosing backend sqlite makes the request idle forever
[01:46:42] <jinsun> de-facto: just read the latest docs, 99% of the things will apply to your version also, and see the changelog in case of differences
[01:47:11] <nedbat> de-facto: backend of what?
[01:47:33] <de-facto> oh sorry i tried to use requests_cache
[01:48:04] <grym> de-facto: nedbat i note that the list of tags for requests on github is a superset of the list of available docs versions on docs.python-requests.org more generally
[01:48:13] <grym> many releases don't have published docs
[01:48:15] <nedbat> grym: yes
[01:48:16] <aphysically> but if pip is smart enough to do that without installing poetry, I don't see why pip wouldn't at some point eventually support PEP 621 without a specified build system re: grym
[01:48:23] <grym> ¯\_(ツ)_/¯
[01:48:24] <aphysically> or at least, why they shouldn't
[01:48:29] <grym> like i said, as a user, i don't care
[01:48:43] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[01:48:50] <aphysically> I don't see any mention of PEP 621 in the pip changelog
[01:48:54] <grym> as a developer, i'm happy to use whatever tools make me happy and produce packages that users can pip install and make wheels out of
[01:48:56] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:49:08] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[01:49:26] <grym> you should be able to take a fully functioning base python, make a venv, and pip install anything i make
[01:49:41] <The-Compiler> de-facto: using OS packages instead of a virtual env is something people usually don't do for development
[01:49:44] <grym> and never know or care what build system i use to do that
[01:49:54] <p-i-> (Repost as I've just got in)
[01:50:04] *** Quits: morte_ (~user@190.104.116.134) (Ping timeout: 252 seconds)
[01:50:08] <p-i-> How to write this asyncio code correctly: https://bpa.st/JH5A ?
[01:50:13] <p-i-> It should perform a couple of initial queries, then spawn a never-ending task (websocket listener).
[01:50:17] <p-i-> But how to stop it terminating?
[01:50:21] <p-i-> while True: await asyncio.sleep(1) ?
[01:50:25] <de-facto> The-Compiler, yeah i prefer to use os packages, sorry
[01:50:31] <jinsun> grym: aphysically: is pip really doing everything there? I think it pulls poetry in a temporary venv when this is happening "Installing build dependencies ... done"
[01:50:40] *** Quits: hyper_dave (~hyper_dav@197.156.103.172) (Ping timeout: 240 seconds)
[01:50:45] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[01:50:55] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[01:50:56] *** Joins: cheater (~Username@user/cheater)
[01:51:15] <de-facto> if it does not work with OS packages, i would search for an alternative approach
[01:51:17] <p-i-> I need to call_soon the websocket task as it blocks, and I'll have several blocking tasks once I've fleshed the code out.
[01:51:30] <aphysically> I don't think that log line alone is conclusive either way (I would still read that as meaning it didn't install any build dependencies)
[01:51:35] <grym> jinsun: i don't know.
[01:51:36] <aphysically> but I agree it's slightly open to interpretation
[01:51:47] <aphysically> I could* still read that
[01:51:47] <grym> it goes quick though :)
[01:51:53] *** Joins: hyper_dave (~hyper_dav@197.156.86.173)
[01:51:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[01:52:27] <jinsun> have to try it and watch the files created on the disk I guess
[01:52:29] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[01:52:40] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 240 seconds)
[01:52:49] <aphysically> grym: okay, I found one answer to my question: one thing a "build system" does that pip install will NOT do (without poetry) presumably is build a 'wheel' ?
[01:52:49] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 252 seconds)
[01:52:52] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[01:52:55] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[01:53:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[01:53:12] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 268 seconds)
[01:53:27] <grym> pip wheel is a valid subcommand
[01:53:31] <grym> i don't know if that answers your question
[01:53:36] <aphysically> wait no
[01:53:45] <aphysically> yes :P
[01:53:57] <grym> a wheel is a magic zipfile of your stuff
[01:54:05] <grym> you can unzip -l something.whl and see what's inside
[01:54:16] <Akuli> ehhh... python3 -m zipfile -l something.whl
[01:54:16] <Akuli> :)
[01:54:25] <grym> haha
[01:54:32] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:54:45] <Akuli> i used to do all my zipping and unzipping with "python3 -m zipfile" because i couldn't figure out how to use zip and unzip
[01:56:20] *** Quits: yogoyo (~paddy@user/yogoyo) (Quit: WeeChat 3.2)
[01:56:28] *** Quits: sazawal (~sazawal@106.213.43.60) (Quit: Leaving)
[01:56:32] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:56:40] *** Joins: emika8 (~emika@212.102.44.132)
[01:57:13] *** Quits: emika (~emika@83.136.182.141) (Ping timeout: 252 seconds)
[01:57:13] *** emika8 is now known as emika
[01:57:40] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:58:01] *** Quits: jokoon (~eio@2a01:e0a:542:b20:1561:2cb9:9952:8544) (Quit: Leaving)
[01:58:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:58:25] *** Joins: Elzington (~Elzington@68.235.43.100)
[01:59:05] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:00:31] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[02:01:18] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[02:01:35] <grym> i have traditionally understood the line "installing build dependencies" to mean
[02:02:10] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:02:20] <grym> that pip is looking at my install_requires (in setup.py) or in the [... .dependencies] section of a pyproject.toml and is installing those things
[02:03:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[02:03:15] <grym> aphysically: https://pypi.org/project/poetry-core/  might be worth reading
[02:03:33] <remexre> why isn't dataclass a metaclass
[02:03:34] <de-facto> hmm how can i find out why request_cache waits indefinitely?
[02:04:00] *** Gustavo6046_ is now known as Gustavo6046
[02:04:22] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2489:d8ec:6e6c:e38b) (Quit: Textual IRC Client: www.textualapp.com)
[02:04:22] *** Quits: hyper_dave (~hyper_dav@197.156.86.173) (Ping timeout: 252 seconds)
[02:05:19] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:06:10] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[02:06:18] *** Joins: hyper_dave (~hyper_dav@197.156.86.13)
[02:06:48] <jinsun> grym: I see pip-build-env-something-something/site-packages/poetry getting created in my temp folder when I try to install oxo, but because of the speed I am not sure if it actually downloads it or just has a copy of poetry built it
[02:07:44] <grym> jinsun: yeah, i think you're getting poetry-core
[02:07:49] *** Quits: ParseError (~Parse_Err@2a01cb0807b805008982921db73973dc.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:08:44] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[02:08:55] <aphysically> I don't see poetry vendored into pip: https://github.com/pypa/pip/tree/main/src/pip/_vendor
[02:09:20] <lxer> Does anyone know some good, large python codebase (using some good architecture and python practices). I want to use it to study how large python projects are structured, but it is hard to find any.
[02:09:59] <jinsun> grym: okay so it downloads poetry-core instead of poetry, or poetry-core is somehow built-in into pip?
[02:09:59] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:10:04] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:10:09] <Akuli> lxer, how large is large
[02:10:13] <de-facto> hmm what is the most mature http download lib?
[02:10:15] <grym> jinsun: i'm guessing the former
[02:10:20] <grym> de-facto: requests
[02:10:25] <jmcantrell> lxer: what kind of project?
[02:11:31] *** Quits: hyper_dave (~hyper_dav@197.156.86.13) (Ping timeout: 252 seconds)
[02:11:34] <lxer> Akuli: not a micro webframework (that is something I often see as a example; bottle, fast-api, etc..)
[02:11:46] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 250 seconds)
[02:12:09] <Akuli> 10000 lines?
[02:12:10] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f245) (Ping timeout: 240 seconds)
[02:12:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[02:12:49] *** Joins: tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com)
[02:12:58] <de-facto> grym, what about urllib?
[02:13:15] <Akuli> lxer, many projects i thought of are structured so that the core of the project is quite small, and then there's a subdirectory that contains plugins (or the same concept with a different name) that are loaded dynamically and can be ignored
[02:13:20] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Quit: bye)
[02:13:35] <Akuli> this helps keep the core simple and the structure is clean overall
[02:13:36] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[02:13:38] *** Joins: hyper_dave (~hyper_dav@197.156.86.10)
[02:13:41] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[02:13:46] <Akuli> do you specifically want a project that is like this or is not like this?
[02:13:48] *** launchd is now known as l
[02:14:00] <grym> de-facto: urllib.requests tells you to use requests instead
[02:14:15] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:14:52] *** Joins: cpif (~pi@2601:282:a00:fe50::6769)
[02:14:54] <aphysically> okay so, I'm thinking I might use flit with PEP 621 metadata in anticipation of setuptools eventually moving to that
[02:15:13] <grym> aphysically: ok.  write a setup.py once, first :)
[02:15:31] <aphysically> sure, or I could just use that and move when setuptools moves
[02:15:31] *** Joins: qlixed (~qlixed@2802:8010:4008:7b01:3a87:540d:f269:2085)
[02:15:58] <lxer>  Akuli: sounds good. afaik, the main issue in large projects is maintaining modularity. This could be done using layers/plugins/modules/microservices/whatever.. they all try to solve the same issue.
[02:16:04] <aphysically> also, assuming pip is NOT "that smart" I'm guessing pip might consider being able to install a package itself without a build system out of scope
[02:16:11] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[02:16:14] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:16:17] <aphysically> so you would always need one
[02:16:33] <Akuli> lxer, you might like pygments, the code uses a bit too much python features trickery but otherwise it might be interesting to you
[02:16:38] <grym> aphysically: it's just that until pretty darn recently, we've had exactly one build system.  and it's setuptools
[02:16:43] <grym> there was stuff before that too
[02:16:46] <grym> but let's not speak of it
[02:16:49] <grym> it's super dead now
[02:17:02] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:17:40] <grym> so there was (primordial chaos ---> setuptools and pip --> grym starts learning python in 2015/6 ---> poetry, flit, other pep 517/8 stuff --> now)
[02:17:41] *** Joins: torandu (~sean@94.10.125.197)
[02:18:03] <grym> above may be slightly biased :)
[02:19:10] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[02:19:44] <lxer> Akuli: thanks. I'll tr to read it
[02:20:04] *** Quits: Barones (~Barones@2804:48dc:8500:0:490e:ac21:7882:d414) (Quit: Leaving)
[02:20:04] *** Quits: tx8r (~tx8r@gateway/tor-sasl/tx8r) (Ping timeout: 244 seconds)
[02:21:43] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[02:22:13] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[02:22:14] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:22:31] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 252 seconds)
[02:23:04] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 252 seconds)
[02:23:29] *** Quits: hyperknot (~hyperknot@catv-89-133-47-146.catv.broadband.hu) (Quit: Textual IRC Client: www.textualapp.com)
[02:24:03] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:26:08] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[02:26:15] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[02:26:18] <jmcantrell> This is probably old news, but why does python's builtin unit test module not follow pep8 naming conventions?
[02:26:24] <grym> it's old
[02:27:11] <jmcantrell> that makes sense
[02:27:48] <jinsun> it is inspired by JUnit, so it uses Java naming
[02:28:41] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[02:29:30] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[02:30:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:30:45] *** Quits: mbrndtgn5 (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[02:31:23] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:31:31] *** Joins: mbrndtgn5 (~mbrndtgn@undecidable.de)
[02:32:20] *** Joins: fikran (~fikran@user/fikran)
[02:32:25] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:32:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[02:32:50] *** Joins: mickey (~user@user/mickey)
[02:33:00] *** Quits: hyper_dave (~hyper_dav@197.156.86.10) (Ping timeout: 250 seconds)
[02:33:28] *** Gustavo6046_ is now known as Gustavo6046
[02:34:02] *** Joins: hyper_dave (~hyper_dav@197.156.86.119)
[02:34:19] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:35:22] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[02:37:10] <The-Compiler> jinsun: you might want to use pytest instead, most people do
[02:37:20] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 250 seconds)
[02:38:46] <jinsun> yeah I use pytest already, I was just talking about why unittest has weird method names
[02:39:16] *** Quits: netsan (~netsan@user/netsan) (Remote host closed the connection)
[02:39:38] <jinsun> The-Compiler: or did you mean to highlight jmcantrell instead of me :D ?
[02:39:41] *** Joins: netsan (~netsan@user/netsan)
[02:40:17] *** Quits: jaggz (~jaggz@user/jaggz) (Read error: Connection reset by peer)
[02:40:34] *** Joins: jaggz (~jaggz@user/jaggz)
[02:41:08] <The-Compiler> jinsun: oh not again
[02:41:16] <The-Compiler> jinsun: why do you two always speak at the same time :D
[02:41:32] <jinsun> :D
[02:41:37] *** Joins: Guddu (~Guddu@190.84.88.92)
[02:41:46] <The-Compiler> jinsun: too used to just typing the first character, because my client prefers people who have last spoken :D
[02:41:56] *** Quits: hyper_dave (~hyper_dav@197.156.86.119) (Ping timeout: 268 seconds)
[02:42:06] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 250 seconds)
[02:42:51] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:43:00] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[02:43:09] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:43:23] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[02:43:26] *** Joins: hyper_dave (~hyper_dav@197.156.86.11)
[02:44:57] *** Joins: bninja (~bloodninj@user/bloodninja)
[02:46:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:46:27] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[02:47:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:48:19] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:48:22] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Ping timeout: 252 seconds)
[02:50:01] *** Quits: hyper_dave (~hyper_dav@197.156.86.11) (Ping timeout: 252 seconds)
[02:51:03] *** Quits: jess (~jess@libera/staff/jess) ()
[02:52:14] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 258 seconds)
[02:53:57] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:2489:d8ec:6e6c:e38b)
[02:54:32] *** Joins: hyper_dave (~hyper_dav@197.156.77.141)
[02:55:10] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[02:59:22] *** Quits: hyper_dave (~hyper_dav@197.156.77.141) (Ping timeout: 252 seconds)
[03:00:24] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[03:00:56] *** Joins: hyper_dave (~hyper_dav@197.156.118.192)
[03:01:30] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:41ad:9a3:9397:f078:c2f9)
[03:01:40] *** Quits: Linux77 (~kvirc@237-182-233-186.raimax.com.br) (Ping timeout: 268 seconds)
[03:04:19] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[03:04:38] *** Quits: p-i- (~Ohmu@mx-ll-171.6.231-122.dynamic.3bb.co.th) (Ping timeout: 250 seconds)
[03:04:52] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[03:05:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:06:09] <greatgatsby> is there anything like shlex.join for windows?
[03:06:21] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:07:14] *** Quits: hyper_dave (~hyper_dav@197.156.118.192) (Ping timeout: 250 seconds)
[03:07:34] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[03:09:20] *** Joins: hyper_dave (~hyper_dav@197.156.118.203)
[03:10:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[03:11:06] <grym> greatgatsby: https://pypi.org/project/winshlex/  apparently
[03:11:12] <grym> but i know nothing about it
[03:11:38] *** audio is now known as audiobirb
[03:11:57] *** Quits: jetchisel (jetchisel@user/jetchisel) (Remote host closed the connection)
[03:12:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[03:13:47] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[03:13:48] <greatgatsby> grym, thanks.  version 0.0.1 is confidence inspiring :-P  (j/k)
[03:14:29] <kenwoodfox> Im working on a project right now where i want to generate a video livestream and publish it to robotstreamer, currently using rtmp, and i want to do it in python. Ive gotten some success though! i was able to setup ffmpeg to stream a single png to a flv stream and it was working! but when i started to update the image it was streaming via pillow it would bug and crash and overall the direction i seem to be going seems really.. hacky... Is there maybe
[03:14:29] <kenwoodfox>  a better way i could approach the problem?
[03:15:05] <kenwoodfox> Ive been thinking maybe i can just use ffmpeg to transcode something cleaner, into the video stream i want to publush, use python to generate its own maybe mjpg stream or something, idk ive not delt with it very much
[03:15:06] <greatgatsby> grym, fyi, only does split, I need join
[03:16:00] *** Joins: lethu (~lethu@user/lethu)
[03:16:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:16:39] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:16:40] *** Quits: lethu (~lethu@user/lethu) (Client Quit)
[03:18:01] *** Quits: cedric (~cedric@2a01:cb11:867:c200:ca59:e9e2:69e9:f6f3) (Quit: Konversation terminated!)
[03:18:01] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[03:18:37] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[03:21:40] *** Quits: hyper_dave (~hyper_dav@197.156.118.203) (Ping timeout: 240 seconds)
[03:21:41] *** Quits: bninja (~bloodninj@user/bloodninja) (Quit: So long king bowser!)
[03:22:10] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[03:22:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:22:26] *** Quits: Akuli (~Akuli@82-203-162-19.bb.dnainternet.fi) (Quit: Leaving)
[03:22:38] *** Quits: junktext (~junktext@77.247.181.209) (Ping timeout: 268 seconds)
[03:23:10] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[03:23:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:23:41] *** Quits: Keira (~k@lulzsec.co.uk) (Ping timeout: 252 seconds)
[03:23:53] *** Joins: hyper_dave (~hyper_dav@197.156.118.227)
[03:24:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:25:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:25:50] *** Joins: Keira (~k@lulzsec.co.uk)
[03:26:16] *** Quits: cpif (~pi@2601:282:a00:fe50::6769) (Quit: Leaving.)
[03:27:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:27:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:29:20] *** Quits: hyper_dave (~hyper_dav@197.156.118.227) (Ping timeout: 250 seconds)
[03:29:36] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:edf0:30cb:7a53:9925)
[03:29:36] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:30:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:30:27] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 245 seconds)
[03:30:39] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 268 seconds)
[03:31:16] *** Joins: hyper_dave (~hyper_dav@196.190.154.219)
[03:32:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:32:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:32:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:33:21] *** Joins: m4v (~znc@ubuntu/member/m4v)
[03:34:01] *** Quits: Keira (~k@lulzsec.co.uk) (Ping timeout: 252 seconds)
[03:35:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:35:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:37:52] *** Quits: hyper_dave (~hyper_dav@196.190.154.219) (Ping timeout: 252 seconds)
[03:38:47] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[03:39:03] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[03:39:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:39:32] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:39:48] *** Joins: hyper_dave (~hyper_dav@197.156.77.247)
[03:40:24] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:41:42] *** Joins: fikran (~fikran@user/fikran)
[03:42:20] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[03:43:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:44:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:44:17] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:44:20] *** Quits: nomic (~nomic@185.217.117.52) (Quit: Leaving)
[03:45:10] *** Quits: Samian (~Sami@2620:10d:c091:480::1:4ae4) (Ping timeout: 240 seconds)
[03:45:50] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 244 seconds)
[03:45:51] *** Joins: johnny_ (sid481967@id-481967.stonehaven.irccloud.com)
[03:46:28] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:50:10] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[03:50:53] *** Joins: fofoni (~fofoni@user/fofoni)
[03:51:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:52:10] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[03:52:43] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[03:53:36] *** Quits: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com) (Read error: Connection reset by peer)
[03:53:49] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[03:54:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:54:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:56:39] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[03:56:53] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:57:30] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[03:57:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:59:11] *** Joins: Wulf (~Wulf@user/wulf)
[03:59:12] *** Joins: doc|work (~doc@user/doc)
[04:00:05] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[04:00:06] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[04:01:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 240 seconds)
[04:04:03] <doc|work> I'm writing a socket client for a stream of data that may never end, but I need to detect network disconnects. Now when I kill my wifi it just sits there like nothing happened but with no data coming. I've tried using select with no change, but would like any other starting points or examples people can suggest where they know it works.
[04:04:16] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[04:05:46] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:09:08] <Byteflux> doc|work: set keepalive on the socket
[04:09:10] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[04:09:25] <doc|work> Byteflux, tried that, no impact
[04:09:54] *** Joins: davor (~davor@user/davor)
[04:09:58] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:10:14] <Byteflux> keepalive *should* eventually lead to the socket being selected as read-ready, at which point reading should produce an error
[04:10:30] *** Quits: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 250 seconds)
[04:10:33] <doc|work> what's the timeframe for that?
[04:11:26] <AhmedAmerican> :D isn't possible to pull out vscode terminal
[04:11:31] <Byteflux> not sure actually. i'd guess it depends on the OS
[04:11:55] *** Joins: nomic (~nomic@185.217.117.52)
[04:12:25] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[04:12:34] <Byteflux> apparently on linux this might be as high as 2 hours
[04:12:36] <Byteflux> wow
[04:13:43] <doc|work> oof
[04:13:47] <doc|work> that's no good
[04:14:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:15:48] <c4017w> What's the right way to serialize a LogRecord? just do record.__dict__?
[04:15:54] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:16:08] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[04:16:30] *** Joins: KombuchaKip (~kip@192.252.230.5)
[04:16:58] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[04:17:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:18:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:18:59] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:18:59] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[04:19:06] *** Joins: dez (uid92154@user/dez)
[04:19:16] *** Quits: nomic (~nomic@185.217.117.52) (Quit: Leaving)
[04:19:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:21:08] <Byteflux> doc|work: so keepalive "time" and "interval" are separate things, the time is 2 hours and this seems to determine the period of inactivity where the connection is considered idle and should be probed with keepalive packets. the interval is the time between each probe
[04:21:13] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:21:18] *** Joins: c10l (~c10l@89.34.167.207)
[04:21:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:22:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:23:19] *** Quits: ngaio (~ngaio@2601:245:c700:2c06:7587:1c88:2b72:4aef) (Quit: Leaving)
[04:24:22] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[04:24:22] <doc|work> Byteflux, can that be changed? Can I set it to 5 mins for both or something, using setsockopt and TCP_KEEPINTVL and TCP_KEEPCNT?
[04:24:31] <doc|work> that might be what I was missing
[04:24:35] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[04:24:38] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:24:39] *** Joins: nomic (~nomic@185.217.117.52)
[04:25:01] <Byteflux> doc|work: you'll want to setsockopt socket.TCP_KEEPIDLE to something that isn't 2 hours
[04:25:47] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:26:01] <Byteflux> and possibly adjust TCP_KEEPINTVL and TCP_KEEPCNT (the max # of keepalive retries between each interval)
[04:26:22] <doc|work> thanks, that's a good starting point. Much appreciated.
[04:26:50] <Byteflux> np. don't know if this would work for macOS or windows, though
[04:27:26] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:27:34] *** Joins: Fiji (~Fiji@user/fiji)
[04:28:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:29:06] <doc|work> ok, running in docker on mac so... fingers crossed
[04:29:34] <Byteflux> docker on macos runs into a Linux VM doesn't it?
[04:29:51] <Byteflux> s/into/in/
[04:29:52] <doc|work> I think so, haven't looked at how that works since the boot2docker days
[04:30:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:30:36] <Byteflux> if so then python would be calling into the linux kernel for its networking stack rather than macos'
[04:30:53] <doc|work> yeah
[04:30:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:31:01] *** Quits: akinode (~akinode@2a02:908:1394:cce0:f7:5db1:33e7:f8e) (Ping timeout: 246 seconds)
[04:31:09] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:32:06] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:32:25] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6422-dda3-b794-731f.res6.spectrum.com) (Read error: Connection reset by peer)
[04:33:16] <AhmedAmerican> what the meaning of `Period` within `XPATH`, example of `.//` and `//` is actually the same?
[04:33:49] *** Quits: qlixed (~qlixed@2802:8010:4008:7b01:3a87:540d:f269:2085) (Ping timeout: 258 seconds)
[04:33:53] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:34:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:34:47] <nedbat> AhmedAmerican: ".//" means anywhere under here.  "//" means anywhere.
[04:34:48] <Byteflux> '.' at the beginning of the expression means "relative to the current node"
[04:34:55] *** Joins: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[04:35:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:35:20] <doc|work> Byteflux, hah, socket.TCP_KEEPIDLE even on its own with TCP_KEEPALIVE one immediately disconnects even with a value like 120
[04:35:42] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[04:36:06] *** Joins: molt (~molt@79.140.150.21)
[04:36:30] <Byteflux> doc|work: when you say disconnect, you mean the socket is selected and produces an error upon recv?
[04:36:39] <AhmedAmerican> nedbat: Byteflux Thank you. so in case if I'm targeting an HTML block within a page which later i will perform other XPATH's on it. so I've to not include period ? `//div[@id='content']/div[1]`
[04:37:21] <doc|work> Byteflux, raises a socket.error before I even get to recv
[04:37:23] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:37:31] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[04:37:51] <Byteflux> AhmedAmerican: '//div' means "div anywhere in the document"
[04:37:56] *** Joins: digilink (~digilink@user/digilink)
[04:38:11] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:38:34] <Byteflux> doc|work: oh interesting, in select() while it's blocked?
[04:38:57] <doc|work> Byteflux, hmmm, I commented out the select code. Might that be the cause?
[04:39:07] <doc|work> Wanted to work on a simpler setup
[04:39:16] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:39:24] <Byteflux> well presumably you're doing something to interact with the socket that triggers the error
[04:39:31] <doc|work> connect() :)
[04:39:46] <doc|work> and a settimeout (which commenting out doesn't change)
[04:39:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:40:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:40:49] <doc|work> oh eff
[04:40:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[04:40:53] <doc|work> I think I know what it is
[04:40:59] <Byteflux> yeah there you go. if you're using blocking sockets you don't really need select() i guess
[04:41:27] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:42:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:42:37] <doc|work> turns out I was setting the option on SOL_SOCKET instead of SOL_TCP, so now it's not disconnecting, but it's also not dong anything. Progress I guess :)
[04:43:20] <Byteflux> i'm guessing you're going to need to change TCP_KEEPIDLE
[04:43:38] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:43:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:43:52] *** Joins: JanC (~janc@user/janc)
[04:44:46] <doc|work> I need to change my brain really, had copied the keepalive line and not noticed it's TCP_KEEPCNT, had updated SO_KEEPALIVE to SO_KEEPCNT instead. I think it's time to clock out soon :)
[04:44:52] *** Quits: aead (~aead@user/aead) (Quit: aead)
[04:45:31] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:45:32] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:46:27] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:46:33] *** Joins: Keira (~k@lulzsec.co.uk)
[04:46:42] <doc|work> still no dice after killing wifi :/
[04:46:49] <doc|work> just sits there
[04:46:50] *** Quits: bluesmonk (uid318026@id-318026.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[04:49:38] <Byteflux> doc|work: I think it would take at a minimum of `TCP_KEEPIDLE + (TCP_KEEPINTVL * TCP_KEEPCNT)` seconds
[04:50:06] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[04:50:09] <doc|work> yeah, I have low values, 1, 1, 5 - still sitting there
[04:50:16] *** Joins: zeden (~zeden@user/zeden)
[04:50:35] <Byteflux> are you doing anything with the socket?
[04:50:56] <doc|work> nope
[04:51:05] <Byteflux> that's why
[04:51:16] *** Joins: stylianoudakis (~i.sty@177.202.128.20)
[04:51:17] <Byteflux> you won't know until you try to interact with it
[04:51:29] *** Joins: JanC (~janc@user/janc)
[04:51:30] <doc|work> isn't that the point of the keepalive?
[04:53:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[04:53:25] <Byteflux> the point is to test if an idle connection is alive but the only way you're informed about it is if you interact with the socket or use select()
[04:53:55] <doc|work> ok, added select in the meantime and not seeing a change, but need to read some more
[04:54:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:54:56] *** Joins: Nalt (~Nalt|||@cpe-24-243-123-79.rgv.res.rr.com)
[04:56:08] <A_Dragon> can I use constants (ie, a literal) in an overload in some way without duplicating them (as in using `Literal['thing']`)?
[04:56:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:56:25] <A_Dragon> s/lit/Lit
[04:56:37] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:56:41] <A_Dragon> Im assuming that theres no simple way, as there arent magic semantics about "constants" other than convention
[04:56:45] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[04:57:13] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:58:38] <Byteflux> doc|work: select() will block until any of the sockets you've provided in the read/write lists are readable/writable. then it returns a tuple of lists containing readable/writable sockets. in the case of keepalive, it'll come back in the readable list and you are expected to attempt to read from it to generate the socket.error
[04:58:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[04:59:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:00:41] *** Joins: torandu (~sean@94.10.125.197)
[05:02:59] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[05:04:40] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[05:04:40] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 250 seconds)
[05:04:48] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[05:06:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[05:06:17] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 248 seconds)
[05:06:38] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[05:07:30] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[05:08:04] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 252 seconds)
[05:08:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:09:10] *** Quits: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[05:10:32] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 268 seconds)
[05:12:14] *** Joins: digilink (~digilink@user/digilink)
[05:13:16] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:14:07] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 252 seconds)
[05:15:05] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:15:28] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[05:16:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:17:33] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[05:18:32] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[05:18:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:18:48] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[05:19:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:19:24] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[05:19:48] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[05:22:12] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[05:22:36] *** Joins: molt (~molt@79.140.150.21)
[05:23:29] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[05:24:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[05:24:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:25:19] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[05:26:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[05:26:28] *** Joins: JavaBean (~JavaBean@user/javabean)
[05:27:00] *** Joins: aead (~aead@user/aead)
[05:27:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:28:35] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:28:48] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[05:29:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:29:30] <doc|work> Byteflux, so I added in select, and a sendall (had to send the auth info again, sending '.' kicked me off!) aaaand nope
[05:30:35] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:13] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[05:33:55] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[05:34:11] <pycurious> In flask, how do i make a 404 call a particular function ? Instead of werkzeug raising an exception?
[05:35:03] *** Joins: dman777_alter (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[05:35:48] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:36:20] <dman777_alter> I have pygamtize monokai theme for viewing files and it looks so good. I use urxvt terminal emulator. https://pygments.org/docs/styles/#terminal-styles are the terminal stlyes script here meant to theme the terminal emulator?
[05:37:51] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:38:28] *** Quits: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 250 seconds)
[05:38:33] <Byteflux> doc|work: hard to say without seeing code, i guess. i'd probably just recommend asyncio which makes working with event loops much more pleasant than using select() directly. but also you seem to be using blocking sockets.
[05:39:25] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:40:28] <doc|work> Byteflux, thanks, I'm kinda toast now. Been a long day. Blocking sockets should be ok as a pure client, right? How would asyncio help?
[05:40:48] <doc|work> I'm using it more generally in this, but not sure I see the fit
[05:42:10] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[05:42:13] <Byteflux> it just flows better, as you would need to `data = await reader.read()` which is gonna return when either there is something to read or the connection is closed
[05:42:21] <Byteflux> there's nothing inherently wrong with blocking IO
[05:42:34] <Byteflux> you just need to understand that the only way you're going to get notified of a disconnect is if you try to read or write from/to the socket
[05:42:58] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[05:43:00] <Byteflux> this isn't going to happen automatically
[05:43:06] *** Joins: Naan (~Naan@user/naan)
[05:43:13] <doc|work> Byteflux, it's in a while True so it should be, right?
[05:43:16] <Byteflux> so something somewhere is going to need to block or await or whatever
[05:43:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:43:39] <Byteflux> dont really know what your code looks like
[05:43:55] <doc|work> ok, Monday it is. Thanks for the help :)
[05:44:00] * doc|work too tired now
[05:44:01] <Byteflux> np
[05:48:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[05:48:51] <dman777_alter> https://github.com/pygments/pygments/blob/master/pygments/styles/monokai.py#L43 what do classes mean here? for instance, how do I find out what color class kr is for keyword?
[05:50:28] *** Quits: stylianoudakis (~i.sty@177.202.128.20) (Remote host closed the connection)
[05:51:04] *** Joins: fikran (~fikran@user/fikran)
[05:52:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[05:53:54] *** Quits: doc|work (~doc@user/doc) (Quit: Ex-Chat)
[05:54:23] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:54:28] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[05:54:42] *** Joins: jazzy (~jaziz@2600:380:863a:4889:5425:f710:b04a:de02)
[05:55:10] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[05:56:10] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 240 seconds)
[05:56:51] *** Joins: Teacup (~teacup@user/teacup)
[05:58:28] *** Joins: sharperguy__ (~sharpergu@2001:16b8:5cd5:b500:58bf:4729:5bf2:7bf9)
[05:59:19] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[06:00:46] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:01:00] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c49:a000:879d:c7f0:63b9:2b36) (Ping timeout: 250 seconds)
[06:02:05] *** Joins: qlixed (~qlixed@181.44.129.13)
[06:03:17] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[06:03:42] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[06:04:07] *** Joins: molt (~molt@79.140.150.21)
[06:04:42] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[06:05:33] *** Joins: death916 (AdiIRC@user/death916)
[06:07:50] *** Joins: sgn (~sgn@user/sgn)
[06:10:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:10:38] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:11:45] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[06:12:22] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:12:35] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[06:13:55] *** Quits: Guddu (~Guddu@190.84.88.92) (Quit: Leaving)
[06:15:51] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[06:18:25] *** Joins: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[06:18:49] *** Joins: korg815 (~korg815@user/korg815)
[06:19:05] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[06:21:22] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[06:21:40] *** Quits: emika (~emika@212.102.44.132) (Ping timeout: 240 seconds)
[06:22:04] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:23:06] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[06:23:08] *** Joins: emika (~emika@83.136.182.63)
[06:24:31] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:25:18] *** Joins: brabrax (~brabrax@user/brabrax)
[06:26:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:27:57] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[06:29:29] *** Joins: Atque (~Atque@user/atque)
[06:30:23] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:30:43] *** Quits: aead (~aead@user/aead) (Quit: aead)
[06:31:53] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:4a9:809:2ed0:f46a)
[06:32:02] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[06:32:15] *** Joins: sudomannn (~sudomann@86.106.143.76)
[06:32:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:35:06] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 252 seconds)
[06:36:30] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[06:36:30] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[06:36:30] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Ping timeout: 256 seconds)
[06:36:30] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Ping timeout: 240 seconds)
[06:36:30] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (Ping timeout: 252 seconds)
[06:36:30] *** Quits: shugo (~shugo@user/shugo) (Ping timeout: 252 seconds)
[06:36:30] *** Quits: andreas3- (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 252 seconds)
[06:36:30] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:36:30] *** Joins: shugo (~shugo@user/shugo)
[06:36:30] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[06:36:32] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 250 seconds)
[06:36:36] *** Joins: LiftLeft (~LiftLeft@172.83.47.105)
[06:36:50] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[06:37:09] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[06:37:12] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Ping timeout: 245 seconds)
[06:37:14] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[06:38:08] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[06:38:43] *** Joins: mickey5 (~user@user/mickey)
[06:39:06] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[06:39:06] *** mickey5 is now known as mickey
[06:40:06] *** Joins: m4v (~znc@ubuntu/member/m4v)
[06:47:46] *** Quits: jrabbit (~jack@user/jrabbit) (Quit: jrabbit)
[06:52:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 250 seconds)
[06:52:52] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[06:54:27] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:56:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[06:59:06] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[07:02:54] *** Joins: zebrag (~chris@user/zebrag)
[07:06:31] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[07:11:15] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:11:18] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:12:18] *** Joins: aead (~aead@user/aead)
[07:14:12] *** Quits: nomic (~nomic@185.217.117.52) (Quit: Leaving)
[07:14:30] *** Joins: nomic (~nomic@185.217.117.52)
[07:21:29] *** Joins: torandu (~sean@94.10.125.197)
[07:27:13] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 252 seconds)
[07:27:21] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:30:59] *** Quits: dman777_alter (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Quit: Lost terminal)
[07:31:04] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[07:31:09] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:32:05] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:33:16] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[07:34:10] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 240 seconds)
[07:34:40] *** Quits: sudomannn (~sudomann@86.106.143.76) (Ping timeout: 240 seconds)
[07:36:04] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[07:36:09] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[07:36:29] *** Joins: mickey (~user@user/mickey)
[07:37:21] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[07:38:00] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Remote host closed the connection)
[07:38:07] *** Quits: netsan (~netsan@user/netsan) (Remote host closed the connection)
[07:38:22] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[07:39:12] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[07:39:40] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 240 seconds)
[07:40:43] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fffe:f875:a4f3:42b4)
[07:41:38] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[07:41:56] *** Quits: nomic (~nomic@185.217.117.52) (Quit: Leaving)
[07:47:17] *** Joins: midnite (~human@user/midnightlantern)
[07:48:41] *** Joins: cth (~Cthulchu@213.174.21.101)
[07:49:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:50:37] *** Joins: cornett (~ben@149.28.239.26)
[07:51:04] *** [_] is now known as [itchyjunk]
[07:52:58] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[07:56:55] *** Quits: ckdCreations (~ckdCreati@147.55.130.33) (Read error: Connection reset by peer)
[07:57:08] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:57:23] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[07:57:35] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[07:58:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:59:22] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[08:00:26] *** Joins: fikran (~fikran@user/fikran)
[08:01:19] *** Quits: LiftLeft (~LiftLeft@172.83.47.105) (Ping timeout: 252 seconds)
[08:01:28] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 250 seconds)
[08:01:52] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[08:02:42] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[08:04:30] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 250 seconds)
[08:06:40] *** Quits: midnite (~human@user/midnightlantern) (Ping timeout: 250 seconds)
[08:10:46] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:16:55] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:20:19] *** Joins: vlm (~vlm@user/vlm)
[08:21:18] *** Joins: Vonter (~Vonter@user/vonter)
[08:21:52] *** Joins: mei (~mei@user/mei)
[08:23:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[08:25:45] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 248 seconds)
[08:26:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:30:24] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:33:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:33:29] *** Joins: wyclif (~wyclif@user/wyclif)
[08:34:27] *** Quits: venue (~venue@user/venue) (Quit: adios)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:12] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:43] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[08:39:47] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[08:41:47] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:45:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 248 seconds)
[08:48:47] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[08:49:10] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[08:50:01] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:59:22] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[08:59:45] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[09:00:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[09:00:25] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[09:00:37] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[09:02:08] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[09:05:12] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[09:05:43] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:07:39] *** Joins: dre (~dre@2001:8003:c932:c301:ef2c:1b38:ddbc:e3bd)
[09:08:43] <econdudeawesome> exit
[09:08:45] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: leaving)
[09:09:22] *** Quits: sus (thelounge@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[09:09:31] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:11:14] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[09:12:08] *** Joins: sus (thelounge@user/zeromomentum)
[09:15:56] *** Quits: auri (~admin@fsf/member/auri) (Quit: auri)
[09:16:19] *** Joins: auri (~quassel@fsf/member/auri)
[09:16:19] *** Quits: auri (~quassel@fsf/member/auri) (Client Quit)
[09:16:45] *** Joins: auri (~quassel@fsf/member/auri)
[09:18:40] *** Quits: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 240 seconds)
[09:19:25] *** Quits: analoq (~yashi@p508bee85.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:19:45] *** Joins: gegenschein (~james@ec2-34-226-147-141.compute-1.amazonaws.com)
[09:21:08] *** Joins: analoq (~yashi@p5b241323.dip0.t-ipconnect.de)
[09:21:35] *** Quits: fikran (~fikran@user/fikran) (Quit: WeeChat 3.0.1)
[09:28:58] *** Joins: Novi (~novi@user/novi)
[09:31:14] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Read error: Connection reset by peer)
[09:31:29] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[09:37:10] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:edf0:30cb:7a53:9925) (Ping timeout: 240 seconds)
[09:37:31] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[09:37:47] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[09:38:16] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[09:44:28] *** Quits: Ellenor (ellenor@vice-chairwoman.of.freenode.management) (Quit: Bye Open Projects!)
[09:44:31] *** Joins: manin (~x@185.242.190.95)
[09:44:38] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[09:44:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[09:46:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:48:56] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-60dd-0669-6d92-7e2a.res6.spectrum.com) (Ping timeout: 250 seconds)
[09:49:45] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Remote host closed the connection)
[09:50:05] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[09:50:10] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[09:50:59] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[09:51:27] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-0c41-37e4-5cb2-ccbe.res6.spectrum.com)
[09:51:39] *** Joins: upsala (~zcb@185.213.155.160)
[09:54:21] *** Joins: Ellenor (ellenor@vice-chairwoman.of.freenode.management)
[09:56:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:57:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:58:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:59:04] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[09:59:20] *** Quits: anorthall (~anorthall@user/anorthall) (Quit: Goodbye!)
[09:59:33] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[09:59:36] *** Joins: mikkel (~mike@208.110.120.167)
[10:01:01] *** Joins: anorthall (~anorthall@user/anorthall)
[10:02:46] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[10:03:01] *** Joins: manin (~x@185.242.190.95)
[10:03:15] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[10:03:32] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Read error: Connection reset by peer)
[10:04:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:05:40] *** Joins: cth (~Cthulchu@213.174.21.101)
[10:07:20] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[10:08:41] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:16:09] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:17:19] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:19:22] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 252 seconds)
[10:20:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:21:01] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 252 seconds)
[10:24:00] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:24:35] *** Joins: steam (~steam@user/steam)
[10:25:57] *** Joins: pro_z (~pro_z@37.214.32.238)
[10:26:40] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:41ad:9a3:9397:f078:c2f9) (Remote host closed the connection)
[10:32:50] *** Joins: rendar (~rendar@user/rendar)
[10:37:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[10:38:00] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[10:38:20] *** Joins: pycurious (~Adium@user/pycurious)
[10:38:57] *** Joins: wyclif (~wyclif@user/wyclif)
[10:39:01] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[10:40:16] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 252 seconds)
[10:41:12] *** Joins: ross (sid305269@user/ross)
[10:43:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[10:44:26] *** Joins: wyclif (~wyclif@user/wyclif)
[10:46:25] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:56] *** Joins: seednode (~seednode@user/seednode)
[10:47:29] *** Quits: mei (~mei@user/mei) (Quit: mei)
[10:47:52] *** Quits: emika (~emika@83.136.182.63) (Ping timeout: 250 seconds)
[10:48:31] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[10:48:42] *** Joins: mei (~mei@user/mei)
[10:49:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[10:49:19] *** Joins: emika (~emika@185.207.249.144)
[10:49:55] *** Joins: wyclif (~wyclif@user/wyclif)
[10:52:12] *** Joins: ubert (~Thunderbi@178.115.47.86.wireless.dyn.drei.com)
[10:52:16] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:54:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:57:15] *** Joins: node1 (~node1@user/node1)
[10:58:25] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[10:58:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:02:16] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[11:05:44] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 268 seconds)
[11:10:59] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[11:13:31] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:15:10] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:24b1:cf7d:64:580d) (Ping timeout: 258 seconds)
[11:18:14] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:20:09] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 248 seconds)
[11:20:20] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:24b1:cf7d:64:580d)
[11:20:32] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[11:21:31] *** Quits: node1 (~node1@user/node1) (Ping timeout: 252 seconds)
[11:22:36] *** Joins: Maikel (~Maikel@130.61.63.136)
[11:24:00] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:7075:a6e1:dbff:2d89)
[11:24:18] *** Joins: humbertowoody (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[11:24:34] *** Joins: torandu (~sean@94.10.125.197)
[11:26:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:24b1:cf7d:64:580d) (Ping timeout: 240 seconds)
[11:27:46] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[11:28:18] *** Joins: lapno_ (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[11:29:07] *** Quits: ubert (~Thunderbi@178.115.47.86.wireless.dyn.drei.com) (Quit: ubert)
[11:29:21] *** Joins: ubert (~Thunderbi@178.115.47.86.wireless.dyn.drei.com)
[11:30:19] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 252 seconds)
[11:30:28] *** Joins: iflema (~ian@user/iflema)
[11:32:54] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[11:33:19] <no_gravity> Good Morning
[11:33:45] *** Joins: node1 (~node1@user/node1)
[11:33:48] *** Quits: ubert (~Thunderbi@178.115.47.86.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[11:34:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[11:34:43] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 268 seconds)
[11:35:35] *** Joins: wyclif (~wyclif@user/wyclif)
[11:36:38] <aphysically> grym: jinsun: PEP517 (already implemented by pip) specifies that if a build system is not specified in the TOML that setuptools is to be used
[11:37:14] <aphysically> Therefore if setuptools ever implements support for PEP 621, it will be possible to install a project that can be fully specified by the basic metadata in PEP 621 with the build system being entirely transparent to the developer/user
[11:37:35] <aphysically> sort of the type of project flit covers I guess
[11:37:44] <aphysically> (n.b. setuptools does *not* currently support this)
[11:38:24] <graingert[m]> But it's coming sooooon
[11:39:12] <graingert[m]> Would be nice if setuptools defaults to packages = find based on project name like flit does though
[11:39:46] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[11:40:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[11:41:04] *** Joins: wyclif (~wyclif@user/wyclif)
[11:42:35] *** Joins: torandu (~sean@94.10.125.197)
[11:42:35] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[11:43:24] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[11:43:52] <aphysically> oh, I also received the suggestion that possibly pip -vvvv would have shown the poetry install grym jinsun
[11:45:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[11:46:34] *** Joins: wyclif (~wyclif@user/wyclif)
[11:47:06] *** Joins: mexen (uid495612@user/mexen)
[11:47:39] *** Joins: kosh (~kosh@user/kosh)
[11:48:10] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[11:49:39] *** Joins: p-i- (~Ohmu@2403:6200:8870:41ad:25ad:9a40:254:4b68)
[11:49:50] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 250 seconds)
[11:50:07] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[11:50:32] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:51:49] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[11:59:27] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[11:59:58] *** Joins: raxor2k (~raxor2k@78.158.231.197)
[12:00:17] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:7b1c:c7fd:37c9:2b2a)
[12:00:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:03:46] *** Joins: palasso (~palasso@user/palasso)
[12:04:45] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:05:35] *** Quits: tga (~tga@user/tga) (Quit: leaving)
[12:05:41] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:06:14] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[12:07:37] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:08:27] <raxor2k> i have an CSV file containing: sensor_type, acc_, pos_, and weight_, the csv file has over 300k data. I am able to read the csv file, and now i want to use deep learning to predict weight. Any suggestions ?
[12:09:08] <raxor2k> or at least a good link i can read ?
[12:09:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[12:12:14] <p-i-> Can anyone see why CTRL+c fails to terminate this trio+asyncio code: https://bpa.st/GGTA ?
[12:12:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:12:45] *** Joins: ice9 (~ice9@user/ice9)
[12:14:04] <Luyin> raxor2k: you might want to check out ##machinelearning-general, they're very knowledgeable there
[12:14:24] <p-i-> raxor2k: That sounds like a very standard ML task, so any intro to backpropagating NNs should do the job. Maybe first choose what framework you wish to use and go from there.
[12:14:44] <Luyin> raxor2k: I can recommend "Hands On Machine Learning" by Aurélien Geron
[12:15:17] <p-i-> Yes, Geron is amazing
[12:15:29] <p-i-> And you can download an .ipynb for each chapter and play with it.
[12:16:52] <p-i-> Luyin: Do you know if ##machinelearning-general has any connection with ##machinelearning ?  I remember many individuals had conflicts with the moderator of ##machinelearning
[12:17:34] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:19:36] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[12:20:02] *** Joins: mickey (~user@user/mickey)
[12:21:06] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:21:26] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Quit: Leaving.)
[12:22:44] *** Quits: lapno_ (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[12:22:48] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[12:23:07] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[12:23:08] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[12:25:14] <raxor2k> luyin: thanks
[12:25:28] <raxor2k> p-i: i want to use tensorflow
[12:25:42] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-0c41-37e4-5cb2-ccbe.res6.spectrum.com) (Quit: jarthur)
[12:25:53] *** Joins: Adoi (~Adoi@user/adoi)
[12:25:58] <raxor2k> our machine-learning model is finished, and we have 97% prediction
[12:26:02] *** Joins: wender (~Wender@189.37.64.245)
[12:26:10] <raxor2k> now we want to create a deep-learning model that can train itself based on the data¨
[12:26:17] *** Joins: Appli000 (~Thunderbi@176-161-23-89.abo.bbox.fr)
[12:29:43] *** Quits: computeiro (~Wender@189.37.69.233) (Ping timeout: 252 seconds)
[12:32:24] *** Joins: sri19 (uid477846@id-477846.charlton.irccloud.com)
[12:34:26] <sri19> Good morning all, what is the "best" way to distribute a Python Gtk application on Linux? I wrote a pretty good window snapping tool (indicator menu, memorable keyboard shortcuts, multiple display support etc.) for Xfce (X display server) and would like to share it.
[12:34:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[12:35:25] *** Quits: spithash_ (~spithash@user/spithash) (Ping timeout: 244 seconds)
[12:36:05] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:06] *** Joins: spithash (~spithash@user/spithash)
[12:37:47] *** Joins: kosh (~kosh@user/kosh)
[12:38:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:04] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:39:32] *** Joins: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133)
[12:40:27] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[12:41:50] *** Quits: sharperguy__ (~sharpergu@2001:16b8:5cd5:b500:58bf:4729:5bf2:7bf9) (Ping timeout: 250 seconds)
[12:42:43] *** Quits: b0nn (~shane@user/b0nn) (Quit: Reconnecting)
[12:42:46] *** Quits: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[12:42:50] *** Joins: b0nn (~shane@user/b0nn)
[12:44:01] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[12:44:23] *** Joins: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr)
[12:45:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:54:28] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[12:55:02] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:55:28] <Wulf> sri19: github + readthedocs + pypi
[12:55:32] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[12:55:51] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:58:02] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[12:58:28] <jim> curious, can there be a single file thats a python module? and of course there can be a dir containing some python modules too?
[12:59:02] <Wulf> jim: modules are files, packages are directories!
[12:59:14] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:59:43] *** Joins: gggp (~textual@60.10.23.160)
[13:00:10] <jim> but moreorless, they serve the same purpose, to expose code that is in some way reusable, to a mainline script?
[13:00:21] <Wulf> yes
[13:01:39] <jim> ok... so it's been years n years since I tried to learn to package these things, I never really got it...
[13:02:45] <jim> ideally, I'm looking for a video that makes the process easy to understand... would you happen to know of any of these?
[13:05:06] <rendar> any help with this? https://bpa.st/G6XQ
[13:05:29] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:06:23] <rendar> why can't i install dateutil anymore?
[13:06:28] <KirkMcDonald> rendar: The PyPI package is named python-dateutil
[13:06:35] <rendar> oh, sorry
[13:07:52] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:08:16] *** Quits: Appli000 (~Thunderbi@176-161-23-89.abo.bbox.fr) (Quit: Appli000)
[13:09:39] <rendar> where should i use `--no-warn-script-location` ? `pip --no-warn-script-location install ...` or `pip install --no-warn-script-location ...` ?
[13:19:29] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:19:30] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[13:20:52] *** Quits: gggp (~textual@60.10.23.160) (Ping timeout: 252 seconds)
[13:22:31] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Read error: Connection reset by peer)
[13:22:32] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:22:56] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[13:24:44] *** Quits: humbertowoody (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 258 seconds)
[13:25:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:26:24] *** Joins: gggp (~textual@60.10.23.165)
[13:27:09] <rendar> also, python -m <module> runs something that is into bin/ directory, right? so `bin/python -m pip` would be exactly the same as calling `bin/pip` ?
[13:29:10] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[13:29:15] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[13:30:00] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[13:30:03] *** Joins: humbertowoody (~humbertow@2806:107e:f:5e47:c445:83d3:813c:9801)
[13:30:08] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[13:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[13:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:31:37] <jinsun> no, entrypoints and python -m can do completely different things if you write your package weirdly
[13:32:03] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[13:32:10] <rendar> uhm, ok
[13:32:10] <jinsun> if you are asking specifically about pip, then I think both will do the same thing
[13:32:43] <rendar> so what is the best way to launch pip and other utilities? <venv_dir>/bin/pip or <venv_dir>/bin/python -m pip ?
[13:34:42] <jinsun> well it is shorter to just do  <venv_dir>/bin/pip
[13:34:42] *** Quits: humbertowoody (~humbertow@2806:107e:f:5e47:c445:83d3:813c:9801) (Ping timeout: 258 seconds)
[13:35:52] <jinsun> python -m is suggested in cases when you directly run python without specifying the full path of the venv, then python -m pip and pip may be different
[13:36:31] <rendar> jinsun, can be the case that bin/pip doesn't exist as an executable and instead bin/python -m pip works?!
[13:38:34] <jinsun> hmm not sure if that is possible, if python -m pip works then pip is installed in the venv, that should make the pip executable also be available in the venv
[13:38:41] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:40:03] *** Joins: humbertowoody (~humbertow@2806:107e:f:5e47:c445:83d3:813c:9801)
[13:40:27] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:40:40] *** Quits: gggp (~textual@60.10.23.165) (Ping timeout: 240 seconds)
[13:42:27] <Adoi> hello!
[13:42:45] <Adoi> I am getting this error and cant figure where I am erring: https://bpa.st/66ZQ
[13:44:00] <fluter> hi, how i do a online for loop after import? it gives me error
[13:44:21] <fluter> python -c 'import os; for i in range(3): print i'
[13:44:23] <fluter>   File "<string>", line 1
[13:44:25] <fluter>     import os; for i in range(3): print iY
[13:45:05] <rendar> fluter, 1) use no-paste websites 2) use `print(i)`
[13:45:40] *** Quits: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[13:45:41] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:45:48] <fluter> rendar: sorry, i'm on python2
[13:46:36] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[13:47:29] <rendar> 3) use python3
[13:47:51] <fluter> rendar: https://bpa.st/MLTQ
[13:47:55] <fluter> rendar: cannot
[13:48:13] <rendar> fluter, why not? PdS?
[13:48:22] <fluter> actually it's error in python3 too
[13:48:27] <fluter> it's same error
[13:48:47] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[13:49:22] <fluter> rendar: any idea?
[13:49:34] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[13:51:32] <rendar> fluter, yes, you should use a comprehension, in the likes of `python -c 'import os; [print(i) for i in range(2)]'`
[13:53:37] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[13:55:47] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[13:56:04] <lpapp> hi, is it possible with pyautogui to recognise an icon from a different app than the terminal where I am running pyautogui/
[13:57:31] <hexnewbie> So while I'm adding documentation to undocumented functions in my code, I also decided to add type annotations. How does one deal with cyclic annotations? E.g. Entity(name: Name), Name(name: str, entity: Entity=None)? Is there a way to annotate this, or should I just skip them?
[14:00:08] *** Joins: white_shadow (~brey@59.89.31.160)
[14:00:58] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[14:03:16] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:03:21] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[14:03:22] <p-i-> Can I process an arbitrary method on a class. So c = C() and c.foo ... C has a generic method to handle all foo that it doesn't have explicit methods for.
[14:03:37] <p-i-> (I'm writing an asyncio->trio wrapper around a large class)
[14:05:25] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[14:05:53] <gcbirzan> p-i-: Not sure I understand what you're saying
[14:06:12] *** Joins: ubert (~Thunderbi@77.119.170.32.wireless.dyn.drei.com)
[14:06:27] *** Joins: xon (~xon@192.145.116.12)
[14:07:13] <p-i-> So Orig class has .foo .bar .quux And I'm creating Wrapped. So I need my_wrapped.foo to execute .foo on Orig
[14:07:16] <Adoi> I solved it, thanks
[14:08:03] <xon> p-i-: LF?
[14:08:08] <p-i-> https://bpa.st/VKZA <-- that's what I'm looking at
[14:08:24] <p-i-> I've to 2 methods (many more to come): get_exchange_info and get_all_tickers
[14:08:31] <p-i-> and the wrapping is the same for both (all)
[14:09:00] <p-i-> If I manually wrap each, (1) ugly and (2) what if the source class changes? Now I need to patch the wrapper.
[14:10:12] <jinsun> hexnewbie: you can put quotes around the type names and the type checkers will understand, or you can do `from __future__ import annotations` at the top of your file
[14:10:35] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[14:10:49] <hexnewbie> jinsun: Thanks
[14:12:01] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[14:18:02] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[14:18:09] <jinsun> p-i-: seems like you want __getattr__, you can just define __getattr__ in your class that does getattr(self._client, name) and then wraps it
[14:18:48] <p-i-> Yes, that's the one, thanks!
[14:18:55] <p-i-> I knew there was some way to do it...
[14:19:03] *** audiobirb is now known as audiocat
[14:19:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:24:54] <graingert[m]> p-i- I'd wrap these all by hand
[14:25:06] <graingert[m]> Auto wrapping will ruin your traceback
[14:25:17] <p-i-> 👍
[14:25:36] <graingert[m]> And some functions will need wrapping as async cmgrs
[14:26:17] <graingert[m]> Or whole new wrapper classes
[14:26:22] *** Quits: xon (~xon@192.145.116.12) (Quit: Leaving...)
[14:26:28] <graingert[m]> Also you'll want the type annotations to work
[14:27:58] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[14:28:46] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[14:29:55] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[14:30:44] *** Joins: ice9 (~ice9@user/ice9)
[14:30:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:31:05] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:32:17] <raxor2k> can someone please explain why i am getting NaN on some values when they are all numbers? doesnt make sense at all.. https://bpa.st/KYJA
[14:33:55] <lpapp> hmm, pyautogui cannot even take proper screenshot from my screen?
[14:35:51] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:36:02] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[14:37:27] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[14:37:28] *** Joins: ice9 (~ice9@user/ice9)
[14:37:38] <raxor2k> plz.. help
[14:39:00] *** Joins: gggp (~textual@45.8.158.107)
[14:39:10] <lpapp> this creates a blank screenshot, why? p = pyautogui.position();pyautogui.screenshot('foo2.png', region=(p.x, p.y, 20, 20)) - But pyautogui.screenshot('foo.png') does create a proper screenshot from the screen
[14:39:59] *** Joins: georgios (~georgios@user/georgios)
[14:40:08] <lpapp> I am hovering over an icon (top left corner of it) that is at least 20x20
[14:40:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[14:41:13] *** Joins: akaWolf (~akaWolf@2a05:3580:df03:1a00:21e:8cff:fe18:61)
[14:41:26] <lpapp> p = pyautogui.position(); pyautogui.click(p.x+10, p.y+10) also works like a charm to click on that icon
[14:42:08] *** Joins: wyclif (~wyclif@user/wyclif)
[14:42:25] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[14:42:30] *** Joins: ice99 (~ice9@user/ice9)
[14:43:43] *** Quits: zBeeble (~zBeeble@2001:1928:1::35) (Remote host closed the connection)
[14:44:04] *** Quits: ice99 (~ice9@user/ice9) (Max SendQ exceeded)
[14:44:27] *** Quits: raxor2k (~raxor2k@78.158.231.197) ()
[14:44:31] <bjs> Adoi: the error tells you, __str__ should return a str
[14:44:35] *** Joins: ice99 (~ice9@user/ice9)
[14:44:44] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[14:45:01] *** Joins: goldfish (~goldfish@user/goldfish)
[14:45:34] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[14:45:52] *** Joins: maharshipatel (~maharship@103.250.145.6)
[14:47:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:47:37] *** Joins: wyclif (~wyclif@user/wyclif)
[14:47:46] *** Quits: gggp (~textual@45.8.158.107) (Ping timeout: 252 seconds)
[14:48:19] *** Joins: gggp (~textual@45.8.158.107)
[14:52:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[14:53:07] *** Joins: wyclif (~wyclif@user/wyclif)
[14:53:25] <maharshipatel> hello i  am new to this and i have created a program that finds the first non repeating character in string. can anyone help me by telling me what is time and space complexity for the program and how i can improve it. https://bpa.st/XKKA
[14:54:22] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[14:54:56] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:55:13] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[14:58:13] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (Quit: leaving)
[14:59:12] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[14:59:55] <white_shadow> freenode is closed?
[15:00:18] <maharshipatel> i was also shocked
[15:00:33] <rud0lf> they shut down freenode?
[15:00:41] <Helle> not quite, but #python here
[15:00:44] <rud0lf> why, wasn't it popular?
[15:00:47] <Helle> not #random-chatter
[15:00:52] <rud0lf> sorry
[15:01:03] <Helle> rud0lf: there have been issues with managment, we've moved, as have most other channels
[15:01:07] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 244 seconds)
[15:01:20] <rud0lf> it was an irony of my side :)
[15:01:24] <rud0lf> sarcasm i mean
[15:02:53] *** Joins: spithash (~spithash@user/spithash)
[15:03:11] <white_shadow> this filtered out a lot of bots though
[15:03:57] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[15:04:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:07:47] <maharshipatel> can anyone please tell me what is Big O notation for this code. :-   https://bpa.st/XKKA
[15:08:26] <bjs> maharshipatel: what are you going to do with the information?
[15:10:18] <supakeen> probably o n squared but weird code
[15:11:50] <maharshipatel> i have been doing random coding challenges to train my brain as i have  stopped coding python (beginner) for around 3 years and i came across challenge where they require it to be O(2n)
[15:12:25] <bjs> maharshipatel: this code is not O(n)
[15:13:00] *** Joins: manin (~x@185.242.190.95)
[15:15:29] <maharshipatel> can anyone help me on how i can improve it or even rewrite it.
[15:15:33] *** Joins: emika0 (~emika@83.136.182.119)
[15:15:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:15:53] *** Quits: emika (~emika@185.207.249.144) (Ping timeout: 248 seconds)
[15:15:53] *** emika0 is now known as emika
[15:16:31] <bjs> maharshipatel: do you understand *why* it's not O(n)?
[15:19:34] *** Quits: Enitin (~Enitin@82.102.22.86) (Remote host closed the connection)
[15:19:37] <maharshipatel> no i am trying to understand but i don't.
[15:20:08] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:20:10] <maharshipatel> iteration is O(n)
[15:20:11] <Repiphany> How often is countChar called
[15:20:15] <bjs> maharshipatel: for each character in string_list you calculate how many times it appears
[15:20:27] <Repiphany> and what does string_list.count(char) do
[15:20:27] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[15:20:33] *** Joins: mickey (~user@user/mickey)
[15:20:41] <maharshipatel> oh ok
[15:21:04] <bjs> maharshipatel: note you don't have to *count* how many times things appear, you just need to know *if* it appeared before
[15:21:46] <bjs> maharshipatel: so maybe you should just keep around a set of characters you've already seen and add to it as you go
[15:22:02] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[15:22:05] <bjs> (or some solution like that)
[15:22:23] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:22:25] <maharshipatel> okay now i get it. thank you
[15:23:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[15:23:40] <maharshipatel> bjs Repiphany  thank you for your help
[15:24:02] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[15:24:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[15:25:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:38:19] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[15:38:53] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[15:40:19] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[15:41:03] *** Joins: darksun (~darksun@user/darksun)
[15:41:34] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[15:42:21] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:43:47] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[15:49:43] *** Quits: akaWolf (~akaWolf@2a05:3580:df03:1a00:21e:8cff:fe18:61) (Remote host closed the connection)
[15:49:53] *** Quits: bookworm (~bookworm@neomutt/bookworm) ()
[15:49:55] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 252 seconds)
[15:50:31] *** Joins: plastico (~plastico@neomutt/plastico)
[15:53:23] *** Joins: akaWolf (~akaWolf@akawolf.org)
[15:54:56] *** Joins: mcope (~matt@user/mcope)
[15:55:01] *** Quits: mcope (~matt@user/mcope) (Client Quit)
[15:55:01] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[15:55:02] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[15:55:47] *** Joins: mcope (~matt@user/mcope)
[15:56:10] *** Joins: badsektor (~badsektor@user/badsektor)
[15:56:13] *** Quits: mcope (~matt@user/mcope) (Client Quit)
[15:56:35] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[15:57:42] *** Quits: gggp (~textual@45.8.158.107) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:58:12] *** Joins: gggp (~textual@45.8.158.107)
[16:00:24] *** Quits: gggp (~textual@45.8.158.107) (Remote host closed the connection)
[16:01:28] *** Joins: gggp (~textual@60.10.194.48)
[16:02:20] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:02:39] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[16:05:53] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[16:06:31] *** Joins: Henistein (~Henistein@2001:8a0:c1b3:6b01:c1a6:bb24:890a:bd1b)
[16:06:48] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[16:06:55] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[16:07:33] <ledtc> Pip throws this error in venv, what to do ?
[16:07:34] <ledtc> WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/ssl/
[16:09:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:09:18] <bookworm> what OS are you on? How did you install python?
[16:09:39] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[16:10:18] <ledtc> bookworm Well the setup i guess, its a wile ago.  windows 10.  Pips only broken in venv works great outside
[16:10:42] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[16:10:45] <bookworm> if it was a while ago you might want to update python :)
[16:11:11] *** Quits: ubert (~Thunderbi@77.119.170.32.wireless.dyn.drei.com) (Remote host closed the connection)
[16:11:54] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:c468:ec9f:e649:97cb)
[16:12:36] <ledtc> bookworm 3.8.1 is to old ?
[16:13:04] <bookworm> define too old... latest is 3.9.6
[16:13:33] <bookworm> but no, it's at least not *that* old
[16:14:02] <bookworm> it's probably some sort of DLL lookup issue, alas I'm not really a windows person so you need to wait for someone else
[16:14:22] *** Quits: white_shadow (~brey@59.89.31.160) (Quit: Leaving)
[16:14:27] *** Joins: lsync (~ls@user/deepspace-link)
[16:14:58] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:15:42] <Luyin> p-i-: I don't know, sorry!
[16:17:08] <ledtc> bookworm That actually solved it <.< Also did an  python -m venv --upgrade
[16:18:23] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-8f76-5f69-0a39-aaec.res6.spectrum.com) (Ping timeout: 258 seconds)
[16:19:00] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[16:19:34] *** Joins: c10l (~c10l@89.34.167.207)
[16:20:02] *** Quits: securethemews_ (~securethe@2a00:23c4:1e9b:7b00::1) (Quit: Leaving)
[16:22:09] *** Quits: sri19 (uid477846@id-477846.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[16:22:34] <p-i-> Does anyone know how to set the .venv in VSCode? (macOS) The code hilighter is failing on certain imports, presumably because it's looking in the wrong .venv
[16:22:38] <de-facto> I am searching for a reliable and mature way to download files in python, so far i tried requests and requests_cache and i ran into a pile of nasty problems. is there a more mature way to do things like this?
[16:22:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:23:05] <p-i-> de-facto: Do you require concurrency?
[16:23:11] <de-facto> the file are big, 350MB
[16:23:36] <de-facto> no concurrency (yet) maybe in future i may want to run fetching data in parallel threads or such
[16:24:08] <p-i-> I've used trio + httpx recently and that was smooth. But not big downloads.
[16:24:10] *** Joins: wyclif (~wyclif@user/wyclif)
[16:25:04] <bookworm> what's nasty about requests?
[16:25:29] <bookworm> as for the venv location, in the python extension settings
[16:25:37] *** Joins: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[16:26:14] <de-facto> sometimes it just idles and does not download at all, other times it got tracebacks with out of memory problems etc
[16:26:29] <de-facto> idk it just feels not ready for production to me
[16:26:38] <bookworm> out of memory problems only occur if you try to load it into memory in the first place
[16:26:51] <bookworm> that's a programming error, not the fault of the library
[16:27:03] <marduk> de-facto: you need to be pulling the file in chunks, not all in memory. I'm downloading multi-gigabyte files using requests all the time.
[16:27:20] <maharshipatel> bjs and Repiphany after your advice i rewrote my program can you please check if i did it correct ? . anyone else who can help please share your feedback. https://bpa.st/RJGQ . Big O notation should be O(n)
[16:27:40] <de-facto> i did not load it into memory (at least i think i dont), maybe requests_cache does though
[16:27:47] <Ninpo> de-facto: probably be helpful if you share some actual code and errors instead of declaring a library with thousands of users as unfit for use
[16:28:32] <bookworm> sure, "cache" implies that you want to cache it, generally not on disc but in RAM
[16:28:43] <bookworm> after all cache on disc is fairly slow
[16:28:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:29:11] <bookworm> but I'm sure you can configure said cache to whatever you want, max size, location and all such things
[16:29:25] <bookworm> cache eviction strategy...
[16:29:27] <bookworm> list goes on
[16:29:42] *** Joins: wyclif (~wyclif@user/wyclif)
[16:29:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:30:16] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:30:21] <bookworm> (what jokers call themselves python and cache...)
[16:31:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:31:38] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[16:32:53] <bookworm> maharshipatel: your code is a bit more complicated than it has to, you really don't need to store more than a single character if I understand your problem
[16:33:46] <bookworm> you want to essentially reproduce uniq (the linux command) yes? So duplicated items appear right next to each other and not somewhere else in the string? "aa" is a duplicate but "aba" is not
[16:34:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:34:47] <maharshipatel> let me give you the problem: https://bpa.st/UYDA
[16:35:10] *** Joins: wyclif (~wyclif@user/wyclif)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:06] <bookworm> ah, so not what I described then
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:34] <maharshipatel> nope
[16:36:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:38:10] *** Quits: hyper_dave (~hyper_dav@197.156.77.247) (Ping timeout: 240 seconds)
[16:39:10] <de-facto> i think i try urllib instead its urlretrieve does download without any problems
[16:39:48] *** Joins: niv (~niv@limbo.cypherpunks.io)
[16:40:27] <nedbat> de-facto: i don't know why you are having problems, but requests is the most mature
[16:40:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[16:41:15] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Remote host closed the connection)
[16:41:45] <nedbat> requests-cache, i have no idea about
[16:41:50] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 256 seconds)
[16:43:29] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[16:44:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:45:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:45:52] *** Joins: pro (~pro@user/pro)
[16:48:01] <bookworm> maharshipatel: my solution: https://bpa.st/FDCA
[16:49:26] <bookworm> if you don't like the counter you can use a normal dict or default dict as well, counter just makes it obvious what you wanna do
[16:50:07] *** Joins: benjwadams (~benjwadam@107-136-8-58.lightspeed.hstntx.sbcglobal.net)
[16:50:29] *** Joins: hyper_dave (~hyper_dav@197.156.107.167)
[16:51:07] *** Joins: benjwadams68 (~benjwadam@107-136-8-58.lightspeed.hstntx.sbcglobal.net)
[16:51:50] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[16:52:08] *** Joins: mexen (uid495612@user/mexen)
[16:52:40] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[16:53:30] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[16:53:34] *** Joins: sharperguy__ (~sharpergu@2001:16b8:5cd5:b500:58bf:4729:5bf2:7bf9)
[16:54:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[16:54:25] *** Quits: benjwadams (~benjwadam@107-136-8-58.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 246 seconds)
[16:54:56] *** Joins: wyclif (~wyclif@user/wyclif)
[16:56:38] *** Quits: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 250 seconds)
[16:59:01] *** Quits: sharperguy__ (~sharpergu@2001:16b8:5cd5:b500:58bf:4729:5bf2:7bf9) (Ping timeout: 258 seconds)
[16:59:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[17:00:24] *** Joins: wyclif (~wyclif@user/wyclif)
[17:04:32] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[17:05:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[17:05:50] *** Joins: wyclif (~wyclif@user/wyclif)
[17:06:24] *** Quits: portalrat_ (~portalrat@user/portalrat) (Remote host closed the connection)
[17:06:47] *** Joins: besnn (~besnn@user/besnn)
[17:08:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:09:19] *** Quits: torandu (~sean@94.10.125.197) (Quit: leaving)
[17:13:07] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[17:14:10] <rannnn8888> if the site have rss in mean i have a "Permission" to scraping him ?
[17:14:18] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:41ad:9a3:9397:f078:c2f9)
[17:14:54] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[17:15:16] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:15:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:15:43] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[17:16:01] *** Joins: okamis (~okamis@185.213.154.161)
[17:17:18] <bookworm> no? But you have permission to read that RSS feed according to the spec
[17:17:28] <bookworm> meaning respect the update times
[17:17:41] <bookworm> that's the point of RSS, that you don't need to scrape
[17:17:44] <hendursaga> "Better to beg for forgiveness than ask for permission"
[17:18:11] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:25ad:9a40:254:4b68) (Ping timeout: 258 seconds)
[17:18:32] <bookworm> robots.txt is a thing
[17:19:38] *** Quits: maharshipatel (~maharship@103.250.145.6) (Quit: Client closed)
[17:20:25] *** Joins: carl- (~carl-@185.103.188.130)
[17:20:37] *** Quits: wender (~Wender@189.37.64.245) (Remote host closed the connection)
[17:20:41] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[17:21:21] <okamis> Hi, Im running python -m http.server for adhoc purpose to serve some files. When I access files from pc browser I can access video, but when I access from iphone I get a broken pipe https://bpa.st/EHRQ
[17:21:59] <okamis> Why does that happen?
[17:22:33] <ledtc> okamis "The broken pipe error usually occurs if your request is blocked or takes too long and after request-side timeout, it'll close the connection and then, when the respond-side (server) tries to write to the socket, it will throw a pipe broken error."
[17:24:36] <okamis> The broken pipe happens almost instantly after I press the video link. Is there anything I can do to fix it?
[17:26:14] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 268 seconds)
[17:26:24] *** Joins: computeiro (~Wender@189.37.64.245)
[17:26:49] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[17:27:23] *** Joins: georgios (~georgios@user/georgios)
[17:27:37] <rannnn8888> bookworm what u mean i "don't need to scrape" so why the site make this ?
[17:28:09] <lxer> I have a few long lists of definitions (key/value pairs), there are a few ways to create this, like list, enums, dictionary, but it is all a bit ugly because when using it I have to use quotes and/or brackets everywhere, and with Enums I have to add .value everytime I use it. Is there a better way?
[17:28:44] <bookworm> rannnn8888: "scraping" usually means fetching the normal http website, recursively fetching any links you find and doing that every $timeperiod
[17:29:12] <bookworm> that's generally very expensive for the server, especially if things are dynamically generated based on the link (think zip files for git forges)
[17:29:14] *** Joins: arinov (~arinov@178.240.152.159)
[17:29:16] <ledtc> SQLite how do i un-add something to a session.  e.g   db.session.add(Bad_entry)
[17:30:17] <bookworm> RSS is a protocol that allows a server to publish certain portions of a website so that client can fetch those as they are published. The RSS  spec includes things like "how often is a client allowed to fetch" and similar options that allows the server to tune the traffic
[17:33:25] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[17:33:45] *** Quits: computeiro (~Wender@189.37.64.245) (Quit: Leaving)
[17:33:59] <lxer> okamis, probably some routing thing. Are you sure they're on the same network & subnet ?
[17:35:27] *** Joins: Roey (~Roey@user/Roey)
[17:35:51] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[17:37:04] <okamis> lxer, yeah, I can access pictures, its only video that fails.
[17:37:59] *** Quits: Henistein (~Henistein@2001:8a0:c1b3:6b01:c1a6:bb24:890a:bd1b) (Quit: Client closed)
[17:38:06] <okamis> okay the pc uses ethernet, and phone uses wifi, its an ap, I will try to use the ap instead, have to logout for now then
[17:38:09] *** Quits: okamis (~okamis@185.213.154.161) (Quit: Leaving)
[17:40:26] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:7b1c:c7fd:37c9:2b2a) (Quit: Leaving)
[17:42:11] *** Joins: dez (uid92154@user/dez)
[17:43:09] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:45:15] *** Joins: leighbb (~leighbb@user/leighbb)
[17:45:55] <gloomy> Is there an elegant oneliner to get "the first element of a list that satisfies some condition"? I usually do [ el for el in lst if el ....][0] , but it's both inefficient and prone to failure (if no element satisfies the condition)
[17:46:44] <nedbat> gloomy: next((el for el in lst if cond(el)), default_if_none)
[17:47:01] <gloomy> I guess I could do something like more_itertools.take(1, (el for el in lst if el...))
[17:47:09] <gloomy> nedbat: ah, yes, that's better :)
[17:47:55] <gloomy> yes, that's perfect, thanks! didn't know next took a second argument :)
[17:48:40] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[17:48:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[17:49:30] *** Joins: Ivyy (~Ivyy@2001:a61:135b:5001:1ee0:53a3:bb15:f50)
[17:51:28] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:52:09] *** Quits: somlis (~somlis@user/somlis) (Remote host closed the connection)
[17:52:41] *** Joins: portalrat (~portalrat@user/portalrat)
[17:56:22] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2)
[17:58:04] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[18:01:57] *** Joins: okamis (~okamis@81-235-235-237-no92.tbcn.telia.com)
[18:02:24] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0d8f-34df-93a6-03c1.res6.spectrum.com)
[18:02:38] *** Joins: entuland (~entuland@user/entuland)
[18:03:14] <okamis> Im back, yeah, it seems to be videos cant be accessed.
[18:04:27] *** Joins: toine42 (~antoine@2001:41d0:e:41f::1)
[18:04:41] *** Quits: toine (~antoine@2001:41d0:e:41f::1) (Read error: Connection reset by peer)
[18:06:50] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[18:07:28] *** Joins: ice9 (~ice9@user/ice9)
[18:07:58] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 252 seconds)
[18:08:30] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[18:09:41] <bookworm> gloomy: one liner magic should be avoided in my opinion... if you want a single item make it explicit and loop in the traditional sense
[18:09:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[18:10:13] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[18:11:25] <grym> next(..., default) is OK in my book
[18:11:50] *** Joins: somlis (~somlis@user/somlis)
[18:11:50] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[18:12:55] *** Quits: arinov (~arinov@178.240.152.159) (Ping timeout: 252 seconds)
[18:13:39] *** Joins: thiras (~thiras@user/thiras)
[18:14:53] *** Joins: Fiji (~Fiji@user/fiji)
[18:14:54] *** Quits: Fiji (~Fiji@user/fiji) (Client Quit)
[18:15:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:15:27] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2)
[18:18:01] *** Quits: icy (~icy@user/icy) (Ping timeout: 268 seconds)
[18:18:16] *** Joins: heco (~redrum@user/redrum88)
[18:18:55] *** Joins: icy (~icy@user/icy)
[18:20:12] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:21:42] <pro> What would happen if I was to do some really time-consuming operations on line #9, and in the meantime I get a bunch of newlines on stdout? I am unsure if I will be able to handle a bunch of incoming newlines. Thanks! https://bpa.st/PWZSYELUMQDNXJD4DFTBDY4KKI
[18:21:46] *** Joins: mattil (~mattil@87-92-153-0.rev.dnainternet.fi)
[18:22:51] *** Joins: jess (~jess@libera/staff/jess)
[18:23:57] <bjs> what is up with that paste id
[18:24:15] <bjs> pro: readline() will read up to the first newline
[18:25:20] <pro> and if I get 100 new newlines whilst I am still executing line #9 ?
[18:25:23] <bjs> pro: the lines output by the subprocess will get buffered (because of the PIPE stdout argument to Popen) and then when you iterate over them it'll just iterate over the buffered lines, and any other lines that come later
[18:25:28] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[18:25:35] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-35dc-75d9-9cf8-a9d7.res6.spectrum.com)
[18:25:56] <pro> so I won't lose anything? Meaning this approach is good?
[18:26:05] <bjs> pro: you won't lose anything
[18:26:05] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection timed out)
[18:26:35] <bjs> the absolute worst case is that if the process fills the buffer, the process will be forced to wait before it can write anymore lines
[18:26:40] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[18:27:01] <pro> so if I expect a lot of newlines and I really want to speed things up with line #9 I could there spawn new threads to do the work?
[18:27:42] *** Joins: mcglk (~mcglk@131.191.49.120)
[18:28:21] <bjs> pro: to do what work?
[18:28:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[18:28:36] <pro> process the variable line
[18:29:21] <pro> just spawn new threads and pass them variable line so that they do the work so that my main thread is not blocking (if I expect a lot of newlines)
[18:30:02] <bjs> pro: I mean if you get lots of newlines (or lots of output of any kind) then while your code is running line 9 it is not trying to read that output
[18:30:05] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:30:08] <bjs> but the output has to be saved somewhere
[18:30:30] <bjs> so there's a little bit of space reserved (by the PIPE) to do that, and if that space becomes full then the process has to wait before it can write any more
[18:30:40] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[18:30:51] <pro> so it would be wise to not block my main thread on line #9 ?
[18:30:58] <bjs> pro: if you expect that case then you need to re-write your code to consume all the lines regardless
[18:31:09] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[18:31:17] <pro> my plan was to execute line #9 on new threads
[18:31:28] <bjs> pro: it depends what you want to happen, I mean it might not be a problem if the program outputs faster than you can consume it for it to just wait a bit every now and again
[18:31:58] <bjs> pro: okay then do it,  but the problem isn't really line 9 blocking it's more the poll()
[18:32:37] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:14] <pro> lines #11-17 are here just if the process has an issue, which I do not expect in normal operation, in normal operation I expect endless loop (which blocks on line #6)
[18:33:25] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:6fa4:9aff:db69:8cff)
[18:33:53] <pro> I forgot to remove lines #11-17 from the snap because they are not really needed...
[18:34:01] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[18:34:26] <bjs> pro: well I mean line 9 might slow down the process but if you're processing lines slower than the process is outputting them then there is no way to match the two
[18:34:46] *** Joins: heco (~redrum@user/redrum88)
[18:35:28] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:35:30] <pro> thank you so much for helping me out! I have to go ahead and implement and test if everything works as I think it will work :) I will be back later if I get stuck again!
[18:35:50] <bjs> it's really hard to know if the threads will help at all, or if they do how many threads because it all depends on (1) how much data/how many lines the subprocess is giving you and (2) how quickly it's doing so and (3) how quickly you can consume each line and (4) how many lines you could really consume at once
[18:36:05] <bjs> and you can easily pick answers that make threads really useful, not very useful or even worse than not having them at all
[18:36:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:37:07] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[18:37:13] *** Joins: resmo (~resmo@2a00:d420:9:8a00:dac3:d61e:767c:35b3)
[18:37:23] <pro> thanks bjs !
[18:39:25] *** Quits: benjwadams68 (~benjwadam@107-136-8-58.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 246 seconds)
[18:40:43] <gitesh> list comprehension means i think the ability of the list to understand
[18:42:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 258 seconds)
[18:43:05] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[18:44:19] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[18:44:56] *** Gustavo6046_ is now known as Gustavo6046
[18:45:49] <bjs> gitesh: huh?
[18:46:33] <bjs> gitesh: oh!  no that's not why the word comprehension is used,  in English the word "comprehension" has many meanings and it also means "inclusive". A "comprehensive" list is not one that you can understand but one that lists everything
[18:47:34] <gitesh> bjs: oh that way :)
[18:47:36] <bjs> gitesh: so the word comprehension was used because it's making a list that includes all the things (From some other computation)
[18:47:37] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 248 seconds)
[18:47:38] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 268 seconds)
[18:48:39] <bjs> gitesh: as language becomes more technical the "original" meaning of the word can sometimes get a bit lost sometimes
[18:48:58] <gitesh> bjs: ok
[18:49:42] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:50:58] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[18:51:50] *** Joins: martums (~martums@user/martums)
[18:52:05] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:53:57] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[18:58:44] *** Joins: manti7 (~manti7@176.10.104.94)
[18:59:13] *** Joins: sharperguy__ (~sharpergu@78.47.72.158)
[18:59:40] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:59:46] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:01:27] *** Joins: Kvothe (~weechat@user/elodin)
[19:02:07] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:02:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[19:05:50] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[19:06:01] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[19:06:40] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[19:10:03] *** Quits: tf (~tf@user/tf) (Quit: tf)
[19:10:18] *** Joins: tf (~tf@user/tf)
[19:10:23] *** Joins: death916 (AdiIRC@user/death916)
[19:12:24] *** Joins: Naan (~naan@user/naan)
[19:16:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[19:17:11] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:18:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:18:43] *** Quits: sharperguy__ (~sharpergu@78.47.72.158) (Remote host closed the connection)
[19:18:47] *** Parts: stoiclunchbox (~stoiclunc@user/stoiclunchbox) ()
[19:18:48] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[19:18:57] *** Joins: sharperguy__ (~sharpergu@78.47.72.155)
[19:20:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[19:20:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:23:10] *** Quits: sharperguy__ (~sharpergu@78.47.72.155) (Ping timeout: 240 seconds)
[19:23:34] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:24:03] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:24:09] *** Quits: Skyfire (~pyon@user/pyon) (Remote host closed the connection)
[19:24:27] *** Joins: Skyfire (~pyon@user/pyon)
[19:27:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:28:47] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[19:33:07] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[19:37:57] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[19:37:57] <dontyouloveshort> hi
[19:39:37] *** Joins: kZel (~kZel@90.199.64.48)
[19:40:09] <dontyouloveshort> looking for good was to emulate a mariadb database, of course there is sqlite, but then i found this: https://medium.com/swlh/python-testing-with-a-mock-database-sql-68f676562461       he says he mocks the db, but apparently he only creates test data in a database....how is that mocking?     is sqlite still the best alterantive to check methods with falsified data?
[19:40:37] *** Joins: dolor_avis (~dolor_avi@user-5-173-0-42.play-internet.pl)
[19:40:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[19:41:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:41:36] *** Joins: emika0 (~emika@185.207.249.162)
[19:42:36] *** Quits: emika (~emika@83.136.182.119) (Ping timeout: 250 seconds)
[19:42:37] *** emika0 is now known as emika
[19:43:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[19:45:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:45:15] <gitesh> bjs: what's the difference between position and index?
[19:45:23] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:46:20] <bjs> gitesh: ["a", "b", "c"]  a is first with index 0
[19:47:56] <gitesh> bjs: ok got it
[19:49:29] *** Joins: nomic (~nomic@185.192.69.192)
[19:49:45] *** Joins: m1cr0xf7 (~m1cr0xf7@156.215.161.232)
[19:50:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:51:29] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[19:51:41] *** Joins: wyclif (~wyclif@user/wyclif)
[19:51:53] *** Joins: masoudd (~masoudd@user/masoudd)
[19:53:40] *** Quits: m1cr0xf7 (~m1cr0xf7@156.215.161.232) (Quit: leaving)
[19:54:17] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[19:54:46] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[19:55:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[19:56:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:56:56] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[19:57:09] *** Joins: wyclif (~wyclif@user/wyclif)
[19:57:10] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[19:57:14] *** Joins: nomic (~nomic@185.192.69.192)
[19:58:51] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:00:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[20:00:22] *** Quits: okamis (~okamis@81-235-235-237-no92.tbcn.telia.com) (Ping timeout: 250 seconds)
[20:01:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:01:44] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:02:40] *** Joins: wyclif (~wyclif@user/wyclif)
[20:06:01] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 248 seconds)
[20:06:39] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:6fa4:9aff:db69:8cff) (Quit: Leaving)
[20:07:44] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[20:08:06] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:6fa4:9aff:db69:8cff)
[20:08:30] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:08:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:11:23] *** Joins: dvx (~dvx@185.63.97.64)
[20:13:21] *** Joins: maharshipatel (uid404927@id-404927.tooting.irccloud.com)
[20:13:22] *** Joins: Auron (Auron956@user/auron)
[20:14:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:14:11] *** Quits: dolor_avis (~dolor_avi@user-5-173-0-42.play-internet.pl) (Quit: dolor_avis)
[20:14:54] *** Joins: dolor_avis (~dolor_avi@user-5-173-0-42.play-internet.pl)
[20:16:57] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[20:18:19] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[20:19:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:21:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 252 seconds)
[20:22:28] *** Quits: lsync (~ls@user/deepspace-link) ()
[20:27:40] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[20:30:17] *** Quits: kZel (~kZel@90.199.64.48) ()
[20:30:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:32:11] *** Joins: Vonter (~Vonter@user/vonter)
[20:34:16] *** Joins: jazzy2 (~jaziz@172.58.35.245)
[20:34:31] *** jazzy is now known as Guest6196
[20:34:39] *** jazzy2 is now known as jazzy
[20:35:46] *** Joins: fortuno51 (~fortuno51@78.10.204.254)
[20:35:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:35:52] *** Joins: gusto (~Augustus@109.255.100.54)
[20:36:00] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[20:36:24] *** Joins: portalrat (~portalrat@user/portalrat)
[20:36:28] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[20:37:10] *** Quits: Guest6196 (~jaziz@2600:380:863a:4889:5425:f710:b04a:de02) (Ping timeout: 240 seconds)
[20:37:30] *** Joins: txtsd (~txtsd@user/txtsd)
[20:40:40] *** Quits: trashcatt (~trashcatt@znc.trashcat.xyz) (Quit: ✖_✖)
[20:41:19] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[20:42:17] <de-facto> how do i get all list indices where value is '\xa0' ?
[20:43:31] <de-facto> without np if possible
[20:48:30] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 268 seconds)
[20:48:46] *** Joins: nomic (~nomic@185.192.69.192)
[20:49:26] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:49:34] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:49:57] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:50:50] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[20:51:37] <gcbirzan> [idx for idx, x in l if x == '\xa0']
[20:51:48] <gcbirzan> eh
[20:51:59] <gcbirzan> [idx for idx, x in enumerate(l) if x == '\xa0']
[20:52:54] <gcbirzan> de-facto: that was for you
[20:53:25] <de-facto> perfect thanks it seems it works
[20:53:45] <de-facto> can i filter out those indices from other arrays?
[20:54:03] <de-facto> eg array.remove_by_index([ ... ])
[20:55:09] <gcbirzan> I'm pretty sure remove_by_index is called pop in arrays and lists
[20:55:28] <gcbirzan> You'll want to do something like this: for x in reversed(indices): array.pop(x)
[20:56:55] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:57:09] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Remote host closed the connection)
[20:57:21] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[20:58:17] *** Joins: node1 (~node1@user/node1)
[20:58:34] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[20:58:51] *** Joins: nomic (~nomic@185.192.69.192)
[20:59:49] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:00:38] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[21:00:44] <de-facto> hmm not quite sure how to use that
[21:01:13] <gcbirzan> indices = [idx for idx, x in enumerate(l) if x == '\xa0']
[21:01:28] <gcbirzan> then you just do what I gave you above, replacing array with whatever your array is called
[21:01:46] *** Quits: jazzy (~jaziz@172.58.35.245) (Ping timeout: 252 seconds)
[21:02:42] <kenwoodfox> Im working on a project and long story short, Id like to be able to stream some images over rtmp, id like python to generate the images at about 1 image per minute or so, basicly just serving a static frame and changing the frame once in a while.
[21:02:42] <kenwoodfox> previously i connected ffmpeg to a static png on my fs and streamed it, then had python edit the image and save it back but the approach was rly messy and would crash ffmpeg a lot and there are ffmpeg libraries and what im trying to ask is, has anybody tried to so something simlar and maybe knows or can thing of a better way to go about it?
[21:02:48] <kenwoodfox> I feel like im approaching my problem incorrectly
[21:02:59] *** Joins: manin (~x@185.242.190.95)
[21:04:31] <de-facto> idk it gives me syntax errors
[21:04:44] <gcbirzan> See topic.
[21:05:06] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[21:05:28] <gcbirzan> kenwoodfox: I'm not sure what ffmpeg was doing in that example. You were taking data from a stream and generating images that you'd then edited in python?
[21:05:37] *** Joins: besnn (~besnn@user/besnn)
[21:06:23] *** Joins: inom (~inom@176.59.111.80)
[21:06:55] <gcbirzan> de-facto: i mean, put the code and the error in a paste, as per the topic
[21:07:55] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:08:41] <de-facto> https://bpa.st/7WXQ
[21:09:01] *** Quits: inom (~inom@176.59.111.80) (Remote host closed the connection)
[21:09:39] *** Joins: inom (~inom@176.59.111.80)
[21:10:25] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[21:11:09] *** Quits: inom (~inom@176.59.111.80) (Remote host closed the connection)
[21:11:46] *** Joins: inom (~inom@176.59.111.80)
[21:12:15] *** Joins: bonkinator (~bonkinato@2001:470:69fc:105::173e)
[21:12:21] <kenwoodfox> gcbirzan: Sorry for delay, im outdoors and signal is awful here bleh
[21:14:20] <gcbirzan> de-facto: That mutates the list in place. If you want to make a new one, headers = [x for x in idx, x in heaeders if x not in empty]
[21:14:21] <kenwoodfox> gcbirzan: Sorry I kinda described it poorly, i want to generate frames in python, and then publush them over rtmp to robotstreamer, ffmpeg was how i was doing that before but it was kinda messy
[21:14:27] <gcbirzan> this will go faster if you make empties a set, in this case
[21:14:41] <gcbirzan> kenwoodfox: How are you generating the images?
[21:15:03] <gcbirzan> I mean, I think Pillow is what people use for images nowadays.
[21:15:05] <kenwoodfox> gcbirzan: Using pillow was working pretty well for me
[21:15:10] *** Joins: wks (~wks@2408:8207:18aa:9e80:9945:d7ea:8a6c:b0a5)
[21:15:24] <gcbirzan> But, now I'm confused as to what you are asking :)
[21:15:36] <gcbirzan> Oh. You mean about streaming!
[21:15:37] <gcbirzan> Got it.
[21:16:01] <gcbirzan> There's a ffmpeg-python that I used in the past, worked okay
[21:16:21] <kenwoodfox> gcbirzan: Im looking for like, the whole package, python generated images - > streaming, pillow and ffmpeg was my first attmpt but i dont like how buggy and weird it feels.. i feel like theres a better approach to the problem, maybe one that dosent involve saving an image out and reading it back in?
[21:16:37] <gcbirzan> Yeah, figured it out now, I initially thought you're using ffmpeg to generate the static image.
[21:16:58] <kenwoodfox> gcbirzan: oh yeah lol~ no im doing the image generation all in python
[21:17:26] *** Joins: kn1002 (~kn100@wireguard/tunneler/kn100)
[21:17:50] <kenwoodfox> gcbirzan: im making some software that adapts a robot project ive made into a robotstreamer for robotstreamer.com, i want to make up some frames with text and a static picture frame and that sorta deal, but the robot can only send an image once per 15 minutes or so,
[21:18:16] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 252 seconds)
[21:18:16] *** kn1002 is now known as kn100
[21:18:19] <kenwoodfox> gcbirzan: Ok so, keep pillow and try out ffmpeg-python, i can give that a go
[21:18:21] <gcbirzan> There's a rtpm server in python, aybe that wouldh help/
[21:18:38] <kenwoodfox> gcbirzan: oh that sounds rly helpful, where could i find info about that?
[21:18:38] <gcbirzan> But, you should look at how ffmpeg crashes, we might be able to fix that :)
[21:18:54] <gcbirzan> https://github.com/KnugiHK/rtmplite3
[21:18:58] <gcbirzan> kenwoodfox: just googling randomly here
[21:19:18] <gcbirzan> ffmpeg has been very good to me in the past, if you ignore the syntax of its commands ;)
[21:19:19] <kenwoodfox> gcbirzan: sure thing~ right now it seems to get angry if i change the underlying picture too fast, when pillow opens it, then saves it out ffmpeg crashes and says something like image wrong size or read error or etc
[21:19:45] <kenwoodfox> gcbirzan: Ok no worries~ ill try out the ffmpeg lib and see what errors i get, thamks for the advice!
[21:19:49] <kenwoodfox> you guys rock
[21:20:00] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:41ad:9a3:9397:f078:c2f9) (Remote host closed the connection)
[21:20:03] <gcbirzan> kenwoodfox: Does ffpmeg keep the file open, or what? If not, you could try to switch the file underneath, after you are done
[21:20:13] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[21:20:15] <gcbirzan> kenwoodfox: Like, you write it to foo.png2 and then just rename it.
[21:20:28] <kenwoodfox> gcbirzan: thats a good idea, i think it keeps re-reading the file to construct every frame and if the file is midway changing during that read it crashes
[21:20:34] *** Joins: p-i- (~Ohmu@2403:6200:8870:41ad:71bc:4a39:5fd6:3f32)
[21:20:35] <kenwoodfox> yeah renaming/moving might help solve that
[21:20:42] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Read error: Connection reset by peer)
[21:20:56] <gcbirzan> I forgot how to atomically swap files in python, there should be something on the Internet about it
[21:21:06] <kenwoodfox> ill give it a google~
[21:21:35] <gcbirzan> if it doesn't, andyou need to write the data in the same file, that's way trickier, and might not even be always possible
[21:21:48] <yitz> Atomic or not is managed at the OS sys call level
[21:22:18] <kenwoodfox> ive been using plain ffmpeg for the moment, if i use the pythonffmpeg lib maybe i can pause the transcoding for the moment when i do a .save or something?
[21:22:23] <kenwoodfox> idk this gives me a lot of stuff to research
[21:22:29] <kenwoodfox> thank you! this is exactly what i wanted~
[21:22:35] <kenwoodfox> just wanted to bounce ideas around
[21:22:41] <gcbirzan> yeah, https://docs.python.org/3/library/os.html#os.rename
[21:23:00] <yitz> Please avoid bouncing in the channel
[21:23:18] <gcbirzan> kenwoodfox: I'd suggest you change as few things at a time as possible.
[21:23:21] <yitz> It weakens the springs and results in too many doctor visits.
[21:23:31] <gcbirzan> Just keep ffmpeg if you have it working, try to fix this, then change other tihngs
[21:23:46] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[21:24:11] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[21:27:20] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[21:27:38] *** Joins: raxor2k (~raxor2k@78.158.231.197)
[21:28:01] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[21:28:41] <kenwoodfox> gcbirzan: i dont think its really 'working' for me, im streaming a static png into an rtmp flv stream and it dosent seem happy when i change the frame on fs its streaming, id like a more.. inegrated approach if i can help it
[21:28:45] <de-facto> gcbirzan, hmm gives me still a syntax error
[21:29:08] <gcbirzan> de-facto: Okay.
[21:29:22] <gitesh> I have a hard time understanding this code ------> https://bpa.st/GEMQ
[21:29:24] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-c9e0-8f19-de85-1d2f.res6.spectrum.com)
[21:29:28] <gcbirzan> kenwoodfox: it seems okay to me
[21:29:37] <de-facto> i want to remove the indices listed in empty from the list headers
[21:29:39] <gcbirzan> gitesh: Which part are you having issues with.
[21:29:49] <kenwoodfox> Ok, ill try and keep it then, maybe put it in python-ffmpeg so i can restart it when it crashes
[21:29:51] <gcbirzan> I know what you want to do...
[21:29:55] <gitesh> gcbirzan: no now it feels easy
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:13] <gcbirzan> kenwoodfox: It should never crash
[21:30:22] <bjs> gitesh: so you don't have a hard time understanding it anymore?
[21:30:24] <gitesh> gcbirzan: i think i was looking at that code other way on
[21:30:25] <kenwoodfox> gcbirzan: ... thats what i keep saying though...
[21:30:33] <kenwoodfox> it keeps crashing when pillow updates the image more than a few times
[21:30:40] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0d8f-34df-93a6-03c1.res6.spectrum.com) (Ping timeout: 240 seconds)
[21:30:52] <gcbirzan> kenwoodfox: Did you try with rename/
[21:31:05] <kenwoodfox> gcbirzan: working on that rn~
[21:31:11] <gitesh> bjs: i can understand first reason to return false if the len of words are not same
[21:31:38] *** Joins: cthulchu (~Cthulchu@94.153.37.190)
[21:31:41] *** Joins: complexnumber (~brett@123-243-63-51.tpgi.com.au)
[21:31:46] *** Parts: wks (~wks@2408:8207:18aa:9e80:9945:d7ea:8a6c:b0a5) (Konversation terminated!)
[21:32:17] <gitesh> Can somebody explain me this code? ---- https://bpa.st/GEMQ
[21:32:20] <gitesh> how do you think?
[21:32:41] <bjs> gitesh: well you already understand the first part,  what part don't you understand?
[21:32:53] <bjs> it's hard to know how to explain it if we don't know what part you're not sure about
[21:33:18] <gitesh> bjs: i am not sure about second if statement first part
[21:33:34] <bjs> gitesh: the `if bc == "_" and ...` part?
[21:33:39] <gitesh> bjs: yes
[21:33:54] <bjs> gitesh: well what are you not sure about?
[21:34:00] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[21:34:14] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[21:34:46] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 252 seconds)
[21:34:57] <de-facto> gcbirzan, maybe like this? https://bpa.st/ATBQ
[21:34:59] *** Joins: kn1000 (~kn100@wireguard/tunneler/kn100)
[21:35:33] <gcbirzan> de-facto: sounds about right
[21:36:59] <gitesh> bjs: thinking about that program is hard for me
[21:37:01] <gitesh> idk
[21:37:15] <bjs> gitesh: well yeah thinking about programs is hard
[21:37:41] <gitesh> bjs: ok
[21:37:47] <bjs> gitesh: I guess the first question is,  what is the function doing exactly?
[21:38:21] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[21:38:23] <node1> HI
[21:39:01] *** Quits: dbristow (~dbristow@user/dbristow) (Quit: Leaving)
[21:39:17] <gitesh> bjs: that function is trying to guess if the word has the same length of blanked, then if it is , it is trying to guess if that word is possible to guess in that game
[21:39:53] <node1> So what are you trying to do here?
[21:39:59] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[21:40:19] <gitesh> bjs: it's hard because I'm not playing that game
[21:40:42] <bjs> gitesh: well let's start off obvious but which game
[21:41:09] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:41:19] *** Joins: Caesar-EW (~Caesar-EW@84.213.107.109)
[21:41:28] *** Joins: nomic (~nomic@185.192.69.192)
[21:41:37] <gitesh> bjs: it is hangman game but with that function we are trying to get help of the computer to play that game
[21:41:53] <bjs> gitesh: okay so tell me should possible("wonderwall", "_on__r__ll", "otnqurl") be True or False?
[21:42:00] <bjs> and why
[21:43:27] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[21:45:11] <gitesh> bjs: second because 'w' is not guessed and since it's blank at that position it is possible word
[21:45:42] *** Joins: kn10003 (~kn100@wireguard/tunneler/kn100)
[21:45:46] <gitesh> bjs: i got it
[21:46:29] <gitesh> bjs: if characters in first argument are underscore in second argument and not in third argument, return true
[21:46:46] *** Joins: goldfish_ (~goldfish@user/goldfish)
[21:46:52] *** Quits: kn1000 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 252 seconds)
[21:46:52] *** kn10003 is now known as kn1000
[21:46:57] *** Joins: shangxiao (~davids@124.182.71.141)
[21:46:59] <bjs> gitesh: hmm, don't you mean it should be True?
[21:47:09] <bjs> or did  you mean False?
[21:47:13] <gitesh> bjs: Yes, i mean it True
[21:47:15] <bjs> I didn't understand "second"
[21:47:20] *** Quits: goldfish (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[21:47:24] <bjs> gitesh: is second True or False? I'm confused now :)
[21:47:46] <gitesh> :D
[21:48:46] <gitesh> bjs: wow that is nice thinking about that program to think about :D
[21:49:04] <bjs> gitesh: what about possible("cat", "cot", "caot")  there are no underscores here
[21:49:18] <magga> So I want to scrape a website for some information, but the information doesn't show before you choose an item from a dropdown menu on the site. Anyway to make python do that automatically and thereby fetch the info I want? What is this "action" called?
[21:50:14] <gitesh> bjs: a is not o
[21:51:19] <gitesh> I'm off for dinner
[21:52:07] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[21:52:43] *** Joins: Betal (~Betal@user/betal)
[21:52:47] *** Joins: dbristow (~dbristow@user/dbristow)
[21:54:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:54:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:55:07] <jean-luc> magga: https://realpython.com/modern-web-automation-with-python-and-selenium/
[21:55:09] <aphysically> so I can add typehints, and it does seem to help my editor's 'show definition' keybind, but when SHOULD I use them? When it helps the code be better self-documenting or clarifies things?
[21:55:52] <magga> jean-luc: thanks ill read it now :)
[21:55:59] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[21:56:23] *** Quits: gggp (~textual@60.10.194.48) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:56:30] <aphysically> sometimes I add type hints in the variable name itself, does it make sense to move these to actual type hints and have shorter variable names?
[21:56:47] <jinsun> yes, use them all the time, except when you are trying out short examples in the repl
[21:57:17] *** Joins: Adoi (~Adoi@user/adoi)
[21:59:19] *** Quits: kn1000 (~kn100@wireguard/tunneler/kn100) (Remote host closed the connection)
[22:00:59] *** Joins: kn10003 (~kn100@wireguard/tunneler/kn100)
[22:03:00] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 250 seconds)
[22:03:22] <Adoi> hello, my indent became 32 spaces instantly. I tried to solve it with autopep8 and reindent but nothing worked
[22:03:29] <Adoi> on jupyter lab
[22:03:36] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[22:04:12] <InPhase> Adoi: That's configurable in the JupyterLab settings.
[22:04:24] <InPhase> Adoi: You might have accidentally typoed while in there previously.
[22:04:44] <InPhase> Adoi: Scroll through the settings in the gui until you spot editor and tab settings.
[22:05:01] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:4a9:809:2ed0:f46a) (Quit: Leaving)
[22:05:24] <Adoi> InPhase, I wasnt there before this happened, and I found the settings, but there is only 'tabspace' there
[22:05:36] <Adoi> sorry tabsize
[22:05:44] <p-i-> If I remove `from __future__ import annotations`, I get "NameError: name 'TrioAsyncClient' is not defined" https://bpa.st/5VWA
[22:06:07] <p-i-> So it seems that's the reasoning behind the import.
[22:06:09] <InPhase> Adoi: Look for "indent" as well if that's not adequate.
[22:06:27] <bjs> p-i-: yes that __future__ import means the annotations do not get evaluated
[22:06:34] <bjs> so you won't get runtime errors (like NameError) from them
[22:07:10] <p-i-> I wasn't aware of the problem of a class self-referencing, and I wasn't aware of this as a solution. Even skimming the PEP https://www.python.org/dev/peps/pep-0563/ it's not obvious what's going on.
[22:07:13] <bjs> gitesh: it seems you understand the program just fine
[22:07:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:07:37] *** Quits: Caesar-EW (~Caesar-EW@84.213.107.109) (Ping timeout: 248 seconds)
[22:07:43] <bjs> p-i-: well the annotations are bits of Python code that get executed
[22:07:44] <Adoi> there is no indent there, really
[22:07:58] <bjs> p-i-: try `class C: print(C)` <- you'll get a NameError here too, because C doesn't exist until *after* the class is defined.
[22:08:23] <p-i-> ok and how does annotations "solve" this
[22:08:41] <bjs> p-i-: the __future__ annotations just turns off the "that get executed" part
[22:09:01] <p-i-> I don't follow
[22:09:05] <bjs> when Python sees `def f(a: <expr1>) -> <expr2>` usually it evaluates expr1 and expr2
[22:09:32] <bjs> but with __future__ annotations it doesn't
[22:09:32] <p-i-> so we _defer_ evaluation?
[22:09:35] <bjs> pro: no
[22:09:37] <bjs> oops
[22:09:39] <bjs> p-i-: no, it turns it off
[22:09:51] *** Joins: georgios (~georgios@user/georgios)
[22:09:51] *** Joins: pycurious (~Adium@user/pycurious)
[22:09:59] <p-i-> right, same thing I think. Deferred until it's run.
[22:10:04] <bjs> p-i-: no
[22:10:21] <bjs> it just gets turned off, the annotations just aren't evaluated when you have __future__ annotations
[22:10:35] <p-i-> ok it's starting to click
[22:11:41] <InPhase> Adoi: There's a tab setting under both Notebook and Editor in my version.
[22:13:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:13:20] <InPhase> Adoi: There's also a possibility that if you installed autopep8, something in the configuration of that is messing up your tabs.  I haven't tried using this, but if the problem persists you might want to try uninstalling it to see.
[22:13:38] <p-i-> I'm trying to find out what exactly annotations are. But can't google it.
[22:13:49] <p-i-> bjs: Could you zoom out on annotations?
[22:14:05] <bjs> p-i-: to what level?
[22:14:16] *** Quits: cthulchu (~Cthulchu@94.153.37.190) (Ping timeout: 250 seconds)
[22:14:17] <p-i-> Why do they exist?
[22:14:23] <bjs> p-i-: oh, for typechecking.
[22:14:39] <p-i-> So they're hardcoded into Python since 3.x
[22:14:40] <bjs> p-i-: so I can say `def f(x: int) -> int` then if I go `f("hello")` my editor/linter/typechecker can complain
[22:15:00] *** Quits: python (~python@user/demon) (Remote host closed the connection)
[22:15:22] <bjs> p-i-: as far as Python is concerned, they're just extra-fancy documentation.  Little bits of Python that are "annotated" on various bits of syntax that get saved away as documentation that other tools can read if they want (just like docstrings)
[22:15:23] <p-i-> ok, and that makes sense "annotation" is something that doesn't affect the "document". Just makes something easier to understand.
[22:16:01] <bjs> p-i-: right.  it was perhaps a mistake for them to make annotations bits of Python that Python itself actually saves away, and this __future__ import attempts to fix that by telling Python to not evaluate them
[22:16:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:16:12] <p-i-> So that's how VSCode hilighter is doing it's syntax-checking magic
[22:16:51] <bjs> p-i-: magic?
[22:17:50] <p-i-> Lemme parity check. So if I'm explicitly typing a class definition, the annotations Python feature breaks the code, as the annotation executes referencing the class before it exists.
[22:18:03] <p-i-> And __futures__ annotations addresses this problem?
[22:18:08] <bjs> Yes
[22:18:10] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 240 seconds)
[22:18:18] <p-i-> i.e. That's why it exists
[22:18:48] <bjs> p-i-: that PEP has a Rationale section that explains why it exists
[22:19:02] *** Quits: maharshipatel (uid404927@id-404927.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:19:02] *** Quits: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 250 seconds)
[22:19:30] <bjs> p-i-: and what you are describing is the first point in the rationale, the "forward reference" problem
[22:19:32] <p-i-> I'm looking at some of graingert's code, trying to understand it https://bpa.st/P5UQ
[22:20:27] <p-i-> It looks like (1) he wants, as good practice, to explicitly declare function return type whenever possible. (2) this breaks a self=reference within a class. (3) __futures__ annotate resolves this.
[22:20:30] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[22:20:37] <bjs> p-i-: yes
[22:20:54] *** Joins: georgios (~georgios@user/georgios)
[22:21:05] <p-i-> ok, if I can understand this chunk of graingert's mind this is good for my brain :)
[22:21:12] <bjs> if you delete the __future__ import you'll get a bunch of NameError's (e.g. on TrioBinanceSocketManager)
[22:21:13] <p-i-> Thanks for explaining!
[22:22:23] <aphysically> huh it gives a nameerror when I try to typehint a class in another class's __init__
[22:22:47] <bjs> aphysically: if the other class isn't defined yet you'll get a NameError yeah
[22:23:04] <aphysically> I guess that makes sense, I just didn't expect the language to be processing my type hints at all
[22:23:24] <bjs> aphysically: you can disable it by adding   from __future__ import annotations  to the top of your file (before any other imports)
[22:23:30] <bjs> and then python won't process them anymore
[22:23:51] <p-i-> Is explicitly stating return type wherever possible is a modern "best practice"?
[22:24:37] <bjs> p-i-: if you're using mypy (the most common type checker) then it doesn't typecheck functions that are not annotated
[22:25:03] <aphysically> "It will become the default in Python 3.10."
[22:25:08] <p-i-> graingert: Is there any reason your code doesn't explicitly state return type of get_exchange_info, but it DOES explicitly state return type of create? https://bpa.st/P5UQ#1L18
[22:25:08] <aphysically> so I won't need it for long
[22:25:10] <aphysically> I guess
[22:25:11] <bjs> p-i-: typing was added much later to Python (it's still relatively new) so most programs have no annotations at all.  So the tools generally look for places that *do* have annotations and check those only
[22:25:17] <jinsun> aphysically: no they postponed it
[22:25:20] <aphysically> oh
[22:25:36] <p-i-> (maybe someone else can answer this?)
[22:25:42] <bjs> p-i-: I'm guessing aio_as_trio kind of ruins graingert's type checking
[22:25:43] <Adoi> InPhase, the problem occurred before I installed autopep8
[22:25:44] <bjs> but I don't know for sure
[22:26:03] <aphysically> can you help me understand why python is processing the annotations at all? (and why this change would be considered breaking?)
[22:26:20] <bjs> aphysically: the annotations were not originally for type checking purposes
[22:26:25] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:26:25] <bjs> and were added a long long time ago
[22:26:34] <Adoi> uninstalled it
[22:26:40] <lxer> When I use Enum, like params.SOMETHING , I would like it to return the value, without having to type .value at the end. I know I can do that using __str__ and return the value, but it changes the type to str.  Is there a way to return value, of type Enum ?
[22:27:01] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[22:27:33] <bjs> aphysically: i think most would now consider that original decision a mistake :P
[22:27:50] <Adoi> InPhase, do you mean the 'Tabs' tab in the menu bar, or 'Text Editor Indentation' under 'Settings' tab next to the former?
[22:27:50] <bjs> lxer: is the value a string?
[22:27:55] <aphysically> the decision to postpone or to evaluate?
[22:28:00] <lxer> bjs yes
[22:28:20] <bjs> lxer: e.g. look at IntEnum https://docs.python.org/3/library/enum.html#others
[22:28:22] <p-i-> so `x:int = 20` and `def f(x:int) -> y:float)` are 2 examples of annotations. Are there more?
[22:28:26] <Adoi> I keep changing the indentation one, and nothing changes
[22:28:30] <bjs> aphysically: to evaluate
[22:28:40] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[22:28:54] <bjs> p-i-: `x: int`  (without the =), and I think that might be it.
[22:29:10] <aphysically> it looks like 3.10 does get new annotation notation with | though?
[22:29:19] <bjs> lxer: so you can make a `class MyEnum(str, Enum): x = "hello world")`
[22:29:25] <aphysically> for specifying multiple possible types I guess
[22:29:40] <bjs> aphysically: yes for Union
[22:29:48] *** Joins: lastshell (~lastshell@user/lastshell)
[22:29:55] <p-i-> aphysically: I've just recently seen `x: Any | None` in some code
[22:30:03] <bjs> aphysically: note that `x | y` isn't new Python syntax, and is perfectly consistent with even the 2006 interpretation
[22:30:09] <aphysically> is it valid syntax even before 3.10? p-i-
[22:30:20] <aphysically> you answered it before I asked :D
[22:30:28] <bjs> aphysically: yes that's been valid syntax since 3.0, and the `Any | None` has been valid syntax since a long long long time ago
[22:31:03] <bjs> all the new typing PEPs are doing are defining some custom classes that support these operators and giving them sensible names/meanings that everyone can agree on in a shared `typing` library
[22:31:09] *** Joins: Voyager2Spirit (~Voyager2S@188.54.164.182)
[22:31:33] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[22:31:59] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[22:32:39] <jinsun> it is valid syntax but types did not have __or__ before 3.10
[22:33:15] <p-i-> I just noticed. I add back from __future__ import annotations and now the hilighter flags but the code works.
[22:33:40] <lxer> bjs, I think that adding str to (str, Enum) is not needed, it also accepts strings without mentioning that. I don't see a diference
[22:33:56] <aphysically> a a bit hesitant to import a future instead of rearranging my classes for now, but this one does seem pretty innocuous
[22:34:39] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Shutdown)
[22:34:47] <p-i-> So a more advanced hilighter could actually do 2 passes: first-pass the code collecting symbols, second pass can then see self-references.
[22:35:17] <bjs> aphysically: why are you hesitant?
[22:36:07] <p-i-> aphysically: I suppose squashing false-positives from the hilighter is one reason.
[22:36:08] <bjs> lxer: if you don't see a difference look harder :)
[22:36:18] *** Joins: rsx (~dummy@ppp-188-174-148-251.dynamic.mnet-online.de)
[22:36:33] <aphysically> p-i-: hilighter?
[22:36:38] <bjs> lxer: if you say `class C(str, Enum): x = "whatever"`  then C.x *is* a str with value "whatever"  (it's *also* a C)
[22:37:44] <p-i-> No wait, I got it the wrong way round. If I _HAVE_ "from __future__ import annotations" the hilighter NOW works, AND the code works.
[22:37:50] <p-i-> hilighter is good. PEBCAK
[22:37:56] <lxer> ok, but that is a type string.   C.x.value is of type <Enum>
[22:38:06] <bjs> lxer: what do you mean?
[22:38:11] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:38:14] <bjs> lxer: tell me what you'd *want* to be able to write and what would happen when you do it
[22:38:37] <graingert[m]> ?
[22:38:43] <rjwiii> from __future__ import braces ... :D
[22:38:46] *** Joins: python55 (~python@user/demon)
[22:39:11] *** python55 is now known as python
[22:40:32] <aphysically> p-i-: as in your syntax highlighter was failing?
[22:41:10] <bjs> aphysically: out of interest, are there any __future__ imports that aren't innocuous?  and why would you want to avoid a __future__ import?
[22:41:37] <p-i-> graingert[m]: I'm learning a lot picking through your code.
[22:42:24] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[22:42:35] <aphysically> I'm here to get your opinion, I don't feel informed enough to have any very strong opinions about almost anything in Python
[22:42:48] <aphysically> I just assumed that as soon as I started importing __future__ stuff people would feel like I'm trying to do weird nonstandard stuff :P
[22:43:14] <bjs> aphysically: remember that __future__ stuff isn't "nonstandard" stuff, it's literally standard stuff
[22:43:43] *** Joins: h4zel (~hazel@user/h4zel)
[22:43:51] <aphysically> sure
[22:44:13] *** Quits: rsx (~dummy@ppp-188-174-148-251.dynamic.mnet-online.de) (Quit: rsx)
[22:44:18] <aphysically> I might do both (rearrange AND import the future?)
[22:44:24] <bjs> aphysically: also note that __future__ imports never go away, so your code with the __future__ import will continue to work fine forever
[22:44:24] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[22:44:26] <graingert> bjs, trio_asyncio aio_as_trio shouldn't change the type at all
[22:44:49] <bjs> graingert: then why didn't you annotate any of the types of functions that used aio_as_trio
[22:45:05] <bjs> I mean I was just guessing totally from the fact that every function has annotations _except_ the ones that used aio_as_trio
[22:45:10] <p-i-> I guess it's those __underscores__ that make it look like a hidden/internal component
[22:45:15] <graingert> Probably got lazt
[22:46:42] <lxer> bjs, I mean this https://dpaste.org/dBL6 . it returns a different type. Usually not a big deal, but it makes some tests fail
[22:46:46] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 250 seconds)
[22:47:11] <bjs> lxer: yes some_enum.value is never the same type as the enum itself
[22:47:16] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[22:47:18] <p-i-> lazy as in "writing 100+ lines of insanely complex machinery to help some random floundering engineer on gitter" :)
[22:47:32] <bjs> lxer: but for the one with str C.A is a str
[22:47:33] *** Joins: sudomannn (~sudomann@86.106.143.206)
[22:47:35] <aphysically> ok, some typehinting style questions
[22:47:54] *** Joins: magla (~gelignite@55d457aa.access.ecotel.net)
[22:48:12] <bjs> lxer: you can go C.A[2:3] or C.A.count("X") or really anything because it's just a str
[22:48:16] <lxer> bjs, yes, and I want type enum , that is the issue
[22:48:24] <bjs> lxer: C.A is also type Enum
[22:48:30] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 250 seconds)
[22:48:40] <bjs> lxer: i don't really understand what the issue is, your first class then C.A is both an Enum and a str, and it works happily as both
[22:48:51] *** Joins: zaquest (~notzaques@5.128.210.178)
[22:49:20] <lxer> sorry, made mistake in line 12 and 27, should be:  <enum 'A'> XXX
[22:49:30] <aphysically> I wrote this function which is intended to duplicate ffmpeg's number processing (i.e., to take a *string* and return an internal number in the same manner that ffmpeg does) https://bpa.st/XCPA
[22:49:47] <aphysically> I had named the input argument "numstring" (to indicate it's a string), but does it make more sense to typehint it like I did in the second example and have a shorter name
[22:50:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:50:18] <aphysically> and then, second, I wrote the function to also try to cast the input as a string in order to actually support other number types in Python as well
[22:50:32] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[22:50:40] <aphysically> is there 1) a better way to do this and 2) should I leave the annotation like it is or do I really have to try to union every number type in python
[22:50:56] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:51:09] <aphysically> this is really a style question I guess (both coding and annotation)
[22:51:13] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[22:51:22] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[22:51:58] <gcbirzan>  generally, words are separated by _ in variable names
[22:52:03] <doc> Byteflux: thanks for the asyncio suggestion for my socket connection problem. I got annoyed last night and did some searching and saw it'd be fairly API compatible with the socket way of doing things so I swapped it out and with a bit of extra searching, an hour later I had a setup that noticed its network had disappeared!
[22:52:19] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[22:52:20] <aphysically> I guess there's some other style question too
[22:52:34] <aphysically> like I wrote if match.group(number) but the regex actually ensures that match group always exists if it matched at all
[22:52:38] *** Joins: darksun (~darksun@user/darksun)
[22:52:42] <p-i-> I'm annotating the remaining functions. I notice https://github.com/sammchardy/python-binance/blob/master/binance/client.py#L397 uses -> Dict, but https://stackoverflow.com/a/37087556/435129 footnote says python 3.7+ I can equivalently use `dict` + from __futures__ import annotations, and 3.9 I don't even need the import.
[22:52:48] <p-i-> So is Dict legacy at this point?
[22:52:49] <bjs> lxer: okay but I still don't understand what you want that C.A (with the first class) doesn't already do/give you
[22:53:07] <Byteflux> doc: np, glad it worked out. low level sockets can be a pain
[22:53:10] <aphysically> gcbirzan: this is something I haven't been sure about, is this a widely used convention? is there some treatise on naming conventions in python I can read? (or multiple major 'camps' of naming?)
[22:53:16] <bjs> p-i-: yes, you can use dict directly
[22:53:33] <gcbirzan> aphysically: there's a generic number type you can use, I guess, but that includes complex and scuch
[22:53:43] <bjs> p-i-: and that code could've used dict anyway because it doesn't give it any parameters
[22:53:44] <gcbirzan> aphysically: It is. Comes from pep8 if I'm not wrong
[22:54:01] <aphysically> I've noticed class names usually have capital letters and some such, like I have a class "EncodeSession"
[22:54:08] <doc> Byteflux: indeed! the asyncio version is even much easier to debug. With sockets failure = nothing except it just stops dead, so you end up guessing. Asyncio throws exceptions for things. Made it much easier and nicer to work with.
[22:54:19] <akk> aphysically: https://www.python.org/dev/peps/pep-0008/
[22:54:25] <bjs> aphysically: see https://www.python.org/dev/peps/pep-0008/ for the standard style and conventions
[22:54:35] <aphysically> I wasn't aware PEP8 also had naming conventions
[22:54:42] <aphysically> I thought it was mostly formatting
[22:54:42] <gcbirzan> It does. Towards the bottom
[22:54:51] <bjs> aphysically: it's the largest section
[22:54:51] <aphysically> great, I'll read today
[22:54:52] <bjs> :P
[22:54:55] <aphysically> :D
[22:55:12] <gcbirzan> The if match should still be there, in case you get something unexpected
[22:55:26] <aphysically> gcbirzan: would you consider it wrong to just leave it as "str"?
[22:55:27] <gcbirzan> an explicit error is better than an implicit one from later in the code
[22:55:32] *** Joins: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[22:55:44] <gcbirzan> aphysically: efinitely not, str is a builtin name.
[22:56:05] <aphysically> I mean the type annotation
[22:56:12] <aphysically> (leaving it as just str instead of specifying number types too)
[22:56:34] <gcbirzan> ah
[22:56:38] <gcbirzan> well, I don't know who's calling that
[22:56:39] <aphysically> it is *intended* to be used with mostly strings after all
[22:57:00] <gcbirzan> then leave it as str and that's it
[22:57:07] <aphysically> but I would probably use it on a number without hesitation if it made it unambiguous I'm doing preprocessing for ffmpeg
[22:57:27] <gitesh> `people = [('Snow', 'Jon'), ('Lannister', 'Cersei'), ('Stark', 'Arya'), ('Stark', 'Robb'), ('Lannister', 'Jamie'), ('Targaryen', 'Daenerys'), ('Stark', 'Sansa'), ('Tyrell', 'Margaery'), ('Stark', 'Eddard'), ('Lannister', 'Tyrion'), ('Baratheon', 'Joffrey'), ('Bolton', 'Ramsey'), ('Baelish', 'Peter')]`
[22:57:36] <gitesh> `first_names = [ fname for lname, fname in people ]`
[22:58:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:58:05] <gitesh> how an tuple is bound to TWO variables?
[22:58:34] <gitesh> oh that's tuple unpacking behind the scense :0
[22:58:39] <gcbirzan> an object can be bound to as many names as you want, not sure what you mean
[22:59:05] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[22:59:09] <gitesh> I mean how first tuple is bound to two variable names lname and fname
[22:59:14] *** Quits: fortuno51 (~fortuno51@78.10.204.254) (Remote host closed the connection)
[22:59:28] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[22:59:43] <bjs> gitesh: `first, second = ("hello", "world")`
[22:59:50] <Byteflux> each value from the iterable is being unpacked
[23:00:08] <bjs> gitesh: the for and list part are just noise, this is just standard unpacking in the assignment like you're already used to
[23:00:19] *** Joins: Akuli (~Akuli@82-203-162-147.bb.dnainternet.fi)
[23:00:30] <gcbirzan> aphysically: I'm not sure what you eman, if you expect a string, then decalre it as a string.
[23:00:39] <aphysically> ok
[23:00:47] <gitesh> bjs: ok
[23:00:57] *** Joins: fortuno51 (~fortuno51@78.10.204.254)
[23:02:09] <Byteflux> aphysically: if you support accepting an int and want to make that known you can use Union[str, int]
[23:02:44] *** Quits: fortuno51 (~fortuno51@78.10.204.254) (Remote host closed the connection)
[23:03:06] *** Joins: fortuno51 (~fortuno51@78.10.204.254)
[23:03:14] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:04:02] <aphysically> I settled on this https://bpa.st/LCUA but now I'm going to read the PEP8 naming conventions
[23:04:05] <aphysically> cheers
[23:04:18] <graingert[m]> <p-i-> "I'm annotating the remaining..." <- You can use pyupgrade to switch to the new syntax
[23:04:29] <gcbirzan> aphysically: What about bytes? :)
[23:04:45] <aphysically> the type?
[23:04:58] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 250 seconds)
[23:05:06] <gcbirzan> yeah
[23:05:22] <gcbirzan> soon you'll be adding lists of strings
[23:07:06] <aphysically> I don't think I'll be accepting a bytes string
[23:07:33] *** Joins: rany (~rany@user/rany)
[23:08:24] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[23:08:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:09:18] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 250 seconds)
[23:09:22] *** Joins: Wayno (~James@user/wayno)
[23:10:07] <Wayno> Hi, im noobie
[23:10:07] <Wayno> I would like to understand how I can parser terminal output
[23:10:22] <gitesh> bjs: https://bpa.st/C4UQ           <------ the latter is not working
[23:10:34] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[23:10:34] <bjs> gitesh: "not working" ?
[23:10:44] *** Joins: Jefren3 (~Jefren@70.35.67.134)
[23:10:45] <gitesh> bjs: yes , it's giving error
[23:10:56] <gitesh> bjs: tyepError
[23:11:00] <bjs> gitesh: do you want to me to guess the error or are you going to tell me? :P
[23:11:16] *** Joins: reset (~reset@user/reset)
[23:11:21] <bjs> gitesh: what is "y"?  you have a lambda x, y:
[23:11:22] <gitesh> bjs: can't I unpack like that?
[23:11:40] *** Quits: Jefren2 (~Jefren@70.35.66.227) (Ping timeout: 240 seconds)
[23:11:42] <bjs> gitesh: oh no you cannot unpack in the parameters of a function
[23:11:45] <gitesh> bjs: because zip if going to give me tuple,  I have x and y
[23:12:19] <gitesh> bjs: ok
[23:12:47] <bjs> gitesh: it was considered too confusing, because it'd mean that `lambda(x, y): ...` accepted 1 argument
[23:12:59] <bjs> whereas `def f(x, y): ...` accepted 2
[23:13:04] *** Quits: raxor2k (~raxor2k@78.158.231.197) ()
[23:13:06] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[23:13:14] <p-i-> https://github.com/asottile/pyupgrade/blob/master/README.md#unpacking-list-comprehensions <-- in [fn(x) for x in items] isn't [...] actually different from (...).
[23:13:18] <gitesh> bjs: ok
[23:13:33] <p-i-> So (...) gives a list, not a tuple.
[23:14:10] <bjs> p-i-: (... for ... in ...) does not give a list or tuple
[23:14:49] <p-i-> But [... for ... in ...] gives a list!
[23:14:52] <bjs> p-i-: yes
[23:15:09] <p-i-> So isn't it dangerous to auto-upgrade from [] to ()?
[23:15:17] <bjs> p-i-: no because the value is being immediately unpacked
[23:15:46] <p-i-> ok so (...) is a list comprehension that immediately unpacks to a list?
[23:15:48] <bjs> p-i-: pyupgrade is correct to translate py2 `x, y, z = [... for ... in ...]` into py3 `x, y, z = (... for ... in ...)`
[23:15:58] <bjs> p-i-: no it's not translating *all* [...] into (...)
[23:16:31] <bjs> p-i-: only ones that were immediately unpacked: `x, y, z = ...` is called unpacking
[23:16:48] <aphysically> gcbirzan: I don't think there's a good native way to also work on lists too that's not just using numpy
[23:16:50] <bjs> if the right-hand-side was in python2 a list comprehension then the correct translation in python3 is a generator expression (/generator comprehension, whatever you want to call it)
[23:16:55] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:17:04] *** Quits: Jefren3 (~Jefren@70.35.67.134) (Ping timeout: 252 seconds)
[23:17:08] <aphysically> I think I better just stick to using map with the function if I'm not explicitly using numpy
[23:17:14] <bjs> p-i-: (well really, none of them are correct because Python 2 had weird scoping rules...)
[23:17:42] * p-i- grateful I don't have to fit Py2 into my head
[23:17:54] <bjs> p-i-: but really `x, y, z = [...]` has to build the whole list first
[23:17:59] <bjs> p-i-: whereas `x, y, z = (...)` does not
[23:18:05] <bjs> so it's the same but ever so slightly faster
[23:18:29] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:19:09] *** Joins: Jefren3 (~Jefren@70.35.67.171)
[23:19:43] <p-i-> gottit! nice.
[23:19:52] <bjs> ah --py3-plus, so it's only going to do it for python3. wonder what it does for python2 comprehensions
[23:20:19] <p-i-> https://github.com/asottile/pyupgrade/blob/master/README.md#merge-dicts-using-union-operator-pep-584 <-- {**x, **y} can now be written x | y. w00t. I'm learning a lot from this README.
[23:20:22] *** Joins: upsala (~zcb@185.213.155.160)
[23:20:40] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[23:21:49] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[23:21:53] *** Quits: fortuno51 (~fortuno51@78.10.204.254) (Remote host closed the connection)
[23:22:48] <f8e4> value error, but why?: datetime.datetime.strptime('2021-08-21 18:42:57.145799', '%Y-%m-%dT%H:%M:%S.%f%z')
[23:22:56] <gitesh> bjs: but I can unpack tuple in function invocation
[23:22:56] *** Joins: hanaan (~naan@user/naan)
[23:23:04] <gitesh> bjs: using *
[23:23:10] <bjs> gitesh: yes
[23:23:39] *** Joins: fortuno51 (~fortuno51@78.10.204.254)
[23:23:56] <pragmaticenigma> f8e4, your timestamp contains no offset, the %z is failing
[23:24:31] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[23:24:49] *** Quits: magla (~gelignite@55d457aa.access.ecotel.net) (Quit: Stay safe!)
[23:24:58] <f8e4> pragmaticenigma it is straigt from pg: select now() with added +00 still err: datetime.datetime.strptime('2021-08-21 18:42:57.145799+00', '%Y-%m-%dT%H:%M:%S.%f%z')
[23:25:01] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:25:25] <pragmaticenigma> f8e4, +00 is not a valid offset
[23:25:58] <p-i-> And the last item on the page https://github.com/asottile/pyupgrade/blob/master/README.md#remove-quoted-annotations ... I see quoted-annotations were the old way of addressing the forward-referencing problem NameError that is now fixed by importing annotations from __futures__
[23:26:04] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:890a:9376:978d:c599) (Read error: Connection reset by peer)
[23:26:12] *** Quits: Naan (~naan@user/naan) (Ping timeout: 250 seconds)
[23:26:13] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[23:26:18] *** Joins: yaalon (~yaalon@201.170.112.29.dsl.dyn.telnor.net)
[23:27:22] <pragmaticenigma> f8e4, take a look at the documentation for %z, you will see your mistake: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes
[23:27:23] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[23:28:10] *** Quits: humbertowoody (~humbertow@2806:107e:f:5e47:c445:83d3:813c:9801) (Ping timeout: 240 seconds)
[23:29:39] <f8e4> datetime.datetime.strptime('2021-08-21 18:42:57.145799+0000', '%Y-%m-%dT%H:%M:%S.%f%z')
[23:30:00] <jinsun> f8e4: you have a T between date and time in your format but not in the date string
[23:30:58] *** Quits: pro_z (~pro_z@37.214.32.238) (Ping timeout: 250 seconds)
[23:31:24] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[23:31:50] *** Quits: Wayno (~James@user/wayno) (Ping timeout: 250 seconds)
[23:32:45] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[23:32:48] *** Quits: Voyager2Spirit (~Voyager2S@188.54.164.182) (Remote host closed the connection)
[23:33:34] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[23:34:00] *** Joins: Voyager2Spirit (~Voyager2S@188.54.164.182)
[23:34:57] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Remote host closed the connection)
[23:35:23] <p-i-> https://bpa.st/SYWQ#1L43 <-- If I remove this @wraps line, the code still works. Is this simply a a best-practice for writing ANY decorator?
[23:35:34] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[23:35:46] <bjs> p-i-: try print(kline_socket) with and without the @wraps
[23:37:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:37:36] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[23:38:20] <shangxiao> p-i-: yep @wraps is a super helpful stdlib decorator to ensure function props are forwarded
[23:38:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:38:52] <shangxiao> https://docs.python.org/3/library/functools.html#functools.wraps
[23:39:22] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:39:26] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[23:39:36] *** Quits: Voyager2Spirit (~Voyager2S@188.54.164.182) (Remote host closed the connection)
[23:40:10] <shangxiao> actually https://docs.python.org/3/library/functools.html#functools.update_wrapper clarifies what gets forwarded
[23:41:46] *** Quits: shangxiao (~davids@124.182.71.141) (Quit: WeeChat 3.2)
[23:42:48] *** Joins: driib (~driib@185.195.233.169)
[23:43:04] <aphysically> gcbirzan: apparently there's typing.AnyStr, which I guess I would probably want to import as from typing import AnyStr although I've been avoiding those types of imports for now
[23:43:11] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[23:43:30] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[23:43:46] <gcbirzan> aphysically: I was mostly joking, I think that you should just settle on str, it's not that hard for the caller to give you a string
[23:44:14] *** Joins: Caesar-EW (~Caesar-EW@84.213.107.109)
[23:45:43] *** Quits: yaalon (~yaalon@201.170.112.29.dsl.dyn.telnor.net) (Remote host closed the connection)
[23:45:59] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[23:46:12] *** Joins: Voyager2Spirit (~Voyager2S@188.54.164.182)
[23:46:46] *** Quits: Jefren3 (~Jefren@70.35.67.171) (Ping timeout: 252 seconds)
[23:49:00] <Macuser> my roommate says datacamp is a good website for learning.
[23:49:16] <Macuser> but udemy has free course deals sooo there's always that.
[23:49:43] *** Quits: Voyager2Spirit (~Voyager2S@188.54.164.182) (Client Quit)
[23:50:49] *** Joins: rememberYou (~someone@user/rememberyou)
[23:52:15] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 258 seconds)
[23:52:21] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[23:52:27] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:52:52] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:54:34] *** Joins: yaalon_ (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[23:54:48] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[23:54:50] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[23:55:46] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:56:03] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[23:56:29] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:56:35] *** Quits: analoq (~yashi@p5b241323.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[23:56:54] *** Joins: kosh (~kosh@user/kosh)
[23:57:03] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:57:51] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[23:58:14] *** Quits: yaalon_ (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Client Quit)
[23:59:05] <Payam> Hi, I am doing python GTK. I use glade to make the UI and When I try to load the ui for a dialog window I get the actual dialog window and one empty window. https://bpa.st/KR3Q here is the code
