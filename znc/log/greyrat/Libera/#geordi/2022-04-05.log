[02:44:35] *** Joins: badone (~badone@209.132.189.152)
[02:45:10] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[04:39:19] *** Quits: Cyp_ (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[04:39:43] *** Joins: Cyp_ (~cyp@213.237.84.236)
[06:33:28] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[08:16:04] *** Joins: doug16k_ (~doug16k@172-97-188-4.cpe.distributel.net)
[10:04:55] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:23:05] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[10:45:37] <computerquip> { std::cout << std::chrono::high_resolution_clock::now() }
[10:45:37] <geordi> error: expected ';' before '}' token (fix known)
[10:45:42] <computerquip> std::cout << std::chrono::high_resolution_clock::now()
[10:45:45] <computerquip>  << std::chrono::high_resolution_clock::now()
[10:45:46] <geordi> epoch + 1649139346234752339ns
[10:46:03] <computerquip>  << std::chrono::high_resolution_clock::now().time_since_epoch()
[10:46:04] <geordi> 1649139364092940674 ns
[12:11:58] <TinoDidriksen> geordi --version
[12:11:58] <geordi> GCC 12.0.1 20220404 (experimental)
[13:20:47] *** Quits: ERROH (~mama@user/mama) (Quit: 42)
[19:30:21] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:45:37] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 248 seconds)
[20:07:47] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[21:04:08] <CarloWood> struct C { static constexpr int bits = 8; using indexpair_type = typename std::conditional<bits <= 4, uint8_t, uint16_t>::type; static constexpr indexpair_type next_mask = ~static_cast<indexpair_type>(0) >> bits; static constexpr indexpair_type prev_mask = ~static_cast<indexpair_type>(0) << bits; using index_type = indexpair_type; static index_type next(indexpair_type index_pair) { return index_pair & next_mask; } static 
[21:04:08] <CarloWood> index_type prev(indexpair_type index_pair) { return index_pair >> bits; } static indexpair_type combine(index_type prev, index_type next) { return (prev << bits) | next; } std::array<indexpair_type, number_of_colors> history; C() { indexpair_type last_pair = combine(number_of_colors - 1, 0); for (index_type i = 0; i < history.size(); ++i) { history[i] = combine(prev(last_pair), next(last_pair)); last_pair = history[i]; } } };
[21:04:13] <CarloWood> The very idea
[21:07:45] <CarloWood> << hex << 4051049678932293688
[21:07:46] <geordi> 3838383838383838
[21:16:52] <doug16k_> I hope it is an awful lot of colours to go to so much trouble to pack them like that
[21:17:57] <CarloWood> << (~static_cast<uint8_t>(0) >> 3)
[21:17:58] <geordi> -1
[21:18:01] <CarloWood> wtf
[21:18:17] <CarloWood> << hex << (int)(~static_cast<uint8_t>(0) >> 3)
[21:18:18] <geordi> ffffffff
[21:18:31] <doug16k_> it promotes to int
[21:18:32] <CarloWood> << hex << (int)((~static_cast<uint8_t>(0)) >> 3)
[21:18:33] <geordi> ffffffff
[21:18:43] <doug16k_> promote it to unsigned
[21:18:55] <CarloWood> it is unsigned no?
[21:18:58] <doug16k_> no
[21:19:06] <doug16k_> uint8 fits int. it promotes to int
[21:19:59] <CarloWood> << hex << (int)(static_cast<unsigned in>(~static_cast<uint8_t>(0)) >> 3)
[21:19:59] <geordi> error: expected '>' before 'in'
[21:20:05] <CarloWood> << hex << (int)(static_cast<unsigned int>(~static_cast<uint8_t>(0)) >> 3)
[21:20:06] <geordi> 1fffffff
[21:20:43] <doug16k_> weird eh?
[21:20:51] <CarloWood> It pisses me off
[21:21:10] <CarloWood> << TYPE(int)
[21:21:10] <geordi> error: expected primary-expression before 'int'
[21:21:19] <CarloWood> << TYPE<int>()
[21:21:19] <geordi> error: no matching function for call to 'TYPE<int>()'
[21:21:22] <CarloWood> << TYPE<int>
[21:21:23] <geordi> int
[21:21:32] <doug16k_> << TYPE(~static_cast<uint8_t>(0)) >> 3)
[21:21:33] <geordi> error: Unexpected `)` after `)) >> 3`. Expected balanced code or end of request.
[21:21:34] <CarloWood> << TYPE(42)
[21:21:35] <geordi> prvalue int
[21:21:45] <CarloWood> << TYPE(static_cast<uint8_t>(0))
[21:21:46] <geordi> prvalue unsigned char
[21:21:52] <CarloWood> << TYPE(~static_cast<uint8_t>(0))
[21:21:52] <geordi> prvalue int
[21:22:01] <CarloWood> << ~static_cast<uint8_t>(0)
[21:22:02] <geordi> -1
[21:22:10] <CarloWood> That is ridiculous
[21:22:25] <doug16k_> unsigned short too
[21:23:19] <CarloWood> << ~(unsigned int)static_cast<uint8_t>(0)
[21:23:19] <geordi> 4294967295
[21:23:27] <CarloWood> << hex << ~(unsigned int)static_cast<uint8_t>(0)
[21:23:27] <geordi> ffffffff
[21:23:36] <CarloWood> hmmokay
[21:23:45] <CarloWood> Guess I can't use ~ then.
[21:24:15] <CarloWood> << TYPE(static_cast<uint8_t>(-1))
[21:24:16] <geordi> prvalue unsigned char
[21:24:22] <CarloWood> << static_cast<uint8_t>(-1)
[21:24:23] <geordi> ï¿½
[21:24:27] <CarloWood> << (int)static_cast<uint8_t>(-1)
[21:24:28] <geordi> 255
[21:24:43] <CarloWood> << hex << (int)(static_cast<uint8_t>(-1) >> 3)
[21:24:44] <geordi> 1f
[21:24:47] <doug16k_> I use -(1 << n) to make a mask of low n bits set
[21:24:54] <doug16k_> I use ~-(1 << n) to make a mask of low n bits set
[21:25:39] <doug16k_> << hex << ~-(1 << 10)
[21:25:40] <geordi> 3ff
[21:25:51] <doug16k_> but 1U is safer
[21:26:03] <doug16k_> 31 would be UB if not 1U
[21:26:58] <doug16k_> if you want the opposite, don't ~, just use -
[21:27:31] <doug16k_> opposite being mask off low n bits
[21:27:49] <doug16k_> bitwise and with it as right side
[21:29:50] <doug16k_> don't even try to fight it with saying uint8 etc. use unsigned int as your thing and mask it with & -(1 << 8) if you think it is 8 bit
[21:30:01] <doug16k_> only loads and stores need real types
[21:30:19] <doug16k_> the optimizer will see what you mean and elide the mask
[21:30:55] <doug16k_> use the byte version of the instruction or whatever
[21:31:39] <doug16k_> sorry & ~-(1 << 8) to keep low 8 bits
[21:33:34] <doug16k_> which makes more sense when 8 is a define and you can't just trivially peephole it to 0xff in your head
[21:58:34] <doug16k_> people don't freak out about that promotion a lot because later they store it as 8 bit and nobody really noticed the noise that happened in the upper 24 bits
[22:10:23] *** Quits: doug16k_ (~doug16k@172-97-188-4.cpe.distributel.net) (Remote host closed the connection)
[22:10:23] *** Quits: doug16k (~doug16k@172-97-188-4.cpe.distributel.net) (Remote host closed the connection)
[22:11:02] *** Joins: doug16k (~doug16k@172-97-188-4.cpe.distributel.net)
