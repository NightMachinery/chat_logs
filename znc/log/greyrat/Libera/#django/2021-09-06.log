[00:39:16] *** Joins: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net)
[00:50:13] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[01:01:07] *** Quits: shangxiao (~davids@124.187.193.187) (Quit: WeeChat 3.2.1)
[01:01:45] *** Joins: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[01:04:17] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:04:37] *** Joins: flynn (~mcbloch@user/flynn)
[01:28:09] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:11:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:15:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:29:20] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[02:32:10] *** Quits: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:33:59] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[02:41:54] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[02:46:59] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[03:15:37] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[03:18:37] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[03:25:15] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[03:47:21] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:53:04] *** Quits: gitly (~gitly@85.255.236.235) (Ping timeout: 250 seconds)
[03:55:13] *** Joins: gitly (~gitly@85.255.235.176)
[03:59:57] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[04:00:19] *** Joins: flynn (~mcbloch@user/flynn)
[04:13:26] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:23:44] *** Joins: porquilho (~joao@93.102.77.168.rev.optimus.pt)
[04:34:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:49:05] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[04:49:20] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[04:51:48] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:54:20] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[04:56:59] *** Joins: dez (uid92154@user/dez)
[05:01:36] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-af7b-3a1b-89ee-1477.res6.spectrum.com)
[05:03:12] <wallbroken> FunkyBob: do you still need that i write a requirement documentation analysis?
[05:08:00] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[05:11:58] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Client Quit)
[05:14:20] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:14:25] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:17:49] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[05:18:48] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:24:17] *** Joins: GJdan (~quassel@107-190-25-75.cpe.teksavvy.com)
[05:31:39] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:32:21] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:48:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[06:02:37] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[06:03:10] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Ping timeout: 252 seconds)
[06:04:09] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[06:04:11] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[06:04:39] *** Joins: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu)
[06:08:56] *** Joins: CodenameTim (~CodenameT@212.102.58.178)
[06:11:36] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[06:11:51] *** Quits: Elzington (~Elzington@68.235.43.86) (Quit: Leaving)
[06:13:18] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[06:14:04] *** Quits: CodenameTim (~CodenameT@212.102.58.178) (Ping timeout: 256 seconds)
[06:27:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:29:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:31:19] *** Joins: Matthia__ (~Matthias1@casewireless11.CWRU.Edu)
[06:32:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:32:37] *** Joins: combengue (~Thunderbi@207.191.249.160)
[06:34:00] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[06:34:28] *** Quits: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu) (Ping timeout: 256 seconds)
[06:34:55] *** combengue is now known as cmbengue
[06:37:40] <FunkyBob> wallbroken: _you_ still need it, so - yes
[06:40:59] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:45:44] *** Quits: Matthia__ (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[06:47:39] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[06:49:14] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[06:56:49] *** Joins: dylanchase (~dylanchas@102.129.152.96)
[06:59:38] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[07:02:55] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[07:05:20] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[07:07:09] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Read error: Connection reset by peer)
[07:09:22] *** Quits: dylanchase (~dylanchas@102.129.152.96) (Quit: Leaving)
[07:09:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:17:33] *** Joins: Elzington (~Elzington@68.235.43.102)
[07:20:24] *** Joins: dylanchase (~dylanchas@102.129.152.96)
[07:28:10] *** Quits: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[07:29:23] *** Joins: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net)
[07:34:52] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[07:36:20] *** Joins: dre (~dre@2001:8003:c932:c301:622f:d12a:5082:ae20)
[07:36:56] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[07:55:43] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:05:07] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[08:20:03] *** Parts: porquilho (~joao@93.102.77.168.rev.optimus.pt) ()
[08:41:54] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:59:14] *** Quits: dylanchase (~dylanchas@102.129.152.96) (Ping timeout: 252 seconds)
[09:05:09] *** Joins: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu)
[09:06:11] *** Quits: Elzington (~Elzington@68.235.43.102) (Quit: Leaving)
[09:11:41] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[09:33:16] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 252 seconds)
[09:51:15] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[09:51:34] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[10:11:41] *** Joins: djapo (~archangel@user/djapo)
[10:22:08] *** Quits: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[10:23:26] *** Joins: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net)
[10:51:59] *** Quits: dre (~dre@2001:8003:c932:c301:622f:d12a:5082:ae20) (Quit: Leaving)
[11:09:08] *** Joins: pycode (~pycode@2001:b07:5d28:551:adbf:e6a7:458c:d400)
[11:14:13] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:14:43] *** Joins: dre (~dre@2001:8003:c932:c301:693b:b827:4df9:b3e4)
[11:41:20] <Kim^J> FunkyBob: :D
[11:52:43] *** Quits: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[11:53:45] *** Joins: Elzington (~Elzington@68.235.43.110)
[11:54:00] *** Joins: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net)
[12:13:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:13:38] *** ChanServ sets mode: +v EvilDMP
[12:18:27] *** Quits: pycode (~pycode@2001:b07:5d28:551:adbf:e6a7:458c:d400) (Ping timeout: 245 seconds)
[12:31:14] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:35:50] *** Joins: funksh0n_ (~funksh0n@host86-163-203-147.range86-163.btcentralplus.com)
[12:39:24] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[12:47:08] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[12:47:33] *** Joins: flynn (~mcbloch@user/flynn)
[12:51:14] *** Quits: dre (~dre@2001:8003:c932:c301:693b:b827:4df9:b3e4) (Quit: Leaving)
[13:09:11] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:20:16] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[13:23:18] *** Quits: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[13:24:33] *** Joins: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net)
[13:30:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:31:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:31:46] *** ChanServ sets mode: +v EvilDMP
[14:04:35] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:06:40] *** Joins: pycode (~pycode@2001:b07:5d28:551:ff3a:ecbc:dcbe:bbdd)
[14:06:40] *** Quits: rob4226 (~Thunderbi@136.144.35.39) (Ping timeout: 240 seconds)
[14:07:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:08:06] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[14:09:15] *** Joins: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net)
[14:11:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:11:47] *** ChanServ sets mode: +v EvilDMP
[14:20:04] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:23:07] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-af7b-3a1b-89ee-1477.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:37:52] *** Joins: dez (uid92154@user/dez)
[14:38:44] *** Quits: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net) (Remote host closed the connection)
[14:40:17] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[14:54:41] *** Quits: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[14:56:03] *** Joins: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net)
[15:03:01] *** Joins: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net)
[15:04:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:05:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:05:35] *** ChanServ sets mode: +v EvilDMP
[15:06:28] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:08:50] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[15:13:36] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:19:47] *** Quits: Grauwolf (~grauwolf@user/grauwolf) (Read error: Connection reset by peer)
[15:21:32] *** Joins: Grauwolf (~grauwolf@user/grauwolf)
[15:33:56] *** Quits: pycode (~pycode@2001:b07:5d28:551:ff3a:ecbc:dcbe:bbdd) (Ping timeout: 256 seconds)
[15:36:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[15:37:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:40:44] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[15:46:41] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:47:02] *** Joins: flynn (~mcbloch@user/flynn)
[15:59:54] *** Joins: pycode (~pycode@2001:b07:5d28:551:202e:45ad:12f2:f1a2)
[16:02:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:03:58] *** Joins: mattil (~mattil@airio.portalify.com)
[16:16:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[16:20:39] *** Joins: Atque (~Atque@user/atque)
[16:21:07] *** Joins: lalilulelo (~lalilulel@177.72.97.74)
[16:24:31] <lalilulelo> hello, I am trying to add a values from a QuerySet to a ManyToManyField by calling <containing model instance>.add(*<QuerySet of contained model instances), but in the end, when I try printing my m2m field, I just get <contained model name>.None, what could I be doing wrong here?
[16:25:34] <kezabelle> lalilulelo: dpaste/gist your code?
[16:25:55] *** Quits: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[16:26:22] <lalilulelo> sure, just a sec
[16:27:46] <lalilulelo> @kezabelle, there you go: https://dpaste.org/BM5V
[16:29:01] <lalilulelo> if I print chosen_parts or chosen_services, they are valid QuerySets containing objects of their respective models
[16:29:16] <kezabelle> oh, your problem is probably just your __str__ implementation
[16:30:16] <kezabelle> given a `new_product`, after you .add() to it, if you call `new_product.labor.all()` you should find that it has the chosen parts, yeah?
[16:30:51] <lalilulelo> let me try that, I think you are correct, hold on
[16:31:15] <kezabelle> but in your __str__ you're just calling str(self.material) which won't work
[16:31:43] <kezabelle> str(ManyRelatedManager instance) isn't the resolved queryset, it's just a named representation
[16:32:16] <lalilulelo> yesss, printing new_product.materiel.all() does work! \o/
[16:32:26] <lalilulelo> I'll correct my __str__ implementation
[16:32:33] <kezabelle> so, ignoring the fact you definitely shouldn't do this: def __str__(self): materials = ", ".join(str(material for material in self.material.all()); and then use that in your f-string
[16:32:58] <kezabelle> buuuuuuuuut basically, don't use that str implementation at all. It'll bite you at some point :p
[16:33:06] <lalilulelo> I see lol
[16:33:10] <lalilulelo> I'm just doing for test purposes I guess
[16:33:14] <kezabelle> sure
[16:33:23] <lalilulelo> but the data is present, which is what I was trying to assess
[16:33:28] <kezabelle> leave the str as just the name or some combination of _local_ fields
[16:33:41] <lalilulelo> oh, for sure
[16:34:10] <kezabelle> reason being, if you try and print the related objects, at some point you'll do {{ myobj }} in a template without using prefetch_related in the view ... and now you've got additional queries, possibly in a loop :)
[16:34:35] <lalilulelo> aah, I see lol
[16:35:07] <lalilulelo> well, for now I'm pretty much trying to implement the basic model, but I'll heed your advice lksdjf
[16:35:22] <lalilulelo> you were very helpful, thank you very much \o/
[16:35:40] <kezabelle> np
[16:37:35] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[16:45:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:02:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:02:54] *** ChanServ sets mode: +v EvilDMP
[17:09:10] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 240 seconds)
[17:18:09] *** Joins: thiras (~thiras@user/thiras)
[17:22:50] *** Joins: yanchai (~yanchai@122.52.218.64)
[17:23:17] *** Quits: anorthall (~anorthall@user/anorthall) (Quit: Goodbye!)
[17:26:20] *** Joins: anorthall (~anorthall@user/anorthall)
[17:30:11] *** Quits: yanchai (~yanchai@122.52.218.64) (Ping timeout: 252 seconds)
[17:33:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:34:13] *** Joins: Matthia__ (~Matthias1@caseguest.CWRU.Edu)
[17:34:19] *** Joins: CodenameTim (~CodenameT@212.102.58.180)
[17:35:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[17:37:20] *** Quits: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu) (Ping timeout: 252 seconds)
[17:39:21] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[17:44:28] *** Joins: yanchai (~yanchai@122.52.218.64)
[17:45:32] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Ping timeout: 245 seconds)
[17:50:07] *** Quits: yanchai (~yanchai@122.52.218.64) (Ping timeout: 245 seconds)
[17:50:21] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[17:52:14] *** Quits: Elzington (~Elzington@68.235.43.110) (Quit: Leaving)
[17:54:17] *** Joins: yanchai (~yanchai@122.52.218.64)
[17:56:00] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[17:57:43] *** Joins: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net)
[18:00:14] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Ping timeout: 250 seconds)
[18:05:41] *** Joins: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com)
[18:08:37] *** Quits: Cyberg33k (~Cybergeek@2-104-62-62-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[18:11:51] *** Joins: mattil (~mattil@airio.portalify.com)
[18:15:35] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[18:20:44] *** Quits: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net) (Quit: Leaving...)
[18:31:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:35:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[18:38:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:44:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:44:15] *** ChanServ sets mode: +v EvilDMP
[18:47:24] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[18:53:39] *** Joins: teut (~teut@122.161.21.145)
[18:53:44] <teut> https://www.youtube.com/watch?v=ZpV3tel0xtQ
[18:53:54] <teut> 35:50
[18:54:07] <teut> 35:27 sorry
[18:55:00] <teut> he says about django uses metaclasses to loop over each entry to make a table
[18:55:45] <teut> what does it mean?
[18:56:24] <teut> class m(model.models):...    ;
[18:56:40] <teut> m1 = m(....)  ; m2=m(...)
[18:57:03] <teut> so all these m1, m2 etc 's data will be saved to db?
[19:05:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[19:06:39] *** Quits: yanchai (~yanchai@122.52.218.64) (Ping timeout: 250 seconds)
[19:09:51] *** Joins: DnzAtWrkV2 (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[19:12:37] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Ping timeout: 245 seconds)
[19:17:50] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[19:18:10] *** Joins: flynn (~mcbloch@user/flynn)
[19:20:40] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:26:52] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[19:27:24] *** Quits: lalilulelo (~lalilulel@177.72.97.74) (Ping timeout: 256 seconds)
[19:28:33] *** Quits: DnzAtWrkV2 (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:29:14] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Client Quit)
[19:31:56] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 256 seconds)
[19:32:22] *** Joins: flynn (~mcbloch@user/flynn)
[19:47:36] *** Joins: shangxiao (~davids@124.187.193.187)
[19:55:01] *** Joins: pro_z (~pro_z@37.214.61.236)
[20:03:42] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:34:37] *** Joins: lalilulelo (~lalilulel@177.72.97.74)
[20:38:22] <cusco> hello sirs...having model Book and Rental, where Rental has a ForeignKey(Book)... how can I get the list of Rentals that were the first for each book? (Rental has date fields)
[20:38:58] <cusco> in SQL I could "partition by" or something
[20:39:10] <cusco> but im trying to get my head around django ORM
[20:46:13] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[20:47:24] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:47:39] <esaym153> cusco: when staff gets advanced, I usually just create a view in the db and have the ORM use that instead of fighting with it.
[20:49:15] <shangxiao> cusco: this is a classic question on here :)  (how to get the first/last of a group)
[20:49:59] <shangxiao> cusco: https://github.com/shangxiao/blog/blob/master/articles/selecting-first-or-last-of-a-group.md
[20:51:00] <shangxiao> tldr use distinct on
[20:51:34] <cusco> hey, in the meanwhile I found i can use RawSQL and annotate it.. such as: .annotate(rank=RawSQL("RANK() OVER(ORDER BY score DESC)", [])
[20:51:58] <cusco> but let me read your link shangxiao
[20:53:16] <shangxiao> yes I ought to add the window expression equivalent...
[20:56:36] *** Quits: CodenameTim (~CodenameT@212.102.58.180) (Ping timeout: 250 seconds)
[21:06:05] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:09:40] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 240 seconds)
[21:11:23] <cusco> follow up question, shangxiao perhaps you know how to deal with this: window functions are not allowed in where clause... the rank I annotated can't be used in .filter()
[21:11:59] <cusco> in SQL I would surround the query by another select, such as select * from ( REAL SELECT ) tbl where rank > 2
[21:13:04] <cusco> maybe I just need to use a for, iterate over the queryset
[21:28:52] *** Quits: pycode (~pycode@2001:b07:5d28:551:202e:45ad:12f2:f1a2) (Ping timeout: 245 seconds)
[21:32:32] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:32:52] *** Joins: flynn (~mcbloch@user/flynn)
[21:37:53] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[21:39:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:40:22] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[21:40:53] <shangxiao> cusco: why don't you try the distinct on approach?
[21:42:25] <shangxiao> although Django might not wrap that in the required outer query for filtering
[21:43:29] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:43:40] <shangxiao> the problem is that things you do in the SELECT clause happen after WHERE... so you need to nest the query and filter in the outer query
[21:43:49] *** Joins: flynn (~mcbloch@user/flynn)
[21:44:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:44:36] *** ChanServ sets mode: +v EvilDMP
[21:47:55] *** Quits: Matthia__ (~Matthias1@caseguest.CWRU.Edu) (Remote host closed the connection)
[21:48:24] *** Joins: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu)
[21:55:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:56:19] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Quit: szymon)
[21:59:08] *** Quits: teut (~teut@122.161.21.145) (Quit: Connection closed)
[22:00:05] *** Joins: pycode (~pycode@2001:b07:5d28:551:e16c:6ddf:f566:2c0d)
[22:04:25] *** Joins: soxfoxrox (~soxfoxrox@80.71.131.255.ipv4.parknet.dk)
[22:05:31] <soxfoxrox> I'm using a MultiEmailField exactly like the example at https://docs.djangoproject.com/en/3.2/ref/forms/validation/#form-field-default-cleaning. How can I override the default error message (i.e. if validate_email(email) returns an invalid e-mail).
[22:05:32] <cusco> shangxiao: in your example I did not understand where TruncDate comes from, also I never used "::DATE" postgres is also new to me
[22:07:04] <cusco> but I imagine, that is basically a distinct(key, date) to be able to find the first date for each key
[22:08:44] *** Joins: CodenameTim (~CodenameT@154.21.28.166)
[22:31:09] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[22:36:10] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[22:38:54] *** Quits: soxfoxrox (~soxfoxrox@80.71.131.255.ipv4.parknet.dk) ()
[22:51:22] *** Quits: CodenameTim (~CodenameT@154.21.28.166) (Ping timeout: 245 seconds)
[22:51:47] *** Joins: CodenameTim (~CodenameT@c-98-212-133-245.hsd1.il.comcast.net)
[22:53:31] *** Quits: pycode (~pycode@2001:b07:5d28:551:e16c:6ddf:f566:2c0d) (Ping timeout: 252 seconds)
[22:58:09] *** Joins: cebor (~cebor@user/cebor)
[23:04:12] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[23:07:04] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:07:24] *** Joins: flynn (~mcbloch@user/flynn)
[23:12:07] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[23:15:58] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:18:51] *** Joins: Guddu (~Guddu@190.84.88.92)
[23:22:48] <Guddu> I have CORS_ALLOW_ALL_ORIGINS=True set in my settings.py.
[23:22:56] <Guddu> Who do I then get this error?
[23:22:59] <Guddu> Access to fetch at <URL> from origin <ORIGIN> has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.
[23:23:49] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:26:39] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[23:37:31] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[23:40:08] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:40:28] *** Joins: flynn (~mcbloch@user/flynn)
[23:49:49] *** Joins: dre (~dre@2001:8003:c932:c301:693b:b827:4df9:b3e4)
[23:50:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:52:55] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:53:15] *** Joins: flynn (~mcbloch@user/flynn)
[23:53:34] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
