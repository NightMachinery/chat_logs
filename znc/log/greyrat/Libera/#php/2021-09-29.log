[00:19:20] <fakuve> __adrian: cheers
[00:23:45] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[00:24:29] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[00:35:37] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[00:39:20] *** Quits: lall- (~alek@2001:44c8:448c:d9:6402:b826:5f5e:619f) (Quit: 42)
[00:42:41] *** Quits: pmercado (~pmercado@186.107.55.160) (Ping timeout: 264 seconds)
[00:47:59] *** Joins: Poboy39 (~Poboy@user/poboy)
[00:48:48] *** Quits: Poboy (~Poboy@user/poboy) (Ping timeout: 256 seconds)
[00:53:55] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:54:07] *** Quits: tex (~dee@user/dix) (Quit: Konversation terminated!)
[00:55:34] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[00:57:27] <fakuve> I dont know if thisone goes better in #debian , but I have tried to upgrade from `php7.3` to `php8.0` , so far so good with the interpreter `php -v` issue is that now `apache2` seems to not to be parsing `.php` files
[00:59:41] <fakuve> I have done this so far https://termbin.com/u23t
[01:00:21] <fakuve> (I may have to check in #apache2 )
[01:00:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:03:05] <fakuve> I bet I don't have such a `apache2` module https://termbin.com/ag1n
[01:08:12] <biberu> fakuve: i think the channel is #httpd
[01:08:39] <fakuve> biberu: yep thanks I just made the question there thanks
[01:08:44] <biberu> (can't look at the issue, was just wandering off here, good luck)
[01:19:42] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[01:32:29] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 252 seconds)
[01:33:22] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:41:20] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[01:43:22] <fakuve> I have managed to install `php8.0` for `apache2` on `Debian Buster` https://termbin.com/vh1x2
[01:43:48] <fakuve> I missed three commands the lastones
[01:46:18] *** Joins: stenno (~stenno@user/stenno)
[01:48:04] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:50:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[01:51:11] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[01:53:32] *** Joins: jargon (~jargon@184.101.212.50)
[01:53:46] <jargon> Why does $page2 save as a blank file? https://pastebin.com/5Z73DQMg
[01:54:12] *** Quits: travisghansen (~travisgha@192.74.130.86) (Quit: The Lounge - https://thelounge.github.io)
[01:56:23] <Blondie101010> jargon:  you **need** to redesign your app...  definitely not saying to throw it all away as there's reusable stuff
[01:57:07] *** Joins: travisghansen (~travisgha@192.74.130.86)
[01:57:23] <Blondie101010> it's currently unmaintaintable in its current state...  that's why you have trouble for everything you do
[01:57:50] <Blondie101010> read on SOLID principles
[02:03:00] <jargon> :<
[02:06:34] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[02:07:14] *** Joins: jess (~jess@libera/staff/jess)
[02:07:38] <__adrian> start with +!php first
[02:07:45] <__adrian> !+php first
[02:07:45] <php-bot> your PHP code can be sorted into two categories: code which _performs work_ (processing input, controller logic, database access, error handling, etc.), and code which  _produces output_ (header(), echo, <?= $var ?>, plain ol' <html>, etc.). work goes FIRST. output goes LAST. https://gist.github.com/adrian-enspired/9ed2542a695e2ebe30aa
[02:08:47] *** Quits: bobdobbs (~user@14.137.23.74) (Ping timeout: 252 seconds)
[02:11:37] <Blondie101010> then get rid of the global!
[02:20:02] <jargon> :<
[02:20:23] <jargon> I am doing output as it arrives for debugging purposes! :(
[02:21:23] <jargon> As I have no idea what I am doing in the first place!
[02:25:36] *** Joins: stenno (~stenno@user/stenno)
[02:33:05] *** Joins: pmercado (~pmercado@186.107.55.160)
[02:39:06] <jargon> :'(
[02:39:16] <jargon> T_T
[02:39:32] <jargon> ;_;
[02:39:43] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2.1)
[02:44:26] <jargon> m_m
[02:45:28] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[02:50:59] <Blondie101010> jargon: I actually figured as much, so focus on organizing your code in functions/methods
[02:53:27] <jargon> Blondie101010: I lost my memories due to receiving Electro-Convulsive Therapy against my personal best interests. The real issue was that I had been dosed with Scopolamine. I now have a lot of false memories as a result of ECT.
[02:55:25] <Blondie101010> not uninteresting but totally off-topic
[02:56:05] <jargon> This is why I have such much trouble with my code organization.
[02:56:28] <Blondie101010> just try to improve
[02:57:07] <Blondie101010> remove the global and then move a block of code that follows a specific purpose into a new function
[03:02:37] <jargon> $nen[ 'root' ] is a replacement for $_GLOBAL['DOCUMENT_ROOT']
[03:03:19] <jargon> And $trk_echo2() is a replacement for var_dump()
[03:03:28] <jargon> trk_echo2() *
[03:05:13] <jargon> Also fasttoc() reads a directory of a specific file type.
[03:05:47] <jargon> as an array of extensions.
[03:06:22] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-c90c-649f-fad7-74a9.res6.spectrum.com) (Quit: Leaving.)
[03:09:40] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[03:11:46] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:19:57] *** Quits: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com) (Quit: Leaving.)
[03:25:35] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:26:03] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (Ping timeout: 265 seconds)
[03:27:31] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[03:33:10] <__adrian> jargon: none of that has to do with fixing things  :)
[03:35:03] <jargon> It is code I alredy based on your past advice. :/
[03:35:29] <__adrian> isn't  $nen  a global?
[03:35:41] <jargon> But so is $_SERVEr
[03:35:46] <__adrian> and?
[03:35:57] <__adrian> don't put $_SERVER in your functions either  :)
[03:36:03] <jargon> You told me I couldn't reassign server values.
[03:36:14] <__adrian> point is, substituting one global for another does not solve anything.
[03:36:43] <__adrian> jargon:   function bad() { return $_SERVER["foo"]; }
[03:36:54] <Byteflux> Yeah, using super globals like globals is bad, too.
[03:37:13] <__adrian> jargon:   function good($foo) { return $foo; }  good($_SERVER["foo"]);
[03:37:16] <jargon> $nen[ 'root' ] assigns a different temporary file location.
[03:38:08] <jargon> This way I can run multiple pages on the same host.
[03:38:20] <__adrian> what?
[03:38:29] <jargon> Without forking out more moey that I do not have.
[03:38:32] <jargon> money
[03:40:26] <__adrian> i don't follow what problem you're trying to describe/solve
[03:40:44] <Byteflux> Okay, well you don't need globals to do whatever it is you're trying to do.
[03:41:19] <Byteflux> You keep *thinking* you do but you are entirely missing the point which is that code without globals can *do everything* that code with globals does.
[03:41:30] <__adrian> ^ and better
[03:41:32] <Blondie101010> and $nen['root'] is not getting updated in the code we have so it wouldn't change much except a parameter
[03:41:56] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:46:08] <jargon> https://pastebin.com/7dkk23GN
[03:46:24] <jargon> This is nen.php
[03:47:14] <__adrian> jargon: you need a config file
[03:47:32] <__adrian> that's all
[03:47:50] <jargon> This is ini.php https://pastebin.com/gLzc0hmY
[03:48:01] <Blondie101010> why do you read the whole css file in PHP?
[03:48:33] <Blondie101010> do you know that CSS can be included directly in HTML?
[03:48:39] <jargon> this is go.php https://pastebin.com/tGVmEucN
[03:48:58] <__adrian> jargon: please stop posting files. what are you trying to explain?
[03:49:22] <jargon> I have a glitch in my Firefox that css files don't update properly.
[03:49:46] <__adrian> clear your cache
[03:49:50] <Blondie101010> stop changing them for nothing, and refresh the actuall .css file in your browser next time!
[03:50:58] <jargon> I don't know why I am forced to empty my cache.
[03:51:04] <Blondie101010> you're not
[03:51:10] <Blondie101010> and I told you an easy solution
[03:51:46] <Blondie101010> instead of ctrl-f5 on www.mysite.com/index.php, you do it on www.mysite.com/index.css
[03:51:56] <jargon> __adrian what kind of config file?
[03:52:35] <jargon> I am up to my head from my toes with config files. x_x
[03:53:00] <__adrian> one with the host-specific settings you need
[03:54:27] <Blondie101010> and the function (not include!) that reads it could be called readConfig() and return $config
[03:54:59] <__adrian> $config = readConfig($hostname);
[03:58:50] <jargon> x__X
[04:03:13] <jargon> Blondie101010, it still needs to know where the config file is located tho.
[04:03:56] <__adrian> the config file's in a standard place
[04:04:28] <jargon> @__@ There's a standard place for that??
[04:04:41] <__adrian> just decide
[04:05:00] <Blondie101010> your code, so you make the rules
[04:05:04] <__adrian> put it at ~/jargon.php
[04:06:04] <jargon> But all my pages use a different $nen['root'] value as-is.
[04:06:35] <jargon> sites*
[04:07:23] <jargon> For example my local site versus my remote site generate a different value from each other automatically.
[04:08:08] <jargon> $nen['root'] is for cross-server compatibility.
[04:08:52] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[04:10:10] <__adrian> your current solution does that in code. i.e., if you want a new config, you have to change _code_. configuration should not be in your code; it should be in your config. we know what you're doing with $nen. we're saying it's a bad solution and offering a better, far simpler one.
[04:13:01] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[04:13:11] <__adrian> "automatically" is also not so desirable a thing as you think.
[04:13:30] <__adrian> magic is hard to understand and troubleshoot; and easy to break.
[04:14:49] <jargon> Yes, I used a magic number method.
[04:15:25] <jargon> But I don't know what "methods" are in PHP lingo.
[04:15:38] <Blondie101010> class functions
[04:15:47] <__adrian> a method is a function that belongs to a class/object
[04:15:55] <__adrian> but no one said anything about that
[04:17:25] <jargon> The goal of this project from the past week is to isolate card data from source files into easy to parse text files.
[04:18:27] <jargon> The source files are written in GW-BASIC/QBasic.
[04:18:33] <__adrian> jargon: if you're not going to stay on topic, this conversation isn't going to go anywhere.
[04:18:55] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[04:18:56] <jargon> sorry
[04:22:53] *** Quits: pmercado (~pmercado@186.107.55.160) (Ping timeout: 264 seconds)
[04:23:44] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[04:27:40] <jargon> Blondie101010, __adrian, what are class files and how would they be useful for parsing bulk data?
[04:28:27] <jargon> Or am I completely off the mark?
[04:29:22] <Blondie101010> you're obviously not doing anything in bulk, but I don't know what you're doing
[04:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:31:05] <jargon> I am cycling through 26-some files and capturing matches using regex to specific permutations and then dumping the findings into newly created files.
[04:32:11] <jargon> The list of files is captured using fasttoc();
[04:32:34] <Blondie101010> does "fasttoc" mean "getFileList" in your language?
[04:32:47] <jargon> The list of files is one by one filtered using a magic number regex.
[04:32:58] <jargon> Nope.
[04:33:01] <Blondie101010> then rename it
[04:33:28] <Blondie101010> if your variable names made more sense, the code would be easier to follow
[04:33:34] <jargon> why would I rename fasttoc?
[04:33:49] <jargon> it is fast, and it provides a table of contents.
[04:34:05] <Blondie101010> mmm ok so it has a meaning
[04:34:21] <Blondie101010> and how is that relevant to bulk processing?
[04:34:39] <Blondie101010> buld processing table of contents?
[04:34:45] <Blondie101010> *bulk
[04:35:01] *** Quits: Teraii (~teraii@juraii-s1-1.teraii.net) (Ping timeout: 252 seconds)
[04:35:01] <jargon> trk_echo2() is a remake of var_dump, except has color highlighting.
[04:35:01] *** Joins: vlm (~vlm@user/vlm)
[04:35:09] <jargon> trk is my initials.
[04:35:46] <Blondie101010> sure, though irrelevant
[04:35:47] <jargon> Blondie101010 fasttoc captures the files to be processed.
[04:36:09] <__adrian> classes might be useful
[04:36:13] <jargon> also fasttoc uses an array of file extensions.
[04:36:28] <__adrian> e.g., you've got state that several functions need - this state could be stored in an object.
[04:36:31] <__adrian> BUT
[04:36:57] <__adrian> that's not the first thing to worry about. get things organized first, start understanding about function arguments/return values, etc.
[04:37:09] <__adrian> "class" doesn't mean "automatically good"
[04:37:18] * Blondie101010 nods
[04:39:45] <jargon> You would prolly lose patience had you seen how my code was prior this week.
[04:39:51] <__adrian> no
[04:40:12] <__adrian> the thing i can't spend patience on is when i ask one question and get a completely unrelated question in response  ;)
[04:41:05] <__adrian> not everyone has all the patience, of course, but people here _can be_ quite patient when it feels like it's being productive, and time well-spent.
[04:41:52] <jargon> I had self modifying regex produce *.bas files. (My Windows Defender flipped and claime that I had a PHP-based virus.)
[04:41:54] *** Joins: Teraii (~teraii@juraii-s1-1.teraii.net)
[04:42:27] <Blondie101010> the description matches a good treath pattern
[04:46:34] <jargon> threat
[04:46:59] <Blondie101010> indeed
[04:47:10] <Blondie101010> my fingers are dyslexic
[04:47:13] <jargon> ok.
[04:47:56] <jargon> I had another issue that McAfee kept deleting my projects due loading a mouse driver as machine code direct off disk.,
[04:48:39] <jargon> It saw that the driver was available via PHP in raw form.
[05:00:05] *** Quits: junktext (~junktext@77.247.181.217) (Ping timeout: 264 seconds)
[05:05:51] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2.1)
[05:08:12] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[05:10:42] <jargon> Blondie101010, the mouse driver was one commonly used back in 1997. McAfee just didn't like it being loaded from a secondary file.
[05:11:34] <jargon> Especially not as raw binary instead of hex.
[05:12:13] *** Quits: Poboy39 (~Poboy@user/poboy) (Quit: Client closed)
[05:18:24] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[05:51:47] *** Joins: Rockwood (~Rocky@user/rocky)
[05:54:40] *** Joins: ferdna (~ferdna@user/ferdna)
[06:26:50] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-549f-5490-2130-fd2d.res6.spectrum.com)
[06:27:18] *** Quits: ordos (~ordos@user/ordos) (Ping timeout: 265 seconds)
[06:31:25] <fakuve> Hi guys I got so many sources for the same info and all of them differ
[06:31:39] <fakuve> what are the mandatory arguments for mktime() ?
[06:32:14] <__adrian> Answer: php.net is the authoritative source
[06:32:16] <__adrian> Answer: don't use mktime()
[06:32:26] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 250 seconds)
[06:32:34] <__adrian> https://php.net/datetimeimmutable
[06:32:47] <fakuve> :(
[06:33:10] <fakuve> __adrian: you always come to me telling me to use something different , I already have my head wrapped around it
[06:33:25] <__adrian> ask earlier  ;)
[06:33:39] <fakuve> Earlier as in unix Time , sure :D
[06:33:57] <__adrian> mktime() is almost always the unnecessary, long/hard, easy to make a mistake approach
[06:34:46] <__adrian> but, to your question: do you understand how to read function signatures in the manual?
[06:38:11] <fakuve> __adrian: sry I was reading , mm not really
[06:38:16] <fakuve> you mean in php.net
[06:38:28] <__adrian> yes, php.net is the manual  :)
[06:38:36] <fakuve> I was basically really happy with that documentation , but I was querying it my way
[06:39:05] <fakuve> for instance now I just made a remark `curl -s https://www.tutorialspoint.com/php/php_date_and_time.htm | grep -A 5000 "Next Page" | pandoc -f html -t plain |less`
[06:39:18] <fakuve> any time I need that info I will just copy paste that
[06:39:26] <fakuve> but the issue as I told you the other day
[06:39:38] <fakuve> is that sometimes there are "deprecated" functions in php.net
[06:39:57] <fakuve> Thats why I'm scared on using it
[06:40:05] <__adrian> that's not an issue unless you don't actually read the manual. every deprecated/removed function is marked as such.
[06:40:32] <fakuve> Yep but when I list functions , they appear on those lists
[06:40:32] <__adrian> at the top of the page, there's a note about which version(s) of php the page applies to.
[06:40:40] <__adrian> ...yes?
[06:40:41] <fakuve> aah
[06:40:49] <fakuve> yeah let me show you
[06:40:55] <__adrian> and ...what? you just guess what they do instead of actually reading the man page?
[06:41:19] <fakuve> __adrian: does php actually have manpages for the functions ?
[06:42:08] <__adrian> https://www.php.net/download-docs.php  ← see sidebar
[06:42:34] <fakuve> __adrian: cheeRs
[06:43:27] <__adrian> signatures:    functionname ( arg_type $arg_name = default_value ) : return_type
[06:43:48] <fakuve> woah
[06:43:54] <__adrian> in the case of mktime() you'll also note most of the args have a  ?
[06:44:01] <__adrian> do you know what that is?
[06:44:09] <fakuve> Probably optional ? :D
[06:44:25] <__adrian> when an arg has a default value, that means it's optional
[06:44:32] <__adrian> ? means it's _nullable_.
[06:44:53] <__adrian> i.e., it may or may not be optional, but you can "skip" it and use the default value by passing  null  instead.
[06:46:33] <fakuve> ok I see thanks
[06:46:50] <fakuve> so mainly `pman $functionName`
[06:47:04] <fakuve> is there a way to get lists of functions by category?
[06:47:28] <__adrian> i used pman years and years ago
[06:47:46] <fakuve> This should be the way to go always of course
[06:47:50] <__adrian> i bet there's a --help or -h or call-it-without-arg option
[06:48:17] <__adrian> php.net is easy, authoritative, and quick to share with others  :)
[06:49:06] <fakuve> I like that authoritative smile lol :D
[06:52:53] <Rockwood> fakuve, use official links
[06:53:02] <Rockwood> not others
[06:53:22] <fakuve> alrights
[06:56:08] <Rockwood> i am very bad in function name but that is also very important part of programming
[06:56:50] <fakuve> Rockwood: yep I find that getting to know how to navigate the documentation is one key part anything IT related in general
[06:57:03] <fakuve> I mean I dont know you guys how many screens you need to program
[06:57:27] <fakuve> But I would happily use 5 monitors in order to get myself clear with documentation , commands and so forth
[06:57:59] <__adrian> "> I dont know you guys how many screens you need"  // all of them
[06:59:25] <Rockwood> i use only one screen but i am not a programmer :D
[07:00:15] <fakuve> I mean , I found a way with `tmux` and `dwm` in linux to basically have as many monitors as you want , in the commandline
[07:00:16] <Rockwood> and i can't afford more invest in these stuff bcz i am making 0 money from programming
[07:00:43] <fakuve> Yep and it turns out to be junk in the long term
[07:00:48] <fakuve> having loads of belonings
[07:01:07] <fakuve> but right now I have 2 tablets and one laptop , the tablets are ssh'ed into my laptop
[07:01:16] <fakuve> And they are extended terminal screens
[07:01:30] <fakuve> because I'm not at home I wouldn't use more
[07:02:21] <Rockwood> i don't think i need more screens if i am professional programmer
[07:02:56] <Rockwood> but i am not very sure about it
[07:03:19] <__adrian> if you don't need/want more monitors, then you don't need/want just because you're a programmer
[07:04:17] <fakuve> The key thing in here is IDE's I guess , with autocompletion and other features that help you see the functions on the fly
[07:04:36] <fakuve> I use `vim` and textnotes , cheathseets and this curl sort of technique for the moment
[07:04:40] <__adrian> your IDE can be quite useful, and if it is, then that's great
[07:04:46] <__adrian> but it's not authoritative
[07:05:00] <Rockwood> fakuve, one suggestion don't use auto complete stuff when you are started learning some new
[07:05:30] <Rockwood> write down yourself instead tabs
[07:05:43] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Ping timeout: 252 seconds)
[07:05:53] <Rockwood> you don't in quick
[07:06:04] <fakuve> Yeah , I'm not so much into coding to be fair , I have some friends that they tell me my workflow is not sustainable in the long run . (because projects I guess get complex, with package wrappers and libraries , and frameworks etc...) . But vim and tmux is a non-mouse workflow that is supecomfy
[07:06:24] <fakuve> Rockwood: I will , I like the hardway always hehem
[07:06:26] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[07:07:00] <__adrian> living in the terminal is sustainable if you like it and spend the time to get used to it
[07:07:22] <fakuve> I am supercomfy with loads of terminals , they are quick (snappy feeling) and the look is great , you get no distractions . Plus you can have as many as you want just with ssh
[07:07:41] <Rockwood> really i never used shell programming
[07:08:14] <fakuve> But I have seen some `java` things that I couldn't grasp much , projects with wrappers , libraries and a hell hell of complications , that in that case maybe IDE's would make the difference
[07:08:50] <Rockwood> pick only one thing so see others now if you are beginner :D
[07:09:01] <Rockwood> pick only one thing so don't see others now if you are beginner :D
[07:09:46] <Rockwood> first of make yourself sound in programming instead compare
[07:09:55] <Rockwood> just pick any one
[07:10:34] <fakuve> Well I bet there is some freelancing money going around out there
[07:10:43] <fakuve> So we will give it a go hehem
[07:10:56] <fakuve> I'm shooting home , see ya tomorrow lads!!
[07:11:11] <Rockwood> anyway sometime for my frontend learning
[07:11:15] <Rockwood> cya
[07:11:22] <Rockwood> __adrian, hi how are you sir?
[07:12:03] <__adrian> hi
[07:12:49] <Rockwood> how do you started programming? i means you like programming
[07:13:26] <Rockwood> do you interested always in or just for making money by this?
[07:13:39] <__adrian> made a website for a group i volunteered with
[07:14:10] <__adrian> though i did 3d stuff before that, which could be considered a related thing
[07:14:12] <Rockwood> do you technically graduate? or normal graduate
[07:14:26] <__adrian> i don't know what you mean by that
[07:14:39] <__adrian> my degree is in education (i used to be a teacher)
[07:14:42] <Rockwood> i think in USA graduate is not mandatory in programming job
[07:15:02] <__adrian> good programming jobs care about how good you are, not whether you have adegree
[07:15:28] <Rockwood> [09:14:50] <__adrian> my degree is in education (i used to be a teacher). i can assume and i was correct
[07:15:47] <Rockwood> degree is highly require here
[07:16:08] <Rockwood> i approached and always failed
[07:16:25] <Rockwood> one one wants skills they need only degree
[07:16:34] <Rockwood> no one wants skills they need only degree
[07:17:11] <__adrian> i'm not saying jobs don't require degrees. i'm saying a _good_ job (with a good hiring process) won't kick you out _only_ because you don't have a degree.
[07:17:19] <Rockwood> that why i am jobless and starting own shop i was tired to find that jobs and still the same condition
[07:17:57] <Rockwood> i know programming but no one wants to get me in
[07:19:01] <Rockwood> from where i can collect the professional collect  the experience without opportunity
[07:19:30] <__adrian> i can't speak to the job market in your area
[07:19:46] <Rockwood> and i am very confuse by this kind attitude of companies
[07:20:19] <Rockwood> that why i am thinking about freelance work but still no luck
[07:21:42] *** Joins: guido (~guido@host-79-19-250-34.retail.telecomitalia.it)
[07:23:25] <Rockwood> i am surprise (PHP (core), (Laravel) & CSS3 & JS core & React & Mysql, API MUI css framework, bootstrap css framework) still no value.
[07:24:54] <Rockwood> or i am not capable how to explain these stuff to others
[07:25:00] <Rockwood> anyway
[07:26:23] <Rockwood> i am learning everyday without thinking negative i don't care of result
[07:27:18] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[07:33:13] *** Quits: guido (~guido@host-79-19-250-34.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[07:38:01] *** Joins: guido (~guido@host-79-19-250-34.retail.telecomitalia.it)
[07:40:17] *** Joins: Poboy (~Poboy@user/poboy)
[07:47:13] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-549f-5490-2130-fd2d.res6.spectrum.com) (Quit: Leaving.)
[07:49:22] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-943b-a823-7a0f-3bab.res6.spectrum.com)
[07:50:44] *** Joins: ms49434 (~ms49434@user/ms49434)
[07:57:37] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:21:50] *** Joins: kerunaru (~Jmcb@158.red-79-146-98.dynamicip.rima-tde.net)
[08:48:06] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[08:49:44] *** Quits: grawity (grawity@star.nullroute.eu.org) (Remote host closed the connection)
[08:50:08] *** Joins: grawity (grawity@star.nullroute.eu.org)
[08:51:59] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[08:59:29] *** Quits: grawity (grawity@star.nullroute.eu.org) (Remote host closed the connection)
[08:59:54] *** Joins: grawity (grawity@star.nullroute.eu.org)
[09:07:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[09:07:44] *** Quits: kerunaru (~Jmcb@158.red-79-146-98.dynamicip.rima-tde.net) (Ping timeout: 246 seconds)
[09:16:20] *** Joins: brvadiraj46 (~vadiraj@103.93.197.140)
[09:17:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:28:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:29:46] *** Joins: ArchNoob (~maotora@user/archnoob)
[09:29:46] *** Joins: kerunaru (~Jmcb@158.red-79-146-98.dynamicip.rima-tde.net)
[09:38:39] *** Quits: guido (~guido@host-79-19-250-34.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[09:45:15] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[09:46:46] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 245 seconds)
[10:04:59] *** Joins: tex (~super@user/dix)
[10:05:25] *** Joins: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[10:07:09] *** Quits: tex (~super@user/dix) (Client Quit)
[10:07:27] *** Joins: tex (~super@user/dix)
[10:11:12] *** Joins: samy1028b (~samy1028@068-184-115-031.res.spectrum.com)
[10:11:42] *** Joins: sleetdrop (~sleetdrop@61.135.152.134)
[10:24:47] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[10:24:53] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[10:34:09] *** Joins: Rockwood (~Rocky@user/rocky)
[10:34:42] *** Joins: Rockwood_ (~Rocky@user/rocky)
[10:36:09] *** Joins: Huitzilopochtli (~ronnie@45.64.220.161)
[10:37:34] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[10:39:05] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 264 seconds)
[10:40:59] *** Rockwood_ is now known as Rockwood
[10:42:47] *** Joins: ordos (~ordos@user/ordos)
[10:43:20] *** Quits: brvadiraj46 (~vadiraj@103.93.197.140) (Read error: Connection timed out)
[10:48:26] *** Joins: NakedKing__ (~NakedKing@user/nakedking)
[10:48:35] *** Joins: jdbarton (~tmtowtdi@pool-108-48-30-133.washdc.fios.verizon.net)
[10:51:17] *** Quits: NakedKing_ (~NakedKing@user/nakedking) (Ping timeout: 252 seconds)
[11:04:04] *** Joins: tex_ (~dee@user/dix)
[11:15:49] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[11:24:41] *** Quits: Huitzilopochtli (~ronnie@45.64.220.161) (Ping timeout: 264 seconds)
[11:29:12] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:30:43] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[11:31:04] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[11:33:23] *** Quits: tex (~super@user/dix) (Quit: tex)
[11:33:45] *** Joins: tex (~super@user/dix)
[11:34:46] *** Quits: tex (~super@user/dix) (Client Quit)
[11:35:05] *** Joins: tex (~super@user/dix)
[11:43:35] *** Quits: tex_ (~dee@user/dix) (Quit: Konversation terminated!)
[11:43:40] *** Quits: TheCapitalistPun (~Capitalis@liledevil.xs4all.nl) (Remote host closed the connection)
[11:45:14] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[11:45:16] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[11:46:10] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[11:52:18] *** Quits: ramsey[m] (~ramsey@phpc/ramsey) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Quit: Bridge terminating on SIGTERM)
[11:55:57] *** Joins: ArchNoob (~maotora@user/archnoob)
[11:56:17] *** Joins: ramsey[m] (~ramsey@phpc/ramsey)
[11:58:09] *** Quits: NakedKing__ (~NakedKing@user/nakedking) (Quit: Leaving)
[11:58:32] *** Joins: NakedKing (~NakedKing@user/nakedking)
[12:02:11] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 245 seconds)
[12:07:44] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[12:18:00] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[12:18:00] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[12:25:50] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[12:26:20] *** Quits: sleetdrop (~sleetdrop@61.135.152.134) (Quit: Textual IRC Client: www.textualapp.com)
[12:35:20] *** Joins: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp)
[12:36:08] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[12:40:06] *** Quits: deksar (~deksar@user/deksar) (Ping timeout: 245 seconds)
[12:40:21] *** Joins: fahrradToken (~fahrradTo@212.7.190.34)
[12:40:52] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-943b-a823-7a0f-3bab.res6.spectrum.com) (Quit: Leaving.)
[12:45:05] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[12:47:38] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Remote host closed the connection)
[12:48:05] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[12:48:40] *** Joins: ArchNoob (~maotora@user/archnoob)
[13:00:29] *** Joins: stenno (~stenno@user/stenno)
[13:01:35] *** Joins: brvadiraj46 (~vadiraj@103.93.197.140)
[13:06:11] *** Joins: wyclif (~wyclif@user/wyclif)
[13:11:19] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:15:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:15:55] *** Joins: wyclif (~wyclif@user/wyclif)
[13:20:44] *** Quits: wyclif (~wyclif@user/wyclif) (Client Quit)
[13:27:58] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[13:30:30] *** Joins: Anticom (~Anticom@87.190.49.75)
[13:34:27] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:36:17] *** Quits: brvadiraj46 (~vadiraj@103.93.197.140) (Ping timeout: 252 seconds)
[13:39:10] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-6cd6-56a0-8f5b-f963.res6.spectrum.com)
[13:46:51] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[13:47:22] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[13:51:57] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 250 seconds)
[13:58:12] *** Joins: olle (~olle@p5785bfee.dip0.t-ipconnect.de)
[14:14:38] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[14:19:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[14:19:44] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[14:23:38] *** Joins: deksar (~deksar@user/deksar)
[14:24:31] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:6085:da4b:6a02:2ff5)
[14:24:32] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:6085:da4b:6a02:2ff5) (Client Quit)
[14:25:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:39:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[14:43:09] *** Joins: Junxter (~Junxter@222.95.221.25)
[14:43:57] *** Joins: stenno (~stenno@user/stenno)
[14:47:44] *** Quits: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2.1)
[14:58:26] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:00:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[15:05:13] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[15:06:07] *** Joins: stenno (~stenno@user/stenno)
[15:09:01] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:09:25] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-6cd6-56a0-8f5b-f963.res6.spectrum.com) (Quit: Leaving.)
[15:09:40] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-6cd6-56a0-8f5b-f963.res6.spectrum.com)
[15:10:13] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-6cd6-56a0-8f5b-f963.res6.spectrum.com) (Client Quit)
[15:12:37] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:21:42] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:26:49] *** Joins: Sal` (~Sal@151.28.80.141)
[15:27:42] <Sal`> hi, I got class A that in its constructor instantiates class B. Whats the best way to pass A properties to B ?
[15:28:58] <stenno> Sal`: so does class A extend class B?
[15:29:28] <Sal`> no
[15:30:24] <stenno> _properties_ ?
[15:30:29] <Sal`> A is the App class while B is the Router class
[15:30:29] <stenno> what are you even trying to do
[15:30:33] <stenno> what strange pattern is that
[15:30:45] <Sal`> properties = class variables
[15:30:49] <stenno> ok and you want to dynamically add _properties_ to the B instance?
[15:31:35] <stenno> dunno if there is a straightwforward way apart from just setting the class variables manually
[15:31:37] <Sal`> the A class has variables lile DIR, ROOT, URL etc etc that I would like to pass to B
[15:31:46] <stenno> iif you don't want to use inheritance
[15:31:51] <stenno> right
[15:31:57] *** Joins: guido (~guido@host-79-19-250-34.retail.telecomitalia.it)
[15:32:02] <Sal`> they're two different things
[15:32:07] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (Remote host closed the connection)
[15:32:13] <stenno> just gotta do it manually then
[15:32:43] <Sal`> what about using a third static class that holds all global vars?
[15:32:54] <Sal`> both of the class could use them
[15:32:58] <Sal`> is that bad?
[15:34:07] <stenno> like an interface? sounds good
[15:34:16] <stenno> and then you can derive both A and B from that class
[15:34:17] <Sal`> or I could create a static variable inside A and do a A::var = $this
[15:34:24] <stenno> not sure if thats the preferred pattern in PHP though
[15:34:25] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[15:34:29] <Sal`> so that B can access A::var
[15:35:45] <stenno> those are constants right, like you initiate them once and then don't change them anymore?
[15:36:41] <Sal`> they should be, but I can't get some initiated because they should be the result of an expression
[15:36:58] <Sal`> I was once using define() and it was a lot easier
[15:37:24] <Sal`> so for now I'm using public vars
[15:37:28] *** Quits: kerunaru (~Jmcb@158.red-79-146-98.dynamicip.rima-tde.net) (Ping timeout: 265 seconds)
[15:39:02] <stenno> Sal`: should be 'configuration object pattern'
[15:39:15] *** Joins: pmercado (~pmercado@186.107.55.160)
[15:39:38] *** Joins: kerunaru (~Jmcb@158.red-79-146-98.dynamicip.rima-tde.net)
[15:40:13] <stenno> so you'd program your configuration object as a singleton it seems
[15:40:29] <Sal`> no
[15:40:35] <Sal`> ok, let me be more clear
[15:40:51] <Sal`> I have the App class and the Router class
[15:41:14] <Sal`> the Router class is instantiated inside the App constructor
[15:41:32] <Sal`> the App has public vars that the Router needs to know
[15:41:37] <Sal`> thats it
[15:41:39] <Blondie101010> that's already a bad start
[15:41:44] <Sal`> oh
[15:41:44] *** Joins: DevAntoine (~DevAntoin@pop.92-184-123-156.mobile.abo.orange.fr)
[15:41:48] <Sal`> :)
[15:41:56] <Blondie101010> don't instanciate dependencies in the constructor, inject them
[15:42:19] <Sal`> you mean?
[15:42:42] <Rockwood> stenno, hi
[15:42:58] <Rockwood> after very long time you are here :)
[15:43:04] <Sal`> the router is not a dependency of App
[15:43:15] <Blondie101010> instead of instanciating the router in the constructor, you instanciate it before and pass it as a parameter
[15:43:39] <Blondie101010> but I agree it may not be properly organized on that aspect as well
[15:43:41] <Sal`> thats what i was doing before
[15:44:06] <Blondie101010> does App depend on Router or does Router depend on App?
[15:44:16] *** Quits: kerunaru (~Jmcb@158.red-79-146-98.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[15:44:19] <Sal`> two separate classes
[15:44:25] <stenno> hi Rockwood
[15:44:25] <Sal`> no dependencies
[15:44:34] <Rockwood> howdy bro?
[15:44:48] <stenno> doing ok
[15:44:48] <Blondie101010> no because you instanciate one inside the other, and then say that the Router needs stuff from App
[15:45:00] <Blondie101010> so there is a *bad* cross dependency
[15:45:09] <Sal`> yes, thats my case
[15:45:22] <Blondie101010> that should be fixed
[15:45:23] *** Joins: kerunaru (~Jmcb@158.red-79-146-98.dynamicip.rima-tde.net)
[15:45:55] <Sal`> what is I use a static class that holds all the instants
[15:45:59] <Sal`> is that bad?
[15:46:14] <Blondie101010> it does sound horrible
[15:46:18] <Sal`> hehehe
[15:47:54] <Sal`> qand what if in App i create "public static $var" and init it as "self::$var = $this" insie app constructor?
[15:48:13] <Sal`> in that way I could have App available for Router
[15:48:29] <Blondie101010> that'd be a singleton
[15:48:39] <Sal`> bar?
[15:48:43] <Sal`> bad?
[15:48:51] <Blondie101010> still the problem as globals
[15:49:18] <Sal`> damn
[15:49:20] <Blondie101010> you don't control anything, just a pile of variables available to pick from everywhere in the code
[15:49:32] <Blondie101010> pass the variables that each need
[15:50:06] *** Quits: kerunaru (~Jmcb@158.red-79-146-98.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[15:50:08] <Sal`> then i think I should return to the old define() for these global variables
[15:50:17] <Blondie101010> and avoid cross-dependencies
[15:50:23] *** Quits: deksar (~deksar@user/deksar) (Quit: Going offline, see ya! (www.adiirc.com))
[15:50:34] <Blondie101010> to do that you remove the component that imposes that constraint
[15:50:35] <Sal`> I wanted to pack everything inside the App class, but its seems tricky
[15:53:25] <Sal`> ok thanks for the chat
[16:02:12] *** Quits: Sal` (~Sal@151.28.80.141) (Quit: Leaving)
[16:25:10] *** Quits: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:27:29] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:28:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[16:30:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:35:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[16:41:07] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[16:58:45] *** Joins: DevAntoi_ (~DevAntoin@195.101.183.21)
[17:01:59] *** Quits: DevAntoine (~DevAntoin@pop.92-184-123-156.mobile.abo.orange.fr) (Ping timeout: 252 seconds)
[17:03:41] *** Quits: DevAntoi_ (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[17:04:00] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[17:11:20] *** Quits: bncn (~root@46.101.17.142) (Ping timeout: 252 seconds)
[17:17:23] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 246 seconds)
[17:19:24] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[17:25:29] *** Joins: travisghansen (~travisgha@192.74.130.86)
[17:27:27] *** Joins: WishBoy (~WishBoy@user/wishboy)
[17:49:05] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Remote host closed the connection)
[17:49:32] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[17:56:59] *** Quits: fahrradToken (~fahrradTo@212.7.190.34) (Ping timeout: 252 seconds)
[18:03:44] *** Quits: stenno (~stenno@user/stenno) (Quit: WeeChat 3.2)
[18:05:54] *** Joins: stenno (~stenno@user/stenno)
[18:12:00] *** Joins: xyh (~xyh@113.92.73.17)
[18:14:13] *** Joins: tsukasadt (tsukasadt@ip70-161-54-58.hr.hr.cox.net)
[18:21:55] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[18:22:45] <tsukasadt> I recently inherited an old PHP reporting generation system with a painful flaw: if a user runs a report, they can't access anything else on the system until the report finishes. This occurs even if I set it up to generate the reports by having the page load trigger a secondary process outside of the UI, rather than waiting for the report to finish running before continuing. The user can sign into the system with a different browser and
[18:22:45] <tsukasadt> do a second report, but then that browser is restricted until the report finishes, too. Any ideas on what is happening?
[18:25:21] <AllenJB> Sounds like the session lock to me. When a user makes a request, their session data file on the server is locked and no other requests can access it.
[18:26:07] <tsukasadt> I've never heard of such a thing. Is there a way around it?
[18:26:07] <AllenJB> The solution is to use a background process - cron or long running service, served by a job queue, to perform tasks which take a long time.
[18:27:01] <AllenJB> Related reading: https://ma.ttias.be/php-session-locking-prevent-sessions-blocking-in-requests/
[18:28:01] <tsukasadt> ty, I'll look at what you sent. I thought the triggering the report to generate in the background and notify the user via e-mail when it finished was a server session, but I guess I did that wrong.
[18:28:04] <__adrian> might also be a table lock, if this report is hitting the DB
[18:28:19] <__adrian> see if you can do anything that doesn't involve the DB
[18:30:58] <tsukasadt> No database, just pure API calls to a 3 different REST systems.
[18:31:12] <__adrian> likely session then.
[18:31:24] <tsukasadt> Reading that article, yeah, I'm thinking it's the session thing.
[18:31:42] <tsukasadt> 17 years of working with PHP and I've never encountered this before. xD
[18:31:44] <stenno> ecsen#999
[18:35:20] *** Joins: plantroon (~plantroon@91.236.69.232)
[18:36:10] <plantroon> how do I redirect all of php-fpm's error logs to its fastcgi client? Is it by any chance possible to include slow log as well?
[18:37:59] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:31cf:4d74:8bdf:4bff)
[18:49:16] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 245 seconds)
[19:10:00] *** Joins: chao (~stenno@user/stenno)
[19:11:23] *** stenno is now known as Guest6367
[19:11:23] *** Quits: Guest6367 (~stenno@user/stenno) (Killed (silver.libera.chat (Nickname regained by services)))
[19:11:23] *** chao is now known as stenno
[19:19:25] *** Quits: stenno (~stenno@user/stenno) (Quit: WeeChat 3.2)
[19:19:42] *** Joins: stenno (~stenno@user/stenno)
[19:30:22] *** Quits: Anticom (~Anticom@87.190.49.75) (Quit: Leaving)
[19:38:44] *** Quits: olle (~olle@p5785bfee.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:40:21] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:53:35] *** Quits: guido (~guido@host-79-19-250-34.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[19:55:34] *** Joins: guido (~guido@host-82-57-186-96.retail.telecomitalia.it)
[19:59:40] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:02:29] *** Joins: Poboy (~Poboy@user/poboy)
[20:02:49] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:02:52] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:09:11] *** Joins: chao (~stenno@user/stenno)
[20:10:25] *** Joins: genom (~g@37.214.30.134)
[20:11:04] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[20:12:17] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[20:16:21] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 245 seconds)
[20:21:47] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[20:26:34] *** Joins: magla (~gelignite@55d44db2.access.ecotel.net)
[20:38:45] <stan_man_can> If I want to check if a variable is an instance of a class before doing something with it, whats the best way to approach that?
[20:39:26] <AllenJB> if ($var instanceof ClassName)
[20:39:28] <stan_man_can> do I have to gettype() to check if it's an object and then get_class to see what class it is?
[20:39:34] <stan_man_can> ah kk
[20:41:52] *** Quits: xyh (~xyh@113.92.73.17) (Quit: WeeChat 3.3)
[20:42:23] <stan_man_can> AllenJB is ($variable instanceof User::class) not the right way to go about iT?
[20:42:55] <stan_man_can> User::class returns "App\Models\User" but that if statement returns `syntax error, unexpected token "class", expecting variable or "$" `
[20:43:01] <AllenJB> instanceof is more powerful than gettype() / get_class() because it will return true if the object is an instance of a class that extends ClassName
[20:43:12] <AllenJB> That might work, but is unnecessary - see https://www.php.net/instanceof
[20:44:21] <stan_man_can> I just try to avoid hardcoding paths if possible
[20:44:44] <stan_man_can> oh nevermind i see
[20:44:48] <stan_man_can> thanks
[20:46:01] *** Joins: chao (~stenno@user/stenno)
[20:52:17] *** Joins: jgrim2366 (~jgrim@172.58.145.29)
[20:53:31] *** chao is now known as stenno
[20:55:38] *** Quits: jgrim236 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Ping timeout: 250 seconds)
[20:57:00] *** Joins: jgrim236 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[20:59:02] *** Quits: jgrim2366 (~jgrim@172.58.145.29) (Ping timeout: 252 seconds)
[21:02:37] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (Ping timeout: 265 seconds)
[21:04:31] *** Joins: gamara (~gamara@66-203-186-206.ded.execulink.com)
[21:05:32] <gamara> Hey so I am having a problem querying with PDO a MySQL database https://pastebin.com/AsHtHPV1 I keep getting Database Error: SQLSTATE[42000]: Syntax error or access violation: 1064 I have looked at the docs and similar problems and I am completely stuck
[21:06:19] <stenno> isn't it 'token' and not ':token'
[21:06:24] <stenno> in line 14
[21:06:29] <stenno> the values don't get replaces
[21:06:31] <stenno> -d
[21:07:11] *** Quits: guido (~guido@host-82-57-186-96.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[21:07:41] <da_wunder> try to change `":token" => $playerId,` to `"token" => $playerId,`
[21:07:45] <gamara> I changed it still doesnt work
[21:07:54] <stenno> da_wunder: what i suggested
[21:08:35] <gamara> I tried that
[21:08:43] <gamara> still getting same error
[21:08:50] <stenno> wait
[21:08:52] <da_wunder> stenno: oh, sorry missed your reply
[21:09:03] <stenno> gamara: you missed the second parameter
[21:09:05] <stenno> FETCH_MODE
[21:09:15] <stenno> see in docs https://www.php.net/manual/en/pdo.query.php
[21:09:36] <stenno> public PDO::query(string $query, ?int $fetchMode = PDO::FETCH_INTO, object $object): PDOStatement|false
[21:10:51] <biberu> shouldn't you be calling ::prepare()?
[21:11:13] <stenno> not in this case, or?
[21:11:25] <stenno> ->query should be fine here
[21:12:05] <stenno> unfortunately the docs fail to mention what 'object $object' is
[21:12:08] *** Joins: guido (~guido@host-79-47-252-9.retail.telecomitalia.it)
[21:12:22] <stenno> biberu: but you are right
[21:12:22] <biberu> but he appears to be wanting a parameterized query, and he's binding parameters
[21:12:25] <stenno> yeah
[21:12:27] <stenno> If the SQL contains placeholders, PDO::prepare() and PDOStatement::execute() must be used instead. Alternatively, the SQL can be prepared manually before calling PDO::query(), with the data properly formatted using PDO::quote() if the driver supports it.
[21:12:32] <biberu> ::query() doesn't do that
[21:12:36] <stenno> indeed
[21:12:36] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[21:12:48] <__adrian> don't use quote()
[21:12:54] <__adrian> always prepare()
[21:12:54] <gamara> I thought I set my default fetch mode when I connect
[21:12:56] <gamara> to the database
[21:13:13] <stenno> gamara: its the wrong method anyway
[21:13:15] <gamara> line 35
[21:13:25] <gamara> oh I should be using prepare?
[21:13:27] <stenno> gamara: use prepare and execute instead of query
[21:13:29] <stenno> yes
[21:13:37] <stenno>  the SQL contains placeholders, PDO::prepare() and PDOStatement::execute() must be used instead. Alternatively, the SQL can be prepared manually   │ CoJaBo
[21:13:39] <stenno>                 │                   | before calling PDO::query(), with the data properly formatted using PDO::quote() if the driver supports it.
[21:13:41] <stenno> oops sorry
[21:13:54] <biberu> it cannot be prepared manually
[21:14:08] <stenno> just quoting the php.net docs
[21:14:09] <gamara> you guys are amazing
[21:14:10] <biberu> it's something very specific
[21:14:11] <stenno> so the docs are wrong
[21:14:19] <__adrian> ?
[21:14:47] <stenno> Alternatively, the SQL can be prepared manually before calling PDO::query(), with the data properly formatted using PDO::quote() if the driver supports it.
[21:14:49] <stenno> this statement
[21:14:52] <stenno> is it true or not
[21:15:02] <stenno> or is it 'technically correct'
[21:15:18] <__adrian> oh  "prepared manually" there just means "made ready," not in the prepared statement sense
[21:15:19] <biberu> it won't create a parameterized query / prepared statement
[21:15:28] <__adrian> that is poor phrasing
[21:15:28] <gamara> it works
[21:15:31] <gamara> you guys are awesome
[21:15:31] <biberu> it's a confusing word in that context
[21:15:40] <__adrian> right
[21:15:43] <stenno> i see
[21:15:48] <biberu> would say e.g. formatted, not "prepared"
[21:15:52] <stenno> got it
[21:15:52] <__adrian> yeah
[21:16:00] <gamara> who is going to do the pull request lol
[21:16:04] <__adrian> and in either case, i'd still say "don't."
[21:16:43] <stenno> so its technically correct but bad practise / antipattern
[21:17:22] <__adrian> the manual says you _can_ do it. which is what the manual should say. _I_ am saying, you shouldn't.
[21:17:50] <stenno> sure, ok
[21:17:52] <biberu> stenno: a prepared statement works in a fundamentally different way, it's not just about avoiding injections
[21:19:04] <__adrian> yeah.  preparing a parameterized statement does not quote values and interpolate them into the sql. sql and values are kept separate the whole time. they're not even together in the database.
[21:19:43] <stenno> wait how does that work then
[21:19:49] <stenno> the database has to support it?
[21:19:52] <__adrian> yes
[21:20:03] <__adrian> can't think of one offhand that doesn't
[21:20:19] <biberu> it has performance implications too, but you need to use them correctly
[21:20:25] <__adrian> btw, **ALWAYS** set Pdo::EMULATE_PREPARES=false
[21:20:49] <biberu> stenno: https://en.wikipedia.org/wiki/Prepared_statement
[21:20:53] <__adrian> always. no exceptions, ever.
[21:21:31] <biberu> typical no: repeatedly preparing the same thing in a loop
[21:21:59] <__adrian> ^
[21:22:05] <stenno> don't think i have used PDO directly in php yet
[21:22:11] <stenno> it was always abstracted via ORM
[21:26:15] <stenno> well that can't be true
[21:26:41] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2.1)
[21:26:42] <stenno> but i have to admit that i learned now how prepared statements actually work
[21:26:58] <stenno> always assumed that they do interpolation and sanitizing
[21:27:18] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[21:27:20] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-09a0-c2ee-c241-126a.res6.spectrum.com)
[21:27:31] <biberu> don't use the database for validation
[21:27:55] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[21:28:28] <biberu> invalid data shouldn't be getting anywhere near it
[21:28:41] <stenno> true true
[21:29:08] <Sammitch> if the app dies, then the data clearly was not valid. seems solid to me.
[21:29:42] <stenno> just use @ everywhere
[21:29:48] <stenno> no more errors = program runs perfectly
[21:30:02] <__adrian> <?php @include "main.php";
[21:30:18] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[21:30:43] <stenno> <? php @include $_GET['directory'] . '/main.php'
[21:30:44] * biberu vomits
[21:30:46] <Sammitch> php-fpm 2> /dev/null &
[21:31:16] <stenno> include is so silly even without @
[21:31:31] <Sammitch> 🙈🙉🙊
[21:31:43] <stenno> hehe
[21:33:29] <stenno> include and require were mistakes
[21:35:49] <stenno> `use` helps a bit but not really
[21:35:57] <__adrian> ?
[21:36:06] <__adrian> those don't do the same thing (at all)
[21:36:20] <stenno> the way that include and require just pollute your scope
[21:36:52] <__adrian> that's a bad practice, yes. but it would be the fault of the file you're including, really
[21:36:59] <stenno> yes
[21:37:49] <stenno> is there anything more to it than just 'replace the `include` statement with the contents of this file' ?
[21:38:05] <__adrian> it parses the file
[21:38:28] <__adrian> it's similar to  eval("?>" . file_get_contents($file))
[21:38:35] <stenno> gotcha
[21:38:36] <__adrian> conceptually
[21:39:00] <stenno> i guess there is some more magic regarding require_once
[21:39:21] <__adrian> little bit
[21:44:18] <stenno> i guess you properly encapsulate your files to be included with namespaces?
[21:45:01] <__adrian> what do you mean by "included with namespaces"?  also, understand that namespacing doesn't "encapsulate" anything
[21:46:23] <stenno> what i wanted to ask is, how can you ensure that that an included file will not override existing variables
[21:46:35] <Sammitch> the equivalent of prefixing every global declaration with namespace_
[21:46:45] <__adrian> do it inside a function
[21:47:12] <stenno> i thought about a function but then thought that that function might override an existing function :)
[21:47:28] <__adrian> function might override an existing function  // that doesn't happen (try it)
[21:47:37] * stenno tias
[21:47:49] <stenno> i assume there will be an Error
[21:47:56] <__adrian> good guess
[21:48:38] <stenno> but this does work https://3v4l.org/7HUXC
[21:48:52] <__adrian> those aren't functions
[21:48:54] <stenno> but its not the same than a proper `function` keyword declaration
[21:48:57] <stenno> oh!
[21:49:10] <__adrian> they're anon functions, which are objects (instance of Closure)
[21:49:11] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:49:22] <__adrian> https://php.net/closure
[21:49:31] <stenno> wait instance of closure
[21:49:39] <stenno> but you don't have to use `use`
[21:49:52] <stenno> uses
[21:50:02] <__adrian> as for the "override" behavior, though, that's got nothing to do with the anon funcs themselves. you're reassigning the variable.
[21:50:05] <stenno> use* :D
[21:50:23] <__adrian> yes
[21:50:25] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[21:50:28] <__adrian> (yes, you don't)
[21:50:34] <__adrian> not for the short form
[21:52:03] <stenno> i have it now
[21:52:08] <stenno> thanks for the explanation and the patience
[21:52:18] <__adrian> np
[21:54:13] <Sammitch> you may be thinking of other languages that have first class functions and might raise an error in that case
[21:54:42] <__adrian> well, php will error too, if you try to redefine an actual function
[21:55:18] *** Joins: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be)
[21:55:26] <stenno> so does it happen in big projects that two includes define the same function?
[21:55:54] <stenno> especially regarding 3rd party
[21:56:09] <Sammitch> that's why namespaces are ideally '\
[21:56:11] <__adrian> i'm sure it does. probably more common is accidentially including the same file twice.
[21:56:23] <Sammitch> that's why namespaces are ideally '\vendor_name\library_name' or somesuch
[21:56:25] <__adrian> it _shouldn't_; this is a mistake/poor design
[21:56:31] <__adrian> and yes; namespaces
[21:56:39] <stenno> so here namespaces come into play
[21:56:50] <__adrian> yes
[21:56:54] <__adrian> namespaces are for names
[21:56:55] <stenno> maybe i expressed myself in the wrong way earlier
[21:57:10] <stenno> alright
[21:57:14] <stenno> thanks again
[21:57:23] *** Quits: guido (~guido@host-79-47-252-9.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[21:57:26] <__adrian> "names" as in, classsnames, function names, etc.
[21:57:31] *** Quits: gamara (~gamara@66-203-186-206.ded.execulink.com) (Quit: Client closed)
[21:57:32] <Sammitch> so if I put something like `class Client {}` in my library it doesn't collide with literally every other library on earth :P
[21:57:41] <__adrian> and they don't "contain" so much as "are part of" the name
[21:58:19] *** Joins: bibble (~uid@2001:bc8:2117:100::)
[21:58:49] <Sammitch> just imagine that a namespace is just a string prepended to every class or function name
[21:58:50] <__adrian> and i still think maybe you're under the impression that  use  is an alternative to include/require in some way
[21:59:12] <stenno> __adrian: i know that you have to use include/require before you can use `use`
[21:59:24] <Sammitch> the `use` statement you referred to earlier is just a name alias
[21:59:24] <__adrian> you don't actually
[21:59:25] *** Joins: guido (~guido@host-95-247-93-137.retail.telecomitalia.it)
[21:59:44] <__adrian> `use` creates an alias. the name you're aliasing doesn't actually have to exist at all
[22:00:03] <__adrian> https://3v4l.org/MSeX3
[22:00:32] <stenno> huh oh wo
[22:00:33] <__adrian> now if you wanted to actually make use of a class with that name, then it would have to be loaded in some way.
[22:00:34] <stenno> w
[22:00:45] <Sammitch> the `use` might refer to a class that has not been explicitly included yet, and if you have an autoloader that will tirgger the _autoloader_ to find and include() it
[22:00:55] <__adrian> ^
[22:01:09] <stenno> Sammitch: yes, my statement about require before use was after i read about autoloading
[22:01:10] <Sammitch> *on first use, IIRC. not necessarily when `use` is called
[22:01:22] <__adrian> on first use
[22:01:44] <stenno> i have to sit down on my ass and learn about proper encapsulation and also `use`
[22:01:52] <stenno> in php
[22:02:16] <__adrian> aliasing does not trigger the autoloader. the name appearing in code doesn't trigger it either - only something which actually tries to access the class/definition (like instantiating, accessing a constant or method, etc.)
[22:03:09] <stenno> so its some kind of lazy loading
[22:03:16] <__adrian> autoloading is
[22:03:24] <stenno> yep
[22:03:34] <__adrian> use is just "use this alias in place of that classname"
[22:03:42] <__adrian> it has nothing to do with loading at all.
[22:03:43] <stenno> wait can you do treeshaking with autoloading then?
[22:04:01] <stenno> doesn't seem like it
[22:04:06] <stenno> anyway i am a bit out of my depth here lol
[22:04:14] <stenno> i have to sit on my ass and learn
[22:04:22] <__adrian> https://php.net/class_exists ← see second arg
[22:04:27] <stenno> th
[22:05:20] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-09a0-c2ee-c241-126a.res6.spectrum.com) (Quit: Leaving.)
[22:23:01] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Ping timeout: 245 seconds)
[22:26:33] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[22:26:45] *** Joins: Forza (~Forza@user/forza)
[22:32:09] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[22:40:39] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-ed60-bd95-1e65-63d6.res6.spectrum.com)
[22:43:44] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[22:49:19] *** Joins: Poboy (~Poboy@user/poboy)
[22:57:43] *** Quits: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be) (Quit: delboy1978uk)
[23:00:04] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[23:01:04] *** Quits: magla (~gelignite@55d44db2.access.ecotel.net) (Quit: Stay safe!)
[23:03:29] *** Quits: guido (~guido@host-95-247-93-137.retail.telecomitalia.it) (Quit: WeeChat 3.2.1)
[23:14:17] *** Quits: genom (~g@37.214.30.134) (Remote host closed the connection)
[23:27:54] *** Joins: titus123 (~gsandroid@ip145-141.pris.ca)
[23:29:44] <titus123> Hello, my host does not allow access to change server time.  They gave two option 1. change mysql time each and every time I update the db.  2. use php with this command ie. date_default_timezone_set('America/Los_Angeles'); ... I applied this to the top of my php code and submitted to my db and the auto time stamp remains the same wrong time.
[23:30:54] <stenno> i assume the db will take system time, not php's time
[23:31:01] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (Quit: ZNC 1.8.2 - https://znc.in)
[23:31:36] <stenno> or what do you mean with 'auto time stamp' ?
[23:32:13] <titus123> stenno: datetime is the type used
[23:32:21] <titus123> in mysql stucture
[23:32:23] <Sammitch> store and compute dates/times in UTC. period. timezones are for human eyeballs only.
[23:35:38] <Sammitch> also don't change the default timezone as that's global state and can have fun side-effects, use PHP DateTime and DateTimezone objects.
[23:36:01] <stenno> the CURRENT_* mysql functions will use system timezone
[23:36:11] <stenno> if i read the docs correctly
[23:40:24] <__adrian> titus123: if your host does not allow you to change the system time, they really should stick you with UTC
[23:40:54] <__adrian> IF they're not, then they're idiots/ripoffs, and you should find a new host
[23:41:07] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:41:27] <__adrian> but bottom line is, mysql uses the system time, and you will have garbage if you don't know+cooperate with that
[23:41:34] <__adrian> *timezone
[23:41:47] <Byteflux> I'll never understand why anyone moderately tech savvy pays for shared hosting. It's just paying someone to tell you what you can't do :P
[23:42:10] <Byteflux> get a VPS and do whatever you want
[23:42:24] <Sammitch> paying for someone else to be incompetent on your behalf :P
[23:43:01] <__adrian> > anyone moderately tech savvy   // not the target audience  :)
[23:43:04] *** Joins: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be)
[23:43:45] <__adrian> but in fairness, we're talking about sysadmin-tech-savvy, not strictly programmer (or "coder") tech-savvy
[23:46:25] *** Quits: arieh9 (~51062cbc@user/jewllama) (Quit: Ping timeout (120 seconds))
[23:46:25] *** Quits: arieh (~51062cbc@user/jewllama) (Quit: Ping timeout (120 seconds))
[23:46:27] <titus123> Sammitch: alright... so what is the process I should use to deal with time.  I simply need to log and display when an entry was made and see that in my local time...
[23:47:11] *** Quits: connrs (~connrs@user/connrs) (Quit: ZNC 1.8.2 - https://znc.in)
[23:47:31] *** Joins: connrs (~connrs@user/connrs)
[23:47:32] *** Joins: arieh (~51062cbc@user/jewllama)
[23:47:36] *** Joins: arieh1 (~51062cbc@user/jewllama)
[23:47:51] <titus123> I am able to implement most example codes I find but these time zone issues seem to have so many different perspectives and solutions... need a clear working example and method that is wise to use to manage the date and time that is in the db or displayed.
[23:49:09] <Byteflux> You can take whatever approach you want. As long as you know what timezone the date is stored in and what timezone you want to display it in, you can figure out how to do the conversion.
[23:49:27] <Byteflux> The advice offered here is about using a single timezone for storage, ideally UTC.
[23:50:00] <Byteflux> You don't want different apps/systems storing data in different timezones, it's a mess.
[23:54:11] <Byteflux> If you can't change the system time, you could change your DATETIME column type to a TIMESTAMP type.
[23:54:21] <biberu> careful with that too, consider e.g. future dates
[23:54:37] <Byteflux> MySQL will convert system times to UTC when storing in a TIMESTAMP column.
[23:54:58] <__adrian> many systems store unixtime to make up for this  :)
[23:55:44] <biberu> converting a future date at my location now mat not yield the same result later
[23:57:56] <Byteflux> Since you said "auto time stamp" I assume this means the table was created with "`col_name` DATETIME DEFAULT CURRENT_TIMESTAMP" so you could just change 'DATETIME' -> 'TIMESTAMP'
[23:58:31] <Byteflux> I don't know if 'DEFAULT UTC_TIMESTAMP' works, I doubt it.
[23:59:05] <stenno> current_timestamp() also takes from system time according to the docs
[23:59:33] <Byteflux> stenno: Right but a TIMESTAMP column is basically the same as a DATETIME column except it converts from system time to UTC
