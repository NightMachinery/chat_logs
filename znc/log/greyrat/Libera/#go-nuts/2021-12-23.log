[00:01:07] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:02:13] <b0nn> mikoto-chan: FWIW even if you don't cache your prime results (you should though) you don't have to iterate over every possible factor, you only have to deal with the range 2...sqrt(n)
[00:10:38] *** Quits: moog (~moog@107.126.53.224) (Ping timeout: 260 seconds)
[00:13:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:19:48] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d948-d94a-0c99-3324.res6.spectrum.com)
[00:22:18] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[00:24:00] *** Joins: moog (~moog@107.126.53.157)
[00:28:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[00:30:44] *** Joins: fikran (~fikran@user/fikran)
[00:35:21] *** Quits: tewrdh^ (~tewrdh@64.253.22.77) (Remote host closed the connection)
[00:36:49] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[00:37:57] *** Pokey is now known as ahorner
[00:38:02] *** ahorner is now known as Pokey
[00:38:17] *** Joins: amk (~amk@109.255.169.126)
[00:44:54] <dostoyevsky2> Is there an easy way to convert a Color to a []byte?  So I could do something like `[]byte(img.At(x, y))`
[00:47:38] <dostoyevsky2> Well, actually I want to convert (r, g, b, a uint32) to a []byte() so img.At(x,y).RGBA()
[00:48:26] <b0nn> the return signature is 4 uint32s
[00:49:27] *** Joins: bluedust_ (~bluedust@103.148.21.37)
[00:49:36] <dostoyevsky2> yeah.. can I somehow put those 4 uints into a bytes.Buffer and then get the bytes?
[00:49:56] <b0nn> Maybe look at https://pkg.go.dev/encoding/binary
[00:51:51] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d948-d94a-0c99-3324.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:52:39] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d948-d94a-0c99-3324.res6.spectrum.com)
[00:52:53] *** Quits: bluedust (~bluedust@185.195.232.159) (Ping timeout: 256 seconds)
[00:53:27] <b0nn> it'll be a loop, adding each channel to the []byte
[00:55:01] <dostoyevsky2> bb := make([]byte, 4*4); binary.LittleEndian.PutUint32(bb, r) ; ...
[00:55:20] *** Quits: UsbSick (~UsbSick@2600:6c48:757f:e654:a863:efc5:fd1:1de4) (Remote host closed the connection)
[00:55:30] <b0nn> hmm, unless you did r,g,b,a := img.At(x,y).RGBA(); by := []byte{ convert(r), ...}
[00:58:03] *** Joins: Praise (~Fat@user/praise)
[01:00:07] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:10:08] *** Joins: wielding (~wielding@user/wielding)
[01:13:45] *** Parts: steerpike (~echelon@gateway/tor-sasl/steerpike) ()
[01:14:36] <fizzie> You can pass all the multiple return values to a function at once, so you can do something along the lines of https://go.dev/play/p/nmSnUf2Cjea for example.
[01:14:58] <fizzie> Another alternative is https://go.dev/play/p/2TQuZiV563j if you don't even want to write the conversion function.
[01:17:41] <fizzie> Oh, you did want all 4*4 bytes out, not just regular 4-byte RGBA? Skimmed the discussion a bit too quickly, I guess.
[01:19:35] <fizzie> It'd be a weird format, though -- despite the values from color.Color.RGBA() being uint32's, their actual value ranges are between 0 and 0xffff, so storing them in a 4*4 byte chunk would be kind of wasteful.
[01:21:19] <b0nn> https://twitter.com/tesseralis/status/1473609482924015617
[01:21:33] <b0nn> a digital image is just an array of pixels.
[01:21:33] <b0nn> a digital video is an array of images.
[01:21:34] <b0nn> a video is just a pixel cube
[01:25:21] *** Joins: remote (~self@user/hackers)
[01:26:21] <eric_hill> only if the width and height are equal to the length of the video.  Otherwise it's a pixel rectangle.
[01:28:17] <b0nn> it's a very short video ok :)
[01:32:42] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[01:41:20] <fizzie> A rectangle is a 2D shape. You must mean a rectangular cuboid. (I think its friends just call it a box.)
[01:43:03] <fizzie> (Trying to imagine what it looks like if you rotate the cube various ways.)
[01:45:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d948-d94a-0c99-3324.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:48:03] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[01:54:49] <Tach> am I right that I can't use internal/app/myapp/whatever with the following layout ? https://github.com/suquant/wgrest
[02:08:13] <b0nn> Tach: it depends - are you trying to use whatever inside wgrest, or, are you trying to use wgrest inside whatever (the former is a no, the latter is a yes)
[02:08:48] <b0nn> although the former is possible if you have an app that uses both
[02:11:04] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:11:05] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d948-d94a-0c99-3324.res6.spectrum.com)
[02:14:45] <Tach> b0nn I ment the first one... damn so someone messedup ?
[02:15:31] <b0nn> Honestly I think you'll help yourself, and anyone wanting to help, with a few more (concrete) details
[02:18:44] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:a1e1:617f:5617:eda3)
[02:18:52] *** Joins: findiggl` (~user@2601:601:9f00:5c60:ea51:63ee:d408:b6e8)
[02:19:12] <Tach> b0nn Sure! I need to use my own version of golang.zx2c4.com/wireguard/wgctrl/wgtypes in it which is not possible
[02:20:17] *** Quits: findiggle (~user@2601:601:9f00:5c60:dfe7:ec34:7bba:73c5) (Ping timeout: 240 seconds)
[02:25:50] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: quitter)
[02:26:15] *** Quits: bluedust_ (~bluedust@103.148.21.37) (Remote host closed the connection)
[02:34:12] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[02:37:02] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[02:38:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[02:39:56] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[02:40:06] *** Joins: fikran (~fikran@user/fikran)
[02:40:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d948-d94a-0c99-3324.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:42:22] <Tach> b0nn It seems I have an issue so far
[02:47:20] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:47:53] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:51:17] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[02:55:11] *** Quits: egy (~egy@egy.devmode.xyz) (Remote host closed the connection)
[02:55:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[02:55:46] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[02:55:52] *** Joins: UsbSick (~UsbSick@2600:6c48:757f:e654:a863:efc5:fd1:1de4)
[03:02:49] *** Quits: attila_lendvai (~alendvai@catv-80-99-178-127.catv.broadband.hu) (Quit: Leaving)
[03:03:08] *** Joins: tofran (~tofran@37.189.158.134)
[03:05:15] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[03:41:43] *** Quits: rickybobby (~rickybob@35.143.255.39) (Quit: rickybobby)
[03:42:06] *** Joins: rickybob (~rickybob@35.143.255.39)
[03:44:57] <Tach> Is this unsolvable ? cannot use IP2 (type net.IP) as type *net.UDPAddr in field value
[03:45:09] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:e954:6a22:3202:5b23) (Ping timeout: 250 seconds)
[03:52:29] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[03:52:44] <foobaz> Tach: UDPAddr is not just an IP address, it's also a port number
[03:53:00] <foobaz> if you know the port number, you can create a UDPAddr using IP2 and the port number
[03:53:16] <foobaz> this is documented at https://pkg.go.dev/net#UDPAddr
[03:53:39] <Tach> foobaz ok but when I don't know the portnumber ?
[03:55:14] <foobaz> then it's not possible to make a UDP connection, because the port number is a necessary part of a UDP connection
[03:55:21] <foobaz> same as with TCP
[03:56:05] <Tach> ah sure, but how can I create such  address from a string like 123.456.789.1:3000 ?
[03:56:39] <foobaz> please read the documentation at https://pkg.go.dev/net
[03:56:52] <foobaz> the answers you seek may be found within
[03:57:06] <Tach> foobaz I did but I don't understand as I try what described there
[03:58:34] <foobaz> it is important to understand the documentation, please study it more
[03:59:21] <Tach> yeah I will thanks
[04:01:01] <Tach> foobaz  endpoint, err := net.ResolveUDPAddr("udp", r.Endpoint) works with a string tho
[04:02:39] <foobaz> congratulations on figuring it out
[04:07:04] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:31:29] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[04:33:25] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[04:33:44] *** Quits: mrlemke (~quassel@208.74.105.200) (Quit: Bye.)
[04:33:51] *** Joins: bu5hyt0p_ (~rmsare@2601:281:c780:a510:6d40:63c6:3a27:e5b8)
[04:38:09] *** Joins: dead1 (~dead@user/dead1)
[04:38:17] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:d7e4:2dd:3e29:fd7e:314) (Ping timeout: 240 seconds)
[04:39:06] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:49:28] *** Joins: fikran (~fikran@user/fikran)
[04:56:13] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[05:02:16] *** Quits: rickybob (~rickybob@35.143.255.39) (Quit: rickybob)
[05:15:39] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[05:19:29] *** Joins: nuh^ (~nuh@64.253.22.77)
[05:19:45] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Client Quit)
[05:29:20] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[05:31:26] *** Joins: shtirlic_ (~shtirlic@95-55-123-230.dynamic.avangarddsl.ru)
[05:32:22] *** Quits: krux02 (~krux02@p200300e8172499004cdf065c4ed80e7b.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:33:32] *** Quits: shtirlic (~shtirlic@95-55-120-100.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[05:34:53] *** Joins: chovy (chovy@tilde.club)
[05:35:08] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:49:49] *** Quits: nuh^ (~nuh@64.253.22.77) (Ping timeout: 256 seconds)
[05:50:10] *** Joins: nuh^ (~nuh@64.253.22.77)
[05:58:00] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[05:59:02] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 240 seconds)
[06:02:31] *** Joins: pepee (~pepee@user/pepee)
[06:06:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:12:22] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:18:30] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:20:14] *** Quits: rvt (~rvt@librecad/rvt) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:23:29] *** Joins: rvt (~rvt@librecad/rvt)
[06:25:40] *** Joins: bachilli (~bachilli@86.144.polvo.in)
[06:29:57] *** Quits: bachilli (~bachilli@86.144.polvo.in) (Quit: Leaving)
[06:56:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[06:58:49] *** Joins: fikran (~fikran@user/fikran)
[07:13:34] *** Joins: blakeorwhatever[ (~blakeorwh@2001:470:69fc:105::340e)
[07:25:53] *** Quits: remote (~self@user/hackers) (Ping timeout: 252 seconds)
[07:30:32] *** Joins: dozn (uid249292@user/dozn)
[07:38:21] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[07:55:15] *** Quits: moog (~moog@107.126.53.157) (Remote host closed the connection)
[08:08:18] *** Joins: codebam (~codebam@user/codebam)
[08:11:32] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:24:39] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[08:32:51] *** Quits: rcernin_ (~rcernin@124.190.149.221) (Ping timeout: 268 seconds)
[08:32:57] *** Joins: bluedust (~bluedust@103.148.21.37)
[08:34:07] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:88a:ab8:777f:a54a)
[08:36:27] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:88a:ab8:777f:a54a) (Client Quit)
[08:36:46] *** Joins: rcernin (~rcernin@124.190.147.6)
[08:45:31] *** Joins: bluedust_ (~bluedust@185.248.85.46)
[08:49:02] *** Quits: bluedust (~bluedust@103.148.21.37) (Ping timeout: 240 seconds)
[08:53:15] *** Joins: bluedust (~bluedust@103.148.21.37)
[08:53:25] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 240 seconds)
[08:56:37] *** Quits: bluedust_ (~bluedust@185.248.85.46) (Ping timeout: 240 seconds)
[08:58:24] *** Quits: tiago (uid76268@user/tiago) (Quit: Connection closed for inactivity)
[08:59:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:01:21] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[09:06:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[09:08:10] *** Joins: fikran (~fikran@user/fikran)
[09:13:07] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[09:28:37] *** Quits: GJdan (~quassel@107-190-26-133.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[09:29:09] *** Joins: GJdan (~quassel@167.114.84.133)
[09:35:15] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:36:16] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:36:40] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:40:37] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[09:41:01] *** Joins: ItsNotGoodName05 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[09:42:57] *** Quits: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:42:57] *** ItsNotGoodName05 is now known as ItsNotGoodName0
[10:09:21] *** Quits: GJdan (~quassel@167.114.84.133) (Ping timeout: 256 seconds)
[10:09:53] *** Joins: GJdan (~quassel@107-190-26-133.cpe.teksavvy.com)
[10:35:37] *** Quits: bu5hyt0p_ (~rmsare@2601:281:c780:a510:6d40:63c6:3a27:e5b8) (Ping timeout: 240 seconds)
[10:43:53] *** Joins: arinov_ (~arinov@213.194.126.155)
[10:46:05] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[10:51:47] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:56:47] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[11:03:17] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[11:14:13] *** Joins: ash_m (~androirc@user/ash-m/x-3292451)
[11:15:22] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.3)
[11:15:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:17:18] <b0nn> https://twitter.com/funcOfJoe/status/1473745632061837313
[11:17:31] *** Joins: fikran (~fikran@user/fikran)
[11:17:36] <b0nn> A few CS papers on fundamentals that people might find interesting
[11:17:51] <b0nn> to keep things on topic - the CSP paper by Hoare is listed
[11:18:12] <ash_m> In the managing dependencies section, I read a lot about importing from `example.com/module`. Does this presume a git repo or is it suggesting, idk a file server perhaps?
[11:19:42] <b0nn> ash_m: it's anywhere that the code is hosted - git is the normal tool for underlying fetching of the code though
[11:26:00] <ash_m> So there is nothing special about it. Just push the code and go.mod will figure out where to put deps?
[11:26:36] *** Joins: rendar (~rendar@user/rendar)
[11:26:53] <ash_m> I guess I can configure the go command to use my credentials?
[11:30:14] <b0nn> it uses the git creds
[11:31:18] <b0nn> for example I use GIT_SSH_COMMAND="ssh -i ~/.ssh/my_specific_rsa" when I'm pushing to a work repo
[11:31:36] <b0nn> gah ignore that
[11:31:43] <b0nn> I'm thinking about git not go get
[11:38:02] *** Quits: rcernin (~rcernin@124.190.147.6) (Ping timeout: 240 seconds)
[11:50:28] *** Joins: arinov (~arinov@213.194.126.155)
[11:52:37] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[11:58:57] <j416> I suspect this boils down to something like, simpler, closer to the original representation, less allocation, but I'm curious to know why the Settings field being added to debug.BuildInfo in 1.18 is a []struct{Key,Value string} and not a map[string]string (which seems much easier to retrieve values from? still loopable but not sorted, I wonder if the order is important somehow). Searched the commit log,
[11:58:58] <j416> found nothing mentioning it in the commit message (a37bebc04267), and unless I missed it https://go-review.googlesource.com/c/go/+/353930 does not seem to discuss it either. Does anyone know the reason, or can anyone point me to where I might find it?
[11:59:47] *** Quits: bluedust (~bluedust@103.148.21.37) (Remote host closed the connection)
[12:03:13] *** Joins: mrig (~AdiIRC@user/mrig)
[12:05:50] *** Quits: henry404083 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: Ping timeout (120 seconds))
[12:08:40] *** Joins: shka (~herr@109.231.0.226)
[12:10:31] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[12:10:44] *** Joins: mrig (~AdiIRC@user/mrig)
[12:11:28] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[12:17:53] *** Joins: neurocyte0132889 (~neurocyte@94.46.68.154)
[12:17:53] *** Quits: neurocyte0132889 (~neurocyte@94.46.68.154) (Changing host)
[12:17:53] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:23:06] *** Quits: nuh^ (~nuh@64.253.22.77) (Remote host closed the connection)
[12:25:31] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[12:25:56] *** Joins: bluedust (~bluedust@117.222.185.255)
[12:25:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[12:27:46] *** Joins: mncheck (~mncheck@193.224.205.254)
[12:28:50] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[12:34:05] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[12:39:11] *** Joins: Tach (~Tach@user/tach)
[12:59:02] *** Joins: bluedust_ (~bluedust@117.222.185.154)
[12:59:52] *** Quits: bluedust (~bluedust@117.222.185.255) (Ping timeout: 268 seconds)
[13:01:39] *** Joins: danmurf (uid480399@user/danmurf)
[13:02:53] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[13:06:32] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[13:24:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:26:52] *** Joins: fikran (~fikran@user/fikran)
[13:33:00] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[13:35:07] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[13:38:24] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:38:45] *** Joins: mickey8 (~user@user/mickey)
[13:46:57] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[13:48:46] *** Joins: rvalue (~rvalue@user/rvalue)
[13:50:11] *** Joins: Mattiaslndstrm (~Mattiasln@c-73a0225c.018-449-6e6b701.bbcust.telenor.se)
[13:53:56] <Mattiaslndstrm> I'm having problems updating dependencies. I have been running go get -u all, and also tried updating every module one by one in a script. I then rone go mod tidy. However, running go list -m -u all still shows there are updates to make. What am I missing?
[14:00:51] *** Joins: phoenixh (~phoenixh@p200300dd6f212c0065cd96faa28c9c82.dip0.t-ipconnect.de)
[14:03:04] *** Joins: Tach (~Tach@user/tach)
[14:07:58] <Mattiaslndstrm> Or is go list -m -u all also showing inactive dependencies? As far as I can se the go.mod file is updated and doesn't contain any old dependencies.
[14:26:29] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 250 seconds)
[14:28:17] *** Joins: jespada (~jespada@87.74.33.157)
[14:31:58] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[14:33:00] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:40:18] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[14:43:37] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Quit: Ping timeout (120 seconds))
[14:43:50] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[15:05:38] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:09:17] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[15:22:09] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[15:23:54] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 260 seconds)
[15:25:27] *** Joins: mrig (~mrig@user/mrig)
[15:33:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[15:34:07] *** Joins: beholders_eye (~weechat@2804:1b3:70c3:13a2:deb8:2ff4:2321:ba0c)
[15:36:13] *** Joins: fikran (~fikran@user/fikran)
[15:43:42] *** Joins: derreck (~derreck@c-71-58-70-16.hsd1.pa.comcast.net)
[15:44:01] <mikoto-chan> what is an appropriate error to return when a client doesn't receive a status code 200? how do I create my own error type and should I do it in this case?
[15:46:55] <mrig> mikoto-chan: which direction would you like to send the error in?
[15:47:22] <mikoto-chan> mrig: I just want to return the error to my main function
[15:47:23] <mrig> to the client or to the server?
[15:48:04] <mrig> mikoto-chan: unfortunately, I am not in the mindset that you have after many hours of reading your code, and do not know what that is :)
[15:49:07] <mrig> mikoto-chan: what are you trying to do? You should include information about this in your error, as this is certainly that which has failed!
[15:49:32] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[15:49:32] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[15:49:32] *** Joins: menace (~someone@user/menace)
[15:49:47] <mrig> I like to think of errors as a type of message, who is it to and who is it from in this case?
[15:49:57] <mikoto-chan> mrig: wait a second
[15:50:01] <mikoto-chan> I will make it clear
[15:51:25] <mikoto-chan> mrig: https://go.dev/play/p/6Wwh-afTP4x
[15:54:39] <mrig> mikoto-chan: I would start by going to the http.Get call and see which errors it can return.
[15:55:13] <mrig> from there you can begin to think about what you will need, of course this depends upon what your package is doing and who might be calling it.
[15:58:05] <dostoyevsky2> I am trying to convert RGBAs into a long []byte, so I can mutate just the pixels of an image.  So I am converting each RGBA with binary.LittleEndian but I am not sure how to get it back, or if that's actually an efficient way of doing this:  https://go.dev/play/p/ipgOxfQQHV7
[15:59:44] <mrig> mikoto-chan: communication, errors are all about communication.
[16:00:19] *** Quits: gpeskens (~gpeskens@62.251.31.165) (Remote host closed the connection)
[16:03:59] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:06:50] *** Quits: derreck (~derreck@c-71-58-70-16.hsd1.pa.comcast.net) (Quit: derreck)
[16:07:11] *** Joins: gpeskens (~gpeskens@62.251.31.165)
[16:08:05] *** Joins: psw (2b13331353@user/psw)
[16:08:11] <dostoyevsky2> So I have got it working: https://go.dev/play/p/XehTVsPv9Hl  -- just not sure if that's efficient in any way
[16:09:10] <dostoyevsky2> I suppose the by[4:8] etc is not actually creating a new object on the heap all the time
[16:12:40] *** Quits: beholders_eye (~weechat@2804:1b3:70c3:13a2:deb8:2ff4:2321:ba0c) (Remote host closed the connection)
[16:13:36] *** Joins: beholders_eye (~weechat@2804:1b3:70c3:13a2:deb8:2ff4:2321:ba0c)
[16:18:11] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1da2:868d:4bf9:6570)
[16:33:05] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[16:34:49] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[16:35:20] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1da2:868d:4bf9:6570) (Ping timeout: 252 seconds)
[16:38:05] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[16:40:58] *** Joins: Tach (~Tach@user/tach)
[16:41:31] *** Joins: mrig (~AdiIRC@user/mrig)
[16:42:07] *** Joins: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr)
[16:43:23] *** Quits: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr) (Client Quit)
[16:44:06] *** Joins: mriga (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr)
[16:46:01] *** Quits: mrig (~AdiIRC@user/mrig) (Ping timeout: 256 seconds)
[16:47:45] *** Quits: mriga (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr) (Client Quit)
[16:48:21] *** Joins: mrig (~AdiIRC@user/mrig)
[16:52:15] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[16:52:44] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[16:57:26] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[17:04:55] *** Joins: fef (~thedawn@user/thedawn)
[17:11:24] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:12:13] <siXy> dostoyevsky2: If it's an image, why ar you not using https://pkg.go.dev/image#NRGBA ?
[17:12:17] *** Quits: phoenixh (~phoenixh@p200300dd6f212c0065cd96faa28c9c82.dip0.t-ipconnect.de) (Quit: Leaving)
[17:28:41] *** Quits: Piraty (~irc@user/piraty) (Quit: -)
[17:32:22] *** Joins: Piraty (~irc@user/piraty)
[17:34:39] *** Quits: philbert (~philbert@63.162.123.38) (Remote host closed the connection)
[17:37:32] *** Joins: moog (~moog@107.126.53.157)
[17:38:33] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[17:39:32] <dostoyevsky2> siXy: Ah, this actually makes everything a lot easier!  Thanks!
[17:41:54] *** Joins: eron (~eron@186.192.87.8)
[17:43:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:45:34] *** Joins: fikran (~fikran@user/fikran)
[17:45:46] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[17:45:55] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:46:46] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[17:47:38] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[17:48:48] <dostoyevsky2> Also, is uint8[] not a byte[]?  NRGBA/RGBA define a Pix uint8[]
[17:52:19] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 256 seconds)
[17:54:37] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[17:55:32] *** Joins: iateadonut (~dan@121.177.17.154)
[17:57:42] <siXy> dostoyevsky2: byte is an alias for uint8, so you can convert between them as you wish. But they still count as different types. the image code uses unit8 to be explicit that it's talking about small unsigned integers not binary data.
[18:00:48] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[18:01:00] *** Quits: Mattiaslndstrm (~Mattiasln@c-73a0225c.018-449-6e6b701.bbcust.telenor.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:01:08] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[18:03:28] *** Joins: mncheck (~mncheck@193.224.205.254)
[18:04:28] *** Quits: menace (~someone@user/menace) (Quit: menace)
[18:07:39] *** Joins: Cork (~Cork@user/cork)
[18:14:17] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 240 seconds)
[18:23:17] *** Quits: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Ping timeout: 250 seconds)
[18:31:36] *** Joins: bluedust (~bluedust@103.148.21.37)
[18:34:17] *** Quits: bluedust_ (~bluedust@117.222.185.154) (Ping timeout: 240 seconds)
[18:34:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[18:37:20] <dostoyevsky2> Are there argparse libs that would parse me a string array like `sub-command -s -d a --long-option=foo file'?
[18:37:57] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1da2:868d:4bf9:6570)
[18:38:19] <skrzyp> spf13/cobra?
[18:41:31] *** Joins: pepee (~pepee@user/pepee)
[18:42:17] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1da2:868d:4bf9:6570) (Ping timeout: 240 seconds)
[18:47:09] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[18:53:26] *** Joins: bu5hyt0p_ (~rmsare@2601:281:c780:a510:31c5:bd6a:19eb:499b)
[19:09:54] *** Parts: bu5hyt0p_ (~rmsare@2601:281:c780:a510:31c5:bd6a:19eb:499b) ()
[19:18:47] *** Joins: souvik (~souvik@80.179.69.240.cable.012.net.il)
[19:24:57] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Ping timeout: 240 seconds)
[19:25:19] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[19:25:37] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 240 seconds)
[19:26:04] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[19:26:39] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[19:27:24] *** Quits: mncheck (~mncheck@193.224.205.254) (Quit: Leaving)
[19:30:12] *** Quits: petoem (~petoem@user/petoem) (Quit: You have been kicked for being idle)
[19:30:27] *** Joins: venol_ (~venol_@host-95-234-23-162.retail.telecomitalia.it)
[19:30:37] *** Parts: venol_ (~venol_@host-95-234-23-162.retail.telecomitalia.it) ()
[19:31:01] *** Joins: virtx (~venol_@host-95-234-23-162.retail.telecomitalia.it)
[19:31:08] <virtx> hi
[19:32:02] <virtx> isn't possible to create a module named "container" ? I did "go mod init container" and then "go mod tody" fails with container: no Go source files
[19:44:02] *** Joins: mncheck (~mncheck@193.224.205.254)
[19:50:04] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[19:50:18] <seebs> did you create any source files in that module?
[19:52:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[19:54:37] *** Parts: iateadonut (~dan@121.177.17.154) ()
[19:54:55] *** Joins: fikran (~fikran@user/fikran)
[19:55:42] *** Joins: Cork (~Cork@user/cork)
[20:01:49] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 240 seconds)
[20:04:02] <virtx> yes, if I rename it in containerS it works
[20:04:42] <virtx> it seems that /usr/lib/go/src/go/container exists and go build is trying to check there
[20:15:51] *** Quits: souvik (~souvik@80.179.69.240.cable.012.net.il) (Ping timeout: 268 seconds)
[20:18:03] *** Joins: slowtype- (~slowtyper@79.103.178.210.dsl.dyn.forthnet.gr)
[20:18:05] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 252 seconds)
[20:23:30] *** Joins: evocatus (~rg@62.182.78.42)
[20:23:33] *** Quits: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com) (Ping timeout: 250 seconds)
[20:36:45] *** Joins: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com)
[20:41:17] *** Quits: evocatus (~rg@62.182.78.42) (Quit: Konversation terminated!)
[20:50:47] *** Quits: danmurf (uid480399@user/danmurf) (Quit: Connection closed for inactivity)
[20:54:37] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[20:56:47] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[20:56:49] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[21:20:19] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1da2:868d:4bf9:6570)
[21:24:56] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1da2:868d:4bf9:6570) (Ping timeout: 245 seconds)
[21:36:21] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:43:20] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[21:44:05] <fef> its been a while need to relearn golang , for a new project.
[21:46:25] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:46:36] *** Joins: Everything (~Everythin@37.115.210.35)
[21:57:07] *** Quits: ash_m (~androirc@user/ash-m/x-3292451) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[22:02:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[22:04:16] *** Joins: fikran (~fikran@user/fikran)
[22:07:58] *** Quits: bluedust (~bluedust@103.148.21.37) (Remote host closed the connection)
[22:09:34] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[22:09:34] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[22:09:34] *** Joins: menace (~someone@user/menace)
[22:13:50] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[22:17:47] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1da2:868d:4bf9:6570)
[22:24:45] *** Quits: eron (~eron@186.192.87.8) (Ping timeout: 256 seconds)
[22:25:33] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[22:28:57] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1da2:868d:4bf9:6570) (Ping timeout: 240 seconds)
[22:30:34] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[22:32:40] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[22:45:42] <fizzie> virtx: It's not officially legal to have a module name where the first component (the one that's by convention a domain name) doesn't include at least one dot.
[22:46:11] <fizzie> It does still work when the name doesn't conflict with the standard library, but of course the standard library may get new packages at any time.
[22:46:59] <fizzie> https://go.dev/ref/mod#go-mod-file-ident "The leading path element (up to the first slash, if any), by convention a domain name, -- must contain at least one dot --"
[22:50:09] *** Joins: no_good (~purekafro@athedsl-4369539.home.otenet.gr)
[22:50:33] *** Quits: no_good (~purekafro@athedsl-4369539.home.otenet.gr) (Quit: Igloo IRC: https://iglooirc.com)
[22:50:40] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:51:27] <b0nn> I really think that that sort of convention should be enforced
[22:53:28] <fizzie> Actually, looking closer, that requirement is only "if the module path appears in a require directive and is not replaced, or if the module paths appears on the right side of a replace directive", so I guess it's still okay if it's only ever used locally. But it does have that problem with conflicts with $GOROOT.
[22:53:31] *** Joins: mrig (~mrig@user/mrig)
[22:58:55] <LiENUS> is there a way to get the count of actual cores and not both cores and hardware threads like runtime.NumCPU()?
[23:01:26] *** Joins: Tach (~Tach@user/tach)
[23:04:21] <hdm> not via runtime, but this might work for you: https://github.com/shirou/gopsutil/blob/master/cpu/cpu.go
[23:05:01] <hdm> gopsutil is a lot heavier, but easy enough; only headache we run into with it is when cross-building across a broad range of arch/os combinations
[23:06:37] <hdm> if youre only targeting linux, maybe easier to read /proc directly
[23:07:36] <LiENUS> i'm really just experimenting around and wanted to make sure im not missing something in runtime, code performs the same with my worker pull set to NumCPU and NumCPU/2 even though its a cpu bound task
[23:07:47] <LiENUS> because half of those cores are just threads and i'm cpu bound
[23:09:31] <b0nn> What's your GOMAXPROCS set to
[23:12:18] <foobaz> if the code performs the same, why change it?
[23:12:30] <foobaz> you're making it more complex for no gain
[23:12:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[23:13:11] <LiENUS> 16
[23:13:41] <LiENUS> @foobaz, it's a toy program to play around with goroutines and try different things to see what works best
[23:14:27] <LiENUS> get a better understanding of concurrency and parallelism in go
[23:14:44] <b0nn> hmm your bottleneck might be algorithmic
[23:14:53] <LiENUS> oh at this point it almost certainly is
[23:14:59] <b0nn> pproff is your friend
[23:15:07] <LiENUS> it started out taking 2 minutes and pegging at 400% cpu, it now takes 1.5 seconds and pegs 1600% cpu
[23:15:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[23:15:42] <LiENUS> im just kind of toying around with it to see if theres anything i've missed before i move on to the next stage of complexity for it
[23:16:44] <b0nn> It's a fun way to learn :-)
[23:16:45] <LiENUS> there were some weird things i wanted to figure out too, like my output was always in order
[23:17:12] <LiENUS> that took me overnight of thinking about before i figured that one out
[23:18:21] <LiENUS> each result is more difficult to find, so it ends up working out so they're always in order. which was kind of a bummer once it hit me i wanted to solve the problem of efficiently ordering the output
[23:18:43] <LiENUS> that was one of the goals of this test is finding a method of ordering the output without sorting the whole list every loop
[23:22:18] <b0nn> ugh, ordering a stream
[23:23:33] <LiENUS> shouldnt be too bad to do, in theory i can just sort a slice of size of the output +1
[23:24:14] <LiENUS> but i'll have to come up with another place to play around with that, this one ended up being self ordering
[23:26:09] <LiENUS> yeah its all bount up in my main algorithm. 95% of the time is there and 2% of it is spent unlocking a mutex where adding that mutex shaved off 25% of the runtime because of how it improved my algorithm
[23:36:09] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[23:36:34] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[23:44:23] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[23:52:35] *** Joins: darkapex_ (~darkapex@user/darkapex)
[23:53:51] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
