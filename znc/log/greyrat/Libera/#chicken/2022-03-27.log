[01:12:51] *** Joins: ublx (~ublx@user/ublx)
[01:46:49] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[02:22:18] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 252 seconds)
[02:30:48] <wasamasa> hm
[02:30:53] <wasamasa> getting random hangs in my code
[02:31:16] <wasamasa> if I had to guess, it might be related to scsh-process
[02:46:51] <wasamasa> which reminds me, I still haven't upgraded to 5.3.0
[02:48:28] * elflng hands wasamasa a noose to handle hanging code
[02:49:22] <wasamasa> is this why salmonella has the hanging children hack?
[02:49:41] <elflng> heh, no, thats the headless chicken hack, as in saw.
[02:50:20] <elflng> wrt local time, whats the basis? is everythign in terms of unix epochs and you want it converted to local? 
[02:50:31] <elflng> or are you converting between tzs ?
[02:50:55] <elflng> i do not know why i almost always type 'everything' with the ng backwards. weirdness.
[02:50:58] <wasamasa> I'm working with a git repo and want to go through it over time
[02:51:16] <elflng> i dont know what format git uses for timestamps...
[02:51:30] <wasamasa> so I want to find out what files and file contents it has on every day of its history
[02:51:34] <elflng> the likelihood of a leap second affecting anything is near 0.
[02:51:49] <elflng> so why not just check at arbitrary times? 
[02:52:06] <wasamasa> since I don't feel like writing my own calendar code, I looked for the easiest solution that allows me to take a start/end date and increment/decrement it to get the next day
[02:52:11] <elflng> start at noon on day n, even if you have 60 years of history, which as far as i am aware is not possible...
[02:52:18] <elflng> you wont be off by more than 1 min
[02:52:46] <elflng> so just add 86400 each time
[02:53:11] <elflng> if you really need it that exact, grab the table of leap second years and do a cond to see if the year matches
[02:53:15] <wasamasa> yeah, I'm doing that currently, then fiddling with the new date object to have the appropriate time before I hand it to a git command
[02:53:39] <elflng> i dont know what the date objects are supposed to look like...
[02:54:04] <elflng> if they are just text strings for the date, then its easier to just do the leap year calculation and change the string itself
[02:54:17] <elflng> i have code to do that already in scheme, i think, if you want me to find it...
[02:54:29] <elflng> (incrementing days via string representations)
[02:54:34] <wasamasa> it takes pretty much any date format, including stuff like "noon" or "tea time"
[02:54:57] <elflng> i use it for doing evil things like grabbing entire histories of comics or posts or whatnot from the web...
[02:55:04] <elflng> because i am a bad person.
[02:55:22] <elflng> i also use it for doing the calculations for my alarms to wake me up, and for my timesheet programme...
[02:56:01] <elflng> so get the date of the first commit, and then increment via string instead of doing a bunch of conversions.
[02:56:35] <wasamasa> might be neater actually
[02:56:45] <elflng> if im understanding you correctly, you want to auto-step through the whole history on an every-day basis, correct?
[02:56:55] <wasamasa> yeah
[02:57:14] <wasamasa> like, I want to know what a file contained on a certain day or how many files a certain directory contained on that day
[02:57:30] <elflng> if so, you can do it as a single backwards conversion and then forward conversions at each step. you want the day to be at a set point or 1 day exactly from the time of the first commit?
[02:57:35] <wasamasa> git's 90 day reflog makes this trivial, but for anything longer I need to use the rev-list
[02:57:59] <wasamasa> so I wrote code now that obtains this list of commits with timestamps and iterates through it at the same time I iterate over the days
[02:58:07] <elflng> that is, if the first commit was Jun 20, 2018 18:36:35 , do you want Jun 21, 2018 18:36:35 or do you want Jun 21, 2018 00:00 ?
[02:58:38] <elflng> i dont know what a git ref-list looks like.
[02:59:18] <elflng> depending on that, it may be fastest to use something like strptime
[02:59:37] <elflng> or even call date as a shell with the desired output format. :)
[02:59:45] <wasamasa> lol
[02:59:46] <elflng> which will handle everything you want but is extremely hacky
[02:59:50] <elflng> im not entirely joking.
[03:00:04] <wasamasa> I think this business of using scsh-process to call git a few thousand times is what makes my program hang
[03:00:08] <elflng> if youre really extremely worried about leapseconds and the like, its a trivial way to handle it.
[03:00:12] <elflng> ouch, why are you doing that?
[03:00:22] <elflng> you dont have a single file with the entire log ?
[03:01:03] <wasamasa> because I first get the list of commits with one call, then for every day of the history I make another call to either obtain the contents of a file or directory count on that day
[03:01:19] <elflng> if you get the repo, doesnt it include the entire history?
[03:01:30] <wasamasa> since the history of the repo in question spans more than 10 years, that makes a few thousand calls
[03:01:34] <elflng> (i really dont know how git works, i avoid it as much as possible because i hate it.)
[03:01:52] <wasamasa> sure, but it's tricky to obtain all data you want in one go
[03:01:59] <wasamasa> it's kind of like a really weird database
[03:02:06] <elflng> im not asking about one go... im asking about avoiding making calls to git
[03:02:29] <elflng> if theres a way of fetching the entire commit history in a single go, then it should be possible to parse said history as a file instead of making more calls, yes?
[03:02:32] <wasamasa> oh
[03:02:37] <wasamasa> you mean like, using libgit2?
[03:02:43] <elflng> i dont know what libgit2 is either
[03:02:51] <wasamasa> I mean
[03:02:57] <elflng> im asking - the commits are stored on disk in some way, yes? 
[03:03:04] <elflng> on a per-file or per-repo basis, yes?
[03:03:25] <wasamasa> there's git, the CLI tool, .git, the directory containing all the backing data, libgit2 for less hacky access to the CLI tool functionality...
[03:03:42] <elflng> its the directory with the backing data that im talking about
[03:03:57] <elflng> it should be possible to read the data into your own database or hash table or whatnot, yes?
[03:04:21] <wasamasa> sure, but then I'd essentially reimplement git
[03:04:23] <elflng> so you can read each file once, build up what needs to be built, and then step through that?
[03:04:28] <wasamasa> which is very doable over a few weekends, but why
[03:04:35] <elflng> i dont think its reimplementing git
[03:04:50] <elflng> youre not trying to replace git, youre trying to turn the database into something workable for what you want
[03:05:17] <elflng> again, im really not familiar with git's internals. in svn, this would be a fairly trivial set of ops
[03:05:29] <wasamasa> ok
[03:06:15] <elflng> (that actually may be a solution - convert from git to svn and then you have some trivial text files to parse...)
[03:08:49] <elflng> theres also tools like gitg and tig that supposedly already do something like this...
[03:09:20] <elflng> but again - i dont use git any more than i strictly have to, because i think its an overengineered piece of dung. cf my comments several years ago, here, when things converted to git from svn
[03:09:52] <wasamasa> https://wyag.thb.lt/
[03:12:28] <wasamasa> anyway
[03:12:48] <wasamasa> have you ever encountered that running scsh-process in a loop for a few thousand times triggered a hang?
[03:34:18] *** Joins: rgherdt_ (~rgherdt@port-92-195-125-72.dynamic.as20676.net)
[03:37:15] *** Quits: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net) (Ping timeout: 256 seconds)
[03:50:47] *** Quits: rgherdt_ (~rgherdt@port-92-195-125-72.dynamic.as20676.net) (Remote host closed the connection)
[04:57:49] <siiky> IIRC there isn't necessarily a 1-1 relation between Git and SVN repositories (maybe it was Hg... I can't be sure now)
[04:58:51] <siiky> elflng: could you elaborate on why you thing Git is overengineered? (I probably wasn't here several years ago lol) (I'll take a link just fine :)
[05:01:02] <siiky> wasamasa: I used the git egg once (interface for libgit2) and it worked nice for my experiments; it may be easier than calling the git command
[05:43:37] *** Joins: s-liao (~s-liao@101.86.164.158)
[05:58:29] *** Joins: irontom (~user@69.174.103.168)
[06:53:12] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[07:04:46] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[07:10:23] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[07:40:12] *** Quits: irontom (~user@69.174.103.168) (Ping timeout: 240 seconds)
[07:57:03] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[08:03:43] *** Joins: ublx (~ublx@user/ublx)
[08:28:08] *** Joins: fadein (~Erik@c-24-10-167-68.hsd1.ut.comcast.net)
[09:41:38] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[09:52:57] *** Quits: Menchers (Menchers@user/menchers) (Quit: Into the Voidâ€¦)
[10:07:53] *** Joins: Menchers (Menchers@user/menchers)
[10:12:26] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[12:08:12] *** Joins: rgherdt (~rgherdt@port-92-195-125-72.dynamic.as20676.net)
[12:43:29] *** Quits: idstam (~Thunderbi@185.176.247.4) (Remote host closed the connection)
[13:28:59] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:30:06] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Quit: You have been kicked for being idle)
[14:07:29] <Bunny351> git as a concept is nice and simple, but there is too much scaffolding on top of it. later features are tacked on (submodules) and not fully thought out. the tool usage is idiosyncratic and confusing and the implicit tendency of having a clean history causes extra work (and is more or less a lie)
[14:09:01] <Bunny351> like rebasing - it sounds neat but forces you to a) pretend history is not as it was and b) needs risky fiddling like forced pushes and resets
[14:09:36] <wasamasa> my favorite part of the wyag guide is how git is not a key-value, but a value-value store
[14:09:41] <wasamasa> it sounds so loony
[16:03:39] *** Quits: rgherdt (~rgherdt@port-92-195-125-72.dynamic.as20676.net) (Ping timeout: 260 seconds)
[16:24:27] *** Joins: s-liao (~s-liao@101.86.164.158)
[16:32:07] *** Joins: crumpo (~crumpo@user/crumpo)
[16:53:25] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[17:26:15] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 260 seconds)
[17:37:13] <mario-goulart> wasamasa: with breadline, how to switch between different history files without clobbering the histories?  For example, if I rebind the history-file parameter, the entire history linked to the previous binding of history-file will be added to the current history-file.  Basically what I want is to have two histories in the same application, one for each prompt.
[17:59:24] *** Joins: s-liao (~s-liao@101.86.164.158)
[18:00:08] *** Joins: ublx (~ublx@user/ublx)
[18:19:57] <vandusen> SPAM! SPAM! SPAM! by freee
[18:34:57] *** Quits: crumpo (~crumpo@user/crumpo) (Ping timeout: 240 seconds)
[18:39:24] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[18:43:25] *** Joins: s-liao (~s-liao@101.86.164.158)
[18:49:16] <vandusen> SPAM! SPAM! SPAM! by freee
[19:09:35] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[19:19:08] *** Quits: m455 (~m455@user/m455) (Ping timeout: 272 seconds)
[20:23:16] <amazigh> vandusen: very busy day
[20:23:19] <vandusen> amazigh: MOVE SOMEWHERE NEW AND START A NEW LIFE
[20:23:31] <amazigh> vandusen: that seems relatable
[20:23:33] <vandusen> amazigh: JOKEBUSTERS featuring T-Rex
[20:33:59] <amazigh> re git is not a key-value, but a value-value store refers to the warning at https://wyag.thb.lt/#org2dd9db0
[20:34:09] <amazigh> that warning is mesmerizing :)
[20:43:42] *** Joins: sukrit_ (~sukrit@142.126.138.69)
[20:43:55] <sukrit_> hey guys, I need some help with problem 1.29 in sicp. I'm trying to compute simpsons integral but my code doesn't work. In my two attempts the first one is stuck in an infinite loop and the second one is giving me a wrong number of args error. Can you please tell me why? https://pastebin.com/1NUe0Yib
[21:27:11] <Bunny351> the second def of "y" refers to "h" but should be "n"
[21:28:28] <Bunny351> I would start with using more meaningful names, all that shadowing of 1-letter arg names confuses terribly
[21:29:05] <Bunny351> running the code in csi should give you a backtrace for the 2nd case and may help figuring out what call is wrong
[21:46:09] <sukrit_> if figured it out and i feel stupid. Thanks
[21:46:20] <sukrit_> i*
[21:46:23] *** Quits: sukrit_ (~sukrit@142.126.138.69) (Quit: leaving)
[22:21:08] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:548d:20ce:302b:db7e)
[22:21:08] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:548d:20ce:302b:db7e) (Changing host)
[22:21:08] *** Joins: skapata (~Skapata@user/skapata)
[22:56:36] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[23:10:13] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[23:29:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:28ab:8424:21f0:4e41)
[23:29:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:28ab:8424:21f0:4e41) (Changing host)
[23:29:00] *** Joins: skapata (~Skapata@user/skapata)
[23:45:58] *** Joins: v_m_v (~vm_v@adsl-84-226-81-22.adslplus.ch)
