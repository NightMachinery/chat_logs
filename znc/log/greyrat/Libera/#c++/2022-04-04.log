[00:00:24] <fluter> Alipha: right
[00:00:39] <fluter> maybe namespace __detail ? :D
[00:01:12] <bpalmer> double underscores at the beginning of an identifier are reserved to the implementation.
[00:01:16] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[00:01:35] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Quit: Stay safe!)
[00:01:50] <bpalmer> (as are single underscores followed by a capital letter).
[00:05:49] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[00:05:56] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d4ed:85b6:d4b0:a14d)
[00:05:56] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d4ed:85b6:d4b0:a14d) (Changing host)
[00:05:56] *** Joins: skapata (~Skapata@user/skapata)
[00:09:30] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[00:09:48] <ville> fluter: ___detail is even more secure. it's used by the most serious crypto libraries
[00:09:56] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:10:52] *** Joins: unlink2 (~unlink@p200300ebcf023c003405202aedecaeca.dip0.t-ipconnect.de)
[00:10:54] <danieldg> you could call it __detail_(hash of your code)
[00:11:19] *** Quits: entbsagtc^ (~entbsagtc@c-24-99-107-170.hsd1.ga.comcast.net) (Ping timeout: 260 seconds)
[00:11:47] <danieldg> that way it's sure to break on every update instead of just when you change it
[00:14:26] *** Quits: Linux77 (~L30n4rd0@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[00:14:30] <ville> in the 90s US forbode the export of code using ____detail. it was deemed too secure
[00:17:18] <Alipha> !reserved
[00:17:19] <nolyc> You are not allowed to create any name which: 1) contains two consecutive underscores, 2) begins with an underscore followed by an uppercase letter or 3) begins with an underscore and is in the global namespace ([lib.requirements]/[requirements]). Literal suffixes are an exception and must start with an underscore.
[00:17:51] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd) (Ping timeout: 260 seconds)
[00:18:14] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:19:04] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[00:19:53] <danieldg> maybe  ＿detail then
[00:20:18] *** Joins: W_ (~W@90.250.59.88)
[00:20:24] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f750:a200:f9d1:c665:a064:ac5a)
[00:21:26] <ville> outside the basic source character set
[00:21:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:d960:d98a:f624:8ef) (Ping timeout: 256 seconds)
[00:22:10] *** Joins: Linux77 (~L30n4rd0@189-48-140-124.user3p.veloxzone.com.br)
[00:22:34] *** Quits: Linux77 (~L30n4rd0@189-48-140-124.user3p.veloxzone.com.br) (Max SendQ exceeded)
[00:23:08] *** Joins: Linux77 (~L30n4rd0@189-48-140-124.user3p.veloxzone.com.br)
[00:25:05] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:27:17] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Remote host closed the connection)
[00:27:29] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[00:27:44] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Remote host closed the connection)
[00:28:37] *** Joins: vicfred (~vicfred@user/vicfred)
[00:28:43] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[00:29:53] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[00:30:18] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:35:21] *** Joins: magla (~gelignite@55d411d7.access.ecotel.net)
[00:36:43] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Ping timeout: 260 seconds)
[00:36:50] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 246 seconds)
[00:38:54] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[00:39:02] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[00:39:28] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6d01:9a81:e4c8:b60e)
[00:45:52] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f750:a200:f9d1:c665:a064:ac5a) (Ping timeout: 260 seconds)
[00:47:04] *** Joins: rgrinberg (~textual@177.248.158.166)
[00:49:26] *** Joins: bebyx (~Thunderbi@user/bebyx)
[00:57:19] *** Joins: kaph (~kaph@151.35.76.11)
[00:58:04] *** Joins: dudek (~dudek@185.150.236.127)
[00:58:10] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[01:02:28] *** Quits: paulf (~paulf@lfbn-lyo-1-398-93.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[01:05:29] *** Quits: makeyavelly (~Thunderbi@88.135.63.38) (Quit: makeyavelly)
[01:08:06] *** Joins: jokoon (~eio@2a01:e0a:542:e160:c53c:c8c0:ea5c:ff3f)
[01:12:25] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[01:13:43] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[01:15:15] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[01:15:24] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[01:15:34] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[01:17:44] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:19:39] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[01:20:02] *** Joins: Crucifyy (~crucifyy@2601:300:8100:ec80:1d85:8708:c60a:2580)
[01:21:40] *** Joins: wakeup (~wakeup@user/wakeup)
[01:22:04] <wakeup> Does anyone know the difference between provisioning and configuration?
[01:22:57] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:27:55] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:32:02] <FAT1337> alt fork ?
[01:32:20] <Eelis> wakeup: those terms do not have well-defined meanings in C++. they mean different things in different contexts, but none of it is relevant to C++
[01:32:35] <FAT1337> ok
[01:32:44] <FAT1337> ;/
[01:33:08] <wakeup> yes, I know this is not strictly related to C++, but given that there's no "software engineering" channel here on IRC, I ask this question here
[01:33:24] <FAT1337> ok
[01:34:03] <Eelis> just because there is no #softwareengineering channel doesn't mean that software engineering questions are on-topic in #c++
[01:42:11] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:42:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:45:04] *** Quits: belphegor666 (~satan@user/belphegor666) (Read error: Connection reset by peer)
[01:45:20] <Alipha> wakeup: there's ##programming
[01:47:18] *** Quits: Crucifyy (~crucifyy@2601:300:8100:ec80:1d85:8708:c60a:2580) (Remote host closed the connection)
[01:48:03] *** Joins: crucifyy (~crucifyy@2601:300:8100:ec80:1d85:8708:c60a:2580)
[01:49:00] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:50:19] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[01:51:08] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:53:00] *** Quits: geeknix (~pi@2001:e68:5432:716a:e867:9342:8ac3:7cf7) (Ping timeout: 240 seconds)
[01:53:37] *** Quits: crucifyy (~crucifyy@2601:300:8100:ec80:1d85:8708:c60a:2580) (Remote host closed the connection)
[01:55:59] *** Joins: Crucifyy (~crucifyy@2601:300:8100:ec80:1d85:8708:c60a:2580)
[02:01:27] *** Joins: Xardas (~Xardas@149.233.51.127)
[02:01:37] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Ping timeout: 250 seconds)
[02:02:06] *** Quits: Xardas (~Xardas@149.233.51.127) (Client Quit)
[02:04:44] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[02:04:48] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[02:08:45] *** Quits: jess (~jess@libera/staff/cat/jess) ()
[02:09:28] *** Joins: geeknix (~pi@2001:e68:5432:518e:7d14:5ca5:9ed8:f278)
[02:10:41] *** Joins: blackout69 (~blackout6@net-31-156-121-216.cust.vodafonedsl.it)
[02:15:07] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[02:15:10] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:16:03] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:16:26] *** Joins: Viewday115 (~Viewday@user/viewday)
[02:19:42] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Read error: Connection reset by peer)
[02:20:35] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Ping timeout: 260 seconds)
[02:20:51] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[02:21:09] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[02:22:13] *** Quits: kaph (~kaph@151.35.76.11) (Read error: Connection reset by peer)
[02:23:18] *** Joins: kaph (~kaph@151.35.76.11)
[02:24:30] *** Quits: kaph (~kaph@151.35.76.11) (Read error: Connection reset by peer)
[02:25:45] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[02:25:47] *** Joins: kaph (~kaph@151.35.76.11)
[02:29:19] *** Joins: wakeup (~wakeup@user/wakeup)
[02:29:59] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[02:30:33] *** Quits: Crucifyy (~crucifyy@2601:300:8100:ec80:1d85:8708:c60a:2580) (Remote host closed the connection)
[02:34:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:36:17] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6d01:9a81:e4c8:b60e) (Ping timeout: 260 seconds)
[02:38:08] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:38:42] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Remote host closed the connection)
[02:38:54] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[02:39:08] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Remote host closed the connection)
[02:42:30] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:42:41] *** Quits: kaph (~kaph@151.35.76.11) (Read error: Connection reset by peer)
[02:43:44] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Quit: Stay safe!)
[02:44:51] *** Joins: kaph (~kaph@151.35.76.11)
[02:44:54] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[02:45:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[02:45:03] *** ChanServ sets mode: +v npaperbot
[02:48:59] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[02:49:11] *** Quits: sobkas (~sobkas@95.175.17.217) (Read error: Connection reset by peer)
[02:49:42] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 260 seconds)
[02:49:50] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:51:46] *** Quits: kaph (~kaph@151.35.76.11) (Read error: Connection reset by peer)
[02:52:30] *** Quits: Leone (~Leo@216.154.4.77) ()
[02:53:44] *** Quits: jokoon (~eio@2a01:e0a:542:e160:c53c:c8c0:ea5c:ff3f) (Quit: Leaving)
[02:54:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:58:12] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:701a:9260:82ec:f4bf) (Ping timeout: 240 seconds)
[03:00:42] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:701a:9260:82ec:f4bf)
[03:04:37] *** Joins: badone (~badone@209.132.189.152)
[03:06:00] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b)
[03:12:37] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:13:28] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[03:13:32] *** Quits: dudek (~dudek@185.150.236.127) (Quit: Leaving)
[03:14:35] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:14:36] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[03:16:30] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:19:58] *** Quits: proller (~p@2a02:6b8:b081:18::1:32) (Remote host closed the connection)
[03:21:51] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[03:22:04] *** Joins: proller (~p@80.240.216.69)
[03:22:16] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Remote host closed the connection)
[03:23:43] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:24:24] *** Quits: Enitin (~Enitin@82.180.145.230) (Remote host closed the connection)
[03:24:40] *** Joins: Enitin (~Enitin@82.180.145.230)
[03:26:56] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 246 seconds)
[03:27:08] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[03:27:15] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Ping timeout: 240 seconds)
[03:27:19] *** Joins: proller (~p@2a02:6b8:b081:8804::1:1d)
[03:27:56] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[03:28:13] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 260 seconds)
[03:33:27] *** Quits: pizdets (~pizdets@183.182.115.164) (Ping timeout: 260 seconds)
[03:33:43] *** Joins: pizdets_ (~pizdets@183.182.115.90)
[03:36:53] *** Quits: blackout69 (~blackout6@net-31-156-121-216.cust.vodafonedsl.it) (Quit: Leaving.)
[03:38:43] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 260 seconds)
[03:40:08] *** Quits: ivii (~ivan@user/ivii) (Ping timeout: 252 seconds)
[03:41:13] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[03:42:10] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:45:56] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[03:48:19] *** Quits: jsbach (~jsbach@2a01:c22:a9f6:7600:7dd:385c:8a8f:e58b) (Ping timeout: 260 seconds)
[03:53:32] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Ping timeout: 246 seconds)
[03:55:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:56:15] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 260 seconds)
[03:57:12] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[03:57:43] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Max SendQ exceeded)
[03:58:02] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:58:23] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[03:58:50] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Max SendQ exceeded)
[03:59:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[03:59:24] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:01:16] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[04:01:17] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Client Quit)
[04:04:23] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 260 seconds)
[04:07:53] *** Joins: mgrech (~mgrech@178-190-2-183.adsl.highway.telekom.at)
[04:13:03] *** Quits: proller (~p@2a02:6b8:b081:8804::1:1d) (Ping timeout: 260 seconds)
[04:14:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:16:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 246 seconds)
[04:17:52] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:19:44] *** Joins: nvrhome (~nvrhome@user/nvrhome)
[04:20:30] *** Quits: emerent (~quassel@p200300cd5743c321ba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[04:21:43] *** Joins: emerent (~quassel@p200300cd5743c321ba27ebfffed28a59.dip0.t-ipconnect.de)
[04:27:06] *** Joins: proller (~p@80.240.216.69)
[04:30:41] *** Joins: clime (~clime@89-24-52-137.nat.epc.tmcz.cz)
[04:34:13] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[04:34:42] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 272 seconds)
[04:36:07] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:36:31] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:38:07] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:39:54] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:43:42] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:701a:9260:82ec:f4bf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:46:58] *** Joins: zer0x (~zer0x@58.186.50.203)
[04:47:33] *** Joins: proller (~p@2a02:6b8:b081:b705::1:32)
[04:47:42] *** Joins: nostar (~nostar@68.51.221.108)
[04:49:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:52:20] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:53:09] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[04:56:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:00:07] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[05:13:59] *** Quits: nvrhome (~nvrhome@user/nvrhome) (Quit: Leaving)
[05:15:35] *** Quits: proller (~p@2a02:6b8:b081:b705::1:32) (Ping timeout: 260 seconds)
[05:17:56] *** Joins: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:24:14] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[05:25:52] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[05:32:56] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 246 seconds)
[05:38:02] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 272 seconds)
[05:39:19] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Remote host closed the connection)
[05:40:00] *** Joins: vicfred (~vicfred@user/vicfred)
[05:43:49] *** Joins: quartz (~quartz@user/quartz)
[05:47:48] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:56:46] *** Quits: mgrech (~mgrech@178-190-2-183.adsl.highway.telekom.at) (Quit: Client closed)
[06:00:42] *** Joins: Coldberg (~C-Man@78.31.190.82)
[06:01:19] *** Quits: C-Man (~C-Man@static.88-198-34-209.clients.your-server.de) (Ping timeout: 260 seconds)
[06:02:37] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:05:06] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:08:37] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca) (Quit: Leaving)
[06:09:06] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[06:11:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 246 seconds)
[06:17:38] *** Joins: Inline__ (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de)
[06:20:27] *** Quits: Inline (~Inline@p200300cd473cee00b1553510cacfa527.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:22:36] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a660098b0647172a77e2e.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[06:24:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:26:48] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Ping timeout: 272 seconds)
[06:29:43] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:31:41] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:33:46] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[06:33:47] *** Joins: kaph (~kaph@pa-18-166-251.service.infuturo.it)
[06:38:02] *** Quits: kaph (~kaph@pa-18-166-251.service.infuturo.it) (Ping timeout: 246 seconds)
[06:38:45] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[06:38:58] *** Joins: kaph (~kaph@pa-18-166-251.service.infuturo.it)
[06:44:54] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[06:45:02] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[06:45:02] *** ChanServ sets mode: +v npaperbot
[06:52:10] *** Joins: Soni (~quassel@autistic.space)
[06:54:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:00:29] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[07:07:02] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[07:12:34] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[07:13:26] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:13:40] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:14:42] *** Joins: teepee (~teepee@openscad/teepee)
[07:26:13] *** Quits: kaph (~kaph@pa-18-166-251.service.infuturo.it) (Ping timeout: 260 seconds)
[07:26:22] *** Joins: yosef` (~yosef`@45.32.73.39)
[07:26:41] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 246 seconds)
[07:28:11] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: I'm outta here...)
[07:32:13] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:33:07] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[07:43:54] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[07:49:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:50:29] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[07:51:58] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[07:53:28] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:55:23] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 246 seconds)
[07:58:00] *** Joins: teepee (~teepee@openscad/teepee)
[07:58:53] *** Quits: sreve (~quassel@p54a7145f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:58:59] *** Joins: sreve_ (~quassel@p549d73f7.dip0.t-ipconnect.de)
[08:01:07] *** Joins: kaph (~kaph@pa-18-166-251.service.infuturo.it)
[08:03:18] *** Quits: yosef` (~yosef`@45.32.73.39) (Quit: yosef`)
[08:06:35] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[08:07:09] *** Joins: yosef` (~user@223.73.113.250)
[08:08:13] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[08:09:10] *** Quits: abode (~abode@2a00:f28:4c1:349d:8230:49ff:fe6e:36b5) (Remote host closed the connection)
[08:13:22] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4c0b:4f04:456a:6399:b8a3:e8ee)
[08:16:27] *** Quits: russruss (~russruss@my.russellmcc.com) (Quit: The Lounge - https://thelounge.chat)
[08:17:04] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:19:52] *** Joins: russruss (~russruss@my.russellmcc.com)
[08:23:01] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[08:27:35] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[08:35:18] *** Quits: unlink2 (~unlink@p200300ebcf023c003405202aedecaeca.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:37:51] *** Quits: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[08:37:51] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[08:37:58] *** Quits: yosef` (~user@223.73.113.250) (Quit: ERC (IRC client for Emacs 28.0.50))
[08:39:08] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 246 seconds)
[08:39:38] *** Joins: yosef` (~user@223.73.113.250)
[08:42:02] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[08:42:51] *** Joins: karakedi (~eAC53C340@user/karakedi)
[08:48:05] *** Joins: ironman (~ironman@2405:201:1010:b051:aebb:ac9b:cf88:4008)
[08:53:08] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 246 seconds)
[08:54:41] *** Joins: seifeslimene_ (~seifeslim@197.2.10.72)
[08:55:38] *** Quits: seifeslimene (~seifeslim@102.156.121.226) (Ping timeout: 272 seconds)
[08:58:05] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1462:1997:8fd2:85eb)
[09:06:00] <Batzy> https://godbolt.org/z/Wj8ocMavs why is my matrix multiplication returning a different result each time?
[09:11:09] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[09:11:31] <Alipha> Batzy: size_d is 0
[09:12:11] *** Quits: kaph (~kaph@pa-18-166-251.service.infuturo.it) (Read error: Connection reset by peer)
[09:12:27] *** Joins: kaph (~kaph@151.82.171.171)
[09:16:26] <Batzy> how do u set both on the same line?
[09:16:34] <Batzy> i can change it i guess i think it still doesnt work though
[09:18:50] <Batzy> nvm i looked it uo
[09:19:39] *** Quits: Inline__ (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[09:20:17] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:21:13] <Batzy> hm
[09:21:18] <Batzy> still not working for me i htink
[09:22:29] <Batzy> nvm i got it
[09:22:30] <Batzy> thanks man
[09:27:04] <Batzy> it's still not working but i guess it could be for anything
[09:34:10] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[09:35:43] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.167)
[09:36:24] *** Quits: letto (~letto@188.27.114.171) (Quit: Konversation terminated!)
[09:37:13] *** Joins: letto (~letto@188.27.114.171)
[09:47:42] *** Joins: irf21k (~irf21k@2401:4900:33c0:231a:2:2:eaeb:d398)
[09:52:29] *** Quits: emerent (~quassel@p200300cd5743c321ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:52:54] *** Joins: emerent (~quassel@p200300cd5743c3caba27ebfffed28a59.dip0.t-ipconnect.de)
[09:55:32] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:56:20] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[10:00:24] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[10:04:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:09:11] *** gentooclimax is now known as climax
[10:11:52] *** climax is now known as gentooclimax
[10:12:06] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:21:18] *** Joins: anonymous1 (~guest@149.28.142.187)
[10:25:06] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:25:34] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[10:25:34] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[10:27:19] *** Quits: zer0x (~zer0x@58.186.50.203) (Ping timeout: 260 seconds)
[10:28:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1462:1997:8fd2:85eb) (Ping timeout: 240 seconds)
[10:29:48] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[10:29:48] *** Joins: belphegor666 (~satan@user/belphegor666)
[10:30:25] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7092:94e7:8ad0:d7f4)
[10:32:55] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 260 seconds)
[10:33:31] *** Joins: Enitin (~Enitin@82.180.145.225)
[10:34:25] *** Joins: paulf (~paulf@lfbn-lyo-1-398-93.w2-7.abo.wanadoo.fr)
[10:38:43] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[10:40:50] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:42:48] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 260 seconds)
[10:43:12] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[10:44:55] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[10:45:02] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[10:45:02] *** ChanServ sets mode: +v npaperbot
[10:48:17] *** gentooclimax is now known as climax
[10:50:08] *** climax is now known as gentooclimax
[10:51:01] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[10:52:32] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[10:58:40] *** Joins: jsbach (~jsbach@2a01:c23:6018:f800:6f6c:d942:12b0:84da)
[11:00:24] *** Quits: kaph (~kaph@151.82.171.171) (Ping timeout: 272 seconds)
[11:07:35] *** Joins: evangeline (~Eleanor@178.79.105.181)
[11:09:27] *** Quits: fbiagent (~fbiagent@user/fbiagent) (*.net *.split)
[11:09:27] *** Quits: Cahaan (~Cahaan@user/cahaan) (*.net *.split)
[11:09:27] *** Quits: segnior (segnior@user/segnior) (*.net *.split)
[11:09:27] *** Quits: jimbzy (~gem@user/jimbzy) (*.net *.split)
[11:09:27] *** Quits: cnsunyour (~sunyour@129.226.182.99) (*.net *.split)
[11:09:27] *** Quits: cren (cren@tilde.team) (*.net *.split)
[11:09:27] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[11:09:27] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[11:09:27] *** Quits: a5m (nop@asm.dj) (*.net *.split)
[11:09:27] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[11:09:27] *** Quits: aosync (~aws@mx1.aosync.me) (*.net *.split)
[11:09:27] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[11:09:27] *** Quits: Nitrousoxide_ (~msdos@user/nitrousoxide) (*.net *.split)
[11:09:27] *** Quits: nb-ben (~ben@user/nb-ben) (*.net *.split)
[11:09:27] *** Quits: ndorf (~nd@ob.noxio.us) (*.net *.split)
[11:09:27] *** Quits: dzoe (joe@joe.cz) (*.net *.split)
[11:09:27] *** Quits: omnihil_ (hermes@camel.ethereal.net) (*.net *.split)
[11:09:27] *** Quits: Friithian (gunqqer@friithian.dev) (*.net *.split)
[11:09:27] *** Quits: kapil (~kapil@2a01:4f9:c010:c9c3::1) (*.net *.split)
[11:09:27] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (*.net *.split)
[11:09:27] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (*.net *.split)
[11:09:27] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[11:09:27] *** Quits: kfv (~kfv@mail.kfv.io) (*.net *.split)
[11:09:28] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[11:09:28] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[11:09:28] *** Quits: timmot (~timmot@207.148.85.201) (*.net *.split)
[11:09:28] *** Quits: geordi (~geordi@tinodidriksen.com) (*.net *.split)
[11:09:37] *** Joins: kapil (~kapil@2a01:4f9:c010:c9c3::1)
[11:09:38] *** Joins: jimbzy (~gem@hwsrv-458174.hostwindsdns.com)
[11:09:38] *** Joins: segnior (segnior@user/segnior)
[11:09:46] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 250 seconds)
[11:09:47] *** Joins: Friithian (gunqqer@friithian.dev)
[11:09:47] *** Joins: InPhase (~InPhase@openscad/inphase)
[11:09:51] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[11:09:54] *** Joins: a5m (nop@asm.dj)
[11:09:55] *** Joins: aosync (~aws@mx1.aosync.me)
[11:09:55] *** Joins: ben_ (~ben@135.125.147.53)
[11:09:56] *** Joins: ndorf (~nd@ob.noxio.us)
[11:10:03] *** Quits: jimbzy (~gem@hwsrv-458174.hostwindsdns.com) (Changing host)
[11:10:03] *** Joins: jimbzy (~gem@user/jimbzy)
[11:10:05] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[11:10:09] *** Joins: omnihil (~hermes@72.52.96.202)
[11:10:15] *** Joins: dzoe (joe@joe.cz)
[11:10:30] *** Joins: nightstrike (uid487@id-487.uxbridge.irccloud.com)
[11:10:36] *** Joins: joji (~jojo@86.4.72.180)
[11:10:53] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[11:10:55] *** Joins: RazielZ (~Raziel@user/raziel)
[11:10:58] *** Joins: kfv (~kfv@mail.kfv.io)
[11:11:01] *** Joins: packet_lozenge (~packet_lo@cpe-107-15-195-50.nc.res.rr.com)
[11:11:02] *** Joins: Cahaan (~Cahaan@user/cahaan)
[11:11:04] *** Quits: packet_lozenge (~packet_lo@cpe-107-15-195-50.nc.res.rr.com) (Changing host)
[11:11:04] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[11:11:11] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:11:12] *** Joins: Karyon (~Karyon@user/karyon)
[11:11:14] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:8c97:5c4b:e881:150b)
[11:11:16] *** Joins: geordi (~geordi@tinodidriksen.com)
[11:11:17] *** ChanServ sets mode: +v geordi
[11:11:18] *** Quits: Raziel (~Raziel@user/raziel) (Killed (NickServ (GHOST command used by RazielZ)))
[11:11:19] *** RazielZ is now known as Raziel
[11:11:24] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[11:12:56] *** Quits: ben_ (~ben@135.125.147.53) (Changing host)
[11:12:56] *** Joins: ben_ (~ben@user/nb-ben)
[11:12:59] *** ben_ is now known as nb-ben
[11:13:11] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[11:13:11] *** Quits: obiwahn (~heini@user/obiwahn) (*.net *.split)
[11:13:11] *** Quits: MrC (Ben@mrbenc.net) (*.net *.split)
[11:13:11] *** Quits: bionade24 (~bionade24@2a03:4000:33:45b::1) (*.net *.split)
[11:13:11] *** Quits: krzych (krzych@nroot.pl) (*.net *.split)
[11:13:11] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[11:13:11] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[11:13:11] *** Quits: shenghi (~shenghi@chrysocolla.mutablevoid.org) (*.net *.split)
[11:13:11] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[11:13:12] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (*.net *.split)
[11:13:12] *** Quits: andreyv (~andrey@user/andreyv) (*.net *.split)
[11:13:12] *** Quits: dale (~dale@user/dale) (*.net *.split)
[11:13:12] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (*.net *.split)
[11:13:12] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[11:13:12] *** Quits: GyrosGeier (~geier@185.27.255.155) (*.net *.split)
[11:13:12] *** Quits: rpav (~rpav@user/rpav) (*.net *.split)
[11:13:12] *** Quits: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com) (*.net *.split)
[11:13:12] *** Quits: Adrinael (adrinael@dsl-hkibng21-54f8c5-237.dhcp.inet.fi) (*.net *.split)
[11:13:12] *** Quits: tin- (~tin@209.250.245.227) (*.net *.split)
[11:13:12] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[11:13:18] *** Joins: GyrosGeier (~geier@185.27.255.155)
[11:13:19] *** Joins: Adrinael (adrinael@dsl-hkibng21-54f8c5-237.dhcp.inet.fi)
[11:13:20] *** Joins: dale (dale@user/dale)
[11:13:20] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[11:13:22] *** Joins: MrC (Ben@mrbenc.net)
[11:13:24] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[11:13:24] *** Joins: bionade24 (~bionade24@2a03:4000:33:45b::1)
[11:13:28] *** Joins: tin- (~tin@209.250.245.227)
[11:13:32] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[11:13:33] *** Joins: shenghi (~shenghi@chrysocolla.mutablevoid.org)
[11:13:39] *** Joins: andreyv (~andrey@user/andreyv)
[11:13:44] *** Joins: celphi (sid97751@user/celphi)
[11:13:48] *** Joins: obiwahn (~heini@obiwahn.org)
[11:13:52] *** Joins: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com)
[11:13:57] *** Quits: obiwahn (~heini@obiwahn.org) (Changing host)
[11:13:57] *** Joins: obiwahn (~heini@user/obiwahn)
[11:13:59] *** Joins: Exa (exa@irc.moe)
[11:14:05] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[11:14:15] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[11:14:15] *** Joins: deepy (deepy@user/deepy)
[11:14:15] *** Joins: rpav (~rpav@user/rpav)
[11:14:45] *** Joins: timmot (~timmot@207.148.85.201)
[11:14:46] *** Joins: koolazer (~koo@user/koolazer)
[11:15:12] *** Joins: zer0x (~zer0x@58.186.50.203)
[11:18:18] *** Joins: krzych (krzych@nroot.pl)
[11:24:58] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[11:32:30] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[11:40:34] *** Quits: LuksNuke (~LuksNuke@ip-83-99-51-40.dyn.luxdsl.pt.lu) (Quit: ZNC - https://znc.in)
[11:40:44] *** Joins: LuksNuke (~LuksNuke@ip-83-99-51-40.dyn.luxdsl.pt.lu)
[11:41:33] *** Quits: ville (~ville@user/ville) (Quit: ville)
[11:41:43] *** Quits: LuksNuke (~LuksNuke@ip-83-99-51-40.dyn.luxdsl.pt.lu) (Client Quit)
[11:43:22] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:46:25] *** Joins: ville (~ville@user/ville)
[11:48:04] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[11:52:04] *** Joins: LuksNuke (~LuksNuke@ip-83-99-51-40.dyn.luxdsl.pt.lu)
[11:52:28] *** Quits: LuksNuke (~LuksNuke@ip-83-99-51-40.dyn.luxdsl.pt.lu) (Remote host closed the connection)
[11:52:31] *** gentooclimax is now known as climax
[11:53:05] *** Joins: LuksNuke (~LuksNuke@ip-83-99-51-40.dyn.luxdsl.pt.lu)
[11:53:14] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[11:56:29] *** climax is now known as gentooclimax
[11:56:57] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[11:57:36] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:57:43] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 256 seconds)
[12:05:45] *** Quits: drbeco (~beco@user/beco) (Remote host closed the connection)
[12:06:21] *** Joins: drbeco (~beco@user/beco)
[12:08:02] *** Joins: zibolo (~quassel@global-deiInside018.dei.polimi.it)
[12:11:29] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:12:38] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.167) (Ping timeout: 246 seconds)
[12:14:02] *** Quits: ironman (~ironman@2405:201:1010:b051:aebb:ac9b:cf88:4008) (Quit: Leaving)
[12:17:51] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[12:22:05] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4c0b:4f04:456a:6399:b8a3:e8ee) (Quit: Leaving)
[12:23:13] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[12:24:21] *** Quits: paulf (~paulf@lfbn-lyo-1-398-93.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[12:28:31] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[12:28:56] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.167)
[12:33:02] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[12:35:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.167) (Ping timeout: 268 seconds)
[12:35:28] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[12:37:24] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:38:28] *** Joins: Batzy (~quassel@user/batzy)
[12:40:13] *** Joins: ironman (~ironman@2405:201:1010:b051:aebb:ac9b:cf88:4008)
[12:41:25] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:43:59] *** Joins: rendar (~rendar@user/rendar)
[12:45:03] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:45:55] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[12:49:18] *** Joins: Viewday1157 (~Viewday@user/viewday)
[12:51:01] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:51:01] *** Viewday1157 is now known as Viewday115
[12:54:00] *** Joins: MajorBiscuit (~MajorBisc@c-001-003-047.client.tudelft.eduvpn.nl)
[12:59:55] *** Joins: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:b0cc:2c18:3131:fb47)
[13:04:34] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4c0b:4f04:456a:6399:b8a3:e8ee)
[13:09:18] *** Joins: plastico (~plastico@neomutt/plastico)
[13:16:01] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:22:05] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[13:24:11] *** Quits: bpalmer (~user@user/bpalmer) (Remote host closed the connection)
[13:24:53] *** Joins: jokoon (~eio@2a01:e0a:542:e160:c53c:c8c0:ea5c:ff3f)
[13:25:03] <fluter> hi, how to do std::unordered_map::keys/values or iterkeys, itervalues
[13:25:07] <fluter> just like python's dict
[13:27:24] *** Joins: andreasbuhr (~quassel@p549dbec6.dip0.t-ipconnect.de)
[13:28:06] *** Quits: clime (~clime@89-24-52-137.nat.epc.tmcz.cz) (Quit: WeeChat 3.4)
[13:33:39] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[13:34:04] <TinoDidriksen> fluter, same as any other container - .begin() and .end(), or use for(auto& iter : map)
[13:34:36] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (Ping timeout: 240 seconds)
[13:35:00] <fluter> TinoDidriksen: yeah, so iter is a pair
[13:35:11] <TinoDidriksen> Yup
[13:35:15] <fluter> i wonder is there a way to only have key, but not value
[13:36:08] <TinoDidriksen> That would require taking a copy of the key. The normal iteration doesn't copy anything.
[13:37:28] <fluter> ah ok
[13:37:29] <fluter> i see
[13:38:23] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 260 seconds)
[13:43:17] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[13:46:11] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[13:48:18] *** Quits: Coldberg (~C-Man@78.31.190.82) (Ping timeout: 260 seconds)
[13:49:08] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:49:22] *** Joins: Viewday1151 (~Viewday@user/viewday)
[13:49:23] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:51:03] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:51:03] *** Viewday1151 is now known as Viewday115
[13:52:11] *** Joins: konfusedagain (~konfuseda@2409:4050:2e9b:ed77:fc08:4592:8050:a11)
[13:52:57] *** Quits: konfusedagain (~konfuseda@2409:4050:2e9b:ed77:fc08:4592:8050:a11) (Client Quit)
[13:55:44] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[13:57:21] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[13:57:23] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:58:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[13:58:51] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:06:39] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[14:09:09] *** Quits: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:b0cc:2c18:3131:fb47) (Quit: Client closed)
[14:10:48] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[14:11:02] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[14:12:31] *** Joins: hehe (~hehe@125.99.177.198)
[14:12:48] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[14:14:36] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:15:10] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[14:16:53] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 260 seconds)
[14:18:10] *** Joins: proller (~p@80.240.216.69)
[14:23:49] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[14:25:38] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[14:27:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:27:29] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[14:28:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:30:54] <AliceMeows> https://godbolt.org/z/osTdKr8vT what am I doing wrong here? as per https://github.com/soasis/out_ptr/blob/main/README.md it is meant to work
[14:32:39] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:34:02] *** Joins: C-Man (~C-Man@static.88-198-34-209.clients.your-server.de)
[14:44:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[14:45:04] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[14:45:04] *** ChanServ sets mode: +v npaperbot
[14:49:43] *** Joins: cursey (~cursey@user/cursey)
[14:50:14] *** Quits: magla (~gelignite@d5365b83.access.ecotel.net) (Read error: Connection reset by peer)
[14:50:33] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[14:51:47] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[14:53:37] *** magla is now known as jellyknight
[14:56:25] *** Joins: unknow (~i.am@user/marlboro)
[14:58:30] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:05:52] <FAT1337> :34] <FAT1337> rigger! snacky member :( boring joke...
[15:05:52] <FAT1337> [06:34] <FAT1337> where is my spoooon
[15:05:52] <FAT1337> [06:35] <FAT1337> on the kitchen...
[15:05:52] <FAT1337> [06:35] <FAT1337> so much betta ?
[15:06:59] <FAT1337> * in THE F kitchen
[15:07:17] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 246 seconds)
[15:09:11] <Milo> copy pasting your own joke while also showing you copy pasted your own joke. exactly the kind of stuff that improves a joke
[15:09:21] <FAT1337> f cat on the beautiful ffloor
[15:09:33] <FAT1337> not the keyboard
[15:09:34] <Raziel> I dunno what you're on, and I dunno if I want any
[15:09:36] <FAT1337> ..
[15:09:52] <FAT1337> no  f YEss
[15:10:26] <FAT1337> sorry NOOOOOOOOOOOOOOOOOOOOOO
[15:14:13] <FAT1337> only around 12 lines since sumtimerino
[15:14:23] <FAT1337> :)))))))))))))))))))))
[15:15:09] <Milo> maybe typescript is more suitable for you ._·
[15:15:38] *** ChanServ sets mode: +o TinoDidriksen
[15:15:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:16:13] <FAT1337> only the scripty kiddy cat..
[15:16:30] <FAT1337> :(
[15:16:34] <FAT1337> oops
[15:16:38] <FAT1337> brb
[15:16:59] <FAT1337> ok
[15:17:02] <FAT1337> bye bye
[15:17:34] <FAT1337> :
[15:17:39] *** Parts: FAT1337 (~IceChat78@user/fat1337) ()
[15:18:19] *** Joins: FAT1337 (~IceChat78@user/fat1337)
[15:23:33] <TinoDidriksen> FAT1337, when something like that happens, just say sorry. It happens to everyone. No need to spread it over 10+ extra off-topic lines, because then you just look like a spambot.
[15:26:22] *** TinoDidriksen sets mode: -o TinoDidriksen
[15:29:29] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[15:29:35] *** Joins: JohnMS_WORK (~kvirc@194.110.240.100)
[15:31:54] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[15:32:25] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[15:32:31] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[15:33:10] <hans> i want a tcp server that compiles on both windows and linux, should i ask on ##c++-general or something?
[15:33:34] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[15:33:40] <hans> iirc Boost has some tcp api but it's not in the c++ standard iirc
[15:34:01] <TinoDidriksen> #C++-general indeed. Looks like ##sockets didn't make it to Libera.
[15:34:11] <hans> thanks
[15:34:58] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Ping timeout: 260 seconds)
[15:35:43] <PJBoy> there's #networking if that counts
[15:35:58] *** Quits: FAT1337 (~IceChat78@user/fat1337) (Quit: "y")
[15:36:17] <TinoDidriksen> That's about coding, not hardware? Ok then.
[15:37:05] *** Joins: chenqisu12 (~chenqisu1@183.217.202.44)
[15:37:21] *** Quits: joji (~jojo@86.4.72.180) (Quit: Leaving)
[15:39:51] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Ping timeout: 256 seconds)
[15:42:47] *** Quits: geeknix (~pi@2001:e68:5432:518e:7d14:5ca5:9ed8:f278) (Ping timeout: 260 seconds)
[15:44:33] *** Quits: beagles (~beagles@47.55.222.129) (Quit: WeeChat 3.3)
[15:44:37] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:46:51] *** Joins: FAT1337 (~IceChat78@24.48.89.219)
[15:46:51] *** Quits: FAT1337 (~IceChat78@24.48.89.219) (Changing host)
[15:46:51] *** Joins: FAT1337 (~IceChat78@user/fat1337)
[15:46:59] *** Joins: v4mp (~v4mp@user/v4mp)
[15:47:23] *** Joins: beagles (~beagles@47.55.222.129)
[15:48:42] *** Parts: FAT1337 (~IceChat78@user/fat1337) ()
[15:48:42] *** Joins: FAT1337 (~IceChat78@user/fat1337)
[15:50:27] <furrymcgee> I believe there is <experimental/socket>
[15:52:11] *** Quits: FAT1337 (~IceChat78@user/fat1337) (Quit: "beautiful cat come here telling me yur hungry at least leave a byte of chicken.")
[15:54:45] *** Joins: FAT1337 (~IceChat78@24.48.89.219)
[15:54:45] *** Quits: FAT1337 (~IceChat78@24.48.89.219) (Changing host)
[15:54:45] *** Joins: FAT1337 (~IceChat78@user/fat1337)
[15:54:53] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 246 seconds)
[15:57:04] * FAT1337 slaps FAT1337 with a big red brick
[15:57:14] * FAT1337 slaps FAT1337 with a rainbow trout
[15:57:39] <urdh> please stop
[15:59:58] *** ChanServ sets mode: +o ville
[16:00:00] *** Joins: geeknix (~pi@2001:e68:5432:af1f:781b:3d59:e4b7:2808)
[16:00:08] *** ville sets mode: +b $a:FAT1337
[16:00:18] <ville> FAT1337: find another channel for your nonsense
[16:00:22] *** FAT1337 was kicked by ville (FAT1337)
[16:00:25] *** ville sets mode: -o ville
[16:03:00] <AliceMeows> https://godbolt.org/z/osTdKr8vT Is there any way to fix this?
[16:08:11] <anyone> Pity the fool who bought the "cat" argument ;)
[16:11:21] *** Joins: Leone (~Leo@216.154.4.77)
[16:14:12] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 268 seconds)
[16:16:28] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:18:56] <TinoDidriksen> I checked the logs for all of FAT's activity and there were actual relevant C++ questions, hence the benefit of doubt. But then they blew it with the slap.
[16:19:03] <dzoe> hans: asio / boost::asio isn't enough? Also I vaguely remember it was being proposed to become part of the standard...
[16:20:05] <AliceMeows> Is it legal to provide empty std::pointer_traits<T>?
[16:20:19] <veverak> dzoe: it was, but it got stuck in the process
[16:21:36] *** Quits: v4mp (~v4mp@user/v4mp) (Ping timeout: 268 seconds)
[16:21:57] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca)
[16:22:06] *** Quits: yosef` (~user@223.73.113.250) (Remote host closed the connection)
[16:24:00] <dzoe> veverak: and the difference/convergence between asio / boost::asio has already been "resolved" or are those still two different beasts? (Didn't use it for anything serious for many years now)
[16:24:57] <AliceMeows> If my understanding is correct then per to this https://eel.is/c++draft/pointer.traits#types-1 I should not specialize std::pointer_traits without providing element_type so its not sfinae friendly which means I can't get out_ptr to work unless if I specialize out_ptr_t<T>?
[16:25:44] <veverak> dzoe: the last information that I know is that the process got stuck, because part of the commity wants one general asio model for everything and othe rpart thinks that is a bad idea and we need different models (which would not be compatible)
[16:26:24] <AliceMeows> veverak: then they could agree to disagree and use libraries and leave the rest of us alone
[16:26:31] <veverak> ehmm, I guess yeah
[16:26:46] *** Quits: zer0x (~zer0x@58.186.50.203) (Ping timeout: 260 seconds)
[16:26:58] <veverak> I used boost::asio lately for project because it is easiest way for me to get interface for interaction with serial devices (usb uart bridge)
[16:27:12] <veverak> but that is simple usage, not sure if it scales or anything
[16:27:49] <veverak> AliceMeows: but I would not mind that some asio thingy with tcp support would exist in std::, one does not have to use it...
[16:27:51] <ville> dzoe: yes parts of boost asio made it as far as being called "network ts", but then things start to happen
[16:28:08] <dzoe> I used it for TCP quite a few times and it was OK.
[16:28:19] *** Joins: trumae (~trumae@2804:18:86e:cd79:1:0:4570:9f01)
[16:28:30] <veverak> dzoe: btw: just tcp or with some encryption?
[16:28:56] <ville> dzoe: one of the "problems" is that other things besides networking wants to be asynchronous. so programmers being programmers they want to unify over everything
[16:29:06] *** Parts: m_ben (~m_ben@user/m-ben/x-7429725) (WeeChat 3.4.1)
[16:29:23] <dzoe> veverak: just tcp - actually for one ancient project it was UDP and encryption (and custom C++ wrapper for TAP driver)
[16:29:37] <veverak> ville: but some programmers also learned from history and know that "one universal thing that unifies everything" can end up being too useless and too complex ...
[16:30:06] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Remote host closed the connection)
[16:30:15] <dzoe> ville: that's exactly the part I thought would be merged first - but I do not know all the differences between current async/thread/whatever parallel approaches both in standard libarary and asio.
[16:30:38] <dzoe> It's mostly wrappers around wrappers anyway.
[16:30:48] <ville> dzoe: right now the standard library has no model. well not much of a one to speak of
[16:30:55] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[16:31:24] <dzoe> Ah... so that would explain why it got stuck so early in the process ;-)
[16:31:53] <ville> dzoe: so what happened, as veverak pointed out different groups of people came up with two different models. and they are not arguing which to pick.
[16:32:09] <ville> dzoe: early? actually really late. it made it to be a TS
[16:32:48] <ville> err now arguing
[16:33:21] *** Quits: daswf852 (~daswf852@user/daswf852) (Ping timeout: 256 seconds)
[16:33:21] <veverak> well, I am in the "opinionated non-too-general stuff" part of my developers life
[16:33:39] <dzoe> The truth is, that the latest thing I've done in C++ used thread/counting_semaphore/binary_semaphore/atomic/mutex to implement a generic threadpool for computationally-intensive algorithms.
[16:33:42] <veverak> so I would not mind if they would provide net lib that is good enough for basic stuff and leave other use cases for libraries
[16:33:57] *** Joins: daswf852 (~daswf852@user/daswf852)
[16:33:59] <ville> so network TS people, call them group A, at least have a very well-tested model. and group B has a no-public production-tested implementation of their idea
[16:34:09] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 248 seconds)
[16:34:42] <AliceMeows> veverak: the problem I see is that quality of implementation might not be great and users are forced to either use a library or implement their own which ends up rendering parts of the standard completely useless while maintainers have to keep maintaining code anyone hardy uses
[16:34:50] <dzoe> And I assume that the async part offers the same freedom as the parallel part of the standard. Which is kind of very C++ anyway. Probably OK for me...
[16:34:50] *** Joins: v4mp (~v4mp@user/v4mp)
[16:35:26] <veverak> AliceMeows: sure, the approach has to be still executed well
[16:35:43] <veverak> but we do have boost::asio to copy, so I think there is a space for that
[16:36:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:36:22] <ville> veverak: and yes of course people can and do go overboard with these things... trying to make something work for everything
[16:36:44] <AliceMeows> That is unfortunately not possible to do
[16:36:47] <veverak> ville: I think that networkin or asio in general is one of the things where you can't really win
[16:37:07] <ville> AliceMeows: doesn't stop people from trying
[16:37:14] *** Quits: jokoon (~eio@2a01:e0a:542:e160:c53c:c8c0:ea5c:ff3f) (Quit: Leaving)
[16:37:18] <AliceMeows> It didn't stop me either, I just had to learn the hard way
[16:37:32] <veverak> and I think it's OK, in my new job we won't be using the std::thread and other tools from std:: for pararelism
[16:37:33] <ville> yeah everyone has to
[16:37:45] <veverak> does not imply it is bad, it's just that we prefer something else
[16:38:22] <ville> me 20 years ago had very different ideas compared to me today
[16:38:34] <veverak> same, but I had 8 years, so ...
[16:38:43] <AliceMeows> We all change :)
[16:38:44] <veverak> anyway
[16:39:01] <veverak> is there some tendency to allow variadic attributes in struct/unon?
[16:39:05] <veverak> *union
[16:39:28] <veverak> `template< typename ... Ts > union UU{ Ts ... attrs; }` for example?
[16:40:01] <AliceMeows> Your best bet is using a tuple with structs
[16:40:09] <veverak>  /o\
[16:40:14] <ville> AliceMeows: yes think you have to have the pointer type at least
[16:40:33] <veverak> I am not a friend with std::variant specifically, as on -O0 it produces a lot of code if you use it a lot
[16:40:51] <veverak> I mean, I love to use it, but at the scale I use it the implementation details became visible
[16:40:51] <AliceMeows> veverak: I'm not sure if it could be hacked in any way to work with union though
[16:41:23] <ville> veverak: we'll see how pattern matching goes. that pairs fairly well with language variant. as far as i can tell that's still in the plans
[16:41:48] <veverak> and one of the reasons (I think) is that internally it uses something like: "template< T, ... Ts> union storage{ T val; storage<Ts...> other; }"
[16:41:55] <AliceMeows> ville: even if I change R to int* it still errors so I'm not sure what I'm doing wrong
[16:42:22] <ville> AliceMeows: sorry bit too much code for me to read/understand on my lunch break
[16:42:26] <veverak> at this point std::get for variant and it's constructor takes about 4-5% of my binary for embedded device on -O0
[16:42:38] <AliceMeows> ville: no worries :)
[16:42:47] <veverak> and I was thinking, that if we could write `union { Ts... attrs;}` that could be reduced
[16:42:52] <AliceMeows> I appreciate any help I can get
[16:42:53] <veverak> (as the internal recursive structure would not be needed)
[16:43:13] <veverak> ville: I guess pattern matching still internally creates bunch of std::get<> calls?
[16:43:21] <veverak> (and that still does not solve constructor /o\)
[16:43:31] <AliceMeows> That would be implementation detail
[16:44:02] <AliceMeows> How would you suggest Ts... attrs; work? how would you referrer to each one of those?
[16:44:06] <ville> yes/no/maybe? i think there will be a protocol to follow to be able to use your types with pattern matching, so that might...
[16:44:28] <ville> but the pattern matching syntax could-should be smart and be overloaded for the language variant
[16:44:57] <veverak> AliceMeows: that's only missing part... I mean I could implement function for that
[16:45:07] <veverak> but that would be recursive too :/
[16:45:21] <veverak> so Ts... attrs; + way to access n-th attribute?
[16:45:26] <ville> if you do pattern matching on the lanuage variant then that can do "whatever". if you do it on a library type/your type it may result in something less optimal
[16:45:59] *** Quits: JohnMS_WORK (~kvirc@194.110.240.100) (Ping timeout: 246 seconds)
[16:46:25] <ville> not to mention compiler errors are expected to be more accurate on the language variant, rather than the usual template crypted ones
[16:46:49] <veverak> do they?
[16:46:57] <AliceMeows> That is unfortunately one of the cases where language support is better than library code
[16:50:38] *** Joins: Atque (~Atque@user/atque)
[16:51:45] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 248 seconds)
[16:51:54] <AliceMeows> veverak: yes, if you ever developed something really complicated with templates and accidentally messed up somewhere you'd get some cryptic and unreadable error message from just about any compiler
[16:52:30] <AliceMeows> Its why we have concepts now
[16:53:19] <veverak> AliceMeows: well, I realized that I just trained my brain to pattern match that
[16:53:32] <veverak> "so this error X here over Y means that somewhere in Z is W type of an error"
[16:53:42] <veverak> but yeah, concepts are nice :)
[16:53:50] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[16:53:56] *** Joins: Guest69 (~Guest69@ip68-105-113-105.sd.sd.cox.net)
[16:54:04] <veverak> Althou I have tendency to use them mostly for replacement of SFINAE
[16:54:15] <ville> veverak: yes you can do that for "some", but once you have recursively defined types the ::<> soup just drowns out everything when a single type takes 20 lines to print
[16:54:29] <AliceMeows> It gets worse when you have some error stating that T cannot be casted to your X type without the compiler specifying what type T is
[16:55:00] <veverak> AliceMeows: i most cases I can think of now I am able to infer that from the context, but yeah it is not nice
[16:55:14] <veverak> ville: I managed to generate template errors that did not fit into my terminal history
[16:55:21] <veverak> I know how this can end up badly
[16:55:23] <veverak> :)
[16:55:25] <PJBoy> I'm a huge fan of MSVC citing the standard in that static_assert message haha
[16:55:58] <AliceMeows> I think its a recent thing, it wasn't like that in the past but it still doesn't help me solve my problem
[16:56:05] <Guest69> is reading/writing to a bool atomic? does it require a mutex around it if multiple threads are accessing it simultaneously?
[16:56:22] <AliceMeows> If its atomic then you don't need a mutex, that is the whole point of having atomic types
[16:56:28] <ville> Guest69: yes/no/maybe. as far as the standard goes no
[16:56:28] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[16:56:43] <Guest69> ville: so, is it platform specific?
[16:56:50] <AliceMeows> Since when?
[16:57:04] <ville> Guest69: no. as far as the standard goes it's straight ub have a datarace
[16:57:13] <AliceMeows> If it can be no or maybe then what is even the point in having atomic types?
[16:57:27] <ville> Guest69: but yes platforms are free to fill-in-the-details
[16:57:33] <barometz> the question was about a bool, not about an atomic bool
[16:57:59] <AliceMeows> Oh oops, yeah in that case ville is correct
[16:58:24] <Guest69> it's equally UB for both reading and writing a bool?
[16:58:28] <ville> Guest69: but atomics are not just about that you don't have writes/reads cut off
[16:58:52] <ville> Guest69: they are also about publishing and receiving updated values in the first place
[16:59:08] <AliceMeows> Guset69: I do know that specifically on x86 you can read from multiple threads and it'll work but I'm not sure what the standard has to say about it
[17:00:13] <ville> Guest69: for example on an x86 even reading/writing an int is "atomic" in the sense that won't read a mangled value that is half-way written to by something else i believe
[17:00:14] <AliceMeows> However reading and writing at the same time from different threads or writing from different threads at the same time is UB
[17:00:40] <AliceMeows> ville: that is not entirely correct, it can actually mess up with multi core cpus
[17:00:44] <ville> Guest69: but you can't know when you get that update if you don't do something about it
[17:02:00] <ville> AliceMeows: not sure if multiple cpu machine makes it any less "atomic", notice the quotes, as i used in that sentence. yes it still leaves out the part about real atomics where you know when you get an changes propagated through
[17:03:04] <AliceMeows> In theory multi cpu machine might not but multi core most likely will
[17:03:16] <ville> will what?
[17:03:25] <ville> write an int partially?
[17:03:34] <AliceMeows> Yes, you might get junk out of it
[17:03:45] <ville> on an x86 specifically
[17:03:45] <AliceMeows> I had that happen to me when I was rookie haha
[17:03:48] <AliceMeows> Yes
[17:04:03] *** Quits: Cyp (~cyp@213.237.84.236) (Excess Flood)
[17:04:32] *** Joins: Cyp (~cyp@213.237.84.236)
[17:06:00] <AliceMeows> Guest69: back to the question, you most likely should not be doing things like that unless if you know what you're doing and your code isn't meant to be cross platform
[17:08:04] *** Joins: proller (~p@2a02:6b8:b081:20::1:2a)
[17:08:55] <Guest69> okay thanks
[17:12:16] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:16:01] *** Joins: jplejacq (~jplejacq@152.42.120.4)
[17:17:06] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 268 seconds)
[17:19:04] *** Quits: ironman (~ironman@2405:201:1010:b051:aebb:ac9b:cf88:4008) (Quit: Leaving)
[17:21:09] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[17:23:19] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[17:29:08] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[17:30:26] *** Joins: Atque (~Atque@user/atque)
[17:30:44] *** Joins: quartz (~quartz@user/quartz)
[17:32:53] *** Quits: chenqisu12 (~chenqisu1@183.217.202.44) (Ping timeout: 246 seconds)
[17:33:11] *** Joins: jesopo (~jess@libera/staff/cat/jess)
[17:33:20] *** jesopo is now known as jess
[17:38:32] *** Joins: blackout69 (~blackout6@net-31-156-121-216.cust.vodafonedsl.it)
[17:38:36] *** Quits: dld (~davidlowr@2601:197:600:1210:295d:ca2a:3a31:19f2) (Ping timeout: 240 seconds)
[17:39:24] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[17:42:11] *** Parts: blackout69 (~blackout6@net-31-156-121-216.cust.vodafonedsl.it) ()
[17:42:20] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:43:15] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:48:18] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[17:52:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:54:06] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:56:36] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[18:05:31] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[18:07:36] *** Joins: abode (~abode@2a00:f28:4c1:349d:8230:49ff:fe6e:36b5)
[18:08:15] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4c0b:4f04:456a:6399:b8a3:e8ee) (Quit: Leaving)
[18:12:18] *** Joins: ivii (~ivan@user/ivii)
[18:14:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:17:25] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:17:50] *** Joins: abvoavbop (~vabovboal@ua-213-113-147-175.bbcust.telenor.se)
[18:22:11] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[18:25:00] *** Quits: abvoavbop (~vabovboal@ua-213-113-147-175.bbcust.telenor.se) (Quit: Leaving)
[18:28:59] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[18:29:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:29:52] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[18:32:52] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:33:22] *** Joins: dld (~davidlowr@107.126.253.180)
[18:33:36] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[18:36:02] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 268 seconds)
[18:38:41] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 246 seconds)
[18:38:41] *** Quits: proller (~p@2a02:6b8:b081:20::1:2a) (Ping timeout: 245 seconds)
[18:39:07] *** Quits: dld (~davidlowr@107.126.253.180) (Ping timeout: 268 seconds)
[18:40:22] *** Joins: SaltHilStroller_ (~SaltHillS@199.249.111.186)
[18:40:37] *** Joins: dld (~davidlowr@107.126.253.180)
[18:40:45] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[18:41:35] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[18:43:13] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:43:21] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[18:44:46] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[18:44:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[18:45:04] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[18:45:04] *** ChanServ sets mode: +v npaperbot
[18:45:58] *** Joins: Cyp_ (~cyp@213.237.84.236)
[18:46:23] *** Quits: Cyp (~cyp@213.237.84.236) (Ping timeout: 260 seconds)
[18:46:32] *** Quits: SaltHilStroller_ (~SaltHillS@199.249.111.186) (Ping timeout: 272 seconds)
[18:47:59] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 256 seconds)
[18:49:51] *** Joins: proller (~p@2a02:6bf:fff0:1:9287:1625:4183:ccf2)
[18:55:29] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 248 seconds)
[18:56:25] *** Parts: m_ben (~m_ben@user/m-ben/x-7429725) (WeeChat 3.4.1)
[19:03:02] *** Quits: Cyp_ (~cyp@213.237.84.236) (Quit: Konversation terminated!)
[19:03:29] *** Quits: proller (~p@2a02:6bf:fff0:1:9287:1625:4183:ccf2) (Ping timeout: 248 seconds)
[19:04:01] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:9e39:9355:8e9b:1e79)
[19:04:03] *** Joins: Cyp_ (~cyp@213.237.84.236)
[19:04:57] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:9e39:9355:8e9b:1e79) (Remote host closed the connection)
[19:06:13] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 260 seconds)
[19:06:20] *** Quits: dld (~davidlowr@107.126.253.180) (Ping timeout: 246 seconds)
[19:06:47] *** Joins: proller (~p@2a02:6b8:0:40c:7ebf:9b54:ebb8:6daa)
[19:07:46] *** Joins: rajkosto (~rajkosto@93-87-175-157.dynamic.isp.telekom.rs)
[19:07:51] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[19:13:24] *** Joins: unlink2 (~unlink@p200300ebcf023c003405202aedecaeca.dip0.t-ipconnect.de)
[19:13:45] *** Quits: Cyp_ (~cyp@213.237.84.236) (Excess Flood)
[19:14:17] *** Joins: Cyp_ (~cyp@213.237.84.236)
[19:15:27] *** Quits: jellyknight (~gelignite@d5365b83.access.ecotel.net) (Quit: Stay safe!)
[19:16:45] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[19:19:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:20:45] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[19:21:25] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 256 seconds)
[19:21:40] <CarloWood> Why does this not compile when you uncomment line 25?
[19:21:42] <CarloWood> https://wandbox.org/permlink/bcL3M5ms320Mrl5K
[19:21:55] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 240 seconds)
[19:22:00] *** Joins: Inline (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de)
[19:22:55] *** Quits: hehe (~hehe@125.99.177.198) (Quit: leaving)
[19:24:15] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:26:17] <AliceMeows> I'll take a look if you'll post it on godbolt
[19:28:02] <CarloWood> https://godbolt.org/z/ErE3rj6Ex
[19:28:34] *** Joins: dld (~davidlowr@2620:6e:6000:2900:38c1:e5a4:b065:9eb3)
[19:31:02] <AliceMeows> It seem like a bug in gcc and clang
[19:35:01] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:36:32] <AliceMeows> CarloWood: https://godbolt.org/z/Pcs7E3GGG
[19:36:34] <AliceMeows> This works
[19:37:24] <CarloWood> What did you change?
[19:37:30] <AliceMeows> consteval to constexpr
[19:37:32] <AliceMeows> Its commented too
[19:37:41] <CarloWood> Oh I see it :)
[19:37:58] <CarloWood> I don't understand it though - but ok.
[19:38:11] <AliceMeows> consteval means compile time context use only
[19:38:20] <AliceMeows> While constexpr may or may not be compile time
[19:38:39] <CarloWood> Oh well - the whole idea is that *is* compile time.
[19:39:00] <CarloWood> I don't want this to use cpu cycles during runtime.
[19:39:00] <AliceMeows> cout however isn't compile time so it cannot be used in that context
[19:39:07] <AliceMeows> It shouldn't be
[19:39:22] <CarloWood> I never said I want cout to be compile time.
[19:39:30] <CarloWood> Just function_name
[19:39:45] <AliceMeows> But the context your function is used isn't compile time which is why it failed to compile
[19:40:02] <CarloWood> I want to do constexpr string manipulation on std::source_location::function_name()
[19:40:14] <CarloWood> heh
[19:40:17] <AliceMeows> That can be done
[19:41:29] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[19:41:48] <CarloWood> Looking at the assembly output I see that the output string is hardcoded; so it looks compile time to me. I don't understand what you are saying therefore :(
[19:42:15] <AliceMeows> consteval can only be used with something that is 100% compile time
[19:42:47] <CarloWood> And what is not 100% compile time here? *points at the assembly code* - the output is already known at compile time.
[19:43:08] <PJBoy> I'm a bit confused too actually
[19:43:17] <CarloWood> It definitely has nothing to do with the cout.
[19:43:19] <PJBoy> the cout bit is unimportant
[19:44:02] <CarloWood> The "problem" - that I can think of, is that `Location::m_location` can't be static.
[19:44:06] <PJBoy> seems you can't call consteval functions from constexpr functions
[19:44:10] <CarloWood> Because it is used in a template.
[19:44:17] <CarloWood> at line 25.
[19:44:34] <CarloWood> Therefore m_location can't be constexpr.
[19:44:35] <PJBoy> if you upgrade foo to consteval, then it works
[19:44:45] <PJBoy> https://godbolt.org/z/nesPc1oGb
[19:45:06] <CarloWood> but foo isn't consteval - it's just a test function
[19:45:25] <PJBoy> yeah I know
[19:45:36] <PJBoy> seems consteval functions can't be used in your test function
[19:45:39] *** Quits: rajkosto (~rajkosto@93-87-175-157.dynamic.isp.telekom.rs) (Quit: Leaving)
[19:46:00] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[19:46:03] <AliceMeows> Strangely msvc does compile it so I'm not sure which compile is right here
[19:46:04] <CarloWood> So it has to be the fact that foo can have multiple instantiations, requiring multiple instantions of loc - perhaps the problem is that this can only be resolved at link time.
[19:46:08] <PJBoy> which seems a bit... wrong
[19:46:48] <PJBoy> consteval is worded extremely cryptically in the standard, so it's very unclear who's right (if either)
[19:47:34] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[19:47:42] <CarloWood> Ok - next step: add a constexpr member function to Location that return just the function name - not the return type, and not the arguments.
[19:47:43] <AliceMeows> I do find it a bit odd because where the context matters constexpr would perform its duty and wont error so I'm not entirely sure the purpose of consteval
[19:48:19] <CarloWood> For a start... let it return "n::A<T, Args>::foo"  although I'd prefer to replace T and Args, but well :/.
[19:49:30] *** Joins: sabry (~sabry@197.37.228.236)
[19:49:35] *** Joins: xkuru (~xkuru@user/xkuru)
[19:50:08] *** Joins: Mat_42 (~mat_42@194.12.130.217)
[19:53:44] <AliceMeows> https://eel.is/c++draft/expr.const#13 I think msvc is wrong here and gcc/clang are correct
[19:54:58] *** Quits: Mat_42 (~mat_42@194.12.130.217) (Ping timeout: 268 seconds)
[19:55:17] *** Quits: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net) (Remote host closed the connection)
[19:57:15] <PJBoy> so the expression is `loc.function_name()`, and it's not in an immediate function context, so it's an immediate invocation
[19:57:36] <PJBoy> meaning it's a constant expression
[19:59:29] <PJBoy> weird how it's not an immediate invocation if it's in a consteval function
[20:01:19] <CarloWood> I can't even convert function_name() to std::string constexpr :/
[20:01:37] <CarloWood> Lets alone start doing constexpr string manipulations.
[20:02:18] <PJBoy> then all the way over here https://timsong-cpp.github.io/cppwp/n4868/expr.prim.id#general-3 it says immediate functions can only be named in immediate function contexts
[20:03:06] <PJBoy> *or* as a subexpression of an immediate invocation
[20:03:41] <PJBoy> so consteval functions can definitely be called outside of consteval functions
[20:04:12] <AliceMeows> Yes, should be but the standard is like the bible, anyone can interpret it however they see fit because some stuff just aren't clear enough
[20:04:49] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:04:49] <PJBoy> it's definitely not clear
[20:05:04] <CarloWood> There is a difference though - you can ask the C++ committee what they meant :p
[20:05:11] <PJBoy> as far as I can tell though MSVC seems to br right
[20:05:29] <PJBoy> I don't see any reason to disallow that call
[20:08:34] <AliceMeows> Probably should be but I'm really not sure at this point which one is right
[20:12:09] *** Quits: krzych (krzych@nroot.pl) (Remote host closed the connection)
[20:13:31] *** Joins: krzych (krzych@nroot.pl)
[20:14:27] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[20:14:44] *** Quits: ville (~ville@user/ville) (Read error: Connection reset by peer)
[20:16:48] *** Joins: ville (~ville@user/ville)
[20:19:38] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 272 seconds)
[20:21:22] *** Joins: sonic (~sonic@user/sonic)
[20:21:38] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:21:49] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Remote host closed the connection)
[20:22:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:22:48] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[20:23:49] <AliceMeows> CarloWood: https://godbolt.org/z/cGTYqxqoe
[20:24:05] *** Joins: sh00p (~z@89-253-71-70.customers.ownit.se)
[20:26:32] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[20:28:05] *** Quits: sabry (~sabry@197.37.228.236) (Quit: Client closed)
[20:28:08] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[20:31:35] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:31:39] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[20:32:20] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[20:36:06] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:70be:3437:d6be:b5ae)
[20:38:09] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:39:19] *** Joins: user24037 (~user47239@user/user282069)
[20:39:33] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00) (Ping timeout: 260 seconds)
[20:46:30] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[20:48:14] *** Quits: abode (~abode@2a00:f28:4c1:349d:8230:49ff:fe6e:36b5) (Remote host closed the connection)
[20:54:06] *** Joins: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[20:54:58] *** Joins: sabry (~sabry@197.37.228.236)
[20:59:52] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[21:00:03] *** Joins: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:d156:7928:3fcf:230d)
[21:00:24] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[21:02:15] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[21:09:14] *** Quits: andreasbuhr (~quassel@p549dbec6.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:09:17] *** Quits: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993) (Remote host closed the connection)
[21:11:08] *** Joins: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993)
[21:15:14] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[21:15:42] *** Quits: sabry (~sabry@197.37.228.236) (Quit: Client closed)
[21:16:13] *** Joins: nostar (~nostar@68.51.221.108)
[21:16:48] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[21:16:48] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[21:16:48] *** Joins: nortoh (~nortoh@user/nortoh)
[21:17:28] *** Parts: jess (~jess@libera/staff/cat/jess) ()
[21:19:29] *** Quits: MajorBiscuit (~MajorBisc@c-001-003-047.client.tudelft.eduvpn.nl) (Ping timeout: 248 seconds)
[21:22:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:23:12] *** Joins: RoKenn (~RoKenn@2001:a61:35f0:c501:9056:bc03:7a33:55af)
[21:23:13] *** Quits: RoKenn (~RoKenn@2001:a61:35f0:c501:9056:bc03:7a33:55af) (Changing host)
[21:23:13] *** Joins: RoKenn (~RoKenn@user/rokenn)
[21:24:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:25:02] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[21:27:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:28:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:37:24] *** Quits: irf21k (~irf21k@2401:4900:33c0:231a:2:2:eaeb:d398) (Ping timeout: 240 seconds)
[21:39:13] <CarloWood> AliceMeows: thx - but foo an arbitrary function for which this has to work, it can not be constexpr.
[21:39:26] <CarloWood> foo is*
[21:41:05] <AliceMeows> What do you mean?
[21:41:22] <CarloWood> You made foo constexpr
[21:42:21] *** Joins: nvmd (~weechat@user/nvmd)
[21:43:04] <CarloWood> { constexpr std::string s(f()); } consteval char const* f() { return "wut"; }
[21:43:04] <geordi> error: 'string{string::_Alloc_hider{((char*)(& s.string::<anonymous>.string::<unnamed union>::_M_local_buf))}, 3, string::<unnamed union>{char [16]{'w', 'u', 't', 0}}}' is not a constant expression
[21:43:23] <AliceMeows> std::string can't be constexpr
[21:43:24] <CarloWood> not sure if geordi is using c++20 :/
[21:43:48] <CarloWood> It is as of C++20
[21:45:00] <AliceMeows> No, it cannot be used like that
[21:45:04] *** Joins: irf21k (~irf21k@2401:4900:16fa:da35:2:2:f001:5302)
[21:46:42] <PJBoy> geordi is using C++20, yeah
[21:46:48] <AliceMeows> constexpr string means it can be used within constexpr context but not directly
[21:47:32] <PJBoy> yeah stuff using constexpr std::allocator is limited
[21:47:43] <PJBoy> can't escape a constexpr function
[21:47:54] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:48:03] <CarloWood> Then why does the constructor of std::string(char*) have 'constexpr'??
[21:48:14] <CarloWood> https://gyazo.com/43fd4fa87aed1e12deec4fef01fa675c
[21:48:15] <PJBoy> because it is constexpr
[21:48:18] <PJBoy> just limited
[21:48:27] <CarloWood> makes no sense
[21:48:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:d52e:866a:6f3a:60a1)
[21:48:51] <Zogatribe> { constexpr std::string s; }
[21:48:51] <geordi> error: 'string{string::_Alloc_hider{((char*)(& s.string::<anonymous>.string::<unnamed union>::_M_local_buf))}, 0, string::<unnamed union>{char [16]{0}}}' is not a constant expression
[21:49:02] <PJBoy> { constexpr int x = f(); } constexpr int f() { string s("lalala"); return s.size(); }
[21:49:03] <geordi>  
[21:49:13] <PJBoy> see it's perfectly constexpr
[21:49:31] <PJBoy> just that `s` can't escape that function f
[21:50:03] <PJBoy> that's the limitation
[21:50:09] <CarloWood> { constexpr char const* p = f(); cout << p; } constexpr char const* f() { string s("lalala"); return s.c_str(); }
[21:50:09] <geordi> error: '(const char*)(& s.string::<anonymous>.string::<unnamed union>::_M_local_buf)' is not a constant expression
[21:50:58] <kalven> afaik, any allocation that happens in a constexpr context must be released before it's done.
[21:51:03] <AliceMeows> { constexpr char const p[10] = f(); cout << p; } constexpr char const* f() { string s("lalala"); return s.c_str(); }
[21:51:03] <geordi> error: array must be initialized with a brace-enclosed initializer
[21:52:44] <PJBoy> that's an impressive thing to catch
[21:53:23] <PJBoy> anyways you *can* copy to an array and return that
[21:53:29] <PJBoy> but it's a pain
[21:53:45] <AliceMeows> Using C++ is pain in general
[21:54:09] <Alipha> Guest69: the compiler needs to know that the bool can be written from another thread. eg, if you had `while(b && x < 1000000) { x++; }`, the compiler may optimize that to `if(b) { while(x < 1000000) { x++; }}` because it doesn't know that b can be changed from another thread
[21:54:40] <Alipha> Guest69: you don't need a mutex, but you do need std::atomic<bool>
[21:55:05] <CarloWood> https://godbolt.org/z/KTdbz73nv
[21:55:06] <CarloWood> maybe
[21:57:42] *** Joins: jellie (~luv_panda@user/jellie)
[21:58:43] <CarloWood> Alipha: that doesn't like a very good example; if x is a local, non-atomic variable - there is nothing that stops a compiler from doing: int x = b ? 1000000 : 0;
[21:59:43] <CarloWood> cause there is no synchronization - it doesn't matter if b is atomic or not.  Apart from that it is UB when one thread reads it while another writes to it.
[21:59:48] <PJBoy> assume x isn't an int
[22:00:10] <Guest69> Alipha: marking b as virtual would prevent such an optimization tho, right? but it still wouldn't make it atomic?
[22:00:15] <CarloWood> well, then if(b) { while(x < 1000000) { x++; }}
[22:00:28] <PJBoy> which is what Alipha wrote
[22:00:36] <CarloWood> but in my case b is atomic
[22:01:08] <PJBoy> if you b is atomic, then it won't be optimised to that
[22:01:39] <CarloWood> Some thread writes to b - there is no guarantee that that even arrives at another thread except "within reasonal time".  So there is no reason to read b 1000000 times.
[22:01:54] <Guest69> Alipha: sorry, not virtual. volatile*
[22:03:11] <CarloWood> I think that volatile prefents the optimization yes.  But it still has to be atomic for it not to be UB if there is no other synchronization and one thread can write to it while another reads it (or also writes to it)
[22:03:57] <CarloWood> prevent too
[22:04:16] <Guest69> I guess that std::atomic's are internally defined as volatile or effectively so?
[22:04:45] <PJBoy> CarloWood, ok that was a good point
[22:05:01] <PJBoy> unless x++ does some kind of synchronisation
[22:05:03] <PJBoy> >_>
[22:05:11] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:05:28] <CarloWood> Guest69: I don't think they are?
[22:05:49] <PJBoy> volatile doesn't necessarily have any effect at all
[22:06:08] <Zogatribe> volatile has nothing to do with threads
[22:06:10] <CarloWood> Well. I suppose they are when you use the default memory order... seq_cst
[22:06:29] <CarloWood> but not when you use memory_order::relaxed
[22:06:44] <PJBoy> certainly doesn't give you atomic access
[22:07:16] <PJBoy> the one thing you're likely to get from volatile is a new access every time you read/write from one
[22:07:42] <PJBoy> but it doesn't sync or prevent data races or torn reads or anything like that
[22:08:36] <Guest69> PJBoy: from volatile is a "new access" What do you mean by new access?
[22:08:55] <CarloWood> Makes me wonder though, if you do:  std::atomic_bool b{};  b = true; b = true; b = true;   then does it have to write three times because you are doing a store(true, std::memory_order::seq_cst)?
[22:09:23] <PJBoy> Guest69, like it won't reuse the previously loaded value
[22:09:39] <Guest69> ok thanks
[22:09:42] <PJBoy> and won't restore a value that hasn't changed
[22:09:47] <PJBoy> *re-store
[22:10:33] <Zogatribe> if you are using volatile then the chances are you shouldn't be
[22:11:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[22:11:44] <Guest69> Btw, I noticed that there's still a few missing core language features from clang and gcc for c++20, notably modules. Any word on modules will get full support? https://en.cppreference.com/w/cpp/compiler_support#cpp20
[22:12:24] <CarloWood> https://godbolt.org/
[22:12:37] <CarloWood> It writes multiple times PJBoy
[22:12:50] <PJBoy> *will
[22:12:53] <PJBoy> argh
[22:13:29] <PJBoy> my most common typo is negating words, and it's such a bad typo to make
[22:13:59] <Alipha> Guest69: so, volatile will prevent the optimization that i showed. however, as being discussed, volatile doesn't solve the issue with data types and/or platforms where "tearing" can occur or where a machine code instruction needs to be emitted to "flush the cache" to make the write visible to other cpus
[22:14:04] <CarloWood> oh me too! I always forget to type 'not'
[22:14:51] <CarloWood> ok wtf ... https://godbolt.org/z/8YW1r5fnc
[22:15:05] <Alipha> Guest69: plus, semantically, std::atomic<bool> is better to use than volatile
[22:15:16] <CarloWood> That looks like it thinks that atomic *is* volatile :/
[22:15:57] <PJBoy> it probably should tbf
[22:16:10] <Zogatribe> I can't think of any use-case for volatile except memory mapped I/O
[22:17:16] *** Joins: makeyavelly (~Thunderbi@88.135.63.38)
[22:17:25] <PJBoy> I see that https://en.cppreference.com/w/cpp/atomic/atomic/store notes that the volatile qualified overload is deprecated if is_always_lock_free is false
[22:17:38] <PJBoy> so presumably if is_always_lock_free is false then you have volatile semantics
[22:19:46] <Zogatribe> volatile semantics? I was under the impression that volatile has nothing to do with thread sycnhronisation whatsoever.
[22:21:43] <AliceMeows> Does std::views::split require identical types to work? I have silently failing when the types don't match
[22:22:26] <PJBoy> Zogatribe, correct
[22:22:43] <PJBoy> note that I didn't say volatiles have atomic semantics
[22:22:43] <AliceMeows> have it*
[22:23:27] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[22:25:24] <AliceMeows> Nevermind, its that stupid null terminated character breaking it
[22:25:41] <PJBoy> I was about to say
[22:25:43] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[22:25:52] <PJBoy> the cppref example works after changing the delim to string
[22:26:16] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[22:26:41] <AliceMeows> If you use that delimiter as it is then it fails and I couldn't understand why at first
[22:29:27] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[22:30:30] *** Joins: teepee (~teepee@openscad/teepee)
[22:33:55] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:34:01] *** Joins: Tangent-Man (~Tang3nt-M@mutantalien.plus.com)
[22:35:38] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b) (Ping timeout: 260 seconds)
[22:35:48] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Remote host closed the connection)
[22:36:13] *** Joins: Tangent-Man (~Tang3nt-M@mutantalien.plus.com)
[22:38:23] *** Quits: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net) (Remote host closed the connection)
[22:40:34] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b)
[22:44:57] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[22:45:05] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[22:45:06] *** ChanServ sets mode: +v npaperbot
[22:45:10] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b) (Ping timeout: 268 seconds)
[22:45:33] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3437:6e60:ea2c:b4c1)
[22:47:18] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:47:23] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[22:48:28] *** Joins: kkd (uid425746@id-425746.lymington.irccloud.com)
[22:48:33] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[22:49:07] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[22:52:12] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7092:94e7:8ad0:d7f4) (Ping timeout: 240 seconds)
[22:53:24] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ac3f:bc36:fa50:982)
[22:53:53] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 248 seconds)
[22:53:53] *** Quits: proller (~p@2a02:6b8:0:40c:7ebf:9b54:ebb8:6daa) (Ping timeout: 248 seconds)
[22:53:57] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[22:54:33] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3437:6e60:ea2c:b4c1) (Quit: Konversation terminated!)
[22:56:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:57:40] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[23:00:08] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 246 seconds)
[23:00:08] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 246 seconds)
[23:00:12] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:02:26] *** Joins: rgrinberg (~textual@177.248.158.166)
[23:02:39] *** Quits: seifeslimene_ (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[23:02:52] *** Joins: seifeslimene_ (~seifeslim@197.2.10.72)
[23:02:55] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[23:03:38] *** Quits: irf21k (~irf21k@2401:4900:16fa:da35:2:2:f001:5302) (Ping timeout: 260 seconds)
[23:04:19] *** Joins: seninha (~seninha@user/seninha)
[23:04:56] <Guest69> In this example of set intersection code it default constructs the destination vector 'v' with 10 elements, but the two vectors it's finding the intersection of have 5 elements each, meaning it could have a maximum of 5 elements, no? am I wrong? does this make sense? https://cplusplus.com/reference/algorithm/set_intersection/
[23:05:32] <PJBoy> correct
[23:05:41] <PJBoy> cplusplus.com confirmed trash
[23:05:44] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 246 seconds)
[23:05:47] <Guest69> I would expect 10 elements for the union but not intersection
[23:06:20] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:07:32] <PJBoy> both cppreference examples get it right
[23:08:51] <ncwbqcfe> so trash that for whatever the reason instead of using std::end(first), it picks first+5....
[23:09:04] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[23:10:27] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[23:13:26] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 250 seconds)
[23:14:47] *** Quits: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:d156:7928:3fcf:230d) (Quit: Client closed)
[23:16:15] <PJBoy> wow that's even more trash than I could have possibly imagined
[23:18:00] <PJBoy> it uses a bad iterator loop, it has unnecessary parentheses around v.size(), unnecessary return, declares the vector iterator at the start of the function as if it's C89
[23:23:39] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[23:24:53] *** Joins: proller (~p@80.240.216.69)
[23:24:53] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[23:29:51] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[23:31:33] *** Joins: ko (~i.am@user/marlboro)
[23:31:46] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Remote host closed the connection)
[23:31:59] *** Quits: unknow (~i.am@user/marlboro) (Ping timeout: 246 seconds)
[23:33:11] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[23:34:22] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Remote host closed the connection)
[23:35:08] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[23:35:14] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Remote host closed the connection)
[23:36:58] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[23:37:03] *** Joins: reset (~reset@user/reset)
[23:41:49] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[23:42:21] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[23:42:38] <imMute> can we just say "cplusplus.com is shit" and move on?
[23:43:12] <AliceMeows> CarloWood: https://godbolt.org/z/TYnjcnYY5
[23:43:55] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:44:56] *** Joins: proller (~p@80.240.216.69)
[23:45:44] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:46:41] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 248 seconds)
[23:46:50] *** Quits: geeknix (~pi@2001:e68:5432:af1f:781b:3d59:e4b7:2808) (Ping timeout: 268 seconds)
[23:49:54] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 272 seconds)
[23:50:13] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
