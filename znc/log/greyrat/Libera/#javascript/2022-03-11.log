[00:00:42] <onosendi> l__q: I see, hmm.
[00:01:41] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[00:02:01] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:02:59] <mikrosis> onosendi: yes, thanks
[00:04:33] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[00:05:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[00:06:24] <teut> +  Deploy complete!
[00:06:25] <teut> Project Console: https://console.firebase.google.com/project/shopper-ui/overview
[00:06:25] <teut> Hosting URL: https://shopper-ui.web.app
[00:06:33] <teut> I got this on firebase deploy
[00:06:54] <teut> but https://shopper-ui.web.app/  has nothing and only stupid firebase message
[00:07:07] <teut> where is the website?
[00:08:07] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[00:08:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[00:09:38] *** Joins: voltage_ (voltage@user/voltage)
[00:09:43] *** Sven_vB_ is now known as Sven_vB
[00:11:01] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (Remote host closed the connection)
[00:11:59] <l__q> onosendi: Object.entries(example).map(([key, value]) => `${key} ${value};`).join("\n")
[00:12:04] <l__q> This remove commas
[00:12:24] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[00:12:40] <onosendi> l__q: yea, because you were returning an array as `defaultValue`.
[00:12:43] *** Joins: nomic (~nomic@185.217.117.88)
[00:13:15] <l__q> Yes, on #css help me one guy with this :P
[00:13:43] <l__q> onosendi: Thanks for you help
[00:13:46] <onosendi> np
[00:14:03] *** Quits: teut (~teut@103.144.92.163) (Quit: Client closed)
[00:15:37] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[00:17:37] *** Joins: src (~src@user/src)
[00:20:35] *** Quits: colordro1 (~erahhal@69.53.245.255) (Ping timeout: 256 seconds)
[00:20:35] *** Parts: onosendi (~onosendi@user/onosendi) (WeeChat 3.4)
[00:21:21] *** Joins: onosendi (~onosendi@user/onosendi)
[00:22:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[00:23:36] *** Joins: colordro1 (~erahhal@69.53.245.255)
[00:26:49] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[00:26:54] <blahboybaz> Ever feel like your in a room with brick walls, no windows, and no doors, in the dark and theres something chasing you that wants to kill you. YOu run ass fast as you can trying to get out and you run into a wall - BAM! - now you're bleeding and half conscious but you know you're about to die if you don't do something so you get up an you run the other way - BAM! - you hit anothoer wall.. over an
[00:27:00] <blahboybaz> over again you get up and you run as fast as you can only to smash into another wall.
[00:27:03] <blahboybaz> That's what solving this challenge feels like
[00:27:22] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[00:27:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:28:04] <gehn> r/oddlyspecific
[00:29:39] *** Quits: nwoob (~apple@152.57.204.88) (Ping timeout: 256 seconds)
[00:34:04] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:34:23] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[00:34:38] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[00:34:39] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[00:34:39] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[00:36:17] <blueagain> blahboybaz: I'm sure there's a way to make the challenge more approachable
[00:38:43] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[00:39:07] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[00:39:12] <austincheney> blahboybaz, no, I often feel like I am in a room with pampered people pouting about how hard life is only to go to a distant part time labor intense job where people are generally paid less and accomplish 100x more with surprising humility.  Its like being in a daycare nightmare of angry children rabid coming off sugar and craving unlimited reassurance.
[00:40:38] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[00:40:39] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[00:42:41] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[00:42:49] *** Quits: RLa (~RLa@85.253.187.184.cable.starman.ee) (Quit: Client closed)
[00:43:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:44:52] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:46:37] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:5012:a0e8:bd0f:1bd9) (Ping timeout: 240 seconds)
[00:47:15] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[00:47:35] <blahboybaz> I'm running towards another wall now - maybe this one will open up for me an let me past
[00:47:38] <blahboybaz> :p
[00:49:03] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:49:08] <blahboybaz> austincheney: If it isn't safe to make light of things then what's left?
[00:49:26] *** Joins: matsaman (~matsaman@user/matsaman)
[00:50:13] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:995c:e0f2:3e31:ae15)
[00:50:36] *** Quits: lilmonkey`` (~lilmonkey@user/lilmonkey) (Ping timeout: 240 seconds)
[00:50:54] *** Quits: ckdCreations (~ckdCreati@147.55.130.33) (Read error: Connection reset by peer)
[00:50:56] <blueagain> blahboybaz: what kind of wall
[00:51:12] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[00:53:03] *** Quits: jazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[00:54:53] *** Joins: jazzy (~jaziz@user/jaziz)
[00:57:19] <systemfault> blahboybaz: I would say that you seem to be doing fine, especially if you've never programmed in any other language before... I would say that, from what I've been seeing so far on the channel coming from you, your worst problem is skipping the basics and focusing on things that are unimportant at your level. (Using .reduce, regexes...etc)
[00:57:23] *** Joins: jazzy2 (~jaziz@user/jaziz)
[00:58:19] <systemfault> I'm not here to patronize you... but it's really a matter of learning how to walk before learning how to run.
[00:59:57] <blahboybaz> blueagain: Well I don't get to choose the test cases and I can't modify them. The ALL have to pass but everything I've tried I get caught by one or another test case out of the 5 or 6 there are. I know the implementation I choose is not what everyone may choose but it's what I chose and I'm trying to make it work in various ways. Idk how to explain it without going long and .. idk
[01:00:04] <blahboybaz> I think I'll figure it out
[01:00:14] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[01:00:22] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219)
[01:00:46] *** Joins: daoudr (~daoudr@178.197.200.184)
[01:00:54] <blahboybaz> Its related to replacing certain punctuation marks in a string with their corresponding html element but the way the test cases are formulated one of them always catches you up
[01:01:41] <blahboybaz> systemfault: That's why I'm doing this -- its a code camp challenge
[01:01:43] <blahboybaz> :)
[01:02:20] <banana_> alright save the date, June 15 party in this channel
[01:02:34] <systemfault> And you're paying the booze?
[01:02:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:02:42] <banana_> except for "IE mode enables backward compatibility and will be supported through at least 2029." but meh I call BS grandma will know how to enable that
[01:03:14] <systemfault> At least, there's a end in sight...
[01:03:28] <banana_> systemfault: maybe
[01:03:42] <banana_> seriously though we need to throw a party
[01:03:55] <banana_> 1000000%
[01:04:36] <banana_> "remember `_margin-top: 10px;` and that bullshit"
[01:04:41] <banana_> those were the days
[01:04:48] <systemfault> banana_: Make a website, share the date! :P
[01:05:04] <banana_> on this channel
[01:05:57] *** Joins: de-facto_ (~de-facto@user/de-facto)
[01:06:15] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 240 seconds)
[01:06:15] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[01:06:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[01:06:56] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[01:10:02] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[01:10:31] *** de-facto_ is now known as de-facto
[01:10:51] <banana_> well it looks like it's "After June 15, 2022"
[01:11:31] <banana_> whatever the 15th or 16th
[01:14:41] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[01:18:23] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:19:13] *** Quits: src (~src@user/src) (Quit: Leaving)
[01:20:55] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[01:22:36] *** Quits: GrandMoffTarkin (~GrandMoff@user/grandmofftarkin) (Quit: Leaving.)
[01:30:08] <blueagain> ie.rip
[01:30:14] <blueagain> wait, is a there a rip tld?
[01:30:17] <blueagain> probably not
[01:30:26] <blueagain> oh well
[01:31:35] *** Joins: x86 (~x86@162-211-34-208.bltnilaa.metronetinc.net)
[01:31:55] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[01:32:23] *** Quits: x86 (~x86@162-211-34-208.bltnilaa.metronetinc.net) (Client Quit)
[01:32:49] *** Joins: x86_ (~x86@162-211-34-208.bltnilaa.metronetinc.net)
[01:32:59] *** Joins: redcat (~dev@user/redcat)
[01:33:28] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[01:33:33] <redcat> I am using vite/rollup to bundle, and I have a background.ts that needs to be transpiled and then moved to dist/ dir, however since it is not imported anywhere, it's just sitting there like a duck. Is this possible with vite, or must I write a script ?
[01:34:09] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[01:34:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:35:13] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:36:37] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:37:59] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:39:33] <blahboybaz> Well, I'm always coming around here asking for help with my little, trivial challenges and venting frustration sometimes. systemfault I appreciate your encouragement it helps. Fwiw this is what I came up with: https://onecompiler.com/javascript/3xv4cjwbb  <--  it passed the challenge.
[01:40:09] <blahboybaz> I just thought it would be nice to show the result of all the help I been getting here
[01:40:16] <systemfault> blahboybaz: Beside the for/in, it's great
[01:40:25] <blahboybaz> :)
[01:40:42] <blahboybaz> I think I leared something pretty profound
[01:40:56] <systemfault> For arrays, use for/of or array iteration methods, never for/in
[01:41:21] <systemfault> For objects, you can use for/in but it's better to use Object.entries/.values/.keys depending on what you need
[01:43:27] <blahboybaz> Not sure how to explain it - something more about insight into problem solving with code and lookking at the pattern of the soln that would work, and what types you are working with or converting to / from and using that to inform what kind of functions you need to look for - ie: if you need to work with strings then String.prototype  methods and if you need to work with arrays then Array.prototype
[01:43:29] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:43:33] <blahboybaz>  methods (and not just arbitrarily trying to smash things together that aren't meant for each other).
[01:43:59] <blahboybaz> systemfault: I want to learn about iterators and generators soon
[01:45:06] <systemfault> Using for/in for arrays is not only "unoptimal", it's bad code... otherwise, everything else is good
[01:45:20] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:45:30] <blahboybaz> right on
[01:45:36] <blahboybaz> thanks for pointing that out
[01:46:12] <blueagain> blahboybaz: one thing I can think of, but that's more of a style, you could simple use String.prototype.replaceAll here
[01:46:27] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 252 seconds)
[01:48:13] <blueagain> basically right now you're going over each letter, your running time is proportional to the number of letters in the input and the size of the set
[01:48:28] <blueagain> but native operations can probably do it much faster for you
[01:49:48] *** Quits: cyberbanjo (~user@2607:fb90:4247:7118:8739:1e35:d38:1fb8) (Ping timeout: 240 seconds)
[01:50:17] <blahboybaz> blueagain: lol -- my friend, that's where all this started. Using replaceAll() was my first approach and it was just all kind of funky and not working (ask around here, ask theskillwithin or other around here) - it just acted wierd in places and no one could figure out why
[01:51:38] <ryzenda> In Linux, using https://github.com/kislyuk/yq/, `cat file.xml | xq | DOSTUFFHERE | yq -x` ---- I want to run some JavaScript scripts to alter the JSON data before piping it  to convert back to XML format. Is there a linux command line way to do this?
[01:51:48] <blahboybaz> blueagain: O(n) I get it
[01:51:51] <blahboybaz> linear
[01:51:53] *** Joins: kee (~wizzwizz4@user/wizzwizz4)
[01:52:43] *** Joins: crashrep (~crashrep@user/crashrep)
[01:52:59] <blahboybaz> ryzenda: There is also a #linux channel too if it may be of any help to you
[01:53:01] *** Joins: masoudd (~masoudd@user/masoudd)
[01:53:30] <blahboybaz> I don't personally know how to answer that or I would  :)
[01:54:20] *** Joins: junebug (~junebug@2600:1700:3db0:2540:80fc:47cb:6feb:76c6)
[01:55:23] *** Parts: kee (~wizzwizz4@user/wizzwizz4) (⭘)
[01:59:01] *** Joins: trevors (~trevors@user/trevors)
[01:59:47] *** Joins: Adoi (~Adoi@user/adoi)
[02:01:23] *** Parts: x86_ (~x86@162-211-34-208.bltnilaa.metronetinc.net) ()
[02:02:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:03:02] *** Joins: dea_ (~dea@213.128.80.36)
[02:03:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:05:42] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 252 seconds)
[02:06:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:06:23] *** Joins: onosendi (~onosendi@user/onosendi)
[02:08:49] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[02:09:06] *** Joins: nomic (~nomic@185.217.117.88)
[02:09:12] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[02:10:33] <blueagain> blahboybaz: here is another way to do that involves replace/replaceAll: https://onecompiler.com/javascript/3xvr52yfw
[02:11:21] <blueagain> it's basically using the methods systemfault mentioned before, and you don't even need a set for it
[02:12:15] <blueagain> I would normally use replaceAll there involving of constructing a RegExp object which is not really efficient, but onecompiler's js version doesn't know about replaceAll yet :)
[02:12:52] *** Joins: x86 (~x86@162-211-34-208.bltnilaa.metronetinc.net)
[02:13:39] *** Quits: junebug (~junebug@2600:1700:3db0:2540:80fc:47cb:6feb:76c6) (Remote host closed the connection)
[02:14:03] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4a38:f720:8759:72e3)
[02:14:46] <x86> I have a React component that, upon load, is supposed to make an API call and obtain a JSON object. then, there is logic to do "stuff" with said JSON object... should be fairly straightforward, but I can't get the API call to complete before the logic to modify it tries to run, someone suggested useEvent, but I'm not clear on how to use that
[02:14:48] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[02:15:22] <x86> I've done a lot of API / backend stuff in NodeJS / Express, but I don't have much experience with React
[02:15:25] <onosendi> x86: async/await or promise
[02:16:06] <blueagain> instead of constructing*
[02:18:01] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[02:18:34] *** Quits: daoudr (~daoudr@178.197.200.184) (Quit: Leaving)
[02:18:41] <x86> useEffect(() => { const doStuff = async () => { globalVariable = await sendAxiosRequestToAPI(); }; doStuff(); }, []);
[02:18:47] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[02:19:44] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[02:19:45] <x86> it's either not awaiting, or I need to do this somewhere else (where?) to get it to execute before trying to modify the returned object during rendering
[02:19:55] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:20:25] <blueagain> x86: just calling doStuff without awaiting or returning it won't have it awaited properly
[02:21:07] <x86> ahhhh, I need to await call to doStuff() too... that makes sense, thanks!
[02:21:19] <Alexendoo> x86: That's not it, you don't assign to a global to get state out of the useEffect, you would set some state from a useState
[02:21:32] <onosendi> x86: https://gist.github.com/onosendi/62a548116ada01aa4357227792d9b70f
[02:22:37] <onosendi> x86: refresh that, forgot to add the empty dependency array to `useEffect`.
[02:23:43] <x86> ah this is great stuff, thanks a bunch
[02:23:48] *** Joins: diamondbond (~diamondbo@175.157.59.218)
[02:24:39] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[02:26:18] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[02:26:28] <x86> another question I had is that I have an array of objects with the key names "label" and "profile" -- I want the <Select> to use the "profile" as the value to submit with the form, while displaying the "label" for each option
[02:27:33] <onosendi> x86: is <Select> a <select><option></select> ?
[02:28:55] <x86> onosendi: I imagine so, but React abstracts that
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:10] <x86> do I need the keys to be named differently?
[02:31:40] <onosendi> x86: I don't know what <Select> is. Do you have a link to the docs for that components API?
[02:32:30] *** Quits: ekh` (~ekh@37.36.98.216) (Read error: Connection reset by peer)
[02:32:48] <x86> https://react-select.com/home
[02:33:01] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-e149-f31f-1120-01f3.res6.spectrum.com) (Remote host closed the connection)
[02:33:08] *** Quits: diamondbond (~diamondbo@175.157.59.218) (Quit: Leaving)
[02:33:13] *** Joins: ekh` (~ekh@37.36.98.216)
[02:33:16] <x86> it has keys named "value" and "label", so maybe I need a map statement of sorts
[02:33:24] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:34:09] *** Joins: pizdets_ (~pizdets@183.182.115.74)
[02:34:30] *** Quits: Deneb (~johnch@128.82.159.143.dyn.plus.net) (Quit: Leaving)
[02:34:31] *** Quits: pizdets (~pizdets@183.182.114.253) (Ping timeout: 265 seconds)
[02:34:46] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-e149-f31f-1120-01f3.res6.spectrum.com)
[02:35:47] <onosendi> Hmm, lemme install this lib real quick.
[02:39:05] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[02:39:16] <x86> https://www.npmjs.com/package/react-select <-- this shows it passing an array of objects like I have, but my keys are just named differently is all, can I just do a map or something instead of iterating over the whole thing and copying the values to a new array of objects with the keys named what the <Select> is wanting
[02:39:19] *** Joins: de-facto (~de-facto@user/de-facto)
[02:42:49] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[02:43:21] <onosendi> x86: https://gist.github.com/onosendi/caefd3150ea558fd07ea1449a960810f
[02:43:37] *** Quits: mikrosis (~mikrosis@dynamic-046-114-169-013.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[02:44:00] <x86> I wonder if I can map it without having to create a new array
[02:44:51] <onosendi> x86: Not sure what you mean there. Overwrite the old one?
[02:45:31] <ljharb> x86: you should want to create a new array
[02:45:37] <ljharb> x86: mutation is bad and making new objects is basically free
[02:45:38] <x86> <Select options={options.map(({ v, l }) => ({ value: v, label: l }))}> or something
[02:45:49] <onosendi> x86: what ljharb said
[02:45:49] <corwin> d> {a:1,b:2}.map((k,v) => ({key: k, value: v}))
[02:45:57] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:995c:e0f2:3e31:ae15) (Ping timeout: 240 seconds)
[02:46:03] *** Joins: kakashiA1 (~kakashi@105.159.158.112)
[02:46:25] * corwin forgot how to talk to the bot :(
[02:46:58] <x86> ljharb: sure, in the background i'm sure it's making a new array, but I don't want to name it, and if it goes out of scope right after that and gets garbage collected that much quicker, that's even better :)
[02:47:00] <corwin> Hmm, and my code is crap too.  Nap time!
[02:47:03] <l__q> n>  /^#(?:[0-9a-fA-F])$/.test("#623d")
[02:47:04] <jellobot> (okay) false
[02:47:12] <l__q> Why false?
[02:47:17] <corwin> thanks l__q
[02:47:34] <l__q> I need to test  if string is a valid hex
[02:47:48] <l__q> but this is a valid
[02:48:11] <onosendi> x86: Is the list of label/values coming from an api call, or is it hard coded into your program?
[02:48:26] <l__q> I need only to test [0-9A-Fa-f], but it return false
[02:48:33] <Alexendoo> l__q: You're testing if it's # followed by a single hex digit
[02:48:36] *** Joins: Rockwood (~Rocky@user/rocky)
[02:48:41] <x86> l__q: function isHex(h) {
[02:48:41] <x86> var a = parseInt(h,16);
[02:48:41] <x86> return (a.toString(16) === h)
[02:48:47] <Alexendoo> The (?:) isn't doing anything, you can remove that
[02:49:14] *** Quits: off^ (~off@50.232.121.75) (Remote host closed the connection)
[02:49:15] *** Joins: bobdobbs` (~user@118.149.92.214)
[02:49:26] <Alexendoo> But you'd want a quantifier on the [...], e.g. + for one or more
[02:49:28] *** Joins: Rockwood_ (~Rocky@user/rocky)
[02:49:42] <l__q> n>  /^[0-9a-fA-F#]$/.test("#623d")
[02:49:43] <jellobot> (okay) false
[02:50:04] <x86> (?:) is a non-capturing grouping, and if you just care about boolean truthiness, you don't need to return the captured value
[02:50:20] <ljharb> x86: an inline map is just fine
[02:50:28] <corwin> n>  /^#[0-9a-fA-F]+$/.test("#623d")
[02:50:29] <jellobot> (okay) true
[02:50:38] *** Quits: bobdobbs` (~user@118.149.92.214) (Client Quit)
[02:50:41] <ljharb> Alexendoo: using `?:` might actually make the regex faster, even on test
[02:50:48] <l__q> Why simple check of allowed characters returns false, but its allowed characters
[02:51:12] <Alexendoo> ljharb: I don't mean replace it with (), the whole group isn't doing anything
[02:51:26] <corwin> n> [{a:1},{b:2}].map((k,v) => ({key: k, value: v}))
[02:51:27] <jellobot> (okay) [ { key: { a: 1 }, value: 0 }, { key: { b: 2 }, value: 1 } ]
[02:51:35] <x86> ljharb: I'm not sure if that would be cheaper than array iteration (although at some level, the interpreter is likely doing this behind the scenes anyway?)
[02:52:13] <corwin> yuuup, def nap time. o/
[02:52:24] <x86> can the bot measure execution time of an evaluation?
[02:52:52] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:edd4:31d9:1822:9496)
[02:53:00] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[02:53:02] <x86> n> Date.now()
[02:53:03] <jellobot> (okay) 1646954583158
[02:53:28] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:53:34] <corwin> l__q: your code wasn't "a simple check of allowed characters".  You anchored the beginning and end of the string both, so you were checking the whole string.
[02:53:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:53:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:53:45] *** Joins: wroathe (~wroathe@user/wroathe)
[02:54:04] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4a38:f720:8759:72e3) (Quit: Leaving)
[02:54:09] *** Joins: bobdobbs_alt (~user@118.149.92.214)
[02:54:31] <onosendi> x86: https://gist.github.com/onosendi/796ccce1ec88e70ac3f2398a368e4945
[02:54:37] <l__q> n>  /[0-9a-fA-F#]/.test("#623dxX")
[02:54:38] <jellobot> (okay) true
[02:54:50] <l__q> why returns true, if X is not allowed?
[02:55:15] <ljharb> x86: how large is your array?
[02:55:20] <x86> n> Date.now(); const isHex = ( (h) => { const a = parseInt(h, 16); return (a.toString(16) === h) } ); isHex('definitely not') ? 'yay' : 'sadface'; Date.now();
[02:55:21] <jellobot> (okay) 1646954721056
[02:55:31] <ljharb> x86: if it's less than "a million" it's tiny and the speed is "instantaneous" for literally any operation you want to do. performance is not important.
[02:56:38] <x86> ljharb: yeah in this case we're looking at 54 object in the array... relatively nothing... I suppose I was just moreso curious
[02:58:30] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[02:59:36] <theskillwithin> I didn't know about this https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import.meta  ill probably never need it tho
[03:01:07] <ljharb> it might be useful one day, providing the URL and a resolution function
[03:01:09] <l__q> How to fix it? To check if latter is allowed?
[03:01:13] <l__q> n> /[0-9a-fA-F]/.test("ZZXXAA")
[03:01:14] <jellobot> (okay) true
[03:01:15] <ljharb> but since native ESM itself isn't useful, import.meta also isn't
[03:01:28] <ljharb> l__q: what are you trying to check?
[03:02:06] <x86> l__q: i gave you a regex-free function
[03:02:16] <l__q> ljharb: I need only a simple check if character is allowed, but now return true if Z is in string, but Z is not allowed
[03:02:59] <x86> you're inventing Base15?
[03:03:36] <onosendi> theskillwithin: I think that's how we're getting `__dirname` with ESM? https://gist.github.com/onosendi/4d037c87163bb5655fe432b45d873435
[03:03:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:04:14] <l__q> It should return true only on characters 0-9, a-f and A-F
[03:04:24] <ljharb> n> /[^0-9a-fA-F]/.test("ZZXXAA")
[03:04:24] <jellobot> (okay) true
[03:04:25] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:edd4:31d9:1822:9496) (Quit: Textual IRC Client: www.textualapp.com)
[03:04:31] <ljharb> l__q: ^ that means it's invalid
[03:04:31] <x86> see my function above
[03:04:32] <theskillwithin> onosendi ah ya nice
[03:04:41] <ljharb> n> /^[0-9a-fA-F]$/.test("ZZXXAA") @ l__q
[03:04:42] <jellobot> l__q, false
[03:04:43] <ljharb> l__q: that means it's valid
[03:05:52] <l__q> n> /^[0-9a-fA-F]$/.test("Ab")
[03:05:52] <jellobot> (okay) false
[03:06:02] <l__q> Why false?
[03:06:11] <x86> where's your +
[03:06:14] <x86> before $
[03:06:30] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4a38:f720:8759:72e3)
[03:06:31] <ljharb> oh right
[03:06:35] <ljharb> n> /^[0-9a-fA-F]+$/.test("ZZXXAA") @ l__q
[03:06:36] <jellobot> l__q, false
[03:06:36] <ljharb> there
[03:07:02] <x86> n> /^[0-9a-fA-F]+$/.test("ABCDEF") @ l__q
[03:07:02] <jellobot> l__q, true
[03:07:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:07:17] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[03:07:18] <l__q> ljharb: Thank You! It works!
[03:07:21] <x86> n> /^[0-9a-fA-F]+$/.test("ABCDEFG") @ l__q
[03:07:21] <jellobot> l__q, false
[03:07:24] <l__q> x86: Thanks!
[03:07:41] <ljharb> !eloquent @ l__q
[03:07:41] <jellobot> l__q, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[03:08:02] <x86> sure, but I think if you're doing string operations on hex values, you're almost definitely doing wrong whatever it is that you're trying to do
[03:08:06] <l__q> Thank you!
[03:08:45] <ljharb> x86: nah that's a legit way to tell if something's a valid hash (if you include a length)
[03:09:36] <x86> mathing it ensures validity
[03:10:18] <x86> i always trust math over string functions
[03:10:29] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[03:10:51] <ljharb> can't math it without the contents too
[03:10:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[03:11:17] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[03:11:56] <x86> contents of the number?
[03:12:07] <x86> (it should never be a string)
[03:12:59] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[03:13:22] <stenno> can use i flag instead of a-fA-F
[03:14:04] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Client Quit)
[03:14:37] <x86> isn't i modifier for case insensitivity?
[03:15:30] <l__q> ljharb: Thank you for this book and for you help! Have a nice day!
[03:16:19] <ThePendulum> n> [1, 2, 3].at(2)
[03:16:20] <jellobot> (okay) 3
[03:16:47] <x86> n> [1, 2, 3].at(0)
[03:16:48] <jellobot> (okay) 1
[03:17:00] <stenno> x86: indeed it is. a-f is the lowercase version of A-F
[03:17:03] <onosendi> n> [1, 2, 3].at(-1)
[03:17:04] <jellobot> (okay) 3
[03:17:13] <stenno> therefore you can use i instead of typing both a-f and A-F
[03:17:23] <x86> stenno: oh, you're still talking about string operations on a number
[03:17:34] <stenno> no, i am talking about that regexp
[03:17:59] <x86> the one where he's trying to take a string and see if it's valid hex?
[03:18:01] <stenno> and you don't need to worry about ascii order
[03:18:14] <x86> (hex, of course, being a Base16 number)
[03:18:14] <stenno> yes
[03:18:34] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:18:35] <stenno> wanting to parse that number is silly
[03:18:37] <ThePendulum> wow did mdn get an overhaul?
[03:18:43] <onosendi> Indeed.
[03:18:44] <stenno> it might be bigger than MAX_SAFE_INTEGER
[03:18:45] <gkatsev> yup
[03:18:57] <ThePendulum> going to take some getting used to
[03:19:07] *** Quits: l__q (~modinfo@user/modinfo) (Quit: go to break)
[03:19:11] <ThePendulum> thought the old one was pretty decent and timeless, new one isn't horrible yet though
[03:19:15] <x86> yeah, right... like I said, you're still talking about string operations (regex) on a number (hex)
[03:19:17] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[03:19:25] <gkatsev> it was jarring because I was one one page with the old layout, and then searched for something else and *boom* new layout
[03:19:58] <stenno> n> 'A'.match(/[a-fA-F]/)
[03:19:58] <jellobot> (okay) [ 'A', index: 0, input: 'A', groups: undefined ]
[03:20:01] <x86> gkatsev: glitch in the matrix perhaps... call tank, request an exit
[03:20:13] <stenno> oh ok
[03:21:08] <stenno> ok i see why ascii number doesnt matter here
[03:21:17] <x86> stenno: I was trying to convince l__q to not do string ops on his hex value, which I think I didn't do a great job of haha
[03:21:45] <stenno> again, you are getting into trouble if that hex value is > MAX_SAFE_INTEGER
[03:22:00] <gkatsev> eh, this use is fine. There's definitely worse cases of regex usage
[03:22:22] <stenno> so you cannot really parse it unless you inspect it before anyway
[03:22:41] <stenno> and even if you figure out that the result will be > MAX_SAFE_INTEGER, what do you do then
[03:23:02] <stenno> pretty sure you cannot base-convert into BigInt easily
[03:23:12] <x86> stenno: what if you have a Base10 number (0-9) greater than MAX_SAFE_INTEGER
[03:23:26] <stenno> as a string?
[03:23:44] *** Joins: Junxter (~Junxter@121.237.63.222)
[03:24:04] <gkatsev> you can convert it into a BigInt
[03:24:08] <stenno> n> BigInt('123333333333332141242315423')
[03:24:09] <jellobot> (okay) 123333333333332141242315423n
[03:24:21] <stenno> yes, thats why i said 'base-convert'
[03:24:22] *** Quits: kaotisk (~kaotisk@user/kaotisk) (Remote host closed the connection)
[03:24:35] <gkatsev> I guess it accepts hex
[03:24:39] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4a38:f720:8759:72e3) (Quit: Leaving)
[03:24:42] <ljharb> x86: huh? a hex hash is often a checksum of a string
[03:24:49] <ljharb> x86: for example, every git commit ever
[03:24:54] <gkatsev> n> BigInt('ABCBDBDBFBFFAABBABABAB123')
[03:24:54] <jellobot> (fail) SyntaxError: Cannot convert ABCBDBDBFBFFAABBABABAB123 to a BigInt
[03:25:00] <gkatsev> n> BigInt('0xABCBDBDBFBFFAABBABABAB123')
[03:25:01] <jellobot> (okay) 850694190033390352235094520099n
[03:25:07] <stenno> n> BigInt('0x1233333333333321412423154235555555555555523432432')
[03:25:08] <jellobot> (okay) 7140203224002349271158384485226156993114736260550557377586n
[03:25:08] <gkatsev> but needs to be told it's hex
[03:25:18] <x86> ljharb: right... and if you were gonna parse it or store it, you would do so as a number
[03:25:22] <stenno> javascript and its prefixed
[03:25:24] <stenno> terrible
[03:25:28] <ljharb> x86: no? you'd always do it as a string
[03:25:34] <gkatsev> no, you should not be storing hashes as a number
[03:25:38] <gkatsev> definitely not in javascript
[03:25:39] <stenno> n> BigInt('0b11111111111111111111111111111111111111111111')
[03:25:40] <jellobot> (okay) 17592186044415n
[03:25:40] <ljharb> that's crazy talk
[03:25:57] <ljharb> identifiers should remain opaque, hashes aren't numbers conceptually
[03:26:17] <gkatsev> heck, twitter's API had a huge issue a while back because tweet ids are numberic, but they rolled over 2**53 so I think they needed to add another field as a string
[03:26:33] <x86> are you referring to every hexidecimal number as a hash? but yes, even hashes are numbers in hexidecimal notation
[03:26:56] <gkatsev> while they are, you shouldn't be interfacing with them as a number
[03:27:15] <stenno> hashes should just be used for comparison
[03:27:20] <stenno> their data type doesn't really matter
[03:27:20] *** Quits: kakashiA1 (~kakashi@105.159.158.112) (Ping timeout: 256 seconds)
[03:27:36] <stenno> you are not going to do math on a hash
[03:27:54] <x86> you could to see if it's a valid hex number, as in this case
[03:27:58] <Alexendoo> It matters in the sense that can't fit most hashes in a Number
[03:28:05] <x86> Alexendoo: ah
[03:28:18] <ljharb> x86: i'm saying that you should never store something as a number that isn't a conceptual number. and a checksum is not a number, conceptually.
[03:28:20] <stenno> well yes, aforementioned MAX_SAFE_INTEGER
[03:28:20] <x86> that makes sense
[03:28:23] <stenno> wow
[03:28:31] <stenno> as i said several times
[03:28:34] <stenno> whatevber
[03:28:36] <ljharb> right
[03:28:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[03:28:48] <x86> stenno: I suppose I wasn't understanding what you were saying, my bad
[03:28:55] <stenno> fair enough, np
[03:29:05] <stenno> i have to work on my own communication skills
[03:29:41] <x86> samesies
[03:29:43] *** Quits: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net) (Quit: ZNC - https://znc.in)
[03:30:17] *** Joins: crashrep (~crashrep@user/crashrep)
[03:30:25] *** Quits: Junxter (~Junxter@121.237.63.222) (Ping timeout: 256 seconds)
[03:30:29] *** Joins: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net)
[03:32:38] <stenno> last two weeks or so were super crazy for me
[03:32:46] <stenno> i learned a lot about ci/cd and devops in general
[03:32:57] <stenno> now i think i can open interesting perspectives to my employer
[03:33:16] <stenno> looking into kubernetes next
[03:33:49] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[03:34:30] <x86> start with containerd / docker
[03:34:47] <stenno> yeah i am already familiar with docker
[03:34:51] <onosendi> stenno: what's your title?
[03:34:54] <x86> right on
[03:35:10] <stenno> first i just wantd to use docker-compose alone but lacking convenience
[03:35:23] <stenno>  onosendi 'software developer'
[03:36:36] *** Quits: hsv (~unknown@user/hsv) (Ping timeout: 240 seconds)
[03:37:11] <stenno> i want that we use those kind of technologies which are common in many other software companies
[03:38:17] <stenno> also the technologies itself are super interesting too
[03:38:23] <x86> check out GitLab (there is a free CE edition available) and you can mess with CI / CD and even automate Kubernetes deployments
[03:38:32] <stenno> so i just combine my curiosity and interest
[03:38:36] <stenno> x86: we have azure devops
[03:39:08] <x86> and if you let GitLab have god mode on your k8s cluster, it can do things like namespace management and what not
[03:39:26] <stenno> as i understand i can CD a branch directly as a container to a kubernetes host
[03:39:32] <stenno> (with devops)
[03:39:33] <x86> azure, not familiar with that nor aws
[03:39:54] <stenno> its ok but i'd rather just use travis
[03:40:00] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Remote host closed the connection)
[03:40:01] <x86> you can certainly do that with gitlab, I'd assume other CI / CD supports it too
[03:40:26] <x86> have you used CircleCI?
[03:40:34] <stenno> no
[03:40:43] <stenno> i am new to ci/cd
[03:40:44] *** Joins: sa0 (~sa0sin@88.120.82.205)
[03:40:50] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:41:01] <stenno> don't think we will move from azure devops to gitlab
[03:41:12] <x86> i haven't used anything but gitlab (not even github)
[03:41:41] <stenno> we used gitlab as 'just' a git remote
[03:42:34] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[03:42:39] <stenno> docker is like... sometimes there are those moments where you are like 'wow thats so simple and intuitive' but most of the time its the total opposite
[03:42:40] <x86> at work there are a lot of departments jumping from Azure and Pivital Cloud Foundry over to AWS
[03:42:50] <stenno> for me personally its a super frustrating learning curve
[03:43:02] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:cc2e:1c42:2403:ca71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:43:44] <x86> it was for me too, I've only been immersed in kubernetes and really docker in general for about 2 years
[03:45:02] *** Quits: sa0 (~sa0sin@88.120.82.205) (Ping timeout: 240 seconds)
[03:45:06] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[03:45:37] <onosendi> stenno: Did you play with Github Actions at all?
[03:45:56] <stenno> no, but i have seen it mentioned
[03:46:28] <stenno> don't think it makes sense to look into that right now, again i am pretty sure we are set on azure devops
[03:46:35] <ljharb> GHA is awesome
[03:46:43] <ljharb> stenno: also the GHA team is from azure, i think
[03:47:14] <stenno> is actions basically also a ci/cd suite?
[03:48:28] <onosendi> https://docs.github.com/en/actions
[03:48:51] *** Joins: hsv (~unknown@user/hsv)
[03:49:09] <stenno> https://docs.github.com/en/actions/migrating-to-github-actions/migrating-from-azure-pipelines-to-github-actions#key-differences
[03:49:50] <stenno> sounds pretty similar
[03:51:48] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:55:03] <stenno> i will check out gha for my private projects once i find some time again for them
[03:56:00] <onosendi> Holy shit, Express 5 went into beta.
[03:56:06] <stenno> omg
[03:56:11] <stenno> finally async route handlers? :D
[03:56:25] <KevinX> i use GH actions all the time. The only grip is I can't really do things locally beforehand
[03:56:33] <stenno> (thats the only express 5 feature i know)
[03:56:40] <KevinX> gripe*
[03:56:50] <onosendi> stenno: haha, ya, same.
[03:58:14] *** Quits: constxd (~brad@142.134.78.128) (Quit: WeeChat 2.8)
[03:58:15] <stenno> KevinX: what do you mean? surely you can do your actual testing locally? do you mean the gha pipeline specifically?
[03:58:18] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:00:44] <KevinX> Yeah, with complex workflows I sometimes will have to watch it fail a few times and tweak along the way
[04:00:44] <KevinX> You can compose other actions so it's not just running shell scripts
[04:00:57] <ljharb> stenno: yes, it's the same
[04:01:20] <ljharb> KevinX: to be fair that's a problem with all the CI providers, but GHA should have solved it
[04:01:31] <stenno> KevinX: you have the same problem with azure pipelines
[04:02:17] <stenno> how it works, is that commit the yml description file, if it breaks, azure offers to create a branch for the yml changes specifically, and you can change the yml file online
[04:02:40] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[04:02:46] <stenno> and then either merge or just delete the branch once it succeeds
[04:02:50] <KevinX> Yeah. There was one project out there trying to solve it but when I tried it a couple years ago it just didn't work for me
[04:04:21] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219) (Quit: enoq)
[04:04:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:07:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:08:21] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 252 seconds)
[04:09:12] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:10:30] *** Joins: KevinX (~KevinX@user/KevinX)
[04:10:46] <KevinX> It's still being updated. I wonder if it's working well now https://github.com/nektos/act
[04:11:38] *** Joins: ferdna (~ferdna@user/ferdna)
[04:13:14] *** Quits: blahboybaz (~blahboyba@c-67-161-97-76.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[04:19:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:30:24] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:30:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[04:32:03] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[04:32:59] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[04:32:59] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[04:32:59] *** Joins: average (~average@user/average)
[04:38:59] <chovy> ljharb: deno isn't dropping typescript. where did you hear that?
[04:47:10] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:47:55] *** Quits: gopar (~gopar@ip70-189-75-162.ok.ok.cox.net) ()
[04:47:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[04:48:15] *** Joins: vysn (~vysn@user/vysn)
[04:50:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[04:50:23] *** Joins: trevors (~trevors@user/trevors)
[04:50:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:52:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:54:02] *** Joins: summersault (~summersau@179.221.251.36)
[04:54:58] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:57:23] *** Joins: summersault (~summersau@179.221.251.36)
[05:00:02] *** Joins: Junxter (~Junxter@121.237.63.222)
[05:01:48] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[05:04:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:05:51] <systemfault> chovy: Probably that news a few months back saying that Deno is using SWC to strip TypeScript in some cases.
[05:07:00] *** Quits: defjam (~eb0t@90.210.89.170) (Ping timeout: 240 seconds)
[05:07:36] <systemfault> From what I understand, by default TSC is used and SWC is only used in cases where you pass some CLI argument.
[05:08:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:08:18] <systemfault> If you use that mode then it means that the only thing typechecking your done is your editor (VSCode?)
[05:09:04] *** Joins: defjam (~eb0t@90.203.123.221)
[05:11:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:11:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:11:25] *** Joins: wroathe (~wroathe@user/wroathe)
[05:11:33] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[05:11:47] <systemfault> (The flag is apparently called --no-check)
[05:12:00] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:12:28] *** Joins: summersault (~summersau@179.221.251.36)
[05:12:30] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 272 seconds)
[05:12:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:14:50] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[05:16:18] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 272 seconds)
[05:16:25] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[05:16:36] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[05:18:12] *** Quits: bobdobbs_alt (~user@118.149.92.214) (Ping timeout: 252 seconds)
[05:18:22] <jaawerth> I remember reading it too in a post by the maintainer. but it was dropping it from the core, not dropping support for it
[05:18:28] <jaawerth> no diea what the follow-through looked like
[05:19:01] <systemfault> TSC has no alternatives
[05:23:44] <theskillwithin> theres reason and flow, but really no one uses anymore
[05:23:45] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[05:23:50] *** Joins: onosendi (~onosendi@user/onosendi)
[05:24:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:26:59] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:30:06] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:30:10] <systemfault> I'm looking at what motivated the move.. https://docs.google.com/document/d/1_WvwHl7BXUPmoiSeD8G83JmS8ypsTPqed4Btkqkn_-4/edit#
[05:30:17] <systemfault> But it's still soooo weird.
[05:30:18] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[05:32:15] <systemfault> TL;DR, they had issues with the core runtime (Something Deno uses don't have to know about) so they moved it from TS to JS.
[05:32:54] <systemfault> The reasons cited in the documents look bad... but I'm not part of the project, there are a billion things I'm not aware of.
[05:38:33] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 252 seconds)
[05:39:48] *** Joins: ferdna (~ferdna@user/ferdna)
[05:41:17] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 240 seconds)
[05:44:07] <ljharb> chovy: they dropped it in their core over a year ago. They announced it themselves.
[05:44:40] <ljharb> chovy: they’re not dropping it from supporting user code, but they stopped using it for their own code.
[05:46:15] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[05:49:57] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:50:55] <Maxdamantus> this is the PR btw: https://github.com/denoland/deno/pull/6793
[05:53:38] <Maxdamantus> Though it seems to mostly be for the sake of build time and other build-related issues.
[05:53:57] *** Joins: summersault (~summersau@179.221.251.36)
[05:54:31] <Maxdamantus> Did SWC exist at the time? Maybe that would have been an alternative solution.
[05:55:14] *** Joins: codebam (~codebam@user/codebam)
[05:55:15] <Maxdamantus> Since if they're using that nowadays anyway, they could have also used that to strip the types.
[05:57:59] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14) (Remote host closed the connection)
[05:58:09] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:59:16] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:911e:d533:e490:181e)
[06:00:00] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 252 seconds)
[06:01:03] <codebam> is it bad if I put a local dev tls cert for 127.0.0.1 in my git repo and use it as the default cert for the https dev server if none is specified?
[06:01:55] <codebam> does it matter if I push it? it's for 127.0.0.1
[06:02:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:02:15] <Maxdamantus> codebam: why do you even need a cert for 127.0.0.1?
[06:02:32] <Maxdamantus> Why not just run without TLS?
[06:02:35] <codebam> so that I get mixed content errors if I try to fetch http
[06:03:30] <codebam> plus it's more realistic to the prod server
[06:03:32] <Maxdamantus> Ah, so it's making external requests.
[06:03:44] <codebam> yes?
[06:03:47] <codebam> should it not?
[06:04:07] <Maxdamantus> Dunno. Depends what it does.
[06:04:29] <Maxdamantus> If it's referring to CDNs, then no, it probably shouldn't do that.
[06:05:25] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[06:05:32] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:05:55] <codebam> oh, okay
[06:08:45] <codebam> also in regard to yesterday they're all HTTP/2 requests so there must be a limit for that too
[06:09:06] <codebam> at least according to Firefox they all show HTTP/2
[06:09:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[06:13:08] *** Joins: sfields_ (~sfields@136.34.181.232)
[06:13:23] <Maxdamantus> I got the sense that you were getting error responses from the server.
[06:15:11] <codebam> some yeah
[06:15:39] *** Quits: sfields (~sfields@2605:a601:adea:7a00:dc0f:d6c9:8a5b:60bc) (Ping timeout: 256 seconds)
[06:15:47] <Maxdamantus> fwiw, if you get any response (ie, something with a 3-digit code like 200, 204, 304, 404, 500, 503), those are responses that have been successfully returned from the server, not things generated by the browser.
[06:16:25] <Maxdamantus> Firefox will never generate a response that says something like "insufficient resources". If Firefox decides that the request has failed, that will be denoted by `fetch` raising an error, rather than returning a response.
[06:17:38] *** Joins: Rockwood (~Rocky@user/rocky)
[06:18:53] <codebam> I'm counting response?.ok as a failure and catching err.code === 20 as a failure is that right?
[06:19:28] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[06:19:30] <codebam> wait am I doing that backwards
[06:19:42] <codebam> response.ok would be, success right?
[06:20:34] <Maxdamantus> `response.ok` is true if the HTTP response code was >= 200 and < 300.
[06:21:03] <Maxdamantus> If the request failed due to a limit in Firefox, there would be no `response`, because `fetch()` would have raised an error instead.
[06:21:17] <codebam> oh okay I see
[06:22:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:22:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:22:48] *** Joins: wroathe (~wroathe@user/wroathe)
[06:23:31] <Maxdamantus> This should also be obvious in the network tab. If you see the three-digit codes, it means the requests happened and they got responses. If Firefox has cancelled the request due to some limit, there won't be a three-digit code (and it will probably be denoted as "(error)" or something)
[06:24:15] <Maxdamantus> Actually, it shows an icon that looks something like "Ø".
[06:25:05] *** Joins: src (~src@user/src)
[06:26:37] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[06:27:31] <codebam> oh okay I see
[06:27:33] <codebam> hmm
[06:27:45] <codebam> I just counted them as an error and then I'll handle that somewhere else
[06:30:00] <Maxdamantus> Yes, practically you probably should treat any unexpected response code as an error, but when debugging issues it's important to know the difference between the request failing due to connection issues or browser limits, and the server returning a response denoting a failure that happened somewhere within the server or beyond.
[06:30:47] <Maxdamantus> If the server returned something like "insufficient resources", that will be due to a constraint somewhere on the server side, not on the client side.
[06:31:23] <codebam> oh okay
[06:38:00] <Maxdamantus> as a side note, I wouldn't personally use `response.ok`, since `response.status === 200` is more likely to be the correct check.
[06:38:11] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:38:35] <Maxdamantus> I suspect a lot of people probably do use `response.ok` though, and they probably basically just intend it to mean `response.status === 200`
[06:39:02] <deltab> if the response is empty you'll get 204
[06:39:05] <Maxdamantus> (and they assume that their server won't return a response code in that range other than `200`)
[06:39:13] <Maxdamantus> Not necessarily.
[06:39:26] <Maxdamantus> a `200` can have an empty body too.
[06:39:41] <codebam> oh okay so `response.status === 200` is better because it's more accurate to an actual success
[06:39:43] <deltab> okay, you could get a 204
[06:39:44] <Maxdamantus> and `204` usually means something distinct, so you should be checking for that separately.
[06:40:03] <Maxdamantus> no intermediate server is going to replace an empty 200 response with a 204 response. that would be wrong.
[06:40:22] <Maxdamantus> codebam: it's specifying the actual expected code.
[06:41:30] <deltab> oh, it means no navigation is needed from the current
[06:41:38] <deltab> page
[06:41:54] <Maxdamantus> codebam: usually when making a request, you have an expected set of possible codes which will determine how you responsd: `switch (response.status) { case 200: return ...; case 304: await doAuth(); return retry(); default: throw new Error("Unexpected response: " + response.status); }`
[06:42:38] <Maxdamantus> deltab: that seems like an odd interpretation. where does that come from?
[06:43:03] <deltab> RFC 7231 section 6.3.5
[06:43:23] <deltab> 3rd paragraph
[06:44:33] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 252 seconds)
[06:44:41] <Maxdamantus> I wonder if any user agents actually do that.
[06:45:08] <Maxdamantus> I can see where they're coming from with their particular example though.
[06:46:23] <deltab> and there's 205 which is similar, but resets the form or equivalent
[06:46:31] <Maxdamantus> Anyway, that RFC has a bunch of weird stuff in it. Probably due to Roy Fielding.
[06:47:07] <Maxdamantus> and it doesn't have much to do with `fetch`, which avoids applying most of these semantic details.
[06:50:29] <Maxdamantus> and actually, rereading that paragraph, it is really only using that as an example, doesn't sound like it's mandating that it be interpreted that way.
[06:54:33] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:55:29] * deltab nods
[06:58:08] *** Quits: Inspiral (~inspiral@user/inspiral) (Ping timeout: 256 seconds)
[07:00:58] *** Joins: Inspiral (~inspiral@host-92-22-22-119.as13285.net)
[07:00:58] *** Quits: Inspiral (~inspiral@host-92-22-22-119.as13285.net) (Changing host)
[07:00:58] *** Joins: Inspiral (~inspiral@user/inspiral)
[07:03:32] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[07:04:15] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:06:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:09:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[07:12:36] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[07:14:52] *** Joins: audiobirb (~audio@user/audio)
[07:15:41] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[07:16:27] *** Quits: thekingofbandit (~thekingof@user/thekingofbandit) (Remote host closed the connection)
[07:17:20] *** Joins: de-facto_ (~de-facto@user/de-facto)
[07:17:25] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[07:17:26] *** Joins: thekingofbandit (~thekingof@user/thekingofbandit)
[07:17:41] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:20:19] *** Joins: silverdust (~silverdus@user/silverdust)
[07:21:19] *** de-facto_ is now known as de-facto
[07:21:24] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[07:25:54] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[07:27:00] *** Quits: Junxter (~Junxter@121.237.63.222) (Ping timeout: 240 seconds)
[07:30:58] *** Joins: Slade (uid128877@user/slade)
[07:35:22] *** Joins: Junxter (~Junxter@121.237.63.222)
[07:36:06] <torniq> I've got a fromEvent(..., 'keyup').   From another function, I set this.field = ''; ... but this does not trigger the observable.   It's looking for a keyup.  How do i set it and fire a keyup event at the sametime so the observable gets the latest value?
[07:36:56] *** Rockwood_ is now known as Rockwood
[07:37:54] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[07:38:52] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[07:46:48] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:a088:8a8f:b0d:82cf)
[07:49:02] *** Quits: D2mned (~D1mned@212.101.253.13) (Read error: Connection reset by peer)
[07:49:22] *** Joins: D4mned (~D1mned@212.101.253.13)
[08:06:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:07:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[08:07:30] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[08:08:02] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 240 seconds)
[08:08:24] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[08:09:20] *** Joins: nwoob (~apple@152.57.206.11)
[08:10:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[08:10:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:10:54] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:11:44] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[08:13:20] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[08:13:24] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:14:14] *** Joins: kakashiA1 (~kakashi@105.159.158.112)
[08:15:51] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[08:16:33] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:16:35] *** Joins: stenno (~stenno@user/stenno)
[08:18:39] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:19:01] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[08:20:11] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[08:21:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[08:24:36] *** Joins: han-solo (~hanish@user/han-solo)
[08:25:02] *** Quits: dea_ (~dea@213.128.80.36) (Ping timeout: 272 seconds)
[08:25:22] <KevinX> torniq RxJS?
[08:26:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[08:27:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:27:46] *** Joins: src (~src@user/src)
[08:31:22] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[08:32:08] *** Quits: src (~src@user/src) (Client Quit)
[08:33:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:33:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:33:03] *** Joins: wroathe (~wroathe@user/wroathe)
[08:33:44] <deltab> torniq: you could create an event and fire it, or you could merge the observable with another one that provides a value
[08:37:04] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[08:37:41] <deltab> something like  concat(of(''), fromEvent(...))
[08:37:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[08:38:08] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[08:38:51] *** Joins: codebam (~codebam@user/codebam)
[08:39:17] *** Quits: stagas (~stagas@2a02:587:c407:c824:9b31:d041:70e4:2054) (Ping timeout: 240 seconds)
[08:43:43] <sheetjs> does eslint/webpack understand `exports` in the expression `(function() { var exports = 3; exports = 4; })()` to be global or scoped to the IIFE?
[08:45:45] *** nortoh is now known as luvings
[08:45:48] *** Quits: kakashiA1 (~kakashi@105.159.158.112) (Ping timeout: 256 seconds)
[08:46:04] *** Parts: luvings (~nortoh@user/nortoh) (Textual IRC Client: www.textualapp.com)
[08:51:50] <jaawerth> both  do actual parsing, so I imagine it wold interpret it correctly. definitly eslint, I'd say
[08:53:46] *** Quits: Junxter (~Junxter@121.237.63.222) (Quit: Leaving)
[08:54:00] <sheetjs> was playing with this eslint tree-shaking plugin
[08:54:18] <sheetjs> https://www.npmjs.com/package/eslint-plugin-tree-shaking and it was complaining about the aforementioned setup, so maybe its a plugin issue
[08:57:36] *** jazzy2 is now known as jazzy
[08:59:10] <k_sze> If I understand correctly, the standard Date object is immutable, right?
[08:59:28] <sheetjs> the setters mutate
[08:59:42] <sheetjs> n> var x = new Date(); x.setTime(0); x
[08:59:43] <jellobot> (okay) 1970-01-01T00:00:00.000Z
[09:00:04] <k_sze> Oh, I kept thinking the setters return new instances.
[09:01:30] *** Quits: nwoob (~apple@152.57.206.11) (Ping timeout: 252 seconds)
[09:04:36] *** Joins: Junxter (~Junxter@121.237.63.222)
[09:06:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:07:46] <ljharb> k_sze: Date instances are fully mutable
[09:07:50] <ljharb> Temporal instances won't be tho
[09:08:34] <k_sze> Temporal is the upcoming new type based on moment.js (or was it luxon?), right?
[09:08:45] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:09:36] *** Quits: Inspiral (~inspiral@user/inspiral) (Ping timeout: 256 seconds)
[09:09:37] <ljharb> not really based on either
[09:09:42] <ljharb> but the moment maintainers are cochampions of it
[09:09:59] <ljharb> it's more based on jodatime than anything else tbh (a java library) but surprisingly that didn't make it horrible
[09:10:09] *** Joins: nwoob (~apple@152.57.206.11)
[09:10:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[09:11:20] *** Joins: Inspiral (~inspiral@host-92-22-22-119.as13285.net)
[09:11:20] *** Quits: Inspiral (~inspiral@host-92-22-22-119.as13285.net) (Changing host)
[09:11:20] *** Joins: Inspiral (~inspiral@user/inspiral)
[09:15:04] *** Quits: nwoob (~apple@152.57.206.11) (Ping timeout: 272 seconds)
[09:16:41] <theskillwithin> I love how momentjs is like, hey don't use me
[09:16:52] <theskillwithin> but its still probably the most popular library
[09:17:18] <theskillwithin> for dates
[09:17:21] <systemfault> It's simple, has a good DX and works well
[09:17:26] <ljharb> that was over a year ago. i really wish they'd waited until Temporal had a viable polyfill.
[09:17:56] <k_sze> I like luxon. It basically scratches all my itches so far.
[09:18:05] <ljharb> but you had to migrate to it
[09:18:16] <ljharb> and the very instant temporal has a viable polyfill, everything that's not temporal is obsolete
[09:18:41] <ljharb> so, it's fine, you just have to do twice the work
[09:18:53] <k_sze> It's fine, I'm sure the Sequelize and MySQL2 devs will take a long time to catch up.
[09:18:55] <sheetjs> n> Temporal
[09:18:56] <jellobot> (fail) ReferenceError: Temporal is not defined
[09:19:39] <k_sze> Sequelize and MySQL2 still can't get timezone translation to work correctly at this moment, as far as I understand.
[09:19:40] <ljharb> sheetjs: it's stage 2.5, really. they're not done making changes.
[09:19:44] <systemfault> Obsolete... I know people have strong opinions... but.
[09:19:54] <systemfault> Date has been there since the beginning... it's going to take a while
[09:20:10] <ljharb> sure but date's built in
[09:20:31] <ljharb> people have been screaming that moment is dead for a long time, and the announcement precipitated a TON of comments like "moment is dead, get on something alive"
[09:20:39] <theskillwithin> ljharb maybe they are just using reverse psychology
[09:20:47] <sheetjs> migrate to dayjs
[09:20:51] <ljharb> once Temporal is available, using anything else is just a waste of time
[09:20:57] <ljharb> including dayjs, date-fns, luxon, and moment
[09:20:57] <systemfault> theskillwithin: So ljharb wants us to use ESM? :p
[09:21:12] <ljharb> systemfault: i will destructure and export you
[09:21:26] <systemfault> Oh <some deity name> no! :'(
[09:21:30] <ljharb> lol
[09:21:34] <theskillwithin> btw for those who don't know what were talking about https://momentjs.com/docs/#/-project-status/
[09:21:35] <gkatsev> "anything else is just a waste of time" I see what you did there :P
[09:21:43] <ljharb> gkatsev: rimshot
[09:23:12] <theskillwithin> haha
[09:23:34] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:25:13] <jaawerth> ljharb: I don't necessarily agree. I could see date-fns as a micro-library that wraps Temporal in a friendlier API, with optional shimming for compat
[09:25:35] <ljharb> jaawerth: sure. but what would be the benefit?
[09:25:45] *** Joins: nwoob (~apple@103.97.165.115)
[09:25:47] <ljharb> jaawerth: obv it would benefit users of that library, to not have to migrate
[09:25:52] <ljharb> jaawerth: but other than "inertia", what would be the point
[09:25:53] <sheetjs> when the next API comes along?
[09:26:01] <ljharb> Temporal is built-in. it's the final api.
[09:26:15] <ljharb> the only reason all these date libraries exist is because Date is so horrible and broken. Temporal isn't.
[09:26:24] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[09:26:46] <ljharb> you could totally make up your own API to wrap around it, but the convenience would never be worth the downside of "every blog and tutorial and docs and dev you hire would have no idea what it means"
[09:28:56] <jaawerth> ljharb: well its still issing some common in-demand things, like pattern-based parsing/formatting
[09:30:11] <jaawerth> the API itself is fine but a collection of modular wrapper fn's would make it nicer to work with
[09:30:54] <ljharb> jaawerth: sure. but then it's just a factory for Temporal instances
[09:30:58] <jaawerth> one would still want to familirize with the api, naturally, and in many cases even I would forego unless I needed to do a tlot of work with time/dates, but I wouldn't call it a waste of time
[09:30:58] <ljharb> jaawerth: which is useful, but not a "date library" per se
[09:31:38] <jaawerth> well, the better the core apis are, the more libraries can become microlibraries + shims
[09:32:02] <jaawerth> the kind of thing one would often end up basically writing for yoursel anyway over time, but maintained and standardized
[09:32:55] <jaawerth> and date-fn's was already designed with that sort of thing in mind, given how it's modular and there are multiple versions of some functions that do or don't include xyz implementation fallbacksk iirc
[09:34:32] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[09:35:11] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:35:16] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:35:24] *** Quits: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[09:35:39] <jaawerth> ljharb: it's like, if I'm going to be working with vanilla DOM, I might go vanilla but if I'm doing a lot of building up of elements I'm goint to at least inclue a util like https://gist.github.com/jaawerth/ca5d1faae2b49924db55714e65c72077 if not a proper library like crel
[09:37:33] <jaawerth> (and yes I realize I should probably use less arrows in that, lol)
[09:37:44] <jaawerth> s/less/fewer/
[09:37:46] <ljharb> jaawerth: oof, that one file the gist is showing does not look great
[09:38:12] <ljharb> when everyone knows the native APIs, and your stuff requires literally anything beyond intuition, it's just not worth it
[09:39:33] <Maxdamantus> Hmm.. `Temporal.PlainDate`, wonder where the "plain" terminology comes from, seems weirdly non-specific.
[09:39:50] <ljharb> it used to be "Civil" i think
[09:39:51] <theskillwithin> i don't have an opinion on this, but maybe its worth to note that they are still changing Temporal so who knows wha tit will be?
[09:39:57] <ljharb> theskillwithin: nah not the names
[09:40:07] <ljharb> it's basically "wall time" or "local time" but people didn't want those for some reason
[09:40:11] <Maxdamantus> most of the names basically correspond to Java 9's (or maybe 8?) `java.time` API, except it's using "Plain" instead of "Local"
[09:40:13] <jaawerth> ljharb: what, the usage?
[09:40:15] <ljharb> ie, no timezone
[09:40:23] <jaawerth> better than doing it with the raw DOM, IMOM
[09:40:25] <jaawerth> *IMO
[09:40:29] <ljharb> jaawerth: like various aspects of the api, what types things return, etc
[09:40:30] <Maxdamantus> Yeah, Java calls it "Local", as in `LocalDateTime`
[09:40:55] <ljharb> yeah i liked local but at least one person was super againt that
[09:41:10] <jaawerth> though in the gist I guess hyperscript can admittedly be a little polarizing
[09:41:11] <theskillwithin> it would be kind of neato if momentjs and date-fns used Temporal behind the scenes,  just so that you could quickly update legacy code without much refactoring
[09:41:31] <ljharb> i'm sure they will eventually
[09:42:05] <jaawerth> like i said before, date-fns already does some of that with e.g. the Intl stuff
[09:42:25] <jaawerth> its designed to be ready or that via adapters and stuff, I believe
[09:43:30] <Maxdamantus> and yeah, after double-checking, they do all correspond exactly to Java 8's date/time API, just s/Local/Plain/
[09:43:49] *** Joins: codebam1 (~codebam@user/codebam)
[09:45:51] <Maxdamantus> Hm, actually, not too sure about `Duration`. Java has `Duration` as an amount of proper time, not entirely clear whether that's what it is in `Temporal`.
[09:46:20] <Maxdamantus> Java also has `Period` for non-proper time, eg, representing something like "P0DT0H0M0S"
[09:46:54] <ljharb> yes, Temporal Duration has that
[09:46:56] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[09:47:01] <ljharb> i'm pretty sure
[09:47:15] *** Quits: codebam (~codebam@user/codebam) (Killed (NickServ (GHOST command used by codebam1)))
[09:47:20] *** codebam1 is now known as codebam
[09:47:28] <Maxdamantus> Well, does `P1D` mean the same thing as `T24H`?
[09:47:41] <ljharb> afaik yes, it's some kind of standard
[09:47:53] <Maxdamantus> Then that's only proper time.
[09:48:07] <ljharb> i'm not sure what you mean
[09:48:08] <Maxdamantus> The standard doesn't mandate that. It's up to interpretation.
[09:48:12] *** Joins: igemnace (~ian@user/igemnace)
[09:48:18] <ljharb> i just meant the P string syntax
[09:48:20] <Maxdamantus> Because 1 day is not necessarily 24 hours.
[09:48:25] <ljharb> you can compute a Duration between any two Temporal objects that are in the same calendar
[09:48:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:48:46] <ljharb> if they're both in the same calendar, or, in ISO-compatible calendars, it Just Works
[09:48:59] <Maxdamantus> Okay, but does `P1DT0H` represent the same duration as `P0DT24H`?
[09:49:00] <ljharb> otherwise it throws, unless you provide such a calendar manually, i believe
[09:49:13] <ljharb> i have no idea. but i suspect that depends on the calendar
[09:49:31] <ljharb> there's a playground, you can go try it out
[09:49:40] <Maxdamantus> I don't really care about other calendars. Okay, I'll try it out.
[09:49:58] <Maxdamantus> In the Gregorian calendar, 1 day is not the same as 24 hours, because of DST changes.
[09:50:43] <ljharb> sure
[09:50:46] * theskillwithin starts looking for this Temporal playground
[09:50:53] <Maxdamantus> if you compare between two `Instant`s in Java, you'll get a `Duration`. If you compare between `DateTime`s, you'll get a `Period`.
[09:50:56] <ljharb> that implies that they wouldn't use "1 day", because of that difference
[09:51:09] <ljharb> Maxdamantus: it's also possible that you can ONLY compare two Instants, for that reason
[09:52:37] <Maxdamantus> theskillwithin: apparently you just open the dev tools while looking at the documentation.
[09:53:25] *** Joins: SR-71 (~user@user/SR-71)
[09:54:07] <theskillwithin> Maxdamantus holly shit
[09:54:12] <theskillwithin> https://tc39.es/proposal-temporal/docs/
[09:54:44] <theskillwithin> thanks =]
[09:56:00] <t3nj1n> damn thought y'all were talking about Temporal.io this whole time
[09:56:28] <theskillwithin> HAHAHA
[09:56:35] <Maxdamantus> Hm, yeah, `Duration` in Temporal is actually `Period` in Java.
[09:57:01] <theskillwithin> ya I was trying to google some stuff earlier, and a LOT of things are named Temporal unfortunately
[09:57:01] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:57:33] <ljharb> Maxdamantus: what indicates that?
[09:58:14] <Maxdamantus> ljharb: the fact that it simply remembers all of the inputs, so it doesn't try to convert them into an amount of proper time.
[09:58:21] <ljharb> ah k
[09:59:12] <Maxdamantus> actually, when I say "proper time", I don't necessarily mean proper time, but an amount of time according to UTC.
[09:59:46] <Maxdamantus> (which could have a difference of up to 38 seconds)
[10:00:18] <theskillwithin> including leap seconds?
[10:01:32] <Maxdamantus> Yes. UTC is modified for leap seconds, so 1 UTC second measured from a particular instant could actually be 2 seconds of proper time.
[10:04:45] <Maxdamantus> b> Temporal.Now.instant().toZonedDateTimeISO("GMT").toString();
[10:04:45] <jellobot> (fail) ReferenceError: Temporal is not defined
[10:04:57] <Maxdamantus> Meh. Anyway, I like that that explicitly says "UTC" rather than "GMT".
[10:07:09] <Maxdamantus> Oh, because it's a zone, not a timezone.
[10:07:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:11:22] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:12:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[10:12:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:16:02] <sheetjs> n> var f = function g(){}(); g
[10:16:03] <jellobot> (fail) ReferenceError: g is not defined
[10:16:27] <sheetjs> weird, this eslint plugin is tripping on something like that
[10:17:52] <theskillwithin> ljharb I thought you said work has not begun on a polyfill because there still debating about stuffs?  https://github.com/tc39/proposal-temporal/tree/main/polyfill
[10:18:37] <ljharb> theskillwithin: that's not what i said
[10:18:46] <ljharb> theskillwithin: and the polyfill in that repo is deprecated and not being worked on any more
[10:19:01] <ljharb> theskillwithin: there's two polyfills already out there. it's just that since the spec keeps changing, they're all out of date constantly
[10:19:03] *** Quits: pmercado (~pmercado@186.107.36.19) (Ping timeout: 252 seconds)
[10:19:13] <ljharb> sheetjs: what do you mean
[10:19:13] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14)
[10:19:18] <theskillwithin> these two https://github.com/tc39/proposal-temporal/blob/main/README.md#polyfills  ok ic
[10:19:51] <sheetjs> some tree-shaking plugin that is supposed to look for side effects in initialization
[10:20:22] <sheetjs> it's been helpful for finding dynamic lookup tables that need not be dynamic
[10:20:54] <sheetjs> but there are a number of issues around globals where the assignment is within a block
[10:21:07] <sheetjs> and other global messages around named iifes
[10:21:59] <ljharb> is the plugin assuming it's a node module? or a Script?
[10:22:09] <ljharb> because those have different behavior with globals and declarations and whatnot
[10:22:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:911e:d533:e490:181e) (Ping timeout: 240 seconds)
[10:22:21] <ljharb> also, why would you have IIFEs at all; modules exist
[10:22:57] <sheetjs> script of theseus
[10:23:07] <sheetjs> trying to incrementally modernize
[10:23:50] <ljharb> ah
[10:24:23] <theskillwithin> ooo nice to hear that sheetjs
[10:24:40] *** Joins: Adoi (~Adoi@user/adoi)
[10:25:45] <sheetjs> well its not modernize so much as not scare off contributors and potential teammates
[10:26:44] *** Quits: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be) (Quit: ZNC 1.7.x-git-3-96481995 - https://znc.in)
[10:28:13] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:a45d:272f:6e0f:d723)
[10:29:46] *** Quits: Adoi (~Adoi@user/adoi) (Remote host closed the connection)
[10:32:04] <ljharb> same thing
[10:33:03] <theskillwithin> its a continouse process not a single task so ya kinda the same thing
[10:34:02] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:36:08] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 272 seconds)
[10:43:06] *** Joins: dea_ (~dea@213.128.80.36)
[10:43:34] *** Quits: dea_ (~dea@213.128.80.36) (Max SendQ exceeded)
[10:44:03] *** Joins: dea_ (~dea@213.128.80.36)
[10:47:11] *** Joins: silverdust (~silverdus@user/silverdust)
[10:51:51] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[10:52:10] *** Quits: kerat58 (~keeerat@user/tarek58) (Ping timeout: 256 seconds)
[10:53:30] *** Joins: kerat58 (~keeerat@user/tarek58)
[10:59:55] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 268 seconds)
[11:04:23] *** Quits: D4mned (~D1mned@212.101.253.13) (Read error: Connection reset by peer)
[11:05:12] *** Joins: D4mned (~D1mned@212.101.253.66)
[11:05:25] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[11:05:38] *** Quits: twiclo1 (~twiclo@vpn.utahbroadband.com) (Quit: WeeChat 3.4)
[11:05:43] *** Joins: x86_ (~x86@162-211-34-211.bltnilaa.metronetinc.net)
[11:06:37] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[11:07:24] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:08:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:08:36] *** Quits: x86 (~x86@162-211-34-208.bltnilaa.metronetinc.net) (Ping timeout: 256 seconds)
[11:11:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:12:27] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[11:13:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[11:15:07] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[11:17:23] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:20:49] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:24:51] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[11:26:40] <paulcarroty> IIFE great for small scripts, guess it was designed for
[11:27:38] *** Joins: thiras (~thiras@user/thiras)
[11:28:36] <since_> Program JavaScript as if it was LISP?
[11:35:46] *** Joins: rcoote (~rcoote@2a02:908:690:a140:1e96:bdd4:cd2c:bd5a)
[11:36:03] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[11:37:11] *** Quits: dea_ (~dea@213.128.80.36) (Ping timeout: 256 seconds)
[11:37:46] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:38:50] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Ping timeout: 272 seconds)
[11:43:32] <systemfault> With extra parens?
[11:52:07] *** Joins: aLeSD (~aLeSD@91.126.33.194)
[11:54:43] *** Joins: daniel-k39 (~daniel-k@fsf/emeritus/daniel-k)
[11:55:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:55:22] *** daniel-k39 is now known as daniel-k3
[11:55:25] *** Joins: justAstache4 (~justache@user/justache)
[11:55:43] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14) (Remote host closed the connection)
[11:55:46] *** Quits: c17r (~c17r@c17r.com) (Quit: ZNC 1.8.1 - https://znc.in)
[11:56:12] *** Joins: c17r (~c17r@c17r.com)
[11:56:18] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:519b:4fb9:c7e3:562)
[11:56:22] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:57:12] *** Quits: colordro1 (~erahhal@69.53.245.255) (Ping timeout: 272 seconds)
[11:57:20] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 256 seconds)
[11:57:21] *** justAstache4 is now known as justAstache
[11:57:59] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9c53:fc57:5d12:7033)
[11:59:56] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:00:07] *** Quits: Ducki_ (~ducki@p54bba84a.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[12:03:40] *** Joins: Ducki (~ducki@p54bba074.dip0.t-ipconnect.de)
[12:03:40] *** Quits: Ducki (~ducki@p54bba074.dip0.t-ipconnect.de) (Changing host)
[12:03:40] *** Joins: Ducki (~ducki@user/ducki)
[12:05:16] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:05:30] *** Joins: lapsi (~lapsi@85.14.25.194)
[12:05:46] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[12:05:52] *** Joins: rendar (~rendar@user/rendar)
[12:06:12] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[12:06:27] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:08:16] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:10:00] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:11:03] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[12:11:15] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[12:11:44] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:12:34] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[12:12:49] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[12:12:49] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[12:12:49] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[12:12:55] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:13:15] *** Joins: han-solo (~hanish@103.82.184.211)
[12:14:48] *** Quits: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[12:14:48] *** Joins: mrdata (~mrdata@user/mrdata)
[12:15:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:15:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:16:04] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:17:40] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:18:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:19:06] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:19:20] *** Joins: pulse (~pulse@user/pulse)
[12:20:00] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[12:21:01] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:22:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:22:37] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:25:27] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:25:49] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:27:12] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 252 seconds)
[12:28:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[12:29:04] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:31:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:39:18] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 252 seconds)
[12:40:07] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[12:40:40] <no_gravity> Is <script type=module ...> restricted to https or will it work on http pages as well?
[12:44:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[12:46:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[12:47:58] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:48:19] <no_gravity> Oh my god, it works over http as well. Life is so good.
[12:51:00] *** Joins: Adoi (~Adoi@user/adoi)
[12:54:21] <codebam> yes as long as you don't use file://
[12:55:02] <no_gravity> Yeah
[12:55:36] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:56:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[13:02:25] *** Joins: iomari891 (~iomari891@197.210.52.7)
[13:03:48] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[13:04:36] *** Quits: D4mned (~D1mned@212.101.253.66) (Ping timeout: 250 seconds)
[13:05:58] *** Quits: g00fy782 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[13:06:24] *** Joins: g00fy782 (~g00fy@user/g00fy)
[13:12:45] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[13:13:31] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[13:14:36] <no_gravity> I wonder if I need to make a global function to have an onclick hander access a function inside a module?
[13:16:01] <Dorward> @no_gravity: Avoid globals. Put a call to addEventListener in the module that defines the function OR export the function and put the call to addEventListener in a module that imports it.
[13:16:08] *** Quits: ekh` (~ekh@37.36.98.216) (Read error: Connection reset by peer)
[13:16:44] <no_gravity> Dorward: But how do I reach the module that imports it from the handler?
[13:17:00] *** Quits: x86_ (~x86@162-211-34-211.bltnilaa.metronetinc.net) (Ping timeout: 272 seconds)
[13:19:14] <Dorward> By defining the handler in that module.
[13:21:19] <Dorward> https://pastebin.com/LQXfPPBX
[13:22:14] <no_gravity> Dorward: That just assigns the function to the handler. It will not let the function access the rest of the module.
[13:27:21] <Dorward> Normal scope rules apply. The function can access anything else that was in scope in the module where it was defined. It can also access any data on the element it is bound to using event.currentTarget. If you need to pass extra data in then you could rewrite myFunction so it is a function you call immediately and pass in any extra data you want and which then returns the function you want to use as the event listener (i.e. as
[13:27:21] <Dorward>  a closure)
[13:28:13] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:29:44] <no_gravity> Oh, you are right!
[13:29:49] <no_gravity> Nice. All good now.
[13:33:35] <Dorward> 👍🏻
[13:35:11] <no_gravity> Thanks man!
[13:35:12] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[13:36:34] *** Joins: silverdust (~silverdus@user/silverdust)
[13:41:27] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 252 seconds)
[13:41:57] *** Quits: rcoote (~rcoote@2a02:908:690:a140:1e96:bdd4:cd2c:bd5a) (Ping timeout: 240 seconds)
[13:42:51] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:43:25] *** Joins: silverdust (~silverdus@user/silverdust)
[13:44:03] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14)
[13:47:30] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:519b:4fb9:c7e3:562) (Ping timeout: 250 seconds)
[13:47:50] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[13:48:26] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[13:54:58] *** Joins: nomic (~nomic@185.217.117.88)
[14:03:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:03:40] *** Joins: stagas (~stagas@2a02:587:c407:c824:76c3:7bfe:1403:55e)
[14:08:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:12:18] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[14:17:59] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:19:48] *** Joins: heatwave (~heatwave@2402:e280:2203:30d:6ae5:8bbb:11e2:fb8f)
[14:20:09] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Quit: leaving)
[14:20:37] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[14:20:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[14:21:02] *** Quits: zauberfisch (~Zauberfis@cm147-42.liwest.at) (Ping timeout: 240 seconds)
[14:21:45] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.4)
[14:22:11] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[14:27:17] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[14:31:00] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[14:36:27] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[14:36:54] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[14:36:58] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[14:38:12] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 240 seconds)
[14:39:09] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[14:41:00] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[14:44:38] *** Joins: Rockwood (~Rocky@user/rocky)
[14:50:18] *** Joins: D4mned (~D1mned@212.101.253.66)
[14:54:11] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:54:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[14:57:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[14:58:41] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:00:01] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[15:01:40] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[15:03:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[15:05:56] *** Quits: clamiax (~clamiax@net-109-116-207-237.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[15:06:35] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[15:07:45] *** Joins: keypusher (keypusher@user/keypusher)
[15:08:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:09:16] *** Joins: goddard (~goddard@user/goddard)
[15:10:17] *** Joins: zauberfisch (~Zauberfis@cm147-42.liwest.at)
[15:12:12] *** Joins: crashrep (~crashrep@user/crashrep)
[15:14:28] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[15:15:14] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[15:15:45] *** Joins: hanish (~hanish@178.248.114.94)
[15:16:19] *** Quits: hanish (~hanish@178.248.114.94) (Client Quit)
[15:16:49] *** Quits: han-solo (~hanish@103.82.184.211) (Killed (NickServ (GHOST command used by hanish!~hanish@178.248.114.94)))
[15:17:22] *** Joins: han-solo (~hanish@user/han-solo)
[15:20:58] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[15:21:22] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[15:21:24] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[15:21:53] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Read error: Connection reset by peer)
[15:28:48] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:29:15] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[15:30:34] *** Joins: pulse (~pulse@user/pulse)
[15:32:26] *** Joins: pmercado (~pmercado@186.107.36.19)
[15:33:34] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:34:06] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 245 seconds)
[15:39:30] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[15:39:48] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[15:40:40] *** Joins: stenno (~stenno@user/stenno)
[15:41:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:42:57] *** Joins: voltage_ (voltage@user/voltage)
[15:45:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[15:47:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:48:30] *** Quits: nwoob (~apple@103.97.165.115) (Ping timeout: 252 seconds)
[15:54:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[15:56:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:56:44] *** Joins: nwoob (~apple@152.57.194.1)
[15:57:05] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:57:34] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14) (Remote host closed the connection)
[15:58:07] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:9c86:74ff:8ed4:b258)
[15:59:01] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[15:59:47] *** Joins: The_Blode (uid537595@user/the-blode/x-7164444)
[16:03:56] *** Joins: konrados (~konrados@user-5-173-151-76.play-internet.pl)
[16:06:45] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:08:46] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[16:10:46] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:11:04] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14)
[16:11:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:12:48] *** Joins: dmaislin_ (~dmaislin@047-233-046-055.res.spectrum.com)
[16:14:12] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:9c86:74ff:8ed4:b258) (Ping timeout: 240 seconds)
[16:14:29] *** Quits: henry40408 (~henry4040@123-204-134-78.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[16:15:36] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Ping timeout: 272 seconds)
[16:17:06] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:18:10] *** Quits: lapsi (~lapsi@85.14.25.194) (Quit: Bye bye people :))
[16:21:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:23:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:30:35] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Ping timeout: 240 seconds)
[16:30:47] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[16:32:27] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:34:03] *** Joins: Tempesta (~Tempesta@user/tempesta)
[16:35:32] *** Quits: Tempesta (~Tempesta@user/tempesta) (Client Quit)
[16:36:53] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[16:40:45] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[16:41:35] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Ping timeout: 240 seconds)
[16:41:42] *** Quits: nwoob (~apple@152.57.194.1) (Ping timeout: 250 seconds)
[16:42:13] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[16:42:22] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[16:42:24] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:46:24] *** Joins: trevors (~trevors@user/trevors)
[16:49:10] *** Joins: silverdust (~silverdus@user/silverdust)
[16:52:39] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:55:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[16:56:38] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:59:58] *** Joins: kakashiA1 (~kakashi@105.154.2.98)
[17:04:30] *** Joins: Rockwood (~Rocky@user/rocky)
[17:04:30] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[17:04:42] *** Joins: nwoob (~apple@152.57.194.1)
[17:13:12] *** Quits: nwoob (~apple@152.57.194.1) (Ping timeout: 252 seconds)
[17:14:30] *** Joins: Adoi (~Adoi@user/adoi)
[17:17:06] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[17:17:41] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:22:47] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[17:22:47] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[17:27:41] *** Joins: trevors (~trevors@user/trevors)
[17:28:12] *** Joins: wand (~user@gateway/tor-sasl/wand)
[17:31:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:31:47] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[17:34:45] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Quit: Konversation terminated!)
[17:35:00] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[17:45:41] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[17:46:10] *** Parts: blezz (~blez@213-130-92-210.ip.btc-net.bg) ()
[17:49:23] *** Joins: eXistenZ (~biskit@bzq-109-67-64-151.red.bezeqint.net)
[17:49:33] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:53:33] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:56:30] *** Joins: blez (~blez@213-130-92-210.ip.btc-net.bg)
[17:58:01] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[17:58:50] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[17:59:02] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[17:59:21] *** Joins: pulse (~pulse@user/pulse)
[17:59:47] *** Quits: heatwave (~heatwave@2402:e280:2203:30d:6ae5:8bbb:11e2:fb8f) (Quit: WeeChat 3.4)
[18:03:33] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[18:03:58] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:04:20] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 252 seconds)
[18:11:07] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[18:12:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[18:13:21] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[18:16:21] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:16:30] *** Joins: luvings (~nortoh@user/nortoh)
[18:18:00] *** Quits: dmaislin_ (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:20:05] *** Joins: daoudr (~daoudr@2a02:1210:52f9:b500:5043:184:7f47:92c1)
[18:28:03] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:34:57] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:d1f4:cec6:e642:24cb)
[18:36:01] *** Joins: crashrep (~crashrep@user/crashrep)
[18:37:08] *** Quits: The_Blode (uid537595@user/the-blode/x-7164444) (Quit: Connection closed for inactivity)
[18:37:45] <Tabmow> Can anyone recommend a good data table/grid module that allows you to choose columns and layouts etc.?
[18:42:26] *** Quits: han-solo (~hanish@user/han-solo) (Quit: switching device)
[18:43:01] *** Joins: tofran55 (~tofran@bl15-47-228.dsl.telepac.pt)
[18:44:41] *** Joins: dea_ (~dea@213.128.80.36)
[18:44:46] *** Quits: federico_it (~textual@151.51.80.129) (Ping timeout: 256 seconds)
[18:44:46] *** Quits: tofran5 (~tofran@bl15-47-228.dsl.telepac.pt) (Ping timeout: 256 seconds)
[18:44:47] *** tofran55 is now known as tofran5
[18:44:55] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Ping timeout: 240 seconds)
[18:46:52] *** Joins: federico_it (~textual@151.51.80.129)
[18:46:57] *** Joins: Guest71 (~Guest71@86.32.35.115)
[18:47:41] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[18:47:56] *** Joins: han-solo (~han-solo@user/han-solo)
[18:52:10] *** Joins: nwoob (~apple@152.57.193.24)
[18:54:42] *** Quits: Guest71 (~Guest71@86.32.35.115) (Quit: Client closed)
[18:55:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[18:56:50] *** Quits: daoudr (~daoudr@2a02:1210:52f9:b500:5043:184:7f47:92c1) (Quit: Leaving)
[18:58:01] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:02:57] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:03:35] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Ping timeout: 240 seconds)
[19:03:48] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 240 seconds)
[19:05:00] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[19:06:23] <ThePendulum> like visibility and order?
[19:07:41] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[19:07:45] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[19:11:58] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:15:14] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:20:36] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[19:22:36] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[19:23:10] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8c89:1690:bd74:66be)
[19:24:44] <jaawerth> the most featureful modern one I've seen is ag-grid, but it's.. really kind of a lot. I've never used one that hassn't annoyed me on *some* fashion, it's just a hard thing to make a generalized module for without ending up with an unnecessarily complex config api
[19:24:55] <jaawerth> so much of the time I just do it from scratch to fit the usecase
[19:27:36] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[19:28:02] <qswz> is the expression "nothing is black or white" unsafe with BLM (black like matters thing)
[19:28:50] <qswz> nothing is reject or accept
[19:29:16] <qswz> Brown lives matter
[19:29:27] <qswz> we're all brown, just different shades of it
[19:38:17] <qswz> https://fr.wikipedia.org/wiki/Poutine_(Nice) funny homonym
[19:38:36] <qswz> I like poutine (French for Putin), I mean the fish
[19:39:08] <qswz> omelette du poutine
[19:40:35] <blueagain> qswz: don't let anyone dictate to you how you speak. keeping that in mind, civility is key when you communicate with people
[19:41:28] <qswz> yea, common-sense
[19:42:34] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[19:43:23] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[19:46:24] <jaawerth> I don't think that one is an issue since it doesn't have murky or racist origins or explicitly negative connotations - that one is particularly anodyne since it's referring to actual colors to talk about contrast, imo
[19:49:49] *** Joins: Adoi (~Adoi@user/adoi)
[19:50:40] <jaawerth> if someeone took issue with it I'd hear them out since I"m not personally affected but generally speaking if you can tell based on how literal an idiom is vs whether it's associating some kind of cultural connotation that may or may not have gross origins
[19:51:28] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:51:46] <blueagain> we use blacklist/whitelist all the time at work, doesn't seem to bother anyone
[19:52:33] <blueagain> but i'm not in the us, I suspect it's mostly a us thing
[19:53:30] *** Joins: x86 (~x86@162-211-34-211.bltnilaa.metronetinc.net)
[19:56:10] *** Quits: x86 (~x86@162-211-34-211.bltnilaa.metronetinc.net) (Client Quit)
[19:56:13] <qswz> yea, the BLM thing was quite centered in US
[19:56:31] <qswz> they have the trigger easy there
[19:57:31] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8c89:1690:bd74:66be) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:58:09] <blueagain> qswz: where you based?
[19:58:11] *** Joins: x86 (~x86@162-211-34-211.bltnilaa.metronetinc.net)
[19:58:31] <qswz> .fr
[19:58:42] <blueagain> oh, a neighbour
[19:58:43] <blueagain> .de here
[19:58:59] <qswz> yep, closer to .it guys tho
[19:59:23] <blueagain> oh, that would put you around the mountainy side
[19:59:30] <blueagain> I love Grenoble, I've been there several times
[19:59:36] <qswz> yea, but seaside
[20:00:28] <blueagain> nice climate
[20:00:45] <blueagain> it's too cold here most of the time
[20:09:34] <ezakimak> what do we use now that dgram is being held for security?
[20:12:04] <qswz> is it? https://nodejs.org/api/dgram.html
[20:13:42] <x86> https://gist.github.com/onosendi/796ccce1ec88e70ac3f2398a368e4945 <-- I'm new to React, how would I setup a unit test for this component to just ensure it renders?
[20:13:52] <x86> (preferrably using Jest)
[20:14:01] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8c89:1690:bd74:66be)
[20:16:03] <qswz> there are 2 approaches
[20:16:11] *** Quits: aLeSD (~aLeSD@91.126.33.194) (Remote host closed the connection)
[20:16:47] <qswz> e2e (puppeteer, cypress)
[20:17:03] <qswz> unit-tests: enzyme
[20:17:23] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[20:19:00] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[20:21:08] <x86> I'm trying to use Jest, not enzyme
[20:21:23] <x86> (unless Jest uses enzyme under the hood or otherwise)
[20:22:25] <ezakimak> that's v17.7.1
[20:22:40] <ezakimak> react-native seems to be stuck on v16 for other reasons
[20:23:15] <x86> "that's v17.7.1" -- what is "that"
[20:23:30] *** Joins: masoudd (~masoudd@user/masoudd)
[20:23:40] <qswz> his question followup
[20:24:07] <ezakimak> https://www.npmjs.com/package/dgram?activeTab=readme
[20:24:08] <qswz> https://nodejs.org/docs/latest-v16.x/api/dgram.html
[20:24:28] <qswz> ezakimak: that's a npm pacckage
[20:24:33] <qswz> you shouldn't use it
[20:24:38] <qswz> as it's part of the core
[20:24:52] <qswz> n> dgram
[20:24:53] <jellobot> (okay) { _createSocketHandle: [Function: deprecated], createSocket: [Function: createSocket], Socket: [Function: Socket] }
[20:24:54] <ezakimak> well, it stopped working for me
[20:26:46] <ezakimak> i was using node-onvif in a plain nodejs app just fine, now trying to move some of that code into a react-native-windows app and inside node-onvif it could not resolve require('dgram') anymore
[20:27:15] <ezakimak> i updated to node 17, and now everything is blowing up
[20:31:35] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:33:12] *** Joins: Betal (~Betal@user/betal)
[20:34:00] *** Joins: zebrag (~chris@user/zebrag)
[20:34:20] *** Joins: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net)
[20:34:39] <qswz> don't use node17
[20:34:42] <qswz> use LTS
[20:35:00] <ljharb> node 17 is perfectly fine, that's bad advice
[20:35:04] <ezakimak> "unable to resolve module dgram..."
[20:35:10] <ljharb> ezakimak: blowing up how, and updated from what
[20:35:50] <ezakimak> 17 gave me the "Failed to construct transformer: Error: error:0308010C:digital envelope..."
[20:36:05] <banana_> hey having an issue with <datalist> https://jsfiddle.net/vgeqh9cs/15 https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist specifies it has the global attributes which includes onchange, which to me means that it'll trigger the change event. but the change event doesnt trigger neither does the click event
[20:36:05] <ezakimak> some incompatibility with webpack or something.
[20:36:25] *** Joins: Rockwood (~Rocky@user/rocky)
[20:36:31] <ezakimak> i'm back to 16, don't have that issue anymore
[20:36:41] <Rockwood> o/
[20:37:03] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:37:15] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:38:30] <blueagain> node 17 kinda killed me though with json assertions
[20:38:39] <blueagain> they gotta get that sorted out asap
[20:39:03] *** Joins: nomic (~nomic@185.217.117.88)
[20:41:50] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 260 seconds)
[20:42:08] <x86> does anyone really use Dino?
[20:42:17] <ezakimak> if dgram is builtin, why is it searching for it: "dgram could not be found within the project or in these directories:..."
[20:42:35] <x86> ezakimak: are you trying to require it?
[20:42:44] <ezakimak> I'm not, but the code there is
[20:42:58] <qswz> show it
[20:43:10] <x86> that's likely the problem if you're trying to import something that's builtin :)
[20:43:49] <ezakimak> https://github.com/hawkeye64/onvif-nvt/blob/master/dist/modules/discovery.js
[20:43:54] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[20:44:03] <ezakimak> well the docs say to import it
[20:44:18] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:44:20] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[20:44:29] <ezakimak> but this isn't even my code
[20:45:05] <ezakimak> heh, the version that's been working is node v14
[20:45:10] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:45:23] <ezakimak> dunno if I can go back that far
[20:46:04] <qswz> you can switch to require style
[20:46:11] <qswz> ESM / CJS
[20:46:36] <qswz> you shouldn't have to use webpack on nodejs code
[20:46:43] <qswz> (imo)
[20:47:08] <ezakimak> this is for react-native-windows. I have no idea how it's all scafolded
[20:48:45] <Rockwood> x86, whts dino?
[20:48:59] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[20:49:00] <ezakimak> looks like I might have to use react-native-udp and update those libs
[20:49:44] <blueagain> ezakimak: some people say using --openssl-legacy-provider solves that for node 17, but it isn't recommended
[20:49:56] <blueagain> ezakimak: https://github.com/facebook/create-react-app/issues/11708
[20:50:12] <ezakimak> well, I tried that, but that didn't work, since the start script isn't react-scripts but react-native which doesn't understand that flag
[20:51:37] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:52:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[20:53:09] *** Joins: c4017w (~c4017@209.52.68.8)
[20:53:37] *** Joins: cheater (~Username@user/cheater)
[20:54:03] *** Joins: pulse (~pulse@user/pulse)
[20:54:08] *** Quits: c4017w (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[20:54:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:54:30] *** Joins: c4017w (~c4017@209.52.68.8)
[20:54:31] <banana_> or is it bad to use <datalist
[20:54:36] <x86> Rockwood: https://deno.land/
[20:54:37] <banana_> <datalist>
[20:54:45] <x86> Rockwood: I meant Deno not Dino :)
[20:55:06] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Quit: Leaving)
[20:55:26] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:58:22] *** Quits: iomari891 (~iomari891@197.210.52.7) (Quit: WeeChat 3.3)
[20:59:00] <ljharb> x86: what is Dino
[20:59:09] <ljharb> blueagain: just don't use native esm, problem solved
[20:59:29] <ljharb> x86: deno is a bit of a joke, it's node minus all the good parts, with a bunch of bad parts from browsers. just stick with node.
[20:59:42] *** Joins: ahmed (~ahmed@user/ahmed)
[21:02:08] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:03:40] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[21:03:56] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[21:04:14] <blueagain> ljharb's hate of deno is like dante's 9th circle of hell
[21:04:36] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Client Quit)
[21:04:50] <blueagain> ljharb: but I love esm
[21:05:11] <x86> ryzenda: I lived in Pittsburgh for quite a few years, mainly jefferson hills, penn hills, and downtown
[21:05:30] <x86> ryzenda: (just noticed your FiOS hostname with pitbpa in it :)
[21:05:35] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8c89:1690:bd74:66be) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:05:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:07:08] *** Joins: trevors (~trevors@user/trevors)
[21:09:07] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[21:10:09] *** Joins: colordro1 (~erahhal@69.53.245.255)
[21:10:39] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[21:14:49] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8c89:1690:bd74:66be)
[21:15:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[21:19:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[21:21:07] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:21:38] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:22:29] <x86> ugh... when is gamestop going to moon already
[21:24:42] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[21:25:41] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:25:55] <ljharb> blueagain: so author in it, and use babel
[21:27:37] <blueagain> ljharb: I don't really need babel, I use esbuild and it just spits a single file
[21:27:54] <x86> babel can be a real PITA
[21:31:00] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:33:31] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[21:37:40] *** Quits: w0ng (~w0ng@103.1.212.92) (Ping timeout: 260 seconds)
[21:38:43] *** Joins: Akiva (~Akiva@user/Akiva)
[21:39:10] <Donitz> anyone got any opinions on the javascript vector editor I made
[21:39:11] <Donitz> https://donitz.itch.io/canvas-draw-2d
[21:39:14] <Donitz> password: vedit
[21:39:27] <Donitz> it exports js code
[21:40:46] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Excess Flood)
[21:41:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[21:42:23] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[21:43:36] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:45:12] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[21:47:42] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:8587:a6f1:7a25:7359)
[21:48:15] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[21:48:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[21:49:16] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9c53:fc57:5d12:7033) (Ping timeout: 268 seconds)
[21:50:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:51:45] *** Joins: src (~src@user/src)
[21:51:58] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:52:39] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:52:57] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:53:57] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:55:05] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:55:54] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:8587:a6f1:7a25:7359) (Ping timeout: 252 seconds)
[21:57:16] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:168:abfb:d0f6:8af8)
[21:58:34] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:58:52] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Ping timeout: 272 seconds)
[21:59:06] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[22:00:39] <ljharb> blueagain: ok well, then that's still not native esm, because you can still spit out nice proper cjs
[22:00:44] <ljharb> x86: babel's the best
[22:03:03] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:168:abfb:d0f6:8af8) (Ping timeout: 252 seconds)
[22:03:27] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:9811:d712:229f:c52d)
[22:05:12] *** Quits: kakashiA1 (~kakashi@105.154.2.98) (Ping timeout: 272 seconds)
[22:08:37] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:40a9:e9f:a391:854f)
[22:08:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[22:09:39] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:9811:d712:229f:c52d) (Ping timeout: 252 seconds)
[22:11:57] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[22:12:14] *** Joins: nomic (~nomic@185.217.117.88)
[22:13:18] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:40a9:e9f:a391:854f) (Ping timeout: 260 seconds)
[22:15:20] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8c89:1690:bd74:66be) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:16:22] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f159:26ca:2ee1:9c60)
[22:17:57] *** Quits: dea_ (~dea@213.128.80.36) (Quit: Leaving)
[22:18:24] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[22:18:57] *** Quits: average (~average@user/average) (Ping timeout: 240 seconds)
[22:20:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[22:21:00] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:21:01] *** Quits: x86 (~x86@162-211-34-211.bltnilaa.metronetinc.net) (Quit: leaving)
[22:21:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f159:26ca:2ee1:9c60) (Ping timeout: 252 seconds)
[22:21:59] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4c20:4a47:9066:23bd)
[22:22:42] *** Joins: bambanxx (~bambanx@2800:150:106:1061:8c89:1690:bd74:66be)
[22:26:20] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[22:27:44] *** Joins: crashrep (~crashrep@user/crashrep)
[22:29:04] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Quit: leaving)
[22:29:33] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:b94e:8caa:5124:ee8)
[22:29:59] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:31:55] *** Quits: Cyp (~cyp@213.237.85.100) (Read error: Connection reset by peer)
[22:32:42] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4c20:4a47:9066:23bd) (Ping timeout: 250 seconds)
[22:32:51] *** Joins: Cyp (~cyp@213.237.85.100)
[22:35:38] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[22:37:41] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:b94e:8caa:5124:ee8) (Ping timeout: 252 seconds)
[22:38:20] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 250 seconds)
[22:38:48] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:38:58] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[22:40:13] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[22:40:50] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:9079:8a0b:f042:c639)
[22:41:01] *** Joins: mdemo (~mdemo@user/mdemo22)
[22:41:41] <lf94> ljharb: you may be one of the best people to ask this: do you know if v8 stores string in a funky way in memory?
[22:42:00] <lf94> ljharb: I dumped memory of this electron app, but I can't find a string that would be present in the DOM
[22:42:11] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Client Quit)
[22:42:12] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[22:42:32] <lf94> ljharb: I'm testing if secrets are kept in memory, but as a preliminary test I'm just searching for strings visible on a page
[22:42:45] *** Joins: clamiax (~clamiax@net-109-116-207-140.cust.vodafonedsl.it)
[22:43:20] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[22:46:06] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:810c:9e6a:c21d:4044)
[22:46:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[22:46:36] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:9079:8a0b:f042:c639) (Ping timeout: 240 seconds)
[22:48:26] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 256 seconds)
[22:51:02] *** Joins: x86 (~x86@173-165-70-17-Illinois.hfc.comcastbusiness.net)
[22:51:29] *** Joins: duds- (~duds-@user/duds)
[22:53:48] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:810c:9e6a:c21d:4044) (Ping timeout: 240 seconds)
[22:54:14] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:55:25] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:55:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:57:06] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[22:57:13] *** Joins: lara9937 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[22:57:21] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:57:50] * lf94 is now reading v8 source...
[22:58:32] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:608a:bc50:94ed:983e)
[22:59:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:59:29] <Alexendoo> lf94: Before you dive down that route, did you search for the text as utf-16?
[22:59:41] <lf94> I didnt
[22:59:50] <lf94> How can I do that with grep?
[22:59:54] <lf94> or any tool
[22:59:57] <lf94> I'm open to using anything
[23:03:18] <lf94> In src/strings/string-builder I'm seeing reference to "String" type. Is this a C++ type?
[23:03:26] *** Quits: D4mned (~D1mned@212.101.253.66) (Read error: Connection reset by peer)
[23:05:12] *** Joins: D4mned (~D1mned@212.101.251.71)
[23:05:35] <since_> strings coredump | awk '{length($0) " " $0}' | sort -n -r | less
[23:06:42] <ljharb> lf94: i don't know
[23:06:51] <ljharb> lf94: but also of course secrets are kept in memory, where else would they be
[23:07:12] <lf94> ljharb: I want to check they are still there after clearing them :)
[23:07:17] <x86> on disk in plaintext, of course!
[23:07:46] <KevinX> Crazy to see the recent State of JS report continuously brought up as evidence that JS devs want types. People could have just answered types randomly or because it's the only thing on the list they understood. It's hardly a formal survey.
[23:07:50] <lf94> since_: I'm not sure that's going to work better than 'grep -a 'thing' coredump'
[23:07:56] <x86> hashes are for the birds... all the cool kids use plaintext
[23:08:09] <Alexendoo> lf94: A silly but works way is grep -a 't.h.i.n.g'
[23:08:14] <since_> lf94: it shows you how the strings look like
[23:08:15] <lf94> KevinX: the number is too high for it to be random
[23:08:19] <lf94> Alexendoo: :ooo
[23:08:22] <lf94> I might try that then
[23:08:36] *** Joins: pulse (~pulse@user/pulse)
[23:09:03] <since_> lf94: and when you leave away the awk thing you might have context
[23:09:05] <Alexendoo> For strings there's the --encoding option, which is probably less hacky
[23:09:21] <since_> Search less by /
[23:09:32] <lf94> grep -a 'W.e.l.c.o.m.e.' 276069.dump didnt work
[23:09:44] <lf94> ("Welcome" is a string displayed on the page)
[23:10:13] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[23:10:33] <lf94> I may try binwalk next
[23:10:44] <since_> lf94: did you dump the right process?
[23:10:55] <systemfault> Usually, assuming the devs aren't stupid, passwords are never left in memory, they're overwritten as soon as they're done using
[23:11:13] <lf94> systemfault: well they were. I was tasked with locking down this application.
[23:11:25] <KevinX> lf94 not sure if that holds. If you look at the list it's also sorted by advanced topics with decorators at the bottom (I doubt many JS devs know what a decorator is)
[23:11:34] <lf94> systemfault: so I've done exactly that, but I don't want to just assume clearing is enough - I want to actually check it.
[23:11:41] <lf94> I'm doing due diligence
[23:11:54] <lf94> since_: yeah.
[23:12:15] <since_> did you see any other strings using the strings command?
[23:12:28] <systemfault> lf94: You mean at the JS level? Not native?
[23:12:32] <lf94> Yep, I do see strings, but they are strings for other programs, like NodeJS
[23:12:40] <since_> maybe with --encoding=l
[23:12:53] <lf94> man grep didnt show me --encoding existed
[23:13:02] <since_> man strings
[23:13:05] <lf94> :D
[23:13:18] <lf94> Thank you very much for your help by the way, even if we're not there yet
[23:13:28] <lf94> systemfault: not sure what you mean
[23:15:12] <KevinX> Also, only 6513 voted for static types as their choice. It wasn't even the highest first choice (std lib was). It just won the rank vote
[23:15:27] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:15:43] <lf94> binwalk is for sure finding loaded source code in memory
[23:18:00] <systemfault> lf94: Usually, precautions are used when dealing with passwords at the "native level" (memory containing passwords is zero'ed after use for example). But I have no idea of what happens if the JS app is running and the passwords are kept in JS memory
[23:18:42] <lf94> systemfault: exactly. I'm aware of how native applications deal with it; I want to be sure the same approach is working here.
[23:22:24] *** Quits: lara9937 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[23:27:18] *** Quits: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net) (Quit: Goodbye)
[23:28:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[23:32:19] <lf94> Ok ok, I don't know what grep is doing, but it's not working as intended.
[23:32:25] <lf94> binwalk is actually finding it
[23:32:59] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[23:34:30] *** Quits: x86 (~x86@173-165-70-17-Illinois.hfc.comcastbusiness.net) (Ping timeout: 272 seconds)
[23:36:02] *** Quits: Junxter (~Junxter@121.237.63.222) (Ping timeout: 256 seconds)
[23:36:24] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:14ca:e3f3:4023:5c06)
[23:40:21] *** Joins: pavonia (~user@user/siracusa)
[23:43:27] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[23:43:39] *** Quits: bambanxx (~bambanx@2800:150:106:1061:8c89:1690:bd74:66be) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:43:44] *** Joins: x86 (~x86@173-165-70-17-Illinois.hfc.comcastbusiness.net)
[23:43:53] *** Joins: crashrep (~crashrep@user/crashrep)
[23:43:55] *** Joins: msfninja (~kali@user/msfninja)
[23:47:00] <msfninja> after 2 years finally decided to figure out how drag and drop works with js and html. looks like i got it right: https://jsfiddle.net/msfninja/gay02cem
[23:47:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[23:48:03] *** Joins: quartz (~quartz@user/quartz)
[23:49:53] <quartz> Hi. I'm trying to create a simple button in JQuery that, when pressed, opens a dialogue box in the browser with two buttons: accept and cancel. Why does my button not work? https://jsfiddle.net/d2cxfghL/     Thank you for your help.
[23:50:24] *** Joins: Absolute0 (~rrakhamim@165.225.220.230)
[23:50:24] *** Quits: src (~src@user/src) (Quit: Leaving)
[23:52:26] <msfninja> where is the .dialogDiv ?
[23:53:36] *** Quits: RougeR (~rougex250@user/rouger) (Ping timeout: 252 seconds)
[23:54:56] <quartz> msfninja: I thought that was some JQuery funciton.... weird... it does not exist.
[23:55:26] *** Joins: src (~src@user/src)
[23:55:36] *** Joins: Junxter (~Junxter@121.237.63.222)
[23:55:45] <msfninja> quartz: well, you seemingly call it on the .dialogDiv element
[23:55:47] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[23:56:11] <KevinX> msfninja nice drag and drop
[23:56:12] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:56:40] <msfninja> KevinX: ty
[23:57:12] <quartz> msfninja: Isn't there a function in JQuery that just allows for a dialogue box to pop up with some defined buttons?
[23:57:38] <x86> ugh, suddenly Chrome is unusable, even after restart... it keeps telling me failed to resolve DNS (even for google.com, e.g.) -- although Safari has no problems, and irssi obviously has no issues, and "host" and "nslookup" from command line work fine too
[23:58:26] <x86> I dunno if Chrome has some hidden proxy settings that would override the system proxy settings (i'm on a mac)
[23:58:27] <KevinX> msfninja you could try it with modern APIs next like intersection observer, mutation observer, maybe a proxy?
[23:58:58] <KevinX> x86 dns caching? There's a command to clear it
[23:59:40] <x86> command specific to Chrome? (the only thing affected)
[23:59:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[23:59:55] <KevinX> mac or windows?
