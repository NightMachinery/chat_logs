[00:00:21] <White_Flame> "somewhat ready" != "being actively deployed"?
[00:00:29] <shka> hitachi is
[00:00:38] <shka> NuScale is almost there
[00:00:59] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:01:20] <shka> here, you can buy it https://nuclear.gepower.com/build-a-plant/products/nuclear-power-plants-overview/bwrx-300
[00:01:21] -ixelp- BWRX-300
[00:01:33] <White_Flame> who is buying it?
[00:01:58] <shka> Canada, Poland...
[00:02:14] <White_Flame> ok
[00:02:24] <White_Flame> I haven't read up ina  while, but there was always a lack of actual deployment
[00:02:33] <White_Flame> if there's real national purchasers,t hen that's finally a good sign
[00:02:59] <selwyn> i just read a favourable nuclear piece in the ft, which is somewhat close to what governing elites actually think
[00:03:33] <shka> White_Flame: fukushima really put a wrench into deployment gears
[00:05:13] <selwyn> i thought it would be nice to visit a nuclear reactor one day
[00:05:16] <selwyn> maybe a research one
[00:05:32] <shka> nuscale is about to be deployed in the Idaho 
[00:05:42] <shka> selwyn: there is one in Austria!
[00:05:58] <shka> that was 100% completed but never turned one
[00:06:01] <shka> *turned on
[00:07:58] <shka> https://www.youtube.com/watch?v=WUVZbBBHrI4
[00:07:59] -ixelp- Inside The Billion-Euro Nuclear Reactor That Was Never Switched On - YouTube
[00:09:45] <selwyn> yes tom scott
[00:10:15] <shka> well, it is cool, you can walk around inside the reactor :D
[00:11:33] <sm2n> hah, my university has a research/medical reactor, and I've become desensitized to it
[00:11:39] <sm2n> had my physics classes next to it
[00:12:07] <shka> well, you can't enter the medical reactor
[00:12:16] <shka> it's a little bit too small for that :D
[00:13:05] <sm2n> yeah of course
[00:13:12] <sm2n> they do do tours of the facility though
[00:13:32] <Gnuxie> https://www.youtube.com/watch?v=kVB20yiNCPE
[00:13:32] -ixelp- Solo On The World's Longest Train Journey ðŸ‡·ðŸ‡º - YouTube
[00:14:15] <shka> also, no pressure container, and all that cool machinery around
[00:18:09] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[00:18:59] <dave0> maw
[00:21:23] <Alfr> Hello dave.
[00:22:14] <dave0> hey Alfr 
[00:22:26] <selwyn> austrian reactor looks fun
[00:22:43] <selwyn> was hoping to go through one that is turned on and catch the cherenkov glow from the reactor
[00:22:48] <selwyn> but this is likely to be difficult
[00:25:12] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:25:16] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:e8a4:9c79:a421:d583)
[00:27:58] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:30:44] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 245 seconds)
[00:52:46] <selwyn> https://i.kym-cdn.com/photos/images/newsfeed/001/832/584/44a.jpg
[00:53:55] *** Quits: iisi (sid19824@id-19824.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:54:07] *** Quits: manicennui (uid349235@id-349235.tinside.irccloud.com) (Ping timeout: 252 seconds)
[00:54:18] *** Quits: Balooga_ (sid407689@id-407689.lymington.irccloud.com) (Ping timeout: 260 seconds)
[00:54:46] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[00:55:17] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (Ping timeout: 264 seconds)
[00:56:19] *** Joins: iisi (sid19824@hampstead.irccloud.com)
[00:57:18] *** Joins: pl (sid98063@helmsley.irccloud.com)
[00:58:20] *** Joins: JSharp (sid4580@lymington.irccloud.com)
[00:59:27] <Gnuxie> lel
[01:01:50] <selwyn> hard to accept that it has taken how ever many years of going round russia for bald to do the trans siberian
[01:06:15] <Gnuxie> lol yeah
[01:09:33] *** Joins: manicennui (uid349235@id-349235.tinside.irccloud.com)
[01:12:54] *** Joins: dra (~dra@2a04:4540:6401:bd00:3877:c19a:a252:523a)
[01:12:58] <dra> Hello!
[01:13:17] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[01:27:00] *** Joins: hayley (~theemacss@user/hayley)
[01:28:18] <hayley> https://www.youtube.com/watch?v=jE4EarLZPYs
[01:28:18] -ixelp- The Number One Song In Heaven - YouTube
[01:39:46] <mfiano> hayley: i'm not touching this one any further. tag you're it
[01:41:11] <hayley> Which one? I got netsplit.
[01:41:28] <mfiano> hayley: this subthread https://www.reddit.com/r/lisp/comments/q2esnh/share_your_bookshelfves/hfndoal/
[01:41:30] <hayley> Ah, shit.
[01:41:30] -ixelp- Share your bookshel{f,ves} : lisp
[01:41:57] <hayley> ðŸ˜¬
[01:42:57] <hayley> I've never found that I "know what I'm doing" in a way that I know my object lifetimes very precisely. And, of course, you may as well give up with concurrent programs.
[01:43:40] <mfiano> My biggest issue with Rust is this:
[01:45:07] <mfiano> A developer that "knows what they are doing" only knows such because the compiler brainwashed^Wtrained them with its subset of valid programs. And, because Rust is so popular, it's producing an army of developers that don't know how to program correctly.
[01:45:28] <hayley> I'd expect no less for a C/C++ replacement, but primitive types and lifetimes are mostly used to make the machine happy with stack allocation and arithmetic the ALU does in one cycle, and not for types-as-proofs as such.
[01:46:20] <hayley> Not to say people don't do interesting things with the types, but it's far from "ML in C's clothing" as some people claim it to be.
[01:47:10] <mfiano> To make a program valid by the compiler you often have to write your own form of garbage collection using integral generations, which effectively disables to borrow checker. So the whole thing is a pretty big joke to me that nobody seems to be catching on to
[01:47:56] <hayley> Ah yeah, arenas and Rc just side-step the type/borrow system. It's technically safe but practically not.
[01:48:57] <hayley> I'll just ask what you have to do knowingly to know the object lifetimes that easily.
[01:49:15] *** Joins: selwyn (~selwyn@user/selwyn)
[01:51:16] <mfiano> The whole language is a joke, because it's creating these programmers with big egos because they successfully compiled their program. That says nothing about the 20844 .clone()'s they used, or the reference counting, custom allocators, etc that would be laughable by any other "competent" developer.
[01:51:44] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:52:52] <hayley> I _could_ make a point about how runtime stack escape detection is more successful at stack allocation than compile-time escape analysis. But Rust has subtyping on lifetimes, so you could stack allocate more, but OTOH who the fuck ever writes "where 'b: 'a" or whatever it is?
[01:53:38] <selwyn> til julia is getting massive traction in scientific computing communities
[01:53:55] <mfiano> I dunno enough to comment there. I stopped using Rust pretty quickly due to all of the above (and the hilarious lack of const generics, making everything i wanted to use it for impossible)
[01:54:25] <selwyn> the thing is, most scientists just cba with proglang discourse
[01:54:39] <selwyn> good news is that since julia is actually fast and it looks like python, they really like it
[01:54:52] <mfiano> that is old news
[01:55:23] <mfiano> a lot of R, Python, and MATLAB people have been migrating over for the 6 years or so I have been using Julia
[01:55:50] <mfiano> "using" as in just testing my Lisp math with their stdlib
[01:56:06] <selwyn> in our group, pretty much everyone uses python except me (common lisp) maybe someone else using c++?
[01:56:23] <selwyn> so i would say the tipping point is not yet reached ime
[01:56:36] <hayley> Well AIUI the relationships between lifetimes provide a more accurate form of escape analysis. Usually you decide either "this definitely does not escape" or "we call some function F and I don't know what F does" but now you can tell from the type of F if things will escape.
[01:56:50] <dra> mfiano: Re "The whole language is a joke, because it's creating these programmers with big egos because they successfully compiled their program." This was kind of the feeling I had when starting to understand Ada. ;)
[01:57:02] <mfiano> haha
[01:57:48] <hayley> At least with SPARK Ada programmers actually accomplished something w.r.t safety.
[01:57:53] <selwyn> what is juliaÂ´s macro system like?
[01:58:07] <selwyn> i would guess this is where i would miss sexps the most
[01:58:26] <mfiano> You definitely would. You would also miss CL with regard to its package system.
[01:58:30] <selwyn> oh?
[01:58:46] <mfiano> Packages are completely broken in my honest opinion...
[01:58:48] <selwyn> they must have namespacing 
[01:58:48] <selwyn> ok
[01:58:59] <dra> hayley: Yes, that's why I got interested in Ada. Got sidetracked though by discovering Lisp.
[01:59:47] <mfiano> 2 packages in Julia can have the same name but not be "EQ"
[02:00:16] <mfiano> This means that your REPL could be referring (and often is) to the wrong package, so you are calling a function from 1 package but updating the other, etc etc
[02:00:18] <selwyn> :/
[02:00:30] <dra> Uhg.
[02:00:31] <mfiano> It really ruins interactivity
[02:00:58] <mfiano> The REPL tooling silently creates identical packages when syncing iirc
[02:01:11] <selwyn> what
[02:01:21] <mfiano> The whole idea is flawed at a fundamental level.
[02:02:43] <selwyn> reminds me of siclÂ´s bootstrap target and host packages that share the same name and functionality. but that actually works lol
[02:03:09] <mfiano> That is the one thing that kept me from using it. Interactivity is nowhere near there for real use. And yes, macros are a pain of course.
[02:04:00] <selwyn> seems to me that good tooling is particularly important for interactive development
[02:04:21] <dra> And good introspection.
[02:04:31] <mfiano> THe other thing that kept me from using it, is there is really not much in the library ecosystem outside of data science
[02:04:57] <selwyn> trying to imagine interactive development with vs code lol
[02:05:15] <mfiano> I believe a language is like a tripod. It requires a good stdlib, a good library ecosystem, and good tooling, or it just falls flat. Sadly julia is missing more than 1
[02:07:45] <GreaseMonkey> if we take that metaphor to its extreme, if it sucks at all 3 it still works
[02:09:35] <mfiano> Maybe
[02:10:00] <mfiano> All languages work. I think the deciding factor is of relative work
[02:10:31] <mfiano> After all, I would prefer a NGL over binary
[02:11:08] <mfiano> These days we have too many languages that all work, and poorly compared to previous generations.
[02:11:29] <selwyn> languages are like onions
[02:11:31] <mfiano> One has to ignore the marketing and user flocks and actually give them an honest review
[02:11:32] <selwyn> they both have layers
[02:11:32] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[02:11:34] <GreaseMonkey> they stink?
[02:11:39] <selwyn> yes
[02:11:40] <selwyn> no
[02:11:54] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[02:12:17] <GreaseMonkey> python: writing it sucks a hell of a lot less when you have a type checker, but at the cost of limiting the libraries you can use without resorting to `# type: ignore`
[02:13:03] <hayley> https://www.youtube.com/watch?v=Ou4u4kOatck
[02:13:03] -ixelp- Summer '68 - YouTube
[02:13:03] <GreaseMonkey> fortunately most of the stuff worth using does have type annotations and in some cases mypy plugins
[02:13:14] <mfiano> FOr me, I can't even consider using a language without a standard written by an independent body
[02:13:27] <mfiano> THat leaves an incredibly small number of choices
[02:13:39] <selwyn> me too
[02:13:42] <GreaseMonkey> at this point i don't blame you
[02:13:52] <selwyn> i got spoiled by being able to use lisp all the time
[02:14:53] <GreaseMonkey> speaking of languages, i have an intention to make an entry to a troll game competition potentially using a modified ZZT and i'm seriously wondering if i should replace the scripting language with rv32im code
[02:15:10] <GreaseMonkey> and flagrant abuse of the CSR instructions
[02:15:57] <GreaseMonkey> `CSRRWI t0, TRY, NORTH \ BEQZ t0, didnt_work`
[02:16:52] <mfiano> I'm sure most of you are younger than me, but when you're old, you'll appreciate Common Lisp even more, and not due to more experience, just by the fact that it is standardized and isn't going to waste your time with compatibility or rewriting.
[02:18:41] <mfiano> Also, more people please post their images here :) https://www.reddit.com/r/lisp/comments/q2esnh/share_your_bookshelfves/
[02:18:42] -ixelp- Share your bookshel{f,ves} : lisp
[02:18:49] <hayley> SICL: Situationist Internationale Common Lisp (beach is about 50 years out of date on French history)
[02:19:52] <dra> mfiano: Although, with Common Lisp, rewriting things is fun!
[02:20:45] <hayley> SystÃ¨me international d'Common Lisp (he's still annoyed CL is only an ANSI standard and not ratified by an international body)
[02:20:51] <mfiano> Talk to me when you have a medium to large codebase: 100kloc+
[02:21:10] <hayley> Nah, 10kloc is large for Common Lisp imo.
[02:21:17] <mfiano> It is not
[02:21:20] <dra> Ok, not _that_ much fun.
[02:21:36] <mfiano> My math library alone for my game engine is close to twice that
[02:21:48] <mfiano> and that is a small piece of the gestault
[02:23:24] <hayley> I barely crammed a VM, distributed hash table, MOP hackery and some more stuff into 10.5kloc, so I consider it to be pretty large.
[02:24:02] <selwyn> cl seems too murican to be ratified internationally
[02:24:48] <dra> (format t "~r" 1000000000) ==> one billion
[02:24:50] <dra> Yup. :)
[02:24:50] <GreaseMonkey> at work we have a >100kloc codebase but that's for C
[02:25:02] <pjb> There's ISO Lisp then.
[02:25:24] <Arcsech> <mfiano> "I'm sure most of you are younger..." <- This is one of the reasons I'm leaning into CL - if I can run code from 60 years ago unmodified, it seems like, with some care, I can build a library of my own code that won't require fucking with to run in another 60
[02:25:35] <Arcsech> Well, assuming I'm lucky enough to still be programming when I'm 90
[02:25:48] <GreaseMonkey> it's also embedded stuff and we do use quite a few large buffers on sod-all RAM
[02:25:52] <selwyn> yes, lisp obeys the lindy principle
[02:25:59] <mfiano> Arcsech: Yes.
[02:26:21] <Arcsech> My current work codebase is ~2 million lines of java
[02:26:24] <GreaseMonkey> and some stuff does have strict time limits, e.g. i need to be able to dispatch a certain thing in 90 cycles from a line going high
[02:26:40] <dra> Arcsech: Sounds like the stuff of nightmares.
[02:28:33] <GreaseMonkey> ...fun thing, there's also 283 lines of CL in the codebase but they're purely for reference as to how some tables were generated
[02:28:57] <GreaseMonkey> because SBCL goes fast and CL is fairly easy to get somewhat complex stuff going
[02:29:32] <GreaseMonkey> there might also be some prolog in there or i might not have put that into the codebase but that was useful for working out pin mux allocations
[02:30:10] <GreaseMonkey> but yeah outside of experimental stuff the only languages used in the codebase are C, ARM assembly, and Python
[02:30:50] <hayley> https://i.redd.it/y59tcne3q0k31.png
[02:33:29] <selwyn> dear ayn rand, you are against wealth redistribution yet you accept social security, curious
[02:43:36] <Arcsech> It's not as bad as it sounds, a good ~half of that is tests, and also includes a substantial amount of client code. Looooooots of boilerplate, though
[02:43:51] <Arcsech> This is a database-like product, so there
[02:44:41] <Arcsech> 's a ton of tests and boilerplate is preferred to anything that is slower but more concise
[02:51:00] <copec> I love this guy's stuff https://twitter.com/zippy731/status/1446190007794864140?s=20
[02:55:33] *** Quits: dra (~dra@2a04:4540:6401:bd00:3877:c19a:a252:523a) (Remote host closed the connection)
[03:03:21] <hayley> https://www.youtube.com/watch?v=39SiPS87TEI
[03:03:21] -ixelp- You Are in My Vision (Live 79) - YouTube
[03:03:26] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[03:03:55] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[03:11:46] *** Quits: random-nick (~random-ni@87.116.183.117) (Ping timeout: 245 seconds)
[03:17:47] <gilberth> The greater challenge is to keep the wifi at behaving.
[03:18:37] <gilberth> It's more reliable by keeping a ping(1) alive.
[03:19:24] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:20:42] <gilberth> Perhaps I just route the traffic over my machine at my evil house across the internet?
[03:21:47] <gilberth> This is ridiculous. </whine>
[03:23:12] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[03:26:17] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[03:28:26] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[03:28:50] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[03:39:04] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[03:41:09] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[03:46:54] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[03:47:13] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[03:50:40] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[03:51:22] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[03:58:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[03:58:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:03:05] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 260 seconds)
[04:05:53] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[04:26:34] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[04:34:56] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:36:52] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:e8a4:9c79:a421:d583) (Remote host closed the connection)
[04:38:50] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[04:39:31] <kakuhen> so im taking an algorithms class for some reason and i decided to use common lisp for the one and only coding problem
[04:39:42] <kakuhen> i bet my TA is going to hate me now
[04:41:32] <copec> Julia has a lot of lispiness and can match the typical style in algorithm books
[04:42:35] <kakuhen> the prof is using pseudocode that mimics python
[04:42:43] <kakuhen> so what i am doing is quite the deviation from the usual expectation heh
[04:42:46] <mfiano> It seems there is a whole page and a half missing from the original 30 year old PAIP book publishing, which seems to exist in the new open-source version. "Upgraded" my physical copy with a digital one.
[04:43:34] <kakuhen> basically i first describe my algorithm mathematically then i abuse mapcar, reduce, and friends to implement my idea in CL
[04:43:44] <hayley> https://www.youtube.com/watch?v=s8Lezo-H9Yo
[04:43:44] -ixelp- Pink Floyd - One Of These Days 5.1 Surround 96 kHz/24 bit - YouTube
[04:45:39] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Remote host closed the connection)
[04:46:09] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[04:47:37] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[04:50:34] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[04:50:44] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 265 seconds)
[04:53:34] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Remote host closed the connection)
[05:07:07] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[05:28:55] *** Joins: Alfr (~Alfr@user/alfr)
[05:36:40] <mfiano> PAIP is getting on my nerves lol
[05:37:12] <mfiano> https://i.lisp.cl/JOsF9H.png
[05:38:54] <moon-child> lol
[05:39:25] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[05:39:31] <copec> I thought that was too... hopeful as well? You see him apply it over and over throughout the book and then it makes more sense
[05:39:46] <mfiano> Hmm?
[05:39:54] <mfiano> He forgot the 5th stage of analysis
[05:40:06] <hayley> 5. (GO 1)
[05:40:52] * moon-child mumbles obscenities at x86
[05:40:58] <copec> Yeah, he heavily implies it though, as he does that multiple times while building up each example paradigm
[05:41:09] <copec> and like, points out that's what he is doing
[05:41:39] <mfiano> Sorry, 5 is "debugging and testing"
[05:41:52] <mfiano> err "debugging and analysis"
[05:41:56] <mfiano> 4 is testing
[05:41:57] <hayley> "The author also suggests using pool allocation, but a mark-sweep collector as suggested would require more complexity in the memory pool. We think that such a pool would end up with a worse implementation of malloc, which would have to be even more complex if one also wants to introduce variable-sized structure types in the language. At this rate, we most likely have a buggy version of the malloc provided by the C standard library, which the
[05:41:57] <hayley> author has painted in a very bad light."
[05:42:01] <hayley> moon-child: What happened this time?
[05:42:29] <hayley> mfiano: Got an answer: "Weâ€™d have to ask a rustâ€¦or even C developer that works at a high level.  I personally canâ€™t answer that yet but itâ€™s desired for a reason."
[05:43:03] <mfiano> Oh lordy.
[05:43:13] <moon-child> needed to space out my bitfields again.  Think I only need 16-bit alignment but gave it 32 just in case
[05:43:18] <mfiano> I really hate short answers that are orthogonal to the argument
[05:43:26] <moon-child> also all the bitfields in a VEX prefix are inverted.  For ... some reason
[05:43:30] <hayley> I read it as "I dunno."
[05:43:38] <mfiano> Yeah exactly.
[05:43:41] <hayley> Yes, VEX is great like that.
[05:45:20] <mfiano> I read it as a contradictory statement: "We need to get a biased answer to make it more meaninful"
[05:45:28] <hayley> lol
[05:46:25] * hayley has nothing better to do and writes about the bonus "projects" in DBYOL
[05:47:43] <hayley> The projects include micro-optimizing to use a hash table, rather than rethinking the environment representation, trying to get rid of the stupid in-place mutation in the interpreter so that you can GC, implementing your own malloc, and looking for unbound variables with dynamic scoping.
[05:48:34] <mfiano> AT LEAST ITS NOT COBOL
[05:49:57] <hayley> .oO( The best part about Twitter is that I like random posts which involve pianos and quantum mechanics by edgy young people, then stylewarning replies to them all. )
[05:51:39] <mfiano> oh beach is going to be around soon. I have to ask him how he got so good at Tetris
[05:51:50] <hayley> ðŸ˜³
[05:53:41] <hayley> I blame https://www.reddit.com/r/KingCrimsonCircleJerk/comments/nzqt1b/what_a_fucking_health_food/ for the meme idea
[05:53:43] -ixelp- What a fucking health food : KingCrimsonCircleJerk
[05:55:59] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[05:56:44] <mfiano> AIAMA TOC looks like it has answers to some of my half self-invented algorithms i haven't yet finished
[05:57:12] <mfiano> learning AI is weird when you have been trying to invent these things yourself for years and you get to compare known techniques :)
[05:58:06] <mfiano> Think I'll finish these two books and exercises before going back to code. Clearly need to learn more in this field
[06:02:19] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[06:05:04] * hayley resets "Days since hayley said something was anti-modular" counter
[06:06:50] <mfiano> Days wouldn't be granular enough for me...
[06:06:52] *** Joins: _abrantesasf_ (~abrantesa@187.36.170.211)
[06:07:14] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Ping timeout: 265 seconds)
[06:07:51] <hayley> In the Brachaland tradition, calling something anti-modular is one of the lowest insults you can say.
[06:12:05] *** Quits: _abrantesasf_ (~abrantesa@187.36.170.211) (Remote host closed the connection)
[06:15:07] <moon-child> oh no
[06:15:18] <copec> Have you been pushing commits of your project anywhere hayley? I'd love to look at it
[06:15:20] <moon-child> vex has an 'r' bit, but it also already have 4 bits for the register
[06:15:40] <hayley> Yes. IIRC VEX includes bits to extend the other register operands.
[06:15:48] <hayley> copec: Which project?
[06:16:05] <copec> Well I've sort of gathered you working on a compiler and a gc
[06:16:41] <hayley> Compilers: https://github.com/robert-strandh/SICL, https://github.com/telekons/one-more-re-nightmare GC: https://gist.github.com/no-defun-allowed/63fdbec5074ae054c011a0636be7e135
[06:16:42] -ixelp- GitHub - robert-strandh/SICL: A fresh implementation of Common Lisp
[06:16:45] <copec> usually when I peak in here, it is in the middle of a conversation about something, so I don't follow well
[06:17:01] <hayley> The latter is only really my notes, it isn't implemented yet. I might implement it for my final project for university, who knows.
[06:22:06] <copec> That makes me want to finish my lexer I was playing with a long time ago. I got to the point where I was walking a class instance of a DFA, but I wanted to generate code and compile it
[06:22:16] <copec> https://gist.github.com/copecog/f3fb69009a283a3b6d5e356479cbd3a1
[06:22:16] -ixelp- A reglex example Â· GitHub
[06:22:35] <hayley> Well, gilberth has the lexer.
[06:24:04] * moon-child hates lexers
[06:24:07] <moon-child> and parser
[06:24:12] <moon-child> all hail structural editors!
[06:24:35] <copec> I need to finish this and code from it
[06:24:36] <copec> http://hjemmesider.diku.dk/~torbenm/Basics/
[06:24:37] -ixelp- Basics of Compiler Design
[06:24:39] <mfiano> hayley: What do you mean SBCL has 4 bit tags?
[06:24:59] <hayley> mfiano: It does. There is a document about the tags somewhere...
[06:25:09] <mfiano> tagged pointers?
[06:25:33] <hayley> Yes.
[06:25:35] <mfiano> Why are fixnums bounded to 62 bits on x86_64?
[06:25:48] <mfiano> CCL is 60
[06:26:03] <hayley> They are 63 bits, but you also lose a bit for the sign tag.
[06:26:23] <hayley> http://www.chiark.greenend.org.uk/doc/sbcl-doc/html/sbcl-internals/Type-tags.html " This turns out to be three bits on 32-bit systems and four bits on 64-bit systems."
[06:26:23] -ixelp- SBCL Internals: Type tags
[06:26:26] <mfiano> Where does 4 come in to 62?
[06:27:13] <hayley> It doesn't, as SBCL reserves all tags in xxx0 for fixnums.
[06:27:41] <hayley> 64 bits = 1 zero for fixnum + 62 bit magnitude(-ish, it's two's complement of course) + 1 bit sign
[06:28:38] <copec> https://common-lisp.net/project/ecl/static/manual/Manipulating-Lisp-objects.html#Manipulating-Lisp-objects
[06:29:49] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 265 seconds)
[06:30:24] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[06:30:30] <mfiano> You lost me
[06:30:57] <mfiano> most-positive-fixnum is 62 bits. if 4 bits of a word are used for tagging, i don't see how that is possible
[06:31:38] <hayley> Okay, I'll amend the statement: up to 4 bits are used for tags.
[06:31:50] <mfiano> Ok that works
[06:32:46] <moon-child> ok, cool, I can assemble avx instructions now
[06:32:52] <hayley> But e.g. the SICL specification in 16.1 "Low-level tag bits" considers them three-bit tags, with the four tags 000, 010, 100, 110 used for fixnums.
[06:32:55] <hayley> moon-child: Congratulations!
[06:32:55] <mfiano> What about AVX2 :)
[06:33:00] * moon-child contemplates avx512, which he doesn't even have hardware for
[06:33:10] <hayley> No biggie, I think AVX2 uses the same instruction encodings.
[06:33:20] <moon-child> yeah
[06:33:25] <moon-child> no new encodings in avx2, just instruction ops iirc
[06:33:32] <mfiano> Ah
[06:34:15] <mfiano> 256 would be very useful for gamedev
[06:34:18] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 265 seconds)
[06:34:40] <hayley> AVX and AVX2 are 256-bit.
[06:35:09] <hayley> Much like SSE and SSE2, AVX and SSE only have float ops, and it took until AVX2 and SSE2 for integer ops IIRC.
[06:36:23] <mfiano> hayley: I wish someone would write a good guide on how to work with SBCL VOPs
[06:36:48] <hayley> I learnt mostly from https://pvk.ca/Blog/2013/06/05/fresh-in-sbcl-1-dot-1-8-sse-intrinsics/
[06:36:48] -ixelp- Fresh in SBCL 1.1.8: SSE intrinsics! - Paul Khuong: some Lisp
[06:37:08] <mfiano> is that paul's?
[06:37:15] <mfiano> because a lot was left to be desired
[06:37:17] <hayley> Yeah.
[06:37:33] <dave0> my (32 bit) forth is supposed to work in dos which has 20 bit pointers so i have 12 spare bits per pointer! i use 2 and reserve 4 at the moment
[06:38:04] <dave0> i don't really like it but it's so convenient
[06:42:54] <moon-child> the spare bits are just ignored?
[06:43:47] <mfiano> What does it mean for a cpu to have such an odd physical address size?
[06:43:54] <dave0> yes... it's dos so i have to convert to segment:offset which i do with a shift of 12 bits
[06:44:46] <dave0> address xxxabbbb (x=dont care) turns into a000:bbbb (segment+offset)
[06:45:30] <mfiano> One of my machines has 39 physical, 48 virtual...and another machine has 43 physical, 48 virtual
[06:45:37] <dave0> mfiano: it has 16 bit pointers, and they added segments so it could address a megabyte (which was considered enormous in those days)
[06:46:37] <hayley> https://www.youtube.com/watch?v=2AEln96mLU8
[06:46:38] -ixelp- Joan Of Arc (Maid Of Orleans) - YouTube
[06:47:25] <dave0> mfiano: it's a balance between having a large address space and using as few address bits as possible
[06:48:11] <dave0> afaik more address bits means more space used on the chip
[06:49:20] <dave0> but programmers like large address spaces
[06:49:21] <mfiano> "The x86_64 architecture has 48 bit virtual addresses. Pointers take 64 bits, but the top 17 bits of any 64 bit pointer are required to be identical (all 17 zeros or all 17 ones) so 16 of those 17 bits are redundant."
[06:49:24] <mfiano> why...
[06:50:17] <dave0> mfiano: it's a clever trick to stop people using the high bits for other purposes
[06:50:46] <mfiano> Seems like a waste
[06:50:51] <hayley> Yes, that went really well (read: TERRIBLY) when they moved from 68000 Macintoshes to 68020 Macintoshes.
[06:50:57] <dave0> i remember it from the 68000 which had 24 adress bits, then came the 68020 which used all 32 address bits
[06:51:05] <dave0> hayley: yep yep
[06:51:15] <hayley> People would put stuff in the higher bits, and it would crash and burn on 68020s.
[06:51:22] <dave0> mfiano: maybe you are too young to remember that
[06:51:30] <moon-child> mfiano: better way to think of it is that pointers are signed
[06:51:48] <mfiano> I'm not sure about that cpu. My first Mac was an Apple IIe
[06:51:53] <moon-child> you get a signed 48-bit address space, which is sign-extended into 64 bits.  And it catches overflow automatically
[06:52:00] <mfiano> err Apple
[06:52:00] <moon-child> (when converting back to 48 bits)
[06:53:06] <hayley> *Appel
[06:53:07] <dave0> i think the scientists cant yet create ram chips that has 2**48 bytes of ram, so adding the rest of the 16 bits would be wasted
[06:53:09] <mfiano> I would definitely not say I am young :/
[06:54:54] <dave0> as long as no one messes with the high 16 bits of a pointer, you could increse the number of bits without breaking software (in theory)
[06:55:13] <dave0> when they invent more massive amounts of ram
[06:55:59] <mfiano> That's like 256TB or something I think. Shouldn't be that far away :)
[06:56:45] <hayley> Virtual memory is virtual, you can get more than 256TB of disk, and divide your memory by some integer factor with some concurrent compacting GCs.
[06:57:06] <hayley> e.g. Linus Drop Tips https://www.youtube.com/watch?v=eCz-IixxR_k
[06:57:07] -ixelp- INSTALLING THE PETABYTE - Server Room Upgrade Vlog - YouTube
[06:57:31] <mfiano> remember when you had to activate HIRAM?
[07:01:10] <moon-child> hayley: yea but then your tlb gets sad
[07:02:05] * moon-child tries to figure out why nasm's encoding is valid for this instruction
[07:02:10] <hayley> You have two problems, and the other is running the trap handler.
[07:03:11] <dave0> how does garbage collection interact with swapping?
[07:03:42] <dave0> you wouldn't want to swap out an unreachable object
[07:04:31] <moon-child> to the contrary, an unreachable object seems like the bes tpossible thing to swap out
[07:04:47] <moon-child> hayley: wasn't there a paper you linked in here from the 80s on using massive secondary storage and GCing once a year or so?
[07:04:57] <hayley> Yes.
[07:05:16] <hayley> http://3e8.org/pub/scheme/doc/lisp-pointers/v1i3/p17-white.pdf
[07:05:33] <moon-child> :D
[07:06:24] <dave0> Address/Memory Management For A Gigantic LISP Environment
[07:09:10] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[07:09:35] *** Quits: semz (~none@user/semz) (Ping timeout: 265 seconds)
[07:10:21] <hayley> moon-child: Though, if a page is inaccessible, I don't exactly see the point of bothering with TLB, as the trap is substantially slower than reading main memory.
[07:11:14] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[07:11:20] <moon-child> hayley: idea is that most/much of the time memory will be mirrored times n, with high bits as tag/colour, right?
[07:11:47] <hayley> Yes, but reading the wrong colour is uncommon.
[07:13:00] <moon-child> oh--so you primarily read from one colour at a time, and periodically switch which is the 'primary' colour?
[07:13:17] <mfiano> Does anyone know if CLOS was not a thing when PAIP was written? It's advocating the use of CLtL2 as the definitive source, so that leads me to believe the standard was already finalized...but then I see weirdness like this:
[07:13:54] <moon-child> mfiano: perhaps it was a matter of 'cltl2 will be ratified soon; let me recommend the newest thing possible'?
[07:14:09] <hayley> Right. Marking changes references from an "unlogged" colour to a "logged" colour. Compacting changes references from a "stale" colour to a "corrected" colour.
[07:14:11] <mfiano> "This program has 2 defvar forms, 1 defstruct, and 4 defun forms. These are the most common Common Lisp toplevel forms"
[07:14:27] <moon-child> hayley: got it
[07:15:30] <hayley> But, per GC cycle, each reference is flipped exactly once, so trapping on the wrong colour becomes less likely as GCing progresses.
[07:17:00] <dave0> i think 1980's gigantic is different to 2021's gigantic
[07:17:05] <moon-child> I wonder what tlb eviction algorithm cpus use.  You want lru, I would think, to get rid of the stale mappings as soon as possible; but I would guess that 'normal' code (c w/ less flat addr space) wants something cleverer
[07:19:45] <contrapunctus> Good morning, everyone!
[07:19:53] <hayley> Good morning beach!
[07:19:54] <dave0> maw contrapunctus 
[07:20:03] <contrapunctus> hayley: ha
[07:20:35] <contrapunctus> What's new y'all?
[07:20:45] <dave0> ElephantLisp never forgets anything
[07:20:49] <hayley> https://www.youtube.com/watch?v=_tHIieA7TBc
[07:20:49] -ixelp- We Have A Technical (Remastered) - YouTube
[07:22:08] <dave0> would it take a year to fill 256TB of memory?
[07:22:30] *** Joins: semz (~none@user/semz)
[07:24:36] <moon-child> WTF x86
[07:24:45] <moon-child> soo vex has virtual prefix bits, which are really convenient
[07:24:51] <moon-child> except one of them is optional.  Sometimes.
[07:26:34] <dave0> only on tuesdays?
[07:34:57] <mfiano> CLtL2 was published in 1990, PAIP in 1992, the standard in 1994.
[07:35:09] <mfiano> In 1992, CLOS was not very popular
[07:35:26] <mfiano> Even though it was described at least 2 years prior in CLtL2
[07:59:50] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Remote host closed the connection)
[08:00:19] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[08:32:29] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[08:57:24] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[09:13:11] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[09:18:14] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[09:18:18] <mfiano> I find it strange to define parameters in a lambda-list using special variable names.
[09:19:03] <mfiano> I don'
[09:19:15] <mfiano> I don't think I have ever seen that before, and I have to think what it means
[09:19:20] <mfiano> for reference: https://gist.github.com/mfiano/b8f99fb6100c9d559fc44d448a262671
[09:19:21] -ixelp- c4p1.lisp Â· GitHub
[09:21:39] <moon-child> really?  I find it fairly obvious.  Though perhaps that is because I recently happened to use it in raku.  It looks more out-of-place in cl, but I am not sure why
[09:21:53] <mfiano> I suppose a lambda expression is just like a let form...but this just screams wtf to me
[09:22:27] <mfiano> I would have rather let bound around the call site to this function and only passed GOAL
[09:22:37] <mfiano> that should have the same effect iiuc
[09:24:45] <moon-child> 'same effect' locally, sure, but in the general case you should rather bind in callee
[09:25:04] <moon-child> (defun gps (state goals ops) (let ((*state* state) (*ops* ops)) ...))
[09:28:36] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[09:29:03] <moon-child> I figured out why it makes more sense in raku.  In raku, variables are sigilled; so @x is a sequence, &x a function, $x a scalar.  Special variables are indicated with the 'twigil' *; @*x is a special sequence, &*x a special function, $*x a special scalar.  So you're already used to looking closely at specific characters heading variable names
[09:30:04] <mfiano> looks like perl line noise
[09:34:12] <moon-child> mfiano: what would you say to the people who say 'lisp is just line noise!  There are too many parentheses; I cannot make heads or tails of it!'
[09:34:57] <moon-child> In fact, lisp has rather good syntax (imo).  Yet, at the same time, it is a shame that lisp has syntax at all.  The same is true for most languages.  Raku is one of the few languages that has justified its use of syntax
[09:34:59] * mfiano used Perl for several years a long time ago throughout college
[09:35:56] <mfiano> I just looked it up. It is a Perl derivative and all makes sense now
[09:36:10] <mfiano> Hope that means it compiles to native code at least
[09:37:21] <moon-child> 'perl derivative' yes, but semantically it is quite close to lisp
[09:37:46] <moon-child> it is jitted
[09:41:25] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 260 seconds)
[09:45:45] <mfiano> Odd. I would expect it to be decent then but I can't seem to find any benchmarks where even Python doesn't leave it in the dust.
[09:48:29] <moon-child> in 2010, the first prototype interpreters were something 1000-10000x slower than perl5.  Nowadays it generally beats python and perl by a decent, but not substantial margin; depends on application, of course.  And just last week was merged a major change to the implementatio of dispatch which led to major improvements.  Perhaps those benchmarks are old?
[09:49:05] <moon-child> In either case, it is likely to be much slower than e.g. cl.  (But that's as much quality of implementation as semantic richness soo Â¯\_(ãƒ„)_/Â¯)
[09:49:24] <mfiano> I'm not sure. Also I'm not knocking the language, I'm genuinely curious. Every few months I give a language a fair chance and try it out.
[09:49:31] <mfiano> I'm not sure if I want to for this yet
[09:50:40] <mfiano> Is there a standard. I read something about a "specification", but unsure how often that changes, or if it was written by an independent party.
[09:50:42] <mfiano> ?
[09:51:51] <moon-child> the specification is a test suite
[09:52:13] <hayley> https://www.youtube.com/watch?v=YZXKgl8turY
[09:52:14] -ixelp- Nick Mason's Saucerful Of Secrets - Fearless (Live At The Roundhouse) - YouTube
[09:52:48] <moon-child> it has been updated a few times.  But code written for old and new versions can coexist in the same image so compatibility is not a problem
[09:53:23] <moon-child> (well, not a 'few'.  There has been one revision)
[09:53:33] <mfiano> So it was specified by an independent organization but by one of the implementors?
[09:53:43] <mfiano> s/was/was not/
[09:54:03] <moon-child> right
[09:54:10] <mfiano> Hmm, I have seen how terribly wrong that went too many times :/
[09:54:14] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[09:54:41] <moon-child> culturally, there is interest in separating the language from the implementation, in a way which I don't see in many other languages.  It is more a matter of resources than anything
[09:55:27] <mfiano> What makes you use it over CL if it is very close to CL semantics?
[09:56:14] * hayley complains about the market and gets told a comparison she never made is wrong.
[09:57:19] <hayley> "That's $3000 now? I got this machine for $1200 in 2018 and I wouldn't consider that to be 2.5 times as good." "This isn't even close to what you have." "Yes, it's still not 2.5 times as fast, so it doesn't sit right."
[10:01:02] <moon-child> very good support for strings, with first-class grammars.  Better integration with unix.  (Who needs unix?  Well, I'm stuck with it for now, so.)  Less cognitive 'fixed overhead' when making small things.  Terseness
[10:01:31] <moon-child> I don't know the extent to which I use it 'over' cl.  I write fairly little code in both languages
[10:03:02] <mfiano> Ah you're a schemer, right?
[10:03:57] *** Joins: ln43 (~ln43@user/ln43)
[10:04:55] <ln43> anyone here for a recension of dji mavic drones ?
[10:05:23] <hayley> https://www.youtube.com/watch?v=WcojAI0YRYw
[10:05:24] -ixelp- [YTP] THE PHONE THAT FOLDS ITSELF OUT OF EXISTENCE - YouTube
[10:05:58] <ln43> hi hayley
[10:06:09] <hayley> hi hayley
[10:06:15] <moon-child> hi hayley
[10:06:25] <ln43> hi moon-child
[10:06:26] <moon-child> mfiano: no, not particularly.  I use s7 scheme for a few things here and there
[10:06:29] <moon-child> ln43: sup
[10:06:35] <ln43> hi mfiano
[10:07:17] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:07:41] <ln43> so i was talking with a person that now live in rio de janeiro...
[10:07:52] <ln43> low taxation, big house, good job
[10:08:34] <ln43> lucky him
[10:08:44] <mfiano> moon-child: I see. The language looks complex
[10:08:54] <mfiano> I'm not sure my tiny brain will enjoy it
[10:09:07] <mfiano> Nested DS sigiling looks hmmm
[10:09:13] <moon-child> do not feel pressured to learn it
[10:10:04] <ln43> s7 ?
[10:10:16] <moon-child> https://ccrma.stanford.edu/software/snd/snd/s7.html
[10:10:18] -ixelp- s7
[10:11:58] <ln43> good
[10:46:34] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[10:47:24] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 245 seconds)
[10:47:54] *** Joins: cranium (~cranium@user/cranium)
[10:55:34] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:58:34] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[11:02:47] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[11:02:57] *** Joins: treflip (~user@95.79.32.99)
[11:03:32] <gilberth> Ok. CADR read a file from by FILE server in CL. Flow control works like a charm even over my leaky wifi. I call that a success and a night.
[11:07:34] *** Joins: selwyn (~selwyn@user/selwyn)
[11:08:53] <ln43> cadr ?
[11:09:24] <gilberth> The Lisp machine. Emulated of course.
[11:10:59] <mfiano> I was beginning to think the evil house swallowed him today.
[11:11:46] <gilberth> I am 100km afar from my evil house, I am safe here where I am.
[11:12:04] <ln43> hi gilberth
[11:13:52] <gilberth> Question is: Could I expect people wanting to play with it to launch a CL implementation of FILE?
[11:15:12] <selwyn> whats file
[11:15:23] <ln43> to do what ? and what it does, right 
[11:15:25] <ln43> ?
[11:15:31] *** Joins: makomo_ (~makomo@user/makomo)
[11:15:36] <ln43> hi selwyn
[11:15:41] <gilberth> FILE is the file server protocol on Chaosnet.
[11:15:59] <selwyn> ok
[11:16:01] <selwyn> hi ln43
[11:16:03] <gilberth> So that the CADR could access your host file system.
[11:16:43] <selwyn> cool
[11:17:08] <selwyn> wonder how much money i would have to have before splashing out on a lisp machine
[11:17:33] <gilberth> The bigger problem is to get a lisp machine.
[11:17:52] <gilberth> Or find one, rather.
[11:19:12] <ln43> i was thinking in this morning to start buying a little drone (e.g. dji tello) to see how it works... maybe when i will be in the next duty free
[11:19:49] <ln43> but just to learn how to it flies ... 
[11:19:51] <ln43> ansd so on
[11:20:13] <selwyn> had the idea of building a drone from scratch
[11:20:51] <ln43> and then there is a limit on the fying height somewhere
[11:21:02] <ln43> you know.. no more than 120 m or something like that
[11:21:38] <ln43> flying ops
[11:21:46] <selwyn> i appear to live near a local no fly zone anyway
[11:22:05] <ln43> ops
[11:22:11] <ln43> no but i mean in general
[11:22:25] <Gnuxie> If someone phones the police for a drome are they really gonna come 
[11:22:26] <ln43> whenever there is a license
[11:22:52] <selwyn> its a national grid substation
[11:22:54] <selwyn> so maybe
[11:23:02] <Gnuxie> Oh 
[11:23:15] <gilberth> Gnuxie: When they have gasoline, perhaps.
[11:24:33] <ln43> and then i will like to add some additional sensors and maybe later actuators but in a remote future
[11:24:37] <gilberth> I wonder how hard it would be to keep a drone stable.
[11:25:01] <selwyn> aerodynamically stable?
[11:25:15] <ln43> since i would like to use the drone in harsh environnments i would not like the circuitery sops working due to high tmeperatures and so on
[11:25:33] <gilberth> selwyn: No, by adjusting power.
[11:26:52] <Gnuxie> Must be easy or they wouldn't have so many cheap drones 
[11:27:18] <selwyn> i donÂ´t understand
[11:27:27] <selwyn> do you mean, having a reliable power supply?
[11:28:13] <Gnuxie> No like 
[11:28:15] <gilberth> selwyn: A drone has multiple rotors, right? You must adjust power to the individual rotors to keep it at least level.
[11:28:26] <Gnuxie> Keeping the axis aligned 
[11:28:39] <gilberth> Yes, this it what I meant.
[11:28:41] <selwyn> yeah there is a feedback loop that makes this kind of thing even possible
[11:28:47] <selwyn> engineers rave about it
[11:29:16] <gilberth> A PID will do, but you would need to find the right coefficients.
[11:29:17] <selwyn> idk about the practicality of changing power output to the motors though
[11:29:33] <gilberth> PWM? That's easy.
[11:29:35] <selwyn> yeah its a pid with some `sensibleÂ´ values iirc
[11:30:27] <selwyn> i am bad at engineering/experiments lol
[11:30:35] <ln43> maybe there is an usable matlab library to simulate a drone flyght 
[11:30:48] <selwyn> hoping to visit a lab we work with some time soon
[11:30:57] <selwyn> if they have any sense they wonÂ´t let me touch anything
[11:30:59] <ln43> which lab ?
[11:31:25] <gilberth> selwyn: That bad? Dual-left handed?
[11:31:31] <selwyn> uh
[11:31:40] <selwyn> i just donÂ´t have experience with it
[11:32:16] <selwyn> as a kid i was always building stuff with knex/meccano so it was not always like that
[11:32:33] <selwyn> but went down the maths route
[11:33:03] <selwyn> i also donÂ´t have patience
[11:33:56] <selwyn> ln43: http://www.sussex.ac.uk/physics/iqt/
[11:33:58] -ixelp- Ion Quantum Technology Group â€“ Quantum Technology at University of Sussex
[11:38:26] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:41:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:51:54] *** Joins: selwyn_ (~selwyn@user/selwyn)
[11:54:04] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 245 seconds)
[12:01:26] <hayley> https://www.youtube.com/watch?v=teIbh8hFQos
[12:01:27] -ixelp- Go the f**k to sleep, read by Samuel L Jackson - YouTube
[12:03:25] <selwyn_> i am surprised that i spend so much time talking to hayley and gilberth considering that i have a nearly orthogonal sleeping schedule
[12:05:22] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[12:08:35] <ln43> for me now it's almost time to lunch
[12:08:38] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[12:08:57] <ln43> but ok, i will maybe pass and do only dinner later
[12:09:08] <dave0> selwyn_: maybe you're a good chatter?
[12:09:13] <ln43> or just eat something of simple: fruits, snacks..
[12:09:23] <ln43> hi dave0, 
[12:09:27] <dave0> maw ln43 
[12:09:31] <ln43> xd
[12:09:32] <ln43> maw
[12:09:35] <hayley> https://www.youtube.com/watch?v=B635wcdr6-w LinusDropTips is also unfamiliar with TPUs
[12:09:36] -ixelp- This is NOT a Graphics Card - YouTube
[12:09:44] <selwyn_> perhaps i can simply waste more than 12 hours a day in here :)
[12:11:42] <ln43> ...here there are nice cats all around and when i go out f especially for dinner (consider that the restaurant is under the open sky) they came near the table and start to meow...
[12:11:51] <ln43> i like cats in general
[12:11:55] <selwyn_> classic
[12:11:59] <selwyn_> i miss street cats
[12:12:20] <ln43> ah... but they're so nice and cute
[12:15:52] <ln43> anyway now i go to lunch, take rest and maybe later in the evening i will do a visit to the local bazaar ...
[12:17:04] <ln43> yes today since it's holyday i can sleep after lunch (1 hour or more)...
[12:17:14] <ln43> bye 
[12:17:21] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[12:24:25] <mfiano> moon-child: I am going to give Rakudo an fair chance.
[12:24:36] <mfiano> s/an/a/
[12:36:45] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[12:38:02] <hayley> .oO( How the fuck am I getting concurrent allocation failures with unmodded Minecraft? )
[12:39:11] <dave0> jiggle the power cord
[12:40:00] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[12:46:49] <mfiano> hayley: I need your help
[12:47:54] <hayley> What's up?
[12:47:59] <mfiano> hayley: Can you read the "Garbage Collection" section and tell me what you think? https://moarvm.org/features.html
[12:47:59] -ixelp- MoarVM - A VM for NQP and Rakudo
[12:48:46] <hayley> Pretty good.
[12:48:57] <hayley> It's better than SBCL(tm).
[12:49:40] <mfiano> I see. I don't think this is the "Pauseless" type you've been talking about though it is concurrent
[12:50:46] <hayley> It's a parallel collector, but the description explicitly states it stops the world.
[12:52:15] * hayley tried to use the Azul Java 17 JVM, and got a GLFW error. By the way, this is internal evaluation.
[12:52:59] <mfiano> Rakudo seems decentish.
[12:55:43] <mfiano> hayley: what did sbcl use again, gengc or something?
[12:55:54] <hayley> Yes, a generational copying GC.
[12:56:17] <mfiano> is that much different than boehm?
[12:57:58] <hayley> Yes, Boehm is all mark-sweep and doesn't compact. It is very non-trivial to compact a C heap, moreso when you get no object layout information.
[12:58:28] <hayley> SBCL is conservative on the stack and registers, but knows its own object layout and thus can compact if objects are only referenced in the heap.
[12:58:47] <mfiano> I see
[12:58:49] <hayley> https://www.reddit.com/r/java/comments/nqy8yw/generational_zgc_is_commited_in_zgc_generational/ ðŸ¤”
[12:58:50] -ixelp- Generational ZGC is commited in zgc_generational branch on github : java
[13:00:45] <hayley> Guess I'm now obligated to try to build it and see if it explodes with Minecraft.
[13:06:10] <hayley> "remote: Compressing objects:   6% (1999/33310)"
[13:13:52] <selwyn_> https://cdn.discordapp.com/attachments/718431389942415360/895969682358673408/unknown.png
[13:13:56] * hayley builds OpenJDK, and it does the thing building C++ projects tends to do
[13:16:50] * hayley forgot to git checkout zgc_generational or whatever.
[13:18:01] * hayley then copies the source repo into a ramdisk cause the README said to put it on an SSD.
[13:20:57] <hayley> Guess I should make the CPU activity graph draw a rainbow.
[13:23:53] * hayley uploaded an image: (37KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/EfVsuojrAUrAHuNEhyaiIeNi/Screenshot_2021-10-08_21-00-31.png >
[13:25:34] <hayley> I think it's done.
[13:26:16] <hayley> "openjdk version "18-internal" 2022-03-15"
[13:26:30] <Duuqnd> 2022?
[13:26:45] <hayley> Yes, I guess that's when they'll release Java 18.
[13:27:05] <Duuqnd> Oh, I see
[13:28:25] <selwyn_> els in portugal
[13:30:47] <hayley> how 2 commit https://github.com/openjdk/zgc/commit/cbe91e6bb72fea5e43e19b1766edfc425bb858b0
[13:32:32] *** Joins: random-nick (~random-ni@87.116.183.117)
[13:32:33] <selwyn_> z barrier stronk
[13:34:31] <hayley> Well, I ran the DaCapo benchmarks cause I have them lying around, and got a log message "[2.184s][info][gc] GC(0) Garbage Collection (Minor Before Major) 124M(3%)->38M(1%)"
[13:40:55] <hayley> Holy shit, it boots Minecraft and the pauses are gone.
[13:43:55] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 268 seconds)
[13:48:30] <selwyn_> https://www.bbc.co.uk/news/uk-northern-ireland-58843112
[13:48:30] -ixelp- Belfast Lough: Search for distressed seal with tin can stuck on jaw - BBC News
[13:48:57] <selwyn_> how do they know it didnÂ´t just rob that
[13:56:44] <hayley> OTOH it doesn't appear like VisualVM is reporting the right numbers.
[14:01:45] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[14:03:58] *** Joins: selwyn (~selwyn@user/selwyn)
[14:19:46] <hayley> selwyn_: https://www.youtube.com/watch?v=hyGfopfFl0c
[14:19:47] -ixelp- Bottometh gear - YouTube
[14:21:03] <selwyn> lol
[14:21:13] <selwyn> youtube is blocked rn unfortunately, will watch it later
[14:21:35] <Gnuxie> blocked? are you struggling to do work?
[14:22:10] <selwyn> well, i am succeeding in doing work now it is blocked :D
[14:22:24] <ck_> packet delivery shortage I guess.. this time of the TCP type
[14:23:42] <selwyn> can't bring myself to block birdsite
[14:24:18] <hayley> It appears the Minecraft log window does not show -Xlog:gc logs. Damn it.
[14:24:34] <selwyn> will you try out abcl with the new gc
[14:25:08] <hayley> Well, GC isn't the slowest thing about ABCL sadly.
[14:25:35] <hayley> "Unsupported Java detected (62.0). Only up to Java 15 is supported." bruh
[14:25:51] <hayley> can't have shit in Detroit
[14:26:10] <selwyn> > Parameter 3 to routine ZGEBAL was incorrect
[14:26:10] <selwyn> sigh
[14:49:00] *** Joins: raeda_ (~raeda@72.49.219.33)
[14:50:29] *** Quits: raeda (~raeda@72.49.219.33) (Remote host closed the connection)
[14:58:37] *** Joins: makomo_ (~makomo@user/makomo)
[14:59:16] *** Quits: APic (apic@apic.name) (Quit: leaving)
[15:00:03] *** Joins: APic (apic@apic.name)
[16:18:12] <dave0> hayley: https://youtu.be/TFjmvfRvjTc
[16:18:13] -ixelp- Pink Floyd - "Hey You" - YouTube
[16:23:16] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[16:50:06] *** Quits: Arcsech (~arcsechma@2001:470:69fc:105::1:797) (Read error: Connection reset by peer)
[16:50:06] *** Quits: hayley (~theemacss@user/hayley) (Read error: Connection reset by peer)
[16:50:08] *** Quits: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0) (Read error: Connection reset by peer)
[16:50:10] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Write error: Connection reset by peer)
[16:51:35] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[16:54:04] *** Joins: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0)
[16:58:38] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 246 seconds)
[17:11:18] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:14:29] <gilberth> Good morning #lispcafe!
[17:15:14] * gilberth dreamt of Choasnet packets and seems to turn crazy.
[17:17:07] <selwyn> i dreamt of my research the other day
[17:17:12] <selwyn> don't like it when it happens
[17:18:04] <selwyn> it feels like i have done something straight for 24 hours
[17:24:59] *** Quits: treflip (~user@95.79.32.99) (Quit: ERC (IRC client for Emacs 27.2))
[17:28:04] <gilberth> I don't mind actually because I like to submerge in things. Unfortunately I tend to neglect everything else.
[17:28:57] <gilberth> The CADR code uses READ for parsing tokens.
[17:29:54] <dave0> nite all
[17:30:21] <gilberth> I was placing the time at the wrong place in a FILE answer and the CADR was complaining that there is no packed called "15", when trying to make sense of "15:42:24"
[17:30:37] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:39:05] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[17:40:29] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:46:17] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Connection closed)
[17:47:56] *** Joins: selwyn (~selwyn@user/selwyn)
[17:48:10] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[17:48:35] *** Joins: selwyn (~selwyn@user/selwyn)
[17:51:42] *** Quits: raeda_ (~raeda@72.49.219.33) (Quit: Leaving)
[17:52:49] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:04:06] <shka> https://www.youtube.com/watch?v=xP5-iIeKXE8
[18:04:07] -ixelp- Life in life - YouTube
[18:05:04] <selwyn> very pretty
[18:05:08] <selwyn> https://en.wikipedia.org/wiki/Windscale_fire an insane story
[18:05:56] <selwyn> the early nuclear age is replete of batshit insane practices and near escapes
[18:06:58] <selwyn> i wonder how much of this - rightly or wrongly - caused anti-nuclear sentiment later on in the minds of the public
[18:07:07] <selwyn> thing is that this seems to have been censored for ages anyway
[18:07:24] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 245 seconds)
[18:08:11] <selwyn> *this incident
[18:08:41] <shka> selwyn: also, nuclear weapons
[18:08:48] <shka> not a good PR
[18:08:52] <selwyn> yeah
[18:11:52] <selwyn> this `life in lifeÂ´ video is reminiscent of a construction in quantum computing where you recursively build quantum gates out of each other
[18:13:08] <selwyn> dumb question: can i simulate a finite block of conwayÂ´s game of life with a regex?
[18:20:43] <selwyn> tom scott visits the nuclear waste repo https://www.youtube.com/watch?v=aoy_WJ3mE50
[18:20:44] -ixelp- Inside The Tunnels That Will Store Nuclear Waste For 100,000 Years - YouTube
[18:24:13] <Gnuxie> wikipedia says they shut the visitors centre at Sellafield 
[18:25:03] <selwyn> recently?
[18:25:18] <Gnuxie> says 2015 i think
[18:25:23] <Gnuxie> I got to go there when I was about 5, it was very exciting
[18:25:51] <selwyn> oh nice
[18:31:53] <selwyn> https://www.youtube.com/watch?v=iLUOZOVpJLA
[18:31:53] -ixelp- The Simpsons - Power Plant Commercial - YouTube
[18:36:58] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[18:38:04] *** Joins: rogersm (~rogersm@90.166.177.48)
[18:42:31] <aeth> My favorite Wikipedia articles are when you expect one thing and get another, e.g. https://en.wikipedia.org/wiki/List_of_unicorns
[18:43:13] <aeth> That's just an attempt to list unicorns. As opposed to https://en.wikipedia.org/wiki/List_of_unicorn_startup_companies
[18:43:54] <selwyn> lol
[18:44:41] <aeth> The latter list hasn't been updated for SpaceX yet, which is #3 at $74 billion there
[18:45:24] <selwyn> weird to see reddit on there
[18:45:57] <aeth> Yes, in my mind, Reddit is still part of CondÃ© Naste even though they spun Reddit off (and basically unacquired it?) ages ago.
[18:46:10] <aeth> Because peak Reddit culture (as opposed to whatever mess it has now) was during the CondÃ© Naste days.
[18:47:33] <selwyn> $10 billion!
[18:47:37] *** Joins: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-1013-static.midco.net)
[18:48:04] <aeth> https://news.ycombinator.com/item?id=28799633
[18:48:06] -ixelp- SpaceX hits $100B valuation after secondary share sale | Hacker News
[18:50:31] *** Joins: makomo (~makomo@user/makomo)
[18:50:54] *** Quits: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-100E-static.midco.net) (Ping timeout: 265 seconds)
[18:51:40] *** Joins: makomo_ (~makomo@user/makomo)
[19:05:21] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:ecc2:b934:94eb:5773)
[19:31:10] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[19:37:38] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[20:13:09] <clothespin> good morning
[20:24:13] <gilberth> Dammit. Who the hell eats c-m-f? Isn't the funny apple key enough to clobber? Please leave my meta^Walt^Woption modifier alone!
[20:24:30] <gilberth> clothespin: Hello there!
[20:25:29] <clothespin> hello
[20:26:20] <contrapunctus> clothespin: are you a pin or a spin?
[20:26:27] <clothespin> pin
[20:26:30] <contrapunctus> gilberth: General Kenobi!
[20:26:36] <contrapunctus> scnr
[20:31:19] <gilberth> Yes, indeed. This is not funny, I setup a mac mini as a desktop and nothing works. This keyboard combination is just eaten.
[20:31:37] <gilberth> I can't work with that.
[20:33:18] <gilberth> How about a hardware solution? An USB dongle, which plugs between the keyboard and the machine and translates <your-favorite-meta>+<key> into <ESC> <key>?
[20:33:46] <gilberth> This would have the benefit that you could have both accented characters and a meta key.
[20:34:50] <gilberth> And while at it, this dongle could juxtapose ( ) and [ ].
[20:36:06] <gilberth> I wonder, if somebody already crafted sth like this.
[20:37:05] <selwyn> shka probably has ten of them
[20:37:10] <selwyn> :p
[20:37:24] <shka> uh, just two
[20:38:58] <shka> but i appreciate keyboard layers for this sort of things
[20:39:09] <shka> like having layer + c to get (
[20:39:13] <shka> gilberth: https://github.com/kmonad/kmonad
[20:39:14] -ixelp- GitHub - kmonad/kmonad: An advanced keyboard manager
[20:40:32] <shka> gilberth: you can augment your keyboard with this software 
[20:42:50] <gilberth> Can it inject an ESC prefix for meta?
[20:43:17] <gilberth> On just one meta^alt key, so that the other is for accented characters?
[20:43:45] <shka> never used it, but i assume that it can do both
[20:44:07] <shka> and the trick of dual purpose caps-lock is legit 
[20:47:00] <gilberth> Does it work with macos 10.14? I ask because Karabiner stopped to work.
[20:47:24] <shka> dunno, i don't spend money on brushed aluminum ;) 
[20:47:48] <gilberth> There are some USB-USB-remapper project. When bored, I'll look into that. At least that cannot be broken.
[20:50:56] <shka> well, i think that kmonad is worth a shot at least
[20:51:18] <gilberth> I'll look into it.
[21:03:19] <ck_> what do you mean karabiner stopped working? that's terrible news
[21:04:06] <ck_> I'm pretty sure I just used it earlier today, on 10.15.7
[21:04:51] <gilberth> It stopped working for me. It used to cling in at a rather low level and could modify the stream of keycodes, injecting some.
[21:05:20] <ck_> ah, I'm only remapping keys
[21:05:31] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[21:06:00] <ck_> the lack of something like xmodmap is really a detriment to that os
[21:06:50] <ck_> I'll probably move to programmable keyboard controllers when this really stops working for good one day.. that could be an option for you too
[21:07:01] <gilberth> For what modmap can do there is Ukelele.
[21:07:39] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[21:07:59] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:08:17] <gilberth> ck_: The most silly part of XKB is that keyboard mappings aren't on the X server anymore, but in the X client. Have a remote window, and the keyboard mapping on that machine applies.
[21:08:58] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:ecc2:b934:94eb:5773) (Remote host closed the connection)
[21:09:15] <gilberth> Ok. ZWEI loads a file at 50KB/s. No idea, if that is good or not.
[21:10:03] <gilberth> ck_: So, yes the more I think about it, I want a hardware solution. But that won't work on a laptop.
[21:11:12] <gilberth> You then also could have keyboard macros for all applications. Sth my CP/M-80 box could do. What it also could do, is to show the text cursor only, when the program is accepting keyboard input, never saw the latter again.
[21:14:42] <shka> i use python for keyboard macros
[21:15:01] <shka> oddly enough, in conjunction with a macropad
[21:15:17] <shka> but it was PITA to program, and was not supporting everything what i wanted anyway
[21:15:32] <gilberth> Python? How would it cling into the USB interface?
[21:16:24] <shka> it is not interacting with USB
[21:16:41] <gilberth> How does it do that then?
[21:17:04] <shka> it is a simple keyloger, listening for a keys combinations which are in turn bound to the macropad
[21:17:37] <shka> which is pretty dumb, but allows me to have chords-like feature
[21:17:44] <gilberth> So, I need a macropad?
[21:18:23] <shka> press key once to to launch chromium, press twice to launch discord instead
[21:18:54] <shka> gilberth: dunno, you could use numpad (macs don't have those, right)
[21:19:35] <shka> but anyway, i appreciate having physical buttons for most used stuff
[21:20:07] <shka> and because of hierarchical nature, i can encode a lot into 4x4 key matrix
[21:20:22] <gilberth> My philosophy is different, I don't like all those extra keys. I don't even like cursor cursor keys.
[21:21:00] <shka> yeah, i understand
[21:23:22] <gilberth> Though, I once build a serial terminal from scratch with an 8085 CPU and using a HGC card for video. I made it having a screen(1) mode. It would first send c-a a on c-a pressed, I made functions keys switch screens.
[21:24:28] *** Quits: taeaad_ (~taeaad@user/taeaad) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:26:12] <gilberth> And I plugged a PS/2 keyboard into it. And as the bit clock signal comes from the keyboard, I routed that clock signal to an interrupt pin. The ISR needed to be tight as clock rate is like 15kHz IIRC.
[21:37:35] <ck_> was it in portrait ratio?
[21:40:37] *** Joins: taeaad (~taeaad@user/taeaad)
[21:53:37] *** Quits: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-1013-static.midco.net) (Quit: Leaving)
[22:05:45] *** Quits: seere (~seere@user/seere) (Read error: Connection reset by peer)
[22:11:55] *** Joins: selwyn (~selwyn@user/selwyn)
[22:20:25] *** Joins: selwyn_ (~selwyn@user/selwyn)
[22:23:14] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[22:23:49] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 252 seconds)
[22:26:18] <selwyn_> could poland end up leaving the eu over this court ruling
[22:43:10] <ck_> what happened now
[22:43:19] <ck_> oh, there it is
[22:51:02] <gilberth> ck_: In portrait? With a standard HGC display? No.
[22:53:14] <ck_> gilberth: I was just thinking of https://www.jwz.org/blog/2016/10/export-termaaa-60/
[22:59:55] <gilberth> Each time I send a packet to the CADR, I get an ACK right away. I believe there is a hysteresis missing. The Chaosnet AIM mentioned, that an ACK should not be send right away, but when the receiver's window is 1/3 full and argues that this way an ACK is not send for every incoming packet. Without a high and low water-mark, the effect is that I indeed one ACK packet for each packet sent. Hmm.
[23:00:57] <selwyn_> https://www.youtube.com/watch?v=ofSp-j1R4fw
[23:00:58] -ixelp- Ack Ack - Mars Attacks! - YouTube
[23:02:17] <selwyn_> ack ack ack
[23:04:21] <gilberth> ck_: HGC has 384 lines, so when turned 90Â°, I have 4.35 horizontal pixels left for each char. And the HGC didn't have a loadable font IIRC, so that would leave me with graphics mode, which would be painfully slow when scrolling. Not practical.
[23:06:04] <gilberth> Even if there would be a loadable font, every 9th [horizontal] bit is a copy of the 8th.
[23:12:31] <gilberth> HGCs were fun, because you have both a VGA and a HGC in your system, and X could cope with that, so for a while an HGC was my :0.1. Dual-screen in like '92.
[23:28:14] <pl> HGC were used this way even without X, iirc
[23:28:25] *** Joins: Alfr (~Alfr@user/alfr)
[23:28:37] <pl> common to have debugger on HGC or MDA and application on CGA/EGA/VGA
[23:31:08] <shka> so... i am looking for job
[23:31:14] <shka> anybody wants to hire me?
[23:32:12] <shka> also 
[23:32:14] <shka> https://www.euronews.com/next/2021/10/08/new-robots-patrolling-for-anti-social-behaviour-causing-unease-in-singapore-streets
[23:32:15] -ixelp- New robots patrolling for 'anti-social behaviour' causing unease in Singapore streets | Euronews
[23:34:12] <pl> shka: huh
[23:34:59] <shka> not instantly, i could start next year
[23:35:03] <selwyn_> did ravenpack not work out
[23:35:26] <shka> no, ravenpack is a long time ago
[23:35:30] <selwyn_> right
[23:37:13] <shka> anyway, startup is starting to run out of money, i just want to finish counter-strike stuff there because it pisses me off to leave it half finished
[23:38:12] <shka> and i have no confidencewith the company working out
[23:38:33] <shka> so i would rather find start looking for job now
[23:47:47] <selwyn_> you could go for the korean ai startup
[23:51:04] <Gnuxie> lel
[23:53:13] <shka> well, it is as it is
[23:57:58] <selwyn_> they seem.. interesting
