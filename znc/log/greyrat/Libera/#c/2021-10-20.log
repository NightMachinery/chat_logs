[00:00:12] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[00:00:16] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.114) (Ping timeout: 258 seconds)
[00:00:31] <Ronalds_Mazitis_> float i,e,s,g,k=.01;for(o++;i++<1e2;g+=max(k,e*.2)){vec3 p=vec3((FC.xy-.6*r)/r.y*g+r/r*rotate2D(t+g*.5)*.5,g+t/.3);e=.3-dot(p.xy,p.xy);for(s=2.;s<2e2;s/=.6)p.yz*=rotate2D(s),e+=abs(dot(sin(p*s+t*s*.2)/s,p-p+1.));o+=o.w*min(e*o+(sin(vec4(1,2,3,1)-p.z*.3)*.6-.4),k)*k;}
[00:01:38] *** Joins: serbest (~serbest@user/serbest)
[00:02:01] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.122)
[00:02:03] <Bou> So you didn't write this, don't need it, don't know what it is, or even what language? What is the question?
[00:02:25] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.122) (Client Quit)
[00:04:05] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a8f8:8546:7620:4477)
[00:04:05] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a8f8:8546:7620:4477) (Changing host)
[00:04:05] *** Joins: skapata (~Skapata@user/skapata)
[00:04:48] <twkm> Ronalds_Mazitis_: you felt you needed to paste the code after putting it on a paste site?  wierdo.
[00:05:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[00:05:34] <Ronalds_Mazitis_> I know what it is, it is nice visuals that appear using GLSL
[00:06:04] <Ronalds_Mazitis_> Bou, bit up, I posted a whole code with includes and how I compile it
[00:06:25] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:06:59] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[00:07:04] <Bou> Yes inside a main(argc, argv), that's not how you run glsl
[00:07:30] <Ronalds_Mazitis_> oh right
[00:08:43] <Ronalds_Mazitis_> I should create void
[00:09:06] <Ronalds_Mazitis_> well I am not familiar with glsl that much
[00:09:18] <Ronalds_Mazitis_> getting into this, feels dejavu like
[00:09:42] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[00:09:54] *** Quits: serbest (~serbest@user/serbest) (Quit: Leaving)
[00:10:36] *** Joins: serbest (~serbest@user/serbest)
[00:10:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:10:37] <floatcomplex> that's either perl or a baud rate error
[00:13:00] *** Quits: V-T60 (~v@91.203.24.166) (Remote host closed the connection)
[00:15:58] *** Joins: Sargun (~anonymous@80.60.198.104.bc.googleusercontent.com)
[00:16:25] <Sargun> Is memory for statement expressions considered to be their own stack, or is it part of the stack of the function they're embedded in?
[00:17:41] *** Joins: tinyweasel (~weasel@underserver.net)
[00:17:57] <Sargun> #define FORMAT_ADDRESS(addr, addrlen) ({ char retbuf[1024]; format_address(addr, addrlen, retbuf);})
[00:18:19] <Sargun> Like that -- if retbuf allocated on the "its own stack" or is it the stack of the calling function?
[00:19:03] <floatcomplex> calling function...if you want to call it that
[00:19:18] <floatcomplex> not sure what that macro is meant to do
[00:19:21] <Sargun> floatcomplex: thanks.
[00:19:30] <floatcomplex> retbuf goes out of scope immediately
[00:19:45] <Sargun> I mean, the way it's used is: TSA_LOG_DEBUG("Received connection from %s", FORMAT_ADDRESS(&peer, peerlen));
[00:20:02] <floatcomplex> oh yeah no you can't
[00:20:49] <floatcomplex> check it with -fsanitize=address,undefined
[00:20:56] <floatcomplex> i think that's use-after-scope
[00:21:15] <floatcomplex> assuming format_address returns a pointer
[00:22:07] *** Quits: makersmasher (~makersmas@097-092-244-194.res.spectrum.com) (Ping timeout: 258 seconds)
[00:22:44] *** Joins: _nightw0lf (~nightw0lf@77.125.126.63)
[00:30:26] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:33:07] *** Quits: randm (~randm@user/randm) (Quit: Leaving.)
[00:33:31] *** Joins: randm (~randm@user/randm)
[00:33:57] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[00:35:44] *** Joins: makersmasher (~makersmas@097-092-244-194.res.spectrum.com)
[00:37:52] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:39:32] <Bou> ,cc const char *format_address() { return "world"; } \n #define FORMAT_ADDRESS() ({ char retbuf[1024]; format_address();}) \n int main() { printf("Hello %s\n", FORMAT_ADDRESS()); }
[00:39:34] <candide> Bou: [warning: ISO C forbids braced-groups within expressions [-Wpedantic]  note: in expansion of macro 'FORMAT_ADDRESS'] Hello world
[00:41:14] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:42:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[00:45:01] <floatcomplex> now do it with ,cc -fsanithingy
[00:45:09] <Bou> no complaints
[00:45:55] <Bou> ,cc -fsanitize=address,undefined const char *format_address() { return "world"; } \n #define FORMAT_ADDRESS() ({ char retbuf[1024]; format_address();}) \n int main() { printf("Hello %s\n", FORMAT_ADDRESS()); }
[00:45:58] <candide> Bou: Hello world ==44983==LeakSanitizer has encountered a fatal error. ==44983==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1 ==44983==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)  Exit 1
[00:47:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:47:45] <Bou> huh, but... my local gcc doesn't complain?
[00:47:48] <floatcomplex> who wrote this stupid bot
[00:48:48] <Bou> oh it's not a complaint about the code but about being run in a debugger, I need to learn to read
[00:48:58] *** Quits: rgrinberg (~textual@186.4.37.225) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:50:40] <floatcomplex> pragma-: ^
[00:50:48] <pragma-> what
[00:50:55] <floatcomplex> did you revert the gdb thing
[00:51:02] <floatcomplex> about not running in gdb when asan is used
[00:51:08] <pragma-> i haven't done that yet
[00:51:18] <pragma-> i think it works with ,clang maybe
[00:51:59] <Bou> ,clang -fsanitize=address const char *format_address(char *buf) { (void)buf; return "world"; } \n #define FORMAT_ADDRESS() ({ char retbuf[1024]; format_address(retbuf); }) \n int main() { printf("Hello %s\n", FORMAT_ADDRESS()); }
[00:52:02] <candide> Bou: Hello world ==45036==LeakSanitizer has encountered a fatal error. ==45036==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1 ==45036==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)  Exit 1
[00:52:14] * pragma- mocks Bou
[00:52:41] <pragma-> sigh
[00:52:44] <Bou> no worries I am way past my Ballmer peak, idgaf anymore
[00:52:46] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[00:54:56] *** Quits: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:55:09] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[00:55:16] *** Joins: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de)
[00:55:37] <floatcomplex> what
[00:56:04] <floatcomplex> Bou: that's not really a valid test of the thing
[00:56:11] <pragma-> okie dokie, I'll go into the vm and make it not use gdb if -fsanitize=address is used.
[00:56:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[00:56:16] * pragma- cracks open the vm.
[00:56:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:57:28] <Bou> ,cc -std=c11 const char *format_address(char *buf) { (void)buf; return "world"; }\n#define FORMAT_ADDRESS() ({ char retbuf[1024]; format_address(retbuf); })\nint main() { printf("Hello %s\n", FORMAT_ADDRESS()); } // no warnings! (?)
[00:57:31] <candide> Bou: Hello world
[00:57:58] <pragma-> add -W -Wall if you want warnings
[00:58:18] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[00:58:40] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:58:47] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[00:59:16] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 245 seconds)
[00:59:16] <floatcomplex> Bou: i think this is what you were aiming for https://godbolt.org/z/oxnfT9orP
[00:59:37] <floatcomplex> your above still does not exercise it because it doesn't matter if retbuf goes out of scope
[00:59:40] <floatcomplex> which it does
[01:00:19] <pragma-> if you explicitly use a compiler flag in the cc/clang bot commands it completely replaces the default flags
[01:01:38] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:01:45] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[01:01:46] *** Quits: LuckyRawApe (~sergiy@203.129.63.205) (Quit: WeeChat 3.3)
[01:02:00] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:05:21] *** Joins: humky (~humky@user/humky)
[01:05:43] <Bou> floatcomplex: that indeed makes more sense. I am just confused about the whole `({ return_something(); })` syntax, I don't think I ever saw it before
[01:06:21] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[01:06:30] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[01:07:13] <fizzie> In case it wasn't clear (reading backscroll is so boring), that's a GCC statement expression, and they've just defined it with "the last statement must be an expression statement, and that's the value of the overall expression" for lack of better ideas.
[01:07:57] <fizzie> (It doesn't so much "return" anything any more than an `1 ? foo : bar` expression "returns" the value of foo.)
[01:08:04] *** Joins: Oxfuxxx (~sharky@103.107.196.246)
[01:08:56] <floatcomplex> this general sort of use-after-scope error is relevant outside of this gcc extension though
[01:09:45] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[01:09:49] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[01:10:23] <fizzie> (Oh, and I guess scratch out "must be" there, since it can be some other kind of a statement too, it will just make the entire thing a void expression with no value, just like... well, a cast to `void`, or the call of a function with the declared return type of `void`, those might be the only standard ones.)
[01:10:27] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[01:13:05] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:16:43] <Bou> hm, you could make the retbuf static here
[01:16:56] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[01:17:29] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:18:35] <fizzie> Actually I thought ,cc -fsanitize=address used to work, while ,clang -fsanitize=address didn't, because the part of ASan that has explicit problems is the LeakSanitizer, and that was on-by-default only for Clang. Maybe something's changed since then though.
[01:19:09] <fizzie> Maybe you've updated your GCC too.
[01:19:19] *** Quits: serbest (~serbest@user/serbest) (Quit: Leaving)
[01:19:58] <pragma-> I don't think I've touched anything. But in any case, I am definitely touching things now. If -fsanitize=address is used, gdb will be bypassed.
[01:20:36] <fizzie> ,cc -fsanitize=address const char *__asan_default_options() { return "detect_leaks=0"; } puts("cc");
[01:20:38] <candide> fizzie: cc
[01:20:41] <fizzie> See, that works.
[01:20:53] <fizzie> ,cc -fsanitize=address puts("cc"); // that didn't, unless you were too fast and fixed it
[01:20:57] <candide> fizzie: cc ==45418==LeakSanitizer has encountered a fatal error. ==45418==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1 ==45418==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)  Exit 1
[01:23:19] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[01:24:01] *** Joins: quartz (~quartz@user/quartz)
[01:24:30] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[01:25:10] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[01:28:12] *** Quits: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[01:29:10] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[01:29:22] *** Quits: candide (~pbot3@about/c/bot/candide) (Remote host closed the connection)
[01:29:46] <floatcomplex> rip candide
[01:30:32] <Sargun> floatcomplex: Thanks. It turns out it has different behaviour on -O1 / -O2 / -O3 :|
[01:30:45] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[01:30:55] *** Joins: kman (~kman@45.77.144.136)
[01:30:57] <floatcomplex> Sargun: it's UB under all of them
[01:31:08] *** Joins: jess (~jess@libera/staff/jess)
[01:31:28] *** Joins: cmburn (~cmburn@c-107-4-141-134.hsd1.mn.comcast.net)
[01:31:49] <floatcomplex> at -Os it's allowed to acausally replace your morning coffee with decaf
[01:32:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[01:32:10] <LiaoTao> That's just evil
[01:32:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:32:28] *** Quits: LanDi (~landi@187.19.137.250) (Remote host closed the connection)
[01:36:59] *** Joins: uniquepointer (~uniquepoi@190.218.240.164)
[01:37:54] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:39:43] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:41:48] *** Joins: rgrinberg (~textual@ip11-246-50-179.ct.co.cr)
[01:44:45] *** Quits: \`_ (~nirnam@gateway/tor-sasl/nirnam) (Ping timeout: 276 seconds)
[01:50:46] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[01:51:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[01:54:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[01:55:35] *** Quits: vvlad (~vvlad@dslb-088-069-181-116.088.069.pools.vodafone-ip.de) (Quit: Leaving)
[01:58:23] *** Quits: alch (~alch@151.36.146.201) (Read error: Connection reset by peer)
[02:01:00] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[02:02:11] *** Joins: alch (~alch@151.38.179.92)
[02:07:10] *** Quits: cust (amaama@2607:f2c0:f00f:2500::3) (Ping timeout: 252 seconds)
[02:10:05] *** Joins: cust (amaama@blackbox.amaama.org)
[02:11:51] *** Quits: Akuli (~Akuli@82-203-164-141.bb.dnainternet.fi) (Quit: Leaving)
[02:12:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[02:12:54] *** Quits: kurahaupo (~kurahaupo@pa49-179-226-170.pa.nsw.optusnet.com.au) (Ping timeout: 258 seconds)
[02:16:03] <superboot> Does anyone have a refference for understanding how multiple *.c and *.h files interact at compile time? Where does the compilation start? That is to say, where does it look for main(){...;}, and how does the compiler know which files to include? I'm new to C. 
[02:16:46] <floatcomplex> superboot: each .c file is compiled separately, and then they are linked by the linker. exactly one of the .c files needs a main()
[02:16:52] <floatcomplex> .h files are not compiled
[02:17:04] <floatcomplex> the compiler doesn't know shit
[02:17:37] <superboot> Ah, ok. That makes it clearer. I haven't learned about the linker yet. 
[02:18:05] *** Joins: Guest8463 (~Guest@host16.190-224-210.telecom.net.ar)
[02:18:20] *** Joins: vicfred (~vicfred@user/vicfred)
[02:19:07] <floatcomplex> superboot: if you just compile with "cc -Wall -Wextra -Wshadow -Os -o program program.c other_file.c lol.c" then you don't really need to know about the linker but the requirements and result are basically the same
[02:19:21] <floatcomplex> one of those .c files needs to have a main() function, cc doesn't care which one
[02:19:35] *** Quits: haniaF (~haniaF@79.191.106.4.ipv4.supernova.orange.pl) (Ping timeout: 264 seconds)
[02:19:49] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[02:20:05] *** Joins: candide (~pbot3@about/c/bot/candide)
[02:20:40] *** Quits: candide (~pbot3@about/c/bot/candide) (Read error: Connection reset by peer)
[02:22:03] <fizzie> If you're curious, quite often you can pass in a `-v` flag and actually see the separate compilation stages (say, a separate call to a compiler for each of the C files, and one call to the linker at the end).
[02:22:10] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[02:22:13] <fizzie> (Tends to be quite verbose though.)
[02:24:17] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[02:25:05] *** Joins: haniaF (~haniaF@79.191.104.229.ipv4.supernova.orange.pl)
[02:27:16] *** Joins: candide (~pbot3@about/c/bot/candide)
[02:27:40] *** Quits: LeoNerd (~leo@genoa.dictatorshipcake.co.uk) (Ping timeout: 268 seconds)
[02:29:00] *** Quits: supakeen (~user@python/site-packages/supakeen) (Ping timeout: 258 seconds)
[02:29:28] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[02:29:31] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Ping timeout: 268 seconds)
[02:30:17] *** Joins: de-facto (~de-facto@user/de-facto)
[02:30:33] *** Quits: candide (~pbot3@about/c/bot/candide) (Read error: Connection reset by peer)
[02:30:33] *** Joins: dsrt^ (~dsrt@68.101.53.15)
[02:32:48] *** Quits: pizdets_ (~pizdets@183.182.114.223) (Ping timeout: 250 seconds)
[02:34:13] *** Joins: pizdets (~pizdets@183.182.111.121)
[02:35:26] *** Joins: semeion (~semeion@user/semeion)
[02:41:16] *** Quits: Oxfuxxx (~sharky@103.107.196.246) (Ping timeout: 258 seconds)
[02:41:30] *** Joins: candide (~pbot3@about/c/bot/candide)
[02:48:34] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[02:53:23] *** Joins: ferdna (~ferdna@user/ferdna)
[02:57:16] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[02:57:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[02:57:27] *** Joins: LeoNerd (~leo@genoa.dictatorshipcake.co.uk)
[02:57:36] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:57:41] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[02:57:55] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:58:59] *** Joins: Wulf (~Wulf@user/wulf)
[02:59:13] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[02:59:59] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:00:11] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[03:01:34] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:03:46] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[03:03:59] *** Joins: vaio (~gary@user/ghost)
[03:06:44] *** Quits: omegatron (~some@p5b056a70.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:06:44] *** Joins: supakeen (~user@python/site-packages/supakeen)
[03:06:47] *** Joins: hexology (~hexology@user/hexology)
[03:09:32] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[03:09:50] *** Quits: rundown (~eb0t@90.196.142.168) (Read error: Connection reset by peer)
[03:10:23] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[03:10:32] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[03:13:02] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Ping timeout: 260 seconds)
[03:14:37] *** Quits: Dotz0cat (~Dotz0cat@h112.238.31.71.dynamic.ip.windstream.net) (Ping timeout: 258 seconds)
[03:15:06] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[03:15:09] *** Joins: v- (~gary@user/ghost)
[03:15:24] *** v- is now known as vaio
[03:15:49] *** Joins: rundown (~eb0t@90.199.166.206)
[03:16:02] *** Quits: candide (~pbot3@about/c/bot/candide) (Remote host closed the connection)
[03:16:04] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[03:16:18] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[03:17:34] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[03:18:17] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[03:19:32] *** Joins: dark279_ (~totallych@2601:18b:8200:c1e:a1e0:77e4:7943:e9a1)
[03:19:37] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[03:19:44] *** Joins: Viewday9 (~Viewday@user/viewday)
[03:21:54] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 258 seconds)
[03:21:54] *** Viewday9 is now known as Viewday
[03:22:04] *** Joins: candide (~pbot3@about/c/bot/candide)
[03:23:01] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 245 seconds)
[03:24:06] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Client Quit)
[03:24:16] *** Quits: candide (~pbot3@about/c/bot/candide) (Remote host closed the connection)
[03:25:32] *** Joins: candide (~pbot3@about/c/bot/candide)
[03:25:35] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[03:26:08] *** Joins: Dotz0cat (~Dotz0cat@h227.29.188.173.dynamic.ip.windstream.net)
[03:26:42] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[03:30:56] *** Joins: mongrel (uid508343@id-508343.ilkley.irccloud.com)
[03:41:17] *** Quits: puke (~puke@user/puke) (Quit: puke)
[03:41:36] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:41:36] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:41:36] *** Joins: wroathe (~wroathe@user/wroathe)
[03:43:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 264 seconds)
[03:43:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:44:02] *** Parts: movingtxt (~movingtxt@user/movingtxt) ()
[03:44:30] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[03:44:59] *** Lord_of_Life_ is now known as Lord_of_Life
[03:46:01] *** Quits: moose (~moose@user/moose) (Quit: The system has requested shutdown(INIT(1): task_erase_system_sec))
[03:47:06] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 260 seconds)
[03:47:47] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[03:49:48] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[03:53:52] *** Joins: rgrinberg (~textual@ip11-246-50-179.ct.co.cr)
[03:58:19] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[03:58:19] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 258 seconds)
[03:58:36] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[03:59:26] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[04:00:46] *** Joins: Dotz0cat_ (~Dotz0cat@h11.46.90.75.dynamic.ip.windstream.net)
[04:01:34] *** Quits: Dotz0cat (~Dotz0cat@h227.29.188.173.dynamic.ip.windstream.net) (Ping timeout: 260 seconds)
[04:01:36] *** Dotz0cat_ is now known as Dotz0cat
[04:03:26] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[04:10:25] <pragma-> ,cc -fsanitize=address char *p = malloc(42); /* leak sanitizer is working now */
[04:10:27] <candide> pragma-:  ================================================================= ==41355==ERROR: LeakSanitizer: detected memory leaks  Direct leak of 42 byte(s) in 1 object(s) allocated from:     #0 0x7f78abee795f in __interceptor_malloc (/lib64/libasan.so.6+0xae95f)     #1 0x402538 in main      #2 0x7f78abc5d55f in __libc_start_call_main (/lib64/libc.so.6+0x2d55f)  SUMMARY: AddressSanitizer: 42 byte(s) leaked in 1 allocation(s).
[04:13:42] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[04:14:43] <Bou> pragma-++
[04:15:45] <Bou> It even fits in one, albeit verbose, message
[04:16:59] <pragma-> could probably tweak some options and clean-up the output (get rid of that ================== bar, etc)
[04:19:14] *** Joins: chenqisu1 (~xirndc@183.217.203.91)
[04:19:29] *** chenqisu1 is now known as chenqisu12
[04:20:37] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Quit: Leaving)
[04:22:11] *** Joins: earnestly (~earnest@user/earnestly)
[04:25:47] *** Quits: random-nick (~random-ni@87.116.178.206) (Quit: quit)
[04:25:50] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[04:30:04] <rcf> pragma-++
[04:30:10] <pragma-> ASAN_OPTIONS=strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1
[04:30:24] <pragma-> That looks like the ASAN_OPTIONS I'm going to use.
[04:31:10] *** Joins: rvncerr (~rvncerr@user/rvncerr)
[04:34:08] *** Quits: Guest8463 (~Guest@host16.190-224-210.telecom.net.ar) (Remote host closed the connection)
[04:35:56] *** Quits: Egeon (~kaliyuga@c-76-22-110-235.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[04:36:53] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[04:37:25] *** Joins: Egeon (~kaliyuga@2601:601:200:5b30:ab21:ed09:ae59:d58d)
[04:38:50] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:40:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 258 seconds)
[04:40:31] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 245 seconds)
[04:41:12] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[04:42:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:43:23] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[04:45:02] *** Joins: pucara (~i@181.93.167.217)
[04:45:25] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[04:45:58] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:48:40] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Client Quit)
[04:49:58] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Remote host closed the connection)
[04:51:48] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:52:02] *** Joins: khoa (~khoa@user/khoa)
[04:54:41] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[04:55:28] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[04:55:59] *** Joins: de-facto (~de-facto@user/de-facto)
[04:56:29] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[04:56:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:56:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:56:32] *** Joins: wroathe (~wroathe@user/wroathe)
[04:59:52] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[05:00:37] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[05:00:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[05:00:53] *** Joins: de-facto (~de-facto@user/de-facto)
[05:02:37] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[05:06:15] <asd> ,cc void foo(char ***items){} char *items[][3] = {{"foo","bar","baz"}, {"al","bob","carl"}}; foo(items); // what would be the correct way to call foo? How should i structure my data? (ignore the size parameters for now i just cant seem to access `char ***items` correctly )
[05:06:17] <candide> asd: [warning: passing argument 1 of 'foo' from incompatible pointer type [-Wincompatible-pointer-types]  note: expected 'char ***' but argument is of type 'char * (*)[3]'] no output: items = {{0x40302c "foo", 0x403030 "bar", 0x403034 "baz"}, {0x403038 "al", 0x40303b "bob", 0x40303f "carl"}}
[05:06:32] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[05:06:47] <floatcomplex> ,threestar
[05:06:47] <candide> 3star is http://c2.com/cgi/wiki?ThreeStarProgrammer
[05:08:28] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[05:08:59] <asd> floatcomplex: what part of that answers my question? in my case im not in control of `char ***items` it's a foreign api i cannot change
[05:11:21] *** Quits: porn (~hentai@user/hentai) (Ping timeout: 245 seconds)
[05:14:03] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 265 seconds)
[05:15:12] *** Quits: The_Jag_ (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Read error: Connection reset by peer)
[05:15:33] *** Joins: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it)
[05:15:53] *** Quits: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Read error: Connection reset by peer)
[05:17:10] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.0.1)
[05:17:10] *** Joins: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it)
[05:18:03] *** Joins: pony (~ed@smol/hors)
[05:19:12] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:11] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:20:21] *** Quits: pi0 (~default@23.95.234.10) (Changing host)
[05:20:21] *** Joins: pi0 (~default@user/pi0)
[05:27:07] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:27:18] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[05:27:34] *** Joins: The_Jag_ (~The_Jag@host-87-21-77-193.retail.telecomitalia.it)
[05:27:45] *** Joins: frost (~frost@59.71.244.189)
[05:29:33] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[05:29:51] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[05:30:59] *** Quits: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[05:33:46] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 258 seconds)
[05:34:38] *** Joins: puke (~brrrrrrr@user/puke)
[05:35:14] <asd> http://c.be.sexy/threestar.html # i find it very confusing
[05:36:46] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[05:36:52] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[05:37:28] <rcf> asd: it depends on what exactly the function is supposed to do with that data 
[05:37:39] <floatcomplex> asd: you have too many layers of indirection
[05:38:17] *** Joins: dutch (~DutchIngr@user/dutch)
[05:38:21] <floatcomplex> the char *** items api is fixed and you cannot change it?
[05:38:30] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[05:38:46] <asd> i was trying out https://leetcode.com/problems/count-items-matching-a-rule/ # their testing framework acceptes it when i use strcmp(ruleValue, items[i][targetIndex])
[05:39:15] <asd> floatcomplex: the function parameters are decided by the problem. and i cant change it
[05:39:17] <floatcomplex> ok so that's a 2d array of character pointers
[05:40:09] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 265 seconds)
[05:41:46] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[05:41:53] <floatcomplex> and within foo() you're accessing it as if it were a 1d array of character pointers. so that's one problem but not the only one
[05:43:46] <asd> i updated http://c.be.sexy/threestar.html # with the "accepted solution" and my "local instance" and i cant get it working in my local instance
[05:47:02] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[05:48:05] <floatcomplex> ,english char *items[][3]
[05:48:06] <candide> floatcomplex: error: array size missing in 'items'
[05:48:14] <floatcomplex> ,english char *items[2][3]
[05:48:15] <candide> floatcomplex: Declare `items` as an array of 2 elements of an array of 3 elements of pointer to char.
[05:48:27] <floatcomplex> hmm not over helpful
[05:48:52] <asd> floatcomplex: i guess a variant of my question is: how to i format the data on my local instance to actually try countMatches() ?
[05:49:05] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:49:17] <asd> s/how to i/how do I
[05:50:25] *** Quits: mongrel (uid508343@id-508343.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:50:27] *** Quits: fcresende (~quassel@2804:431:cfc6:7dda:59ef:466c:27dd:1d0d) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:52:07] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[05:55:42] *** Joins: fcresende (~quassel@2804:431:cfc6:7dda:59ef:466c:27dd:1d0d)
[05:57:47] *** Quits: alch (~alch@151.38.179.92) (Read error: Connection reset by peer)
[06:00:06] *** Quits: fcresende (~quassel@2804:431:cfc6:7dda:59ef:466c:27dd:1d0d) (Ping timeout: 245 seconds)
[06:00:43] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[06:01:30] *** Quits: mahmutov (~mahmutov@176.30.168.94) (Ping timeout: 260 seconds)
[06:01:31] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:01:43] *** Joins: alch (~alch@151.36.133.45)
[06:03:06] *** Joins: fcresende (~quassel@2804:431:cfc6:7dda:59ef:466c:27dd:1d0d)
[06:05:19] *** Joins: porn (~hentai@2a01:e0a:a5c:a070:298a:c1bd:aaa3:e424)
[06:05:19] *** Quits: porn (~hentai@2a01:e0a:a5c:a070:298a:c1bd:aaa3:e424) (Changing host)
[06:05:19] *** Joins: porn (~hentai@user/hentai)
[06:07:25] *** Joins: Guest9645 (~Guest@host65.190-139-79.telecom.net.ar)
[06:09:33] *** Joins: mahmutov (~mahmutov@5.176.62.214)
[06:11:01] <floatcomplex> asd: https://godbolt.org/z/EGbE91zbT here's one way to do it, not sure if cleanest possible
[06:13:15] <asd> oh, thanks floatcomplex it is appreciated ill thinker with this and see what i can learn from it :D
[06:13:21] *** Joins: movingtxt (~movingtxt@user/movingtxt)
[06:17:15] *** Quits: persehex (~Persehex@189-47-76-86.dsl.telesp.net.br) (Read error: Connection reset by peer)
[06:25:22] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:30:00] *** Joins: reset (~reset@user/reset)
[06:31:08] *** Joins: Viewday5 (~Viewday@user/viewday)
[06:33:19] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 265 seconds)
[06:33:20] *** Viewday5 is now known as Viewday
[06:37:24] <asd> oh that leads to the question what would be the cleaner way to do https://godbolt.org/z/EGbE91zbT without fumbling with `char *** items`
[06:38:53] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Quit: exit)
[06:39:19] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[06:40:14] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Remote host closed the connection)
[06:41:15] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Client Quit)
[06:42:33] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[06:43:38] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[06:44:42] <floatcomplex> literally anything, but you were stuck with a three star API
[06:46:14] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Client Quit)
[06:48:54] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[06:52:41] *** Joins: lockpick123159 (~lockpick@2607:fea8:480:29d0::9107)
[06:52:49] <lockpick123159> hello
[06:52:56] <lockpick123159> how's everything?
[06:53:10] *** Quits: m4v (~znc@ubuntu/member/m4v) (Read error: No route to host)
[06:53:20] <lockpick123159> ?
[06:54:02] <rcf> It was great until you showed up 
[06:54:06] * rcf runs
[06:54:14] <lockpick123159> q??
[06:54:16] <lockpick123159> ?
[06:54:18] <lockpick123159> ?
[06:54:19] *** Joins: m4v (~znc@ubuntu/member/m4v)
[06:54:20] <lockpick123159> what did i do?
[06:54:25] * rcf is kidding, of course.
[06:54:32] <lockpick123159> anyways
[06:54:37] <lockpick123159> this irc is very cool
[06:54:42] <lockpick123159> i had never used it
[06:54:43] <lockpick123159> before
[06:54:44] <candide> lockpick123159: Please stop abusing the enter key. Feel free to type longer messages and to take a moment to think of anything else to say before you hit that enter key.
[06:55:00] <lockpick123159> sorry
[06:55:31] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 245 seconds)
[06:55:33] <lockpick123159> i am using weechat. It's pretty fancy
[06:56:33] <rcf> weechat is nice indeed. 
[06:56:42] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:57:18] <lockpick123159> Who really uses irc nowadays?
[06:57:30] <lockpick123159> its still pretty cool
[06:57:39] <rcf> There are dozens of us I assure you. 
[06:57:45] <lockpick123159> I think Discord and Slack have pretty much taken over the place.
[06:58:02] <lockpick123159> Why do they still used it, rcf?
[06:59:29] <rcf> It works well with very little cost in terms of computing power, and also it makes it easy to interact with other luddite weirdos 
[06:59:57] <rcf> Also not under the control of any given corporation and you are free to use any client you like. 
[07:00:35] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:01:03] <lockpick123159> I am loving this already
[07:03:54] *** Joins: soapsudsxx (~soapsudsx@209.221.40.137)
[07:08:17] *** Joins: semeion (~semeion@user/semeion)
[07:10:06] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[07:10:09] <Guest9645> lockpick123159: type /list
[07:11:51] <Guest9645> lockpick123159: by using irc you instantaneously became a wise person :)
[07:13:31] *** Quits: lockpick123159 (~lockpick@2607:fea8:480:29d0::9107) (Ping timeout: 252 seconds)
[07:14:09] <Guest9645> a short but good experience
[07:14:31] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[07:16:53] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 258 seconds)
[07:17:18] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 265 seconds)
[07:19:05] *** Joins: mixfix41 (~homefame@user/mixfix41)
[07:19:57] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:22:38] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[07:27:58] *** Quits: cmburn (~cmburn@c-107-4-141-134.hsd1.mn.comcast.net) (Quit: Leaving.)
[07:29:39] *** Joins: semeion (~semeion@user/semeion)
[07:31:50] *** Quits: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com) (Ping timeout: 246 seconds)
[07:32:24] *** Joins: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com)
[07:33:22] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:3655:c776:99d3:deef)
[07:35:16] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:3655:c776:99d3:deef) (Client Quit)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:18] *** Joins: rainmanjam (~rainmanja@216.161.85.62)
[07:37:32] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[07:41:40] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[07:41:50] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[07:42:59] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[07:47:11] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:47:11] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:47:11] *** Joins: wroathe (~wroathe@user/wroathe)
[07:52:35] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[07:53:19] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:55:30] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[07:55:59] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[07:56:47] *** Quits: mahmutov (~mahmutov@5.176.62.214) (Ping timeout: 264 seconds)
[08:00:01] *** Joins: stzsch|2 (~stzsch@187.44.81.18)
[08:02:10] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (Quit: b1101)
[08:02:44] *** Quits: stzsch (~stzsch@187.44.81.18) (Ping timeout: 265 seconds)
[08:09:07] *** Joins: Nandoo (Nando@187.64.93.23)
[08:12:10] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[08:12:34] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[08:13:27] *** Quits: stzsch|2 (~stzsch@187.44.81.18) (Read error: Connection reset by peer)
[08:13:50] *** Joins: stzsch|2 (~stzsch@187.44.81.18)
[08:14:18] *** Joins: Oxfuxxx (~sharky@103.107.196.245)
[08:19:23] *** Joins: Oxfuxxx_ (~sharky@103.107.196.245)
[08:20:31] *** Quits: Oxfuxxx (~sharky@103.107.196.245) (Ping timeout: 258 seconds)
[08:22:09] *** Quits: stzsch|2 (~stzsch@187.44.81.18) (Read error: Connection reset by peer)
[08:22:32] *** Joins: stzsch|2 (~stzsch@45.238.66.15)
[08:24:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[08:24:36] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[08:25:31] *** Quits: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com) (Ping timeout: 245 seconds)
[08:25:54] *** Joins: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com)
[08:27:45] *** Joins: grawity (grawity@star.nullroute.lt)
[08:29:30] <grawity> wasn't able to find a clear answer - in current compilers, is the ancient "int foo(bar, baz) int bar; char *baz; { ... }" syntax equivalent to the modern "int foo(int bar, char *baz)" or does it still have the downside of "no parameter type checking" or something like that?
[08:31:58] <Maxdamantus> grawity: the latter.
[08:32:57] <Maxdamantus> So after defining `int foo(bar, baz) int bar; char *baz; { .. }`, you are allowed to write `foo("bar");` if you want, though that call is not allowed to actually occur.
[08:33:06] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: It)
[08:33:14] *** Joins: NataSa23F (~KELEBEK@188.119.58.106)
[08:33:15] <Maxdamantus> (that is, you must ensure that call never happens)
[08:33:38] * NataSa23F https://o11.me/P0idH my look web site why problem ?
[08:34:05] <Maxdamantus> ,cc int foo(bar, baz) int bar; char *baz; { return bar; } int main(void){ if(0) foo("bar"); return 0; }
[08:34:07] <candide> Maxdamantus: [warning: ISO C forbids nested functions [-Wpedantic]  warning: ISO C forbids nested functions [-Wpedantic]  warning: 'main' is normally a non-static function [-Wmain]  warning: declaration of 'main' shadows a global declaration [-Wshadow]]  Success (no output).
[08:34:22] <grawity> hmm that's a shame, it's a bit easier to tab-indent long argument lists in the old syntax
[08:34:38] <grawity> but good to know
[08:34:41] <pragma-> I'm afraid candide's ,cc doesn't parse old-style functions
[08:35:14] <caze> >tab-indent long argument lists
[08:37:10] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[08:38:38] *** Joins: aa (~douglasco@200.146.85.128.static.gvt.net.br)
[08:39:25] *** Quits: NataSa23F (~KELEBEK@188.119.58.106) (K-Lined)
[08:40:03] <grawity> hey, some libfuse callbacks are like a mile long
[08:41:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:41:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:41:08] *** Joins: wroathe (~wroathe@user/wroathe)
[08:42:23] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[08:42:23] *** Quits: douglascorrea_io (~douglasco@200.146.85.128.static.gvt.net.br) (Ping timeout: 264 seconds)
[08:45:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:48:11] *** Joins: DepthDeluxe (~DepthDelu@2601:647:4700:d39:a5be:7ef0:6a69:33c9)
[08:54:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[08:55:40] *** Quits: Guest9645 (~Guest@host65.190-139-79.telecom.net.ar) (Remote host closed the connection)
[09:02:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:02:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:02:12] *** Joins: wroathe (~wroathe@user/wroathe)
[09:05:47] *** Quits: DepthDeluxe (~DepthDelu@2601:647:4700:d39:a5be:7ef0:6a69:33c9) (Ping timeout: 264 seconds)
[09:06:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 258 seconds)
[09:07:34] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:9f8f:99f7:7e01:229e)
[09:07:57] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:11:02] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.0.1)
[09:14:47] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Read error: Connection reset by peer)
[09:15:08] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[09:17:36] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:21:11] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:22:22] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:27:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[09:34:56] *** Quits: pucara (~i@181.93.167.217) (Quit: Lost terminal)
[09:36:14] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[09:37:03] *** Joins: de-facto_ (~de-facto@user/de-facto)
[09:37:57] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[09:38:02] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[09:39:55] *** de-facto_ is now known as de-facto
[09:40:46] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[09:41:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:41:51] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[09:43:34] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[09:43:42] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[09:45:20] *** Joins: moose (~moose@user/moose)
[09:46:43] *** Quits: Freman (~Freman@flatus.fremnet.net) (Quit: ZNC - https://znc.in)
[09:47:13] *** Joins: Freman (~Freman@flatus.fremnet.net)
[09:49:01] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:50:55] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:00:26] *** Quits: alch (~alch@151.36.133.45) (Ping timeout: 260 seconds)
[10:02:05] *** Joins: alch (~alch@151.36.165.186)
[10:04:56] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[10:08:20] *** Joins: pony (~ed@smol/hors)
[10:10:06] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[10:11:47] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 264 seconds)
[10:12:15] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:9f8f:99f7:7e01:229e) (Quit: Leaving)
[10:14:50] *** Quits: Oxfuxxx_ (~sharky@103.107.196.245) (Quit: Never underestimate the power of the butt..[]X/O...ON. (Playst...i mean.. Pir@tA$$))
[10:15:22] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[10:17:07] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.0.1)
[10:17:17] *** Joins: Lazenca (Lazenca@user/lazenca)
[10:17:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:17:27] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:19:24] *** Joins: pony (~ed@smol/hors)
[10:19:38] *** Quits: pony (~ed@smol/hors) (Client Quit)
[10:22:05] *** Joins: pony (~ed@smol/hors)
[10:22:13] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[10:23:46] *** Joins: Oxfuxxx (~oxfuxxx@103.107.196.244)
[10:25:46] *** Quits: pony (~ed@smol/hors) (Client Quit)
[10:26:24] *** Joins: pony (~ed@smol/hors)
[10:26:34] *** Joins: soul-bw (~uknown@2a02-a456-85ad-1-e44b-742e-874-ff97.fixed6.kpn.net)
[10:26:38] *** Quits: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 258 seconds)
[10:26:38] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[10:27:22] *** Joins: tbcr (~tbcr@107.13.189.161)
[10:27:58] *** Joins: reenix- (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[10:28:03] *** Joins: km2m- (~km2m@1.116.81.184)
[10:28:06] *** Joins: Thymo_ (~Thymo@NASSP/developer/Thymo)
[10:28:24] *** Joins: Nadalle (~elladan@user/elladan)
[10:28:49] *** Joins: Exagone313 (exa@irc.moe)
[10:29:25] *** Joins: jsmolic_ (~quassel@gentoo/developer/jsmolic)
[10:29:42] *** Joins: ElementW_ (~tungsten@hoodie.elementw.net)
[10:30:12] *** Joins: Tordek_ (tordek@triton.blinkenshell.org)
[10:30:22] *** Joins: some02_ (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[10:30:30] *** Joins: Ecco_ (~user@lfbn-idf1-1-725-214.w86-245.abo.wanadoo.fr)
[10:30:34] *** Joins: ski_ (~ski@remote12.chalmers.se)
[10:31:37] *** Quits: fcresende (~quassel@2804:431:cfc6:7dda:59ef:466c:27dd:1d0d) (Ping timeout: 258 seconds)
[10:33:31] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[10:33:59] *** Joins: synapt (NBishop@o.apocaleaps.com)
[10:34:02] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[10:34:15] *** Joins: boB_K7IQ (~boB_K7IQ@185.108.105.80)
[10:34:24] *** Joins: Xeha_ (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[10:36:55] *** Quits: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net) (Ping timeout: 265 seconds)
[10:37:27] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:38:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[10:38:12] *** Quits: jsmolic_ (~quassel@gentoo/developer/jsmolic) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:38:15] *** Joins: fcresende (~quassel@2804:431:cfc6:7dda:59ef:466c:27dd:1d0d)
[10:39:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:39:38] *** Joins: trisk (~trisk@c-73-253-10-38.hsd1.ma.comcast.net)
[10:39:48] *** Joins: jsmolic_ (~quassel@gentoo/developer/jsmolic)
[10:39:50] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: retr0taku[m] (~retr0taku@2001:470:69fc:105::f576) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Exa (exa@irc.moe) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: km2m (~km2m@1.116.81.184) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: prepro[m] (~prepromat@2001:470:69fc:105::1:68) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: TuxKruger[m] (~tuxkruger@2001:470:69fc:105::fa18) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: heitzmann[m] (~heitzmann@2001:470:69fc:105::1:86d) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: amtrx[m] (~amtrxmatr@2001:470:69fc:105::e0e9) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (Ping timeout: 260 seconds)
[10:39:50] *** Exagone313 is now known as Exa
[10:39:50] *** Quits: nate (NBishop@o.apocaleaps.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Tordek (tordek@triton.blinkenshell.org) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: some02 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Chaser (~Chaser@user/chaser) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Sargun (~anonymous@80.60.198.104.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Ecco (~user@lfbn-idf1-1-725-214.w86-245.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: soul-d (~uknown@user/soul-d) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: jsmolic (~quassel@gentoo/developer/jsmolic) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Hash (~weechat@thestonedapes.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: tbcr_ (~tbcr@107.13.189.161) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: fizzie (irc@selene.zem.fi) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Elladan (~elladan@user/elladan) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: ElementW (~tungsten@hoodie.elementw.net) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: laris (undead@37.221.209.36) (Ping timeout: 260 seconds)
[10:39:50] *** Thymo_ is now known as Thymo
[10:39:51] *** synapt is now known as nate
[10:39:51] *** Xeha_ is now known as Xeha
[10:39:51] *** Nadalle is now known as Elladan
[10:40:08] *** Joins: laris (undead@37.221.209.36)
[10:40:20] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[10:40:29] *** jsmolic_ is now known as jsmolic
[10:41:24] *** Joins: aradesh (~aradesh@user/aradesh)
[10:41:35] *** Joins: retr0taku[m] (~retr0taku@2001:470:69fc:105::f576)
[10:41:40] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[10:41:54] *** Joins: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com)
[10:42:16] *** Joins: TuxKruger[m] (~tuxkruger@2001:470:69fc:105::fa18)
[10:42:30] *** Quits: soapsudsxx (~soapsudsx@209.221.40.137) (Remote host closed the connection)
[10:42:52] *** Joins: Chaser (~Chaser@user/chaser)
[10:43:03] *** Joins: Hash (~weechat@thestonedapes.com)
[10:43:07] *** Joins: fizzie (irc@selene.zem.fi)
[10:43:11] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[10:43:22] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Ping timeout: 260 seconds)
[10:43:23] *** Joins: fbiagent__ (~fbiagent@user/fbiagent)
[10:43:44] *** Joins: prepro[m] (~prepromat@2001:470:69fc:105::1:68)
[10:44:10] *** Quits: boB_K7IQ (~boB_K7IQ@185.108.105.80) (Ping timeout: 265 seconds)
[10:44:39] *** Quits: Hash (~weechat@thestonedapes.com) (Client Quit)
[10:44:39] *** Joins: amtrx[m] (~amtrxmatr@2001:470:69fc:105::e0e9)
[10:44:52] *** Joins: heitzmann[m] (~heitzmann@2001:470:69fc:105::1:86d)
[10:46:10] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[10:46:57] *** Joins: V-T60 (~v@91.203.24.166)
[10:48:05] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[10:48:40] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[10:49:11] *** Joins: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0)
[10:49:31] *** Quits: V-T60 (~v@91.203.24.166) (Remote host closed the connection)
[10:49:48] *** Joins: V-T60 (~v@91.203.24.166)
[10:49:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:52:34] *** Atque is now known as Atque[m]
[10:54:41] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:cab1:bf6e:563a:f91b)
[11:00:08] *** Joins: Rounin (~david@84.212.130.215)
[11:02:49] *** Joins: arinov (~arinov@213.194.126.155)
[11:02:56] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.0.1)
[11:03:30] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[11:07:55] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:10:38] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[11:12:51] *** Quits: Atque[m] (~Atque@user/atque) (Ping timeout: 276 seconds)
[11:13:36] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[11:14:05] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[11:18:08] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 260 seconds)
[11:18:48] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:cab1:bf6e:563a:f91b) (Quit: Leaving)
[11:20:28] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[11:20:59] *** Joins: de-facto (~de-facto@user/de-facto)
[11:21:50] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 258 seconds)
[11:22:38] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:24:54] *** Joins: Atque (~Atque@user/atque)
[11:25:33] *** Joins: Raguile (~Raguile@user/raguile)
[11:26:39] *** Quits: Freman (~Freman@flatus.fremnet.net) (Quit: ZNC - https://znc.in)
[11:26:58] *** Joins: Freman (~Freman@185.83.217.144)
[11:30:39] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 258 seconds)
[11:31:11] *** Quits: puke (~brrrrrrr@user/puke) ()
[11:31:20] *** Joins: StyXman (~mdione@82-64-204-19.subs.proxad.net)
[11:31:27] *** Joins: puke (~puke@user/puke)
[11:31:51] <StyXman> can I ask Makefile questions here or will I be kickbanned? :-P
[11:33:20] <StyXman> ok, I'll risk it. does anyone know what the dots before the includes mean here? https://github.com/katef/kgt/blob/main/Makefile#L40 ? gnu make  does not seem to understand them...
[11:33:29] <dave0> it's quiet, you can ask here, but also there is ##workingset 
[11:33:34] <grawity> looks like bmake/BSD make syntax
[11:35:13] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:35:48] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[11:36:30] <dave0> netbsd make accepted .include <file> but gnu make didn't BUT both of them accepted   include file
[11:36:43] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[11:37:20] <dave0> i doubt very much it is posix but i guess i could look it up
[11:37:35] <trenka> it has also bmake's expanding ${CC:T:Memcc}
[11:39:49] <markand> include is POSIX
[11:40:44] <markand> and next POSIX make will get -include as well (does not complain if file is nonexistent)
[11:43:28] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:45:20] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[11:48:05] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[11:48:06] *** Joins: derjanni (~textual@p508ee135.dip0.t-ipconnect.de)
[11:48:26] *** Quits: derjanni (~textual@p508ee135.dip0.t-ipconnect.de) (Client Quit)
[11:49:19] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[11:52:29] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[11:52:33] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:54:14] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[11:54:30] *** Joins: kayprish (~kayprish@46.240.130.158)
[11:59:10] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:00:10] *** Quits: Oxfuxxx (~oxfuxxx@103.107.196.244) (Ping timeout: 258 seconds)
[12:02:23] *** Joins: Oxfuxxx (~oxfuxxx@103.107.196.245)
[12:04:15] *** Joins: V-T60 (~v@91.203.24.166)
[12:05:10] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:06:05] *** Joins: earnestly (~earnest@user/earnestly)
[12:06:34] *** Quits: rvncerr (~rvncerr@user/rvncerr) (Remote host closed the connection)
[12:07:17] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:08:16] *** Quits: Teacup (~teacup@user/teacup) (Ping timeout: 265 seconds)
[12:08:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:11:51] *** Joins: plastico (~plastico@neomutt/plastico)
[12:12:14] *** Joins: brelod (~me@90.244.150.142)
[12:14:33] *** Joins: Teacup (~teacup@user/teacup)
[12:14:36] *** Quits: parazyd (~parazyd@devuan/developer/parazyd) (Quit: parazyd)
[12:14:44] *** Quits: V-T60 (~v@91.203.24.166) (Remote host closed the connection)
[12:14:49] *** Joins: parazyd (~parazyd@devuan/developer/parazyd)
[12:15:34] *** Joins: marcello42 (~mp@p200300dfaf066e01e1016cd4a9290a16.dip0.t-ipconnect.de)
[12:17:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[12:26:16] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 260 seconds)
[12:26:57] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:ea56:28e9:aa44:df58)
[12:28:47] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[12:30:58] *** Joins: Hash (~weechat@thestonedapes.com)
[12:31:38] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[12:32:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:33:37] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:36:52] *** Joins: moose` (~moose@user/moose)
[12:39:51] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:40:02] *** Quits: porn (~hentai@user/hentai) (Ping timeout: 258 seconds)
[12:40:02] *** Quits: moose (~moose@user/moose) (Ping timeout: 260 seconds)
[12:40:02] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Ping timeout: 260 seconds)
[12:40:30] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Ping timeout: 260 seconds)
[12:40:56] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:41:00] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[12:41:32] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[12:45:58] *** Quits: malloy (~jimery@116.30.223.211) (Ping timeout: 250 seconds)
[12:46:35] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Read error: Connection reset by peer)
[12:46:55] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[12:48:09] *** Joins: malloy (~jimery@116.30.223.211)
[12:52:15] *** Joins: porn (~hentai@2a01:e0a:a5c:a070:298a:c1bd:aaa3:e424)
[12:52:15] *** Quits: porn (~hentai@2a01:e0a:a5c:a070:298a:c1bd:aaa3:e424) (Changing host)
[12:52:15] *** Joins: porn (~hentai@user/hentai)
[12:55:31] *** Joins: saribro (~swinnenb@user/swinnenb)
[12:57:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[12:57:56] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:58:31] *** Joins: seninha (~seninha@user/seninha)
[12:58:32] *** Quits: malloy (~jimery@116.30.223.211) (Ping timeout: 250 seconds)
[12:58:40] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[12:58:55] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 252 seconds)
[13:00:29] *** Joins: malloy (~jimery@116.30.223.211)
[13:00:43] *** Joins: retroman (~retroman@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[13:00:45] <retroman> .
[13:02:01] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[13:02:20] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[13:04:47] *** Parts: some02_ (~cat@h-98-128-128-173.A351.priv.bahnhof.se) ()
[13:05:05] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:06:24] <retroman> is this allowed:     char addresses[] = {0x56 , 0x57 , 0x58 , 0x59}; char *address = {(char*)addresses+0};
[13:06:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:06:45] *** Joins: shivesh (~shivesh@user/shivesh)
[13:06:59] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[13:07:13] <shadowchaser> what +0 should do?
[13:07:20] <Maxdamantus> Sure.
[13:07:28] <Maxdamantus> Though that cast is unnecessary.
[13:07:35] <Maxdamantus> (as is the `+0`)
[13:08:01] <retroman> I get a warning without it
[13:08:13] <retroman> saying its implicitally being cast to an int
[13:08:25] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[13:08:47] <NRK[m]> ,cc -Wall -Wextra char addresses[] = {0x56 , 0x57 , 0x58 , 0x59}; char address = {(char)addresses+0};
[13:08:49] <candide> NRK[m]: error: stray '\35' in program  error: stray '\17' in program  warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]  warning: unused variable 'address' [-Wunused-variable]  warning: unused parameter 'argc' [-Wunused-parameter]  warning: unused parameter 'argv' [-Wunused-parameter]
[13:09:29] <NRK[m]> ,cc -Wall -Wextra char addresses[] = {0x56 , 0x57 , 0x58 , 0x59}; char *address = addresses;
[13:09:32] <candide> NRK[m]: [warning: unused variable 'address' [-Wunused-variable]  warning: unused parameter 'argc' [-Wunused-parameter]  warning: unused parameter 'argv' [-Wunused-parameter]] no output: address = 0x7fffffffe294 "VWXY\224\342\377\377\377\177"; addresses = "VWXY"
[13:09:51] <Maxdamantus> retroman: I suspect you've got some other code which is causing that.
[13:10:04] <NRK[m]> i think it's cause of the {}
[13:10:11] <retroman> oh?
[13:10:30] <Maxdamantus> It shouldn't be because of the `{}`. Those are fine.
[13:10:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:10:43] <Maxdamantus> (they're also unnecesary)
[13:11:08] <retroman> char addresses[] = {0x56 , 0x57 , 0x58 , 0x59}; char *address = addresses[0];
[13:11:16] <NRK[m]> ,cc -Wall -Wextra char addresses[] = {0x56 , 0x57 , 0x58 , 0x59}; char *address = { addresses };
[13:11:19] <candide> NRK[m]: Same output.
[13:11:29] <NRK[m]> i c
[13:11:39] <dave0> retroman: char *address = &addresses[0];
[13:11:46] <Maxdamantus> retroman: that's an error, because `addresses[0]` is a `char`, not a `char *`.
[13:12:04] <retroman> it should be a genetic literal cast to  a pointer
[13:12:08] *** Quits: Nandoo (Nando@187.64.93.23) ()
[13:12:14] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 258 seconds)
[13:12:15] <retroman> generic*
[13:12:53] <retroman> well, not a literal 0x56 
[13:13:10] <dave0> retroman: oh you're using it as indirection?
[13:13:15] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[13:13:16] <retroman> yeah
[13:13:42] *** Quits: malloy (~jimery@116.30.223.211) (Ping timeout: 250 seconds)
[13:14:08] *** Joins: malloy (~jimery@116.30.223.211)
[13:14:18] <retroman> so 0x56 should be the address where char *address is stored not its value
[13:14:23] <dave0> retroman: it's better to use the real type that you are pointing to, rather than a raw value
[13:14:28] *** Joins: sudden (~cat@user/sudden)
[13:15:13] <dave0> retroman: you will need a cast
[13:15:38] <retroman> thought so
[13:17:35] *** Joins: henistein (~henistein@2001:8a0:fc8f:9501:bbed:17e8:c623:1af2)
[13:20:53] *** Quits: moose` (~moose@user/moose) (Quit: System has requested shutdown (Shutdown))
[13:21:22] *** Parts: StyXman (~mdione@82-64-204-19.subs.proxad.net) (cheers!)
[13:26:49] *** Parts: henistein (~henistein@2001:8a0:fc8f:9501:bbed:17e8:c623:1af2) ()
[13:26:50] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:27:59] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[13:28:50] *** Joins: serbest (~serbest@user/serbest)
[13:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:30:50] *** Joins: arinov (~arinov@31.142.50.8)
[13:31:01] *** Joins: csrf (~csrf@user/csrf)
[13:32:47] *** Joins: random-nick (~random-ni@87.116.165.220)
[13:35:49] *** Joins: Famine_ (~Famine@user/famine)
[13:35:51] *** Quits: marcello42 (~mp@p200300dfaf066e01e1016cd4a9290a16.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:38:17] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[13:38:25] *** Joins: jiehuana (~jiehuan@39.190.193.221)
[13:38:56] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[13:39:23] *** Quits: Famine- (~Famine@user/famine) (Ping timeout: 264 seconds)
[13:39:27] *** Quits: jiehuana (~jiehuan@39.190.193.221) (Remote host closed the connection)
[13:39:47] *** Joins: jiehuana (~jiehuan@39.190.193.221)
[13:40:06] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 245 seconds)
[13:40:32] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[13:40:49] *** Quits: jiehuana (~jiehuan@39.190.193.221) (Client Quit)
[13:41:00] *** Joins: jiehuan (~jiehuan@39.190.193.221)
[13:45:35] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[13:47:35] *** Joins: Arthuria (~Arthuria@user/arthuria)
[13:49:43] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[13:52:50] *** Quits: Oddity (Oddity@user/oddity) (Ping timeout: 260 seconds)
[13:57:11] *** Quits: serbest (~serbest@user/serbest) (Quit: Leaving)
[13:57:50] *** Quits: alch (~alch@151.36.165.186) (Read error: Connection reset by peer)
[13:58:12] *** Joins: battousai (~i.am@177.156.122.167)
[14:01:28] *** Joins: alch (~alch@151.38.158.46)
[14:01:39] *** Joins: Oddity (Oddity@user/oddity)
[14:06:40] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 258 seconds)
[14:08:47] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 264 seconds)
[14:11:36] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[14:12:30] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:13:13] *** Joins: vaio (~gary@user/ghost)
[14:13:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:16:50] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:17:01] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:ea56:28e9:aa44:df58) (Ping timeout: 258 seconds)
[14:18:33] *** Quits: kayprish (~kayprish@46.240.130.158) (Read error: Connection reset by peer)
[14:18:49] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:19:44] *** Joins: pulse (~pulse@user/pulse)
[14:22:02] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:8aac:dae6:cdb7:4179)
[14:23:10] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:25:36] *** Joins: NEYi (~NEYi@109.251.216.38)
[14:26:59] *** Joins: shivesh (~shivesh@user/shivesh)
[14:27:57] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[14:28:57] *** Joins: marcello42 (~mp@p200300dfaf066e01e1016cd4a9290a16.dip0.t-ipconnect.de)
[14:29:02] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[14:31:06] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:32:29] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[14:32:56] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:32:57] *** Joins: vaio (~gary@user/ghost)
[14:33:10] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 260 seconds)
[14:33:53] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[14:34:46] *** Joins: V-T60 (~v@host-86-111-90-227.566f.la.net.ua)
[14:36:05] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:36:59] *** Quits: dsrt^ (~dsrt@68.101.53.15) (Ping timeout: 264 seconds)
[14:37:09] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:37:46] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:40:56] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 245 seconds)
[14:44:09] *** Joins: off^ (~off@68.101.53.15)
[14:46:42] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:48:38] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:55:48] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:57:05] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[14:57:37] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[15:04:56] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[15:05:45] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:05:51] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:8aac:dae6:cdb7:4179) (Quit: Leaving)
[15:08:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:d443:ec89:31b2:d95b)
[15:08:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:d443:ec89:31b2:d95b) (Changing host)
[15:08:13] *** Joins: skapata (~Skapata@user/skapata)
[15:09:49] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:09:50] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[15:20:09] *** Quits: chenqisu12 (~xirndc@183.217.203.91) (Remote host closed the connection)
[15:21:02] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[15:21:59] *** Quits: V-T60 (~v@host-86-111-90-227.566f.la.net.ua) (Ping timeout: 264 seconds)
[15:27:58] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[15:28:34] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:30:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[15:34:35] *** Quits: Elladan (~elladan@user/elladan) (Ping timeout: 264 seconds)
[15:35:04] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[15:35:32] *** Joins: vaio (~gary@user/ghost)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:00] *** Joins: Elladan (~elladan@user/elladan)
[15:38:25] *** Joins: constxd (~brad@192.75.101.164)
[15:47:54] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[15:49:41] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:51:29] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[15:52:23] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[15:53:11] *** Quits: off^ (~off@68.101.53.15) (Ping timeout: 264 seconds)
[15:53:20] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[15:53:37] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[15:55:28] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[15:55:43] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[15:56:13] *** Joins: gareppa (~gareppa@user/gareppa)
[15:56:48] *** Joins: maharshipatel (~maharship@43.250.165.53)
[15:57:40] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[15:57:45] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[16:00:25] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Read error: Connection reset by peer)
[16:00:43] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[16:03:49] *** Joins: kaushal (~kaushal@103.195.203.53)
[16:04:09] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Ping timeout: 265 seconds)
[16:04:49] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[16:05:50] *** Quits: rahl (~rahl@102.114.221.174) (Ping timeout: 260 seconds)
[16:05:55] *** Quits: jiehuan (~jiehuan@39.190.193.221) (Ping timeout: 260 seconds)
[16:06:29] *** Joins: useretail (~useretail@185.132.19.151)
[16:07:35] *** Joins: rahl (~rahl@102.114.179.16)
[16:10:20] *** Joins: quartz (~quartz@user/quartz)
[16:10:33] *** Joins: xiongxin (~quassel@119.123.103.160)
[16:11:07] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: Leaving)
[16:13:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:13:58] *** Quits: skangas (~user@emacs/developer/skangas) (Read error: Connection reset by peer)
[16:16:17] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:16:18] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[16:17:00] *** Quits: xiongxin (~quassel@119.123.103.160) (Read error: Connection reset by peer)
[16:18:04] *** Joins: xiongxin (~quassel@119.123.100.49)
[16:18:11] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[16:18:15] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Client Quit)
[16:20:13] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:21:00] *** Joins: Atque (~Atque@user/atque)
[16:21:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 268 seconds)
[16:23:47] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[16:26:09] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[16:28:30] *** Joins: de-facto (~de-facto@user/de-facto)
[16:29:07] *** Joins: strajder (~strajder@user/strajder)
[16:30:13] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[16:30:52] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[16:30:59] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 264 seconds)
[16:31:23] *** Quits: maharshipatel (~maharship@43.250.165.53) (Quit: Client closed)
[16:31:55] <kaushal> Hi
[16:32:32] <kaushal> I am new to C programming Language. I will appreciate if someone can guide me to start learning C Programming Language
[16:32:38] <kaushal> Thanks in Advance
[16:33:18] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[16:33:21] <kaushal> I am referring to https://www.iso-9899.info/wiki/Books
[16:34:19] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[16:34:28] *** Joins: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it)
[16:34:52] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[16:35:30] <clarity> What exactly do you need?
[16:35:57] <kaushal> clarity: I am a beginner and i want to learn C
[16:36:13] <clarity> You can buy a book
[16:36:19] <clarity> Or you can read about the language online, install a compiler, find n1256.html, start coding
[16:36:43] <kaushal> clarity: ok
[16:36:57] <clarity> There's no single right way to go about it, so pick your poison and let us know if you struggle with something specifci?
[16:37:01] <kaushal> clarity: which book you recommend
[16:37:14] <clarity> I personally don't recommend books but if I had to, probably k&r
[16:37:22] <kaushal> clarity: ok
[16:37:46] <kaushal> clarity: I will begin with online now. 
[16:37:54] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[16:37:55] <kaushal> clarity: Any recommendations?
[16:39:17] <clarity> Well if you know literally nothing about the language, wikipedia might do.
[16:39:23] <clarity> You need to know syntax and data types
[16:39:32] <clarity> https://en.wikipedia.org/wiki/C_(programming_language)#Syntax
[16:39:34] <clarity> https://en.wikipedia.org/wiki/C_syntax
[16:39:52] <clarity> And start coding or find some existing code to learn from
[16:39:55] <clarity> Pick a small project
[16:40:35] <kaushal> ok
[16:40:39] <clarity> And definitely man pages
[16:40:48] <ioxzev1z> kaushal, read "Modern C", iirc it is free
[16:40:49] <clarity> You also need to read up on memory management
[16:40:51] <ioxzev1z> And not too verbose
[16:40:52] *** Joins: davidfetter_work (~davidfett@2601:640:4100:7e0:14dd:3c1a:fbe3:e28d)
[16:40:55] <kaushal> ok
[16:41:23] <clarity> kaushal: I tend to prefer openbsd man pages, ymmv.  For example http://mdoc.su/o/malloc
[16:41:25] <candide> Title of clarity's link: malloc(3) - OpenBSD manual pages
[16:41:27] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[16:41:52] <kaushal> ok
[16:41:58] <kaushal> ioxzev1z: Are you referring to https://www.dbooks.org/modern-c-1617295817/ ?
[16:42:40] *** Joins: slidercrank (~slidercra@user/slidercrank)
[16:42:54] <ioxzev1z> kaushal, no I am referring to https://gustedt.gitlabpages.inria.fr/modern-c/
[16:43:14] <kaushal> ok
[16:43:26] <ioxzev1z> Didn't click the link you sent so no idea if both refer to the same one
[16:43:49] <twkm> dbooks has an old version.
[16:45:06] <ioxzev1z> People say get K&R but I think modern c is quite good
[16:45:31] *** Quits: davidfetter_work (~davidfett@2601:640:4100:7e0:14dd:3c1a:fbe3:e28d) (Ping timeout: 245 seconds)
[16:46:02] *** Joins: off^ (~off@68.101.53.15)
[16:46:09] <kaushal> Thanks ioxzev1z clarity 
[16:48:42] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:50:51] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[16:52:42] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:54:23] *** Joins: seninha (~seninha@user/seninha)
[16:55:48] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:56:06] *** Joins: kaushal_ (~kaushal@14.98.153.6)
[16:56:54] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:6cbd:2839:d27a:fdfe)
[16:57:51] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[16:58:25] *** Quits: kaushal (~kaushal@103.195.203.53) (Ping timeout: 260 seconds)
[16:59:02] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[16:59:39] *** Quits: kaushal_ (~kaushal@14.98.153.6) (Client Quit)
[17:00:04] *** Joins: de-facto (~de-facto@user/de-facto)
[17:02:47] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[17:03:07] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[17:03:40] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 260 seconds)
[17:05:02] *** Joins: semeion (~semeion@user/semeion)
[17:05:28] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[17:06:51] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:06:51] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:06:51] *** Joins: wroathe (~wroathe@user/wroathe)
[17:07:54] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[17:08:22] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[17:08:37] *** Joins: shivesh (~shivesh@user/shivesh)
[17:09:04] <Thedarkb-Desktop> I like K&R2, it's bite sized.
[17:10:59] <varaindemian> how can I use  `__attribute__((constructor))` and or  `__attribute__((destructor))` in a CTF challenge
[17:11:02] <varaindemian> any ideas
[17:11:02] <varaindemian> ?
[17:11:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[17:13:18] <deadk> a challenge that you're setting?
[17:14:17] *** Joins: V-T60 (~v@91.203.24.166)
[17:15:45] <khoa> varaindemian: Might elaborating the situation ?
[17:16:25] *** Quits: xiongxin (~quassel@119.123.100.49) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:16:31] <varaindemian> khoa: hmm I am currently interested in some ctf examples actually
[17:19:43] <khoa> varaindemian: And how the 2 attributes are involved in the examples/challenges ?
[17:20:02] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[17:20:39] <varaindemian> khoa: maybe somehow modidy the values before execution and and player might be forced to patch the program?
[17:20:44] <varaindemian> just an idea
[17:21:58] <khoa> varaindemian: Oh so it's not a challenge you are solving. Just an idea for a challenge.
[17:22:08] <khoa> Well you might wanna look into LD_PRELOAD I guess
[17:23:09] <varaindemian> khoa: exactly I am trying to make a challenge myself
[17:24:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:25:14] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Ping timeout: 258 seconds)
[17:26:22] <khoa> The only thing I can think of is patching stuff
[17:26:24] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:26:24] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:26:24] *** Joins: wroathe (~wroathe@user/wroathe)
[17:26:40] *** Joins: quartz (~quartz@user/quartz)
[17:27:08] *** saribro is now known as swinnenb
[17:27:08] <khoa> But it's too vague
[17:27:30] *** Quits: khoa (~khoa@user/khoa) (Quit: leaving)
[17:27:34] <varaindemian> khoa: hmm any idea where I can find some already written c code as in challenge itself before being compiled?
[17:31:43] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 252 seconds)
[17:31:48] *** Joins: malina (~malina@user/malina)
[17:33:23] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[17:33:25] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:33:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:34:05] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[17:38:29] *** Quits: Hash (~weechat@thestonedapes.com) (Quit: WeeChat 3.3)
[17:38:48] <ioxzev1z> varaindemian, "already written c code"? No idea, C was invented just 10 minutes ago
[17:39:10] <varaindemian> ioxzev1z: whatdo you mean?
[17:39:14] <ioxzev1z> ... jk
[17:41:46] *** Joins: Hash (~weechat@protect.yourself.with.hashsecurity.org)
[17:46:54] *** Joins: superboot (~agentgasm@user/superboot)
[17:49:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[17:50:28] <quartz> Hello. I have this function: printf("Sum of all prime nums: %d\n", sum(p, p + n, &is_prime));    I'm trying to write the function prototype, but I'm not sure I'm correct. the "&is_prime" is throwing me off. I have: sum(int *begin, int *end, ....) not sure what the last parameter would be.
[17:51:12] <quartz> is_prime is a function, so "&is_prime" is essentially returning it's value into sum?
[17:51:19] <varaindemian> ioxzev1z: so do you have some examples of CTFs using that?
[17:51:33] <twkm> work out the type of is_prime, which easily provides the type of &is_prime.
[17:52:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:52:11] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 245 seconds)
[17:52:18] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:52:39] <twkm> &x is *always* a pointer to x, so in your case quartz that's a pointer to the function is_prime.
[17:53:32] <twkm> is_prime has a type, T, whatever that is &is_prime as a value has type T*.
[17:53:39] <quartz> twkm: So, when writing the function prototype I'd use int *condition because the return type is int for is_prime?
[17:53:48] <quartz> twkm: Ahhh OK
[17:53:54] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[17:53:54] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[17:54:31] <ioxzev1z> quartz, no
[17:54:49] <ioxzev1z> &is_prime is not the address of the return value
[17:54:56] <ioxzev1z> it is the address of the function
[17:55:13] <quartz> ioxzev1z: So how do I get the address of the return value?
[17:55:22] <varaindemian> _attribute__((constructor))` and or  `__attribute__((destructor))`
[17:55:30] <ioxzev1z> much like int *p = &i; assigns to p the address of variable i, &is_prime in your example is the address of the function is_prime
[17:55:32] *** Joins: tejr (~tejr@user/tejr)
[17:55:43] *** Joins: mort (~mort@188.166.114.29)
[17:55:49] <quartz> RIght...
[17:56:21] <mort> I found this documentation a bit interesting: https://www.libsdl.org/projects/SDL_ttf/docs/SDL_ttf_43.html passing a null _font_ results in a segfault, passing a null _text_ will result in undefined behavior
[17:56:32] <mort> almost sounds like it sends a SIGSEGV to itself
[17:56:48] <ioxzev1z> quartz, I assume that function wants a function pointer of some sort (guessing something along the lines of _Bool foo(int, int); or something
[17:57:18] <quartz> ioxzev1z: No, it takes in a single int value.
[17:57:19] <ioxzev1z> quartz, for example the inside of the sum function might literally just call return foo(x, y); where you have sum(x, y, func);
[17:57:21] <twkm> quartz: so int(*parametername)(/*prototype*/)
[17:57:44] <ioxzev1z> uh, return func(x, y)
[17:57:56] *** Quits: alch (~alch@151.38.158.46) (Read error: Connection reset by peer)
[17:58:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[17:58:47] *** Joins: kurahaupo_ (~kurahaupo@pa49-179-226-170.pa.nsw.optusnet.com.au)
[17:59:10] <ioxzev1z> quartz, as far as I can guess sum takes (int, int, function_pointer); where you have above sum(p, p + n, &is_prime); 
[17:59:33] <quartz> ioxzev1z: Yes, I'm just not sure how to write the prototype for sum
[17:59:41] <quartz> HOw do you tell it to take a function pointer.
[17:59:48] <quartz> NEver seen thsi ebfore
[17:59:54] <ioxzev1z> quartz, what function pointer type does it take?
[18:00:03] <fizzie> Look up the prototype of `qsort` from the standard library for a standard example.
[18:00:17] <ioxzev1z> if int foo(int, int); you would declare sum(int, int, int (*ptr)(int, int));
[18:00:22] <quartz> is_prime returns an int.
[18:00:22] <fizzie> It takes a function pointer as an argument too.
[18:00:35] <quartz> fizzie: Ahhhh yes
[18:00:38] <quartz> Thanks for that
[18:00:39] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[18:01:27] <fizzie> FWIW, you can use a *function* type in a parameter declaration, and it will be converted to a function pointer type (just like array declarators get converted to a pointer type), so `int sum(int *start, int *end, int p(int)) { ... }` would also be a possibility.
[18:01:33] <fizzie> I don't think I see that used much though.
[18:01:39] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 258 seconds)
[18:01:49] *** Joins: alch (~alch@151.36.202.233)
[18:02:57] <quartz> If I wanted to do it the other way, like in qsort, I'd have to do: int sum(int *start, int *end, int (*cond)(int n))?
[18:03:14] <ioxzev1z> quartz, drop the n, but sure
[18:03:38] <quartz> ioxzev1z: But is_prime takes in an int.
[18:03:42] <quartz> is_prime(int num)
[18:03:46] <ioxzev1z> fffffffffffffsssssssssssssssssssssssssssssssssssssss
[18:04:05] <ioxzev1z> Function declarations do not need names. You would do void foo(int); then void foo(int i) { ... };
[18:05:04] <quartz> AHhh OK
[18:05:18] <quartz> ioxzev1z: Thanks
[18:05:19] <fizzie> They don't *need* names, but they can have names.
[18:05:26] <ioxzev1z> You can declare a function as such: <return_type> <name>(<arg1_type>, <arg2_type>, ...); where ... means one or more args.
[18:05:30] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[18:05:45] <ioxzev1z> Then you can use <arg1_type> <name>, etc for the actual definition
[18:05:57] <fizzie> Probably not very useful there, but if there's (say) two int arguments with different purposes, there'd be nothing wrong in having names also in the function pointer declaration to remind the reader what the arguments are for.
[18:06:02] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:06:02] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:06:02] *** Joins: wroathe (~wroathe@user/wroathe)
[18:06:09] <fizzie> (For a single-argument predicate, sure, it's a little superfluous.)
[18:06:43] <ioxzev1z> Hence void foo(int (*bar)(int)) is fine
[18:07:50] <ioxzev1z> In fact aiuc you don't need a name for the function pointer in the declaration, e.g. void foo(int (*)(int)) is fine
[18:08:26] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca)
[18:08:43] <ioxzev1z> ,cc void foo(int (*)(int))
[18:08:46] <candide> ioxzev1z: Success (no output).
[18:09:03] <fizzie> Strictly speaking, even `int(int)` suffices, due to that function-to-pointer conversion. But I definitely support giving function prototypes parameter names in general. They're good unobtrusive documentation.
[18:09:57] <fizzie> ,cc int foo(int(int)); int foo(int f(int)) { return f(123); } int bar(int x) { return x; } printf("%d", foo(bar));
[18:09:59] <candide> fizzie: 123
[18:10:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:11:51] *** Quits: battousai (~i.am@177.156.122.167) (Quit: I come down here for a fat woman and that's what I'm havin.)
[18:12:28] *** Quits: kurahaupo_ (~kurahaupo@pa49-179-226-170.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[18:12:43] *** Joins: kurahaupo (~kurahaupo@pa49-179-226-170.pa.nsw.optusnet.com.au)
[18:13:33] *** Parts: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca) ()
[18:14:37] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[18:24:11] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:26:05] *** Joins: rgrinberg (~textual@ip152-195-159-186.ct.co.cr)
[18:27:05] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 260 seconds)
[18:27:55] *** Joins: serbest (~serbest@user/serbest)
[18:27:59] *** Quits: tinhatcat (~manjaro-g@2620:103:a000:2201:8e4c:af6a:e11c:11a1) (Quit: Leaving)
[18:28:43] *** Joins: shivesh (~shivesh@user/shivesh)
[18:32:02] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[18:36:08] <pragma-> NRK[m]: by the way, candide's default ,cc options include -Wall -Wextra -Wno-unused and several other flags. If you explicitly pass your own flags, it replaces the default set of flags (which includes -Wno-unused) -- this causes "warning: foo was unused" warnings to appear for unused variables. In other words, there is no need to explicitly pass your own -Wall flag in most cases.
[18:36:12] *** Quits: tbcr (~tbcr@107.13.189.161) (Killed (NickServ (GHOST command used by tbcr_!~brclark@user/tbcr)))
[18:36:28] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[18:36:54] *** Joins: de-facto (~de-facto@user/de-facto)
[18:37:46] <NRK[m]> ahh, i c
[18:37:46] <NRK[m]> thanks
[18:37:55] <pragma-> ,cc -info
[18:37:55] <candide> pragma-: c11 cmdline: gcc -ggdb -g3 prog.c -Wextra -Wall -Wno-unused -pedantic -Wfloat-equal -Wshadow -std=c11 -lm -Wfatal-errors -fsanitize=alignment,undefined -fsanitize-address-use-after-scope -fno-omit-frame-pointer -o prog
[18:48:38] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[18:49:30] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[18:52:05] <quartz> Sorry for the newbie question, but I'm getting a warning at line 27: comparision between pointer and int. I dereferenced the pointer comparison, so I don't know what the problem is. 
[18:52:12] <quartz> https://bpa.st/B4HQ
[18:52:42] <quartz> The issue does not show up at the other lines where I compare *condition == 0 which is weird
[18:53:08] <ioxzev1z> quartz, you fail to understand function pointers.
[18:53:27] <ioxzev1z> *condition does not make sense. You want condition(x), where x is some int
[18:53:51] <quartz> omg
[18:53:55] *** Quits: serbest (~serbest@user/serbest) (Ping timeout: 260 seconds)
[18:54:13] <ioxzev1z> if(condition(x) == 0), and so on
[18:54:16] <quartz> I can't remember if I read this chapter in K&R or not. Probably not... 
[18:54:23] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[18:54:24] <ioxzev1z> wrt function pointers, forget that they are pointers.
[18:54:25] <quartz> ioxzev1z: OK thanks ;)
[18:54:53] <ioxzev1z> Given void (*foo)(int); when you call foo, pretend it's just a normal function, e.g. foo(5)
[18:55:20] <quartz> Yeah it makes more sense now. The syntax in C throws me off so much.
[18:55:41] *** Joins: Guest87 (~Guest87@211.165.185.81.rev.sfr.net)
[18:58:21] <quartz> ioxzev1z: But in line 68 and 69, they pass in &is_even and is_prime, so they are indicating what number to total (either prime or even). So how would I know what number to total based off of that?
[18:58:56] <quartz> ohh
[18:59:08] *** Joins: cul8r (~cul8r@76.113.95.199)
[18:59:14] <quartz> Sorry haha, the function pointer will be whatever is passed into sum
[18:59:17] <quartz> My bad
[18:59:56] *** Quits: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk) (Ping timeout: 246 seconds)
[19:00:07] <ioxzev1z> fix the code and rewrite, I will check it
[19:00:20] *** Joins: anonymeowo (~anonymeow@5.34.180.230)
[19:02:28] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[19:02:42] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[19:06:26] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[19:06:55] <ioxzev1z> int total; for(int *p = begin; p < end; p++) { if(condition(*p)) { total += *p; } } or something like that
[19:07:20] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 260 seconds)
[19:07:28] *** Joins: shivesh (~shivesh@user/shivesh)
[19:08:16] <Bou> I spy an uninitialized variable
[19:08:47] <ioxzev1z> total = 0; muh bad bru
[19:10:21] <quartz> Hahaa
[19:10:55] <ioxzev1z> Might actually be <= end
[19:11:14] <ioxzev1z> Can't think right now. Will leave this as an exercise for quartz 
[19:11:19] <Bou> it passes p+n so *end is out of bounds
[19:11:29] <quartz> My code compiles but does not work.
[19:11:41] <ioxzev1z> quartz, your code or what I wrote above?
[19:11:42] <quartz> (end - begin) I think
[19:11:52] <ioxzev1z> quartz, why are you doing that with int/etc
[19:11:59] <quartz> ioxzev1z: My code. I suffer from logic error
[19:12:00] <ioxzev1z> Just inc the pointer until end
[19:12:23] <ioxzev1z> while(pointer = begin; pointer does not pass end; inc muh ptr)
[19:12:33] <ioxzev1z> s/while/for/
[19:13:47] *** Quits: Guest87 (~Guest87@211.165.185.81.rev.sfr.net) (Quit: Client closed)
[19:13:59] <ioxzev1z> quartz, int total = 0; for(int *p = begin; p < end; p++) { if(condition(*p)) { total += *p; } } is pretty much what you want
[19:14:19] <quartz> Yeah I can't believe I can't get the logic.
[19:14:33] <ioxzev1z> quartz, also you have two loops in your code doing exactly the same thing if condition returns 0 or 1
[19:14:38] <ioxzev1z> What is the reason for that?
[19:14:43] * Bou can we get "inc muh ptr" into the C2x standard?
[19:14:44] <quartz> Good question
[19:14:57] <ioxzev1z> Also if condition returns 0 then you should not be doing total += on it
[19:15:11] <quartz> is_even will return a 1 if true, 
[19:15:13] <quartz> Yeah
[19:15:13] <ioxzev1z> Because condition returning 0 means no match, hence you don't add anything to the total
[19:15:53] <quartz> OK I got it
[19:16:58] <quartz> https://bpa.st/RDLQ
[19:17:13] <quartz> Ahh I don't even need the for loop
[19:17:15] <quartz> LIke you said
[19:17:22] <ioxzev1z> quartz, why are you using [] rather than pointers
[19:17:32] <ioxzev1z> The loop you want is: for(int *p = begin; p < end; p++) { if(condition(*p)) { total += *p; } }
[19:17:33] <quartz> ioxzev1z: Because pointers scare me
[19:17:55] <quartz> The code will run faster with pointers and not brackets?
[19:17:56] <Bou> meh, nothing wrong with begin[i]
[19:18:50] <ioxzev1z> quartz, for(p is equal to the address of begin; while p is less than the address of end; increment p) { if(condition(<dereference (value pointed to) p> is true)) { total is equal to total + the value of *p } }
[19:20:13] <quartz> ioxzev1z: Yaeh
[19:20:30] <quartz> I can replace begin[i] with *begin + i or something like that
[19:20:39] <quartz> *(begin + i)
[19:20:52] *** Joins: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net)
[19:21:01] <ioxzev1z> Not sure if you even read anything I've said
[19:21:14] <NRK[m]> i'd use `sizeof (*p)` in malloc
[19:21:22] <ioxzev1z> You literally ---> JUST NEED THE LOOP I WROTE <---
[19:22:10] <quartz> ioxzev1z: You mentioned "the value of *p". Begin is a pointer, I'm dereferencing it with brackets instead of *.
[19:22:16] <quartz> ioxzev1z: I understand your solution
[19:22:43] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[19:23:18] <ioxzev1z> The value of *p is whatever p is pointing to at the time you call *p
[19:24:10] <razor[m]> 64 bit for amd64
[19:24:32] *** Joins: user5023 (~user5023@46-10-65-205.ip.btc-net.bg)
[19:25:09] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:25:34] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[19:25:59] <quartz> ioxzev1z: Understood.
[19:27:50] <quartz> ioxzev1z: Thanks for your help.
[19:30:09] *** Quits: user5023 (~user5023@46-10-65-205.ip.btc-net.bg) (Quit: Leaving)
[19:30:42] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[19:34:43] *** Quits: retroman (~retroman@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[19:35:44] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[19:37:07] *** Quits: samir (~azureuser@user/samir) (Ping timeout: 252 seconds)
[19:37:40] *** Joins: kish` (~aqua@user/aqua)
[19:38:33] *** Joins: luizfrds (~Luiz@152.250.243.147)
[19:41:20] *** Joins: eeerik8 (~eeerik8@95.179.149.48)
[19:41:20] *** Quits: eeerik8 (~eeerik8@95.179.149.48) (Client Quit)
[19:41:49] *** Atque is now known as ATQUE
[19:42:00] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:43:05] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 265 seconds)
[19:43:37] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[19:44:03] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[19:44:16] *** Joins: eeerik8 (~eeerik8@95.179.149.48)
[19:56:46] *** Quits: Oxfuxxx (~oxfuxxx@103.107.196.245) (Ping timeout: 245 seconds)
[19:56:52] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[19:57:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:00:13] *** Joins: samir (~azureuser@user/samir)
[20:00:25] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 260 seconds)
[20:00:26] *** Joins: mahmutov (~mahmutov@5.176.62.214)
[20:02:35] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[20:02:47] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[20:03:22] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:03:24] *** Joins: V-T60 (~v@91.203.24.166)
[20:05:35] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Client Quit)
[20:06:16] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:06:50] *** ATQUE is now known as Atque
[20:12:18] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[20:14:45] *** Quits: kuber (~kuber@97-113-79-225.tukw.qwest.net) (Remote host closed the connection)
[20:15:03] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[20:16:36] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:17:11] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[20:17:16] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:18:04] *** Joins: kuber (~kuber@97-113-79-225.tukw.qwest.net)
[20:20:31] *** Joins: zsoltiv_- (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[20:20:47] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 265 seconds)
[20:21:25] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[20:21:45] *** zsoltiv_- is now known as zsoltiv_
[20:22:26] *** Joins: KevinX (~KevinX@94.140.11.217)
[20:23:50] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:28:49] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[20:33:27] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[20:34:26] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:35:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:37:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:38:50] *** Joins: jasper_ (~user@styria.daemonized.org)
[20:41:38] *** Joins: quartz (~quartz@user/quartz)
[20:43:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[20:45:09] *** Joins: Filystyn (~piotr@user/filystyn)
[20:45:11] <Filystyn> hello
[20:45:26] <Filystyn> typedefing feunctions it's possible in C yap ?
[20:46:03] <Filystyn> no wrong not typedef
[20:46:06] <Filystyn> some kind of alias
[20:46:12] <Filystyn> I guess ?
[20:47:14] <Filystyn> I would need to call a function  in a function ? Why I ask this. I have an old code. Wanted to statically link it with part of new code lib. Few i/o functions
[20:48:04] <Filystyn> Maybe I am over thinking it. I should probably hardchange it hehe
[20:49:28] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[20:49:47] *** Quits: Shimoda (~Shimoda@151.21.153.86) (Quit: Leaving)
[20:54:52] <ioxzev1z> typedef...
[20:54:59] *** Quits: rgrinberg (~textual@ip152-195-159-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:55:00] *** Quits: tinyweasel (~weasel@underserver.net) (Quit: quit)
[20:55:16] <ioxzev1z> Probably only want to typedef function pointers.
[20:55:24] <Filystyn> nah
[20:55:30] <Filystyn> typedef was not the thing
[20:55:32] <Filystyn> I changed manualy
[20:55:34] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[20:56:04] <Filystyn> It was not a big deal anyway
[20:56:14] <twkm> you can typedef a function, but it's not as universally useful as an object typedef.
[20:56:50] *** Joins: seninha (~seninha@user/seninha)
[20:56:50] *** Joins: rgrinberg (~textual@201.182.226.118)
[20:57:48] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:dd8d:d1cd:a7af:daf3)
[21:00:44] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[21:04:20] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[21:04:58] *** Joins: de-facto (~de-facto@user/de-facto)
[21:05:54] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[21:05:54] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[21:08:28] *** Joins: tinyweasel_ (~weasel@underserver.net)
[21:09:07] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[21:12:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[21:14:13] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[21:16:19] *** Joins: Narrat (~omnius@p200300df5f0ec4d206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:16:23] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:17:31] *** Joins: kurfen (~kurfen@37.120.204.67)
[21:20:23] *** Joins: soapsudsxx (~soapsudsx@209.221.40.137)
[21:22:59] <makersmasher> https://gist.github.com/makersmasher/af5ff7913ccea547d7cd47ad99a5fefe
[21:23:21] <makersmasher> why is this never printing  "OUT" ?
[21:23:29] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[21:23:39] *** Joins: omegatron (~some@p5484903d.dip0.t-ipconnect.de)
[21:24:08] <makersmasher> upon the first space, tab, or newline, shouldn't it hit the else statement and exit the while?
[21:26:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 264 seconds)
[21:27:11] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[21:30:07] *** Joins: raj_ (uid72176@user/raj)
[21:30:21] *** Joins: Roman[m] (~wrongt@2001:470:69fc:105::341e)
[21:30:48] *** raj_ is now known as raj
[21:32:34] <fossforus> makersmasher: you want to use &&, not ||
[21:33:04] <fossforus> your code says c must not be all 3 of those during the conditionals in the if
[21:33:36] <fossforus> so it'll always be true
[21:34:20] <makersmasher> ah, duh, thanks!
[21:34:22] *** Joins: phao (~phao@2804:d45:8e7a:de00:e925:eac1:2570:e793)
[21:35:08] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[21:35:22] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:6cbd:2839:d27a:fdfe) (Read error: Connection reset by peer)
[21:36:23] *** Quits: zwr (~zwr@2804:d45:b966:fb00:3928:72f5:d7d7:f752) (Ping timeout: 264 seconds)
[21:36:39] *** Joins: zwr (~zwr@2804:d45:b966:fb00:5a0c:c0ff:d187:175b)
[21:36:45] *** Quits: anonymeowo (~anonymeow@5.34.180.230) (Quit: Konversation terminated!)
[21:37:53] *** Quits: Filystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[21:38:04] <fossforus> np
[21:40:03] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[21:40:37] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[21:40:58] <fossforus> it messes me up sometimes too
[21:41:15] <fossforus> makersmasher: a good way to think about it is || is when you need multiple things to be true, && is when you only need one
[21:41:46] <makersmasher> makes sense
[21:42:24] <makersmasher> C is short circuiting my brain; coming from higher level languages I am having a touch time thinking in terms of "small" items
[21:42:54] <makersmasher> python/ruby etc, seem more like english to me, where C I am thinking in numbers or something...if that makes sense at all
[21:43:12] <makersmasher> thanks again
[21:43:56] <pragma-> twkm: btw, -fsanitize=address now works in ,cc -- i remember you tried to use it a few months ago. maybe there will be occasion to use it again in the future.
[21:45:05] <fossforus> makersmasher: you can pm if you have trouble with a concept
[21:45:07] *** Joins: zhiayang_ (~zhiayang@user/zhiayang)
[21:45:08] <fossforus> or just ask here I guess
[21:45:18] <makersmasher> I'll try not too haha
[21:45:21] <makersmasher> but thanks
[21:45:35] <pragma-> I recommend avoiding anybody who says "pm me" because they probably want to avoid being corrected by the channel.
[21:46:29] *** Quits: zhiayang (~zhiayang@user/zhiayang) (Ping timeout: 265 seconds)
[21:46:29] *** zhiayang_ is now known as zhiayang
[21:53:47] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:53:52] *** Joins: kobalt (~rsonx@user/kobalt)
[21:54:03] *** Joins: [SyntaxError] (~user@user/syntaxerror/x-9308191)
[21:58:26] <twkm> used by default now though, right?
[22:00:06] *** Quits: alch (~alch@151.36.202.233) (Ping timeout: 245 seconds)
[22:00:56] *** tinyweasel_ is now known as tinyweasel
[22:01:21] *** Quits: zwr (~zwr@2804:d45:b966:fb00:5a0c:c0ff:d187:175b) (Quit: leaving)
[22:01:24] <fossforus> pragma-: well that was needlessly hostile
[22:01:32] <fossforus> I just didn't want to pollute the chat
[22:01:36] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ecc0:34ba:7ca0:1eda)
[22:02:14] *** Joins: alch (~alch@151.46.70.171)
[22:02:24] <pragma-> twkm: -fsanitize=address won't run inside gdb or ptrace :( so no, but you can explicitly specify it and candide will skip using gdb.
[22:03:57] *** Quits: rgrinberg (~textual@201.182.226.118) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:04:20] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[22:06:52] <twkm> ahh.
[22:06:56] *** Joins: rgrinberg (~textual@201.182.226.118)
[22:08:29] *** Joins: Oxfuxxx (~oxfuxxx@103.107.196.245)
[22:14:22] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:15:25] *** Joins: Akuli (~Akuli@87-94-111-26.bb.dnainternet.fi)
[22:17:21] *** Quits: V-T60 (~v@91.203.24.166) (Remote host closed the connection)
[22:17:44] *** Joins: V-T60 (~v@91.203.24.166)
[22:19:00] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[22:21:48] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:24:02] *** Quits: tinyweasel (~weasel@underserver.net) (Quit: quit)
[22:24:21] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[22:24:34] <nisstyre> pragma-: they just want to share an amazing investment opportunity, that's all
[22:25:46] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[22:29:26] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[22:29:54] *** Joins: reset (~reset@user/reset)
[22:30:57] <bparker> pragma-: works with gdb for me.
[22:31:29] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[22:32:58] *** Quits: [SyntaxError] (~user@user/syntaxerror/x-9308191) (Quit: see you soon)
[22:33:13] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Read error: Connection reset by peer)
[22:33:45] <pragma-> ,recall candide ptrace
[22:33:45] <candide> [21h13m ago] <c​andide> fizzie: cc ==45418==LeakSanitizer has encountered a fatal error. ==45418==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1 ==45418==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc) Exit 1
[22:34:00] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[22:34:44] <pragma-> so now candide detects when -fsanitize=address is used and bypasses the gdb stage
[22:35:47] <pragma-> bparker: perhaps you need to have code that triggers the sanitizer for the fatal error to happen.
[22:37:28] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:37:31] *** Joins: tinyweasel_ (~weasel@underserver.net)
[22:37:44] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:41:56] *** tinyweasel_ is now known as tinyweasel
[22:42:12] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[22:44:01] <quartz> Can someone explain this code to me? https://bpa.st/55CQ   I don't understand line 29 and the while loop at line 30.They pass a pointer (without dereferencing it) into strlen, which I assume will return an int with the length of the first string in argv (excluding the null character)?
[22:44:06] *** Quits: tinyweasel (~weasel@underserver.net) (Killed (NickServ (GHOST command used by tinyweasel_!~tinywease@45.86.203.88)))
[22:44:40] <twkm> assume?
[22:45:01] <twkm> guess my suggestion you keep a reference handy was ignored.
[22:45:07] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:36] *** Quits: Oxfuxxx (~oxfuxxx@103.107.196.245) (Quit: Never underestimate the power of the butt..[]X/O...ON. (Playst...i mean.. Pir@tA$$))
[22:46:33] *** Joins: tinyweasel_ (~weasel@underserver.net)
[22:46:35] <quartz> twkm: I looked up what strlen does, it returns the length of the string. But I've never seen it used by passing a pointer into it without dereferencing first.
[22:46:37] *** Joins: magla (~gelignite@55d45526.access.ecotel.net)
[22:46:46] *** Quits: kobalt (~rsonx@user/kobalt) (Ping timeout: 245 seconds)
[22:46:51] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[22:46:54] <quartz> No I didn't ignore you :)
[22:47:10] <twkm> strlen must be provided with a pointer, specifically a char *.
[22:47:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:47:47] <strajder> quartz: you don't dereference a pointer which you pass to strlen
[22:48:05] <rcf> strajder: unless it's a pointer to another pointer. 
[22:48:05] <twkm> that would be a char, which is not what strlen expects.
[22:48:06] * rcf runs
[22:48:17] <strajder> unless you have a pointer to pointer, in which case you only dereference once and still pass a pointer to strlen
[22:48:30] <strajder> yeah, was typing it :
[22:48:32] <strajder> :)
[22:48:41] <quartz> Oh :(
[22:49:45] <quartz> I just can't understand line 25, where they point char *t = copy[i], than line 29 where they point t to strlen(s)
[22:49:53] <quartz> t needs to point to a char * array haha
[22:50:45] *** Quits: Arthuria (~Arthuria@user/arthuria) (Ping timeout: 260 seconds)
[22:50:57] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:51:50] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 260 seconds)
[22:52:10] <rcf> quartz: that's because copy is a char **, so dereferencing it once gives you a char *
[22:52:18] <strajder> *t is a char, which is also a number from 0..255
[22:52:47] <pragma-> or some other range
[22:52:52] <strajder> *t = strlen(s) assigns the length of s to a char
[22:53:02] <quartz> Right!
[22:53:04] *** Quits: tinyweasel_ (~weasel@underserver.net) (Remote host closed the connection)
[22:53:40] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[22:53:49] * rcf repeatedly increments pragma-'s signed char to trigger undefined behavior
[22:53:52] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[22:54:28] <fizzie> bparker: It's specifically the LeakSanitizer part of ASan that won't run under GDB, and that used to be off by default.
[22:54:51] <bparker> whose LeakSanitizer? gcc? clang?
[22:55:46] <pragma-> I cannot figure out how to make gdb's `info macro ...` or `macro expand ...` work any longer either.
[22:55:50] <fizzie> The one that's integrated in AddressSanitizer and enabled by ASAN_OPTIONS=detect_leaks=1. I don't know if it's different in GCC vs. Clang.
[22:55:55] <pragma-> It used to work with no problem.
[22:56:17] <pragma-> Ever since this weird debuginfod thing started appearing in Fedora...
[22:56:33] * pragma- shakes fist at the gods for changing things.
[22:56:38] <strajder> quartz: that assignment doesn't make sense logically
[22:57:16] <quartz> strajder: It's for practice. I have the answer but I don't want to look at it. I want to learn it
[22:58:23] <fizzie> bparker: https://0x0.st/-dZB.txt is how it behaves for me. With GCC and Clang both.
[22:58:58] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:59:08] *** Joins: Raguile (~Raguile@user/raguile)
[22:59:43] <fizzie> (FWIW on OS X LeakSanitizer apparently is not on by default.)
[23:00:52] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[23:01:51] <strajder> quartz: about the line 25, that will assign the value of char at copy[i] (as a number) as an address of pointer t, and likely cause a segfault
[23:02:01] <strajder> also compiler will complain
[23:02:18] <fizzie> `copy[i]` is not a char.
[23:02:22] <rcf> char *t = copy[i] is perfectly sensible. 
[23:02:25] <bparker> https://stackoverflow.com/questions/54022889/leaksanitizer-not-working-under-gdb-in-ubuntu-18-04
[23:02:28] <bparker> this lists a way to do it
[23:02:35] <fizzie> strajder: It's `char **copy`, and `copy[i]` is a pointer.
[23:02:42] <rcf> What is *not* sensible is line 29. 
[23:03:03] <fizzie> Well, it'd be a "sensible" way to convert to a one-byte length-prefixed ("Pascal") string.
[23:03:05] <strajder> ah, sorry
[23:03:08] <strajder> didn't see the code
[23:03:14] <fizzie> Which, admittedly, isn't a particularly sensible thing to do in the first place.
[23:04:09] <quartz> So, if I understand correctly, line 25 will point to the first char pointer in copy. but at line 29, they change where t points to.
[23:04:17] <fizzie> (See how it doesn't copy the terminating 0, too, since it's got that prefix byte?)
[23:04:32] <fizzie> No, at line 29 they write a value to the first byte t points to.
[23:04:46] <fizzie> (And then on line 31 they write more to subsequent bytes.)
[23:04:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[23:05:16] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:05:35] <quartz> And that value is the length of the first string in argv
[23:05:43] <quartz> Err, in copy
[23:05:50] <fizzie> If your argv[i] points to the first element of a char[4] that contains the bytes {'f', 'o', 'o', 0}, then afterwards copy[i] will point to the first element of a char[4] that contains the bytes {3, 'f', 'o', 'o'}.
[23:06:16] <strajder> of course, now I get it; well, it could be used if there was a need for some program which exchanges binary data with some pascal program
[23:06:22] <fizzie> Er, {3, 'F', 'O', 'O'}, I mean.
[23:06:58] <fizzie> Is your task to implement `fixDuplicatedArgs` here or something? 
[23:07:05] <quartz> fizzie: yes
[23:08:06] <quartz> I'm assuming here they want you to eliminate the starting number, but use it to loop through the array. 
[23:08:07] <fizzie> Right. Well, presumably you'd do the reverse operation, since they need to be C strings again by the time of lines 61-63.
[23:08:12] <quartz> THan you have to add the NULL at the end
[23:08:37] <strajder> and remove the first char
[23:08:49] <rcf> fizzie: at that point I would scream at them for silently truncating within an oversized buffer but as an exercise I suppose it's fine 
[23:08:51] <quartz> strajder: Yes that too
[23:09:45] *** Joins: tiotags (~tiotags@user/tiotags)
[23:10:16] <fizzie> Yeah, we'll take on faith that none of the strings are more than CHAR_MAX bytes in length.
[23:10:32] *** Joins: vvlad (~vvlad@dslb-088-069-181-116.088.069.pools.vodafone-ip.de)
[23:11:02] <strajder> in production code, there would have to be a number of checks
[23:11:18] <quartz> Wow this was tricky for a beginner.
[23:12:03] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:13:01] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:13:06] *** Quits: kuber (~kuber@97-113-79-225.tukw.qwest.net) (Quit: leaving)
[23:13:09] <floatcomplex> quartz: you seem to be going out of your way to find corners of the language that trip up beginners and experienced people alike
[23:13:33] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:14:30] <quartz> floatcomplex: So you're saying you had trouble understanding the code :P
[23:14:37] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[23:14:51] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[23:16:12] <floatcomplex> oh i didnt even look at code yet, just reading the scrollback
[23:16:38] <quartz> Oh. Well these are good exercises for learning.
[23:16:46] <floatcomplex> i cant tell if you're just a really good language spec fuzzer or just trying to do normal shit in weird ways
[23:17:13] <quartz> Neither
[23:18:24] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:18:29] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[23:19:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:19:43] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:19:57] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:21:25] *** Quits: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it) (Quit: Konversation terminated!)
[23:21:51] *** Joins: serbest (~serbest@user/serbest)
[23:23:08] *** Joins: tinyweasel_ (~weasel@gateway/tor-sasl/tinyweasel)
[23:23:40] *** tinyweasel_ is now known as tinyweasel
[23:24:13] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[23:24:33] <twkm> learning by guessing, it seems.
[23:25:52] <quartz> twkm: How so? 
[23:26:08] *** Quits: rgrinberg (~textual@201.182.226.118) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:27:21] <quartz> BRB
[23:28:53] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[23:34:00] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[23:36:15] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[23:36:18] *** Quits: kurfen (~kurfen@37.120.204.67) (Quit: WeeChat 2.3)
[23:36:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:37:55] *** Joins: Oxfuxxx (~oxfuxxx@5.253.207.196)
[23:38:23] *** Quits: magla (~gelignite@55d45526.access.ecotel.net) (Quit: Stay safe!)
[23:38:26] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:38:44] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:39:01] *** Joins: teepee_ (~teepee@openscad/teepee)
[23:41:09] *** Quits: serbest (~serbest@user/serbest) (Quit: Leaving)
[23:42:50] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[23:42:57] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 276 seconds)
[23:42:58] *** teepee_ is now known as teepee
[23:43:47] *** ski_ is now known as ski
[23:47:03] *** Joins: Laurenceb (~Laurenceb@62.207.208.46.dyn.plus.net)
[23:51:42] <Laurenceb> hi
[23:51:44] <Laurenceb> https://gist.github.com/kishikawakatsumi/2217051
[23:51:50] <Laurenceb> why the dlsym? 
[23:51:58] <Laurenceb> whats up with &puts   ?
[23:54:55] <floatcomplex> Laurenceb: this is not a place of honor
[23:55:07] <floatcomplex> nothing valuable is buried here
[23:55:15] <Laurenceb> cryptic
[23:55:33] <omegatron> what exactly do want to know?  do you know what dlopen() and dlysm() do ?
[23:55:44] *** Joins: de-facto_ (~de-facto@user/de-facto)
[23:55:46] <floatcomplex> this code will only work under very specific circumstances
[23:55:46] <Laurenceb> no, I want to know why they are used there
[23:55:49] <floatcomplex> do not do this
[23:55:56] *** Joins: wnbeser (~wnbeser@91-154-216-7.elisa-laajakaista.fi)
[23:56:04] <omegatron> man 3 dlopen     and  man 3 dlsym    would tell you
[23:56:04] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:56:17] <Laurenceb> why not &puts  tho?
[23:56:20] *** Quits: malloy (~jimery@116.30.223.211) (Ping timeout: 250 seconds)
[23:56:41] <floatcomplex> where
[23:56:45] <omegatron> ask the author ..
[23:57:11] <Laurenceb> av_start_int(alist, &puts, &ret);
[23:57:12] <floatcomplex> this whole thing assumes so much
[23:57:22] <omegatron> floatcomplex:  he wants to know, why the author did not just do   fp = &puts ;    instead of using using dlopen() and dlsym()
[23:57:29] <floatcomplex> oh
[23:57:40] *** Joins: malloy (~jimery@116.30.223.211)
[23:57:40] <floatcomplex> because they're showing off their use of those functions
[23:57:43] <floatcomplex> that's the demo
[23:57:53] <floatcomplex> it's not something you would ever do
[23:57:57] <Laurenceb> heh ok cool
[23:58:13] <omegatron> why?
[23:58:28] <omegatron> did you read the title?   "Reflection C function call by ffcall "
[23:58:35] <Laurenceb> I was just looking for guidance on avcall and was confused by that
[23:59:16] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:59:32] <omegatron> https://www.gnu.org/software/libffcall/   there you go for guidance
[23:59:33] <candide> Title of omegatron's link: libffcall - GNU Project - Free Software Foundation
[23:59:51] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[23:59:53] <floatcomplex> idk why you would need avcall if you were not doing goofy dlsym stuff. so i guess it makes sense for that to be part of the demo
