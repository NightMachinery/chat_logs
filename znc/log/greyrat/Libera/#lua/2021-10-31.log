[00:28:24] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:b037:9ee3:7136:164b)
[00:31:15] *** Quits: Rena (~rena@dhcp-108-168-18-202.cable.user.start.ca) (Quit: $WITTY_QUIT_MESSAGE)
[00:33:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:35:57] *** Joins: Rena (~rena@dhcp-108-168-18-202.cable.user.start.ca)
[00:52:57] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[01:29:08] *** Joins: mgocobachi (~m@ancrae.com)
[01:40:17] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:44:10] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:14:24] *** Quits: Python1320 (Python1320@tunnel46751-pt.tunnel.tserv24.sto1.ipv6.he.net) (Quit: quit)
[02:18:03] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[02:19:25] *** hors is now known as pony
[02:43:04] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:377d:5cce:6c85:1730) (Quit: ZNC 1.8.2 - https://znc.in)
[02:43:17] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:c9c9:9450:c028:8dd0)
[02:47:29] *** Joins: pizdets (~pizdets@183.182.115.247)
[02:58:42] *** Joins: rgrinberg (~textual@190.113.111.74)
[03:17:40] *** Joins: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[03:29:54] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[03:30:25] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:33:46] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[03:54:11] *** Quits: fcr (~fran@r167-60-67-212.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[04:03:31] *** Joins: fcr (~fran@r186-48-136-114.dialup.adsl.anteldata.net.uy)
[04:07:06] *** Quits: avih (~quassel@23.94.231.119) (Remote host closed the connection)
[04:07:22] *** Joins: avih (~quassel@23.94.231.119)
[04:12:50] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[04:20:18] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:49:38] *** Quits: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca) (Ping timeout: 260 seconds)
[04:52:32] *** Quits: avih (~quassel@23.94.231.119) (Remote host closed the connection)
[04:52:52] *** Joins: avih (~quassel@23.94.231.119)
[04:52:54] *** Quits: avih (~quassel@23.94.231.119) (Remote host closed the connection)
[04:53:08] *** Joins: avih (~quassel@23.94.231.119)
[04:56:42] *** Quits: avih (~quassel@23.94.231.119) (Client Quit)
[04:59:27] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[05:15:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[05:22:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:27:40] *** Joins: rgrinberg (~textual@190.113.111.74)
[06:11:15] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:11:27] *** Joins: kiril (~kiril@85.91.153.163)
[06:22:35] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[06:23:05] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:46:24] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:53:48] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[06:57:52] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:59:04] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Quit: Client closed)
[07:00:24] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[08:18:37] *** Joins: rgrinberg (~textual@190.113.111.74)
[08:19:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Client Quit)
[08:27:08] *** Quits: ghoulguy (x@libera/staff/glguy) (Quit: Quit)
[08:28:17] *** Joins: glguy (x@libera/staff/glguy)
[08:28:43] *** glguy is now known as ghoulguy
[08:30:52] *** Joins: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be)
[08:34:26] *** Quits: ratchetfreak_ (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be) (Ping timeout: 246 seconds)
[08:38:16] *** Quits: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Remote host closed the connection)
[08:40:54] *** Quits: ratchetfreak (~ratchetfr@d8D8779D9.access.telenet.be) (Read error: Connection reset by peer)
[08:54:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[08:59:38] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[09:02:33] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[09:03:02] *** Joins: R2robot (~R2robot@user/r2robot)
[09:09:33] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:24:25] *** Quits: Overkill (~overkill9@69-165-200-34.cable.teksavvy.com) (Ping timeout: 260 seconds)
[10:16:32] *** Joins: Elw3 (~Elw3@dynamic-002-247-240-124.2.247.pool.telefonica.de)
[10:46:44] *** Joins: avih (~quassel@23.94.231.119)
[10:50:18] *** Quits: avih (~quassel@23.94.231.119) (Client Quit)
[11:24:58] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[11:31:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:35:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:37:41] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-04c6-b900-517e-51ae-90aa-02c8.dyn.netcomnetz.de)
[11:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:40] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[11:45:51] <sudoforge> is it possible to get the string representation of a function and its arguments?
[11:47:58] <RhodiumToad> not really, but you can get the bytecode dump
[11:48:23] <RhodiumToad> the original source text is not normally stored anywhere and the bytecode isn't easily deparsed
[11:49:10] <RhodiumToad> you can get the argument names if the function isn't stripped of its debug info
[12:06:12] <sudoforge> hmm
[12:06:27] <sudoforge> well, to be super clear, i'm trying to be tricky with my nvim config
[12:07:57] <sudoforge> it has some void funcs such as `vim.cmd(str)`. i'm trying to create a drop-in for an upcoming api with a function like `function foo(a, b, c, func, d)`
[12:08:36] <sudoforge> i'd then like to concat `func` into a string (that will load and execute it)
[12:08:52] <sudoforge> but for some reason, string.dump(func) is erroring because func is somehow a string
[12:10:09] <RhodiumToad> I don't understand what you mean
[12:11:14] <RhodiumToad> specifically "concat `func` into a string" -- what do you mean by that?
[12:11:41] <sudoforge> http://ix.io/3DrN
[12:11:57] <sudoforge> the `action` parameter is the function
[12:13:00] <sudoforge> that is being invoked as vim.api.nvim_define_autocmd("BufLeave", "*", vim.cmd("silent! wall"))
[12:13:58] <RhodiumToad> well that can't work, because vim.cmd there is being invoked when you call nvim_define_autocmd, not later
[12:14:24] <sudoforge> that's what i figured
[12:14:41] <sudoforge> i'm new to lua; is there no way to define a "callback"?
[12:14:49] <RhodiumToad> sure
[12:15:32] <RhodiumToad> function() vim.cmd("whatever") end   returns a function value that will execute vim.cmd("whatever") when you call it
[12:16:00] <sudoforge> hmm
[12:16:06] <RhodiumToad> however, I don't know how nvim handles such things
[12:18:27] * RhodiumToad doesn't use any vim-derivatives
[12:24:15] <sudoforge> okay, so that works, but string.dump() is passing some jarbled representation of the fn. is there a way to make this "safe" for strings?
[12:28:33] *** Quits: Elw3 (~Elw3@dynamic-002-247-240-124.2.247.pool.telefonica.de) (Quit: Leaving)
[12:30:10] <sudoforge> (it causes an error due to the glyphs that are sent over)
[12:30:30] <RhodiumToad> string.dump gives you the bytecode, it's not useful for much
[12:30:57] <RhodiumToad> in theory you can load it back with load(), but in practice most environments forbid that since it can crash the interpreter
[12:33:13] <sudoforge> well, that's what i'm attempting to do -- `table.insert(autocmd, "lua load(" .. string.dump(action) .. ")()")`
[12:33:39] <sudoforge> it would work, however nvim errors when loading the config due to the bytecode
[12:34:10] <RhodiumToad> does nvim allow loading bytecode?
[12:36:11] <sudoforge> i'm going to go out on a limb and say no, since the error occurs at config read time
[12:36:56] <RhodiumToad> doesn't follow, since you're not quoting the string or anything
[12:37:55] <sudoforge> when quoting it, i get "unfinished string near '<eof>'"
[12:38:24] <sudoforge> it's a lua load error, actually -- nothing to do with neovim
[12:41:14] <RhodiumToad> yes, because you tried to execute garbage lua syntax
[12:42:00] <RhodiumToad> string.dump returns a string of bytes, not a syntactically acceptable string literal
[12:50:41] <sudoforge> it seems to be erroring out before getting to the right hand side of the concatenation
[12:51:25] <RhodiumToad> what error?
[12:52:12] <RhodiumToad> and "getting to the right hand side" at what stage? when executing the table.insert, or trying to pass that to nvim later?
[12:52:25] <sudoforge> unfinished string. i may have a workaround with string.format, sec...
[12:53:08] <sudoforge> nope, that didn't work.
[12:53:21] <RhodiumToad> what didn't?
[12:53:22] <sudoforge> RhodiumToad: when load() is invoked
[12:53:28] <sudoforge> that's when the error occurs
[12:53:45] <sudoforge> and what didn't work was wrapping string.dump with string.format
[12:53:56] <RhodiumToad> with what args?
[12:54:40] <sudoforge> string.format("%q", string.dump(action))
[12:55:23] <sudoforge> i get an "error executing lua: attempt to call a nil value"
[12:56:07] <RhodiumToad> what lua version is this?
[12:56:23] <sudoforge> 5.4.3
[12:56:57] <RhodiumToad> do you know what load() returned before you tried to call it?
[12:57:04] <RhodiumToad> e.g. print(load(...))
[12:59:12] <sudoforge> looks like the bytecode
[13:00:04] <RhodiumToad> result of load is either a function, or nil,"error message"
[13:01:16] <sudoforge> nil [string ""..."]:1: unexpected symbol near '"^[LJ^A'
[13:02:07] <sudoforge> so, the error i got earlier, "... attempt to call a nil value" is accurately explaining the issue
[13:02:17] <RhodiumToad> ok, so it's not allowing bytecode input
[13:02:24] <sudoforge> yep, looks like
[13:03:59] <sudoforge> ah well. thanks for your patience; i'll just pass in 'lua fn(foo)' as the argument
[13:04:32] <sudoforge> just a temporary workaround to reduce the refactoring i'll have to do when the upstream API changes
[13:16:31] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[13:22:49] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[13:23:27] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Client Quit)
[13:23:45] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[13:40:17] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 264 seconds)
[13:56:50] *** Joins: netlynx (~jan@94-226-69-15.access.telenet.be)
[14:43:51] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-04c6-b900-517e-51ae-90aa-02c8.dyn.netcomnetz.de) (Ping timeout: 245 seconds)
[14:50:29] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[14:52:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[14:59:11] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:16:13] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[15:19:11] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-04c6-b900-6968-f6be-0a8b-d7d9.dyn.netcomnetz.de)
[15:50:26] *** Joins: avih (~quassel@23.94.231.119)
[15:54:00] *** Quits: avih (~quassel@23.94.231.119) (Client Quit)
[15:59:50] *** Quits: fcr (~fran@r186-48-136-114.dialup.adsl.anteldata.net.uy) (Ping timeout: 260 seconds)
[16:05:41] *** Joins: fcr (~fran@r167-60-30-163.dialup.adsl.anteldata.net.uy)
[16:42:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[16:46:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:46:57] *** Quits: tuvok (tuvok@Photography.tuvok.eu) (Read error: Connection reset by peer)
[16:47:52] *** Joins: tuvok (tuvok@Photography.tuvok.eu)
[16:49:16] *** Joins: Yorlik_ (~Yorlik___@ip6-2a03-7500-04c6-b900-a59f-b526-17fd-a1bc.dyn.netcomnetz.de)
[16:53:47] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-04c6-b900-6968-f6be-0a8b-d7d9.dyn.netcomnetz.de) (Ping timeout: 268 seconds)
[16:59:17] *** Yorlik_ is now known as Yorlik
[17:06:12] *** Joins: Yorlik_ (~Yorlik___@ip6-2a03-7500-04c6-b900-dc01-64ea-b98e-e3f2.dyn.netcomnetz.de)
[17:06:35] *** Joins: Yorlik__ (~Yorlik___@ip6-2a03-7500-04c6-b900-0d5e-0286-bde8-635b.dyn.netcomnetz.de)
[17:09:46] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-04c6-b900-a59f-b526-17fd-a1bc.dyn.netcomnetz.de) (Ping timeout: 260 seconds)
[17:11:11] *** Quits: Yorlik_ (~Yorlik___@ip6-2a03-7500-04c6-b900-dc01-64ea-b98e-e3f2.dyn.netcomnetz.de) (Ping timeout: 264 seconds)
[17:11:40] *** Joins: Yorlik_ (~Yorlik___@ip6-2a03-7500-04c6-b900-b43a-b9c3-1e7f-826f.dyn.netcomnetz.de)
[17:11:47] *** Quits: Yorlik__ (~Yorlik___@ip6-2a03-7500-04c6-b900-0d5e-0286-bde8-635b.dyn.netcomnetz.de) (Ping timeout: 264 seconds)
[17:15:16] *** Joins: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be)
[17:33:35] *** Joins: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[17:34:00] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[17:37:22] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-19ae-24e5-32c1-d42c.res6.spectrum.com)
[17:39:25] *** Joins: ratchetfreak_ (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be)
[17:41:10] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[18:11:22] *** Quits: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be) (Ping timeout: 260 seconds)
[18:25:10] *** Quits: magla (~gelignite@55d47dc5.access.ecotel.net) (Quit: Stay safe!)
[18:38:10] *** Joins: Elw3 (~Elw3@x59cc9b0a.dyn.telefonica.de)
[18:54:12] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:56:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:6575:10df:b6d2:a414)
[18:56:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:6575:10df:b6d2:a414) (Changing host)
[18:56:13] *** Joins: skapata (~Skapata@user/skapata)
[19:04:04] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[19:06:25] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[19:23:03] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[19:25:06] *** Quits: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca) (Ping timeout: 260 seconds)
[19:45:08] *** Joins: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be)
[19:47:36] *** Quits: dreamer (~dreamer@user/dreamer) (Ping timeout: 245 seconds)
[19:50:16] *** Joins: angryguy (~Elw3@dynamic-002-247-242-033.2.247.pool.telefonica.de)
[19:52:38] *** Quits: Elw3 (~Elw3@x59cc9b0a.dyn.telefonica.de) (Ping timeout: 260 seconds)
[20:09:51] *** Joins: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[20:29:43] *** Quits: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca) (Ping timeout: 260 seconds)
[20:35:34] *** Joins: dreamer (~dreamer@user/dreamer)
[20:46:24] *** Joins: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca)
[20:48:25] <tumn> sudoforge: just a tip, whenever something returns either a value or nil followed by an error message, it means it's designed to be easily wrapped in assert(), which throws an error using the second value as the message if the first value is nil or false
[20:48:55] <tumn> e.g. assert(load(...))()
[20:49:06] *** Quits: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be) (Ping timeout: 260 seconds)
[21:18:18] *** Joins: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk)
[21:18:50] *** Quits: Yorlik_ (~Yorlik___@ip6-2a03-7500-04c6-b900-b43a-b9c3-1e7f-826f.dyn.netcomnetz.de) (Ping timeout: 246 seconds)
[21:33:01] <sudoforge> tumn: useful tip, but i don't think that's going to be useful in my particular situation
[21:39:00] <tumn> sudoforge: if you're trying to store it in a string without running into encoding issues, you can use escape codes for the bytecode string
[21:39:05] <tumn> like this:
[21:39:28] <tumn> `local bytecode = ""; for c in string.dump(action):gmatch(".") do bytecode = bytecode .. "\\" .. c:byte() end; table.insert(autocmd, "lua load(\"" .. bytecode .. "\")()")`
[21:40:31] <tumn> the string will look something like: `lua load("\27\76\117\97\81\0\1\4\8\4\8\0\7\0\0\0\0\0\0\0\")()` (but much longer)
[21:43:08] <tumn> just be sure load() isn't the 5.1+ load, not sure how vim's lua works, but you might be looking for loadstring(...) instead
[21:53:51] *** Quits: hs0ucy (~hs0ucy@modemcable162.76-21-96.mc.videotron.ca) (Ping timeout: 245 seconds)
[22:02:55] <sudoforge> tumn: your example code worked flawlessly. great idea, and thank you ,3
[22:02:57] <sudoforge> <3*
[22:03:12] <tumn> \o/
[22:03:18] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi)
[22:03:18] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi) (Client Quit)
[22:03:24] <sudoforge> (/'o')/
[22:04:26] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi)
[22:07:43] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:08:21] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:09:17] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e844e-131.dhcp.inet.fi) (Client Quit)
[22:15:03] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[22:15:30] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:52:35] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:53:42] *** Quits: ano (~ano@user/ano) (Quit: ano)
[22:54:10] *** Joins: ano (~ano@user/ano)
[22:59:15] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-19ae-24e5-32c1-d42c.res6.spectrum.com) (Read error: Connection reset by peer)
[23:20:00] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[23:21:03] *** Quits: AndroidToad (~AndroidTo@82-68-208-20.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[23:37:38] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:b037:9ee3:7136:164b) (Quit: Textual IRC Client: www.textualapp.com)
[23:48:09] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
