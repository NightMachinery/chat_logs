[00:00:40] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.2)
[00:19:30] *** robin_ is now known as robin
[00:28:20] <selwyn> https://countvajhula.com/2021/09/25/the-animated-guide-to-symex/
[00:50:39] *** Quits: raeda (~raeda@72.49.219.33) (Ping timeout: 260 seconds)
[00:52:54] *** Joins: raeda (~raeda@72.49.219.33)
[00:57:48] <hayley> Apparently the Facebook company changed name to Meta. beach should sue w.r.t Metamodular
[01:10:06] *** Quits: LoopMacro (~LoopMacro@c-24-22-157-127.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[01:14:14] <selwyn> https://www.youtube.com/watch?v=KbbZc2pab9k the wire predicts the future again
[01:14:15] -ixelp- The Wire - Stringer Bell changes the name of the product - YouTube
[01:24:02] <selwyn> fuck facebook
[01:24:15] <selwyn> just putting that out there
[01:30:17] <sham1> Fuck Meta, I think you mean
[01:35:24] <semz> what is it with tech gigacorps squatting generic words recently? google did the same thing not too long ago
[01:37:47] <sham1> Do you mean Alphabet or something else
[01:40:32] <gilberth> Well it also surprises me that Tesla could be called Tesla, as this is a surname.
[01:42:49] <White_Flame> trademarks exist in a per-industry/context registration.  You could have other Tesla incorporations that make food or whatever, without collision
[01:42:55] *** Quits: easye (~user@oxi.slack.net) (Read error: Connection reset by peer)
[01:43:13] <White_Flame> your literal company name generally only need not collide with the chamber of commerce registration for your own state
[01:45:05] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 264 seconds)
[01:48:50] <pjb> White_Flame: more or less. Notably with technological company, they tend to be able to apply computing to all the domains.
[01:49:45] <pjb> White_Flame: for example, Apple, Inc. also does music, tv, photo, phones, cars, books, newspapers, games, etc, etc, etc.
[01:50:37] <semz> I was thinking of Alphabet, yes.
[01:53:00] <|3b|> well, to some extent applying to everything is valid for huge companies, since normal people could reasonably be expected to be confused if i started an "apple restaurant" or "general electric cars" even if the main user of that name wasn't in that business
[01:54:25] <|3b|> though trademarks have lost a lot of their usefulness since they started naming things directly rather than describing who made a thing
[01:56:15] <|3b|> and also since they change ownership frequently enough that even "who made the thing" isn't that meaningful
[01:58:11] <pjb> And Tesla's opening Tesla Restaurants, to spend time while reloading the batteries…
[01:58:41] <pjb> https://techcrunch.com/2021/06/01/tesla-files-trademark-hinting-at-elon-musks-restaurant-concept-plans/
[01:58:42] -ixelp- Tesla files trademark, hinting at Elon Musk’s restaurant concept plans – TechCrunch
[02:13:15] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:16:35] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[02:51:55] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[02:53:45] *** Joins: raeda (~raeda@72.49.219.33)
[02:56:56] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[02:59:30] *** Joins: raeda (~raeda@72.49.219.33)
[03:01:26] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[03:04:48] *** Joins: raeda (~raeda@72.49.219.33)
[03:09:59] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:ece1:b35e:c9b0:1b9e) (Ping timeout: 264 seconds)
[03:10:26] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[03:11:55] *** Joins: raeda (~raeda@72.49.219.33)
[03:14:13] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[03:15:01] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[03:15:07] *** Quits: random-nick (~random-ni@87.116.183.63) (Ping timeout: 258 seconds)
[03:15:11] <hayley> tfw the "security" lecturer uses RSA for signing and RSA/ECB for encryption
[03:16:50] *** Joins: raeda (~raeda@72.49.219.33)
[03:17:33] <Qwnavery> dongs in a security
[03:17:38] <Alfr> hayley, does he directly sign the input?
[03:17:42] <hayley> And now DES for keys.
[03:17:48] <hayley> Alfr: Via SHA256.
[03:18:00] <Alfr> Pitty.
[03:18:12] <Alfr> *pity
[03:18:20] <Qwnavery> at least TripleDES?
[03:18:28] <hayley> Nope, just single.
[03:18:46] <Qwnavery> o_O
[03:20:03] * hayley tries to be nice while telling people to basically walk out of class, because this is garbage.
[03:20:23] <hayley> "I am not going to bother myself with this code, and I highly recommend that fellow students do the same thing, because these are very poor choices of cryptographic algorithms."
[03:20:49] <hayley> It also helps that he literally copied the code off tutorialspoint.com and didn't even change the string that says where he got it from.
[03:22:04] <Qwnavery> Just point them towards the Whonix wiki or something. They'll learn more in 30 minutes that they would in whatever timeframe that lecture is in.
[03:25:56] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[03:26:17] <hayley> Apparently I made everything go quiet. Guess I achieved something today.
[03:28:10] *** Joins: raeda (~raeda@72.49.219.33)
[03:28:19] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[03:29:50] *** Joins: raeda (~raeda@72.49.219.33)
[03:33:56] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[03:35:20] *** Joins: raeda (~raeda@72.49.219.33)
[03:43:35] *** Quits: vats (~vats@103.158.91.36) (Ping timeout: 264 seconds)
[03:44:22] *** Joins: vats (~vats@103.158.91.36)
[03:45:55] <hayley> And another program they provided didn't work because it was written in Python 2 and not 3, and thus didn't have a separate bytes type. Oh, they plagarised that too.
[03:49:32] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[03:50:08] *** Joins: rogersm (~rogersm@90.166.177.48)
[03:53:44] <gilberth> To me a in C a symbol has a storage class and not an expression; and in that respect the C syntax is not very logical here. You declare symbols in a declarative matter. That is, when you say 'int *x;' it mean that if you take '*x' you get an 'int'. So 'const int *x', means you take '*x' and get a constant int, while 'int * const x' means you take a constant x you dereference yielding an 'int'. So it shouldn't be 'static int *x;', but
[03:54:05] <gilberth> * manner
[03:55:24] <GreaseMonkey> if you're actually doing stuff in python, you may want to use mypy (the usual static type checker) to iron out a lot of the warts
[03:55:37] <gilberth> That is, a storage class refers to the innermost of the expression, unlike a type qualifier, which just works like any other prefix operator.
[03:56:04] <GreaseMonkey> especially with the `--strict` flag
[03:56:46] <GreaseMonkey> e.g. mixups between `bytes` and `str` are typically caught by it
[03:59:51] <gilberth> I mean when you have 'static int *x', it's not that '*x' is in static storage, but 'x'.
[03:59:55] <gilberth> *sigh*
[04:00:09] <hayley> https://www.youtube.com/watch?v=falBpZLT1bs
[04:00:10] -ixelp- Willie The Pimp (Live) - YouTube
[04:00:12] <hayley> Can I get a refund on this course?
[04:00:47] <gilberth> I am afraid, that won't be possible.
[04:00:55] <hayley> ):
[04:01:25] <gilberth> This is ironic, isn't it? After all you pay for that, don't you?
[04:01:44] <hayley> Yes.
[04:02:40] <hayley> I feel insulted that I apparently didn't know enough crypto, when I had submitted a draft of the Netfarm paper, and the requirement is apparently to copy-paste code which is for the wrong programming language, and then uses the wrong possible algorithms.
[04:03:40] <gilberth> What is more ironic, is that during my education, they told us to never plagiarize, never, ever. It would have been the most sinful sin. When you borrow, say so and name your source.
[04:05:55] <hayley> Should I say that, from this point of view, what I'm seeing is that what I published is easier than copy-pasting bad code using bad encryption algorithms?
[04:06:11] <gilberth> And, what's funny, with help of computers, it happens on a regular basis that some politician loses his grade, because their thesis was just copy and paste without proper attribution.
[04:06:11] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[04:08:11] <hayley> OTOH I only barely discuss signing and key exchange - the only real crypto is hashing objects to name them.
[04:09:12] *** Joins: raeda (~raeda@72.49.219.33)
[04:09:19] *** Quits: raeda (~raeda@72.49.219.33) (Read error: Connection reset by peer)
[04:10:00] <gilberth> Anyhow, I contemplate to stick the storage class not at the declaration but at the entity declared. The following is legal too: 'void foo (register int x) { ... };'
[04:10:49] *** Joins: raeda (~raeda@72.49.219.33)
[04:12:03] <gilberth> hayley: Well, the sad part is, that there is plenty of information how to do things rights. E.g. for session management in web applications, "storing" passwords, etc.
[04:12:06] *** Joins: domovod (~domovod@176.196.122.197)
[04:12:28] <hayley> Yet I believe that, if the teachers provide any information, it should not be up to the students to fact check everything.
[04:14:41] <hayley> Apparently someone (unrelated) thinks that Rust invented being able to use { } inside a body to produce a new scope.
[04:15:20] *** Quits: raeda (~raeda@72.49.219.33) (Ping timeout: 260 seconds)
[04:15:30] <gilberth> Well, not everything. But in general you shouldn't trust your lecturer. You could even get a bad mark on an answer, you answered as the lecturer taught you, but is still false.
[04:16:24] <gilberth> hayley: Only JS hackers could believe that, because in JS { } doesn't produce a new scope. Very irritating.
[04:20:48] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:eba7:95bb:d099:a7d8)
[04:24:23] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 260 seconds)
[04:36:59] *** Joins: raeda (~raeda@72.49.219.33)
[04:51:18] <GreaseMonkey> give it 10 years and JS hackers will say that windows was coded in rust
[04:51:28] <GreaseMonkey> hackers? wrong term sorry, i meant kludgers
[05:09:04] *** Joins: LoopMacro (~LoopMacro@c-24-22-157-127.hsd1.wa.comcast.net)
[05:12:22] <Alfr> gilberth, what usually works in my experience is if you treat ' ' as left-associative for such type declarations.
[05:13:48] <Alfr> gilberth, or simply read them right to left, e.g. "int * const" would be "constant pointer to int".
[05:13:51] * Alfr shrugs.
[05:19:27] *** Quits: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-1046-static.midco.net) (Ping timeout: 260 seconds)
[05:31:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[05:47:23] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[05:55:36] <moon-child> is hoisting conditionals out of closures a known optimization?
[05:55:59] <moon-child> like, (defun f (c) (lambda () (if c x y))) --> (defun f (c) (if c (lambda () x) (lambda () y)))
[06:00:59] <hayley> I don't know if you can get away with it. What about (eq (f t) (f nil))
[06:01:12] <hayley> Granted, I dunno how EQ on functions is defined somehow.
[06:01:44] <hayley> "If name is a lambda expression, then a lexical closure is returned. In situations where a closure over the same set of bindings might be produced more than once, the various resulting closures might or might not be eq."
[06:02:30] <hayley> So you're good then.
[06:08:40] *** Joins: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com)
[06:13:12] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:13:37] <dave0> maw
[06:16:51] <hayley> Hey dave0
[06:17:39] <dave0> hi hayley 
[06:17:41] <dave0> how's it going?
[06:21:20] <hayley> It goes.
[06:26:00] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[06:33:11] *** Quits: vats (~vats@103.158.91.36) (Ping timeout: 260 seconds)
[06:33:57] *** Joins: vats (~vats@112.110.28.41)
[07:08:35] *** Quits: vats (~vats@112.110.28.41) (Ping timeout: 260 seconds)
[07:09:19] *** Joins: vats (~vats@103.158.91.36)
[07:19:23] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 260 seconds)
[07:20:03] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[07:32:28] *** Joins: semz (~none@user/semz)
[07:32:56] <gilberth> Alfr: Not exactly. It's really inside-out. It appears right to left because '*' is a prefix operator. It break with '[]' which is postfix. Consider e.g. int (* const a)[10] or int a[const][10]. While the latter is practically the same as the former. Or such beauty like "int (*a[const][10])(int)"
[07:36:32] <Alfr> gilberth, good point. :)
[07:37:12] <Alfr> Also glad that I can't recall when I last saw such ugliness.
[07:40:24] *** Quits: vats (~vats@103.158.91.36) (Read error: Connection reset by peer)
[07:43:02] *** Joins: vats (~vats@103.158.91.36)
[07:44:51] <gilberth> Alfr: Well, I give my C parser some attention again. I ponder how I ought to represent declarations in my AST, so I must consider such constructs.
[07:44:57] <moon-child> gilberth: if 'static int *x' means x points to a static int--that would be kind of useless.  And I think it's more important to know the storage class of a variable than to know its type, so it makes sense to put that first
[07:46:48] <gilberth> moon-child: Yes, but it breaks the general rule, which was my point. And I don't believe it really was given much thought. Likewise the typedef accident.
[07:50:42] <gilberth> Anyhow, because this is inside-out, I can't stand when people write 'char* s'. The '*' applies to 's' not to 'char'.
[08:12:25] <hayley> https://www.youtube.com/watch?v=lzVdU3Qt8wk
[08:12:26] -ixelp- The Machman (Remastered) - YouTube
[08:18:00] *** Quits: vats (~vats@103.158.91.36) (Ping timeout: 260 seconds)
[08:27:59] <gilberth> Ok. This backtracking works quite well. Usually the path it backtracks is just one token. It however explodes on a real parsing error, where I would mindlessly try to take a typedef-name for an identifier or vice versa. Breadth-first search would solve that, but I rather want to avoid that. So, when I am cheap I just back-track a certain amount. Or restrict it to not backtrack outside sth. delimited by e.g. ";" or parens. We'll see.
[08:28:28] *** Joins: domovod (~domovod@176.196.122.197)
[08:29:34] <gilberth> And I want so control to apply heuristics. When I see { a*b; } and both 'a' and 'b' are undefined, I want to take this as 'b' defined as a pointer to 'a'. Not as 'a times b'.
[08:31:32] <gilberth> clang has even more heuristics. It takes 'innt *a' as a declaration and 'foo *a' as an expression.
[08:32:05] <gilberth> OTOH it would make sense to take "a(b);" as a function call and not as a declaration.
[08:32:25] *** Joins: vats (~vats@103.158.91.36)
[08:33:17] <dave0> gilberth: i did not know that could be valid until you said it!
[08:35:00] <gilberth> "int (a);" never occurred to you?
[08:37:22] <dave0> gilberth: nope.. i only found out many years later that you could put brackets like that
[08:38:24] <gilberth> However, I am making progress. I was pondering this for ages, at times it needs a step back to find a practical solution.
[08:38:32] <dave0> i think the only time i did that, but didn't know you could do it in general, was a function pointer
[08:39:41] <gilberth> dave0: Brackets? Like "int [a]"? That won't work.
[08:39:55] <dave0> oh U.K. spelling
[08:40:17] <dave0> () brackets [] square brackets {} curly brackets
[08:40:30] <gilberth> ok ;)
[08:40:35] <hayley> https://www.urbandictionary.com/define.php?term=Oracle
[08:40:36] -ixelp- Urban Dictionary: Oracle
[08:40:48] <dave0> american () parenthesis [] brackets {} braces
[08:41:02] <dave0> i think
[08:41:05] <dave0> i like U.K.
[08:41:44] <gilberth> dave0: So you better learn LISB instead of LISP then.
[08:42:32] <dave0> haha
[08:42:40] <gilberth> dave0: Yep, that are the terms I happen to use.
[08:42:50] <dave0> lots of irritating brackets
[08:42:58] <dave0> wait
[08:43:13] <gilberth> That would m-expressions. :)
[08:44:33] <hayley> Remember when I went to a university where the database lecturers tried to sell us ORACLE for some reason?
[08:44:35] <gilberth> superfluous, dave0, superfluous, it says.
[08:47:02] <dave0> gilberth: yes!
[08:47:14] <dave0> superfluous brackets
[08:56:18] *** Quits: gko (~user@user/gko) (Remote host closed the connection)
[08:56:45] *** Joins: gko (~user@user/gko)
[08:57:59] *** Quits: pl (sid98063@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[08:59:54] *** Joins: pl (sid98063@id-98063.helmsley.irccloud.com)
[09:05:31] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 245 seconds)
[09:05:56] *** Joins: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com)
[09:22:39] *** Joins: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1046-static.midco.net)
[09:37:19] <selwyn> now i am in the rabbit hole
[09:37:24] <selwyn> tinkering with emacs config..
[09:38:54] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[09:39:10] <selwyn> sigh
[09:42:54] <gilberth> Have fun!
[09:43:06] <selwyn> issue is that i have never really understood emacs
[09:43:19] <selwyn> but i am confident of getting great productivity gains when this is done
[09:43:57] <gilberth> It sure beats ed(1).
[09:44:23] <selwyn> trying to configure very tight integration between my citation manager and emacs
[09:50:24] <moon-child> gilberth: I am told that ed is surprisingly powerful
[09:50:53] <moon-child> aaron hsu said: 'I used to use ed, but I wanted to experiment with using a really barebones, uncapable environment; so I switched to windows and notepad'
[09:51:43] <selwyn> notepad is for real h4x0rs
[09:51:47] <selwyn> not going that far
[09:53:13] <moon-child> dave0: I refer to a ( as parenthesis, [ as a square bracket, and { as a curly brace.  What does that say about me? :P
[09:53:39] <moon-child> s/a( [cs])/ \1/g
[09:54:04] <moon-child> s/ \\/\\/
[09:57:58] <Qwnavery> dave0: yup, ________ brackets is the way.
[10:01:46] *** Quits: vats (~vats@103.158.91.36) (Ping timeout: 245 seconds)
[10:02:50] <selwyn> now i have regex search of my entire citation manager from with emacs, with automatic insertion of latex citations
[10:03:03] <selwyn> no need to deal with bibtex files anymore 
[10:05:29] <selwyn> finding it hard to understand why the oculus brand was killed off
[10:05:55] <selwyn> it seems like one of the less toxic parts (so far) of the whole enterprise
[10:12:30] <hayley> https://www.youtube.com/watch?v=WasuhTXHZvw
[10:12:31] -ixelp- Genesis - Firth Of Fifth - In Concert 1974 2DVD Set - YouTube
[10:13:17] <selwyn> hayley: unfortunately it is not as fast as your regex engine
[10:13:22] <selwyn> perhaps i should rewrite it in rust
[10:13:59] <gilberth> moon-child: It is. And perhaps the best you could do with a teletype. And !, !!, ^foo^bar are still kind of useful on the shell. /me grew up without readline.
[10:14:27] * hayley hides behind gilberth trying not to giggle
[10:14:52] <dave0> moon-child: dual citizen of UK and US :-)
[10:15:10] * gilberth is not tall enough as that hayley could hide fully.
[10:16:05] <hayley> One thing not to giggle about: I have three cases w.r.t reusing code and vectors. First is the worst case, where we need to check the (locked) cache and allocate a vector, then we might insert a L-T-V for the function but still allocate a vector (due to the compiler macro), and best is if the user supplies a "code" object with everything pre-allocated.
[10:16:57] <gilberth> I believe it would also help if elisp were not that damn slow.
[10:18:00] <selwyn> https://www.youtube.com/watch?v=79KzZ0YqLvo&t=10s
[10:18:01] -ixelp- [ORIGINAL] The Rent is Too Damn High! - YouTube
[10:18:16] <gilberth> I used Hemlock for a while in the late 90s. Indenting a large function, and I am prone to write large functions, could take seconds with Emacs, but was instantly with Hemlock.
[10:21:11] <gilberth> I made it portable and that version found its way into CCL. Lispworks as being CMUCL really, also uses it. I also implemented a proper undo. I have no idea if that made it to CCL.
[10:22:25] <gilberth> A pity that I lost track. I planned a CLIM version and a TTY backend for CLIM to make it of more general use. But I had a company to found.
[10:22:30] <hayley> https://www.youtube.com/watch?v=GqPNX17l5Lw
[10:22:31] -ixelp- I Passive Aggressively Clean The REST Of The Craigslist PC... - YouTube
[10:23:51] <gilberth> Writing Hemlock commands is no fun though, as its buffer is line oriented. And it would not load the whole file, if it's large, but load it on demand. The latter is something, we don't need anymore today.
[10:27:38] <gilberth> At that time I contemplated to port GNU Emacs^W^WXEmacs to CL, but decided it was not worth the effort.
[10:29:01] <hayley> https://codegolf.stackexchange.com/questions/215216/high-throughput-fizz-buzz/236630#236630
[10:29:14] <selwyn> lol
[10:33:04] <pl> shka: I seem to recall your cl-ds (or related) work might have involved some statistics code, right? 
[10:33:21] <pl> Wondering how it stacks against lisp-stat 
[10:37:09] <shka> nowhere near as good as lisp-stat
[10:38:28] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[10:39:03] * selwyn thinks about ggplot2
[10:39:47] <shka> pl: the only reason i even bothered with that is because i needed to have statistical aggregations grouped by various criteria, and that was a simple way to do it
[10:39:48] <selwyn> it is all very well implementing the grammar of graphics in lisp, but how to make it 'lispy'
[10:40:16] <shka> but instead, you may use to-vector and call lisp-stat in :after
[10:40:25] <shka> which i would recommend to do instead 
[10:40:28] <selwyn> perhaps a tight integration of the grammar of graphics with the clim graphics api would yield interesting interactive experiences
[10:40:32] <selwyn> but this is a bit beyond me
[10:40:41] <pl> shka: ah, I was wondrring more at the idea of using it as base for replacement 
[10:41:14] <shka> oh, well, i would gladly help with that, but i don't have enough of time to do it on my own
[10:41:54] <shka> so if you want to drive this, you have my keyboard!
[10:46:49] <shka> pl: sorry to disappoint though
[10:47:26] <pl> Nah, was a shot in the dark 
[10:47:48] <pl> Something to keep for later ;-)
[10:48:06] <shka> let me know if you want to do that
[10:54:28] <shka> pl: oh, also i wanted hodges-lehmann estimator
[10:55:51] <shka> "Apple’s Siri was originally written in Lisp"
[10:55:56] <shka> really?
[10:57:07] <selwyn> source?
[10:57:19] <hayley> "In developing the system, I wanted to avoid the lisp curse, so selected the best existing libraries where possible, developed what didn’t exist, and documented them all in an attempt to make the learning curve a gentle slope."
[10:57:20] <hayley> lmao
[10:57:22] <shka> https://lisp-stat.dev/docs/overview/
[10:57:26] <hayley> cl-ds 1-0 lisp-stat
[10:57:57] <shka> selwyn: that's the source
[10:58:11] <selwyn> perhaps i should familiarise myself with this stats stuff if i am to do ggplot2 in cl
[10:58:15] <selwyn> it does come from r after all
[10:59:27] <shka> selwyn: heh, i would rather ask you to help with vellum-plot :D
[10:59:49] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[11:00:17] <selwyn> they print laws on vellum here
[11:00:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:00:59] <selwyn> trial-vr is higher on the priority list than ggplot2 rn anyway
[11:01:14] <selwyn> hoping to present it at els
[11:15:02] <shka> selwyn: i mean, look at the example ;-) https://github.com/sirherrbatka/vellum-plot
[11:15:03] -ixelp- GitHub - sirherrbatka/vellum-plot
[11:15:12] <selwyn> oh
[11:15:14] <selwyn> nice!
[11:15:26] <shka> it kinda is ggplot
[11:15:37] <selwyn> did you read up on the literature?
[11:15:49] <selwyn> e.g. the grammar of graphics book
[11:15:53] <shka> nope
[11:15:58] <shka> but i used it from R
[11:17:48] <shka> honestly, reading about grammar sounds kinda boring
[11:17:50] <shka> :P
[11:18:05] <selwyn> i have always been terrible at plotting
[11:18:34] <selwyn> it's the worst part of my numerical code, and it takes me ages to produce good plots
[11:18:43] <selwyn> feel i could benefit by studying this stuff seriously
[11:36:02] <gilberth> Hmm, I always was too lazy to really get LALR(1) parser generation.
[11:36:55] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:33] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:41:48] <Gnuxie> How come being lazy is admired if you're a genius and resented if you are "dumb" 
[11:42:23] <Gnuxie> Lazy people are equally real geniuses I should know 
[11:42:38] <gilberth> Heh, good question, I am too dumb to answer that.
[11:43:00] <hayley> Larry Wall once said that laziness, impatience and hubris are characteristics of a good programmer.
[11:44:36] <gilberth> Then, perhaps, I am a poor programmer. Maybe I still could grow vegetables?
[11:44:47] <sham1> I think that in that case it's more about being lazy about the correct things
[11:45:19] <selwyn> lately i am working my arse off
[11:45:28] <selwyn> mixed feelings about that
[11:46:25] <gilberth> Well, you could call me lazy from a normie perspective, but certainly not impatient.
[11:46:32] <selwyn> would probably choose lazy over grindset
[11:47:17] <selwyn> hayley: grindset lisp memes?
[11:47:19] <Gnuxie> Are grinders really happy 
[11:47:27] <hayley> selwyn: #lambdagrindset
[11:47:28] <selwyn> well, it appears not
[11:47:35] * hayley uploaded an image: (116KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/HJegPIsxWPqznwrrikwwIhwW/lambda-grindset.jpeg >
[11:47:43] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:47:47] <selwyn> oh right i forgot about that one lol
[11:48:02] <gilberth> What's a grinder? Someone how prints his code all day?
[11:48:18] <gilberth> * who
[11:48:52] <hayley> A grinder wastes their time being very productivist and "grinding" all day to make money.
[11:49:12] <selwyn> a 'sigma male grindset' is an aspirational lifestyle on social media that involves 'hustling' every waking hour
[11:49:17] <selwyn> and postponing any kind of fun
[11:49:49] <gilberth> Postpone until when? Death?
[11:50:07] <contrapunctus> Sounds depressing.
[11:50:11] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 264 seconds)
[11:50:41] <selwyn> gilberth: until they become millionaires
[11:50:54] <hayley> So, they showed us how to use DES in a cyber-security class. AMA
[11:50:59] <gilberth> selwyn: Which you don't do by grinding.
[11:53:03] <selwyn> clearly gilberth lacks the grindset
[11:53:06] <selwyn> many such cases
[11:53:28] <hayley> No, I think gilberth is doing the lambda grindset just fine.
[11:54:12] * gilberth shrugs
[12:07:53] <selwyn> https://www.youtube.com/watch?v=37V4ZjR2niw
[12:07:54] -ixelp- Marco Pierre White Sigma Male Grindset - YouTube
[12:21:26] <selwyn> https://www.youtube.com/watch?v=cqYXYAKLcGg
[12:21:26] -ixelp- UK 'spreadsheet error' keeping British fishing trawler detained in France, say sources | ITV News - YouTube
[12:21:38] <selwyn> someone has to make a compilation of uk tech errors
[12:21:45] <selwyn> spreadsheets seem to be particularly tricky
[12:22:59] <hayley> I think the fisher should be happy to be away from TERF island imo
[12:24:12] <selwyn> i suppose that is one of the perks of working at sea
[12:25:19] <selwyn> i am jealous
[12:25:42] <selwyn> perhaps i can be a digital nomad on an offshore north sea rig
[12:33:47] <Gnuxie> how is that gonna work, Asda don't deliver by helicopter 
[12:34:43] <selwyn> will subsist off of barnacles and jellyfish
[12:38:50] <selwyn> or perhaps a tasty starfish
[12:40:09] <Gnuxie> you will probably get invaded after 4 weeks and the press will say the rig is a communist paradise rack with drug related crime ready to terrorize Britain  
[12:40:25] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[12:40:40] <selwyn> i wonder what the sealand guy did to keep it running for so long
[12:41:16] <Gnuxie> be rich
[12:41:35] <selwyn> well, he would be rich
[12:41:41] <selwyn> he was the king of an entire country
[12:42:47] <hayley> https://www.youtube.com/watch?v=3v40Aw09Faw
[12:42:48] -ixelp- Sealand (Live from YOU ME & OMD) - YouTube
[12:57:40] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:48aa:3ccb:6396:5e21)
[12:58:45] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[13:15:54] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (Quit: WeeChat 3.2)
[13:21:25] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[13:22:48] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[13:54:32] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[13:54:35] *** Quits: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[14:07:06] *** Joins: random-nick (~random-ni@87.116.165.220)
[14:18:23] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 264 seconds)
[14:23:58] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[14:31:17] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:48aa:3ccb:6396:5e21) (Ping timeout: 246 seconds)
[14:31:50] *** Joins: kevingal (~quassel@80.233.40.156)
[14:56:29] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:05:18] <pjb> selwyn: he ran a server farm in Sealand.
[15:11:12] <edgar-rft> just put some server seed into earth and let it grow
[15:18:48] <gilberth> Hmm, I use the ancient lalr.lisp <https://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/lang/lisp/code/parsing/lalr/lalr.cl> which is kinda slow, I thought the more recent yacc.lisp would be faster. It is, but not much. lalr.lisp: 23s, yacc.lisp: 6s, bison: 0.06s, and Berkeley yacc: 0.005s!
[15:19:36] <selwyn> weird to see .cl instead of .lisp
[15:20:03] <gilberth> So, I wonder: (1) why is yacc so much faster. (2) what did they do to bison, which is a rip-off of Berkeley yacc and uses its code with little modification, to make it 10x slower?
[15:21:26] <gilberth> As there are paractically no comments in yacc, I can't possibly figure it out, why it only takes 5ms, where yacc.lisp takes 6000ms. Lisp isn't that slow, it must be the algorithm.
[15:22:15] <gilberth> And bison shares the very same code, also with no comments about how it works. And without attribution! You only notice when reading both.
[15:22:33] * edgar-rft just learned that his keyboard has a CL key (Caps Lock)
[15:23:02] <hayley> When in doubt, pull out a profiler?
[15:23:13] <gilberth> I could do the same and mindlessly translate Berkeley yacc. But that code is nasty, without comments, and using integers as pointers.
[15:23:27] <gilberth> hayley: Very funny, milady.
[15:23:32] <hayley> If you want more derivatives, there's "yacc is dead" for derivatives of CFGs or something.
[15:24:03] <hayley> https://arxiv.org/abs/1010.5023
[15:24:24] <hayley> https://github.com/sellout/YACC-is-dead
[15:24:24] -ixelp- GitHub - sellout/YACC-is-dead: YACC is dead for Common Lisp (based on http://arxiv.org/abs/1010.5023)
[15:24:35] <gilberth> hayley, I already made the data structures of lalar.lisp more efficient, but that won't change the O().
[15:26:47] <gilberth> And, milady, I actually like LALR(1) parsing. It's just both the CL code we have is poor. I trust lalr.lisp, it never let me down, I consider it bug free.
[15:30:12] <hayley> I guess I'll write one-more-cfg-nightmare too.
[15:30:32] <gilberth> EDGAR-RFT: YOU NEED THAT BECAUSE LISP SYMBOLS ARE IN UPPERCASE. AS LISP WAS INVENTED HACKERS WERE CHEAP ON CHARACTER CODES AND COULD ONLY EFFORT ONE CASE.
[15:31:13] <gilberth> hayley: Hey! I am all for it. But as you know, I don't really care for compilation speed.
[15:34:09] <edgar-rft> You mean that McCarthy et al were so poor that they couldn't afford lowercase letters?
[15:35:08] <contrapunctus> gilberth: is that why it only has parenthesis and Lispers still frown on [] {} <>? 😏️
[15:37:03] <gilberth> edgar-rft: Perhaps. They used punch cards. You can't cram punctuation, upper case, lower case and digits into 6 bits.
[15:37:59] <gilberth> contrapunctus: Imagine LISP would have used [, ], {, and }. We would have trigraphs in CL.
[15:39:21] <selwyn> https://kotaku.com/dune-s-timothee-chalamet-was-once-an-xbox-youtuber-1847946368?utm_campaign=Kotaku&utm_content=1635352432&utm_medium=SocialMarketing&utm_source=twitter
[15:39:21] -ixelp- Dune’s Timothée Chalamet Was Once An Xbox YouTuber
[15:39:23] <dave0> pfft 4 bit bcd all the way
[15:39:24] <selwyn> wtf
[15:40:08] <gilberth> dave0: BCD? Real hackers use octal.
[15:40:48] <dave0> hard call, which is worse
[15:41:50] <edgar-rft> probably ( ) originally represented punch card holes
[15:43:57] <gilberth> dave0: I don't know. As a CADR user, I still could not get my brain rewired from hexadecimal to octal. And it's a bit odd, too as the CADR is a 32-bit design, not some 6n bit design. Though pointers and fixnums are 24-bit.
[15:47:19] <gilberth> Anyhow, dinner time. A bit early or late, but I am on my way to apply for German citizienship. Some suggestions for a nice science documentary I could watch while eating?
[15:50:36] <selwyn> um
[15:50:59] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[15:51:10] <mfiano> wait how did i leave this channel. huh
[15:52:18] <selwyn> more intense than the average science documentary, but you might enjoy sabine's longer form videos
[15:52:21] <selwyn> https://www.youtube.com/watch?v=9qqEU1Q-gYE
[15:52:21] -ixelp- Particle Physicists Continue Empty Promises - YouTube
[15:52:24] <selwyn> for example
[15:52:50] <selwyn> a particular hobby of hers is dunking on particle physics, which i enjoy
[15:53:24] <selwyn> she is really legit
[15:56:11] *** Quits: Posterdati (~posterdat@host-95-233-159-95.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[15:56:21] <mfiano> Could an ERC expert offer some help to me please? I am trying it out and discovered what appears to be a big oversight if it is not possible to do what I want easily.
[15:57:20] <pjb> What do you want to do?
[15:58:16] <mfiano> PM'd :)
[15:58:26] <mfiano> I was already in the process of talking to you in there :)
[16:03:20] <pl> selwyn: kinda don't like videos so not sure if I want to open, is it that woman that tries to shut down CERN for last decade without showing any benefits of it?
[16:03:59] <selwyn> i would not necessarily characterise it like that, but yes the same person
[16:05:46] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[16:07:26] <pl> Ahh, the gaslighter one
[16:09:04] <pl> tl;dr - CERN /on surface/ is about particle physics. The other thing is that they also need to build all the "support" bits for it, which are also benefits of CERN for the rest of the world, and that goes even to such "simple" things like industrial automation with PLCs
[16:09:06] *** Joins: Posterdati (~posterdat@host-79-17-4-141.retail.telecomitalia.it)
[16:18:59] <pjb> And the world wide web, too ;-)
[16:23:59] <X-Scale> the most massive technological hack ever created
[16:24:50] <X-Scale> The Internet was done so well that most people think of it as a natural resource like the Pacific Ocean, rather than something that was man-made. When was the last time a technology with a scale like that was so error-free? The Web, in comparison, is a joke. The Web was done by amateurs. -- Alan Kay.
[16:35:00] <pjb> X-Scale: the phone network?  But there are some famous sketches about the failures of the phone network.  "Le 22 à Asnières."
[16:35:28] <pjb> https://www.youtube.com/watch?v=sH2lymTm9ZE
[16:35:28] -ixelp- Le 22 à Asnières - YouTube
[16:36:51] *** Joins: domovod (~domovod@176.196.122.197)
[16:37:21] *** Joins: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb)
[16:38:20] <selwyn> unless i am mistaken, the criticism of cern is not that it is not a benefit to industry
[16:38:42] <selwyn> but rather that building ever larger experiements in the hope of 'finding something'
[16:38:57] <selwyn> is not how science ought to be done, and indeed, not how it was done during its more productive eras
[16:39:02] <selwyn> and i agree with that
[16:39:21] <selwyn> does she actually want to shut down cern itself?
[16:39:51] <pl> selwyn: no, the criticism of cern always boils down to reductio ad absurdum of CERN as being only about particle physics and not producing anything else, making untrue claims about how the experiments are decided upon, and generally wanting to shutter fundamental research in particle physics in terms of funding
[16:40:08] <pl> CERN's mission /is/ about particle physics, but it produces a lot more while doing that
[16:40:48] <pl> and no, every "bigger experiment" is built based on "we have theories that need validation and for that we need to reach those kinds of energies/speeds"
[16:41:16] <pl> LHC was approved in 1980s, planned in 80s/90s and built for a decade
[16:41:35] <pl> iterating over the needs of verification of theoretical science over that time
[16:53:09] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[16:54:57] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:04:07] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 260 seconds)
[17:04:32] *** Joins: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com)
[17:14:56] *** Joins: random-nickname (~random-ni@87.116.179.142)
[17:18:04] *** Joins: fanimo (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[17:18:26] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 245 seconds)
[17:18:59] *** Quits: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb) (Quit: Leaving)
[17:20:48] *** Joins: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb)
[17:25:18] *** Quits: fanimo (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Read error: Connection reset by peer)
[17:26:19] *** Joins: fanimo (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[17:32:07] *** random-nickname is now known as random-nick
[17:33:09] *** Quits: fanimo (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[17:34:07] *** Joins: fanimo (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[17:45:05] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (Quit: WeeChat 3.3)
[17:45:07] *** Quits: fanimo (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[17:46:21] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[17:49:19] <mfiano> Hello from ERC
[17:56:51] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[17:58:47] * pl sets the timer for "next ERC flood"
[18:00:59] <shka> hi all
[18:05:43] *** Quits: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[18:07:48] *** Joins: domovod (~domovod@176.196.122.197)
[18:14:02] <mfiano> pl: I remember a few years ago there was that nicklist flood bug. Is that even a thing anymore?
[18:15:15] <pl> I think it never went away? But I didn't track ERC enough to know 
[18:21:05] <mfiano> I haven't seen it in about 3 years
[19:05:17] <pl> Honestly, I thought it was more due to drop in ERC users 
[19:15:22] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[19:16:42] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[19:16:58] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[19:17:51] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[19:34:22] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[19:41:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb) (Quit: Leaving)
[19:57:50] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[20:18:06] *** Joins: Inline (~Inline@2a02:908:1252:7a80:98b1:ebcb:2d91:63eb)
[20:18:28] *** Quits: kevingal (~quassel@80.233.40.156) (Remote host closed the connection)
[20:25:13] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[20:25:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:27:39] <dave0> nite all
[20:28:38] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:32:29] *** Joins: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com)
[20:38:06] *** Joins: cross_ (~cross@spitfire.i.gajendra.net)
[20:38:08] *** Joins: aeth_ (~aeth@user/aeth)
[20:43:19] *** Quits: Catie (~user@24.19.51.175) (*.net *.split)
[20:43:19] *** Quits: aeth (~aeth@user/aeth) (*.net *.split)
[20:43:19] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[20:53:01] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: later)
[20:58:29] <shka> https://www.youtube.com/watch?v=v0Z_4VyuzcA
[20:58:29] -ixelp- How Hypersonic Wind Tunnels Recreate Mach 20 - YouTube
[20:58:35] <shka> mach 20 wind tunnels 
[20:58:43] <shka> i had no idea that those are a thing
[20:58:59] <shka> and i am a nerd
[21:01:10] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 258 seconds)
[21:19:32] <shka> oh boys
[21:19:56] <shka> pl: i am trying to find docs on that green chip CPU without a dedicated clock
[21:22:21] <shka> greenarrays
[21:22:22] <shka> got it
[21:22:26] <shka> wrong name
[21:22:59] *** Joins: treflip (~user@95.79.32.99)
[21:24:51] *** Joins: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de)
[21:24:51] *** ChanServ sets mode: +o MichaelRaskin
[21:27:02] <pl> Green arrays, yes 
[21:27:10] <pl> Natively programmed in color forth 
[21:27:14] <pl> IIRC 
[21:27:18] <shka> yeah
[21:27:23] <shka> and no clock
[21:27:34] <shka> well, a dedicated clock at least
[21:27:39] <pl> But one of the commercial forth systems also was ported 
[21:27:49] <pl> Lack of clock isn't that rare 
[21:27:52] <pl> Well, wasn't 
[21:28:05] <shka> yeah, wasn't
[21:29:07] <shka> pl: but that was 70s?
[21:30:13] <pl> Low power systems used it pretty long 
[21:30:29] <shka> hmmm, i am not familiar with those honestly 
[21:30:39] <shka> i was more interested in powerful machines 
[21:31:48] <shka> which is honestly kinda silly, because low power systems are equally interesting 
[21:31:56] <shka> and probably more important...
[21:32:56] <pl> The async machines usually were truly limited by memory cycle 
[21:33:06] <pl> CADR was async 
[21:33:12] <shka> wait, really?
[21:33:16] <shka> CADR was async
[21:33:23] <shka> i didn't knew about that 
[21:33:46] <pl> Yep 
[21:33:55] <shka> that's cool
[21:34:15] <shka> but again, it is period correct 
[21:34:35] <pl> PDP-6,KA10 and I think KI10 were async too 
[21:35:18] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[21:45:51] *** Joins: lotuseater (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de)
[21:50:31] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[21:59:57] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[22:00:06] *** aeth_ is now known as aeth
[23:17:49] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[23:54:47] *** Quits: X-Scale (~ARM@46.50.5.8) (Ping timeout: 260 seconds)
[23:55:55] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[23:58:01] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
