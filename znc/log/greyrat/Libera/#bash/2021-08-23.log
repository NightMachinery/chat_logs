[00:00:03] <emanuele6> just don't try to make code injections work :D; neshpion >:D 
[00:00:07] <tirnanog> but it would be simpler still of run.sh handled this and you executed it directly.
[00:00:09] <tirnanog> if*
[00:00:29] * neshpion injects code into veins
[00:00:35] *** Quits: magla (~gelignite@55d4e32c.access.ecotel.net) (Quit: Stay safe!)
[00:01:53] *** Joins: aaro (~aaro@user/aaro)
[00:02:35] <neshpion> # set -- foo bar baz; bash -c 'printf "<%s> " "$@"' -- "$@"
[00:02:36] <shbot> neshpion: <foo> <bar> <baz>
[00:03:40] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[00:04:26] <emanuele6> neshpion: that is not code injection :)
[00:04:38] <neshpion> :D
[00:04:56] <emanuele6> code rehabilitation
[00:05:08] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[00:05:22] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Ping timeout: 252 seconds)
[00:06:31] *** Joins: Drek45 (~jrept371@129.59.122.18)
[00:07:18] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[00:07:20] <tirnanog> well, I suppose one could take the broader view that any use of -c is code injection of a sort, though not arbitrary code injection in the above example.
[00:07:47] <tirnanog> or, indeed, the corrected approach given to cyrus_mc.
[00:09:25] *** Joins: Lutin (~Lutin@user/lutin)
[00:12:25] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:12:59] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:13:24] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[00:14:16] *** Lord_of_Life_ is now known as Lord_of_Life
[00:15:50] *** Joins: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net)
[00:18:09] *** Joins: pj (~pj@ghettoforge/pj)
[00:19:44] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[00:20:51] *** Joins: bakerst (bakerst@libera/staff/bakerst)
[00:21:35] *** Joins: lavaball (felix@31.204.155.215)
[00:22:04] <FreeBDSM> https://mywiki.wooledge.org/BashPitfalls#pf53 is written weirdly; there are 2 examples which don't seem to have absolutely the same effect: in 1st case both 'mycmd' and writing output to file is done with superuser privileges, while in the second case 'mycmd' is executed with non-superuser privileges. To reduce confusion - I'd advice in favor of using 2 sudo's in 2nd example.
[00:23:14] *** Joins: seninha (~seninha@user/seninha)
[00:23:35] *** Quits: fortuno51 (~fortuno51@78.10.204.254) (Remote host closed the connection)
[00:28:59] *** Joins: fortuno51 (~fortuno51@78.10.204.254)
[00:29:19] <djph> FreeBDSM: the point is that 'mycmd' doesn't necessarily need elevated permissions, but rather the redirection to 'myfile' needs it (for example, writing to /sys/class/backlight/intel_backlight/brightness )
[00:31:13] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[00:32:36] *** Joins: Drek45 (~jrept371@129.59.122.18)
[00:33:56] *** Joins: fortuno51_ (~fortuno51@37.120.156.254)
[00:33:58] <tirnanog> that point isn't made clear, though. a cursory sentence noting the distinction would probably do.
[00:35:10] *** Quits: kurahaupo_ (~kurahaupo@58.84.89.180) (Ping timeout: 240 seconds)
[00:36:25] *** Quits: fortuno51 (~fortuno51@78.10.204.254) (Ping timeout: 248 seconds)
[00:37:48] <FreeBDSM> +
[00:38:03] *** Quits: furrymcgee (~devuan@31.179.186.66) (Remote host closed the connection)
[00:38:32] *** Joins: JackRuby (~textual@22.105.128.77.rev.sfr.net)
[00:39:46] *** Quits: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net) (Quit: Yssk)
[00:39:46] <FreeBDSM> # mkdir /dir && touch /dir/x.txt /dir/y.txt && sudo chmod 660 /dir/*.txt && sudo chown -R root:root /dir/ && sudo chmod 776 /dir/ && ls -lash /dir/
[00:39:48] <shbot> FreeBDSM: bash: sudo: command not found
[00:40:25] <emanuele6> !pf 54 > FreeBDSM 
[00:40:25] <greybot> FreeBDSM: https://mywiki.wooledge.org/BashPitfalls#pf54 -- Don't do this! -- sudo ls /foo/*
[00:40:49] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[00:40:52] <FreeBDSM> emanuele6: no, that's not the case/problem
[00:41:23] <emanuele6> # id # also, shbot runs commands as root
[00:41:24] *** Joins: akoana (~ah@user/akoana)
[00:41:24] <shbot> emanuele6: uid=0(root) gid=0(root) groups=0(root)
[00:41:30] <FreeBDSM> this set of commands produces 4 errors that ls cannot access dir, it's parent dir, and 2 files inside that dir. But then it lists those files with ???????? instead of permissions and size, owner, group owner, etc
[00:41:39] <FreeBDSM> only their names are shown, which is weird
[00:41:44] <tirnanog> it's actually not.
[00:41:50] <tirnanog> once you understand what's happening under the hood.
[00:42:00] <FreeBDSM> IMO I should have gotten a single error that I don't have permissions for /dir/
[00:42:06] <tirnanog> no, that would be false.
[00:42:40] <FreeBDSM> ah, that's behavior with 772
[00:42:46] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 252 seconds)
[00:42:56] <tirnanog> "6" gives other users both +r and +w. +r is all that's needed to be able to enumerate the immediate entries of a directory.
[00:43:12] <FreeBDSM> so with read - I can list dirs contents, but without any info other tan file names
[00:43:23] <tirnanog> the reason ls doesn't give you anything more than the names is that the absence of the +x permission makes it impossible for the files to be stat'ed.
[00:43:31] <tirnanog> granted, it doesn't handle that very gracefully.
[00:43:48] <tirnanog> in any case, without +x in effect, you cannot access the inode data of any of these entries.
[00:44:24] <FreeBDSM> well, that seems to be a bit inaccurate too: with 771 - I still get permission denied, although here's the +x
[00:44:25] *** Quits: aaro (~aaro@user/aaro) (Ping timeout: 248 seconds)
[00:44:42] <tirnanog> only now you've taken away the +r bit so the entries can't be enumerated in the first place.
[00:44:43] <FreeBDSM> so I need both 1 (+x) and 4 (+r) bits
[00:44:43] *** Joins: SuperLag (~akulbe@user/superlag)
[00:44:48] <FreeBDSM> yeah
[00:44:56] *** Joins: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net)
[00:45:09] *** Quits: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net) (Client Quit)
[00:45:22] <FreeBDSM> why did no one think of making that incorrect behavior in the first place?
[00:45:42] *** Joins: andril (~andril@2601:586:8400:e4:6abc:4535:850:ceaa)
[00:45:52] <FreeBDSM> like just forbid settings 1 xor 4 for dirs or automatically convert it to 0 or 5
[00:45:54] <tirnanog> why should it be?
[00:45:59] <tirnanog> that's the better question.
[00:46:01] <llua> heh
[00:46:16] <llua> luser go brrr
[00:46:41] <tirnanog> someone, somewhere might have a use case that entails being able to list the immediate entries of a directory while being able to do little else. but even if that were not the case, at least the model is somewhat orthogonal.
[00:47:05] <tirnanog> the r bit should mean something and, given that a directory is actually just a special kind of file, it does make some sense. you can read the entries with +r and you can manipulate them with +w (including unlinking).
[00:47:11] <FreeBDSM> that user would easily adopt
[00:47:19] <FreeBDSM> just have 5 instead of 4
[00:47:20] <tirnanog> indeeed, some operating systems will even allow you to open a directory as if it were a file. not Linux.
[00:47:41] *** Quits: bakerst (bakerst@libera/staff/bakerst) (Remote host closed the connection)
[00:48:06] *** Joins: bakerst_ (bakerst@libera/staff/bakerst)
[00:48:31] *** bakerst_ is now known as bakerst
[00:49:02] <FreeBDSM> IMO that's weak/poor argumentation in favor of how it is done now; but it serves good as an explanation of why I get the odd behavior I get. Thanks, tirnanog
[00:49:07] <tirnanog> I posit that you may lack the perspective to mount a substantial critique, given that you didn't understand it until moments ago.
[00:49:29] <FreeBDSM> I agree
[00:49:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[00:49:48] <FreeBDSM> (I might change my opinion in the future)
[00:50:58] <tirnanog> in any case, if anything else remains unclear, you may find this useful: https://termbin.com/pee5
[00:51:14] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:52:26] <FreeBDSM> looks like https://wpollock.com/AUnix1/FilePermissions.htm this is the source for that text
[00:52:41] <tirnanog> ah, it's still online. I thought it had died.
[00:54:13] <FreeBDSM> `... Thus there are nine permissions you can set, in any combination.Â  (Not all combinations make sense however.)`
[00:54:17] <FreeBDSM> heh
[00:55:01] <tirnanog> also, restricting 1 would be just plain stupid.
[00:55:11] <tirnanog> that is perfectly legitimate use case.
[00:55:11] *** Quits: fortuno51_ (~fortuno51@37.120.156.254) (Remote host closed the connection)
[00:55:45] <FreeBDSM> go on?
[00:55:53] <FreeBDSM> how is it legitimate?
[00:56:05] <FreeBDSM> what's the point for a dir to have 1?
[00:56:08] <tirnanog> allowing for directories to be traversed up to a given directory, without necessarily being able to snoop their contents.
[00:56:30] *** Joins: reset (~reset@user/reset)
[00:57:08] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[00:57:11] <tirnanog> or down to, I should probably say.
[00:57:19] *** Joins: aaro (~aaro@user/aaro)
[00:57:44] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[00:58:17] <tirnanog> it's easy to say YouDontNeedThat(tm) but somebody will.
[00:58:43] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:59:02] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:59:27] <FreeBDSM> not sure I understand what you meant by 'traverse down to a given dir': `ls -lash /owner/` seems to give similar output (except for the mode of the `child` dir) in 770 vs 771
[00:59:46] <FreeBDSM> in case of 770 vs 771*
[01:00:09] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Remote host closed the connection)
[01:00:29] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[01:00:32] <tirnanog> I'd suggest you at least read the directories section of Pollock's document and experiment further then.
[01:01:28] <tirnanog> again, without +r you can't read the list of entries. that this is a distinct capability is a potentially useful one.
[01:02:45] <FreeBDSM> ah, you probably meant that one can cd only into a dir with +x
[01:03:16] <FreeBDSM> well, kinda legitimate use case, now I see
[01:03:26] <tirnanog> or: just because you can descend into a directory doesn't mean you should be able to readdir(2) it.
[01:03:56] <tirnanog> at least learn how it works before screaming that the designers got it all wrong.
[01:04:06] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:04:34] <tirnanog> yes, there are combinations that aren't going to make sense but prescribing what's right and wrong can be a slippery slope.
[01:04:41] <FreeBDSM> it's not really clear to me right now what's the actual profit of being able to cd to a dir you can't read, other than cases concerning docker (and cgroups in general)
[01:04:52] <FreeBDSM> agreed
[01:04:56] <tirnanog> or did I mean proscribing. anyway.
[01:07:28] <tirnanog> to reach one that you _can_ read without it amounting to anything more than that.
[01:07:36] <tirnanog> principle of least privilege.
[01:07:41] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[01:08:05] *** Joins: Drek45 (~jrept371@129.59.122.18)
[01:08:29] <FreeBDSM> I'm grateful that we can calmly debate points and that you don't feel offended (or wanting to just unarguably disagree) by some ideas I express from time to time
[01:09:15] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[01:09:27] <tirnanog> to be clear, I'm not acting as an advocate that every decision made ever in the course of designing unix was a sensible one. heavens no.
[01:09:43] *** Joins: touraine (~igloo@109.131.229.44)
[01:09:44] <FreeBDSM> I see that and that's even better
[01:09:46] <tirnanog> nevertheless, there is often a rhyme or reason to a thing that, at first, may seem obtuse.
[01:10:18] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:10:27] *** Quits: touraine (~igloo@109.131.229.44) (Client Quit)
[01:10:36] *** Quits: aaro (~aaro@user/aaro) (Ping timeout: 250 seconds)
[01:10:48] *** Joins: touraine (~igloo@109.131.229.44)
[01:15:09] *** Quits: touraine (~igloo@109.131.229.44) (Client Quit)
[01:16:14] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[01:18:56] <FreeBDSM> > there are non-standard attributes and additional permissions (access control lists orÂ ACLs) that may or may not be available on some systems < 1. Which part of the system is actually responsible for basic file permissions? Is it just filesystem 'driver' (not sure if that component is actually a driver)? 2. Which part of the system brings extra permissions like ACLs? Is it done via kernel modules?
[01:20:44] *** Quits: brelod (~me@87.74.198.187) (Quit: leaving)
[01:23:44] *** Joins: touraine (~igloo@44.229-131-109.adsl-dyn.isp.belgacom.be)
[01:24:58] <tirnanog> it's the responsibility of the kernel to enforce the permissions model, yes.
[01:25:40] <tirnanog> exactly how it is implemented would obviously veer into OS-specific discussion but it concerns the filesystem drivers and their supporting layers.
[01:25:40] *** Quits: julius_c (~julius_c@83.red-88-0-62.dynamicip.rima-tde.net) (Quit: Leaving)
[01:25:43] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Ping timeout: 244 seconds)
[01:25:43] *** Joins: damxsa (~damx@2001:16a2:cd07:7e00:c69c:ea15:4679:2b93)
[01:25:47] *** Quits: touraine (~igloo@44.229-131-109.adsl-dyn.isp.belgacom.be) (Client Quit)
[01:26:23] *** Joins: besnn (~besnn@user/besnn)
[01:26:41] <FreeBDSM> so a bit of between fs and kmod
[01:26:42] *** Joins: shaggysi0 (~shaggysi0@2.25.207.120)
[01:27:03] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:27:05] *** Quits: mestre (~mestre@191.177.175.57) (Quit: Lost terminal)
[01:27:32] <tirnanog> whether the code was loaded by way of a loadable module or the kernel image itself doesn't really matter, I think. what's important is how it behaves.
[01:30:32] *** Quits: jrofd (~test@185.192.69.14) (Ping timeout: 250 seconds)
[01:30:58] <tirnanog> taking linux as an example, it's between the "vfs" and the filesystem driver in question, if you're looking for something to research.
[01:31:44] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:31:45] <tirnanog> and there's another component that deals with POSIX 1003.1e (draft) ACLs.
[01:33:53] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:34:00] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[01:35:42] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[01:36:24] <FreeBDSM> thanks
[01:37:02] *** Quits: rando25892 (~sthk@user/rando25892) (Ping timeout: 250 seconds)
[01:37:21] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Read error: Connection reset by peer)
[01:37:31] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[01:38:10] *** Quits: damxsa (~damx@2001:16a2:cd07:7e00:c69c:ea15:4679:2b93) (Quit: Leaving)
[01:38:48] *** Joins: rando25892 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net)
[01:42:36] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[01:43:38] *** Joins: jrofd (~test@85.203.36.23)
[01:45:52] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 244 seconds)
[01:46:33] *** Joins: aaro (~aaro@user/aaro)
[01:47:54] *** Quits: aead (~aead@user/aead) (Quit: aead)
[01:48:12] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:22] *** Joins: venue (~venue@user/venue)
[01:49:46] *** Joins: KipIngram (~kipingram@62.151.183.147)
[01:49:47] *** Quits: JackRuby (~textual@22.105.128.77.rev.sfr.net) (Quit: Again ... I forgot to turn on amphetamine on my macbook)
[01:50:20] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[01:50:52] *** Joins: aead (~aead@user/aead)
[01:51:38] <KipIngram> I'm trying to use a named pipe to give me command prompt control over a program that has its on console interface.  I can set it all up, and then if I say "printf "\n" >pipe" the program will begin doing its things.  If, instead, I say "printf "\nq\n" it will start up, and immediately quit, responding to the q command just as if I'd typed it.
[01:51:54] <KipIngram> But in every case, once it finishes with the first string, it sees nothing else that I write into the pipe.
[01:52:02] <KipIngram> It's like once the pipe is empty, it stops looking at it.
[01:52:24] <KipIngram> I'm wanting it to treat the pipe EXACTLY like the keyboard, so that whenever I send a new command into the pipe it gets acted on.
[01:52:29] <KipIngram> Any insights here?
[01:52:36] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[01:53:07] <KipIngram> I'd like to be able to send in that "q\n" LATER and have the program quit, but I haven't been able to make that work.
[01:53:47] *** Joins: ede (~ede@user/ede)
[01:53:50] <twkm> don't open the pipe multiple times.  actually i suggest you use expect.
[01:53:50] <KipIngram> It's like I need a pipe that will never report empty to the application - I want the application to block on it when there's nothing immediately available.
[01:54:09] <KipIngram> I saw a reference to expect in my research - can you give a small example?
[01:54:45] <KipIngram> I see what you're saying - I'm opening and closing the pipe every time I printf to it?
[01:54:47] <twkm> ''printf ... >pipe'' opens pipe, prints to it, then closes it.  poof all done.
[01:54:51] <tirnanog> yes, that's what you're presently doing.
[01:54:57] <KipIngram> Makes sense.
[01:55:09] <KipIngram> I can go research expect more deeply - thank you both.
[01:55:14] *** Quits: andril (~andril@2601:586:8400:e4:6abc:4535:850:ceaa) (Ping timeout: 250 seconds)
[01:55:33] <KipIngram> So it's when I CLOSE the pipe that the other end is then thinking I'm done.
[01:55:56] <twkm> expect is an extension to tcl that provides what you are after, programmable i/o to a program as if it was the keyboard and monitor.
[01:56:00] <tirnanog> you could use exec to open it, and close it later. expect might indeed be what you want, though.
[01:56:55] <KipIngram> Well, my interpretation of expect was that it gave me a way to recognize prompts printed by the application.
[01:57:14] <KipIngram> But my app doesn't really do that in any organized way - it just waits for keystrokes (q being the most significant one - quit).
[01:57:39] <KipIngram> I don't really need to pay any attention to the app's output - in fact eventually I'll probably run it with >/dev/null.
[01:57:57] <tirnanog> alternatively, ensure that the redirection encompasses all of that which must be written. for example, by using a function or a compound command.
[01:58:00] <KipIngram> in the background - right now I want to see its output so I know what I'm accomplishing.
[01:58:01] <twkm> what ever you use to decide when to send more to the program can be done in tcl, or bash.
[01:58:35] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[01:58:35] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[01:58:58] *** Joins: ano (~weechat@user/ano)
[02:01:29] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[02:01:38] <KipIngram> Ah, this page:
[02:01:40] <KipIngram> https://stackoverflow.com/questions/8410439/how-to-avoid-echo-closing-fifo-named-pipes-funny-behavior-of-unix-fifos
[02:01:47] <KipIngram> has an interesting suggestion.
[02:01:56] <KipIngram> sleep <long time> >pipe &
[02:02:08] <KipIngram> ./app <pipe
[02:02:18] <KipIngram> Then echo <command> >pipe
[02:02:23] <KipIngram> And that seems to work, so far.
[02:02:27] <twkm> looks more like idiocy, but whatever makes you happy.
[02:02:32] <tirnanog> that seems rather silly, to say the least.
[02:02:36] <KipIngram> :-)
[02:02:43] <KipIngram> Yeah, it does seem like a kludge.
[02:03:10] <KipIngram> This is an interesting problem and a good chance to skill-improve, so I'll keep at it.  But this at least works for the time being.
[02:03:24] <tirnanog> or, you could consider one of the three suggestions given.
[02:04:45] <KipIngram> Yes, I will - I want to learn about all of them.
[02:08:26] *** Quits: sazawal (~sazawal@182.64.58.123) (Quit: Leaving)
[02:19:11] *** Quits: Drek45 (~jrept371@129.59.122.18) (Quit: Leaving)
[02:23:37] *** Joins: Lutin (~Lutin@user/lutin)
[02:24:03] <e36freak> !faq fifo
[02:24:03] <greybot> https://mywiki.wooledge.org/BashFAQ/085 -- How to write several times to a fifo without having to reopen it?
[02:24:40] *** Quits: rando25892 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net) (Changing host)
[02:24:40] *** Joins: rando25892 (~sthk@user/rando25892)
[02:32:16] *** Joins: brelod (~me@87.74.198.187)
[02:33:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[02:34:16] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[02:36:53] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:38:29] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:42:59] *** Quits: kingjulian (~kingjulia@41.1.76.76) (Ping timeout: 268 seconds)
[02:43:43] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[02:45:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[02:47:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[02:47:19] *** Joins: totenkoph (~scythe@user/totenkoph)
[02:48:35] *** Quits: sdu (~doo@185.44.146.64) (Remote host closed the connection)
[02:51:34] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 250 seconds)
[02:51:45] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[02:51:54] <tirnanog> good show. that would have saved some time.
[02:55:15] *** Quits: cyrus_mc (~cyrus_mc@c-98-232-162-73.hsd1.or.comcast.net) (Quit: Connection closed)
[02:57:50] *** Quits: n4dir (~user@i59F77CC4.versanet.de) (Remote host closed the connection)
[03:00:40] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 250 seconds)
[03:03:00] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:03:14] *** Joins: useretail (~useretail@185.132.19.151)
[03:03:53] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[03:04:21] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[03:06:56] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[03:08:29] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[03:10:43] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:11:43] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[03:13:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[03:15:23] *** Joins: b0nn (~shane@user/b0nn)
[03:15:27] *** Joins: KombuchaKip (~kip@192.252.230.5)
[03:15:43] *** Joins: ntwk (~ntwk@user/ntwk)
[03:16:38] *** Quits: KombuchaKip (~kip@192.252.230.5) (Read error: Connection reset by peer)
[03:17:04] *** Joins: KombuchaKip (~kip@192.252.230.5)
[03:17:22] <b0nn> morning all, I'm trying to understand how to receive a list of values as commandline arguments, and use them  as a list - that is, I want ./foo.sh arg1 arg2... argn and I want to use $@ (I think) to plonk them all into a (say) print $@ type operation
[03:17:29] <KombuchaKip> I am getting a syntax error on the second argument to gsub, which I'm trying to provide an empty string for. Any help appreciated: value=$(awk -F "=" "/^$config_field/ {gsub(/[ \t]/, '', $2); print $2}" $some_config_file)
[03:18:33] <tirnanog> b0nn: are you just trying to expect the parameter list at this stage?
[03:18:39] <tirnanog> inspect, sorry.
[03:18:46] *** Parts: KipIngram (~kipingram@62.151.183.147) (WeeChat 1.4)
[03:19:43] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[03:19:44] <llua> KombuchaKip: your code injection is causing the syntax error, don't do that
[03:20:24] <b0nn> tirnanog: yeah I have an indeterminate number of input args that I want to plonk into a SQL script I am writing
[03:21:45] <tirnanog> b0nn: printf '<%s> ' "$@"; print '\n'. or, perhaps, args=("$@"); declare -p args.
[03:22:34] <tirnanog> printf, rather, not print.
[03:24:10] *** Joins: michigan (uid507982@id-507982.charlton.irccloud.com)
[03:24:36] <b0nn> ok, thanks
[03:25:05] <Lutin> bash makes my life miserable good
[03:26:46] *** Joins: fortuno51 (~fortuno51@2a00:f41:5885:7821:28ee:7200:1411:2aba)
[03:27:06] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[03:27:07] <twkm> KombuchaKip: \$2 not $2 -- bash will replace $2 which means awk doesn't see a $2, you need \$2, both times.
[03:29:08] *** Joins: fortuno51_ (~fortuno51@37.120.156.254)
[03:29:28] <tirnanog> b0nn: you may also stringify the parameter list with "$*", though it would not necessarily make it clear where one parameter ends and another begins.
[03:29:42] <b0nn> ok
[03:31:04] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 252 seconds)
[03:31:07] *** Joins: shimbles (~shimbles@209.201.38.106)
[03:31:52] *** Quits: fortuno51 (~fortuno51@2a00:f41:5885:7821:28ee:7200:1411:2aba) (Ping timeout: 250 seconds)
[03:32:10] <shimbles> where is | implemented?
[03:32:34] *** Quits: jsrnop1 (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:58] *** Joins: jsrnop1 (~mark@user/jsrnop)
[03:33:01] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (Quit: Bye!)
[03:33:58] <twkm> in bash if you provide it as syntax to a bash command line or script.
[03:34:35] *** Quits: brelod (~me@87.74.198.187) (Quit: leaving)
[03:34:47] <shimbles> in C?
[03:36:53] <twkm> in the bash source?  partially in the parser invoking various subroutines when a | is recognized.  
[03:36:57] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[03:38:08] <shimbles> https://github.com/bminor/bash/blob/master/parse.y#L1284
[03:38:13] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:39:36] <twkm> you found it, excellent.
[03:39:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:39:50] <shimbles> is that it though?
[03:41:24] <shimbles> i was thinking about implementing a different version of |, so curious how it actually works
[03:41:27] <shimbles> https://github.com/bminor/bash/blob/f3a35a2d601a55f337f8ca02a541f8c033682247/make_cmd.c#L171
[03:41:56] <shimbles> it looks like it dynamically creates a "new command"
[03:41:58] <twkm> different like a coproc?
[03:42:27] <shimbles> pipe the data through AWS Kinesis
[03:43:13] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[03:43:22] *** Joins: Drek45 (~jrept371@102.129.153.207)
[03:44:09] <twkm> so probably you want a sink not a filter.
[03:45:44] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[03:46:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:46:15] <shimbles> t1.micro has ~600MB of RAM and 1 CPU, with low network. you could buffer data over the network, for example
[03:46:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:46:40] <KombuchaKip> twkm & llua: It was still complaining about the second argument to gsub having a syntax error. Is this cleaner? value=$(awk -F "=" "/^$config_field/ {gsub(/[ \t]/, \"\", \$2); print \$2}" $licensor_some_config_file)
[03:48:03] <llua> heh, ignored the advice
[03:49:00] <shimbles> me? why would i want a sink instead of a filter
[03:49:16] *** Quits: shaggysi0 (~shaggysi0@2.25.207.120) (Remote host closed the connection)
[03:49:19] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:49:36] *** Joins: JanC (~janc@user/janc)
[03:49:42] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[03:50:10] <shimbles> i could implement something like tee, but it would be cool, if it was built-in
[03:50:15] <llua> KombuchaKip: awk -F= -v "config=^$config_field" '$0 ~ config { gsub(/[ \t]/, "", $2); print $2 }'
[03:50:44] <KombuchaKip> llua: How do I save the output into a value?
[03:51:07] <llua> gonna let your figure that part out
[03:51:21] <twkm> shimbles: so you want to stream out to the network then back when the network is "low"?  surprising.
[03:51:29] <KombuchaKip> llua: Well I had it already as value=$(awk ...), but I thought you were saying not a good idea?
[03:51:57] *** Joins: brelod (~me@87.74.198.187)
[03:53:14] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[03:53:20] <llua> not sure how you inferred that
[03:53:40] <KombuchaKip> llua: Not sure why the warning about a code injection.
[03:54:12] <llua> because you were injecting code into code, poorly. causing the syntax your question was about
[03:54:17] <llua> into awk*
[03:54:23] <KombuchaKip> llua: And what is config mean in your invocation?
[03:54:24] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 250 seconds)
[03:54:34] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-118-47-137.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[03:54:43] <llua> a variable
[03:54:54] <twkm> just an awk variable to assign, for use in the regex match.
[03:54:57] <KombuchaKip> llua: Yes, I can see that. What does it mean?
[03:55:04] <KombuchaKip> twkm: Thanks.
[03:55:10] <llua> that god doesn't exist
[03:55:29] <KombuchaKip> llua: not sure how you inferred that
[03:55:55] <llua> its right there in the name, config; latin for god doesn't exist.
[03:56:02] *** Joins: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697)
[03:56:13] <KombuchaKip> llua: I must have missed that in my study of the language.
[03:56:27] <shimbles> twkm could this be implemented in bash, using _ instead of | ?
[03:57:42] <twkm> streaming to somewhere then also receiving from somewhere?  doubtful.
[04:00:14] *** Quits: fortuno51_ (~fortuno51@37.120.156.254) (Remote host closed the connection)
[04:00:25] *** Quits: brelod (~me@87.74.198.187) (Quit: leaving)
[04:02:58] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[04:03:06] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[04:06:28] *** Joins: zouhair (~zouhair@lnsm1-montreal02-142-118-47-137.internet.virginmobile.ca)
[04:08:25] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[04:09:15] *** Quits: cronolio (~alex@user/cronolio) (Read error: Connection reset by peer)
[04:09:27] *** Joins: ntwk (~ntwk@user/ntwk)
[04:09:34] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 250 seconds)
[04:10:27] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-118-47-137.internet.virginmobile.ca) (Client Quit)
[04:11:50] *** Joins: sgn (~sgn@user/sgn)
[04:11:51] *** Joins: asvln (asvln@gateway/vpn/protonvpn/asvln)
[04:11:53] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 248 seconds)
[04:12:27] *** Joins: asvln_ (asvln@gateway/vpn/protonvpn/asvln)
[04:12:49] *** Joins: dre (~dre@2001:8003:c932:c301:64b7:95dc:bc24:e941)
[04:12:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[04:14:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:14:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:14:48] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[04:15:00] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:16:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[04:17:18] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[04:19:21] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[04:19:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:20:02] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:34] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 252 seconds)
[04:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:21:09] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 258 seconds)
[04:21:30] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[04:22:03] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[04:25:54] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[04:26:02] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:26:18] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[04:28:50] *** Quits: asvln (asvln@gateway/vpn/protonvpn/asvln) (Quit: asvln)
[04:30:08] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:32] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:34:03] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[04:34:10] *** Quits: aead (~aead@user/aead) (Ping timeout: 240 seconds)
[04:36:30] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[04:37:56] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[04:38:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:38:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:38:52] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[04:43:16] *** Joins: zouhair (~zouhair@lnsm1-montreal02-142-118-47-137.internet.virginmobile.ca)
[04:45:15] *** Joins: igemnace (~ian@user/igemnace)
[04:47:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:47:30] *** Joins: aead (~aead@user/aead)
[04:52:40] *** Quits: aead (~aead@user/aead) (Ping timeout: 240 seconds)
[04:53:07] <kurahaupo> FreeBDSM: You were wondering earlier why r & x permissions are allowed independently on directories. I have certainly used directories with x and without r permission. That means you can access a file inside it if you know its name, but you cannot list as the names in the directory. That's a useful security setting, especially when the filenames include UUIDs or similar unguessable nonces
[04:53:30] *** Joins: aead (~aead@user/aead)
[04:54:10] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:00:00] *** Joins: sublim20 (~sublim20@user/sublim20)
[05:00:08] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[05:00:18] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:04:32] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[05:07:21] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 248 seconds)
[05:09:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[05:10:14] <kurahaupo> I've even used mode 1753 on a directory, as a kind of incoming dropbox
[05:10:53] <kurahaupo> drwxr-x-wt
[05:18:36] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[05:19:02] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[05:21:40] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[05:30:35] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:08] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[05:34:38] *** Joins: richardm75 (~richardm7@2600:8801:c502:1000:70aa:9625:efd2:122c)
[05:38:59] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[05:39:46] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[05:40:08] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 250 seconds)
[05:41:18] *** Joins: Bhavuk (~BTaneja@122.173.24.36)
[05:42:34] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[05:48:51] *** Joins: vlm (~vlm@user/vlm)
[05:55:53] *** Joins: kj (~kj@kj.aerisnetwork.net)
[06:05:18] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Remote host closed the connection)
[06:16:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:17:08] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[06:21:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[06:31:15] *** Joins: lq (~lq@116.228.78.178)
[06:31:54] *** Quits: lq820105 (~lq@116.228.78.178) (Read error: Connection reset by peer)
[06:32:38] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[06:34:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[06:38:12] *** Quits: shimbles (~shimbles@209.201.38.106) (Quit: Client closed)
[06:38:34] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[06:38:41] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[06:41:27] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[06:41:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[06:42:19] *** Quits: asvln_ (asvln@gateway/vpn/protonvpn/asvln) (Quit: asvln_)
[06:43:01] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[06:43:09] *** Joins: keypushe- (keypusher@user/keypusher)
[06:43:34] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[06:44:07] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[06:45:05] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[06:46:22] *** keypushe- is now known as keypusher
[06:47:49] *** Parts: akoana (~ah@user/akoana) (Leaving)
[06:51:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:55:20] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[07:00:37] *** Quits: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697) (Ping timeout: 258 seconds)
[07:01:36] *** Quits: jos1 (~jos3@dyndsl-091-096-033-238.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:04:13] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[07:07:24] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[07:09:47] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:09:59] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Client Quit)
[07:10:04] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[07:10:18] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:11:27] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[07:11:43] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:11:54] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[07:14:43] *** Joins: jos1 (~jos3@dyndsl-091-096-032-012.ewe-ip-backbone.de)
[07:16:35] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[07:18:03] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[07:21:44] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:23:42] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[07:30:41] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:33:40] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[07:34:16] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[07:34:32] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:37:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:38:21] *** Joins: seninha (~seninha@user/seninha)
[07:38:52] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[07:39:28] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:37] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[07:42:35] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[07:45:06] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:48:32] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[07:58:01] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[08:01:44] *** Quits: killall (~killown@user/killown) (Quit: Leaving)
[08:04:17] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[08:09:55] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[08:11:24] *** Joins: pystardust (~pystardus@223.226.119.16)
[08:15:25] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Read error: Connection reset by peer)
[08:15:32] *** Joins: kurahaupo_ (~kurahaupo@58.84.89.180)
[08:15:46] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[08:26:06] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[08:31:58] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[08:31:58] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[08:32:16] *** Joins: Bit_MCP (~Bit_MCP43@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[08:33:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:35:20] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:36:48] *** Joins: gnoo (~gnoo@user/gnoo)
[08:37:21] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[08:38:50] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:40:56] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[08:40:58] <KombuchaKip> twkm: It turns out it almost works, but not quite: value=$(awk -F "=" -v "config=^$config_field" '$0 ~ config { gsub(/[ \t]/, "", $2); print $2 }' $config_file)  The  reason is if config_field is, say, foo, a and there is a foo-blah config_field as well, it will return a mangled result. Is there any way to tighten that regex such that it awk still plays nice?
[08:43:31] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:44:03] *** Quits: HankHill (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 276 seconds)
[08:46:52] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[08:46:57] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[08:47:40] *** Joins: HankHill (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[08:52:32] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[08:56:37] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[08:56:40] *** Quits: kurahaupo_ (~kurahaupo@58.84.89.180) (Ping timeout: 252 seconds)
[08:58:13] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[09:00:36] *** Joins: safe (~safe@cpe-74-64-165-24.nj.res.rr.com)
[09:01:04] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 252 seconds)
[09:01:38] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[09:02:46] <e36freak> KombuchaKip: do you actually want a regex or do you just want to ensure that it starts with the literal string in "$config_field" ?
[09:03:05] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:03:54] <KombuchaKip> e36freak: I want to ensure it is the literal string in the variable $config_field. So if it's "foo" I want its value, but not the field "foo-blah".
[09:04:04] <e36freak> if you want a literal string, don't use a regex?
[09:04:23] <KombuchaKip> e36freak: Sorry, I'm not very familiar with awk.
[09:04:24] <e36freak> -v "config=$config_field" 'index($0, config) == 1 { ... }
[09:04:53] <e36freak> or if you want an exact match on $1, just use ==
[09:04:57] *** Joins: vishal (~vishal@fedora/vishal)
[09:04:57] <e36freak> $1 == config { ... }
[09:05:18] <emanuele6> yeah, it sounds like you want $1 == config
[09:05:33] *** Joins: lq820105 (~lq@210.72.8.204)
[09:05:44] *** Joins: vysn (~vysn@user/vysn)
[09:06:16] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:07:18] *** Quits: lq (~lq@116.228.78.178) (Read error: Connection reset by peer)
[09:09:36] <KombuchaKip> e36freak: -F "=" -v "config=foo"  'index($0, config) == 1 { gsub(/[ \t]/, "", $2); print $2 }' ?
[09:09:50] <e36freak> that'll still pass foo-bar 
[09:10:03] <e36freak> $1 == config instead of index($0, config) == 1 is an exact whole match on the first field
[09:11:53] <KombuchaKip> e36freak: Almost, but breaks if foo has whitespace after it before equal sign.
[09:12:16] <e36freak> i did not know that was a possibility
[09:12:22] <e36freak> how do you know where the first field ends, then?
[09:12:24] <e36freak> what's the delimiter?
[09:12:46] <e36freak> if that's the case then the part you're printing will also be part of config_field
[09:12:54] <e36freak> what does your input file look like?
[09:12:56] <KombuchaKip> e36freak: It's key = value
[09:13:20] <KombuchaKip> e36freak: But there could be zero or more white space flanking the =, and value could have a trailing comment.
[09:13:40] *** Joins: lq (~lq@210.72.8.204)
[09:13:40] <e36freak> can key contain an '=' ?
[09:13:45] <KombuchaKip> e36freak: Here is a sample input: foo = first_value\nfoo-blah = second_value
[09:13:49] <KombuchaKip> e36freak: Nope.
[09:14:05] *** Joins: austin987 (~null@2603-8080-2700-d768-0000-0000-0000-0b6a.res6.spectrum.com)
[09:14:14] <e36freak> ok so you need an FS that separates it with = with whitespace on either side
[09:14:30] *** Quits: lq820105 (~lq@210.72.8.204) (Read error: Connection reset by peer)
[09:14:56] *** Joins: grumanoid (sid510567@id-510567.tinside.irccloud.com)
[09:15:00] <e36freak> awk -F '[[:space:]]*=[[:space:]]*' -v config="$config_field" '$1 == config {gsub(/[[:space:]]/, "", $2); print $2}' "$config_file"
[09:15:28] *** Joins: yaymukun1 (~yaymukund@185.21.216.136)
[09:15:29] *** Joins: koollman (samson_t@sp1.kooll.org)
[09:15:30] *** Joins: mingdao_ (~mingdao@107-146-172-064.res.spectrum.com)
[09:15:32] *** Joins: Camus_ (~Camusense@megaman.thican.net)
[09:15:34] *** Joins: queso_ (~queso@cpe-71-77-41-168.nc.res.rr.com)
[09:15:34] *** Joins: chronon_ (~chronon@user/chronon)
[09:15:35] *** Joins: nvz_ (~user@nvz.farted.online)
[09:15:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[09:15:37] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:15:37] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[09:15:37] *** Quits: heiner (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (*.net *.split)
[09:15:37] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (*.net *.split)
[09:15:37] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[09:15:37] *** Quits: queso (~queso@cpe-71-77-41-168.nc.res.rr.com) (*.net *.split)
[09:15:37] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[09:15:37] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[09:15:37] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:15:37] *** Quits: Camusensei (~Camusense@megaman.thican.net) (*.net *.split)
[09:15:37] *** Quits: Ox4 (~int@0x4.cx) (*.net *.split)
[09:15:37] *** Quits: Ionic (~ionic@home.ionic.de) (*.net *.split)
[09:15:37] *** Quits: damyan (damyan@mail.0x4711.org) (*.net *.split)
[09:15:37] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[09:15:37] *** Quits: koollman_ (samson_t@user/koollman) (*.net *.split)
[09:15:37] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (*.net *.split)
[09:15:37] *** Quits: yaymukund (~yaymukund@user/yaymukund) (*.net *.split)
[09:15:37] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[09:15:37] *** Quits: nvz (~user@nvz.farted.online) (*.net *.split)
[09:15:37] *** Joins: dmvrtx_ (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[09:15:37] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[09:15:38] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[09:15:38] *** Joins: Ionic_ (~ionic@home.ionic.de)
[09:15:39] *** Joins: mattf_ (~mattf@li908-138.members.linode.com)
[09:15:41] *** Joins: Anarchic` (~Anarchic@getlegit.co.uk)
[09:15:45] *** Joins: glider_ (~glider@user/glider)
[09:15:49] *** Joins: n-st- (~n-st@user/n-st)
[09:15:50] *** Joins: damyan^ (damyan@mail.0x4711.org)
[09:15:59] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[09:16:02] *** Joins: dlam1 (~dlam@dlam.me)
[09:16:03] *** Quits: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[09:16:07] *** Joins: mikeputnam (~mikeputna@wilug/mikeputnam)
[09:16:20] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[09:16:21] <KombuchaKip> e36freak: Almost, but trailing # comments after value are consumed.
[09:16:31] *** n-st- is now known as n-st
[09:16:37] <emanuele6> !b2
[09:16:37] <greybot> bashphorism 2: The questioner will keep changing the question until it drives the helpers in the channel insane.
[09:16:40] *** Joins: int (~int@0x4.cx)
[09:16:43] <e36freak> he did mention the comments
[09:16:46] <e36freak> so sub() those out too
[09:16:58] <e36freak> awk -F '[[:space:]]*=[[:space:]]*' -v config="$config_field" '$1 == config {gsub(/[[:space:]]/, "", $2); sub(/#.*/, "", $2); print $2}' "$config_file"
[09:17:40] <e36freak> or use a language you actually know :)
[09:18:04] <KombuchaKip> e36freak: Well done. Yeah I would, except Debian maintainer scripts require POSIX shell only, so quite limited in tools.
[09:18:35] <KombuchaKip> e36freak: awk(1) is a really powerful tool, but can take an eternity to master well. In my case I need it for literally one line of shell code.
[09:18:44] <KombuchaKip> e36freak: But thank you for solving that.
[09:18:50] *** Quits: Sketch (sketch@2604:180:2::a506:5c0d) (*.net *.split)
[09:18:50] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[09:18:50] *** Quits: VectorX (~VectorX@user/vectorx) (*.net *.split)
[09:18:50] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:18:50] *** Quits: j416 (~j416@user/j416) (*.net *.split)
[09:18:50] *** Quits: calaz (~calaz@user/calaz) (*.net *.split)
[09:18:50] *** Quits: sjs (~sjs@user/sjs) (*.net *.split)
[09:18:50] *** Quits: Cjefke (~nomail@209-227-224-141.dynamic.caiway.nl) (*.net *.split)
[09:18:50] *** Quits: xcm_ (~xcm@user/xcm) (*.net *.split)
[09:18:50] *** Quits: depesz (~quassel@lana.depesz.com) (*.net *.split)
[09:18:50] *** Quits: bonsaikitten (~purrrr@gentoo/developer/patrick) (*.net *.split)
[09:18:50] *** Quits: BrowseMan (~BrowseMan@78.130.185.116) (*.net *.split)
[09:18:50] *** Quits: koala_man (~vidar@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[09:18:50] *** Quits: Kingsy (~chris@kingsy.co.uk) (*.net *.split)
[09:18:50] *** Quits: wuseman (~wuseman@user/wuseman) (*.net *.split)
[09:18:50] *** Quits: Yorick_ (znc@vps.freegamehosting.eu) (*.net *.split)
[09:18:50] *** Quits: pervaya (~pervaya@2001:41d0:602:3007::641b:b74c) (*.net *.split)
[09:18:50] *** Quits: Muzer (~muzer@tim32.org) (*.net *.split)
[09:18:50] *** Quits: supernovah (~supernova@mail.ijk.nz) (*.net *.split)
[09:18:50] *** Quits: leftyfb (leftyfb@ubuntu/member/leftyfb) (*.net *.split)
[09:18:50] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (*.net *.split)
[09:18:50] *** Quits: pwndave (pwndave@is.ready-to.party) (*.net *.split)
[09:18:50] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[09:18:50] *** Quits: zaratustra (~zaratustr@user/zaratustra) (*.net *.split)
[09:18:50] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[09:18:50] *** Quits: ParkerR (~ParkerR@znc.withg.org) (*.net *.split)
[09:18:50] *** Quits: hata (~hata@hata.moe) (*.net *.split)
[09:18:50] *** Quits: bboles (~bboles@64.94.212.195) (*.net *.split)
[09:18:50] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:18:50] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[09:18:50] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[09:18:50] *** Quits: mschiff (~mschiff@gentoo/developer/mschiff) (*.net *.split)
[09:18:50] *** Quits: xaxas (~quassel@nebulosa.jtopia.org) (*.net *.split)
[09:18:54] *** Joins: panda_man (~vidar@157.146.251.23.bc.googleusercontent.com)
[09:18:54] *** Joins: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:18:55] *** Joins: Kingsy_ (~chris@kingsy.co.uk)
[09:18:56] *** Joins: leftyfb_ (leftyfb@wargames.left-click.org)
[09:18:57] *** Joins: supernov1h (~supernova@mail.ijk.nz)
[09:18:58] *** Joins: Riviera_ (Riviera@user/riviera)
[09:18:59] *** Joins: Cjefke_ (~nomail@209-227-224-141.dynamic.caiway.nl)
[09:19:03] *** Joins: BrowseMan (~BrowseMan@78.130.185.116)
[09:19:04] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[09:19:04] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[09:19:06] *** Joins: ParkerR (ParkerR@znc.withg.org)
[09:19:13] *** Joins: xiaomiao (~purrrr@gentoo/developer/patrick)
[09:19:19] *** Joins: Bitflux (~byte@byteflux.net)
[09:19:19] *** Joins: xcm_ (~xcm@static.90.45.69.159.clients.your-server.de)
[09:19:22] *** Joins: Yorick- (znc@vps.freegamehosting.eu)
[09:19:24] *** Joins: mschiff (~mschiff@mx10.schiffbauer.net)
[09:19:26] *** Joins: depesz (~quassel@lana.depesz.com)
[09:19:27] <e36freak> eh, awk is pretty simple, learning the basics shouldn't take too long
[09:19:28] *** Joins: xaxas (~quassel@nebulosa.jtopia.org)
[09:19:29] *** Quits: xcm_ (~xcm@static.90.45.69.159.clients.your-server.de) (Signing in (xcm_))
[09:19:29] *** Joins: xcm_ (~xcm@user/xcm)
[09:19:30] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[09:19:33] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[09:19:34] *** Quits: mschiff (~mschiff@mx10.schiffbauer.net) (Signing in (mschiff))
[09:19:34] *** Joins: mschiff (~mschiff@gentoo/developer/mschiff)
[09:19:37] *** Joins: Sketch_ (sketch@2604:180:2::a506:5c0d)
[09:19:42] *** Joins: pervaya (~pervaya@2001:41d0:602:3007::641b:b74c)
[09:19:51] *** Joins: pwndave (pwndave@is.ready-to.party)
[09:19:51] *** Joins: calaz (~calaz@user/calaz)
[09:19:57] *** Joins: bboles (~bboles@64.94.212.195)
[09:20:16] *** Sketch_ is now known as Sketch
[09:20:44] *** Joins: zaratustra (~zaratustr@user/zaratustra)
[09:20:46] *** Joins: j416 (~j416@user/j416)
[09:20:57] *** Joins: wuseman (~wuseman@90-230-133-31-no68.tbcn.telia.com)
[09:20:57] *** Quits: wuseman (~wuseman@90-230-133-31-no68.tbcn.telia.com) (Changing host)
[09:20:57] *** Joins: wuseman (~wuseman@user/wuseman)
[09:21:02] *** Joins: hata (~hata@hata.moe)
[09:22:20] *** Joins: VectorX (~VectorX@user/vectorx)
[09:22:21] *** Joins: sjs (~sjs@user/sjs)
[09:22:30] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:23:11] *** Quits: BrowseMan (~BrowseMan@78.130.185.116) (Changing host)
[09:23:11] *** Joins: BrowseMan (~BrowseMan@about/openbglab/browseman)
[09:24:17] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[09:24:36] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[09:28:02] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[09:30:01] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:04] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[09:31:18] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:27] *** Joins: Muzer (~muzer@tim32.org)
[09:35:30] <emanuele6> !learn EPOCHREALTIMEint the format of EPOCHREALTIME is %u%c%06u where %c is the decimal delimiter of the current locale (".", ",", ...). It can be converted to an integer using: $(( 10#${EPOCHREALTIME//[!0123456789]} ))
[09:35:30] <greybot> OK, emanuele6
[09:36:05] <KombuchaKip> e36freak: Want to recommend a book?
[09:37:44] <emanuele6> kurahaupo: the consensus on the bug-bash@ mailing list is that the issue you had that about $EPOCHREALTIME returning an incorrect (positive) value before the unix epoch is irrelevant; so i'm readding the factoid since the information is correct.
[09:38:01] <emanuele6> s/that about/about/
[09:38:56] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 258 seconds)
[09:39:21] *** Quits: Drek45 (~jrept371@102.129.153.207) (Ping timeout: 248 seconds)
[09:40:12] <e36freak> KombuchaKip: you can see the stuff in /topic #awk, i never did get around to writing a quality guide though. the GNU awk manual is solid if a bit long, and the POSIX docs are a good read
[09:40:59] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:41:04] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:44:43] <kurahaupo> e36freak:  It would be helpful to mention what the resulting integer means (microseconds since 1970 etc).
[09:44:43] <kurahaupo> As I mentioned before, that description assumes that the shell user understands printf specifiers, and struct timeval, and what localisation does, and that we'll never want nanosecond precision. I would prefer a description that doesn't make those assumptions
[09:45:51] <KombuchaKip> e36freak: I'll get the GNU awk manual.
[09:46:23] <kurahaupo> Technically it's "microseconds since 00:00 1 Jan 1970 UTC but not counting leap seconds", which just goes to show how badly broken time_t really is
[09:48:07] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[09:49:10] *** Quits: Bit_MCP (~Bit_MCP43@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Quit: Leaving)
[09:50:03] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[09:50:12] <kurahaupo> emanuele6: ^^^
[09:51:47] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[09:53:52] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: WeeChat 3.2)
[09:54:19] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[09:54:48] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Client Quit)
[09:55:12] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[09:56:06] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[09:56:28] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[09:57:56] *** Quits: dre (~dre@2001:8003:c932:c301:64b7:95dc:bc24:e941) (Quit: Leaving)
[09:58:36] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[09:59:18] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[10:00:10] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[10:01:48] *** Joins: sdu (~doo@185.44.146.64)
[10:02:23] <kurahaupo> emanuele6: My principal objection wasn't that it was wrong before 1970. Rather, that the actual C code is broken by making a half-baked attempt at localisation, with the result that it's neither useful for computation nor for showing users. And the factoid fails to provide a human interpretation of that snippet of C code.
[10:02:24] <kurahaupo> !learn EPOCHREALTIMEÎ¼s EPOCHREALTIME contains the UNIX epoch time as seconds since 1 Jan 1970 00:00 UTC, to microsecond resolution. The decimal point of the current locale is used, but not thousands separators. We recommend setting LC_NUMERIC=C before using it in calculations.
[10:02:24] <greybot> OK, kurahaupo
[10:02:48] <kurahaupo> !EPOCHREALTIMEÎ¼s
[10:02:48] <greybot> EPOCHREALTIME contains the UNIX epoch time as seconds since 1 Jan 1970 00:00 UTC, to microsecond resolution. The decimal point of the current locale is used, but not thousands separators. We recommend setting LC_NUMERIC=C before using it in calculations.
[10:05:07] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[10:09:02] <emanuele6> kurahaupo: it used to have a human interpretation, but that did not fit in a single factoid; also, bash has printf  
[10:09:50] <kurahaupo> Well, my version fits nicely in a factoid
[10:10:53] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Remote host closed the connection)
[10:11:16] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[10:11:39] <kurahaupo> sorry, lost internet for a moment
[10:12:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:12:30] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[10:12:41] *** Joins: lavaball (felix@31.204.155.215)
[10:14:47] <kurahaupo> !learn EPOCHREALTIMEÎ¼s2 Because of the localisation of EPOCHREALTIME, to convert it to microseconds you need to exclude any non-digits, like "${EPOCHREALTIME//[!0-9-]}"
[10:14:47] <greybot> OK, kurahaupo
[10:15:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[10:15:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:15:52] <emanuele6> you are just ignoring details
[10:18:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:24:05] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 244 seconds)
[10:24:21] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:25:00] *** Joins: totenkoph (~scythe@user/totenkoph)
[10:27:06] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[10:28:26] <kurahaupo> emanuele6: Of course I'm leaving out details that I think cloud rather than aid understanding. Which ones do you disagree with me about?
[10:29:10] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[10:29:12] <kurahaupo> emanuele6: Before you answer that, have you read both my factoids?
[10:30:16] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[10:31:16] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[10:31:48] *** Joins: manin (~X@185.242.190.95)
[10:31:51] *** Parts: PinealGlandOptic (~PinealGla@37.115.210.35) ()
[10:32:53] *** Joins: codebam (~codebam@user/codebam)
[10:33:13] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[10:33:35] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[10:34:59] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[10:35:36] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[10:35:46] *** Joins: dsrt^ (~dsrt@12.16.129.111)
[10:36:22] *** Joins: dre (~dre@2001:8003:c932:c301:64b7:95dc:bc24:e941)
[10:38:34] *** Quits: rwp (~invalid@havoc.proulx.com) (Ping timeout: 240 seconds)
[10:39:31] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[10:39:44] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[10:40:04] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[10:41:54] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (Client Quit)
[10:42:34] *** Quits: gpol (~gpol@135-23-207-205.cpe.pppoe.ca) (Ping timeout: 258 seconds)
[10:50:31] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 252 seconds)
[10:50:48] *** Joins: rwp (~invalid@havoc.proulx.com)
[10:54:23] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:57:05] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[10:59:08] *** Quits: MenschZwoNull (~MenschZwo@p200300c8571e370094ab5ecbac584ac2.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:59:11] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[11:00:01] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[11:03:08] *** Joins: rendar (~rendar@user/rendar)
[11:03:55] *** Joins: gpol (~gpol@135-23-207-205.cpe.pppoe.ca)
[11:06:07] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[11:07:48] *** Joins: codebam (~codebam@user/codebam)
[11:09:49] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[11:11:36] *** Quits: igemnace (~ian@user/igemnace) (Read error: Connection reset by peer)
[11:12:17] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[11:12:27] *** nvz_ is now known as nvz
[11:13:10] *** Joins: igemnace (~ian@user/igemnace)
[11:14:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[11:14:49] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[11:15:25] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[11:17:04] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[11:18:35] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:20:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[11:20:10] *** Quits: austin987 (~null@2603-8080-2700-d768-0000-0000-0000-0b6a.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:20:13] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[11:20:24] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[11:23:58] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[11:24:10] *** Quits: richardm75 (~richardm7@2600:8801:c502:1000:70aa:9625:efd2:122c) (Ping timeout: 240 seconds)
[11:26:10] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 240 seconds)
[11:27:18] *** Joins: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net)
[11:27:23] *** Quits: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net) (Client Quit)
[11:30:47] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[11:31:40] *** Joins: testuser321 (~wandering@157.119.104.249)
[11:32:19] *** Quits: gpol (~gpol@135-23-207-205.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[11:32:57] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 248 seconds)
[11:33:14] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[11:33:48] *** Joins: frostwork (~frostwork@user/frostwork)
[11:35:17] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[11:36:33] *** Joins: sazawal (~sazawal@182.64.58.123)
[11:38:15] *** Joins: gpol (~gpol@135-23-207-205.cpe.pppoe.ca)
[11:38:48] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:38:48] *** Joins: karakedi (~eAC53C340@user/karakedi)
[11:40:23] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[11:42:34] *** Joins: stevenm (~stevenm@195.62.218.122)
[11:43:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:43:38] *** Joins: sQVe (~sQVe@user/sqve)
[11:43:57] *** Quits: frm (~frm@user/frm) (Quit: frm)
[11:44:08] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 250 seconds)
[11:44:58] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 252 seconds)
[11:45:59] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[11:47:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[11:48:25] *** Quits: stevenm (~stevenm@195.62.218.122) (Ping timeout: 248 seconds)
[11:51:27] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[11:54:35] *** Joins: aakashi2001 (~aakashi20@103.61.255.12)
[11:54:35] *** Quits: aakashi2001 (~aakashi20@103.61.255.12) (Changing host)
[11:54:35] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[11:55:28] *** Quits: safe (~safe@cpe-74-64-165-24.nj.res.rr.com) (Quit: Leaving)
[12:01:40] *** Joins: manin (~X@185.242.190.95)
[12:01:40] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[12:01:42] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Ping timeout: 268 seconds)
[12:07:31] *** Parts: Kingsy_ (~chris@kingsy.co.uk) ()
[12:10:03] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[12:14:30] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[12:20:56] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:23:56] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[12:25:46] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[12:26:07] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[12:28:00] *** Joins: brelod (~me@87.74.198.187)
[12:28:34] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[12:30:40] *** Joins: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it)
[12:31:37] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[12:32:01] *** Joins: kurahaupo_ (~kurahaupo@pa49-195-177-144.pa.nsw.optusnet.com.au)
[12:32:46] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[12:34:49] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 248 seconds)
[12:35:34] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[12:36:48] *** Joins: Lutin (~Lutin@user/lutin)
[12:39:14] *** Joins: The_Loko (~The_Loko@79.116.18.231)
[12:44:16] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[12:45:04] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[12:46:04] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[12:46:22] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[12:46:26] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:47:10] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[12:47:39] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[12:48:01] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[12:48:07] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[12:48:26] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[12:48:34] *** Quits: pystardust (~pystardus@223.226.119.16) (Quit: nyaa~)
[12:50:27] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[12:52:01] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[12:53:10] *** Quits: testuser321 (~wandering@157.119.104.249) (Ping timeout: 252 seconds)
[13:00:34] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[13:03:34] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[13:06:27] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[13:08:07] <FreeBDSM> A shell script file with execute permission only will not run!Â  This is because any script file (including Perl scripts) cannot be executed directly by the system with anÂ exec()Â system call.Â  Instead the proper script interpreter (usually shell) is actually executed.Â  This interpreter in turn attempts toÂ readÂ the script file.Â  It is possible toÂ runÂ a script without execute permission by enteringÂ shÂ scriptÂ 
[13:08:25] <amosbird> Hello. What's wrong with this command:   ssh $somehost bash -c "pgrep clickhouse > /home/var/lib/clickhouse/clickhouse1/clickhouse-server.pid"
[13:09:01] <FreeBDSM> that's weird behavior if one can actually execute such a script (via 'bash myscript'), but not by default ('./myscript')
[13:09:44] *** Joins: docmax_ (~docmax@dynamic-077-000-201-074.77.0.pool.telefonica.de)
[13:10:18] <Soliton> amosbird: ssh takes a string of shell code.
[13:10:46] <Soliton> if you don't give it a single string it will make one by adding the arguments together with a space inbetween.
[13:10:48] <Bhavuk> FreeBDSM: To run ./myscript you need read & execute permissions.. but when you run 'bash myscript' you have the same permission on the shell (bash) and the shell uses the script as a command arguement hence executes it
[13:11:28] *** Quits: ponies (~ponies@203.111.95.26) (Quit: Lost terminal)
[13:11:41] <FreeBDSM> Bhavuk: I got it. It is weird, because the outcome is the same, but you have to achieve it differently in case of having just x instead of rx
[13:12:00] *** Quits: docmax (~docmax@dynamic-077-006-217-127.77.6.pool.telefonica.de) (Ping timeout: 268 seconds)
[13:12:07] <FreeBDSM> shell could handle such a case as a special one
[13:14:34] *** Joins: touraine (~igloo@44.229-131-109.adsl-dyn.isp.belgacom.be)
[13:17:40] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[13:20:09] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Quit: Client closed)
[13:20:51] <amosbird> Soliton: thanks
[13:21:07] *** Quits: touraine (~igloo@44.229-131-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[13:22:24] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[13:22:52] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 252 seconds)
[13:23:10] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:27:52] *** Joins: manin (~X@185.242.190.95)
[13:34:26] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[13:36:46] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[13:37:10] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[13:37:41] *** Joins: alzgh (~alzgh@user/alzgh)
[13:37:50] <alzgh> hello bash
[13:38:00] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[13:38:09] <alzgh> where in the man pages should I look for how bash handles config files?
[13:38:16] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[13:38:17] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[13:38:19] <alzgh> like which are loaded first and when, etc.
[13:38:24] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[13:39:07] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[13:41:51] <brelod> alzgh: there is an INVOCATION sesction right in the beginning
[13:42:06] <alzgh> thanks brelod 
[13:42:59] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[13:43:01] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[13:43:47] <brelod> now I'm seeing that the man on my system is a bit diff then the online one so here is a link to the online: https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#Bash-Startup-Files
[13:44:18] <alzgh> yeah, I saw such a difference too yesterday
[13:44:23] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:44:29] <alzgh> it was about pathname expansion
[13:44:34] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[13:44:39] <alzgh> the online one called it filename expansion
[13:45:10] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[13:46:15] <geirha> yeah, filename expansion and pathname expasnion are used interchangably
[13:47:06] <geirha> The manpage mostly calls it pathname expansion, but I think the online reference manual uses filename expansion because RMS meant it was better to call it that. When RMS says, Chet does
[13:47:55] <alzgh> what is RMS and Chet?
[13:48:05] <alzgh> sorry my ignorance :)
[13:48:23] <geirha> RMS is Richard Stallman, Chet is the (sole) bash maintainer
[13:48:34] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[13:49:15] <geirha> RMS: "Put this broken parallel code example in bash's documentation". Chet: "Ok, whatever"
[13:49:28] <alzgh> haha
[13:49:48] <alzgh> I like examples tho.
[13:49:49] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[13:50:02] <alzgh> it makes life easier for beginner folks like myself
[13:50:15] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:50:18] <alzgh> I'm gradually getting into the habit of readin and searching man pages.
[13:50:58] <alzgh> I think some experienced veterans sometimes forget that reading, searching and digest man pages is a not so easy skill in itself
[13:51:26] <alzgh> it needs time and effort to get used too
[13:51:48] <alzgh> also, a lot of background information that new people can't get over night
[13:52:05] <Soliton> examples are prefectly fine but they should not suggest bad habits.
[13:53:08] <alzgh> true
[13:53:12] *** Joins: jp11 (~jp@87-198-216-242.ptr.magnet.ie)
[13:53:19] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:56:47] <pj> do note that many, if not most, man pages do actually contain examples of usage.
[13:59:06] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[13:59:32] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[14:00:45] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[14:02:01] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[14:02:10] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[14:03:57] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[14:05:23] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Client Quit)
[14:05:48] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:06:47] *** Joins: thiras (~thiras@user/thiras)
[14:07:07] *** Quits: kurahaupo_ (~kurahaupo@pa49-195-177-144.pa.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[14:08:31] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[14:09:06] *** Quits: Bhavuk (~BTaneja@122.173.24.36) (Quit: Leaving)
[14:15:45] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[14:17:04] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[14:20:05] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[14:20:37] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 252 seconds)
[14:21:20] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[14:23:43] <djph> pj: that would involve reading though
[14:24:19] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Quit: Client closed)
[14:24:52] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:26:02] *** Joins: MenschZwoNull (~MenschZwo@p200300c85711050069caeca619944502.dip0.t-ipconnect.de)
[14:27:01] *** Joins: unixbhaskar (~user@191.96.227.59)
[14:27:37] *** Joins: riskoir (~karaixx@148.87.23.13)
[14:28:45] <riskoir> hi, can I pass a condition as an argument of a function?
[14:29:53] <pj> riskoir: I'm not entirely sure what you mean by that, you can pass arguments to functions.
[14:30:17] <Soliton> function arguments are strings just like with other commands.
[14:31:07] *** Joins: testuser321 (~wandering@157.119.104.249)
[14:34:04] <riskoir> https://pastebin.com/iFeqU3FE
[14:34:05] <pasteban> Paste is available without ads on https://pastebin.com/raw/iFeqU3FE
[14:34:05] <checkbot> riskoir: I think the problem is on line 17. Remove spaces around = to assign (or use [ ] to compare, or quote '=' if literal). See 4 issues on https://shellcheck.net/?id=cb13045
[14:34:30] *** Joins: ntwk (~ntwk@user/ntwk)
[14:35:07] <Soliton> no clue what that should accomplish.
[14:35:07] <emanuele6> the syntax does not make sense
[14:35:15] <emanuele6> !check > riskoir
[14:35:15] <checkbot> emanuele6: Line 1: This redirection doesn't have a command. Move to its command (or use 'true' as no-op). See https://shellcheck.net/?id=cb13115
[14:35:27] <emanuele6> !checks > riskoir
[14:35:32] <emanuele6> mm
[14:35:40] <emanuele6> ![ > riskoir
[14:35:40] <greybot> riskoir: [ or test is the POSIX test command. It can do simple tests on files and strings. In bash, you should use the more powerful [[ instead and ban [ for sake of consistency. [[ can do pattern matching, is faster and safer to use. http://mywiki.wooledge.org/BashGuide/TestsAndConditionals http://mywiki.wooledge.org/BashFAQ/031
[14:36:42] <emanuele6> !return > also
[14:36:42] <greybot> also: Every Unix process returns an exit status code to its parent. This is an unsigned 8-bit integer, 0 to 255 inclusive, with 0 meaning "success" and 1-255 meaning "failure". A script returns the exit status of the last command executed, unless you call "exit" with an argument. Functions "return" an 8-bit status code also.
[14:36:45] <riskoir> Soliton, example: foo bar=1 - foo must print yes if passed condition is true and 'no' otherwise
[14:36:47] <pj> you have a mis-understanding of what $() does.
[14:37:08] <pj> $() has nothing to do with the return value of the enclosed code.
[14:37:09] <emanuele6> i think you also misunderstood `return' from how you are using it in bar()
[14:37:17] <pj> yep
[14:40:11] <Lutin> emanuele6 what happened to version 1,2,3,4 and 5 ?
[14:40:47] <emanuele6> Lutin: what?
[14:41:13] <Lutin> emanuele6 you are number 6
[14:41:14] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[14:42:16] <riskoir> pj, forget $(), if you use foo bar=0, why NO is printed instead of YES ? 
[14:43:04] <riskoir> sorry I mean, if you use foo bar=1, why YES is printed instead of NO
[14:43:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[14:44:06] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:44:17] <emanuele6> ![ > riskoir 
[14:44:17] <greybot> riskoir: [ or test is the POSIX test command. It can do simple tests on files and strings. In bash, you should use the more powerful [[ instead and ban [ for sake of consistency. [[ can do pattern matching, is faster and safer to use. http://mywiki.wooledge.org/BashGuide/TestsAndConditionals http://mywiki.wooledge.org/BashFAQ/031
[14:44:32] *** Joins: Atque (~Atque@user/atque)
[14:45:01] *** Quits: unixbhaskar (~user@191.96.227.59) (Remote host closed the connection)
[14:45:37] <emanuele6> # str=''; if [ "$str" ]; then echo not-empty; else echo empty; fi # riskoir 
[14:45:38] <shbot> emanuele6: empty
[14:45:45] <emanuele6> # str='bar=1'; if [ "$str" ]; then echo not-empty; else echo empty; fi # riskoir 
[14:45:46] <shbot> emanuele6: not-empty
[14:47:37] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[14:47:43] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[14:48:05] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[14:48:27] *** Joins: cdown (~cdown@89.32.122.5)
[14:48:28] <riskoir> It is seeing bar=1 as a string, so it's not possible to evaluate bar=1? Pass a condition as an argument of a function?
[14:49:32] *** Joins: cdown_ (~cdown@163.114.131.1)
[14:49:37] <riskoir> And basically check if the passed condition evaluates to true (1) or false (0)
[14:49:49] <Bilge> You can't pass arrays can you?
[14:50:02] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[14:50:08] <Bilge> You just have to work with them globally
[14:50:25] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:50:50] <emanuele6> riskoir: check with what syntax of what programming language?
[14:51:45] <emanuele6> bar=1 is not bash syntax for "is the content of the variable named `bar' equal to 1"
[14:52:09] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[14:52:31] <riskoir> bar is a function that simply returns 0
[14:52:57] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 248 seconds)
[14:52:57] <emanuele6> see, i don't even understand what `bar=1' is supposed to mean in your example
[14:53:06] *** cdown_ is now known as cdown
[14:53:52] <riskoir> Imagine you want to have a generic function that would wait either until a condition is true or until a timeout is reached
[14:54:29] <emanuele6> i can imagine that
[14:54:31] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[14:54:38] <riskoir> I was trying to accomplish that, seeing if it was possible to pass a condition as argument of a function. And to evaluate such condition, it would be possible to call another function
[14:55:09] *** Quits: ByteSlayer (~byteslaye@user/byteslayer) (Quit: That's about it, see ya)
[14:55:23] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[14:55:40] *** Quits: cdown (~cdown@163.114.131.1) (Quit: https://chrisdown.name)
[14:55:52] <emanuele6> riskoir: even if i imagine that, you don't even seem to know how to call a function in bash
[14:55:53] *** Joins: cdown (~cdown@163.114.131.1)
[14:56:14] <riskoir> emanuele6, correct, that's why I came here for your help :-) 
[14:56:21] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Client Quit)
[14:56:25] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:57:06] <riskoir> But if we can only pass strings as argument of functions, then it won't work. Do you confirm this?
[14:58:19] <emanuele6> `python -c 'python code'' can only take strings too, but you can that code is not just a string
[14:58:42] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[14:59:04] <riskoir> It seems functions are not first class citizens in bash
[14:59:25] <emanuele6> if you are asking, can i implement a DSL that interprets `bar=1' as "is the exit status of the function named bar equal to 1", you surely can if you want to
[14:59:42] <riskoir> Can I pass a string that is the name of some function, and then make it call the function somehow
[15:00:03] <emanuele6> yes, but that requires knowing how to call functions
[15:00:16] <emanuele6> !$( > you do it like this by the way
[15:00:16] <greybot> you do it like this by the way: Command Substitution: "$(cmd "foo bar")" causes the command 'cmd' to be executed with the argument 'foo bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
[15:00:49] <emanuele6> !guide
[15:00:49] <greybot> http://mywiki.wooledge.org/BashGuide or in PDF: http://s.ntnu.no/bashguide.pdf
[15:05:28] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 268 seconds)
[15:06:04] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[15:07:38] *** Joins: legola (~legola@46.235.100.27)
[15:18:22] *** Quits: Guest8649 (~afernande@63.240.73.102) (Ping timeout: 252 seconds)
[15:22:04] *** Joins: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net)
[15:23:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Remote host closed the connection)
[15:23:59] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[15:24:04] *** Quits: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net) (Client Quit)
[15:25:39] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[15:25:59] <Soliton> riskoir: foo() { if "$@"; then echo YES; return 0; else echo NO; return 1; fi; }; foo bar arg1 arg2 ...
[15:28:18] <emanuele6> note that that would be =0, not =1
[15:29:01] <riskoir> I wanted to evaluate bar inside the function foo
[15:29:02] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[15:29:19] <Soliton> that's what happens.
[15:29:47] <Soliton> # bar() { return 0; }; foo() { if "$@"; then echo YES; return 0; else echo NO; return 1; fi; }; foo bar arg1 arg2 ...
[15:29:48] <shbot> Soliton: YES
[15:30:08] <riskoir> but is it possible to also add a condition in the argument? e.g., foo "test bar = 0"
[15:30:34] <emanuele6> riskoir: again, test bar = 0 does not mean what you think it means
[15:30:36] <Soliton> # foo() { if "$@"; then echo YES; return 0; else echo NO; return 1; fi; }; foo test "$bar" = 0
[15:30:37] <shbot> Soliton: NO
[15:32:25] *** Joins: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net)
[15:33:16] <Soliton> if you want to change how foo works you need to re-define it.
[15:33:53] *** Joins: Kingsy (~chris@kingsy.co.uk)
[15:34:41] <Kingsy> would it be a simple bas script to recursively look for directories that are named 1/ | 2/ or 3/ or 4/ all the way up to 10, and rename them to CD 1/ ... etc?
[15:35:01] <Soliton> !find
[15:35:01] <greybot> http://mywiki.wooledge.org/UsingFind
[15:35:20] <emanuele6> no need for find
[15:36:25] <Soliton> sure you can use globstar as well.
[15:36:50] <Soliton> need to take care to start from depth though.
[15:37:51] <Kingsy> yeah so find . -type d -name "1", etc, but I am not sure about the rename part afterwards.
[15:38:19] <emanuele6> you want to rename "1" to "CD 1", correct?
[15:38:23] <Kingsy> yes
[15:39:06] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:39:32] <emanuele6> for i in ./**/{1..10}/; do mv -- "$i" "CD $i"; done
[15:39:43] <emanuele6> with shopt -s globstar
[15:40:27] <emanuele6> oh oops, that is wrong
[15:40:46] <alzgh> `type vim` gitve "vim is hashed (/usr/bin/vim)
[15:40:53] <alzgh> what does the "hashed" part mean?
[15:40:54] <Soliton> not going to work with nested dirs.
[15:40:55] *** Quits: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[15:41:25] <alzgh> what are nested dirs?
[15:41:36] <Soliton> find new -depth -type d -name '[1-4]' -execdir sh -c 'for d in "$@"; do mv -- "$d" "CD $d"; done' findsh {} +
[15:42:02] <emanuele6> he wants 1/ .. 10/
[15:42:16] <Kingsy> well I can just change the 4 to a 10
[15:42:17] <emanuele6> so -name [1-9] -o - name 10
[15:42:27] <emanuele6> * -name [1-9] -o -name 10
[15:42:28] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[15:42:33] <alzgh> sorry Soliton I thought it was directed at me. ignore my question.
[15:42:52] <Soliton> find . -depth -type d \( -name '[1-9]' -o -name 10 \) -execdir sh -c 'for d in "$@"; do mv -- "$d" "CD $d"; done' findsh {} +
[15:43:10] <Soliton> well, still have to deal with ./
[15:43:23] <emanuele6> yeah
[15:43:44] <Kingsy> hrm I am a bit lost.
[15:44:00] <Soliton> find . -depth -type d \( -name '[1-9]' -o -name 10 \) -execdir sh -c 'for d in "$@"; do mv -- "$d" "CD ${d#./}"; done' findsh {} +
[15:44:15] <emanuele6> alzgh: bash saves the location of the vim executable (any executable you have called at least once) in an hashmap to avoid having to do a PATH lockup multiple times
[15:44:19] <emanuele6> see `help hash
[15:44:44] <alzgh> nice, thanks emanuele6 
[15:45:04] <Kingsy> thats going to do something like this -> mv -- ./1 CD 1 which isnt going to work because the script is being executed on the dir above.. unless the script is IN that dir when it runs the mv?
[15:45:08] <Kingsy> Soliton: ^
[15:45:29] <Soliton> you can read about -execdir.
[15:46:30] <emanuele6> if you even want to force a path lookup for some reason, you can either use `command -P cmd arg1 arg2' to run your `cmd' or `hash -r' to clear the cache 
[15:47:57] <Kingsy> Soliton: thank you.
[15:49:29] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[15:50:03] *** Quits: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net) (Quit: Yssk)
[15:50:10] *** Quits: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[15:50:35] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:50:40] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:53:01] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[15:53:10] *** Joins: legola_ (~legola@46.235.100.27)
[15:53:54] <wwilliam> !ssh
[15:53:54] <greybot> Secure SHell (#openssh, http://mywiki.wooledge.org/CategorySsh). To run rm "$localVar" remotely, use: printf 'rm %q\n' "$localVar" | ssh user@host bash
[15:53:59] <wwilliam> !tar
[15:53:59] <greybot> tar is an archiver but not the only one. Usually tar is a good choice (e.g. to duplicate an ENTIRE file system), but if you need fine-grained control, find|cpio or find|pax wins
[15:54:38] <wwilliam> how do i tar remote dir and save it on local server executing command from local server?
[15:54:48] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[15:56:05] <Bilge> You can't pass arrays to functions can you?
[15:56:19] <Soliton> correct
[15:56:32] <Soliton> you can pass the expansion of one.
[15:56:43] <Soliton> or you can do nameref shenanigans.
[15:57:34] <Soliton> !scp > wwilliam
[15:57:34] <greybot> wwilliam: "The scp protocol is outdated, inflexible and not readily fixed." <https://www.openssh.com/txt/release-8.0> If you have problems with scp, stop using it. Consider sftp or rsync, or ssh u@h 'cat > remotefile' < localfile, or tar cf - dir | ssh u@h 'cd /somewhere && tar xf -'
[15:58:05] <Soliton> just have to put ssh on the left side in that example.
[16:01:09] <wwilliam> OK Thank you.
[16:01:47] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[16:04:18] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[16:04:38] <wwilliam> Well that looks like is being executed on the remote host firewall here dont allow that , i need to do it from local like tar remote dir save on local thrye ssh.
[16:04:48] <wwilliam> thrue ssh.
[16:05:24] <Soliton> you want to tar a remote dir through ssh but you cannot call tar on the remote?
[16:05:42] <wwilliam> Yes I can call tar on the remote.
[16:06:08] <Soliton> no clue what your problem is then.
[16:09:10] <emanuele6> ssh u@h 'tar cf - /path/to/remote/dir' > local.tar
[16:09:30] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:fc56:81d6:ed7b:e2ba)
[16:09:30] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:fc56:81d6:ed7b:e2ba) (Changing host)
[16:09:30] *** Joins: skapata (~Skapata@user/skapata)
[16:09:36] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[16:11:54] *** Joins: kurahaupo (~kurahaupo@pa49-195-177-144.pa.nsw.optusnet.com.au)
[16:12:48] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[16:13:51] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[16:13:59] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[16:13:59] <wwilliam> Thanks emanuele6 
[16:16:07] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[16:17:21] *** Joins: besnn (~besnn@user/besnn)
[16:19:27] *** Quits: aaro (~aaro@user/aaro) (Quit: WeeChat 3.2)
[16:21:04] *** Joins: sazawal_ (~sazawal@182.64.58.123)
[16:21:08] *** Quits: sazawal (~sazawal@182.64.58.123) (Read error: Connection reset by peer)
[16:23:01] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[16:24:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[16:35:58] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[16:36:02] *** Quits: riskoir (~karaixx@148.87.23.13) (Quit: Leaving)
[16:37:03] *** Joins: aaro (~aaro@user/aaro)
[16:37:28] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[16:41:37] *** Joins: n4dir (~user@88.130.152.92)
[16:41:48] *** Quits: hendrix (~hendrix@user/hendrix) (Ping timeout: 276 seconds)
[16:42:19] *** Joins: UrsoBranco (~UrsoBranc@170.244.200.200)
[16:45:30] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[16:47:36] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[16:50:11] *** Joins: arinov (~arinov@213.194.126.155)
[16:50:17] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 248 seconds)
[16:50:40] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[16:50:40] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 240 seconds)
[16:54:31] *** Joins: Psi-Jack (~psi-jack@user/psi-jack)
[16:56:47] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[16:56:52] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Remote host closed the connection)
[16:57:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[17:03:36] *** Quits: derpadmin (~derpadmin@cloudbase2.200013.net) (Ping timeout: 258 seconds)
[17:08:12] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[17:08:54] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:09:36] *** Quits: alzgh (~alzgh@user/alzgh) (Read error: Connection reset by peer)
[17:10:10] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[17:11:11] *** Joins: Ps1-Jack (psi-jack@user/psi-jack)
[17:13:35] <Ps1-Jack> Hmmm. From a FQDN, is there a simple way to split that into the hostname and domain name?
[17:13:55] <Psi-Jack> Oh now matrix works? 
[17:14:51] <lopid> # IFS=. read -r host domain <<<foo.bar.baz; declare -p host domain
[17:14:52] <shbot> lopid: declare -- host="foo"
[17:14:53] <shbot> lopid: declare -- domain="bar.baz"
[17:15:29] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[17:15:35] <Ps1-Jack> # IFS=. read -r host domain <<<my.foo.bar.baz; declare -p host domain
[17:15:36] <shbot> Ps1-Jack: declare -- host="my"
[17:15:36] <shbot> Ps1-Jack: declare -- domain="foo.bar.baz"
[17:16:03] <Psi-Jack> And that there lies part of the problem.
[17:16:34] <lopid> then you can't identify from a string what's what
[17:16:43] <earnestly> Psi-Jack: No there isn't a simple way
[17:16:51] <earnestly> You have to use lookup tables
[17:17:09] <earnestly> Psi-Jack: See https://wiki.mozilla.org/Public_Suffix_List
[17:17:31] <Psi-Jack> Yeah, to determine what needs 2 parts, and what needs 3 parts, etc?
[17:17:37] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[17:18:04] <earnestly> n parts
[17:18:27] <lopid> and subdomain may or may not equal hostname
[17:19:05] <djph> the answer there isn't wrong on either count... 
[17:19:18] <Ps1-Jack> Well, in a DNS record it generally would either be hostname, or @
[17:19:31] *** Joins: zeden (~zeden@user/zeden)
[17:19:53] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Ping timeout: 268 seconds)
[17:20:41] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[17:21:43] <Ps1-Jack> I'm working with an Dynamic IP Update agent using Linode API, and they work with the domain name for domains, and hostname for records. Heh, And me, trying to take just a FQDN and matching it up to a domain and using that to figure out the hostname part.
[17:22:07] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[17:22:25] *** Joins: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it)
[17:22:33] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:23:12] <djph> ew
[17:23:26] <djph> why not just use 'hostname' ?
[17:23:28] <lopid> sounds like the two of you are working on the exact same thing
[17:23:46] *** Joins: lavaball (felix@31.204.155.215)
[17:23:51] <djph> I think Ps1-Jack is Psi-Jack 
[17:24:00] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[17:24:05] <Psi-Jack> Yes, sorry, Matrix was having an issue this morning.
[17:24:08] <djph> one of them is just a traitor, and using some other service.
[17:24:10] <djph> :D
[17:27:50] <Psi-Jack> By the looks of it, it might be simpler to just use a manual split in the input hosts. Like `host:domain.name`
[17:28:11] *** Quits: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr) (Quit: All for nothing)
[17:28:27] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:28:33] *** Joins: AndrewYu (~andrew@user/andrewyu)
[17:30:06] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[17:30:29] <eggbean> I'm making a script which generates a config file using heredocs. I have variables in it, but is it possible to conditionally add lines to it?
[17:30:40] *** Quits: wwilliam (~Wiilliam@user/wwilliam) (Quit: Konversation terminated!)
[17:31:18] <eggbean> Like the only way I can think is to use sed on the file after it already exists
[17:31:21] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:31:28] <lopid> "if" and ">>"?
[17:31:49] *** Joins: zeden (~zeden@user/zeden)
[17:32:03] <eggbean> lopid: I'll have a look into that. cheers
[17:32:24] <emanuele6> or if ...; then var=bla; else vaRr; fi; cat > conf << EOF ... $var EOF
[17:32:30] *** Joins: wwilliam (~Wiilliam@user/wwilliam)
[17:32:38] <emanuele6> s/varRr/var=/
[17:33:21] <kurahaupo> Ps1-Jack: I've never understood why some database designers insist on splitting up things for no good reason. My hostnames are always99,99 FQDNs and I really don't see any point in using ambiguous abbreviations.
[17:33:28] <eggbean> thanks. looks quite a lot for just the additional line
[17:33:59] *** Joins: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3)
[17:34:36] <Soliton> a conditional looks like quite a lot to do something conditionally??
[17:34:58] <Psi-Jack> kurahaupo: Heh yeah. That's actually not the issue though. LOL. The issue is hitting Linode API, and searching for a domain name, from the list of domains served, and then to find the record you search by the id provided by said domain name, and search for the hostname part, not the domain name part. 
[17:35:23] <Psi-Jack> And this is all between bash and jq, maybe sed and awk where need-be.
[17:35:29] *** Joins: greycat (~greg@209.142.155.49)
[17:36:02] <kurahaupo> eggbean: { cat <<H1 â¦ H1 â¦ if condition ; then cat <<H2; fi â¦ H2 â¦ cat <<H3 â¦ H3 â¦ } > file.conf
[17:36:10] <Psi-Jack> That actually makes me think though. I wonder how acme.sh does it. :)
[17:36:26] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[17:37:01] <kurahaupo> Psi-Jack: that's frigging insane! Whyyy!??
[17:37:02] *** Quits: furrymcgee (~devuan@31.179.186.66) (Remote host closed the connection)
[17:37:06] <eggbean> kurahaupo: thanks
[17:37:10] *** Joins: furrymcgee (~devuan@31.179.186.66)
[17:37:22] <Psi-Jack> Why are domain names and prefixes, so many?
[17:37:49] <Psi-Jack> And why hostname vs domain name? bind zone vs record, too. 
[17:39:12] <kurahaupo> eggbean: The heredoc starts after the next newline after the <<EndMark, and in the meantime the shell keeps parsing for commands & arguments.  So it's perfectly valid to write: if foo; the cat <<E ; fi (newline)99,99 â¦ (newline)99,99 E
[17:39:14] *** Quits: aaro (~aaro@user/aaro) (Read error: Connection reset by peer)
[17:39:17] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[17:40:22] <kurahaupo> that is, you don't have to put the "fi" after the heredoc, you can put it before it starts
[17:40:46] *** Joins: pystardust (~pystardus@223.226.119.16)
[17:40:46] <eggbean> ic. cheers
[17:41:03] <greycat> kurahaupo has the most evil IRC client ever, it seems
[17:42:08] <kurahaupo> And you can stack more than one: cat <<E1 ; test && cat <<E2 ; cat <<E3 (newline) â¦ E1 â¦ E2 â¦ E3
[17:42:26] <emanuele6> !$*
[17:42:26] <greybot> The difference between $@ and $*: "$@" (quoted) expands to each positional parameter as its own argument: "$1" "$2" ... while "$*" expands to the single argument "$1c$2c..." where c is the first character of IFS. You almost always want "$@". The same goes for arrays: "${array[@]}" or "${array[*]}". Unquoted $* and $@ are undefined; DO NOT use.
[17:42:30] <kurahaupo> greycat: Hmmm?
[17:42:48] <greycat> your client sends these weird escape sequences to produce "italics" or something
[17:43:06] <greycat> So it's perfectly valid to write: if foo; the cat <<E ; fi ^](newline)^O^C99,99 â¦ ^](newline)^O^C99,99 E
[17:43:24] <emanuele6> greycat: i don't see those in weechat
[17:43:24] <kurahaupo> Surely99,99 not!99,99 
[17:43:41] *** Quits: legola_ (~legola@46.235.100.27) (Remote host closed the connection)
[17:44:00] <lopid> looks like greycat has the most evil irc client ever
[17:44:02] <kurahaupo> greycat: So your IRC client doesn't do mirc codes?
[17:44:05] <greycat> It "works" on my client as well (I see them as italics and stuff), but it's certainly weird and unique, and he's got those unprintable bytes in at least one bot factoid now
[17:44:29] <kurahaupo> lopid: ð
[17:44:49] <lopid> ?
[17:44:49] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[17:45:08] <lopid> i just saw the letter E or H followed by a number
[17:45:15] <emanuele6> yesterday we were wondering if x=$* was defined by posix since the !$* factoid says it is not
[17:45:31] <emanuele6> we looked at the spec and it turns out that posix explicitly defines them
[17:45:42] <kurahaupo> emanuele6: The RHS of assignment behaves as if double quoted
[17:45:44] <greycat> root@remote:/home/greybot/factoids# grep -r 99.99 . | cat -v
[17:45:44] <greycat> ./source:''. ^]scriptname''^O^C99,99 (or ''source ^]scriptname''^O^C99,99, which is not portable) reads and executes the commands from ^]scriptname^O^C99,99 in the ^_current^O^C99,99 shell, as opposed to a separate instance of the shell. If ^]scriptname^O^C99,99 does not contain a slash (/), it will be searched for in $PATH.
[17:46:18] <kurahaupo> !source
[17:46:18] <greybot> ''. scriptname''99,99 (or ''source scriptname''99,99, which is not portable) reads and executes the commands from scriptname99,99 in the current99,99 shell, as opposed to a separate instance of the shell. If scriptname99,99 does not contain a slash (/), it will be searched for in $PATH.
[17:46:21] <emanuele6> kurahaupo: https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html
[17:46:25] <emanuele6> see section 5.2.5
[17:46:31] <pystardust> I use the bash vi-style mode of readline. I just found out that ctrl-n ctrl-p autocompletion selection. This blew my mind. I couldn't find this in the manual. Where can i find the vi-mode defaults
[17:46:33] <emanuele6> it explicitly defines $* and $@
[17:46:54] <emanuele6> what it doesn't define is the behaviour of stuff like "hello $@" 
[17:47:26] <lopid> is C-n vi-mode only? looks for "READLINE"
[17:47:30] <lopid> -s
[17:47:43] <greycat> C-n is "move down to the next line" in emacs mode
[17:48:07] <pystardust> lopid: yes c-n in vi mode is nowhere to be found in the manual, its defined for the default mode
[17:48:27] <greycat> formally mapped to "next-history" according to the man page
[17:48:28] <emanuele6> c-n is menu-complete
[17:48:35] <emanuele6> (in vi mode)
[17:48:44] <emanuele6> it is not bound by default in emacs mode
[17:48:45] <greycat> so it seems, yes
[17:49:06] <pystardust> but how do i know what these defaults are?
[17:49:10] <greycat> ... "so it seems" referring to the menu-complete thing, not the claim that it has no default meaning ni emacs mode
[17:49:22] <greycat> pystardust: bind -p
[17:49:32] <geirha> bind -m vi-insert -p
[17:49:36] <geirha> and the same for vi-command
[17:49:39] <pystardust> ahhh, nice
[17:51:28] <pystardust> just wondering can i make my own custom modes?
[17:51:39] <kurahaupo> emanuele6: Given that "$@" splits into args to match the original, and adjacent strings (like foo"$bar") are simply concatenated, the behaviour "foo$@" seems fairly obvious to me
[17:52:26] <greycat> "foo$@bar" with quotes expands to the same thing as "$@" except that the first word in the list has "foo" prepended to it, and the last word in the list has "bar" appended to it
[17:52:39] <emanuele6> greycat: you added "Unquoted $* and $@ are undefined; DO NOT use." to the factoid. am i misinterpreting the spec? they seem to be explicitly defined, what is unspecified is stuff like "a $@" 
[17:53:17] <greycat> Undefined may not be technically true.  What's true in the real world is it's full of bugs and the results are unpredictable across real-world shells.
[17:53:28] <kurahaupo> emanuele6: "undefined" is a poor choice of word; "very strongly discouraged" would be better
[17:53:33] <greycat> !unquoted
[17:53:33] <greybot> Unquoted $@ and $* give unspecified behavior (as far as we can tell). Always quote them. A partial list of various unquoted behaviors by shell is here: http://wiki.bash-hackers.org/syntax/pe#bugs_and_portability_considerations
[17:54:00] <emanuele6> i see
[17:54:39] <kurahaupo> The behaviour is defined and specified, but it will be unpredictable in the sense that the reader often won't know enough to say for certain what will happen
[17:54:45] <pystardust> geirha: where can i find the decription of what each of those commands do? like for example vi-column is bound to pipe, i wanna know what it does
[17:54:52] <greycat> man bash
[17:54:58] <pystardust> man bash doesm
[17:55:06] <pystardust> doesn't have, with a search no results
[17:55:08] <kurahaupo> pystardust: Read the documentation for vi?
[17:55:26] <geirha> search for: bind \[
[17:56:13] <kurahaupo> pystardust: in vi, n99,99| will move the cursor to column n99,99.
[17:56:34] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[17:56:43] <pystardust> oh, thanks, by column as in line?
[17:56:57] <kurahaupo> (where n99,99 is a string of digits not starting with 0)
[17:57:41] <kurahaupo> 1| is equivalent to ^ and 999999| is roughly equivalent to $
[17:57:59] <greycat> 1| is equivalent to 0, not ^
[17:58:06] <pystardust> ah got it, :)
[17:58:21] <kurahaupo> greycat: point taken. ^ skips leading spaces
[17:58:27] <greycat> ^ moves to the first non-whitespace character, and 0 moves to column 1
[17:58:55] <xx> 'case $var in' *never* needs quoting the "$var", but what about 'for i in $var'? Can I also *never* quoute the "$var"?
[17:59:06] <kurahaupo> I'm not in the habit of indenting lines that I type into a shell prompt
[17:59:06] <pystardust> is there a way we can traverse the nth argument, i do 0<n>w, where <n> is the argument, but this doesn't work for quoted args
[17:59:15] <greycat> if you don't quote $var in that one, you get word splitting and globbing
[17:59:21] *** Joins: legola (~legola@46.235.100.27)
[17:59:34] <greycat> # var=/*; for i in $var; do printf '<%s> ' "$i"; done
[17:59:35] <shbot> greycat: </bin> </dev> </etc> </init> </lib> </lib64> </proc> </root> </tmp> </usr> </var>
[17:59:36] <Soliton> just don't do for i in $var. quoted or not.
[17:59:52] <kurahaupo> xx: `for i in $var` is a bad idea. Use an array instead
[17:59:53] <Soliton> no need for a loop for just one item.
[18:00:26] <xx> I need a bashfaq link for this
[18:00:43] <greycat> for properly quoting?  every page.  every.  single.  page.
[18:00:45] <pystardust> why not do for i in $var after doing set -f to remove globbing
[18:00:53] <Soliton> !drlwf
[18:00:53] <greybot> https://mywiki.wooledge.org/DontReadLinesWithFor ... "for" is for iterating arguments/arrays, not strings. Never do: for x in $(cat file), or for x in $var; instead, use a glob (*.txt), an array ("${hosts[@]}") or a while-read loop. See also https://mywiki.wooledge.org/BashPitfalls#pf1
[18:00:54] <greycat> why not use a god damned array
[18:00:56] <kurahaupo> Soliton: Sometimes single-iteration "loops" can be useful for flow control using continue/break
[18:01:16] <greycat> why do people CONSTANTLY try to PUSH US
[18:01:34] <pystardust> why is it so bad? why not make new line IFS and do for loop with file globbing of ?
[18:02:00] <pystardust> curious, not trying to tell its a good way or anything
[18:02:17] <xx> greycat: because I don't know how to use arrays in bash yet
[18:02:23] <greycat> !faq 5
[18:02:23] <greybot> https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[18:02:26] <xx> hence I make do with what I already know
[18:02:28] <kurahaupo> pystardust: Because in the general case, you cannot guarantee that the eventual user of your script won't supply inputs that break it
[18:02:36] <Soliton> "Notice that the syntax is now longer than that of the while loop -- and we still lost the blank line!"
[18:02:42] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[18:02:56] <kurahaupo> pystardust: Whereas if you use an array, there's no input that can break it
[18:03:01] <xx> currently, myvar="option1 option2 option3" and I iterate over that using 'for i in $myvar'
[18:03:11] <greycat> STOP THAT
[18:03:13] <greycat> !lists
[18:03:13] <greybot> In bash, a list of things is expressed using arrays: things=( Bob "Long John" /home/* ). Do NOT use string variables (things="Bob Long John /home/*") and do NOT use wordsplitting: for thing in $(find /things/*). See !arrays !wordsplitting !drlwf !quotewhen
[18:03:17] <xx> I realize that now, thanks
[18:03:26] <pystardust> kurahaupo: hmmm, thanks
[18:03:29] <Soliton> myvar=(option1 option2 option3); for i in "${myvar[@]}"
[18:03:59] *** leftyfb_ is now known as leftyfb
[18:04:16] <kurahaupo> xx: Myvar=( option1 option2 option3 ) ; â¦ for i in "${options[@]}"; do â¦ ; done
[18:04:17] <xx> shellcheck should really add tests for this
[18:04:18] *** Quits: leftyfb (leftyfb@wargames.left-click.org) (Changing host)
[18:04:18] *** Joins: leftyfb (leftyfb@ubuntu/member/leftyfb)
[18:04:30] <kurahaupo> Soliton: *snap*!!
[18:04:45] <greycat> !check list="option1 option2 option3"; for i in $list; do echo "$option"; done
[18:04:46] <checkbot> greycat: Line 1: option is referenced but not assigned. Line 1: i appears unused. Verify use (or export if used externally). See https://shellcheck.net/?id=cb25686
[18:04:48] <pystardust> IFS=$'\n'; arr=( $(ls -1) ) ; for i in "${arr[@]}" ...., is this stupid ?
[18:04:57] <greycat> grr, crap
[18:05:00] <kurahaupo> only yours didn't have a typo
[18:05:03] <Soliton> can you just read the wiki link, pystardust?
[18:05:04] <greycat> !check list="option1 option2 option3"; for i in $list; do echo "$i"; done
[18:05:04] <checkbot> greycat: Looks good to me
[18:05:12] <greycat> pystardust: yes.
[18:05:20] <greycat> !pf 1 > pystardust 
[18:05:20] <pystardust> Soliton: sorry, ill read it
[18:05:20] <greybot> pystardust: https://mywiki.wooledge.org/BashPitfalls#pf1 -- Don't do this! -- for f in $(ls *.mp3)
[18:05:22] <kurahaupo> pystardust: What happens when you have a filename with an embedded newline?
[18:05:32] <pystardust> :( kurahaupo yeah thats stupid
[18:05:55] <greycat> !ls-1
[18:05:55] <greybot> When ls's output is not a terminal, the -1 option is automatically enabled. If you see someone write ls -1 | ... or x=$(ls -1) or similar, you have your work cut out for you.
[18:05:55] <pystardust> sorry for the annoyance
[18:05:58] <kurahaupo> Or an embedded * or ? or [abc]
[18:06:53] <pystardust> kurahaupo: thats why i did, set -f
[18:07:02] <greycat> not in your latest example, you didn't
[18:07:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[18:07:30] <pystardust> yeah, forgot, but the newline would mess it up either way
[18:07:50] <pystardust> hey, so if you have to use an external util and put it in an array, what would you do?
[18:08:01] <xx> 'for i in "${options[@]}"' do I need to quote the "${options[@]}" there?
[18:08:12] <xx> does it change the functionality?
[18:08:15] <greycat> You have to analyze the input coming from it and decide on a *strategy* for how to separate it into its component pieces correctly.
[18:08:24] <greycat> xx: yes
[18:09:06] <greycat> pystardust: in an ideal case, it will be something like "one item per line", and then you just use mapfile -t
[18:09:24] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[18:09:32] <pystardust> greycat: woah that looks cool
[18:09:35] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:09:58] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 252 seconds)
[18:11:25] *** Quits: wwilliam (~Wiilliam@user/wwilliam) (Read error: Connection reset by peer)
[18:14:48] <kurahaupo> greycat: To respond to your earlier comment about italics, it has been a long-standing convention in typesetting to use italics for unbound parameters, so I'm simply following an established norm - one that is less ambiguous than âcmd <file> outputâ when <> are meaningful to the shell
[18:15:27] <greycat> It leaves the factoids a mess if you view them through a web browser.
[18:15:38] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[18:15:38] <kurahaupo> Who would do that?
[18:15:42] <emanuele6> !`irc 
[18:15:57] <greycat> !meta source
[18:15:58] <greybot> kurahaupo 1628481234(2021-08-09) learn ''. scriptname''99,99 (or ''source scriptname''99,99, which is not portable) reads and executes the commands from scriptname99,99 in the current99,99 shell, as opposed to a separate instance of the shell. If scriptname99,99 does not contain a slash (/), it will be searched for in $PATH.
[18:16:02] <greycat> !metaurl source
[18:16:02] <greybot> https://wooledge.org/~greybot/meta/source
[18:16:10] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[18:16:18] <emanuele6> !meta `irc
[18:16:18] <greybot> e36freak 1339015429(2012-06-06) learn DO NOT use back ticks as "irc markup". They are _syntax_, and using them as such can do nothing except lead to confusion
[18:16:35] <emanuele6> !`irc
[18:16:35] <greybot> DO NOT use back ticks as "irc markup". They are _syntax_, and using them as such can do nothing except lead to confusion
[18:19:24] *** Joins: wwilliam (~Wiilliam@user/wwilliam)
[18:19:47] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 240 seconds)
[18:20:44] *** Parts: odinsbane (~mbs@pat-pool-138.crick.ac.uk) ()
[18:24:28] <geirha> the codes are rather pointless too, \0x0f which is reset followed by  \x03 99,99 which sets default foreground and background color, but there hasn't been any colors or hightlights before them
[18:25:59] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[18:27:15] <geirha> and the position of the resets seem random. No pattern that I can see
[18:27:20] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[18:28:10] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[18:28:31] *** Quits: greybot (~greybot@remote.wooledge.org) (Remote host closed the connection)
[18:28:39] <geirha> oh wait, missed the 1d and 1f
[18:28:41] *** Joins: greybot (~greybot@remote.wooledge.org)
[18:29:46] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:30:23] <greycat> greybot's cmd_recall now trims trailing whitespace, so things like "!`irc " won't fail
[18:33:10] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[18:33:54] *** Joins: ntwk (~ntwk@user/ntwk)
[18:34:37] <zeraphel> what's the proper way to check weather a variable is defined / set while set -u is on
[18:35:11] <greycat> The proper way is not to use -u in the first place, but the hack you want is ${var+defined} probably.
[18:35:14] <geirha> for string variables, [[ -v var ]]
[18:35:26] * greycat bets on sh here
[18:36:59] <zeraphel> geirha: thank you again
[18:39:21] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:39:37] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[18:40:27] *** Joins: aaro (~aaro@user/aaro)
[18:42:40] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[18:42:51] *** Quits: uzee (~uzee@86.36.37.198) (Quit: Leaving)
[18:43:22] *** Joins: uzee (~uzee@86.36.37.198)
[18:46:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[18:47:27] *** Quits: sdu (~doo@185.44.146.64) (Ping timeout: 240 seconds)
[18:51:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[18:51:23] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:52:33] *** Joins: julius_c (~julius_c@140.red-88-0-63.dynamicip.rima-tde.net)
[18:56:04] *** Quits: UrsoBranco (~UrsoBranc@170.244.200.200) (Quit: leaving)
[18:56:23] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:57:32] *** Joins: Guest8649 (~afernande@73.197.2.152)
[19:01:35] *** Joins: sdu (~doo@185.44.146.64)
[19:01:49] <utis> if the current process is from a symlinked program, how might one get the path of the target?
[19:02:03] *** Joins: gnoo (~gnoo@user/gnoo)
[19:02:22] <greycat> !faq location
[19:02:22] <greybot> https://mywiki.wooledge.org/BashFAQ/028 -- How do I determine the location of my script?  I want to read some config files from the same place.
[19:02:26] <greycat> and *plonk*
[19:04:15] <utis> *thanks*
[19:05:47] *** Joins: fonsy (~fonsy@84.247.210.222)
[19:07:24] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Remote host closed the connection)
[19:07:32] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[19:07:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[19:09:07] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Ping timeout: 240 seconds)
[19:12:03] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:12:31] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:14:25] *** Joins: gmcastil (~gmcastil@50-206-38-118-static.hfc.comcastbusiness.net)
[19:14:54] *** Joins: hendrix (~hendrix@82-128-143-174.rev.dnainternet.fi)
[19:14:54] *** Quits: hendrix (~hendrix@82-128-143-174.rev.dnainternet.fi) (Changing host)
[19:14:54] *** Joins: hendrix (~hendrix@user/hendrix)
[19:15:11] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[19:15:51] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[19:20:41] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 248 seconds)
[19:23:26] *** Joins: NeoCron (~NeoCron@45.158.175.19)
[19:26:25] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[19:27:22] *** Quits: fonsy (~fonsy@84.247.210.222) (Remote host closed the connection)
[19:29:07] *** Joins: cdown_ (~cdown@89.32.122.5)
[19:30:35] *** Quits: n4dir (~user@88.130.152.92) (Remote host closed the connection)
[19:31:27] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[19:31:29] *** cdown_ is now known as cdown
[19:33:53] *** Joins: richardm75 (~richardm7@2600:8801:c502:1000:f0e3:8185:b9d:feb7)
[19:36:50] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[19:36:52] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[19:38:08] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[19:39:00] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[19:39:35] *** Joins: ede (~ede@user/ede)
[19:40:44] *** Joins: Bit_MCP (~Bit_MCP43@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[19:41:04] *** Joins: timj (~timj@user/timj)
[19:45:07] <wwilliam> this line is creating a subdir of the zip like this if the zip is foo.zip  is creating  foo/foo/contents  how can i make it just foo/contents?
[19:45:08] <wwilliam> for f in *.zip;do base=${f%.zip};if [[ ! -d "$base" ]]; then find . -maxdepth 1 -type f -name "*.zip" | parallel 'mkdir {.} && cd {.} && unzip ../{}'; fi;don
[19:45:34] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 250 seconds)
[19:46:27] * greycat wonders what in the hell {.} and {} do in GNU parallel, and is not going to run experiments to find out
[19:46:42] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:46:52] <wwilliam> Ok greycat anyother way?
[19:46:54] <greycat> however, did you even LOOK at the command which you apparently did not write?
[19:47:00] <greycat> Seriously, look at it.
[19:47:02] *** Joins: jinsun (~quassel@user/jinsun)
[19:48:58] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[19:49:41] <greycat> Now, look at your question.  You wanted to avoid making an extra level of directories.
[19:49:50] <wwilliam> Yes please.
[19:50:02] <greycat> Now look at the command you randomly stole from the trash bin.  What does it FUCKING DO?
[19:50:32] <greycat> It makes a directory and cd's into it and then does the extraction.
[19:50:36] <greycat> Now apply brain.
[19:50:37] <wwilliam> looks for zips then looks if dirs without the zips are present
[19:50:48] *** Joins: aead (~aead@user/aead)
[19:50:52] <wwilliam> if not create the directories and unzip
[19:50:56] <wwilliam> supposely.
[19:51:27] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[19:51:30] <wwilliam> dont cd into it?
[19:51:36] <wwilliam> and unzip?
[19:51:48] *** Joins: jinsun (~quassel@user/jinsun)
[19:52:59] *** Quits: MenschZwoNull (~MenschZwo@p200300c85711050069caeca619944502.dip0.t-ipconnect.de) (Quit: Leaving)
[19:54:12] *** Joins: jeroen_ (~jeroen@82-217-106-119.cable.dynamic.v4.ziggo.nl)
[19:54:34] <jeroen_> export f=file-test.csv
[19:54:35] <jeroen_> awk -v file=$f -F ',' '($1~/2/){print "INSERT INTO TEST("$1","file")" }' $f 
[19:54:45] <jeroen_> if I replace the 2 with 
[19:55:01] <greycat> !injection
[19:55:01] <greybot> Don't pass user-supplied data in a context where it could be interpreted as code. BAD: ssh host "rm $file"; GOOD: ssh host "$(printf 'rm %q' "$file")"; see http://mywiki.wooledge.org/BashProgramming/05
[19:55:11] <Soliton> missing quotes.
[19:55:25] <greycat> Missing *two* sets of quotes, but the code injection is an issue even if you fix those.
[19:55:50] <jeroen_> ah I think I know the problem
[19:56:08] <greycat> I don't understand why awk is even being used here.
[19:56:10] <jeroen_> I tried to replace the two with \d but that didn
[19:56:13] <jeroen_> work
[19:56:22] <Soliton> !cargocult
[19:56:22] <greybot> Cargo cult programming is copying pieces of code from other programs, without actually knowing what the code does. Subsequent debugging involves rearranging commands to minimize the number of error messages.
[19:56:29] <greycat> !\d
[19:56:29] <greybot> \s and \d are PCRE features. They will not work in ERE (which is what awk, egrep, and bash's =~ all use). The ERE equivalent of \s is [[:space:]], and of \d is [[:digit:]].
[19:56:58] <jeroen_> thanks allot!
[19:57:34] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:58:43] <wwilliam> I think I will use this:
[19:58:52] <wwilliam> for x in *.zip; do [[ -e $file ]] || continue; mkdir -p "${x%.zip}" && (cd "${x%.zip}" && unzip "../$x"); done
[19:58:56] <Soliton> also the export seems entirely useless.
[19:59:22] *** Joins: nvmd (~nvmd@user/nvmd)
[19:59:22] *** Joins: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk)
[19:59:39] *** Joins: codebam (~codebam@user/codebam)
[19:59:46] <jeroen_> it is but it's a part of a larger script
[20:00:48] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[20:01:07] <Soliton> a large script that randomly exports clear variables like 'f', neat.
[20:02:00] <greycat> (and calls awk to write SQL commands which are presumably piped to some database's CLI tool, containing code-injected data...)
[20:02:25] <joo> whats not to like ?
[20:02:44] *** Joins: blingrang (~blingrang@cpe84948c596473-cm84948c596470.cpe.net.fido.ca)
[20:03:08] <emanuele6> at least it does not have arbitrary code injections in the awk command
[20:04:56] <emanuele6> also isn't that file variable useless
[20:05:04] <emanuele6> POSIX awk has FILENAME
[20:05:46] *** Joins: henko (~henko@62-178-187-35.cable.dynamic.surfer.at)
[20:05:50] <jeroen_> I'm looping over the .csv files in the dir
[20:06:07] <greycat> The whole thing needs to be rewritten in Python, Perl, Tcl or some other language that has the necessary database API, so you can loop over this silly text file and insert all the rows safely.
[20:06:19] <greycat> Oh fucking christ, it's a CSV too.
[20:06:43] <jeroen_> =)
[20:06:49] <greycat> Well, now there's *another* reason you need to switch languages, to something that can safely read your CSV variant.
[20:07:27] <greycat> I guess this answers my original question of why awk was being used.  You thought awk could safely handle your CSV file.
[20:07:32] <jeroen_> probably
[20:07:37] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[20:08:44] <jeroen_> I doubt I'll find the energy today
[20:09:18] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[20:09:40] <jeroen_> for f in `ls`
[20:09:42] <jeroen_> do
[20:09:43] <jeroen_>  awk -v file=$f -F ',' '($1~/^http://en.wikipedia.org/wiki/Special:Search?go=Go&search=:digit:]][[:digit:]][[:digit:]][[:digit:/){print "INSERT INTO TEST("$1","file")" }' $f
[20:09:45] <jeroen_> done
[20:09:49] <jeroen_> the full script for now
[20:09:50] <greycat> !pf 1 > jeroen_ 
[20:09:50] <greybot> jeroen_: https://mywiki.wooledge.org/BashPitfalls#pf1 -- Don't do this! -- for f in $(ls *.mp3)
[20:10:06] *** Quits: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[20:10:43] <emanuele6> jeroen_: i don't think that would even work
[20:10:59] <emanuele6> /Search?/ does not match "Search?"
[20:11:00] <greycat> Plus the missing quotes, already alluded to.  Now you've got literal // in your awk /RE/ syntax.  And a paste error with your [[:digit:]] things.  And you forgot you can use {count} in ERE.
[20:11:22] <jeroen_> it got scrambled while pasting
[20:11:57] <emanuele6> and as i said before, the -vfile="$f" is useless, you can use the builtin FILENAME variable
[20:11:59] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[20:12:00] <jeroen_> https://pastebin.ubuntu.com/p/PqGph5zw7j/
[20:12:09] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:12:10] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[20:12:27] <emanuele6> !check
[20:12:29] <checkbot> emanuele6: Unable to read that :/
[20:12:33] *** Joins: masoudd (~masoudd@user/masoudd)
[20:12:35] <jeroen_> ok I'll adjust it thanks
[20:12:42] *** Joins: legola (~legola@46.235.100.27)
[20:12:46] <greycat> !paste.ubuntu.com
[20:12:46] <greybot> paste.ubuntu.com is one of the worst paste sites you can possibly choose, because you must register to view the raw text.
[20:13:01] <jeroen_> omg really
[20:13:03] <emanuele6> jeroen_: that won't really change anything
[20:13:04] <greycat> guessing pastebin.ubuntu.com has the same issue
[20:13:11] <emanuele6> it would still be broken
[20:13:38] <greycat> There are a plethora of errors, as we've been telling you all along.
[20:13:47] <Soliton> for f in *.csv; do awk -F ',' '($1~/^[[:digit:]]{4,}/){print "INSERT INTO TEST("$1","FILENAME")" }' "$f"; done
[20:13:59] <Soliton> now you just have to fix the injection.
[20:14:01] *** Quits: dsrt^ (~dsrt@12.16.129.111) (Remote host closed the connection)
[20:14:12] <emanuele6> Soliton: and the csv parsing
[20:14:16] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[20:14:33] <Soliton> who knows. no idea what data they have.
[20:15:01] <jeroen_> sorry I really apriciate your input, my brain is just a bit overloaded after 10 hours :)
[20:15:03] <emanuele6> also, $1~/^[[:digit:]]{4,}/ can be $1~/^[[:digit:]]{4}/ really, but doesn't really matter
[20:15:07] <Soliton> seems like it's just numbers or the injection probably wouldn't work at all.
[20:15:20] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:15:24] <greycat> all we know is that it *begins* with digits
[20:15:37] <Soliton> yeah, but the injection adds no quotes.
[20:15:55] <Soliton> i don't think sql usually likes bare strings.
[20:16:04] <greycat> True.  But that might just be another bug.
[20:16:20] <Soliton> though the filename is not quoted either...
[20:16:43] <greycat> Yeah.  Hard to see how this could possibly work.
[20:17:03] <jeroen_> emanuele6: {4} doesnt work
[20:17:08] <greycat> Yes it does.
[20:17:16] <emanuele6> they are equivalent..
[20:17:30] <emanuele6> (in this context)
[20:17:31] <greycat> # echo 99999999 | awk '$1 ~ /^[0-9]{4}/ {print $1}'
[20:17:33] <shbot> greycat: 99999999
[20:17:54] <jeroen_> empty on my machine
[20:18:03] <greycat> We don't know what your input is.
[20:18:26] <jeroen_> echo 99999999 | awk '$1 ~ /^[0-9]{4}/ {print $1}' is empty
[20:18:28] <wwilliam> this did not work either still creating a subdir  :(
[20:18:30] <wwilliam> for x in *.zip; do [[ -e $file ]] || continue; mkdir -p "${x%.zip}" && (cd "${x%.zip}" && unzip "../$x"); done
[20:18:40] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[20:18:53] <greycat> wwilliam: man mkdir
[20:19:00] <Soliton> hint: mkdir is a command that creates a dir.
[20:19:14] <greycat> the "mk" part stands for "make"
[20:19:19] <emanuele6> m(a)k(e)dir(ectory)
[20:19:24] <wwilliam> OK...
[20:19:49] <greycat> also you have $file but you want $x
[20:20:00] <wwilliam> sorry
[20:20:01] <wwilliam> is x
[20:20:04] <wwilliam> yes.
[20:20:15] <emanuele6> # x=filename.zip; echo mkdir -p "${x%.zip}"
[20:20:16] <shbot> emanuele6: mkdir -p filename
[20:20:18] <wwilliam> but dont i have to created the dir first?
[20:20:41] <greycat> You keep saying you don't WANT it.
[20:20:41] <wwilliam> then cd into it and unzip?
[20:20:44] <greycat> But you keep MAKING it.
[20:21:14] <wwilliam> I dont want like this    foo/foo/contents from foo.zip i want   foo/contents
[20:21:30] <greycat> And yes the first thing you did was "mkdir foo && cd foo"
[20:21:34] <greycat> THINK!
[20:21:43] <greycat> yet*
[20:22:06] *** Aryan is now known as merc
[20:22:43] <wwilliam> but i have foo.zip bar.zip zoe.zip so i want the dirs   foo bar and zoe with each corresponding contents
[20:22:58] <wwilliam> I dont know if i explain myself correctly.
[20:23:04] *** Joins: cyrus_mc (~cyrus_mc@c-98-232-162-73.hsd1.or.comcast.net)
[20:23:04] <greycat> And what's inside your foo.zip file?
[20:23:06] *** merc is now known as Aryan
[20:23:09] <wwilliam> pdfs
[20:23:14] *** Joins: furrymcgee (~devuan@31.179.186.66)
[20:23:19] <greycat> What are the PATH NAMES of the contents of your foo.zip file?
[20:23:24] <emanuele6> foo.zip probably already contains a directory named "foo" that contains your files 
[20:23:41] <OMGOMG> heh
[20:24:44] <wwilliam> Here all the zips are here:
[20:25:32] <wwilliam>   /home/wwilliam/u6/cust/ir_test/ir_qasoa_stage
[20:25:49] <greycat> I don't care where the .zip file is.  I told you to look at the CONTENTS of it.
[20:25:56] <greycat> unzip -l foo.zip | head
[20:25:58] *** Quits: blingrang (~blingrang@cpe84948c596473-cm84948c596470.cpe.net.fido.ca) (Changing host)
[20:25:58] *** Joins: blingrang (~blingrang@user/blingrang)
[20:26:20] <xx> `cp "$a" "$b"` or can/should I *always* do `cp -- "$a" "$b"`?
[20:26:29] <greycat> it wouldn't hrut
[20:26:53] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:27:40] <xx> I can't find reliable information about where -- is supported for cp
[20:28:46] <wwilliam> oh
[20:28:54] <Soliton> !--
[20:28:54] <greybot> The special option -- means "end of options" to every POSIX command except echo and test, and to many other commands. E.g. Â«mv -- *.png /somedirÂ» (in case one of the filenames begins with "-"). See <http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02> and <http://wiki.bash-hackers.org/dict/terms/end_of_options>
[20:28:54] <emanuele6> xx: if you don't care about supporting systems from the 70s and you only care about supporting POSIX systems, POSIX mandates `--`; https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02
[20:28:57] <wwilliam> emanuele6: was right.
[20:29:05] <wwilliam> !paste
[20:29:06] <greybot> Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[20:29:07] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 240 seconds)
[20:29:17] <xx> emanuele6: that's good enough for me, thanks!
[20:29:18] *** cdown_ is now known as cdown
[20:29:21] *** Joins: riskoir (~karaixx@148.87.23.13)
[20:29:54] <wwilliam> greycat: http://paste.debian.net/1208718/
[20:30:02] *** Quits: lq (~lq@210.72.8.204) (Read error: Connection reset by peer)
[20:30:24] *** Joins: lq (~lq@210.72.8.214)
[20:30:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:30:31] <riskoir> When calling a function, how can I get the return code immediately? I know I can do foo; echo $?, but can I do it in the same line? 
[20:31:05] <Soliton> what issue are you trying to solve?
[20:31:52] <riskoir> I want to call function foo inside a while condition on each iteration and assert if the return value is greater than soemthing
[20:31:55] <greycat> that looks like the same line to me.
[20:32:09] <greycat> while myfunc; (($? > 3)); do ...
[20:33:06] <riskoir> In that case I would have to keep calling the function between the 'do' and 'done' right?
[20:33:16] <Soliton> what?
[20:33:28] <Soliton> you call it where it says myfunc.
[20:33:59] <riskoir> oh, I never say this before
[20:34:08] <riskoir> That's great
[20:35:10] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[20:35:28] *** Joins: kurahaupo_ (~kurahaupo@58.84.89.180)
[20:36:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 240 seconds)
[20:36:50] *** Joins: Burger (~burger@user/burger)
[20:37:08] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:37:27] *** Quits: kurahaupo (~kurahaupo@pa49-195-177-144.pa.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[20:37:45] <gnoo> wwilliam: the zip already contains the parent directory; if you're sure it is always created like that then just extracting will create a folder with same name. note that this depends on how the zip is created.
[20:39:40] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[20:40:53] <gnoo> so if you have a folder with foo.zip, bar.zip, etc and want to extract on the same directory(inside foo/, bar/), and you also know it is created the same way, a simple `find` command should do. you probably already know how to execute some command (in this case unzip) with find. 
[20:41:26] <jeroen_> I'm exhausted, will continue tomorrow. have a great night everyone.
[20:41:57] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[20:42:10] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[20:42:32] *** Quits: woohoiV5_ (~woohoiV5@85-250-29-125.bb.netvision.net.il) (Ping timeout: 245 seconds)
[20:43:01] <emanuele6> !scriptinglanguage
[20:43:01] <greybot> Consider using perl, python, or ruby for such a task.
[20:43:11] *** Quits: aead (~aead@user/aead) (Quit: aead)
[20:43:19] <wwilliam> Thank you gnoo that dir should not have been there. The person that send me that made a mistake with that.
[20:43:39] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[20:43:50] <gnoo> that dir being there makes your life easy so better thank them instead
[20:44:23] <Soliton> i wouldn't bet on the dir being there.
[20:44:26] <grondilu> In pattern substitution (e.g ${param//pattern/string}), can't the string contain backslah escape sequences?
[20:44:38] *** Joins: woohoiV5 (~woohoiV5@46-116-234-75.bb.netvision.net.il)
[20:44:40] <Soliton> !$'
[20:44:40] <greybot> bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
[20:44:41] *** Joins: WinterStar (~IceLight@user/icelight)
[20:46:14] <emanuele6> wwilliam: also it seems that that all that `mkdir && (cd && unzip)` is unnecessary
[20:46:27] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[20:46:31] <emanuele6> unzip(1) has a `-d dirname` option that let's you output to an array
[20:46:41] <emanuele6> s/array/directory/
[20:46:59] <wwilliam> OK emanuele6 Thank you will do that better.
[20:48:17] *** Quits: NeoCron (~NeoCron@45.158.175.19) (Remote host closed the connection)
[20:48:17] <emanuele6> unzip(1) is actually a very complex and sophisticated tool it seems 
[20:48:27] <emanuele6> i had no idea
[20:48:36] <Soliton> with sophisticated shell injection.
[20:49:05] <emanuele6> we do love those
[20:49:41] <grondilu> Soliton: I can't use $' inside the pattern substitution, can I?
[20:49:52] <Soliton> i believe in you.
[20:50:14] <riskoir> ty greycat :-) worked very well
[20:50:46] *** Joins: aead (~aead@user/aead)
[20:50:46] *** Quits: aead (~aead@user/aead) (Client Quit)
[20:50:56] *** Joins: palindrome (~palindrom@51.37.249.249)
[20:51:34] <palindrome> is there something like sh -e in bash? to run the script "quiet" ?
[20:51:51] <Soliton> how is -e quiet?
[20:51:59] <Soliton> !-e
[20:51:59] <greybot> "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[20:52:13] *** Joins: aead (~aead@user/aead)
[20:52:18] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Ping timeout: 250 seconds)
[20:52:18] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 250 seconds)
[20:52:48] <Soliton> hmm, perhaps quietly exiting at random points.
[20:53:21] <greycat> If the script aborts on line 3 before it does anything, then it's probably pretty quiet.
[20:53:44] <Soliton> makes sense.
[20:54:37] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[20:55:14] <emanuele6> # set -e; (( a = 10 )); printf 'hello: %s * 2 = %s\n' "$a" "$(( a * 2 ))"
[20:55:15] <shbot> emanuele6: hello: 10 * 2 = 20
[20:55:41] <greycat> did it change again?
[20:56:01] <emanuele6> # set -e; (( a = 0 )); printf 'hello: %s * 2 = %s\n' "$a" "$(( a * 2 ))"
[20:56:03] <shbot> emanuele6: (shell exited with 1)
[20:56:07] <greycat> oh right, that one.  yeah.
[20:57:40] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[20:58:24] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[20:58:57] *** Joins: masoudd (~masoudd@user/masoudd)
[21:00:24] *** Joins: kill (~killown@user/killown)
[21:00:46] <greycat> palindrome: what did you think "set -e" did?
[21:01:31] <greycat> Did you think it redirected stderr to /dev/null or something?
[21:01:51] *** Quits: Strom (strom@fedora/strom) ()
[21:02:10] <palindrome> basically I am running a script in jenkins and I am sending user/password as arguments for a script. the pipeline it printing the arguments on the log. with the sh -e it didnt. :)
[21:02:18] *** Joins: aakashi2001 (~aakashi20@103.61.255.12)
[21:02:18] *** Quits: aakashi2001 (~aakashi20@103.61.255.12) (Changing host)
[21:02:18] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[21:03:13] <greycat> bash -e and sh -e both work the same way: they turn on an option that causes the shell to terminate if certain commands return a nonzero value.  it has nothing to do with the suppression of output.
[21:03:29] *** Joins: Strom (strom@fedora/strom)
[21:03:43] *** Joins: frtdlteo^ (~frtdlteo@12.16.129.111)
[21:04:14] <greycat> Maybe you were comparing it against "set -x", which prints each command (after substitutions) as it's executed, for debugging purposes?
[21:04:31] <greycat> Otherwise, all I can think of is that you have some Jenkins-specific issue.
[21:05:45] *** Quits: Bit_MCP (~Bit_MCP43@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 248 seconds)
[21:07:18] *** Joins: vanfanel64 (~vanfanel6@user/vanfanel64)
[21:07:36] *** Quits: aead (~aead@user/aead) (Quit: aead)
[21:09:06] <vanfanel64> Hi. This seems like it should be obvious, but I'm trying to cat a file with a heredoc (so new content), that I want to redirect to a new file (so as not to change the original, which is why I am not using cat > foo <<'EOF'..._
[21:09:16] <vanfanel64> err, cat >>
[21:09:26] <greycat> that appends to the end of the existing file
[21:09:54] <vanfanel64> I want to produce a new file that has foo first and ther heredoc content after that, all in one go
[21:10:06] *** Joins: aead (~aead@user/aead)
[21:10:27] <Soliton> cat foo - > newfile <<'EOF'
[21:10:31] <greycat> { cat foo; cat <<'EOF'; } > bar
[21:10:37] <greycat> or use Soliton's
[21:11:15] <vanfanel64> Oh I forgot about - being for STDIN, that is what I could not remember
[21:11:30] <vanfanel64> greycat, I like your solution too
[21:12:34] <jeroen_> awk -F ',' '($1~/^http://en.wikipedia.org/wiki/Special:Search?go=Go&search=:digit:/){print "INSERT INTO TEST("$1","FILENAME")" }' *.csv
[21:12:46] <greycat> you're doing it again
[21:13:00] <Soliton> probably their irc client.
[21:13:05] <jeroen_> yeah
[21:13:24] <greycat> what kind of idiotic IRC client replaces [[:foo:]] with RANDOMURL:foo:
[21:13:38] <jeroen_> Konversation
[21:13:54] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[21:14:26] <jeroen_> !paste
[21:14:27] <greybot> Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[21:14:58] <jeroen_> http://paste.debian.net/1208724/
[21:15:28] *** Joins: jess (~jess@libera/staff/jess)
[21:15:32] <jeroen_> http://en.wikipedia.org/wiki/Special:Search?go=Go&search=:digit:{4} didnt work
[21:15:35] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:15:43] <vanfanel64> jeroen_, why do you have $1 in side single quotes
[21:15:48] <ash_worksi> part
[21:15:53] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[21:15:55] <Soliton> because that is awk code.
[21:16:09] <vanfanel64> Oh, $1 is awk's not bash's
[21:16:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[21:16:44] <greycat> jeroen_: are you at any point going to tell us WHY your awk is allegedly broken, or what your input files look like, or why you think your SQL statements could possibly work without single quotes around string constants such as filenames that are known to contain .csv?
[21:17:20] <greycat> saying that your awk doesn't handle standard Extended Regular Expression syntax is a big claim
[21:17:46] <Soliton> looks like mawk doesn't support {}.
[21:18:04] <jeroen_> no I just wanted to share my final result
[21:18:07] <greycat> so mawk has its own RE engine that isn't POSIX compliant?
[21:18:09] <jeroen_> sorry about that
[21:19:02] <jeroen_> oh wait there is one problem
[21:19:11] <jeroen_> one csv file has only one column
[21:19:19] <twkm> awk is a poor csv parser, unless your csv is trivial.
[21:19:33] <jeroen_> so it doesnt process it because it doesnt have a ,
[21:20:02] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[21:20:06] <grondilu> can I use 'while read -N1; do stuff with $REPLY; done' with binary data or is read only for ASCII input?
[21:20:09] *** Quits: Burger (~burger@user/burger) (Ping timeout: 250 seconds)
[21:20:15] <emanuele6> <jeroen_ > no I just wanted to share my final result
[21:20:19] <emanuele6> does that actually work?
[21:20:22] <greycat> grondilu: no.
[21:20:41] <Soliton> # awk -F , '$1 ~ /^[[:digit:]]+/{print "INSERT INTO TEST("$1","FILENAME")" }' <<< 1234
[21:20:43] <shbot> Soliton: INSERT INTO TEST(1234,)
[21:20:45] <emanuele6> i don't think it should: FILENAME is not quoted in the SQL code
[21:20:50] <jeroen_> emanuele6: it works, just not completely
[21:20:58] <emanuele6> how can it work at all?
[21:21:19] <Soliton> looks like their SQL dialect doesn't mind bare strings.
[21:21:36] <greycat> so they have a broken awk *and* a broken SQL
[21:21:39] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:21:55] <emanuele6> how would it handle a string that contains a ) then?
[21:22:04] <emanuele6> a string with leading space?
[21:22:09] <Soliton> jeroen_: you're just using the first field it doesn't matter if there is a comma or not.
[21:22:19] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[21:22:51] * greycat finds https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=355442
[21:23:02] <twkm> grondilu: read isn't suitable for binary data.
[21:23:10] <Soliton> emanuele6: it's injection either way. quotes are not going to fix that.
[21:23:44] <greycat> So it's only a 15 year old bug, should be fixed Real Soon Now I'm Sure!
[21:24:14] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[21:27:20] <jeroen_> when I use #awk -F , '$1 ~ /^[[ :digit: ]]+/{print "INSERT INTO TEST("$1","FILENAME")" }' *.csv it fails with one file but when I do that file one by one it works fine
[21:27:35] <jeroen_> it didnt print $1
[21:28:34] <Soliton> doesn't make sense that it behaves differently whether it process multiple files or just one.
[21:28:37] <jeroen_> example line: 853004684incommerce
[21:28:42] <jeroen_> "853004684incommerce"
[21:28:47] <greycat> which one is it?
[21:28:48] <jeroen_> without quotes
[21:29:22] <Soliton> # awk -F , '$1 ~ /^[[:digit:]]+/{print "INSERT INTO TEST("$1","FILENAME")" }' <<< 853004684incommerce
[21:29:24] <shbot> Soliton: INSERT INTO TEST(853004684incommerce,)
[21:29:30] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:29:30] <greycat> does the problem go away if you use gawk instead of (m)awk?
[21:29:38] *** Joins: touraine (~igloo@44.229-131-109.adsl-dyn.isp.belgacom.be)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:45] <jeroen_> gawk: fatal: cannot open file `boeken-leeszaall-kopieerbeveiliging.csv' for reading: No such file or directory
[21:31:19] <greycat> mawk should also have printed an error message for a nonexistent file
[21:31:30] <greycat> unicorn:~$ mawk '/1/' nosuchfile.csv
[21:31:30] <greycat> mawk: cannot open nosuchfile.csv (No such file or directory)
[21:31:36] <jeroen_> filename = boeken-leeszaal-kopieerbeveiliging.csv
[21:32:15] *** Joins: zebrag (~chris@user/zebrag)
[21:32:30] <jeroen_> sorry error between keyboard and char
[21:32:33] <jeroen_> chair
[21:32:54] <jeroen_> the first line returns: ,boeken-leeszaal-kopieerbeveiliging.csv)
[21:33:11] <jeroen_> it didn't print line one
[21:33:17] <greycat> !cr > jeroen_ 
[21:33:17] <greybot> jeroen_: Carriage Return (ASCII 13). Often represented by ^M or \r. CRs are found just before newlines in text files generated by DOS/Windows apps. You can see them with ''sed -n l''. See http://mywiki.wooledge.org/BashFAQ/052 to get rid of them.
[21:34:17] <greycat> I bet they ALL have carriage returns, and you only noticed it on this one because with the whole line being one field, you are now *printing* the CR.
[21:34:42] <greycat> whereas with the other files, the CR is in field 2 and therefore isn't printed
[21:34:47] <jeroen_> greycat: youre right
[21:34:56] <jeroen_> thanks
[21:36:15] *** Joins: zro (zro@user/zro)
[21:36:23] <greycat> The curly-brace error is still in upstream mawk.
[21:36:24] <greycat> unicorn:~/tmp/mawk-1.3.4-20200120$ echo 999999 | ./mawk '/^9{1}/'
[21:36:24] <greycat> unicorn:~/tmp/mawk-1.3.4-20200120$ 
[21:36:40] <greycat> but there is a --without-builtin-regex build time option...
[21:37:05] <greycat> which ... still doesn't work
[21:37:39] *** Joins: Gunzi (~Gunzi@2a02:810d:4bbf:ec19:f4b6:ad12:d27b:baa)
[21:37:59] <jeroen_> greycat: so I need to re-introduce the .csv loop
[21:38:21] <greycat> You need to fix the multitude of errors you have in *every* single layer of this.
[21:39:20] <Gunzi> good evening, i have been writing a small script to compile custom kernels and need to grab the version string of the kernel from `make kernelrelease` from within an systemd-nspawn command, however instead of `vmlinuz-5.10.46-nohz` the symlink points to `vmlinuz-5.10.46-nohz'$'\r`
[21:39:40] <Gunzi> could somebody point out to me where the lone carrage return comes from?
[21:39:58] <llua> systemd-nspawn i would imagine
[21:40:12] <llua> feel free to trace it
[21:40:17] <twkm> dorker has similar stupidness.
[21:40:43] <xx> are these two identical? [[ $dog == "$cat" ]] vs [[ "$dog" == $cat ]]
[21:40:52] <Soliton> no.
[21:40:53] <Gunzi> can i get rid of it easily?
[21:41:00] <twkm> !faq cr
[21:41:01] <greybot> https://mywiki.wooledge.org/BashFAQ/010 -- How can I recreate a directory hierarchy structure, without the files?
[21:41:05] <twkm> hmm.
[21:41:09] <twkm> !cr
[21:41:09] <greybot> Carriage Return (ASCII 13). Often represented by ^M or \r. CRs are found just before newlines in text files generated by DOS/Windows apps. You can see them with ''sed -n l''. See http://mywiki.wooledge.org/BashFAQ/052 to get rid of them.
[21:41:10] <Soliton> xx: right hand side is a pattern.
[21:41:13] <xx> Soliton: so bash only does the pattern matching on right hand side?
[21:41:20] <Soliton> yes.
[21:41:23] <xx> thanks
[21:41:41] <Gunzi> thanks twkm, the dollar sign is just the escape character after it is saved to a file right?
[21:42:06] <Gunzi> when the string is used as a filename i should say rather
[21:42:21] <Soliton> it's surely just how ls or whatever displays it.
[21:42:26] <Soliton> !$'
[21:42:26] <greybot> bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
[21:42:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[21:42:58] <Gunzi> very cool, thanks a lot
[21:43:42] <Gunzi> guess ill just pipe the systemd-nspawn output into tr -d '\r' then i guess
[21:44:09] <Soliton> or fix whatever creates that symlink.
[21:44:10] *** Quits: zro (zro@user/zro) (Ping timeout: 240 seconds)
[21:44:24] <Soliton> doesn't seem intentional.
[21:44:49] <greycat> Oh, mawk's README file actually talks about this: "Limitations: [...] mawk's built-in regular expression engine does not yet support brace expressions, e.g.,    /a{,4}/"
[21:44:58] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[21:45:08] <greycat> But even the --without-builtin-regex option doesn't make it work, so there's still something amiss.
[21:45:24] <Gunzi> the symlink is created by linux-update-symlinks, my call is basically `linux-update-symlinks install "${KERNEL_VERSION}" "/boot/vmlinuz-${KERNEL_VERSION}"`
[21:45:27] *** Quits: touraine (~igloo@44.229-131-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[21:45:42] *** Joins: Trieste (T@user/pilgrim)
[21:45:54] <Soliton> maybe some source file has windows line endings for whatever reason.
[21:46:34] *** Joins: zro (~zro@user/zro)
[21:46:34] *** Quits: zro (~zro@user/zro) (Client Quit)
[21:46:35] <Gunzi> i guess its just systemd-nspawn weirdness, there is no windows machine in the whole network and the linux kernel source is pulled via `apt install linux-source`
[21:46:52] *** Joins: zro (~zro@user/zro)
[21:46:55] <jeroen_> gawk -F , '$1 ~ /http://en.wikipedia.org/wiki/Special:Search?go=Go&search=:digit:4+/{print "("$1","FILENAME")" }' *.csv how would I remove double quotes from $1 too?
[21:47:13] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[21:47:14] <twkm> you can remmove the cr from KERNEL_VERSION as it is expanded, though removing it from the assignment is likely better.
[21:47:17] <Soliton> now you're trying to fix the injection?
[21:47:19] <jeroen_> gawk -F , '$1 ~ /[[: digit :]]4+/{print "("$1","FILENAME")" }' *.csv how would I remove double quotes from $1 too?
[21:47:37] <Soliton> !graduated
[21:47:37] <greybot> Congratulations! You've graduated to needing to use a real language!
[21:48:01] <jeroen_> haha
[21:48:30] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[21:48:45] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[21:48:51] <Soliton> before you learn how quoting works in your sql dialect and still getting it wrong rather rewrite in a real language.
[21:49:17] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[21:49:25] *** Joins: aead (~aead@user/aead)
[21:49:35] *** lordrishav is now known as LordRishav
[21:52:12] *** Joins: touraine (~igloo@109.131.229.44)
[21:53:23] *** Quits: touraine (~igloo@109.131.229.44) (Remote host closed the connection)
[21:53:30] <greycat> The CodeInjection page has examples of SQL with bind parameters in 3 different languages.
[21:55:18] *** Joins: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697)
[21:55:53] *** Quits: timj (~timj@user/timj) (Ping timeout: 248 seconds)
[21:55:56] *** Joins: JackRuby (~textual@22.105.128.77.rev.sfr.net)
[21:58:39] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[21:58:40] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[21:59:02] *** Quits: esselfe (~steph@user/esselfe) (Ping timeout: 250 seconds)
[21:59:19] *** Joins: Betal (~Betal@user/betal)
[22:01:27] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:02:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Client Quit)
[22:02:42] <greycat> https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=355442#58
[22:02:46] <YoungFrog> I managed to misread as "...has examples of SQL _injections_ with bind parameters..." I had to re-read very carefully 3 times before it sunk it
[22:03:15] *** Quits: pystardust (~pystardus@223.226.119.16) (Quit: pystardust)
[22:03:30] *** Joins: pystardust (~pystardus@223.226.119.16)
[22:05:37] *** Joins: arinov (~arinov@213.194.126.155)
[22:06:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:06:45] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[22:06:52] *** Joins: guest856 (~guest@host103.190-224-208.telecom.net.ar)
[22:07:27] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[22:07:46] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[22:08:28] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[22:08:37] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[22:08:50] *** Joins: LukeNuke_ (~user@85.93.217.190)
[22:09:06] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[22:09:36] *** Joins: Lutin (~Lutin@user/lutin)
[22:09:37] *** Quits: LukeNuke_ (~user@85.93.217.190) (Client Quit)
[22:09:48] *** Joins: LuksNuke (~user@85.93.217.190)
[22:09:54] *** Quits: mingdao_ (~mingdao@107-146-172-064.res.spectrum.com) (Quit: leaving)
[22:10:05] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[22:10:19] <LuksNuke> # echo yes
[22:10:20] <shbot> LuksNuke: yes
[22:10:36] <LuksNuke> # x="     x"; echo "
[22:10:43] <shbot> LuksNuke: Missing terminating quote, bracket or keyword
[22:10:56] *** Quits: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk) (Quit: reducing white noise)
[22:10:56] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[22:11:17] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 250 seconds)
[22:11:18] <LuksNuke> # x="     x"; echo "${x//#[[:space:]]/}"
[22:11:20] <shbot> LuksNuke:      x
[22:11:38] <LuksNuke> # x="     x"; echo "${x//# /}"
[22:11:39] <shbot> LuksNuke:      x
[22:11:45] <LuksNuke> # x="     x"; echo "${x/# /}"
[22:11:47] <shbot> LuksNuke:     x
[22:11:48] <greycat> you're only removing one of several spaces
[22:11:58] <LuksNuke> whats wrong?
[22:12:01] <LuksNuke> oh ok
[22:12:28] <LuksNuke> # x="aab"; echo "${x//#a/}"
[22:12:29] <shbot> LuksNuke: aab
[22:12:47] <LuksNuke> so this must be an extension somewhere
[22:13:05] <LuksNuke> because i swar it replaced the alphabethical letter
[22:13:06] <greycat> use one /
[22:13:07] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[22:13:32] <greycat> # x="aab"; echo "${x/#a/}"
[22:13:34] <shbot> greycat: ab
[22:13:56] <greycat> by the way, ${x#a} is shorter and more POSIX-er
[22:14:19] <LuksNuke> would be nice if it supported "${x//#x/}"
[22:14:27] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[22:14:32] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[22:14:35] <Soliton> what is that supposed to mean?
[22:15:00] <Soliton> replace the first x as often as you can? how does that make sense?
[22:15:09] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:15:10] <LuksNuke> trimming a string in the bash way
[22:15:16] <Soliton> there is just one first x.
[22:15:23] <LuksNuke> without calling any sub process
[22:15:32] <Soliton> if you want to replace multiple x you need extglob.
[22:15:32] <LuksNuke> without sed or the like
[22:15:53] <Soliton> so write it correctly.
[22:15:54] <greycat> !faq trim
[22:15:54] <greybot> https://mywiki.wooledge.org/BashFAQ/067 -- How can I trim leading/trailing white space from one of my variables?
[22:16:26] <LuksNuke> oh nice thanks
[22:16:34] <greycat> I think LuksNuke still thinks that //# / should replace more than one leading space, as if it were ##+( )
[22:17:13] <LuksNuke> this is not stated in bashguide.pdf
[22:17:14] <greycat> that's the only rationale I can come up with that explains their line of questioning
[22:17:29] <greycat> LuksNuke: we cannot possibly refute every false notion that people come up with.
[22:17:29] *** Quits: JackRuby (~textual@22.105.128.77.rev.sfr.net) (Quit: Again ... I forgot to turn on amphetamine on my macbook)
[22:17:33] <Soliton> it's like s/^...//g in sed. the g flag is not doing anything. in the parameter expansion this case is not even valid.
[22:18:27] <Soliton> ${var//#...} makes no sense so it's not a thing.
[22:19:18] <grondilu> how do I print a byte with printf?  `printf "%c" i` does not seem to work as in C
[22:19:26] <greycat> !faq hex
[22:19:26] <greybot> https://mywiki.wooledge.org/BashFAQ/071 -- How do I convert an ASCII character to its decimal (or hexadecimal) value and back? How do I do URL encoding or URL decoding?
[22:20:40] *** Joins: frm (~frm@user/frm)
[22:21:55] <grondilu> damn you're fast
[22:22:32] <greycat> it's not that many characters to type
[22:22:43] <LuksNuke> yes shellopts will do
[22:23:30] <LuksNuke> but i swear //# worked on some place
[22:23:36] <LuksNuke> will retry this tomorrow
[22:23:45] <LuksNuke> also /##
[22:24:02] <greycat> //# shouldn't work at all, because the second slash and the # are both competing to be the first character in the "before" string, which has special meaning
[22:24:03] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:24:07] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 240 seconds)
[22:24:26] * LuksNuke is confused
[22:24:45] <greycat> the fundamental problem here is that you shouldn't be using the / or // operator at all, because you are trying to remove content from the start of a string, not from the middle.
[22:24:58] <Soliton> either you match at the start or you match multiple times. both makes no sense.
[22:25:03] *** panda_man is now known as koala_man
[22:25:34] <greycat> what we're perceiving as the // operator is not really a // operator at all.  it's a / operator where the first character of the "before" string happens to be "/", which has a special meaning.  so you can't also have the first character be "#" which has special meaning too.  it's one or the other.
[22:25:52] *** Quits: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Remote host closed the connection)
[22:26:03] <greycat> and // is just the wrong choice for removing content from the start of a string.  you want ## or # for that.
[22:26:10] *** Joins: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[22:26:16] *** Joins: Lutin (~Lutin@user/lutin)
[22:28:09] <LuksNuke> "${x##+( )}" ?
[22:28:17] <LuksNuke> for trimming the left side?
[22:28:20] <greycat> yes
[22:28:21] <Soliton> !extglob
[22:28:21] <greybot> "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
[22:29:16] <LuksNuke> this means ## is greedy and the other not?
[22:29:21] <greycat> yes
[22:29:24] <LuksNuke> ok
[22:29:44] <LuksNuke> never saw this solution on google
[22:29:50] <LuksNuke> sed, xargs but not this
[22:29:50] <greycat> !google
[22:29:50] <greybot> Google is NOT a preferred source for learning bash, because almost all the "tutorials" and scripts out there are JUNK. Instead, ask a good question here or refer to the Guide and FAQ (see topic)
[22:30:05] <LuksNuke> yes but i didnt check +( ) is part of an extension
[22:30:22] <greycat> +( ) is an extended glob, which is on by default in ksh, and can be turend on in bash
[22:30:38] <LuksNuke> i read the post on stackoverflokw
[22:31:35] <greycat> !so
[22:31:35] <greybot> Like virtually every other web site you find via Google, StackOverflow is chock full of wrong answers. Verify everything you read there before using it.
[22:34:01] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[22:34:56] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[22:35:06] <OMGOMG> !pornhub
[22:35:11] <OMGOMG> that one should be safe
[22:35:27] *** Joins: goldfish (~goldfish@user/goldfish)
[22:35:38] <grondilu> say I have two filters foo and bar.  I want them both to process the same input, and I want to catenate their output, with foo being first.  Should I do `tee >(foo) | bar` ?
[22:36:06] <greycat> that won't keep them separate
[22:36:28] *** Joins: docmax (~docmax@dynamic-077-008-112-114.77.8.pool.telefonica.de)
[22:36:28] <grondilu> that's what I was afraid of
[22:36:52] *** Quits: frm (~frm@user/frm) (Quit: frm)
[22:37:07] <greycat> I'm pretty sure you'll need at least one temp file.
[22:37:39] <greycat> tee >(bar > tempfile) | foo > outputfile && cat tempfile >> outputfile
[22:37:42] *** Joins: austin987 (~null@100.42.98.196)
[22:37:49] *** Quits: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[22:38:17] *** Quits: Ps1-Jack (psi-jack@user/psi-jack) (Remote host closed the connection)
[22:38:20] <grondilu> well if I make a tempfile then I do `foo < temp; bar < temp`
[22:38:25] <kofany_> anyone what to review my code? :P I have made a script (yes i know that we have rady tools for that) todo remote some things on other server from the one main box :)
[22:38:32] *** Joins: Ps1-Jack (psi-jack@user/psi-jack)
[22:38:33] *** Quits: docmax_ (~docmax@dynamic-077-000-201-074.77.0.pool.telefonica.de) (Ping timeout: 248 seconds)
[22:38:38] *** kofany_ is now known as kofany
[22:38:50] <LuksNuke> nep
[22:38:55] <grondilu> I was hoping for a way not to create a file
[22:39:43] <kofany> grondilu: what you need to do?
[22:40:14] <grondilu> I want two functions to parse the same input
[22:40:27] <Soliton> you'd need some ipc between foo and bar to know when foo is finished.
[22:41:09] <kofany> grondilu: and one should be frist and that the second yes?
[22:41:19] <grondilu> kofany: yes
[22:41:31] *** Joins: timj (~timj@user/timj)
[22:41:37] <greycat> and they've already been given a solution that uses one tempfile plus the final output file
[22:41:49] <kofany> grondilu: input is a file or? var?
[22:41:49] <grondilu> I guess I'll just make a temp file
[22:42:25] <grondilu> I hate it though
[22:42:33] <greycat> kofany: the way the question was initially presented, input is coming from stdin which is linked to an unknown source
[22:43:00] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[22:43:27] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[22:43:38] <pystardust> greycat: how does your bot work? you magically put a word for any answer
[22:43:41] <utis> is it possible to get the pid of the inotifywait in a `while inotifywait foo; do ...` loop, so that it can be killed (without killing other inotifywait processes)?
[22:43:49] <greycat> !greybot
[22:43:49] <greybot> I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands. git mirror https://github.com/im14/greybot
[22:43:50] <emanuele6> !greybot > pystardust 
[22:43:50] <greybot> pystardust: I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands. git mirror https://github.com/im14/greybot
[22:44:04] <emanuele6> it was updated today
[22:44:05] *** Quits: riskoir (~karaixx@148.87.23.13) (Quit: Leaving)
[22:44:15] <greycat> a very small update
[22:44:20] <pystardust> thanks!
[22:44:23] <Soliton> utis: why do you want to kill unrelated processes?
[22:44:43] <utis> Soliton: that's what i don't want to do
[22:45:07] <Soliton> unrelated process being a process that is not your child.
[22:45:22] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[22:45:31] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[22:45:31] <utis> oh,  i think the loop hangs around even if the parent is killed
[22:45:53] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Read error: Connection reset by peer)
[22:47:08] <utis> for some reason
[22:47:18] <pystardust> greycat: are you the author of greybot? Any suggestions on where I could learn perl :)
[22:47:35] <greycat> ask #perl for suggestions
[22:47:40] <pystardust> okey
[22:48:08] <emanuele6> `while inotifywait foo;' i don't know how inotifywait works, but that code invokes a new inotifywait every iteration of the while loop, so why would you need to kill it?
[22:48:12] <emanuele6> utis: 
[22:48:13] *** Parts: kill (~killown@user/killown) (Leaving)
[22:48:15] *** Joins: vysn (~vysn@user/vysn)
[22:48:40] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[22:49:01] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[22:49:31] <greycat> https://manpages.debian.org/bullseye/inotify-tools/inotifywait.1.en.html   -- The -m option says "Instead of exiting after receiving a single event, execute indefinitely. The default behaviour is to exit after the first event occurs."
[22:50:27] <utis> the idea is to wait until the system is resumed (after suspension), but i'd like to be able to stop waiting for that
[22:53:34] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[22:53:57] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:57:16] *** Joins: roadie (~user@2a02:8108:ec0:1427:b597:2d79:a888:531f)
[22:58:35] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:59:46] <brelod>  grondilu: is this what you're looking for? `echo text | tee >(proc1) >(proc2)`
[22:59:59] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[23:00:25] <greycat> that leaves stdout of both proc1 and proc2 pointing to the same place, so you get random interleaving at best; they wanted each chunk of output separate
[23:00:33] *** Joins: besnn (~besnn@user/besnn)
[23:01:08] <brelod> okay, I see
[23:01:30] <greycat> if proc1 and proc2 are running simultaneously, which was strongly implied to be what's wanted, then the output of proc2 has to be saved up, and not spat out until proc1 is done
[23:01:50] <greycat> the normal way one does this is with a temp file
[23:02:45] *** Quits: blingrang (~blingrang@user/blingrang) (Quit: WeeChat 3.2)
[23:02:55] <brelod> that makes sense
[23:03:10] *** Joins: manin (~x@185.242.190.95)
[23:04:16] *** Joins: blingrang (~blingrang@cpe84948c596473-cm84948c596470.cpe.net.fido.ca)
[23:05:22] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:05:52] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[23:06:12] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:06:18] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[23:07:37] *** Quits: LuksNuke (~user@85.93.217.190) (Ping timeout: 250 seconds)
[23:16:20] <pystardust> why isn't there a way to make a single pipeline branch out into multiple ones? it is possible in theory ryt?
[23:16:36] <greycat> tee >(a) >(b) >(c)
[23:16:56] *** Quits: frtdlteo^ (~frtdlteo@12.16.129.111) (Remote host closed the connection)
[23:17:04] <Soliton> you need to copy data so you use tee.
[23:17:29] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Quit: Leaving)
[23:18:18] <pystardust> greycat: ohhhh, nice. So merging them is complicated. Wait so is there a way to split into branches this way and attach back into a pipeline
[23:18:57] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[23:20:38] <Soliton> tee does the copying to split up. who knows how you want merging back into one stream to work.
[23:21:20] *** Quits: pystardust (~pystardus@223.226.119.16) (Quit: pystardust)
[23:22:38] *** Joins: earendel (uid498179@user/earendel)
[23:23:38] *** Quits: testuser321 (~wandering@157.119.104.249) (Quit: Leaving)
[23:27:21] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 244 seconds)
[23:27:37] *** Quits: lazyrat (~lazycat@user/lazycat) (Ping timeout: 248 seconds)
[23:27:42] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[23:27:54] *** Joins: lazycat (~lazycat@user/lazycat)
[23:28:01] *** Quits: Benett (~Benett@2a03:4000:1a:7aa::2) (Quit: Â )
[23:28:25] *** Quits: jeroen_ (~jeroen@82-217-106-119.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[23:28:36] *** Joins: Benett (~Benett@2a03:4000:1a:7aa::2)
[23:28:48] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[23:29:11] *** Joins: totenkoph (~scythe@user/totenkoph)
[23:29:51] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Client Quit)
[23:29:51] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Quit: Leaving)
[23:30:13] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[23:31:34] *** Joins: gareppa (~gareppa@user/gareppa)
[23:33:20] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:33:43] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[23:35:07] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:35:27] *** Quits: aaro (~aaro@user/aaro) (Ping timeout: 240 seconds)
[23:37:27] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[23:37:45] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:41:19] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[23:42:46] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[23:44:48] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:47:27] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[23:48:10] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[23:48:53] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[23:49:13] *** Quits: kurahaupo_ (~kurahaupo@58.84.89.180) (Ping timeout: 250 seconds)
[23:49:14] *** Quits: guest856 (~guest@host103.190-224-208.telecom.net.ar) (Remote host closed the connection)
[23:50:41] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[23:58:09] *** Joins: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[23:59:53] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
