[00:00:33] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[00:00:40] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[00:03:51] *** Joins: Pseudocr1 (~sudo@user/pseudocrat)
[00:04:27] *** Joins: ouestbil1ie (~gallup@142.169.33.81)
[00:05:03] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[00:05:21] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Read error: Connection reset by peer)
[00:09:38] *** Quits: ouestbillie (~gallup@modemcable053.204-20-96.mc.videotron.ca) (Quit: Lost terminal)
[00:14:07] *** Joins: am1985 (~AM@2603-7000-3807-e4c1-05c6-c4f8-a04e-227f.res6.spectrum.com)
[00:14:16] *** Quits: ouestbil1ie (~gallup@142.169.33.81) (Ping timeout: 256 seconds)
[00:15:46] *** Quits: gb73d (gb73d@host-92-7-42-10.as13285.net) (Remote host closed the connection)
[00:15:53] *** Quits: am1985 (~AM@2603-7000-3807-e4c1-05c6-c4f8-a04e-227f.res6.spectrum.com) (Client Quit)
[00:16:49] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[00:20:08] <zetaE> does anyone use maxima? I am confuzzled
[00:20:24] <zetaE> the installation was quite simple almost no deps etc
[00:20:35] <zetaE> is it a full blown math suite or what?
[00:21:16] <zetaE> meaning capable of doing all the math?
[00:22:06] <zetaE> sure, octave, sage, R and others got crazy amount of deps
[00:22:08] <mornfall> for most sensible interpretations of ‘all the math’ there is no software that can ‘do it’
[00:23:18] *** Parts: savask (~savask@Powder/Developer/savask) ()
[00:23:21] <zetaE> mornfall: 1 year uni math
[00:24:46] <zetaE> matrix, integrals, all that stuff
[00:25:07] <zetaE> linear algebra
[00:25:17] <fds> It can do a lot of integrals
[00:25:34] <fds> I've never used it for linear algebra/matrices, but it can certainly do something
[00:25:49] <zetaE> what about for plotting, what it's reccomended?
[00:25:56] *** Joins: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net)
[00:26:00] <fds> It is pretty good, but by definition less capable than Sage, because Sage uses Maxima for some tasks
[00:26:43] <zetaE> fds: I guess I have to use to find out
[00:26:47] <fds> Maxima has plotting capabilites, see the function `plot2D for example
[00:26:51] *** Quits: r-g (~r-g@51.15.187.53) (Quit: r-g)
[00:26:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[00:27:05] <fds> Oops, I forgot to close my quotation marks:  `plot2D'
[00:27:27] <zetaE> fds: do you personally use it?
[00:27:48] <fds> I do, yes
[00:28:33] <fds> Not heavily, but I do use it.  Usually for combinatorics/number theory, but sometimes for basic calculus or things like that
[00:29:05] <zetaE> fds: I am at lower level
[00:29:50] <zetaE> fds: I have a question, I've been looking for a prog that shows the steps of algebraic operations not simply jump to results.
[00:30:02] <zetaE> math programs are notoriously bad at this
[00:30:35] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) ()
[00:30:37] <zetaE> or let's say show all the steps of a limit, they all jump to the result
[00:31:08] <fds> Maxima doesn't have anything like that.  I've only seen that from Wolfram Alpha, although it may be a paid feature, I'm not sure.
[00:31:43] <fds> I've never really looked into it, because it's not something I've needed
[00:31:52] <zetaE> fds: what's the approach here? perform operations on numerator and denominator separately, one step at a time in order to prevent from jumping to the results?
[00:33:32] <fds> You can definitely try evaluating parts of the expression separately like that.  Or, let's say, perform substitutions on the expression you're interested in to make it simpler and evaluate that.
[00:34:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:35:06] <zetaE> fds: it's so annoying when you're new to learning this things
[00:35:17] <zetaE> same thing with trig
[00:36:36] <fds> Yes, learning things is hard.  I'm afraid I have no advice for that.  I may be at a `higher' level than you, but I'm just an idiot who hasn't given up yet. :-)
[00:38:11] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-122-63-102.internet.virginmobile.ca)
[00:38:11] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-122-63-102.internet.virginmobile.ca) (Changing host)
[00:38:11] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[00:39:42] <fds> zetaE: By the way, if you have Maxima open you can type `??linearalgebra' at the prompt and press enter to get some advice on doing linear algebra.
[00:40:27] <zetaE> fds: thaks i'll explore it soon
[00:47:08] *** Quits: rito_ (~rito_gh@45.112.243.149) (Quit: Leaving)
[00:49:06] *** Joins: seninha (~seninha@user/seninha)
[00:52:03] *** Joins: freepp (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[00:52:23] *** Quits: freepp (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[00:52:25] *** Quits: magla (~gelignite@55d47b01.access.ecotel.net) (Quit: Stay safe!)
[00:52:59] *** Quits: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net) (Quit:  Try HydraIRC -> http://www.hydrairc.com <-)
[00:53:17] *** Joins: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net)
[00:53:24] *** Joins: flegia (~flegia@109.207.33.210)
[00:54:33] <flegia> Any good intros to abstract algebra & group theory?
[00:54:34] *** Quits: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net) (Client Quit)
[00:54:55] *** Joins: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net)
[00:55:07] <flegia> Videos and book recommendations are welcome :)
[00:55:47] *** Joins: joakimk (~joakimk@2001:464c:7af3:0:6915:56be:cc81:7fe7)
[00:56:51] *** Quits: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net) (Client Quit)
[00:57:10] *** Joins: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net)
[00:58:36] *** Joins: bendersteed (~user@ppp141237131021.access.hol.gr)
[00:58:41] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[00:58:45] <[-_-]> yo
[00:58:55] <[-_-]> What does it mean 'parallel to the surface' ?
[00:59:03] <joakimk> I'm playing around with a weather forecast API, and have this idea of showing the "trend" in the predictions for each hour (or day) ahead. The predictions for, say, Wednesday might change as time passes. Let's say the current prediction (right now) for Wed@noon is rain:0mm, but then tomorrow the prediction for Wed@noon is updated to rain:0.1mm and
[00:59:04] <joakimk> so forth. Then one could say there's a "rising trend".
[00:59:31] <[-_-]> iirc  direction of surface is perpendicular to a tangent plane of the surface
[00:59:47] <joakimk> What I want to try, is to "record" the predictions (every 5 minutes, for every hour of the next 7 days) in a set of series, and then compute some trend
[01:00:48] <joakimk> What's a sensible way of approaching something like this? Curve fitting? Averages?
[01:01:01] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[01:01:06] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) ()
[01:01:20] <[-_-]> sorry I figured it
[01:01:21] <[-_-]> :)
[01:01:24] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Client Quit)
[01:03:46] *** Quits: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net) (Quit:  HydraIRC -> http://www.hydrairc.com <-)
[01:04:55] <joakimk> I had one suggestion of comparing the latest (most current) prediction value to the average of the previous values (at some fixed window -- say 24 hours), and conclude rising trend if the value is significantly higher than the previous average
[01:09:54] *** Joins: Pickchea (~private@user/pickchea)
[01:09:54] <greenbagels> flegia: for books there's no shortage of recommendations
[01:09:59] <greenbagels> dummit and foote is encyclopedic
[01:10:02] *** Quits: Pickchea (~private@user/pickchea) (Remote host closed the connection)
[01:10:04] <greenbagels> there's also artin
[01:11:36] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:12:57] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:13:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[01:14:29] *** Joins: esther (~esther@2607:fb90:5fea:345b:c213:2b8a:4670:d544)
[01:16:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:16:24] *** Joins: TheCatBehemoth (~TheCatBeh@ns3035006.ip-51-255-71.eu)
[01:19:25] *** Joins: TheCatBe1 (~TheCatBeh@ns3035006.ip-51-255-71.eu)
[01:19:40] *** Quits: TheCatBehemoth (~TheCatBeh@ns3035006.ip-51-255-71.eu) (Read error: Connection reset by peer)
[01:20:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:23:37] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[01:26:27] <flegia> @greenbagels thank you, i'll check them out definitely. one thing is sure, i need a lot of examples and some problems to guide me.
[01:29:11] *** enthdegree is now known as enthdegraded
[01:29:15] *** Joins: src (~src@user/src)
[01:30:18] <greenbagels> there are others that i cannot remember
[01:31:23] *** Joins: aqua (~aqua@user/aqua)
[01:34:04] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551)
[01:34:39] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[01:35:07] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551) (Client Quit)
[01:35:24] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551)
[01:36:10] *** Quits: joakimk (~joakimk@2001:464c:7af3:0:6915:56be:cc81:7fe7) (Quit: joakimk)
[01:36:23] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551) (Client Quit)
[01:36:37] *** Quits: TheCatBe1 (~TheCatBeh@ns3035006.ip-51-255-71.eu) (Ping timeout: 240 seconds)
[01:37:07] *** aqua is now known as kish`
[01:39:49] *** Quits: Maturion (~Maturion@2001:4ca0:4fff:2:2:1:1:100f) (Ping timeout: 240 seconds)
[01:40:17] *** Quits: arseniiv (~arseniiv@136.169.201.3) (Quit: gone too far)
[01:42:45] *** Joins: darkapex (~darkapex@user/darkapex)
[01:43:06] *** Quits: xff0x (~xff0x@2001:1a81:52d4:9900:4d46:915d:4480:7a51) (Remote host closed the connection)
[01:43:23] *** Joins: Rutice (~Rutice@pool-96-237-137-192.bstnma.fios.verizon.net)
[01:43:23] *** Joins: xff0x (~xff0x@2001:1a81:52d4:9900:5627:62b8:c837:dd4a)
[01:44:27] *** Joins: Arcorann (~A@user/arcorann)
[01:45:46] *** Joins: bedouin_ (sid523379@id-523379.hampstead.irccloud.com)
[01:46:07] <Bluefoxicy> hang on
[01:46:37] *** Quits: esther (~esther@2607:fb90:5fea:345b:c213:2b8a:4670:d544) (Ping timeout: 240 seconds)
[01:46:54] <Bluefoxicy> I may be able to derive a value in an exponentially-growing (ENORMOUSLY) table by a process that, for larger table sizes, only grows logarithmically in time
[01:47:03] <Bluefoxicy> with much slower growth than the table
[01:47:24] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[01:47:25] *** Quits: Rutice (~Rutice@pool-96-237-137-192.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[01:47:25] <Bluefoxicy> on the other hand, the table produces a redundant representation of information:  an integer can be represented by several combinations of digits because some digits can be negative
[01:47:50] <Bluefoxicy> am I violating information theory by needing less information necessary to address all the cells in the table in order to compute all the cells in the table correctly?
[01:48:41] <Bluefoxicy> this is basically equivalent to the linear growth of a number of digits of precision to which a division problem is calculated reflecting a logarithmic growth of the time required to calculate it
[01:49:48] <Bluefoxicy> in part because while the number of operations required grows faster than linearly (but MUCH slower than the size of the table, by orders of magnitudes), most of the operations can be performed in parallel, prior to other operations, as the results are combined together as you go on
[01:52:57] *** Joins: Maturion (~Maturion@p200300ede72a32005bc80ce80c579d1a.dip0.t-ipconnect.de)
[01:54:19] <Bluefoxicy> I guess it's like saying 1) All division algorithms to a number of significant digits require the same amount of time to compute; and 2) as the number of significant digits increases, the difference in the amount of time required to compute S significant digits versus 2S digits approaches zero
[01:54:31] <Bluefoxicy> *computations, not algorithms
[01:56:32] *** Joins: Guest50 (~Guest50@94.230.83.209)
[01:58:54] *** Quits: Guest50 (~Guest50@94.230.83.209) (Quit: Client closed)
[01:59:38] *** Quits: flegia (~flegia@109.207.33.210) (Quit: leaving)
[02:00:11] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[02:02:24] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:07:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[02:11:24] <Vornicus> so I'm working through some discrete differential geometry stuff ( https://brickisland.net/DDGSpring2021/ ) and this particular homework problem (assignment 2 written, problem 19) claims that the gradient of surface area w.r.t moving a vertex on a mesh is 1/2 the sum of the cotangents of the angles opposite each edge that touches the vertex times that edge's vector toward the vertex
[02:12:21] <Vornicus> (summed over all those edges)
[02:13:30] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:13:49] *** Joins: mickey8 (~user@user/mickey)
[02:14:06] <Vornicus> I can sort of see something that looks *kind of* like it but it's not very good: if you break down the triangles that meet there into right triangles via the altitudes through the central vertex
[02:15:42] <Vornicus> then the lengths of the bases of the triangles are h * cot(angle) but that's h and not the edge length, which it is of course independent of, because you can shove the other corner away along the base line and it gets longer and longer
[02:20:20] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[02:21:41] <Gurkenglas> What do you call an f such that for every g with g=gg, f=fg?
[02:22:06] *** Joins: CombatVet (~c4@user/combatvet)
[02:23:37] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Ping timeout: 240 seconds)
[02:24:23] <Z-module> In what structure/situation?
[02:26:43] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:49b9:77c7:60be:3860)
[02:27:32] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[02:29:09] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[02:30:42] <Gurkenglas> Z-module, http://sketchtoy.com/70389041 t is a monad, h is an algebra. do you want yet more details?
[02:31:07] <Gurkenglas> g is idempotent
[02:31:29] <Gurkenglas> ...the f at the top is tf, of course.
[02:31:59] <Gurkenglas> http://sketchtoy.com/70389044 fixed
[02:33:30] *** Quits: juri_ (~juri@178.63.35.222) (Ping timeout: 260 seconds)
[02:34:19] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:34:37] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:41:54] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[02:41:57] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Quit: Leaving)
[02:42:30] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[02:44:50] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Quit: Leaving)
[02:45:46] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[02:47:26] *** Joins: notzmv (~zmv@user/notzmv)
[02:53:30] *** Joins: Macuser (~Macuser@2600:1003:b449:57f3:9dd:135a:e267:8ebf)
[02:54:26] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[02:55:11] *** Joins: pluri (~pluri@user/pluri)
[02:59:19] *** Joins: stonkey (~stonkey@user/stonkey)
[03:03:37] *** Joins: Matt|home (~matt@adsl-74-233-58-165.mia.bellsouth.net)
[03:09:31] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:49b9:77c7:60be:3860) (Quit: dingdreher)
[03:09:36] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[03:10:41] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[03:11:05] *** Pseudocr1 is now known as Pseudocrat
[03:13:24] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-2ce0-21a6-b236-9780.res6.spectrum.com) (Read error: Connection reset by peer)
[03:15:48] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:24:14] *** Quits: gateway2000 (~gateway20@cpe-172-100-180-15.stny.res.rr.com) (Quit: Leaving)
[03:24:49] *** Joins: seninha (~seninha@user/seninha)
[03:26:46] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[03:26:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:28:01] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[03:28:04] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[03:30:14] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:39] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:36:35] *** Joins: Guts71 (~Guts71@197.206.169.225)
[03:41:53] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:42:31] *** Joins: notzmv (~zmv@user/notzmv)
[03:44:25] <yashi> In symplectic geometry is there a notion of Lagrangian vector (i.e. a vector from a Lagrangian subspace)?
[03:44:46] *** Joins: anovick_ (~anovick@2a0d:6fc0:1e13:4a00:e42c:71f4:c473:b927)
[03:46:40] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[03:51:09] *** Quits: roadt_ (~roadt@114.100.129.3) (Ping timeout: 256 seconds)
[03:54:27] <isekaijin> I don't think there's special notation for those.
[03:55:50] *** Joins: frost (~frost@user/frost)
[03:56:09] <isekaijin> You just say in words “E is a Lagrangian subbundle of TM and v is a section of E” (where M is your symplectic manifold).
[03:57:07] <isekaijin> For the specific case of a symplectic vector space, I think any line can be extended to a Lagrangian subspace anyway.
[04:01:33] *** Joins: zwisch (~zwisch@135-23-67-207.cpe.pppoe.ca)
[04:02:36] *** Joins: e36freak (~e36freak@user/e36freak)
[04:03:46] *** Quits: zwisch__ (~zwisch@135-23-67-207.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[04:03:51] *** Joins: roadt_ (~roadt@60.168.93.72)
[04:05:14] <e36freak> i'm trying to implement fourier division, and am looking for a way to reliably determine how many digits are before the decimal place in the result... you can subtract the number of digits of the two numbers and that gives you a pretty good start, but is there an easy way to determine if i need to add 1 to that?
[04:07:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[04:08:34] *** Joins: seninha (~seninha@user/seninha)
[04:09:24] *** Joins: amit (~amit@IGLD-80-230-75-232.inter.net.il)
[04:10:19] *** Quits: amit (~amit@IGLD-80-230-75-232.inter.net.il) (Client Quit)
[04:11:49] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:17:44] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:20:05] *** Joins: xkuru (~xkuru@user/xkuru)
[04:20:28] *** Joins: jero98772_ (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[04:20:48] *** Joins: frost (~frost@user/frost)
[04:23:02] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[04:23:35] *** Joins: crankslider (~slidercra@user/slidercrank)
[04:23:38] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[04:25:18] *** Joins: juri_ (~juri@178.63.35.222)
[04:25:54] *** Joins: ooxoo (~Guest40@2600:1700:232b:6110:2072:b187:1532:eb17)
[04:26:46] *** Joins: Fairy (~Fairy@ti0004a400-0210.bb.online.no)
[04:30:24] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:30:48] <buster> floor(log10(a) – log10(b)) + 1
[04:31:30] <e36freak> a and b are arrays of digits, too big to fit in a scalar
[04:31:38] <e36freak> sorry, should have mentioned that
[04:32:05] <buster> hmm; still, same idea
[04:32:17] <buster> i guess :)
[04:33:13] <e36freak> so like you have the length, say you're doing a simple 1000 / 43, that's 23 so 2 digits. but 1000/10 is 3 digits
[04:34:41] <buster> add one if the digits of b are lexicographically after the digits of b, right?
[04:34:43] *** Joins: gallup (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:34:50] *** Quits: gallup (~gallup@192-222-138-215.qc.cable.ebox.net) (Client Quit)
[04:34:58] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[04:34:58] <buster> *add one if the digits of b are lexicographically after the digits of a, right? (for a/b)
[04:35:34] <e36freak> oh, that's an idea
[04:35:57] <e36freak> i think that'll work, thank you
[04:36:07] <buster> might do! gl
[04:36:15] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:36:48] <e36freak> thought a bignum library was gonna be so easy until i got to division
[04:38:07] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[04:38:54] <buster> by "after" i mean "not after", naturally
[04:39:24] <e36freak> sure. they're chars, i can just do a numeric comparison, but i get what you're saying and it should work nicely
[04:39:49] *** Quits: anovick_ (~anovick@2a0d:6fc0:1e13:4a00:e42c:71f4:c473:b927) (Ping timeout: 240 seconds)
[04:40:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:44:13] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 240 seconds)
[04:45:06] *** Joins: pluri (~pluri@user/pluri)
[04:45:39] *** Joins: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net)
[04:47:41] <jbis> Hello
[04:47:52] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:48:21] <buster> you could conceptualize it as transforming the operands to significand * base^exponent. then floor(log10(x*10^e)-log10(y*10^f))+1 = floor(log10(x/y))+e-f+1, and the floor is -1 iff x<y, 0 otherwise (since x<10y)
[04:48:32] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[04:48:37] *** Quits: Macuser (~Macuser@2600:1003:b449:57f3:9dd:135a:e267:8ebf) (Ping timeout: 240 seconds)
[04:48:47] <jbis> is x^2 invertible?
[04:49:01] <jbis> is x^3 invertible?
[04:49:09] <Z-module> In what ring?
[04:49:24] <jbis> Real numbers?
[04:49:38] <Z-module> Then is, for any nonzero x
[04:49:41] <Z-module> Then *yes
[04:49:46] *** Joins: loller_ (uid358106@id-358106.uxbridge.irccloud.com)
[04:49:51] <jbis> Yes for both
[04:49:54] <jbis> ?
[04:50:28] <buster> jbis, a nonzero real *value* is invertible; but you're asking about the function f(x)=x^2, yeah?
[04:50:53] <jbis> The function x^3
[04:50:59] <jbis> f(x) = x^3
[04:51:03] <jbis> is f(x) invertible
[04:51:33] <Z-module> Yes
[04:51:44] <Z-module> every real x has a unique real cube root
[04:52:20] <jbis> x^3 = x * x * x if x = 0, the 0 * 0 * 0. But multiplying by 0 is not invertible. So how is x^3 invertible?
[04:52:53] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Quit: Leaving)
[04:52:56] <buster> multiplying by zero is not the same gunction
[04:53:19] <buster> multiplying by zero, f(x)=0*x, is not the same function as cubing, f(x)=x^3
[04:53:35] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-122-63-102.internet.virginmobile.ca)
[04:53:49] <buster> one is invertible, the other isn't
[04:54:03] <jbis> f(x) = x * x * x, f(x) = x ^ 3, those are equivalent no?
[04:54:12] <buster> yes
[04:54:25] <jbis> f(x) = x * x * x is not invertible
[04:54:32] <Z-module> A function f: R -> R  is "invertible" iff some function g: R -> R  exists with f(g(x)) = g(f(x)) = x  for all x in R.  In this case, if f(x) = x^3, the g is the real cube-root function.
[04:54:55] <jbis> Ok then let me ask it this way
[04:56:17] <jbis> x = 0; x^3 = 0; subtract the functions: x^3- x =  0-0, that produces the solution 1 and 0. However, 1 is extraneous. Why do we get an extranious answer?
[04:56:20] *** Quits: Guts71 (~Guts71@197.206.169.225) (Ping timeout: 256 seconds)
[04:56:49] <jbis> "subtract the equations" *
[04:56:50] <Z-module> -1 is also a solution
[04:56:57] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Ping timeout: 240 seconds)
[04:57:08] <Z-module> "extraneous" only makes sense when you impose other conditions
[04:58:01] <jbis> Why do we get an  answer tho? My understanding is that if you preform valid invertible operations on both sides of an equation, they are an equivalent equation
[04:58:34] <jbis> Why do we get an  extraneous  answer tho? My understanding is that if you preform valid invertible operations on both sides of an equation, they are an equivalent equation*
[05:01:31] <Jong> if log(a) - log(b) == log(a/b), then is there anything similar for log(a) / log(b) ?
[05:01:55] <Jong> a^(1/b) ?
[05:01:59] <Jong> hmm let me try and see
[05:02:12] *** Quits: FragmentedCurve (~FC@pool-100-2-232-17.nycmny.fios.verizon.net) (Quit: leaving)
[05:02:47] <jbis> am i missing something?
[05:03:08] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:03:15] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[05:03:37] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[05:03:52] <buster> what equation did you start with, and what operation did you perform?
[05:04:12] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[05:04:22] <buster> if you started with x^3=0 and subtracted x on the left and 0 on the right, that's only "doing the same thing to both sides" if x=0
[05:04:25] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Client Quit)
[05:05:11] <Jong> you must be talking to jbis
[05:06:17] <e36freak> buster: reminds me of that 0 = 1 proof
[05:06:48] *** Joins: vysn (~vysn@user/vysn)
[05:06:48] <jbis> start with x = 0, cube both sides, x^3 = 0^3 or x^3 = 0. Now subtract x on both sides, x^3 - x = 0 - 0 (because x = 0) you get x^3 - x = 0.
[05:07:32] <e36freak> Jong: log(a) / log(b) is logb(a), no?
[05:07:33] <jbis> oh
[05:07:37] <jbis> i see what you are saying
[05:08:14] <Jong> e36freak yes it is. You just used different notation
[05:08:52] *** Quits: smile (uid510004@user/smi) (Quit: Connection closed for inactivity)
[05:09:17] <Jong> "log" followed by subscript "b" followed by "(a)"
[05:09:45] <Jong> subscript is denoted as "_" on irc
[05:10:02] <Jong> so, log_b(a) is technically the notation you're after
[05:10:08] <Jong> e36freak but correct me if I'm mistaken
[05:10:32] *** Quits: jero98772_ (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[05:10:32] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[05:10:46] <e36freak> good to know, thanks
[05:10:50] <buster> nobody really pays much attention to the ISO standard for IRC
[05:11:09] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:11:12] *** Joins: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net)
[05:11:40] *** Joins: plankster (~plankster@user/plankers)
[05:12:13] *** Quits: plank (~plankster@user/plankers) (Ping timeout: 240 seconds)
[05:13:55] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:14:28] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[05:14:55] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[05:15:12] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[05:15:17] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[05:15:41] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[05:15:41] *** Joins: tkkon (~tkkon@user/tkkon)
[05:15:43] <jbis> buster that is asserted in x = 0
[05:16:11] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[05:16:28] <buster> jbis, the rule about performing the same operation to both sides of an equation just doesn't apply to this situation. you're starting with two equations, and that's not the same thing as one equation.
[05:16:30] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[05:16:47] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[05:16:48] <jbis> but they are equivalent no?
[05:18:08] *** Joins: frelleck (~frelleck@user/frelleck)
[05:18:44] *** Quits: SomeonePaul (~SomeonePa@c-24-34-241-188.hsd1.ma.comcast.net) (Quit:  HydraIRC -> http://www.hydrairc.com <- Like it?  Visit #hydrairc on Freenode)
[05:18:46] *** Joins: am1985 (~AM@2603-7000-3807-e4c1-10a5-46da-2069-2211.res6.spectrum.com)
[05:19:29] <buster> the equations x=0 and x³=0 are equivalent
[05:19:42] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[05:20:57] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[05:20:59] <buster> if x=0 then (x³=0 is equivalent to x³-x=0)
[05:21:15] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[05:21:27] <buster> you can deduce that: if x=0 then (x³-x=0 has one solution, x=0)
[05:22:02] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[05:23:30] <buster> let me put it this way: you know that x³-x=0 has three solutions, 0, -1 and +1
[05:24:23] <buster> therefore your argument that (x=0 and x³=0) ⇔ (x³-x=0) cannot be correct
[05:25:46] <buster> i don't understand what your argument was: you said you were going to starting with an equation and perform an invertible operation on both sides (which is valid), but in fact you started with two equations and subtracted them (which is a completely different thing)
[05:26:04] <buster> but whatever it was, you now know that it didn't work
[05:26:06] *** Joins: NEYi (~NEYi@109.251.216.38)
[05:26:16] *** Joins: PJBoy (~PJBoy@user/pjboy)
[05:28:29] *** PJBoy is now known as Guest5916
[05:28:29] *** Quits: Guest5916 (~PJBoy@user/pjboy) (Killed (tantalum.libera.chat (Nickname regained by services)))
[05:28:42] *** Joins: PJBoy (~PJBoy@user/pjboy)
[05:34:27] *** Joins: frost (~frost@user/frost)
[05:36:12] <jbis> thank you
[05:36:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[05:42:12] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[05:44:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[05:45:19] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[05:45:42] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[05:47:45] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:78b1:e6a0:76ad:d09a)
[05:48:43] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[05:50:34] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[05:53:42] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 256 seconds)
[05:55:36] *** Joins: mbuf (~Shakthi@182.77.103.82)
[05:57:26] *** Quits: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net) (Remote host closed the connection)
[05:59:22] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[05:59:51] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[06:01:29] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:01:29] *** Joins: emf (~emf@2620:10d:c090:400::5:b9c2)
[06:01:37] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:01:37] *** Quits: xff0x (~xff0x@2001:1a81:52d4:9900:5627:62b8:c837:dd4a) (Ping timeout: 240 seconds)
[06:01:41] <isekaijin> buster: x^3 = 0 doesn't necessarily imply x = 0.
[06:02:18] <isekaijin> buster: For example, if x is a 3x3 Jordan block with eigenvalue 0, then x^3 = 0, but x \ne 0.
[06:03:45] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:7a4c:f58f:8e12:e28b)
[06:04:32] <Arcorann> We specified x as real above though
[06:04:53] *** Quits: NllPtr (~NllPtr@186-78-254-187.baf.movistar.cl) (Ping timeout: 256 seconds)
[06:04:53] *** Quits: ooxoo (~Guest40@2600:1700:232b:6110:2072:b187:1532:eb17) (Ping timeout: 256 seconds)
[06:06:50] *** Joins: NllPtr (~NllPtr@186-78-254-187.baf.movistar.cl)
[06:07:15] *** Joins: frost (~frost@user/frost)
[06:07:39] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:08:16] <isekaijin> Oh.
[06:11:56] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[06:12:13] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:12:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:15:29] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: leaving)
[06:15:49] *** Quits: NllPtr (~NllPtr@186-78-254-187.baf.movistar.cl) (Ping timeout: 240 seconds)
[06:15:52] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[06:18:09] *** Joins: NllPtr (~NllPtr@186-78-254-187.baf.movistar.cl)
[06:20:05] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[06:20:11] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:20:40] *** Joins: FragmentedCurve (~FC@pool-100-2-232-17.nycmny.fios.verizon.net)
[06:21:22] *** Joins: gateway2000 (~gateway20@cpe-172-100-180-15.stny.res.rr.com)
[06:22:04] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[06:22:32] *** Quits: tokerboker (knited@2607:5300:60:21b::1) (Quit: ZNC 1.6.5+deb1+deb9u2 - http://znc.in)
[06:23:49] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[06:24:36] *** Joins: frost (~frost@user/frost)
[06:25:09] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[06:25:16] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[06:25:49] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[06:26:02] *** Quits: dld (~davidlowr@2601:197:600:1210:31ff:a804:81e3:5196) (Ping timeout: 240 seconds)
[06:26:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[06:27:23] *** Joins: dld (~davidlowr@2601:197:600:1210:a837:f325:7d6a:5246)
[06:27:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[06:28:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:29:49] *** Quits: Fairy (~Fairy@ti0004a400-0210.bb.online.no) (Ping timeout: 256 seconds)
[06:32:42] *** Joins: kado (~kado@36.37.140.89)
[06:34:21] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 256 seconds)
[06:37:11] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:39:25] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Ping timeout: 240 seconds)
[06:41:21] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:42:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:44:48] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:45:16] *** Joins: Al-Khwar1zmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[06:48:23] *** Joins: Nognosis (~Nognosis@198.11.30.30)
[06:51:22] *** Joins: nullcone (uid11626@id-11626.helmsley.irccloud.com)
[06:52:09] *** Quits: Al-Khwar1zmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: leaving)
[06:54:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[06:55:14] *** Joins: Guest40 (~Guest40@2600:1700:232b:6110:2072:b187:1532:eb17)
[06:57:08] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[06:57:33] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:01:33] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[07:03:32] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:03:36] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:04:00] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-122-63-102.internet.virginmobile.ca) (Read error: Connection reset by peer)
[07:04:02] *** Joins: darkapex_ (~darkapex@user/darkapex)
[07:04:57] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
[07:10:03] *** Quits: Guest40 (~Guest40@2600:1700:232b:6110:2072:b187:1532:eb17) (Ping timeout: 256 seconds)
[07:11:14] <rex> Hi, hope this is not too off-topic: Given an array of lines and a string called match, I'm supposed to do a binary search for the line containing match
[07:12:08] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:12:10] <rex> I thought the whole point of binary search was to just look at the center to see in which half it is in
[07:12:27] <rex> but how does the middle line give ma information which half might contain a line called match?
[07:12:37] *** Joins: tokerboker (knited@2607:5300:60:21b::1)
[07:12:38] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:14:04] <isekaijin> Are the lines sorted lexicographically?
[07:14:24] <isekaijin> Actually, even in that case, it is not clear to me how this should work.
[07:14:29] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[07:14:33] *** Joins: segnior (segnior@user/segnior)
[07:15:18] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 256 seconds)
[07:15:57] <e36freak> rex: binary searches only work on sorted lists
[07:16:20] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[07:16:26] <e36freak> start in the middle, and compare the value you have with that value. if it's less, you go down by half. if more, up by half
[07:16:34] <e36freak> repeat until they're equal (or you can't divide anymore)
[07:16:42] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[07:16:57] <isekaijin> Yeah, but this assumes that you are looking for exact matches.
[07:17:11] <e36freak> oh, i missed "the line containing match"
[07:17:18] <e36freak> rex: this homework or something
[07:17:19] <e36freak> ?
[07:17:36] <e36freak> it could work if the search string is anchored to the start
[07:18:00] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:18:59] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:19:26] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:19:30] *** Quits: segnior (segnior@user/segnior) (Read error: Connection reset by peer)
[07:20:18] *** Quits: tokerboker (knited@2607:5300:60:21b::1) (Read error: Connection reset by peer)
[07:20:40] <rex> well they say the list is sorted, because it was "scanned sequentially". Basically the methoed before parsed a string and split it at newliens
[07:21:28] <rex> but to me this means "sorted" according to the input
[07:22:08] <rex> and in the implementation i have one normal null terminated string
[07:22:23] <rex> but all lines are pointers into this string with their length stored extra
[07:23:02] <rex> e36freak: it's kind of homework; It gets corrected, but if I don't do it, no one cares
[07:23:12] <rex> but it's free exam prep :)
[07:24:17] <rex> ok if it would be lexicographically sorted and we were looking only for complete matches then yes it's easy
[07:25:29] <rex> c. Next, implement the function findLineContaining() that finds the line that con-
[07:25:31] <rex> tains a match. 3 P-pt
[07:25:33] <rex> • The resulting array from findLines() is already sorted, as it walks the string
[07:25:35] <rex> sequentially.
[07:25:37] <rex> • Implement a binary search on that sorted array of lines.
[07:29:03] <rex> isekaijin: I don't see any other way, but to just test each line for the match
[07:29:10] <rex> or at least until one was found
[07:29:49] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:29:58] <isekaijin> rex: Are the lines completely arbitrary? Maybe they have some extra structure that you could exploit.
[07:30:19] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:30:24] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[07:31:46] <isekaijin> rex: There is a well-known algorithm (Knuth-Morris-Pratt) for testing whether a string contains another as a substring. But, if your lines are completely arbitrary, then you would have to run this algorithm sequentially for each line.
[07:32:45] <isekaijin> Errr, not sequentially. You can test different lines in parallel, but still... potentially too many lines.
[07:32:59] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c4b8:d9e6:36e5:6265) (Quit: Leaving)
[07:33:27] <rex> well the whole exercise is labeled parallel string search
[07:33:37] <isekaijin> Oh.
[07:33:37] *** Quits: soapsudsxx (~soapsudsx@141.193.188.151) (Remote host closed the connection)
[07:34:06] <rex> but d. will be called parallelStringSearch
[07:34:31] <isekaijin> Then write a helper routine that uses KMP on a single line, and spam child threads that call this routine.
[07:35:29] <isekaijin> If your language uses OS threads rather than green threads, then, depending on the number of lines, you might have to be careful not too spam too many threads, though.
[07:35:41] <e36freak> i guess you could recursively call it in a tree-like structure until a match is found
[07:35:53] <e36freak> not really sure what the advantage of that is though
[07:36:18] *** Joins: soapsudsxx (~soapsudsx@141.193.188.151)
[07:36:29] <isekaijin> If the lines are short enough, you could also give each thread a bunch of lines, instead of a single line.
[07:36:34] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:36:41] <e36freak> still not really a binary search
[07:37:01] <isekaijin> Yeah, there's no binary search here. No idea how the problem could lend itself to using a binary search.
[07:37:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:37:14] <rex> Yeah ok I know I could do this stuff; seeing as they implemented 75% of the parallel stuff for d. already in the template, it seems as they didn't intend for manual thread creation
[07:37:34] <isekaijin> Oh.
[07:37:37] <isekaijin> Nice.
[07:37:48] <isekaijin> By D, you mean the D programming language?
[07:37:48] <rex> ok I'll just solve c. then by running it on all lines and put a comment there
[07:37:49] <bpmedley> rex : What if the problem was saying that you have a "dictionary list" of strings and you use the first letter of your match string via binary search.  Does that make sense?
[07:38:18] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c006:a6d3:5f30:2560)
[07:38:18] <rex> isekaijin: no part of exercise d. like in a., b., c.
[07:38:23] <isekaijin> oh haha
[07:38:23] <e36freak> rex: what does the search string look like? can it be anywhere in the line?
[07:39:09] <e36freak> buster: by the way i got it working, appreciate the tip
[07:39:34] <isekaijin> D and similar languages (C++, Rust, Zig, etc.) are actually rather nice for solving these algorithms puzzles.
[07:39:45] <rex> ok the testcase they included is the input: "hello\nworld\nworld\nhello\n"
[07:39:53] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:40:04] <rex> bpmedley: yes then it would all make sense
[07:40:30] <rex> but this is acutally not the first time, the specs sucked :)
[07:40:36] <rex> isekaijin: the language is C
[07:40:44] <rex> and the class is called "Operating systems" :)
[07:40:55] *** Joins: xelxebar (~xelxebar@aj097104.dynamic.ppp.asahi-net.or.jp)
[07:40:59] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:42:02] <isekaijin> Wait. For a while, I thought that each line was a separate string.
[07:42:17] <rex> well it's kinda messed up
[07:42:21] <rex> We get one null terminated string
[07:42:26] <rex> and then parse it into Line structs
[07:42:34] <rex> each line has a pointer to the beginning
[07:42:40] <isekaijin> Oh.
[07:42:46] <rex> and the valid length up to including the '\n'
[07:42:57] <rex> so depending on your point of view
[07:43:11] <rex> they are independent strings or since they're not null terminated not strings at all :)
[07:43:14] <rex> but they share the same memory
[07:43:18] <rex> with the input string
[07:44:16] *** Quits: moog (~moog@107.77.244.39) (Remote host closed the connection)
[07:44:29] <rex> part a. was implementing "findFirstSubstring(*needle, *haystack, length)
[07:44:48] <rex> and length was needed, since the string is not neccesarily null terminated
[07:44:59] <rex> part b. was split input into lines
[07:46:50] <rex> I'll just write a comment and ask what this is about and what was supposed to be the solution.
[07:47:32] <rex> Sorry to have bothered you; but it's good to know, that I didn't miss anything obvious. Thx :)
[07:47:36] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 256 seconds)
[07:53:38] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:54:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:56:13] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:58:19] *** Joins: notzmv (~zmv@user/notzmv)
[08:02:24] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[08:06:53] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Quit: leaving)
[08:07:40] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:08:21] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:09:17] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:10:04] *** Quits: Guest11 (~Guest11@pool-100-16-120-209.bltmmd.fios.verizon.net) (Quit: Client closed)
[08:11:38] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:11:45] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:12:00] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:12:14] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:12:44] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c006:a6d3:5f30:2560) (Remote host closed the connection)
[08:12:55] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c006:a6d3:5f30:2560)
[08:13:44] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:13:58] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:15:07] *** Joins: audiobirb (~audio@user/audio)
[08:15:39] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2009:c7d3:533:666c)
[08:15:46] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2009:c7d3:533:666c) (Excess Flood)
[08:19:59] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Quit: leaving)
[08:20:15] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:21:36] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:22:40] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:22:54] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:26:12] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:27:03] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[08:28:12] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:28:17] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:78b1:e6a0:76ad:d09a) (Ping timeout: 240 seconds)
[08:28:34] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:30:30] *** Quits: frelleck (~frelleck@user/frelleck) ()
[08:31:51] <|smlckz|> how would you calculate the radius of curvature at (0,0) of a function y=f(x) where f'(0) is infinity? [ The curve is specifically y^2 = 4x ]
[08:32:48] *** Joins: am1985` (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[08:33:43] <rex> |smlckz|: couldn't you in this case because of symmetry calculate the curvature of the graph y = 1 x^2
[08:33:47] <rex> |smlckz|: couldn't you in this case because of symmetry calculate the curvature of the graph y = 1/4 x^2
[08:35:03] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Ping timeout: 256 seconds)
[08:35:14] <|smlckz|> i could but i do not know if so much deviation from the question would be tolerated..
[08:35:30] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[08:35:53] <sonny> a/b/c = a/b * 1/c ?
[08:35:54] *** Quits: am1985 (~AM@2603-7000-3807-e4c1-10a5-46da-2069-2211.res6.spectrum.com) (Read error: Connection reset by peer)
[08:36:14] <rex> sonny: depends how you parenthesize
[08:36:45] <rex> |smlckz|: why deviation? curvature is a geometric property and therefore independent of parametrisation
[08:37:01] <sonny> (a/b)/c = (a/b) * (1/c)
[08:37:14] <rex> sonny: then yes
[08:37:43] <|smlckz|> hmm..
[08:37:48] <sonny> since the rule is the to multiply inverse of c right?
[08:38:50] <rex> sonny: if this helps you understanding it
[08:39:55] <rex> |smlckz|: as you already mentioned, the "normal" cartesian way doesn't work here
[08:40:07] *** Joins: am1985 (~AM@107.127.45.162)
[08:42:34] *** Quits: am1985` (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Ping timeout: 256 seconds)
[08:43:10] <mefistofeles> it works
[08:43:26] <mefistofeles> |smlckz|: you have to use the formula and simplify, and then evaluate
[08:43:36] <mefistofeles> you get a finite quantity
[08:44:07] <mefistofeles> I *think* you get -2, from the top of my head
[08:45:11] <mefistofeles> hmm, or maybe not... but well, try that and show your results, I'm doing it in my head xD
[08:45:48] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:46:04] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:48:17] *** Quits: xff0x (~xff0x@2001:1a81:5310:700:7a4c:f58f:8e12:e28b) (Ping timeout: 240 seconds)
[08:49:35] *** Joins: xff0x (~xff0x@port-92-193-159-86.dynamic.as20676.net)
[08:52:40] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:52:48] <sonny> what is the tool to derive algebra expressions automatically?
[08:52:49] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:53:16] <mefistofeles> mathematica?
[08:53:20] <mefistofeles> maxima?
[08:53:22] <mefistofeles> sympy?
[08:53:24] <mefistofeles> sage?
[08:53:27] <sonny> what is the name?
[08:53:34] <sonny> computer algbera software?
[08:53:37] <mefistofeles> those are names
[08:53:38] <mefistofeles> yes
[08:53:42] <sonny> ok, thx
[08:54:03] <mefistofeles> s/system/software
[08:54:05] <mefistofeles> but yes
[08:54:37] <sonny> I've failed to derive an expression many times so I am going to need something to do it automatically
[08:55:17] *** Joins: horseface (~horseface@user/horseface)
[08:55:35] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:55:41] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:55:44] *** Quits: horseface (~horseface@user/horseface) (Max SendQ exceeded)
[08:55:49] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Ping timeout: 240 seconds)
[09:00:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:02:44] <sonny> mefistofeles: any recommendations for one on windows?
[09:03:12] <sonny> nvm, I found a list
[09:06:00] *** Quits: soapsudsxx (~soapsudsx@141.193.188.151) (Remote host closed the connection)
[09:09:39] *** Joins: yBtNJW3j (~aib9Zume@71.50.58.137)
[09:13:32] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[09:17:42] *** Quits: NllPtr (~NllPtr@186-78-254-187.baf.movistar.cl) (Ping timeout: 256 seconds)
[09:19:28] *** Joins: NllPtr (~NllPtr@186-78-254-187.baf.movistar.cl)
[09:23:12] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:23:32] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:25:12] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:25:31] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:27:32] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:27:44] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[09:27:51] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:32:58] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[09:33:06] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[09:33:23] <audiobirb> mefistofeles, you still around?
[09:36:47] <Batzy> what set is usually denoted with a bolface T?
[09:36:53] <Batzy> boldface*
[09:43:02] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:43:22] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:47:07] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:49:53] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:50:27] *** Joins: karlosz (~karlosz@47.151.136.69)
[09:52:21] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[09:52:29] <sonny> "the derivative of a sum is the sum of derivatives of its terms" -- as someone who has forgotten calculus and is working with sums what should I picture a derivative as?
[09:53:28] <HisShadow> limits, it follows from it right away
[09:54:57] <sonny> I don't recall limits either. I do remember liking the infinitesmal definition for calculus though
[09:55:31] <sonny> HisShadow: a derivative is a portion?
[09:57:17] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:57:37] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:58:20] <HisShadow> portion?
[10:00:53] *** Joins: Urawa (Awaru@gateway/vpn/airvpn/awaru)
[10:01:10] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[10:01:14] <Urawa> hi need help how much is 7+2 please
[10:01:55] <sonny> HisShadow: I'll just have to revist calculus, glad to finish the section though.
[10:03:26] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[10:03:43] *** Joins: CombatVet (~c4@user/combatvet)
[10:04:09] *** Joins: llh (~llh@user/llh)
[10:05:19] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[10:08:46] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:10:39] *** Joins: horseface (~horseface@user/horseface)
[10:12:30] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[10:12:48] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[10:16:03] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[10:19:00] *** Quits: Nognosis (~Nognosis@198.11.30.30) (Quit: Leaving)
[10:20:30] *** Quits: river (~My_user_n@tilde.team/user/river) (Quit: WeeChat 2.3)
[10:24:00] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[10:24:01] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:24:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:24:59] *** Joins: aqua (~aqua@user/aqua)
[10:25:03] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[10:26:03] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:26:15] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[10:26:17] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:27:37] *** Quits: kapil- (~kapil@2a01:4f9:c010:c9c3::1) (Read error: Connection reset by peer)
[10:29:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[10:32:16] <Batzy> sonny: the statement you wrote and the question you asked are not exactly the same thing
[10:32:45] *** Joins: darkapex (~darkapex@user/darkapex)
[10:32:48] <Batzy> when people first learn about derivatives they usually picture them as "instantaneous rates of change"
[10:32:57] <Batzy> them as*
[10:33:04] <Batzy> my keyboard has been a little messy lately
[10:33:10] <sonny> nw
[10:33:21] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:33:25] <sonny> rates of changes hasn't ever been effective for me
[10:33:29] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
[10:33:42] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:33:49] <sonny> luckily I remember the techniques so I could follow the derivation
[10:33:51] *** Quits: audiobirb (~audio@user/audio) (Remote host closed the connection)
[10:34:09] *** Joins: audiobirb (~audio@user/audio)
[10:35:17] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[10:37:57] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[10:38:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[10:41:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:45:13] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[10:45:41] *** Joins: cheater (~Username@user/cheater)
[10:46:12] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[10:48:13] *** Quits: specing (~specing@user/specing) (Ping timeout: 240 seconds)
[10:49:05] *** Joins: specing (~specing@user/specing)
[10:49:59] <sonny> is the sum incorrect since it starts with k=0? <ibb.co/1zJRnZk>
[10:53:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:54:56] <PlanckWalk> Why would it be?
[10:55:38] <PlanckWalk> The k=0 term in the derivative vanishes anyway due to the factor of k
[10:56:17] *** Joins: anovick_ (~anovick@2a0d:6fc0:1e13:4a00::34d)
[10:57:56] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:59:55] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:00:27] <sonny> PlanckWalk: right, forgot the factor
[11:00:27] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[11:01:00] <rex> sonny: you can picture it as the steepnees of the tangent of a graph at a point
[11:01:23] <sonny> ok, that makes sense, so k-1 is related to the derivative bit
[11:02:47] <sonny> I could not tell if the result of this is the same as 2.26
[11:02:50] *** Quits: am1985 (~AM@107.127.45.162) (Quit: This computer has gone to sleep)
[11:02:59] <sonny> rex: ok
[11:03:00] *** Joins: caramel (~caramel@user/caramel)
[11:03:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[11:03:43] <rex> I'm having a little trouble with understanding a graph theorem: In an exercise they refer to Hajnal and Szmeredi and using their theorem as stated here https://en.wikipedia.org/wiki/Hajnal%E2%80%93Szemer%C3%A9di_theorem
[11:03:55] <rex> makes the exercise trivial to solve
[11:04:59] <rex> However in our lecture notes the theorem by Hajnal and Szmeredi is this: Let G be a graph with n vertices, k | n and δ(G) ≥ (1- 1/k)n. Then G has a K_k-Factor.
[11:05:38] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:05:55] <rex> Are those theroems equivalent?
[11:06:03] *** Joins: frost (~frost@user/frost)
[11:06:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:07:10] <rex> I also have trouble understanding the definition of H-factor: It's supposed to be a spanning subgraph, that is a vertex-disjoint union of copies of H
[11:07:15] *** Joins: darkapex_ (~darkapex@user/darkapex)
[11:07:49] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[11:09:29] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[11:09:48] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[11:10:06] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[11:14:21] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:14:35] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:14:39] <sonny> ok I think I see the connection, due to how the derivative rules for sums work. The difference between the two is a x term that is factored out, which is related to how the derivative works
[11:16:19] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[11:16:22] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:16:38] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[11:17:23] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:19:41] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[11:23:50] *** Joins: andreasbuhr (~quassel@p549db698.dip0.t-ipconnect.de)
[11:26:09] *** Quits: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:26:24] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:26:48] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:27:45] *** Joins: palasso (~palasso@user/palasso)
[11:29:34] *** Quits: anovick_ (~anovick@2a0d:6fc0:1e13:4a00::34d) (Ping timeout: 268 seconds)
[11:39:22] *** Quits: jellydonut (~quassel@185.213.154.170) (Read error: Connection reset by peer)
[11:39:30] *** Quits: frost (~frost@user/frost) (*.net *.split)
[11:39:30] *** Quits: specing (~specing@user/specing) (*.net *.split)
[11:39:30] *** Quits: cheater (~Username@user/cheater) (*.net *.split)
[11:39:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (*.net *.split)
[11:39:31] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (*.net *.split)
[11:39:31] *** Quits: horseface (~horseface@user/horseface) (*.net *.split)
[11:39:31] *** Quits: llh (~llh@user/llh) (*.net *.split)
[11:39:31] *** Quits: [-_-] (~fractal@user/---/x-1675478) (*.net *.split)
[11:39:31] *** Quits: NllPtr (~NllPtr@186-78-254-187.baf.movistar.cl) (*.net *.split)
[11:39:31] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (*.net *.split)
[11:39:31] *** Quits: mbuf (~Shakthi@182.77.103.82) (*.net *.split)
[11:39:31] *** Quits: kado (~kado@36.37.140.89) (*.net *.split)
[11:39:31] *** Quits: tkkon (~tkkon@user/tkkon) (*.net *.split)
[11:39:31] *** Quits: plankster (~plankster@user/plankers) (*.net *.split)
[11:39:31] *** Quits: vysn (~vysn@user/vysn) (*.net *.split)
[11:39:31] *** Quits: juri_ (~juri@178.63.35.222) (*.net *.split)
[11:39:31] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (*.net *.split)
[11:39:31] *** Quits: libsys (~libsys@186.105.153.44) (*.net *.split)
[11:39:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[11:39:31] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (*.net *.split)
[11:39:31] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[11:39:31] *** Quits: nejimban (~ben@user/nejimban) (*.net *.split)
[11:39:31] *** Quits: omnisip (~omnisip@c-76-25-44-21.hsd1.co.comcast.net) (*.net *.split)
[11:39:31] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (*.net *.split)
[11:39:31] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[11:39:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[11:39:31] *** Quits: Satin (uid193953@user/Seten) (*.net *.split)
[11:39:31] *** Quits: justIrresolute (~justache@user/justache) (*.net *.split)
[11:39:31] *** Quits: defjam (~eb0t@90.203.120.248) (*.net *.split)
[11:39:31] *** Quits: ScRamble (~S@na.altplay.net) (*.net *.split)
[11:39:32] *** Quits: MetricT2 (~MetricT@075-131-120-170.res.spectrum.com) (*.net *.split)
[11:39:32] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[11:39:32] *** Quits: anderson (~ande@user/anderson) (*.net *.split)
[11:39:32] *** Quits: qedders (~qedders@bzq-84-108-229-161.cablep.bezeqint.net) (*.net *.split)
[11:39:32] *** Quits: haritz (~hrtz@user/haritz) (*.net *.split)
[11:39:32] *** Quits: Echoz_ (~chris@user/echoz) (*.net *.split)
[11:39:32] *** Quits: yashi (~user_name@user/yashi) (*.net *.split)
[11:39:32] *** Quits: mra90 (~Martin@134.191.221.84) (*.net *.split)
[11:39:32] *** Quits: traxex (traxex@user/traxex) (*.net *.split)
[11:39:32] *** Quits: jole (~jole@2a05:f480:2000:1624:5400:3ff:fe9c:b8a8) (*.net *.split)
[11:39:32] *** Quits: jpaa (~jpaa@161.97.129.36) (*.net *.split)
[11:39:32] *** Quits: Oxyd (~oxyd@user/oxyd) (*.net *.split)
[11:39:32] *** Quits: szdani10 (~szdani10@unixit.org) (*.net *.split)
[11:39:32] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[11:39:32] *** Quits: steam (~steam@user/steam) (*.net *.split)
[11:39:32] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[11:39:32] *** Quits: Furai (~Furai@furai.pl) (*.net *.split)
[11:39:32] *** Quits: _tjr_ (~tjr@233.ip-144-217-92.net) (*.net *.split)
[11:39:32] *** Quits: drdo (~drdo@144.172.69.89) (*.net *.split)
[11:39:32] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (*.net *.split)
[11:39:32] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[11:39:32] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (*.net *.split)
[11:39:32] *** Quits: cebor (~cebor@user/cebor) (*.net *.split)
[11:39:32] *** Quits: leah2 (~leah@vuxu.org) (*.net *.split)
[11:39:32] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[11:39:32] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (*.net *.split)
[11:39:32] *** Quits: aqua (~aqua@user/aqua) (*.net *.split)
[11:39:32] *** Quits: CombatVet (~c4@user/combatvet) (*.net *.split)
[11:39:32] *** Quits: mickey8 (~user@user/mickey) (*.net *.split)
[11:39:32] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (*.net *.split)
[11:39:32] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (*.net *.split)
[11:39:32] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (*.net *.split)
[11:39:32] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (*.net *.split)
[11:39:33] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (*.net *.split)
[11:39:33] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[11:39:33] *** Quits: madage (~madage@user/madage) (*.net *.split)
[11:39:33] *** Quits: mornfall (~mornfall@user/mornfall) (*.net *.split)
[11:39:33] *** Quits: Europa_ (~Europa@user/europa) (*.net *.split)
[11:39:33] *** Quits: atx (~atx@2001:470:69fc:105::923) (*.net *.split)
[11:39:33] *** Quits: quantum (~quantum@user/quantum/x-8556232) (*.net *.split)
[11:39:33] *** Quits: BitPuffin (~bitpuffin@2001:470:69fc:105::c9c5) (*.net *.split)
[11:39:33] *** Quits: smitop[m] (~smitopkde@2001:470:69fc:105::1:117) (*.net *.split)
[11:39:33] *** Quits: int-e (~noone@int-e.eu) (*.net *.split)
[11:39:33] *** Quits: haskal (~haskal@tilde.town) (*.net *.split)
[11:39:33] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[11:39:33] *** Quits: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (*.net *.split)
[11:39:33] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[11:39:33] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (*.net *.split)
[11:39:33] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[11:39:33] *** Quits: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net) (*.net *.split)
[11:39:33] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[11:39:33] *** Quits: kstar (~kstar@user/kstar) (*.net *.split)
[11:39:33] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (*.net *.split)
[11:39:33] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (*.net *.split)
[11:39:33] *** Quits: kurfen (~kurfen@176.119.195.10) (*.net *.split)
[11:39:33] *** Quits: Vesryn (~vesryn@user/vesryn) (*.net *.split)
[11:39:33] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[11:39:33] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (*.net *.split)
[11:39:33] *** Quits: xacktm (xacktm@user/xacktm) (*.net *.split)
[11:39:34] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (*.net *.split)
[11:39:34] *** Quits: ecs (~ecs@user/ecs) (*.net *.split)
[11:39:34] *** Quits: pierrot (~pi@user/pierrot) (*.net *.split)
[11:39:34] *** Quits: AMG (ghebo@user/amg) (*.net *.split)
[11:39:34] *** Quits: smorgasbord (buggy@user/smorgasbord) (*.net *.split)
[11:39:34] *** Quits: dunpeal (~dunpeal@2001:470:69fc:105::3e80) (*.net *.split)
[11:39:34] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (*.net *.split)
[11:39:34] *** Quits: edmrk[m] (~edmrkmatr@2001:470:69fc:105::1:5a63) (*.net *.split)
[11:39:34] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (*.net *.split)
[11:39:34] *** Quits: Tisoxin (~ikosit@user/ikosit) (*.net *.split)
[11:39:34] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[11:39:34] *** Quits: meingtsla (retrograde@user/meingtsla) (*.net *.split)
[11:39:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[11:39:34] *** Quits: gaken (~gaken@user/galen) (*.net *.split)
[11:39:34] *** Quits: aeplus (~steve@2603-8000-cf42-7ec1-162f-1996-0ae2-d7da.res6.spectrum.com) (*.net *.split)
[11:39:34] *** Quits: Patater (~patater@104.248.173.85) (*.net *.split)
[11:39:34] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[11:39:35] *** Quits: grindhold (~quassel@mail.skarphed.org) (*.net *.split)
[11:39:35] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[11:39:35] *** Quits: jwpapi (sid502614@id-502614.uxbridge.irccloud.com) (*.net *.split)
[11:39:35] *** Quits: jellie (~luv_panda@user/jellie) (*.net *.split)
[11:39:35] *** Quits: akrv (sid245241@id-245241.hampstead.irccloud.com) (*.net *.split)
[11:39:35] *** Quits: ksft (~k@pool-173-76-14-211.bstnma.fios.verizon.net) (*.net *.split)
[11:39:35] *** Quits: LarchOye (nonmoose@spaceweed.spacetechnology.net) (*.net *.split)
[11:39:35] *** Quits: xff0x (~xff0x@port-92-193-159-86.dynamic.as20676.net) (*.net *.split)
[11:39:35] *** Quits: crankslider (~slidercra@user/slidercrank) (*.net *.split)
[11:39:35] *** Quits: zwisch (~zwisch@135-23-67-207.cpe.pppoe.ca) (*.net *.split)
[11:39:35] *** Quits: Matt|home (~matt@adsl-74-233-58-165.mia.bellsouth.net) (*.net *.split)
[11:39:35] *** Quits: Arcorann (~A@user/arcorann) (*.net *.split)
[11:39:35] *** Quits: Urawa (Awaru@gateway/vpn/airvpn/awaru) (*.net *.split)
[11:39:35] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (*.net *.split)
[11:39:35] *** Quits: BSaboia (~bsaboia@177.37.198.83) (*.net *.split)
[11:39:35] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[11:39:35] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (*.net *.split)
[11:39:35] *** Quits: sheepduck (~sheepduck@user/sheepduck) (*.net *.split)
[11:39:35] *** Quits: causative (~halberd@user/causative) (*.net *.split)
[11:39:35] *** Quits: stipa (~stipa@user/stipa) (*.net *.split)
[11:39:35] *** Quits: jabster28 (~jabster28@81.111.217.63) (*.net *.split)
[11:39:35] *** Quits: pavonia (~user@user/siracusa) (*.net *.split)
[11:39:35] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[11:39:35] *** Quits: CloudEvil (~quassel@133.129.239.35.bc.googleusercontent.com) (*.net *.split)
[11:39:35] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[11:39:35] *** Quits: HisShadow (~HisShadow@user/hisshadow) (*.net *.split)
[11:39:35] *** Quits: Batzy (~quassel@user/batzy) (*.net *.split)
[11:39:35] *** Quits: dka (~code-is-a@193.70.33.83) (*.net *.split)
[11:39:35] *** Quits: HalfCent (~m-tfhzbh@ip133.ip-66-70-231.net) (*.net *.split)
[11:39:35] *** Quits: Leonarbro (~Leonet@user/leonarbro) (*.net *.split)
[11:39:35] *** Quits: bluss (~bluss@user/bluss) (*.net *.split)
[11:39:35] *** Quits: avoidr (~avoidr@user/avoidr) (*.net *.split)
[11:39:35] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[11:39:35] *** Quits: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[11:39:36] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (*.net *.split)
[11:39:36] *** Quits: molt (~molt@46.33.200.12) (*.net *.split)
[11:39:36] *** Quits: berber (~berber@v2202101107577140883.nicesrv.de) (*.net *.split)
[11:39:36] *** Quits: xeno (~xeno@user/xeno) (*.net *.split)
[11:39:36] *** Quits: Noventicx1 (~Noventicx@crux.uberspace.de) (*.net *.split)
[11:39:36] *** Quits: mniip (mniip@libera/staff/mniip) (*.net *.split)
[11:39:36] *** Quits: davros (~davros@host86-185-61-39.range86-185.btcentralplus.com) (*.net *.split)
[11:39:36] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (*.net *.split)
[11:39:36] *** Quits: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de) (*.net *.split)
[11:39:36] *** Quits: twrk (~user@user/twrk) (*.net *.split)
[11:39:36] *** Quits: bollu (~bollu@159.65.151.13) (*.net *.split)
[11:39:36] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[11:39:36] *** Quits: Oni^ (oni@kapsi.fi) (*.net *.split)
[11:39:36] *** Quits: ckie (~ckie@user/cookie) (*.net *.split)
[11:39:36] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[11:39:36] *** Quits: nortoh (~nortoh@user/nortoh) (*.net *.split)
[11:39:36] *** Quits: defn- (~n0b0dy@user/defn) (*.net *.split)
[11:39:36] *** Quits: Raz- (~nikolay@libera/sponsor/razor) (*.net *.split)
[11:39:36] *** Quits: acegallagher (~Ace@174-16-184-112.hlrn.qwest.net) (*.net *.split)
[11:39:36] *** Quits: alip (~alip@exherbo/developer/alip) (*.net *.split)
[11:39:36] *** Quits: Proximys- (~Proximyst@136.243.8.18) (*.net *.split)
[11:39:36] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (*.net *.split)
[11:39:37] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[11:39:37] *** Quits: sveit_ (~sveit@45.77.0.246) (*.net *.split)
[11:39:37] *** Quits: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org) (*.net *.split)
[11:39:37] *** Quits: ldunn_ (~ldunn@user/ldunn) (*.net *.split)
[11:39:37] *** Quits: biberao (~Unknown@user/biberao) (*.net *.split)
[11:39:37] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[11:39:37] *** Quits: DaPinkOne (~Dap@user/dap) (*.net *.split)
[11:39:37] *** Quits: Z-module (~user@aero-astro-estates.mit.edu) (*.net *.split)
[11:39:37] *** Quits: noam (~noam@104.232.42.247) (*.net *.split)
[11:39:37] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[11:39:37] *** Quits: e36freak (~e36freak@user/e36freak) (*.net *.split)
[11:39:37] *** Quits: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net) (*.net *.split)
[11:39:37] *** Quits: woky (~woky@li1651-31.members.linode.com) (*.net *.split)
[11:39:37] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[11:39:37] *** Quits: cynicalcats (~cynicalca@user/cynicalcats) (*.net *.split)
[11:39:37] *** Quits: madnight_ (~madnight@static.59.103.201.195.clients.your-server.de) (*.net *.split)
[11:39:37] *** Quits: markasoftware (~quassel@107.161.26.124) (*.net *.split)
[11:39:37] *** Quits: tkr (tkr@pi.ip.fi) (*.net *.split)
[11:39:37] *** Quits: phantomcircuit (~phantomci@192.241.205.97) (*.net *.split)
[11:39:37] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (*.net *.split)
[11:39:37] *** Quits: krator44 (~krator44@user/krator44) (*.net *.split)
[11:39:37] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (*.net *.split)
[11:39:37] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:f89b:2c73:97b1:7ba3) (*.net *.split)
[11:39:37] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (*.net *.split)
[11:39:37] *** Quits: sp (~sp@user/susam) (*.net *.split)
[11:39:37] *** Quits: jinsun_ (~jinsun@user/jinsun) (*.net *.split)
[11:39:38] *** Quits: nf (~n@monade.li) (*.net *.split)
[11:39:38] *** Quits: davidk156305 (~davidk156@2001:470:69fc:105::1:484e) (*.net *.split)
[11:39:38] *** Quits: Amadiro (~Amadiro@84.209.11.12) (*.net *.split)
[11:39:38] *** Quits: nicoty (~nicoty@user/nicoty) (*.net *.split)
[11:39:38] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (*.net *.split)
[11:39:38] *** Quits: stiltrumpelskin (~stiltrump@2601:246:5100:215:c42f:bdf1:317f:bee0) (*.net *.split)
[11:39:38] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (*.net *.split)
[11:39:38] *** Quits: _sol_ (sid282649@id-282649.hampstead.irccloud.com) (*.net *.split)
[11:39:38] *** Quits: cln (sid336875@id-336875.ilkley.irccloud.com) (*.net *.split)
[11:39:38] *** Quits: Galois (djao@efnet.math.uwaterloo.ca) (*.net *.split)
[11:39:38] *** Quits: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com) (*.net *.split)
[11:39:38] *** Quits: echoline (sid144196@id-144196.helmsley.irccloud.com) (*.net *.split)
[11:39:38] *** Quits: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae) (*.net *.split)
[11:39:38] *** Quits: AimHere (~David@92.238.16.159) (*.net *.split)
[11:39:39] *** Quits: cosine (~cosine@vpn.mashio.net) (*.net *.split)
[11:39:39] *** Quits: glider (~glider@user/glider) (*.net *.split)
[11:39:39] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (*.net *.split)
[11:39:39] *** Quits: Pollion (bombar@zamok.crans.org) (*.net *.split)
[11:39:39] *** Quits: orcus (~orcus@user/brprice) (*.net *.split)
[11:39:39] *** Quits: fructose (~fructose@user/fructose) (*.net *.split)
[11:39:39] *** Quits: tolarz (bfa39a78db@ircbox.informatik.uni-erlangen.de) (*.net *.split)
[11:39:39] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[11:39:39] *** Quits: thebes_ (~thebes@userwer.net) (*.net *.split)
[11:39:39] *** Quits: fds (franki@triton.blinkenshell.org) (*.net *.split)
[11:39:39] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (*.net *.split)
[11:39:40] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (*.net *.split)
[11:39:40] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (*.net *.split)
[11:39:40] *** Quits: tafa (~tafa@user/tafa) (*.net *.split)
[11:39:40] *** Quits: Vermont (sid262764@wikimedia/vermont) (*.net *.split)
[11:39:40] *** Quits: shikhin (~shikhin@offtopia/offtopian) (*.net *.split)
[11:39:40] *** Quits: AkechiShiro (~licht@user/akechishiro) (*.net *.split)
[11:39:40] *** Quits: gdd (~gdd@129.199.146.230) (*.net *.split)
[11:39:40] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[11:39:40] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (*.net *.split)
[11:39:40] *** Quits: sm2n (ae95cb1267@user/sm2n) (*.net *.split)
[11:39:40] *** Quits: njd (~njd@159.65.3.79) (*.net *.split)
[11:39:40] *** Quits: Xinayder (~alex@user/xinayder) (*.net *.split)
[11:39:40] *** Quits: W (~w@user/w) (*.net *.split)
[11:39:40] *** Quits: PlanckWalk (~Planck@user/planckwalk) (*.net *.split)
[11:39:40] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (*.net *.split)
[11:39:40] *** Quits: Hummer12007 (061e0434dc@2604:bf00:561:2000::16) (*.net *.split)
[11:39:40] *** Quits: susam (~susam@user/susam) (*.net *.split)
[11:39:41] *** Quits: Dragoon (~Dragoon@user/dragoon) (*.net *.split)
[11:39:41] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[11:39:41] *** Quits: sshine (~simon@hubris.eta.solutions) (*.net *.split)
[11:39:41] *** Quits: dumptruckman (~dumptruck@45-79-173-88.ip.linodeusercontent.com) (*.net *.split)
[11:39:41] *** Quits: p3n (~p3n@217.198.124.246) (*.net *.split)
[11:39:41] *** Quits: simoneb_ (~simone@static.39.20.203.116.clients.your-server.de) (*.net *.split)
[11:39:41] *** Quits: sqrt2_ (~ben@80-108-18-7.cable.dynamic.surfer.at) (*.net *.split)
[11:39:41] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (*.net *.split)
[11:39:41] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[11:39:41] *** Quits: alvarezp (quassel@2600:3c01::f03c:91ff:fee5:6d8d) (*.net *.split)
[11:39:41] *** Quits: _________ (~nobody@user/noodly) (*.net *.split)
[11:39:41] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[11:39:41] *** Quits: zacts (~zacts@user/zacts) (*.net *.split)
[11:39:41] *** Quits: BrownJenkin (~falconsti@2001:470:69fc:105::36d) (*.net *.split)
[11:39:42] *** Quits: abcits123[m] (~abcits123@2001:470:69fc:105::1:5d6e) (*.net *.split)
[11:39:42] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (*.net *.split)
[11:39:42] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (*.net *.split)
[11:39:42] *** Quits: buster (~user@dsl-multi-static-81-140-129-201.in-addr.broadbandscope.com) (*.net *.split)
[11:39:42] *** Quits: cherim (UserNick@host-217-197-197-182.rev.as20985.net) (*.net *.split)
[11:39:42] *** Quits: gauge (~gauge@user/gauge) (*.net *.split)
[11:39:42] *** Quits: mncheck (~mncheck@193.224.205.254) (*.net *.split)
[11:39:42] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[11:39:42] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (*.net *.split)
[11:39:42] *** Quits: APic (apic@apic.name) (*.net *.split)
[11:39:42] *** Quits: somiaj (~somiaj@fvwm/admin) (*.net *.split)
[11:39:42] *** Quits: thiccdaddy (~o_O@user/thiccdaddy) (*.net *.split)
[11:39:42] *** Quits: udevd (~kaetzchen@user/udevd) (*.net *.split)
[11:39:42] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (*.net *.split)
[11:39:42] *** Quits: lieven (~mal@ns2.wyrd.be) (*.net *.split)
[11:39:42] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[11:39:42] *** Quits: xihr (sid524153@id-524153.lymington.irccloud.com) (*.net *.split)
[11:39:42] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[11:39:42] *** Quits: taeaad (~taeaad@user/taeaad) (*.net *.split)
[11:39:42] *** Quits: kolexar (~kolexar@user/kolexar) (*.net *.split)
[11:39:42] *** Quits: MiseryMyra (MiseryMyra@sponsored.by.bnc4you.xyz) (*.net *.split)
[11:39:43] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[11:39:43] *** Quits: Wanderer (~wanderer@user/wanderer) (*.net *.split)
[11:39:43] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[11:39:43] *** Quits: niedzejkob[m] (~niedzejko@2001:470:69fc:105::1:1c02) (*.net *.split)
[11:39:43] *** Quits: DerlgM (~lucifargu@2001:470:69fc:105::2faa) (*.net *.split)
[11:39:43] *** Quits: kadoban (~kadoban@user/kadoban) (*.net *.split)
[11:39:43] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (*.net *.split)
[11:39:43] *** Quits: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b) (*.net *.split)
[11:39:43] *** Quits: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de) (*.net *.split)
[11:39:43] *** Quits: djinni (~djinni@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[11:39:43] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (*.net *.split)
[11:39:43] *** Quits: Decker (~d3x0r@user/d3x0r) (*.net *.split)
[11:39:43] *** Quits: eck (~root@user/eck) (*.net *.split)
[11:39:43] *** Quits: Me-me (~me-me@user/me-me) (*.net *.split)
[11:39:43] *** Quits: riv (river@tilde.team/user/river) (*.net *.split)
[11:39:43] *** Quits: ua_ (~ua@public-gprs219402.centertel.pl) (*.net *.split)
[11:39:43] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[11:39:43] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[11:39:43] *** Quits: mnhrdt (~Enric@fsf/member/mnhrdt) (*.net *.split)
[11:39:43] *** Quits: mjacob (~mjacob@adrastea.uberspace.de) (*.net *.split)
[11:39:43] *** Quits: spirit- (~spirit@233.ip-144-217-92.net) (*.net *.split)
[11:39:43] *** Quits: FLHerne (flh@flherne.uk) (*.net *.split)
[11:39:44] *** Quits: joj (~joj@jojeee.xyz) (*.net *.split)
[11:39:44] *** Quits: mver (~mver@2a01:4f9:c010:3601::) (*.net *.split)
[11:39:44] *** Quits: Moyst_ (~moyst@user/moyst) (*.net *.split)
[11:39:44] *** Quits: redlegion (sid429547@id-429547.ilkley.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: astra (sid289983@user/amish) (*.net *.split)
[11:39:44] *** Quits: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: Quokka (~Soliloquy@user/quokka) (*.net *.split)
[11:39:44] *** Quits: lf94 (~lf94@user/lf94) (*.net *.split)
[11:39:44] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[11:39:44] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[11:39:44] *** Quits: fxrh (~fxrh@user/fxrh) (*.net *.split)
[11:39:44] *** Quits: jcay (~jcay@vps3435.vpsunit.com) (*.net *.split)
[11:39:44] *** Quits: geonic (~geonic@user/geonic) (*.net *.split)
[11:39:44] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: kristian84 (~asdf@ti0037a400-4119.bb.online.no) (*.net *.split)
[11:39:44] *** Quits: nkaretnikov (sid190676@id-190676.tinside.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: pikhq (sid394595@user/pikhq) (*.net *.split)
[11:39:44] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (*.net *.split)
[11:39:44] *** Quits: deego`` (~user@69.90.132.173) (*.net *.split)
[11:39:44] *** Quits: blackfield (~blackfiel@85.255.4.218) (*.net *.split)
[11:39:45] *** Quits: gshumway (~gshumway@user/gshumway) (*.net *.split)
[11:39:45] *** Quits: sujeet (sujeet@freeboson.org) (*.net *.split)
[11:39:45] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[11:39:45] *** Quits: madprops (hj8oijo@user/madprops) (*.net *.split)
[11:39:45] *** Quits: parazyd (~parazyd@devuan/developer/parazyd) (*.net *.split)
[11:39:45] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[11:39:45] *** Quits: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com) (*.net *.split)
[11:39:45] *** Quits: con3 (~con3@143.198.53.32) (*.net *.split)
[11:39:45] *** Quits: statusfailed (~statusfai@statusfailed.com) (*.net *.split)
[11:39:45] *** Quits: shachaf (~shachaf@user/shachaf) (*.net *.split)
[11:39:45] *** Quits: Boniche (~Boniche@ivysaur.umbreon.net) (*.net *.split)
[11:39:57] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 240 seconds)
[11:42:33] *** Quits: yBtNJW3j (~aib9Zume@71.50.58.137) (Quit: Leaving)
[11:51:38] *** Joins: yBtNJW3j (~aib9Zume@71.50.58.137)
[11:51:38] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551)
[11:51:38] *** Joins: jellydonut (~quassel@185.213.154.170)
[11:51:38] *** Joins: catalpa (~John@170.79.90.245)
[11:51:38] *** Joins: specing (~specing@user/specing)
[11:51:38] *** Joins: cheater (~Username@user/cheater)
[11:51:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:51:38] *** Joins: kish` (~aqua@user/aqua)
[11:51:38] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[11:51:38] *** Joins: llh (~llh@user/llh)
[11:51:38] *** Joins: CombatVet (~c4@user/combatvet)
[11:51:38] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[11:51:38] *** Joins: NllPtr (~NllPtr@186-78-254-187.baf.movistar.cl)
[11:51:38] *** Joins: xff0x (~xff0x@port-92-193-159-86.dynamic.as20676.net)
[11:51:38] *** Joins: kado (~kado@36.37.140.89)
[11:51:38] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[11:51:38] *** Joins: mbuf (~Shakthi@182.77.103.82)
[11:51:38] *** Joins: tkkon (~tkkon@user/tkkon)
[11:51:38] *** Joins: plankster (~plankster@user/plankers)
[11:51:38] *** Joins: juri_ (~juri@178.63.35.222)
[11:51:38] *** Joins: crankslider (~slidercra@user/slidercrank)
[11:51:38] *** Joins: e36freak (~e36freak@user/e36freak)
[11:51:38] *** Joins: zwisch (~zwisch@135-23-67-207.cpe.pppoe.ca)
[11:51:38] *** Joins: Matt|home (~matt@adsl-74-233-58-165.mia.bellsouth.net)
[11:51:38] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[11:51:38] *** Joins: mickey8 (~user@user/mickey)
[11:51:38] *** Joins: Arcorann (~A@user/arcorann)
[11:51:38] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[11:51:38] *** Joins: libsys (~libsys@186.105.153.44)
[11:51:38] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[11:51:38] *** Joins: krator44 (~krator44@user/krator44)
[11:51:38] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[11:51:38] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[11:51:38] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[11:51:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:51:38] *** Joins: yashi (~user_name@user/yashi)
[11:51:38] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[11:51:38] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[11:51:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:51:38] *** Joins: nejimban (~ben@user/nejimban)
[11:51:38] *** Joins: millido (~millido@84.210.150.128)
[11:51:38] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:f89b:2c73:97b1:7ba3)
[11:51:38] *** Joins: omnisip (~omnisip@c-76-25-44-21.hsd1.co.comcast.net)
[11:51:38] *** Joins: qeed (~qeed@072-190-106-143.res.spectrum.com)
[11:51:38] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:51:38] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[11:51:38] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[11:51:38] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[11:51:38] *** Joins: sshine (~simon@hubris.eta.solutions)
[11:51:38] *** Joins: Satin (uid193953@user/Seten)
[11:51:38] *** Joins: justIrresolute (~justache@user/justache)
[11:51:38] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:51:38] *** Joins: defjam (~eb0t@90.203.120.248)
[11:51:38] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[11:51:38] *** Joins: causative (~halberd@user/causative)
[11:51:38] *** Joins: stipa (~stipa@user/stipa)
[11:51:38] *** Joins: jabster28 (~jabster28@81.111.217.63)
[11:51:38] *** Joins: pavonia (~user@user/siracusa)
[11:51:38] *** Joins: ScRamble (~S@na.altplay.net)
[11:51:38] *** Joins: MetricT2 (~MetricT@075-131-120-170.res.spectrum.com)
[11:51:38] *** Joins: greenbagels (~gb@user/greenbagels)
[11:51:38] *** Joins: anderson (~ande@user/anderson)
[11:51:38] *** Joins: qedders (~qedders@bzq-84-108-229-161.cablep.bezeqint.net)
[11:51:38] *** Joins: haritz (~hrtz@user/haritz)
[11:51:38] *** Joins: dzz007 (~dzz007@user/dzz007)
[11:51:38] *** Joins: CloudEvil (~quassel@133.129.239.35.bc.googleusercontent.com)
[11:51:38] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[11:51:38] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:51:38] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[11:51:38] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[11:51:38] *** Joins: Batzy (~quassel@user/batzy)
[11:51:38] *** Joins: Echoz_ (~chris@user/echoz)
[11:51:38] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:51:38] *** Joins: madage (~madage@user/madage)
[11:51:38] *** Joins: BrownJenkin (~falconsti@2001:470:69fc:105::36d)
[11:51:38] *** Joins: sp (~sp@user/susam)
[11:51:38] *** Joins: jinsun_ (~jinsun@user/jinsun)
[11:51:38] *** Joins: noam (~noam@104.232.42.247)
[11:51:38] *** Joins: davidk156305 (~davidk156@2001:470:69fc:105::1:484e)
[11:51:38] *** Joins: mra90 (~Martin@134.191.221.84)
[11:51:38] *** Joins: dka (~code-is-a@193.70.33.83)
[11:51:38] *** Joins: HalfCent (~m-tfhzbh@ip133.ip-66-70-231.net)
[11:51:38] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[11:51:38] *** Joins: mornfall (~mornfall@user/mornfall)
[11:51:38] *** Joins: nf (~n@monade.li)
[11:51:38] *** Joins: traxex (traxex@user/traxex)
[11:51:38] *** Joins: bluss (~bluss@user/bluss)
[11:51:38] *** Joins: avoidr (~avoidr@user/avoidr)
[11:51:38] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[11:51:38] *** Joins: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[11:51:38] *** Joins: jole (~jole@2a05:f480:2000:1624:5400:3ff:fe9c:b8a8)
[11:51:38] *** Joins: cln (sid336875@id-336875.ilkley.irccloud.com)
[11:51:38] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[11:51:38] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[11:51:38] *** Joins: molt (~molt@46.33.200.12)
[11:51:38] *** Joins: jpaa (~jpaa@161.97.129.36)
[11:51:38] *** Joins: berber (~berber@v2202101107577140883.nicesrv.de)
[11:51:38] *** Joins: xeno (~xeno@user/xeno)
[11:51:38] *** Joins: Noventicx1 (~Noventicx@crux.uberspace.de)
[11:51:38] *** Joins: nicoty (~nicoty@user/nicoty)
[11:51:38] *** Joins: dunpeal (~dunpeal@2001:470:69fc:105::3e80)
[11:51:38] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[11:51:38] *** Joins: edmrk[m] (~edmrkmatr@2001:470:69fc:105::1:5a63)
[11:51:38] *** Joins: atx (~atx@2001:470:69fc:105::923)
[11:51:38] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[11:51:38] *** Joins: quantum (~quantum@user/quantum/x-8556232)
[11:51:38] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[11:51:38] *** Joins: niedzejkob[m] (~niedzejko@2001:470:69fc:105::1:1c02)
[11:51:38] *** Joins: DerlgM (~lucifargu@2001:470:69fc:105::2faa)
[11:51:38] *** Joins: Tisoxin (~ikosit@user/ikosit)
[11:51:38] *** Joins: kadoban (~kadoban@user/kadoban)
[11:51:38] *** Joins: BitPuffin (~bitpuffin@2001:470:69fc:105::c9c5)
[11:51:38] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[11:51:38] *** Joins: smitop[m] (~smitopkde@2001:470:69fc:105::1:117)
[11:51:38] *** Joins: abcits123[m] (~abcits123@2001:470:69fc:105::1:5d6e)
[11:51:38] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[11:51:38] *** Joins: stiltrumpelskin (~stiltrump@2601:246:5100:215:c42f:bdf1:317f:bee0)
[11:51:38] *** Joins: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b)
[11:51:38] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[11:51:38] *** Joins: Oxyd (~oxyd@user/oxyd)
[11:51:38] *** Joins: szdani10 (~szdani10@unixit.org)
[11:51:38] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[11:51:38] *** Joins: steam (~steam@user/steam)
[11:51:38] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[11:51:38] *** Joins: tkr (tkr@pi.ip.fi)
[11:51:38] *** Joins: phantomcircuit (~phantomci@192.241.205.97)
[11:51:38] *** Joins: markasoftware (~quassel@107.161.26.124)
[11:51:38] *** Joins: madnight_ (~madnight@static.59.103.201.195.clients.your-server.de)
[11:51:38] *** Joins: cynicalcats (~cynicalca@user/cynicalcats)
[11:51:38] *** Joins: Teacup (~teacup@user/teacup)
[11:51:38] *** Joins: woky (~woky@li1651-31.members.linode.com)
[11:51:38] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[11:51:38] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[11:51:38] *** Joins: Z-module (~user@aero-astro-estates.mit.edu)
[11:51:38] *** Joins: DaPinkOne (~Dap@user/dap)
[11:51:38] *** Joins: polyrob (~rob@user/polyrob)
[11:51:38] *** Joins: biberao (~Unknown@user/biberao)
[11:51:38] *** Joins: ldunn_ (~ldunn@user/ldunn)
[11:51:38] *** Joins: sveit_ (~sveit@45.77.0.246)
[11:51:38] *** Joins: dstein64 (~dstein64@dannyadam.com)
[11:51:38] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[11:51:38] *** Joins: acegallagher (~Ace@174-16-184-112.hlrn.qwest.net)
[11:51:38] *** Joins: alip (~alip@exherbo/developer/alip)
[11:51:38] *** Joins: Proximys- (~Proximyst@136.243.8.18)
[11:51:38] *** Joins: Raz- (~nikolay@libera/sponsor/razor)
[11:51:38] *** Joins: nortoh (~nortoh@user/nortoh)
[11:51:38] *** Joins: defn- (~n0b0dy@user/defn)
[11:51:38] *** Joins: BUSY (~BUSY@user/busy)
[11:51:38] *** Joins: ckie (~ckie@user/cookie)
[11:51:38] *** Joins: Oni^ (oni@kapsi.fi)
[11:51:38] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[11:51:38] *** Joins: bollu (~bollu@159.65.151.13)
[11:51:38] *** Joins: twrk (~user@user/twrk)
[11:51:38] *** Joins: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de)
[11:51:38] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[11:51:38] *** Joins: davros (~davros@host86-185-61-39.range86-185.btcentralplus.com)
[11:51:38] *** Joins: mniip (mniip@libera/staff/mniip)
[11:51:38] *** Joins: AMG (ghebo@user/amg)
[11:51:38] *** Joins: pierrot (~pi@user/pierrot)
[11:51:38] *** Joins: smorgasbord (buggy@user/smorgasbord)
[11:51:38] *** Joins: ecs (~ecs@user/ecs)
[11:51:38] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[11:51:38] *** Joins: xacktm (xacktm@user/xacktm)
[11:51:38] *** Joins: bleb (~cm@user/bleb)
[11:51:38] *** Joins: Vesryn (~vesryn@user/vesryn)
[11:51:38] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[11:51:38] *** Joins: kurfen (~kurfen@176.119.195.10)
[11:51:38] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[11:51:38] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[11:51:38] *** Joins: kstar (~kstar@user/kstar)
[11:51:38] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[11:51:38] *** Joins: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net)
[11:51:38] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[11:51:38] *** Joins: michele (~eraser@user/michele)
[11:51:38] *** Joins: ra4king (~ra4king@roiatalla.com)
[11:51:38] *** Joins: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[11:51:38] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[11:51:38] *** Joins: haskal (~haskal@tilde.town)
[11:51:38] *** Joins: int-e (~noone@int-e.eu)
[11:51:38] *** Joins: enyc (~enyc@user/enyc)
[11:51:38] *** Joins: ksft (~k@pool-173-76-14-211.bstnma.fios.verizon.net)
[11:51:38] *** Joins: akrv (sid245241@id-245241.hampstead.irccloud.com)
[11:51:38] *** Joins: jellie (~luv_panda@user/jellie)
[11:51:38] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[11:51:38] *** Joins: Ara (~Ara@user/ara)
[11:51:38] *** Joins: grindhold (~quassel@mail.skarphed.org)
[11:51:38] *** Joins: Learath2 (~learath2@user/learath2)
[11:51:38] *** Joins: Patater (~patater@104.248.173.85)
[11:51:38] *** Joins: aeplus (~steve@2603-8000-cf42-7ec1-162f-1996-0ae2-d7da.res6.spectrum.com)
[11:51:38] *** Joins: LarchOye (nonmoose@spaceweed.spacetechnology.net)
[11:51:38] *** Joins: gaken (~gaken@user/galen)
[11:51:38] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[11:51:38] *** Joins: meingtsla (retrograde@user/meingtsla)
[11:51:38] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[11:51:38] *** Joins: Europa_ (~Europa@user/europa)
[11:51:38] *** Joins: fds (franki@triton.blinkenshell.org)
[11:51:38] *** Joins: thebes_ (~thebes@userwer.net)
[11:51:38] *** Joins: tolarz (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[11:51:38] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[11:51:38] *** Joins: fructose (~fructose@user/fructose)
[11:51:38] *** Joins: orcus (~orcus@user/brprice)
[11:51:38] *** Joins: Pollion (bombar@zamok.crans.org)
[11:51:38] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[11:51:38] *** Joins: glider (~glider@user/glider)
[11:51:38] *** Joins: cosine (~cosine@vpn.mashio.net)
[11:51:38] *** Joins: AimHere (~David@92.238.16.159)
[11:51:38] *** Joins: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae)
[11:51:38] *** Joins: echoline (sid144196@id-144196.helmsley.irccloud.com)
[11:51:38] *** Joins: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com)
[11:51:38] *** Joins: Galois (djao@efnet.math.uwaterloo.ca)
[11:51:38] *** Joins: _sol_ (sid282649@id-282649.hampstead.irccloud.com)
[11:51:38] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[11:51:38] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[11:51:38] *** Joins: _________ (~nobody@user/noodly)
[11:51:38] *** Joins: zacts (~zacts@user/zacts)
[11:51:38] *** Joins: alvarezp (quassel@2600:3c01::f03c:91ff:fee5:6d8d)
[11:51:38] *** Joins: vancz (~vancz@user/vancz)
[11:51:38] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[11:51:38] *** Joins: sqrt2_ (~ben@80-108-18-7.cable.dynamic.surfer.at)
[11:51:38] *** Joins: dumptruckman (~dumptruck@45-79-173-88.ip.linodeusercontent.com)
[11:51:38] *** Joins: p3n (~p3n@217.198.124.246)
[11:51:38] *** Joins: Isthmusi (~Isthmus@user/isveni)
[11:51:38] *** Joins: simoneb_ (~simone@static.39.20.203.116.clients.your-server.de)
[11:51:38] *** Joins: Dragoon (~Dragoon@user/dragoon)
[11:51:38] *** Joins: susam (~susam@user/susam)
[11:51:38] *** Joins: Hummer12007 (061e0434dc@2604:bf00:561:2000::16)
[11:51:38] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[11:51:38] *** Joins: W (~w@user/w)
[11:51:38] *** Joins: Xinayder (~alex@user/xinayder)
[11:51:38] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[11:51:38] *** Joins: njd (~njd@159.65.3.79)
[11:51:38] *** Joins: sm2n (ae95cb1267@user/sm2n)
[11:51:38] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[11:51:38] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[11:51:38] *** Joins: gdd (~gdd@129.199.146.230)
[11:51:38] *** Joins: AkechiShiro (~licht@user/akechishiro)
[11:51:38] *** Joins: shikhin (~shikhin@offtopia/offtopian)
[11:51:38] *** Joins: Vermont (sid262764@wikimedia/vermont)
[11:51:38] *** Joins: tafa (~tafa@user/tafa)
[11:51:38] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[11:51:38] *** Joins: geonic (~geonic@user/geonic)
[11:51:38] *** Joins: jcay (~jcay@vps3435.vpsunit.com)
[11:51:38] *** Joins: fxrh (~fxrh@user/fxrh)
[11:51:38] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[11:51:38] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[11:51:38] *** Joins: lf94 (~lf94@user/lf94)
[11:51:38] *** Joins: Quokka (~Soliloquy@user/quokka)
[11:51:38] *** Joins: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com)
[11:51:38] *** Joins: astra (sid289983@user/amish)
[11:51:38] *** Joins: redlegion (sid429547@id-429547.ilkley.irccloud.com)
[11:51:38] *** Joins: Moyst_ (~moyst@user/moyst)
[11:51:38] *** Joins: joj (~joj@jojeee.xyz)
[11:51:38] *** Joins: mver (~mver@2a01:4f9:c010:3601::)
[11:51:38] *** Joins: FLHerne (flh@flherne.uk)
[11:51:38] *** Joins: mjacob (~mjacob@adrastea.uberspace.de)
[11:51:38] *** Joins: spirit- (~spirit@233.ip-144-217-92.net)
[11:51:38] *** Joins: mnhrdt (~Enric@fsf/member/mnhrdt)
[11:51:38] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[11:51:38] *** Joins: Duckle (~Duckle@user/duckle)
[11:51:38] *** Joins: ua_ (~ua@public-gprs219402.centertel.pl)
[11:51:38] *** Joins: riv (river@tilde.team/user/river)
[11:51:38] *** Joins: Me-me (~me-me@user/me-me)
[11:51:38] *** Joins: eck (~root@user/eck)
[11:51:38] *** Joins: Decker (~d3x0r@user/d3x0r)
[11:51:38] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[11:51:38] *** Joins: djinni (~djinni@static.38.6.217.95.clients.your-server.de)
[11:51:38] *** Joins: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de)
[11:51:38] *** Joins: taeaad (~taeaad@user/taeaad)
[11:51:38] *** Joins: OverCoder (~OverCoder@user/overcoder)
[11:51:38] *** Joins: xihr (sid524153@id-524153.lymington.irccloud.com)
[11:51:38] *** Joins: TallonRain (sid214799@user/tallonrain)
[11:51:38] *** Joins: lieven (~mal@ns2.wyrd.be)
[11:51:38] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[11:51:38] *** Joins: udevd (~kaetzchen@user/udevd)
[11:51:38] *** Joins: thiccdaddy (~o_O@user/thiccdaddy)
[11:51:38] *** Joins: somiaj (~somiaj@fvwm/admin)
[11:51:38] *** Joins: APic (apic@apic.name)
[11:51:38] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[11:51:38] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[11:51:38] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:51:38] *** Joins: gauge (~gauge@user/gauge)
[11:51:38] *** Joins: cherim (UserNick@host-217-197-197-182.rev.as20985.net)
[11:51:38] *** Joins: buster (~user@dsl-multi-static-81-140-129-201.in-addr.broadbandscope.com)
[11:51:38] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[11:51:38] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[11:51:38] *** Joins: Wanderer (~wanderer@user/wanderer)
[11:51:38] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[11:51:38] *** Joins: MiseryMyra (MiseryMyra@sponsored.by.bnc4you.xyz)
[11:51:38] *** Joins: kolexar (~kolexar@user/kolexar)
[11:51:38] *** Joins: Boniche (~Boniche@ivysaur.umbreon.net)
[11:51:38] *** Joins: shachaf (~shachaf@user/shachaf)
[11:51:38] *** Joins: con3 (~con3@143.198.53.32)
[11:51:38] *** Joins: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com)
[11:51:38] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[11:51:38] *** Joins: statusfailed (~statusfai@statusfailed.com)
[11:51:38] *** Joins: parazyd (~parazyd@devuan/developer/parazyd)
[11:51:38] *** Joins: madprops (hj8oijo@user/madprops)
[11:51:38] *** Joins: strudl (~strudl@user/strudl)
[11:51:38] *** Joins: sujeet (sujeet@freeboson.org)
[11:51:38] *** Joins: gshumway (~gshumway@user/gshumway)
[11:51:38] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[11:51:38] *** Joins: blackfield (~blackfiel@85.255.4.218)
[11:51:38] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[11:51:38] *** Joins: pikhq (sid394595@user/pikhq)
[11:51:38] *** Joins: nkaretnikov (sid190676@id-190676.tinside.irccloud.com)
[11:51:38] *** Joins: kristian84 (~asdf@ti0037a400-4119.bb.online.no)
[11:51:38] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[11:51:38] *** Joins: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com)
[11:51:38] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[11:51:38] *** Joins: deego`` (~user@69.90.132.173)
[11:51:38] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[11:51:38] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[11:51:38] *** Joins: leah2 (~leah@vuxu.org)
[11:51:38] *** Joins: cebor (~cebor@user/cebor)
[11:51:38] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[11:51:38] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[11:51:38] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[11:51:38] *** Joins: drdo (~drdo@144.172.69.89)
[11:51:38] *** Joins: _tjr_ (~tjr@233.ip-144-217-92.net)
[11:51:38] *** Joins: Furai (~Furai@furai.pl)
[11:51:45] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Max SendQ exceeded)
[11:51:47] *** Quits: andreasbuhr (~quassel@p549db698.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:52:05] *** Joins: akP7QstK (~aib9Zume@71.50.58.137)
[11:52:09] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:52:09] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[11:52:09] *** Quits: yBtNJW3j (~aib9Zume@71.50.58.137) (Quit: Leaving)
[11:52:11] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[11:54:37] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[11:54:55] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[11:55:46] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[11:56:38] *** Joins: andreasbuhr (~quassel@p549db698.dip0.t-ipconnect.de)
[11:57:38] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:58:51] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:58:55] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[12:00:52] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:04:07] *** Joins: MajorBiscuit (~MajorBisc@c-001-032-022.client.tudelft.eduvpn.nl)
[12:11:01] *** Quits: nullcone (uid11626@id-11626.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:11:31] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[12:18:18] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[12:20:30] *** Quits: kamil1 (~kxkamil@134.191.220.81) (Quit: WeeChat 2.8)
[12:20:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[12:20:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[12:23:14] *** Joins: frost (~frost@user/frost)
[12:23:36] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:25:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:25:51] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[12:26:18] *** Joins: horseface (~horseface@user/horseface)
[12:26:52] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:27:18] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:32:33] *** Joins: kamil (~kxkamil@134.191.220.81)
[12:39:42] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:41:12] *** Joins: stonkey (~stonkey@user/stonkey)
[12:49:25] *** Quits: yashi (~user_name@user/yashi) (Ping timeout: 240 seconds)
[12:49:33] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[12:49:46] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.55)
[12:50:12] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[12:50:37] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[12:52:53] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Read error: Connection reset by peer)
[12:53:24] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[12:54:09] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:54:41] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[13:00:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[13:00:27] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: leaving)
[13:00:47] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[13:04:45] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Quit: Leaving)
[13:04:55] <Al-Khwarizmi> format awl_viewer_item_bg 20
[13:06:00] * Al-Khwarizmi phew. They are all asleep.
[13:06:32] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:11:22] *** Joins: rain3 (~rain3___@2a02:2f09:d405:a600:7f3e:4e48:ca3c:8857)
[13:13:10] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 268 seconds)
[13:14:41] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:16:02] *** Quits: xihr (sid524153@id-524153.lymington.irccloud.com) (Ping timeout: 240 seconds)
[13:16:12] *** Joins: xihr (sid524153@id-524153.lymington.irccloud.com)
[13:19:01] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: leaving)
[13:19:06] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[13:19:16] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[13:19:33] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:22:30] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[13:22:43] *** Quits: akP7QstK (~aib9Zume@71.50.58.137) (Quit: Leaving)
[13:24:35] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:29:34] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:31:21] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: leaving)
[13:31:36] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[13:31:36] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[13:33:31] *** Joins: seninha (~seninha@user/seninha)
[13:34:44] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[13:35:58] *** Quits: kado (~kado@36.37.140.89) (Quit: nyaa~)
[13:37:12] *** Quits: loller_ (uid358106@id-358106.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:37:50] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[13:38:18] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:42:11] *** Quits: xff0x (~xff0x@port-92-193-159-86.dynamic.as20676.net) (Ping timeout: 256 seconds)
[13:42:46] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[13:47:31] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:f0a4:a961:9964:1b51)
[13:48:58] *** Joins: pluri (~pluri@user/pluri)
[13:49:48] *** Joins: enoq_ (~enoq@194-208-178-35.lampert.tv)
[13:50:09] *** Quits: enoq_ (~enoq@194-208-178-35.lampert.tv) (Remote host closed the connection)
[13:50:21] *** Joins: enoq__ (~enoq@194-208-178-35.lampert.tv)
[13:50:44] *** Quits: enoq__ (~enoq@194-208-178-35.lampert.tv) (Remote host closed the connection)
[13:53:55] *** Joins: unknow (~i.am@user/marlboro)
[13:58:13] *** Joins: walterwhip (~www@user/walterwhip)
[13:58:51] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[13:59:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[14:02:56] *** Joins: Al-Khwar1zmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[14:04:42] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[14:04:46] *** Quits: Al-Khwar1zmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[14:05:00] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[14:06:42] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:07:22] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:28:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[14:29:37] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.29)
[14:30:33] *** Joins: frost (~frost@user/frost)
[14:31:35] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[14:32:03] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.55) (Ping timeout: 256 seconds)
[14:32:06] *** Quits: bitd (~bitd@user/bitd) (Ping timeout: 268 seconds)
[14:32:24] *** Quits: rain3 (~rain3___@2a02:2f09:d405:a600:7f3e:4e48:ca3c:8857) (Remote host closed the connection)
[14:33:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:34:40] *** Joins: cadmio (~cadmio@151.37.240.164)
[14:35:17] <cadmio> in my text I've found that Z_p has characteristic 0 for p prime
[14:35:51] <cadmio> in another I've found that Z_n has characteristic n without requirent of n being prime
[14:36:55] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[14:38:07] <cadmio> I tried with Z_6 and indeed found characteristic 6
[14:43:34] <Pollion> cadmio: depends on what you think is Z_p.
[14:43:40] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:43:42] <Pollion> It might stands for the p-adic integers
[14:43:45] *** Joins: plankster_ (~plankster@user/plankers)
[14:43:48] <Pollion> which is indeed of characteristic 0
[14:44:13] *** Quits: plankster (~plankster@user/plankers) (Ping timeout: 240 seconds)
[14:44:20] <cadmio> integers modulo p
[14:44:41] <cadmio> it's also indicated as Z/pZ
[14:45:08] <Pollion> Then it is an obvious mistake and you are right, Z/pZ is of characteristic p.
[14:45:55] <cadmio> and Z/nZ ?
[14:45:58] <Pollion> n
[14:46:28] <Pollion> Think about the definition of characteristic
[14:46:44] <Pollion> It is the smallest integer such that n.1 = 0
[14:46:49] <cadmio> my question is why one has to specify that p is prime since Z_n has always characteristic n
[14:47:10] <|smlckz|> is my logic correct? http://ttm.sh/ihP.jpg
[14:47:20] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:47:42] <Pollion> because Z/pZ is a field, when p is prime, and the characteristic of a field is always either 0 or a prime integer. I guess your textbook wanted to emphasize this phenomenon,
[14:48:57] *** plankster_ is now known as plank
[14:50:15] <Pollion> you can prove it as an exercise by the way, that if a ring R has a characteristic n which is non prime it cannot be a field.
[14:52:19] <Pollion> Also, a ring has characteristic n iif it has a subring A isomorphic to Z/nZ. And it has characteristic 0 iif it has a subring isomorphic to Z.
[14:52:26] <riv> |smlckz|: looks good yeah
[14:52:38] *** Joins: darkapex (~darkapex@user/darkapex)
[14:52:48] <riv> this is legendre's central binomial coefficient thing?
[14:53:02] *** Joins: folkert (~folkert@507283AA.static.ziggozakelijk.nl)
[14:53:04] <cadmio> Z_n[x] has characteristic, n right?
[14:53:17] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[14:53:33] <|smlckz|> riv: did you ask me that?
[14:53:35] <riv> cadmio: define characteristic?
[14:53:39] <riv> |smlckz|: yes
[14:53:45] <Z-module> yes cadmio
[14:55:11] <|smlckz|> i don't what those things mean.. today our prof wrote a C program for factorial using (32-bit) int.. from 34 onwards, the output is zero..
[14:55:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:55:22] <riv> ah okay
[14:55:22] <|smlckz|> *don't know
[14:55:55] <Z-module> cadmio, in that last link you sent, at the very bottom you have  Z_3 x Z_3 x Z_3   as parts of the last three decompositions, but Z_3 should only occur twice in those.
[14:56:47] <isekaijin> |smlckz|: have you tried computing log(34!) = log(1) + log(2) + log(3) + ... + log(34), where the logarithms are in base 2?
[14:57:05] <isekaijin> Not in C, of course. Use a language with a REPL for something like this.
[14:57:49] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Ping timeout: 240 seconds)
[14:57:52] <isekaijin> The point of doing this is to figure out how many bits are needed to represent 34!.
[14:58:42] <isekaijin> In any case, log(2) + ... + log(34) > log(2) + ... + log(2) = 33 log(2) = 33.
[14:59:50] <cadmio> Z-module: thanks I've fixed it now
[15:00:29] <Z-module> oh, actually you had four times, in that third line
[15:00:37] <Z-module> sorry, fourth line
[15:01:20] <|smlckz|> isekaijin: crudely calculated, len('{:b}'.format(fac(34))) => 128, so 128 bits
[15:01:57] <isekaijin> |smlckz|: The point of what I'm doing is to estimate the number of bits necessary to compute 34! *without* computing 34! itself.
[15:02:14] <Z-module> also cadmio, you do hopefully note somewhere that Z_8 x Z_9 also has an element of order 36.
[15:02:22] <cherim> What's the point of log(34!) = log(1) + log(2) + log(3) + ... + log(34) for divisibility questions?
[15:02:38] <cherim> https://en.wikipedia.org/wiki/Legendre%27s_formula is essentially what was done already
[15:02:40] <|smlckz|> isekaijin: oh haha
[15:02:50] <isekaijin> Mmm.
[15:03:22] <isekaijin> Oh, the original question was a divisibility question. I missed that.
[15:03:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:07:52] <andi_> hello, i have a question to monoids: if i want to show that M = { 2^n | n in N } is a monoid regarding multiplication i can show that there's a neutral element (1) and that M is associative, so i can write (2^i * 2^j) * 2^k = 2^i * (2^j * 2^k) = 2^(i+j+k) right? is that enough to show that M is a monoid?
[15:08:30] *** Joins: smile (uid510004@user/smi)
[15:08:53] <|smlckz|> that should be enough
[15:08:54] <cadmio> Z-module: is this ([4]_8,[1]_9) the element of order 36 ?
[15:09:25] *** Quits: MajorBiscuit (~MajorBisc@c-001-032-022.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[15:09:55] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[15:10:05] *** Quits: Raz- (~nikolay@libera/sponsor/razor) (Remote host closed the connection)
[15:10:10] *** Quits: bendersteed (~user@ppp141237131021.access.hol.gr) (Ping timeout: 256 seconds)
[15:11:35] <riv> you can show that it is isomorphic with (N,+) monoid
[15:11:37] <sshine> are there practically efficient ways to multiply multivariate polynomials? I'm skimming an article that considers some approaches, and they mention Schönhage and Strassen, and that sounds, to me, like mostly theoretical value: https://www.crypt-security.com/site/wp-content/uploads/2018/05/IterativeKaratsubaForMultivariatePolynomialMultiplication.pdf
[15:11:50] <Z-module> cadmio, not quite. What's the order of [4] in the group Z_8 ?
[15:12:27] <cadmio> 2
[15:13:17] <Z-module> yes, and the order of [1] in Z_9 is 9, so your pair there in Z_8 x Z_9 has order what?
[15:14:36] <cadmio> 18
[15:15:26] <Z-module> right, so you have to modify your choice
[15:15:29] <cadmio> so it should be ([2]_8,[1]_9)
[15:15:53] <Z-module> yes, that works, though there are also lots of other possible choices
[15:15:53] <andi_> |smlckz|: just to be double sure, M = { 2^n | n in N } is also a Monoid regarding to addition right? (M, 0, +)
[15:16:48] <|smlckz|> andi_: what's the identity in that case?
[15:17:24] <andi_> |smlckz|: the neutral element would be 0 (zero)
[15:18:06] <|smlckz|> for which value of n in N does the value of 2^n = 0?
[15:18:21] <andi_> oh true
[15:18:27] *** Joins: stonkey (~stonkey@user/stonkey)
[15:18:36] <PlanckWalk> Also, is 2^1 + 2^2 in th set?
[15:18:51] <andi_> so because i don't have a neutral element i don't have a monoid?
[15:19:06] <Z-module> cadmio, all together Z_8 x Z_9 has 12 different elements of order 36; it might help your understanding to find them all.
[15:19:16] <PlanckWalk> andi_: Worse than that
[15:19:20] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:19:22] <andi_> PlanckWalk: no that would also not be in the set
[15:19:24] <PlanckWalk> You don't even have a binary operation.
[15:20:03] <riv> M is not a monoid with + as you do not have closure
[15:20:10] <riv> 2^1 + 2^2 is not 2^something
[15:20:19] *** Joins: yashi (~user_name@user/yashi)
[15:20:21] <riv> oh sorry PlanckWalk has already pointed this out
[15:20:44] <PlanckWalk> AT least it would be associative for the elements where the operation is in the set :)
[15:21:11] <PlanckWalk> ... except there aren't any such :-(
[15:21:52] <PlanckWalk> If the result of both + operations in a+(b+c) are in the set then (a+b)+c isn't.
[15:22:25] <PlanckWalk> So umm, I guess that's a failure of every monoid axiom.
[15:23:20] *** Joins: CoolerX (~user@user/coolerx)
[15:23:23] <CoolerX> Hi
[15:23:28] <PlanckWalk> G'day
[15:23:37] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Ping timeout: 256 seconds)
[15:23:55] <andi_> so i can write MxM -> M, (a,b) -> a+b with a = 2^n and b = 2^m is not true right?
[15:23:57] <CoolerX> Given a vector in R^2 how do I find 2 new vectors of equal length that add to the original vector?
[15:24:36] <Z-module> CoolerX: there's one "very obvious" way
[15:24:56] <sshine> andi_, what about M = { 2^n | n in N } with (M, ✖)?
[15:25:16] <CoolerX> Z-module: I was thinking find one and the other vector is just original - the one you found
[15:25:31] <CoolerX> but there's the additional constraint of equal length
[15:25:43] <andi_> sshine: with ✖ as the cross product?
[15:25:48] <Z-module> CoolerX: what's the most simple-minded obvious thing to do?
[15:25:50] <CoolerX> so the 2 vectors have to be reflections about the original vector or something
[15:25:51] <sshine> andi_, just multiplication
[15:25:56] <andi_> sshine: that's a monoid
[15:26:09] *** Parts: cadmio (~cadmio@151.37.240.164) (WeeChat 3.0)
[15:26:29] <CoolerX> Z-module: not obvious to me if there's a unique solution
[15:26:33] <Z-module> CoolerX: is there a requirement that the two vectors you seek should be distinct vectors?
[15:26:43] <CoolerX> Z-module: oh
[15:26:52] <CoolerX> so you mean original vector/2
[15:26:57] <Z-module> yes
[15:27:04] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[15:27:09] <Z-module> and there are infinitely many other solutions as well
[15:27:11] <CoolerX> ok are there non-trivial solutions?
[15:27:14] <CoolerX> ah
[15:27:47] <CoolerX> Z-module: how do I see that there are infinite solutions?
[15:28:13] <CoolerX> I guess one for all the infinite angles
[15:28:49] <CoolerX> the higher the angle of the new vectors from the original vector the longer they are?
[15:30:12] *** Joins: Raz- (~nikolay@libera/sponsor/razor)
[15:30:17] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[15:30:47] *** Joins: VincentVega (~user@212.97.1.105)
[15:30:47] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[15:31:22] <CoolerX> Z-module: does that make sense or where you thinking of some other infinite solutions?
[15:31:37] <Z-module> If v is the original vector, think about the infinite line that perpendicularly intersects the midpoint of the segment from 0 to v.
[15:31:45] <CoolerX> ok
[15:32:41] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 256 seconds)
[15:32:59] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:33:05] <CoolerX> Z-module: I was thinking of the infinite line along the original vector v instead
[15:33:29] <CoolerX> if you find a vector on one side of that line, you can reflect it about that line
[15:33:37] <CoolerX> so you have 2 vectors of equal length
[15:33:55] <CoolerX> and then it's just a matter of adjusting the lengths so that they add up to the original vector
[15:34:52] <Z-module> CoolerX: no straight line through 0 contains two distinct vectors of equal length that add up to anything other than 0.
[15:35:59] <Z-module> so  v/2 + v/2 = v    is the only way to add a pair of (actually equal) things of equal length from L and get v as the result, if v != 0.
[15:36:44] <Z-module> So that line won't get you any other solutions. But you can move away from v/2 perpendicularly to that line, to find pairs of new vectors that work.
[15:37:55] *** Parts: VincentVega (~user@212.97.1.105) (ERC (IRC client for Emacs 27.2))
[15:38:18] <Z-module> just check that for any choice of vector w orthogonal to v at all, the two vectors   v/2 + w,  v/2 - w   have the same length, and clearly they add up to v.
[15:40:11] <CoolerX> Z-module: I don't mean new vectors on the line
[15:40:39] <CoolerX> I meant if you find a vector you can reflect it about that line
[15:41:32] *** Joins: esther (~esther@2607:fb90:5fec:4be7:1797:2d5f:e793:e909)
[15:43:13] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[15:43:27] <Z-module> All the solution pairs are what I just described, and using w = 0 in that gives the original v/2 with v/2 solution
[15:44:01] <CoolerX> Z-module: if you find a new vector v1, then v1' =  m * v1 where (m is the 2x2 matrix which puts the original vector v on the x axis)  v2' = v1' with y coordinate multiplied by -1 and v2 = v2' * inverse(m)
[15:44:35] <CoolerX> so v1 and v2 are reflections of each other about the line through the original vector v
[15:44:56] <CoolerX> sorry v2 = inverse(m) * v2'
[15:45:32] <CoolerX> assuming v, v1, v2 are all column vectors
[15:45:37] *** Quits: esther (~esther@2607:fb90:5fec:4be7:1797:2d5f:e793:e909) (Ping timeout: 240 seconds)
[15:46:13] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[15:46:25] <CoolerX> and then it's a matter of finding a length for v1 such that v1 + v2 = v
[15:46:40] *** Joins: bendersteed (~user@ppp141237131021.access.hol.gr)
[15:47:44] <CoolerX> actually (m is the 2x2 matrix which makes the original vector v into the unit vector on the x axis)
[15:57:44] <CoolerX> Z-module: I was thinking of this https://i.imgur.com/967tIcF.png
[15:57:48] <CoolerX> maybe that makes it clear
[15:58:20] <CoolerX> the parallogram that contains v as it's diagonal
[15:58:35] <CoolerX> v1 and v2 are the 2 adjacent sides of that parallelogram
[15:59:34] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:00:52] <CoolerX> hello?
[16:01:30] <kamil> well, they are what Z-mod wrote, v/2+w and v/2-w
[16:03:34] *** Joins: mrdata (~mrdata@user/mrdata)
[16:03:49] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:04:29] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[16:05:19] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:07:11] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:11:04] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[16:12:51] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:12:51] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:13:50] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:13:58] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:14:47] *** Joins: enoq_ (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219)
[16:15:58] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:16:00] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:17:57] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:18:36] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:20:20] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:20:31] <andi_> hmm okay, i'd probably need a push in the right direction here: Let  Σ = {a}, and the language L = { a^(2n) | n ∈ N}. We define a mapping φ : Σ∗ → M, φ(a^n) = 2^n. Show that φ is ha homomorphism of monoids. can anybody give a a hint?
[16:20:37] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[16:20:53] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:21:10] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:22:43] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[16:22:47] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:23:05] <riv> andi_: what's a monoid homomorphism?
[16:23:10] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:23:33] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:23:37] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:23:40] <andi_> riv: https://en.wikipedia.org/wiki/Homomorphism
[16:24:01] <riv> it's a function from one monoid to another, that respects the identity and the binary operations
[16:24:14] <riv> you have a function, so you need to show those remaining two parts
[16:24:20] *** Joins: Al-Khwarizmi (~Al-Khwari@2001:1970:5e1b:e800:9eb6:d0ff:fee2:189)
[16:24:48] <andi_> so my function is φ(a^n) = 2^n and now i need to show the identity and the binary operations?
[16:25:17] <riv> you need to show  φ('') = 1
[16:25:29] <riv> and  φ(a b) = φ(a) φ(b)
[16:26:03] *** Quits: Al-Khwarizmi (~Al-Khwari@2001:1970:5e1b:e800:9eb6:d0ff:fee2:189) (Client Quit)
[16:26:14] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[16:26:47] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:27:20] <andi_> riv: so if i insert epsilon φ(eps) = 1 right?
[16:27:30] <riv> yes
[16:27:32] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:28:19] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:30:29] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[16:30:34] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[16:34:27] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Ping timeout: 256 seconds)
[16:34:57] <andi_> okay and for φ(a b) = φ(a) φ(b) i can just insert the function right?
[16:35:59] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[16:36:45] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:37:18] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[16:37:23] <riv> you can use a^n and a^m as inputs
[16:37:45] <riv> so φ(a^n a^m) = φ(a^n) φ(a^m) is what you want to show
[16:37:47] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[16:38:14] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[16:39:17] *** Quits: enoq_ (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219) (Ping timeout: 240 seconds)
[16:42:15] <Z-module> It'll end up being an isomorphism, in fact.
[16:42:24] <Z-module> (a bijective homomorphism)
[16:42:33] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:45:47] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 256 seconds)
[16:47:55] <andi_> riv: so i can say φ(a^n a^m) = 2^(n+m) = 2^n 2^m  = φ(a^n) φ(a^m)
[16:48:00] <andi_> would this be correct?
[16:48:38] <riv> yes
[16:48:47] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[16:49:28] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[16:49:48] <andi_> okay nice
[16:51:13] <Z-module> CoolerX: sure, every choice you make of an angle on the bottom there, using the same angle on the top, both going out to the perpendicular bisector line through the midpoint of the 0 to v segment, you end up with a pair of equal-length vectors whose sum is v.  Algebraically it's quite simple: if v = (a,b), then w = (-b,a) is orthogonal to v, and the solution pairs are all  { (1/2)v + rw, (1/2)v - rw }   for all real r.  You don't need
[16:51:14] <Z-module> to mess around with the rotation matrix, etc.
[16:52:50] <Z-module> And notice that (1/2)v is the midpoint referred to above, and adding each vector  rw   to that just reaches all the points of that perpendicular bisector.
[16:52:58] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:03:09] <CoolerX> ok
[17:03:35] *** Joins: lleo (~leo@31-161-144-55.mobile.kpn.net)
[17:04:24] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[17:04:41] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[17:04:44] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[17:05:28] <CoolerX> Thanks
[17:05:47] *** Quits: CoolerX (~user@user/coolerx) (Quit: leaving)
[17:05:52] *** Joins: MajorBiscuit (~MajorBisc@c-001-032-008.client.tudelft.eduvpn.nl)
[17:07:49] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 240 seconds)
[17:08:25] <rex> I'll repost my graph theory problem
[17:08:28] <rex> However in our lecture notes the theorem by Hajnal and Szmeredi is this: Let G be a graph with n vertices, k | n and δ(G) ≥ (1- 1/k)n. Then G has a K_k-Factor.
[17:08:35] <rex> I'm having a little trouble with understanding a graph theorem: In an exercise they refer to Hajnal and Szmeredi and using their theorem as stated here https://en.wikipedia.org/wiki/Hajnal%E2%80%93Szemer%C3%A9di_theorem
[17:08:50] <rex> Are those theroems equivalent?
[17:08:58] <rex> sorry first and second are swapped
[17:09:28] <rex> using the theorem as stated in wikipedia would make the exercise trivial
[17:10:31] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:49b9:77c7:60be:3860)
[17:10:53] <rex> If those would be equivalent I'm lost as to why since one uses max degree the other min degree
[17:13:00] *** Quits: confuzius (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[17:16:35] *** Joins: h_m (~h_m@186-149-117-154.bitcointernet.co.za)
[17:16:59] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:20:21] <cherim> K_k-factors mean partitioning into cliques, colorings correspond to partitioning into independent sets
[17:20:27] *** Quits: lleo (~leo@31-161-144-55.mobile.kpn.net) (Quit: beyond time space in laws)
[17:20:35] <cherim> If you want to relate the theorems, take the complement
[17:24:09] <rex> cherim: so the one phrasing is about G the other about its complement?
[17:25:57] *** Quits: folkert (~folkert@507283AA.static.ziggozakelijk.nl) (Ping timeout: 240 seconds)
[17:26:31] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.29) (Remote host closed the connection)
[17:26:37] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[17:26:48] <rex> also according to my notes H-factor means a spanning subgraph of G, that is a vertex-disjoint union of copies of H
[17:27:06] <rex> but then the different copies of H are not connected are they?
[17:30:26] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[17:31:08] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[17:32:22] *** Quits: xelxebar (~xelxebar@aj097104.dynamic.ppp.asahi-net.or.jp) (Quit: WeeChat 3.4)
[17:36:27] *** Joins: horseface (~horseface@user/horseface)
[17:36:55] *** Joins: savask (~savask@Powder/Developer/savask)
[17:41:55] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:42:04] *** Joins: folkert (~folkert@507283AA.static.ziggozakelijk.nl)
[17:42:42] *** Parts: folkert (~folkert@507283AA.static.ziggozakelijk.nl) ()
[17:43:46] *** Joins: notzmv (~zmv@user/notzmv)
[17:44:39] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[17:44:56] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.29)
[17:45:17] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[17:45:39] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.29) (Max SendQ exceeded)
[17:46:13] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.29)
[17:46:42] <orbisvicis> wikipedia defines the nth moment u_n as E[X^n], variance as the 2nd moment, and variance as E[X^2] - E[X]^2
[17:46:46] <orbisvicis> there seems to be a contradiction
[17:47:51] <rex> orbisvicis: not if E[X] = 0
[17:48:13] <rex> maybe the defined the higher moments assuming a "normalized" X
[17:48:41] <rex> which you can always do, if E[X] exisists and is finite
[17:50:16] <cherim> Wikipedia correctly says "The variance is ... the second *central* moment of a distribution" as I see
[17:52:29] <Z-module>  E[X^2] - E[X]^2 = E[ (X - E[X])^2 ]
[17:54:04] <orbisvicis> hmm, I see
[17:55:49] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551) (Ping timeout: 240 seconds)
[18:03:27] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:05:31] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551)
[18:06:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:08:40] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:10:48] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551) (Read error: Connection reset by peer)
[18:11:13] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551)
[18:13:12] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 256 seconds)
[18:22:04] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[18:30:48] *** Joins: am1985 (~AM@2603-7000-3807-e4c1-39c8-e8aa-368f-c1e1.res6.spectrum.com)
[18:32:43] *** Parts: sshine (~simon@hubris.eta.solutions) ()
[18:32:45] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:33:47] *** Joins: remavas (~Remavas@user/remavas)
[18:34:24] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[18:34:55] *** Joins: xkuru (~xkuru@user/xkuru)
[18:36:25] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:37:13] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:49b9:77c7:60be:3860) (Quit: dingdreher)
[18:39:41] *** Joins: Macuser (~Macuser@2600:1003:b466:f61b:650f:cc1c:784:d758)
[18:39:42] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-51d4-90a9-19c0-7512.res6.spectrum.com)
[18:40:03] *** Quits: remavas (~Remavas@user/remavas) (Quit: WeeChat 2.8)
[18:45:18] *** Quits: am1985 (~AM@2603-7000-3807-e4c1-39c8-e8aa-368f-c1e1.res6.spectrum.com) (Quit: This computer has gone to sleep)
[18:51:55] <lf94> I need some geometry help. I have this arc which must start from point Ps and go to point Pe. The arc has a "sag" (sagitta arc) of a certain value. I'm having an extremely difficult time to figure out how to calculate the points along this arc.
[18:52:06] <lf94> I'm just wondering if someone could point me in the right direction.
[18:52:24] <lf94> I can easily calculate points along a circle. It's calculating the points starting from Ps to Pe which is the problem.
[18:52:31] *** Joins: horseface (~horseface@user/horseface)
[18:53:05] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[18:53:56] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:54:44] *** Joins: moog (~moog@107.126.53.103)
[18:55:42] *** Quits: yashi (~user_name@user/yashi) (Ping timeout: 256 seconds)
[18:56:09] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz?)
[18:57:12] *** Joins: am1985 (~AM@2603-7000-3807-e4c1-39c8-e8aa-368f-c1e1.res6.spectrum.com)
[19:00:59] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:49b9:77c7:60be:3860)
[19:04:46] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:11:34] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[19:11:49] *** Joins: esther (~esther@199.10.64.228)
[19:17:45] *** Quits: Europa_ (~Europa@user/europa) (Remote host closed the connection)
[19:18:05] *** Joins: Europa (~Europa@user/europa)
[19:18:32] <lericson> look up the formula for making a circle from three points, lf94?
[19:18:55] <lf94> Seems to be very complex
[19:18:56] <lf94> X)
[19:19:01] <lf94> But ok, I'll re-read about it!
[19:19:41] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:19:59] <lericson> for a given sagitta s you can compute the midpoint of the arc
[19:20:15] <lericson> then with those three points and that formula, voila
[19:20:26] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[19:21:03] <lericson> https://www.math.net/sagitta this was helpful
[19:21:17] * lf94 click
[19:22:32] *** Quits: MetricT2 (~MetricT@075-131-120-170.res.spectrum.com) (Remote host closed the connection)
[19:22:51] *** Joins: MetricT2 (~MetricT@2600:6c5d:4500:af86:65e6:d3e7:170a:1fd6)
[19:26:37] *** Joins: yashi (~user_name@user/yashi)
[19:27:16] *** Joins: MetricT3 (~MetricT@2600:6c5d:4500:af86:75d9:e72e:f8e9:83ad)
[19:28:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[19:29:28] *** Quits: MetricT3 (~MetricT@2600:6c5d:4500:af86:75d9:e72e:f8e9:83ad) (Client Quit)
[19:30:37] *** Quits: MetricT2 (~MetricT@2600:6c5d:4500:af86:65e6:d3e7:170a:1fd6) (Ping timeout: 240 seconds)
[19:31:11] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:49b9:77c7:60be:3860) (Ping timeout: 268 seconds)
[19:31:46] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[19:37:55] <Decker> ang=arccos((r-s)/r); B=A+(ang*2)*r (real arclength)   ; a=r cos(0), r sin(0); b=r cos(ang*2),r*sin(ang*2)
[19:40:32] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Ping timeout: 252 seconds)
[19:43:08] <lf94> My issue is drawing the arc from Ps to Pe specifically though, not just drawing a sagitta arc from 0,0 to x,0
[19:43:29] <lf94> My brain is just not trained enough in manipulating geometry
[19:43:30] <Decker> well s/0/A/ where A is ps's offset on the arc
[19:43:43] <Decker> and A+ang*2
[19:44:07] <lf94> s/0/A in yours or mine
[19:44:13] <Decker> mine
[19:44:28] <lf94> (We should probably not use regex syntax in a math channel x)
[19:44:42] <lf94> ok so just the cos and sin 0
[19:44:59] <Decker> ya - then you can offset to where Ps is
[19:45:02] <Decker> R's the same
[19:45:34] <Decker> assuming you have that - I don't know your parameterization - so i was just give A solution bsaed on what you said; I'd have to assume R is also known
[19:54:13] *** Quits: catalpa (~John@170.79.90.245) (Ping timeout: 240 seconds)
[19:57:15] <lf94> Well for sagitta, I only have the sag and end point.
[19:57:23] <lf94> er, start point too.
[19:58:29] <Decker> start, end and S and you want R ?
[19:59:24] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[19:59:40] *** Joins: Europa (~Europa@user/europa)
[20:01:07] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[20:03:06] <Decker> 2r=sqrt( (Pe-Ps)/2 ^2 +s^2 );
[20:03:25] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 240 seconds)
[20:03:33] *** Quits: unknow (~i.am@user/marlboro) (Ping timeout: 256 seconds)
[20:03:39] <Decker> no
[20:07:50] *** Joins: horseface (~horseface@user/horseface)
[20:10:31] *** Joins: Everything (~Everythin@37.115.210.35)
[20:12:37] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 240 seconds)
[20:16:37] *** Quits: Macuser (~Macuser@2600:1003:b466:f61b:650f:cc1c:784:d758) (Ping timeout: 240 seconds)
[20:16:38] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[20:17:09] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[20:18:50] *** Joins: nullcone (uid11626@id-11626.helmsley.irccloud.com)
[20:20:29] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[20:21:02] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[20:21:14] *** Joins: magla (~gelignite@55d483f5.access.ecotel.net)
[20:22:19] <Al-Khwarizmi>  /bind -list
[20:25:06] *** Joins: Al-Khwar1zmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[20:25:34] *** Quits: Al-Khwar1zmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Client Quit)
[20:26:52] *** Joins: horseface (~horseface@user/horseface)
[20:33:49] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Ping timeout: 240 seconds)
[20:36:00] *** Joins: src (~src@user/src)
[20:41:01] *** Joins: hiyori (~hiyori@user/hiyori)
[20:42:32] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:52:43] *** Joins: unknow (~i.am@user/marlboro)
[20:52:54] *** unknow is now known as jhms
[20:53:25] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:56:02] *** Joins: kish` (~aqua@user/aqua)
[20:59:57] *** Quits: sander (~sander@user/sander) (Ping timeout: 240 seconds)
[21:01:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:01:39] *** Quits: bendersteed (~user@ppp141237131021.access.hol.gr) (Remote host closed the connection)
[21:02:15] *** Joins: sander (~sander@user/sander)
[21:05:53] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 256 seconds)
[21:06:33] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[21:06:38] *** Joins: cadmio (~cadmio@151.47.123.245)
[21:06:48] <cadmio> Hello
[21:07:16] <riv> hey
[21:07:34] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[21:07:46] <cadmio> I've a doubt
[21:08:24] *** Quits: horseface (~horseface@user/horseface) (Quit: I AM GOING TO HIDE FROM THE TOTALITARIANS AMONGST THE ZEBRAS!!!)
[21:08:37] <cadmio> 4.15.5 Theorem https://gioretikto.github.io/mat/algebra/characteristic_integral_domain.html at the end it employs the fundamental homomorphism theorem
[21:09:52] <Z-module> let's see
[21:10:05] <cadmio> which should be this one https://gioretikto.github.io/mat/algebra/fund_theorem_homomorphism.html
[21:10:17] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[21:10:47] <Z-module> Where in that document are you having a problem, cadmio?
[21:11:17] <cadmio> I'm unsure whether the condition f* ∘ π = f is met in 4.15.5
[21:11:46] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[21:12:31] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:12:34] <Z-module> sadly, I need you to use only ascii here. Can't find the thing you're talking about.
[21:13:18] <Z-module> for example, type "phi" instead of some symbol supposedly displaying the Greek letter
[21:13:49] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[21:14:18] <cadmio> the fundamental theorem states there's a unique isomorphsim f* such that f*(pi) = f, with pi the canonical projection
[21:14:29] <Z-module> Is this document ever using that?
[21:16:10] <cadmio> I don't understand whether that's an important condition to be met or I can just use the fact that there exists a isomorphism from Im f to R/Ker f
[21:16:12] <Z-module> It seems to be missing, but it must be starting with a ring homomorphism  Z -> F    where the 1 of Z goes to the 1 of F
[21:16:32] <Z-module> and the image of this map is that D
[21:16:55] <Z-module> oh, yes, the phi they have there is this
[21:17:20] <Z-module> all you need is    Z/ker(phi) =~ im(phi) = D
[21:17:51] <Z-module> that's the First Homomorphism Theorem (for rings) applied to this situation
[21:17:57] <cadmio> and the fact that phi* ° pi = f?
[21:18:09] <Z-module> I don't think yiou need to mention that at all
[21:18:23] <Z-module> (also I don't know what f is)
[21:18:49] <cadmio> sorry phi* ° pi = phi
[21:19:00] <cadmio> phi is the homo and phi* the iso
[21:19:10] <Z-module> yeah, not needed
[21:19:25] <Z-module> it really just defines phi*
[21:19:27] <Z-module> ait'
[21:19:31] *** Quits: mbuf (~Shakthi@182.77.103.82) (Quit: Leaving)
[21:19:34] <Z-module> it's inherent in the proof of the FIrst Theorem
[21:20:06] <Z-module> Just take as given that for ANY ring homomorphism  g: R -> S,    we have  R/ker(g) =~ im(g)
[21:20:06] <cadmio> so that fundamental theorem could be stated with that part as well
[21:20:29] <Z-module> the thing I just wrote is the theorem
[21:22:10] *** Joins: tokerboker (knited@2607:5300:60:21b::1)
[21:22:24] *** Quits: jellydonut (~quassel@185.213.154.170) (Quit: jellydonut)
[21:24:13] *** Joins: jellydonut (~quassel@89.46.62.63)
[21:25:39] <cadmio> so can there be different isomorphism between those rings, except phi* ° pi = phi?
[21:25:47] <Z-module> actually there can
[21:25:56] <Z-module> but you almost never care about this
[21:26:20] *** Joins: jamtorus (~quassel@89.45.224.226)
[21:26:29] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[21:27:29] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:27:43] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[21:27:47] *** Joins: mickey8 (~user@user/mickey)
[21:28:34] <Z-module> but yes,   phi* ° pi = phi    does define the isomorphism for this theorem.
[21:28:56] *** Joins: jamtorus2 (~quassel@204.44.124.229)
[21:29:05] <Z-module> it just means each coset   r + ker(phi)   gets sent to phi(r)
[21:30:24] *** Quits: jellydonut (~quassel@89.46.62.63) (Ping timeout: 256 seconds)
[21:31:09] <Z-module> It really would be better if you use Z/pZ or F_p to denote the field of integers mod p.  "Z_p" is used more often for other things, either the cyclic group (the additive group of the field), or the p-adic integers that you are totally not working with here.
[21:31:37] *** Joins: jellydonut (~quassel@141.98.255.148)
[21:31:43] <cadmio> it seems it defines the homo rather because it's phi = phi * ° pi and phi is the homo
[21:31:58] *** Quits: jellydonut (~quassel@141.98.255.148) (Read error: Connection reset by peer)
[21:32:14] <Z-module> phi* is the _isomorphism_  R/ker(phi) -> im(phi)
[21:32:31] <cadmio> yes
[21:32:41] *** Quits: joj (~joj@jojeee.xyz) (Ping timeout: 268 seconds)
[21:33:02] <Z-module> So each r in R gets sent by pi to the coset   r + ker(phi),  and then phi* sends that to phi(r).
[21:33:14] *** Quits: jamtorus (~quassel@89.45.224.226) (Ping timeout: 256 seconds)
[21:33:20] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[21:33:25] <Z-module> Most of the proof of the First theorem is checking that this is well defined.
[21:33:38] *** Joins: BlueSky (~BlueSky@user/bluesky)
[21:33:53] <Z-module> meaning:  if the two cosets   r + ker(phi),  r' + ker(phi)   are the same set, then phi(r) = phi(r')
[21:34:39] <Z-module> and checking it is a ring homomorphism, and then that it has 0 kernel so it's an isomorphism to the image
[21:34:45] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[21:35:30] *** Quits: jamtorus2 (~quassel@204.44.124.229) (Ping timeout: 256 seconds)
[21:36:03] <Z-module> also, you have    Char(5Z) = 0    down there, but 5Z does not qualify as a ring for most people, probably not for your course either. It has no multiplicative identity.
[21:36:35] <Z-module> it's rather weird to inquire about the characteristic of an ideal. I've never seen that.
[21:37:05] *** Joins: mbuf (~Shakthi@182.77.103.82)
[21:38:12] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:38:14] *** Quits: xff0x (~xff0x@2001:1a81:5310:700:f0a4:a961:9964:1b51) (Ping timeout: 252 seconds)
[21:38:54] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.29) (Ping timeout: 256 seconds)
[21:38:59] *** Joins: jellydonut (~quassel@193.138.218.161)
[21:40:59] <cadmio> I'm studying field extensions and I was revising the char of a field
[21:41:06] <Z-module> okay
[21:41:18] <Z-module> 5Z isn't even a ring, much less a field
[21:41:39] <cadmio> that's stuff I wrote a long time ago now I should rethink about them
[21:42:15] <cadmio> the original exercise asked me to calculate the char of : 3Z, z x 5Z, Z_5 x Z_3
[21:42:22] <cadmio> Z x 5Z
[21:42:27] <Z-module> you can talk about the the smallest natural n such that the sum of n copies of eaching in the additive group 5Z is 0 in that group, but that's called the group's exponent.
[21:42:31] <cadmio> I don't know why I've changed
[21:42:32] <Z-module> They really used the word characteristic?
[21:42:34] <Z-module> very strange
[21:42:55] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[21:42:57] <Z-module> only the third thing in your list is a ring
[21:43:58] <cadmio> that's strange because it says "of the following rings"
[21:44:14] *** Joins: seninha (~seninha@user/seninha)
[21:44:15] <Z-module> I guess your course is not requiring rings to have 1.  Makes it all weird.
[21:44:22] *** Joins: vysn (~vysn@user/vysn)
[21:44:33] <cadmio> I think 3z should be like Z and have char 0
[21:44:47] <cadmio> the same for the 2nd
[21:44:48] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[21:44:56] <Z-module> yes, there is no positive n with the sum of n copies of each thing in 3Z being 0.
[21:45:04] <Z-module> same for the second thing
[21:46:17] <cadmio> with the same approach used this morning the 3rd should be 15
[21:46:44] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[21:46:53] <cadmio> I gotta go now, thanks a lot
[21:46:54] *** Quits: cadmio (~cadmio@151.47.123.245) (Quit: WeeChat 3.0)
[21:47:05] *** Joins: anthk_ (~anthk_@92.176.105.30)
[21:47:32] *** Quits: anthk_ (~anthk_@92.176.105.30) (Remote host closed the connection)
[21:49:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:50:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:53:51] *** Quits: MajorBiscuit (~MajorBisc@c-001-032-008.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[21:56:07] *** Quits: Xinayder (~alex@user/xinayder) (Ping timeout: 250 seconds)
[21:59:22] *** Joins: Xinayder (~alex@user/xinayder)
[22:00:40] *** Joins: econo (uid147250@user/econo)
[22:02:32] <Bayes> Let x = (x1, ..., x100) be a vector. Is x_a = (x1, ..., x10) a *subvector* of x or am I just making up english words here?
[22:03:06] <Bayes> I mean things like subspace makes lots of sense, subvector I don't recall hearing that term before
[22:03:42] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:04:10] *** Quits: Xinayder (~alex@user/xinayder) (Client Quit)
[22:05:19] *** Joins: Xinayder (~alex@user/xinayder)
[22:07:16] *** Quits: mbuf (~Shakthi@182.77.103.82) (Quit: Leaving)
[22:07:22] <isekaijin> Bayes: You are totally making up words.
[22:07:51] <isekaijin> A vector is a geometric object. Its coordinates in a particular coordinate system are just a representation artifact.
[22:08:23] <Bayes> ok but if I want to work with only a part of the vector
[22:08:38] <isekaijin> But you can say that your x_a is the projection of x onto the subspace whose coordinates are the 10 first ones.
[22:09:10] <Bayes> oh there you go, that's the formal way to think of it, as a projection on say the first 10 coordinates
[22:09:42] <isekaijin> If you will be using this projection a lot, then you can give it a name, e.g., “Let p : R^{100} -> R^{10} be the projection that retains only the first 10 coordinates. Now consider x_a = p(x). Then...”
[22:10:04] <Bayes> that's totally the way
[22:10:24] <Bayes> I'm not sure I want to introduce more notation for this but that certainly sounds like the neatest approach
[22:10:44] <Z-module> Hmmm, slightly cute, I hadn't seen this before. We all know that for any group G, the group G/Z(G) can't be cyclic unless it's trivial. The cute things is: if G/Z(G) isn't trivial, it is also not the union of any omega-chain H_1 < H_2 < ... of cyclic subgroups of G/Z(G).
[22:11:21] <riv> aha, nice strengthening
[22:12:16] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[22:12:48] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:f0a4:a961:9964:1b51)
[22:13:06] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[22:13:15] <isekaijin> Z-module: Source?
[22:16:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:17:35] *** Quits: am1985 (~AM@2603-7000-3807-e4c1-39c8-e8aa-368f-c1e1.res6.spectrum.com) (Quit: This computer has gone to sleep)
[22:17:49] *** Quits: xff0x (~xff0x@2001:1a81:5310:700:f0a4:a961:9964:1b51) (Ping timeout: 240 seconds)
[22:17:57] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[22:19:00] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:c5b4:7757:92cc:e34)
[22:20:54] <Z-module> The older book "Group Theory" by W. R. Scott, that I am hugely enjoying. Except I still haven't found what he means by "Cl(H)"  (H some subgroup) -- it's not in his long list of notations at the end.
[22:21:26] <Z-module> and he uses a script 'R' to mean the rationals; ugh. Oh well, one makes brain adjustments.
[22:21:28] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[22:21:52] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:22:09] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[22:24:47] *** Quits: hiyori (~hiyori@user/hiyori) (Quit: Client closed)
[22:26:56] <isekaijin> Z-module: Thanks.
[22:27:13] *** Joins: vicfred (~vicfred@user/vicfred)
[22:33:10] *** Quits: h_m (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[22:33:43] *** Quits: xff0x (~xff0x@2001:1a81:5310:700:c5b4:7757:92cc:e34) (Ping timeout: 268 seconds)
[22:34:23] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:28af:ed1a:1e0a:acc)
[22:38:47] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7936:b00a:487a:c68)
[22:42:30] <Z-module> isekaijin: It's just this. Let Z mean Z(G), and say G/Z is a union of *any* linearly inclusion-ordered chain { <x_t Z> : t in some index set }  doesn't have to be an omega-chain) of cyclic subgroups. Take any a, b in G, so aZ, bZ are both in some <x_t Z>.  But by pulling back we get a, b both in the abelian subgroup  <Z cup {x_t}>  of G, so ab = ba. So Z = all of G.
[22:43:20] *** Joins: confuzius (~h_m@186-149-117-154.bitcointernet.co.za)
[22:46:27] <Z-module> and I found out his notation  Cl(S),  for any subset S of G, just means {all conjugate sets S^x : x in G}, pretty obvious. He still should have had it in the List of Notations.
[22:47:46] *** Joins: specing_ (~specing@user/specing)
[22:47:46] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[22:49:17] *** specing_ is now known as specing
[22:50:51] *** Joins: stonkey (~stonkey@user/stonkey)
[22:53:25] *** Joins: anthk_ (~ander@92.176.105.30)
[22:54:00] *** Quits: anthk_ (~ander@92.176.105.30) (Client Quit)
[22:54:30] <Z-module> THe book also has this little thing I never knew: Every infinite division ring contains an infinite field.
[22:59:26] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: The Lounge - https://thelounge.chat)
[23:02:00] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:02:18] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[23:03:31] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[23:09:56] <buster> Cl for closure (under conjugation)?
[23:10:23] <isekaijin> Z-module: Oh, cool.
[23:10:33] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[23:10:38] <isekaijin> buster: Perhaps “conjugacy CLass”.
[23:11:04] <buster> yeah, could be
[23:11:19] <buster> more likely
[23:11:38] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[23:12:17] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[23:14:40] *** Joins: lok91 (~lok91@D4709A7F.rev.sefiber.dk)
[23:15:28] <lok91> Hi. They lost me in the very last step, where they say that they are "summing all terms up" - could you elaborate on this part? https://imgur.com/a/WPeTXRO
[23:15:37] <lok91> How exactly did they form this sum?
[23:16:27] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Remote host closed the connection)
[23:16:36] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:d0ec:6b5c:160b:6551) (Quit: bbl)
[23:17:21] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 256 seconds)
[23:18:03] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:18:19] *** Quits: smile (uid510004@user/smi) (Quit: Connection closed for inactivity)
[23:20:42] <int-e> lok91: well, for n = 2k+1, a_n = 1/(2k+1)^2... they lost the 'pi' in cos((2k+1)pi x) though, which is a mistake
[23:21:04] <lok91> So there should still be a pi? :)
[23:21:13] <int-e> yes
[23:21:36] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[23:21:43] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Client Quit)
[23:22:37] <lok91> Thanks! But why do they write ((2k + 1)^2 pi^2 - 9) instead of (9 - ((2k + 1)^2 pi^2)) in the denominator?
[23:22:59] <int-e> lok91: because they decided (for whatever reason) to pull a factor -1 out of the sum
[23:23:29] <lok91> Yeah, it is somewhat confusing that they change the plus to a minus there :P
[23:23:30] <int-e> probably because ((2k + 1)^2 pi^2 - 9) > 0 (for all k >= 0)
[23:24:08] <lok91> Oh, so it would not work if I did not pull out the factor -1?
[23:24:19] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[23:24:34] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Client Quit)
[23:24:45] <int-e> It would still work.
[23:25:06] <lok91> Wouldn't we risk dividing by zero at some point?
[23:25:10] <int-e> You'd just have a negative denominator then; there is nothing wrong with that.
[23:25:48] *** Joins: eviroo (~eviroo@h5-44-206-46.cust.a3fiber.se)
[23:26:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:26:47] <lok91> But that fraction which they sum over... I am not quite sure I understand how they obtain it (even if we add this pi)
[23:27:47] <int-e> you solve y'' + 9y = f_n for each term of the sum that defines f(x)
[23:28:23] <int-e> giving y_n. And you add all these results together to get y(x)
[23:28:38] <eviroo> Hey, I’m trying to Taylor expand exp(cosx) with the method of utilizing the known expansions for exp(x) and cosx. Everything is fine, but I’m kinda stuck on how to simplify the polynomials that occur with high degrees (say degree 5).
[23:28:42] <lok91> But the denominator, n^2 (n^2 pi^2 - 9) for n = 2k + 1, comes from where exactly?
[23:29:01] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[23:29:19] <int-e> lok91: y_n is given just before the sum; a_n comes from f(x) in part a)
[23:29:50] <int-e> and they pulled out a factor -1 which accounts for the flipped subtraction
[23:30:20] <lok91> Oh, I somehow missed the connection to the derivation of a_n from part a)
[23:30:26] <lok91> :)
[23:30:51] <int-e> the connection is the term "Fourier series"
[23:31:02] <int-e> which is what part a) derived
[23:31:34] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[23:34:01] <lok91> So basically, they say y(x) = y_0 + \sum y_n(x), right? I know that they afterwards manipulate it by pulling out some constants, etc. But that's the "basic form" of the last part?
[23:34:50] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:35:37] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 240 seconds)
[23:36:00] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[23:36:05] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[23:36:35] <eviroo> Basically expanding around 0 (Maclauring series), exp(x) = 1 + x + x^2/2 + x^3/3! + x^4B1(x) for some bounded function B1. However, there is a problem with just plugging in cosx in the expansion of exp(x) since cosx is close to 1 for x close to 0. So, expanding cosx, cosx = 1 - x^2/2 + x^4B2(x) for some other bounded function B2. Now, plugging the
[23:36:36] <eviroo> the cosx expansion into the exp(x) expansion is fine, but how does one simplify it? In the book, there is a hint to “we only need to calculate the coefficients for 1, x^2, x^3, x^4 in detail..” but I don’t even know what that means.
[23:37:05] *** Quits: jhms (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:39:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:40:45] <eviroo> I have something like: exp(cosx) = 1 + (1 - x^2/2 + x^4B2(x)) + (1/2)(1 - x^2/2 + x^4B2(x))^2 + (1 - x^2/2 + x^4B2(x))^4B1(x)
[23:40:57] <eviroo> B1 and B2 again bounded functions around 0.
[23:43:02] *** Joins: meissa (~meissa@pool-108-5-60-161.nwrknj.fios.verizon.net)
[23:44:05] <meissa> If I know the relation between two means of unknown lists, can I still know the relation after applying a log transform to both lists?
[23:48:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:48:57] *** Joins: vysn (~vysn@user/vysn)
[23:50:28] *** Quits: eviroo (~eviroo@h5-44-206-46.cust.a3fiber.se) (Quit: Client closed)
[23:50:38] *** Parts: savask (~savask@Powder/Developer/savask) ()
[23:50:52] *** Joins: eviroo (~eviroo@h5-44-206-46.cust.a3fiber.se)
[23:51:02] <eviroo> Anyone?
[23:51:32] <mycroftiv> everytwo
[23:51:54] <statusfailed> nothree
[23:52:18] <eviroo> Did the autism hit on everyone at the same time?
[23:53:43] <int-e> eviroo: you seem to have the right approach (B1(x) should be B1(cos(x)) but that shouldn't matter)
[23:56:05] <eviroo> int-e You are right. The book mentions that we can simplify such expressions by grouping relevant factors and calculate the relevant coefficients, then put the rest (higher degree factors) in a common bounded function. I have no clue how this simplification is done tho. There is an example solution for ln(cosx + 1) I can show how they did but I
[23:56:05] <eviroo> don’t get the last step which leads to the answer (the simplification).
[23:56:14] <int-e> the x^3/3! term seems to be missing, and if you want the x^4 term as well you'll need to expand a bit further
[23:56:27] <int-e> (three different x-s, glorius)
[23:56:31] <int-e> *glorious
[23:56:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[23:57:33] *** Quits: andreasbuhr (~quassel@p549db698.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:58:00] <int-e> err
[23:58:19] <int-e> cos(0) = 1 is a problem, of course.
[23:58:25] <meissa> *assuming each list is normally distributed
[23:59:11] <int-e> We'll have exp(cos(x)) = e + O(x)
