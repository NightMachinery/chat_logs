[00:00:19] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[00:05:07] *** Quits: gigamonkey (~Guest0@135-180-44-14.fiber.dynamic.sonic.net) (Quit: Client closed)
[00:09:02] *** Joins: wheelsucker (~user@2600:8801:8c04:6b00:72f7:c608:6bbb:37e4)
[00:15:08] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[00:15:48] *** Joins: selwyn (~selwyn@user/selwyn)
[00:19:54] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[00:20:27] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[00:22:49] *** Quits: wheelsucker (~user@2600:8801:8c04:6b00:72f7:c608:6bbb:37e4) (Quit: ERC (IRC client for Emacs 27.2))
[00:29:25] *** Joins: theothornhill (~user@87.89-10-116.nextgentel.com)
[00:41:54] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Ping timeout: 240 seconds)
[00:42:10] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[00:48:36] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[00:56:36] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 244 seconds)
[00:56:57] *** Joins: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net)
[00:58:59] *** Quits: Noisytoot (noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[01:03:14] *** Joins: Noisytoot (noisytoot@sourcehut/user/noisytoot)
[01:19:40] *** Quits: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net) (Quit: Bye!)
[01:20:04] *** Joins: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net)
[01:20:18] *** Quits: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net) (Read error: Connection reset by peer)
[01:20:47] *** Joins: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net)
[01:21:51] *** Joins: fishfinger_ (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net)
[01:22:09] *** Quits: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net) (Remote host closed the connection)
[01:24:20] *** Quits: pve_ (~pve@178-55-54-179.bb.dnainternet.fi) (Quit: leaving)
[01:29:32] *** Quits: fishfinger_ (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[01:31:02] *** Joins: aeth_ (~Michael@user/aeth)
[01:31:41] *** Quits: aeth (~Michael@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[01:31:44] *** aeth_ is now known as aeth
[01:36:18] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[01:38:06] *** Joins: wheelsucker (~user@72-11-224-114.static-ip.telepacific.net)
[01:42:12] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:3c67:3959:e8a4:1bab) (Remote host closed the connection)
[01:43:20] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.1)
[01:43:49] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[01:44:41] *** Joins: bilegeek (~bilegeek@2600:1008:b041:5047:48ad:ae3d:d2ea:7d42)
[01:49:54] *** Quits: theothornhill (~user@87.89-10-116.nextgentel.com) (Ping timeout: 240 seconds)
[01:51:15] *** Quits: wheelsucker (~user@72-11-224-114.static-ip.telepacific.net) (Quit: ERC (IRC client for Emacs 27.2))
[02:06:44] *** Joins: mindCrime_ (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[02:11:28] *** Quits: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net) (Ping timeout: 268 seconds)
[02:14:32] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:4812:3940:14e1:1806) (Remote host closed the connection)
[02:14:44] <jmercouris> I have a list of 400 fruits
[02:14:50] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:4812:3940:14e1:1806)
[02:14:54] <jmercouris> I want to select a fruit from that list
[02:15:09] <jmercouris> I want it to be seemingly random, but consistent for each day
[02:15:18] <jmercouris> so if I run the function twice in one day, I get the same fruit
[02:15:29] <jmercouris> the first thing that comes to mind is a hashing algorithm that I then % against
[02:15:35] <jmercouris> any other ideas?
[02:18:35] *** Joins: theothornhill (~user@87.89-10-116.nextgentel.com)
[02:19:43] <moon-child> jmercouris: use the current day as the seed for your random number generator
[02:19:53] <jmercouris> that will still give me random results
[02:20:05] <moon-child> yes, but they'll be the same within a given day
[02:20:06] <jmercouris> if I run that function twice in the same day, I will get different fruits
[02:20:13] <jmercouris> I am pretty sure about that
[02:20:18] <moon-child> I mean, re-seed it every time you query it
[02:20:35] <moon-child> alternately use an rng that can be advanced arbitrarily, and advance it the number of days since some epoch
[02:20:50] <jmercouris> hm, that could be something
[02:22:29] *** Joins: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net)
[02:22:55] <jmercouris> too bad I can't pass a *random-state* to alexandria:random-elt
[02:24:12] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[02:24:27] <jmercouris> maybe it is enough to ste it
[02:24:32] <jmercouris> I will see
[02:24:34] <mfiano> uhh
[02:24:39] <mfiano> it's a dynamic variable
[02:24:42] <luis> jmercouris: can you bind it
[02:24:55] <jmercouris> mfiano: yeah that is what I meant when I said "set it"
[02:25:01] <mfiano> no don't set it
[02:25:05] <jmercouris> let bind it
[02:25:16] <mfiano> If a program globally mutated my state I wuld be mad
[02:25:23] <mfiano> ok good
[02:25:31] <jmercouris> yeah, it was a typo
[02:25:36] <jmercouris> a mental typo :-D
[02:26:16] *** Quits: theothornhill (~user@87.89-10-116.nextgentel.com) (Ping timeout: 268 seconds)
[02:27:17] <jmercouris> wonder why the initial seed value in target-random.lisp of SBCL is 5489
[02:27:22] <jmercouris> is there some significance to that number?
[02:27:22] *** Joins: akoana (~ah@user/akoana)
[02:31:49] *** Quits: mindCrime_ (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 268 seconds)
[02:31:57] <mfiano> Not really. 5489 is used as an example for a bunch of MT implementations it looks like
[02:32:09] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:4812:3940:14e1:1806) (Ping timeout: 272 seconds)
[02:32:13] <jmercouris> strange
[02:32:14] <mfiano> Something has to be used
[02:32:28] <jmercouris> True, I would have personally just smacked the keyboard
[02:32:38] <jmercouris> that's my usual way to get 'random' data
[02:33:01] <jmercouris> (let ((*random-state* (make-random-state nil))) (random 50))
[02:33:41] <jmercouris> unfortunately when you restart CL, the seed is of course different, so I'll have to use the SBCL extension if I really want it to work
[02:33:47] *** Joins: aeth_ (~Michael@user/aeth)
[02:33:59] <jmercouris> I also don't want to make it implementation dependent...
[02:34:08] <jmercouris> oh well, perhaps it is enough to just always have a random fruit
[02:34:09] <jmercouris> it's ok
[02:34:16] <mfiano> Also keep in mind that you'll get a different result on different implementations
[02:34:17] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 268 seconds)
[02:34:32] <jmercouris> yeah, I read that as well, unfortunate
[02:34:34] <mfiano> You can avoid this by using a seedable PRNG.
[02:34:49] <mfiano> I have a wrapper of pcg for this in QL, seedable-rng
[02:34:59] <jmercouris> I see
[02:35:03] <jmercouris> that's a problem
[02:35:06] <jmercouris> I can't use anything in QL
[02:35:12] <jmercouris> that's what makes this a little more challenging :-D
[02:35:19] *** aeth_ is now known as aeth
[02:35:25] <jmercouris> that would be a good solution though
[02:35:35] <mfiano> Seems like an odd restriction unless you're writing another Quicklisp
[02:35:39] <jmercouris> I'm not
[02:35:53] <jmercouris> it's just that I'm putting this in my Nyxt init file, which doesn't have privileges to fetch from QL
[02:36:00] <mfiano> Then qlot it
[02:36:09] <jmercouris> I could also clone it
[02:36:14] <mfiano> Or that
[02:36:27] <mfiano> You're making things harder for yourself for no reason :)
[02:36:43] <jmercouris> :-D
[02:38:13] *** Joins: mindCrime_ (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[02:39:06] <edgar-rft> jmercouris: why can't you download the stuff with QL and then copy it into your Nyxt init file?
[02:43:48] <jmercouris> doing the recursive downloading for some dependencies is tedious, that's all
[02:52:28] *** Quits: knusbaum (~kjn@2601:240:8480:9990:d01f:121a:ec38:ad) (Read error: Connection reset by peer)
[02:53:10] *** Joins: knusbaum (~kjn@2601:240:8480:9990:d01f:121a:ec38:ad)
[02:56:53] *** Joins: karlosz (~karlosz@router.cloyne.org)
[03:07:46] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[03:09:23] *** Quits: frgo (~frgo@p200300deef27d700e1bc504f7b4d8da1.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:09:30] *** Joins: frgo_ (~frgo@p200300deef27d700e1bc504f7b4d8da1.dip0.t-ipconnect.de)
[03:09:46] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Remote host closed the connection)
[03:10:02] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[03:22:19] *** Joins: yewscion_ (~yewscion@2601:547:a01:2900::c51c)
[03:27:09] *** Joins: aeth_ (~Michael@user/aeth)
[03:27:56] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 268 seconds)
[03:28:07] *** aeth_ is now known as aeth
[03:30:05] *** Joins: derelict (~derelict@user/derelict)
[03:30:08] *** Quits: bilegeek (~bilegeek@2600:1008:b041:5047:48ad:ae3d:d2ea:7d42) (Quit: Leaving)
[03:31:13] *** Quits: knusbaum (~kjn@2601:240:8480:9990:d01f:121a:ec38:ad) (Remote host closed the connection)
[03:35:00] *** Quits: Alfr (~Alfr@user/alfr) (Killed (zirconium.libera.chat (Nickname regained by services)))
[03:35:05] *** Joins: Alfr (~Alfr@user/alfr)
[03:39:27] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[03:43:05] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[03:48:43] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Quit: Ping timeout (120 seconds))
[03:49:02] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[03:53:04] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:54:08] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[03:56:24] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 244 seconds)
[04:04:50] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[04:10:40] *** Quits: trocado (~trocado@bl18-243-251.dsl.telepac.pt) (Read error: Connection reset by peer)
[04:21:18] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 264 seconds)
[04:25:41] *** Quits: dlowe (~dlowe@user/dlowe) (Remote host closed the connection)
[04:42:59] <ludston> jmercouris: Should just shuffle the set of fruit, output into a text file. When your program start, load into an array and (aref fruit (mod day (length fruit)))
[04:46:31] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 244 seconds)
[04:48:39] *** Joins: aeth (~Michael@user/aeth)
[04:55:56] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[05:09:29] *** Joins: aeth_ (~Michael@user/aeth)
[05:10:12] *** Quits: aeth (~Michael@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[05:10:18] *** aeth_ is now known as aeth
[05:29:43] *** Joins: akoana (~ah@user/akoana)
[05:38:26] *** Joins: Josh_2 (~user@37.25.47.130)
[05:41:54] <Josh_2> Dumb question time, how do I get the common elements between multiple lists?
[05:42:25] <moon-child> INTERSECTION
[05:43:55] <Josh_2> ffs  ofcourse
[05:44:09] <Josh_2> I knew there was a built in function, I blame it on the fact its 2am xD
[05:44:48] <moon-child> also UNION for the opposite operation
[05:46:22] <pjb> and set-difference
[05:46:52] <moon-child> that's \?
[05:46:58] <pjb> yes.
[05:55:36] <Josh_2> I knew about set-difference, I even checked PCL before coming here
[05:55:42] <Josh_2> I should have looked in GICL 
[06:10:44] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 244 seconds)
[06:10:54] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Remote host closed the connection)
[06:11:12] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[06:23:06] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[06:24:59] *** Joins: wheelsucker (~user@2600:8801:8c04:6b00::e486)
[06:25:01] *** Joins: zacts (~zak@user/zacts)
[06:28:15] *** Quits: zacts (~zak@user/zacts) (Client Quit)
[06:52:25] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[06:55:41] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[06:59:59] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:03:09] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[07:03:37] *** Joins: pjb (~pjb@user/pjb)
[07:03:54] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 240 seconds)
[07:13:21] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[07:31:22] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[07:31:53] <beach> Good morning everyone! 
[07:32:06] *** Joins: aanandc (~aanandc@183.82.177.169)
[07:33:30] *** Quits: aanandc (~aanandc@183.82.177.169) (Remote host closed the connection)
[07:35:29] <Josh_2> Good morning beach 
[07:37:55] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Remote host closed the connection)
[07:44:41] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[07:45:24] *** Quits: mindCrime_ (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 272 seconds)
[07:46:55] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:50:38] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[08:00:04] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: sleep)
[08:04:03] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:05:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[08:05:17] *** Lord_of_Life_ is now known as Lord_of_Life
[08:12:07] *** Joins: derelict (~derelict@user/derelict)
[08:17:19] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 272 seconds)
[08:18:42] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 240 seconds)
[08:19:40] *** Joins: taiju (~taiju@90.201.49.163.rev.vmobile.jp)
[08:24:11] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[08:26:02] *** Quits: taiju (~taiju@90.201.49.163.rev.vmobile.jp) (Read error: Connection reset by peer)
[08:26:21] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[08:28:23] *** Joins: knusbaum (~kjn@2601:240:8480:9990:21bb:3a9b:aacf:e383)
[08:28:31] *** Joins: ad-absurdum (~ad-absurd@2600:100a:b02d:4690:bf42:d528:1665:2fcd)
[08:29:30] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 240 seconds)
[08:31:22] *** Joins: etiago (~etiago@user/etiago)
[08:32:42] *** Quits: knusbaum (~kjn@2601:240:8480:9990:21bb:3a9b:aacf:e383) (Ping timeout: 240 seconds)
[08:49:02] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[08:56:06] *** Joins: cjb (~cjb@user/cjb)
[09:16:02] *** Joins: shka (~herr@109.231.62.239)
[09:16:30] *** Quits: shka (~herr@109.231.62.239) (Client Quit)
[09:16:42] *** Joins: shka (~herr@109.231.62.239)
[09:34:24] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[09:35:38] *** Joins: dsk (~dsk@user/dsk)
[10:10:26] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[10:11:06] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 240 seconds)
[10:12:42] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 240 seconds)
[10:15:38] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[10:17:09] <kakuhen> Reposting a question from #lisp : Is there any advantage to using sb-alien over cffi? I have a macro that only runs on SBCL due to using sb-alien, but I also have a macro with identical function that is portable and uses cffi. Should I keep the sbcl-specific macro and append #+:sbcl or just remove it entirely?
[10:22:33] <phoe> cffi stuff should call or expand into sb-alien calls
[10:22:39] <kakuhen> right
[10:22:52] <kakuhen> cffi is a wrapper around the implementation-specific C ffis, if i understood correctly
[10:22:58] <phoe> yes
[10:23:00] <kakuhen> so I am wondering if there is any benefit to keeping sb-alien over cffi
[10:23:04] <kakuhen> for now I am assuming no
[10:23:23] <phoe> perhaps some edge cases that cffi does not support, if there are any
[10:23:33] <phoe> but if you were able to rewrite everything in CFFI perhaps you do not have any
[10:23:37] <kakuhen> right
[10:26:45] <kakuhen> anyway, thanks for the input!
[10:28:52] <MichaelRaskin> Hm, it does look that foreign-funcall might do a bit more work in runtime that a direct sb-alien:alien-funcall
[10:29:14] <MichaelRaskin> Not too likely to matter in practice, though
[10:33:39] <kakuhen> yeah, I think so, too.
[10:33:49] <kakuhen> worst case scenario: upstream complains about my patch and I negotiate by keeping the sb-alien macro for sbcl users and others get the cffi version 
[10:34:20] <MichaelRaskin> Does the function being called do anything meaningful?
[10:34:58] <kakuhen> the sbcl-specific macro was taken from a cffi macro and just rewritten to exclusively use sb-alien
[10:35:18] <kakuhen> dont know what the intent would be other than to break portability, so I am changing it to the original cffi macro
[10:35:26] <kakuhen> it's related to this  https://stackoverflow.com/a/10442062
[10:36:00] <kakuhen> the software seems to use this macro exactly once for handling sighup signals
[10:36:37] <MichaelRaskin> OK, nobody cares about performance of signal handling
[10:37:10] <moon-child> more like, the overhead of handling a signal is enough that a little extra dispatch is irrelevant
[10:37:50] <MichaelRaskin> Even more specifically, the use case involves a context switch between processes…
[10:38:59] <MichaelRaskin> (although initial setup of signal handling takes «only» a kernel context switch… bit it is also done once per application launch anyway)
[10:45:52] *** Joins: Cymew (~ante@c-b985225c.023-1144-7570702.bbcust.telenor.se)
[10:55:14] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[11:05:57] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[11:15:42] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:4812:3940:14e1:1806)
[11:26:31] *** Joins: pve (~pve@178-55-11-176.bb.dnainternet.fi)
[11:30:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[11:32:24] *** Joins: Th30n (~Th30n@93-136-78-142.adsl.net.t-com.hr)
[11:32:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[11:45:32] *** Quits: X-Scale (~ARM@42.125.108.93.rev.vodafone.pt) (Ping timeout: 252 seconds)
[11:51:30] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[12:04:08] *** Joins: NeoCron (~NeoCron@p548a2a2e.dip0.t-ipconnect.de)
[12:12:18] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[12:12:56] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[12:20:52] *** Joins: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net)
[12:21:31] *** Quits: NeoCron (~NeoCron@p548a2a2e.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:29:46] *** Quits: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net) (Read error: Connection reset by peer)
[12:30:00] *** Joins: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net)
[12:34:01] *** Quits: frgo_ (~frgo@p200300deef27d700e1bc504f7b4d8da1.dip0.t-ipconnect.de) (Quit: Leaving...)
[12:37:45] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:50:19] *** Quits: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net) (Remote host closed the connection)
[12:51:02] *** Quits: cjb (~cjb@user/cjb) ()
[12:51:46] *** Joins: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net)
[13:05:17] *** Joins: dider (~dider@109.126.62.18)
[13:05:21] *** Joins: lyiriyah (~lyiriyah@5.150.114.59)
[13:14:18] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 240 seconds)
[13:15:15] *** Quits: dider (~dider@109.126.62.18) (Quit: Client closed)
[13:20:27] *** Quits: lyiriyah (~lyiriyah@5.150.114.59) (Quit: Client closed)
[13:21:07] *** Joins: lyiriyah (~lyiriyah@5.150.114.59)
[13:29:51] *** Quits: lyiriyah (~lyiriyah@5.150.114.59) (Quit: Client closed)
[13:31:47] *** Joins: selwyn (~selwyn@user/selwyn)
[13:33:23] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[13:37:13] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[13:47:32] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:4141:26c6:8450:a5b4)
[14:01:35] *** Joins: random-nick (~random-ni@87.116.179.59)
[14:01:37] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Bridge terminating on SIGTERM)
[14:01:37] *** Quits: etimmons (~etimmons@2001:470:69fc:105::5d5) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: katco (~katco@2001:470:69fc:105::2b8) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: akanouras (~akanouras@user/akanouras) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Quit: Bridge terminating on SIGTERM)
[14:03:49] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[14:04:21] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Remote host closed the connection)
[14:04:45] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[14:05:16] *** Joins: katco (~katco@2001:470:69fc:105::2b8)
[14:05:16] *** Joins: akanouras (~akanouras@user/akanouras)
[14:05:16] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[14:05:16] *** Joins: etimmons (~etimmons@2001:470:69fc:105::5d5)
[14:05:16] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[14:05:49] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Client Quit)
[14:06:50] *** Joins: domovod (~domovod@176.196.122.197)
[14:13:13] *** Joins: selwyn_ (~selwyn@user/selwyn)
[14:14:42] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 264 seconds)
[14:17:00] *** Joins: selwyn (~selwyn@user/selwyn)
[14:17:30] *** Joins: dlowe (~dlowe@user/dlowe)
[14:18:41] <luis> kakuhen: CFFI-SYS is pretty much a wrapper around implementation-specific FFIs, the rest of CFFI builds on top of that. Most work takes place at compile time in any case (unless you define your own types in which case you may have to do some extra work to ensure most work does in fact take place at compile time)
[14:19:33] <luis> sb-alien's approach to FFI is interesting and different from CFFI. For example, pointers are typed.
[14:19:49] *** Quits: selwyn_ (~selwyn@user/selwyn) (Ping timeout: 244 seconds)
[14:19:59] <kakuhen> right, sb-alien could offer a bit more type safety, from what i've read online, but i didnt know exactly how
[14:20:43] <luis> kakuhen: yes, you get an error if you try to pass a pointer to int to a function that's expecting a pointer to double and things like that
[14:21:17] <luis> an interesting project would be to implement alien's API on top of CFFI-SYS
[14:24:43] *** Quits: fishfinger (~fishfinge@cpc68330-cdif16-2-0-cust557.5-1.cable.virginm.net) (Quit: Bye!)
[14:47:12] *** Quits: Th30n (~Th30n@93-136-78-142.adsl.net.t-com.hr) (Ping timeout: 244 seconds)
[15:08:22] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.1)
[15:09:14] *** Joins: lyiriyah36 (~lyiriyah@5.150.114.59)
[15:11:55] *** Joins: Th30n (~Th30n@93-136-78-142.adsl.net.t-com.hr)
[15:18:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[15:32:16] *** Joins: fishfinger (~fishfinge@178.62.22.133)
[15:42:01] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:47:04] *** Joins: Tomte (~th@p200300db9f18940088b0c354bc14c830.dip0.t-ipconnect.de)
[15:52:49] *** Joins: ivche (~user@77.28.161.174)
[16:06:23] *** Joins: pjb (~pjb@user/pjb)
[16:07:35] *** Joins: yitzi (~yitzi@97-64-230-163.client.mchsi.com)
[16:08:23] <srji> (plump:text (clss:select "p" (plump:parse (dex:get "https://httpbin.org/html")))) -> There is no applicable method for the generic function
[16:08:27] <srji> what do i miss here?
[16:09:12] <pjb> A complete read of the error message?
[16:09:21] <pjb> What generic function?
[16:11:48] <srji> http://ix.io/3q7k
[16:14:37] *** Joins: kayyyypreeesh (~kayprish@46.240.143.86)
[16:14:51] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 272 seconds)
[16:15:35] *** Quits: ivche (~user@77.28.161.174) (Ping timeout: 252 seconds)
[16:15:57] *** Quits: kayyyypreeesh (~kayprish@46.240.143.86) (Client Quit)
[16:17:04] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Quit: leaving)
[16:18:11] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[16:21:43] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Remote host closed the connection)
[16:22:19] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[16:22:40] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[16:26:43] <pjb> srji: so what do you expect plump:text to do?
[16:27:14] <pjb> srji: in slime, you can type M-. on plump:text and find a list of methods implemented on it.
[16:27:40] <pjb> srji: I would guess that it has methods for strings, but not for plump-dom:element
[16:27:46] <srji> i expect to print a string
[16:28:01] <pjb> No, that's not how html mark-up works.
[16:28:43] *** lyiriyah36 is now known as lyiriyah
[16:30:02] <pjb> so plump:text has a method on plump-dom:nesting-node.
[16:30:47] <srji> clss selects the <p> return a plump DOM object and plump:text extracts the text from it
[16:31:32] <dsk> srji: CLSS:SELECT returns an *array* of 0 or more matches.
[16:33:38] <srji> `#(#<PLUMP-DOM:ELEMENT p {1005593353}>)` how are you able to recognize this as array? because of #()?
[16:34:03] *** Quits: Tomte (~th@p200300db9f18940088b0c354bc14c830.dip0.t-ipconnect.de) (Quit: Leaving)
[16:34:27] <dsk> Yes. See also (type-of (clss:select "p" (plump:parse (dex:get "https://httpbin.org/html"))))
[16:34:58] *** Joins: unyu (~pyon@user/pyon)
[16:35:21] <pjb> so, something like  (map 'list (function plump:text) (clss:select "p" (plump:parse (dex:get "https://httpbin.org/html"))))
[16:35:30] <pjb> srji: ^
[16:36:46] <dsk> srji: But you should read the docstrings of interface functions, they (ought to) tell you what to expect.
[16:39:26] *** Quits: lyiriyah (~lyiriyah@5.150.114.59) (Quit: Client closed)
[16:41:59] *** Joins: knusbaum (~kjn@2601:240:8480:9990:5d94:c967:2aaa:31c9)
[16:46:23] *** Quits: knusbaum (~kjn@2601:240:8480:9990:5d94:c967:2aaa:31c9) (Ping timeout: 252 seconds)
[16:46:44] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[16:47:30] *** Quits: yewscion_ (~yewscion@2601:547:a01:2900::c51c) (Ping timeout: 240 seconds)
[16:48:33] <srji> ok ty
[16:50:06] <srji> is it possible to open the source of (clss:select using emacs and M-. ?
[16:50:27] <srji> do ive to specify at some point the quicklisp folder to find the source?
[16:50:31] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 252 seconds)
[16:56:58] <pjb> srji: No, slime tracks everything automatically.
[16:57:04] <pjb> Just try M-.
[16:57:28] <pjb> srji: and google for common lisp clss manual
[16:57:38] <srji> i see
[16:57:49] <srji> it opens the buffer *slime-xref*
[16:58:10] <srji> but it does not jump to the source
[16:58:26] *** Joins: X-Scale` (~ARM@42.125.108.93.rev.vodafone.pt)
[16:58:34] <srji> ah moment
[16:58:49] <pjb> that's because it has a compiler-macro, (generic function are like this too), so it gives you the choice betewen the function and the compiler-macro.
[16:58:56] <srji> i can select the func in this buffer
[16:59:01] <pjb> for generic functions, it would be betewen the generic function and its methods.
[16:59:04] <pjb> yes.
[17:00:14] *** X-Scale` is now known as X-Scale
[17:10:29] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:10:59] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:17:27] *** Joins: lyiriyah93 (~lyiriyah@5.150.114.59)
[17:17:39] *** lyiriyah93 is now known as lyiriyah
[17:18:00] *** Joins: nirved (~nirved@gateway/tor-sasl/nirved)
[17:18:34] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Read error: Connection reset by peer)
[17:18:43] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[17:19:38] <pl> srji: this is because sometimes you have multiple implementations, in case of generic-functions
[17:20:01] *** Quits: nirved (~nirved@gateway/tor-sasl/nirved) (Client Quit)
[17:20:05] *** Joins: selwyn (~selwyn@user/selwyn)
[17:22:51] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[17:23:15] *** Joins: selwyn (~selwyn@user/selwyn)
[17:24:52] <srji> ok ty good to know
[17:29:07] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 244 seconds)
[17:30:13] *** Joins: Bike (~Glossina@71.69.170.70)
[17:30:13] *** ChanServ sets mode: +o Bike
[17:31:16] *** Joins: aeth (~Michael@user/aeth)
[17:40:18] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Quit: bye)
[17:40:55] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[17:44:06] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 264 seconds)
[17:48:55] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[17:50:58] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Client Quit)
[17:52:26] *** Quits: yitzi (~yitzi@97-64-230-163.client.mchsi.com) (Remote host closed the connection)
[17:55:22] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[18:10:52] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:11:05] *** Parts: lyiriyah (~lyiriyah@5.150.114.59) ()
[18:22:03] *** Joins: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it)
[18:25:23] *** Joins: knusbaum (~kjn@2601:240:8480:9990:4430:ddcb:651c:d7fe)
[18:25:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:26:55] *** Joins: davep (uid504677@id-504677.tinside.irccloud.com)
[18:33:55] *** Joins: antoszka (~antoni@rozalia.antoszka.pl)
[18:35:12] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 268 seconds)
[18:36:34] *** Joins: aeth (~Michael@user/aeth)
[18:39:20] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[18:39:56] *** Quits: Th30n (~Th30n@93-136-78-142.adsl.net.t-com.hr) (Quit: WeeChat 3.1)
[18:42:51] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 272 seconds)
[18:43:01] *** Joins: aeth (~Michael@user/aeth)
[18:53:47] *** Quits: ad-absurdum (~ad-absurd@2600:100a:b02d:4690:bf42:d528:1665:2fcd) (Quit: Leaving)
[19:10:14] *** Joins: cranium (~cranium@user/cranium)
[19:28:28] *** Joins: silasfox (~sbv@2001-4dd6-b649-0-3776-c633-9f4d-bfc9.ipv6dyn.netcologne.de)
[19:31:35] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[19:39:31] *** Quits: knusbaum (~kjn@2601:240:8480:9990:4430:ddcb:651c:d7fe) (Remote host closed the connection)
[19:41:17] *** Joins: srhm (~ascii@user/srhm)
[19:46:52] *** Joins: knusbaum (~kjn@2601:240:8480:9990:7c6f:1d6b:a0a5:8df1)
[19:51:05] *** Joins: domovod (~domovod@176.196.122.197)
[19:51:18] *** Quits: knusbaum (~kjn@2601:240:8480:9990:7c6f:1d6b:a0a5:8df1) (Ping timeout: 264 seconds)
[19:54:00] *** Joins: john-a-carroll (~john-a-ca@host-78-148-21-101.as13285.net)
[20:01:02] *** Joins: derelict (~derelict@user/derelict)
[20:07:00] *** Quits: john-a-carroll (~john-a-ca@host-78-148-21-101.as13285.net) (Quit: Ping timeout (120 seconds))
[20:07:08] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:09:32] *** Quits: silasfox (~sbv@2001-4dd6-b649-0-3776-c633-9f4d-bfc9.ipv6dyn.netcologne.de) (Ping timeout: 268 seconds)
[20:13:25] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 244 seconds)
[20:16:46] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[20:19:02] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:21:54] *** Quits: srhm (~ascii@user/srhm) (Ping timeout: 264 seconds)
[20:23:27] *** Joins: knusbaum (~kjn@2601:240:8480:9990:5d68:bc8c:7731:e216)
[20:26:16] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[20:34:09] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[20:34:55] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 252 seconds)
[20:36:13] *** Quits: _whitelogger (~whitelogg@uruz.whitequark.org) (Remote host closed the connection)
[20:37:15] *** Joins: _whitelogger (~whitelogg@uruz.whitequark.org)
[20:41:06] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 240 seconds)
[20:41:39] *** Joins: silasfox (~sbv@2001-4dd5-301f-0-1241-18dd-bcfc-9676.ipv6dyn.netcologne.de)
[20:49:21] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[21:08:18] *** Quits: Cymew (~ante@c-b985225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 240 seconds)
[21:17:59] *** Joins: selwyn (~selwyn@user/selwyn)
[21:18:12] *** Joins: selwyn_ (~selwyn@user/selwyn)
[21:18:59] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:18:59] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:22:45] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Quit: leaving)
[21:33:14] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:4141:26c6:8450:a5b4) (Remote host closed the connection)
[21:33:38] *** Joins: aeth_ (~Michael@user/aeth)
[21:34:13] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[21:34:54] *** aeth is now known as Guest9574
[21:34:54] *** Quits: Guest9574 (~Michael@user/aeth) (Killed (zirconium.libera.chat (Nickname regained by services)))
[21:34:54] *** aeth_ is now known as aeth
[21:35:46] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[21:47:24] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[21:47:36] *** Quits: domovod (~domovod@176.196.122.197) (Quit: WeeChat 3.2)
[21:52:28] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 252 seconds)
[22:05:48] *** Joins: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810)
[22:08:03] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 272 seconds)
[22:18:18] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 268 seconds)
[22:23:06] *** Quits: eta (~eta@woolwich-arsenal.i.eta.st) (Ping timeout: 264 seconds)
[22:25:38] *** Joins: selwyn (~selwyn@user/selwyn)
[22:27:55] *** Joins: eta (~eta@woolwich-arsenal.i.eta.st)
[22:30:54] *** Quits: micro (~micro@user/micro) (Ping timeout: 264 seconds)
[22:31:23] *** Joins: micro (~micro@user/micro)
[22:31:30] *** Quits: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810) (Ping timeout: 264 seconds)
[22:42:18] *** Joins: aeth_ (~Michael@user/aeth)
[22:42:40] *** aeth is now known as Guest8314
[22:42:40] *** aeth_ is now known as aeth
[22:44:48] *** Quits: Guest8314 (~Michael@user/aeth) (Ping timeout: 244 seconds)
[22:46:54] *** Joins: aeth_ (~Michael@user/aeth)
[22:49:16] *** Joins: dsk (~dsk@user/dsk)
[22:49:58] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 244 seconds)
[22:50:03] *** aeth_ is now known as aeth
[22:50:18] *** Quits: seok- (~Seok@49.2.163.56) (Ping timeout: 240 seconds)
[23:00:36] *** Quits: bhaible (~bruno@dslb-088-068-034-084.088.068.pools.vodafone-ip.de) (Remote host closed the connection)
[23:10:11] *** Joins: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com)
[23:10:56] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[23:20:42] *** Quits: mindCrime (~prhodes@cpe-98-27-55-10.nc.res.rr.com) (Ping timeout: 240 seconds)
[23:42:35] *** Joins: aeth_ (~Michael@user/aeth)
[23:43:34] *** aeth is now known as Guest4211
[23:43:34] *** Quits: Guest4211 (~Michael@user/aeth) (Killed (zirconium.libera.chat (Nickname regained by services)))
[23:43:34] *** aeth_ is now known as aeth
[23:44:00] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:44:36] *** Quits: aleamb (~aleamb@81.61.187.171.dyn.user.ono.com) (Quit: bye)
[23:47:35] <Josh_2> With postmodern whats the best way to store lists? right now I store a list converted to a string and then when I restore the object I have another slot which contains the actual list
[23:47:44] <Josh_2> I assume this isn't the most optimal way to do this?
[23:48:28] <Josh_2> Would be nice to just store a list straight into postgres, not sure how to do that
[23:55:23] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 252 seconds)
