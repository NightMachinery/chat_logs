[00:00:41] *** Quits: Minall (~Minall@188.26.198.55) (Quit: Connection closed)
[00:01:50] *** Quits: autodev_ (~autodev@097-105-230-074.biz.spectrum.com) (Remote host closed the connection)
[00:02:55] *** Joins: autodev (~autodev@097-105-230-074.biz.spectrum.com)
[00:04:56] *** Joins: audio (~audio@user/audio)
[00:13:30] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[00:15:45] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:18:17] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[00:18:55] *** Joins: rawley (~rawley@142.99.241.242)
[00:19:43] *** Joins: stenno (~stenno@user/stenno)
[00:21:28] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[00:22:44] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[00:26:56] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 246 seconds)
[00:27:41] *** Quits: Guts71 (~Guts71@41.107.110.51) (Quit: Client closed)
[00:29:53] *** Quits: CiaoSen (~Jura@p200300c957311e002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[00:30:02] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[00:30:49] *** Quits: jsmooth (~quassel@user/jsmooth) (Quit: jsmooth)
[00:30:58] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[00:32:53] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ac3f:bc36:fa50:982) (Ping timeout: 260 seconds)
[00:34:14] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ac3f:bc36:fa50:982)
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 246 seconds)
[00:36:10] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[00:37:41] *** Joins: hemmi (~hemmi@2601:643:8980:b5d0::5d92)
[00:39:01] *** Quits: autodev (~autodev@097-105-230-074.biz.spectrum.com) ()
[00:39:53] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:b9e8:a9f4:c78b:2abc) (Quit: Textual IRC Client: www.textualapp.com)
[00:40:13] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@178-164-189-142.pool.digikabel.hu) (Quit: leaving)
[00:40:45] <ljharb> hemmi: you need to auth with nickserv; see the last link in the topic
[00:42:32] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[00:43:17] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:d52e:866a:6f3a:60a1) (Ping timeout: 256 seconds)
[00:45:05] *** Quits: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:47:02] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ac3f:bc36:fa50:982) (Quit: Textual IRC Client: www.textualapp.com)
[00:47:11] *** Joins: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com)
[00:48:12] <ljharb> hemmi: still not authed
[00:48:47] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[00:51:22] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[00:55:30] *** Quits: hemmi (~hemmi@2601:643:8980:b5d0::5d92) (Quit: Client closed)
[00:55:53] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[00:59:15] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[01:00:16] *** Joins: stenno (~stenno@user/stenno)
[01:00:27] *** Quits: stenno (~stenno@user/stenno) (Client Quit)
[01:04:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[01:04:22] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[01:05:16] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:1e6b:cb5c:5f39:6b39) (Remote host closed the connection)
[01:07:37] *** Joins: pavonia (~user@user/siracusa)
[01:07:43] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[01:08:09] *** Joins: Guest4832 (~blahboyba@c-67-161-96-233.hsd1.wa.comcast.net)
[01:09:13] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:09:32] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:09:59] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:15:16] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[01:15:45] *** Joins: johtso (~johtso@user/johtso)
[01:16:13] <johtso> Does anyone know any neat libraries for detecting swipe gestures?
[01:16:42] <johtso> something simple that just gives you a swipe event and tells you what element was swiped on
[01:17:33] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[01:17:53] *** Joins: thiras (~thiras@user/thiras)
[01:18:48] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:4095:39ea:df12:2615)
[01:22:02] *** Joins: dionysus69 (~Thunderbi@78.40.106.28)
[01:22:54] *** Joins: hemmi (~hemmi@2601:643:8980:b5d0::5d92)
[01:23:04] *** Joins: Pectic (~biskit@bzq-109-64-119-195.red.bezeqint.net)
[01:24:14] *** Quits: hemmi (~hemmi@2601:643:8980:b5d0::5d92) (Client Quit)
[01:24:53] *** Quits: Pectic (~biskit@bzq-109-64-119-195.red.bezeqint.net) (Client Quit)
[01:25:23] *** Quits: eXistenZ (~biskit@bzq-109-64-230-51.red.bezeqint.net) (Ping timeout: 246 seconds)
[01:25:32] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Ping timeout: 272 seconds)
[01:26:24] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:26:44] *** Quits: dionysus69 (~Thunderbi@78.40.106.28) (Ping timeout: 268 seconds)
[01:35:59] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 268 seconds)
[01:43:16] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:45:04] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[01:46:53] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:76a:eb16:1af3:aa79)
[01:47:48] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[01:53:41] *** Joins: sphertext (~sphertext@user/sphertext)
[01:53:53] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[01:54:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:57:17] *** Joins: jazzy (~jaziz@user/jaziz)
[02:05:21] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:06:13] *** Quits: lilmonkey` (~lilmonkey@user/lilmonkey) (Remote host closed the connection)
[02:06:38] *** Joins: lilmonkey` (~lilmonkey@user/lilmonkey)
[02:08:52] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[02:10:23] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Client Quit)
[02:10:42] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[02:10:42] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[02:11:20] <ljharb> dea__: you need to auth with nickserv for anyone to see what you say; see the last link in the topic
[02:11:26] <ljharb> dea__: happy to answer you when you do
[02:14:58] *** Quits: dea__ (~dea@178.211.43.68) (Quit: Leaving)
[02:15:02] *** Joins: dea_ (~dea_@178.211.43.68)
[02:15:20] <dea_> is # the new convention instead if underscore for private fields of a class?
[02:15:41] <dea_> I saw this https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields
[02:15:57] <dea_> now I wonder if I should use _ or # for my next project
[02:16:41] *** Quits: audio (~audio@user/audio) (Ping timeout: 268 seconds)
[02:17:29] <blueagain> dea_: it's rather that _ has no special meaning, while # has
[02:17:55] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 268 seconds)
[02:18:36] <dea_> blueagain: by saying special meaning you want to say that # is better?
[02:19:00] *** Joins: hemmi (~hemmi@2601:643:8980:b5d0::5d92)
[02:19:18] <blueagain> dea_: nope, I mean that # encapsulates the class member and makes it private
[02:19:39] <tokie> for those that were following my xtermjs/readline woes in here a month or two ago, i opensourced an xterm-js addon that provides readline: https://www.npmjs.com/package/xterm-readline
[02:19:45] <blueagain> dea_: it's a part of the language, not only a convention
[02:20:39] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) ()
[02:22:26] *** Quits: hemmi (~hemmi@2601:643:8980:b5d0::5d92) (Client Quit)
[02:23:17] <blueagain> dea_: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_With_Private_Class_Features
[02:23:57] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[02:24:25] <dea_> yes I have always used _ and # came weird to me
[02:25:13] <blueagain> dea_: just think of it like the keyword `private` in other languages, expect that it's part of the variable name, which is awesome, since you don't "pollute" the name
[02:25:15] <gde33> A new terrible idea: Wrap functions not mission critical in their own <script> tags. That way, if any of it doesn't work for whatever reason it has no effect on the rest of the scripts. :)
[02:26:05] <blueagain> s/expect/except
[02:27:26] <blueagain> tokie: that's cool. Yeah, I remember you asking around about it...
[02:28:34] <tokie> i ended up porting a rust readline library to typescript
[02:29:31] *** Joins: hemmi (~hemmi@2601:643:8980:b5d0::5d92)
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:29] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:43] *** Quits: hemmi (~hemmi@2601:643:8980:b5d0::5d92) (Client Quit)
[02:32:36] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:33:17] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:33:36] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:36:16] *** Quits: DrJ (~asdf@user/drj) (Read error: Connection reset by peer)
[02:36:22] <austincheney> gde33, don't do that.  If you need quick isolation from global scope then just wrap the code in an IIFE:  (function () { /* your code here */  }());
[02:36:40] *** Joins: DrJ (~asdf@user/drj)
[02:37:03] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[02:37:53] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 248 seconds)
[02:38:15] *** Joins: duuude (~user@user/duuude)
[02:38:34] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[02:38:48] <gde33> austincheney: that wouldn't isolate it
[02:40:24] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:40:37] <gde33> austincheney: script tags can contain almost random character combinations without issues. The function isolated there would work, not exist or have other bugs in it that don't prevent execution.
[02:41:13] *** Quits: adamtajti (~adamtajti@catv-176-63-164-65.catv.fixed.vodafone.hu) (Ping timeout: 260 seconds)
[02:42:20] <austincheney> i see, you want complete syntax isolation
[02:43:58] *** Joins: adamtajti (~adamtajti@catv-176-63-164-65.catv.fixed.vodafone.hu)
[02:44:47] <gde33> I like to keep scripts simple so that there are as few things that can go wrong as possible. If there is a way to have the cake and eat it too it seems attractive.
[02:44:54] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:47:39] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[02:48:08] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[02:48:10] *** Quits: Alex123 (~Adium@lib-07-subnet-138.rdns.cenic.net) (Quit: Leaving.)
[02:51:51] <doug16k> I would rather it failed fast and I knew that there was a syntax error
[02:51:56] <MootPoot> alright lads
[02:52:01] <MootPoot> I have a question
[02:52:27] <MootPoot> code test wants me to write a twitter clone with react.js for a job
[02:52:49] <MootPoot> I don't really know how to react very well
[02:52:50] <MootPoot> what do
[02:52:54] <doug16k> it's a scam
[02:53:07] <systemfault> MootPoot: Learn React?
[02:53:28] <MootPoot> I have been working on it but I'm not really that good
[02:53:41] <systemfault> Do your best, take a chance?
[02:53:43] <MootPoot> wonder if I can stretch out the length of time
[02:53:52] <MootPoot> and just do nothing but react all day for a week
[02:54:18] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[02:54:24] <doug16k> if someone wanted me to create something for a job, before I got the job, I'd tell them to go to hell
[02:54:32] <MootPoot> aaaaaaaach
[02:54:46] <MootPoot> they say most people do it within 4-8 hours
[02:54:48] <systemfault> Usually, when you apply for a position, the description of said position should contain a list of relevant techs.
[02:55:24] <doug16k> a little code puzzle, absolutely
[02:55:24] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:55:44] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:57:14] <doug16k> if it were me hiring, I would reject anyone that agreed to complete it, and put the people that said they don't do science projects for job interviews go in the candidate pile
[02:57:37] <MootPoot> I think I passed the personal / vocal code interview with flying colors
[02:57:51] <MootPoot> out of all the 30-35 questions I think I only didn't know one
[02:58:42] <systemfault> doug16k: Do you actually work? (Curious)
[02:58:50] <doug16k> yes
[02:58:51] <systemfault> If so, is it your first job?
[02:59:03] <doug16k> is what
[02:59:16] <systemfault> The one you currently have, is that your first programming job?
[02:59:19] <doug16k> I had a vic 20
[02:59:39] <systemfault> doug16k: So you're a senior, like me... tests are stupid for us.
[02:59:52] * MootPoot is panicking 
[02:59:55] <systemfault> doug16k: If you have a junior to hire, what do you do?
[03:00:07] <systemfault> There are a billion of them
[03:00:08] <austincheney> doug16k, since most extended homework puzzles are something about building a service/API I went ahead and solved that problem for all future interviews:  https://github.com/prettydiff/homework
[03:00:30] <MootPoot> I told them a week and a half later- that's enough time to do enough tutorials to hopefully solve their shit
[03:01:23] <systemfault> doug16k: Personally, for those positions.. I don't see a 4 hours homework as being a very bad idea, it removes a lot of people who simply don't enough enough even for a junior position.
[03:01:34] <systemfault> *don't know enough
[03:01:34] <doug16k> I haven't been solely responsible for choosing new hires yet, but I have voted
[03:01:55] <systemfault> The goal is to reduce the pool of potential candidates...
[03:02:02] <systemfault> There are too many.
[03:02:11] *** Joins: onosendi (~onosendi@user/onosendi)
[03:02:27] <MootPoot> If there are too many what is all this "programmer/IT labor shortage" on about?
[03:02:44] <MootPoot> or is it just a shortage of seniors
[03:02:55] <systemfault> MootPoot: The industry wants senior developers paid at a junior's rate, that's what they want.
[03:03:02] *** Joins: sqram (~escargoux@2600:1700:c200:31c0:954:a1eb:d0ea:ab19)
[03:03:20] <MootPoot> sounds about right
[03:03:26] *** Guest4832 is now known as blahboybaz
[03:03:34] <systemfault> Your first job is the only one that will be very difficult
[03:03:42] <systemfault> *to get
[03:03:46] <MootPoot> god I'm tired- my throat....talking for that long really is unusual for me
[03:04:27] <blahboybaz> What really is the right way to design a landing page for different screen sizes? Pick a representative screen size for each device type then then let your design scale to other sizes the user may have when viewing your page?
[03:04:29] <doug16k> you could do too well in a js interview, you sound like you are going to want good money
[03:04:59] <systemfault> blahboybaz: CSS media queries.
[03:05:24] *** Quits: escargoux (~escargoux@108-202-238-89.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 240 seconds)
[03:06:08] *** Joins: w_lehinsun (~lehinsun@188.113.178.220)
[03:06:36] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[03:06:44] <doug16k> blahboybaz, the general idea is to use classes that take stuff and put it across rows, and it is fewer and fewer items per row as the screen gets smaller. the media query css changes to a different rule for that class below a certain window width
[03:07:14] <doug16k> where the smallest width puts almost everything as a block using its own row
[03:07:39] *** Joins: audio (~audio@user/audio)
[03:07:53] <MootPoot> doug16k: so if a Jr impressed you in a 1;1 Technical interview but with no whiteboard coding, you'd just give the jr the job?
[03:09:29] <gde33> job interviews are still hilarious pseudoscience
[03:09:53] <gde33> a good hr should have a crystal ball on her desk
[03:10:07] <blahboybaz> systemfault: doug16k: Yeah but I'm just coming up with the design part right now (like in figma)
[03:11:46] <blahboybaz> I watch vids and read articles about it but at the end I always have the same question --> "do I understand that right?" So I try to rephrase what I think I learned into my own words (succinct) and bouncie it off someone that may have a bit of experience to see if I'm graping the concept correctly
[03:12:22] <systemfault> Hiring juniors is not easy...
[03:12:44] <merced> the only quality i want in a junior
[03:12:53] <merced> is "google your error and spend a week until you fix it"
[03:12:53] <doug16k> MootPoot, well, if they managed not to be caught lying/exaggerating then they probably are a good candidate, sure
[03:12:59] <systemfault> Seniors, they usually don't even need a "test", a technical conversation is usually enough to see if they're bullshitting
[03:13:02] <blahboybaz> merced: sign me up!  :)
[03:13:10] <blahboybaz> kidding kidding
[03:13:11] <doug16k> sometimes I wonder why it is such a big deal to hire someone, when you can fire them if they are bad
[03:13:23] <merced> blahboybaz: you just have to want to do java ;)
[03:13:28] <gde33> good sense of humor
[03:13:35] <merced> doug16k: firing isn't easy after the first 90 days
[03:13:37] <systemfault> doug16k: A lot of wasted money and time.
[03:13:40] <merced> least not in murika
[03:13:47] <MootPoot> I got almost all of mine right, the only questions I didn't know I straight up told the idk
[03:13:54] <blahboybaz> merced: that's a big ask
[03:14:05] <merced> blahboybaz: true that
[03:14:05] <MootPoot> Them*
[03:14:08] <doug16k> yeah? I find that usually it's the "you can quit when you feel like it, we can fire you when we fell like it" arrangement
[03:14:28] *** Quits: adamtajti (~adamtajti@catv-176-63-164-65.catv.fixed.vodafone.hu) (Ping timeout: 272 seconds)
[03:14:33] <merced> doug16k: when i hire, i hire for "please stay with the company for 2+ years"
[03:14:37] <blahboybaz> My bright idea is to get my feet wet in freelancing then use that experience to get hired (or not)
[03:14:40] <merced> if i wanted someone i could get rid of, i'd just req a contractor
[03:15:12] <merced> FTE is an investment, hours and hours spent onboarding them, etc
[03:15:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[03:15:50] <systemfault> doug16k: A junior needs a "mentor", that mentor is often a senior... so your "cheap" junior is costing the company their salary plus the the time their mentor takes with them
[03:16:05] <merced> systemfault: no
[03:16:29] <merced> i just make my juniors shadow me while i solve bugs
[03:16:37] <merced> then i ask them to "complete this test case"
[03:16:40] <merced> and it works great
[03:17:11] <systemfault> Good for you?
[03:17:41] <merced> i mean... we're talking about mentoring a junior so that they can one day become mid-level :|
[03:17:50] <doug16k> welcome to earth. where the old people pass the tricks down
[03:18:19] <doug16k> makes each generation more and more overpowered
[03:18:23] *** Joins: onosendi (~onosendi@user/onosendi)
[03:18:27] <gde33> ?
[03:18:44] <gde33> glue coding
[03:20:23] *** Joins: Guest30 (~Guest30@78.84.18.138)
[03:21:10] <MootPoot> Now my shit plan is
[03:21:18] <doug16k> I like helping newer developers
[03:21:23] <MootPoot> Do a lot of tutorials
[03:21:33] <MootPoot> To try and ace that test
[03:21:57] <MootPoot> They want a twitter clone with react and asp. Net
[03:22:12] <MootPoot> So I'll do it in react first since there are lots of guides for that
[03:22:16] <MootPoot> Then asp
[03:22:17] <gde33> just make something useful and enjoy yourself
[03:22:18] <merced> doug16k: same
[03:22:23] <MootPoot> And try to integrate
[03:22:24] <merced> sometimes i learn things
[03:22:33] <MootPoot> gde33: enjoyment dosent pay rent
[03:22:44] <MootPoot> I enjoy my own side projects and code but
[03:22:53] <merced> MootPoot: it does if you get a job doing the thing you love
[03:22:59] <MootPoot> I very much need work - any work
[03:23:10] <systemfault> merced: Maybe it's different for you but if I have to onboard someone, it takes time, I cannot work as fast... I take time to explain things, like you said.. I ask the junior to help with fixing bugs.
[03:23:11] <doug16k> if you do side projects you'll do fine
[03:23:24] <MootPoot> I will like your git commits for a salary :P
[03:23:47] <merced> systemfault: oh i mean sure, but it all pays the same for you, right? as long as you're salaried
[03:24:44] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 246 seconds)
[03:26:29] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[03:26:44] <systemfault> merced: Of course. Personally... it doesn't change much, as long as they factor in possible delays on my deliverables.
[03:26:55] *** Joins: realies (~realies@user/realies)
[03:26:57] <systemfault> (Because of "onboarding")
[03:27:18] <merced> :P it helps to have management that gives a shit about the people they manage, i guess
[03:27:25] <doug16k> you make it sound like everyone is awful
[03:27:39] <systemfault> I'm lucky with my current job, awesome PMs
[03:27:49] <systemfault> But I haven't always been...
[03:28:00] <merced> idk i had a "principal" engineer who couldn't even figure out git, after a week of handholding
[03:28:14] <systemfault> merced: What was their excuse?
[03:28:22] <merced> dunno, i terminated him
[03:28:24] <systemfault> merced: "I only know SVN?"
[03:28:26] <systemfault> Ah, hehe
[03:28:31] <merced> "oh im used to mac"
[03:28:47] <merced> (we're a windoze shop)
[03:28:52] <systemfault> lol, seems as logical as saying.. "Oh, it's because I'm lactose intolerant"
[03:29:01] <merced> yeah. screw that guy
[03:29:12] <merced> turns out he was double dipping with another job. accepted two offers when we hired him
[03:29:36] *** Joins: voltage (voltage@user/voltage)
[03:30:28] <systemfault> I would have understood had he said... I'm not familiar with whatever is the name of the popular source version control on Windows.. but "git" is a standard..
[03:30:59] <systemfault> I once had to work with Perforce... I didn't know shit, I just read the doc and asked a few questions
[03:31:43] <merced> ooof i'm sorry, perforce is something i wouldn't wish on my worst enemy
[03:31:48] <MootPoot> Your convo makes me feel like I'm having lower chances by the second
[03:31:57] <MootPoot> Ugh
[03:32:07] <doug16k> microsoft's internal source control is just like perforce
[03:32:14] <merced> MootPoot: the fact that you're interested and _want_ to do this makes you more qualified than 75% of the resumes i've reviewed this year
[03:32:45] <systemfault> doug16k: I've never used it, I had "Visual Sourcesafe" in mind but by quickly googling it, it's definitely not that because it's a dead product.
[03:32:53] <systemfault> So I can't remember the name
[03:32:56] <merced> TFS?
[03:33:01] <merced> they migrated to git a while ago
[03:33:02] <MootPoot> Huh
[03:33:07] <doug16k> sourcesafe?
[03:33:09] <MootPoot> Maybe I have a shot
[03:33:10] <merced> lol sourcesafe
[03:33:17] <doug16k> lol
[03:33:18] <merced> we just got off of that 3 years ago
[03:33:20] <systemfault> merced: I'm clueless about the Windows dev world, haha
[03:33:21] <merced> >_>
[03:33:35] <merced> systemfault: oh how i wish i could switch places with you
[03:33:46] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 268 seconds)
[03:33:48] *** Joins: pizdets (~pizdets@183.182.111.118)
[03:34:09] *** Quits: pizdets_ (~pizdets@183.182.115.90) (Ping timeout: 265 seconds)
[03:34:13] <systemfault> MootPoot: DO IT
[03:34:44] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[03:34:45] <systemfault> MootPoot: But maybe you bit off more than you could chew... are you familiar with the .net stack at least?
[03:34:49] *** Quits: Guest30 (~Guest30@78.84.18.138) (Quit: Connection closed)
[03:34:57] <systemfault> Looks like some fullstack dev position from what you're saying
[03:35:33] <MootPoot> systemfault: I'm mainly a net guy
[03:35:40] <MootPoot> Did it for most of uni
[03:35:46] <MootPoot> React and JS is my weak side
[03:35:51] <MootPoot> Front end stuff
[03:35:54] <MootPoot> With js
[03:35:55] <doug16k> I used cvs a bit. I hated it so much
[03:36:09] <blahboybaz> I'm finding all kinds of other material; but, for me, the issue is in learning what the basis for deciding what screen sizes to design for. Based upon device type? Based upon most common screen size? Some combination thereof? Something else entirely?
[03:36:13] <systemfault> doug16k: Been lucky enough to have never used it, I started when SVN was the thing
[03:36:53] <doug16k> with cvs, you pretty much had to take a backup of the repo files and save it somewhere because there is a high probability of permanently screwing it all up with many commands
[03:37:25] *** Joins: onosendi (~onosendi@user/onosendi)
[03:37:45] <systemfault> blahboybaz: Common screen sizes should be your "breakpoints"
[03:37:52] <doug16k> people with git are spoiled. you need to have expertise to actually lose stuff with git
[03:38:28] <doug16k> it squirrels your stuff away many times people think they blew it
[03:38:41] *** Parts: wallbroken (wallbroken@user/wallbroken) ()
[03:38:43] *** Quits: johtso (~johtso@user/johtso) (Quit: Client closed)
[03:38:45] <systemfault> MootPoot: I'm that weirdo who learn C++ as a hobby... then got a job doing web frontend in JS... then backend in Java.. then PHP... Then NodeJS + Frontend..
[03:38:54] <systemfault> *learned
[03:39:21] <systemfault> MootPoot: Don't they have a backend .net position available though?
[03:39:24] *** Quits: kiwi49 (~kiwi49@user/kiwi49) (Quit: Leaving)
[03:39:47] <systemfault> Would just be unfortunate for them to drop a good backend...
[03:39:56] <systemfault> "Because they're not great at React"
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e159:4052:d0bf:be68) (Remote host closed the connection)
[03:40:30] <doug16k> people still use asp?
[03:40:39] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56)
[03:41:04] <MootPoot> systemfault: not that I know of - I'm trying to cover for my weaknesses as best I can here
[03:41:31] <MootPoot> I started on vb when I was a teen to make managing my computer easier
[03:41:39] <MootPoot> With little helper programs
[03:41:55] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 260 seconds)
[03:45:14] <doug16k> I had a position once where I was a human source control product, where the other people sent me a zip of the source tree and I used winmerge to merge it and sent them all back a merged zip
[03:45:43] *** Quits: sphertext (~sphertext@user/sphertext) (Quit: Textual IRC Client: www.textualapp.com)
[03:45:45] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56) (Ping timeout: 256 seconds)
[03:46:07] *** Joins: sphertext (~sphertext@user/sphertext)
[03:46:35] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[03:47:14] <doug16k> vb6
[03:47:50] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 246 seconds)
[03:48:46] <systemfault> Nice, the backups were probably nice... A big directory with zip files like: "Foo (Copy).zip" "Foo (Copy) 2.zip" "Foo (Copy) 2 (Copy).zip" "Foo (Copy) 2 (Copy) FINAL.zip"
[03:50:06] <doug16k> I think I liked how much they trusted me not to break everything the most
[03:51:23] <doug16k> yeah, source control makes people never take a backup
[03:51:50] <doug16k> vs old pile-of-zips method
[03:52:15] <systemfault> I've know people who simply worked in prod... :(
[03:52:17] <systemfault> *known
[03:52:29] <systemfault> Good old PHP websites..
[03:59:18] <doug16k> their ide is filezilla
[04:00:58] <doug16k> it's like watching finger nails bending the wrong way when I see people edit/debug cycle with an ftp upload
[04:01:36] <merced> lol, filezilla+notepad editing in-place
[04:01:39] <merced> we've all been there
[04:04:23] <konrados> Hello! I have an access to the this.$scope variable, but I'm looking for $scope->user. I know it's somewhere right there :) Because when I console.log this.$scope I can see (in chrome) a "ChildScope" and it's there. But what does it mean and how can I access my beloved 'user' var?
[04:06:24] *** Quits: jargon (~jargon@184.101.173.186) (Ping timeout: 272 seconds)
[04:07:06] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[04:11:05] <doug16k> konrados, js has lexical scope, where it can capture access to variables in enclosing scopes for use in callbacks
[04:11:34] <konrados> ahhh, ok, got it. So it's more in the parent?
[04:11:52] *** Joins: llorllale (~llorllale@198.98.119.85)
[04:12:17] <doug16k> maybe, if you had specific code and said you wanted to get at something, I could be less general
[04:12:25] *** Quits: voltage (voltage@user/voltage) (Quit: Leaving)
[04:12:52] <doug16k> you can't even rely on checking in the console
[04:13:17] <doug16k> if there is a variable that it could capture access to, if you don't touch it, it won't capture access, and isn't there in console in debug session where you check
[04:13:21] *** Joins: chenqisu12 (~chenqisu1@183.217.202.44)
[04:13:48] <doug16k> if you touched it in the code, the js engine would treat that differently and it would exist to you
[04:14:04] <doug16k> when you checked there in the debugger
[04:14:04] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Quit: nulixes)
[04:14:12] <konrados> the code is a big too big :) But thanks, I'll find another way around, that can't be hard :)
[04:14:16] <konrados> thanks doug16k !
[04:14:43] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[04:19:22] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[04:20:44] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 246 seconds)
[04:26:06] <tokie> should package-lock.json be committed to a project if the project is meant to be a dependency? (e.g. a library published to npm)
[04:26:15] <tokie> there seems to be much debate about this
[04:27:25] *** Quits: audio (~audio@user/audio) (Ping timeout: 250 seconds)
[04:29:15] *** seifeslimene_ is now known as seifeslimene
[04:31:20] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[04:36:03] *** Quits: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net) (Ping timeout: 268 seconds)
[04:36:48] *** Joins: shayr_1 (shayr@ip62.ip-91-134-189.eu)
[04:37:03] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[04:37:23] *** feoh is now known as Guest2673
[04:37:24] *** Quits: Guest2673 (~feoh@idlerpg/player/feoh) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[04:37:28] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[04:37:28] *** Joins: mrdata_ (~mrdata@user/mrdata)
[04:37:32] *** Joins: relms4 (~relms@user/relms)
[04:37:33] *** Quits: syg (~syg@flamebot.net) (Ping timeout: 256 seconds)
[04:37:35] *** Joins: cryocaustik4 (~cryocaust@user/cryocaustik)
[04:37:38] *** Joins: brw7 (~bas@46.232.210.60)
[04:37:41] *** Joins: feoh (~feoh@idlerpg/player/feoh)
[04:37:43] *** Joins: SoF9 (~skius@user/skius)
[04:37:48] *** Joins: mven1 (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:37:50] *** Joins: kuba-orlik3 (~kuba-orli@nyuno.kuba-orlik.name)
[04:37:53] *** Joins: NoiseEee8 (~NoiseEee@178.128.153.219)
[04:38:03] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Read error: Connection reset by peer)
[04:38:04] *** NoiseEee8 is now known as NoiseEee
[04:38:07] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (Ping timeout: 256 seconds)
[04:38:07] *** Quits: Pabc1_ (~Pabc1@45.77.53.54) (Ping timeout: 256 seconds)
[04:38:09] *** Quits: relms (~relms@user/relms) (Read error: Connection reset by peer)
[04:38:10] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Read error: Connection reset by peer)
[04:38:10] *** relms4 is now known as relms
[04:38:14] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Read error: Connection reset by peer)
[04:38:14] *** cryocaustik4 is now known as cryocaustik
[04:38:15] *** Quits: average (~average@user/average) (Ping timeout: 250 seconds)
[04:38:22] *** Quits: LIERO (~no@user/liero) (Remote host closed the connection)
[04:38:38] *** Joins: LIERO (~no@vmi473477.contaboserver.net)
[04:38:41] *** Quits: ShotokanZH (~ShotokanZ@aitch.me) (Ping timeout: 256 seconds)
[04:38:42] *** Quits: brw (~bas@46.232.210.60) (Read error: Connection reset by peer)
[04:38:42] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Read error: Connection reset by peer)
[04:38:42] *** brw7 is now known as brw
[04:38:43] *** mven1 is now known as mven
[04:38:43] *** Quits: Sherpard2 (~VPard@user/sherpard2) (Remote host closed the connection)
[04:38:52] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[04:38:54] *** Quits: SoF (~skius@user/skius) (Read error: Connection reset by peer)
[04:38:54] *** SoF9 is now known as SoF
[04:39:05] *** Joins: Pabc1 (~Pabc1@2001:19f0:6c01:74e:5400:3ff:fe60:e5d6)
[04:39:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[04:39:08] *** Joins: syg (~syg@flamebot.net)
[04:39:09] *** Quits: kuba-orlik (~kuba-orli@nyuno.kuba-orlik.name) (Write error: Connection reset by peer)
[04:39:09] *** kuba-orlik3 is now known as kuba-orlik
[04:39:15] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: robopat (~user@triton.blinkenshell.org) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: wez (~wez@about/web/wez) (Ping timeout: 256 seconds)
[04:39:19] *** Quits: Cyp_ (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[04:39:24] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:5562:8f50:eb7a:4aef)
[04:39:38] *** Joins: robopat (~user@triton.blinkenshell.org)
[04:39:43] *** Joins: Cyp_ (~cyp@213.237.84.236)
[04:39:44] *** Joins: s3a (~s3a@ip216-239-66-193.vif.net)
[04:39:52] *** Joins: Sherpard2 (~VPard@user/sherpard2)
[04:40:03] *** Joins: wolfshappen (~waff@irc.furworks.de)
[04:40:18] *** mrdata_ is now known as mrdata
[04:40:20] *** Joins: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net)
[04:40:23] *** Quits: shayr_ (shayr@ip62.ip-91-134-189.eu) (Ping timeout: 256 seconds)
[04:40:34] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:40:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:40:34] *** Joins: wroathe (~wroathe@user/wroathe)
[04:40:38] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[04:41:02] <AJTJ> I'm trying to make it so that a user can copy the current url at the click of a button
[04:41:02] *** Joins: wez (~wez@about/web/wez)
[04:41:09] <AJTJ> does this seem valid? https://blog.dadops.co/2021/03/17/copy-and-paste-in-a-react-app/
[04:41:15] *** Joins: g2anj (~v@58.228.230.4)
[04:41:22] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[04:41:44] <AJTJ> my TS is yelling at me
[04:41:48] <AJTJ> getting all sorts of errors
[04:42:03] <AJTJ> like Property 'value' does not exist on type 'HTMLElement'
[04:42:24] <AJTJ> and document.execCommand is deprecated
[04:42:39] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net) (Ping timeout: 256 seconds)
[04:42:47] <systemfault> AJTJ: .value is not on all HTML elements...
[04:42:57] *** Joins: Spr0cket- (sprocket@user/Spr0cket)
[04:42:58] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[04:42:58] *** Joins: Brewster_ (~Brewster@us.8bitshort.com)
[04:42:59] *** Joins: dskull (~dskull@user/dskull)
[04:43:00] <systemfault> So, type assert to whatever tag you're using
[04:43:13] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Ping timeout: 256 seconds)
[04:43:16] <AJTJ> gotcha
[04:43:22] <AJTJ> yea, I changed it from an input to somethign else
[04:43:47] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: ryoshu (~kamil@apn-46-169-16-129.dynamic.gprs.plus.pl) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Brewster (~Brewster@us.8bitshort.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: xisop (~xisop@bnull.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: tokie (~tokie@thales.strtok.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: rick123 (~rick123@157.245.192.96) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: ghostbuster (~admin@user/ghostbuster) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: percY- (~percY@138.68.239.19) (Ping timeout: 256 seconds)
[04:43:49] *** Spr0cket- is now known as Spr0cket
[04:43:58] *** Joins: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net)
[04:44:00] <KevinX> https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText
[04:44:01] <AJTJ> works now!
[04:44:02] *** Joins: ninjabanjo (~ninjabanj@107.150.45.163)
[04:44:11] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[04:44:21] *** Quits: cnsunyour (~sunyour@129.226.182.99) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: APic (apic@apic.name) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: box2 (~box2@rdlabs.org) (Ping timeout: 256 seconds)
[04:44:27] <AJTJ> KevinX: I saw that, but I still need the url
[04:44:29] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[04:44:30] *** Joins: percY- (~percY@138.68.239.19)
[04:44:32] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[04:45:12] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:45:21] *** Joins: ShotokanZH (~ShotokanZ@aitch.me)
[04:45:24] *** Joins: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[04:45:25] *** Joins: rick123 (~rick123@157.245.192.96)
[04:45:29] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[04:45:37] *** Joins: xisop (~xisop@bnull.net)
[04:45:38] *** Joins: ryoshu (~kamil@apn-46-169-16-129.dynamic.gprs.plus.pl)
[04:45:46] *** Joins: ghostbuster (~admin@user/ghostbuster)
[04:45:48] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 250 seconds)
[04:45:50] *** Joins: box2 (~box2@rdlabs.org)
[04:45:57] <KevinX> maybe `await navigator.clipboard.writeText(window.location.href)`
[04:46:00] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[04:50:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:51:07] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[04:52:42] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 268 seconds)
[04:54:02] *** Joins: jargon (~jargon@43.sub-174-205-166.myvzw.com)
[04:56:26] *** Joins: APic (~apic@apic.name)
[04:56:40] *** Quits: jargon (~jargon@43.sub-174-205-166.myvzw.com) (Remote host closed the connection)
[04:57:49] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[04:58:17] *** Quits: LtHummus (~lthummus@user/LtHummus) (Quit: ZNC 1.8.2 - https://znc.in)
[04:59:05] *** Joins: tokie (~tokie@thales.strtok.net)
[04:59:27] *** Quits: s3a (~s3a@ip216-239-66-193.vif.net) (Quit: Leaving)
[05:02:29] *** Joins: LtHummus (~lthummus@user/LtHummus)
[05:03:08] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:04:33] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 248 seconds)
[05:05:27] *** Quits: konrados (~konrados@user-5-173-20-21.play-internet.pl) (Ping timeout: 260 seconds)
[05:06:06] *** Parts: seifeslimene (~seifeslim@197.2.10.72) ()
[05:06:37] *** Joins: konrados (~konrados@user-5-173-148-30.play-internet.pl)
[05:07:12] <bn_mobile> hi, in pure JS, is there a way to just log an error when using a Promise(resolve, reject) ?  Currently when my code runs it halts the entire pipeline when I get a non-normal return code:   https://www.irccloud.com/pastebin/4Sw9DdA4/doGeocode.js
[05:12:39] <stagas> bn_mobile: don't reject?
[05:13:20] <bn_mobile> stagas: so comment out L8?  or do I need to update the function prototype in L2 too?
[05:13:25] <stagas> bn_mobile: or .catch() / try catch from the caller site
[05:13:55] <stagas> depends how you want to handle the error or not handle it at all
[05:15:11] <stagas> bn_mobile: you still need to resolve() or else it will hang, just use resolve({ error: status }) if you don't want the promise to fail
[05:15:53] <bn_mobile> stagas: on L8?
[05:15:56] <stagas> yes
[05:16:56] <stagas> tokie: the package-lock is not published in npm
[05:17:50] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[05:17:58] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:18:12] <stagas> tokie: you can keep it for yourself though that leads to inconsistencies in my experience, so i just get rid of it completely with .npmrc package-lock=false
[05:18:46] <bn_mobile> stagas:  ok, it's at least printing the L7 error message now but still halting the pipeline :/
[05:19:18] *** Quits: Swant (~swant@libera/staff/swant) (Quit: gone to IKEA)
[05:19:20] <stagas> tokie: e.g you publish something you think it's working but it turns out it if you install it clean it will get a different set of dependencies and then it breaks, but you don't know until you install it somewhere. so removing the package-lock keeps your version aligned with the version that's going to be installed, so less errors
[05:19:33] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[05:21:08] <stagas> bn_mobile: yes you need to resolve with the error and handle it at the caller site because it's obviously expecting the regular results, not an error status
[05:22:09] *** Quits: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net) (Ping timeout: 248 seconds)
[05:22:15] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[05:22:35] *** Joins: src (~src@user/src)
[05:23:56] <bn_mobile> stagas: define "caller site", geocoder.geocode(...) I don't control, I can only create object of (if that makes sense)
[05:24:08] <bn_mobile> s/object/objects/of
[05:27:14] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56)
[05:27:21] <stagas> bn_mobile: the part of the code that runs doGeocode()
[05:31:26] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[05:32:07] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:33:48] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[05:34:01] <Guest80> Hi I am trying to find secure alternatives to eval() and innerHTML for a div creation https://dpaste.org/0GbNNV6
[05:34:20] <Guest80> I also provided what I tried but I don't feel confident about it
[05:34:36] *** Quits: haniaF (~haniaF@79.191.93.146.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[05:34:38] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[05:34:48] <ljharb> Guest80: `var div = document.createElement('div'); parent.appendChild(div)`?
[05:35:38] *** Joins: haniaF (~haniaF@79.191.100.214.ipv4.supernova.orange.pl)
[05:35:57] *** Joins: vysn (~vysn@user/vysn)
[05:36:57] <Guest80> That does not seem to work. Plus I have read var should not be used and const and let should be instead
[05:37:02] <bn_mobile> stagas:  this is what that looks like, I'm assuming it would be somewhere around L13~16?  if so, I'm not sure how? https://www.irccloud.com/pastebin/jb5tvhog/geocodeAddresses().js
[05:38:56] <buu> Guest80: try using jsfiddle
[05:39:18] <Guest80> i'll try
[05:39:18] <buu> !jsfiddle
[05:39:19] <jellobot> buu, Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, stackblitz.com, codepen.io, jsbin.com  For node: runkit.com, gist.github.com. See also !mcve and !paste
[05:39:27] <buu> Guest80: that ^
[05:39:37] <Guest80> yea i know i will give it a shot
[05:39:40] <buu> ok
[05:40:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:41:29] <seifeslimene> !jsfiddle
[05:41:29] <jellobot> seifeslimene, Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, stackblitz.com, codepen.io, jsbin.com  For node: runkit.com, gist.github.com. See also !mcve and !paste
[05:42:31] <stagas> bn_mobile: just delete all that code and write it again more carefully
[05:42:32] <seifeslimene> n> setTimeout(() => { console.log("foo"); }, 2000);
[05:42:34] <jellobot> (okay) Timeout { _idleTimeout: 2000, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 55, _onTimeout: [Function (anonymous)], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(kHasPrimitive)]: false, [Symbol(asyncId)]: 9, [Symbol(triggerId)]: 0 }foo
[05:43:18] <seifeslimene> n> 1+4
[05:43:19] <jellobot> (okay) 5
[05:43:23] <bn_mobile> stagas:  "more carefully"?
[05:43:50] <stagas> bn_mobile: it has so many errors i don't know where to begin :) use async/await if you prefer writing code more synchronously
[05:44:44] *** Quits: haniaF (~haniaF@79.191.100.214.ipv4.supernova.orange.pl) (Ping timeout: 246 seconds)
[05:45:07] <bn_mobile> stagas: interesting, that's what I _tried_ to do initially (write it synchronously- as I hate async too) but it didn't work, lol
[05:45:22] *** Joins: haniaF (~haniaF@79.191.91.134.ipv4.supernova.orange.pl)
[05:45:34] <bn_mobile> & then all this stuff with Promises came into the picture- which I still don't fully understand
[05:46:05] <bn_mobile> the delay was required because geocoder wouldn't like it if requests came in too fast IIRC
[05:46:06] <stagas> bn_mobile: for (const address of addresses) { result = await doGeocode(...); .etc }
[05:46:19] <stagas> bn_mobile: await delay() etc
[05:47:16] <bn_mobile> BTW, what "errors" are you seeing?  the code works, it just could have better error handling during the pipeline
[05:48:31] <Guest80> https://jsfiddle.net/3jhdL1b8/
[05:48:52] <Guest80> Here is the first one my alternative to wrapper.innerHTML= opts.content;
[05:49:14] <Guest80> It works but my cookie bar is not showing
[05:49:32] <Guest80> https://github.com/bmihelac/django-cookie-consent/blob/master/cookie_consent/static/cookie_consent/cookiebar.js
[05:49:38] <Guest80> It just shows regular text
[05:50:36] <Guest80> https://github.com/bmihelac/django-cookie-consent/blob/master/tests/core/templates/test_page.html
[05:50:43] <Guest80> The second link is the HTML page
[05:51:07] <Guest80> I don't see the div in the source code
[05:53:52] <buu> Guest80: Ok so you wrote a jsfiddle that works with document.createElement
[05:54:14] <buu> Guest80: Then you linked to a somewhat complicated js script which is doing .. stuff
[05:54:23] *** Joins: jargon (~jargon@174-22-223-120.phnx.qwest.net)
[05:54:28] <Guest80> Yea I know it is not the best to show you
[05:54:30] <buu> Guest80: what, precisely, is the question here?
[05:55:02] *** Quits: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net) (Quit: Leaving...)
[05:55:02] <buu> If you want to dynamically add js from js, you can create a script element and set its src to a js url
[05:55:06] <buu> then append that to the body
[05:55:20] <buu> which is technically not eval() but in practice not much different
[05:55:21] <Guest80> https://github.com/bmihelac/django-cookie-consent/blob/master/cookie_consent/static/cookie_consent/cookiebar.js#L24-L26
[05:55:26] <Guest80> I just want to replace these 3 lines
[05:55:32] <Guest80> since innerHTML is bad
[05:55:57] <buu> Guest80: I mean, it's not so much bad as dangerous, much like a chain saw
[05:56:14] <Guest80> I don't want to take any chances
[05:56:20] <buu> Guest80: If you've got a string of HTML your only real option to get the browser to parse it for you is to user innerHTML
[05:56:26] <buu> *is to use
[05:57:08] <buu> I wouldn't be particularly bothered by it
[05:57:37] <buu> Just be sure you know why it's there
[05:57:44] *** Joins: wyclif (~wyclif@user/wyclif)
[05:58:07] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:58:23] <stagas> bn_mobile: working and correct are not the same thing, first you're reducing but doing side effects to write the results instead of using the return values, instead you return true and index the results with an indexer 'i' which is outside the async operations, if you decide to parallelize that would break it, and you're using promises wrong, since we have async/await now there is never a need to use '.then()', you await the
[05:58:23] <stagas> promise and handle it or await Promise.all() if you need parallelizing
[05:59:41] <Guest80> hmm opts.content is a string
[05:59:41] <stagas> bn_mobile: and you're using function() {} instead of arrow functions, 'var' instead of 'const' and 'let'
[05:59:46] *** Quits: dea_ (~dea_@178.211.43.68) (Ping timeout: 272 seconds)
[05:59:56] *** Joins: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com)
[06:00:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:00:25] <Guest80> a string of an entire div tag to be precise
[06:00:44] <stagas> bn_mobile: you need to install eslint and use vscode or any editor that uses a language server to help you with these issues statically
[06:01:36] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56) (Ping timeout: 245 seconds)
[06:05:52] <buu> Guest80: Yeah, so you don't have much choice
[06:06:41] <Guest80> that is really unfortunate and i can't believe it
[06:07:20] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[06:09:36] <KevinX> cant believe you have to use eslint?
[06:09:53] <Guest80> sorry not familiar with eslint
[06:10:09] <Guest80> no a limitation like this
[06:10:22] <Guest80> makes me thankful that i am not a js dev
[06:10:45] <KevinX> eslint will keep you in line with modern best practices
[06:11:08] <KevinX> i'd also use prettier too
[06:11:17] <stagas> KevinX: you're hijacking the wrong thread :P
[06:11:32] <stagas> KevinX: also, dprint is much better
[06:11:44] <KevinX> ok ill read up :)
[06:13:25] <KevinX> Guest80 you want to inject html there? is it from use input or something?
[06:14:19] <Guest80> Yes I don't want to use eval or innerHTML due to XSS
[06:14:26] <KevinX> well the function name is `evalXCookieConsent`
[06:14:39] <Guest80> That function is a bit different
[06:14:48] <Guest80> Set the type to x/cookie_consent
[06:14:49] <KevinX> oh that's above it
[06:15:10] <KevinX> just don't pass through html
[06:15:19] <Guest80> https://django-cookie-consent.readthedocs.io/en/latest/getting_started.html#checking-for-3rd-party-cookies-dynamically
[06:15:22] <KevinX> otherwise you'll have to parse it
[06:15:23] <Guest80> That is what that function does
[06:16:25] <KevinX> seems like overengineering something so basic
[06:16:43] <Guest80> This js stuff is not basic to me.
[06:16:58] <Guest80> I neglect the language
[06:17:47] <Guest80> One person on discord said to use this https://www.designcise.com/web/tutorial/how-to-append-an-html-string-to-an-existing-dom-element-using-javascript
[06:18:37] <stagas> should call the function XSSParty() :P
[06:18:45] <Guest80> Yea seriously
[06:19:26] <KevinX> This is for your own site?
[06:19:36] <Guest80> For the django community
[06:19:39] <Guest80> for GDPR
[06:19:47] <Guest80> and yes it is for my site it is a package I use
[06:19:56] <Guest80> This XSS has been there for 9 years
[06:20:08] <KevinX> you're maintaining the package? or you're just using it
[06:20:18] <Guest80> Using it but this is the last major problem to fix
[06:20:53] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[06:21:07] <Guest80> I will probably rewrite my own since it is not maintained but fixing this will help me make one for myself
[06:21:38] <KevinX> My point is, do you even need to use a package here?
[06:22:35] <KevinX> assuming thi sis for your own site, do you only need a banner to show up with a button on it?
[06:22:55] <Guest80> It is not just a banner it is more like stripe's cookie page and onetrust cookiepro
[06:23:12] <Guest80> way more powerful than a law breaking banner where it just disappearsa
[06:24:34] <KevinX> oh ok so you need it to set options for other stuff you use
[06:24:43] <Guest80> And it uses middleware to dynamically delete third party cookies
[06:24:51] <Guest80> yes and it is free to use
[06:34:22] *** Joins: pmercado (~pmercado@190.22.83.12)
[06:35:35] <KevinX> could you add the banner to the html directly and have it only render on the server if the user needs it?
[06:37:47] *** Joins: first1 (~last1@109.100.153.87)
[06:39:14] *** Joins: abraham9 (~abraham@64.227.110.185)
[06:39:23] *** Quits: last1 (~last1@109.100.153.87) (Ping timeout: 256 seconds)
[06:39:23] *** Quits: simpleauthority (~simpleaut@user/simpleauthority) (Ping timeout: 256 seconds)
[06:40:02] *** Joins: skylite_ (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[06:40:09] *** Joins: c17r_ (~c17r@c17r.com)
[06:40:11] *** Joins: dysfigured (~dfg@dfg.rocks)
[06:40:11] *** Joins: quesker_ (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[06:40:12] *** Joins: simpleauthority (~simpleaut@user/simpleauthority)
[06:40:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:40:19] *** Joins: queue (~nerd@rektnet.com)
[06:40:22] *** Joins: DCTWD- (~dc@uz.utmappro.com)
[06:40:31] *** Quits: quesker (~idnet@mail.89vx.net) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: dfg (~dfg@user/dfg) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: c17r (~c17r@c17r.com) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: queue- (~nerd@user/queue/x-7267619) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: OneMirror (~far@onegrandcircle.com) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: DCTWD (~dc@uz.utmappro.com) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: skylite (~skylite@2e6b2cd6.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: ario (~ario@159.65.220.102) (Ping timeout: 256 seconds)
[06:41:19] *** quesker_ is now known as quesker
[06:41:39] *** Quits: abraham (~abraham@64.227.110.185) (Ping timeout: 256 seconds)
[06:41:39] *** abraham9 is now known as abraham
[06:41:46] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[06:42:15] *** Joins: OneMirror (~far@onegrandcircle.com)
[06:42:55] *** Joins: ario (~ario@159.65.220.102)
[06:42:58] *** Joins: klys (~mdasoh@show.op8.us)
[06:43:37] *** Parts: dysfigured (~dfg@dfg.rocks) ()
[06:44:58] *** Joins: dfg (~dfg@user/dfg)
[06:46:09] <Guest80> I would love to figure out how to do that without JS
[06:49:12] <jargon> Guest80 marquee is a backdoor for js initialization.
[06:49:50] <jargon> I used it all the time when I used to chill with the LulzSec crew,
[06:50:11] <Guest80> Sorry but I don't quite understand
[06:50:29] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:50:46] <jargon> Also, with Java (Not JavaScript) you can retroactively reassemble the entire tool chain.
[06:51:43] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:53:32] <jargon> https://www.google.com/search?q=Lulz+Security
[06:54:15] <ljharb> yeah but then you have to use java
[06:54:16] <jargon> Worth noting, the Playstation Exploit used meta data off track "8" of Bluray discs.
[06:54:25] <seifeslimene> !give seifeslimene books
[06:54:31] <ljharb> !books @ seifeslimene
[06:54:31] <jellobot> seifeslimene, !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
[06:56:13] <jargon> Note, that the CIA screamed bloody murder for everyone to stop using Java (again not JavaScript)
[06:58:45] *** Joins: Rockwood (~Rocky@user/rocky)
[06:59:04] <Rockwood> o/
[06:59:05] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[07:01:39] <ljharb> jargon: always weird when the CIA is right
[07:08:38] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:12:54] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:02] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:102d:fff3:ec75:fbd7)
[07:14:39] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:16:17] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 248 seconds)
[07:19:02] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[07:21:09] <theskillwithin> If you say I hate the CIA three times in front of your amazon echo, BEATlejuice shows up
[07:34:15] *** Joins: dzdcnfzd (~dzdcnfzd@pool-108-54-250-165.nycmny.fios.verizon.net)
[07:35:32] <dzdcnfzd> If I write `x = {}; x.foo;` the console prints out `undefined`. So how is it that if I write, `x = {}; x.foo = undefined; x;`, the console prints out `{ foo: undefined }`?
[07:36:27] <dzdcnfzd> More generally, how should I think about the semantics of two objects that are identical except for properties which are equal to `undefined`
[07:37:14] <systemfault> x.foo alone is "reading" the variable foo on x, the other one assigns a value to foo
[07:37:40] <systemfault> There's no "key" foo in object x... so it returns "undefined"
[07:39:02] <systemfault> dzdcnfzd: People usually test the "value" associated with a key but you can test if a object has a key using the "in" operator or the "hasOwnProperty" method
[07:39:25] <dzdcnfzd> I see
[07:41:34] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[07:42:53] <systemfault> ha
[07:44:50] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:45:53] <Rockwood> theskillwithin, o/
[07:47:55] <theskillwithin> o/
[07:49:25] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[07:49:41] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[07:51:02] *** Joins: anomal (~anomal@87.227.196.109)
[07:58:14] *** Joins: duuude (~user@user/duuude)
[07:59:34] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56)
[08:00:02] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[08:00:19] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[08:00:23] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:00:44] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[08:02:06] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[08:02:46] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:5562:8f50:eb7a:4aef) (Quit: Leaving)
[08:03:00] *** Quits: chenqisu12 (~chenqisu1@183.217.202.44) (Quit: Leaving)
[08:06:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[08:08:18] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:5562:8f50:eb7a:4aef)
[08:09:47] <ljharb> dzdcnfzd: `x.foo` and `x` are entirely different things, why would you expect them to print the smae thing?
[08:09:59] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 246 seconds)
[08:10:27] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[08:10:29] <dzdcnfzd> I don't
[08:11:10] <dzdcnfzd> That's not what my question is about
[08:12:20] <dzdcnfzd> I was asking about the sort of interesting fact that you can have two objects x and y, where x.foo === y.foo === undefined, but x has a key called 'foo' and y does not.
[08:12:43] <ljharb> dzdcnfzd: sure. trying to get an absent key gives you undefined, and you can also have a present key that's undefined
[08:12:55] <dzdcnfzd> This was confusing to me because I think about `undefined` as meaning "not defined"
[08:13:00] <ljharb> that's wrong.
[08:13:11] <dzdcnfzd> Whereas now I realize you can define something with a value of undefined
[08:13:13] <ljharb> n> [({}).hasOwnProperty('foo'), ({ foo: undefined }).hasOwnProperty('foo')] @ dzdcnfzd
[08:13:14] <jellobot> dzdcnfzd, [ false, true ]
[08:13:20] <ljharb> yes, it's a regular value like anything else
[08:14:14] <dzdcnfzd> Yep. I wish it were not so but I must accept that god had other plans when he designed Javascrit
[08:15:01] <ljharb> brendan eich, not god
[08:16:14] *** Joins: doug16k_ (~doug16k@172-97-188-4.cpe.distributel.net)
[08:16:38] *** Quits: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: WeeChat 3.4)
[08:18:55] <dzdcnfzd> I believe he was divinely inspired
[08:18:57] <sheetjs> the church of symbology has a different origin story for javascript
[08:19:23] <ashnur> lol
[08:19:34] <ashnur> i come here, and the first thing i read 'church of symbology'
[08:19:39] <ashnur> whose that?
[08:19:46] <sheetjs> the mythology that explains ASI
[08:20:19] <ashnur> no one uses asi, so this church is dead?
[08:20:39] <Rockwood> sheetjs, o/
[08:21:45] <sheetjs> "prophet eich toiled away atop Math sin.  The hammer and chisel proved inconvenient, and the prophet sought a short-hand to conserve energy.  Hence ASI was born"
[08:21:55] <doug16k_> C with hardly any types and closures
[08:22:24] *** Joins: anomal (~anomal@87.227.196.109)
[08:23:10] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[08:24:21] <ljharb> ASI costs energy
[08:24:31] <sheetjs> ASI saves keystrokes
[08:24:33] <ljharb> because of ASI, all JS on the planet is parsed twice
[08:24:38] <sheetjs> at the expense of readability
[08:24:40] <ljharb> keystrokes don't matter
[08:24:48] <ljharb> reading matters, and runtime matters
[08:25:29] <sheetjs> agreed
[08:26:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[08:27:04] *** Joins: ckdCreations (~ckdCreati@147.55.130.36)
[08:30:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[08:31:49] <doug16k_> I always thought it would be fun if 'use strict';  meant to disable ASI too, and omitting ; doesn't
[08:32:01] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56) (Ping timeout: 248 seconds)
[08:34:48] <ljharb> doug16k_: that would be nice
[08:37:49] *** Quits: machuga (~machuga@104.236.124.225) (Ping timeout: 256 seconds)
[08:37:49] *** Quits: Alexendoo (~Alex@144.21.50.247) (Ping timeout: 256 seconds)
[08:37:53] *** Quits: duuude (~user@user/duuude) (Ping timeout: 248 seconds)
[08:38:08] *** Joins: Alexendoo (~Alex@144.21.50.247)
[08:38:13] *** Joins: theskillwithin_ (theskillwi@2600:3c01::f03c:91ff:fee0:d25d)
[08:39:04] *** Joins: machuga (~machuga@104.236.124.225)
[08:39:31] *** Quits: theskillwithin (~theskillw@user/theskillwithin) (Ping timeout: 256 seconds)
[08:39:39] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[08:40:48] *** Parts: theskillwithin_ (theskillwi@2600:3c01::f03c:91ff:fee0:d25d) ()
[08:41:40] *** Joins: theskillwithin (theskillwi@user/theskillwithin)
[08:42:13] *** suss` is now known as suss
[08:45:03] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:46:06] *** Quits: jargon (~jargon@174-22-223-120.phnx.qwest.net) (Remote host closed the connection)
[08:51:28] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[09:00:28] *** Joins: D3mned (~D1mned@212.101.253.161)
[09:00:28] *** Quits: D4mned (~D1mned@212.101.251.5) (Read error: Connection reset by peer)
[09:01:44] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:05:34] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[09:08:47] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 246 seconds)
[09:15:05] *** Joins: noarb (~noarb@user/noarb)
[09:21:14] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:33:31] *** Joins: KaitoDaumoto (Frat@user/kaitodaumoto)
[09:43:05] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 246 seconds)
[09:43:43] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[09:43:57] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:43:58] *** Joins: pmercado (~pmercado@186.11.83.86)
[09:45:48] *** Quits: zebrag (~chris@user/zebrag) (Read error: Connection reset by peer)
[09:46:16] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:47:26] *** Joins: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com)
[09:47:38] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Remote host closed the connection)
[09:47:59] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:50:25] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[09:53:05] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 248 seconds)
[09:53:05] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Ping timeout: 248 seconds)
[09:57:34] *** Joins: Swant (~swant@libera/staff/swant)
[09:59:49] *** Joins: dionysus69 (~Thunderbi@78.40.106.31)
[10:00:56] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:07:40] *** Quits: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:09:42] *** Quits: dzdcnfzd (~dzdcnfzd@pool-108-54-250-165.nycmny.fios.verizon.net) (Quit: Client closed)
[10:10:33] *** Joins: duuude (~user@user/duuude)
[10:10:40] *** Joins: boka (~boka@27.34.47.206)
[10:12:04] *** Quits: sphertext (~sphertext@user/sphertext) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:12:34] *** Joins: sphertext (~sphertext@user/sphertext)
[10:12:35] *** Quits: sphertext (~sphertext@user/sphertext) (Client Quit)
[10:19:07] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:102d:fff3:ec75:fbd7) (Quit: Client closed)
[10:29:11] *** Quits: boka (~boka@27.34.47.206) (Quit: Client closed)
[10:32:25] *** Quits: w_lehinsun (~lehinsun@188.113.178.220) (Quit: Leaving)
[10:36:13] *** Joins: makara- (~makara@196.214.171.83)
[10:37:23] *** Quits: makara1 (~makara@196.214.171.83) (Ping timeout: 256 seconds)
[10:53:35] *** Joins: mexen (uid495612@user/mexen)
[10:54:16] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[10:57:45] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[11:00:48] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[11:03:43] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d4a:2f72:9e46:d304)
[11:05:51] *** Joins: sphertext (~sphertext@user/sphertext)
[11:11:18] *** Joins: average (~average@user/average)
[11:13:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[11:14:04] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:14:57] *** Joins: anomal (~anomal@87.227.196.109)
[11:15:31] *** Joins: shuck (~shuck@user/shuck)
[11:16:48] <gde33> I just discover enterkeyhint="next" (ikr?) but am I correct to believe it doesn't actually go to the next field?
[11:17:14] <gde33> I still have to implement what next means?
[11:17:52] <anomal> I'm glad i have this channel where I can discuss my genital warts without embarrassment.
[11:18:03] <anomal> Oh wrong channel...
[11:18:57] *** Quits: pmercado (~pmercado@186.11.83.86) (Ping timeout: 248 seconds)
[11:19:32] <gde33> also, doesn't the dev tools mobile view in firefox have a keyboard?
[11:20:58] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[11:22:12] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:26:25] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 248 seconds)
[11:31:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[11:32:28] *** Joins: Minall (~Minall@188.26.198.55)
[11:33:33] <Minall> Hello JavaScript Community!, I have an existencial question, when I'm doing something like 'some string'.toString(CryptoJS.enc.Hex), the Encoder as I see it in the code is an object with two functions, first the stringify and second the parse... Which one of them am I passing here?
[11:33:48] *** Quits: remote (~self@user/hackers) (Ping timeout: 260 seconds)
[11:34:51] <Minall> cryptoJS has several other encoding I could use, and all of them have as a first function its stringify... Perhaps is this the one executed always as the encoder for toString()?
[11:35:31] *** Joins: remote (~self@user/hackers)
[11:35:50] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:36:05] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:36:52] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[11:38:59] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[11:40:51] *** Joins: CiaoSen (~Jura@p200300c957311e002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[11:43:42] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[11:44:18] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[11:44:57] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[11:46:57] *** Joins: iomari891 (~iomari891@102.91.5.67)
[11:49:45] *** Joins: chenqisu1 (~chenqisu1@183.217.202.44)
[11:50:24] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[11:56:13] *** Joins: Alex123 (~Adium@2603-8000-db00-10e5-8ded-8d12-b6b6-e58e.res6.spectrum.com)
[11:57:25] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[12:07:29] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[12:12:12] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[12:12:55] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[12:14:05] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[12:14:51] *** Joins: lapsi (~lapsi@85.14.25.194)
[12:18:23] *** Joins: dvanloon3 (~dvanloon@user/dvanloon)
[12:18:28] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:18:43] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[12:18:43] *** dvanloon3 is now known as dvanloon
[12:29:31] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[12:29:58] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56)
[12:31:16] *** Joins: paule32 (~paul@nat-91-137-17-30.net.encoline.de)
[12:31:16] *** Quits: paule32 (~paul@nat-91-137-17-30.net.encoline.de) (Changing host)
[12:31:16] *** Joins: paule32 (~paul@user/paule32)
[12:32:08] *** Quits: paule32_ (~paul@user/paule32) (Ping timeout: 246 seconds)
[12:34:35] *** Joins: Woet_ (~me@irc.woet.me)
[12:34:41] *** Quits: Woet (~me@irc.woet.me) (Ping timeout: 256 seconds)
[12:35:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[12:35:58] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[12:36:07] *** Joins: wyclif (~wyclif@user/wyclif)
[12:40:45] *** Quits: konrados (~konrados@user-5-173-148-30.play-internet.pl) (Ping timeout: 268 seconds)
[12:41:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:41:40] *** Joins: wyclif (~wyclif@user/wyclif)
[12:43:57] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:43:58] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:46:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:46:49] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:47:07] *** Joins: wyclif (~wyclif@user/wyclif)
[12:52:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:52:53] *** Joins: wyclif (~wyclif@user/wyclif)
[12:54:56] *** Quits: blahboybaz (~blahboyba@c-67-161-96-233.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[12:56:08] *** Joins: Guest4273 (~blahboyba@c-67-161-97-83.hsd1.wa.comcast.net)
[12:58:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:58:11] *** Quits: iomari891 (~iomari891@102.91.5.67) (Ping timeout: 260 seconds)
[12:58:29] *** Joins: wyclif (~wyclif@user/wyclif)
[13:00:57] *** Joins: paule32_ (~paul@nat-91-137-28-25.net.encoline.de)
[13:00:58] *** Quits: paule32_ (~paul@nat-91-137-28-25.net.encoline.de) (Changing host)
[13:00:58] *** Joins: paule32_ (~paul@user/paule32)
[13:01:34] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[13:03:01] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56) (Ping timeout: 240 seconds)
[13:03:59] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 246 seconds)
[13:06:09] <gde33> why doesn't elm.loading return anything? https://jsfiddle.net/o7rpv24c/
[13:07:43] <gde33> having to use getAttribute seems silly
[13:07:52] <Svitkona> it seems to work on my end
[13:08:06] <gde33> Svitkona: it says lazy not undefined?
[13:08:10] <Svitkona> yes
[13:08:14] <gde33> I'm on firefox
[13:08:23] <Svitkona> i'm on chrome
[13:08:30] <gde33> ah
[13:08:32] <Svitkona> err, edge acually
[13:08:37] <gde33> oh haha
[13:08:38] <Svitkona> forgot this is my work PC
[13:08:41] <magga> works here on chrome
[13:08:53] <gde33> strange oversight
[13:09:25] <magga> it displays the absolute path tho
[13:11:18] <magga> getAttribute() would get the relative path, but .src will give you the absolute path
[13:15:41] *** Joins: adroitmachine (~adroitmac@182.64.104.84)
[13:16:12] *** Joins: seifeslimene (~seifeslim@197.244.201.38)
[13:17:38] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 260 seconds)
[13:18:20] <gde33> sadly my experiment changing lazy to eager (while the page loads) has no effect
[13:18:59] *** Quits: Guest4273 (~blahboyba@c-67-161-97-83.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[13:20:43] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f)
[13:20:54] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Quit: The Lounge - https://thelounge.chat)
[13:21:19] *** Joins: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu)
[13:21:52] *** Joins: cryocaustik (~cryocaust@user/cryocaustik)
[13:22:27] *** Quits: D3mned (~D1mned@212.101.253.161) (Ping timeout: 260 seconds)
[13:22:59] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[13:24:04] <fweht> if i want some very small survey on my web app, like just one question and showing the results afterwards, with some rudimentary spam protection, what would be the best stack here?  thought about firebase and recaptcha v3?
[13:24:23] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:5562:8f50:eb7a:4aef) (Quit: Leaving)
[13:29:17] *** Joins: D4mned (~D1mned@212.101.253.161)
[13:31:02] *** Quits: src (~src@user/src) (Quit: leaving)
[13:33:22] *** Quits: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu) (Ping timeout: 260 seconds)
[13:37:05] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 248 seconds)
[13:37:06] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df076-245.dhcp.inet.fi)
[13:39:27] <DnzAtWrk> new javascript game, https://donitz.itch.io/the-scraps-of-victory
[13:39:34] <DnzAtWrk> it worked very well to mix webgl and 2d canvas
[13:39:53] <DnzAtWrk> I had expected it to lower the performance
[13:40:16] *** Joins: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu)
[13:42:29] *** Quits: adroitmachine (~adroitmac@182.64.104.84) (Ping timeout: 246 seconds)
[13:42:38] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:49:31] *** Joins: kave (~user@2001:da8:201:3022:5fac:ed96:2c06:6260)
[13:49:42] <Booster2ooo> Hello
[13:50:27] <magga> hey
[13:51:47] <magga> DnzAtWrk: cool game
[13:51:48] <Booster2ooo> I've got an svg element in my page to which I attached on onwheel event listener to zoom in/out. The zoom works but it still triggers the scroll of the page. I tried to preventDefault/stopPropagation of the wheel event, didn't work, same with the scroll event, I also tried the css overscroll-behavior contains but it doesn't work as the svg itself doesn't have a scrollbar.
[13:52:08] <Booster2ooo> Any idea how to prevent the page from scrolling if the mouse is over the svg area?
[13:52:14] <DnzAtWrk> thanks
[13:52:20] <stagas> Booster2ooo: there's a css property for that
[13:52:27] <DnzAtWrk> one sec
[13:52:36] <DnzAtWrk> you don't want no pointer
[13:52:37] <magga> overflow: hidden;
[13:52:51] <DnzAtWrk> I've used it in countless gamse
[13:52:53] <DnzAtWrk> games*
[13:53:28] <DnzAtWrk> view-source:https://v6p9d9t4.ssl.hwcdn.net/html/5505034/js/input.class.js
[13:53:31] <stagas> Booster2ooo: overscroll-behavior: contain;
[13:53:39] <DnzAtWrk> try setting false to the bubbling
[13:53:46] <DnzAtWrk> and e.preventDefault();
[13:54:05] <stagas> Booster2ooo: ah you just said you used it lol
[13:54:21] <stagas> Booster2ooo: but yeah why isn't it working then
[13:54:30] <DnzAtWrk> canvas.addEventListener('mousewheel', e => e.preventDefault(), false);
[13:55:10] <Booster2ooo> DnzAtWrk: I'll have a look thanks. "Unfortunalty", it's not vanilla JS but Blazor so I'll have to find out how to do that ^^
[13:55:26] <Booster2ooo> stagas: I think it the element doesn't have a scroll, the css is ignored
[13:55:51] <Booster2ooo> magga: I still need the scroll on the page to work if the mouse is outside the svg area, so overflow hidden is not a solution
[13:57:08] <stagas> Booster2ooo: yes it's a bug in chrome i think, i had the same issue and solved it by making an element inside to be height: 100.5% and then overflow: scroll-y; so it always has a scroll bar
[13:57:09] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d4a:2f72:9e46:d304) (Quit: My iMac has gone to sleep. ZZZzzz…)
[13:58:05] <stagas> Booster2ooo: there is a thread in chrome now i remember they're complaining about this bug it's unsolved for years
[13:58:45] <Booster2ooo> arf ok stagas, I'll try DnzAtWrk way, sounds more compatible :)
[14:00:15] *** Joins: anomal (~anomal@87.227.196.109)
[14:02:39] <gde33> Booster2ooo: you could hide the overflow on mouse over then return it to default onmouseout
[14:05:00] *** Quits: Alex123 (~Adium@2603-8000-db00-10e5-8ded-8d12-b6b6-e58e.res6.spectrum.com) (Quit: Leaving.)
[14:07:41] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:07:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[14:08:53] *** Joins: wyclif (~wyclif@user/wyclif)
[14:11:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 248 seconds)
[14:15:50] *** Joins: robyn (~robyn@144.172.118.48)
[14:15:56] *** Quits: robyn (~robyn@144.172.118.48) (Changing host)
[14:15:56] *** Joins: robyn (~robyn@user/robyndrake)
[14:18:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:19:49] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[14:19:58] *** Joins: wyclif (~wyclif@user/wyclif)
[14:21:12] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:21:38] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[14:25:11] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 252 seconds)
[14:25:41] *** Parts: kave (~user@2001:da8:201:3022:5fac:ed96:2c06:6260) ()
[14:26:13] *** Joins: alioui (~medeva293@102.157.8.53)
[14:26:23] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:27:30] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[14:29:40] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:30:25] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f) (Ping timeout: 248 seconds)
[14:30:47] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Quit: 🖖)
[14:32:40] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[14:34:46] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f)
[14:41:22] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[14:41:51] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[14:43:11] *** Quits: CiaoSen (~Jura@p200300c957311e002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:43:50] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[14:44:57] *** Quits: llorllale (~llorllale@198.98.119.85) (Quit: WeeChat 3.4.1)
[14:46:32] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[14:47:08] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[14:47:36] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:48:38] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[14:52:39] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[14:52:39] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[14:52:39] *** Joins: nortoh (~nortoh@user/nortoh)
[14:54:17] *** Quits: KaitoDaumoto (Frat@user/kaitodaumoto) (Remote host closed the connection)
[15:01:26] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56)
[15:04:27] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:06:38] *** Quits: jasonaowen (~owenja@user/jasonaowen) (Quit: leaving)
[15:08:44] *** Joins: jasonaowen (~owenja@user/jasonaowen)
[15:09:44] *** Quits: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu) (Ping timeout: 252 seconds)
[15:10:48] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f) (Ping timeout: 260 seconds)
[15:11:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:15:09] *** Joins: Alina-ma- (~Alina-mal@37.252.83.224)
[15:15:28] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 260 seconds)
[15:17:23] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 268 seconds)
[15:19:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:20:59] *** Quits: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com) (Quit: Client closed)
[15:21:32] *** Joins: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu)
[15:28:16] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:29:46] *** Joins: fanhako (~fanhako@203.212.74.41-ip-dyn.orange.mg)
[15:31:42] *** Quits: adamtajti (~adamtajti@business-212-48-250-30.business.broadband.hu) (Quit: Lost terminal)
[15:33:00] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:34:08] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56) (Ping timeout: 260 seconds)
[15:34:33] *** Joins: dea_ (~dea_@178.211.43.68)
[15:36:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:36:53] *** Joins: wyclif (~wyclif@user/wyclif)
[15:38:42] *** Joins: solobalbo (uid549465@id-549465.uxbridge.irccloud.com)
[15:41:32] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[15:41:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[15:42:19] *** Joins: wyclif (~wyclif@user/wyclif)
[15:42:40] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[15:42:44] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[15:44:47] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:48:03] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 260 seconds)
[15:48:14] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[15:49:18] *** Quits: niop_ (niop@gateway/vpn/airvpn/niop) (Ping timeout: 260 seconds)
[15:49:55] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[15:50:22] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[15:50:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:57:58] *** Joins: friend (~friend@user/friend)
[15:58:59] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 246 seconds)
[15:59:13] *** Joins: boka (~boka@27.34.47.21)
[15:59:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[16:00:10] *** boka is now known as blacked
[16:00:18] *** Joins: llorllale (~llorllale@198.98.119.85)
[16:01:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:04:35] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 246 seconds)
[16:04:36] *** Joins: Dean (~Dean@165-73-119-228.ip.afrihost.capetown)
[16:04:36] *** Quits: Dean (~Dean@165-73-119-228.ip.afrihost.capetown) (Changing host)
[16:04:36] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[16:10:05] *** Parts: blacked (~boka@27.34.47.21) ()
[16:10:12] *** Quits: cxl (~hey_its_m@84.254.102.36) (Quit: bye)
[16:13:45] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[16:14:10] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:14:23] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[16:14:23] *** Quits: D4mned (~D1mned@212.101.253.161) (Read error: Connection reset by peer)
[16:15:57] *** Joins: D4mned (~D1mned@212.101.253.195)
[16:16:08] *** Joins: verwirrt (~verwirrt@user/verwirrt)
[16:16:09] *** Joins: shuck (~shuck@user/shuck)
[16:19:21] *** Joins: nomic (~nomic@85.203.36.64)
[16:26:36] *** Quits: shuck (~shuck@user/shuck) (Read error: Connection reset by peer)
[16:27:38] *** Joins: shuck (~shuck@user/shuck)
[16:29:52] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[16:33:37] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:34:23] *** Quits: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[16:34:57] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[16:35:17] *** Joins: wand (~user@gateway/tor-sasl/wand)
[16:36:54] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[16:39:50] *** Joins: DnzAtWrk2 (~DnzAtWrk@mobile-access-5672fb-80.dhcp.inet.fi)
[16:42:44] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:43:30] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:43:45] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df076-245.dhcp.inet.fi) (Ping timeout: 248 seconds)
[16:44:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[16:45:58] <blueagain> DnzAtWrk2: neat game
[16:46:11] <DnzAtWrk2> thank you
[16:46:24] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[16:46:24] <DnzAtWrk2> I'm not going to use p2 again for physics
[16:46:27] <DnzAtWrk2> way too many bugs
[16:46:42] *** Joins: anomal (~anomal@87.227.196.109)
[16:46:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:47:02] <DnzAtWrk2> maybe it's time for https://brm.io/matter-js/
[16:47:53] *** Joins: d[10] (~d10]@2804:2488:1083:1190:35c0:f429:7007:63ab)
[16:48:01] <anomal> DnzAtWrk2: I wonder, why 2D
[16:48:17] <DnzAtWrk2> technically it is 3d
[16:48:23] <DnzAtWrk2> I just use an orthographic camera
[16:48:51] <DnzAtWrk2> the effects however are 2d on top of an extra 2D canvas
[16:49:09] <DnzAtWrk2> very neat way to mix dynamic effects (ie intermediate drawing), with a consistent 3D high-performance world (webgl)
[16:49:10] *** Quits: verwirrt (~verwirrt@user/verwirrt) (Quit: Leaving)
[16:49:29] <austincheney> the cat killed my sandwich after I got to the TV :(
[16:49:36] <anomal> DnzAtWrk2: it's very nice
[16:50:04] <DnzAtWrk2> it is, and that's why I argue that javascript is the most versatile language for gamedev, but not the best performing
[16:50:24] <anomal> DnzAtWrk2: maybe WASM and JS make a nice duo
[16:50:30] <anomal> DnzAtWrk2: although WASM needs work
[16:50:47] <DnzAtWrk2> I find that javascript alone offers quite a nice buffer when developing simple games
[16:50:53] <DnzAtWrk2> Hell, it's way faster than gdscript in godot
[16:50:58] <DnzAtWrk2> and gdscript is specifically made for gamedev
[16:51:19] <DnzAtWrk2> I find that in javascript I can code rather sloppily without slowing down the game
[16:52:19] <DnzAtWrk2> there is a bullet hell jam in a week, and I'll probably see if I can make a js game with... I don't know, a few thousand bullets on the screen
[16:52:21] <DnzAtWrk2> that will be fun
[16:52:23] <anomal> DnzAtWrk2: put few dozen billion dollars at a script engine and that happens
[16:52:31] <DnzAtWrk2> lol yeah
[16:56:33] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 248 seconds)
[17:00:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:02:13] *** Joins: voltage_ (voltage@user/voltage)
[17:02:19] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:49] <anomal> DnzAtWrk2: what's the benefit of GDScript
[17:03:06] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[17:03:50] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[17:04:15] <DnzAtWrk2> nothing really. It's just the scripting language in godot
[17:06:55] <anomal> DnzAtWrk2: what's godot
[17:07:02] <anomal> DnzAtWrk2: I mean what makes it special
[17:07:17] <anomal> DnzAtWrk2: lua is not as fast as JS but I find it more suitable for games because of coroutines
[17:07:31] <anomal> In JS you need to type await everywhere
[17:07:41] <DnzAtWrk2> godot is like unreal, but about 100 times lighter
[17:07:49] <anomal> Hm
[17:07:51] *** Quits: prawnsal_ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Ping timeout: 260 seconds)
[17:07:54] <DnzAtWrk2> it has quite a nice node tree system for handling everything
[17:08:01] <DnzAtWrk2> the editor takes about 100 MB
[17:08:06] <DnzAtWrk2> and doesn't need installing
[17:08:14] <DnzAtWrk2> the game source is all plain text files
[17:08:17] <DnzAtWrk2> no bullshit binary
[17:08:17] *** Quits: suss (~user@user/suss) (Ping timeout: 246 seconds)
[17:08:37] <DnzAtWrk2> the weakness of it is that godot is quite new, and not that well optimized
[17:08:40] <DnzAtWrk2> but it has a very clean system
[17:09:34] <DnzAtWrk2> and you can extend the editor for your own needs, like writing plugins and map editors and your own little nodes and icons
[17:13:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:13:17] *** Joins: wyclif (~wyclif@user/wyclif)
[17:13:53] <anomal> DnzAtWrk2: what makes its system clean
[17:14:24] <DnzAtWrk2> the very minimal amount of dependencies and extra crap
[17:14:27] <DnzAtWrk2> as I said, the editor is 100 MB
[17:14:31] <anomal> Ah
[17:14:36] <DnzAtWrk2> it doesn't even include "export templates" when you download it
[17:14:45] <DnzAtWrk2> these are the templates used to build html5 or native builds
[17:14:47] *** Joins: thiras (~thiras@user/thiras)
[17:14:54] <anomal> That's a lot. When I was growing up, my editor could fit on a single floppy drive
[17:15:14] <anomal> And the mouse wheel scrolled uphill both ways
[17:15:15] <DnzAtWrk2> https://godotengine.org/article/godot-aims-mainstream
[17:15:33] <DnzAtWrk2> "Godot is downloaded as a single executable that takes up a little more than a dozen megabytes and, just by executing it, contains the project manager and editor runtimes. No installation is required. This is obviously wrong and against the trend in modern game engines. As an example, Lumberyard, the new amazing Amazon game engine, uncompresses to 40 GB after download."
[17:15:35] <DnzAtWrk2> lolol
[17:16:31] <anomal> DnzAtWrk2: considering it's a game editor and not a text editor 100mb is impressive indeed
[17:16:43] <anomal> DnzAtWrk2: I mean not only text
[17:16:54] <anomal> DnzAtWrk2: our computers so fast, we just pile dependencies
[17:17:01] <DnzAtWrk2> I so wish I could use javascript for native builds
[17:17:02] <anomal> DnzAtWrk2: we need a bloat tax
[17:17:13] <DnzAtWrk2> but none of the native bundlers make small builds
[17:17:19] <DnzAtWrk2> they're all so very very bloated
[17:17:28] <DnzAtWrk2> electron, nwjs and so on
[17:17:37] <anomal> Can't Godot fork v8 and have a fast ngine
[17:17:39] <anomal> engine*
[17:18:12] <DnzAtWrk2> maybe, but most of the power of js isn't the language itself but the powerful APIs it has access to
[17:18:48] <DnzAtWrk2> like, I would love to be able to build native 2d canvas or webgl games with the DOM
[17:18:52] <anomal> DnzAtWrk2: I don't know. I think the engine is the core thing. The APIs are amazing for what a browser has
[17:18:53] <DnzAtWrk2> and then bundle JUST THAT
[17:18:56] <anomal> But otherwise not so amazing
[17:19:23] <DnzAtWrk2> but you're forced to included chromium and pretty much everything under the sun
[17:19:26] <DnzAtWrk2> include*
[17:19:43] <anomal> DnzAtWrk2: we need a Chromium CPU
[17:19:55] <DnzAtWrk2> we need a modular web browser
[17:20:00] <DnzAtWrk2> with only the components we need
[17:20:04] <anomal> DnzAtWrk2: just burn it as a chip, and then the download can be just the EXE header
[17:20:22] <anomal> DnzAtWrk2: I don't know how it can be modular
[17:20:27] <DnzAtWrk2> hehe
[17:20:36] <DnzAtWrk2> well, if you imagine that you could pick and choose what APIs you want
[17:20:40] <DnzAtWrk2> obviously you need the DOM
[17:20:44] <DnzAtWrk2> and the Audio API
[17:20:47] <DnzAtWrk2> and WebGL, and so on
[17:20:52] <anomal> DnzAtWrk2: sure but the browser is... you have whats in the browser and that's it
[17:20:53] <DnzAtWrk2> just picking the stuff you need and ignoring the rest
[17:21:03] <anomal> I mean which end user would make their own browser
[17:21:14] <DnzAtWrk2> it's more about when the browser is used in native applications
[17:21:17] <anomal> It's like modular Windows
[17:21:20] <anomal> No one does it
[17:21:46] <DnzAtWrk2> so I could build my custom lightweight version of chromium to run my game in which I can then sell on steam
[17:21:56] <DnzAtWrk2> without feeling like I just handed an extra web browser to a customer without asking
[17:22:30] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 272 seconds)
[17:26:09] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[17:27:00] *** Quits: psyxopompos (~psyxopomp@user/psyxopompos) (Ping timeout: 240 seconds)
[17:28:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:28:45] *** Joins: wyclif (~wyclif@user/wyclif)
[17:29:56] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 245 seconds)
[17:30:13] <blueagain> DnzAtWrk2: matter-js looks pretty cool
[17:30:44] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:31:12] *** Quits: dionysus69 (~Thunderbi@78.40.106.31) (Ping timeout: 268 seconds)
[17:31:31] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[17:32:14] <DnzAtWrk2> ah, it was only 10000 LOC
[17:32:50] <robyn> LOC????
[17:33:01] *** Quits: chenqisu1 (~chenqisu1@183.217.202.44) (Ping timeout: 240 seconds)
[17:33:22] <robyn> What does LOC mean?
[17:33:40] <blueagain> lines of codes
[17:33:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:33:54] <blueagain> code*
[17:34:42] *** Joins: pydev (~pydev3@2001:b07:5d28:551:22e8:cddf:3a88:5d30)
[17:35:08] <robyn> Thank you
[17:36:59] *** Quits: D4mned (~D1mned@212.101.253.195) (Ping timeout: 246 seconds)
[17:38:02] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 246 seconds)
[17:39:42] *** Joins: wyclif (~wyclif@user/wyclif)
[17:41:12] *** Joins: domino14 (~domino14@pool-108-5-178-141.nwrknj.fios.verizon.net)
[17:44:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:45:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[17:45:14] *** Joins: wyclif (~wyclif@user/wyclif)
[17:46:58] <domino14> Hi all.. I need some help if anyone has had experience with the new create-react-app (v5) + exposing it properly via docker-compose for local development. I can't get hot reloading to work with docker-compose/traefik
[17:48:25] <domino14> https://github.com/domino14/liwords/blob/630f10fb90ac0d1b6d85ec89d20fc43c0582af48/docker-compose.yml#L134-L162 is my setup for the create-react-app webpack dev server
[17:48:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:49:27] <domino14> there are several situations where i kept WDS_SOCKET_PATH as "/wds-socket" and it still tried to send its hot reloading websocket messages via the `/ws` path (which my app already uses for something unrelated)
[17:50:02] <domino14> but with this current setup, it sends no messages at all via /wds-socket
[17:50:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:51:01] *** Joins: wyclif (~wyclif@user/wyclif)
[17:54:48] <arash> Hello, How can I select an element in parent function in this code : $(this).parent()
[17:55:00] <arash> $(this).parent().("p") or $(this).parent().$("p") is not working
[17:55:06] <arash> its jQuery
[17:55:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:56:24] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[17:56:33] *** Joins: wyclif (~wyclif@user/wyclif)
[17:57:39] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[17:57:43] <austincheney> arash, you cannot.  "this" refers to the prior step in the call stack (callee) except for arrow functions where "this" is lexical and thus points to the containing call
[17:58:28] <austincheney> arash, my suggestion is don't use "this", because it is a pronoun.  Instead use explicit references, which significantly eases code maintenance
[17:58:47] <arash> but there should be a way to select an element in the parent node
[17:59:30] <Cork> arash: you want .find()
[17:59:35] <domino14> jQuery (this/those)
[17:59:39] <austincheney> arash, the vanilla JS (non-jquery) way to do that event.target.parentNode which provides you the parent element on which the event fired
[17:59:42] <Cork> or children() if you only want direct sibling
[18:00:11] *** Joins: jsmooth (~quassel@2600:6c54:7b00:0:fa72:b52f:b12e:35a9)
[18:00:18] <arash> Cork, thank you.
[18:00:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[18:00:53] *** Quits: jsmooth (~quassel@2600:6c54:7b00:0:fa72:b52f:b12e:35a9) (Changing host)
[18:00:53] *** Joins: jsmooth (~quassel@user/jsmooth)
[18:06:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:06:49] *** Joins: niop (~niop@n106-70-196-23.rdl1.qld.optusnet.com.au)
[18:07:06] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[18:08:11] *** Quits: kmh (~kmh@2a00:6020:5004:6800:2c38:c900:70ea:cd14) (Quit: Leaving)
[18:08:29] *** Joins: niop_ (niop@gateway/vpn/airvpn/niop)
[18:11:54] *** Quits: niop (~niop@n106-70-196-23.rdl1.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[18:12:14] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:13:26] *** Joins: wyclif (~wyclif@user/wyclif)
[18:13:38] *** Joins: kmh (~kmh@2a00:6020:5004:6800:7cc4:ef37:712f:623d)
[18:17:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:17:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:17:47] *** Joins: wroathe (~wroathe@user/wroathe)
[18:18:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:18:42] *** Joins: wyclif (~wyclif@user/wyclif)
[18:19:11] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[18:19:27] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[18:21:00] *** Joins: D4mned (~D1mned@212.101.253.195)
[18:22:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[18:22:45] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[18:23:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[18:24:14] *** Joins: wyclif (~wyclif@user/wyclif)
[18:27:32] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:28:37] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[18:28:40] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[18:29:20] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[18:29:21] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 248 seconds)
[18:29:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:29:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[18:31:35] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:32:31] *** Quits: Alina-ma- (~Alina-mal@37.252.83.224) (Quit: !be back soon)
[18:32:37] <Batman__> i want to do an animation plotting maybe 1,000 points in an (x, y) co-ordinate system. I will do 2 animations, one will be joining some of these points. I want to zoom in and out. I was thinking of doing it in SVG. But I wonder if it's better to do it in canvas. I think SVG should be ok?????
[18:33:25] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[18:34:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[18:35:19] *** Joins: wyclif (~wyclif@user/wyclif)
[18:35:56] <austincheney> Batman__, you will likely get better performance out of canvas, but it won't be accessible.  SVG makes use of the DOM so SVG animation can be fully accessible
[18:36:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[18:39:28] <Batman__> why won't it be accessible?
[18:39:42] *** Joins: dea__ (~dea_@178.211.43.68)
[18:40:44] *** Quits: dea_ (~dea_@178.211.43.68) (Read error: Connection reset by peer)
[18:48:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[18:49:10] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:51:35] <doug16k_> how do you animate d= some string of M and L and stuff>
[18:53:52] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[18:54:40] <doug16k_> it is better to just draw it to a canvas than it is to modify the dom at framerate
[18:55:34] *** Joins: llorllale (~llorllale@198.98.119.85)
[18:55:50] *** Joins: adroitmachine (~adroitmac@182.64.104.84)
[18:55:58] *** Quits: clamiax (~clamiax@net-93-65-240-235.cust.vodafonedsl.it) (Remote host closed the connection)
[18:56:50] <doug16k_> svg is almost a canvas in disguise anyway, you have to give it a size, it has no natural size
[18:59:29] <Batman__> the way you draw things is pretty similar , there are circles, lines etc
[18:59:45] *** Joins: off^ (~off@c-24-99-107-170.hsd1.ga.comcast.net)
[19:00:27] *** Joins: Akiva (~Akiva@user/Akiva)
[19:00:38] <Batman__> but performance is different
[19:01:02] <Batman__> and canvas is redrawing from a clean slate each frame
[19:02:34] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:02:47] *** Joins: dionysus69 (~Thunderbi@176.221.255.69)
[19:03:02] <Batman__> yeah modifying the path is tricky, d=...., i think a library is needed for most SVG animation
[19:03:19] <doug16k_> Batman__, you think it isn't redrawing from clean when the layout/render draws the svg?
[19:04:06] <doug16k_> svg is just a declarative macro saying what canvas calls to make
[19:04:48] <Batman__> if i use requestAnimationFrame with svg , is it redrawing every time? I don't know
[19:05:15] <doug16k_> if you modify it, how else could it come up with something updated to send to the GPU?
[19:05:18] <Batman__> but svg/dom has different performance than canvas so i have to weigh that up
[19:06:38] <doug16k_> svg is analogous to "retained mode" renderers, where you give them everything up front, and hopefully highly optimizes it for you. canvas is analogous to "immediate mode" rendering, where you are actually issuing the command sequence yourself
[19:06:40] <Batman__> ok , i may sound stupid but it's not just adding what's changed, instead of redrawing 60 fps ? I guess not
[19:07:27] <doug16k_> retained mode is better when nothing changes, immediate mode is better when many things are changing
[19:07:58] <Batman__> yeah ok, that makes sense
[19:08:29] <Batman__> in experiments i've run , svg gets a bit sketchy after a certain amount of animations changes per second
[19:10:24] *** Quits: DnzAtWrk2 (~DnzAtWrk@mobile-access-5672fb-80.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:14:25] *** Joins: pmercado (~pmercado@186.11.83.86)
[19:14:52] *** Joins: shuck (~shuck@user/shuck)
[19:14:57] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[19:15:46] <Batman__> doug16k_: thanks
[19:16:17] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[19:18:24] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 272 seconds)
[19:19:56] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5672fb-80.dhcp.inet.fi)
[19:22:08] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[19:22:08] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5672fb-80.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:22:23] *** Quits: dea__ (~dea_@178.211.43.68) (Read error: Connection reset by peer)
[19:22:31] *** Joins: Csm319_ (~csm3105@31.4.136.151)
[19:22:42] *** Joins: dea__ (~dea_@178.211.43.68)
[19:22:43] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[19:22:50] *** Quits: Brewster_ (~Brewster@us.8bitshort.com) (Changing host)
[19:22:50] *** Joins: Brewster_ (~Brewster@user/brewster)
[19:22:50] *** Brewster_ is now known as Brewster
[19:23:45] *** Quits: lapsi (~lapsi@85.14.25.194) (Quit: Bye bye people :))
[19:24:09] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:24:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[19:25:11] *** Quits: Csm319_ (~csm3105@31.4.136.151) (Read error: Connection reset by peer)
[19:25:17] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 268 seconds)
[19:25:18] *** Joins: dea_ (~dea_@178.211.43.68)
[19:25:31] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[19:26:53] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:27:45] *** Quits: dea__ (~dea_@178.211.43.68) (Ping timeout: 268 seconds)
[19:27:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[19:29:25] *** Quits: pmercado (~pmercado@186.11.83.86) (Remote host closed the connection)
[19:30:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:31:07] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[19:31:50] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56)
[19:33:53] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 248 seconds)
[19:34:09] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:35:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:35:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:38:25] *** Quits: domino14 (~domino14@pool-108-5-178-141.nwrknj.fios.verizon.net) (Remote host closed the connection)
[19:39:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[19:39:20] *** Joins: DnzAtWrk (~DnzAtWrk@1091.pc.puv.fi)
[19:40:40] *** Joins: pmercado (~pmercado@186.11.19.34)
[19:40:43] *** Joins: wyclif (~wyclif@user/wyclif)
[19:43:18] *** Joins: ivanf (~ivan@user/ivanf)
[19:43:47] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 268 seconds)
[19:44:16] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[19:44:27] <doug16k_> Batman__, it probably does try hard to cull things with bounding boxes, but most likely touching something at all makes it drop all the assumptions it had until it reexamines it to get a new bounding box, so it's not perfectly cut and dry
[19:45:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[19:46:07] *** Joins: wyclif (~wyclif@user/wyclif)
[19:46:09] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 248 seconds)
[19:46:09] *** Joins: johnau (~johnau@202.172.127.116)
[19:46:45] *** Joins: tccki (~tccki@box.webslate.co.nz)
[19:47:04] <johnau> is this the right place to ask questions about React?
[19:47:30] <johnau> oh, nvm #reactjs
[19:48:35] <Guest80> Hello I am trying to figure out secure alternatives to eval() and innerHTML https://dpaste.org/Vhzk0#L4,16
[19:48:58] <Guest80> I think I found a few as shown on the bottom but not 100% if they are secure or not
[19:49:12] <Guest80> And also I am getting an error with fxn();
[19:49:27] <banana_> is it me or is using https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining kinda ugly looking
[19:50:00] <doug16k_> Guest80, you pass an element to Function constructor I think
[19:50:27] <doug16k_> didn't you mean `new Function(src)`
[19:50:32] <Guest80> I am trying to take the script from evalXCookieConsent
[19:50:42] <doug16k_> oh that is a url lol
[19:50:46] <Guest80> I need to replicate eval(script.innerHTML);
[19:50:48] *** Quits: Dorward (~dorward@2001:8b0:683:6dc5:56b2:3ff:fe9c:2b78) (Remote host closed the connection)
[19:50:58] <Guest80> yes it is a url
[19:51:13] <banana_> I guess it's ok to use it to replace short-circuiting but idk besides that personally I'd try to avoid using it.
[19:51:40] <Guest80> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#never_use_eval!
[19:51:57] <Guest80> I tried this too unless I did something wrong
[19:51:58] <doug16k_> Guest80, I would never eval in a million years
[19:52:09] <Guest80> Agreed that is why I need to change it
[19:52:12] <doug16k_> well, unless a machine generated ALL the code, then I might consider it
[19:52:31] <Guest80> I am getting an error though when using a function to replace it
[19:54:05] <doug16k_> what is that else case for?
[19:54:15] <doug16k_> if that script is in the page, it has been evaluated already
[19:54:46] *** Joins: Dorward (~dorward@2001:8b0:683:6dc5:56b2:3ff:fe9c:2b78)
[19:54:53] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 268 seconds)
[19:54:59] <Guest80> It is strange yes. I did not write the code myself but I can tell you what that function does
[19:55:08] <doug16k_> how did you manage to put a <script>somethingHere()</script> in the page without somethingHere being called already by the time you use the <script> getAttribute
[19:55:29] <Guest80> https://django-cookie-consent.readthedocs.io/en/latest/getting_started.html#checking-for-3rd-party-cookies-dynamically
[19:55:43] <Guest80> https://github.com/bmihelac/django-cookie-consent/blob/master/cookie_consent/static/cookie_consent/cookiebar.js
[19:55:47] <Guest80> https://github.com/bmihelac/django-cookie-consent/blob/master/tests/core/templates/test_page.html#L58-L106
[19:55:55] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[19:56:15] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[19:56:15] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[19:56:15] *** Joins: nortoh (~nortoh@user/nortoh)
[19:56:36] <doug16k_> it does a weird thing where it executes that <script> body again?
[19:56:41] <Guest80> I think this answers your question https://github.com/bmihelac/django-cookie-consent/blob/master/tests/core/templates/test_page.html#L61-L67
[19:56:53] <Guest80> This is the script it evaluates
[19:57:13] <Guest80> or rather, that is what script equals in  evalXCookieConsent(script)
[19:57:31] <Guest80> Here is the jsfiddle https://jsfiddle.net/1qhf4j32/
[19:57:39] <doug16k_> ok, in your code on ine 18, that passes an HTMLScriptElement to Function, does it?
[19:57:59] <Guest80> yes
[19:58:04] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:58:05] <Guest80> const fxn = new Function(script);
[19:58:56] <Guest80> https://dpaste.org/bDijR
[19:59:00] <Guest80> That is what script equals
[20:01:32] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:02:39] <doug16k_> doesn't Function cast your parameter to string and get '[object HTMLScriptElement]'
[20:02:50] <Guest80> yes that is what the console shows
[20:02:51] *** Joins: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net)
[20:03:03] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[20:03:19] <doug16k_> then pass a valid parameter
[20:04:06] <doug16k_> is that the question? how to get the string?
[20:04:39] <austincheney> Guest80, is there a specific reason you are using the global Function constructor?
[20:04:59] <Guest80> Not sure what I can pass in there as a valid parameter. I don't want to get it. All I want to do is replace eval() with something more secure.
[20:05:10] <Guest80> and innerHTML as well replace that too
[20:05:18] <Guest80> What do you mean austin?
[20:05:48] <doug16k_> if you only touch it there if you are going to execute it, then you can't make it secure by convoluting the way it creates the function object. you still execute it, right?
[20:06:11] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56) (Ping timeout: 245 seconds)
[20:06:16] <Guest80> Right it still needs to execute it but convolute it to make it secure
[20:06:34] <Guest80> or wait let me read again
[20:06:49] <austincheney> Guest80, I just read up and see your problem about needing an alternative to eval and innerHTML.  Do you need to eval code generally or just related to a specific concern?
[20:07:50] *** Joins: zebrag (~chris@user/zebrag)
[20:08:17] <Guest80> Yes I need to run the script in the else statement
[20:08:41] <Guest80> without eval if that makes sense
[20:08:56] <austincheney> Guest80, if your area of concern is the DOM and alternatives to innerHTML then I can help, but if its just general code you are executing from a string you are probably stuck with eval and no security
[20:09:24] <Guest80> But some of my alternatives in the dpaste does that though just not with eval?
[20:09:27] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 260 seconds)
[20:09:53] <Guest80> For some reason the alternatives make a div tag and enabled css for the cookie bar
[20:10:07] <Guest80> That to me seems like it runs/executes fine
[20:10:23] <Guest80> Can I just use those and not even include eval() ?
[20:10:44] *** Joins: dea__ (~dea_@178.211.43.68)
[20:10:58] *** Quits: dea_ (~dea_@178.211.43.68) (Ping timeout: 272 seconds)
[20:11:56] <austincheney> Guest80, I needed the ability to send test automation across the network to remote devices that then send those instructions to the browser to execute user events on a page.  I solved for this problem by creating a data structure to represent a series of DOM access, interactions, and evaluations
[20:11:59] <doug16k_> Guest80, what does it do if you pass script.innerHTML to Function
[20:12:08] <Guest80> https://dpaste.org/TnVj5
[20:12:45] <banana_> austincheney: just a coding preference do you try to avoid overusing this https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining
[20:13:37] <austincheney> banana_, I have found 2 times where I needed "this" in my career and I have been writing JavaScript full time for more than 14 years
[20:13:41] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[20:14:08] <banana_> n> var test = { }; test?.a?.b?.c?.d?.e?.f ?? 'eff';
[20:14:09] <jellobot> (okay) 'eff'
[20:14:20] <doug16k_> banana_, what's the alternative? verbosely manually short circuiting it? I use it whenever possible
[20:14:21] <Guest80> These are my comments for the whole function https://dpaste.org/nW3KD
[20:14:35] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[20:15:11] <Guest80> The docs link explains it
[20:15:15] <doug16k_> the cpu spends all of its time in layout and render. what happens with a null short circuit is zero time
[20:15:39] <banana_> doug16k: I guess finding a way to make sure your data is more populated with defaults? so you don't have to over rely
[20:15:46] <Guest80> So when I accept all cookies, the alert alert("Social cookie accepted"); executes
[20:15:57] <Guest80> Not accepting all cookies causes that script to be ignored
[20:16:02] <banana_> that's my guess to answer your question
[20:16:15] <doug16k_> in the past, you could arrange your js so everything begins to exist in the perfect order, so nothing can really even be null
[20:16:45] <doug16k_> now we have crazy things like react rerendering 10 times during the wait for the first http request
[20:17:06] <banana_> austincheney: and yeah amen, at first I was skeptical of that advice, to avoid `this`, but then I tried it and yeah I concur developing without `this` is nice and I'm just at the beginning
[20:17:08] <doug16k_> so you just short circuit all the accesses to state that might be still null
[20:18:12] <banana_> yeah im not against using it, was just thinking it could be overused.
[20:18:50] <banana_> if the ?. accessor is so nice what's the point anymore using the regular `.` accessor operator
[20:19:05] <doug16k_> maybe I want it to crash if that was null
[20:19:09] <banana_> I would think it's because you only should use it when you need it
[20:19:09] <doug16k_> because it can't be
[20:19:25] <doug16k_> fail fast saves debugging
[20:20:28] <banana_> ok so that's a reason where you don't use it
[20:20:42] <banana_> how do you really know what you want to fast fail I guess
[20:20:52] <banana_> if you have a good way to gauging that
[20:20:58] <banana_> *of
[20:21:20] <doug16k_> constraints. sometimes you set a constraint that must be true or else it is a bug
[20:21:28] <doug16k_> self imposed
[20:21:45] <Guest80> https://dpaste.org/KUecq -> script.innerHTML console.log()
[20:22:07] <doug16k_> sometimes you know things can't be null, it's impossible
[20:22:24] <doug16k_> if you truly believe it is impossible, it is best to enforce it, since your assumption being wrong is bad
[20:23:15] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:23:16] <doug16k_> sometimes you know full well that it will be null, at startup or something, so you use the short circuit shortcuts
[20:24:22] <banana_> but what if later you have it so certain data can't be null at the render level I guess
[20:24:33] <banana_> then you could replace ?. with . right?
[20:24:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[20:24:37] <doug16k_> each . is am implicit assert that the left hand side is dereferenceable
[20:25:04] <banana_> yep
[20:25:08] <doug16k_> yes
[20:25:09] <banana_> so is ?.
[20:25:36] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:26:14] *** Joins: audio (~audio@user/audio)
[20:26:35] *** Quits: ckdCreations (~ckdCreati@147.55.130.36) (Read error: Connection reset by peer)
[20:27:15] <doug16k_> I think of ? short circuit shortcuts as a choice of whether or not I want it to bugcheck as soon as it sees a state I didn't believe could happen
[20:27:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[20:27:51] <banana_> actually no right
[20:27:59] <banana_> because of undefined and null
[20:28:08] <doug16k_> undefined works too
[20:28:16] <banana_> n> let test = null; test.propA
[20:28:16] <jellobot> (fail) TypeError: Cannot read properties of null (reading 'propA')
[20:28:23] <banana_> n> let test = null; test?.propA
[20:28:23] <jellobot> (okay) undefined
[20:28:44] <banana_> so null and undefined aren't dereferenceable
[20:28:48] <doug16k_> n> let test = undefined; test?.propA
[20:28:48] <jellobot> (okay) undefined
[20:29:11] <doug16k_> let test - {}; test.foo?.bar
[20:29:15] <banana_> n> let test = undefined; test.propA
[20:29:16] <jellobot> (fail) TypeError: Cannot read properties of undefined (reading 'propA')
[20:29:16] <doug16k_> n> let test - {}; test.foo?.bar
[20:29:17] <jellobot> (fail) SyntaxError: Unexpected token '-'
[20:29:18] <ljharb> fakuve: you need to auth
[20:29:32] <doug16k_> n> let test = {}; test.foo?.bar
[20:29:33] <jellobot> (okay) undefined
[20:29:34] <ljharb> dka: you also need to auth with nickserv for anyone to see what you say; see the last link in the topic
[20:29:49] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[20:30:04] <ljharb> it's not "dereferenceable", null and undefined can't be boxed into an object.
[20:30:44] <doug16k_> I meant undefined works with ? shortcuts too
[20:31:18] <ljharb> yes, optional chaining looks for "nullishness"
[20:32:25] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56)
[20:33:11] <banana_> I just don't like how ?. looks
[20:33:33] <banana_> but yeah it's useful
[20:34:05] <doug16k_> I have wanted to short circuit call too, there's no ?( because it is utterly ambiguous with the conditional operator (ternary)
[20:34:50] <doug16k_> only when it doesn't find a ':' does it blow up
[20:36:36] <doug16k_> ah, you can ?.() call? wow
[20:36:40] <doug16k_> glad you mentioned it
[20:36:42] <ljharb> n> null?.() @ doug16k_
[20:36:43] <jellobot> doug16k_, undefined
[20:37:24] <banana_> nice!
[20:37:52] <banana_> idk
[20:37:57] <banana_> that's looks even uglier
[20:38:20] <doug16k_> yeah but vs this.props.onChange && this.props.onChange(whatever)
[20:38:28] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[20:38:45] <doug16k_> fixes "echo in here"
[20:39:34] <banana_> what about const onChange = this.props.onChange ?? () => {};
[20:39:55] <doug16k_> because props change
[20:40:06] <banana_> oh because onChange might be an instance method?
[20:40:20] <doug16k_> they might change what they said in their onChange={something}
[20:40:25] <ljharb> but also, never do `this.props.something()` because that exposes the `this.props` as the receiver to the function
[20:40:34] <ljharb> ALWAYS destructure props off of the props object before doing anything with them
[20:41:02] <banana_> so wouldn't calling onChange as a function do that? ljharb
[20:41:17] <banana_> youre saying never call it as a method
[20:41:24] <doug16k_> yeah, if it didn't have the thing left of the dot in that call it wouldn't bind it
[20:41:44] <doug16k_> s/bind it/use that as this/
[20:41:48] <ljharb> banana_: right
[20:41:56] <ljharb> `const { onChange } = this.props; onChange()`
[20:42:08] <ljharb> there's a lint rule in eslint-plugin-react that forces it, the airbnb config enables it.
[20:42:15] <doug16k_> do you ever not trust the onChange code? I guess a library writer should worry
[20:43:05] <ljharb> you should never trust anything that's passed to you
[20:43:07] <ljharb> ever
[20:43:31] <doug16k_> yeah but I trust they won't pass function(){} and maliciously play with this
[20:43:45] *** Quits: duuude (~user@user/duuude) (Ping timeout: 248 seconds)
[20:44:31] <doug16k_> because almost every time, the onChange callback is just somewhere else in this same codebase
[20:44:36] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 240 seconds)
[20:44:50] *** Quits: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net) (Ping timeout: 268 seconds)
[20:45:03] <doug16k_> but yeah, I'll probably be all paranoid about this in callbacks now :D
[20:45:36] <doug16k_> almost every time they passed () => {}, not function(){}
[20:45:52] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56) (Remote host closed the connection)
[20:45:54] <doug16k_> maybe even every
[20:46:04] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b532:727f:d346:1e56)
[20:48:13] *** Joins: clamiax (~clamiax@net-93-65-240-235.cust.vodafonedsl.it)
[20:48:19] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:55:29] *** Quits: adroitmachine (~adroitmac@182.64.104.84) (Ping timeout: 248 seconds)
[20:55:45] <ljharb> doug16k_: you shouldn't trust that :-)
[20:55:53] *** Joins: matsaman (~matsaman@user/matsaman)
[20:55:57] <ljharb> the `this` is just as much something you pass to a function as the arguments are
[20:56:16] <banana_> rusty with jsx
[20:56:20] <banana_> so onChange={function() { saveThis(this)} }
[20:56:25] <doug16k_> yeah, you should not pass inappropriate this
[20:56:41] <banana_> and saveThis is like an ajax call
[20:57:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:57:30] *** Joins: dvanloon3 (~dvanloon@user/dvanloon)
[20:57:56] *** Joins: wyclif (~wyclif@user/wyclif)
[20:58:05] <doug16k_> props is weird because the code that gave onChange is the same code that gave the values for the props as attributes, so it isn't super useful to be able to maliciously modify the values you passed anyway
[20:58:20] <banana_> so onChange={function() { this.someInternalProperty = null; } }
[20:58:24] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 268 seconds)
[20:58:24] *** dvanloon3 is now known as dvanloon
[20:59:00] *** Joins: suss (~user@user/suss)
[20:59:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[20:59:42] <banana_> yeah because this would be `this.props`
[20:59:56] <banana_> from where it's called
[21:01:19] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:5019:823:a50e:5ee6)
[21:02:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:03:11] <doug16k_> as a library writer, it would be bad to set that precedent, someone out there will "try it and see" and appreciate how they can screw around with props in onChange, and you have to preserve it or break them
[21:03:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:03:59] <doug16k_> even without security issues
[21:04:58] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[21:13:18] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[21:13:18] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[21:13:18] *** Joins: nortoh (~nortoh@user/nortoh)
[21:13:58] *** Joins: adroitmachine (~adroitmac@182.64.104.84)
[21:17:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:20:39] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Quit: rewrit3)
[21:23:39] *** Joins: duuude (~user@user/duuude)
[21:25:26] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:27:07] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f)
[21:27:44] *** Quits: DnzAtWrk (~DnzAtWrk@1091.pc.puv.fi) (Read error: Connection reset by peer)
[21:28:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[21:28:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:30:28] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[21:32:00] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[21:34:11] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[21:34:36] *** Joins: src (~src@user/src)
[21:34:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 248 seconds)
[21:35:18] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[21:36:41] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:41:09] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[21:43:29] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[21:44:59] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:45:50] *** Quits: adroitmachine (~adroitmac@182.64.104.84) (Ping timeout: 246 seconds)
[21:48:21] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[21:50:02] <austincheney> banana_, you can also use 'event.target' to gather the element node on which the event fired.  event is the first argument of event handlers
[21:50:24] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[21:50:56] <d[10]> Anyone know use whatsapp web via QR code in your app ? It`s possible ?
[21:50:58] <banana_> austincheney: you meant me or someone else?
[21:51:00] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: leaving)
[21:51:15] <austincheney> i meant you
[21:51:44] <austincheney> there is no reason to use "this" in an event handler
[21:51:58] *** Quits: sfields_ (~sfields@2605:a601:adea:7a00:b0f3:92c0:5031:4a99) (Read error: Connection reset by peer)
[21:52:58] <banana_> yeah that was about a component callback getting invoked as a method
[21:53:25] <banana_> and the security issues I guess involving that.
[21:54:33] <DPA> "this" and "event.target" aren't the same. "event.target" may return to a child node, if the event bubbled up, while "this" would still refer to the EventTarget the event handler was registered on.
[21:54:59] *** Quits: entropy_ (~ent@user/entropy/x-9891564) (Ping timeout: 250 seconds)
[21:56:19] <banana_> wait
[21:56:25] <banana_> isnt that currentTarget
[21:56:59] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[21:57:04] <banana_> I guess specificaly what you said depends on if it's capture or bubble mode
[21:57:15] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:5c2a:80c9:a714:be65) (Remote host closed the connection)
[21:57:52] *** Joins: EgonX (~EgonX@38.66.76.50)
[21:58:47] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:58:53] *** Quits: EgonX (~EgonX@38.66.76.50) (Remote host closed the connection)
[21:59:13] <DPA> I never used currentTarget so far, I didn't even know it existed.
[21:59:27] *** Joins: EgonX (~EgonX@38.66.76.50)
[21:59:43] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[22:00:21] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[22:01:08] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[22:02:58] <austincheney> banana_, currentTarget returns the node in which the user interacted while target returns the node on which the handler is bound
[22:07:37] <DPA> The other way around. Also, technically, it's possible to instantiate and derive things from EventTarget, and register listeners on that & dispatch events on it. In that case, this, event.currentTarget and event.target may not be an instance of Node.
[22:08:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[22:10:23] *** Quits: doug16k_ (~doug16k@172-97-188-4.cpe.distributel.net) (Remote host closed the connection)
[22:10:23] *** Quits: doug16k (~doug16k@172-97-188-4.cpe.distributel.net) (Remote host closed the connection)
[22:10:36] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:f438:106:9b95:3ff8)
[22:11:07] *** Joins: doug16k (~doug16k@172-97-188-4.cpe.distributel.net)
[22:12:30] <DPA> https://jsfiddle.net/ewyjaq7n/
[22:13:23] <doug16k> jquery does stuff with this on event handlers. that might be where the confusion comes from
[22:14:34] *** Joins: Kortalh (~Kortalh@cpe-70-92-10-255.wi.res.rr.com)
[22:15:41] <doug16k> IIRC this would be event.currentTarget
[22:16:26] <doug16k> the element where they added the event listener that it is running right now
[22:17:14] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[22:17:43] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[22:21:18] *** Quits: dionysus69 (~Thunderbi@176.221.255.69) (Ping timeout: 260 seconds)
[22:21:53] *** Joins: wyclif (~wyclif@user/wyclif)
[22:23:20] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[22:24:27] *** Joins: funhouse (~funhouse@user/funhouse)
[22:24:36] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[22:26:23] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[22:28:03] *** Quits: nomic (~nomic@85.203.36.64) (Quit: Leaving)
[22:28:27] *** Quits: pydev (~pydev3@2001:b07:5d28:551:22e8:cddf:3a88:5d30) (Ping timeout: 260 seconds)
[22:29:21] *** Quits: Kortalh (~Kortalh@cpe-70-92-10-255.wi.res.rr.com) (Ping timeout: 248 seconds)
[22:30:21] *** Quits: Minall (~Minall@188.26.198.55) (Quit: Connection closed)
[22:31:44] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-e4f8-bd3f-9136-d580.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:34:29] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[22:35:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:35:40] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:35:50] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[22:37:38] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f) (Ping timeout: 260 seconds)
[22:39:47] *** Joins: austincheney_ (~austinche@2600:1700:70e1:14b8:f982:507a:283b:3df9)
[22:42:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[22:42:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:42:51] *** Quits: austincheney (~austinche@2600:1700:70e1:14b8:f982:507a:283b:3df9) (Ping timeout: 245 seconds)
[22:44:14] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[22:44:14] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[22:44:14] *** Joins: nortoh (~nortoh@user/nortoh)
[22:44:21] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-f1ec-d7f3-37e1-032c.res6.spectrum.com)
[22:47:55] *** Quits: kmh (~kmh@2a00:6020:5004:6800:7cc4:ef37:712f:623d) (Quit: Leaving)
[22:50:26] *** Joins: pulse (~pulse@user/pulse)
[22:54:19] *** Joins: anomal (~anomal@87.227.196.109)
[22:54:32] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[22:55:57] *** Joins: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a)
[22:56:53] *** Quits: hax (~hax@user/hax) (Remote host closed the connection)
[22:58:02] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 268 seconds)
[22:58:26] *** Quits: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a) (Remote host closed the connection)
[22:58:37] *** Joins: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a)
[22:58:42] *** Joins: wolfshappen (~waff@irc.furworks.de)
[22:58:47] *** Quits: jsmooth (~quassel@user/jsmooth) (Quit: jsmooth)
[22:59:38] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[23:01:13] *** Quits: d[10] (~d10]@2804:2488:1083:1190:35c0:f429:7007:63ab) (Quit: Client closed)
[23:06:14] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[23:07:01] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:07:16] *** Joins: nomic (~nomic@85.203.36.64)
[23:07:57] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:09:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:11:44] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[23:13:48] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[23:15:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:15:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[23:17:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:17:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:17:36] *** Joins: wroathe (~wroathe@user/wroathe)
[23:17:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:17:43] *** Joins: austincheney__ (~austinche@2600:1700:70e1:14b8:f982:507a:283b:3df9)
[23:21:01] *** Quits: austincheney_ (~austinche@2600:1700:70e1:14b8:f982:507a:283b:3df9) (Ping timeout: 250 seconds)
