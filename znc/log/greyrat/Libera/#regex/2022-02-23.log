[00:04:02] *** Quits: re101-gerbil-20 (~re101-ger@17.90.99.34.bc.googleusercontent.com) (Quit: Client closed)
[00:10:49] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[00:19:11] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[00:19:15] <mike18> hi OnlineCop
[00:19:18] <mike18> still around?
[00:19:41] <OnlineCop> Yep. At work so I usually see pings, but don't really check otherwise.
[00:20:19] <mike18> OnlineCop: different question
[00:20:30] <mike18> you know what a package manager does?
[00:20:50] <mike18> how you call the package you want to install and the other packages it needs for installation?
[00:21:17] <OnlineCop> Like `apt-get`, chocolatey, etc.?
[00:21:21] <mike18> yeah
[00:21:24] <OnlineCop> Sure.
[00:21:39] <mike18> you have a main package and dependency pkg?
[00:22:36] <OnlineCop> Alright...
[00:23:26] <OnlineCop> In a Python project, I might have a `requirements.txt` that I `pip install -r` from, sure.
[00:30:17] *** Quits: timm (~timm@user/timm) (Quit: Leaving)
[00:31:42] *** Joins: lavaball (felix@31.204.155.215)
[00:32:30] *** Joins: timm (~timm@user/timm)
[00:35:17] *** timm is now known as f00
[00:52:11] *** Joins: romel (~romel@romel.org.ua)
[00:52:47] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:54:20] <romel> hello everyone. can someone take a look at my regex? i'm banging my head over the desk trying to figure out why the 1st letter of second and third words are not being excluded: https://regex101.com/r/Fukfwf/1
[00:56:12] <romel> i'm sorry, here's the right one: https://regex101.com/r/knNQL7/1
[00:57:12] <OnlineCop> `(?!` says that at the current point, look to the right. The first group says that at the ^ (start of line), match a `\w`. If that is true, then `(?!` will fail there.
[01:00:56] <OnlineCop> In the case of the `\s\w`, you're saying "assert that to the right of THIS position, it will find a `\S`.
[01:02:28] <OnlineCop> So between the last 'o' of "Foo" and the space before the 'B' in "Bar", the `\s\w` will fail and the `\S` after the group is never checked. So it moves along to the next character, which is now between the space between "Foo" and "Bar" and the 'B' in "Bar". It asserts that to the right, the next character isn't ^ (at the start of the line) OR \s (any whitespace).
[01:03:17] <OnlineCop> Since 'B' is not at the start of the line AND 'B' is not whitespace, then that `(?!...)` does not assert [false] and it continues to look at the `\S`, which is valid, and therefore can match the 'B'.
[01:04:49] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:05:09] <romel> thank you for a such detailed explanation. i appreciate it a lot
[01:07:58] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 250 seconds)
[01:17:21] <OnlineCop> I think people will often do `(?:^|\s)\S` in what I believe you're trying to do.
[01:19:12] <romel> i'm trying to mask (replace with X) everything except first character in every part of string separated with whitespace
[01:28:30] <romel> it works almost like i expect if i replace \s\w with \w\s and that makes me sad lol
[01:30:51] <romel> ok i see that my regex is too naive and what i'm trying to achieve needs more compexity i guess
[01:31:55] <OnlineCop> Which regex engine/flavor are you using? ECMAScript/Javascript?
[01:32:08] <romel> yes
[01:32:37] <OnlineCop> `(?<=\b\w+)\w` replaced with 'X' would probably do what you want (at least, within vscode it appears to).
[01:32:51] *** Joins: oprypin (~irc@pryp.in)
[01:32:54] <OnlineCop> https://regex101.com/r/knNQL7/2
[01:34:40] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[01:39:29] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[01:39:58] <romel> thank you. the problem with boundaries is that they exclude non-word characters which is required in my case. will try to replace \b with its' modified alternative 
[01:40:22] <OnlineCop> ECMAScript allows for variable-length look-behinds.
[01:41:13] <OnlineCop> So `(?<=^\S+|\s\S+)\S+` should also work.
[01:41:46] <OnlineCop> Er, remove the trailing '+' after the last `\S`.
[01:41:52] <OnlineCop> https://regex101.com/r/knNQL7/3
[01:42:14] *** Joins: rvalue (~rvalue@user/rvalue)
[01:43:27] <romel> yea, that's exactly what i need. thank you! 
[01:43:39] * romel hugs OnlineCop 
[01:59:33] *** Quits: dandyn (~dandyn@user/dandyn) (Quit: Client closed)
[02:01:25] *** Joins: luva3 (~luva@185.168.9.242)
[02:02:02] *** Quits: luva (~luva@45.141.152.52) (Ping timeout: 260 seconds)
[02:02:02] *** luva3 is now known as luva
[02:05:01] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Ping timeout: 272 seconds)
[02:06:35] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[02:12:41] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Ping timeout: 256 seconds)
[02:14:27] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[02:15:03] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Max SendQ exceeded)
[02:20:54] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[02:23:29] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:34:51] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[02:40:51] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:42:59] *** Joins: karakedi (~eAC53C340@user/karakedi)
[02:49:23] *** Joins: re101-somali-7 (~re101-som@88.241.93.224)
[02:51:05] *** Quits: re101-somali-7 (~re101-som@88.241.93.224) (Client Quit)
[03:08:02] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[03:08:33] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Read error: Connection reset by peer)
[03:09:29] *** Joins: cebor (~cebor@user/cebor)
[03:13:51] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[03:25:06] *** Parts: thd (~user@45.76.37.129) ()
[03:38:39] *** Joins: adeliktas1 (~adeliktas@i5C758C3B.versanet.de)
[03:40:38] *** Quits: adeliktas (~adeliktas@i59F4A44B.versanet.de) (Ping timeout: 272 seconds)
[03:40:39] *** adeliktas1 is now known as adeliktas
[04:19:17] *** Quits: f00 (~timm@user/timm) (Ping timeout: 240 seconds)
[04:33:09] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:33:38] *** Joins: mickey8 (~user@user/mickey)
[04:34:56] *** Joins: adeliktas3 (~adeliktas@i59F52843.versanet.de)
[04:37:00] *** Quits: adeliktas (~adeliktas@i5C758C3B.versanet.de) (Ping timeout: 272 seconds)
[04:37:01] *** adeliktas3 is now known as adeliktas
[04:46:45] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[04:48:43] *** Joins: dob1 (~dob1@user/dob1)
[04:51:09] *** Joins: re101-boykin-43 (~re101-boy@69.52.12.36)
[04:54:38] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[04:56:36] *** Quits: re101-boykin-43 (~re101-boy@69.52.12.36) (Quit: Client closed)
[04:59:14] *** Joins: re101-boykin-43 (~re101-boy@69.52.12.38)
[04:59:19] <re101-boykin-43> https://regex101.com/r/4WYet3/1
[04:59:57] <re101-boykin-43> looking to extract the URL - https://webster.bfm.com/Wiki/display/DPR/%28DRAFT%29Investigations.It starts with https
[05:00:17] *** Joins: dob1 (~dob1@user/dob1)
[05:03:00] <OnlineCop> Remove the '^'
[05:03:10] <OnlineCop> https://regex101.com/r/4WYet3/2
[05:03:58] <OnlineCop> '^' means that it's only valid at the beginning of the entire string/line. In your case, the beginning of the line is "GET /
[05:07:30] <re101-boykin-43> where can I give the field name to extract?
[05:07:48] <re101-boykin-43> I would like to extract that into some field x
[05:08:44] <OnlineCop> I don't even know what program you're using.
[05:09:03] <re101-boykin-43> Splunk
[05:09:19] <OnlineCop> That's beyond what I know, sorry.
[05:09:59] *** Joins: re101-dhole-19 (~re101-dho@2402:1980:2a4:29ad:78d4:50e6:768d:e8e2)
[05:10:18] <re101-boykin-43> No problem
[05:10:20] <re101-boykin-43> Thanks
[05:10:25] *** Quits: re101-boykin-43 (~re101-boy@69.52.12.38) (Quit: Client closed)
[05:19:41] *** Quits: re101-dhole-19 (~re101-dho@2402:1980:2a4:29ad:78d4:50e6:768d:e8e2) (Ping timeout: 256 seconds)
[05:25:51] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[05:27:19] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[05:30:11] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:59] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:59] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:59] *** Joins: maetthew (~maetthew@user/maetthew)
[05:40:55] *** Joins: xmb (~xmb@178.197.197.147)
[06:33:17] *** Joins: src (~src@user/src)
[06:43:26] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[06:44:12] *** Joins: dob1 (~dob1@user/dob1)
[06:55:30] *** Joins: re101-lemur-13 (~re101-lem@36.248.246.254)
[07:00:46] *** Joins: adeliktas9 (~adeliktas@i59f4a288.versanet.de)
[07:02:12] *** Quits: adeliktas (~adeliktas@i59F52843.versanet.de) (Ping timeout: 240 seconds)
[07:02:12] *** adeliktas9 is now known as adeliktas
[07:11:53] *** Quits: re101-lemur-13 (~re101-lem@36.248.246.254) (Ping timeout: 256 seconds)
[07:15:13] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[07:15:33] *** Joins: dob1 (~dob1@user/dob1)
[07:48:17] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[07:48:32] *** Joins: mickey8 (~user@user/mickey)
[09:40:13] *** Joins: Rahul (~Rahul@182.79.41.202)
[09:40:21] <Rahul> https://regex101.com/r/vzaHph/1
[09:41:04] <Rahul> Need to get the word or words after the symbol "-". Using .NET and groupings do not work
[09:43:12] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[09:46:17] <digitok> https://regex101.com/r/vzaHph/2
[09:46:43] <digitok> or https://regex101.com/r/vzaHph/3
[09:47:07] <Rahul> it did not catch the last letter
[09:47:11] <Rahul> in the 1st instance
[09:48:46] <Rahul> sorry it was a glitch at my end :)
[09:49:23] <digitok> :)
[09:49:53] <digitok> you mean on regex101 right? i have noticed the same glitch a few times
[09:50:11] <digitok> i should probably report it to Lindrian
[09:53:44] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:54:42] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:58:39] <Rahul> yes in regex101
[09:58:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:04:43] *** Quits: Rahul (~Rahul@182.79.41.202) (Ping timeout: 256 seconds)
[10:51:35] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[10:57:56] *** Quits: xmb (~xmb@178.197.197.147) (Read error: Connection reset by peer)
[11:03:33] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Remote host closed the connection)
[11:13:41] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[11:20:12] *** Joins: palasso (~palasso@user/palasso)
[11:36:29] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:47] *** Joins: lavaball (felix@31.204.155.215)
[11:41:43] *** Joins: re101-wrasse-6 (~re101-wra@103.119.255.136)
[11:42:04] <Lindrian> digitok what glitch?
[11:42:11] <re101-wrasse-6> Hi All, need some help is writing a json path with an expression, can someone help
[11:45:36] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:7799:3815:c396:4ca9:5cba) (Read error: Connection reset by peer)
[11:46:33] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:91d3:ad70:883:d1c2)
[11:47:26] <re101-wrasse-6> or is there a portal where I can get the live support for jsonpaths?
[11:52:01] <re101-wrasse-6> can someone pls help :(
[11:59:11] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 256 seconds)
[11:59:55] <Lindrian> re101-wrasse-6 ask and post an example and someone will likely help when they have time :)
[12:01:10] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[12:01:30] *** Joins: mickey8 (~user@user/mickey)
[12:02:03] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[12:05:52] <re101-wrasse-6> Lindrian: yeah but not sure how to share that json body
[12:06:09] <Lindrian> re101-wrasse-6: save it on regex101 and send the link here
[12:12:56] <re101-wrasse-6> I got the solution, thanks for the help
[12:12:58] <re101-wrasse-6> :D
[12:17:04] <Lindrian> re101-wrasse-6: yay :D
[12:17:23] *** Quits: re101-wrasse-6 (~re101-wra@103.119.255.136) (Quit: Client closed)
[12:30:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[12:31:27] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:33:02] *** Joins: f00 (~timm@user/timm)
[12:35:22] *** Joins: re101-wolf-21 (~re101-wol@115.254.39.20)
[12:36:08] <re101-wolf-21> need regex for month , should include values like (1-12) and (01-12)
[12:37:49] <re101-wolf-21> using Java 8 spring boot
[12:37:57] <re101-wolf-21> need regex for javax validation
[12:40:56] <re101-wolf-21> My regex - ([1-9]|1[0-2])
[12:41:08] <re101-wolf-21> But it is not accepting all values
[12:55:48] *** Quits: re101-wolf-21 (~re101-wol@115.254.39.20) (Quit: Client closed)
[13:13:41] <digitok> 07Lindrian, i might have to take a screenshot when it happens again. basically the test string highlight is drawn 1-2 chars to the left and it will not update until you modify the test string (modifying the regex does not cause it to update)
[13:26:24] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Quit: *evaporates*)
[13:26:25] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:27:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[13:30:44] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:31:03] *** Joins: mickey8 (~user@user/mickey)
[13:44:17] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 240 seconds)
[13:46:58] *** Joins: lavaball (felix@31.204.155.215)
[13:50:00] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[13:55:24] *** Quits: dob1 (~dob1@user/dob1) (Read error: Connection reset by peer)
[13:55:43] *** Joins: dob1 (~dob1@user/dob1)
[13:58:03] *** Quits: src (~src@user/src) (Quit: Leaving)
[13:58:56] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[14:14:25] *** Joins: re101-goose-30 (~re101-goo@h-79-136-43-152.A357.priv.bahnhof.se)
[14:18:31] *** Quits: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Read error: Connection reset by peer)
[14:18:35] <re101-goose-30> Hi there, I'm trying to rework my regex to not match the version number on line 1 in my example. Its misinterpreted as an IPAddress. https://regex101.com/r/hqkM7r/2
[14:19:03] *** Joins: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[14:29:18] <digitok> 07re101-goose-30, what is the last alternation inside <source> supposed to match?
[14:30:08] <digitok> right now it is only matching hosts that have no port
[14:30:26] <digitok> so maybe that is it
[14:32:00] <digitok> https://regex101.com/r/hqkM7r/3 see if this helps
[14:34:02] <purplex> "Windows/x86_64 11.0.1.19" is probably what he meant being version
[14:34:53] <purplex> if so then maybe we need catch IP from (?:login\ from\ |IP\ address\ )
[14:36:03] <re101-goose-30> yes, its ip, hosts with ports and then just hosts
[14:36:34] <purplex> is it windows 11 full version number?
[14:36:37] <digitok> oh, i did not even do the bit he asked for LOL
[14:36:47] <digitok> i got sidetracked messing with the regex
[14:37:49] <re101-goose-30> so my regex is supposed to capture the date as a group, the full message as a group but extract the source (ip, domains etc) as a group
[14:38:11] <purplex> yep we know
[14:38:18] <re101-goose-30> its my first ever regex attempt
[14:38:22] * digitok opens the link again
[14:38:24] <re101-goose-30> the version number seems to be the antivirus
[14:38:32] <purplex> good attempt
[14:38:34] <digitok> well, you did very well
[14:38:53] <purplex> im purplexed
[14:38:55] <re101-goose-30> well thanks
[14:39:03] <digitok> so you are saying that line 1 should not match at all?
[14:39:24] <re101-goose-30> basically thats what I'm saying
[14:39:43] <re101-goose-30> since its nothing about external traffic really
[14:39:57] <digitok> would it work if we said ip addresses must be preceded by "from" or "address" ?
[14:40:00] <digitok> that matches all of your examples
[14:40:57] <re101-goose-30> yes maybe...I tried to incorporate a [^()] to never match things in parantheses but couldn't get it work they way it wanted it.
[14:41:14] <re101-goose-30> *the way I wanted it
[14:41:47] <purplex> when did you finish learning regex? re101-goose-30
[14:41:55] <digitok> which language/tool are you using the regex in?
[14:41:56] <re101-goose-30> I began yesterday
[14:42:09] <purplex> im more purplexed
[14:42:26] <re101-goose-30> the regex101 had lots of good reading in the right side pane at the bottom
[14:42:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[14:43:01] <purplex> did you find #regex yesterday as well?
[14:43:02] <digitok> :D
[14:43:20] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:43:46] <re101-goose-30> not really, I've done splitting and joining based on specific characters before (like literal characters) and knew regex was something I had to pick up on
[14:44:17] <digitok> back to the serious business
[14:44:21] <digitok> which language/tool are you using the regex in?
[14:44:36] <purplex> did you use regular-expression.info? just one question
[14:44:59] <re101-goose-30> thats a website?
[14:45:00] <re101-goose-30> no
[14:45:08] <purplex> picked up pretty quickly
[14:45:16] <re101-goose-30> just regex101 only really
[14:45:17] <purplex> now answer digitok's question
[14:45:22] <re101-goose-30> did my testing with the regex in powershell
[14:45:25] <digitok> yes, stop sidetracking them
[14:45:40] <re101-goose-30> sorry, missed that one
[14:45:40] <digitok> "just one question"
[14:45:43] <re101-goose-30> I'm using PowerShell
[14:45:53] <digitok> perfect
[14:46:18] <digitok> https://regex101.com/r/hqkM7r/4
[14:46:33] <re101-goose-30> e.g
[14:46:33] <re101-goose-30> $string = "the strings in the log per line"
[14:46:34] <re101-goose-30> [regex]$regex = "(?>\[)(?<DATE>[0-9a-zA-Z\s\/:]+)(?>\]\s)(?<MESSAGE>.+\s(?<SOURCE>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|\S+[a-zA-Z]+\.[a-zA-Z]{2,3}\:[0-9]+|[a-zA-Z.]+[^@][a-zA-Z]+\.[a-zA-Z]{2,3}).+)"
[14:46:34] <re101-goose-30> $regex.match($string).captures.groups
[14:46:35] *** rebot sets mode: +q re101-goose-30!*@*
[14:46:36] <rebot> 14re101-goose-30: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[14:47:05] *** rebot sets mode: -q re101-goose-30!*@*
[14:47:28] <purplex> yep you can't paste your 30 lines of code here
[14:48:13] <re101-goose-30> I didn't?
[14:48:19] <re101-goose-30> it was 3 lines :)
[14:48:36] <re101-goose-30> thanks digitok, now I'm purplexed :D
[14:49:10] <re101-goose-30> I'll now need to understand this new regex hehe
[14:49:11] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[14:49:30] <re101-goose-30> !paste
[14:49:31] <perlbot> Please use https://bpa.st/ for sharing large amounts of code/data, or https://ideone.com/ to share an executable code sample.
[14:49:49] <digitok> if it was 3 lines, we got them :p
[14:50:29] <re101-goose-30> yeah it was https://bpa.st/WF4Q
[14:52:50] <re101-goose-30> so digitok, mind telling me apart from the new "from address" you did some none-capturing groups? wouldn't that make the alternations to not be captured? I can see that they aren't ignored however.
[14:53:58] <re101-goose-30> its so much shorter! haha I feel bad now
[14:55:09] <digitok> nah, you did great honestly
[14:55:24] <re101-goose-30> when would you chose to use [a-zA-Z] or even [0-9] as opposed to \w or \d? Also, what does [\w-] match?
[14:55:34] <digitok> the non-capturing groups i used are to prevent those portions from being captured, but SOURCE will still be captured
[14:56:00] <digitok> personally, i always use \d instead of [0-9] if it is available
[14:56:15] <digitok> \w includes a-zA-Z0-9_, so technically it is also allowing _
[14:56:19] <re101-goose-30> so by putting the non-capturing groups within another group, the overlying group will capture it?
[14:56:42] <digitok> yep
[14:56:48] <re101-goose-30> gotcha
[14:57:02] <re101-goose-30> \w captures digits as well?
[14:57:23] <purplex> lol
[14:57:30] <purplex> yes
[14:57:32] <re101-goose-30> what is the dash then doing inside the critera claus?
[14:57:52] <re101-goose-30> purplex thanks, sorry for the 100 questions
[14:58:18] <purplex> you can ask 200
[14:58:39] <re101-goose-30> ok, noted. (counter started) :D
[15:03:00] <purplex> which part? where's the dash?
[15:03:40] <re101-goose-30> the [\w-]
[15:04:09] <purplex> yes that means a character set of a to z, A to Z, _ and - as well
[15:04:32] <re101-goose-30> ah because domains can have _ and -?
[15:05:48] <purplex> also .
[15:06:02] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[15:06:35] <Lindrian> digitok interesting, do you have line numbers enabled?
[15:06:53] <digitok> nope
[15:07:01] <re101-goose-30> Also, I really dont want to sound greedy, but I failed to mention that one major part in this assignment of mine was to optimize the speed of this implementation as well. I can see that my previous regex performed 102 matches within 9ms and the new one performed 101 matches (the first line was ignored as I wanted) in 22 ms. That's more than the
[15:07:02] <re101-goose-30> double... why do you reckon that is? I sort of stayed away from lookbehinds due to my theoretical belief that it would perform worse.
[15:08:05] <Lindrian> digitok: interesting. During page load? Randomly when using the site after initial load? Did you resize anything?
[15:08:06] <re101-goose-30> oh I missed that I could do regex pun with that message :D  greedy.
[15:08:11] <Lindrian> Also, which browser?
[15:09:18] <re101-goose-30> I'm using Firefox today, yesterday it was Edge though
[15:09:22] <digitok> lol
[15:09:22] *** Joins: dob1 (~dob1@user/dob1)
[15:09:34] <digitok> 07re101-goose-30, where are you getting the execution times from?
[15:09:38] <digitok> re101?
[15:09:41] <re101-goose-30> yes
[15:09:49] <digitok> i would not rely on those
[15:10:04] <re101-goose-30> ok
[15:10:10] *** re101-goose-30 is now known as M3r
[15:10:16] <digitok> the dev is, how do you say, a noob
[15:10:21] <digitok> jk
[15:10:44] <M3r> haha!
[15:12:22] <M3r> I tried capturing the top domain part using [a-zA-Z]{2,3} but I realized now that this would only capture the legacy top domains not the newer ones like .ninja or .blog etc
[15:12:32] <digitok> yep
[15:13:05] <M3r> is there any better algorithm for such?
[15:14:09] <M3r> from a theoretical standpoint, it feels as if I do [a-zA-Z]{2,30} for example, I could get some false positive matches that incorporates a dot as separator?
[15:14:54] <digitok> i am not sure how you might avoid that
[15:16:51] <M3r> ok, time (the logs) will tell :)
[15:17:20] <M3r> another question, what does \b do?
[15:17:59] <M3r> I mean I know it says its a word boundary... but what is that?
[15:18:42] <digitok> it is a zero-width assertion that matches between a word character (\w, being a-zA-Z0-9_) and a non-word character (or nothing)
[15:19:13] <digitok> so \bword\b matches "@word@" but not "aword" or "words"
[15:22:48] *** Joins: p-i-_ (~Ohmu@183.89.27.225)
[15:24:41] <M3r> so anytime its a word? using what dictionary?
[15:24:53] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[15:25:07] <M3r> never mind, scratch that
[15:25:28] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Remote host closed the connection)
[15:25:35] <digitok> :p
[15:25:43] *** Quits: p-i- (~Ohmu@2403:6200:8978:7799:91d3:ad70:883:d1c2) (Ping timeout: 250 seconds)
[15:25:58] <digitok> that is technically a valid question
[15:26:16] <digitok> in most languages, if you enable unicode mode, \w will match non-english letters/numbers
[15:27:27] <M3r> ok
[15:28:14] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[15:28:19] <M3r> so youre part thats capturing the IP is (?:\d{1,3}\.){3}\d{1,3} which is taking 1-3 digits and does that 3 times and then one last digit 1-3 times?
[15:29:11] <M3r> so youre part thats capturing the IP is (?:\d{1,3}\.){3}\d{1,3} which is taking 1-3 digits and immediately followed by a dot and does that 3 times and then one last digit 1-3 times?
[15:31:24] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[15:31:54] <digitok> yep
[15:35:13] <M3r> the domain part seems to puzzle me a bit as well... the regex is alternating from ip using | (pipe) in a new non-capturing group [\w-]+\. to capture all "supported" sub and root domains, and then all top level domains using [a-zA-Z]{2,3} followed by another non-capturing group that matches :<port> using :\d+ but I don't understand how that last
[15:35:14] <M3r> part is alternating between this.domain.com and this.domain.com:123 since there isn't any pipe for alternation? it seems to my very limited knowledge of regex so far that this would match only this.domain.com:123 and never this.domain.com.
[15:38:23] <digitok> the ? quantifier after the non-capturing group represents {0,1}, making the contents of the group optional
[15:39:20] <M3r> oh, cool! Didn't know that.
[15:40:25] <M3r> I think I'm getting the hang of your query now.
[15:41:33] <digitok> you are certainly picking it up very quickly :) regex tends to be a steep learning curve for most ppl
[15:42:10] <M3r> Oh and in the last part of the query, in the MESSAGE group, we're continuing to capture the message using \b.* but I cannot understand how this \b is needed in there since I'm getting the same result without \b whilst keeping the .*
[15:43:52] <M3r> I can see how that could be the case definitely, I've avoided it since people always told me its a whole new science basically requiring lots of reading
[15:44:30] <M3r> I guess practicing with regex101 is very quick
[15:45:55] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:46:36] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 240 seconds)
[15:48:53] <digitok> indeed, regex101 is excellent
[15:49:02] <digitok> and \b is not needed there
[15:49:22] <digitok> i just decided to add it since we were enforcing the \s boundary at the start
[15:50:22] <digitok> it would prevent a match on an ip with more than 4 digits in the last octet, or a tld with more than 3 letters
[15:51:12] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[15:51:12] *** ChanServ sets mode: +v perlbot
[15:51:37] <M3r> aren't we avoiding an IP with 4 digits in the end by doing \d{1-3} ?
[15:52:13] <M3r> same with tld [a-zA-Z]{2,3}
[15:52:41] <digitok> we are avoiding anything after the 3rd digit or letter from being captured into <source>
[15:52:45] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[15:52:49] <digitok> the remainder will be consumed by .*
[15:54:53] <M3r> ok, would that ever occur though... I mean the line would have to be something like xyz zyx 192.168.1.1test or xyz zyx this.domain.comtest where we're ignoring the part test for example?
[15:55:33] <M3r> did I understand it correctly with that statement?
[16:03:58] <digitok> yea, it is unlikely
[16:05:48] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[16:05:59] <digitok> it does kind of fit with what you were saying earlier though, regarding {2,30} for tlds
[16:06:20] <digitok> right now if the tld is .museum, you will match and capture .mus
[16:07:05] <digitok> so at that point you can decide to either add \b and fail the match instead (assuming nothing else in the line can match the required format)
[16:07:21] <digitok> or perhaps just use {2,} and capture any length of tld
[16:09:33] <M3r> so I add {2,} and keep \b ?
[16:14:53] *** Joins: re101-dunker-20 (~re101-dun@cpc116828-kemp8-2-0-cust1673.9-2.cable.virginm.net)
[16:15:11] *** Quits: re101-dunker-20 (~re101-dun@cpc116828-kemp8-2-0-cust1673.9-2.cable.virginm.net) (Client Quit)
[16:17:22] <digitok> you could if you wanted to not match "(.museum)123" where () is the captured portion
[16:17:29] <digitok> but otherwise, just omit \b
[16:20:11] <M3r> Thanks a lot digitok! You've certainly been very helpful with my (novice) questions. Cheers!
[16:20:13] *** Joins: dob1 (~dob1@user/dob1)
[16:22:51] *** Quits: dob1 (~dob1@user/dob1) (Client Quit)
[16:26:21] <digitok> no problem :)
[16:26:51] <digitok> since you seem interested, i will leave you with the following resources
[16:26:55] <digitok> !tuts
[16:26:56] <perlbot> https://www.regular-expressions.info/tutorial.html, http://www.rexegg.com/, https://regexone.com/, https://youtu.be/ubvSjW6Nyqk
[16:26:57] <digitok> !games
[16:26:57] <perlbot> Quiz: https://regex101.com/quiz | Crossword: https://regexcrossword.com/ | Crossword 2: https://jimbly.github.io/regex-crossword/ | Golf: https://alf.nu/RegexGolf | Regex Tuesday: https://callumacrae.github.io/regex-tuesday/ | Regex Koans: https://github.com/frenchroasted/RegexKoans | HackerRank: https://www.hackerrank.com/domains/regex (+code)
[16:27:02] <digitok> have fun :p
[16:28:33] <purplex> guess i can stop the counter now
[16:29:33] <M3r> hahaha purplex how many did I ask? (not including this one)
[16:30:01] <M3r> Oh sweet, RegexKoans.
[16:30:12] *** Quits: p-i-_ (~Ohmu@183.89.27.225) (Read error: Connection reset by peer)
[16:30:50] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:b844:bdaf:8ab7:ed96)
[16:31:05] <purplex> just very few
[16:31:28] <digitok> we had a counter for purplex questions, but it got reset by an outofmemoryexception
[16:32:05] <purplex> that's literally true
[16:32:11] <digitok> lol
[16:32:56] <digitok> 07M3r, btw, if you use/know about irc, this channel is located on the irc.libera.chat network
[16:33:08] <purplex> hope you can beat my world record, m3r
[16:34:08] <M3r> hahah... well I'm not even close with my 22 questions (yes I counted)
[16:35:19] <purplex> that uses only 2 kb of memory
[16:35:27] <M3r> I dont use IRC regularly really, just when I need to ask things for specific things I guess. Like now.
[16:38:07] <M3r> if you define your question as a regex where you include [^?]+ it probably wouldn't hit outofmemoryexception ;)
[16:39:15] *** Joins: nova (~novasenco@user/nova)
[16:40:12] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:7799:28cf:5a29:7ce3:efd1)
[16:43:25] *** Quits: p-i- (~Ohmu@2403:6200:8978:7799:b844:bdaf:8ab7:ed96) (Ping timeout: 256 seconds)
[17:04:31] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) (Remote host closed the connection)
[17:06:14] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[17:08:27] *** Joins: dob1 (~dob1@user/dob1)
[17:18:34] *** Joins: re101-beetle-0 (~re101-bee@mob-5-91-227-174.net.vodafone.it)
[17:18:39] <re101-beetle-0> hi
[17:18:56] <re101-beetle-0> hello
[17:19:30] <re101-beetle-0> how can i remove all text except link whit re.sub() python?
[17:20:12] <digitok> why not just extract links
[17:23:43] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:3169:1651:ead:5ffb)
[17:24:46] *** Joins: re101-dusky-92 (~re101-dus@71-140-200-250.lightspeed.brhmal.sbcglobal.net)
[17:25:01] *** Quits: re101-dusky-92 (~re101-dus@71-140-200-250.lightspeed.brhmal.sbcglobal.net) (Client Quit)
[17:25:05] <re101-beetle-0> because my software use re.sub()
[17:25:47] <M3r> fun fact, I came to realize, I learnt regex on a Twosday. 2022 02 22 which is a palindrome date.
[17:27:28] *** Joins: _sgen (~sgen@2607:fea8:7ce1:c8e0:3169:1651:ead:5ffb)
[17:27:45] <nova> 22 02 2022 is
[17:27:53] *** Parts: nova (~novasenco@user/nova) (â™¥â˜º)
[17:34:52] <tinystoat> i'm going to see if i can get away with this as a question: vim search/replace -> how to capture all lines that do not begin with an asterisk? this isn't working: %s^\([^\*]*\)$@foo \1 bar@
[17:38:24] <purplex> just ^[^\*] is sufficient and then you can add your foo bar stuff
[17:38:34] <M3r> nova yes :)  and 22 02 22 (yy-mm-dd) and 2-22-22 (m-dd-yy)
[17:38:45] *** Quits: _sgen (~sgen@2607:fea8:7ce1:c8e0:3169:1651:ead:5ffb) (Quit: Leaving)
[17:38:45] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:3169:1651:ead:5ffb) (Quit: Leaving)
[17:39:09] <M3r> sorry not yy-mm-dd (yy-m-dd is)
[17:39:56] <purplex> not sure about your flavor, but generally its fine not to escape * inside [ ]
[17:40:38] <tinystoat> purplex: but then i get this error: E65: Illegal back reference
[17:40:51] <tinystoat> hm
[17:41:00] <tinystoat> okay will try a few things here.
[17:41:06] <purplex> right you need to put that into a group
[17:41:32] <purplex> but you had \( so didn't seem like a group
[17:42:15] <purplex> thats why we ask to paste regexes on regex101 alomg with sample
[17:42:22] <tinystoat> purplex: but that's the capture right?
[17:42:34] <tinystoat> ([*]) without the vim crap.
[17:42:41] <tinystoat> isn't that the capture?
[17:42:58] <tinystoat> er ([^*)
[17:43:00] *** Quits: f00 (~timm@user/timm) (Ping timeout: 240 seconds)
[17:43:04] <tinystoat> ffs you know what i mean. :D
[17:43:11] <purplex> yes
[17:43:48] <tinystoat> yeah it's not even capturing on a test: Pattern not found
[17:44:21] <purplex> we can try it on regex101 to make sure it works as expected
[17:44:36] <tinystoat> purplex: ah i was hoping to avoid that because it doesn't work in my browser for some reason.
[17:44:39] <tinystoat> hm.
[17:45:11] <tinystoat> i'll just keep bashing away and see if i can suss it out over here. thanks much for your time, appreciated.
[17:46:15] <tinystoat> purplex: pebkac - got it sorted. thanks again.
[17:47:19] <purplex> maybe you only needed to know how to capture and use \1, np
[17:54:56] *** Joins: re101-bison-30 (~re101-bis@189.4.79.15)
[17:55:16] <digitok> 07M3r, it is also an ambigram
[17:55:33] *** Quits: re101-bison-30 (~re101-bis@189.4.79.15) (Client Quit)
[18:00:42] *** Joins: re101-dusky-35 (~re101-dus@2804:1b1:2104:d45d:bc31:9a77:1917:89c0)
[18:02:14] *** Quits: re101-dusky-35 (~re101-dus@2804:1b1:2104:d45d:bc31:9a77:1917:89c0) (Client Quit)
[18:11:52] *** Quits: re101-beetle-0 (~re101-bee@mob-5-91-227-174.net.vodafone.it) (Quit: Client closed)
[18:15:33] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:24:08] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Ping timeout: 272 seconds)
[18:24:34] *** Joins: f00 (~timm@user/timm)
[19:08:14] *** Joins: re101-wolf-21 (~re101-wol@115.254.39.20)
[19:14:27] *** Joins: re101-wombat-26 (~re101-wom@64.137.149.221)
[19:14:40] *** Quits: re101-wombat-26 (~re101-wom@64.137.149.221) (Client Quit)
[19:22:53] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 256 seconds)
[19:26:43] *** Quits: re101-wolf-21 (~re101-wol@115.254.39.20) (Quit: Client closed)
[20:08:23] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[20:10:09] *** Joins: mintograde (~mintograd@47.201.5.61)
[20:15:33] *** Joins: re101-beagle-2 (~re101-bea@047-233-046-055.res.spectrum.com)
[20:15:55] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:17:11] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[20:27:50] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:b1b3:9fbe:b0e5:5c9b)
[20:29:37] *** Quits: subie (~subie@2601:4c0:4080:bc0:a4cb:f244:e46f:ab61) (Ping timeout: 240 seconds)
[20:32:35] *** Quits: M3r (~re101-goo@h-79-136-43-152.A357.priv.bahnhof.se) (Ping timeout: 256 seconds)
[20:35:40] *** Quits: re101-beagle-2 (~re101-bea@047-233-046-055.res.spectrum.com) (Quit: Client closed)
[20:39:11] *** Joins: src (~src@user/src)
[20:44:54] *** Joins: dandyn (~dandyn@user/dandyn)
[20:45:28] *** AI4AI is now known as subie
[20:49:00] *** Joins: re101-wasp-87 (~re101-was@134.238.136.59)
[20:49:03] *** Quits: re101-wasp-87 (~re101-was@134.238.136.59) (Client Quit)
[20:57:37] *** Joins: txtsd (~txtsd@user/txtsd)
[20:58:07] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:07:32] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[21:07:39] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[21:19:02] *** Quits: dandyn (~dandyn@user/dandyn) (Quit: Client closed)
[21:34:56] *** Quits: src (~src@user/src) (Ping timeout: 245 seconds)
[21:35:04] *** Joins: src (~src@user/src)
[21:48:37] *** Quits: subie (~subie@2601:4c0:4080:bc0:b1b3:9fbe:b0e5:5c9b) (Ping timeout: 240 seconds)
[21:49:55] *** Joins: subie (~subie@2601:4c0:4080:bc0:b1b3:9fbe:b0e5:5c9b)
[21:59:00] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[22:00:34] *** Joins: rvalue (~rvalue@user/rvalue)
[22:10:26] *** Joins: re101-ferret-90 (~re101-fer@BSN-176-166-60.dynamic.siol.net)
[22:10:39] *** Quits: re101-ferret-90 (~re101-fer@BSN-176-166-60.dynamic.siol.net) (Client Quit)
[22:31:33] <OnlineCop> !vim
[22:31:33] <perlbot> https://remram44.github.io/regex-cheatsheet/regex.html, http://vimdoc.sourceforge.net/htmldoc/pattern.html
[22:50:43] *** Quits: src (~src@user/src) (Quit: Leaving)
[23:05:56] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[23:13:45] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:32:55] *** Joins: lavaball (felix@31.204.155.215)
[23:33:31] *** Joins: re101-okapi-38 (~re101-oka@outbound.bmo.com)
[23:34:41] <re101-okapi-38> Hi everyone,
[23:34:42] <re101-okapi-38> I am looking to develop regex for detecting credit card number including keyword along into Regex.
[23:34:51] <re101-okapi-38> (?=Mastercard)(?=(5[1-5]\d{2}-\d{4}-\d{4}-\d{4}))
[23:35:46] <re101-okapi-38> I know this Regex is not correct, but from this example you will be able to identify what condition I am looking into it.
[23:35:46] <re101-okapi-38> If anyone can help would be really appreciated.
[23:35:55] *** Joins: Release_ (Cappuccino@user/release/x-7132914)
[23:36:15] <re101-okapi-38> Language - Java/Perl
[23:37:52] <OnlineCop> re101-okapi-38: Does your regex need to validate the credit card number, or is that done programmatically?
[23:38:21] <re101-okapi-38> Tool will validate with Luhn check lgo
[23:38:27] <re101-okapi-38> Algo*
[23:38:44] <OnlineCop> `(?<Mastercard>\b5[1-5]\d{2}-\d{4}-\d{4}-\d{4}\b)` would be my first guess.
[23:39:10] <OnlineCop> If you're using Perl (or some other PCRE-compliant engine), you can `(?(DEFINE)...)` the structure of Mastercard, Visa, Discover, etc.
[23:39:35] <OnlineCop> Then you can refer to them with `(?&Mastercard)|(?&Visa)|(?&Discover)|(?&AmEx)|...`
[23:39:51] <re101-okapi-38> Awesome, let me check & try. Really appreciate it.
[23:40:00] <OnlineCop> https://regexpattern.com/credit-card-number/
[23:40:23] <Release_> anyway way to have a regex to monitor for word with the digit 4 in it in the manner of some4word any4word what4ever and soo on
[23:41:06] <OnlineCop> Release_: `\w*4\w*` would be the simplest solution.
[23:41:16] <Release_> let me test that OnlineCop
[23:41:33] <OnlineCop> Of course, that will match `4`, as well as `1234`
[23:41:57] <OnlineCop> Release_: Do you know whether there can be digits before/after it as part of the "word"?
[23:42:29] <Release_> we need only the digit 4 to match
[23:42:35] <Release_> no other digit
[23:42:44] <Release_> in the middle
[23:42:50] <Release_> not at the end or start
[23:42:52] <OnlineCop> Why not just search for '4'?
[23:43:05] <OnlineCop> Should it match in '23456' ?
[23:43:06] <Release_> cause that gets word4 4word too
[23:43:17] <OnlineCop> `\B4\B`
[23:43:23] <Release_> ad we wanted some4word and such
[23:43:35] <Release_> ok ill test that
[23:43:38] <OnlineCop> Which regex language?
[23:43:56] <Release_> pcre
[23:44:06] <OnlineCop> Regex languages that support look-behinds could be: `(?<!\d)\B4\B(?!\d)`
[23:44:44] <Release_> excellent that seem to do well
[23:44:45] <OnlineCop> The `\B` works the opposite of `\b`: it asserts that you're NOT at a word boundary, and therefore not 4word or word4.
[23:45:06] <Release_> yea i recall the \b \B
[23:45:32] <Release_> thanks for that OnlineCop
[23:45:42] <OnlineCop> My pleasure.
[23:48:27] <OnlineCop> re101-okapi-38: The credit card validators on that RegexPattern site don't look for the '-' separating them; you could add them in, but that might make the regex a lot more complicated.
[23:48:50] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
