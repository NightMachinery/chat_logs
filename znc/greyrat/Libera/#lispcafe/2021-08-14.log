[00:02:17] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 248 seconds)
[00:04:16] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-14F5-dynamic.midco.net)
[00:05:48] *** Joins: lisp123 (~lisp123@45.130.83.200)
[00:06:52] <lisp123> nij-: Before I take the #commonlisp chat too off-topic, I agree with you :D
[00:07:04] <lisp123> I told my friend to program in lisp, he went to Kotlin instead :-/
[00:07:42] <nij-> :(
[00:07:44] <nij-> what happened
[00:07:50] <nij-> how did you get into lisp?
[00:08:10] <lisp123> Emacs does push so many people away - I love it now, but it was a rocky road to get there
[00:08:23] <lotuseater> other question is HOW you told him
[00:08:35] <nij-> Yeah, as a pre vimmer, trying emacs was a crazy idea one day I had.
[00:08:44] <nij-> I just wanted to prove that emacs is bloated.
[00:08:49] <nij-> And then I'm here.
[00:09:10] <lisp123> I used to program in Swift and made some Apps, so he asked me how I did it - then I tried pushing him to Lisp, then he correctly deduced it wouldn't help him write Apps and hence (since he has an Android), he went to Kotlin
[00:09:19] <nij-> I dunno... I feel like I need to polish my persuasion skill
[00:09:21] <lisp123> nij-: What is your opinion now?
[00:09:23] <lotuseater> Äääpps
[00:09:45] <nij-> sigh
[00:09:55] <nij-> Most people want to make some thing immediately
[00:10:04] <nij-> I admit I'm on the opposite of the specturm
[00:10:06] <lisp123> nij-: I think I got to know of lisp through some random googling
[00:10:37] <MichaelRaskin> It's not like anyone _needs_ to use Emacs for writing Common Lisp
[00:10:44] <nij-> No?
[00:10:51] <nij-> It'd be annoying no?
[00:10:55] <lisp123> Then I started reading ANSI Common Lisp & Hacker News almost as independent actions, it took me a while to make the connection from author Paul Graham to Billionaire extraordinaire and language designer Paul Graham
[00:11:00] <MichaelRaskin> I wrote quite a lot Common Lisp code in Vim.
[00:11:04] <nij-> And I won't be able to learn their tools just to ask them to believe in the lisp cult.
[00:11:12] <contrapunctus> lisp123, nij-: how exactly does Emacs scare people away? Especially seasoned programmers?
[00:11:21] <nij-> MichaelRaskin: what's your setup?
[00:11:22] <lisp123> contrapunctus: keybindings
[00:11:26] <MichaelRaskin> Plain Vim
[00:11:26] <nij-> contrapunctus: I dunno
[00:11:32] <nij-> I have some seasoned programmers
[00:11:35] <nij-> friends
[00:11:41] <lisp123> contrapunctus: Goddamn C-v for moving down half a screen! (Excuse my language)
[00:11:41] <nij-> they always say " I don't find a need"
[00:11:44] <contrapunctus> lisp123: cua-mode no help? 🤔
[00:11:50] <MichaelRaskin> Emacs lacks the basic amenities Vim has
[00:11:52] <nij-> someone who have been programming since they were 10 or something
[00:12:13] <lisp123> contrapunctus: That's too much for someone just starting off, unless they are decent programmers to begin with IMO
[00:12:13] <nij-> MichaelRaskin: how do you balance the god damn ()?
[00:12:41] *** Joins: zos (~zosthegoa@ool-457a8044.dyn.optonline.net)
[00:12:42] <nij-> lisp123: i dunno. I think many seasoned programmers they are too successful to pause and rethink.
[00:12:48] <contrapunctus> And (my question in #lisp) how's Lisp support in other IDEs?
[00:12:52] <nij-> And that's fair.. at the end maybe they just want to gtd
[00:13:01] <shka> i personally use evil in emacs
[00:13:02] <nij-> contrapunctus: I dunno.
[00:13:08] <shka> in enjoy vi style of input
[00:13:13] <nij-> shka: me too. But evil won't sell tru vimmers.
[00:13:13] <lisp123> contrapunctus: At least that's what a lot of people tell me (and was my experience - I stuck with the default keybindings because I read its better to fully immerse oneself into it and now its paying dividends)
[00:13:24] <shka> and i still use vim for editing configuration files anywa
[00:13:31] <nij-> shka me too
[00:13:34] <shka> but for programming it is emacs for me
[00:13:36] <MichaelRaskin> nij-: vim has match highlight and go to match
[00:13:53] <nij-> MichaelRaskin: oh.. some plugins helps you balance () very easily
[00:14:02] <lisp123> contrapunctus: Not that great IMO - I tried LispWorks, its editor sucked (but by this time, I got used to SLIME), CCL keeps crashing on my Mac, and I haven't had the chance to try Atom or VSCode with Lisp (I heard it works on both, not too bad)
[00:14:06] <nij-> but if that works for you then fine
[00:14:13] <MichaelRaskin> What do you mean, balance () easily?
[00:14:20] <nij-> parenthesis
[00:14:26] <shka> MichaelRaskin: i suspect paredit
[00:14:28] <lisp123> nij-: thats a fair point
[00:14:38] <nij-> with some packages when I type (( it gives (())
[00:14:39] <contrapunctus> MichaelRaskin: what amenities do you miss in Emacs?
[00:14:40] <MichaelRaskin> Every time I find something that auto-inserts ) when I press (, I am looking for a way to turn it off
[00:14:47] <nij-> I can slurp forms in and out easily too
[00:15:02] <nij-> (((
[00:15:02] <nij-> delete me!)))
[00:15:10] <nij-> It I press dd on that delete me
[00:15:17] <nij-> it doesn't delete the )))
[00:15:19] <MichaelRaskin> Well, I don't _just_ want Vim bindings, I also want :normal (i.e. input a chain of Vim bindings inside a script)
[00:15:30] <shka> nij-: vim also has surround stuff
[00:15:52] <nij-> MichaelRaskin: says they use plain vim
[00:15:58] <nij-> i'm sure you can do this every where
[00:16:08] <nij-> at the end emacs is "better" imo b/c it's lisp
[00:16:12] <shka> i mean, press v, expand, press d
[00:16:32] <MichaelRaskin> It has only become good-ish lisp quite recently
[00:16:43] <nij-> lisp123: I first learned emacs and not knowing anything about lisp.
[00:16:47] <nij-> And then one day I read roots of lisp
[00:16:56] <nij-> That boomed my brain.
[00:17:15] <nij-> MichaelRaskin: yeah that's fair..
[00:17:21] <shka> well, you can also use ib in the visual mode
[00:17:29] <nij-> and i know my reason isn't a good reason either.. at least for those who yet not know lisp
[00:17:45] <shka> honestly, i really think that vi is brilliant for the simply editing text
[00:17:46] <nij-> I really need to study how cult leaders encruit people.
[00:17:48] <lisp123> nij-: That definitely is a much better way to do it. Lisp + Emacs in one go is _a lot_ to process. Whereas starting off with Emacs, it slowly dips your toes in because you are adding one-liners to your .emacs and eventually one realises its lisp code
[00:17:55] <nij-> Some people can talk in that way.
[00:18:10] <nij-> lisp123: yep
[00:18:23] <lisp123> contrapunctus: Do you program in other IDEs for Lisp or Scheme or another dialect?
[00:18:40] <nij-> After reading root of lisp, lisp makes so much sense for me. And I know I need to learn a lot from it.
[00:18:50] <nij-> I tried to show rol to friends.
[00:18:52] <nij-> They didn't care.
[00:18:57] <lisp123> :(
[00:19:05] <MichaelRaskin> I think people who want the fancy stuff in Vim use slimv or vlime, not sure which.
[00:19:06] <nij-> They didn't get it.
[00:19:30] <nij-> MichaelRaskin: yeah
[00:19:38] <nij-> whatever works
[00:19:53] <nij-> I think if one can accept vim, they got a higher chance to accept lisp
[00:20:04] <nij-> but if one only used vscode or sublime before
[00:20:10] <nij-> good luck on pulling them in
[00:20:25] <nij-> OK. I'm determined to study how cult leaders talk.
[00:20:28] <contrapunctus> lisp123: I haven't yet tried anything other than Emacs for Lisp.
[00:20:34] <nij-> I think it's quite important.. some part of their skills.
[00:20:36] <lisp123> sublime is 100/100 one of my favourites, vscode is so painful :-(
[00:20:42] <MichaelRaskin> I also tried to use a Common Lisp REPL a bit more instead of shell… oh well, nope, Shell just does things right for shell and one-liners (up to a kilobyte in that damned line)
[00:20:52] <lisp123> nij-: Please do so, we need you to build up a Cult for CL :D
[00:21:05] <nij-> lisp123: and in fact any thing
[00:21:14] <nij-> any good thing
[00:21:38] <contrapunctus> My bet is that when there are more CL programs in active use, there will be more people motivated to learn it.
[00:21:40] <nij-> MichaelRaskin: Have you used ambrevar's fof?
[00:21:49] <lotuseater> shka: and vi is way more efficient for quick editing of text by vi-macros
[00:21:50] <lisp123> contrapunctus: Cool, then I think you are not missing out on anything
[00:22:02] <contrapunctus> So that's what I'm trying to do...
[00:22:05] <shka> lotuseater: true
[00:22:16] <shka> that's why i run evil emacs
[00:22:22] <lisp123> contrapunctus: Number of users is growing every day :)
[00:22:24] <shka> and i don't mind using vim anyway
[00:22:26] <MichaelRaskin> nij-: no, but I don't see how it would help my annoyances
[00:22:38] <shka> well, neovim currently
[00:22:45] <nij-> I mean.. how then you deal with shell tasks in repl?
[00:22:50] <lotuseater> shka: I run spacemacs, but executing such is slow.
[00:22:51] <shka> but i don't program with vim anymore
[00:23:11] <shka> yeah, emacs is not quick
[00:23:14] <shka> but i don't mind
[00:23:19] <nij-> lisp123: look at clojure's author
[00:23:24] <nij-> go listen to his talk
[00:23:33] <nij-> he has some culty element
[00:23:42] <nij-> that drives ppl in
[00:23:45] <lotuseater> nij-: which one?
[00:23:46] <lisp123> nij-: Racket too
[00:23:52] <nij-> who's racket's autho
[00:23:56] <nij-> lotuseater: rickey?
[00:23:59] <nij-> I forgot
[00:24:04] <MichaelRaskin> I mean, why fof when I have tab completion from readline?
[00:24:12] <lotuseater> I know it's Rich Hickey, so which talk do you mean?
[00:24:27] <nij-> lotuseater:  I randomly watched 3 of his talks.
[00:24:31] <nij-> All had the same feeling.
[00:24:35] <lotuseater> this one with him and Brian Beckman is funny
[00:24:42] <nij-> He is a master of "information hiding".
[00:24:44] <lisp123> nij-: https://en.wikipedia.org/wiki/Matthias_Felleisen
[00:24:47] <nij-> Which i believe is a key
[00:25:12] <MichaelRaskin> It's just that everything in Shell is tuned for ergonomics of gradual conveyor-processing (pipe) building
[00:25:16] <nij-> (for more about info hiding: https://terrytao.wordpress.com/advice-on-writing-papers/create-lemmas/)
[00:25:17] -ixelp- Create lemmas | What's new
[00:25:39] <lotuseater> hmpf they seem to mean lemmata
[00:26:01] <nij-> both work
[00:26:10] <gilberth> May I assume that gettimeofday(2) is the same for every core? Perhaps that is a bold bet.
[00:26:12] <nij-> llamas, llamata.. etc
[00:26:23] <lotuseater> ah the tao website
[00:26:41] <contrapunctus> Oh, actually...I forgot that my current project is related to editors/IDEs, albeit in a perverse and heretical way 😏
[00:26:57] <lisp123> contrapunctus: Do tell
[00:27:05] <MichaelRaskin> gilberth: given that VSDO and risk of caching, probably indeed there is always a new surprise to find
[00:27:07] <contrapunctus> A WYSIWYG word processor 😄
[00:27:21] <lisp123> Nice :)
[00:27:27] <contrapunctus> (In McLIM)
[00:27:31] <contrapunctus> * McCLIM
[00:27:31] <lotuseater> cool
[00:27:49] <lisp123> Nice
[00:27:50] <nij-> I will listen to some Felleisen too
[00:27:52] <nij-> thanks
[00:27:53] <gilberth> MichaelRaskin: I thought so, I won't make that assumption then.
[00:29:00] <MichaelRaskin> The annoying part is that it can change later.
[00:29:09] <lotuseater> contrapunctus: so then i can edit my code in that too? ^^
[00:29:12] <MichaelRaskin> It might be safe now, I haven't looked up.
[00:29:50] <gilberth> It would be reasonable for the usec part to be not synchronous.
[00:30:11] <gilberth> Synchronized, rather.
[00:30:43] <MichaelRaskin> Here there be dragons, if you let usec be different, then you lose control of the carry-over to seconds!
[00:31:32] <gilberth> Sure. What I meant was, that there could some modulus generated "locally".
[00:32:13] <gilberth> That is clocks only synchronized at a certain, albeit perhaps high, rate.
[00:32:38] <gilberth> And between that, the missing LSB derived from a on-core/on-CPU clock source.
[00:33:17] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-14F5-dynamic.midco.net) (Quit: Using Circe, the loveliest of all IRC clients)
[00:33:31] <gilberth> I don't really need that anyway. Timeout IDs would do.
[00:44:51] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[00:48:16] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 256 seconds)
[01:00:31] <pl> gettimeofday is supposed to be synchronized
[01:00:42] <pl> that incurs certain perf penalty of course
[01:04:20] <contrapunctus> lotuseater: « contrapunctus: so then i can edit my code in that too? ^^ » I'm certainly aiming for that.
[01:05:05] <contrapunctus> One of the main motivations was literate programming
[01:05:17] <contrapunctus> (Even though I'm not so hot about LP these days.)
[01:05:43] <lotuseater> i like LP for some things :)
[01:06:31] <lotuseater> contrapunctus: or storing code in excel tables, one char in each cell :D
[01:07:06] <contrapunctus> lotuseater: ...wat
[01:07:34] <lotuseater> a joke actually ...
[01:07:38] <contrapunctus> Haha
[01:08:06] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:53] <White_Flame> contrapunctus: it's been a long-standing complaint that non-technical users of word processors can format, include pictures, etc, while the people actually writing the word processor have their source code comments still in plain monospace text
[01:12:57] <White_Flame> programmers serve others to use computers better, but (just like many) notoriously don't look outside the box for their own uses
[01:13:17] <White_Flame> good ol "this is how it's done, this is how it was always done"
[01:14:37] <White_Flame> also, one of the big failings of literate programming is that good source code organization does not follow the linear flow of prose text.  That again points to structure editors & databases of source, instead of text files
[01:14:54] <lotuseater> https://trash.randomerror.de/u8qzp/theway.jpg
[01:15:56] <MichaelRaskin> White_Flame: to be fair, source code is not what you want to start with there. Approximately every text stored using computers should be less linear
[01:16:19] <contrapunctus> White_Flame: wow. I called the idea 'heretical' in jest, wasn't expecting such a positive response to it 🙂
[01:16:27] <MichaelRaskin> I wouldn't expect literate programming to be the easiest one to fix
[01:21:47] <Alfr> White_Flame, Oberon's UI may give you that richer programming experience.
[01:21:54] *** Quits: lisp123 (~lisp123@45.130.83.200) (Remote host closed the connection)
[01:22:26] *** Joins: lisp123 (~lisp123@45.130.83.200)
[01:23:50] <contrapunctus> Alfr: do elaborate, I'm interested in this subject.
[01:25:55] <Alfr> MichaelRaskin, what do you mean with less linear? We already have dispersed text across a rooted tree(s), throwing in links we can also have cycles. What else do you wish for?
[01:27:05] *** Quits: lisp123 (~lisp123@45.130.83.200) (Ping timeout: 248 seconds)
[01:27:28] <MichaelRaskin> For actual texts to not be forced into a linear order with some minor use of links
[01:30:24] <Alfr> contrapunctus, different interaction model, most text can be interacted with/executed. There are some videos out there.
[01:33:03] <Alfr> MichaelRaskin, so a graph of short texts? But I don't think links should be managed manually unless there are ambiguities to resolve.
[01:34:29] <White_Flame> Alfr: even QBASIC had a richer programming experience with functions & subroutines separated out to their own windows, as opposed to trying to organize everything in a linear file
[01:34:44] <MichaelRaskin> Some parts of some wikis, including Wikipedia, are noticeably non-linear
[01:36:05] <Alfr> MichaelRaskin, I understand that. I just want to understand how you would like to interact, especially search/find/traverse such a ... database of information/code/whatever.
[01:37:11] <MichaelRaskin> If I have a local pile of text files, it doesn't really matter if I grep a linear text with a file per chapter, or a hypertext with a file per snippet.
[01:37:26] <MichaelRaskin> In both cases I need to grep across multiple files
[01:37:59] <Alfr> White_Flame, s.o. invented asdf quite some time ago to absolve us from that one huge linear file. ;)
[01:38:12] <pl> White_Flame: interestingly, both Mesa/Cedar (from which Word kinda derives long way), Smalltalk, and some Lisp Machines had ability to format source code
[01:38:22] <White_Flame> Alfr: sure, but emacs puts you right back in there ;)
[01:39:44] *** Joins: makomo_ (~makomo@user/makomo)
[01:39:55] *** Quits: makomo_ (~makomo@user/makomo) (Client Quit)
[01:40:04] *** Joins: makomo_ (~makomo@user/makomo)
[01:40:16] <Alfr> MichaelRaskin, ah ... so, only your local stuff. Yes, there you could grep over everything when in doubt.
[01:42:15] <MichaelRaskin> Online either you have something approximating grep, or you are damned anyway
[01:42:37] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 245 seconds)
[01:42:41] *** Quits: makomo_ (~makomo@user/makomo) (Client Quit)
[01:42:46] <MichaelRaskin> Well, or you have something Tiddly-Wiki style and can request to put all the snippets on the screen then ask browser to grep across
[01:42:49] *** Joins: makomo (~makomo@user/makomo)
[01:43:06] <Alfr> White_Flame, I'm not sure whether a library of code would be preferable. With files, I at least feel obliged to put a short description on top.
[01:43:20] <White_Flame> the thing is for me, the more I get sick of computing legacy ways, instead of turning towards creating new editing systems, I'd rather explore having AI simply "understand" and work for me
[01:44:06] <White_Flame> Alfr: multiple comments' scope overlaps multiple different subsets of code bodies
[01:44:14] <White_Flame> it's the same problem with any heirarchy
[01:44:40] <White_Flame> once things start overlapping, finding the "one true parent" or "one true file" or "one true section" to put something under/in becomes ambiguous
[01:44:57] <White_Flame> so documentation should relate to the code, wherever it is
[01:45:24] <Alfr> White_Flame, that's "naming" things.
[01:45:45] <White_Flame> I'd say it's locating/positioning things
[01:48:52] <contrapunctus> pl: anywhere I can read more about Mesa/Cedar and formatting of source code?
[01:49:38] <Alfr> Or that. I was thinking about it as grouping given pieces of code. And would speculate, that there are pieces of code which should belong to more than only one "section".
[01:51:20] <pl> contrapunctus: start with xerox alto as that was the start of the environment
[01:51:43] <Alfr> White_Flame, then you'll also have to introduce some kind of versioning, or let the pieces all be immutable?
[01:52:04] <White_Flame> that's no different any any edit/save/commit system
[01:52:08] <White_Flame> *than any
[01:53:27] <Alfr> White_Flame, when you change something should it be reflected in the other section as well?
[01:54:53] <White_Flame> a change in section A is visible in all views of section A
[01:56:39] <White_Flame> but when it comes to any specifics, the devil's in the details, and I haven't fought the devil there yet
[01:57:11] <Alfr> I don't think we're talking about the same things here, White_Flame. In that what you want, can some piece of code C at the same time belong to more than one "section", say A and B?
[01:57:42] <White_Flame> if a "section" is a view of functions A, B, and C, and you edit function A, then that section's view of function A changes
[01:58:22] <White_Flame> no matter how many sections contain a view of function A, or however it's accessed
[01:58:41] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[01:58:52] <White_Flame> same with any documentation that's pulled in.  That doc block is a "thing" which is viewed and can be edited, no matter where it's viewed from or how often
[01:59:18] <contrapunctus> White_Flame: sounds like you might like how I've designed the format for this word processor.
[01:59:20] <White_Flame> makes sense not to branch edits at that layer, but keep it as one identified block with a singular current edit state
[01:59:39] <Alfr> Let me rephrase that: Let C be some code accessible from sections S1 and S2. Say, you change C to C' in S1. What would you see in S2?
[02:00:28] <White_Flame> depends on what you mean by "section"
[02:01:31] <Alfr> Some logical/organizational grouping of code/documentation/information.
[02:02:11] <White_Flame> code/documentation/information as independent pieces of information with their own identities?
[02:02:18] <White_Flame> eg a section contains a view of N elements like that
[02:02:21] *** Joins: santiagopim (~user@90.166.59.254)
[02:02:49] *** Joins: lisp123 (~lisp123@45.130.83.200)
[02:02:54] <Alfr> If you like, sure.
[02:03:04] <White_Flame> ok, then that's as I've described.
[02:03:26] <White_Flame> S1 has a view of C.  S2 has a view of C.  When C changes, that's apparent in all its views and C itself does not have a branching edit state at this layer
[02:04:08] <White_Flame> edits to C could be invoked from any view of C
[02:04:21] <White_Flame> at some point you save, and saves are managed by a vcs
[02:04:51] <White_Flame> I don't mind that tiering.  Live edits, saved snapshots, linkages of commits between saves
[02:05:44] <White_Flame> regardless of which is in memory or on disk or wherever
[02:10:02] <Alfr> Yeah, views definitely is a better term for it. :)
[02:12:53] *** Quits: lisp123 (~lisp123@45.130.83.200) (Read error: Connection reset by peer)
[02:14:28] <Alfr> White_Flame, so, you want views for organization and have (more or less) coherent saves. Also you can delegate history keeping to a vcs.
[02:14:47] <White_Flame> yeah, the scope of saves is also something
[02:14:55] <White_Flame> since traditionally those are scoped by file
[02:14:58] <Alfr> But you wouldn't have immediate access to prior versions of objects. Or did I miss something?
[02:15:02] <White_Flame> and then the vcs can select which files to commit or not
[02:15:14] <White_Flame> no reason not to have Undo functionality
[02:16:14] <White_Flame> of course, you have the undo history of your edits, as well as a filtered history of just 1 node's edits
[02:16:26] <Alfr> White_Flame, git plumbing supports stashing arbitrary data, you could to it per top-level form if you so desire.
[02:17:16] <White_Flame> oh that.  Yeah, and you could also save files under another name and have them around, too, for a less committal version
[02:17:35] <White_Flame> so the scope of saves/snapshots/undos is certainly a thing to explore
[02:17:48] <White_Flame> or even just bookmarking certain edit states or something
[02:18:03] <White_Flame> I made a system once with branching undo state, where you could hop between divergent edits
[02:18:23] <White_Flame> eg, undo 3, make some edits, and you could always undo back & redo those original 3 changes, etc
[02:18:41] <White_Flame> it's not that hard to keep them around once you have any sensible notion of undo/redo objects
[02:19:42] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 268 seconds)
[02:41:59] *** Joins: lisp123 (~lisp123@45.130.83.200)
[02:43:45] *** Quits: santiagopim (~user@90.166.59.254) (Ping timeout: 268 seconds)
[02:50:30] *** Quits: lisp123 (~lisp123@45.130.83.200) (Read error: Connection reset by peer)
[02:54:01] *** Quits: zos (~zosthegoa@ool-457a8044.dyn.optonline.net) (Ping timeout: 248 seconds)
[02:55:37] *** Joins: zos (~zosthegoa@ool-457a8044.dyn.optonline.net)
[03:14:07] *** Joins: santiagopim (~user@90.166.59.254)
[03:38:00] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[03:46:55] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 258 seconds)
[03:50:01] *** Joins: Cathrinus (~meow@vyos/developer/Lulu)
[03:50:47] *** Quits: Lulu (~meow@vyos/developer/Lulu) (Quit: Ouch! Got SIGIRL, dying...)
[03:53:03] *** Joins: iAmDecim (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[03:53:12] *** iAmDecim is now known as v3ga
[04:08:10] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[04:28:19] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Ping timeout: 258 seconds)
[04:28:41] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[04:49:42] *** Quits: zos (~zosthegoa@ool-457a8044.dyn.optonline.net) (Ping timeout: 245 seconds)
[04:51:05] *** Joins: zos (~zosthegoa@ool-457a8044.dyn.optonline.net)
[05:05:45] *** Quits: random-nick (~random-ni@87.116.177.79) (Ping timeout: 248 seconds)
[05:55:07] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[05:59:53] *** Joins: notzmv (~zmv@user/notzmv)
[05:59:59] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:00:29] <dave0> maw
[06:02:35] <notzmv> ouo
[06:05:58] *** Quits: christophergray (~christoph@190.148.50.55) (Quit: WeeChat 3.2)
[07:14:07] <hayley> ouo
[07:53:48] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[08:03:12] *** Quits: zos (~zosthegoa@ool-457a8044.dyn.optonline.net) (Quit: WeeChat 2.8)
[08:39:09] <notzmv> what's good
[08:39:50] <hayley> I just got back from a bike ride, and I now have an urge to run all my fine-grained locking code in a theorem prover. You?
[08:44:09] *** Joins: nihaal (~nihaal@117.96.193.218)
[08:45:33] <easye> Musta been a hella bike ride...
[08:49:29] <notzmv> heh
[08:49:56] <notzmv> I'm feeling weird but I think I'm alright mostly
[08:50:14] <notzmv> do you know when there's an unnerving cloud over your thoughts
[08:50:20] <easye> Is that a lyric from a Rolling Stones song?
[08:50:38] <notzmv> the theorem prover one? I don't think so
[08:50:42] <notzmv> :^)
[08:52:27] <easye> Heh.
[08:52:54] <easye> I was thinking that "I'm feeling weird but I think I'm alright mostly" was kinda like a song lyric.
[08:53:10] <easye> Not Stones mebbe, but very 60s
[08:53:18] <notzmv> might be, sounds a bit cliche eh
[08:53:28] <notzmv> like might be from many different eras too
[09:02:18] *** Joins: selwyn (~selwyn@user/selwyn)
[09:16:29] * hayley enables the Termination check and wonders what exactly was violated.
[09:16:39] <hayley> "Temporal properties were violated." cool which ones
[09:21:40] <hayley> It found a bug in my specification, which was that my model was dumb and did something like state := log; rather than state := state / log; but now this one looks dumb.
[09:25:37] <hayley> So apparently if you don't specify that each process is fair, TLA+ thinks it is fair game to basically "deadlock" your program.
[09:28:53] <easye> hayley: curious, which theorem proving system are you using?
[09:29:27] <hayley> easye: TLA+, but it does "proof by exhaustion" on concurrent programs rather than any real "proving".
[09:31:06] <hayley> e.g. https://gitlab.com/cal-coop/netfarm/cl-decentralise2/-/blob/master/Code/Systems/Standard-system/Design/queue.tla is a model of my fast request scheduler.
[09:31:07] -ixelp- Code/Systems/Standard-system/Design/queue.tla · master · Cooperative of Applied Language / The Netfarm Suite / cl-decent [...]
[09:31:49] <hayley> GitLab can't do syntax highlighting on it, but it happily counts TLA+ code in the language bar (which comes out bright green).
[09:39:27] <easye> hayley: nice.  Has making the model been helpful for code?
[09:39:50] <hayley> Well, the models are only to confirm my hunch that the code works.
[09:41:20] <easye> That sounds useful.
[09:42:35] <hayley> At the very least it is an approximately free advertising point. "Yeah, we use formal methods, there's a whole 50 LOC of theorem proving code..."
[09:44:13] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[09:46:14] <easye> heh
[09:53:53] <hayley> Even though I marked everything fair, and I'm damn sure there's no way that the process in question can loop forever, it still decides to stutter and thus Termination fails.
[09:57:55] * hayley changes the configuration, because somehow it does not look like the default settings, and now everything works. Fucking hell.
[10:03:18] <hayley> Quite nice though. Apparently the scheduler (with two connection threads) has 291 distinct states, which is too much to put on paper. Though my fast side-effect "transaction log" locks everything and thus is pretty boring.
[10:03:18] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:05:29] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 248 seconds)
[10:09:13] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[10:10:04] <dave0> maw
[10:16:17] <hayley> OTOH I need to parametrize these tests so that I can see what happens with more threads, but then testing takes exponentially longer. And I have a hunch that it'll come out fine.
[10:19:53] *** Quits: lad (~lad@user/lad) (Ping timeout: 248 seconds)
[10:49:44] <hayley> Got a type error: "Attempted to apply the operator overridden by the Java method public static tlc2.value.impl.IntervalValue tlc2.module.Naturals.DotDot(tlc2.value.impl.IntValue,tlc2.value.impl.IntValue), but it produced the following error: Cannot cast tlc2.value.impl.SubsetValue to tlc2.value.impl.IntValue"
[10:58:25] *** Quits: lotuseater (~user@p200300e7871b3f008a69ffac690ca7c7.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[11:04:30] *** Joins: makomo (~makomo@user/makomo)
[11:05:45] <hayley> Now I generalised it, and made everything use proper sets. With 2 connections there are 699 states, with 3 there are 17,784, with 4 there are 381,092.
[11:19:41] <hayley> Still waiting for 5, but as I test the power set of connections, we have O(2^n) states or so.
[11:25:20] <hayley> "Please be advised that profiling negatively impacts performance." dammit
[11:25:33] <hayley> I'm already 10 minutes in I can't exactly stop
[11:36:18] <hayley> So, now the queue size on the progress table is red, which usually means there is an error, but it still continues to checkpoint. So I guess red rather means "in progress" or something. 
[11:37:53] <hayley> Apparently there is a distributed mode, so I could hack up a "cluster" of my desktop and laptop.
[11:42:21] <hayley> The distributed mode is rather for holding hashes for already examined states, which is pointless as the SSD on this laptop is faster than any network interface I have.
[11:48:45] <hayley> 18 minutes later, there's 7,332,527 states.
[11:55:12] <moon-child> ;o
[11:56:53] <hayley> https://www.youtube.com/watch?v=YmCcbZVZH9A
[11:56:53] -ixelp- Robert Fripp Has Gone Mad With Power - YouTube
[12:03:56] <Qwnavery> anyone know of any FPGA communities
[12:04:38] <moon-child> not specifically, but opencores.org maybe thattaway
[12:05:30] <Qwnavery> moon-child: cool
[12:05:47] <Qwnavery> moon-child: are you the moon-child that wrote palemoon?
[12:05:53] <moon-child> no
[12:06:01] <Qwnavery> oh
[12:06:23] <Qwnavery> ok
[12:07:33] <moon-child> sorry to disappoint
[12:09:02] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[12:09:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:11:23] <hayley> Are you the https://www.youtube.com/watch?v=DnYDqv8-lJE moonchild?
[12:11:24] -ixelp- King Crimson - Moonchild (Including "The Dream" And "The Illusion") - YouTube
[12:14:27] <dave0> i wish i was a youtube sensation :-(
[12:15:05] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 248 seconds)
[12:15:24] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[12:16:06] <hayley> Also, as Leslie Lamport wrote this prover, it also has a LaTeX export option.
[12:16:42] <dave0> hayley: what are you proving?
[12:17:19] <hayley> That my merely tested request scheduler won't do anything dumb.
[12:19:18] <dave0> i proved my square root function was correct by trying every number from 0...2**32
[12:19:49] <hayley> https://www.youtube.com/watch?v=sYuQSr34yvk ← my laptop testing all possible execution paths of 5 connections + scheduler
[12:19:50] -ixelp- Habanero Sausage - YouTube
[12:21:37] <dave0> he made a sausage
[12:27:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:43:35] *** Joins: selwyn (~selwyn@user/selwyn)
[13:16:45] <Qwnavery> sosig?
[13:19:08] <hayley> sosig
[13:20:04] <selwyn> sosig n beans
[13:28:30] <Qwnavery> toe beans
[13:28:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[13:29:38] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:34:56] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[13:50:39] *** Joins: sm2n (~sm2n@user/sm2n)
[14:13:13] <hayley> https://www.youtube.com/watch?v=2DAdWcsM7Po
[14:13:14] -ixelp- Pink Floyd - Grantchester Meadows (Official Music Video) - YouTube
[14:14:38] <selwyn> music video? :o
[14:18:14] <hayley> Yes.
[14:21:05] <Qwnavery> selwyn: baked beans on toast yey or ney?
[14:21:10] <hayley> Looks like it is based off https://www.youtube.com/watch?v=jecI7xlrrmg FWIW
[14:21:10] -ixelp- Pink Floyd - Grantchester Meadows (An Hour With Pink Floyd, KQED) - YouTube
[14:21:19] <hayley> Qwnavery: not selwyn but yes
[14:21:27] <Qwnavery> hayley: noice
[14:21:41] <selwyn> i am not a fan personally
[14:21:46] <Qwnavery> hayley: where are you from, you're here like 24/7??
[14:21:54] <selwyn> baked beans are the overrated part of a full english breakfast
[14:21:57] <Qwnavery> selwyn: >-<
[14:22:04] <hayley> Disagree, I am not here from 12:30am to 8:30am AEST
[14:22:15] <selwyn> ireland replaces them with black sausage/white sausage/potato farls, the right move 
[14:22:25] <Qwnavery> hayley: ah, wait you also Aussie?
[14:22:31] <hayley> yes
[14:22:43] <Qwnavery> hayley: not from Taz I pray
[14:22:49] <hayley> Qwnavery: no
[14:22:57] <Qwnavery> ok we chill
[14:23:03] * selwyn waits to be deported by the home office
[14:23:09] <selwyn> is something wrong with taz?
[14:23:17] <Qwnavery> yes. vegans and cyclists.
[14:23:23] <Qwnavery> :>
[14:23:42] * hayley has a bike, you can ride it if you like...
[14:23:42] <selwyn> there are plenty of 🦀in tasmania
[14:24:16] * Qwnavery also has a bike, flat tyre and can't be bothered changing it (again)
[14:25:14] <Qwnavery> T-T
[14:33:34] <selwyn> https://www.youtube.com/watch?v=Heus3n__SrI
[14:33:35] -ixelp- Derya Yıldırım & Grup Şimşek - Kürk - YouTube
[14:33:54] <hayley> https://www.youtube.com/watch?v=8TEAMHgrxi0
[14:33:55] -ixelp- JJ Burnel - Crabs - YouTube
[14:36:18] <Qwnavery> https://www.youtube.com/watch?v=DtVR2M5-A-c
[14:36:18] -ixelp- Sewerslvt - Hopelessness - YouTube
[14:46:56] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.2)
[14:52:04] *** Joins: random-nick (~random-ni@87.116.165.220)
[14:55:58] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Read error: Connection reset by peer)
[14:58:25] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:04:41] *** Quits: MetaYan_ (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (Ping timeout: 248 seconds)
[15:10:27] <hayley> https://www.youtube.com/watch?v=Wb27Sd0aqyY
[15:10:27] -ixelp- The Damned - Curtain Call - Live - YouTube
[15:27:05] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[15:49:22] *** Joins: krl (~krl@h-158-174-122-239.A357.priv.bahnhof.se)
[15:51:29] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[15:52:04] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[15:55:15] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[15:55:39] *** Joins: Alfr (~Alfr@user/alfr)
[15:55:52] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[16:05:04] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[16:06:36] *** Quits: nihaal (~nihaal@117.96.193.218) (Quit: nihaal)
[16:07:48] *** Joins: nihaal (~nihaal@117.96.193.218)
[16:36:46] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[16:39:37] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 248 seconds)
[16:46:29] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.2)
[16:59:17] <dave0> nite all
[17:00:03] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:12:09] *** Joins: phantomics (~phantomic@97-118-239-225.hlrn.qwest.net)
[17:26:11] <gilberth> Good morning #lispcafe!
[17:28:29] <selwyn> hi
[17:30:00] <hayley> Good morning gilberth!
[17:31:26] <gilberth> My silly workaround seems to work. But it's a bit fragile in theory.
[17:36:48] <gilberth> And it seems like we are the first to notice. But it's not easy to google for that, as you get a ton of "My Mac takes long to awake from sleep, what can I do?" questions.
[17:47:43] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-14F5-dynamic.midco.net)
[17:48:32] <nij-> Which US bank has the most lightweight bank website? Chase Bank is full of crappy JS and I'm driven crazy by that.
[17:52:48] <gilberth> Rather tell me which EU bank does not charge interest for money in your account. That is you get a negative interest. Do you have that in the US too?
[17:58:35] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[18:00:52] <nij-> I'm not aware of.
[18:01:00] <nij-> Damn.. the economics of Europe is really that bad?
[18:01:03] <nij-> That's crazy.
[18:01:10] <nij-> how much does it charge?
[18:02:40] <gilberth> Depends. IIRC 0.5% to 1% p.a. I just refuse to pay that.
[18:04:06] <gilberth> And it's the central bank, which has a negative interest rate and the regular banks try to charge their customers that. It began with balances >500k, but now they try to do that even when you have a mere 50k or sometimes 10k in your account.
[18:05:55] *** Joins: lotuseater (~user@p200300e7871b3f008a69ffac690ca7c7.dip0.t-ipconnect.de)
[18:06:07] <gilberth> And, yes the economy in south Europe is notoriously bad. That's the reason for that low interest rates. But I bet we'll get quite some inflation the next years.
[18:07:19] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:13:59] <nij-> I think they are quite confident that most customers don't know a better alternatives.
[18:16:22] <gilberth> Well, you just can refuse to accept the new terms. They may however quit the contract with you. Mine didn't attempt to do the latter.
[18:18:17] <nij-> Life is hard @_@
[18:18:39] <gilberth> nij-: There aren't any alternatives here, but not having money. I don't have any seizable amount money either, as I invest all I have. But: My company needs a bit for liquidity.
[18:19:27] <gilberth> But, yes, most customers just mindlessly accept the new terms.
[18:20:18] <gilberth> me shrugs and thinks .oO(May they cancel the contract with me, if they wish.)
[18:24:42] <nij-> yes, actually a better alternatives is to invest into index
[18:25:00] <nij-> hehe actually if they don't have any alternatives
[18:25:12] <nij-> minus annual rate makes sense too
[18:25:24] <nij-> whatelse are they going to do? save cashes at home?
[18:25:26] <nij-> That's risky.
[18:26:44] <gilberth> The stock market is considered as high risk by most Germans.
[18:27:17] <gilberth> Of course most sell in panic at the very first dip and lose "money".
[18:28:31] <nij-> Saving money in the bank dooms to fail no?
[18:28:38] <nij-> 3% inflation rate per year
[18:29:29] <gilberth> Indeed. And me in particular never trusted currency. Keeping the money as cash in your account is investing in the EUR or USD.
[18:29:55] * hayley uploaded a video: (410KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/KEfQmVEBtaOLxAnpGiuYxtJq/hat.mp4 >
[18:31:42] <nij-> lol
[18:31:54] * nij- verified it's safe content
[18:35:10] <gilberth> No need to call the horny police? Good. What's it? Cats again?
[18:37:07] <hayley> https://twitter.com/swmckay/status/1426498794099814403 Average Microsoft evangelist vs ex-Symbolics hacker
[18:40:08] <hayley> Also TIL I should have just rewritten decentralise2 until I got a working lock-free request scheduler, rather than proving one correct.
[18:40:59] <gilberth> What you mean? Nikodemus is one of us.
[18:41:17] <hayley> The prior message.
[18:41:43] <gilberth> But then, /me is rewriting all of CLIM. From scratch.
[18:42:02] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:42:17] <hayley> The one that says "all code is minimally useful garbage".
[18:42:42] <gilberth> All? Nope.
[18:42:47] <hayley> So long to program design, just write a new program every time someone complains!
[18:43:07] <gilberth> Which is silly.
[18:43:33] <hayley> Don't get me started on them.
[18:43:48] <gilberth> How old is Emacs? We still will use that in 20 years. Just an example.
[18:44:38] <gilberth> Or TeX?
[18:44:38] <hayley> Like, how dumb would it be for a Microsoft employee to be saying anything about the future of "open source" or whatever?
[18:44:58] <hayley> And in which timeline was the MAKE-INSTANCE in the sky cheap on intelligence?
[18:46:20] <gilberth> Anyhow, I won't have much time today. One of my other cousins is visiting us tonight and we need to clean up the house a bit.
[18:46:54] * hayley has her writeup stash everyone continues to not read.
[18:47:23] <hayley> At this point I swear it is deliberate.
[18:47:36] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[19:13:06] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Ping timeout: 240 seconds)
[19:14:49] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[19:23:40] *** Quits: Oddity (Oddity@user/oddity) (Remote host closed the connection)
[19:56:57] *** Joins: selwyn (~selwyn@user/selwyn)
[20:04:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:10:14] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[20:34:15] *** Joins: robin (~robin@user/terpri)
[20:43:34] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:57:05] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[21:10:57] *** Joins: lad (~lad@user/lad)
[21:16:47] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[21:21:58] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (Quit: Rebooting)
[21:24:52] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[21:32:10] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[21:32:44] *** Joins: robin (~robin@user/terpri)
[21:33:42] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[21:34:11] *** Joins: robin (~robin@user/terpri)
[21:35:41] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[21:36:12] *** Joins: robin (~robin@user/terpri)
[21:37:40] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[21:38:11] *** Joins: robin (~robin@user/terpri)
[21:38:28] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[21:38:43] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: gtg)
[21:45:00] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:01:20] *** Joins: selwyn_ (~selwyn@user/selwyn)
[22:03:21] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 248 seconds)
[22:30:42] *** Quits: nihaal (~nihaal@117.96.193.218) (Quit: nihaal)
[22:36:26] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[22:41:22] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:26:12] *** Quits: iisi (sid19824@id-19824.stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[23:29:54] *** Quits: JSharp (sid4580@id-4580.tooting.irccloud.com) (Ping timeout: 240 seconds)
[23:31:40] *** Joins: JSharp (sid4580@id-4580.tooting.irccloud.com)
[23:35:18] *** Joins: iisi (sid19824@id-19824.stonehaven.irccloud.com)
[23:53:21] *** Quits: gilberth (~gilberth@p5492debc.dip0.t-ipconnect.de) (Quit: Common Lisp IRC library - http://common-lisp.net/project/cl-irc)
[23:53:33] *** Joins: gilberth (~gilberth@p5492debc.dip0.t-ipconnect.de)
[23:53:33] *** ChanServ sets mode: +o gilberth
