[00:05:56] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:09:04] <BinGOs> Files=185, Tests=28574 :)_
[00:10:43] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:10:55] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[00:12:25] <Mandevil> What program/module?
[00:12:38] <BinGOs> POE::Component::Server::IRC
[00:12:50] <Mandevil> Wow
[00:13:17] <BinGOs> TRIAL version
[00:13:32] *** Quits: proller (~p@2a02:6b8:b081:8003::1:3) (Ping timeout: 240 seconds)
[00:14:05] <daemon> yeah that is quitea chunk boy
[00:14:24] <BinGOs> Damn missed the 10 year anniversary since the last stable release
[00:16:23] *** Joins: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f)
[00:17:49] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[00:19:25] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 252 seconds)
[00:25:08] *** Joins: cxreg (~count@63.228.111.44)
[00:28:14] *** Joins: proller (~p@2a02:6b8:b081:8801::1:2d)
[00:29:36] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[00:30:14] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Ping timeout: 252 seconds)
[00:31:09] *** Joins: tejr (~tejr@user/tejr)
[00:34:42] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:fd72:8298:af69:cded) (Quit: Leaving)
[00:36:46] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 260 seconds)
[00:44:16] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:143a:1d30:85c4:7ef0)
[00:46:28] * GumbyPAN CPAN Upload: URI-cpan-1.008 by RJBS https://metacpan.org/release/RJBS/URI-cpan-1.008
[00:51:56] <Mandevil> I think I'm getting to the point where I need Test::Deep
[00:53:53] *** Joins: hethw (~heth@46.238.32.56)
[00:57:08] <jaytee80> uhhhh.... cowoker is calling perl from C... perl call hangs. I need to wrap that in an alarm() I guess. I wonder what that'll do to the C side of things.
[00:57:53] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[00:59:35] <simcop2387> i'm kind of liking podman.  not a lot different than the way i use docker, but the fact that i don't have to add a special repo to use it is nice.  esp with podman-docker installed too
[01:01:07] <El_Che> I use it for more advanced tests
[01:01:14] <El_Che> the no-root part is what I like the most
[01:01:48] <Mandevil> "more advanced tests" being...?
[01:06:07] <El_Che> eg spinning up keycloak and mysql
[01:06:19] <El_Che> next to mocking
[01:07:38] <simcop2387> i haven't done the whole no-root part of things yet, but i'm using it to manage services on my ovh and now a VM for running Frigate NVR
[01:08:11] <jaytee80> F that... it's call_pv() type stuff in C land. I'll put the alarms in the perl subs it's calling.
[01:10:24] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[01:11:31] * GumbyPAN CPAN Upload: Minion-Backend-mysql-0.33 by PREACTION https://metacpan.org/release/PREACTION/Minion-Backend-mysql-0.33
[01:13:12] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[01:14:36] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[01:16:32] <buu> What's the difference between podman and docker anyways
[01:17:03] <buu> jaytee80: alarms just trigger a SIGALRM which has the side effect of terminating any pending IO type operation
[01:17:13] <buu> Well, I guess that's wrong, it terminates any sleep type operation
[01:17:13] <huf> \24\0\a\6\4\34 apparently
[01:17:52] <buu> jaytee80: "hanging" is a pretty weird thing for a perl sub to do, is it waiting on an event?
[01:19:47] <El_Che> simcop2387: I still use docker for "hosting" containers because at the time there wasn't valid docker-compose alternative. Is there one now?
[01:21:22] <buu> kubernetes
[01:22:31] <El_Che> boo
[01:23:18] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Remote host closed the connection)
[01:30:08] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[01:34:21] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[01:35:11] *** Quits: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:36:26] <simcop2387> El_Che: you can use docker-compose with podman now
[01:36:34] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:37:11] <simcop2387> buu: podman is natively supported by distros, doesn't have insane licensing if you're a company, etc.
[01:37:38] <simcop2387> and you can do stuff like make the container a systemd service (though I haven't done that yet)
[01:39:35] <buu> simcop2387: Wasn't the thing with podman that it didn't support docker build and stuff?
[01:39:44] <buu> Like it only did docker run
[01:39:57] <simcop2387> might have been originally but i think there are ways to do that now
[01:40:13] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[01:40:32] <simcop2387> yea looks like you can now, https://docs.podman.io/en/latest/markdown/podman-build.1.html
[01:40:32] <Paperbot> Link title(s): [ podman-build(1) — Podman  documentation ]
[01:41:02] <buu> Containerfiles ending with a “.in” suffix will be preprocessed via CPP(1).
[01:41:05] <buu> HAHAH YES AT LAST
[01:41:28] <buu> I keep suggesting CPP as a solution for basically every problem
[01:41:32] <buu> I'm glad someone finally listened
[01:44:40] *** Joins: pflanze__ (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[01:45:11] *** Quits: pflanze_ (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Read error: Connection reset by peer)
[01:47:42] *** Quits: Peppard (~quassel@2001:470:1f0b:751:5c72:e3df:8cee:d391) (Ping timeout: 260 seconds)
[01:48:29] <El_Che> simcop2387: I did the systemd service for containers with docker at work (before we introduced nomad)
[01:48:34] <El_Che> years ago :)
[01:48:58] <El_Che> podman has supported build for ages
[01:49:53] <El_Che> you used to need buildah for more advanced stuff in the past
[01:49:57] <jaytee80> buu: I suspect it's an async connection failure in ZMQ::FFI. The perl interface doesn't support the socket monitor API yet to get a better handle on when things fail in ZMQ. But in general, if something goes wrong in ZMQ land your process/thread just hangs indefinitely.
[01:52:14] *** Joins: Peppard (~quassel@ip5886a62d.dynamic.kabel-deutschland.de)
[01:56:36] * GumbyPAN CPAN Upload: Object-Pad-0.59 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-0.59
[02:02:53] *** Quits: magla (~gelignite@55d4970c.access.ecotel.net) (Quit: Stay safe!)
[02:06:53] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[02:31:39] * GumbyPAN CPAN Upload: IO-Async-0.801 by PEVANS https://metacpan.org/release/PEVANS/IO-Async-0.801
[02:32:38] *** Quits: pizdets_ (~pizdets@183.182.110.83) (Ping timeout: 250 seconds)
[02:33:59] *** Joins: pizdets (~pizdets@183.182.110.46)
[02:35:33] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[02:35:37] *** Quits: fling (~fling@user/fling) (Ping timeout: 250 seconds)
[02:35:57] *** Joins: rbraun_ (nrooOs8s@user/rbraun)
[02:44:59] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[02:57:50] *** Joins: vms14 (~user@149.red-79-153-96.dynamicip.rima-tde.net)
[03:03:07] <vms14> any help or suggestion?
[03:03:09] <vms14> http://www.thecatisonthetable.tk/r
[03:03:35] <vms14> I wonder if macros are "right" or not
[03:03:50] <shaldannon> not really ... every time my cat gets on the table, I have to shoo him off
[03:04:04] <vms14> :0
[03:04:21] <vms14> I'll use that domain to make a paste service
[03:04:40] <vms14> atm the index.cgi is using template toolkit
[03:04:55] <vms14> you can {red} stuff {r} for reset color
[03:04:57] <vms14> xd
[03:05:07] <vms14> won't save nothing btw
[03:05:22] <vms14> it's a free hosting with a free subdomain
[03:05:31] *** Quits: whynot (~whynot@37.73.80.26) (Quit: leaving)
[03:05:59] <vms14> I want to make this shitty lisp so I can start doing things in lisp and perl at same time
[03:06:17] <vms14> If I can get macros right its cpan + macros
[03:12:18] <vms14> btw the names of the files is because I was incrementing a "a"
[03:14:10] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[03:18:30] *** Quits: rbraun (twdK7OoC@user/rbraun) (Quit: leaving)
[03:23:07] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:26:01] *** Quits: jaytee80 (~jaytee80@206.208.33.20) (Quit: Client closed)
[03:30:03] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (*.net *.split)
[03:30:03] *** Quits: cxreg (~count@63.228.111.44) (*.net *.split)
[03:30:03] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (*.net *.split)
[03:30:03] *** Quits: veesh (~veesh@5.28.156.66) (*.net *.split)
[03:30:03] *** Quits: Croran (~Croran@71.231.214.173) (*.net *.split)
[03:30:03] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (*.net *.split)
[03:30:03] *** Quits: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de) (*.net *.split)
[03:30:03] *** Quits: nshp (~hi@45.79.184.145) (*.net *.split)
[03:30:03] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (*.net *.split)
[03:30:03] *** Quits: bmodotdev (bmo@user/bmodotdev) (*.net *.split)
[03:30:03] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[03:30:03] *** Quits: scotticles (~TheScotti@h69-130-122-244.cdcyut.broadband.dynamic.tds.net) (*.net *.split)
[03:30:03] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (*.net *.split)
[03:30:03] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[03:30:03] *** Quits: subie (~subie@2601:4c0:4080:bc0:1d49:b43d:ed11:4ead) (*.net *.split)
[03:30:03] *** Quits: Kulrak (Kulrak@n122-109-28-121.rdl1.qld.optusnet.com.au) (*.net *.split)
[03:30:03] *** Quits: XV8 (~XV8@2601:5cb:c001:50:29c4:77b3:3d1a:a58b) (*.net *.split)
[03:30:03] *** Quits: vrurg (~vrurg@45.74.95.181) (*.net *.split)
[03:30:03] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[03:30:03] *** Quits: noctux (~noctux@user/noctux) (*.net *.split)
[03:30:03] *** Quits: nexgen2 (~nexgen@li614-178.members.linode.com) (*.net *.split)
[03:30:04] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (*.net *.split)
[03:30:04] *** Quits: gordonfish (~gordonfis@user/gordonfish) (*.net *.split)
[03:30:04] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (*.net *.split)
[03:30:04] *** Quits: Hawker (~pi@user/hawker) (*.net *.split)
[03:30:04] *** Quits: zgu (~zgu@2603-7080-b704-0800-e4e2-df43-fd5d-e657.res6.spectrum.com) (*.net *.split)
[03:30:04] *** Quits: GEttR (~GEttR@user/gettr) (*.net *.split)
[03:30:04] *** Quits: defjam (~eb0t@90.210.94.161) (*.net *.split)
[03:30:04] *** Quits: Repaster (~Repaster@perlbot/bot/grinnz/repaster) (*.net *.split)
[03:30:04] *** Quits: v` (~v@user/ctrl) (*.net *.split)
[03:30:04] *** Quits: tyep (~hatseflat@hatsuseno.rootaccess.nl) (*.net *.split)
[03:30:04] *** Quits: ndorf_ (~nd@ob.noxio.us) (*.net *.split)
[03:30:04] *** Quits: krychu_ (~krychu@2a01:4f8:210:50c5::2) (*.net *.split)
[03:30:04] *** Quits: genio (sid223130@id-223130.ilkley.irccloud.com) (*.net *.split)
[03:30:04] *** Quits: Bluewind (~Bluewind@user/bluewind) (*.net *.split)
[03:30:04] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (*.net *.split)
[03:30:04] *** Quits: ueberall (ueberall_l@user/ueberall) (*.net *.split)
[03:30:04] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[03:30:04] *** Quits: greeb (~greeb@blahblahblah.anime.horse) (*.net *.split)
[03:30:04] *** Quits: Zubin (~rubin@ender.afternet.org) (*.net *.split)
[03:30:04] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[03:30:04] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[03:30:04] *** Quits: zeus (~user@user/kamyl) (*.net *.split)
[03:30:04] *** Quits: Nowaker (~quassel@188.116.38.80) (*.net *.split)
[03:30:04] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[03:30:05] *** Quits: woei (~woei@cust-73-85-110-94.dyn.as47377.net) (*.net *.split)
[03:30:05] *** Quits: Jonno_FTW (~come@api.carswap.me) (*.net *.split)
[03:30:05] *** Quits: sgrs (~sgrs@185.112.146.78) (*.net *.split)
[03:30:05] *** Quits: k-man (~jason@user/k-man) (*.net *.split)
[03:30:05] *** Quits: heth (~heth@user/heth) (*.net *.split)
[03:30:05] *** Quits: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com) (*.net *.split)
[03:30:05] *** Quits: homura (uid398348@user/homura) (*.net *.split)
[03:30:05] *** Quits: mason (~mason@redhat/mason) (*.net *.split)
[03:30:05] *** Quits: maettu (~mbloch@guardian.werft22.net) (*.net *.split)
[03:30:05] *** Quits: x5c30 (~x5c30@user/x5c30) (*.net *.split)
[03:30:05] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (*.net *.split)
[03:30:05] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (*.net *.split)
[03:30:05] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:143a:1d30:85c4:7ef0) (*.net *.split)
[03:30:05] *** Quits: WantToHelp (~WantToHel@user/wanttohelp) (*.net *.split)
[03:30:05] *** Quits: seoul_man (~meh@097-080-088-148.res.spectrum.com) (*.net *.split)
[03:30:05] *** Quits: brunoramoslu (~brunoramo@94.252.122.148) (*.net *.split)
[03:30:05] *** Quits: Michelle (~michelle@2407:8800:bc20:200a:d86:dd3a:7e26:8231) (*.net *.split)
[03:30:05] *** Quits: HiSPeed (znc@mail.holics.at) (*.net *.split)
[03:30:05] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (*.net *.split)
[03:30:05] *** Quits: metabot (~metabot@perlbot/bot/metabot) (*.net *.split)
[03:30:05] *** Quits: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2) (*.net *.split)
[03:30:05] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (*.net *.split)
[03:30:06] *** Quits: vague (~vague@irssi/staff/vague) (*.net *.split)
[03:30:06] *** Quits: Sleepy63 (~Sleepy63@user/sleepy63) (*.net *.split)
[03:30:06] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (*.net *.split)
[03:30:06] *** Quits: polettix_ (~polettixx@linode.polettix.it) (*.net *.split)
[03:30:06] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[03:30:06] *** Quits: przemoc86 (~przemoc@89-72-24-4.dynamic.chello.pl) (*.net *.split)
[03:30:06] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[03:30:06] *** Quits: celphi_ (sid97751@helmsley.irccloud.com) (*.net *.split)
[03:30:06] *** Quits: rjbs (sid498898@id-498898.uxbridge.irccloud.com) (*.net *.split)
[03:30:06] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (*.net *.split)
[03:30:06] *** Quits: DrHyde (~david@bytemark.barnyard.co.uk) (*.net *.split)
[03:30:06] *** Quits: revhippie (~jdavis@097-081-163-065.res.spectrum.com) (*.net *.split)
[03:30:06] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (*.net *.split)
[03:30:06] *** Quits: sloth (~sloth@84.16.241.179) (*.net *.split)
[03:30:06] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[03:30:06] *** Quits: Bossi (~quassel@p4fc22a7d.dip0.t-ipconnect.de) (*.net *.split)
[03:30:06] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[03:30:06] *** Quits: tnez (~el@user/tnez) (*.net *.split)
[03:30:06] *** Quits: last1 (last1@modemcable039.93-160-184.mc.videotron.ca) (*.net *.split)
[03:30:06] *** Quits: merpaderp (~ircuser@89.111.36.243) (*.net *.split)
[03:30:06] *** Quits: ew73 (~ew73@ec2-3-92-179-243.compute-1.amazonaws.com) (*.net *.split)
[03:30:10] *** Joins: cxreg (~count@63.228.111.44)
[03:30:10] *** Joins: Nowaker (~quassel@188.116.38.80)
[03:30:11] *** Joins: Jonno_FTW (~come@api.carswap.me)
[03:30:12] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[03:30:13] *** Joins: krychu (~krychu@2a01:4f8:210:50c5::2)
[03:30:16] *** Joins: nshp (hi@2600:3c03::f03c:91ff:fe2c:cd67)
[03:30:17] *** Joins: revhippie (~jdavis@097-081-163-065.res.spectrum.com)
[03:30:17] *** Joins: HiSPeed (znc@mail.holics.at)
[03:30:21] *** Joins: Kulrak (Kulrak@n122-109-28-121.rdl1.qld.optusnet.com.au)
[03:30:23] *** Joins: Riviera (Riviera@user/riviera)
[03:30:25] *** Joins: DrHyde (~david@bytemark.barnyard.co.uk)
[03:30:27] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[03:30:30] *** Joins: Zubin (~rubin@ender.afternet.org)
[03:30:30] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[03:30:31] *** Joins: tnez (~el@179.50.90.141)
[03:30:32] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[03:30:34] *** Joins: scotticles (~TheScotti@h69-130-122-244.cdcyut.broadband.dynamic.tds.net)
[03:30:35] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[03:30:35] *** Joins: vrurg (~vrurg@45.74.95.181)
[03:30:38] *** Joins: sgrs (~sgrs@185.112.146.78)
[03:30:38] *** Joins: tyep (~hatseflat@193.200.132.183)
[03:30:39] *** Joins: ndorf (~nd@23.95.130.20)
[03:30:39] *** Joins: Michelle (~michelle@203.206.128.220)
[03:30:40] *** Joins: maettu (~mbloch@195.234.163.94)
[03:30:41] *** Joins: przemoc (~przemoc@89.72.24.4)
[03:30:42] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[03:30:46] *** Joins: k-man (~jason@220-244-133-10.tpgi.com.au)
[03:30:48] *** Joins: last1 (last1@184.160.93.39)
[03:30:48] *** Joins: rypervenche (~rypervenc@ryper.org)
[03:30:49] *** Joins: defjam (~eb0t@90.210.94.161)
[03:30:56] *** Joins: homura (uid398348@helmsley.irccloud.com)
[03:30:59] *** Joins: celphi_ (sid97751@helmsley.irccloud.com)
[03:31:03] *** Joins: genio (sid223130@2a03:5180:f:3::3:679a)
[03:31:06] *** Joins: itok (sid418430@2a03:5180:f:3::6:627e)
[03:31:07] *** Quits: tnez (~el@179.50.90.141) (Changing host)
[03:31:07] *** Joins: tnez (~el@user/tnez)
[03:31:16] *** Joins: woei (~woei@cust-73-85-110-94.dyn.as47377.net)
[03:31:24] *** Joins: rjbs (sid498898@id-498898.uxbridge.irccloud.com)
[03:31:27] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:31:35] *** Quits: przemoc (~przemoc@89.72.24.4) (Changing host)
[03:31:35] *** Joins: przemoc (~przemoc@user/przemoc)
[03:31:36] *** Joins: Repaster (~Repaster@2600:2b00:732f:5200:1e6f:65ff:fec9:ce9f)
[03:31:36] *** Quits: k-man (~jason@220-244-133-10.tpgi.com.au) (Changing host)
[03:31:36] *** Joins: k-man (~jason@user/k-man)
[03:31:38] *** homura is now known as Guest6120
[03:31:38] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:143a:1d30:85c4:7ef0)
[03:31:39] *** Quits: rypervenche (~rypervenc@ryper.org) (Changing host)
[03:31:39] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[03:31:40] *** Quits: Guest6120 (uid398348@helmsley.irccloud.com) (Changing host)
[03:31:40] *** Joins: Guest6120 (uid398348@user/homura)
[03:31:41] *** Quits: Repaster (~Repaster@2600:2b00:732f:5200:1e6f:65ff:fec9:ce9f) (Excess Flood)
[03:31:43] *** Joins: odc (sid197788@helmsley.irccloud.com)
[03:31:46] *** Joins: brunoramoslu (~brunoramo@94.252.122.148)
[03:31:50] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:31:53] *** Joins: Repaster (~Repaster@2600:2b00:732f:5200:1e6f:65ff:fec9:ce9f)
[03:32:07] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[03:32:20] *** Quits: Repaster (~Repaster@2600:2b00:732f:5200:1e6f:65ff:fec9:ce9f) (Changing host)
[03:32:20] *** Joins: Repaster (~Repaster@perlbot/bot/grinnz/repaster)
[03:33:21] *** Joins: greeb (~greeb@blahblahblah.anime.horse)
[03:33:21] *** Joins: veesh (~veesh@5.28.156.66)
[03:33:28] *** Joins: Colt (~Colt@user/colt)
[03:33:38] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[03:33:40] *** Joins: noctux (~noctux@user/noctux)
[03:33:43] *** Joins: vague (~vague@irssi/staff/vague)
[03:33:46] *** Joins: heth (~heth@46.238.32.56)
[03:33:56] *** Quits: heth (~heth@46.238.32.56) (Changing host)
[03:33:56] *** Joins: heth (~heth@user/heth)
[03:33:57] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[03:34:04] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[03:34:05] *** Joins: phenom (~primus@user/phenom)
[03:34:10] *** Joins: v` (~v@user/ctrl)
[03:34:14] *** Quits: celphi_ (sid97751@helmsley.irccloud.com) (Changing host)
[03:34:14] *** Joins: celphi_ (sid97751@user/celphi)
[03:34:15] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[03:34:19] *** Joins: Pixi (~Pixi@user/pixi)
[03:34:28] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[03:34:28] *** Joins: perlbot (~perlbot@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com)
[03:34:29] *** Quits: perlbot (~perlbot@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com) (Changing host)
[03:34:29] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[03:34:34] *** ChanServ sets mode: +v perlbot
[03:34:38] *** Joins: mason (~mason@tigris.blisses.org)
[03:34:39] *** Quits: mason (~mason@tigris.blisses.org) (Changing host)
[03:34:39] *** Joins: mason (~mason@redhat/mason)
[03:34:45] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[03:34:47] *** Joins: ueberall (ueberall_l@user/ueberall)
[03:34:52] *** Joins: sloth (~sloth@84.16.241.179)
[03:35:10] *** Joins: zeus (~user@user/kamyl)
[03:35:16] *** Joins: seoul_man (~meh@097-080-088-148.res.spectrum.com)
[03:35:17] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[03:35:17] *** Joins: merpaderp (~ircuser@89.111.36.243)
[03:35:17] *** Joins: bleb (~cm@user/bleb)
[03:35:21] *** Joins: Hawker (~pi@user/hawker)
[03:35:22] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[03:35:22] *** celphi_ is now known as celphi
[03:35:24] *** Joins: subie (~subie@2601:4c0:4080:bc0:69a0:5e70:87f6:e6d)
[03:35:24] *** Joins: Croran (~Croran@71.231.214.173)
[03:35:24] *** Joins: bmodotdev (bmo@user/bmodotdev)
[03:35:25] *** Joins: ew73 (~ew73@ec2-3-92-179-243.compute-1.amazonaws.com)
[03:35:27] *** Joins: klys (~mdasoh@show.op8.us)
[03:35:27] *** Joins: x5c30 (~x5c30@user/x5c30)
[03:35:30] *** Joins: Bossi (~quassel@p4fc22a7d.dip0.t-ipconnect.de)
[03:35:36] *** Joins: koolazer (~koo@user/koolazer)
[03:35:37] *** Joins: webstrand (~webstrand@user/webstrand)
[03:35:51] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7110:14fe:9923:a896)
[03:36:27] *** Joins: Bluewind (~Bluewind@user/bluewind)
[03:37:21] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[03:38:09] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[03:38:24] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[03:39:35] *** Joins: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2)
[03:42:24] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[03:42:59] *** Quits: Pali (~pali@user/pali) (Ping timeout: 250 seconds)
[03:43:04] <vms14> btw I don't get the existence of Filter::Simple
[03:43:21] <vms14> actually Filter::Util::Call is extremely simple
[03:45:06] <vms14> and where is the documentation for C and external source filters?
[03:45:15] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[03:45:16] <vms14> in perlfilter they're just named
[03:46:01] <vms14> and perlfilter is one of the shortest pods I've seen in perldoc
[03:46:15] <vms14> perldoc: perlfilter
[03:46:15] <perlbot> vms14: Your documentation is available at: https://perldoc.perl.org/perlfilter
[03:47:27] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[03:47:57] <vms14> well not so short
[03:48:18] <vms14> but I'd like to find external and c filters documentation
[03:48:29] *** Joins: gast0n (~g4570n@user/gast0n)
[03:49:08] <vms14> actually to learn how to make a filter you just need to read the Filter::Util::Call pod and make a hello world test
[03:49:56] <vms14> can I make it trigger with a function call or another moment except just when the "use x"?
[03:50:26] <vms14> tried with a function that adds the filter when called, but didn't work
[03:50:51] <vms14> I understand filters work by file and suppose can be because of this, but meh
[03:52:12] *** Quits: gloin (~gloin@user/gloin) (Remote host closed the connection)
[03:52:28] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[03:56:06] *** Joins: gloin (~gloin@user/gloin)
[04:00:17] *** Quits: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[04:01:48] * GumbyPAN CPAN Upload: DBIx-Custom-0.45 by KIMOTO https://metacpan.org/release/KIMOTO/DBIx-Custom-0.45
[04:02:49] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[04:07:54] *** Joins: EvanCarroll (~ecarroll@50.222.187.218)
[04:15:14] *** Joins: zgu (~zgu@2603-7080-b704-0800-e4e2-df43-fd5d-e657.res6.spectrum.com)
[04:22:01] *** Joins: alex11 (~alex11@user/alex11)
[04:26:51] * GumbyPAN CPAN Upload: Encode-Simple-1.002 by DBOOK https://metacpan.org/release/DBOOK/Encode-Simple-1.002
[04:36:37] <graham> my Catalyst webserver doesn't log server errors anywhere. For example, if you visit https://hydra.nixos.org/search?query=errorattributelibmissing it'll eventually time out and raise a DBI Exception. Is there a way to, uh, encourage, the logging of these errors?
[04:36:59] *** Quits: vms14 (~user@149.red-79-153-96.dynamicip.rima-tde.net) (Remote host closed the connection)
[04:39:40] *** Joins: rgrinberg (~textual@187.223.209.106)
[04:40:59] <simcop2387> graham: use Log4j and let people enable logging for you? :)
[04:41:09] <graham> oh good idea
[04:41:24] <simcop2387> graham: https://metacpan.org/dist/Catalyst-Manual/view/lib/Catalyst/Manual/Tutorial/07_Debugging.pod this might be helpful
[04:41:24] <Paperbot> Link title(s): [ Catalyst::Manual::Tutorial::07_Debugging - Catalyst Tutorial - Chapter 7: Debugging - metacpan.org ]
[04:41:32] <graham> I'll give this a shot https://metacpan.org/pod/Java
[04:41:32] <Paperbot> Link title(s): [ Java - Perl extension for accessing a JVM remotely or locally - metacpan.org ]
[04:41:48] <simcop2387> that said, I'm sure someone here will have some more specific advice
[04:42:13] <simcop2387> graham: also if you need some laughs, https://log4jmemes.com/
[04:42:14] <Paperbot> Link title(s): [ log4j memes ]
[04:59:06] *** Quits: Martchus_ (~martchus@2a01:c22:76a8:7500:d250:99ff:fe49:3cce) (Ping timeout: 245 seconds)
[05:01:29] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[05:05:19] *** Joins: Martchus (~martchus@dynamic-095-115-068-240.95.115.pool.telefonica.de)
[05:05:51] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:08:10] *** Joins: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f)
[05:09:41] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[05:10:13] *** Joins: Martchus_ (~martchus@2a01:c23:c1b3:f400:d250:99ff:fe49:3cce)
[05:10:15] *** Quits: Martchus (~martchus@dynamic-095-115-068-240.95.115.pool.telefonica.de) (Ping timeout: 256 seconds)
[05:11:45] *** Quits: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f) (Client Quit)
[05:12:56] *** Joins: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f)
[05:14:13] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:18:35] *** Parts: johnjay (~pi@154.6.152.74) (WeeChat 3.3)
[05:18:52] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7110:14fe:9923:a896) (Quit: Textual IRC Client: www.textualapp.com)
[05:22:43] *** rbraun_ is now known as rbraun
[05:31:15] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[05:31:33] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[05:38:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[05:38:37] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[05:38:42] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 260 seconds)
[05:41:04] <daemon> perlbot uuid
[05:41:05] <perlbot> daemon: https://metacpan.org/pod/Data::UUID  : 5cbf0819-8086-4dd7-a141-6dac6efd00ff
[05:41:15] <daemon> is Data::UUID the favourite?
[05:41:20] <daemon> there are quite a few, not sure which to use
[05:41:35] <daemon> simcop2387, as an aside, perlbot does not have Data::UUID
[05:41:46] <daemon> perlbot eval: use Data::UUID; my $x = Data::UUID->new(); [$x->create_str(),$x->create_str(),$x->create_str()]
[05:41:47] <perlbot> daemon: ERROR: Can't locate Data/UUID.pm in @INC (you may need to install the Data::UUID module) (@INC contains: $BLEAD/lib/site_perl/5.35.5/x86_64-linux $BLEAD/lib/site_perl/5.35.5 $BLEAD/lib/5.35.5/x86_64-linux $BLEAD/lib/5.35.5) at (IRC) line 1. BEGIN failed--compilation aborted at (IRC) line 1. 
[05:41:59] * GumbyPAN CPAN Upload: App-Greple-subst-2.30 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-subst-2.30
[05:42:12] <Grinnz> i think Data::GUID is supposed to be be better
[05:42:28] <rjbs> Data::GUID is just a nicer API on top of Data::UUID.  And I always use Data::GUID instead of UUID.
[05:42:57] <daemon> ok dokey
[05:44:11] <daemon> hmm was hoping either of them had a ->next() or so method, basically the ->new() creates a single binary uuid and that is it, if you want a new random uuid you have to recreate the object
[05:45:28] <Grinnz> they both suffer a bit of unfortunate overuse of OO
[05:45:46] <Grinnz> which you could solve by writing a sub or two
[05:46:21] <daemon> ok ... https://dpaste.org/7Jgs
[05:46:22] <Paperbot> Link title(s): [ dpaste/7Jgs (Plain Text) ]
[05:46:23] <daemon> how does that happen
[05:46:34] <daemon> I appreciate the random generation is likely based partly on time
[05:46:36] <Grinnz> https://metacpan.org/pod/Data::GUID#IMPORTING has a few functions that seem easy enough but it isn't very clear
[05:46:37] <Paperbot> Link title(s): [ Data::GUID - globally unique identifiers - metacpan.org ]
[05:46:38] <daemon> did not think it was entirely based on time
[05:48:00] <Grinnz> possibly cause they're happening on the same stack?
[05:48:04] <Grinnz> but that's weird
[05:48:37] <daemon> indeed hmm
[05:53:26] <daemon> https://dpaste.org/Pf68
[05:53:26] <Paperbot> Link title(s): [ dpaste/Pf68 (Plain Text) ]
[05:53:29] <daemon> yeah GUID does the same too
[05:53:33] <daemon> must be a reason
[05:53:39] *** Quits: proller (~p@2a02:6b8:b081:8801::1:2d) (Ping timeout: 250 seconds)
[05:54:08] <daemon> new = This method returns a new globally unique identifier.
[05:55:01] <daemon> I notice the comments from the Data::GUID POD is 'remove dependency on wretched Data::UUID'
[05:55:08] <daemon> lets see what other uuid modules we have
[05:59:17] <daemon> https://dpaste.org/oRU0
[05:59:18] <Paperbot> Link title(s): [ dpaste/oRU0 (Plain Text) ]
[05:59:25] <daemon> seems the XS bound 'UUID' is the one to use
[05:59:40] <daemon> relies straight on uuid-dev c headers
[06:04:52] *** Quits: joshisanonymous (~joshisano@155-186-193-040.res.spectrum.com) (Quit: Leaving)
[06:05:37] <x5c30> if you're on linux, /proc/sys/kernel/random/uuid might be available and handy as another option. open and readline each time you want a uuid.
[06:06:21] *** Quits: Su-Shee (~Susanne@p50894141.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:06:24] *** Joins: proller (~p@80.240.216.69)
[06:06:55] <daemon> yeah I can't rely on that unfortunately but with UUID linking straight to lib-uuid I would expect it to be pretty good
[06:07:08] <daemon> it realy wants someone to write a nice wrapper for it
[06:07:47] *** Joins: Su-Shee (~Susanne@p508942c4.dip0.t-ipconnect.de)
[06:07:52] <daemon> might add it to the todo :)
[06:08:45] <daemon> I wonder if UUID's are meant to be uppercase or lowercase by standard
[06:08:55] <daemon> Data::UUID seems to be uc() UUID seems to be lc()
[06:09:16] <daemon> ah no distinction
[06:09:35] <daemon> though in the RFC it is suggested to use lowercase
[06:19:51] <zgu> i usually see them lowercase, at least on linux
[06:20:53] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[06:21:22] *** Joins: tejr (~tejr@user/tejr)
[06:21:47] <zgu> microsoft likes to use uppercase i think
[06:22:10] <zgu> but then again microsoft is usually case insensitive. so they're pretty much always lowercase in a sense
[06:27:17] <aquanight> keyword: usually
[06:32:37] *** Quits: EvanCarroll (~ecarroll@50.222.187.218) (Ping timeout: 240 seconds)
[06:42:11] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 250 seconds)
[06:45:17] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[06:45:24] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:46:58] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[06:49:29] *** Quits: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:54:26] *** Joins: EvanCarroll (~ecarroll@67-200-246-226.static.logixcom.net)
[07:00:56] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[07:29:49] *** Parts: emanuele6 (~emanuele6@user/emanuele6) (WeeChat 3.3)
[07:31:45] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[07:46:45] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 250 seconds)
[08:05:13] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[08:09:50] *** Joins: rgrinberg (~textual@187.223.209.106)
[08:10:32] *** Joins: Martchus (~martchus@2a01:c23:bdc6:f800:d250:99ff:fe49:3cce)
[08:11:41] *** Quits: Martchus_ (~martchus@2a01:c23:c1b3:f400:d250:99ff:fe49:3cce) (Ping timeout: 252 seconds)
[08:12:37] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Ping timeout: 240 seconds)
[08:19:13] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[08:23:29] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[08:24:32] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (Quit: GnuYawk)
[08:24:51] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[08:27:36] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[08:27:55] *** Joins: tejr (~tejr@user/tejr)
[08:32:48] *** Joins: jmdaemon (~jmdaemon@142.207.76.239)
[08:32:56] *** Quits: jmdaemon (~jmdaemon@142.207.76.239) (Remote host closed the connection)
[08:33:12] *** Joins: jmdaemon (~jmdaemon@142.207.76.239)
[08:33:45] *** pflanze__ is now known as pflanze
[08:42:13] *** Quits: jmdaemon (~jmdaemon@142.207.76.239) (Quit: ZNC 1.8.2 - https://znc.in)
[08:48:02] *** Joins: jmdaemon (~jmdaemon@142.207.76.239)
[08:51:26] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 260 seconds)
[08:53:32] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:54:06] *** Quits: jmdaemon (~jmdaemon@142.207.76.239) (Quit: ZNC 1.8.2 - https://znc.in)
[08:56:55] *** Quits: jlenz__ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[08:57:22] *** Joins: jmdaemon (~jmdaemon@142.207.76.239)
[08:59:07] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 250 seconds)
[08:59:10] *** Quits: jmdaemon (~jmdaemon@142.207.76.239) (Client Quit)
[09:00:46] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 260 seconds)
[09:01:54] *** Joins: fling (~fling@user/fling)
[09:02:01] *** Quits: veesh (~veesh@5.28.156.66) (Ping timeout: 256 seconds)
[09:03:29] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[09:06:44] *** Quits: EvanCarroll (~ecarroll@67-200-246-226.static.logixcom.net) (Ping timeout: 268 seconds)
[09:08:04] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[09:13:58] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:15:38] *** Joins: veesh (~veesh@5.28.156.78)
[09:16:11] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[09:16:22] * GumbyPAN CPAN Upload: App-Greple-msdoc-1.05 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-msdoc-1.05
[09:17:09] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[09:32:36] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[09:33:07] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:33:23] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[09:43:13] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:45:09] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[09:46:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[09:49:11] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:51:26] * GumbyPAN CPAN Upload: JSON-Schema-Modern-Document-OpenAPI-0.011 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-Document-OpenAPI-0.011
[09:52:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:52:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[09:53:01] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[09:56:57] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[10:01:04] *** Quits: last1 (last1@184.160.93.39) ()
[10:05:35] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[10:07:22] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:08:37] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:09:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:17:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[10:18:51] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 250 seconds)
[10:19:14] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:20:00] *** Joins: ztx (~ztx@user/ztx)
[10:24:13] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[10:27:42] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:29:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:30:41] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:30:42] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:33:50] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[10:49:04] *** Joins: mattil (~mattil@dy59b5czlxpccvr5lsvsy-4.rev.dnainternet.fi)
[10:49:41] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 256 seconds)
[10:50:46] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 245 seconds)
[10:51:16] *** Quits: mattil (~mattil@dy59b5czlxpccvr5lsvsy-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:51:32] * GumbyPAN CPAN Upload: Commons-Link-0.06 by SKIM https://metacpan.org/release/SKIM/Commons-Link-0.06
[10:51:54] *** Joins: mattil (~mattil@dy59b5czlxpccvr5lsvsy-4.rev.dnainternet.fi)
[10:53:11] *** Joins: WinterStar (~IceLight@user/icelight)
[10:56:36] *** Quits: mattil (~mattil@dy59b5czlxpccvr5lsvsy-4.rev.dnainternet.fi) (Ping timeout: 245 seconds)
[10:57:11] *** Quits: waltman (waltman@2601:4a:701:4451:2832:c501:4498:a347) (Ping timeout: 250 seconds)
[10:58:57] *** Joins: waltman (waltman@2601:4a:701:4451:a9cf:cf52:55d6:e342)
[11:03:37] *** Joins: mattil (~mattil@dy59b5czlxpccvr5lsvsy-4.rev.dnainternet.fi)
[11:07:17] *** Quits: mattil (~mattil@dy59b5czlxpccvr5lsvsy-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:16:15] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[11:19:05] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:20:45] *** Joins: tobybl (~tobybl@213.31.132.151)
[11:21:35] * GumbyPAN CPAN Upload: RxPerl-v6.10.0 by KARJALA https://metacpan.org/release/KARJALA/RxPerl-v6.10.0
[11:22:51] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[11:25:23] <merpaderp> Log::Log4perl is this vulnerable too?
[11:26:32] <Mandevil> No
[11:28:09] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:31:41] <merpaderp> that module actually looks nice, I should give it a try instead of implementing my own logging modules
[11:31:46] <Adura> It's a cursed name now, though.
[11:32:03] <Adura> Log4*
[11:33:01] <merpaderp> Log4and-you-got-ransomed
[11:33:06] <Mandevil> I use it in some projects, but I am not too excited about it.
[11:34:46] *** Joins: disconnect_me (~marcin@gl167-41.master.pl)
[11:36:42] <Mandevil> Test::Deep is really nice... should have started using it right away.
[11:36:47] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:41:17] <ovid_> Mandevil: Test::Deep is bundle with Test::Most. If you use that, you automatically get strict, warnings, Test::More, Test::Deep, Test::Differences, Test::Exception, and Test::Warn. You might also like Test::Kit (https://metacpan.org/pod/Test::Kit).
[11:41:18] <Paperbot> Link title(s): [ Test::Kit - Build custom test packages with only the features you want - metacpan.org ]
[11:42:19] *** Joins: Guest904 (~Guest90@185.79.154.4)
[11:42:32] <Guest904> sex?
[11:43:19] <Adura> perlbot: sex
[11:43:19] <perlbot> Adura: just like air, it's not important until you aren't getting any
[11:43:36] <Guest904> yeah nah that line is mine now
[11:43:42] *** Quits: Guest904 (~Guest90@185.79.154.4) (Client Quit)
[11:43:50] <El_Che> no better interface than a text=based protocol!
[11:46:31] <Mandevil> ovid_: I'm just starting with writing test... but I'll look at Test::Most
[11:49:42] <xenu> if you're writing new tests, Test2::V0 is what you want
[11:49:52] <xenu> test2 is the successor to Test::More and friends
[11:51:24] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:51:38] * GumbyPAN CPAN Upload: Apache2-Dummy-RequestRec-0.03 by JFF https://metacpan.org/release/JFF/Apache2-Dummy-RequestRec-0.03
[11:51:38] * GumbyPAN CPAN Upload: Apache2-RequestData-0.02 by JFF https://metacpan.org/release/JFF/Apache2-RequestData-0.02
[11:51:41] * GumbyPAN CPAN Upload: RxPerl-v6.10.1 by KARJALA https://metacpan.org/release/KARJALA/RxPerl-v6.10.1
[11:51:47] * GumbyPAN CPAN Upload: RxPerl-AnyEvent-v6.7.0 by KARJALA https://metacpan.org/release/KARJALA/RxPerl-AnyEvent-v6.7.0
[11:52:26] <Mandevil> xenu: Seems like quite lot to take in...
[11:52:57] <rindolf> xenu: thanks for the advice
[11:54:21] <xenu> here's a tutorial: https://metacpan.org/pod/Test2::Manual::Testing::Introduction
[11:54:22] <Paperbot> Link title(s): [ Test2::Manual::Testing::Introduction - Introduction to testing with Test2. - metacpan.org ]
[11:55:05] <xenu> hmm, now that i look at it, it's not very complete
[11:55:25] <xenu> but it should be enough for beginning
[11:55:46] <Mandevil> How do I do Test:Deep's methods() check for example?
[11:56:39] * GumbyPAN CPAN Upload: RxPerl-IOAsync-v6.8.0 by KARJALA https://metacpan.org/release/KARJALA/RxPerl-IOAsync-v6.8.0
[11:56:39] * GumbyPAN CPAN Upload: RxPerl-Mojo-v6.7.0 by KARJALA https://metacpan.org/release/KARJALA/RxPerl-Mojo-v6.7.0
[11:56:52] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[11:57:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[12:04:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:04:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[12:06:45] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 256 seconds)
[12:09:24] <Botje> I didn't even know that existed
[12:10:15] <xenu> Mandevil: something like this: https://perl.bot/p/igtoqg
[12:10:15] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[12:10:33] <xenu> it's documented here: https://metacpan.org/pod/Test2::Tools::Compare#OBJECT-BUILDER
[12:10:33] <Paperbot> Link title(s): [ Test2::Tools::Compare - Tools for comparing deep data structures. - metacpan.org ]
[12:10:57] <Botje> I'm getting a whiff of second system effect
[12:11:25] <Botje> but it's nice to see people reinventing smalltalk's ; operator
[12:11:40] <Mandevil> xenu: Thanks
[12:13:42] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[12:19:15] <xenu> usually i prefer to test methods individually, without that object {} stuff, though
[12:25:17] *** Joins: art1 (~romeyke@p200300ccdf085500855d4716d011aa72.dip0.t-ipconnect.de)
[12:28:17] <Mandevil> xenu: Don't forget that methods are often attribute accessors.
[12:28:35] <Mandevil> xenu: So basically data.
[12:29:43] <xenu> yeah, for struct-like objects it makes more sense
[12:31:42] * GumbyPAN CPAN Upload: MojoX-HTTP-Async-0.12 by CDN https://metacpan.org/release/CDN/MojoX-HTTP-Async-0.12
[12:37:33] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:37:34] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[12:38:20] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:46:44] * GumbyPAN CPAN Upload: Dancer2-Session-DatabasePlugin-1.0014 by AKALINUX https://metacpan.org/release/AKALINUX/Dancer2-Session-DatabasePlugin-1.0014
[12:46:59] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[12:53:23] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:58:21] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[12:58:57] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[12:59:06] *** Joins: pajamian (~pj@ghettoforge/pj)
[12:59:53] *** pj is now known as Guest2517
[12:59:53] *** Quits: Guest2517 (~pj@ghettoforge/pj) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[12:59:53] *** pajamian is now known as pj
[13:01:45] * GumbyPAN CPAN Upload: AWS-Lambda-0.0.34 by SHOGO https://metacpan.org/release/SHOGO/AWS-Lambda-0.0.34
[13:02:43] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:04:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:15:11] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[13:17:02] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[13:18:20] *** Joins: Pali (~pali@user/pali)
[13:31:24] *** Joins: hethw_ (~heth@46.238.32.56)
[13:33:51] *** Quits: hethw (~heth@46.238.32.56) (Ping timeout: 250 seconds)
[13:34:59] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:36:09] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:36:17] *** Quits: hethw_ (~heth@46.238.32.56) (Ping timeout: 240 seconds)
[13:36:22] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:42:12] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:46:50] * GumbyPAN CPAN Upload: UI-Various-0.02 by DORNER https://metacpan.org/release/DORNER/UI-Various-0.02
[13:49:17] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[13:49:19] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[13:51:17] *** Joins: hethw (~heth@85.14.7.247)
[13:55:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[13:56:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:06:53] * GumbyPAN CPAN Upload: Mojolicious-Plugin-AutoRoutePm-0.23 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-AutoRoutePm-0.23
[14:08:16] * LeoNerd grumbles about redhat -- https://rt.cpan.org/Ticket/Display.html?id=140169
[14:11:57] <Mandevil> Incorrect perl install in RedHat?
[14:13:29] <LeoNerd> I'm shocked! Shocked I tell you
[14:15:54] <ehuelsmann[m]> Typical.
[14:17:02] <ehuelsmann[m]> Why do people live their red hat so much if it can't even package Perl correctly (and hasn't since almost forever)?
[14:17:28] <LeoNerd> I think more recent redhats do it fine. It's just that the older ones still have something silly like 5-year support
[14:17:35] <LeoNerd> So people who are afraid of ever updating anything tend to stick to that
[14:18:39] <tm604> that looks like String::Tagged is packaged as an RPM, in which case it's missing the `perl-core` dependency
[14:18:51] <xenu> installing "perl" does install everything
[14:19:00] <xenu> the problem is when you have just "perl-interpreter"
[14:19:15] <tm604> plus perl 5.34 seems a bit new for a 5-year-support Redhat version!
[14:19:42] <LeoNerd> Hrm.. yeah. it does seem an odd combination. Hrm
[14:19:51] <xenu> anyway, you should declare dependency on "experimental"
[14:19:58] <LeoNerd> It's a core module
[14:20:06] <LeoNerd> Should I also declare dependency on strict and warnings?
[14:20:11] <xenu> many people do
[14:20:23] <xenu> also unlike strict and warnings, experimental is also on cpan
[14:21:05] <xenu> in fact, cpan is the upstream
[14:21:22] <ehuelsmann[m]> Dual life?
[14:22:27] <xenu> imo there's no reason not to declare dependency on literally everything
[14:22:43] <xenu> it's just two, three lines of code more
[14:24:43] *** Joins: proller (~p@80.240.216.69)
[14:24:58] *** Joins: jamesmartinez (uid6451@id-6451.helmsley.irccloud.com)
[14:25:52] <xenu> base.pm is a good example of something that seemed to be too core to be ever removed
[14:26:02] <xenu> i mean it still wasn't removed, but it could be now that parent.pm is a thing
[14:27:05] <xenu> similarly, maybe in the future we will come up with a better way to enable strict/warnings/experimental features/whatever
[14:27:12] <xenu> it's unlikely but not impossible
[14:27:27] <LeoNerd> The better way is  use VERSION;
[14:27:48] *** jamesmartinez is now known as BarbeDeCou
[14:27:50] <LeoNerd> At some point fairly soon I'm hoping to be able to implement it slightly nicer so it doesn't even have to load {strict,warnings,feature}.pm off the disk
[14:27:59] <LeoNerd> currently it does
[14:29:31] <xenu> the fact that 'strict.pm' even exists is weird
[14:29:37] <LeoNerd> Mhmm
[14:29:50] <LeoNerd> It should become just a little C function in the interpreter, and then renamed  strict.pod
[14:29:52] <xenu> why pragmas aren't first class citizens and instead we have weird global variables which take bitmasks
[14:30:01] <xenu> yeah
[14:30:29] <LeoNerd> It's on my list.. but.. eh. That's /just/ an "internals-neatening" sort of task
[14:30:38] <LeoNerd> I have hundreds of other more-user-visible things to do first
[14:30:42] <LeoNerd> try/catch/finally anyone? ;)
[14:31:20] <xenu> does finally give us anything that defer doesn't?
[14:31:28] <LeoNerd> Some people prefer the spelling. That's all
[14:31:38] <xenu> so feature parity with java
[14:31:39] <LeoNerd> try {A} finally {B}  is just    { defer {B}  A }
[14:31:59] <LeoNerd> The "feature" is that the code reads slightly nicer, because top-to-bottom is more in temporal order
[14:32:14] <LeoNerd> try { say "This happens first" } finally { say "This happens later" }
[14:32:28] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:32:44] <LeoNerd> It's a fairly small benefit, but .. eh. Since I'll be reüsing the defer mechanism to implement it, it's a tiny syntax sugar trick that keeps people happy
[14:32:53] <LeoNerd> Perl already has  A and B  <=>  B if A
[14:32:59] <LeoNerd> So I don't really mind
[14:33:13] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[14:33:14] *** Joins: csrf (~csrf@user/csrf)
[14:34:28] <xenu> yes but using a common keyword is unperlish
[14:34:37] <xenu> it should be 'eventually { }' or something like that
[14:34:40] <LeoNerd> lastly ;)
[14:34:52] <LeoNerd> Ohwait that might suggest an association with the `last` loopex
[14:40:26] <xenu> speaking of exception handling, the latest new buzzword in PL design are algebraic effects
[14:40:37] <xenu> basically exceptions and async/await combined into a single feature
[14:40:58] <xenu> i *think* haskell already has it and ocaml will have it soon
[14:41:10] <xenu> eli5 explanation: https://overreacted.io/algebraic-effects-for-the-rest-of-us/
[14:41:10] <Paperbot> Link title(s): [ Algebraic Effects for the Rest of Us — Overreacted ]
[14:43:46] <BinGOs> have_at_it { } oh_fuck { } ultimately { }
[14:44:16] <LeoNerd> BinGOs: I considered submitting an April 1st RFC to rename try/catch to:  fuck_around { ... } find_out { ... } 
[14:44:56] *** Joins: sbrothy (~sbrothy@192038130164.mbb.telenor.dk)
[14:49:21] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:49:53] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:50:16] <Altreus> furthermore...
[14:51:31] <LeoNerd> Mmmyes
[14:51:48] <LeoNerd> I like when grouped sets of keywords begin with the same letter
[14:52:07] <LeoNerd> It suggests we should rename 'die' to something beginning with f.  fail or fuckit or.. somesuch
[14:53:04] <Altreus> xenu: hmmm, interesting, it's like inner() except nonlocal
[14:53:18] <Altreus> f7u12?
[14:53:26] <Altreus> raku does have fail
[14:53:37] <Altreus> in fact I really like the failures concept
[14:53:54] <Altreus> it seems to tie in nicely with the null object concept that I've been wishing I had
[14:54:03] <Altreus> (not from raku but from talking with a friend)
[14:54:39] <Altreus> LeoNerd: er wait, what is die associated with that starts with f?
[14:55:11] <xenu> when someone dies you press 'f' to pay respects
[14:55:47] <Altreus> o
[14:55:50] <Altreus> of course
[14:55:57] <hethw> why syswrite rises an exception for :utf8 layer? https://perldoc.perl.org/functions/syswrite
[14:55:58] <Paperbot> Link title(s): [ syswrite - Perldoc Browser ]
[14:57:16] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[14:57:23] <xenu> hethw: https://github.com/Perl/perl5/issues/14839
[14:57:24] <Paperbot> Link title(s): [ RFC remove strange behaviour of sysread()/syswrite() on UTF-8 streams · Issue #14839 · Perl/perl5... ]
[14:57:32] <LeoNerd> Don't use sysread/syswrite via encodings, because they can't handle splitting multibyte sequences
[14:58:00] <LeoNerd> Make sure always to either use plain read/print (which is an odd spelling of the word "write"), or apply the encoding layer yourself and sysread/syswrite only on encoded bytes
[14:58:57] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[14:59:26] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[15:00:05] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 268 seconds)
[15:01:10] <hethw> xenu, tl;dr
[15:05:16] <hethw> LeoNerd, I see. thanks
[15:06:33] <aquanight> pack("b*", unpack("B*", pack("H*", ## probably the ugliest thing ever
[15:06:50] <LeoNerd> Hah. Yes.. the H format to pack realllllly shouldn't have ever been added
[15:06:59] * GumbyPAN CPAN Upload: XS-Parse-Sublike-0.16 by PEVANS https://metacpan.org/release/PEVANS/XS-Parse-Sublike-0.16
[15:07:00] <LeoNerd> It's totally unlike all the others. Should have had its own function
[15:08:50] <aquanight> eh, H wasn't the problem here
[15:09:02] <aquanight> the problem I needed to fix is the bit order
[15:09:13] <LeoNerd> Ah.. yeah.. that too :/
[15:09:29] <aquanight> specifically, vec()'s bit order is "weird"
[15:09:39] <LeoNerd> It makes sense for select()
[15:09:45] <LeoNerd> That's basically the only time it ever gets used
[15:14:22] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:16:13] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[15:17:00] * GumbyPAN CPAN Upload: Future-AsyncAwait-0.55 by PEVANS https://metacpan.org/release/PEVANS/Future-AsyncAwait-0.55
[15:17:15] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[15:22:00] * GumbyPAN CPAN Upload: Hustle-Table-v0.3.0 by DRCLAW https://metacpan.org/release/DRCLAW/Hustle-Table-v0.3.0
[15:40:17] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[15:42:02] * GumbyPAN CPAN Upload: Syntax-Keyword-MultiSub-0.02 by PEVANS https://metacpan.org/release/PEVANS/Syntax-Keyword-MultiSub-0.02
[15:42:15] <LeoNerd> ^-- now supporting `async multi sub`
[15:42:26] <LeoNerd> Or `multi async sub`, which is equivalent
[15:47:00] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[15:47:33] *** Joins: fentanyl (~chroot@user/sapi01)
[15:48:42] <fentanyl> Can someone tell me why when I wrap curl command inside `` i'm getting this 3 extra lies in front? Like "Total", "Received" and stuff? Whereas when I run curl on the command line it doesn't show any of that. https://paste.debian.net/plain/1223697
[15:49:07] <LeoNerd> I suspect curl tests STDOUT for isatty()
[15:50:26] <fentanyl> hmm, not sure what isatty() helps with.
[15:50:49] <Mandevil> It uses more "interactive" display when running on real tty
[15:50:55] <fentanyl> seems like a function to test against a FD if it's a terminal's FD.
[15:51:00] <fentanyl> *from man page
[15:51:03] <rindolf> perlbot: lwp
[15:51:03] <perlbot> rindolf: LWP - The World Wide Web library for Perl (LibWWW-Perl) - http://lwp.interglacial.com/ . See also LWP::UserAgent, LWP::Simple, WWW::Mechanize.
[15:51:29] <Mandevil> Mojo::UserAgent :)
[15:52:01] <rindolf> fentanyl: https://perl-begin.org/uses/web-automation/
[15:52:02] <Paperbot> Link title(s): [ Perl for Web Automation - The Perl Beginners’ Site ]
[15:52:26] <fentanyl> I'm using curl (and wanted to use it) but anyone know how I could disable that 3 lines of metadata? Or, why it's outputting in the first place?
[15:52:50] <daemon> my @command_output = split /\n/`curl blah`; 
[15:52:58] <daemon> then use standard array stuff
[15:53:04] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:53:25] <daemon> or https://metacpan.org/pod/WWW::Curl
[15:53:25] <Paperbot> Link title(s): [ WWW::Curl - Perl extension interface for libcurl - metacpan.org ]
[15:53:31] <daemon> or LWP
[15:53:35] <daemon> or mojo useragent
[15:53:48] <daemon> or maybe https://metacpan.org/pod/WWW::Curl::Simple
[15:53:49] <Paperbot> Link title(s): [ WWW::Curl::Simple - A Simpler interface to WWW::Curl - metacpan.org ]
[15:53:54] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:56:32] <fentanyl> I'm more familiar with the curl as a unix executable and it's more extensiable, also don't wanna use a module for a simple task like this.
[15:57:04] * GumbyPAN CPAN Upload: Net-DNS-1.33 by NLNETLABS https://metacpan.org/release/NLNETLABS/Net-DNS-1.33
[16:00:12] <choroba> What about curl -s?
[16:02:35] <fentanyl> choroba: Ah, that fixes the issue.
[16:02:48] <Altreus> httpie exists because of frustration with curl so I will always recommend it
[16:02:56] <Mandevil> fentanyl: You're clearly very familiar with curl :-P
[16:03:23] <Altreus> Curl is one of those ones where if you're familiar with it you hate it
[16:03:43] <Mandevil> Personally, I use wget :)
[16:03:48] <choroba> wget++
[16:03:53] <fentanyl> Hmmm...but why it works though? Lemme strace
[16:04:02] <Mandevil> And I've been there, using wget from perl code.
[16:04:38] <choroba> Also, https://metacpan.org/dist/HTTP-Request-FromCurl
[16:04:38] <Paperbot> Link title(s): [ HTTP-Request-FromCurl-0.35 - create a HTTP::Request from a curl command line - metacpan.org ]
[16:05:11] <Mandevil> choroba: But he wants not dependencies.
[16:05:39] <Mandevil> s/not/no/
[16:07:29] <fentanyl> Ok, here are the strace outputs.
[16:07:36] <choroba> https://corion.net/curl2lwp.psgi ;-)
[16:07:36] <fentanyl> with -s: https://cx21.havox.ru:4854/bin?id=cb31a787d396b2123a43cd21e48439d1e371e731
[16:07:38] <Paperbot> Link title(s): [ Curl-to-lwp - Convert Curl command lines to Perl ]
[16:07:43] <fentanyl> without -s: https://cx21.havox.ru:4854/bin?id=a3842a8f6fe3e9b4c8eee6c2f8040df0351becb7
[16:08:16] <Altreus> personally, I use httpie
[16:08:37] <Altreus> cos it's good :P
[16:08:41] <Mandevil> Altreus: But that's a different beast.
[16:08:51] <Mandevil> Altreus: Or does httpie download files?
[16:09:01] <Mandevil> With continuation support, recursion etc.?
[16:09:04] <Mandevil> I doubt it.
[16:09:13] <daemon> wget-r?
[16:09:37] <Mandevil> We're talking about httpie
[16:09:54] <Mandevil> It's a client for crafting HTTP requests and reading responses.
[16:10:02] <Mandevil> (written in python)
[16:10:32] <choroba> fentanyl: What's your question again?
[16:11:00] <fentanyl> choroba: Why was curl printing metadata when I use curl inside `` without -s option?
[16:11:18] <fentanyl> also, that strace output seems useless since both look identical.
[16:11:27] <fentanyl> so not sure why exactly curl prints that out.
[16:11:35] <fentanyl> *perl prints that out, I mean
[16:12:06] <daemon> LeoNerd, is probably right 
[16:12:43] <fentanyl> daemon: but i couldn't see a isatty() call
[16:13:07] <daemon> https://man7.org/linux/man-pages/man3/isatty.3.html
[16:13:08] <Paperbot> Link title(s): [ isatty(3) - Linux manual page ]
[16:13:22] <daemon> could use ipc::run to emulaet a pty
[16:13:24] <daemon> to test
[16:15:06] <Mandevil> BTW, if you do "curl <url> | cat" on commandline you see what's going on.
[16:15:22] <xenu> isatty isn't a syscall, strace won't see it
[16:16:23] <choroba> fentanyl: Do you mean curl in the command line doesn't output the lines?
[16:16:32] <fentanyl> choroba: yeah
[16:16:45] <Mandevil> Because it's what curl does, for god's sake.
[16:17:33] <xenu> many commands behave differently in the interactive mode
[16:17:36] <fentanyl> "curl lol.com" in command line doesn't output those 3 metadata lines. but inside a perl script `curl lol.com` does output those 3 prefix metadata
[16:17:50] <huf> you'll see *something* in strace
[16:17:52] <Mandevil> fentanyl: "curl lol.com | cat" does output them.
[16:18:01] <Mandevil> fentanyl: Is it so hard to actually try this?
[16:18:07] <choroba> or curl lol.com > /dev/null
[16:18:17] <Mandevil> Anything non-tty.
[16:18:22] <fentanyl> Hmm, I see
[16:18:31] <fentanyl> Mandevil: yeah, seems like that's the case.
[16:18:33] <choroba> The lines go to stderr
[16:19:22] <fentanyl> choroba: interesting. so `cat` captures the stderr (so does perl)
[16:19:27] <choroba> Same behaviour with curl -o
[16:19:44] <choroba> No, they capture stdout
[16:19:50] <choroba> stderr goes to terminal
[16:20:40] <fentanyl> ah, yeah. sorry.
[16:20:52] <fentanyl> so it's the curl's behaviour. 
[16:22:57] *** Joins: proller (~p@2a02:6b8:0:40c:33db:f79e:ea53:6ff6)
[16:27:08] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:27:55] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:27:57] <Altreus> Mandevil: sure it can, you just >
[16:28:24] <Altreus> there's also [--output FILE]
[16:28:49] <Altreus> if you redirect stdout it only outputs the body
[16:29:47] <Mandevil> Sure, but you won't get any of the nice things wget does.
[16:29:55] <Mandevil> And vice versa
[16:30:18] <Altreus> Dunno what those are
[16:30:20] <Mandevil> wget can mirror whole website in one go.
[16:30:29] <Altreus> But I use wget to get files and I use httpie to send http requests
[16:30:33] <Altreus> I don't use curl at all because it's shit
[16:30:42] <Altreus> I don't use wget to do curl stuff
[16:30:59] <Altreus> But I don't mirror entire websites in one go either
[16:31:08] <Mandevil> I don't do it often :)
[16:31:13] <Mandevil> But it's useful when I need to.
[16:31:21] <Altreus> More often I'm sending requests to an API and I want to be able to read the output
[16:31:26] <Altreus> (and the input)
[16:31:30] <Mandevil> Yeah, httpie is great for that.
[16:31:38] <Mandevil> If you link it with jq, you can do a lot.
[16:31:48] <Altreus> the only thing curl is good for is pasting commands that use curl
[16:32:13] <Altreus> like the one you use to install httpie :D
[16:33:01] *** Quits: tnez (~el@user/tnez) (Ping timeout: 250 seconds)
[16:33:20] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:34:03] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[16:37:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[16:39:46] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:42:09] * GumbyPAN CPAN Upload: ELab-Client-0.010 by AKHUETTEL https://metacpan.org/release/AKHUETTEL/ELab-Client-0.010
[16:45:07] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Quit: leaving)
[16:45:17] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[16:45:42] <simcop2387> altreus: mst: ology: grinnz: et al: https://photos.app.goo.gl/CfvYFSzKsgpeydRW6 buzz with his virtual schooling this morning
[16:45:43] <Paperbot> Link title(s): [ Shared album - Ryan Voots - Google Photos <https://photos.google.com/share/AF1QipMHT5V4ufoxOHy2B6y3YTpw-65wzhKEmIfrQZd3M2ATkC9QePnJrpj4q3ApOO1_hg?key=MUo1bjBTMjg1TTVQVU9CZ0FLRU9Vd1Y5VUI5ajlB> ]
[16:46:37] *** Quits: sbrothy (~sbrothy@192038130164.mbb.telenor.dk) (Quit: leaving)
[16:51:14] <xq> simcop2387: that cat's tail looks super fluffy
[16:51:28] <simcop2387> xq: he loves to put it in your face while you pet him too
[16:51:49] <simcop2387> it's only gotten fluffier as he's been eating and gotten some regular brushing
[16:52:03] <xq> nice
[16:53:26] <simcop2387> he seems to be a fiend for tuna so far.  like chicken and turkey too, very little luck with beef
[16:53:52] <simcop2387> i'll have had him a week tomorrow so i'm still finding out what he likes.  though he *finally* played for a bit last night with some toys
[16:54:40] <LeoNerd> Fussy cat
[16:54:44] *** Joins: sbrothy (~sbrothy@192038130164.mbb.telenor.dk)
[16:55:41] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:57:00] <SlayerXP> simcop2387: keep developing that trust and, at some point, you'll take your rightful place in the cat's brain as "heated furniture".
[16:57:24] <rindolf> simcop2387: cute!
[16:57:40] <simcop2387> SlayerXP: that's already started, he'll demand pets by sitting next to you and just putting a paw on you and staring.  eventually a claw though if you don't respond
[16:57:49] <simcop2387> not aggressively, just suggestively
[16:58:16] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[17:07:55] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[17:08:07] <Altreus> suggestive kitty
[17:08:29] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[17:10:35] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[17:11:14] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[17:17:33] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:18:25] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[17:22:45] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:27:42] <rindolf> Altreus: i'd be happy to read a post about writing docs
[17:29:37] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:30:19] <Altreus> I've got time off soon, so I'll be trying to catch up on stuff like that anyway
[17:33:19] *** Quits: randir (~randir@95-25-15-224.broadband.corbina.ru) (Remote host closed the connection)
[17:33:56] *** Joins: tnez (~el@user/tnez)
[17:34:43] *** Joins: randir (~randir@95-25-15-224.broadband.corbina.ru)
[17:34:53] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 268 seconds)
[17:35:38] *** Quits: sbrothy (~sbrothy@192038130164.mbb.telenor.dk) (Read error: Connection reset by peer)
[17:37:51] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 245 seconds)
[17:40:10] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:49:35] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[17:50:57] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[17:51:23] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 252 seconds)
[17:53:33] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[17:55:47] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 252 seconds)
[17:58:21] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[17:58:53] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[17:58:54] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[17:58:59] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[18:03:02] *** Joins: monkey_ (~user@181.114.17.106)
[18:06:56] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[18:07:17] *** Quits: randir (~randir@95-25-15-224.broadband.corbina.ru) (Quit: Leaving...)
[18:08:06] *** Joins: randir (~randir@95-25-15-224.broadband.corbina.ru)
[18:08:36] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[18:09:06] *** Quits: Richlv (~rich@nakts.net) (Ping timeout: 245 seconds)
[18:10:58] *** Joins: Richlv (~rich@nakts.net)
[18:11:52] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 268 seconds)
[18:14:15] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[18:14:25] <TieUpYourCamel> you name all your cats after meats?
[18:14:54] *** Joins: gast0n (~g4570n@user/gast0n)
[18:18:41] <Altreus> one cat called buzz
[18:21:19] <revhippie> There's always Roast Beef - http://achewood.com/index.php?date=01162004
[18:21:20] <Paperbot> Link title(s): [ Achewood § January 16, 2004 ]
[18:24:51] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:25:26] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[18:29:53] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 252 seconds)
[18:30:33] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[18:33:30] *** Parts: disconnect_me (~marcin@gl167-41.master.pl) ()
[18:36:07] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[18:36:21] * GumbyPAN CPAN Upload: Hadoop-HDFS-Command-0.006 by BURAK https://metacpan.org/release/BURAK/Hadoop-HDFS-Command-0.006
[18:37:00] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[18:39:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:41:45] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[18:44:44] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 252 seconds)
[18:45:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[18:46:22] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[18:46:26] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 260 seconds)
[18:47:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:48:19] *** Joins: jaytee80 (~jaytee80@206.208.33.20)
[18:49:23] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[18:54:07] *** Joins: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it)
[18:54:19] *** Quits: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it) (Changing host)
[18:54:19] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:56:26] <daemon> hey all, imagine I was doing session start up for a service where the connecting client was issued a UUID, a client also negotiates what it offers: client->server (Hey I offer peanuts,crisps,beer and I am a potato), server->client Ok your session is UUID4. Is there a module that can link together a hash of 'offers' peanuts,beer,peanuts along side the uuid and the type 'potato', so I can access $obj and ask what offers beer, and it returns a list of 
[18:56:26] <daemon> uuid's or alternatively I can say remove_session(uuid) and it removes all services offered, same for $obj->type('interface')
[18:56:35] <daemon> could do it with a hash and a few if's etc
[18:56:39] <daemon> but wondered if there was anything already made
[18:58:07] <daemon> I know I could use SQLITE really would prefer not to for something so light though really do not want any more external resources
[18:58:07] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 268 seconds)
[19:00:20] <daemon> was going to go with something like: https://dpaste.org/E4K0
[19:00:21] <Grinnz> that's just an inverted index which you can implement with a hash in-memory, or a database persistently
[19:00:21] <Paperbot> Link title(s): [ dpaste/E4K0 (Plain Code) ]
[19:00:39] <daemon> well yeah I was doing it with a hash but I wondered if there was any modules that did it
[19:00:52] <Grinnz> push @{$offered{$_}}, $uuid for @things_offered;
[19:00:59] <Grinnz> not really a point in a module
[19:01:14] <daemon> try not to use arrays do not want to ahve to search them with things that are so absolute
[19:01:27] <daemon> could put it in its own little package I suppose to make it tidier
[19:01:28] <daemon> eh 
[19:01:30] <Grinnz> it's not for searching, it's in case more than one uuid offers an item
[19:01:35] <Grinnz> *inverted* index
[19:01:46] <Grinnz> you want to make the hash keys the specific thing you're looking up
[19:02:06] <daemon> yeah there will be lots of duplicate offers here
[19:02:57] <daemon> inform_1 => { UUID1=>{_stub=>1}, UUID2=>{_stub=>1}, UUID3=>{_stub=>1} }
[19:03:00] <daemon> for the function inform_1
[19:03:03] <daemon> was what I was thinking
[19:03:12] <daemon> so the uuid is a key of the function/offered
[19:03:42] <daemon> just for the ease of removing it should that offer be revoked
[19:08:16] <Grinnz> sure
[19:08:19] <hethw> is there any function like system() but actually returning the output of the command?
[19:08:39] <Grinnz> readpipe, also known as backticks, but consider https://metacpan.org/pod/IPC::ReadpipeX so you can run it in list form
[19:08:39] <Paperbot> Link title(s): [ IPC::ReadpipeX - List form of readpipe/qx/backticks for capturing output - metacpan.org ]
[19:08:59] <Grinnz> or IPC::Run3 if you want both STDOUT and STDERR (and also list form)
[19:09:09] <daemon> could also arguable use ipc::run its self
[19:09:24] <Grinnz> IPC::Run can do it too, as well as many other things
[19:09:40] <daemon> my $harness = start \@cmd,'<pty<', \$stdin,  '>pty>', $child_out;
[19:09:47] <daemon> it looks kinda strange pretty well
[19:09:48] <daemon> :)
[19:09:50] <Grinnz> IPC::Run3 is just much simpler
[19:10:03] <Grinnz> when you don't need piping/ptys/etc
[19:10:17] <hethw> I just need simple test so anything will do thanks
[19:10:29] <daemon> backticks are generally the fast and dirty way
[19:10:51] <Grinnz> readpipe unfortunately only lets you run it via the shell, which means you need to escape any input for the shell
[19:11:14] <Grinnz> similar to 1-argument system()
[19:11:22] <xq> I am surprised no one mentioned open with -|
[19:11:31] <Grinnz> xq: that's just IPC::ReadpipeX
[19:11:31] <xq> which can also take @list
[19:11:36] <daemon> wonder how difficult it would be to make atoms in hashes a thing, rather than key=>time or key=>1 etc
[19:11:44] <Grinnz> it literally shows that as the equivalent code
[19:20:34] *** Joins: mattil (~mattil@87-92-14-145.bb.dnainternet.fi)
[19:22:01] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:22:17] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[19:24:12] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[19:26:39] *** Joins: gast0n (~g4570n@user/gast0n)
[19:26:48] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[19:27:03] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[19:28:20] *** Quits: mattil (~mattil@87-92-14-145.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[19:30:17] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[19:31:27] * GumbyPAN CPAN Upload: HTTP-Request-FromCurl-0.36 by CORION https://metacpan.org/release/CORION/HTTP-Request-FromCurl-0.36
[19:33:33] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:34:25] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[19:39:31] *** Quits: hethw (~heth@85.14.7.247) (Ping timeout: 256 seconds)
[19:44:08] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[19:44:17] *** Parts: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) ()
[19:46:18] *** Quits: jaytee80 (~jaytee80@206.208.33.20) (Quit: Client closed)
[19:46:29] * GumbyPAN CPAN Upload: String-Copyright-0.003012 by JONASS https://metacpan.org/release/JONASS/String-Copyright-0.003012
[19:46:53] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[19:53:08] *** Joins: jaytee80 (~jaytee80@206.208.33.20)
[20:00:00] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[20:05:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:05:20] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:10:00] *** Quits: Martchus (~martchus@2a01:c23:bdc6:f800:d250:99ff:fe49:3cce) (Quit: ZNC 1.6.3 - http://znc.in)
[20:12:03] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:13:31] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[20:16:32] * GumbyPAN CPAN Upload: CallBackery-0.40.5 by OETIKER https://metacpan.org/release/OETIKER/CallBackery-0.40.5
[20:26:40] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[20:32:03] *** Joins: Martchus (~martchus@2a01:c23:bdc6:f800:d250:99ff:fe49:3cce)
[20:32:47] *** Quits: deadmarshal (~deadmarsh@95.38.231.95) (Ping timeout: 256 seconds)
[20:33:20] *** Joins: deadmarshal (~deadmarsh@95.38.228.81)
[20:39:55] <daemon> hey all https://metacpan.org/pod/Dist::Zilla::PluginBundle::Starter::Git
[20:39:55] <Paperbot> Link title(s): [ Dist::Zilla::PluginBundle::Starter::Git - A minimal Dist::Zilla plugin bundle for git workflows -... ]
[20:40:03] <daemon> revision = 5 ; always defaults to revision 3?
[20:40:08] <daemon> revision of what
[20:40:38] <daemon> oh I see itsp art of @Starter
[20:42:50] <Grinnz> it defaults to revision 3 so as not to change anyone's existing config. revision 5 is the latest and you should use it
[20:43:26] <daemon> ah brand new shiny config and env :)
[20:43:40] <daemon> just wondering if I should also use managed_versions 
[20:44:31] <daemon> hmm interesting requires the old our $VERSION in modules
[20:44:43] <daemon> makes sense though
[20:44:59] <daemon> yeah I think that sounds good
[20:45:18] <Grinnz> i recommend reading through https://metacpan.org/pod/Dist::Zilla::PluginBundle::Starter#CONFIGURING
[20:45:18] <Paperbot> Link title(s): [ Dist::Zilla::PluginBundle::Starter - A minimal Dist::Zilla plugin bundle - metacpan.org ]
[20:45:31] <daemon> yep already am well presently on https://metacpan.org/pod/Dist::Zilla::PluginBundle::Starter#Revision-5
[20:45:32] <Paperbot> Link title(s): [ Dist::Zilla::PluginBundle::Starter - A minimal Dist::Zilla plugin bundle - metacpan.org ]
[20:45:44] <daemon> looking at managed version and regenerate
[20:47:13] <daemon> ah nextrelease.filename is that how you can force people to update the changelog
[20:47:31] <daemon> no that is checkchangeshascontent
[20:50:06] <daemon> yikes there are lots of plugins
[20:51:08] <daemon> wait so ... if I use [checkchangeshascontent] do/should I use [NextRelease] while also using managed_version = 1
[20:51:24] <daemon> or will that automatically create changelog entries meaning [checkchangeshascontent] is useless
[20:53:12] <Grinnz> no, they're unrelated
[20:53:25] <Grinnz> nothing there automatically creates changelog entries. that's your job
[20:53:25] <daemon> ok dokey
[20:53:45] <Grinnz> also, managed_versions uses NextRelease, you don't
[20:53:50] <daemon> 'To automatically add the new release version to the distribution changelog, use [NextRelease] as the "managed_versions" option does. To ensure the release has changelog entries, use [CheckChangesHasContent].
[20:53:59] <daemon> ok dokey
[20:54:11] <daemon> think I have something workable
[20:54:19] <Grinnz> it adds the release version, you add the content
[20:54:31] <daemon> ah that is how I have seen it work with Altreus's config
[20:55:41] <Altreus> Yes I'm pretty sure I ended up writing a wiki page on dzil when I was there :P
[20:56:02] <daemon> Altreus, yep, but thought I would have a read through dzil my self :)
[20:56:06] <Altreus> That's why there's an Author::OpusVL setup
[20:56:09] <daemon> and this is personal box anyhow
[20:56:21] <Altreus> yeah - it's different :)
[20:56:57] <daemon>  2015 you wrote it
[20:57:16] <daemon> well that is what you set as the copyright_year anyhow
[20:58:24] <Altreus> probably never updated it
[20:58:29] <daemon> mhmm
[20:58:50] <daemon> Altreus, https://wiki.opusvl.com/wiki/Dist::Zilla
[20:58:53] <Paperbot> Link title(s): [ Login required - OpusVL ]
[20:58:53] <daemon> assuming your ldap still works
[20:59:36] <daemon> you appear to be hosting appkit minting profiles on your personal github though
[20:59:38] <daemon> according to these docs lol
[21:00:08] <daemon> so profiles lets see what these things are
[21:00:17] <daemon> oh wait I done this before
[21:00:23] <daemon> this is where you can make skeletons for stuff
[21:00:30] <daemon> I think my bsd box already has this
[21:03:08] <daemon> ~ there is nothing really stopping me making a .tar.gz of ~/.dzil and shoving it in my user-setup git repo I suppose
[21:03:22] <daemon> Grinnz, are you aware of any static paths in .dzil/ its self (in any of the configs)
[21:03:50] <Grinnz> what?
[21:04:05] <daemon> in any config under ~/.dzil are there any static paths ever mentioned
[21:04:29] <Grinnz> what's a static path
[21:04:38] <daemon>  /full/path/to/anything/on/a/file/system
[21:04:45] <daemon>  rather/than/a/relative/one
[21:04:54] <daemon> does not appear to be any paths at all
[21:04:55] <Grinnz> doubt it
[21:04:59] <daemon> cool
[21:23:32] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[21:23:55] <Altreus> wow apparently in the old days the way to test a query was to dig into the internal data structure of DBIC and compare it to a hardcoded hashref
[21:24:00] <Altreus> not to like ... run it
[21:24:58] <Altreus> daemon: oh I'm sure they're on the opus github too, so probably ancient docs
[21:25:26] *** Joins: diskin (~diskin@87.117.59.168)
[21:26:31] <daemon> Altreus, any idea what I did wrong here https://dpaste.org/a837
[21:26:32] <Paperbot> Link title(s): [ dpaste/a837 (Plain Text) ]
[21:26:49] *** Joins: hodbogi (~fatalnix@user/fatalnix)
[21:26:51] <daemon> just tryingh to get a profile setup for apps etc
[21:26:55] <daemon> but somehow broke dz at the same time 
[21:27:02] <hodbogi> You broke it!
[21:27:05] <hodbogi> Why did you break it?
[21:27:13] <daemon> for fun why ever else
[21:27:16] <hodbogi> hmm.
[21:27:34] <Altreus> Don't think you should put project-specific config in your global config file
[21:27:45] <daemon> oh are they per project
[21:27:48] <daemon> so they should go in the profile
[21:27:53] <daemon> rather than the config.ini
[21:27:59] <Altreus> er
[21:28:30] <Altreus> they go in the dist.ini of your dist ... the profile will generate that
[21:28:37] <daemon> yeah there meant to go in dist.ini not config.ini
[21:28:41] <daemon> so this stuff wants to be in the profiles
[21:28:56] <daemon> though I was sure the %PAUSE one was in config.ini already
[21:29:10] <Altreus> I'm pretty sure % stuff is your user config and @ stuff or plain stuff is dist.ini
[21:29:24] <Altreus> I'm sure you can put % stuff in a dist.ini but I never have
[21:29:27] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[21:29:27] *** Quits: diskin (~diskin@87.117.59.168) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[21:29:27] *** diskin_ is now known as diskin
[21:29:29] <daemon> I see
[21:29:40] <daemon> its because I removed the plaintext password required for %PAUSE
[21:29:43] <daemon> it cannot work with just the username
[21:29:46] <daemon> I expected it to prompt me
[21:29:52] <Altreus> The idea being that your author information - like PAUSE - goes in there, but the distribution itself knows what it needs and how to build it
[21:30:34] <Altreus> so if you have @Starter::Git in config.ini then either it won't use it or every project will use @Starter::Git, even if it shouldn't
[21:31:01] <daemon> ye so I will want 4 profiles
[21:31:03] <Altreus> oh right, you can have profiles in your ~/.dzil can't you? Yeah that's where that would go
[21:31:11] <daemon> git-app app git-module module
[21:31:14] <daemon> or something like that
[21:31:32] <daemon> probably opusvl as well
[21:31:33] <Altreus> Pretty sure there are also profiles in various users' personal setups too
[21:31:44] <Altreus> well why would you make one not in git :)
[21:31:46] <daemon> actually no
[21:31:51] <daemon> no opus in this directory, my box
[21:31:53] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:31:54] <daemon> :)
[21:32:13] <Altreus> but normally the profiles are things like catalyst app, mojo app, etc
[21:32:15] <daemon> so now where is the guide on setting up profiles
[21:32:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[21:32:20] <Altreus> not git/no-git
[21:32:25] <Grinnz> daemon: the [%...] sections are for your config. the other stuff is for your dist.ini
[21:33:08] <Grinnz> also, the starter minting profile documents how to customize minting profiles
[21:33:19] <Altreus> Normally I've used a MintingProfile someone else made anyway
[21:33:32] <Grinnz> and you want to use the Starter::Git minting profile not the Starter one
[21:33:41] <daemon> Grinnz, I was suprised there was not a default created in profiles/
[21:34:00] <daemon> https://metacpan.org/pod/Dist::Zilla::MintingProfile::Starter::Git
[21:34:00] <Paperbot> Link title(s): [ Dist::Zilla::MintingProfile::Starter::Git - A minimal Dist::Zilla minting profile for git workflo... ]
[21:34:01] <Grinnz> it doesn't create anything until you tell it to. it has a default that doesn't use any files
[21:34:24] <Grinnz> the -P tells it to use the Starter::Git dist, not your profiles
[21:34:33] <daemon> can you tell dzil to dump what it thinks the default is
[21:34:41] <Altreus> isn't that just making a new dist
[21:34:42] <Grinnz> what
[21:34:56] <Grinnz> "If no provider or profile is configured or specified, dzil new will use the default local profile, or the default [@Basic] profile shipped with Dist::Zilla."
[21:34:58] <daemon> is it literally just a skeleton structure
[21:35:02] <Grinnz> that is the default
[21:35:14] <daemon> no templating at all
[21:35:28] <Grinnz> if you don't pass -P or -p it will use whatever you have in ~/.dzil/profiles/default, or the built in defaults
[21:35:35] *** Joins: veesh_ (~veesh@5.28.147.203)
[21:35:36] <Grinnz> which you don't want because that uses Basic
[21:36:05] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Remote host closed the connection)
[21:36:36] *** Quits: veesh (~veesh@5.28.156.78) (Ping timeout: 268 seconds)
[21:37:18] *** veesh_ is now known as veesh
[21:38:05] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:38:56] <daemon> right so I will start by just copying this https://metacpan.org/release/DBOOK/Dist-Zilla-PluginBundle-Starter-Git-v5.0.1/source/profiles/default
[21:38:57] <Paperbot> Link title(s): [ Browse DBOOK/Dist-Zilla-PluginBundle-Starter-Git-v5.0.1/profiles/default - metacpan.org ]
[21:38:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:40:33] <Grinnz> this is the default Basic profile https://metacpan.org/release/RJBS/Dist-Zilla-6.024/source/profiles/default
[21:40:33] <Paperbot> Link title(s): [ Browse RJBS/Dist-Zilla-6.024/profiles/default - metacpan.org ]
[21:40:45] <Grinnz> literally just makes a dist.ini with version = 0.001 and @Basic
[21:41:26] <hodbogi> Oh hey Grinnz is still aliv
[21:41:28] <hodbogi> alive*
[21:42:33] <daemon> just trying to work out if I want the default to actually use git, I mean I can create as many profile as I like ~ then again its more common to use git than it is not now days, so better to make a non-git profile as the non-default
[21:44:20] <Grinnz> the only git parts of that profile are that it installs a .gitignore and  initializes a git repo
[21:44:26] <daemon> ok so that makes sense, wonder what DistINI is
[21:44:36] <Grinnz> plugin that generates a dist.ini
[21:44:42] <daemon> is that what is normally 'dist.ini' in a new module
[21:44:51] <daemon> ok so 'append_file = plugins.ini'
[21:45:14] <daemon> ah that is when you add new sub modules
[21:45:15] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[21:45:19] *** hodbogi is now known as s3
[21:45:22] *** s3 is now known as S3
[21:45:29] <daemon> right got it so lets setup this skel
[21:45:32] <Grinnz> https://metacpan.org/pod/Dist::Zilla::Plugin::DistINI
[21:45:33] <Paperbot> Link title(s): [ Dist::Zilla::Plugin::DistINI - a plugin to add a dist.ini to newly-minted dists - metacpan.org ]
[21:45:42] *** S3 is now known as hodbogi
[21:45:59] <daemon> yep makes sense
[21:46:59] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[21:49:58] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[21:50:51] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[21:59:06] *** Quits: proller (~p@2a02:6b8:0:40c:33db:f79e:ea53:6ff6) (Ping timeout: 245 seconds)
[22:01:21] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[22:16:33] *** Joins: rgrinberg (~textual@187.223.209.106)
[22:19:13] <simcop2387> shutting off perlbot's servers so i can get some AI hardware.  brb
[22:20:13] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 240 seconds)
[22:20:40] <daemon> more dzil woes: https://dpaste.org/vXcG think I am almost there
[22:20:41] <Paperbot> Link title(s): [ dpaste/vXcG (Plain Text) ]
[22:20:48] <daemon> I expected this to do the git init its self?
[22:21:02] <Altreus> Found another test with a TODO in it complaining that DBIC changed the query structure so now the test fails
[22:21:24] <Altreus> Unironically failing to note that it's completely useless to perform that test for exactly that reason
[22:21:45] * GumbyPAN CPAN Upload: Test2-Harness-1.000092 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000092
[22:21:46] <daemon> I assume the test is checking old logic vs new logic to make sure it gets the same answer
[22:22:13] *** Quits: perldoc (~perldoc@24.88.49.194) (Ping timeout: 240 seconds)
[22:22:26] <daemon> probably worth deprecating at this point or doing a test that returns a known value rather than a comparison of logic
[22:22:32] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 240 seconds)
[22:23:28] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 268 seconds)
[22:23:32] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Ping timeout: 240 seconds)
[22:23:54] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 260 seconds)
[22:24:05] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 268 seconds)
[22:24:38] <daemon> never realized simcop ran so many bots
[22:25:02] <Altreus> he's the one true botnet
[22:25:31] <daemon> haha indeed, he is a component of it rather than a master :)
[22:26:08] <daemon> Altreus, oh yeah, https://i.imgur.com/ViZaklV.png
[22:26:14] <daemon> that moment you wish you had put more on a leveraged short
[22:26:19] <daemon> +523% -_-
[22:26:54] <Adura> That kaitlyn03 is a very advanced AI.
[22:27:12] <Altreus> well if you knew up front it wouldn't be risky would it
[22:27:14] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:27:27] <daemon> Altreus, I had a VERY good suspicion of what was going to happen, did not trust my judgement enough >.>
[22:27:56] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[22:28:21] <daemon> you have any idea about the dz problem I am having
[22:28:34] <daemon> want to get this rolled into my user-setup.sh
[22:28:42] <daemon> https://dpaste.org/vXcG
[22:28:42] <Paperbot> Link title(s): [ dpaste/vXcG (Plain Text) ]
[22:28:55] <daemon> so I can getback to writing me crypto bot :)
[22:33:10] <daemon> the market is green across the board as well, won't really start coming down till the early hours of the morning, I bet I can get 600% tomorrow, 1000% before christmas
[22:33:16] <daemon> I am going to leave it in to about 2000%
[22:33:24] <daemon> certain doge is going into the sea
[22:33:35] <Altreus> that's enough for today
[22:33:44] <Altreus> Factorio in half an hour https://twitch.tv/mraltreussir
[22:33:45] <Paperbot> Link title(s): [ Twitch ]
[22:33:51] <Altreus> see yas tomorrow
[22:33:56] <daemon> catch you later dood have a good game
[22:34:29] *** Joins: jpmh (uid510532@id-510532.helmsley.irccloud.com)
[22:37:25] <haarg> daemon: pretty sure you want [@Starter::Git] and [CheckChangesHasContent] to be in distmore.ini, not profile.ini
[22:37:38] <daemon> oh interesting
[22:37:44] <haarg> and add [Git::Init] to profile.ini
[22:38:20] *** Joins: magla (~gelignite@55d46610.access.ecotel.net)
[22:38:31] <daemon> perfect
[22:38:36] <daemon> right because git init has to happen first
[22:38:41] <daemon> and distmore will happen after the new
[22:38:48] <daemon> haarg++ # many thanks
[22:39:44] <daemon> hmm with the way that works does 'distmore' still work as a name, 'distpost' might be more appropriate
[22:39:46] <daemon> not that it really matters
[22:39:47] <daemon> gmm
[22:40:53] <daemon> I should probably add a Changes file to the skel too
[22:43:51] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:43:56] <daemon> aww you can't use {{$name}} in skel/Changes
[22:45:00] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[22:45:04] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[22:45:59] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[22:46:01] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[22:46:31] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[22:46:32] *** ChanServ sets mode: +v perlbot
[22:47:32] *** Joins: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com)
[22:47:39] <daemon> wb simcop2387 
[22:47:42] <daemon> kaitlyn03, test
[22:51:52] *** Quits: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[22:52:05] <haarg> daemon: {{ $dist->name }} should work
[22:52:20] <daemon> ah I assumed it would be a global, cheers again haarg 
[22:54:31] <simcop2387> and there we are, AI accelerator is now hooked up and ready for the doorbell
[22:55:01] <daemon> :D
[22:56:15] <daemon> haarg, if I was to use: https://dpaste.org/3v1m as my skel/Changes, the {{$NEXT}} will not be put in the resultant Changes in the module, obviously because dz is trying to treat it as a template var
[22:56:16] <Paperbot> Link title(s): [ dpaste/3v1m (Plain Text) ]
[22:56:24] <simcop2387> daemon: all local :) only thing now is to get a good power supply going for the raspberry pi, looks like i'm going to have to put a DCDC converter in there and run a longer power cable at a higher voltage
[22:56:25] <daemon> is there anyway to say ... no I want you to leave this in, do not try to convert it
[22:58:07] <daemon> hmm maybe I can shove stuff in the env's my self so then I could make {{$EXAMPLE}} equal '{{$NEXT}}' who when it replaces it, it replaces it for the correct template word and style
[22:58:52] *** Joins: proller (~p@2a02:6b8:b081:a428::1:24)
[22:59:35] <haarg> {{ '{{$NEXT}}' }}
[22:59:55] <daemon> ah right because a string for a string and single quote
[23:00:01] <daemon> haarg++ # more karma for you
[23:04:17] <hodbogi> simcop2387: going off grid? Also good to see you're still around heh
[23:05:12] <hodbogi> oh no just a normal project it looks
[23:06:50] * GumbyPAN CPAN Upload: ACME-Dzil-Test-daemon-0.001 by DAEMON https://metacpan.org/release/DAEMON/ACME-Dzil-Test-daemon-0.001
[23:06:50] <daemon> ok all perfect and tested, now time to make some other profiles :)
[23:06:57] <daemon> ignore that I already scheduled it for deletion
[23:07:53] <daemon> hmm actually only one module did not trigger, apparently I should have tried to make a readme from the POD
[23:07:58] <daemon> would I really want that though ...
[23:09:19] *** Parts: art1 (~romeyke@p200300ccdf085500855d4716d011aa72.dip0.t-ipconnect.de) ()
[23:14:49] <simcop2387> hodbogi: yea this is just me needing a solution for the fact that i can't put a real camera thing on the outside of my door (lease, apartment, etc.)
[23:15:04] <simcop2387> so i just hotglued a raspberry pi camera to the peephole
[23:16:03] <daemon> ok that was not as I expected, https://dpaste.org/5GjS I added -remove UploadToCPAN and -remove Git::Push, I want to make a 'nopublish' profile
[23:16:04] <Paperbot> Link title(s): [ dpaste/5GjS (Plain Text) ]
[23:16:17] <daemon> but when I do a dzil release it complains that, what I did is a syntax error
[23:16:23] <daemon> how do I tell it I do not want those two particular modules
[23:16:35] <Grinnz> ini configuration requires a = to assign values
[23:16:43] <daemon> ah
[23:17:03] <Grinnz> why are you removing UploadToCPAN?
[23:17:18] <daemon> because I have some modules that I use git and everything else but there simply not published
[23:18:12] <Grinnz> but you would still be using dzil release for something?
[23:18:28] <daemon> mainly just to bump the versions and make a nice sane commit message
[23:18:42] *** Quits: jaytee80 (~jaytee80@206.208.33.20) (Quit: Client closed)
[23:18:53] <revhippie> Did the "Changes" link on https://metacpan.org/pod/DBI used-to work?  I thought I'd seen it before, but tried to look something up now and... woosh.
[23:18:53] <Paperbot> Link title(s): [ DBI - Database independent interface for Perl - metacpan.org ]
[23:18:56] <daemon> I mean technically I could use a private git repo, so really I could get away with removing Uploadtocpan only
[23:19:17] <Grinnz> well a releaser plugin is required to run dzil release, so i would suggest replacing it with [FakeRelease]
[23:19:38] <daemon> hmm it makes sense to send it to private github to keep it safe
[23:19:45] <Grinnz> which is already done by Starter if you set FAKE_RELEASE=1
[23:19:51] <Grinnz> https://metacpan.org/pod/Dist::Zilla::PluginBundle::Starter#ENVIRONMENT
[23:19:51] <Paperbot> Link title(s): [ Dist::Zilla::PluginBundle::Starter - A minimal Dist::Zilla plugin bundle - metacpan.org ]
[23:19:53] <daemon> ta
[23:21:57] <daemon> god damnit, so I removed -git::push
[23:22:01] <daemon> and it still sent it to cpan anyway
[23:22:13] <daemon> oh no I removed git but not cpan
[23:22:18] * daemon slaps self
[23:22:34] <Grinnz> again, dzil release will not work if you just remove the releaser plugin
[23:22:53] <daemon> yeah I re-enabled the git one, just disabled the cpan one
[23:23:05] <Grinnz> Git::Push is not a releaser plugin
[23:23:09] <daemon> oh
[23:23:22] <Grinnz> UploadToCPAN and FakeRelease are the only releaser plugins
[23:23:38] <daemon> no problem I will simply include fakerelease in this profile
[23:23:47] <haarg> revhippie: what happens when you click the changes link?
[23:24:52] <revhippie> haarg: "The resource you requested could not be found." and a link to search for "Changes DBI".
[23:25:13] <daemon> perfect [FakeRelease] Fake release happening (nothing was really done)
[23:25:15] <haarg> what url does it take you to?
[23:26:02] <daemon> Grinnz++ # ta think I am almost setup, really should have continued learning DZ last year
[23:26:27] <pflanze> What's the best way to format a number rounded with n significant digits? E.g.  myfmt(0.001376321, 3) => "0.00138", myfmt(1.376321e20, 3) => "1.38e20".
[23:26:37] <revhippie> haarg: https://metacpan.org/dist/DBI/changes and then https://metacpan.org/search?q=%20%20Changes%20DBI which isn't helpful.  The DBI docs on the first page refer to "DBI::Changes" but it doesn't seem to be findable on metacpan.
[23:26:38] <Paperbot> Link title(s): [ DBI::Changes - List of significant changes to the DBI - metacpan.org ] [ Search for "  Changes DBI" - metacpan.org ]
[23:26:38] <Grinnz> sprintf
[23:26:51] * GumbyPAN CPAN Upload: ACME-Dzil-Test-daemon2-0.001 by DAEMON https://metacpan.org/release/DAEMON/ACME-Dzil-Test-daemon2-0.001
[23:27:07] <haarg> the dist/DBI/changes url works for me, and you can see it working for the bot just there
[23:27:11] <revhippie> haarg: ...but apparently Paperbot is getting something out of it.  Strange.
[23:27:21] <haarg> browser refresh?
[23:27:41] <Grinnz> try a hard refresh
[23:27:42] <revhippie> haarg: Yep, browser hard-refresh did it.  Weird.  Sorry to bother y'all!
[23:27:50] <Grinnz> caching is hard
[23:28:07] <haarg> less than ideal caching headers set there
[23:28:49] <pflanze> Re sprintf, I only know "%.3f", and that doesn't do what I want (it returns '0.001' and '137632100000000000000.000'' for my examples).
[23:29:07] <pflanze> aha %g
[23:29:41] <Grinnz> i don't know about formatting with scientific notation, that might be trickier
[23:29:59] <pflanze> No, %g actually works for both cases.
[23:30:07] <Grinnz> neat
[23:30:08] <pflanze> I wasn't aware of that.
[23:31:11] <simcop2387> daemon: home assistant + rpi camera + frigate + double-take + deepstack = peephole camera with face recognition and mobile notifications
[23:31:15] <simcop2387> all local :)
[23:31:57] <daemon> :D 
[23:32:10] <daemon> which home assistant
[23:32:11] *** Joins: jaytee80 (~jaytee80@206.208.33.20)
[23:32:50] <jaytee80> The programmer's credo: we do these things not because they are easy; but because we thought they were going to be easy.
[23:33:03] <daemon> .. or fun ;)
[23:33:50] <hodbogi> simcop2387: That sucks. When I had an appartment, I persuaded my landlords that I knew what I was doing so I could drill holes etc
[23:34:05] <hodbogi> I had to in order to get Internet and such, they even gave me the basement combo
[23:34:08] <hodbogi> for the lock
[23:34:46] <simcop2387> hodbogi: i can do all that, i just can't alter things in the hallway
[23:35:00] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 268 seconds)
[23:35:14] <simcop2387> that's been pretty typical of places i've lived.  inside is fine, outside in the common places is usually more restricted
[23:35:48] <simcop2387> daemon: home assistant: https://www.home-assistant.io/
[23:35:49] <Paperbot> Link title(s): [ Home Assistant ]
[23:36:08] <daemon> ah I see
[23:36:29] <daemon> I keep meaning to try MITM these proprietary smart bulbs we have in here and see if I can figure out how to talk to them on something but there stupid app
[23:37:15] <daemon> lumimax
[23:37:59] <daemon> perhaps home assistant can control them if I can figure out how to talk to them :)
[23:38:58] *** Joins: monkey_ (~user@181.114.17.106)
[23:42:24] <simcop2387> daemon: https://owncloud.simcop2387.info/s/EgCoXRZMnKEtQ9S
[23:42:26] <Paperbot> Link title(s): [ Nextcloud ]
[23:42:51] <simcop2387> daemon: lumimax uses the tuya protocol, it's already supported
[23:43:08] <daemon> ooh neat
[23:43:29] <daemon> I assume that is a really clear view of the peephole
[23:43:38] <daemon> the quality seems a little err vga on the picture :)
[23:43:59] <simcop2387> daemon: it's out of focus sadly, i can fix it by removing the camera and playing with the focus ring but i'm not doing that right now
[23:44:12] <simcop2387> i thought i had it dialed in but it's not
[23:44:21] <daemon> actually it looks like the entire picture is out of focus
[23:44:26] <daemon> including the panels
[23:44:30] <daemon> perhaps nextcloud downscaling?
[23:44:34] *** Joins: mattil (~mattil@87-92-14-145.bb.dnainternet.fi)
[23:44:43] <simcop2387> oh there might be something like that happening too
[23:44:45] <daemon> oh no I am wrong
[23:44:52] <simcop2387> should be able to click it and get full res
[23:45:07] <daemon> yep when I do that the panel looks perfect but the camera in the middle not so much
[23:45:18] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[23:45:19] <daemon> cool project anyhow
[23:45:28] <daemon> how long till you get robots to do your bidding :)
[23:45:30] <simcop2387> yea i'm going to fix it tomorrow once i get the cable guides i need to make it look nice on the door anyway
[23:45:44] <simcop2387> daemon: i already have home assistant able to control my vacuum
[23:45:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 240 seconds)
[23:46:04] <daemon> roomba?
[23:48:57] *** Quits: mattil (~mattil@87-92-14-145.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[23:49:20] <simcop2387> daemon: roborock, has a mop and mapping too
[23:50:02] <daemon> so can home assistant look through web cameras and stuff and say spot a spill or something on the floor and command the robot cleaner to go deal with it
[23:50:17] <daemon> or maybe time a daily clean
[23:52:17] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[23:52:47] *** Joins: rgrinberg (~textual@2806:101e:7:6946:95cc:8d5a:5708:c8d5)
[23:59:08] <simcop2387> daemon: not currently, though i suppose it wouldn't be impossible to do.
[23:59:47] <daemon> would be neat and interesting because things in rooms move, leave your laptop somewhere or something else
[23:59:49] <simcop2387> daemon: you'd want to train a model for frigate to use to detect spills visually and then have HA trigger a cleaning in that room.  but good luck with that training
[23:59:58] <daemon> assuming the automation thing is controlling the cleaning device
