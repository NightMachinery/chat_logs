[00:01:19] *** Quits: joe7057 (~joseph@wnpgmb016qw-ds01-2-119.dynamic.bellmts.net) (Ping timeout: 252 seconds)
[00:03:41] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[00:03:44] *** Joins: joe7057 (~joseph@wnpgmb016qw-ds01-2-119.dynamic.bellmts.net)
[00:15:46] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Ping timeout: 245 seconds)
[00:16:26] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[00:16:55] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[00:17:32] *** Quits: Halver[m] (~hoverhalv@2001:470:69fc:105::d0fe) (Ping timeout: 240 seconds)
[00:17:38] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (Ping timeout: 252 seconds)
[00:18:01] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 250 seconds)
[00:19:02] *** Quits: FelixFish[m] (~felixfish@2001:470:69fc:105::1:2e23) (Ping timeout: 240 seconds)
[00:19:05] *** Quits: InternetManaging (~imjmatrix@2001:470:69fc:105::1:2ea5) (Ping timeout: 250 seconds)
[00:19:17] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Ping timeout: 252 seconds)
[00:19:38] *** Quits: melonpurin[m] (~melonpuri@2001:470:69fc:105::1:299a) (Ping timeout: 260 seconds)
[00:21:51] *** Quits: duck[m]1 (~duckm]@user/duckm/x-2763650) (Ping timeout: 268 seconds)
[00:24:02] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[00:30:08] *** Quits: sonOfRa (sonOfRa@user/sonofra) (Remote host closed the connection)
[00:34:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:36:11] *** Joins: sonOfRa (sonOfRa@user/sonofra)
[00:36:45] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:36:50] *** Joins: InternetManaging (~imjmatrix@2001:470:69fc:105::1:2ea5)
[00:39:30] *** Joins: duck[m]1 (~duckm]@user/duckm/x-2763650)
[00:42:32] *** Joins: Halver[m] (~hoverhalv@2001:470:69fc:105::d0fe)
[00:48:12] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[00:50:48] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-e987-051e-5e5c-2913.res6.spectrum.com)
[00:52:17] *** Quits: raj (uid72176@user/raj) ()
[00:52:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:03:32] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[01:03:50] *** Joins: The_Tablet (~tablet@user/the-tablet)
[01:07:04] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[01:15:28] *** Joins: jbis (~jbis@pool-71-190-180-229.nycmny.fios.verizon.net)
[01:15:43] <jbis> Hi
[01:15:46] <jbis> https://security.stackexchange.com/questions/89383/why-does-the-ssl-tls-handshake-have-a-client-and-server-random
[01:15:53] <jbis> According to that, the client and server random prevent replay attacks. In TLS 1.3, ephemeral keys are created by both client and server. So whats the need of it in 1.3?
[01:16:31] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-71f8-eb14-0c59-711a.res6.spectrum.com)
[01:18:39] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[01:18:54] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e987-051e-5e5c-2913.res6.spectrum.com) (Ping timeout: 260 seconds)
[01:18:57] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[01:22:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[01:23:15] *** Joins: fulljab (~fulljab@paloboi.student.rit.edu)
[01:24:55] *** Joins: FelixFish[m] (~felixfish@2001:470:69fc:105::1:2e23)
[01:26:31] *** Joins: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320)
[01:34:49] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[01:35:12] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[01:37:21] *** Joins: nebu (~user@user/wavion)
[01:38:29] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[01:47:53] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[01:49:51] *** Joins: andreasbuhr (~quassel@p549db5b0.dip0.t-ipconnect.de)
[01:49:51] *** Quits: andreasbuhr (~quassel@p549db5b0.dip0.t-ipconnect.de) (Client Quit)
[01:50:44] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[01:52:04] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Write error: Connection reset by peer)
[01:52:05] *** Quits: FelixFish[m] (~felixfish@2001:470:69fc:105::1:2e23) (Read error: Connection reset by peer)
[01:52:06] *** Quits: Halver[m] (~hoverhalv@2001:470:69fc:105::d0fe) (Write error: Connection reset by peer)
[01:52:06] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (Read error: Connection reset by peer)
[01:52:07] *** Quits: InternetManaging (~imjmatrix@2001:470:69fc:105::1:2ea5) (Write error: Connection reset by peer)
[01:52:09] *** Quits: duck[m]1 (~duckm]@user/duckm/x-2763650) (Read error: Connection reset by peer)
[01:53:33] *** Joins: InternetManaging (~imjmatrix@2001:470:69fc:105::1:2ea5)
[01:56:57] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[02:01:11] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[02:01:11] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[02:01:11] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[02:01:11] *** Joins: FelixFish[m] (~felixfish@2001:470:69fc:105::1:2e23)
[02:01:11] *** Joins: Halver[m] (~hoverhalv@2001:470:69fc:105::d0fe)
[02:01:11] *** Joins: duck[m]1 (~duckm]@user/duckm/x-2763650)
[02:01:11] *** Joins: melonpurin[m] (~melonpuri@2001:470:69fc:105::1:299a)
[02:02:22] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[02:11:23] <rk4> TimMc: it ceases to be guaranteed memory safe if goroutines are used, i believe it is [was?] possible for things like bounds checking to fail
[02:12:04] <rk4> the normal undefined stuff you expect with data races :<
[02:12:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:12:47] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:13:53] <rk4> hm, random blog about it - https://blog.stalkr.net/2015/04/golang-data-races-to-break-memory-safety.html
[02:14:14] <rk4> it especially irks me because of the nature of the language features
[02:15:13] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 250 seconds)
[02:15:29] <rk4> it makes it trivial to spawn goroutines, which people interprete as making concurrency "easy". but it's like C and pointer arithmetic, it's "easy" to do, but hard to not fuck up
[02:16:11] <rk4> the language aside from giving you the common primitives built in [channels, locks] it does nothing to make concurrency easy
[02:16:22] <Peng> Love when a Go application runs with unlimited goroutines by default and chomps on my RAM. :D
[02:16:36] <rk4> you can't even mark a variable as immutable
[02:16:57] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[02:17:02] *** Quits: melonpurin[m] (~melonpuri@2001:470:69fc:105::1:299a) (Quit: Client limit exceeded: 20000)
[02:17:28] *** Quits: InternetManaging (~imjmatrix@2001:470:69fc:105::1:2ea5) (Quit: Client limit exceeded: 20000)
[02:17:47] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Client limit exceeded: 20000)
[02:18:12] *** Quits: FelixFish[m] (~felixfish@2001:470:69fc:105::1:2e23) (Quit: Client limit exceeded: 20000)
[02:18:52] <rk4> i'm not making this up as some sort of theoretical fuckup, every company i've worked at using go it's been trivial to find data races. probably they don't even use the race detector, but that's the lazy way out, most times just searching for `go ` in the codebase in an alarming number of instances
[02:19:07] *** Joins: InternetManaging (~imjmatrix@2001:470:69fc:105::1:2ea5)
[02:19:07] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[02:19:08] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[02:19:20] *** Joins: FelixFish[m] (~felixfish@2001:470:69fc:105::1:2e23)
[02:19:37] *** Joins: melonpurin[m] (~melonpuri@2001:470:69fc:105::1:299a)
[02:20:53] <wasamasa> go insane
[02:20:59] <rk4> it was so easy to introduce data races. once i did a `go closure` pattern, and had written "err = f()" in the closure instead of "err := f()" thus mutating the err the closure captured
[02:21:07] <ms7821> eeeee
[02:21:48] <rk4> sure it's _my_ fault, but fuck that is too easy for a "memory safe" language that makes concurrency alledgedly easy
[02:22:20] <rk4> this is all in a world where erlang already exists
[02:22:23] <rk4> </rant>
[02:23:17] <wasamasa> did you mean: rust
[02:27:23] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[02:27:51] <rk4> ah, i mentioned erlang because it existed before golang was existed and did the spawn lots of coroutine things that communicate through channels thing successfully. rust async story has only recently solidified, and we're still kind of still trying to work it out
[02:27:52] *** Joins: igemnace (~ian@user/igemnace)
[02:30:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:30:18] <rk4> [i don't find much need for concurrency beyond what native threads can provide myself, but the mainstream certainly got excited by async and seems to want it]
[02:30:41] <wasamasa> just kidding of course, but for some people mention rust when that go topic comes up
[02:30:52] <wasamasa> *some reason
[02:32:23] <rk4> it's reasonable, rust is memory safe [aside from unsafe blocks and bugs in compiler afaik]
[02:32:59] <MacGyver> The thing with coroutines is that it's potentially easier to reason about cooperative multitasking than it is about preemptive multitasking.
[02:33:13] <MacGyver> With a big fat honking "potentially" there.
[02:33:30] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[02:33:44] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:34:03] <rk4> this maybe be somewhat confounded by the coooperative multitasking runtimes often having preemptive ability :\
[02:36:22] <rk4> in rust async the yield points are explicit, but in go it's not! so i don't think you get any easier reasoning [maybe i'm just not good enough at go]
[02:36:34] <MacGyver> Yeah that's why it's *potentially* easier.
[02:36:42] <MacGyver> The way go does goroutines I'm not sure it is.
[02:37:16] <MacGyver> But then I guess the statement still holds, because goroutines aren't "pure" cooperative multitasking.
[02:37:35] <rk4> fair :)
[02:40:57] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[02:41:30] *** Quits: nebu (~user@user/wavion) (Ping timeout: 260 seconds)
[02:45:54] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[02:46:12] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[02:50:22] *** Joins: sav (~savio@177.12.50.57)
[02:50:46] *** sav is now known as Guest7295
[02:51:01] *** Quits: Guest7295 (~savio@177.12.50.57) (Remote host closed the connection)
[02:51:11] *** Joins: sm4ch (~savio@177.12.50.57)
[02:53:45] <tusko> kind wizards of cryptography, please I need your help
[02:55:03] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[02:59:08] *** jarthur_ is now known as jarthur
[03:01:00] *** Joins: nebu (~user@user/wavion)
[03:01:46] *** Joins: Tom (~Tom@2a01:e0a:2de:8130:61f0:45be:ff61:5419)
[03:02:12] <MacGyver> We may be wizards, but we're not mindreaders.
[03:02:21] <MacGyver> Just ask what you need.
[03:07:01] <tusko> https://bpa.st/43MA
[03:07:18] <tusko> There, I typed it up really nicely IMO :)
[03:07:45] <tusko> I've broken this in Python, but I want to do it in a shell script specifically
[03:09:44] <tusko> I think the actual key is like 0000...00042 or something, but I lost my code
[03:10:30] <aweinstock> $ openssl enc -help 2>&1 | grep -i -- '-[kK] '
[03:10:37] <aweinstock>  -k val         Passphrase
[03:10:41] <aweinstock>  -K val         Raw key, in hex
[03:10:49] <aweinstock> does `-K` do what you'd expect?
[03:10:57] <tusko> yo, you are the GOAT let me go try
[03:10:58] <MacGyver> Yeah I think that should be a capital K.
[03:11:33] *** Quits: nebu (~user@user/wavion) (Ping timeout: 250 seconds)
[03:12:12] <tusko> I get a ton (255 I think) of errors
[03:12:19] <tusko> bad decrypt
[03:12:20] <tusko> 140386496259456:error:0606506D:digital envelope routines:EVP_DecryptFinal_ex:wrong final block length:crypto/evp/evp_enc.c:599
[03:12:43] <MacGyver> It's probably complaining about the magic "number" because the -k argument adheres to the -pass format which has a <type>:<input> format.
[03:12:58] <MacGyver> But it looks like you really want it to use a certain key.
[03:13:00] <tusko> That error is with the -K argument
[03:13:09] *** Joins: nebu (~user@user/wavion)
[03:14:05] <aweinstock> is `ciphertext.enc`'s length a multiple of 16 bytes?
[03:14:59] <tusko> ciphertext.enc is a file with contents 5beed72ac6c91e16e5a705cbb4cf4417, which is 32 hex characters
[03:15:27] <int-e> you'll need -nopad -nosalt
[03:16:08] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[03:17:31] <tusko> That seems like it helped but still with command  openssl enc -d -aes-128-ecb -nopad -nosalt -in ciphertext.enc -out plaintext.dec -K "$(printf '%0.32x' $n)"
[03:17:51] <tusko> I get the error bad decrypt
[03:17:51] <tusko> 140692116575616:error:0606508A:digital envelope routines:EVP_DecryptFinal_ex:data not multiple of block length:crypto/evp/evp_enc.c:590:
[03:18:45] <tusko> I wonder what data it thinks is not a multiple of the block length
[03:19:17] <int-e> openssl enc -d -a -aes-128-ecb -nopad -nosalt -K $(printf '%0.32x' 0x42) <<<W+7XKsbJHhblpwXLtM9EFw==
[03:19:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:19:46] *** Quits: nebu (~user@user/wavion) (Ping timeout: 260 seconds)
[03:20:02] <tusko> Is that the raw bytes?
[03:20:07] <MacGyver> Does ciphertext.enc perhaps end in a newline?
[03:20:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[03:20:39] <tusko> MacGyver, I don't think so but I did check it. I deleted everything to the last char
[03:20:48] <int-e> tusko: in your version, ciphertext.enc should be raw bytes. -a makes it use base64 instead
[03:21:15] <MacGyver> Or, phrased differently, when dumping ciphertext.enc into xxd, do you get a multiple of 16 bytes?
[03:21:17] <tusko> oh cheeky
[03:25:52] <tusko> int-e, that's the base64 encoding of the message? How did you produce that?
[03:26:20] <int-e> dc <<<16i5BEED72AC6C91E16E5A705CBB4CF4417P | base64
[03:26:32] <int-e> which is certainly not the right tool
[03:27:01] <tusko> oh wow
[03:27:28] *** Quits: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320) (Ping timeout: 268 seconds)
[03:34:05] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[03:43:51] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 265 seconds)
[03:43:53] *** Joins: euouae (~euouae@user/euouae)
[03:49:23] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:51:08] *** Joins: Wulf (~Wulf@user/wulf)
[03:54:34] *** Quits: nadio (ice@starlight.iextreme.org) (Quit: leaving)
[04:13:50] *** Joins: rardiol (~quassel@user/rardiol)
[04:19:34] <tusko> int-e, any idea why this might complain about extra arguments?
[04:19:40] <tusko>  openssl enc -d -a -aes-128-ecb -nopad -nosalt -K "$(printf '%0.32x' 0x42)" "$(printf "<<<%s" $cipher)"
[04:19:46] *** Quits: euouae (~euouae@user/euouae) (Ping timeout: 256 seconds)
[04:20:03] <tusko> cipher=cipher = cat ciphertext.enc | xxd -r -p | base64
[04:21:23] <int-e> <<< isn't an argument, it's a way to specify stdin in some shells (bash is one of them)
[04:22:27] <int-e> just do <<<$cipher
[04:22:50] *** Joins: euouae (~euouae@user/euouae)
[04:23:10] <int-e> (if you have one of those shells; otherwise you can always do  printf ... | openssl ...
[04:24:09] <euouae> hey int-e
[04:24:24] <euouae> <- is p0a
[04:24:52] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[04:25:07] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[04:26:13] <tusko> alright! now we're cooking!
[04:26:53] <tusko> if only I could exclude the junk values other than by visual inspection
[04:32:27] <euouae> just wanted to say hi
[04:32:29] <euouae> got to go
[04:32:32] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[04:34:04] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[04:34:21] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[04:41:05] *** Quits: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[04:47:43] *** Quits: Tom (~Tom@2a01:e0a:2de:8130:61f0:45be:ff61:5419) (Read error: Connection reset by peer)
[04:50:02] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[05:02:09] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[05:15:11] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 252 seconds)
[05:27:56] *** Joins: Pythayr (~pither195@64.42.181.50)
[05:32:31] *** Joins: frost (~frost@user/frost)
[05:34:33] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 250 seconds)
[05:36:53] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:47:23] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[06:02:13] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[06:05:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:09:17] *** Quits: sm4ch (~savio@177.12.50.57) (Quit: Leaving)
[06:29:51] *** Quits: jbis (~jbis@pool-71-190-180-229.nycmny.fios.verizon.net) (Remote host closed the connection)
[06:33:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:37:10] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:46:36] *** Quits: fulljab (~fulljab@paloboi.student.rit.edu) (Read error: Connection reset by peer)
[06:50:29] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[06:57:17] *** Joins: w1ntermute (~textual@user/w1ntermute)
[07:03:23] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 250 seconds)
[07:05:11] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[07:09:20] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[07:16:04] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[07:16:58] *** Quits: w1ntermute (~textual@user/w1ntermute) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:27:51] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:29:39] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[07:59:25] *** Joins: w1ntermute (~textual@user/w1ntermute)
[08:03:22] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297)
[08:06:38] *** Parts: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297) (WeeChat 3.0.1)
[08:36:07] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[08:41:34] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[08:51:21] *** Quits: w1ntermute (~textual@user/w1ntermute) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:53:35] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.3)
[09:15:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:16:51] *** Quits: neildaemond (~neildaemo@ipv6two.tilde.club) (Quit: WeeChat 3.3)
[09:26:24] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:b4bb:f177:427:6bc) (Quit: WeeChat 3.1)
[09:36:19] *** Joins: osi (~osi@5.53.148.124)
[09:37:59] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[09:40:13] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 240 seconds)
[09:48:33] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Ping timeout: 268 seconds)
[09:53:32] *** Quits: ses (uid38151@id-38151.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:54:47] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[09:58:29] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374)
[10:08:37] *** Joins: qbt (~qbt@user/edun)
[10:08:37] *** Quits: qbt (~qbt@user/edun) (Client Quit)
[10:22:24] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[10:27:55] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:37:29] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 252 seconds)
[10:49:55] *** Joins: menace (~someone@ppp-93-104-168-246.dynamic.mnet-online.de)
[10:50:14] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.3)
[10:50:21] *** Quits: menace (~someone@ppp-93-104-168-246.dynamic.mnet-online.de) (Changing host)
[10:50:21] *** Joins: menace (~someone@user/menace)
[10:50:24] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[10:50:25] *** menace is now known as Deknos
[10:51:22] *** Joins: maroon2 (tinycrypt@136.32.225.142)
[10:52:53] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 252 seconds)
[10:52:53] *** maroon2 is now known as maroon
[10:53:24] *** Quits: maroon (tinycrypt@136.32.225.142) (Changing host)
[10:53:24] *** Joins: maroon (tinycrypt@user/maroon)
[11:06:49] *** Joins: jtgd (~jtgd@user/jtgd)
[11:24:25] *** Quits: Pythayr (~pither195@64.42.181.50) (Ping timeout: 252 seconds)
[11:24:35] *** Joins: andreasbuhr (~quassel@p548ddf4b.dip0.t-ipconnect.de)
[11:25:11] *** Quits: andreasbuhr (~quassel@p548ddf4b.dip0.t-ipconnect.de) (Client Quit)
[11:26:03] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[11:28:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:35:55] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[11:37:34] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:38:27] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[11:38:41] *** Quits: Halver[m] (~hoverhalv@2001:470:69fc:105::d0fe) (Quit: Client limit exceeded: 20000)
[11:40:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:46:35] *** Joins: mononote (~mononote@user/mononote)
[11:47:02] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 260 seconds)
[11:48:59] *** Joins: Pythayr (~pither195@64.42.181.50)
[11:51:56] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[12:03:09] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[12:03:13] *** Joins: brick (~br1ck@150.140.193.84)
[12:03:25] *** Quits: br1ck (~br1ck@150.140.193.84) (Ping timeout: 240 seconds)
[12:04:23] *** Quits: Pythayr (~pither195@64.42.181.50) (Ping timeout: 252 seconds)
[12:08:02] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:12:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:19:57] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:24:04] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[12:24:25] *** Joins: madage (~madage@user/madage)
[12:30:20] *** Joins: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca)
[12:35:21] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:dfae:931b:36c3:22e3)
[12:40:02] *** Joins: Fluxx (~Fluxx@user/fluxx)
[13:15:21] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[13:30:23] *** Joins: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320)
[13:35:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:40:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:41:14] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:47:06] *** Joins: rardiol (~quassel@user/rardiol)
[14:01:58] *** Quits: rardiol (~quassel@user/rardiol) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:04:13] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[14:08:16] *** Joins: Nimrodel (~Nimrodel@athedsl-59422.home.otenet.gr)
[14:12:21] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-71f8-eb14-0c59-711a.res6.spectrum.com) (Quit: jarthur)
[14:14:06] *** Joins: instantp10neer (~instantp1@user/instantp10neer)
[14:18:09] *** Quits: Nimrodel (~Nimrodel@athedsl-59422.home.otenet.gr) (Quit: Leaving)
[14:18:53] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Ping timeout: 250 seconds)
[14:20:07] *** Joins: instantp10neer (~instantp1@user/instantp10neer)
[14:20:38] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:25:16] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:25:46] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[14:25:59] *** Joins: madage (~madage@user/madage)
[14:32:32] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:32:41] *** Joins: gproto23_ (~gproto23@user/gproto23)
[14:32:59] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:33:08] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[14:33:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:37:48] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 265 seconds)
[14:38:40] *** Joins: frost (~frost@user/frost)
[14:46:25] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 268 seconds)
[14:50:29] *** Quits: edk (edk@libera/staff/edk) (Ping timeout: 630 seconds)
[14:51:35] *** Joins: edk (edk@libera/staff/edk)
[15:10:18] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:49a2:b187:a83c:8b86)
[15:14:34] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[15:18:43] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[15:24:47] *** Joins: qbt (~qbt@user/edun)
[15:24:47] *** Quits: qbt (~qbt@user/edun) (Client Quit)
[15:51:08] *** Quits: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com) (Read error: Connection reset by peer)
[15:56:41] *** Joins: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com)
[16:00:35] *** Joins: zro (~zro@user/zro)
[16:22:10] *** Joins: ses (uid38151@id-38151.hampstead.irccloud.com)
[16:26:56] *** Parts: Guyver2 (~Guyver@guyver2.xs4all.nl) (Closing Window)
[17:06:31] *** Joins: igemnace (~ian@user/igemnace)
[17:07:06] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:09:19] <TimMc> rk4: The examples in that blog post looked somewhat contrived, although I may just need more Golang knowledge to get it. Does your standard goroutine race bug allow things like stack and heap corruption?
[17:09:20] *** Joins: Halver[m] (~hoverhalv@2001:470:69fc:105::d0fe)
[17:10:48] <TimMc> The slice thing looks the most concerning -- it sounds like you could "overextend" an array by accident. Would writing integers into that array then allow you to do code execution?
[17:31:26] *** Joins: dez (uid92154@user/dez)
[17:33:14] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.3)
[17:34:49] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:36:36] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[17:40:56] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:49a2:b187:a83c:8b86) (Ping timeout: 268 seconds)
[18:10:29] *** Joins: Malvolio (~Malvolio@user/malvolio)
[18:10:36] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:ed59:5fa0:b222:ba9f)
[18:11:01] *** flooded is now known as _flood
[18:11:15] *** Joins: kish` (~sid742412@user/aqua)
[18:13:10] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[18:13:22] *** Joins: kish` (~sid742412@user/aqua)
[18:16:12] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[18:16:30] *** Joins: kish` (~sid742412@user/aqua)
[18:21:24] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[18:24:06] *** Joins: Elzington (~Elzington@68.235.43.38)
[18:34:02] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[18:40:48] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:42:12] *** Joins: rardiol (~quassel@user/rardiol)
[18:48:49] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:dfae:931b:36c3:22e3) (Ping timeout: 252 seconds)
[18:49:53] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[19:19:45] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:b249:a088:5dcc:2b78)
[19:26:35] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:b249:a088:5dcc:2b78) (Ping timeout: 252 seconds)
[19:37:20] *** Joins: Pythayr (~pither195@64.42.181.50)
[19:44:16] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:14:15] *** Quits: brick (~br1ck@150.140.193.84) (Ping timeout: 252 seconds)
[20:20:24] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:37:15] *** hayaliali is now known as alip
[20:40:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[20:46:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:10:39] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[21:26:05] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:29:21] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[21:40:27] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 250 seconds)
[21:41:41] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[21:44:54] *** Joins: aleck (~aleck@user/aleck)
[21:46:28] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 256 seconds)
[22:15:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:16:39] *** Joins: w1ntermute (~textual@ool-944b5acf.dyn.optonline.net)
[22:16:39] *** Quits: w1ntermute (~textual@ool-944b5acf.dyn.optonline.net) (Changing host)
[22:16:39] *** Joins: w1ntermute (~textual@user/w1ntermute)
[22:35:29] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:39:11] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:39:40] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:41:08] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[22:45:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:49:40] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:52:39] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 252 seconds)
[22:54:34] *** Joins: darkstarx (~darkstard@50.39.115.145)
[22:55:40] *** Quits: darkstarx (~darkstard@50.39.115.145) (Remote host closed the connection)
[22:56:06] *** Joins: darkstarx (~darkstard@50.39.115.145)
[22:57:39] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-71f8-eb14-0c59-711a.res6.spectrum.com)
[23:06:05] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[23:07:52] *** Joins: Narrat (~omnius@p200300df5f0fbf2d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:08:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:11:10] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:16:07] *** Quits: Narrat (~omnius@p200300df5f0fbf2d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[23:16:33] *** Joins: Narrat (~omnius@p200300df5f0fbf2d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:22:36] *** Joins: daveee (~daveee@cpe-74-74-198-176.rochester.res.rr.com)
[23:23:12] <daveee> Can AAVE be borrowed using the AAVE app?
[23:23:26] *** Parts: daveee (~daveee@cpe-74-74-198-176.rochester.res.rr.com) ()
[23:33:31] *** Quits: w1ntermute (~textual@user/w1ntermute) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:38:24] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[23:40:04] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 250 seconds)
[23:45:14] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[23:46:37] *** Joins: mononote (~mononote@user/mononote)
[23:55:22] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[23:57:22] *** Joins: masterboy9 (~masterboy@node-1w7jra2150n0vmo20ry14l0zz.ipv6.telus.net)
[23:58:04] <masterboy9> Hello everyone, so my friend sent me a cryptic email and I am not able to solve it, would anyone here be willing to try it out or help me out? I doubt its very complicated hahaha
[23:59:25] <wasamasa> does it mention african penis enlargement rituals?
[23:59:47] <masterboy9> no haha i think its just a hidden message
[23:59:51] <masterboy9> here is the contents
[23:59:53] <masterboy9> I wAnT to PLAy a GaME WiTH YoU
[23:59:53] <masterboy9> uypKprvWsS5yG8JYoX+X2CfSosauash2Ei2xfUpmEuM=
[23:59:54] <masterboy9> The path has begun, the light begins to shine at the end of the mystery, and we shall continue to prosper fourth and continue with our dexterity.
[23:59:54] <masterboy9> CN11+j5O21WHyxbMFonT0twZysxEB6ItE8MdYJie2NnrnPmdlppuzZz0x0P8GX2bjDOh0ZQYedPghvlnPQo6gbsCHduSclLq6tm/xaxcznvm3DjtKquDOVHbPEPbpAFw
