[00:00:48] *** Quits: Cata (~Cata@user/cata) (Quit: Leaving)
[00:02:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:02:54] *** Joins: wyclif (~wyclif@user/wyclif)
[00:03:58] *** Quits: Jefren (~Jefren@70.35.66.69) (Ping timeout: 252 seconds)
[00:04:52] <anddam> I have a problem building a wheel for a package that for its install phase is using an entry_script provided by another package, can someone run this small MRE and tell me why? https://github.com/anddam/issue-pip-wheel-entry-script-git
[00:05:06] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 260 seconds)
[00:05:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[00:06:02] *** Joins: Jefren (~Jefren@70.35.66.38)
[00:07:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:08:22] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Ping timeout: 268 seconds)
[00:08:25] *** Joins: wyclif (~wyclif@user/wyclif)
[00:08:29] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[00:11:27] *** Quits: y1n (~y1n@84-115-64-209.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[00:12:56] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[00:13:19] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 252 seconds)
[00:13:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:13:56] *** Joins: wyclif (~wyclif@user/wyclif)
[00:14:01] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[00:14:07] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:17:19] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Ping timeout: 252 seconds)
[00:17:37] *** Quits: Jefren (~Jefren@70.35.66.38) (Ping timeout: 268 seconds)
[00:18:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:19:27] *** Joins: wyclif (~wyclif@user/wyclif)
[00:19:33] *** Joins: Jefren (~Jefren@70.35.66.245)
[00:21:04] <foo> I have a list with dicts where each key is a datetime... or I can have a dict where each key is a datetime that I want to sort in a list by date. Is there a preferred date to use that's easy to sort on? Actually, I wonder if I can simply feed sort a datetime object
[00:23:01] <aphysically> I just had some code I was writing where I wanted ot check if something was "not in" a set intersection, so
[00:23:22] <aphysically> val not in (a & b), but then I wasn't sure if the parentheses were needed
[00:23:44] <bjs> if you're not sure, then they're definitely needed :)
[00:23:47] <aphysically> I figured out if the parentheses were needed by testing, but what do I need to read to understand the order of evaluation/grouping by default
[00:23:55] <bjs> aphysically: you read https://docs.python.org/3/
[00:24:28] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:24:32] <bjs> specifically Language Reference -> Expressions -> Operator precedence https://docs.python.org/3/reference/expressions.html#operator-precedence
[00:24:33] <aphysically> I've been slowly going through it, but I guess this is in syntax or something that I never paid much attention to?
[00:24:43] <aphysically> okay I'll look
[00:24:50] *** Joins: y1n (~y1n@84-115-64-250.wifi.dynamic.surfer.at)
[00:24:51] *** Joins: supakeen (~user@python/site-packages/supakeen)
[00:25:01] *** Joins: System123 (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com)
[00:25:43] <bjs> see `not in` is below `&` in the table, so you don't need parens.
[00:25:53] <bjs> but obviously, if you're not sure if you need parens, then you should put parens :)
[00:26:44] <aphysically> right, clarity trumping
[00:27:08] <bjs> aphysically: well, if you aren't sure then someone else, or indeed just you but tomorrow, will probably be unsure too
[00:27:29] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[00:28:56] <grym> i favor defensive parens on the grounds that code's meant to be read by a human, and future-me doesn't like thinking
[00:29:03] <aphysically> I should have realized this would be under operator precedence oof
[00:29:05] *** Quits: Jefren (~Jefren@70.35.66.245) (Ping timeout: 265 seconds)
[00:29:12] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:29:20] <bjs> aphysically: this *is* operator precedence :)
[00:29:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:29:38] <aphysically> yeah
[00:29:56] <bjs> `not in` sort of doesn't look like a normal operator because it's two words I guess, if it were `x + y & z` it'd probably have been much easier to recognize that was the section you needed
[00:30:24] *** Joins: wyclif (~wyclif@user/wyclif)
[00:31:15] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[00:31:53] *** Joins: cdown (~cdown@194.207.141.245)
[00:31:58] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[00:32:23] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[00:32:47] *** Joins: srhm (~srhm@user/srhm)
[00:33:45] *** Joins: Jefren (~Jefren@70.35.66.126)
[00:35:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[00:36:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[00:36:16] *** Joins: Vonter (~Vonter@user/vonter)
[00:36:58] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[00:37:08] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:37:12] *** Joins: nomic (~nomic@185.217.117.156)
[00:37:31] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[00:38:12] *** Joins: srhm (~srhm@user/srhm)
[00:38:35] *** Quits: Jefren (~Jefren@70.35.66.126) (Ping timeout: 268 seconds)
[00:39:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[00:40:05] *** Joins: Jefren (~Jefren@70.35.67.82)
[00:40:10] *** Quits: nomic (~nomic@185.217.117.156) (Client Quit)
[00:40:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:40:52] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[00:41:01] *** Joins: Schrodingerdur (~anrkey@2601:8c0:37f:6ce6:1991:e3db:6d8:26fb)
[00:41:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:41:26] *** Joins: wyclif (~wyclif@user/wyclif)
[00:42:03] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[00:45:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[00:46:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:46:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:47:06] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[00:47:11] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:47:13] *** Joins: wyclif (~wyclif@user/wyclif)
[00:49:15] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Quit: Leaving.)
[00:49:37] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[00:50:13] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:50:41] *** Quits: Strom (strom@fedora/strom) ()
[00:50:45] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[00:51:02] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[00:51:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[00:52:01] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[00:52:25] *** Joins: wyclif (~wyclif@user/wyclif)
[00:52:26] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[00:53:19] *** Joins: Strom (strom@fedora/strom)
[00:55:16] *** Quits: ferz (~ferz@93-39-142-235.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[00:56:26] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[00:57:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[00:57:57] *** Joins: wyclif (~wyclif@user/wyclif)
[00:58:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:58:43] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[00:59:54] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[01:00:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:00:59] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Read error: Connection reset by peer)
[01:02:42] *** Joins: fikran (~fikran@user/fikran)
[01:02:55] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[01:02:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:03:30] *** Joins: wyclif (~wyclif@user/wyclif)
[01:04:06] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[01:05:14] <rannnn8888> hello i have subscription in site give a news and i want get the to DATABASE , but the site its real time i need make requeste in loop ? or can make this with session ?
[01:05:21] <rannnn8888> i dont want the site block me
[01:05:59] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[01:06:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[01:08:11] *** Joins: JoelJoel (~jjshoe@user/joel)
[01:08:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:08:48] *** Quits: Jefren (~Jefren@70.35.67.82) (Ping timeout: 268 seconds)
[01:09:01] *** Joins: wyclif (~wyclif@user/wyclif)
[01:09:02] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 260 seconds)
[01:09:32] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[01:10:01] *** Joins: ferz (~ferz@93-39-142-235.ip76.fastwebnet.it)
[01:10:54] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 260 seconds)
[01:10:55] <cluelessperson> rannnn8888, look up the site's api if it has one, figure out their rate limits and respect them.
[01:11:03] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[01:11:22] *** Quits: y1n (~y1n@84-115-64-250.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[01:11:40] <rannnn8888> cluelessperson i have the api but i subscription  to the site pay, i dont want its block me :D
[01:12:06] <rannnn8888> but the site real time update if i make loop with request its see i make this nope ?
[01:12:18] <rannnn8888> or i can use with session ?
[01:13:14] *** Joins: Jefren (~Jefren@206.253.157.212)
[01:13:26] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[01:13:42] *** Quits: sudomann (~sudomann@2601:543:100:2e3:49e8:80d9:94e1:de89) (Quit: Leaving)
[01:14:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:14:31] *** Joins: wyclif (~wyclif@user/wyclif)
[01:16:40] *** Quits: MikZyth (~MikZyth@188.65.242.225) (Ping timeout: 240 seconds)
[01:17:41] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[01:17:42] *** Joins: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com)
[01:18:36] *** Quits: frozensoil (~frozensoi@bras-base-lnglpq1516w-grc-01-74-12-204-141.dsl.bell.ca) (Quit: Lost terminal)
[01:18:51] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[01:18:52] *** Quits: Jefren (~Jefren@206.253.157.212) (Ping timeout: 265 seconds)
[01:18:55] <baltazar> hi! is it not possible to unpack an asyncpg.Record? e.g `foo, bar, baz = await conn.fetchrow('...')`
[01:19:04] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 268 seconds)
[01:19:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:19:59] *** Quits: Akuli (~Akuli@87-94-111-156.bb.dnainternet.fi) (Quit: Leaving)
[01:20:02] *** Joins: wyclif (~wyclif@user/wyclif)
[01:20:31] <Yhg1s> baltazar: it should be possible, yes.
[01:20:47] *** Joins: Adoi (~Adoi@user/adoi)
[01:21:48] *** Joins: Jefren (~Jefren@70.35.66.123)
[01:22:37] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[01:22:55] *** Joins: Vonter (~Vonter@user/vonter)
[01:23:02] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[01:23:03] <baltazar> ah, I had an extra set of parentheses like `SELECT (foo, bar, baz) FROM ...`, which returned a record looking like { "row": { "foo": foo, "bar": bar, "baz": baz } }, so there was indeed only a single value to unpack
[01:23:43] *** Joins: khrbt (~znc@user/khrbt)
[01:23:57] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:24:56] *** Joins: y1n (~y1n@84-115-64-250.wifi.dynamic.surfer.at)
[01:25:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:25:21] <Samian> which would you use? if type(foo) == int. or if isinstance(foo, int):
[01:25:32] *** Joins: wyclif (~wyclif@user/wyclif)
[01:25:46] <Samian> isinstance makes sense when inheritance may happen. But I don't think python allows inheriting type int?
[01:25:50] *** Quits: JoelJoel (~jjshoe@user/joel) (Ping timeout: 260 seconds)
[01:25:51] <grym> Samian: bool
[01:25:57] <grym> so, isinstance for sure :)
[01:26:02] *** Joins: Joel (~jjshoe@user/joel)
[01:26:08] *** Joins: raxor2k (~raxor2k@78.158.248.203)
[01:26:16] <Samian> grym  bool?
[01:26:25] <matsaman> apparently isinstance accounts for inheritance
[01:26:28] *** Quits: Jefren (~Jefren@70.35.66.123) (Ping timeout: 252 seconds)
[01:26:31] <grym> Samian: isinstance(True, int) == True
[01:26:38] <grym> True + 5 == 6
[01:26:39] <grym> etc
[01:26:44] <raxor2k> i have a dict containing dicts of dates. is it possible to sort it by ascdending or descending order? : https://bpa.st/3DWA
[01:27:07] <grym> raxor2k: you can make a new dict whose insertion order is controlled in a particular way, anyway
[01:27:08] <Samian> grym  well I wouldn't want that
[01:27:13] <grym> Samian: well, bools are ints.
[01:27:24] <grym> so it's true whether or not you want it to be
[01:27:25] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:e948:f255:7659:c296) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:28:10] *** Joins: Jefren (~Jefren@70.35.67.84)
[01:29:15] <matsaman> raxor2k: sorted(dict) sorted(dict,reverse=True) ?
[01:29:20] <raxor2k> grym: that didnt tell me much..
[01:29:28] <raxor2k> matsaman: i try
[01:29:52] <grym> matsaman: i _think_ that only sorts the keys
[01:29:58] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[01:30:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:30:51] *** Joins: junktext (~junktext@109.201.152.173)
[01:31:03] *** Joins: wyclif (~wyclif@user/wyclif)
[01:31:08] <raxor2k> matsaman: worked perfectly! thanks
[01:31:12] <grym> ...
[01:31:30] <grym> sorted(somedict), so that we are clear, returns a list of the keyview items
[01:31:40] *** Quits: mike18 (~geri@217-149-162-127.nat.highway.telekom.at) (Remote host closed the connection)
[01:32:09] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[01:32:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:32:27] <raxor2k> grym: ok.
[01:32:42] <grym> raxor2k: so i don't understand how that could've solved your problem
[01:33:02] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:33:11] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:33:17] *** Joins: Vonter_ (~Vonter@user/vonter)
[01:33:28] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:34:07] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[01:34:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:34:29] *** Quits: computeiro (~Wender@189.37.67.248) (Remote host closed the connection)
[01:35:16] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:36:14] *** Lord_of_Life_ is now known as Lord_of_Life
[01:38:58] *** Quits: timdiels (~user@78-22-205-207.access.telenet.be) (Quit: leaving)
[01:40:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:40:59] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:41:13] *** Quits: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:42:02] *** Joins: wyclif (~wyclif@user/wyclif)
[01:42:43] *** Quits: Jefren (~Jefren@70.35.67.84) (Ping timeout: 268 seconds)
[01:43:04] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:43:21] <raxor2k> grym: ur right, it didnt.
[01:43:52] *** Joins: fofoni (~fofoni@user/fofoni)
[01:44:24] *** Joins: hyperknot (~hyperknot@2a02:3033:40a:fd69:857f:6a72:4229:186a)
[01:44:37] *** Joins: Jefren (~Jefren@70.35.66.157)
[01:44:52] *** Joins: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de)
[01:45:22] <matsaman> raxor2k: {k:v for k,v in sorted(dict.items())}
[01:45:31] *** Quits: hyperknot (~hyperknot@2a02:3033:40a:fd69:857f:6a72:4229:186a) (Client Quit)
[01:45:59] <grym> {k:v for k,v in sorted(dict.items(), key=lambda thepair: thepair[0])} , probably
[01:46:17] <grym> tuples do sort themselves, but not necessarily how you'd want
[01:46:18] <Samian> Is there a term for code path? The pathway a code takes? I want to say "For all code paths that handle multi-gpu cases, ..."
[01:46:28] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[01:46:29] <grym> Samian: yes, it's "code path" :)
[01:46:45] <Samian> I googled and couldn't find anyone using "code path" in a sentence
[01:47:40] <nedbat> Samian: https://www.google.com/search?q=site%3Anedbatchelder.com&q=%22code%20path%22
[01:48:04] *** Joins: canton7 (~canton7@about/csharp/canton7)
[01:48:35] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[01:50:06] *** Quits: Jefren (~Jefren@70.35.66.157) (Ping timeout: 260 seconds)
[01:51:05] <raxor2k> grym / matsaman : thanks !
[01:51:13] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[01:51:45] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 268 seconds)
[01:51:52] *** Quits: raxor2k (~raxor2k@78.158.248.203) ()
[01:52:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:52:47] *** Quits: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com) ()
[01:53:03] *** Joins: wyclif (~wyclif@user/wyclif)
[01:53:29] <baltazar> is there some function that parses a date like the `date` unix command? e.g supporting 'next thursday'
[01:53:48] <Samian> nedbat  cool
[01:55:06] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[01:55:10] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[01:57:28] *** Quits: magla (~gelignite@55d458e1.access.ecotel.net) (Quit: Stay safe!)
[01:57:48] <Fieldy> hello, in 3.7.11, is there any functional difference between these two (the quote types) on linux? #1: print('Checking for NEW files in', watchdog_base_directory)    #2: print("Checking for NEW files in", watchdog_base_directory)
[01:58:02] <nedbat> Fieldy: no, there is not
[01:58:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:58:10] <Fieldy> nedbat: thank you. grasping at straws here :P
[01:58:17] <nedbat> Fieldy: what's going on?
[01:58:19] * Fieldy rubs his eyes aaaah
[01:58:33] *** Joins: wyclif (~wyclif@user/wyclif)
[01:59:07] <Fieldy> nedbat: trying to do up a watchdog for file modifications. using an example now that just shows new creations. it's just taxing me as i'm not getting anywhere.
[01:59:41] <Fieldy> i still need to review some notes on this from someone yesterday, i'm just going through with a fine-tooth comb looking for noob level mistakes
[02:02:02] <Fieldy> I really have a lot of respect... so much respect... for those of you that do this stuff. i've never felt i'm programmer material, despite being highly technical in other areas :)
[02:03:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[02:03:36] *** Joins: Jefren (~Jefren@70.35.66.192)
[02:03:40] <Fieldy> alright, here's another one... I have been using Path() to specify full FILE paths, however in this case, i'm specifying a directory as a base. do I even need to use Path() like this? or just simply define it as a normal string?  watchdog_base_directory = Path('/dev/shm/watchdogtest/')
[02:03:47] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:03:49] *** Joins: wallace_mu200 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net)
[02:04:05] *** Joins: wyclif (~wyclif@user/wyclif)
[02:04:27] <Fieldy> i put some debugging stuff in to print the value of watchdog_base_directory at various places, and it is indeed /dev/shm/watchdogtest/
[02:05:20] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[02:05:31] *** Joins: MD500_Pilot (~MD500_Pil@gatekeeper.rstechnical.com)
[02:05:31] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:05:57] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:06:40] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:07:26] *** Joins: cuz (~user@38.140.58.234)
[02:07:29] <MD500_Pilot> Quick question, I have a function within a script that outputs some information that I need multiple times in my script, right now I just call it in each function where it is necessary but I was thinking of using a global at the beginning of the script to run it only once, but I have also been told to stay away from globals as much as possible in
[02:07:29] <MD500_Pilot> python, can I get some advice from you folks here?
[02:07:58] <bjs> MD500_Pilot: the advice might be to just use globals :)
[02:08:20] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[02:08:53] <MD500_Pilot> And I don't have an issue with using a global which seems better than rerunning the same function five different times, I was just wondering if there were good standard practice rules when it came to globals
[02:09:06] <MD500_Pilot> like - DON'T :-)
[02:09:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[02:09:30] <bjs> MD500_Pilot: the reason people don't like globals is it's hard to build large pieces of complex software with lots of global state hanging about, as global state is usually all implicit
[02:09:36] *** Joins: wyclif (~wyclif@user/wyclif)
[02:10:17] <bjs> it makes it hard to test functions deep inside the program, it makes it hard to understand what's going on when things go wrong and it can be hard to refactor as functions can randomly use (or update!) any part of that implicit state.
[02:10:36] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:10:39] <bjs> so people take that feeling they get and end up with a statement like "dont use globals" -- which captures what they feel in their projects fine, but kind of misses all the details
[02:10:47] <wallace_mu200> MD500_Pilot maybe you can consider cache the function, from functiontoosl import cache(3.9) or import lru_cache(<3.9)
[02:11:00] <MD500_Pilot> Got it, so globals can make things a lot more complicated
[02:11:38] <bjs> MD500_Pilot: if it's just what you call a "script", then putting `information = read_file_for_information()` or whatever just in the file and using `information` in various places will be fine
[02:11:41] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[02:11:42] *** Quits: y1n (~y1n@84-115-64-250.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[02:12:02] *** Quits: Jefren (~Jefren@70.35.66.192) (Ping timeout: 260 seconds)
[02:12:16] <MD500_Pilot> as a global, correct?
[02:12:22] <bjs> MD500_Pilot: well that would be a global
[02:12:27] <bjs> yeah
[02:12:42] <MD500_Pilot> I mean outside of the function, like at the top of the script
[02:12:50] <bjs> MD500_Pilot: yeah
[02:12:56] <bjs> those are globals
[02:12:58] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 260 seconds)
[02:13:06] <pycurious> is it safe to design a REST API that reads the email address from a url? For example https://myapiserver.com/email/{emaild} ? (GET)
[02:13:08] <Xavierdarkness>  
[02:13:32] <MD500_Pilot> got it, thank you. wallace_mu200 I will also check out the caching, I had never head of that before
[02:14:00] *** Joins: Jefren (~Jefren@208.104.190.11)
[02:14:14] *** Joins: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com)
[02:14:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[02:14:52] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[02:15:08] *** Joins: nomic (~nomic@185.217.117.156)
[02:15:08] *** Joins: wyclif (~wyclif@user/wyclif)
[02:15:11] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 268 seconds)
[02:16:23] *** Joins: System12_ (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[02:16:48] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:17:55] *** Joins: wallace_mu20070 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net)
[02:18:24] <wallace_mu20070> I need some protips for oop design
[02:18:32] <wallace_mu20070> Say, I have a class with some instance methods that can be static, they are called by other instance method.
[02:18:32] <wallace_mu20070> my collleage try to force me to put those into functions.
[02:18:33] <wallace_mu20070> I agree in general. but dose it make sense?
[02:18:33] <wallace_mu20070> the only reason to put into function is because those instance method can be static?
[02:18:34] <wallace_mu20070> what's the point to make it function and the function will only be used by the class.
[02:18:34] <wallace_mu20070> put them in the class, to me, is more mantenanable, and child class can choose which method they want to override.
[02:18:35] *** litharge sets mode: +q $a:wallace_mu200
[02:18:35] *** Quits: Jefren (~Jefren@208.104.190.11) (Ping timeout: 260 seconds)
[02:19:06] *** litharge sets mode: -q $a:wallace_mu200
[02:19:09] <bjs> hmm litharge is a bit overzealous sometimes
[02:19:30] *** Quits: System123 (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[02:19:45] <Yhg1s> wallace_mu20070: you were silenced by flood protection there, I'm not sure if you said anything after "put them in the class, to me, is more mantenanable, and child class can choose which method they want to override."
[02:20:02] *** Quits: wallace_mu200 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[02:20:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[02:20:24] *** Joins: Jefren (~Jefren@70.35.67.185)
[02:20:25] <Yhg1s> wallace_mu20070: the question is whether subclasses are likely to want to override the method. If it doesn't at all involve or use the class, it makes more sense as a function because it's easier to read, comprehend, test and maintain if it isn't in the class.
[02:20:25] <bjs> wallace_mu20070: i guess the problem is that lots of people come from languages like Java where they just *cant* have functions outside of classes so sometimes people go too far and put everything into a class.
[02:20:29] *** Joins: qlixed (~qlixed@152.170.36.244)
[02:20:38] *** Joins: wyclif (~wyclif@user/wyclif)
[02:21:22] *** Quits: System12_ (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[02:21:24] <energizer> there is a reason to use staticmethod: classes provide a namespace, so multiple classes can each have their own version, and passing different classes around, each can use its appropriate staticmethod.
[02:21:40] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:21:52] <wallace_mu20070> Yhg1s it will be very like some method will be overloaded by child class if requirement varied. so that will fall in to 'design for future' hole
[02:21:55] <bjs> I dislike using classes as namespaces, as I've seen even very seasoned Python developers get the semantics of the class namespace wrong
[02:22:03] <energizer> (if all implementers use the same name for the staticmethod)
[02:22:06] <bjs> namely the skipping to globals stuff
[02:22:08] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Quit: Leaving.)
[02:22:39] <energizer> bjs: you're talking about mutating class state?
[02:22:50] <bjs> energizer: no, I just mean that class scopes are weird
[02:23:10] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Quit: bibi!)
[02:23:11] <energizer> bjs: how is staticmethod related to class scope?
[02:23:19] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:23:25] *** Quits: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com) (Ping timeout: 268 seconds)
[02:23:38] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-7d2a-9186-6c17-caeb.res6.spectrum.com) (Read error: Connection reset by peer)
[02:23:44] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[02:23:50] <rannnn8888> selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 94
[02:23:51] <rannnn8888> Current browser version is 93.0.4577.82 with binary path C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
[02:23:54] <bjs> energizer: you said it's useful so you can make classes that act as namespaces. I say that it's not common and that classes don't make very good namespaces in general (the weird scoping is one reason why)
[02:23:54] <wallace_mu20070> energizer i really like what you just said `there is a reason to use staticmethod: classes provide a namespace, so multiple classes can each have their own version`
[02:24:04] <rannnn8888> what i need download
[02:24:39] <energizer> bjs: i mean a pure function can be a staticmethod. A.f() is different from B.f() but they both implement the same interface
[02:24:50] *** Joins: y1n (~y1n@84-115-65-77.wifi.dynamic.surfer.at)
[02:24:50] <Yhg1s> energizer: just because something doesn't use self doesn't mean it should be a staticmethod, though.
[02:24:54] *** Quits: Strom (strom@fedora/strom) ()
[02:25:17] <Yhg1s> rannnn8888: looks like you need to download Chrome version 94.
[02:25:25] <energizer> bjs: the class provides a namespace in the sense that it contains the staticmethods, not in the sense of `class C: x = 1`
[02:25:35] <wallace_mu20070> yeah, specially when B inherited A , and in A have some other method b that called f, B don't need to overload b, but just f
[02:25:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:25:57] <rannnn8888> Yhg1s in my conputer or chromedriver ? i down load from here https://chromedriver.storage.googleapis.com/index.html?path=90.0.4430.24/
[02:26:11] *** Joins: wyclif (~wyclif@user/wyclif)
[02:26:17] <energizer> Yhg1s: i'm not saying it's always a good idea; just that there is a case where it makes sense
[02:26:29] *** Joins: Strom (strom@fedora/strom)
[02:26:40] <bjs> energizer: oh for duck-typing purposes?
[02:27:07] *** Quits: Jefren (~Jefren@70.35.67.185) (Ping timeout: 268 seconds)
[02:27:29] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:27:31] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:27:35] <energizer> bjs: yeah. it could probably even be specified with abc.ABC or typing.Protocol
[02:27:41] <energizer> (or z.i)
[02:27:42] *** Joins: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it)
[02:27:42] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[02:28:22] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[02:28:59] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[02:29:38] <energizer> wallace_mu20070: i don't see how your argument about inheritance works. if both classes use the same function, i'd just use a function. it's only useful if they are different functions
[02:30:14] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 260 seconds)
[02:30:36] <grym> i was amused to learn that z.i works on modules
[02:30:39] <wallace_mu20070> energizer no, I meant the static-alike method will be very likely overloaded in child class, so people try to make me to move that static-alike method out of class scope,
[02:30:46] <wallace_mu20070> from its parent class
[02:30:50] *** Joins: Jefren (~Jefren@70.35.66.102)
[02:30:54] <grym> structural subtyping seems rad though
[02:31:33] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[02:32:05] *** Quits: driib (~driib@185.195.233.170) (Quit: Ping timeout (120 seconds))
[02:32:16] *** Joins: driib (~driib@185.195.233.170)
[02:32:22] <wallace_mu20070> i just don't like that when child class inheirited parent, people have to create another function but with similar functionality on the file.
[02:32:49] <energizer> wallace_mu20070: are the two functions the same or different?
[02:32:53] <wallace_mu20070> probably function name will looks similar but really meant to be used in it's dedicated class
[02:33:07] <wallace_mu20070> different
[02:33:20] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[02:33:34] <wallace_mu20070> but serve the similar purpose. you can think of it like parent try to load file from csv, but child class have to load from yml file
[02:33:36] <wallace_mu20070> things like that
[02:33:41] *** Quits: MD500_Pilot (~MD500_Pil@gatekeeper.rstechnical.com) (Quit: Connection closed)
[02:33:41] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[02:33:44] <wallace_mu20070> might not be good example
[02:33:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:34:31] *** Joins: dhch3 (~dhch@185.213.154.168)
[02:34:31] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:34:37] *** Joins: wyclif (~wyclif@user/wyclif)
[02:34:55] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 268 seconds)
[02:34:55] *** dhch3 is now known as dhch
[02:35:43] *** Quits: Jefren (~Jefren@70.35.66.102) (Ping timeout: 265 seconds)
[02:35:49] <energizer> definitely not a good example :)
[02:36:22] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[02:37:10] *** Joins: Jefren (~Jefren@206.253.157.197)
[02:38:37] <wallace_mu20070> what about this:  parent class A, child B<A,     A:load_file.  B:load_file,     load_file is static-alike method, question is do I have to put load_file into function? B:load_file may behavor differently that A:load_file
[02:38:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:39:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:39:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:40:08] *** Joins: wyclif (~wyclif@user/wyclif)
[02:41:17] <wallace_mu20070> my stance is like, yes I def can, but i don't enjoy a way that how I want to manage these classed, put load_file in A and B, so that B can have different version just like you said, but if you move them outside into functions, you may end up with 2 simiar functions with simiar name but only be called in dedicated class
[02:41:42] <wallace_mu20070> energizer ^
[02:42:06] <wallace_mu20070> not sure that make senses.
[02:42:09] *** Joins: cth (~Cthulchu@193.194.107.250)
[02:43:28] *** Quits: Jefren (~Jefren@206.253.157.197) (Ping timeout: 252 seconds)
[02:43:31] <energizer> wallace_mu20070: afraid i'm at the limit of my expertise
[02:43:53] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[02:44:56] <wallace_mu20070> energizer no worries and thank you, i'll see what my colleague will say ;D
[02:45:07] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[02:45:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:45:28] *** Quits: KombuchaKip (~kip@192.252.230.5) (Remote host closed the connection)
[02:45:48] *** Joins: wyclif (~wyclif@user/wyclif)
[02:46:46] *** Joins: Jefren (~Jefren@208.104.190.62)
[02:47:24] *** Joins: totenkoph (~scythe@user/totenkoph)
[02:47:38] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Remote host closed the connection)
[02:47:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:47:49] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[02:48:25] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[02:50:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[02:51:06] *** Joins: Elodin (~weechat@user/elodin)
[02:51:10] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[02:51:21] *** Joins: wyclif (~wyclif@user/wyclif)
[02:51:44] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[02:52:11] *** Quits: Jefren (~Jefren@208.104.190.62) (Ping timeout: 268 seconds)
[02:52:14] *** Quits: netrunner (~netrunner@user/netrunner) (Quit: Leaving)
[02:52:43] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[02:53:07] *** Joins: hanaan (~naan@user/naan)
[02:53:21] *** Quits: wallace_mu20070 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net) (Quit: Client closed)
[02:53:26] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[02:54:21] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:56:59] *** Joins: Jefren (~Jefren@70.35.67.251)
[02:57:02] *** Quits: Schrodingerdur (~anrkey@2601:8c0:37f:6ce6:1991:e3db:6d8:26fb) (Quit: Leaving)
[02:57:21] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:58:19] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[02:58:27] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[02:59:51] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[03:01:37] *** Quits: wyclif (~wyclif@user/wyclif) (Remote host closed the connection)
[03:01:53] *** Joins: wyclif (~wyclif@user/wyclif)
[03:02:19] *** Quits: Jefren (~Jefren@70.35.67.251) (Ping timeout: 252 seconds)
[03:02:37] *** Lando-SpacePimp is now known as CRUNK-b0t
[03:05:39] *** Joins: Jefren (~Jefren@70.35.67.37)
[03:06:52] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[03:09:15] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[03:10:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[03:10:07] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:10:55] *** Joins: PJBoy (~PJBoy@user/pjboy)
[03:11:58] *** Quits: y1n (~y1n@84-115-65-77.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[03:12:04] *** Joins: fikran (~fikran@user/fikran)
[03:13:55] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:14:16] *** Quits: Jefren (~Jefren@70.35.67.37) (Ping timeout: 252 seconds)
[03:16:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:16:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[03:16:59] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[03:17:28] *** Joins: eightysix (~eightysix@2600:1700:bf32:3410:2dea:5c92:68dc:93e0)
[03:19:41] <sveinse> The pwd module is only availble on unixes (unices?) according to the docs. In this context is mac considered a unix version?
[03:20:02] *** Parts: harovali (~haroldo@r167-62-93-52.dialup.adsl.anteldata.net.uy) ()
[03:20:50] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Remote host closed the connection)
[03:21:10] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[03:21:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:22:36] *** Quits: ttkpy (501@46-97-229-216.sr2.pon.net) (Ping timeout: 265 seconds)
[03:24:07] <rannnn8888> hey in selinium i can its save my login to gmail ?
[03:24:52] *** Joins: y1n (~y1n@84-115-65-187.wifi.dynamic.surfer.at)
[03:26:50] *** Quits: hanaan (~naan@user/naan) (Quit: Leaving)
[03:27:22] <nedbat> sveinse: it's on my mac
[03:27:27] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:def0:6996:2bb9:77) (Ping timeout: 256 seconds)
[03:27:35] <sveinse> nedbat: thanks
[03:27:54] *** Joins: Jefren (~Jefren@208.104.190.39)
[03:28:33] *** Joins: matsaman (~matsaman@user/matsaman)
[03:29:43] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[03:32:45] *** Quits: Jefren (~Jefren@208.104.190.39) (Ping timeout: 265 seconds)
[03:34:04] *** Joins: elkclone (~elkclone@user/elkclone)
[03:37:34] <rannnn8888> hey in selinium i can its save my login to gmail ?
[03:39:54] *** Joins: Jefren (~Jefren@70.35.67.135)
[03:40:08] *** Quits: Myst (~Myst@user/myst) (Quit: Ping timeout (120 seconds))
[03:42:02] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[03:42:06] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 260 seconds)
[03:43:35] *** Joins: Atque (~Atque@user/atque)
[03:44:14] *** Joins: semeion (~semeion@user/semeion)
[03:44:31] *** Quits: Jefren (~Jefren@70.35.67.135) (Ping timeout: 252 seconds)
[03:44:36] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 268 seconds)
[03:45:06] <rama> rannnn8888: you should see if you can use access keys
[03:46:15] <zln> would this be valid? from module import  [list, of, names, to, be, imported]
[03:46:18] *** Joins: Jefren (~Jefren@206.253.157.202)
[03:46:38] <zln> no, I mean a variable with a list :p
[03:47:00] <rannnn8888> rama i can login but i want save this login when i run my script i not need login my gamil like the normal browser
[03:47:13] <rannnn8888> when i run my script again
[03:48:45] <nedbat> zln: that would not be valid
[03:48:58] <zln> nedbat: alright
[03:49:13] <nedbat> zln: a list of names to be imported in a variable sounds unusual
[03:49:31] <zln> nedbat: I learn the hard way :p
[03:49:34] *** Quits: p-i- (~Ohmu@223.206.145.156) (Ping timeout: 260 seconds)
[03:51:05] <zln> is there a way to specify what names is auto exported to importers namespace? when I du import this_module, names of functions or classes is not available. I need to do a 'from this_module import those names'
[03:51:07] *** Quits: Jefren (~Jefren@206.253.157.202) (Ping timeout: 265 seconds)
[03:51:32] <grym> zln: that's the normal way to import things, and you should follow it
[03:51:41] <nedbat> zln: you can do "from this_module import *", but it's frowned upon. better to list the names.
[03:51:49] <nedbat> zln: how many names do you have?
[03:52:04] <zln> I see
[03:52:36] <zln> well, it sounds sound but just wondered if it was possible. I have 2-3 names. Mosly curious
[03:52:50] <grym> other idioms include `import foo` and then later `foo.somefunction()`
[03:53:00] <zln> thought maybe one could specify in __init__.py
[03:53:29] <grym> you can adjust namespacing with __init__.py, and there's also __all__
[03:53:53] <grym> `import foo as f` is idiomatic for some but not many foos
[03:53:55] *** Joins: Jefren (~Jefren@70.35.67.90)
[03:53:57] <zln> ah, have not heard of __all__ yet, must google
[03:54:19] <grym> most packages that have semi-canonical nicknames are science python things like numpy
[04:01:01] *** Joins: wallace_mu200 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net)
[04:01:16] *** Quits: Jefren (~Jefren@70.35.67.90) (Ping timeout: 265 seconds)
[04:02:07] *** Quits: Praise- (~Fat@user/praise) (Ping timeout: 252 seconds)
[04:02:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[04:02:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:03:15] *** Joins: Jefren (~Jefren@70.35.67.93)
[04:03:41] *** Joins: Praise (~Fat@user/praise)
[04:04:24] *** Quits: int3l (~int3l@78-83-124-208.spectrumnet.bg) (Quit: WeeChat 3.2.1)
[04:05:32] <h_> Widdershins: I was hays on Freenode
[04:05:46] <h_> namespace grab
[04:08:15] *** Quits: Jefren (~Jefren@70.35.67.93) (Ping timeout: 268 seconds)
[04:08:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[04:09:35] *** Joins: Jefren (~Jefren@70.35.66.203)
[04:09:47] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: Ping timeout (120 seconds))
[04:09:58] *** Joins: Praise- (~Fat@user/praise)
[04:10:06] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 260 seconds)
[04:10:07] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[04:10:10] *** Quits: brachamh (~brachamh@user/brachamh) (Ping timeout: 240 seconds)
[04:10:44] *** Joins: brachamh (~brachamh@user/brachamh)
[04:11:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:11:57] *** Quits: y1n (~y1n@84-115-65-187.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[04:12:20] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[04:12:54] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 260 seconds)
[04:15:02] *** Quits: Jefren (~Jefren@70.35.66.203) (Ping timeout: 268 seconds)
[04:16:32] *** Joins: KombuchaKip (~kip@192.252.230.5)
[04:16:53] *** Joins: theprophet (~theprophe@85.114.228.184)
[04:16:57] *** Joins: Jefren (~Jefren@70.35.66.88)
[04:19:12] *** Joins: Polyinsecure (~Polyinsec@180.244.133.253)
[04:19:55] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[04:21:05] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 265 seconds)
[04:21:49] *** Quits: Jefren (~Jefren@70.35.66.88) (Ping timeout: 268 seconds)
[04:22:22] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[04:23:31] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:23:38] *** Quits: Polyinsecure (~Polyinsec@180.244.133.253) (Client Quit)
[04:25:18] *** Joins: y1n (~y1n@84-115-65-187.wifi.dynamic.surfer.at)
[04:26:34] *** Joins: nomic (~nomic@185.217.117.156)
[04:26:45] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 268 seconds)
[04:26:53] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Ping timeout: 265 seconds)
[04:27:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[04:28:30] *** Joins: wyclif (~wyclif@user/wyclif)
[04:28:42] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:2dea:5c92:68dc:93e0) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:31:10] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:31:16] *** Quits: jeho2 (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[04:31:26] *** Joins: eightysix (~eightysix@2600:1700:bf32:3410:2dea:5c92:68dc:93e0)
[04:32:50] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:32:59] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:33:34] *** jeho is now known as jeho3
[04:33:49] *** jeho3 is now known as jeho
[04:35:15] *** Joins: Jefren (~Jefren@70.35.67.182)
[04:41:52] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[04:42:47] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[04:45:37] *** Quits: Jefren (~Jefren@70.35.67.182) (Ping timeout: 252 seconds)
[04:45:44] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[04:45:59] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[04:46:11] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:47:14] *** Quits: wallace_mu200 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net) (Quit: Client closed)
[04:49:16] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[04:50:52] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:51:04] *** ephemer0l is now known as GeneralDiscourse
[04:52:31] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[04:52:56] *** Joins: srhm (~srhm@user/srhm)
[04:54:52] *** Joins: semeion (~semeion@user/semeion)
[04:55:02] *** Quits: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com) (Quit: WeeChat 3.2.1)
[04:56:49] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:2dea:5c92:68dc:93e0) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:57:41] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:58:22] *** Joins: Jefren (~Jefren@70.35.67.36)
[04:59:10] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[04:59:20] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[04:59:24] *** Joins: eightysix (~eightysix@2600:1700:bf32:3410:2dea:5c92:68dc:93e0)
[05:00:30] *** Quits: eightysix (~eightysix@2600:1700:bf32:3410:2dea:5c92:68dc:93e0) (Client Quit)
[05:02:34] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:02:50] *** Quits: Jefren (~Jefren@70.35.67.36) (Ping timeout: 260 seconds)
[05:04:46] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:06:43] *** iflema_ is now known as iflema
[05:07:03] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[05:07:56] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:12:01] *** Quits: y1n (~y1n@84-115-65-187.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[05:14:24] *** Quits: CRUNK-b0t (~Lando@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[05:14:44] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[05:17:36] <kenwoodfox> Hey #python, im using PySeiral and im writing some bytes to my serial port using 'ser.write(b'\x00\x01\x0a')' and i have an arduino echoing the data back to me, but im not reading 3 bytes back, i read back each byte but with an extra two bytes inbetween, those being \r\n so im thinking pyserial is appending a newline to each of my bytes?
[05:17:46] <kenwoodfox> am i dumb? can i do something like send only the raw three bytes?
[05:19:03] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[05:19:10] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[05:19:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:19:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:20:16] *** Quits: flokuehn (~flokuehn@i577BC6DF.versanet.de) (Ping timeout: 252 seconds)
[05:20:25] *** Joins: Gerula (~Gerula@user/gerula)
[05:20:33] *** Joins: Evocater (~EvoCateR@6.sub-174-255-128.myvzw.com)
[05:20:35] <Evocater> helo?
[05:20:54] <Evocater> hello*?
[05:21:00] <space-ghost> hi!^7
[05:21:07] <space-ghost> hilo
[05:21:26] *** Joins: fikran (~fikran@user/fikran)
[05:21:34] <Evocater> So i am absolutely brand new to coding, ive thought about it for at least 10 years but never tried
[05:21:44] <Evocater> so now i am, what would the first best step be
[05:21:51] *** Joins: flokuehn (~flokuehn@i5E86B360.versanet.de)
[05:21:52] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[05:22:03] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[05:22:05] <Evocater> i have Python 3.9 ready to go
[05:22:18] <Evocater> and the one called Thonny
[05:22:22] <Evocater> idk which is better
[05:22:29] <grym> thonny is a nice beginner tool!
[05:22:37] <grym> you're getting the same python either way
[05:22:50] <grym> Evocater: https://automatetheboringstuff.com/  might be a good reference for you?
[05:23:07] *** Parts: mrkz_c (uid503554@user/mrkz-c/x-7247691) ()
[05:23:25] <grym> if you're the sort of person who gets motivated by writing little programs that solve annoying facts about your computer
[05:23:35] <grym> (i sure am)
[05:24:04] <Evocater> Well, ive always been the guy that like, ill be doing something and someone will say its the wrong way but it always ends up working anyway
[05:24:13] <Evocater> and i learn real fast
[05:24:20] <Evocater> if its hands on which this is
[05:24:37] <grym> yeah, the reward feedback loop is real tight with automate the boring stuff, i think
[05:25:04] <Evocater> well im a sober drug addict 2.5 years so i like reward systems like that
[05:25:07] <Evocater> :o
[05:25:33] *** Joins: Jefren (~Jefren@70.35.66.205)
[05:25:34] *** Joins: y1n (~y1n@84-115-65-149.wifi.dynamic.surfer.at)
[05:26:24] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[05:27:58] *** Joins: Myst (~Myst@user/myst)
[05:28:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[05:29:23] <Evocater> is 58 a good wpm
[05:29:26] *** Quits: flyback (~flyback@2601:540:8201:1e60:45a6:4c31:5138:a3ab) (Ping timeout: 260 seconds)
[05:29:31] <grym> does it matter?
[05:30:13] <grym> tab completion and intellisense makes up for a lot of slow typing
[05:30:27] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:50] <Evocater> just curious
[05:30:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:31:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[05:34:18] *** Lando-SpacePimp is now known as CRUNK-b0t
[05:34:51] *** Joins: vlm (~vlm@user/vlm)
[05:38:04] *** Quits: Jefren (~Jefren@70.35.66.205) (Ping timeout: 268 seconds)
[05:38:31] <Evocater> whats the best type of "app" or "program" i should create for my first
[05:38:38] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:40:00] *** Joins: Jefren (~Jefren@70.35.66.125)
[05:41:39] *** Joins: flyback (~flyback@2601:540:8201:1e60:8c12:f1ac:2fcb:c978)
[05:41:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[05:43:47] <grym> Evocater: that's a pretty personal question!
[05:43:54] <grym> it's up to you, really
[05:44:17] <grym> the trick is usually stating a problem you'd like to solve in a tidy, self-contained way
[05:44:24] <Evocater> well can you give me just some idea of what i could do with it?
[05:44:41] <meejah> automate something you do already
[05:44:42] *** Quits: Jefren (~Jefren@70.35.66.125) (Ping timeout: 265 seconds)
[05:45:25] <energizer> Evocater: https://nedbatchelder.com/text/kindling.html
[05:46:37] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:48:30] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[05:48:47] *** Joins: spithash (~spithash@user/spithash)
[05:48:57] *** Joins: Jefren (~Jefren@70.35.66.235)
[05:52:37] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:56:18] *** Quits: Jefren (~Jefren@70.35.66.235) (Ping timeout: 265 seconds)
[05:58:46] *** Joins: Jefren (~Jefren@70.35.66.194)
[06:03:33] *** Quits: Jefren (~Jefren@70.35.66.194) (Ping timeout: 265 seconds)
[06:03:56] *** Joins: califax- (~califax@user/califx)
[06:05:55] <orbisvicis> anyone ever run into any issues with urllib3 connection pools and sigint?
[06:06:24] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:06:25] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:06:42] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:06:43] *** califax- is now known as califax
[06:06:47] *** brabrax_ is now known as brabrax
[06:07:33] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[06:10:24] *** Parts: chromis (sid150893@id-150893.tinside.irccloud.com) ()
[06:11:17] *** Quits: y1n (~y1n@84-115-65-149.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[06:14:21] *** Joins: jazzy (~jaziz@2600:380:847e:4826:65ec:5dee:21ac:a416)
[06:14:33] *** Joins: iflema (~ian@user/iflema)
[06:14:53] *** Joins: jazzy2 (~jaziz@2600:380:847e:4826:ec68:9d70:e078:696)
[06:18:56] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[06:19:07] *** Quits: jazzy (~jaziz@2600:380:847e:4826:65ec:5dee:21ac:a416) (Ping timeout: 252 seconds)
[06:19:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[06:20:06] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[06:21:02] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[06:25:49] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[06:26:27] *** Joins: Jefren (~Jefren@70.35.67.103)
[06:26:28] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[06:29:31] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[06:29:32] <meejah> orbisvicis: best to ask the real question
[06:31:03] <orbisvicis> I'm debugging a lost connection issue in a library I'm using, selenium.
[06:31:19] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[06:31:31] <orbisvicis> Is it possible sigint would close a urllib3 connection pool (threaded, I think)
[06:32:04] *** Quits: Jefren (~Jefren@70.35.67.103) (Ping timeout: 265 seconds)
[06:32:39] *** Quits: Evocater (~EvoCateR@6.sub-174-255-128.myvzw.com) (Quit: Client closed)
[06:33:31] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 265 seconds)
[06:33:48] *** Joins: Jefren (~Jefren@70.35.67.253)
[06:33:51] <rannnn8888> where i wrong here in the text ? (res) https://bpa.st/XM7Q
[06:35:17] <rannnn8888>  ry slove sores = soup.find('div', {'id': 'release_body'}).getText()
[06:36:38] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[06:38:16] <orbisvicis> how do you set per-thread signal masks without pthread_sigmask?
[06:39:25] *** Quits: Jefren (~Jefren@70.35.67.253) (Ping timeout: 252 seconds)
[06:39:44] <meejah> orbisvicis: don't know about the latter, but maybe the connection fails while it's interrupted?
[06:43:09] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[06:43:30] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[06:44:24] *** Joins: Jefren (~Jefren@70.35.67.20)
[06:45:39] <orbisvicis> meejah, I'm not sure
[06:47:07] *** Joins: Jefren1 (~Jefren@206.253.157.196)
[06:47:28] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Remote host closed the connection)
[06:48:40] *** Quits: Jefren (~Jefren@70.35.67.20) (Ping timeout: 240 seconds)
[06:50:09] <meejah> (e.g. timeout etc)
[06:52:17] *** Quits: Jefren1 (~Jefren@206.253.157.196) (Ping timeout: 268 seconds)
[06:52:40] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:53:30] *** Joins: Jefren1 (~Jefren@70.35.66.186)
[06:56:40] <meejah> (oh, wait i was thinking sigstop .. sigint kills it, no?)
[06:57:50] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[06:58:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[06:59:53] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:01:34] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:01:59] <orbisvicis> meejah, hmm that's a good possibility. I don't think the connection would timeout, but why would it become invalid?
[07:03:25] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[07:03:42] <orbisvicis> I wouldve tried masking the sigint before creating the selenium object, but I don't have pthread_sigmask
[07:04:14] *** Joins: diamondbond (~diamondbo@116.206.245.145)
[07:05:36] <dba> Hi, how do I loop through a list of function. would putting all the function in a list like [func1(), func2(), func3()] and loop through them work?
[07:06:10] <KirkMcDonald> dba: That's going to call each function as you make the list. If you want a list of functions, then it's just: [func1, func2, func3]
[07:06:38] <KirkMcDonald> dba: Then you can e.g. `for f in functions: f()`
[07:07:09] <dba> KirkMcDonald: Thank you very much
[07:09:04] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Ping timeout (120 seconds))
[07:09:21] <dba> KirkMcDonald: one more question I am trying to send an email of the traceback if a function failed. how do I get the error that is usually printing in the console?
[07:11:05] <phy1729> The traceback module has the methods to do that.  https://docs.python.org/3/library/traceback.html    Haven't used it in a while so I don't recall specifics.
[07:11:28] <jinsun> the traceback module can help with that, put the function call in a try: block and in the except: block `traceback.format_exc` should give you the traceback as string
[07:12:02] *** Parts: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it) ()
[07:12:56] <KirkMcDonald> dba: /w 23
[07:12:58] <KirkMcDonald> Ack
[07:13:22] <KirkMcDonald> dba: It might be easiest for whatever is running the Python script to do that, by capturing its stderr.
[07:13:35] <KirkMcDonald> dba: But, otherwise, you might use the traceback module.
[07:13:49] <KirkMcDonald> dba: (As jinsun said.)
[07:14:04] <dba> Thank you all, I will try the both approaches
[07:22:20] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 265 seconds)
[07:25:31] <rannnn8888> what the fast way transfer data from my computer to the server ? and free ? (its data list simple) its need transfer all sec :D
[07:26:10] <yitz> rsync
[07:27:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[07:28:09] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[07:28:26] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:29:06] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 265 seconds)
[07:29:10] *** Joins: PaddyF_ (~PaddyF@user/paddyf)
[07:29:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:29:23] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:30:47] *** Joins: fikran (~fikran@user/fikran)
[07:31:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:31:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:31:45] *** Quits: PaddyF (~PaddyF@user/paddyf) (Ping timeout: 268 seconds)
[07:33:04] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[07:33:21] <rannnn8888> yitz its not file its text list not have like Free online service ? if i need its very fast ?
[07:33:27] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[07:36:57] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Read error: Connection reset by peer)
[07:37:20] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[07:40:38] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Ping timeout: 252 seconds)
[07:41:34] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[07:42:37] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:43:04] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:ac3d:1c13:428b:711c)
[07:45:31] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[07:46:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:46:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:47:14] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Read error: Connection reset by peer)
[07:47:36] <yitz> rannnn8888: Transfering it to a server? Or to a free service? How fast is fast? How much data?
[07:47:37] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[07:47:55] <yitz> rannnn8888: You can send an email. That's a free way to send text to a server quickly
[07:48:35] *** Joins: txtsd (~txtsd@user/txtsd)
[07:49:02] *** Joins: frost (~frost@59.71.243.104)
[07:50:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:50:56] *** Joins: stoneware (~stoneware@user/stoneware)
[07:52:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[07:52:05] *** Joins: hendursa1 (~weechat@user/hendursaga)
[07:52:32] *** Joins: cashew (~cashugh@user/cashew)
[07:54:06] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[07:54:17] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Read error: Connection reset by peer)
[07:56:47] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[08:01:58] *** Quits: frost (~frost@59.71.243.104) (Ping timeout: 265 seconds)
[08:03:29] *** Joins: pluri (~pluri@user/pluri)
[08:04:55] <pluri> i need to build a web app where the users will make requests that require the (ab)use of third-party API. I need a way to queue the requests so that I only access the API every X seconds. what can I use to do this?
[08:05:35] <yitz> A work queue with a worker that sleeps between tasks
[08:05:40] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[08:06:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:06:24] <pluri> thank you. is there a package you would recommend? I am using flask btw, don't know if that matters
[08:06:42] <pluri> RQ seems to be the top google result
[08:07:53] <pluri> alright I will give this a go thanks https://flask-rq2.readthedocs.io/en/latest/
[08:08:42] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[08:09:33] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:11:09] *** Quits: control (~v1@user/control) (Ping timeout: 265 seconds)
[08:11:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[08:12:51] *** Joins: control (~v1@user/control)
[08:13:31] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[08:17:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:18:12] <rannnn8888> i can install selenium on ubuntu aws server ? to use with python ?
[08:18:19] <rannnn8888> i try this https://praneeth-kandula.medium.com/running-chromedriver-and-selenium-in-python-on-an-aws-ec2-instance-2fb4ad633bb5
[08:18:28] <rannnn8888> but not work
[08:18:42] <rannnn8888> curl https://intoli.com/install-google-chrome.sh | bash this get err
[08:20:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[08:21:13] *** byzandula is now known as byzafk
[08:21:43] *** Joins: wyclif (~wyclif@user/wyclif)
[08:22:01] *** Quits: ChatNick (uid517221@user/chatnick) (Quit: Connection closed for inactivity)
[08:24:39] *** Joins: fdan (~fdan@192.146.154.3)
[08:25:24] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[08:26:39] *** Joins: Wulf (~Wulf@user/wulf)
[08:31:03] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:34:55] *** Quits: junktext (~junktext@109.201.152.173) (Ping timeout: 252 seconds)
[08:35:02] *** Quits: k162 (~k162@user/k162) (Ping timeout: 252 seconds)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:39:26] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:40:28] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Ping timeout: 252 seconds)
[08:40:47] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:43:20] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:44:58] *** Quits: Myst (~Myst@user/myst) (Ping timeout: 260 seconds)
[08:46:50] *** Quits: Ivii (~Ivyy@2001:a61:1329:3e01:71c:8eee:e7a3:a533) (Remote host closed the connection)
[08:50:03] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[08:52:56] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 268 seconds)
[08:53:43] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[08:55:33] *** Joins: audio (~audio@2603-8081-1800-6a6f-01cb-ecb6-e5c5-d0dc.res6.spectrum.com)
[08:55:37] *** Quits: ferz (~ferz@93-39-142-235.ip76.fastwebnet.it) (Ping timeout: 265 seconds)
[08:57:52] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[09:01:40] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:02:08] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[09:05:37] *** Joins: semeion (~semeion@user/semeion)
[09:06:55] *** Quits: wisefriday (wisefriday@sempiternity.club) (Quit: wisefriday)
[09:08:40] *** Quits: control (~v1@user/control) (Ping timeout: 265 seconds)
[09:10:29] *** Joins: control (~v1@user/control)
[09:11:02] *** Quits: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net) (Ping timeout: 268 seconds)
[09:11:24] *** Joins: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net)
[09:12:36] *** Quits: Vonter_ (~Vonter@user/vonter) (Read error: Connection reset by peer)
[09:13:03] *** Joins: Vonter (~Vonter@user/vonter)
[09:17:00] <cluelessperson> pluri, just create a decorator that checks the rate limit and slows down your requests
[09:17:06] <cluelessperson> or overrides them , whatever
[09:17:19] <cluelessperson> rannnn8888, what was the error?
[09:17:45] *** Joins: upsala (~zcb@185.213.155.160)
[09:18:08] <pluri> cluelessperson i'm not very confident with using decorators. do you have a tutorial for this particular use case? thanks for the suggestions.
[09:21:34] <pluri> oh this looks sweet https://gist.github.com/ChrisTM/5834503
[09:23:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[09:23:41] *** PaddyF_ is now known as PaddyF
[09:23:57] *** Joins: wyclif (~wyclif@user/wyclif)
[09:24:22] <yitz> pluri: https://pypi.org/project/ratelimiter/
[09:24:55] <pluri> superb, thanks!
[09:25:19] <mat001_> What would be python equivalent of Js object (as json)?
[09:25:37] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[09:25:44] <grawity> dict, usually
[09:26:22] <KirkMcDonald> mat001_: There's no exact equivalent. JS objects do a lot of things.
[09:26:46] <mat001_> KirkMcDonald: thx
[09:26:49] <KirkMcDonald> mat001_: If you need a map (which you should really be doing in JS with a Map rather than an object, but) you'd use a Python dict.
[09:27:14] <KirkMcDonald> mat001_: If you need an object in the sense of a thing with properties and methods, you'd define a class in Python.
[09:27:28] <mat001_> yeah, thought so about the dict. Yeah or class and then call attributes on it
[09:28:50] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 260 seconds)
[09:30:25] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:46] *** Quits: CRUNK-b0t (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[09:33:26] *** Joins: Vonter_ (~Vonter@user/vonter)
[09:33:31] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[09:33:46] *** Joins: emerent_ (~quassel@p200300cd5701a13cba27ebfffed28a59.dip0.t-ipconnect.de)
[09:33:46] *** emerent is now known as Guest5831
[09:33:46] *** Quits: Guest5831 (~quassel@p200300cd5701a105ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (mercury.libera.chat (Nickname regained by services)))
[09:33:46] *** emerent_ is now known as emerent
[09:34:33] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[09:34:43] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:35:57] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[09:36:10] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 250 seconds)
[09:38:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[09:40:10] *** Joins: fikran (~fikran@user/fikran)
[09:41:09] *** Joins: JoelJoel (~jjshoe@user/joel)
[09:41:30] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[09:41:52] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 268 seconds)
[09:42:38] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[09:47:34] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[09:49:10] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 240 seconds)
[09:49:10] *** Quits: twofingersneat__ (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[09:50:27] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[09:50:40] <cluelessperson> pluri,   Really you just create a class to manage state,   then a function to act as a decorator, all it does is check the rate limits and sees if it should make you wait.
[09:51:04] <cluelessperson> pluri, then you just do  @rate_limit   on each function  that might perform api communication, done.
[09:51:18] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Remote host closed the connection)
[09:51:30] <cluelessperson> An alternative is to just skip the decorator and put the rate limiting directly in the communication function.
[09:51:44] <cluelessperson> both valid, latter is probably best to keep it simple first
[09:51:57] <pluri> yeah the decorator is working great :) so easy. thanks for the suggestion!
[09:52:38] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:ac3d:1c13:428b:711c) (Read error: Connection reset by peer)
[09:53:01] <cluelessperson> pluri, oh neat, they're managing the decorator as it's own object
[09:55:40] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[09:59:07] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[09:59:54] *** Joins: mumixam (~m@user/mumixam)
[10:02:39] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Ping timeout: 276 seconds)
[10:03:18] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[10:03:35] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[10:05:40] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 240 seconds)
[10:06:21] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[10:08:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:12:42] <cluelessperson> I have a question about adding a "log" attribute to qt objects.
[10:12:59] <cluelessperson> Should I just inherit from a common log object so I can easily enforce that they all work the same way?
[10:16:54] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[10:18:57] *** Joins: rany_ (~rany@user/rany)
[10:19:14] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[10:20:15] <Samian> anyone know a more elegant way to do this? https://bpa.st/G26A
[10:20:21] <Samian> maybe a zip iterator of some sort?
[10:24:00] *** Joins: rindolf (~shlomif@87.68.240.100.adsl.012.net.il)
[10:24:15] *** Joins: kosh (~kosh@user/kosh)
[10:24:21] <Repiphany> Samian: Is that not just reshaping?
[10:24:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:25:02] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 268 seconds)
[10:25:14] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[10:25:19] *** Joins: ferz (~ferz@93-39-142-125.ip76.fastwebnet.it)
[10:25:28] *** Joins: control_ (~v1@user/control)
[10:26:08] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:26:49] <Repiphany> Samian: np.reshape(arr, (ndevices, -1), order = 'F')
[10:28:25] *** Quits: control (~v1@user/control) (Ping timeout: 265 seconds)
[10:28:43] *** Joins: k162 (~k162@user/k162)
[10:29:14] <Samian> Repiphany  they aren't np arrays
[10:29:28] <Samian> they're lists
[10:29:31] <Samian> sorry for not clarifying
[10:30:29] *** Joins: mexen (uid495612@user/mexen)
[10:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:31:05] <Samian> Repiphany  I guess that is what I want. I want to reshape a list of objects
[10:31:22] *** Joins: chele (~chele@user/chele)
[10:31:36] <Repiphany> np still fine if converting to/from list is viable
[10:31:43] *** Joins: Polyinsecure (~Polyinsec@180.244.133.253)
[10:32:23] <Samian> ehh it's actually a reshape + swap axis
[10:32:30] <Repiphany> Unless your list size isn't divisible by ndevices
[10:32:47] <Repiphany> `order = 'F'` does the axis swapping
[10:32:48] <Samian> Repiphany  that's also a possibility
[10:32:53] <Samian> ahh I see
[10:32:54] <Repiphany> default is order = 'C'
[10:33:12] *** Joins: mumixam (~m@user/mumixam)
[10:33:48] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:34:04] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 268 seconds)
[10:34:38] <Samian> Repiphany  where did you learn that trick? any book in particular?
[10:34:47] <Samian> the order = 'F'
[10:34:52] *** Joins: rany (~rany@user/rany)
[10:35:22] *** Joins: manti7 (~manti7@176.10.104.94)
[10:35:31] <Repiphany> Just playing around with numpy when trying to solve various linear algebra problems
[10:35:46] <Samian> cool
[10:35:53] *** Joins: dvx (~dvx@185.63.97.64)
[10:35:55] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[10:36:11] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[10:36:11] <Repiphany> It's equivalent to `np.reshape(arr, (-1, ndevices)).T` anyway
[10:37:26] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:d82:c29c:4ce3:a68c)
[10:37:43] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[10:38:40] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[10:38:43] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:39:01] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[10:43:20] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[10:44:04] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:44:21] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[10:45:22] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:46:07] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[10:46:24] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:53] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[10:47:00] *** Joins: seednode (~seednode@user/seednode)
[10:47:12] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[10:48:47] <cluelessperson> What do you think of this code snippet to possibly add logging across a hierarchy of obects?
[10:48:48] <cluelessperson> https://gist.github.com/cluelessperson/2fc483839ae65a4a4d64e44bf4643aa0
[10:49:25] *** int is now known as vi
[10:49:50] *** Joins: kib (~kib@user/kib)
[10:56:15] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:56:22] *** Quits: txtsd (~txtsd@user/txtsd) (Read error: Connection reset by peer)
[10:56:35] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 260 seconds)
[10:56:36] *** Joins: gusto (~Augustus@109.255.100.54)
[10:57:25] *** vi is now known as vvi
[10:59:28] *** Joins: thiras (~thiras@user/thiras)
[10:59:42] <sveinse> Is there a way to inherit the typings of an inner function to an outer function in a proxy? Like def proxy(*args, **kwargs): return inner(*args, **kwargs)  <-- The typings declaration from inner to outer
[11:00:18] <hexnewbie> sveinse: @functools.wraps(inner)
[11:00:54] *** Joins: ubert (~Thunderbi@178.115.60.138.wireless.dyn.drei.com)
[11:02:15] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[11:04:01] *** Joins: palasso (~palasso@user/palasso)
[11:04:40] *** Quits: diamondbond (~diamondbo@116.206.245.145) (Ping timeout: 265 seconds)
[11:05:14] <sveinse> hexnewbie: thanks, that seems to be exactly what I was looking for
[11:05:31] *** Joins: rendar (~rendar@user/rendar)
[11:05:48] <sveinse> However, does this work for typing and mypy? My VS code editor doesn't immediately pick that up at least
[11:06:26] *** Joins: legola (~legola@46.235.100.27)
[11:07:01] *** Quits: zwindl (~abc@user/abc) (Ping timeout: 250 seconds)
[11:07:46] *** Joins: abc_ (~abc@user/abc)
[11:07:53] *** Quits: legola (~legola@46.235.100.27) (Read error: Connection reset by peer)
[11:08:32] *** Joins: legola (~legola@46.235.100.27)
[11:09:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[11:10:34] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[11:11:21] <jinsun> sveinse: https://mypy.readthedocs.io/en/stable/generics.html#declaring-decorators
[11:11:52] <sveinse> perfect
[11:12:12] *** Joins: pycode (~pycode@2001:b07:5d28:551:bd16:ed37:cd0b:8e07)
[11:12:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:13:54] *** Parts: vvi (~int@0x4.cx) ()
[11:16:32] *** Joins: Meteorhead (~Meteorhea@165.225.205.32)
[11:16:45] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[11:17:54] *** Joins: carl- (~carl-@185.103.188.130)
[11:24:58] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 265 seconds)
[11:25:24] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3127:8889:67ab:5149)
[11:25:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:26:07] *** Joins: PaddyF_ (~PaddyF@user/paddyf)
[11:26:42] *** Quits: PaddyF (~PaddyF@user/paddyf) (Ping timeout: 268 seconds)
[11:26:48] *** Joins: brelod (~me@90.244.150.142)
[11:26:57] <Zweimer> https://bpa.st/DXKA  << When I am trying to plot something with scatter, I get a "TypeError: 'module' object is not callable" back. This one is new. Can someone explain to me what's going wrong?
[11:27:13] *** Joins: slav0nic (slav0nic@python.su)
[11:29:00] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[11:30:09] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:31:13] *** Quits: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au) (Remote host closed the connection)
[11:31:47] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:32:47] *** Joins: ssbr` (~ssbr@python/site-packages/ssbr)
[11:33:21] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:34:01] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:34:23] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[11:35:10] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[11:35:17] <brelod> Zweimer: could you show use the import statement of the plt?
[11:35:20] *** Joins: Abrax- (~Abrax@user/abrax)
[11:35:21] *** PaddyF_ is now known as PaddyF
[11:35:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:35:29] <brelod> *us
[11:35:36] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[11:37:22] <Zweimer> brelod, it is "import matplotlib as plt"
[11:38:30] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[11:38:32] <jinsun> it is usually `matplot.pyplot` notjust matplotlib
[11:38:59] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 265 seconds)
[11:38:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 265 seconds)
[11:39:09] <jinsun> plt is short for pyplot
[11:39:30] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[11:40:10] <Zweimer> oh, right. It works now :)  Thanks!
[11:41:04] <Samian> Is it fine to use "we" to refer to what the code is doing? Like if I write "We are essentially reshaping the list to two dimension, interleaving in steps of ndevices". above the code: self.m_spa = [self.m_spa[k::ndevices] for k in range(ndevices)]
[11:41:47] <supakeen> If you wish.
[11:41:50] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[11:42:07] <cluelessperson> Samian, sure
[11:42:17] <supakeen> I'd write '# Reshape list to 2d, interleaved with ndevices'
[11:43:52] <Samian> but it's not really though. It's not a numpy array. It's a list of torch.nn.EmbeddingBag objects
[11:44:05] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Read error: Connection reset by peer)
[11:44:18] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[11:44:23] <Samian> But mentioning to think of it as a reshape makes it easy for someone to understand the code.
[11:44:49] <supakeen> s/list// ;)
[11:45:08] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: Ping timeout (120 seconds))
[11:45:10] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:45:33] *** Joins: stoneware (~stoneware@user/stoneware)
[11:46:22] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[11:46:26] *** Quits: gitly (~gitly@85.255.235.113) (Ping timeout: 268 seconds)
[11:47:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[11:48:00] *** Quits: Polyinsecure (~Polyinsec@180.244.133.253) (Quit: Leaving)
[11:48:15] *** Joins: gitly (~gitly@148.252.128.179)
[11:49:32] *** Joins: OPK (~OPK@user/opk)
[11:49:42] *** Joins: fikran (~fikran@user/fikran)
[11:53:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:53:37] *** Quits: gitly (~gitly@148.252.128.179) (Ping timeout: 252 seconds)
[11:53:54] *** Joins: wyclif (~wyclif@user/wyclif)
[11:55:03] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[11:55:33] *** Joins: gitly (~gitly@148.252.128.33)
[11:59:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:59:23] *** Joins: wyclif (~wyclif@user/wyclif)
[12:01:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:01:27] *** Abrax- is now known as Abrax
[12:03:39] <Samian> supakeen  you're good at succinct comments!
[12:04:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:04:19] *** Joins: reset (~reset@user/reset)
[12:04:36] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 265 seconds)
[12:04:50] *** Joins: wyclif (~wyclif@user/wyclif)
[12:05:01] *** Quits: ubert (~Thunderbi@178.115.60.138.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[12:07:54] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:12:00] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[12:12:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:13:16] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[12:13:44] *** Joins: wyclif (~wyclif@user/wyclif)
[12:13:55] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:15:13] *** Joins: bilb_ono_ (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[12:15:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[12:15:49] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 268 seconds)
[12:15:49] *** bilb_ono_ is now known as bilb_ono
[12:18:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:18:54] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 268 seconds)
[12:19:15] *** Joins: wyclif (~wyclif@user/wyclif)
[12:19:51] *** Joins: palasso (~palasso@user/palasso)
[12:19:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[12:20:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[12:21:17] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[12:22:28] *** Joins: Trieste (T@user/pilgrim)
[12:23:14] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[12:24:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:24:45] *** Joins: wyclif (~wyclif@user/wyclif)
[12:31:56] *** Joins: ub (~Thunderbi@178.115.60.138.wireless.dyn.drei.com)
[12:33:06] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[12:33:59] *** Joins: Atque (~Atque@user/atque)
[12:35:23] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[12:35:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:37:43] *** Joins: michelem (~Adium@51.154.167.11)
[12:39:18] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:46:31] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[12:47:30] <lxer> Is there way to limit what is imported when importing a module? I know __all__ can do something similar, but only works when using 'from module import * '
[12:48:01] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[12:48:14] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:48:16] <michelem> lxer: how about simply listing the symbols, the standard & recommended way?
[12:48:28] *** Quits: rany (~rany@user/rany) (Ping timeout: 252 seconds)
[12:49:20] <lxer> michelem: I think you didnt understand the question
[12:50:52] <lxer> I would like to do 'import mymodule', but then everything from the module is imported, while I just want a functions to be imported (not all classes, or example).
[12:50:57] <graingert[m]> lxer: which module exactly are you trying to limit?
[12:51:24] <graingert[m]> what's the negative effect of the classes being imported?
[12:52:26] *** Joins: rany (~rany@user/rany)
[12:52:43] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:53:07] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:53:09] *** Joins: thiras (~thiras@user/thiras)
[12:53:26] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:53:34] <lxer> in my case, the classes are configurations, and should not be modified by other devs, so I would like to prevent access to that.
[12:53:37] <ssbr`> lxer: there's no way to make `foo.bar` not exist when you `import foo`, except to not define a bar inside foo at all
[12:53:39] *** Joins: gtristan (~tristan@223.62.22.193)
[12:53:50] <ssbr`> lxer: if you want to make something private, a convention is to start the name with an underscore
[12:53:54] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[12:54:27] <gtristan> pylint says: "Formatting a regular string which could be a f-string (consider-using-f-string)" really ? Arbitrary suggestion to rewrite tons of code for no reason ?
[12:54:29] <michelem> do you mean loaded, or imported? There's no way to prevent the interpreter to load all the logic in a module. Regarding import, I don't think there's a way to limit that either.
[12:54:39] * gtristan thought linting errors should be indicative of problems
[12:55:03] <bookworm> turn it off, carry on
[12:55:05] <ssbr`> gtristan: many lint errors are pure stype, you can disable them in pylintrc.
[12:55:08] <ssbr`> style, even
[12:55:14] *** Joins: darksun (~darksun@user/darksun)
[12:55:49] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:55:50] <ssbr`> I'm of the view that linters should never flag issues that are fixable automatically, yet have no automatic fix attached
[12:55:59] <bookworm> for newcomers it's nice to push them in the right direction rather than them picking up the old style % one
[12:56:52] <michelem> lxer: you probably want to learn about dependency injection to solve the case you mention.
[12:57:22] <lxer> perhaps
[12:58:59] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 268 seconds)
[13:04:06] *** Joins: plastico (~plastico@neomutt/plastico)
[13:04:32] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[13:04:45] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[13:04:54] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[13:04:55] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:05:31] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Client Quit)
[13:05:54] *** Joins: chele (~chele@user/chele)
[13:06:08] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:06:39] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2)
[13:06:46] *** Quits: rany (~rany@user/rany) (Ping timeout: 260 seconds)
[13:07:17] *** Joins: Auron (~Auron956@user/auron)
[13:07:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:07:26] *** Joins: kib (~kib@user/kib)
[13:08:45] *** Quits: kib (~kib@user/kib) (Client Quit)
[13:09:08] *** Joins: kib (~kib@user/kib)
[13:12:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 252 seconds)
[13:12:34] *** Joins: arinov (~arinov@213.194.126.155)
[13:13:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:13:49] *** Quits: summonner (~summonner@188.24.126.169) (Ping timeout: 252 seconds)
[13:14:10] *** Quits: ssbr` (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[13:14:20] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:15:25] *** Joins: minip (~minip@user/minip)
[13:15:33] *** Joins: ssbr` (~ssbr@python/site-packages/ssbr)
[13:15:56] *** Joins: upsala (~zcb@185.213.155.160)
[13:16:22] *** Quits: gtristan (~tristan@223.62.22.193) (Read error: Connection reset by peer)
[13:16:46] *** Joins: rsx (~dummy@ppp-188-174-141-82.dynamic.mnet-online.de)
[13:16:47] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 240 seconds)
[13:17:35] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 265 seconds)
[13:17:53] *** Joins: gtristan (~tristan@223.62.22.193)
[13:19:53] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[13:20:32] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[13:22:26] *** Joins: netrunner (~netrunner@user/netrunner)
[13:22:58] *** Joins: y1n (~y1n@84-115-64-59.wifi.dynamic.surfer.at)
[13:23:19] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2)
[13:23:57] *** Joins: kib (~kib@user/kib)
[13:24:11] <pycode> how is it called a class without inizialiting it ? i mean if i do a = A() "a" is an instance of the A() class ok...... if i do a = A, what is "a" exactly? (class definition?)
[13:24:15] <pycode> how is that called exactly
[13:24:18] <pycode> ?
[13:24:19] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[13:24:27] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Remote host closed the connection)
[13:24:49] <jinsun> class object?
[13:25:34] <rendar> an abstract base class shouldn't have an __init__ right?
[13:26:48] <pycode> jinsun, ok thanks
[13:27:50] <ssbr`> rendar: it wouldn't be very abstract if it did, but all things are possible.
[13:27:57] <rendar> yep
[13:27:58] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[13:28:20] <ssbr`> rendar: I think I probably would not frown too much on defining __init__ on an ABC -- ABCs let you enforce that subclasses override key methods, it doesn't matter so much if they're "really" abstract or not
[13:29:21] *** Joins: rv0 (~rv0@ptr-d5dhmrxfdqgk0gja3l4.18120a2.ip6.access.telenet.be)
[13:30:32] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[13:31:19] *** Joins: newpy (~newpy@206.168.231.90)
[13:31:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:31:29] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[13:31:34] <newpy> I have a numpy array r = array([-2.14692153,  1.        ,  0.6227695 , -0.22113099])
[13:31:48] <newpy> I'm trying to do r[r<0.9999][r>0] and it complains
[13:32:07] *** Joins: rany (~rany@user/rany)
[13:32:08] <newpy> IndexError: boolean index did not match indexed array along dimension 0; dimension is 3 but corresponding boolean dimension is 4
[13:32:37] <Repiphany> r[(r<0.9999)*(r>0)]
[13:32:56] <newpy> Repiphany, interesting, are there docs for that syntax?
[13:33:12] <bjs> rendar: abstract classes can have non-abstract methods, including __init__
[13:33:17] <Repiphany> No, you're just doing an "and" on two boolean arrays
[13:33:26] <rv0> I need some help with python executable files (.pex). For testing I want to edit a parameter of a specific file within the pex. I need to do it many times, so building the whole pex from scratch every time seems like a hassle. Is there a quick commandline way to "unzip" a pex and "rezip" it without losing anything?
[13:33:48] <newpy> Repiphany, I see, hadn't seen * as logical and before
[13:33:50] <Repiphany> Your first way fails because the first index only has 3 elements but the second bool array still tries to get 4
[13:34:01] *** Quits: y1n (~y1n@84-115-64-59.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[13:34:12] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:34:35] <newpy> Repiphany, ah I see, I figured the [r>0] would operate on the array returned by r[r<.9999] or something
[13:34:51] <Repiphany> It tries to
[13:35:06] <newpy> oh right, r>0 returns [f,f,t,f]
[13:35:09] <newpy> I see now
[13:36:03] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:36:26] <bjs> rendar: __init__ is useful in abstract classes, since you can still call it with super()
[13:36:56] <bjs> and it can provide a default __init__  behaviour for when y ou don't override it in the base classes.
[13:39:01] <jinsun> newpy: you can also use `&` instead of `*` to make it look like `and`
[13:39:07] <rendar> bjs, right
[13:39:24] <rendar> bjs, but *SHOULD* i call super().__init__() when my class inherits from an ABC?
[13:39:35] <rendar> and what about my class inherits from *multiple* ABCs?
[13:39:48] <bjs> rendar: really every class should call super().__init__ if it overrides __init__
[13:40:08] <bjs> rendar: well inheriting from multiple things is exactly what super() was designed for :)
[13:40:40] <rendar> so, i should always call super().__init__?
[13:40:52] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[13:41:13] <bjs> rendar: ideally yes sadly lots of people write bad classes that don't work properly when you do
[13:41:19] *** Joins: kernix3 (~kernix3@89.41.187.24)
[13:41:31] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:42:11] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3127:8889:67ab:5149) (Quit: Client closed)
[13:42:26] <rendar> `def __init__(self): super().__init__()` so this is good even if my ABC doesn't implement __init__, because it will call parent's parent's __init__
[13:42:41] <bjs> yes, exactly
[13:42:53] <bjs> and for base classes with multiple parents then that super is basically required to be able to work correctly
[13:42:55] <newpy> TIL, never knew I should be calling super().__init__()
[13:43:03] <newpy> then again I don't use inheritance much
[13:43:55] <rendar> bjs, why?
[13:44:24] <bjs> rendar: super() is there to make multiple inheritance work,  if you don't use super() then when the children try do multiple inheritance it might not work
[13:44:31] <bjs> because making it work is what super() was invented for
[13:44:41] <bjs> (regardless of ABCs)
[13:44:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[13:45:03] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[13:45:22] *** Joins: CombatVet (~c4@user/combatvet)
[13:45:42] <newpy> Repiphany, jinsun I tried to add another index: r[abs(r.imag)<.0005][(r<.9999)&(r>0)][0]
[13:46:04] <newpy> same issue, do I need to type r[abs(r.imag)...] in each of my two conditions?
[13:46:34] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[13:46:37] <newpy> eg. (r[abs(...)]<.9999)&(r[abs(...)]>0) ?
[13:46:52] <rendar> ok
[13:46:58] <newpy> or is there a cleaner way?
[13:47:47] <newpy> I guess I could just use two lines
[13:47:48] <jinsun> newpy: `r[(abs(r.imag)<.0005) & (r<.9999)&(r>0)][0]` ?
[13:48:10] *** Joins: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at)
[13:48:21] <jinsun> just chain &s
[13:48:29] <newpy> ah yea that works
[13:51:01] *** Quits: rv0 (~rv0@ptr-d5dhmrxfdqgk0gja3l4.18120a2.ip6.access.telenet.be) ()
[13:53:05] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[13:53:18] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[13:53:23] *** Joins: Tempesta (Tempesta@user/tempesta)
[13:54:14] <rendar> is there a way to make a conditional assert? i mean, run the assert only if a certain condition is met, otherwise ignore
[13:54:50] <ssbr`> rendar: anything wrong with `if ...: assert ...` or even `if assert ... or ...` ?
[13:54:58] <ssbr`> er, the second one shouldn't have `if`
[13:55:29] *** Joins: node1 (~node1@user/node1)
[13:56:23] *** Joins: realies (~realies@user/realies)
[13:56:42] *** Quits: mertsas (~martin@ti0185q160-2775.bb.online.no) (Ping timeout: 260 seconds)
[13:57:08] *** Joins: raxor2k (~raxor2k@78.158.228.175)
[13:57:10] *** Joins: mertsas (~martin@ti0185q160-2775.bb.online.no)
[13:57:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:58:22] *** Quits: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net) (Ping timeout: 252 seconds)
[13:58:25] *** Joins: LordKalma (~LordKalma@2a01:4f9:c011:203b::1)
[13:59:05] *** Joins: fikran (~fikran@user/fikran)
[14:00:04] *** Quits: LordKalma (~LordKalma@2a01:4f9:c011:203b::1) (Client Quit)
[14:00:14] *** Joins: LordKalma (~LordKalma@2a01:4f9:c011:203b::1)
[14:00:27] *** Joins: summonner (~summonner@188.24.90.174)
[14:01:35] <deniska> isn't assert itself a condition?
[14:05:16] *** Quits: kernix3 (~kernix3@89.41.187.24) (Quit: leaving)
[14:05:45] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[14:06:01] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:06:06] <control_> hi. how can i stop a for loop and start ir from beggining?
[14:06:29] <control_> if the loop is not finished, i want to restart it with different options
[14:06:31] *** Joins: DaPinkOne (~Dap@user/dap)
[14:07:12] *** Quits: LordKalma (~LordKalma@2a01:4f9:c011:203b::1) (Quit: ZNC 1.6.5+deb1+deb9u2 - http://znc.in)
[14:07:14] *** control_ is now known as control
[14:07:31] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[14:09:22] <bjs> control: you can't "restart" a for loop
[14:10:01] <bjs> control: you could put the for loop inside another loop, like `while try_for_loop_again: for i in something: ...`
[14:10:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:10:15] <control> there is no way i could put a keyboard hotkey to stop the loop
[14:10:21] <jinsun_> ya in general that is not possible, for example of you looped over a generator or something there is no way to get those items back
[14:10:29] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[14:10:31] <bjs> control: you can stop a loop, with "break", but this just stops it, it doesn't restart it
[14:10:34] <control> maybe theres a way to put a loop in timer
[14:10:44] <control> say every 20s restart the loop
[14:10:47] *** Joins: computeiro (~Wender@189.37.64.113)
[14:10:49] <bjs> control: you can also use "continue", to skip over this iteration. But nothing does what you describe as "restart"
[14:12:49] <bjs> control: hmm, why do you want to restart the loop every 20s? What is it doing?
[14:14:51] *** Joins: matkor (~matkor@89.25.223.66)
[14:15:05] <control> just to change the options of the loop
[14:15:30] <bjs> control: what are the "options" ?
[14:15:30] <raxor2k> bjs: how can i add both of the tasks into the same dict? : https://replit.com/@raxor2k/addetasksinnisammedato#main.py   currently now it just overwrite the existing one if date is same
[14:16:23] <control> words = sample(w1, 500) - these are the options. everytime time i start the loop it gets different words
[14:16:34] <bjs> raxor2k: well, instead of overwriting why not check if it already exists and only if it doesn't exist then create it
[14:16:51] <bjs> control: and you're doing something like `for w in words: ...`
[14:17:20] <raxor2k> but "if it exists. then 'copy'?" instead of 'update?
[14:17:39] <bjs> raxor2k: if it exists, then... merge the two? or update the entry? or do something
[14:18:01] <control> yes
[14:18:23] <bjs> control: ah,  you cannot change what you're looping over from inside the loop.  You have to stop the loop, then start a new one with the new thing you want to loop over
[14:18:24] <control> for m1 in permutations(w1, 8):
[14:18:39] <control> thats what i expected
[14:18:49] <control> to stop and start all over manualy
[14:19:33] <control> maybe i can do this with windows bat file
[14:19:49] <raxor2k> bjs: easier said than done, but i try
[14:20:07] <bjs> raxor2k: what do you want the output to be?
[14:22:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[14:22:06] <summonner> control, I missed your URL, could you send it again? thanks
[14:22:11] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.6.5+deb1+deb9u2 - http://znc.in)
[14:23:00] <rendar> i can't get this: i'm inside a package (or module?) because this is a directory with __init__.py, and from a .py file into this directory i do "from .a import A" with a.py being in the same directory, still i get ImportError: attempted relative import with no known parent package -- but why? if i'm inside a directory package
[14:23:56] <raxor2k> bjs: like this: https://bpa.st/EH2Q
[14:24:02] <molt> Quick question: is a "-" an acceptable character in a variable name?
[14:24:06] <bjs> molt: no
[14:24:11] <bjs> molt: - is the subtraction operator
[14:24:16] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:24:19] *** Joins: palasso_ (~palasso@user/palasso)
[14:24:22] <molt> bjs: thanks for the quick answer
[14:24:23] <matkor> use _
[14:24:25] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[14:24:35] <bjs> rendar: the problem is that being "inside" a package depends not only on the file structure but also how the file was ran/imported
[14:24:42] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 260 seconds)
[14:25:08] <rendar> oh
[14:25:13] <bjs> rendar: files you run directly are never considered inside a package.  e.g. `python3 a/b/c/d.py` then Python cannot see the a, a.b, or a.b.c packages and it does not think that d is inside a package
[14:25:21] <rendar> i ran `cd my_pack; python b.py`
[14:25:25] <bjs> rendar: but if you were to go `python3 -m a.b.c.d` then it would
[14:25:33] <bjs> or `python3 -c "import a.b.c.d"` or whatever
[14:25:41] <rendar> uhm, i see
[14:26:10] <bjs> raxor2k: you want the output to be... two dicts?  maybe you want a list?
[14:26:32] <bjs> raxor2k: or maybe you want a dict whose values are lists?
[14:26:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[14:27:04] *** Quits: ferz (~ferz@93-39-142-125.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[14:27:15] <raxor2k> bjs: maybe, or maybe not, i need to test myself
[14:27:19] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[14:27:34] <bjs> raxor2k: I think you probably want a dict whose values are lists :)
[14:27:42] <rendar> bjs, i have moved the file outside the package but i still get the error :(
[14:28:03] <bjs> rendar: if you move it outside the package then try go "from .a import ..." then of course you get the error
[14:28:24] <rendar> i have just that..
[14:28:31] <bjs> just what
[14:28:36] <rendar> from .a import A
[14:29:11] <bjs> rendar: well if you take the file outside of the package then it's definitely not inside the package and so you can't do . imports
[14:29:28] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:29:31] <bjs> the problem wasn't where the file was but how you were running it,  or maybe you just don't want it to be part of the package at all
[14:30:01] <raxor2k> bjs: you mean like this? :  https://bpa.st/V4OQ
[14:30:05] <rendar> ok, i see that now
[14:30:05] <bjs> rendar: python -m my_pack.b`  or have b.py next to my_pack/  and have b.py go `from my_pack import a`
[14:30:22] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[14:30:49] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[14:30:50] <bjs> raxor2k: yes, except you're missing the closing }
[14:31:00] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:32:04] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:32:48] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Quit: WeeChat 2.8)
[14:33:16] <raxor2k> bjs: ok, so what changes do i need to make to make that date dict a list of dicts?
[14:33:34] <rendar> is normal having with https://bpa.st/U6CQ this error? UnboundLocalError: local variable '_SCHED_ID' referenced before assignment
[14:33:35] <raxor2k> just " = [{}] ?
[14:33:38] <bjs> raxor2k: you need to make a list,  and then append to it
[14:34:42] <bjs> rendar: you shouldn't get that error from that code.
[14:34:52] <bjs> because there is a `global _SCHED_ID`
[14:35:11] *** Quits: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[14:35:24] <rendar> huh?
[14:35:30] <rendar> i get that error even if remove that global
[14:35:53] <bjs> rendar: I mean,  you have `global _SCHED_ID` so _SCHED_ID is obviously a global so why would you get an error about locals
[14:36:02] <bjs> rendar: if you remove the global then you *definitely* get the error you mention
[14:36:04] <rendar> i don't know why
[14:36:13] <rendar> i get the error even with global :(
[14:36:15] <bjs> rendar: I'm saying, the code you show is not the one generating the error you say
[14:36:19] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 252 seconds)
[14:36:24] <rendar> yes!
[14:36:27] <bjs> rendar: yes what
[14:36:36] <rendar> https://bpa.st/BWFQ
[14:36:46] <raxor2k> bjs: ok now im just confused
[14:36:53] <bjs> raxor2k: why are you confused
[14:37:07] <raxor2k> i mean: why do i need a list of dicts
[14:37:29] <bjs> raxor2k: I mean, I asked you what you wanted and you should be a thing that for '2021-09-13' had two dicts
[14:37:54] <raxor2k> bjs: yes ? but does that mean it has to be alist ?
[14:37:56] <bjs> rendar: but this says the `self.name = ...` line was on line 13. but in your paste it was line 14
[14:38:05] <bjs> raxor2k: well the thing you showed just isn't Python at all
[14:38:09] *** Joins: upsala (~zcb@185.213.155.160)
[14:38:33] <bjs> raxor2k: I mean try it: `{'2021-09-13': {"a": 1}, {"b": 2}}`  <- this isn't a valid dict
[14:39:13] <bjs> raxor2k: when I say what output do you want, you should at least see if what you ask for is a valid Python object, and if not, decide what Python object you want
[14:39:41] <bjs> I infer that from that you want something like `{'2021-09-13': [{"a": 1}, {"b": 2}]}`  as that makes the most sense,  but I'm guessing from your malformed input
[14:40:07] <bjs> rendar: since the line numbers don't match, something is funky here, and so that's why I say the code you show isn't the one generating the error
[14:40:27] <rendar> bjs, you're right, found the bug, thanks
[14:40:31] <bjs> :)
[14:41:43] *** Joins: mike18_ (~geri@217-149-162-127.nat.highway.telekom.at)
[14:41:54] <mike18_> hi how to create all permutations here? https://ideone.com/DGHIv3
[14:42:06] <raxor2k> bjs: whatever, this is NOT working: https://bpa.st/IISA
[14:42:23] <bjs> mike18_: doesn't `l` already have all permutations in it?
[14:42:39] <mike18_> idk where the error is from
[14:42:40] *** Joins: wyclif (~wyclif@user/wyclif)
[14:42:47] <bjs> mike18_: what error?
[14:42:52] <bjs> you didn't mention an error
[14:42:58] <mike18_> it shows runtime error
[14:43:02] *** Joins: ferz (~ferz@93-39-142-125.ip76.fastwebnet.it)
[14:43:08] <bjs> mike18_: it does? you didn't mention that.  What does it say?
[14:43:21] <bjs> rendar: what on earth is `the_dates_dict[the_dates] = {date_list}`
[14:43:23] <bjs> oops
[14:43:26] <bjs> raxor2k: what on earth is `the_dates_dict[the_dates] = {date_list}`
[14:43:33] <mike18_> bjs: just runtime error
[14:43:39] <mike18_> when calling l = list(permutations(data))
[14:43:42] <bjs> mike18_: but what exactly does it say?
[14:43:46] <bjs> like, copy paste it to me
[14:44:07] <mike18_> i only tested in ideone so far - not any more infos
[14:44:17] <bjs> mike18_: well what did it say in ideone?  copy/paste it to me
[14:44:18] <rendar> raxor2k, maybe you want `the_dates_dict.setdefault(the_dates, set()).add(date_list)`
[14:44:25] <mike18_> i guess it doensnt know that lib
[14:44:33] <bjs> mike18_: what lib?  stop guessing, copy/paste what it said to me
[14:44:39] <raxor2k> bjs: ask jesus
[14:44:43] <raxor2k> im confused now
[14:44:49] <mike18_> bjs: there is nothing more than runtime error msg :)
[14:45:04] <bjs> mike18_: like, it literally says "runtime error msg", all lowercase, with the spaces and with the word "msg" ?
[14:45:10] <mike18_> yeah
[14:45:15] <bjs> mike18_: really? copy/paste it to me
[14:45:25] <mike18_> its in that link i pasted
[14:45:33] *** Quits: gtristan (~tristan@223.62.22.193) (Ping timeout: 265 seconds)
[14:45:35] <bjs> mike18_: there is no runtime error for me in the link you pasted
[14:46:15] <bjs> mike18_: have you calculated how many permutations there *are* there? btw
[14:46:25] <mike18_> lots
[14:46:26] <bjs> the computer probably just doesnt' have enough memory to store them...
[14:46:27] <raxor2k> bjs: you know what? while we are talking about it, why not just do it like this :
[14:47:59] *** Joins: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at)
[14:48:08] <bjs> raxor2k: just like you do before, check if it exists already, if it doesn't create it (but make a list) and if it does merge it (by appending) https://bpa.st/34QA
[14:48:27] <bjs> everytime i've given you code it's exactly the same pattern
[14:48:55] <bjs> mike18_: how much memory would you need to store all the permutations?
[14:49:08] <bjs> mike18_: probably your computer/ideone's computer just doesn't have enough
[14:49:23] *** jazzy2 is now known as jazzy
[14:49:58] <bjs> mike18_: and by probably I mean there is definitely no way your computer has enough memory to store all the permutations in a list
[14:50:11] <mike18_> yeah
[14:50:16] <mike18_> bad
[14:50:21] <bjs> mike18_: bad?
[14:50:23] <mike18_> i need that permutations to fix a test :)
[14:50:37] <bjs> mike18_: I mean, there are more than "lots" of permutations. That list has 100 things in it
[14:50:54] <bjs> there are 100! permutations
[14:51:14] <mike18_> i have a http call which looks like: q=(1244,1223,4444) ... the lib i use does not send that request in the order i give in q
[14:51:31] <mike18_> so my idea was to register response mock for all permutations
[14:52:02] <bjs> mike18_: for the permutations of 100 things, there isn't enough memory on all the computers in the world to store them all, probably.
[14:52:09] <mike18_> yeah
[14:56:25] <control> how can i get the first value of the permutations(words, 12)
[14:57:15] <supakeen> next(permutations(words, 12))
[14:58:11] <control> perfectm thanks supakeen
[14:59:53] *** Joins: xon (~xon@192.145.116.34)
[15:00:01] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[15:00:27] *** Joins: LordKalma (~LordKalma@2a01:4f9:c011:203b::1)
[15:00:50] *** Quits: LordKalma (~LordKalma@2a01:4f9:c011:203b::1) (Remote host closed the connection)
[15:01:02] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:01:12] *** Joins: zaquest (~notzaques@5.128.210.178)
[15:01:19] *** Joins: LordKalma (~LordKalma@2a01:4f9:c011:203b::1)
[15:01:31] <pluri> does anyone know if Selenium can be recognised as a robot? for some reason I can't find anywhere what its default headers/user agent are
[15:01:46] <pluri> using it with chrome webdriver
[15:02:00] <pluri> headless
[15:02:08] <supakeen> It automates the normal browser, hence the browser has its normal headers.
[15:02:21] <supakeen> There are, of course as there always are, still ways to detect an automated browser.
[15:02:24] <pluri> and the chrome webdriver has normal headers?
[15:02:28] <supakeen> Yes.
[15:02:33] <supakeen> That's just the bit that speaks to the browser.
[15:02:34] <pluri> perfect. thanks
[15:03:42] <supakeen> However, Selenium-driven browsers tend to have some attributes and options set on their javascript environments that make them detectable as Selenium-automated, you can likely find a list.
[15:04:37] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[15:04:38] <deniska> If your goal is to hide automation, automated chrome leaves much more of a detectable trace, than, say, just issuing requests against end points you actually care about
[15:05:19] <pluri> i don't need to simulate any behaviour, just be able to scrape a dynamically loaded page
[15:05:48] <pluri> the page just needs to update its content
[15:05:59] <pluri> and throw it into soup
[15:06:17] <deniska> the page dynamically loads data from somewhere, it might be much less work to access that "somewhere" directly instead of going through the page
[15:06:32] <pluri> that's a good point
[15:06:32] *** Quits: xon (~xon@192.145.116.34) (Read error: Connection reset by peer)
[15:06:59] <pluri> thanks
[15:07:09] <deniska> Unless the site is already a common scraping target, I doubt they'll have many mechanisms in place
[15:10:09] <raxor2k>  bjs: whats wrong here? : https://bpa.st/2AQA
[15:10:20] *** Quits: pycode (~pycode@2001:b07:5d28:551:bd16:ed37:cd0b:8e07) (Ping timeout: 268 seconds)
[15:13:58] *** Quits: LordKalma (~LordKalma@2a01:4f9:c011:203b::1) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:14:29] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[15:15:49] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:16:36] *** Joins: Naan (~Naan@user/naan)
[15:16:42] *** Joins: xon (~xon@192.145.116.34)
[15:17:02] *** Quits: realies (~realies@user/realies) (Quit: ~)
[15:17:07] <bjs> raxor2k: I don't understand,  didn't we decide you wanted a list
[15:17:20] *** Joins: realies (~realies@user/realies)
[15:17:54] <gitesh> what does max(L, key=abs) do?
[15:18:10] <gitesh> it changes L to different using abs?
[15:18:21] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[15:18:21] <bjs> gitesh: it returns the element from L whose abs(element) is the largest
[15:18:22] <gitesh> or is it just property
[15:18:31] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[15:18:33] <gitesh> oh
[15:18:34] <bjs> gitesh: e.g. max(list_of_strings, key=len) returns the string with the biggest length
[15:18:41] <bjs> (aka the longest string)
[15:18:45] <raxor2k> bjs: i want list further inside the dict, but for now only dict
[15:18:52] <raxor2k> then i can test later
[15:19:03] <bjs> raxor2k: okay, so you don't want the list yet
[15:19:03] <bjs> ?
[15:19:35] <raxor2k> no
[15:19:53] <raxor2k> first i want to add several dicts into the dates dict, and then i can have lists with different dicts inside
[15:19:55] <bjs> raxor2k: okay so what *do* you want the output to be?
[15:20:00] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[15:20:10] <raxor2k> bjs: give me 2 min, i make paste
[15:25:00] *** erica is now known as birb
[15:26:03] <rendar> RuntimeError  Task <Task pending name='Task-12' coro=<Gate._run_single() running at gate.py:46> cb=> got Future <Future pending> attached to a different loop
[15:26:07] <rendar> wtf? any clue?
[15:27:06] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:27:09] <control> how can i compare two texts for similiar words?
[15:27:31] <control> need to count similiar words in two texts
[15:28:01] <pluri> deniska i think i struck gold.. the api end it connects to returns an avalanche of (surprisingly useful!) data most of which isn't even rendered in the page huh
[15:28:27] <pluri> thx for the suggestion
[15:28:48] <rendar> how a Future can be attached to a different loop?
[15:30:48] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[15:30:54] <space-ghost> use https://bpa.st/+python for paste please rendar
[15:30:55] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:31:04] <space-ghost> its hard to read that in here
[15:31:13] <space-ghost> also maybe some code
[15:32:23] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[15:32:59] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[15:33:32] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[15:34:09] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:34:27] *** Joins: Ivii (~Ivyy@2001:a61:1329:3e01:7c74:8ef6:9dd:debb)
[15:34:51] *** Quits: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[15:34:52] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[15:35:40] *** Quits: matkor (~matkor@89.25.223.66) (Read error: Connection reset by peer)
[15:43:26] <pluri> ah, the site is using CloudFlare to deny access to the API endpoint
[15:45:34] *** shawwwn is now known as shawwwn2
[15:46:09] *** shawwwn2 is now known as shawwwn
[15:46:41] *** Joins: gggp (~textual@60.10.194.42)
[15:46:45] *** Quits: gggp (~textual@60.10.194.42) (Read error: Connection reset by peer)
[15:48:05] *** Joins: y1n (~y1n@84-115-64-172.wifi.dynamic.surfer.at)
[15:48:08] <rendar> any help? how is that possible i get a Future attached to another loop, if i didn't change loop?
[15:49:49] <bjs> rendar: hard to tell without seeing the code,  maybe it's that it was made outside the loop somehow
[15:49:53] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[15:50:04] *** Joins: spithash (~spithash@user/spithash)
[15:50:25] <rendar> it's a lot of code actually, dunno how to get a snippet from this
[15:50:55] *** Quits: dre (~dre@2001:8003:c932:c301:3743:ee79:8c00:65b1) (Remote host closed the connection)
[15:50:59] <rendar> this is the code where i get the other loop exception https://bpa.st/EC7A
[15:51:06] <rendar> _run_single
[15:51:57] <rendar> line 46
[15:53:12] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[15:53:40] <raxor2k> bjs: here it is: https://bpa.st/3C4A
[15:54:19] <raxor2k> why  do i complicate it, i can just make a dict of tasks before merging to dates
[15:55:04] *** birb is now known as erica
[15:55:08] *** Quits: palasso_ (~palasso@user/palasso) (Remote host closed the connection)
[15:55:24] <bjs> raxor2k: that thing at the bottom doesn't look like a Python data structure. it's clearly supposed to be a dict of some kind, with string keys, but what are the values?
[15:55:45] *** Joins: frost (~frost@59.71.243.104)
[15:57:29] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[15:58:30] <bjs> rendar: is it possible you're creating the queues outside of the loop and it's going wrong?
[15:58:34] *** Quits: LordKalma_ (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[15:59:05] <rendar> bjs, but... how can i create queues outside the loop? i mean, to do that i have to create queues into another thread, which i'm not doing
[15:59:14] <gitesh> I think I am bad at creating test cases
[15:59:28] <bjs> rendar: who said anything about threads/
[15:59:47] <rendar> bjs, but... how can i create queues outside the loop then?
[15:59:58] <bjs> rendar: `import asyncio; q = asyncio.Queue()`
[16:00:48] <rendar> what? that will create a new loop? how come?
[16:01:01] <bjs> no it won't
[16:01:11] <rendar> so?
[16:01:31] <bjs> so it's outside the loo
[16:01:32] <bjs> loop
[16:01:47] <rendar> how can i fix that, if that's the error?
[16:02:13] <raxor2k> bjs: what do you mean what are the values ?
[16:02:39] <bjs> rendar: make the queues from inside the loop (e.g. from inside an `async def`)
[16:02:52] <bjs> raxor2k: I mean.. dicts have keys and values, what are the values? what type are they?
[16:03:07] <raxor2k> the keys are the dates ?
[16:03:15] <rendar> bjs, but i create those queues inside the __init__ of a class!
[16:03:43] <bjs> raxor2k: well no the keys are clearly not dates but are strings,  and also I didn't ask about the keys I asked about the values
[16:04:09] <bjs> raxor2k: the thing you say at the bottom of what you want the output to be, if I just copy/paste it into python I get a syntax error -- it's not even a valid dict
[16:04:38] <bjs> rendar: which is not being called from inside the event loop
[16:04:50] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[16:05:07] <bjs> so if you just make the queues from inside the event loop (e.g. from an `async def` or from a function called from an `async def`) then it'll work
[16:05:21] <raxor2k> bjs: i know its not. But thats not the point
[16:05:29] <raxor2k> the app developer wants it to be like this
[16:05:59] <bjs> raxor2k: decide what *Python* object you want to create,  _then_ you can take the Python object and format it however you want
[16:06:23] <bjs> raxor2k: again maybe you just want a dict where each value is a list of dicts/tasks
[16:07:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:07:29] *** Joins: wender (~Wender@189.37.64.113)
[16:08:46] *** Joins: fikran (~fikran@user/fikran)
[16:09:32] *** Quits: gitly (~gitly@148.252.128.33) (Quit: WeeChat 3.2)
[16:09:49] <wib_jonas> that sort of seems like you want a human-readable formatted output, with the records grouped by dates, rather than a python object. but the braces in that formatted output are still strange.
[16:10:19] *** Quits: computeiro (~Wender@189.37.64.113) (Ping timeout: 252 seconds)
[16:10:25] <wib_jonas> (or possibly a machine-readable formatted output, with the braces still odd)\
[16:11:20] *** Joins: Hax0r (~Hax0r@146.251.29.89)
[16:11:21] <raxor2k> bjs: how about something like this? : https://bpa.st/RU2Q
[16:11:24] <raxor2k> it doesnt work tho..
[16:11:32] *** Joins: pycurious (~Adium@user/pycurious)
[16:11:36] <bjs> raxor2k: why not make a list?
[16:11:59] <bjs> it seems for each date you may have *multiple* tasks,  and so, why not just have a list per date?
[16:12:24] <raxor2k> i dont know
[16:13:01] *** Joins: computeiro (~Wender@189.37.64.113)
[16:13:08] <bjs> raxor2k: you can't just make 1 dict and keep update()ing it, or you'll end up with 1 dict
[16:13:22] <bjs> make a list and append() to it to get multiple dicts for each date
[16:13:33] <raxor2k> bjs: can you give an exmaple ?
[16:13:39] <bjs> raxor2k: I already did
[16:13:54] <raxor2k> bjs: where ?
[16:14:06] <bjs> raxor2k: https://bpa.st/34QA
[16:14:21] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:14:43] *** Quits: wender (~Wender@189.37.64.113) (Ping timeout: 252 seconds)
[16:14:47] <raxor2k> oh.. i didnt see it
[16:15:23] *** Joins: dez (uid92154@user/dez)
[16:15:26] <bjs> raxor2k: but do you see the pattern?  it's the same as every other code I've given you,  you check to see if it's there and if it's not there you create an empty one, and then you merge into it (in this case, by appending)
[16:15:40] <bjs> but you can do more complicated things and use structures other than just a list of course
[16:16:31] *** Quits: Ivii (~Ivyy@2001:a61:1329:3e01:7c74:8ef6:9dd:debb) (Remote host closed the connection)
[16:18:35] <raxor2k> bjs: yes i know the pattern now
[16:18:40] <raxor2k> and your example works fine
[16:18:41] <raxor2k> but
[16:18:53] <raxor2k> doesnt mean that  this is the ultimate answer(i dont decide that)
[16:19:01] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[16:19:21] *** Quits: doko (~doko@2a02:8106:1a:7600:3060:68e:cfae:d1ef) (Remote host closed the connection)
[16:19:23] <bjs> there are no ultimate answers
[16:19:36] <bjs> there is just code that works and code that doesn’t
[16:20:31] *** Joins: jinsun (~quassel@user/jinsun)
[16:20:39] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[16:21:45] <pluri> wow, this site even blocks selenium, again via vloudflare
[16:22:36] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[16:23:19] *** Quits: kib (~kib@user/kib) (Ping timeout: 268 seconds)
[16:23:25] <wib_jonas> raxor2k: I'd throw in some newlines between the entries to make the output more readable: https://dpaste.org/VLo9
[16:23:49] <pluri> it's fine, just had to change headers
[16:24:00] <gitesh> What is an exception?
[16:24:10] <wib_jonas> you could even break the records to multiple lines, with indents before them, or try to use one of those JSON pretty printers to get an output similar to that
[16:24:45] <raxor2k> wib_jonas: thanks!
[16:24:50] *** Joins: realies (~realies@user/realies)
[16:25:49] <raxor2k> bjs: i think u get my point now
[16:25:58] *** saribro is now known as swinnenb
[16:26:11] <raxor2k> sometimes its about satisfying others
[16:27:25] *** Quits: cruncher (~cruncher@90.68.118.49) (Quit: Leaving)
[16:28:02] *** Quits: Hax0r (~Hax0r@146.251.29.89) (Ping timeout: 268 seconds)
[16:28:05] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[16:29:39] *** Joins: gitly (~gitly@148.252.128.33)
[16:30:07] *** Joins: cth (~Cthulchu@193.194.107.250)
[16:31:25] *** Joins: doko (~doko@2a02:8106:1a:7600:6594:c1f0:aa50:3cbc)
[16:34:12] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[16:34:35] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Remote host closed the connection)
[16:34:47] *** Quits: y1n (~y1n@84-115-64-172.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[16:34:47] <bjs> gitesh: it's like an error
[16:35:04] <gitesh> not all exceptions are errors
[16:35:10] <rannnn8888> https://bpa.st/ this script make request only one time yes ? when i make "driver.find_element" all 40 sec it not make request or somthing yes :D  ?
[16:35:14] <bjs> gitesh: sure
[16:35:14] *** Joins: LordKalma_ (~LordKalma@2a01:4f9:c011:203b::1)
[16:35:58] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:58] <bjs> gitesh: but an exception means the code doesn't continue and it "throws" an error.
[16:37:52] *** Quits: LordKalma_ (~LordKalma@2a01:4f9:c011:203b::1) (Client Quit)
[16:38:13] <gitesh> that means not all errors are exceptions
[16:38:23] <bjs> gitesh: yeah
[16:38:24] *** Joins: LordKalma (~LordKalma@2a01:4f9:c011:203b::1)
[16:38:35] <bjs> gitesh: "error" is a very generic term. It just means "something went wrong". exception is a specific Python thing
[16:38:46] <gitesh> bjs: got it
[16:39:00] <bjs> if some Python code raises an exception,  the code will stop  (and maybe continue from somewhere else to "handle" it)
[16:39:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:39:21] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[16:40:41] <bjs> gitesh: you have to remember that what one person thinks is an "error" might not be what another does
[16:42:48] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[16:43:51] *** Quits: cth (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[16:44:43] <wib_jonas> raxor2k: here's the same with automatic line-breaking https://dpaste.org/nm5w , though if you know in advance what fields your records will have, you might instead want a custom formatter for that type of record
[16:44:45] *** Joins: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com)
[16:45:28] *** Quits: xon (~xon@192.145.116.34) (Quit: Leaving...)
[16:46:06] *** Joins: realies (~realies@user/realies)
[16:46:08] <raxor2k> wib_jonas: thanks, appreciate it
[16:46:49] *** Joins: kib (~kib@user/kib)
[16:46:53] *** Quits: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com) (Client Quit)
[16:47:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:48:07] *** Joins: y1n (~y1n@84-115-65-80.wifi.dynamic.surfer.at)
[16:50:14] *** Joins: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com)
[16:51:23] *** Joins: timkofu (~timkofu@user/timkofu)
[16:51:26] <timkofu> Hi
[16:52:29] <pycurious> is anyone here using zeromq/nng? Any recommendations for libraries like that I can look at?
[16:53:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[16:53:49] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[16:54:38] <control> how can i convert set { to list [
[16:54:38] *** Quits: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com) (Client Quit)
[16:54:42] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:54:55] *** Joins: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com)
[16:55:08] *** Joins: fdan (~fdan@192.146.154.3)
[16:55:51] <bjs> control: `the_list = list(the_set)`  will create a new list using the elements from the set
[16:56:21] <bjs> (note that the order you get will essentially be random, as sets are unordered collections)
[17:00:34] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:01:09] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[17:02:24] <control> what im doing wrong here? -> https://bpa.st/64HQ
[17:02:36] <control> cant get count
[17:06:19] *** Quits: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com) (Quit: leaving)
[17:06:48] *** Joins: Hax0r (~Hax0r@146.251.29.89)
[17:07:31] <Repiphany> control: What do you expect to happen vs what actually happens
[17:08:21] *** Joins: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com)
[17:08:47] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[17:09:01] *** Joins: hifi (hifi@m.vi.fi)
[17:10:05] *** shawwwn is now known as shawwwn2
[17:10:38] *** shawwwn2 is now known as shawwwn
[17:11:10] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:11:20] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:14:31] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de) (Remote host closed the connection)
[17:14:51] *** Quits: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com) (Quit: leaving)
[17:15:53] *** Joins: pycode (~pycode@2001:b07:5d28:551:5605:84c2:d6c:3432)
[17:16:47] *** Joins: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com)
[17:16:52] *** Joins: palasso (~palasso@user/palasso)
[17:17:13] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[17:17:23] *** Joins: Aknip (~Aknip@user/aknip)
[17:19:15] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:21:04] *** Quits: Hax0r (~Hax0r@146.251.29.89) (Ping timeout: 268 seconds)
[17:23:21] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de)
[17:26:29] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[17:28:55] *** Quits: greknod2 (~grek@114-198-46-246.dyn.iinet.net.au) (Ping timeout: 265 seconds)
[17:29:16] *** Quits: Aknip (~Aknip@user/aknip) (Quit: Client closed)
[17:29:24] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[17:30:16] <Mocramis> control: can't see your link content
[17:30:25] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:31:03] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:31:47] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[17:31:50] <mage> hello
[17:32:12] <mage> any good recommendations for a library which parse an HTML form and populate with data?
[17:32:28] <mage> there was htmlfill from FormEncode but it looks unmaintained
[17:32:48] <Jimmy2027> hi, is anoyone here using dependabot from github? From what I can see dependabot is only checking for dependencies in pyproject.toml or setup.py, but I have my dependencies declared in setup.cfg, is there any way to make dependabot check setup.cfg?
[17:33:19] *** Joins: daoudr_ (~daoudr@178.197.217.245)
[17:35:06] *** Quits: y1n (~y1n@84-115-65-80.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[17:35:10] <space-ghost> mage have yo ulooked into browser automation
[17:35:15] <space-ghost> selenium
[17:35:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:35:39] *** Joins: greknod2 (~grek@114-198-41-82.dyn.iinet.net.au)
[17:35:40] <mage> no, I'm looking for a simple library
[17:35:51] <mage> (it's server-side code)
[17:35:53] <space-ghost> selenium is a simple library
[17:36:32] <mage> mmh
[17:36:44] <space-ghost> https://automatetheboringstuff.com/chapter11/
[17:36:49] <space-ghost> heres a good overview of some of your choices
[17:37:02] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[17:37:06] <mage> in my case it is not for testing purposes
[17:37:27] <grym> requests can certainly POST form data
[17:37:51] *** Joins: carl- (~carl-@185.103.188.130)
[17:38:05] <mage> yes, but what I'm looking for is a library which populates the form with some data
[17:39:04] <grym> yes, that's what a post does
[17:39:07] <mage> like mylib.render("<input type="text" name="lol" />", {'lol': 'lol123'}) which return <input type="text" name="lol" value="lol123" />
[17:39:18] <mage> but for a whole form
[17:42:10] *** Quits: daoudr_ (~daoudr@178.197.217.245) (Remote host closed the connection)
[17:42:10] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[17:42:26] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[17:46:50] *** Joins: y1n (~y1n@84-115-65-80.wifi.dynamic.surfer.at)
[17:48:08] *** Joins: arinov (~arinov@77.67.147.245)
[17:51:11] *** Quits: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com) (Quit: leaving)
[17:51:12] *** Joins: txtsd (~txtsd@user/txtsd)
[17:53:42] *** Joins: derpadmin (~Anonymous@69-165-203-228.cable.teksavvy.com)
[17:53:46] *** Joins: palasso (~palasso@user/palasso)
[17:54:18] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:54:29] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[17:54:39] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[17:55:30] *** Joins: puikstekend (~max@178-85-15-131.dynamic.upc.nl)
[17:55:50] <raxor2k> bjs: are you here
[17:55:56] <bjs> raxor2k: hello
[17:56:17] <raxor2k> now because of that list instead of dict stuff, i have other issues
[17:56:44] *** Joins: wallace_mu200 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net)
[17:58:44] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:05:02] *** Quits: puikstekend (~max@178-85-15-131.dynamic.upc.nl) (Quit: WeeChat 3.2)
[18:05:13] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:05:16] *** ub is now known as ubert
[18:05:55] <raxor2k> bjs: https://replit.com/@raxor2k/sortere-pa-muskelgruppe#main.py
[18:06:49] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:07:15] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:07:55] *** JoelJoel is now known as Joel
[18:08:10] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Quit: leaving)
[18:09:02] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:09:32] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[18:10:58] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[18:11:05] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:11:12] *** Joins: bninja (~bloodninj@user/bloodninja)
[18:11:36] *** Joins: NeoCore (~neocore@195.200.221.85)
[18:12:02] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:12:26] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:12:45] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[18:13:27] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[18:14:44] <leahey> I'm trying to not reinvent the wheel and find a web app that I can use for document generation. i.e. user signs up, inputs payment, inputs some info, and out pops a PDF. any thoughts?
[18:14:46] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Ping timeout: 260 seconds)
[18:16:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[18:18:10] *** Joins: fikran (~fikran@user/fikran)
[18:19:33] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:21:30] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:22:43] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-2c88-3fbc-a273-9e1b.res6.spectrum.com)
[18:24:22] *** Quits: kib (~kib@user/kib) (Quit: I'll return with a vpn)
[18:24:54] *** Joins: kib (kib@user/kib)
[18:25:33] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:27:51] *** Quits: raxor2k (~raxor2k@78.158.228.175) ()
[18:28:25] *** Joins: dmr (~dmr@user/dmr)
[18:29:33] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[18:29:49] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 265 seconds)
[18:31:01] <anddam> howdy
[18:31:22] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 268 seconds)
[18:31:48] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[18:32:09] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[18:32:10] *** Joins: ub (~Thunderbi@178.115.57.167.wireless.dyn.drei.com)
[18:33:26] *** Quits: ubert (~Thunderbi@178.115.60.138.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[18:33:26] *** ub is now known as ubert
[18:35:04] *** Quits: y1n (~y1n@84-115-65-80.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[18:35:51] *** Joins: maum (~maum@1.245.147.30)
[18:35:55] <maum> hello
[18:36:17] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:36:53] <anddam> re-asking here, can someone with five minutes to spare test follow https://github.com/anddam/issue-pip-wheel-entry-script-git and explain me why the wheel building fails?
[18:37:26] <maum> Is there a way to merge different size dfs? for example df_A has a b c column df_B a b c d and I want to get only df_A and df_B's d to df_A's c
[18:40:48] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[18:40:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:41:24] *** Joins: wyclif (~wyclif@user/wyclif)
[18:41:26] *** Joins: junktext (~junktext@109.201.152.167)
[18:41:32] <anddam> ahh too bad this AMA is over https://www.reddit.com/r/Python/comments/plvtlx/were_the_core_team_behind_the_popular_python/  <-- I had some sarcastic remark to provide
[18:41:50] *** Joins: cul8_r (~cul8r@76.113.95.199)
[18:42:32] *** Quits: maum (~maum@1.245.147.30) (Quit: Client closed)
[18:42:43] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[18:43:33] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[18:44:48] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:44:56] *** Quits: cul8r (~cul8r@76.113.95.199) (Ping timeout: 268 seconds)
[18:45:11] <anddam> I am going with "maum's question was about pandas and he moved to…
[18:45:25] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 252 seconds)
[18:45:45] <anddam> how is that channel for python numerical packages discussion? I seem to recall #python-data but alis doesn't know it
[18:45:55] <anddam> maybe #python-numeric ?
[18:46:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:46:32] <anddam> how is that channel _called_
[18:46:55] *** Joins: wyclif (~wyclif@user/wyclif)
[18:47:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[18:48:13] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[18:48:37] *** Joins: y1n (~y1n@84-115-65-80.wifi.dynamic.surfer.at)
[18:48:46] *** Joins: lethu (~lethu@user/lethu)
[18:52:13] <Exa> Hi, for anyone having a similar issue, we've seen that virtualenv package uses its own pinned versions for pip and setuptools, and they changed those in a new version yesterday.  Since setuptools removed 2to3 support last week, it becomes necessary to make sure _all_ versions are fixed in a CI, not just your direct dependencies. :)
[18:52:49] *** Joins: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net)
[18:53:12] <Exa> (virtualenv is used for example by tox)
[18:53:42] *** Quits: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net) (Client Quit)
[18:54:11] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 268 seconds)
[18:54:41] *** Joins: zebrag (~chris@user/zebrag)
[18:55:32] *** Joins: txtsd (~txtsd@user/txtsd)
[18:55:44] *** Joins: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net)
[18:58:59] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:01:46] <Fieldy> using 3.7.11 I have been using Path() to specify full FILE paths, however in this case, i'm specifying a directory as a base. do I even need to use Path() like this? or just simply define it as a normal string?  watchdog_base_directory = Path('/dev/shm/watchdogtest/')
[19:02:43] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:03:45] <Mocramis> Fieldy:  Path is only a path manipulation tool. You need it if you are going to perform some paht manipulation. Otherwise, it is strictly equivalent to a string.
[19:04:31] <Fieldy> Mocramis: okay, thanks!
[19:05:25] <jinsun> Fieldy: depends on where you will use the variable, if the functions you use accept Path then use Path, if they accept string then use string, if they accept both then use Path for convenience
[19:06:11] *** Joins: palasso (~palasso@user/palasso)
[19:08:56] <Fieldy> makes sense
[19:09:01] *** Joins: ali1234 (~al@user/ali1234)
[19:10:24] *** Quits: kib (kib@user/kib) (Quit: sorry wrong room)
[19:10:42] *** Joins: kib (kib@user/kib)
[19:11:04] *** Joins: blackout69 (~blackout6@mob-5-91-244-4.net.vodafone.it)
[19:14:32] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 268 seconds)
[19:15:00] *** Joins: jess (~jess@libera/staff/jess)
[19:19:54] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[19:20:50] *** Joins: lorenzosu (~lorenzosu@user/lorenzosu)
[19:21:17] *** Joins: jamwil (~jamwil@user/jamwil)
[19:23:05] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:23:59] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[19:24:07] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[19:25:27] *** Joins: OutreEE (~OutreEE@modemcable105.60-176-173.mc.videotron.ca)
[19:25:31] <grym> Fieldy: directories are paths, files are also paths
[19:30:07] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[19:32:40] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[19:33:45] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:33:51] *** Quits: arinov (~arinov@77.67.147.245) (Quit: WeeChat 3.1)
[19:33:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:34:24] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[19:34:29] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 268 seconds)
[19:34:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[19:34:58] *** Quits: y1n (~y1n@84-115-65-80.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[19:36:04] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[19:37:14] *** Joins: miker985 (~miker985@50.125.87.171)
[19:38:22] <PublicWiFi> this project is going to end up with me having to populate 150+ variables LOL
[19:39:13] <PublicWiFi> I'm not proud of this
[19:39:17] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[19:40:45] *** Joins: georgios (~georgios@user/georgios)
[19:41:00] <grym> > 11. If you have a procedure with ten parameters, you probably missed some.
[19:41:02] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:42:29] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:43:18] *** Joins: Nine_BAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[19:43:41] *** Joins: pycurious (~Adium@user/pycurious)
[19:43:44] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[19:45:12] *** Joins: SuperLag (~akulbe@user/superlag)
[19:45:42] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[19:46:30] *** Joins: faceface (~faceface@user/faceface)
[19:46:43] *** Joins: paravida (~myChateau@user/paravida)
[19:47:10] *** Quits: dmr (~dmr@user/dmr) (Ping timeout: 240 seconds)
[19:47:43] *** Joins: y1n (~y1n@84-115-65-80.wifi.dynamic.surfer.at)
[19:48:47] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[19:50:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[19:50:52] *** Quits: pycode (~pycode@2001:b07:5d28:551:5605:84c2:d6c:3432) (Ping timeout: 245 seconds)
[19:51:52] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[19:52:08] <timkofu> Does AsyncIO still have the issues Trio originally set out to solve?
[19:52:57] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:53:05] <graingert> timkofu: yes
[19:53:26] *** Quits: Nine_BAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[19:54:17] <graingert[m]> timkofu: you can use anyio and it solves a lot of stuff
[19:54:27] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[19:56:30] *** Joins: pro_z (~pro_z@37.214.34.140)
[19:56:58] *** Quits: gs (~behelit@217.61.224.9) (Ping timeout: 260 seconds)
[19:59:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:00:41] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:03:06] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[20:04:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:04:44] <timkofu> graingert[m]: Thanks.
[20:06:54] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc)
[20:10:05] *** Joins: adder (~adder@user/adder)
[20:11:06] <adder> seems like IPPROTO_RAW is for sending only, might someone know how would I go about constructing a SYN packet and be able to get a response?
[20:12:19] *** Quits: kib (kib@user/kib) (Ping timeout: 252 seconds)
[20:12:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[20:13:31] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Remote host closed the connection)
[20:14:14] *** Quits: rwb (~augh@theguntretort.com) (Excess Flood)
[20:14:15] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[20:14:16] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[20:14:27] *** Joins: rwb (~augh@theguntretort.com)
[20:14:49] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Remote host closed the connection)
[20:16:39] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:17:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:17:50] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[20:22:13] *** Quits: junktext (~junktext@109.201.152.167) (Ping timeout: 252 seconds)
[20:24:35] *** Joins: somlis (~somlis@user/somlis)
[20:25:41] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:25:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[20:27:33] *** Joins: fikran (~fikran@user/fikran)
[20:27:54] *** Parts: ksynwa (~ksynwa@5.45.111.57) (WeeChat 3.2.1)
[20:27:55] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[20:28:42] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 260 seconds)
[20:30:01] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[20:32:25] *** Joins: pycurious (~Adium@user/pycurious)
[20:33:55] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[20:34:15] *** Quits: jazzy (~jaziz@2600:380:847e:4826:ec68:9d70:e078:696) (Quit: Beddie bye-bye)
[20:34:51] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:34:52] *** Quits: y1n (~y1n@84-115-65-80.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[20:36:25] *** Leonarbro_ is now known as Leonarbro
[20:36:45] *** Joins: magla (~gelignite@55d4cb04.access.ecotel.net)
[20:37:59] *** Joins: realies (~realies@user/realies)
[20:39:07] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:39:53] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:40:14] *** Quits: rsx (~dummy@ppp-188-174-141-82.dynamic.mnet-online.de) (Quit: rsx)
[20:40:28] *** Joins: realies (~realies@user/realies)
[20:41:06] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:41:26] *** Joins: realies (~realies@user/realies)
[20:42:24] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[20:42:50] <Plyht> ?
[20:43:05] <Plyht> hi
[20:43:16] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:43:55] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:44:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:45:13] *** Joins: wyclif (~wyclif@user/wyclif)
[20:45:22] <gitesh> are runtime errors real? or made up of by interpreter?
[20:45:45] <grym> those seem pretty real to me
[20:46:22] <eblip> here is some code for a syn attack using c... modify it adder to use python
[20:46:32] <gitesh> i mean zero division error, so python can try divide by zero can't he/
[20:46:43] <grym> gitesh: that has its own exception
[20:47:04] *** Joins: realies (~realies@user/realies)
[20:47:43] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[20:48:36] *** Joins: y1n (~y1n@046125249004.public.t-mobile.at)
[20:49:14] *** Quits: jamwil (~jamwil@user/jamwil) (Ping timeout: 260 seconds)
[20:49:30] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[20:49:56] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[20:50:18] <eblip> syn attack in python  https://github.com/EmreOvunc/Python-SYN-Flood-Attack-Tool/blob/master/SYN-Flood.py
[20:50:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:50:42] *** Joins: wyclif (~wyclif@user/wyclif)
[20:53:02] *** Joins: realies (~realies@user/realies)
[20:54:10] *** Quits: ihristov (~ihristov@85.187.46.226) (Ping timeout: 252 seconds)
[20:54:22] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:55:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:55:45] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:56:13] *** Joins: wyclif (~wyclif@user/wyclif)
[20:56:24] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 256 seconds)
[20:56:36] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[20:56:57] *** Joins: srhm (~srhm@user/srhm)
[20:57:29] *** Joins: wender (~Wender@189.37.64.113)
[20:57:37] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:58:46] *** Joins: Elzington (~Elzington@68.235.43.22)
[20:58:55] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:59:10] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:59:28] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:00:19] *** Quits: computeiro (~Wender@189.37.64.113) (Ping timeout: 252 seconds)
[21:00:46] <gitesh> Do you use Try Except often?
[21:00:47] *** Joins: jamwil (~jamwil@user/jamwil)
[21:01:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:01:25] <grym> when required, yes
[21:01:40] <grym> and as narrowly as i can
[21:01:43] *** Joins: wyclif (~wyclif@user/wyclif)
[21:01:45] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[21:01:53] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[21:02:02] <gitesh> grym: ok, thanks
[21:02:07] *** Joins: srhm (~srhm@user/srhm)
[21:02:10] <grym> try: <not very many lines> except ValueError as e: <handle value errors here>
[21:02:11] <gitesh> as narrow as i can
[21:02:41] <grym> you want to know precisely what can cause trouble, and precisely what sort of trouble it can cause, and then you can do the right thing more easily
[21:02:51] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[21:02:52] <grym> "naked" except: is almost always wrong
[21:02:54] <gitesh> exception handling means what ? what is handling it?
[21:03:02] <grym> you. your code
[21:03:03] *** Joins: computeiro (~Wender@189.37.64.113)
[21:03:09] *** Joins: Hackerpcs (~user@user/hackerpcs)
[21:03:11] <bjs> gitesh: it means writing a try-except statement
[21:03:20] <gitesh> oh:)
[21:03:22] <grym> the stuff inside the except: block handles the exception it caught
[21:03:27] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:03:41] <grym> (other languages call that block "catch", which i learned first and consistently think of first)
[21:03:51] <bjs> gitesh: if there is a try/except that matches the exception, then the code can continue to run from there rather than just crashing the program
[21:04:04] <bjs> throw/catch has a nice picture to it
[21:04:10] *** Quits: wender (~Wender@189.37.64.113) (Ping timeout: 240 seconds)
[21:04:22] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[21:05:18] <gitesh> bjs: do you have a picture
[21:05:28] <bjs> gitesh: I mean, a mental picture. Throwing and catching
[21:05:32] <gitesh> okay
[21:05:39] <gitesh> throw/catch okay
[21:05:53] <jamwil> try/except/else/finally is one of the more arcane parts of python's syntax
[21:06:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:06:24] <gitesh> making test cases is arcane for me
[21:06:33] <bjs> gitesh: what kind of test cases?
[21:06:48] <gitesh> bjs: extrem or unusual
[21:06:53] <gitesh> bjs: boundary
[21:06:55] <grym> jamwil: for/else :)
[21:07:14] *** Joins: wyclif (~wyclif@user/wyclif)
[21:07:35] *** Joins: realies (~realies@user/realies)
[21:07:42] <jamwil> Jesus, I didn't even know you could stick else on a for loop. Hah!
[21:07:56] <grym> :rainbow: the more you know :rainbow: :D
[21:08:02] <grym> i've never used it in anger
[21:08:06] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[21:08:26] <Exa> gitesh: you can read about TOCTOU bugs, and why you prefer to try something and catch the error
[21:08:30] <bjs> gitesh: if I write something like `try: ...; except ZeroDivisionError: ...`  then Python will run the stuff in the "try" and if it raises (throws) a ZeroDivisionError exception then instead of crashing, Python will jump to the code in the "except" part
[21:08:36] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[21:08:41] <bjs> gitesh: and we'd say that the code is "handling" the ZeroDivisionError
[21:08:42] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[21:08:53] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:09:07] <gitesh> Exa: gotcha
[21:09:16] *** byzafk is now known as byzandula
[21:09:22] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[21:09:36] <gitesh> I liked exception handling
[21:09:41] *** Joins: realies (~realies@user/realies)
[21:09:48] <gitesh> I love instances
[21:10:03] <gitesh> as everything in object space of python has instances
[21:10:10] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[21:10:30] <Exa> gitesh: I think the English wikipedia page about it got an example with how a symlink used with a TOCTOU bug can lead to a vulnerability with escalation to root.  probably not what you're dealing with right now, but that's the kind of issue you can get
[21:12:23] *** Quits: Meteorhead (~Meteorhea@165.225.205.32) (Quit: Client closed)
[21:13:37] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:15:23] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:15:31] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[21:16:09] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[21:16:23] *** Joins: ecdhe (~ecdhe@user/ecdhe)
[21:17:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:18:24] *** Joins: wyclif (~wyclif@user/wyclif)
[21:18:39] <gitesh> what * does in python?
[21:18:58] <lethu> gitesh, multiply
[21:19:14] <gitesh> oh (not that one)
[21:19:25] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[21:19:26] <yitz> kwonly args?
[21:19:34] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[21:19:38] <gitesh> https://bpa.st/WUZA    I have this code here
[21:20:43] <grym> gitesh: on line 5, line will be a list
[21:20:45] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:22:38] <ecdhe> I've got a C++ cpython extension module that recieves a network data stream into a circular buffer.  I'd like to make a portion of this data available to python through an iterator but I'm unsure how to instantiate one in C and manage the references.  Can you recommend a cpython module that would serve as a reference in this use case?
[21:22:42] *** Joins: Narrat (~omnius@p200300df5f0ee16206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:23:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[21:23:25] *** Quits: lyr (~lyr@user/lyr) (Read error: Connection reset by peer)
[21:23:41] <jamwil> gitesh: A statement like `value_1, *remaining_values = (100, 200, 300, 400)` will allow multiple values to be assigned to a single variable. In this instance `remaining_values` would be assigned a tuple (200, 300, 400).
[21:23:46] *** Joins: lyr (~lyr@user/lyr)
[21:23:49] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[21:23:56] *** Joins: wyclif (~wyclif@user/wyclif)
[21:25:20] <gitesh> jamwil: you are saying it's tuple, grym said it's a list
[21:25:42] <grym> eh, could be a tuple
[21:25:43] <gitesh> jamwil: because you are using tubple
[21:25:53] *** Joins: raxor2k (~raxor2k@78.158.228.175)
[21:25:56] <yitz> Easy enough to test
[21:26:06] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 260 seconds)
[21:26:07] <raxor2k> bjs: when you have a dict with a list, how to you loop into that list?
[21:26:34] *** Quits: mike18_ (~geri@217-149-162-127.nat.highway.telekom.at) (Remote host closed the connection)
[21:27:06] <jamwil> gitesh: I could be wrong, but pretty sure you'll always end up with a tuple on the left hand side. The right hand side could be any sequence.
[21:27:24] *** Joins: cheater (~Username@user/cheater)
[21:27:56] *** Quits: wallace_mu200 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net) (Quit: Client closed)
[21:28:27] *** Joins: Akuli (~Akuli@82-203-160-13.bb.dnainternet.fi)
[21:28:29] <nedbat> jamwil: trying it, it seems to always be a list.
[21:28:50] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:29:04] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:29:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:29:13] <jamwil> nedbat: Oh yep, you're right. My bad!
[21:29:27] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[21:29:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:29:30] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc) (Quit: Client closed)
[21:30:38] <jamwil> gitesh: Sorry for the confusion. grym was correct; you end up with a list
[21:30:52] <gitesh> print({:2f}.format(accum/count))
[21:31:01] <gitesh> is this correct i forgot?
[21:31:12] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:31:38] <yitz> .format is a str method so you'd need a str
[21:32:03] <yitz> Also ... just open a REPL and try it?
[21:32:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:32:45] <gitesh> oh
[21:32:53] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[21:34:02] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:34:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:34:45] <bjs> raxor2k: like `for element in the_dict["some_key"]: ...` like that?
[21:34:56] *** Joins: wyclif (~wyclif@user/wyclif)
[21:35:16] <bjs> raxor2k: I mean lists always loop the same way no matter where they come from. `for element in the_list:`, so you just get the list (the value) and loop over it
[21:35:21] *** Joins: jdmark (~jdmark@67.8.137.130)
[21:35:25] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[21:37:21] *** Joins: noname03257981 (~noname032@186.231.159.105)
[21:39:20] <gitesh> hey I am trying to find in docs but I'm not able to . I want 2 decimal places after a decimal point to be printed
[21:39:58] <gitesh> I am doing it using .format method ---> https://bpa.st/R54A
[21:40:31] <raxor2k> bjs: ok i try
[21:40:35] *** Joins: dmr (~rdumitru@user/dmr)
[21:40:46] <jamwil> gitesh: You can do this with f-strings like so: `f"{number:.2f}"`
[21:41:08] <gitesh> jamwil: what is number?
[21:41:26] <jamwil> gitesh: Just the variable name containing an integer or float
[21:41:38] <gitesh> okay thanks
[21:41:49] <jamwil> In yoour case it could be `f"{accum/count:.2f}"`
[21:42:08] <noname03257981> Hi! I did this tutorial: https://packaging.python.org/tutorials/packaging-projects/  I noticed I can name the folders inside src/ any name I want, and then import using that name. This allows to have 2 uniquely named packages containing packages with the same name. Isn't this dangerous? I tried to find more info about this, but couldn't.
[21:42:16] <gitesh> jamwil: yeah. worked
[21:43:17] <Wooble> noname03257981: it could be, or it could be really convenient if you write a drop-in replacement for another package.
[21:43:37] <aphysically> this is elegant but I'm not sure how readable it is a = iter(iterable); onetruthy = any(a) and not any(a)
[21:43:39] <aphysically> oh well
[21:43:55] *** Praise- is now known as Praise
[21:44:29] <Repiphany> sum(bool(i) for i in iterable) == 1
[21:45:01] <aphysically> that's probably more readable
[21:45:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:45:56] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[21:45:58] *** Joins: wyclif (~wyclif@user/wyclif)
[21:46:36] <noname03257981> Wooble: yeah, it's very interesting! Is there any article about this? I'm not sure about how to search for it. The name that must be unique in pypa is what? "package", no? And how do you call the folders inside /src that can be imported? Aren't they packages?
[21:46:38] <grym> note the magic bool int there :)
[21:47:09] <Wooble> noname03257981: yes, there aren't enough words so "package" means multiple things. it's confusing.
[21:47:25] <aphysically> heh, yeah
[21:48:56] *** Joins: akk (~akk@75.161.129.162)
[21:49:36] <noname03257981> I did a test, and it seems the first installed package has precedence over the later installed one, right?
[21:49:48] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:50:33] *** Quits: rindolf (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 268 seconds)
[21:50:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:51:07] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[21:51:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:52:09] *** Parts: jamwil (~jamwil@user/jamwil) ()
[21:52:29] *** Joins: jamwil (~jamwil@user/jamwil)
[21:54:13] <Wooble> noname03257981: probably the more recent one will overwrite the older one, but it depends on where each gets installed and the order of sys.path.
[21:55:55] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:56:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:56:59] *** Joins: wyclif (~wyclif@user/wyclif)
[21:59:23] *** Joins: Naan (~Naan@user/naan)
[22:00:28] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[22:00:40] *** Joins: greedom (~greedom@2001:16b8:3288:ab00:6d2e:299b:20ff:98da)
[22:01:46] *** Quits: gitly (~gitly@148.252.128.33) (Ping timeout: 252 seconds)
[22:03:58] *** Joins: gitly (~gitly@148.252.132.147)
[22:04:33] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[22:04:45] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:04:51] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:05:04] *** Joins: tecnico (~tecnico@207.157.74.150)
[22:05:27] *** Joins: kib (~kib@user/kib)
[22:06:44] *** Quits: greedom (~greedom@2001:16b8:3288:ab00:6d2e:299b:20ff:98da) (Remote host closed the connection)
[22:06:49] *** Joins: zeden (~zeden@user/zeden)
[22:06:54] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[22:07:06] *** Joins: visl (visl@user/visl)
[22:07:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:07:21] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[22:07:22] *** Joins: vicfred (~vicfred@user/vicfred)
[22:08:01] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[22:08:01] <tecnico> given a string such as "260:17:20:58" , can I split based on the colon delimited and save multiple values at the same time? for example save the last two field values (20 and 58)  either to a variable each FIELD1, FIELD2 , or to some array like FIELD[0] and FIELD[1]
[22:08:03] *** Joins: wyclif (~wyclif@user/wyclif)
[22:08:26] <cluelessperson> tecnico, yes?
[22:08:37] <tecnico> any hint how?
[22:08:41] <ezzieyguywuf> so, I'm trying to use cProfile as `cProfile.run('myCmd')`. This works great. When I try with `cProfile.run('myCmd', 'prof_stats.txt')` I get the following error "PermissionError: [Errno 13] Permission denied: 'prof_stats.txt'"
[22:08:45] <cluelessperson> tecnico,     thing.split(":")[-2:]
[22:08:47] <Repiphany> `field1, *_, field2 = "260:17:20:58".split(":")`
[22:08:47] <ezzieyguywuf> any idea why this might be?
[22:08:56] <tecnico> thank you!
[22:08:57] <molt> hey all. I've got a List with 1,995 items --  unique ID numbers. I also have a CSV file with 1,620,109 rows --- first column is unique IDs and the second column has a url. I want to go through each item in the List and find the corresponding unique ID in the large CSV file and then pull out the URL (and probably ultimately save that truncated list of URLs to file). What is the best way to do this? I'm afraid the method I am thinking of
[22:08:57] <molt> will be toooooooo sloooooooooow.
[22:09:04] <cluelessperson> tecnico,     a, b = thing.split(":")[-2:]   rather.
[22:09:13] <cluelessperson> last two onward
[22:09:15] <tecnico> thank you!
[22:09:22] <Repiphany> Oh, misread
[22:09:35] <grym> molt: this is the sort of thing i'd make a little sqlite database for out of that csv file
[22:09:38] <grym> frankly
[22:09:51] <InPhase> molt: Sounds like a pandas selection problem.
[22:09:53] <grym> but if you can't/don't want to, use sets not lists for `in` testing
[22:10:34] <InPhase> molt: One pandas line to read the csv file, one line to select the columns, and done.
[22:10:43] <InPhase> s/columns/rows/
[22:10:47] <grym> pandas would also work, yep
[22:10:51] <cluelessperson> molt, index the ids to positions of the lines in the file
[22:11:51] <ezzieyguywuf> molt: how do you know the way you're doing it now is too slow?
[22:12:06] <PaddyF> gitesh: please go on, i am learning with you
[22:12:10] <grym> ezzieyguywuf: it's easy to do that the n^2 way
[22:12:45] *** Joins: ganchan (~thomas_w@user/ganchan)
[22:12:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:12:56] <ezzieyguywuf> grym: I'm just wondering if molt even ran it once though. it might be fast enough
[22:13:06] *** Quits: ganchan (~thomas_w@user/ganchan) (Client Quit)
[22:13:29] <grym> it likely won't, if you're  `for line in csv: if line[0] in ids: ...`
[22:13:35] *** Joins: wyclif (~wyclif@user/wyclif)
[22:13:41] <grym> you can speed that up by making ids a set, though
[22:13:53] <grym> or you can reduce the whole shebang to a SELECT, be that in sqlite or pandas
[22:13:56] <Wooble> grym: why not a dict mapping IDs to URLs?
[22:14:10] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[22:14:12] <molt> ezzieyguwuf: I am doing --> for id in ids: for row in rows: if id == row[0]: final_list.append(row[0])
[22:14:19] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[22:14:25] <grym> molt: try `for id in set(ids)`
[22:14:40] <jamwil> grym: Would building a dictionary of the form unique_id: url have the same performance benefits as a set?
[22:14:45] *** Joins: kib (~kib@user/kib)
[22:14:47] <grym> molt: er, `ids = set(ids); for row in rows: if row[0] in ids: ...`
[22:14:50] <ezzieyguywuf> https://stackify.com/premature-optimization-evil/
[22:14:54] <grym> jamwil: probably?
[22:15:08] <grym> ezzieyguywuf: dodging the n**2 on 1.6 M rows is not that
[22:15:09] <ezzieyguywuf> molt: hah yea that's a really bad idea....
[22:15:13] <Wooble> ezzieyguywuf: doing something in O(n) instead of O(n^2) is usually not premature.
[22:15:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:15:41] <hexnewbie> m*n, m being 1995, n being 1620109
[22:16:19] *** Joins: nomic (~nomic@185.217.117.156)
[22:16:31] <molt> ezzieyguywuf: yeah, I know it was.1995 times linearly going through over 1.6 million records.....
[22:16:39] <ezzieyguywuf> yea, that grym said is a really good first try
[22:16:52] <Wooble> you could just print out both files and eyeball it. not doing that might be premature, right? :P
[22:16:53] <hexnewbie> I'd imagine the set lookup would indeed be much faster than checking the 1995 individual values. However, if those CSV rows are nasty and long, and take a long to parse, the difference might be something like double
[22:17:02] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[22:17:08] *** Joins: wallace_mu200 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net)
[22:17:16] <molt> this was my first thought, but I knew it would be ultra slow. Just wondering what people thought for faster methods
[22:17:20] <ezzieyguywuf> I'd actually be as worried about memory usage in this case
[22:17:26] <ezzieyguywuf> might want to read that file in chunks
[22:17:36] *** Lando-SpacePimp is now known as CRUNK-b0t
[22:17:51] <Wooble> unless they're using a raspberry pi a million URLs is probably fine
[22:17:55] <molt> I actually read the file and saved it to a list
[22:18:01] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[22:18:34] *** Joins: ALowther_ (~ALowther@96.59.76.156)
[22:18:45] <hexnewbie> ezzieyguywuf: The csv module should do just that, especially if you use the canonical example from the documentation
[22:19:10] <molt> uff... the baby is crying. need to go tend to that. be back in a bit to talk more about this
[22:19:10] *** Quits: y1n (~y1n@046125249004.public.t-mobile.at) (Ping timeout: 240 seconds)
[22:19:24] <molt> thanks everyone for your ear and suggestions
[22:19:41] <jamwil> molt: I think if you read the csv in as a dictionary (given you have only two columns), you'll get the performance benefits of a set lookup, and be able to grab the url on the same operation. Reading in would like something like the top answer here: https://stackoverflow.com/questions/6740918/creating-a-dictionary-from-a-csv-file
[22:20:47] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[22:21:16] <ALowther_> How does controller.authenticate work from the stem library? I am trying to follow this tutorial: https://techmonger.github.io/68/tor-new-ip-python/. The first connection succeeds and then the script crashes and says "Connection refused." It is my understanding that a password allows for a unique pathway and is what is used to distinguish each pathway from another. So is this script improperly written and by hardcoding the password it is att
[22:21:16] <ALowther_> empting to create the same connection each time, thus crashing? If I do want unique connections can I just randomly generate a series of characters each time?
[22:22:47] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[22:23:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:23:45] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:24:35] *** Joins: wyclif (~wyclif@user/wyclif)
[22:27:37] *** Quits: ferz (~ferz@93-39-142-125.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[22:29:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:30:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:31:54] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:32:18] *** Joins: tlaxkit (~hexchat@170.253.35.150)
[22:33:08] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Quit: bibi!)
[22:33:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[22:35:07] *** Joins: pycurious (~Adium@user/pycurious)
[22:35:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:35:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[22:35:35] *** Joins: wyclif (~wyclif@user/wyclif)
[22:35:56] *** Quits: nomic (~nomic@185.217.117.156) (Quit: Leaving)
[22:36:07] *** Parts: blackout69 (~blackout6@mob-5-91-244-4.net.vodafone.it) ()
[22:36:55] *** Joins: fikran (~fikran@user/fikran)
[22:39:39] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[22:39:58] *** Joins: metaace (~metaace@user/metaace)
[22:40:11] *** Joins: MrAwesomeRocks (~MrAwesome@user/mrawesomerocks)
[22:40:13] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[22:40:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:40:41] *** Joins: semeion (~semeion@user/semeion)
[22:40:46] <raxor2k> bjs: i have to do it in my way
[22:40:52] <raxor2k> i cant be doing with those lists, im sorry
[22:41:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:41:06] <bjs> raxor2k: uh okay,  but you didn't actually have a way
[22:41:25] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[22:42:41] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[22:43:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:44:12] <raxor2k> yes i have
[22:44:19] <raxor2k> i send you image on how it looked before
[22:45:17] *** Joins: fikran (~fikran@user/fikran)
[22:45:46] *** Joins: ferz (~ferz@93-39-142-33.ip76.fastwebnet.it)
[22:45:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:46:36] *** Joins: wyclif (~wyclif@user/wyclif)
[22:47:17] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc)
[22:47:39] *** Joins: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net)
[22:48:22] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[22:48:52] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[22:50:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:51:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:51:27] *** Joins: carl- (~carl-@185.103.188.130)
[22:52:06] *** Joins: wyclif (~wyclif@user/wyclif)
[22:54:57] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[22:55:01] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[22:55:10] *** Quits: ssbr` (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[22:55:33] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[22:55:40] *** Joins: srhm (~srhm@user/srhm)
[22:56:30] *** Joins: djapo (~archangel@user/djapo)
[22:57:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[22:57:35] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 265 seconds)
[22:57:37] *** Joins: wyclif (~wyclif@user/wyclif)
[22:58:52] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 245 seconds)
[22:59:07] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:59:45] <ecdhe> nedbat: writing a cpython module; want to return network stream data to python through an iterator interface.  Is this sensible? Recommend any prior art?
[22:59:48] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[23:01:41] *** Quits: akk (~akk@75.161.129.162) (Ping timeout: 268 seconds)
[23:02:42] *** Quits: dhill_ (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 268 seconds)
[23:02:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[23:02:50] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[23:03:10] *** Joins: wyclif (~wyclif@user/wyclif)
[23:03:33] *** Joins: dhill_ (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[23:03:35] *** Quits: WantToHelp (~dale@96.77.40.70) (Changing host)
[23:03:35] *** Joins: WantToHelp (~dale@user/wanttohelp)
[23:03:56] *** Quits: enrh (~enrh@user/enrh) (Ping timeout: 268 seconds)
[23:04:11] *** Joins: enrh (~enrh@user/enrh)
[23:04:51] *** Joins: qlixed (~qlixed@181.44.129.13)
[23:05:27] *** Quits: noname03257981 (~noname032@186.231.159.105) (Quit: Client closed)
[23:05:57] *** Quits: voidcat (~voidcat@user/voidcat) (Ping timeout: 245 seconds)
[23:06:10] *** Quits: ulif (~nick@user/ulif) (Ping timeout: 256 seconds)
[23:06:11] *** Joins: voidcat (~voidcat@user/voidcat)
[23:06:22] *** Joins: ulif (~nick@user/ulif)
[23:07:00] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[23:07:01] *** Quits: gitly (~gitly@148.252.132.147) (Ping timeout: 268 seconds)
[23:07:25] *** Joins: gitly (~gitly@148.252.132.147)
[23:07:38] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[23:07:38] *** Parts: Plyht (uid433484@id-433484.hampstead.irccloud.com) ()
[23:08:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:08:29] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:08:38] *** Joins: wyclif (~wyclif@user/wyclif)
[23:11:07] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc) (Quit: Client closed)
[23:11:14] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[23:11:29] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:12:06] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[23:12:11] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:13:20] *** Quits: tlaxkit (~hexchat@170.253.35.150) (Quit: Leaving)
[23:13:24] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:14:55] <Ennea> hm.. say i want to split an integer into n different integers that are as uniform as possible, and will add up to my initial integer. what's the best approach? if i split 100 into 6 integers, i'd want something like.. 17, 17, 16, 17, 16, 17
[23:15:04] *** Joins: akk (~akk@75.161.146.115)
[23:15:12] <Ennea> if i just divide 100 by 6 and round the result, i end up at a total of 102. if i floor it, i get.. 96? something like that
[23:15:32] <Ennea> can't come up with a decent approach to this, but i'm sure there's something
[23:17:43] *** Quits: computeiro (~Wender@189.37.64.113) (Quit: Leaving)
[23:18:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:19:29] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:d82:c29c:4ce3:a68c) (Read error: Connection reset by peer)
[23:19:39] *** Joins: wyclif (~wyclif@user/wyclif)
[23:19:47] *** Joins: ska (~ska@user/ska)
[23:20:09] <deniska> Ennea: depends on how you define "uniformity". Floor division + remainder will give you all numbers besides one to be the same
[23:20:12] <ska> Without requirements.txt, is there a clever way to uninstall all dependent packages to current package?
[23:20:34] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:7430:afe7:3692:332)
[23:20:59] <ska> At least for now using pip
[23:21:06] <Ennea> deniska, yea, i think that approach will be enough in my case. thanks
[23:23:05] *** Joins: vinay (~Vinay@user/vinay-keshava)
[23:23:21] *** Joins: kosh (~kosh@user/kosh)
[23:24:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:25:26] *** Joins: wyclif (~wyclif@user/wyclif)
[23:25:36] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[23:26:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[23:27:03] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[23:28:39] *** gr33n7001 is now known as gr33n7007h
[23:34:02] *** Joins: nomic (~nomic@185.217.117.156)
[23:35:19] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[23:35:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:35:23] *** Quits: HenryTheLongshot (~Henry@46.101.4.181) (Ping timeout: 268 seconds)
[23:36:25] *** Joins: wyclif (~wyclif@user/wyclif)
[23:36:33] *** Joins: junktext (~junktext@109.201.152.164)
[23:36:41] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[23:38:01] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:38:53] <thm> Ennea: [(n // d) + 1 if i < (n % d) else (n // d) for i in range(d)]
[23:38:55] <grym> Ennea: "integer partitioning" is the magic phrase you want to google
[23:39:04] <grym> ska: yes, delete your venv
[23:39:28] <Ennea> grym, aha! i shall google that. thank you. and to you as well, thm
[23:39:32] <grym> ska: you could walk the output of `pipdeptree`, too
[23:39:59] <thm> grym: a (very) restricted integer partitioning ;)
[23:40:05] <grym> thm: i've done worse :)
[23:40:19] <grym> (faked some dice rolls a few times by precomputing the partitions )
[23:40:52] <grym> "oh yes you roll 4d20 with random.uniform(4,81), let's see what plausible dice rolls could've generated that number..."
[23:41:55] <thm> :)
[23:42:00] <KirkMcDonald> grym: In ancient days, D&D used to specify ranges by just giving the possible range of values, e.g. "3-18", and expected the player to figure out how to translate that into actual dice.
[23:42:06] <phy1729> 4d20 != random.uniform(4, 81) because while there's 1 outcome to get 4 there's 4 to get 5
[23:42:11] <grym> KirkMcDonald: yeah i miss THAC0 too
[23:42:16] <grym> phy1729: i'm well aware :)
[23:42:32] *** Quits: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net) (Ping timeout: 265 seconds)
[23:42:39] <grym> that's why i said i was fakin git
[23:42:43] <phy1729> ah ok
[23:42:53] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:43:35] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[23:43:37] *** Quits: pro_z (~pro_z@37.214.34.140) (Ping timeout: 268 seconds)
[23:44:41] *** Joins: tlaxkit (~hexchat@170.253.35.150)
[23:47:32] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[23:49:30] *** Joins: NatalieTheTiny (~nfearnley@host-63-135-16-62.public.eastlink.ca)
[23:50:06] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[23:56:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:57:31] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:57:56] *** Joins: bomb-on (~bomb-on@213.220.122.129)
[23:58:12] *** Joins: wyclif (~wyclif@user/wyclif)
