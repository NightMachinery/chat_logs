[00:01:29] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 250 seconds)
[00:05:23] *** Joins: jespada (~jespada@190.7.36.46)
[00:10:04] *** Quits: desantra (~skykanin@user/skykanin) (Quit: WeeChat 3.3)
[00:13:14] *** Quits: struchu (~struchu@staticline-31-183-170-84.toya.net.pl) (Quit: WeeChat 3.3)
[00:33:25] *** Joins: matty_matt (~matt@135.129.244.199)
[00:51:43] *** Quits: jespada (~jespada@190.7.36.46) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:16:57] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 256 seconds)
[01:38:13] *** Joins: matty_matt (~matt@135.129.244.199)
[02:02:18] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 244 seconds)
[02:10:38] *** Joins: matty_matt (~matt@135.129.244.199)
[02:15:44] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 244 seconds)
[02:16:40] *** Quits: nuorzi (nuorzi@hilla.kapsi.fi) (Ping timeout: 268 seconds)
[02:16:47] *** Joins: nuorzi (nuorzi@hilla.kapsi.fi)
[02:30:37] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[02:34:53] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 250 seconds)
[02:37:01] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:37:57] *** Quits: xulfer (uid452788@id-452788.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:43:15] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[02:52:23] *** Joins: atw (~user@cst2-164-129.cust.vodafone.cz)
[03:07:23] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 250 seconds)
[03:27:02] *** Quits: atw (~user@cst2-164-129.cust.vodafone.cz) (Ping timeout: 244 seconds)
[03:32:06] *** Quits: awb99 (~quassel@80-110-207-163.static.upcbusiness.at) (Read error: Connection reset by peer)
[03:41:03] *** Joins: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-08c8-c032-7582-cc1f.res6.spectrum.com)
[03:45:19] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[03:55:22] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[04:04:59] *** Joins: johnjay (~pi@192.142.100.50)
[04:35:02] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[05:41:00] *** Joins: matty_matt (~matt@135.129.244.199)
[06:21:24] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[06:21:49] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Remote host closed the connection)
[06:26:30] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[06:30:01] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:47] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:51:02] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 240 seconds)
[06:54:27] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 250 seconds)
[06:58:52] *** Joins: matty_matt (~matt@135.129.244.199)
[08:06:21] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Ping timeout: 245 seconds)
[08:14:24] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (*.net *.split)
[08:14:24] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (*.net *.split)
[08:14:24] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (*.net *.split)
[08:14:24] *** Quits: dadinn (~dadinn@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net) (*.net *.split)
[08:14:24] *** Quits: chujev (~chujev@88.103.227.222) (*.net *.split)
[08:14:24] *** Quits: jeaye (~jeaye@user/jeaye) (*.net *.split)
[08:14:24] *** Quits: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com) (*.net *.split)
[08:14:24] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (*.net *.split)
[08:14:24] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[08:14:24] *** Quits: materialfuture (~materialf@149.248.8.187) (*.net *.split)
[08:14:24] *** Quits: lobotomy (~lobotomy@static.213.19.216.95.clients.your-server.de) (*.net *.split)
[08:14:24] *** Quits: obviyus (sid415299@user/obviyus) (*.net *.split)
[08:14:24] *** Quits: choas (~lars@ppp-188-174-58-126.dynamic.mnet-online.de) (*.net *.split)
[08:15:12] *** Joins: dadinn (~dadinn@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[08:15:12] *** Joins: mbuf (~Shakthi@136.185.69.244)
[08:15:12] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[08:15:12] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[08:15:12] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[08:15:12] *** Joins: chujev (~chujev@88.103.227.222)
[08:15:12] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[08:15:12] *** Joins: jeaye (~jeaye@user/jeaye)
[08:15:12] *** Joins: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com)
[08:15:12] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[08:15:12] *** Joins: materialfuture (~materialf@149.248.8.187)
[08:15:12] *** Joins: lobotomy (~lobotomy@static.213.19.216.95.clients.your-server.de)
[08:15:12] *** Joins: obviyus (sid415299@user/obviyus)
[08:15:12] *** Joins: choas (~lars@ppp-188-174-58-126.dynamic.mnet-online.de)
[08:20:15] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 250 seconds)
[08:50:08] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[09:02:59] *** Quits: Pixel_Outlaw (~ryan@2600-6c67-5e3f-ed1c-08c8-c032-7582-cc1f.res6.spectrum.com) (Quit: Leaving)
[09:06:44] *** Quits: runejuhl (~runejuhl@user/runejuhl) (Ping timeout: 268 seconds)
[09:11:55] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[09:17:11] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[09:22:21] *** Quits: mala (~mala@user/malaclyps) (Quit: ZNC 1.6.1 - http://znc.in)
[09:47:27] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 268 seconds)
[09:50:49] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 250 seconds)
[09:51:09] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[09:55:40] *** Joins: matty_matt (~matt@135.129.244.199)
[10:00:02] *** Quits: matty_matt (~matt@135.129.244.199) (Ping timeout: 240 seconds)
[10:14:09] *** Quits: mind (~mind@user/mind) (Ping timeout: 256 seconds)
[10:16:50] *** Joins: mind (~mind@user/mind)
[10:17:44] *** Joins: mala (~mala@user/malaclyps)
[11:18:21] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 250 seconds)
[12:14:10] *** Joins: op2 (~op@user/op2)
[12:21:54] *** Joins: to-hu (~Thunderbi@p200300e9af35d50076b10666eaeebf11.dip0.t-ipconnect.de)
[12:30:06] *** Quits: goodger[m] (~goodgerma@2001:470:69fc:105::30be) (Quit: You have been kicked for being idle)
[12:32:07] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[12:35:11] *** Joins: op2 (~op@user/op2)
[13:14:05] *** Joins: fanthomas (~fanthomas@gw105-92.imafex.sk)
[13:29:58] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[13:47:32] *** Joins: wonko (~wjc@user/wonko)
[13:47:36] *** Quits: wonko (~wjc@user/wonko) (Remote host closed the connection)
[13:55:50] *** Joins: wonko (~wjc@user/wonko)
[14:27:16] *** Joins: atw (~user@cst2-164-129.cust.vodafone.cz)
[14:32:12] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[14:41:18] *** Joins: schmudde (~schmudde@public.toolboxoffice.it)
[14:59:01] *** Joins: tomku (~tomku@user/tomku)
[15:06:17] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 250 seconds)
[15:12:45] <Para> Is there a way to enable Leiningen profile based on architecture?)
[15:13:03] <Para> Just had a fun debug session with M1 Mac and ancient figwheel which has a non-ARM-aware fs watcher.
[15:25:14] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[16:03:13] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[16:12:59] *** Joins: matty_matt (~matt@135.129.244.198)
[16:34:15] *** Quits: atw (~user@cst2-164-129.cust.vodafone.cz) (Ping timeout: 250 seconds)
[16:45:32] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Ping timeout: 268 seconds)
[16:55:21] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[17:00:59] <rovanion> Anyone happen to have a non-null-byte-string malli spec or test.check generator lying around?
[17:01:10] <rovanion> Postgres hates \0.
[17:08:32] *** Quits: to-hu (~Thunderbi@p200300e9af35d50076b10666eaeebf11.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:25:01] <rovanion> Using string-ascii for now.
[18:09:40] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[18:11:08] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[18:13:19] *** Joins: to-hu (~Thunderbi@p57b5ad19.dip0.t-ipconnect.de)
[18:14:41] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 256 seconds)
[18:18:14] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 260 seconds)
[18:18:51] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[18:18:51] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[18:18:51] *** Joins: turlando (~turlando@user/turlando)
[18:26:06] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Quit: Leaving)
[18:26:49] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[18:32:46] *** Joins: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb)
[18:34:34] *** Quits: schmudde (~schmudde@public.toolboxoffice.it) (Ping timeout: 260 seconds)
[18:35:27] <rovanion> I'm trying to shake out issues by roundtripping data the whole way down to the database and back up again. But that means I have to generate unique entries for some fields, but validating the generated data against a lookup in the db for each thing seems costly.
[18:36:35] *** Joins: schmudde (~schmudde@public.toolboxoffice.it)
[18:52:43] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:00:32] *** Quits: matty_matt (~matt@135.129.244.198) (Ping timeout: 240 seconds)
[19:03:05] <Para> rovanion: length/size > 0 is iirc the recommended way
[19:03:34] *** Joins: awb99 (~quassel@80-110-207-163.static.upcbusiness.at)
[19:10:47] *** Joins: seschwar (~seschwar@user/seschwar)
[19:11:41] <rovanion> Not sure I understand :/ Strings of length 1 can still be one null byte.
[19:15:20] <Para> Not on JVM to my knowledge.
[19:15:36] <Para> Although would have to test that. Hmm.
[19:15:39] <aphyr> "\0" is a valid UTF-8 string, IIRC
[19:15:55] <Para> But is it zero width?
[19:18:05] <aphyr> Pretty sure no: it's a UTF-8 codepoint
[19:18:12] <aphyr> You can have any number of them in a string
[19:19:01] <aphyr> user=> (.length "\u0000")
[19:19:02] <aphyr> 1
[19:19:13] <aphyr> user=> (.length "\u0000\u0000")
[19:19:13] <aphyr> 2
[19:19:34] <aphyr> rovanion: I think my preference here would be to filter them out with fmap, in the spec generator
[19:26:10] *** Joins: matty_matt (~matt@135.129.244.198)
[19:27:10] <mbuf> Is there anyone hiring for Clojure -dev work?
[19:28:27] <Para> That's a wiiiiide question.
[19:30:32] *** Quits: matty_matt (~matt@135.129.244.198) (Ping timeout: 240 seconds)
[19:32:21] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[19:33:02] *** Quits: X-Scale (~ARM@46.50.3.203) (Ping timeout: 240 seconds)
[19:34:31] *** X-Scale` is now known as X-Scale
[19:35:06] <chujev> clojurians slack has #jobs channels
[19:57:56] *** Quits: mbuf (~Shakthi@136.185.69.244) (Quit: Leaving)
[20:13:36] *** Joins: matty_matt (~matt@135.129.244.198)
[20:13:44] <selfsymmetric-mu> Aw, they left already. I would have shared my dossiers.
[20:18:02] *** Quits: matty_matt (~matt@135.129.244.198) (Ping timeout: 240 seconds)
[20:24:05] *** Joins: servytor (uid525486@id-525486.hampstead.irccloud.com)
[20:51:45] *** Joins: matty_matt (~matt@135.129.244.198)
[20:52:56] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[20:56:24] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[20:56:25] *** Quits: matty_matt (~matt@135.129.244.198) (Ping timeout: 250 seconds)
[20:59:04] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[20:59:17] *** Joins: Skyfire (~pyon@user/pyon)
[21:09:55] *** Joins: matty_matt (~matt@135.129.244.198)
[21:14:53] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[21:15:38] *** Joins: X-Scale` (~ARM@31.22.162.107)
[21:17:33] *** X-Scale` is now known as X-Scale
[22:06:46] *** Quits: mala (~mala@user/malaclyps) (Quit: ZNC 1.6.1 - http://znc.in)
[22:07:32] *** Joins: mala (~mala@user/malaclyps)
[22:13:38] *** Quits: dadinn (~dadinn@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net) (Remote host closed the connection)
[22:15:27] *** Quits: schmudde (~schmudde@public.toolboxoffice.it) (Quit: WeeChat 3.2)
[22:29:58] *** Joins: Harlin (~DonQixote@75-163-144-60.clsp.qwest.net)
[22:33:53] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::68b3) (Ping timeout: 246 seconds)
[22:47:59] <Oshawott> So! Is there a way to get the status fields from a future..?
[22:48:12] <Oshawott> Like, when you create a future with (future <thing>), you get back a #future[:status :pending, :val nil, etc...], and you can deref it when it's done to get the :val, this is cool
[22:48:40] <Oshawott> But is there a way to get the :status? It seems you can't just (:status the-future), or use get
[22:49:39] <Oshawott> dereferencing it seems to not yield any additional info, and I don't want to try and realize a long-running future, or put the results into my REPL
[22:50:07] <Oshawott> Looking at the code for the future function also shows that it's just reifying the java class--and the javadoc for that seems to give no hints either
[22:50:35] <Oshawott> How would one generally extract this information?
[22:50:51] <Para> see related functions at https://clojuredocs.org/clojure.core/future
[22:51:02] <Para> there's eg `future-done?`
[22:51:21] <jeaye> Wouldn't realized? do that?
[22:51:33] <Para> I think it should.
[22:52:21] <Oshawott> future-done? only returns if the future is complete--though I was hoping for a quick way of filtering a bunch of futures for ones that failed
[22:52:47] <Oshawott> realized? also doesn't return the status, which is :failed if the return didn't happen due to an exception\
[22:52:56] <Oshawott> s/\$//
[22:53:30] <Oshawott> (But yeah! I've been digging around the related functions a bunch! Thanks for the suggestions though!)
[22:53:38] <Para> How do you define failure?
[22:53:50] <Oshawott> The future threw an exception and didn't complete
[22:53:59] <Oshawott> So, the same way :status on a future does
[22:54:22] <Oshawott> #future[{:status :failed, :val #error {\n :cause etc...}}]
[22:54:48] <Para> according to this https://stackoverflow.com/a/24676867/44523 you need to catch it during deref
[22:54:49] <Oshawott> Realizing it re-throws the exception, which I can do
[22:54:52] <Oshawott> Oh
[22:55:32] <Oshawott> Dang, is that the only option though..? I can do that--but it would be really nice if I could just grab the information that's in the toString--and in a less hacky way than relying on toString parsing
[22:55:46] <Para> Futures are dumb :)
[22:55:52] <Oshawott> No kidding, hahah
[22:56:04] <Para> You might be better served by promises or something else entirely.
[22:56:25] <Oshawott> Maybe I'll look at those then!
[22:56:47] *** Quits: RedNifre (~michael@dslb-002-201-038-041.002.201.pools.vodafone-ip.de) (Ping timeout: 264 seconds)
[22:56:58] <Para> Futures are most useful for one-off ad hoc things.
[22:57:19] <Oshawott> That is, in fact what I've been using them for! I like wrapping long-running REPL things in them
[22:57:40] <Oshawott> Because then I can just wait for them in the background as I do other things, and then deref the results~
[22:57:57] <Oshawott> But juggling lots of them programmatically seems--less nice
[22:58:36] *** Joins: RedNifre (~michael@dslb-088-073-104-117.088.073.pools.vodafone-ip.de)
[22:59:13] <ridcully_> now i want clrl-z fuer the repl...
[23:00:12] <Para> you could use rlwrap
[23:00:18] <Para> or one of its like
[23:00:52] <Oshawott> Oh yeah! That give kinda emacsy bindings by default! So Ctrl + / is undo
[23:00:53] <ridcully_> no i mean job control.  right now i can only cltr-c something that takes to long
[23:01:00] <Oshawott> Ohh
[23:01:04] <Para> hmm
[23:01:26] <jeaye> ridcully_: fuer?
[23:01:53] *** Quits: matty_matt (~matt@135.129.244.198) (Ping timeout: 246 seconds)
[23:01:57] <Oshawott> ("for" I'm pretty sure!)
[23:02:15] <ridcully_> for... sorry muscle memory... ;)
[23:02:27] <Oshawott> But yeah, Ctrl + Z to say "Actually, this last thing is a future now" would rule
[23:02:35] <jeaye> No problem. Was wondering if you were using an east asian idiom there of something.
[23:06:50] *** Joins: atw (~user@cst2-164-129.cust.vodafone.cz)
[23:09:28] <Oshawott> This feels so dirty
[23:09:33] <Oshawott> (filter #(try @% true (catch Exception e false)) futures)
[23:10:06] <Para> You're using exceptions for flow control, of course it's dirty :)
[23:10:25] <Oshawott> It's like working with JSch, hahah
[23:10:47] <Oshawott> aka: magic numbers and exception flow control: The Library
[23:11:32] <ridcully_> wasn't there some dyn-var or hook for how to deal with exceptions in futures?
[23:11:45] <Oshawott> Ooh! That would be extremely helpful!
[23:12:57] *** Joins: matty_matt (~matt@135.129.244.198)
[23:16:21] *** Quits: op2 (~op@user/op2) (Quit: rcirc on GNU Emacs 29.0.50)
[23:16:32] *** Quits: atw (~user@cst2-164-129.cust.vodafone.cz) (Ping timeout: 240 seconds)
[23:17:32] *** Quits: matty_matt (~matt@135.129.244.198) (Ping timeout: 240 seconds)
[23:17:43] <ridcully_> i guess i confused that with agent stuff...
[23:20:32] <Oshawott> I should really learn how to use agents
[23:23:04] *** Joins: flynn4 (~mcbloch@user/flynn)
[23:23:17] *** Joins: malaclyps (~mala@user/malaclyps)
[23:23:20] *** Joins: etiago- (~etiago@cpc120220-heme13-2-0-cust103.9-1.cable.virginm.net)
[23:24:21] *** Joins: Trieste_ (T@user/pilgrim)
[23:25:02] *** Joins: djm_ (djm@user/djm)
[23:25:11] *** Joins: broquain1 (~dbrook@static.140.30.69.159.clients.your-server.de)
[23:25:24] *** Joins: tomku|two (~tomku@user/tomku)
[23:25:28] *** Joins: andreyorst_ (~andreyors@2.92.125.180)
[23:26:04] *** Joins: ridcully (~ridcully@p57b523cc.dip0.t-ipconnect.de)
[23:30:13] *** Joins: Edward123 (~edwardiii@user/edwardiii)
[23:30:46] *** Quits: mala (~mala@user/malaclyps) (*.net *.split)
[23:30:46] *** Quits: tomku (~tomku@user/tomku) (*.net *.split)
[23:30:46] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (*.net *.split)
[23:30:46] *** Quits: broquaint (~dbrook@static.140.30.69.159.clients.your-server.de) (*.net *.split)
[23:30:46] *** Quits: EdwardIII (~edwardiii@user/edwardiii) (*.net *.split)
[23:30:46] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[23:30:46] *** Quits: djm (~djm@user/djm) (*.net *.split)
[23:30:46] *** Quits: ridcully_ (~ridcully@p57b523cc.dip0.t-ipconnect.de) (*.net *.split)
[23:30:46] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[23:30:47] *** Quits: etiago (~etiago@user/etiago) (*.net *.split)
[23:30:47] *** Quits: andreyorst (~andreyors@2.92.125.180) (*.net *.split)
[23:30:47] *** flynn4 is now known as flynn
[23:31:06] *** Joins: atw (~user@cst2-164-129.cust.vodafone.cz)
[23:31:39] *** Joins: matty_matt (~matt@135.129.244.198)
[23:35:01] *** djm_ is now known as djm
[23:35:46] *** andreyorst_ is now known as andreyorst
[23:37:11] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[23:37:53] *** Quits: atw (~user@cst2-164-129.cust.vodafone.cz) (Ping timeout: 264 seconds)
[23:38:02] *** Quits: matty_matt (~matt@135.129.244.198) (Ping timeout: 240 seconds)
[23:45:56] *** Quits: uncleyear (~ian@pppoe.178-66-158-118.dynamic.avangarddsl.ru) (Ping timeout: 245 seconds)
[23:52:53] *** Joins: uncleyear (~ian@pppoe.178-66-156-119.dynamic.avangarddsl.ru)
