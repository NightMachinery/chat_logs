[00:00:32] *** Joins: deksar_ (~deksar@user/deksar)
[00:00:42] *** deksar_ is now known as deksar
[00:00:46] *** Quits: deksar (~deksar@user/deksar) (Client Quit)
[00:00:51] *** Joins: rez (rez@user/rez)
[00:01:31] *** Joins: deksar (~deksar@user/deksar)
[00:05:08] *** Joins: Auron (~Auron956@user/auron)
[00:05:59] *** Quits: Oarbonyeb8 (~Oarbonyeb@182-54.dynamonet.fi) (Quit: Leaving.)
[00:08:34] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[00:09:20] *** Joins: reddread (~reddread@193.27.13.46)
[00:11:09] *** Quits: averell (~averell@user/averell) (Quit: .)
[00:15:15] *** Joins: camdrum (~camdrum@196.196.221.37)
[00:17:02] *** Joins: horseface_ (~horseface@pa49-184-55-246.pa.vic.optusnet.com.au)
[00:17:57] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:19:34] *** Quits: horseface (~horseface@202-65-74-139.ip4.superloop.com) (Ping timeout: 252 seconds)
[00:19:57] *** Quits: horseface_ (~horseface@pa49-184-55-246.pa.vic.optusnet.com.au) (Client Quit)
[00:23:07] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:23:37] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:24:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[00:25:39] *** Quits: camdrum (~camdrum@196.196.221.37) (Quit: leaving)
[00:25:39] *** Quits: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale) (Ping timeout: 276 seconds)
[00:26:18] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 260 seconds)
[00:26:32] *** Joins: horseface (~horseface@pa49-184-55-246.pa.vic.optusnet.com.au)
[00:26:33] *** Quits: horseface (~horseface@pa49-184-55-246.pa.vic.optusnet.com.au) (Remote host closed the connection)
[00:27:04] *** Joins: averell (~averell@user/averell)
[00:27:36] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:27:40] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:28:14] *** Quits: rez (rez@user/rez) (Quit: much snoozes...)
[00:29:29] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:30:06] *** Joins: horseface (~horseface@125-63-20-223.ip4.superloop.com)
[00:37:01] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 268 seconds)
[00:38:02] *** Joins: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale)
[00:38:13] *** Quits: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale) (Client Quit)
[00:39:18] *** Joins: tangyQED (~tangy@user/tangy)
[00:39:21] *** Quits: tangy (tangy@user/tangy) (Quit: Quit)
[00:39:32] *** Quits: tangyQED (~tangy@user/tangy) (Remote host closed the connection)
[00:39:50] *** Joins: tangy (~tangy@user/tangy)
[00:39:56] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[00:40:53] *** Quits: setesat (~setesat@94.4.156.220) (Ping timeout: 264 seconds)
[00:42:20] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:692:209f:b5f6:f28f)
[00:42:41] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[00:42:56] *** Quits: zami3l (~zami3l@194.110.113.46) (Quit: zami3l)
[00:43:39] *** Joins: tangy (~tangy@user/tangy)
[00:44:48] *** Quits: horseface (~horseface@125-63-20-223.ip4.superloop.com) (Quit: Leaving)
[00:45:26] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:45:48] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:47:07] *** Quits: pmercado (~pmercado@186.107.35.198) (Ping timeout: 250 seconds)
[00:47:41] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[00:50:53] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:56:27] *** Quits: robert__ (~trebko@137.220.86.97) (Ping timeout: 240 seconds)
[00:56:58] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[01:01:45] *** Joins: horseface (~horseface@125-63-20-223.ip4.superloop.com)
[01:02:05] *** Quits: s1gyn (~s1gyn@user/s1gyn) (Quit: WeeChat 3.0.1)
[01:10:01] *** Parts: tangy (~tangy@user/tangy) ()
[01:14:23] *** Quits: reddread (~reddread@193.27.13.46) (Quit: WeeChat 3.3)
[01:14:58] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: ars longa vita brevis)
[01:19:06] *** Quits: BadKarma (~BadKarma@user/badkarma) (Quit: restart)
[01:19:54] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[01:22:08] *** Joins: BadKarma (~BadKarma@user/badkarma)
[01:23:57] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 250 seconds)
[01:25:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:26:25] *** Quits: Narrat (~omnius@p200300df5f13e73906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:29:02] *** Quits: HyN0X (~HyNoX@37.161.157.1) (Quit: Lost terminal)
[01:30:10] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[01:30:15] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:30:16] *** Joins: HyN0X (~HyNoX@37.161.157.1)
[01:30:42] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[01:33:59] *** Joins: chiastre (~chiastre@user/chiastre)
[01:34:29] *** Joins: allorder (allorder@user/allorder)
[01:36:30] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[01:36:34] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:692:209f:b5f6:f28f) (Quit: Konversation terminated!)
[01:39:11] *** Joins: setesat (~setesat@94.4.156.220)
[01:44:14] *** Quits: gryphn (~gryphn@154.21.20.154) (Quit: kthxbye)
[01:48:03] *** Joins: y04nn (~y04nn@193.32.127.238)
[01:49:13] *** Quits: HyN0X (~HyNoX@37.161.157.1) (Ping timeout: 265 seconds)
[01:49:34] *** Quits: dix_ (~super@user/dix) (Ping timeout: 265 seconds)
[01:49:37] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:49:45] *** Joins: AndroUser (~androirc@98.36.109.122)
[01:51:33] <AndroUser> I hacked into McDonald's wifi.  using a directional antenna and albbyet the sheer expensiveness
[01:51:47] <AndroUser> of the car, I was still pretty invisible
[01:52:01] <AndroUser> it was misconfigured
[01:56:43] *** Quits: rostero (uid236576@id-236576.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:00:01] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[02:00:46] *** Joins: HyN0X (~HyNoX@37.161.171.153)
[02:00:46] *** Joins: rez (rez@user/rez)
[02:04:08] *** Quits: cpluspunch (~znc@208.78.41.74) (Ping timeout: 250 seconds)
[02:04:40] <mats1> a yagi antenna is not expensive
[02:05:51] <mats1> if you found a vuln, you could write it up for hackerone and maybe get paid
[02:06:27] *** Joins: mongrel (uid508343@id-508343.ilkley.irccloud.com)
[02:06:30] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[02:06:49] *** Joins: kish` (~aqua@user/aqua)
[02:07:51] *** Quits: obranco (~obranco@gateway/tor-sasl/obranco) (Quit: ZNC - https://znc.in)
[02:07:52] <CoJaBo> I got my yagi antenna for 25¢ lol
[02:08:07] *** Joins: obranco (~obranco@gateway/tor-sasl/obranco)
[02:08:31] <CoJaBo> It came with some dental tools, a tire guage, and a haemostat.
[02:10:20] <AndroUser> was it connected, spook? because I remember "we have a deal'
[02:10:26] *** Joins: ttys000 (~ttys000@user/ttys000)
[02:11:46] *** Joins: JeanyBS (~JeanyBS@user/jeanybs)
[02:13:14] *** Quits: `Tim` (~zenguin@user/zenguin) (Quit: Leaving)
[02:16:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[02:16:17] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:17:36] *** Joins: AndroUser2 (~androirc@46.sub-174-251-170.myvzw.com)
[02:18:31] *** Quits: __nick__ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[02:19:17] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[02:21:28] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[02:21:54] *** Quits: AndroUser (~androirc@98.36.109.122) (Ping timeout: 250 seconds)
[02:22:20] *** Quits: cliff (~cperry@user/cliff) (Ping timeout: 252 seconds)
[02:22:27] *** Quits: HyN0X (~HyNoX@37.161.171.153) (Ping timeout: 250 seconds)
[02:23:50] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[02:23:52] *** Joins: JeanyBS10 (~JeanyBS@user/jeanybs)
[02:24:05] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:24:56] *** Quits: JeanyBS (~JeanyBS@user/jeanybs) (Ping timeout: 256 seconds)
[02:25:57] *** Parts: JeanyBS10 (~JeanyBS@user/jeanybs) ()
[02:25:58] *** Joins: JeanyBS10 (~JeanyBS@user/jeanybs)
[02:26:16] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[02:27:13] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[02:27:41] <JeanyBS10> Hi, offensive security?
[02:27:51] <Hash> What?
[02:30:02] <JeanyBS10> nothing
[02:30:40] <JeanyBS10> Does anybody use now parrot os for security.
[02:30:58] <JeanyBS10> instead kali
[02:31:33] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[02:31:45] *** Quits: chiastre (~chiastre@user/chiastre) (Ping timeout: 265 seconds)
[02:32:01] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:32:11] *** Joins: chiastre (~chiastre@user/chiastre)
[02:35:01] *** Quits: JeanyBS10 (~JeanyBS@user/jeanybs) (Quit: JeanyBS10)
[02:36:35] *** Quits: chiastre (~chiastre@user/chiastre) (Ping timeout: 246 seconds)
[02:38:44] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[02:39:46] *** Quits: AndroUser2 (~androirc@46.sub-174-251-170.myvzw.com) (Ping timeout: 260 seconds)
[02:43:01] <Hash> what is a 'null key encryption'?
[02:43:07] <Hash> Does that mean a keyless encryption
[02:43:13] <Hash> What does that even mean?
[02:44:27] *** Joins: HyN0X (~HyNoX@37.161.142.201)
[02:45:18] <Hash> The Dark Knight is just a movie
[02:45:24] <Hash> Christopher Nolan is a troll.
[02:45:51] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:48:07] *** Buggy is now known as Buggys
[02:48:16] *** Quits: Klinda (~klinda@user/klinda) (Quit: Leaving)
[02:49:30] *** Joins: semeion (~semeion@user/semeion)
[02:49:34] *** Quits: deksar (~deksar@user/deksar) (Quit: Going offline, see ya!)
[02:50:36] *** Joins: iagmi (~m@8.21.8.252)
[02:53:01] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:54:05] *** Quits: HyN0X (~HyNoX@37.161.142.201) (Ping timeout: 250 seconds)
[02:55:30] *** Quits: BadKarma (~BadKarma@user/badkarma) (Quit: leaving)
[02:55:47] *** Joins: HyN0X (~HyNoX@37.162.183.176)
[02:55:53] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 252 seconds)
[02:57:25] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[03:04:06] *** Quits: rez (rez@user/rez) (Quit: much snoozes...)
[03:05:40] *** Joins: squatch (~squatch@c-73-96-195-120.hsd1.or.comcast.net)
[03:06:22] *** Quits: squatch (~squatch@c-73-96-195-120.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[03:06:46] *** Leonarbro_ is now known as Leonarbro
[03:08:00] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 265 seconds)
[03:09:14] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[03:12:08] *** Joins: aqua (~aqua@user/aqua)
[03:13:12] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:13:16] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[03:15:18] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[03:15:27] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[03:17:01] *** Joins: ds-ac (~ds-ac@user/ds-ac)
[03:22:53] <Hash> https://www.amazon.com/USB-Yagi-directional-Antenna-802-11n-2200mW/dp/B003LLS5JI
[03:23:04] <Hash> That thing is about a 100 bucks and requires a lot of power.
[03:27:24] *** aqua is now known as kish`
[03:27:38] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[03:30:02] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (Quit: Oops)
[03:30:04] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[03:30:05] *** Quits: technonerd (~techno@user/technonerd) (Remote host closed the connection)
[03:30:30] *** Joins: Tuor (~quassel@user/tuor)
[03:30:41] *** Joins: technonerd (~techno@user/technonerd)
[03:30:58] *** Joins: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[03:31:43] *** Joins: hololeap (~hololeap@user/hololeap)
[03:31:51] <mats1> https://www.amazon.com/Tupavco-TP512-Wi-Fi-Antenna-2-4GHz/dp/B008Z4DNFC
[03:37:11] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 245 seconds)
[03:37:12] *** Joins: chiastre (~chiastre@user/chiastre)
[03:44:09] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:f832:81cc:b381:813e)
[03:44:45] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:f832:81cc:b381:813e) (Remote host closed the connection)
[03:48:02] *** Quits: jaitoon (~Jaitoon@178.238.11.42) (Quit: Leaving)
[03:51:26] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[03:52:35] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:55:02] *** Joins: chenqisu1 (~xirndc@183.217.201.186)
[03:55:35] *** chenqisu1 is now known as chenqisu12
[03:59:36] *** Joins: CodePoint (~CodePoint@89.38.227.236)
[04:11:16] *** Joins: CodePoint_ (~CodePoint@94.198.42.140)
[04:13:35] *** Quits: horseface (~horseface@125-63-20-223.ip4.superloop.com) (Quit: Leaving)
[04:13:42] *** Quits: CodePoint (~CodePoint@89.38.227.236) (Ping timeout: 250 seconds)
[04:13:52] *** Joins: horseface (~horseface@125-63-20-223.ip4.superloop.com)
[04:15:05] <ajak> you can also just make your own antennas cheaply
[04:15:38] *** Joins: CodePoint__ (~CodePoint@96.44.191.140)
[04:15:38] *** Quits: CodePoint__ (~CodePoint@96.44.191.140) (Client Quit)
[04:15:52] *** Joins: CodePoint (~CodePoint@96.44.191.140)
[04:16:10] *** Quits: horseface (~horseface@125-63-20-223.ip4.superloop.com) (Client Quit)
[04:18:54] *** Quits: CodePoint_ (~CodePoint@94.198.42.140) (Ping timeout: 250 seconds)
[04:19:28] *** Joins: horseface (~horseface@125-63-20-223.ip4.superloop.com)
[04:22:41] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[04:22:57] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[04:23:55] <ghostbuster> has anyone used the kali vmware disk image? does it differ at all from the live iso?
[04:30:06] *** Quits: standardrat_ (~standardr@196.30.99.2) (Read error: Connection reset by peer)
[04:30:25] *** Quits: Bit_MCP234 (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[04:30:25] *** Joins: standardrat_ (~standardr@196.30.99.2)
[04:32:46] *** Quits: gitly (~gitly@185.69.144.8) (Ping timeout: 250 seconds)
[04:33:45] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 250 seconds)
[04:34:52] *** Joins: gitly (~gitly@85.255.235.96)
[04:44:07] *** Quits: SEP_ (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[04:44:42] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:45:46] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 250 seconds)
[04:47:37] *** Quits: CodePoint (~CodePoint@96.44.191.140) (Quit: CodePoint)
[04:52:02] *** Joins: califax- (~califax@user/califx)
[04:55:24] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[04:55:25] *** califax- is now known as califax
[04:55:35] *** Quits: iagmi (~m@8.21.8.252) (Quit: WeeChat 3.3)
[04:56:05] *** Quits: Abrax- (~Abrax@user/abrax) (Quit: Leaving)
[05:00:14] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[05:01:42] *** Joins: hololeap (~hololeap@user/hololeap)
[05:02:11] *** Quits: tv- (~tv-@user/tv-) (Quit: WeeChat 3.0.1)
[05:10:50] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[05:13:39] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Quit: Leaving)
[05:13:58] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[05:14:18] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[05:14:50] *** Joins: chenqisu1 (~xirndc@183.217.201.186)
[05:15:10] *** Quits: chenqisu1 (~xirndc@183.217.201.186) (Max SendQ exceeded)
[05:15:38] *** Joins: chenqisu1 (~xirndc@183.217.201.186)
[05:16:10] *** chenqisu1 is now known as chenqisu12
[05:16:34] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 260 seconds)
[05:17:12] *** Joins: tv- (~tv-@user/tv-)
[05:18:49] *** Quits: tv- (~tv-@user/tv-) (Client Quit)
[05:19:06] *** Joins: tv- (~tv-@user/tv-)
[05:20:47] *** Quits: To_Aru_Shiroi_Ne (~eva@d5152df72.static.telenet.be) (Remote host closed the connection)
[05:21:05] *** Quits: pntaylor (~quassel@101.113.230.249) (Ping timeout: 264 seconds)
[05:22:11] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[05:22:47] *** Joins: fikran (~fikran@user/fikran)
[05:23:30] *** Joins: pntaylor (~quassel@101.113.66.201)
[05:28:35] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[05:30:51] *** Joins: Abrax (~Abrax@user/abrax)
[05:32:44] *** Quits: Abrax (~Abrax@user/abrax) (Client Quit)
[05:32:48] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[05:32:56] *** Joins: Abrax (~Abrax@user/abrax)
[05:33:29] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[05:33:41] *** Quits: Abrax (~Abrax@user/abrax) (Remote host closed the connection)
[05:33:52] *** Joins: Abrax (~Abrax@user/abrax)
[05:37:01] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 250 seconds)
[05:40:12] *** Joins: Descartes (~chatzilla@user/descartes)
[05:40:29] <Descartes> Should I allow uBlock Origin access to my file URLs on Microsoft Edge?
[05:41:02] <ajak> your "file URLs"?
[05:41:14] <Descartes> I  only use Microsoft Edge when running Microsoft Teams, by the way
[05:41:14] <ajak> of course the elephant in the room is.. why use edge?
[05:41:51] <Descartes> Oh yeah, and I had to completely disable uBlock Origin to get Microsoft Teams working
[05:42:33] <ajak> i guess it doesn't matter much if ublock origin is off for the only thing you use edge for
[05:42:37] <Descartes> But since some apps may boot up Edge automatically, it's probably good to keep uBlock Origin active
[05:43:14] <Descartes> But when I'm running Microsoft Teams, I'll probably forget to deactive uBlock Origin
[05:44:03] <ajak> seems you can set "trusted sites" in ublock
[05:44:13] <Descartes> But I don't really care.  I can just try again.  The point is that Microsoft Edge is a bad browser, so uBlock Origin should minimize the security issues if it gets booted up
[05:44:14] <ajak> probably just need to trust teams
[05:44:43] <Descartes> Good idea
[05:45:06] <Descartes> But which URLs does Teams use?
[05:46:02] <ajak> well, first try trusting whatever url you open
[05:46:04] <ajak> and iterate
[05:46:14] <Descartes> So, should I tell Edge Allow access to file URLs?
[05:46:38] <Descartes> I mean tell Edge allow uBlock Origin access to file URLs?
[05:48:51] <Descartes> Is it good to tell uBlock Origin to purge all caches frequently?
[05:55:40] *** Quits: signofzeta (~signofzet@user/signofzeta) (Ping timeout: 252 seconds)
[05:57:41] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:58:29] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[05:59:35] *** Quits: plasticuproject (~plasticup@user/plasticuproject) (Ping timeout: 252 seconds)
[06:01:48] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[06:02:01] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[06:03:48] *** Joins: stunder (~stunder@47.146.57.113)
[06:06:59] *** Joins: plasticuproject (~plasticup@user/plasticuproject)
[06:11:46] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:2998:c190:336a:91a0) (Ping timeout: 245 seconds)
[06:11:46] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:7c2f:f581:770:f830) (Ping timeout: 245 seconds)
[06:11:46] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:787a:154e:95b3:e6b9)
[06:18:10] *** moose` is now known as moose
[06:20:17] *** Quits: herman (~herman@2603:9000:8500:baa0:9018:1dd4:42a2:ff50) (Quit: Leaving)
[06:25:13] *** Joins: cpluspunch (~znc@66.115.147.215)
[06:26:19] *** BrianG61UK__ is now known as BrianG61UK
[06:28:06] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:787a:154e:95b3:e6b9) (Quit: Leaving)
[06:28:29] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:787a:154e:95b3:e6b9)
[06:29:28] *** p`` is now known as p`
[06:31:46] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:7c2f:f581:770:f830)
[06:37:10] *** Joins: h4zel (~hazel@user/h4zel)
[06:39:49] *** Quits: plasticuproject (~plasticup@user/plasticuproject) (Quit: leaving)
[06:39:49] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:47:53] *** Joins: SallyAhaj_ (SallyAhaj@user/sallyahaj)
[06:48:24] <Hydragyrum> Access to file URLs is generally pointless -- it means if you're navigating your browser to files on your local hard drive, ublock would still be allowed to operate on them. In most cases there's no reason for that
[06:53:17] *** Quits: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca) (Ping timeout: 250 seconds)
[06:55:46] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[06:55:53] *** Quits: scorche (~scorche@user/scorche) (Read error: Connection reset by peer)
[07:02:07] *** Joins: JibStyle (~user@c-71-198-134-61.hsd1.ca.comcast.net)
[07:13:13] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[07:16:35] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[07:17:49] *** Joins: grobi (~grobi@user/grobi)
[07:23:44] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[07:26:19] *** Joins: saroy (~Sandipan@45.249.73.179)
[07:27:35] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:30:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:31:45] *** Joins: digin4 (~digin4@user/digin4)
[07:32:07] *** Joins: fikran (~fikran@user/fikran)
[07:32:10] *** Quits: digin4 (~digin4@user/digin4) (Remote host closed the connection)
[07:33:26] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[07:33:40] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[07:34:37] *** Quits: stunder (~stunder@47.146.57.113) (Ping timeout: 252 seconds)
[07:36:10] *** Joins: kish` (~aqua@user/aqua)
[07:37:55] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 250 seconds)
[07:42:18] *** Joins: Atque (~Atque@user/atque)
[07:43:07] *** Joins: elderbear2 (~elderbear@71.217.149.5)
[07:45:30] *** nyany is now known as alynyanxy
[07:45:47] *** Quits: elderbear (~elderbear@cpe-24-163-39-192.nc.res.rr.com) (Ping timeout: 252 seconds)
[07:47:40] *** alynyanxy is now known as nyany
[08:00:53] <Hash> https://websec.anti.guru/ Site updated more, avatar icons, lots of REALLY AWESOME infosec resources added under https://websec.anti.guru/resources/
[08:00:53] <secbot> ^ Welcome #Security IRC Community on Libera Chat
[08:01:17] <Hash> Awesome Security Curated Links Collection⌗
[08:10:57] <Hash> Latest section: https://websec.anti.guru/resources/#awesome-security-curated-links-collection
[08:10:57] <secbot> ^ Infosec & Cybersecurity Educational Resources :: Welcome #Security IRC Community on Libera Chat
[08:11:07] <Hash> Alright. I'm done for now.
[08:11:12] <Hash> What's up folks, how's it going?
[08:11:48] <Hash> https://gist.github.com/hashborgir/82957e6f7ac8011f5db2970c2aa13eb9 Working on this list right now.
[08:11:49] <secbot> ^ ECES requirements · GitHub
[08:12:07] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[08:12:13] <Hash> Whittling it down. Plan on taking exam on monday morning. Got tonight (slept all day), friday, saturday, sunday. 4 days. I think I can do it.
[08:30:08] *** Quits: bairen (~bairen@gateway/tor-sasl/bairen) (Remote host closed the connection)
[08:30:37] *** Joins: bairen (~bairen@gateway/tor-sasl/bairen)
[08:32:16] *** Quits: grobi (~grobi@user/grobi) (Quit: baby i'm bored ♞▀▄▀▄♝▀)
[08:35:47] *** Joins: duude_ (~duude__@217.197.142.2)
[08:36:46] *** Joins: SallyAhaj__ (~SallyAhaj@user/sallyahaj)
[08:36:46] *** SallyAhaj__ is now known as SallyAhaj
[08:36:53] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 252 seconds)
[08:38:27] *** Quits: SallyAhaj_ (SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[08:43:19] *** Joins: tex (~super@user/dix)
[08:47:14] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 246 seconds)
[08:48:35] *** Quits: chipox (~chipox@193.32.127.236) (Quit: Leaving)
[08:49:20] *** Joins: chipox (~chipox@193.32.127.230)
[08:56:13] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[08:58:46] *** Quits: davit (~davit@c-73-181-251-85.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[09:03:41] *** Joins: BOKALDO (~BOKALDO@46.109.203.51)
[09:04:00] *** Joins: vysn (~vysn@user/vysn)
[09:11:39] *** Joins: davit (~davit@c-73-181-251-85.hsd1.wa.comcast.net)
[09:12:19] *** Joins: romare (~st.pauli@user/romare)
[09:15:45] *** Quits: obranco (~obranco@gateway/tor-sasl/obranco) (Remote host closed the connection)
[09:16:34] *** Joins: obranco (~obranco@gateway/tor-sasl/obranco)
[09:18:14] *** Quits: xsznix (~xsznix@104.14.31.126) (Ping timeout: 265 seconds)
[09:21:47] *** Quits: hololeap (~hololeap@user/hololeap) (Quit: Bye)
[09:21:53] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[09:24:24] *** Joins: BiggieSmalls (~BiggieSma@user/biggiesmalls)
[09:24:55] *** Joins: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[09:29:25] *** Joins: deksar (~deksar@user/deksar)
[09:29:54] *** Quits: deksar (~deksar@user/deksar) (Client Quit)
[09:29:55] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[09:32:14] *** Quits: ds-ac (~ds-ac@user/ds-ac) (Quit: leaving)
[09:32:33] *** Quits: laurell (~laurell@user/laurell) (Read error: Connection reset by peer)
[09:32:42] *** Joins: laurell (~laurell@user/laurell)
[09:32:54] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:33:06] *** Joins: martums1 (~martums@user/martums)
[09:33:13] *** Joins: Lucanis1 (~Lucanis3@c-76-114-52-57.hsd1.ca.comcast.net)
[09:33:14] *** Quits: thekingofbandit (~thekingof@user/thekingofbandit) (Killed (NickServ (GHOST command used by thekingofbandit3!thekingofb@thunix.net)))
[09:33:45] *** Joins: riz (~BillyZane@91.196.220.174)
[09:34:06] *** Joins: lllh (~llh@198.48.244.21)
[09:34:15] *** Joins: JibStyle` (~user@c-71-198-134-61.hsd1.ca.comcast.net)
[09:34:16] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:34:38] *** Joins: Fessus_ (~Fessus@107.191.108.221)
[09:34:41] *** Quits: JibStyle` (~user@c-71-198-134-61.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:34:44] *** Joins: Apachez- (~Apachez@about/security/staff/apachez)
[09:34:45] *** Joins: drewgon1 (~drewgon@159.196.19.188)
[09:34:48] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:34:53] *** Joins: nanook2 (~nanook@137.184.134.238)
[09:34:56] *** Joins: flynn (~mcbloch@user/flynn)
[09:35:03] *** Joins: pinpox0 (~pinpox@v2202101107577140883.nicesrv.de)
[09:35:08] *** Joins: iNKa (~NoBody@2002:95ca:ed03::95ca:ed03)
[09:35:08] *** Quits: iNKa (~NoBody@2002:95ca:ed03::95ca:ed03) (Changing host)
[09:35:08] *** Joins: iNKa (~NoBody@user/brocker)
[09:35:21] *** Joins: lucerne9 (~lucerne@ip202.ip-51-178-215.eu)
[09:35:32] *** Joins: nyaaa (~realTaru9@user/taru9)
[09:35:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:35:48] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:897:3ac8:6493:2e4e)
[09:35:49] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:897:3ac8:6493:2e4e) (Changing host)
[09:35:49] *** Joins: skapata (~Skapata@user/skapata)
[09:35:56] *** Joins: ozarker1 (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[09:36:35] *** Joins: Elzington_ (~Elzington@94.198.42.142)
[09:36:39] *** Joins: LiENUX (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[09:36:46] *** Joins: xsznix6 (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[09:36:51] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[09:36:53] *** Joins: relipse_ (sid16131@id-16131.tinside.irccloud.com)
[09:36:55] *** Joins: chenqisu1 (~xirndc@183.217.201.186)
[09:36:56] *** Joins: droman (~quassel@ns3046126.ip-91-121-8.eu)
[09:37:14] *** Quits: chenqisu1 (~xirndc@183.217.201.186) (Max SendQ exceeded)
[09:37:15] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[09:37:33] *** Joins: Bencraft8 (~Bencraft@111.227.187.81.in-addr.arpa)
[09:37:52] *** Joins: carploader (~bull@185.117.72.168)
[09:37:55] *** Joins: haliucin1s (~haliucina@5.20.153.21)
[09:38:03] *** Joins: blaklistd8 (~blaklistd@user/blaklistd)
[09:38:21] *** Joins: raffaele_ (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net)
[09:38:39] *** Joins: Mithkabob2 (~mithkabob@2604:a880:800:10::a40:f001)
[09:38:42] *** Joins: ds-ac (~ds-ac@user/ds-ac)
[09:38:48] *** Joins: chenqisu1 (~xirndc@183.217.201.186)
[09:38:57] *** Quits: chenqisu1 (~xirndc@183.217.201.186) (Max SendQ exceeded)
[09:39:00] *** Joins: _0x1d3_ (sid43116@id-43116.tinside.irccloud.com)
[09:39:13] *** Joins: pedrocr_ (~pedrocr@user/pedrocr)
[09:39:25] *** Joins: khem_ (~ws@daytona.pwnlabs.io)
[09:39:27] *** Quits: ds-ac (~ds-ac@user/ds-ac) (Client Quit)
[09:39:31] *** Joins: wowi4242 (~wowi42@5.30.23.58)
[09:39:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[09:39:50] *** Joins: chenqisu1 (~xirndc@183.217.201.186)
[09:39:54] *** Joins: aleph-TA_ (~aleph-TA@user/aleph-ta)
[09:39:59] *** Joins: Retr0id5 (~Retr0id@user/retr0id)
[09:40:28] *** Joins: defn (~n0b0dy@user/defn)
[09:40:39] *** Joins: murrayn_ (~murray@static.38.4.181.135.clients.your-server.de)
[09:40:47] *** Joins: Fabricio20_ (~Fabricio2@212.47.227.164)
[09:40:56] *** Joins: det_ (~det@23.96.202.209)
[09:41:11] *** Joins: lexik_ (~lexik@171.25.222.217)
[09:41:21] *** Joins: Buggy (Buggy@shelltalk.net)
[09:41:27] *** Joins: fikran (~fikran@user/fikran)
[09:41:35] *** Joins: fedorafa_ (~fedorafan@user/fedorafan)
[09:41:43] *** Joins: Vesryn_ (~vesryn@user/vesryn)
[09:42:31] *** Joins: CoJaBo_ (~aztec@c-73-64-56-249.hsd1.pa.comcast.net)
[09:42:31] *** Joins: ult_ (~lamer@107.170.37.27)
[09:42:31] *** Joins: rudi_s_ (~simon@user/rudi-s/x-7673890)
[09:42:34] *** Joins: Sling_ (~Sling@1.0.0.127.in-addr.nl)
[09:42:45] *** Joins: Dlacroix_ (dlacroix@linuxfr.net)
[09:42:49] *** Joins: simplici1y (~yti@user/simplicity)
[09:42:54] *** Joins: calcmandan_ (~quassel@user/calcmandan)
[09:43:15] *** Joins: ds-ac (~ds-ac@user/ds-ac)
[09:43:16] *** Joins: iagmi (~m@8.21.8.252)
[09:43:26] *** Joins: cunne (~cunne@user/cunne)
[09:43:46] *** Quits: CoJaBo_ (~aztec@c-73-64-56-249.hsd1.pa.comcast.net) (Changing host)
[09:43:46] *** Joins: CoJaBo_ (~aztec@user/CoJaBo)
[09:44:12] *** Joins: Kryczek_ (~kryczek@5.194.215.142)
[09:44:15] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[09:44:18] *** Quits: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[09:44:18] *** Quits: JibStyle (~user@c-71-198-134-61.hsd1.ca.comcast.net) (*.net *.split)
[09:44:18] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:44:18] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[09:44:18] *** Quits: Elzington (~Elzington@94.198.42.142) (*.net *.split)
[09:44:18] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (*.net *.split)
[09:44:19] *** Quits: Buggys (Buggy@shelltalk.net) (*.net *.split)
[09:44:19] *** Quits: llh (~llh@user/llh) (*.net *.split)
[09:44:19] *** Quits: maharg101_ (~maharg101@savoy.force9.co.uk) (*.net *.split)
[09:44:19] *** Quits: BillyZane2 (~BillyZane@91.196.220.174) (*.net *.split)
[09:44:19] *** Quits: carolinamoon (~spanishsu@70.red-81-33-206.dynamicip.rima-tde.net) (*.net *.split)
[09:44:19] *** Quits: rtjure (~rtjure@bras-79-132-17-74.comnet.bg) (*.net *.split)
[09:44:19] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (*.net *.split)
[09:44:19] *** Quits: znedw (~znedw@home.znedw.com) (*.net *.split)
[09:44:19] *** Quits: drewgon (~drewgon@159.196.19.188) (*.net *.split)
[09:44:19] *** Quits: martums (~martums@user/martums) (*.net *.split)
[09:44:19] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (*.net *.split)
[09:44:19] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[09:44:19] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[09:44:19] *** Quits: Apachez (~Apachez@about/security/staff/apachez) (*.net *.split)
[09:44:19] *** Quits: d3fn (~n0b0dy@user/defn) (*.net *.split)
[09:44:19] *** Quits: Lucanis (~Lucanis3@user/lucanis) (*.net *.split)
[09:44:19] *** Quits: Fabricio20 (~Fabricio2@212.47.227.164) (*.net *.split)
[09:44:19] *** Quits: keiser0091075852 (~keiser@188.47.0.153.ipv4.supernova.orange.pl) (*.net *.split)
[09:44:19] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (*.net *.split)
[09:44:19] *** Quits: aleph-TA (~aleph-TA@user/aleph-ta) (*.net *.split)
[09:44:19] *** Quits: Vesryn (~vesryn@user/vesryn) (*.net *.split)
[09:44:19] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[09:44:19] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (*.net *.split)
[09:44:19] *** Quits: Brocker (~NoBody@user/brocker) (*.net *.split)
[09:44:19] *** Quits: Dlacroix (dlacroix@linuxfr.net) (*.net *.split)
[09:44:19] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (*.net *.split)
[09:44:19] *** Quits: blaklistd (~blaklistd@user/blaklistd) (*.net *.split)
[09:44:19] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (*.net *.split)
[09:44:19] *** Quits: BGL (fifty@75-149-171-58-washington.hfc.comcastbusiness.net) (*.net *.split)
[09:44:19] *** Quits: wsandin (~ws@daytona.pwnlabs.io) (*.net *.split)
[09:44:19] *** Quits: ch1p (~ch1p@ch1p.io) (*.net *.split)
[09:44:19] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[09:44:19] *** Quits: nanook (~nanook@137.184.134.238) (*.net *.split)
[09:44:19] *** Quits: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa) (*.net *.split)
[09:44:19] *** Quits: rafspiny (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net) (*.net *.split)
[09:44:19] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[09:44:19] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[09:44:20] *** Quits: flynn1 (~mcbloch@user/flynn) (*.net *.split)
[09:44:20] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (*.net *.split)
[09:44:20] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:44:20] *** Quits: Fessus (~Fessus@107.191.108.221) (*.net *.split)
[09:44:20] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[09:44:20] *** Quits: peq (~tim@li1125-189.members.linode.com) (*.net *.split)
[09:44:20] *** Quits: pinpox (~pinpox@v2202101107577140883.nicesrv.de) (*.net *.split)
[09:44:20] *** Quits: Mithkabob (~mithkabob@104.236.21.204) (*.net *.split)
[09:44:20] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[09:44:20] *** Quits: Dragoon (~Dragoon@user/dragoon) (*.net *.split)
[09:44:20] *** Quits: det (~det@23.96.202.209) (*.net *.split)
[09:44:20] *** Quits: Platonides (~Wikipedis@user/platonides) (*.net *.split)
[09:44:20] *** Quits: wowi42 (~wowi42@5.30.23.58) (*.net *.split)
[09:44:20] *** Quits: carpload1r (~bull@185.117.72.168) (*.net *.split)
[09:44:20] *** Quits: Alternity (~Alternity@user/alternity) (*.net *.split)
[09:44:20] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[09:44:20] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:44:20] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (*.net *.split)
[09:44:20] *** Quits: zinc (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[09:44:20] *** Quits: Sling (~Sling@user/sling) (*.net *.split)
[09:44:20] *** Quits: lexik (~lexik@171.25.222.217) (*.net *.split)
[09:44:20] *** Quits: Kryczek (~kryczek@hashcat/team/Kryczek) (*.net *.split)
[09:44:20] *** Quits: nirojan (sid365686@user/nirojan) (*.net *.split)
[09:44:20] *** Quits: _0x1d3 (sid43116@tinside.irccloud.com) (*.net *.split)
[09:44:20] *** Quits: relipse (sid16131@tinside.irccloud.com) (*.net *.split)
[09:44:20] *** Quits: pedrocr (~pedrocr@user/pedrocr) (*.net *.split)
[09:44:20] *** Quits: wbg (~wbg@user/wbg) (*.net *.split)
[09:44:20] *** Quits: RayS (~raysl@sdf1.xen.prgmr.com) (*.net *.split)
[09:44:20] *** Quits: taru9 (~realTaru9@user/taru9) (*.net *.split)
[09:44:20] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (*.net *.split)
[09:44:20] *** Quits: aasldakf- (~waif@185.59.211.35.bc.googleusercontent.com) (*.net *.split)
[09:44:20] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[09:44:20] *** Quits: p71 (~p71@071-090-085-184.res.spectrum.com) (*.net *.split)
[09:44:20] *** Quits: ult (~lamer@107.170.37.27) (*.net *.split)
[09:44:20] *** Quits: murrayn (~murray@user/murrayn) (*.net *.split)
[09:44:20] *** xsznix6 is now known as xsznix
[09:44:20] *** martums1 is now known as martums
[09:44:20] *** pinpox0 is now known as pinpox
[09:44:20] *** ozarker1 is now known as ozarker
[09:44:20] *** blaklistd8 is now known as blaklistd
[09:44:20] *** lucerne9 is now known as lucerne
[09:44:20] *** Mithkabob2 is now known as Mithkabob
[09:44:21] *** Retr0id5 is now known as Retr0id
[09:44:21] *** Vesryn_ is now known as Vesryn
[09:44:21] *** Bencraft8 is now known as Bencraft
[09:44:21] *** nanook2 is now known as nanook
[09:44:21] *** nyaaa is now known as taru9
[09:44:25] *** _0x1d3_ is now known as _0x1d3
[09:44:46] *** Joins: nirojan (sid365686@user/nirojan)
[09:44:51] *** Joins: rtjure (~rtjure@bras-79-132-17-74.comnet.bg)
[09:45:36] *** Joins: atom32k (~atomekk@user/atom32k)
[09:45:51] *** Quits: ds-ac (~ds-ac@user/ds-ac) (Read error: Connection reset by peer)
[09:46:01] *** Joins: trebko (~trebko@137.220.86.97)
[09:46:27] *** Joins: peq (~tim@li1125-189.members.linode.com)
[09:46:27] *** Joins: carolinamoon (~spanishsu@70.red-81-33-206.dynamicip.rima-tde.net)
[09:46:27] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[09:46:27] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[09:46:27] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[09:46:27] *** Joins: glider (~glider@user/glider)
[09:46:27] *** Joins: zinc (~zinc@163.ip-51-254-203.eu)
[09:46:27] *** Joins: RayS (~raysl@sdf1.xen.prgmr.com)
[09:46:27] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[09:46:36] *** Joins: ch1p (~ch1p@ch1p.io)
[09:46:46] *** Joins: p71 (~p71@071-090-085-184.res.spectrum.com)
[09:46:50] *** Joins: stunder (~stunder@47.146.57.113)
[09:47:13] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[09:47:37] *** Quits: murrayn_ (~murray@static.38.4.181.135.clients.your-server.de) (Quit: ZNC 1.8.2 - https://znc.in)
[09:48:04] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[09:48:39] *** Joins: murrayn (~murray@static.38.4.181.135.clients.your-server.de)
[09:48:50] *** Quits: paramdeo (uid519981@user/paramdeo) (Ping timeout: 250 seconds)
[09:48:50] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[09:48:50] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[09:49:11] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[09:49:46] *** Quits: trebko (~trebko@137.220.86.97) (Client Quit)
[09:49:57] *** Quits: murrayn (~murray@static.38.4.181.135.clients.your-server.de) (Changing host)
[09:49:57] *** Joins: murrayn (~murray@user/murrayn)
[09:50:13] *** Joins: AnpMoot (~kuballe@anyone.tjorn.se)
[09:50:22] *** Joins: Platonides (~Wikipedis@user/platonides)
[09:50:31] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[09:51:06] *** Joins: paramdeo (uid519981@user/paramdeo)
[09:51:17] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[09:52:06] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[09:52:30] *** birkoff is now known as Guest6605
[09:53:48] *** Parts: fedorafa_ (~fedorafan@user/fedorafan) (Textual IRC Client: www.textualapp.com)
[09:54:06] *** Joins: spanishs1 (~spanishsu@70.red-81-33-206.dynamicip.rima-tde.net)
[09:55:41] *** Joins: RaySl (~raysl@sdf1.xen.prgmr.com)
[09:55:51] *** Joins: TheSilentLink_ (~TheSilent@user/thesilentlink)
[09:56:16] *** Joins: grobi (~grobi@user/grobi)
[09:56:24] *** Quits: zinc (~zinc@163.ip-51-254-203.eu) (Ping timeout: 252 seconds)
[09:56:30] *** Quits: RayS (~raysl@sdf1.xen.prgmr.com) (Read error: Connection reset by peer)
[09:56:31] *** Quits: carolinamoon (~spanishsu@70.red-81-33-206.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[09:56:31] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 252 seconds)
[09:56:31] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 252 seconds)
[09:56:55] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[09:56:57] *** TheSilentLink_ is now known as TheSilentLink
[09:57:27] *** Joins: jelly (jelly@user/jelly)
[09:58:18] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[09:58:20] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[09:58:40] <Hash>  https://is.gd/lyKaAW
[09:58:40] <secbot> (REDIRECT) ^ Update Google Chrome ASAP to Patch 2 New Actively Exploited Zero-Day Flaws
[10:00:56] *** Quits: iNKa (~NoBody@user/brocker) (Read error: Connection reset by peer)
[10:01:11] *** Joins: Brocker (~NoBody@2002:95ca:ed03::95ca:ed03)
[10:01:11] *** Quits: Brocker (~NoBody@2002:95ca:ed03::95ca:ed03) (Changing host)
[10:01:11] *** Joins: Brocker (~NoBody@user/brocker)
[10:02:37] *** rudi_s_ is now known as rudi_s
[10:05:38] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 246 seconds)
[10:10:25] <Descartes> How good is the 2021 beta version of 7zip?
[10:10:28] *** Quits: horseface (~horseface@125-63-20-223.ip4.superloop.com) (Quit: Leaving)
[10:11:29] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:12:17] *** Quits: stunder (~stunder@47.146.57.113) (Ping timeout: 246 seconds)
[10:14:09] <Hash> Malformed query
[10:14:20] <Hash> Also, what's up?
[10:15:35] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:19:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[10:19:09] *** Joins: horseface (~horseface@125-63-20-223.ip4.superloop.com)
[10:19:54] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[10:20:30] *** Joins: glider_ (~glider@user/glider)
[10:20:32] *** Quits: glider (~glider@user/glider) (Ping timeout: 252 seconds)
[10:20:38] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Read error: Connection reset by peer)
[10:21:16] *** Quits: peq (~tim@li1125-189.members.linode.com) (Ping timeout: 252 seconds)
[10:21:42] *** Joins: peq (~tim@li1125-189.members.linode.com)
[10:24:28] *** Joins: Dragoon (~Dragoon@user/dragoon)
[10:26:08] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[10:30:14] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (Quit: Bye!)
[10:32:53] *** vonunov is now known as ccp
[10:34:40] *** Joins: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name)
[10:36:14] *** Quits: iagmi (~m@8.21.8.252) (Ping timeout: 252 seconds)
[10:38:04] *** Hash is now known as websec
[10:38:38] *** Joins: tesseract (~tesseract@user/tesseract)
[10:39:48] <tesseract> local root exploid means they need physical eccess to pc?
[10:40:20] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[10:40:39] *** Joins: vysn (~vysn@user/vysn)
[10:40:46] <websec> tesseract: correct
[10:40:48] *** websec is now known as Hash
[10:41:13] *** Joins: _0x5fc31 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[10:41:25] <tesseract> Hash: thanks
[10:41:47] <Hash> local means physical machine access.
[10:41:50] *** Joins: mcfrd (~mcfrdy@user/mcfrdy)
[10:41:56] <Hash> remote means over the network
[10:42:12] <Hash> local is always worse as you have physical access to the machine.
[10:42:30] *** Joins: PonzoSporrigan (~ghost64@user/ghost64)
[10:42:36] <Hash> But local is always not worse becuase most people don't have physical access, only remote.
[10:42:50] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Ping timeout: 252 seconds)
[10:42:50] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Ping timeout: 252 seconds)
[10:42:50] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 252 seconds)
[10:42:50] *** Quits: ghost64 (~ghost64@user/ghost64) (Ping timeout: 252 seconds)
[10:42:50] *** Quits: cisco87 (~quassel@lnxg33k.com) (Ping timeout: 252 seconds)
[10:42:51] *** _0x5fc31 is now known as _0x5fc3
[10:42:51] <Hash> So logically, remote is always worst.
[10:42:59] *** Joins: cisco87_ (~quassel@lnxg33k.com)
[10:43:07] <Hash> But remote isn't even alwyas worst, because it is not as much access as local physical access
[10:43:13] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[10:43:44] <Hash> Security is confusing.
[10:44:16] *** Quits: atom32k (~atomekk@user/atom32k) (Remote host closed the connection)
[10:44:50] *** mcfrd is now known as mcfrdy
[10:45:07] *** Quits: bairen (~bairen@gateway/tor-sasl/bairen) (Remote host closed the connection)
[10:45:24] *** Joins: atom32k (~atomekk@user/atom32k)
[10:45:26] *** Quits: cpluspunch (~znc@66.115.147.215) (Ping timeout: 250 seconds)
[10:45:38] *** Quits: lexik_ (~lexik@171.25.222.217) (Quit: No Ping reply in 180 seconds.)
[10:45:50] *** Joins: cpluspunch (~znc@104.200.132.186)
[10:46:09] *** Joins: bairen (~bairen@gateway/tor-sasl/bairen)
[10:46:10] *** Joins: median (~median@user/median)
[10:46:23] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[10:46:57] *** Joins: lexik (~lexik@171.25.222.217)
[10:47:38] *** Quits: abraham (~abraham@143.244.185.86) (Quit: Ping timeout (120 seconds))
[10:48:10] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[10:48:15] *** Joins: abraham (~abraham@143.244.185.86)
[10:48:37] *** Joins: michele_ (~eraser@user/michele)
[10:48:42] *** Joins: ScR (~S@na.altplay.net)
[10:49:53] *** Joins: micronnn (~micronn@user/micronn)
[10:50:06] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--2000.ip6.aussiebb.net)
[10:50:15] *** Joins: donal-drumpf[m]1 (~donal-dru@2001:470:69fc:105::d2c6)
[10:50:15] *** Joins: gartt_ (~gartt@ip72-200-185-13.ri.ri.cox.net)
[10:50:55] <wyre> are key pairs involved in certificate generation with PKI?
[10:51:12] *** Quits: ScRaMbLe (~S@na.altplay.net) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: micronn (~micronn@user/micronn) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: tesseract (~tesseract@user/tesseract) (Quit: tesseract)
[10:51:12] *** Quits: donal-drumpf[m] (~donal-dru@2001:470:69fc:105::d2c6) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: gartt (~gartt@ip72-200-185-13.ri.ri.cox.net) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: michele (~eraser@user/michele) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: finalriposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: layline (~layline@marsh.hcoop.net) (Ping timeout: 252 seconds)
[10:51:14] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Quit: Leaving)
[10:51:15] <wyre> or do you only need a single private key?
[10:51:20] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[10:51:20] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[10:51:30] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Client Quit)
[10:51:41] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 252 seconds)
[10:51:48] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[10:51:53] *** Quits: digdilem (~digdilem@rolf.yuss.org) (Ping timeout: 252 seconds)
[10:52:05] *** Joins: dskull (~dskull@user/dskull)
[10:54:21] <piou> wyre: a key pair contains a private key and a public key. Having two different keys that work together is what defines asymetric cryptography which certificates are a part of, so they cannot use a single secret key or they're not certificates. One of the points of certificates is that you want everyone to be able to verify it so you sign it with the private key (only the private key bearer can do
[10:54:27] <piou> that) and then anyone can verify that certificate using the public key.
[10:54:40] *** Joins: tanto_ (~tanto@178.62.223.32)
[10:54:41] *** Joins: savy_ (~z@io.tl)
[10:54:47] *** Joins: UnfixedHACKERJ (~Jake@64.31.33.140)
[10:55:10] *** Joins: WayToDoor7 (~WayToDoor@user/waytodoor)
[10:56:35] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[10:56:56] *** Joins: stark (~deepcursi@ctrl-c.club)
[10:57:02] *** Quits: savy (~z@io.tl) (Ping timeout: 252 seconds)
[10:57:02] *** Quits: APic (apic@apic.name) (Ping timeout: 252 seconds)
[10:57:02] *** Quits: tanto (~tanto@178.62.223.32) (Ping timeout: 252 seconds)
[10:57:02] *** Quits: Unfixed (~Jake@64.31.33.140) (Ping timeout: 252 seconds)
[10:57:02] *** Quits: tpr (~tpr@user/tpr) (Ping timeout: 252 seconds)
[10:57:03] *** Quits: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (Ping timeout: 252 seconds)
[10:57:03] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Ping timeout: 252 seconds)
[10:57:03] *** Quits: stark1 (~deepcursi@ctrl-c.club) (Ping timeout: 252 seconds)
[10:57:03] *** WayToDoor7 is now known as WayToDoor
[10:57:16] *** Joins: tpr (~tpr@user/tpr)
[10:57:18] *** Joins: EPic_ (apic@apic.name)
[10:57:27] *** Joins: dante4431 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340)
[10:57:34] <wyre> piou, but the certificate is issued by the CA, so ... how would you sign it?
[10:57:41] <wyre> after issuing it? 🤔
[10:58:10] *** Joins: semeion (~semeion@user/semeion)
[10:58:34] <piou> wyre: I'm confused, the certificate you received is signed already
[10:58:50] <wyre> but who is signing it?
[10:59:00] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[10:59:07] <piou> The pki
[10:59:14] *** Joins: layline (~layline@marsh.hcoop.net)
[10:59:15] <wyre> I mean, the CA or you?
[10:59:37] *** Joins: wbg (~wbg@user/wbg)
[10:59:42] <piou> Wait, let's take a step back, explain to me the process as you understand it, because I think we may not be talking about the same step of the process.
[10:59:44] *** Joins: digdilem (~digdilem@rolf.yuss.org)
[11:00:49] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[11:02:23] *** Joins: jonnycat[m]1 (~jonnycatm@2001:470:69fc:105::f575)
[11:03:09] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[11:03:20] *** Joins: Henry151_ (~bishop@user/henry151)
[11:03:31] *** Joins: CombatVet (~c4@user/combatvet)
[11:04:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[11:04:34] *** Joins: whaleshunter[m]1 (~whaleshun@2001:470:69fc:105::daf2)
[11:04:43] *** Quits: jonnycat[m] (~jonnycatm@2001:470:69fc:105::f575) (Ping timeout: 252 seconds)
[11:04:43] *** Quits: Henry151 (~bishop@user/henry151) (Ping timeout: 252 seconds)
[11:04:43] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Ping timeout: 252 seconds)
[11:04:43] *** Joins: phylaz (~phylaz@92.221.176.219)
[11:04:43] *** Quits: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2) (Ping timeout: 252 seconds)
[11:04:54] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[11:05:22] *** Joins: vysn (~vysn@user/vysn)
[11:12:03] *** Joins: rsx (~dummy@ppp-188-174-153-249.dynamic.mnet-online.de)
[11:12:43] *** Joins: Klinda (~klinda@2.227.251.209)
[11:13:03] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[11:13:11] *** Quits: jwpapi (sid502614@id-502614.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[11:13:16] *** Joins: Name (~clarjon1@user/clarjon1)
[11:13:20] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[11:13:25] *** Name is now known as Guest4024
[11:14:03] *** Quits: supps[m] (~suppsmatr@2001:470:69fc:105::f75f) (Ping timeout: 250 seconds)
[11:14:03] *** Quits: Klinda (~klinda@2.227.251.209) (Changing host)
[11:14:03] *** Joins: Klinda (~klinda@user/klinda)
[11:14:16] *** Joins: supps[m] (~suppsmatr@2001:470:69fc:105::f75f)
[11:14:45] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 260 seconds)
[11:14:52] *** Joins: stoned (~weechat@thestonedapes.com)
[11:15:00] *** Joins: justache9 (~justache@user/justache)
[11:15:09] *** Joins: ult (~lamer@107.170.37.27)
[11:15:12] *** Quits: justache (~justache@user/justache) (Ping timeout: 250 seconds)
[11:15:12] *** Quits: Hash (~weechat@thestonedapes.com) (Ping timeout: 250 seconds)
[11:15:12] *** justache9 is now known as justache
[11:15:13] *** Quits: ult_ (~lamer@107.170.37.27) (Ping timeout: 250 seconds)
[11:15:17] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (Ping timeout: 250 seconds)
[11:15:17] *** stoned is now known as Hash
[11:15:36] *** Joins: en4rab__ (~en4rab@user/en4rab)
[11:15:59] *** Joins: LambdaCo1 (~adam@wireguard/tunneler/lambdacomplex)
[11:16:28] *** Quits: en4rab_ (~en4rab@user/en4rab) (Read error: Connection reset by peer)
[11:16:39] *** Quits: clarjon_1 (~clarjon1@user/clarjon1) (Ping timeout: 250 seconds)
[11:17:54] *** Quits: Hackerpcs_1 (~user@user/hackerpcs) (Quit: Hackerpcs_1)
[11:19:02] *** Joins: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0)
[11:19:20] *** Joins: Hackerpcs (~user@user/hackerpcs)
[11:24:17] *** Joins: Tx3MGiLR (~D5eWBzGK@74.5.153.221)
[11:24:41] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6) (Ping timeout: 264 seconds)
[11:25:11] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[11:25:21] *** Quits: gitly (~gitly@85.255.235.96) (Ping timeout: 265 seconds)
[11:25:29] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[11:26:14] *** Joins: duude__ (~duude__@217.197.142.2)
[11:26:14] *** Quits: duude__ (~duude__@217.197.142.2) (Changing host)
[11:26:14] *** Joins: duude__ (~duude__@user/duude/x-4676560)
[11:26:56] <Hash> wyre: hi
[11:26:58] *** Joins: gitly (~gitly@148.252.132.191)
[11:27:11] *** Quits: duude_ (~duude__@217.197.142.2) (Ping timeout: 246 seconds)
[11:27:25] <Hash> wyre: the confusion seems to be in terms
[11:27:46] <Hash> Public Key Infratstucture is a set of methods to handle Assymetric cryptography
[11:28:13] <Hash> PKI uses asssymetric cryptography, using a public/private key pair.
[11:28:47] <Hash> A digital signature relies on both a public and private keys to be created and used.
[11:29:04] <Hash> A digital certificate is signed by a Certificate Authority
[11:30:08] <Hash> A certificate proves who you are, it 'certifies' you as the person you say you are.
[11:30:21] <Hash> You get a certificate by giving the CA your public key and your name.
[11:31:00] <Hash> Your digital certificate is created using your public key, signed by the CA (authority)
[11:31:44] <Hash> This certificate says, You are this XYZ person and this Certificate Authorify can 'sign off' on you, meaning, they can sign you as a verified person. You are indeed person XYZ.
[11:32:39] *** Joins: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net)
[11:33:38] *** Joins: otisolsen70 (~otisolsen@80.80.4.2)
[11:34:52] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[11:35:57] *** Joins: duude_ (~duude__@217.197.142.2)
[11:36:04] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 252 seconds)
[11:36:35] *** Joins: BGL (twenty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[11:38:57] *** Quits: Descartes (~chatzilla@user/descartes) (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
[11:39:29] *** Quits: _inky (~inky_@46.36.119.235) (Ping timeout: 252 seconds)
[11:39:32] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[11:39:43] *** Joins: duude__ (~duude__@217.197.142.2)
[11:39:43] *** Quits: duude__ (~duude__@217.197.142.2) (Changing host)
[11:39:43] *** Joins: duude__ (~duude__@user/duude/x-4676560)
[11:39:50] *** Guest4024 is now known as clarjon1
[11:41:07] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[11:41:08] *** Quits: duude_ (~duude__@217.197.142.2) (Ping timeout: 252 seconds)
[11:43:07] *** Quits: BiggieSmalls (~BiggieSma@user/biggiesmalls) (Quit: Leaving)
[11:44:06] *** Joins: duude_ (~duude__@217.197.142.2)
[11:44:52] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 252 seconds)
[11:45:05] *** Joins: thekingo- (tkob@2607:5300:60:21b::1)
[11:45:20] *** Quits: tkob (tkob@2607:5300:60:21b::1) (Ping timeout: 250 seconds)
[11:46:17] <wyre> Hash, so CA is basically signing your public key?
[11:47:16] *** Joins: duude__ (~duude__@217.197.142.2)
[11:47:16] *** Quits: duude__ (~duude__@217.197.142.2) (Changing host)
[11:47:16] *** Joins: duude__ (~duude__@user/duude/x-4676560)
[11:47:18] *** Joins: blaklistd9 (~blaklistd@user/blaklistd)
[11:47:47] <Hash> A Certificate Authority (CA) issues digital certificates that contain a public key and the identity of the owner. The matching private key is not made available publicly, but kept secret by the end user who generated the key pair. The certificate is also a confirmation or validation by the CA that the public key contained in the certificate belongs to the person, organization, server or other
[11:47:49] <Hash> entity noted in the certificate.
[11:48:19] *** Quits: duude_ (~duude__@217.197.142.2) (Ping timeout: 252 seconds)
[11:48:37] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Read error: Connection reset by peer)
[11:48:37] <wyre> yeah, but what's the certificate itself?
[11:48:37] *** blaklistd9 is now known as blaklistd
[11:48:39] <Hash> If the user trusts the CA and can verify the CA's signature, then he can also verify that a certain public key does indeed belong to whoever is identified in the certificate. Browsers maintain list of well known CAs root certificates.
[11:48:47] <wyre> it's another arbitrary string of characters?
[11:48:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[11:49:40] *** Joins: mnemonic (~semeion@user/semeion)
[11:49:47] <Hash> When you want a certificate, you send your identify + public key over to the CA in a certificate request
[11:50:15] <Hash> CSR contains the public key of the user and user identity information in a format that issuing CAs would normally expect.
[11:50:19] *** Quits: horseface (~horseface@125-63-20-223.ip4.superloop.com) (Quit: Leaving)
[11:50:37] *** Joins: horseface (~horseface@125-63-20-223.ip4.superloop.com)
[11:50:44] <Hash> Using both your identify information and your public key, they issue you a certificate saying this is the person you say you are.
[11:50:44] *** Joins: duude_ (~duude__@217.197.142.2)
[11:50:47] *** Joins: fikran (~fikran@user/fikran)
[11:50:55] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[11:51:07] <Hash> Other people in the world trust the CA. So when the CA says, You are who you are, other people trust is.
[11:51:24] <wyre> so the certificate is essentially "a public key + the user identity" signed by the CA with its private key?
[11:52:07] <Hash> Minus the last part.
[11:52:11] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 252 seconds)
[11:52:18] <Hash> CA doesn'g sign it with a private key.
[11:52:28] <Hash> CA simply certifies it digitally with you are who you are.
[11:52:42] <Hash> When you get a certificate for your public key from a commercial CA then your certificate is associated with a chain of certificates or sometimes called chain of trust.
[11:52:46] *** Joins: BiggieSmalls (~BiggieSma@user/biggiesmalls)
[11:53:16] <wyre> so the certificate just contains your public key and your identity?
[11:53:18] <wyre> in plain text?
[11:53:27] <Hash> During a User's certificate validation by a browser or a program, browser needs to validate the signature by finding the public key of the next issuing CA or intermediate CA.
[11:53:32] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[11:53:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:53:38] *** Quits: BiggieSmalls (~BiggieSma@user/biggiesmalls) (Client Quit)
[11:53:59] <piou> The CA does sign the certificate provided though, that's how you have a chain of trust
[11:54:15] <Hash> A digital certificate binds a user, computer, or service’s identity to a public key by providing information about the subject of the certificate, the validity of the certificate, and applications and services that can use the certificate.
[11:54:17] <piou> https://www.keyfactor.com/wp-content/uploads/Certificate20Chain20of20Trust-Sep-02-2020-08-15-34-33-PM.png etc
[11:54:20] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[11:54:20] <wyre> but to signing something you need to do it with your private key, right?
[11:54:37] <Hash> X.509 Version 3 certificates require 8 different parts
[11:54:47] <piou> wyre: yes, signing is done with your private key
[11:54:52] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[11:54:56] <piou> wyre: well, with a private
[11:55:02] <piou> key
[11:55:25] <wyre> that's why I was wondering if CA is signing the certificate also with its private key
[11:56:09] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:7c2f:f581:770:f830)
[11:56:19] <Hash> In PKI, the keys are mathematically linked, so you don't need to sign with a private key when asking for a CSR
[11:56:30] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[11:56:30] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (Ping timeout: 252 seconds)
[11:56:30] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (Ping timeout: 252 seconds)
[11:56:43] <Hash> You only need the public key
[11:56:47] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[11:56:56] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[11:56:56] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[11:56:57] *** Joins: bailon (~gizzard@saturn.whatbox.ca)
[11:57:05] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:57:36] <wyre> Hash, sure, but what about the CA issuing the cert?
[11:57:48] <wyre> doesn't need the CA sign the certificate?
[11:58:00] *** standardrat_ is now known as standardrat
[11:58:18] <Hash> Subject name, unique serial #, issuer, valid from and to dates, your public key, signature algorithm, and signature value are inside the actual certificate
[11:58:18] *** Joins: BiggieSmalls (~BiggieSma@user/biggiesmalls)
[11:58:33] *** Joins: sandipan (~Sandipan@45.249.73.179)
[11:58:35] <Hash> X.509 Version 3 certificates anyway
[11:58:38] *** Joins: ghostbusters2 (~admin@user/ghostbuster)
[11:58:44] *** Joins: beard_ (sid110468@user/beard)
[11:58:47] <piou> wyre: one issue is that you keep saying "the certificate" when there's many certificates involved, many keys involved, it would be very useful if you could actually explain what situation you consider exactly in your own words so that these things are clearer
[11:58:58] *** Quits: beard (sid110468@user/beard) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: ghostbuster (~admin@user/ghostbuster) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: ia (ia@user/ia) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 252 seconds)
[11:58:58] *** beard_ is now known as beard
[11:59:02] *** Quits: vinumsv89 (~vinumsv@171.61.212.94) (Quit: Ping timeout (120 seconds))
[11:59:02] *** Quits: tjr (nitemare@succubus.dkr.prd.ca.robotham.dev) (Quit: Ping timeout (120 seconds))
[11:59:02] *** Quits: masterkorp (~masterkor@user/masterkorp) (Quit: Ping timeout (120 seconds))
[11:59:03] *** Quits: sahilister (~sahiliste@user/sahilister) (Quit: Ping timeout (120 seconds))
[11:59:13] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:7c2f:f581:770:f830) (Ping timeout: 252 seconds)
[11:59:13] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[11:59:15] *** Joins: Techcable (~Techcable@168.235.93.147)
[11:59:19] *** Joins: masterkorp (~masterkor@user/masterkorp)
[11:59:20] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[11:59:21] *** Joins: ia (ia@user/ia)
[11:59:22] *** Joins: vinumsv89 (~vinumsv@171.61.212.94)
[11:59:32] *** Joins: tjr (nitemare@succubus.dkr.prd.ca.robotham.dev)
[11:59:32] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[11:59:41] *** Joins: sahilister (~sahiliste@static.62.225.203.116.clients.your-server.de)
[11:59:49] <wyre> I can make the difference between encrypting and signing, when you encrypt something you use the public key of the receptor and he's able to decrypt with its private key
[11:59:52] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[12:00:15] <wyre> but when you sign something you has to use your private key and then the receptor can verify this sign with your public key
[12:00:16] <Hash> Signing is this: make a hash of your document, encrypt the hash with your public key. Done.
[12:00:20] <Hash> Basically.
[12:00:31] <wyre> Hash, sure?
[12:00:50] <wyre> I thought when you sign something you have to sign it with your private key
[12:00:52] <wyre> not the public
[12:00:52] *** Quits: saroy (~Sandipan@45.249.73.179) (Ping timeout: 252 seconds)
[12:00:59] <Hash> No
[12:01:15] <piou> Hash: No!
[12:01:25] <Hash> Unless I'm confused now.
[12:01:28] <piou> Hash: No signing is *not* "encrypt with your private key"
[12:01:45] <Hash> What?
[12:01:50] <piou> It's just not.
[12:01:57] <Hash> What are you telling me?
[12:01:57] <wyre> I'd say when you need to sign something you have to use your private key
[12:02:16] <Hash> piou: perhaps you misread.
[12:02:27] <wyre> and the receiver will use your public key to validate the sign
[12:02:38] <piou> Hash: I miswrote, sorry
[12:02:47] <Hash> I figured :)
[12:02:48] <piou> Hash: I meant it's not encrypt with your public key
[12:02:57] <piou> I read you well
[12:03:03] <wyre> on the other hand when you encrypt something you have to use the public key of the receiver
[12:03:11] <wyre> and he's able to decrypt it with its private key
[12:03:31] <piou> Hash: that's a very very big misconception due to the fact that in naive RSA it happens to be mathematically equivalent, but that wouldn't be how you'd actually do it in practice (because the guarantees you need are different) and in other cryptosystems signing is generally not equivalent to encrypting with the public key at all
[12:03:32] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[12:03:56] <Hash> I think perhaps you've misunderstood something I said.
[12:04:01] <wyre> piou, so am I right? 🤔
[12:04:04] <piou> 10:30  Hash> Signing is this: make a hash of your document, encrypt the hash with your public key. Done.
[12:04:14] <piou> Hash: "encrypt the hash with your public key" -> that's wrong
[12:04:27] <Hash> Oh I meant to say private key.
[12:04:31] <wyre> yes, I'd say it should be "encrypt the has with your private key"
[12:04:43] *** Joins: _inky (~inky_@5.77.129.249)
[12:04:50] <wyre> ok, I see 😁
[12:04:51] <Hash> Sending party will sign the message digest with a private key
[12:04:57] <Hash> Thanks for catching my mistake
[12:04:59] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Changing host)
[12:04:59] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[12:05:10] <Hash> I was confused as to why you're telling me that
[12:05:17] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Client Quit)
[12:05:36] <piou> Hash: but it's not that either
[12:05:41] <wyre> so my point was ... is the CA signing the issued certificate with some kind of private key on its side?
[12:05:53] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[12:06:03] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Changing host)
[12:06:04] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[12:06:07] <piou> Hash: I got confused by your mistake, but signing and encrypting are fundamentally different operations, signing is not a case where you encrypt with inverted keys
[12:06:50] <Hash> Correct
[12:07:00] *** drewgon1 is now known as drewgon
[12:07:00] <piou> Hash: it just happens that in naive RSA (which isn't used in practice) signing is equivalent to encrypting with the private key, but that's not true in the general case (or in any actual secure implementation)
[12:08:01] <piou> I just want to kill this important misconception because I'm tired of seeing homemade implementations of RSA that use this naive approach
[12:08:22] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Client Quit)
[12:08:27] <wyre> Hash, you mean am I correct? 🤔
[12:08:41] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[12:08:44] *** Quits: chenqisu1 (~xirndc@183.217.201.186) (Remote host closed the connection)
[12:10:21] *** Quits: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org) (Remote host closed the connection)
[12:10:40] *** Quits: portalrat (~portalrat@user/portalrat) (Read error: Connection reset by peer)
[12:10:42] *** Joins: portalrat_ (~portalrat@user/portalrat)
[12:11:19] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Ping timeout: 252 seconds)
[12:12:05] *** Joins: tkob (tkob@shell.xshellz.com)
[12:12:09] <Hash> wyre: I was talking to piou about how signing and encrypting are different.
[12:12:19] *** Joins: wille6 (~wille@static.140.85.76.144.clients.your-server.de)
[12:12:21] *** Quits: thekingo- (tkob@2607:5300:60:21b::1) (Ping timeout: 252 seconds)
[12:12:26] <wyre> so the certificate just contains the public key and identity information of who asks for it with no encryption, signing or extra processing?
[12:12:29] *** Quits: bertiger (~bertiger@user/bertiger) (Ping timeout: 252 seconds)
[12:12:29] *** Quits: LarchOye (nonmoose@spaceweed.spacetechnology.net) (Ping timeout: 252 seconds)
[12:12:30] *** Quits: strudl (~strudl@user/strudl) (Ping timeout: 252 seconds)
[12:12:30] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Read error: Connection reset by peer)
[12:12:30] *** wille6 is now known as wille
[12:12:35] *** Quits: zerosum (~zerosum@user/zerosum) (Quit: Ping timeout (120 seconds))
[12:12:51] *** Joins: zerosum (~zerosum@162.255.139.2)
[12:12:55] *** Joins: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org)
[12:12:57] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (Read error: Connection reset by peer)
[12:12:58] *** Joins: atomekk (~atomekk@user/atom32k)
[12:12:58] *** Quits: derfj (sid19429@2a03:5180:f::4be5) (Ping timeout: 252 seconds)
[12:12:58] *** Quits: hendi (sid489601@id-489601.lymington.irccloud.com) (Ping timeout: 252 seconds)
[12:12:58] *** Quits: gibby (sid95320@waterproofcloak/gibby) (Ping timeout: 252 seconds)
[12:13:10] *** Joins: hendi (sid489601@id-489601.lymington.irccloud.com)
[12:13:14] *** Joins: gibby (sid95320@waterproofcloak/gibby)
[12:13:16] *** zerosum is now known as Guest8097
[12:13:28] *** Quits: chipox (~chipox@193.32.127.230) (Quit: Leaving)
[12:13:31] *** Quits: atom32k (~atomekk@user/atom32k) (Ping timeout: 252 seconds)
[12:13:35] *** Joins: vysn (~vysn@user/vysn)
[12:13:38] *** Joins: bertiger (~bertiger@user/bertiger)
[12:13:45] *** Joins: strudl (~strudl@user/strudl)
[12:14:04] *** Quits: pntaylor (~quassel@101.113.66.201) (Ping timeout: 252 seconds)
[12:14:04] *** Quits: elkclone (~elkclone@user/elkclone) (Ping timeout: 252 seconds)
[12:14:08] *** Joins: LarchOye (~LarchOye@spaceweed.spacetechnology.net)
[12:14:16] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[12:14:41] *** Joins: elkclone (~elkclone@user/elkclone)
[12:14:43] *** Joins: tomaw_ (tom@libera/staff/tomaw)
[12:15:15] <Hash> Alice signs the message with her private key and sends it over. (In practice, what is signed is a hash of the message, e.g. SHA-256 or SHA-512.)
[12:15:19] *** Joins: pntaylor (~quassel@101.113.66.201)
[12:15:24] *** Quits: BiggieSmalls (~BiggieSma@user/biggiesmalls) (Quit: Leaving)
[12:15:25] <Hash> Bob receives it and verifies it using Alice's public key. Since Alice's public key successfully verified the message, Bob can conclude that the message has been signed by Alice.
[12:15:32] <Hash> wyre: yes
[12:16:13] <Hash> I just wanted to make that distinction because signing is not encryption.
[12:16:16] *** tomaw is now known as Guest6410
[12:16:16] *** tomaw_ is now known as tomaw
[12:16:33] <wyre> Hash, sure, I think I understand that point
[12:16:35] <Hash> Hash | Sending party will sign the message digest with a private key
[12:17:35] <wyre> Hash, is "message digest" the product of applying the hash algorithm to the message?
[12:17:43] <Hash> Correct
[12:18:33] <wyre> ok, so the RA will validate your identity and when this is done it passes your public key and your identity info to the CA to technically mix these things and issue a certificate, right?
[12:18:49] <Hash> Yes
[12:18:52] <wyre> and you say this is a simple mix with no extra processing
[12:18:55] *** Joins: y04nn (~y04nn@193.32.127.238)
[12:19:19] <Hash> Well, you can easily find out by becomign your own CA and sining your own certificate.
[12:19:32] <Hash> https://stackoverflow.com/questions/10175812/how-to-generate-a-self-signed-ssl-certificate-using-openssl
[12:19:34] <secbot> ^ How to generate a self-signed SSL certificate using OpenSSL? - Stack Overflow
[12:19:56] <Hash> Then you can examine each file at each step to see how things work.
[12:20:03] <Hash> You can also use letsencrypt for practice.
[12:20:07] *** Quits: Guest6410 (tom@libera/staff/tomaw) (Ping timeout: 630 seconds)
[12:20:19] <wyre> I'm actually using letsencrypt
[12:20:20] *** Joins: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name)
[12:20:39] <wyre> but I don't understand very well the rol of letsencryp in all of this
[12:20:58] <wyre> it's apparently a tool to automate this process, right?
[12:21:12] <Hash> It's much more than that.
[12:21:21] <Hash> It's a free CA for the public.
[12:21:24] <Hash> Non commercial.
[12:21:33] <wyre> from IEEE, right?
[12:21:42] <Hash> You can obtain SSL certificates and make your site https for free
[12:21:44] <Hash> Correct
[12:21:54] <Hash> I think it was sponsored or funded or something by them once.
[12:24:49] *** Joins: BiggieSmalls (~BiggieSma@user/biggiesmalls)
[12:25:01] <Hash> To answer your question from earlier
[12:25:04] <Hash> The primary role of the CA is to digitally sign and publish the public key bound to a given user. This is done using the CA's own private key, so that trust in the user key relies on one's trust in the validity of the CA's key.
[12:25:04] *** Joins: ds-ac (~ds-ac@user/ds-ac)
[12:26:05] <wyre> Hash, then the CA is signing the certificate! 🤔
[12:26:17] <Hash> Yes
[12:26:54] <wyre> 10:42 <wyre> so the certificate just contains the public key and identity information of who asks for it with no encryption, signing or extra processing?
[12:27:03] <wyre> so that's not right
[12:27:15] <wyre> because the CA is actually signing the issued certificate!
[12:27:53] *** Quits: chiastre (~chiastre@user/chiastre) (Ping timeout: 252 seconds)
[12:28:07] <Hash> piou | Hash: but it's not that either <- what was this in relation to?
[12:28:15] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Ping timeout: 268 seconds)
[12:29:31] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[12:29:46] <Hash> wyre: the certificate request is not the same as the certificate itself.
[12:30:23] <piou> Hash: that one was a misread on my part of this message: Sending party will sign the message digest with a private key
[12:30:43] <Hash> Np
[12:30:59] <Hash> It's 3AM anyway. I may be too tired to think
[12:32:43] <wyre> lol, here in Europe are 11AM
[12:32:55] <wyre> I'm at my workplace 😆
[12:32:59] <piou> still too early to think
[12:33:05] <wyre> sure
[12:34:04] <wyre> Hash, so the CA is signing the CSR?
[12:34:11] <wyre> but not the cert?
[12:36:01] *** Quits: cpluspunch (~znc@104.200.132.186) (Ping timeout: 252 seconds)
[12:36:18] *** Joins: masterkorp6 (~masterkor@user/masterkorp)
[12:36:46] *** Joins: cpluspunch (~znc@104.200.132.186)
[12:36:48] <wyre> apparently the CSR is issued against the RA, not the CA 🤔
[12:36:56] *** Joins: `Tim (~zenguin@user/zenguin)
[12:37:11] <wyre> s/against/to/
[12:37:14] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 250 seconds)
[12:37:34] *** Quits: tkob (tkob@shell.xshellz.com) (Ping timeout: 252 seconds)
[12:37:35] *** Quits: cisco87_ (~quassel@lnxg33k.com) (Read error: Connection reset by peer)
[12:37:38] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: No Ping reply in 180 seconds.)
[12:37:43] <wyre> then RA sends this CSR to CA, but I don't see the need of signing this CSR 🤔
[12:37:46] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: Ping timeout (120 seconds))
[12:37:50] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[12:38:14] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[12:38:22] *** Joins: tkob (tkob@shell.xshellz.com)
[12:38:26] *** Quits: masterkorp (~masterkor@user/masterkorp) (Ping timeout: 252 seconds)
[12:38:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[12:38:26] *** Quits: romare (~st.pauli@user/romare) ()
[12:38:26] *** masterkorp6 is now known as masterkorp
[12:38:38] *** Joins: cisco87 (~quassel@lnxg33k.com)
[12:39:02] *** Joins: ult_ (~lamer@107.170.37.27)
[12:40:48] *** Joins: mnemonic (~semeion@user/semeion)
[12:43:28] <Hash> http://cs.indstate.edu/~rafshar/documents/paper2.pdf here's a good paper
[12:43:36] <wyre> also ... I don't understand why in all this process you need a key pair, because apparently you are not using your private key
[12:43:42] <wyre> you are just sending your public key
[12:44:25] *** Joins: ds-ac_ (~ds-ac@user/ds-ac)
[12:44:27] *** Quits: horseface (~horseface@125-63-20-223.ip4.superloop.com) (Remote host closed the connection)
[12:44:38] *** Joins: horseface (~horseface@125-63-20-223.ip4.superloop.com)
[12:44:39] *** Quits: ult (~lamer@107.170.37.27) (Ping timeout: 252 seconds)
[12:44:39] *** Quits: abraham (~abraham@143.244.185.86) (Ping timeout: 252 seconds)
[12:44:39] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (Ping timeout: 252 seconds)
[12:44:39] *** Quits: ds-ac (~ds-ac@user/ds-ac) (Ping timeout: 252 seconds)
[12:44:55] <wyre> I mean, your public key with your personal info
[12:45:06] <Hash> wyre: public/private keys are generated via a mathematical relation.
[12:45:11] *** NGC3982_ is now known as NGC3982
[12:45:29] <Hash> digital certificate certifies that you are indeed the owner of a public key.
[12:45:30] <Hash> That's it.
[12:45:51] *** Joins: fikran (~fikran@user/fikran)
[12:46:01] <Hash> The key that the world will usea to encrypt data to send to you, that key is certified to be yours. That's what the certificate is
[12:46:31] *** Quits: horseface (~horseface@125-63-20-223.ip4.superloop.com) (Client Quit)
[12:46:42] <Hash> Then people know, that if they use this public key to encrypt something to send to you, you're the correct authentic person who can decrypt it using your private key.
[12:46:58] <Hash> The data from your browser is encrypted with the public key
[12:47:01] <wyre> oh, so when something sends information to the receiver it's using the public key inside the certificate to encrypt that info and the receiver will be able to decrypt that message with its private key, right?
[12:47:08] <Hash> The data is decrypted on the server with a private key
[12:47:24] <Hash> The server encrypts the data with their private key when sending to you
[12:47:38] <Hash> You use their public key to decrypt the data, and no one else can decrypt it.
[12:47:45] <wyre> so when I connect to a https site, actually I'm using the public key in the certificate to encrypt the traffic I'm sending to the website, right?
[12:47:57] <Hash> Yes
[12:48:09] <Hash> The private key stored on the sever will decrypt that traffic.
[12:48:19] <wyre> oh, now I see
[12:48:26] <Hash> The world needs to know whom a public key belongs to
[12:48:33] <Hash> Say you make a publickey called ABC1
[12:48:43] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[12:48:45] <wyre> so basically the rest of things in PKI are actually to certify the identity of someone who owns a keypair, right?
[12:49:05] *** Joins: otisolsen70_ (~otisolsen@80.80.4.2)
[12:49:22] *** Joins: horseface (~horseface@125-63-20-223.ip4.superloop.com)
[12:50:09] <Hash> What prevents me from being the person ABC1 and making another key?
[12:50:09] <Hash> If two people can claim they are the owner of a public key, you can see the problem
[12:50:09] <Hash> This is where a CA comea in. An actual authority, that says, ok you are this person, and this is your key tied to this identity. Great. I'll sign it with my private key. Now it's stamped and official.
[12:50:09] <Hash> You are this person.
[12:50:09] *** Quits: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net) (Remote host closed the connection)
[12:50:09] <Hash> This is your birth certificate.
[12:50:09] <Hash> Does that makes sense?
[12:50:18] *** Quits: y04nn (~y04nn@193.32.127.238) (Remote host closed the connection)
[12:50:30] *** Joins: y04nn (~y04nn@193.32.127.238)
[12:50:31] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6)
[12:50:33] <Hash> There are two parts
[12:50:39] <Hash> There is encryption and there is signing
[12:50:51] <Hash> There is protecting the data, and then there is knowing the data is coming from a trusted party
[12:50:59] <Hash> Certificates are the 2nd part
[12:51:05] <Hash> They tell people are you are a tursted party
[12:51:18] <Hash> certificates have nothing to do with actual encryption or protection of data.
[12:51:38] <Hash> https://en.wikipedia.org/wiki/Public_key_certificate
[12:51:38] <secbot> ^ In cryptography, a public key certificate, also known as a digital certificate or identity certificate, is an electronic document used to prove the ownership of a public key. The certificate includes information about the key...
[12:52:08] *** Quits: otisolsen70 (~otisolsen@80.80.4.2) (Ping timeout: 252 seconds)
[12:52:20] <Hash> https://en.wikipedia.org/wiki/Public_key_certificate#Sample_certificate You can see what a certificate looks like here
[12:52:20] <secbot> ^ Public key certificate - Wikipedia
[12:52:40] <Hash> https://en.wikipedia.org/wiki/X.509 Also read this
[12:52:41] <secbot> ^ In cryptography, X.509 is an International Telecommunication Union standard defining the format of public key certificates. X.509 certificates are used in many Internet protocols, including TLS/SSL, which is the basis for HTTPS, the...
[12:54:05] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[12:54:33] <wyre> 11:20 <Hash> This is where a CA comea in. An actual authority, that says, ok you are this person, and this is your key tied to this identity. Great. I'll sign it with my private key. Now it's stamped and official. <-- so the CA is actually signing in the certificate!
[12:54:50] <Hash> Yes
[12:55:12] <wyre> Hash, but you said the contrary before 🤔
[12:55:14] <Hash> Signing is like getting it ... notorized by a notory authority in town.
[12:55:24] <Hash> What did I say?
[12:55:34] <Hash> I'm exhausted at 330am.
[12:55:39] <wyre> well, you said that CA is not signing the certificates
[12:55:42] <Hash> Perhaps I can help you another time.
[12:55:45] <Hash> I'm starting to lose patience.
[12:55:47] <Hash> Good night.
[12:56:07] <wyre> oh, sorry, Hash, get rest
[12:56:39] <Hash> You I think asked if they were encrypting the certificate or something
[12:56:43] <Hash> To which I said no.
[12:56:57] <wyre> no I said **signing**
[12:56:57] <Hash> But the cerificate authority has to sign. Signing is done using private keys.
[12:57:15] <wyre> I never thought the CA was encrypting the cert
[12:57:15] <Hash> That's how the CA is trusted. Becuase of their private keys.
[12:57:20] <Hash> Otherwise anyone can pretend to be a CA.
[12:57:45] <wyre> then I think now I see it
[12:57:49] <Hash> Fantastic.
[12:57:52] <Hash> :)
[12:58:02] <Hash> Sorry for lack of patience if I had any. I'm exhausted.
[12:58:31] <wyre> don't worry Hash, go to rest and thank you very much 😀
[12:58:33] <Hash> And I'm also not infallible, and human, an prone to erreneous typing.
[12:58:39] <Hash> You are most welcome!
[12:58:47] <wyre> actually you had a lot of patience 😉
[12:59:09] <Hash> I want to be a professor maybe one day
[12:59:17] <Hash> Trying to go for Masters and then PHD in comp. sci
[12:59:25] <Hash> Just be academic for the rest of my life. Ha
[12:59:38] *** Joins: tesseract (~tesseract@user/tesseract)
[13:00:06] <wyre> I'm sure you will get it 😁
[13:01:02] <Hash> Thanks
[13:01:19] <wyre> so ... when you sign your own certificate RA and VA aren't needed? 🤔
[13:05:35] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:08:45] *** Joins: BadKarma (~BadKarma@user/badkarma)
[13:10:10] *** Joins: soulisson (~soulisson@user/soulisson)
[13:10:12] <soulisson> Hello
[13:10:13] <jm18> wyre: correct, but it will not be trusted (by default)
[13:10:53] <jm18> hello soulisson
[13:11:09] *** Joins: shailangsa_ (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[13:11:09] <soulisson> jm18, how are you?
[13:11:16] <wyre> jm18, sure, the browser won't have the root certificate, right?
[13:12:20] *** Quits: wowi4242 (~wowi42@5.30.23.58) (Ping timeout: 250 seconds)
[13:12:28] *** Joins: shad (~shad@user/shad)
[13:14:13] *** Joins: wowi4242 (~wowi42@5.30.23.58)
[13:14:58] <soulisson> I have a question about the meaning of the word response in "EndPoint Detection and Response". Does it refer to automatic response of the tool to prevent malicious actions of the threat or is it something else?
[13:16:33] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[13:19:28] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 252 seconds)
[13:23:41] *** EPic_ is now known as APic
[13:31:59] *** Joins: y04nn (~y04nn@193.32.127.238)
[13:32:14] *** Quits: y04nn (~y04nn@193.32.127.238) (Remote host closed the connection)
[13:44:24] <jm18> wyre: yes
[13:45:27] <jm18> soulisson: yes, but depending on the context it could also refer to the response taken due to alerts from the software
[13:45:38] <wyre> so ... when I generate a self-signed cert ... I have a key.pem and a cert.pem, I need openssl to get the cert.pem info readable
[13:45:49] <wyre> so ... is this info hashed?
[13:47:55] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[13:49:09] *** Joins: lostpackets (~lostpacke@185.97.93.7)
[13:49:36] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:51:12] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[13:52:28] <soulisson> jm18, ok, so the response from the soc for instance?
[13:55:41] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[13:58:36] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[14:00:10] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[14:01:18] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[14:02:51] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[14:05:07] *** Quits: BadKarma (~BadKarma@user/badkarma) (Ping timeout: 252 seconds)
[14:05:17] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 252 seconds)
[14:05:28] *** Quits: BiggieSmalls (~BiggieSma@user/biggiesmalls) (Quit: Leaving)
[14:06:38] *** Joins: vysn (~vysn@user/vysn)
[14:08:52] *** Joins: mnemonic (~semeion@user/semeion)
[14:10:09] *** Joins: soulisson_ (~soulisson@160.178.100.124)
[14:10:50] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[14:10:54] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[14:12:17] *** Joins: chiastre (~chiastre@user/chiastre)
[14:12:51] *** Joins: BadKarma (~BadKarma@user/badkarma)
[14:12:52] *** Quits: soulisson (~soulisson@user/soulisson) (Ping timeout: 252 seconds)
[14:12:59] *** Quits: pntaylor (~quassel@101.113.66.201) (Ping timeout: 252 seconds)
[14:15:28] *** Joins: pntaylor (~quassel@101.112.15.145)
[14:17:11] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[14:18:55] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[14:19:57] *** Joins: BUSY (~BUSY@user/busy)
[14:20:13] *** Quits: otisolsen70_ (~otisolsen@80.80.4.2) (Quit: Leaving)
[14:20:35] *** Quits: lostpackets (~lostpacke@185.97.93.7) (Read error: Connection reset by peer)
[14:21:37] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 252 seconds)
[14:24:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[14:25:13] *** Joins: shad (~shad@user/shad)
[14:27:30] *** Quits: soulisson_ (~soulisson@160.178.100.124) (Quit: Leaving)
[14:29:31] <wyre> oh, apparently it's just encoded, I see
[14:29:54] <wyre> but is not the same hashing than encoding? 🤔
[14:30:24] <wyre> oh, hashing cannot be reversed, I see
[14:30:34] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[14:34:47] *** Joins: mnemonic (~semeion@user/semeion)
[14:35:10] *** Quits: rsx (~dummy@ppp-188-174-153-249.dynamic.mnet-online.de) (Quit: rsx)
[14:36:36] *** Joins: BiggieSmalls (~BiggieSma@user/biggiesmalls)
[14:37:46] *** Joins: Pickchea (~private@user/pickchea)
[14:41:31] <jm18> wyre: yeah pem files are base64 encoded. but you can also have binary encoded certificates like .der
[14:42:18] <wyre> jm18, what about .crt files?
[14:42:23] <wyre> are also encoded?
[14:45:31] <jm18> same as .pem
[14:46:28] *** Joins: notouchpad (~notouchpa@gsouzaba.saclay.inria.fr)
[14:46:30] <wyre> now I'm wondering ... do you know some article about technical particularities of signing process?
[14:47:04] <wyre> I mean, unlike encryption (which modifies the message) apparently signing process doesn't modifies the message
[14:47:13] <wyre> but it has to append something to it
[14:47:39] <wyre> because the unsigned message includes the signature ... so ... how is this done?
[14:47:52] <wyre> what's actually that signature?
[14:48:25] <wyre> or how is it generated?
[14:51:25] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:53:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[14:54:11] *** Quits: HyN0X (~HyNoX@37.162.183.176) (Ping timeout: 252 seconds)
[14:55:33] *** Joins: fikran (~fikran@user/fikran)
[14:55:45] *** Joins: HyN0X (~HyNoX@37.163.139.139)
[15:00:06] *** Joins: CombatVet_ (~c4@user/combatvet)
[15:00:33] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[15:00:45] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[15:00:54] *** CombatVet_ is now known as CombatVet
[15:02:51] *** Quits: BadKarma (~BadKarma@user/badkarma) (Quit: leaving)
[15:03:33] *** Joins: user133769 (~Jaitoon@188.241.156.59)
[15:04:58] *** Quits: user133769 (~Jaitoon@188.241.156.59) (Client Quit)
[15:05:17] *** Joins: user133769 (~Jaitoon@188.241.156.59)
[15:05:25] *** Quits: user133769 (~Jaitoon@188.241.156.59) (Remote host closed the connection)
[15:05:43] *** Joins: jaitoon (~Jaitoon@188.241.156.59)
[15:05:58] *** Quits: YHVH (~yhvh@2601:982:8300:8090:213a:8f75:6baa:833e) (Ping timeout: 260 seconds)
[15:06:46] *** Quits: cpluspunch (~znc@104.200.132.186) (Ping timeout: 252 seconds)
[15:06:50] *** Joins: cpluspunch_ (~znc@104.200.132.172)
[15:11:13] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:21c1:d5b9:c26e:f0ce)
[15:11:24] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:13:10] *** Joins: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca)
[15:15:52] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[15:16:26] *** Quits: cunne (~cunne@user/cunne) (Read error: Connection reset by peer)
[15:17:53] *** Joins: YHVH (~yhvh@2601:982:8300:8090:19e5:eb98:24ba:a6a3)
[15:24:29] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:26:02] *** Quits: BiggieSmalls (~BiggieSma@user/biggiesmalls) (Quit: Leaving)
[15:28:42] *** Joins: karakum (~mcramer@dynamic-077-013-008-001.77.13.pool.telefonica.de)
[15:32:59] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[15:37:32] <wyre> oh, so the signature is basically an encrypted copy of the message ...
[15:37:48] *** Joins: BadKarma (~BadKarma@user/badkarma)
[15:38:48] <piou> wyre: no, a signature is not an encrypted copy of the message
[15:39:05] <wyre> piou, according to this it is https://en.wikipedia.org/wiki/Digital_signature#/media/File:Private_key_signing.svg
[15:39:06] <secbot> ^ Digital signature - Wikipedia
[15:39:21] <wyre> "Alice signs a message—"Hello Bob!"—by appending to the original message a version encrypted with her private key."
[15:40:02] <piou> wyre: that description is false, and probably only left there because the schema is correct (by not talking about encryption)
[15:40:22] <wyre> piou, so ... what's the signature?
[15:40:48] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[15:41:09] <piou> wyre: signing is its own operation which is different from encryption (but shares similarities). When signing a message you generally only sign a hash of that message to limit its size. The actual operation of signing differs greatly between algorithms, just as different encryption algorithms differ greatly.
[15:42:18] <wyre> I see
[15:42:22] *** Parts: Tuor (~quassel@user/tuor) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:42:31] <piou> What is constant is that signing takes two inputs (a private key and something to sign, in this case the hash of the message) and outputs a signature which is essentially an information that cannot be reasonnably forged without access to the private key and message, but can be verified using the public key and message.
[15:42:37] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[15:42:49] *** Joins: shayne_ (~shayne@user/shayne)
[15:43:04] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:43:46] *** Quits: shayne (~shayne@user/shayne) (Ping timeout: 260 seconds)
[15:44:07] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 252 seconds)
[15:46:09] *** Quits: grobi (~grobi@user/grobi) (Quit: "baby i'm bored ♞▀▄▀▄♝▀")
[15:47:51] <wyre> thank you piou 😀
[15:49:03] <wyre> now I was wondering ... if I use the public key from a certificate (i.e. from a webserver) to encrypt the traffic I'm sending to that webserver ... how is able the webserver of encrypting the back traffic if I've not provided to it a public key to do this?
[15:49:41] <piou> wyre: it's not, but that's why these certificates aren't there to encrypt the communication
[15:49:45] *** gibby is now known as SpookyGibby
[15:50:15] <wyre> so traffic over TLS is not encrypted?
[15:50:16] <jm18> wyre: the signature is a hash of the data encrypted using the signers private key... you can verify it by hashing the data and comparing that hash to the hash from the signature decrypted using the signers public key
[15:50:24] <piou> wyre: it is, but not that way
[15:51:12] <wyre> piou, for ssh it happens in that way (apparently) 🤔
[15:51:19] <piou> no
[15:51:37] <wyre> sure? apparently the fingerprint in known_hosts is the public key of the server
[15:51:38] *** shayne_ is now known as shayne
[15:51:50] <piou> yes, give me 10s I'm writting it all down
[15:51:56] <wyre> and I gave my public key to the server in authorized_keys file
[15:52:16] *** Quits: Buggy (Buggy@shelltalk.net) (Remote host closed the connection)
[15:52:17] <wyre> so both would have the public key of each other 🤔
[15:53:23] <jm18> wyre: asymetric cryptography is cpy intensive compared to symetric cryptography. the public/private key pairs are just used at the start of a tls session to negotiate a shared key for symetric cryptography (where the same key is used to encryption and decryption)
[15:53:35] <piou> wyre: generally you never actually use asymmetric cryptography to exchange messages. You use it to exchange limited informations such as keys (to allow symmetric encryption which is much easier and faster) or in this case to verify that the server you're talking to is the right one. Deciding on a key to use for encryption is done by another part of the protocol (using diffie-hellman, an algorithm
[15:53:41] <piou> that allows both parties to agree on a random number without any eavesdropper being able to know which), and then this key is used to encrypt the communication. The certificate part is necessary because diffie-hellman can only protect against passive eavesdroppers, so if the attacker were to intercept the traffic they could control the key and decrypt the communication. That's why you first make
[15:53:47] <piou> sure that you're effectively talking to the correct server by checking their certificate.
[15:54:10] <piou> wyre: and SSH is very similar, if you look at the configuration of your SSH server you'll see separate lists of algorithms for client validation, key exchange and actual encryption
[15:55:20] <piou> wyre: this 3-step process (validate who you're talking to, agree on a key, encrypt the communication) is very very standard nowadays.
[15:56:16] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[15:56:54] *** Quits: pntaylor (~quassel@101.112.15.145) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:57:27] *** Joins: mnemonic (~semeion@user/semeion)
[15:57:35] <piou> And of course encrypting isn't enough, you also need to make sure that nobody tampered with the encrypted messages, so there are algorithms that focus on this integrity check (but that's generally integrated to the encryption suite nowadays)
[15:58:07] *** Quits: Tx3MGiLR (~D5eWBzGK@74.5.153.221) (Quit: Leaving)
[15:58:11] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Quit: kongzilla)
[15:58:18] <jessicara> or, just a hash, inside the encrypted message itself
[15:58:41] <piou> jessicara: that's not advised at all, but it is possible
[15:59:01] <jessicara> why not advised?
[15:59:18] <jessicara> isn't exactly going to be easy to break something like sha256 for a while
[16:00:22] <jessicara> signatures often get to signing the hash of a message too
[16:00:22] <piou> jessicara: because if you do that then you must first decrypt the message and only then are you able to check its authenticity. The fact that you manipulate much more of the message before being able to make sure that it's ok has historically been source of enough problems that it's now being called the doom principle: you really want to authenticate first.
[16:00:43] <piou> https://moxie.org/2011/12/13/the-cryptographic-doom-principle.html
[16:00:44] <secbot> ^ Moxie Marlinspike >> Blog >> The Cryptographic Doom Principle
[16:00:47] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[16:01:20] <Apachez-> usually the encryption itself is often good, well on paper
[16:01:26] <Apachez-> what fails is often the implementation
[16:01:30] <Apachez-> or key generation
[16:01:33] <Apachez-> or key handling etc
[16:01:37] <piou> jessicara: it's not technically flawed, you can absolutely design a system that mac-then-encrypt, but it is not advised because the risk of error is higher
[16:01:40] *** Apachez- is now known as Apachez
[16:01:54] <Apachez> like 7zip some years ago.. using aes256
[16:02:09] <piou> And modern crypto is all about reducing errors
[16:02:17] <Apachez> BUT... keys generated were 128bit long (which they doubled) and 64 bits of these 128 were always 0
[16:02:30] <Apachez> so aes256 was in reality aes64 (if such had existed)
[16:02:34] *** Joins: pntaylor (~quassel@101.112.15.145)
[16:02:41] <Apachez> meaning it took less than an hour to bruteforce using a modern gpu
[16:02:45] <Apachez> "oopsie"
[16:03:15] <Apachez> similar case with some other popular encryption tool (forgot its name) where if you plotted generated keys in a 0->1 diagram you would see that they cluster
[16:03:37] <piou> yeah, I was shocked when I read that, I had actually skimmed through the AES implementation of 7zip before but I guess I was blinded by my presumption that it was going to be good and I didn't notice anything
[16:03:39] <Apachez> normally the randomness of keygen should be so random so when plotted you would have a more or less even distribution in a 0->1 diagram
[16:03:49] <Apachez> but these keys clustered around like 4-5 spots
[16:03:50] *** portalrat_ is now known as portalrat
[16:05:07] <Apachez> so again... it used (if I recall it correctly) AES256 which in theory should take gazillion of years to brute force... but due to broken randomness when creating keys 99.95% or so of the keys where clustered which gave that you had a probability at 99.95% or so to bruteforce the message in less than a few hours rather than gazillion of years
[16:05:10] <Apachez> and so on
[16:05:13] <jessicara> yeah this sounds like a bad idea in combination with cbc
[16:05:46] <Apachez> other is like stuxnet and flame who utilized the fact that windows and linux handles \0 chars differently in files
[16:06:08] <Apachez> so you could create fake ssl certs but they would bring the same fingerprint as real ones
[16:06:18] <piou> Yeah, just use GCM-SIV or GCM with AES, there's really no reason to use anything else (and if you have one, it's probably wrong, and if it's correct then you did the good thing double-checking)
[16:06:27] <Apachez> and suddently you could bypass the whitelisting of apps in windows
[16:06:31] <jessicara> yeah i think ideally it would be outside if it's a signed hash
[16:06:37] *** Joins: d34dh0r53 (~d34dh0r53@104-191-10-248.lightspeed.snantx.sbcglobal.net)
[16:06:38] <piou> A nice one https://medium.com/asecuritysite-when-bob-met-alice/not-playing-randomly-the-sony-ps3-and-bitcoin-crypto-hacks-c1fe92bea9bc
[16:06:39] <secbot> ^ Not Playing Randomly: The Sony PS3 and Bitcoin Crypto Hacks | by Prof Bill Buchanan OBE | ASecuritySite: When Bob Met Alice | Medium
[16:06:51] <Apachez> which is why assurance is a big thing when it comes to comsec
[16:07:02] <jessicara> which may or may not be possible in a given situation
[16:07:07] <piou> tl;dr: sony implemented the xkcd prng
[16:07:22] <median> heh
[16:07:40] <Apachez> many comsec implementations started by forking opensource stuff but then they remove unecessary junk (for example heartbleed feature of openssl etc) and then validate all parts including the human part of which devices you put in the keys in that could in theory copy the data and send elsewhere
[16:07:55] <Apachez> piou: 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8... ? ;)
[16:08:04] <Apachez> how do you know its random?
[16:08:06] <Apachez> you dont...
[16:08:14] <Apachez> but a hint might be that its the same value hours later =)
[16:08:39] <piou> https://xkcd.com/221/ -> they litterally always used 4
[16:08:39] <secbot> ^ xkcd: Random Number
[16:08:56] <Apachez> :D
[16:09:17] <Apachez> https://dilbert.com/search_results?terms=Random+Number+Generator
[16:09:18] <secbot> ^ Random Number Generator Comic Strips | Dilbert by Scott Adams
[16:09:43] *** Joins: szarkanet (~szarka@2001-48F8-9004-E05-71C7-F1C3-1988-A525-dynamic.midco.net)
[16:10:39] <Apachez> Dual_EC_DRBG is a classic example of broken random
[16:10:43] <Apachez> or predicatble random
[16:12:15] <Apachez> and then you have stuff like reuse of keys which is why you normally want a new session key (the actual key being used) to be regenerated for every 1Gbyte or so of data that has passed
[16:12:21] <Apachez> or after 1 hour or such
[16:12:26] <Apachez> whatever comes first
[16:12:36] *** Quits: szarkaorg (~szarka@2001-48F8-9004-E05-20CC-D9AB-C54C-4B67-dynamic.midco.net) (Ping timeout: 245 seconds)
[16:12:53] *** Quits: _inky (~inky_@5.77.129.249) (Ping timeout: 252 seconds)
[16:13:17] <Apachez> and after all that have passed you still have shit like this https://www.rapid7.com/blog/post/2015/12/20/cve-2015-7755-juniper-screenos-authentication-backdoor/
[16:13:21] <secbot> ^ CVE-2015-7755: Juniper ScreenOS Authentication Backdoor | Rapid7 Blog
[16:19:05] *** Joins: shad (~shad@user/shad)
[16:22:27] *** Quits: vinumsv89 (~vinumsv@171.61.212.94) (Quit: The Lounge - https://thelounge.chat)
[16:24:40] *** Joins: vinumsv89 (~vinumsv@171.61.212.94)
[16:27:40] *** Joins: _inky (~inky_@178.78.141.125)
[16:30:33] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:31:07] *** Joins: AnpMouse (~kuballe@anyone.tjorn.se)
[16:31:40] *** Quits: AnpMouse (~kuballe@anyone.tjorn.se) (Remote host closed the connection)
[16:33:50] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:35:19] *** Quits: AnpMoot (~kuballe@anyone.tjorn.se) (Ping timeout: 268 seconds)
[16:38:15] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:44:41] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[16:45:36] *** Joins: elkclone (~elkclone@node-1w7jr9ppwkd11jes7mmz7up90.ipv6.telus.net)
[16:45:36] *** Quits: elkclone (~elkclone@node-1w7jr9ppwkd11jes7mmz7up90.ipv6.telus.net) (Changing host)
[16:45:36] *** Joins: elkclone (~elkclone@user/elkclone)
[16:45:53] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 252 seconds)
[16:47:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[16:47:25] *** Quits: d34dh0r53 (~d34dh0r53@104-191-10-248.lightspeed.snantx.sbcglobal.net) (Ping timeout: 252 seconds)
[16:47:25] *** Quits: notouchpad (~notouchpa@gsouzaba.saclay.inria.fr) (Ping timeout: 252 seconds)
[16:48:58] *** Joins: shad (~shad@user/shad)
[16:56:13] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[16:58:48] *** Quits: Brocker (~NoBody@user/brocker) (Quit: ZNC 1.8.2 - https://znc.in)
[16:59:00] *** Joins: Brocker (~NoBody@2002:95ca:ed03::95ca:ed03)
[16:59:00] *** Quits: Brocker (~NoBody@2002:95ca:ed03::95ca:ed03) (Changing host)
[16:59:00] *** Joins: Brocker (~NoBody@user/brocker)
[17:01:43] *** Quits: karakum (~mcramer@dynamic-077-013-008-001.77.13.pool.telefonica.de) (Ping timeout: 252 seconds)
[17:02:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:03:09] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:04:53] *** Joins: fikran (~fikran@user/fikran)
[17:06:11] *** Quits: BOKALDO (~BOKALDO@46.109.203.51) (Quit: Leaving)
[17:06:49] *** Joins: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9)
[17:08:15] *** Joins: s1gyn (~s1gyn@user/s1gyn)
[17:08:50] *** Quits: electr0n_ (~electr0n@about/security/founder/electr0n) (Remote host closed the connection)
[17:11:37] *** Joins: Buggy (Buggy@Buggy.shelltalk.net)
[17:14:22] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[17:14:28] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 252 seconds)
[17:14:31] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[17:15:15] *** ccp is now known as vonunov
[17:17:40] *** Quits: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9) (Ping timeout: 252 seconds)
[17:18:16] *** Joins: yans (~yans@2a02:8388:4504:1780:b5be:e9d1:8106:a961)
[17:19:20] *** Joins: yans_ (~yans@2a02:8388:4504:1780:7643:a0d5:65d1:7650)
[17:22:12] *** Joins: aranam (~aran@user/aranam)
[17:22:35] *** Joins: smvg (~smvg@85.218.163.88)
[17:22:57] <aranam> I have a website that I secured using letsencrypt but now the website doesn't open with a Did Not Connect: Potential Security Issue error.
[17:23:28] <aranam> and it says that the certificate is invalid.
[17:24:33] <aranam> it says that the certificate issuer is Fortinet
[17:25:14] <aranam> I don't know what Fortinet is but I expect to see Let's Encrypt as the issuer.
[17:25:52] <aranam> I tried to renew the certificate with certbot and it goes with no errors but at the end the certificate I see in the browser is still from Fortinet
[17:25:59] *** Quits: Dlacroix_ (dlacroix@linuxfr.net) (Ping timeout: 252 seconds)
[17:26:29] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:27:02] *** LambdaCo1 is now known as LambdaComplex
[17:27:30] *** Joins: BiggieSmalls (~BiggieSma@user/biggiesmalls)
[17:27:44] *** Quits: smvg (~smvg@85.218.163.88) (Remote host closed the connection)
[17:28:06] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[17:29:53] <tolarz> maybe you need to configure your server accordingly to use the new cert?
[17:30:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:31:15] *** Quits: micronnn (~micronn@user/micronn) (Quit: .)
[17:31:40] *** Joins: micronn (~micronn@user/micronn)
[17:33:09] *** Joins: Dlacroix (dlacroix@linuxfr.net)
[17:33:53] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[17:39:00] *** Quits: BiggieSmalls (~BiggieSma@user/biggiesmalls) (Quit: Leaving)
[17:39:30] *** Joins: mei (~mei@user/mei)
[17:42:25] *** Quits: shayne (~shayne@user/shayne) (Ping timeout: 252 seconds)
[17:42:42] *** Joins: shayne (~shayne@user/shayne)
[17:45:26] *** Joins: signofzeta (~signofzet@user/signofzeta)
[17:46:10] *** Joins: mnemonic (~semeion@user/semeion)
[17:55:24] <babatong> aranam sounds like you're in a network with TLS inspection
[17:55:29] <babatong> so proceed with caution
[17:57:16] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[17:58:42] *** Joins: Oarbonyeb8 (~Oarbonyeb@182-54.dynamonet.fi)
[18:01:44] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[18:03:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[18:04:26] *** Quits: postal_blab (~quassel@2a01:4f8:202:53d9::bad:deed) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[18:04:34] *** Joins: postal_blab (~quassel@2a01:4f8:202:53d9::bad:deed)
[18:09:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:11:57] *** Quits: Rhys (Rhys@help.lux.melted.me) (Killed (zirconium.libera.chat (Nickname regained by services)))
[18:12:10] *** Joins: Rhvs (Rhys@help.lux.melted.me)
[18:12:40] *** Joins: hololeap (~hololeap@user/hololeap)
[18:13:48] *** Joins: Pickchea (~private@user/pickchea)
[18:15:49] *** Joins: chipox (~chipox@37.120.156.246)
[18:16:17] *** Joins: BOKALDO (~BOKALDO@46.109.203.51)
[18:17:30] *** Joins: shad (~shad@user/shad)
[18:21:56] *** ghostbusters2 is now known as ghostbuster
[18:25:11] <ghostbuster> aranam: Fortinet is the company that makes your employers firewall, presumably
[18:25:52] *** Joins: redstarcomrade (uid99592@user/redstarcomrade)
[18:26:00] <skill> aranam: Fortinet proxy products are using Letsencrypt and they did not renew their trust chain before LetsEncrypt's CA3 expired.
[18:26:27] *** Joins: rostero (uid236576@id-236576.lymington.irccloud.com)
[18:26:41] <skill> I should say some proxy products. Not 100% sure if its' all of them
[18:28:37] *** Joins: semeion (~semeion@user/semeion)
[18:28:37] *** mnemonic is now known as Guest608
[18:31:28] *** Quits: Guest608 (~semeion@user/semeion) (Ping timeout: 252 seconds)
[18:41:54] *** Joins: gryphn (~gryphn@154.21.20.154)
[18:42:46] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:43:17] <aranam> babatong: can you elaborate?
[18:43:42] <aranam> so what should I do?
[18:44:57] <babatong> aranam if your endpoint is in a corporate or a public network, the network operator is likely MITMing all TLS traffic and scanning it, hopefully for security purposes
[18:45:34] <aranam> but I tried with multiple networks
[18:45:51] *** Joins: zro (~zro@user/zro)
[18:45:55] <babatong> in that case what skill said is probably more relevant to your situation
[18:46:12] <aranam> I created the website for an NGO related to a university
[18:46:31] <babatong> somewhere in whatever network path you pick there is fortinet hardware if you get a fortinet cert, they aren't a RootCA in their own right
[18:46:38] <aranam> and since they wanted to have the website on a subdomain of that university, they forced us to host the website on the servers of that university
[18:46:51] <skill> aranam: the problem is not your website
[18:47:03] <skill> the problem is that whatever network you're connecting to (or any network) is configured to use a proxy server
[18:47:14] <aranam> I don't think so
[18:47:17] <skill> that proxy server is serving your endpoint with a certificate that is/was signed by letsencrypt's expired CA
[18:47:29] <skill> aranam: does it only happen when you visit that site or any website?
[18:47:32] <aranam> could it be that the issue is from the network of the server that hosts the website?
[18:47:47] <aranam> skill: yes, only that website that is hosted in the servers of that university
[18:48:10] <skill> aranam: so maybe the way that the university has it set up is that they have a fortinet gateway in front of their sites?
[18:48:20] <babatong> yep, but that would be a misconfig for sure
[18:48:20] *** Joins: ExploitedKernel (~Exploited@cpea456cc4f1244-cma456cc4f1242.cpe.net.cable.rogers.com)
[18:48:28] <skill> aranam: https://www.zdnet.com/article/fortinet-shopify-others-report-issues-after-root-ca-certificate-from-lets-encrypt-expires/
[18:48:29] <secbot> ^ Fortinet, Shopify and more report issues after root CA certificate from Lets Encrypt expires | ZDNet
[18:51:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:51:24] *** Joins: rsx (~dummy@ppp-188-174-153-249.dynamic.mnet-online.de)
[18:57:28] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[18:57:46] *** Quits: s1gyn (~s1gyn@user/s1gyn) (Ping timeout: 252 seconds)
[18:59:07] *** Quits: atomekk (~atomekk@user/atom32k) (Remote host closed the connection)
[19:00:56] *** Joins: p0indexter (~alpha@user/p0indexter)
[19:01:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 264 seconds)
[19:02:48] <aranam> thank
[19:02:57] *** Quits: aranam (~aran@user/aranam) (Quit: WeeChat 3.2)
[19:04:33] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[19:06:00] *** Joins: herman (~herman@2603-9000-8500-baa0-f82c-1aa5-428b-8c7a.inf6.spectrum.com)
[19:06:18] *** Joins: Bit_MCP234 (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[19:06:36] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[19:06:42] *** Joins: Null_A (~null_a@2601:645:8700:2290:e9de:2461:c7b1:d42b)
[19:07:26] *** Quits: PonzoSporrigan (~ghost64@user/ghost64) (Read error: Connection reset by peer)
[19:07:44] *** Quits: rtjure (~rtjure@bras-79-132-17-74.comnet.bg) (Ping timeout: 252 seconds)
[19:07:50] <operational> is freenode totally comprimised now? tried to connect and this is the cert i got:
[19:07:52] <operational> subject `CN=munjong.joseon.kr',
[19:07:54] <operational> wat
[19:10:22] *** Quits: HyN0X (~HyNoX@37.163.139.139) (Ping timeout: 252 seconds)
[19:12:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:14:13] *** Joins: fikran (~fikran@user/fikran)
[19:15:14] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_1)
[19:15:33] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:16:49] *** Joins: ghost64 (~ghost64@user/ghost64)
[19:17:08] *** Joins: HyN0X (~HyNoX@37.163.139.139)
[19:17:35] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[19:25:49] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[19:26:34] *** Quits: horseface (~horseface@125-63-20-223.ip4.superloop.com) (Changing host)
[19:26:34] *** Joins: horseface (~horseface@user/horseface)
[19:27:43] *** Joins: cpluspunch (~znc@19.177.181.107.wiredns.net)
[19:28:41] *** Quits: cpluspunch_ (~znc@104.200.132.172) (Ping timeout: 252 seconds)
[19:30:00] *** Joins: s1gyn (~s1gyn@user/s1gyn)
[19:36:05] *** Quits: shad (~shad@user/shad) (Ping timeout: 264 seconds)
[19:37:22] *** Joins: bvb09 (~bvb09@user/bvb09)
[19:41:09] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[19:44:04] *** Joins: h4zel (~hazel@user/h4zel)
[19:45:41] *** Joins: Narrat (~omnius@p200300df5f13e7a606ea56fffe2e7cdc.dip0.t-ipconnect.de)
[19:46:00] *** Quits: bvb09 (~bvb09@user/bvb09) (Quit: WeeChat 3.0)
[19:51:41] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Quit: ZNC - https://znc.in)
[19:52:04] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[19:52:17] *** Joins: digin4 (~digin4@user/digin4)
[19:52:31] *** Joins: bvb09 (~bvb09@user/bvb09)
[19:58:07] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[19:59:46] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Quit: ZNC - https://znc.in)
[20:00:44] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[20:01:11] *** Buggy is now known as Buggys
[20:01:24] *** Joins: grobi (~grobi@user/grobi)
[20:01:46] *** Quits: bvb09 (~bvb09@user/bvb09) (Quit: WeeChat 3.0)
[20:02:37] *** Quits: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[20:02:42] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:21c1:d5b9:c26e:f0ce) (Quit: Textual IRC Client: www.textualapp.com)
[20:03:35] <tomreyn> it's been totally compromized for half a year. now find some other topic to think about.
[20:03:39] *** Quits: kron (~weechat@user/qaph) (Quit: kron)
[20:07:39] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Quit: ZNC - https://znc.in)
[20:07:51] *** Quits: Guest8130 (~il@irc.oh1cgn.fi) (Quit: WeeChat 3.3-dev)
[20:08:00] *** Joins: ilmais1n (~il@irc.oh1cgn.fi)
[20:08:04] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[20:13:37] *** Quits: s1gyn (~s1gyn@user/s1gyn) (Ping timeout: 252 seconds)
[20:14:13] *** Quits: yans (~yans@2a02:8388:4504:1780:b5be:e9d1:8106:a961) (Ping timeout: 252 seconds)
[20:15:34] *** Quits: horseface (~horseface@user/horseface) (Quit: Leaving)
[20:15:51] *** Joins: horseface (~horseface@user/horseface)
[20:16:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:17:40] *** Quits: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:7c2f:f581:770:f830) (Read error: Connection reset by peer)
[20:18:33] *** Joins: fikran (~fikran@user/fikran)
[20:20:46] *** Joins: darksun (~darksun@user/darksun)
[20:22:15] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[20:22:49] *** Joins: ugjka (~ugjka@ugjka.net)
[20:22:51] *** aleph-TA_ is now known as aleph-TA
[20:24:19] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:787a:154e:95b3:e6b9) (Read error: Connection reset by peer)
[20:26:43] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:26:59] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:30:33] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:30:33] *** Joins: SEP (~stephenle@71-135-151-245.lightspeed.frokca.sbcglobal.net)
[20:32:22] *** Quits: _inky (~inky_@178.78.141.125) (Ping timeout: 252 seconds)
[20:32:47] *** riz is now known as BillyZane
[20:33:20] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:35:19] <Apachez> irc.freenode.org	canonical name = irc.freenode.net.
[20:35:19] <Apachez> irc.freenode.net	canonical name = chat.freenode.net.
[20:35:19] <Apachez> chat.freenode.net	canonical name = irc.joseon.kr.
[20:35:19] <Apachez> irc.joseon.kr	canonical name = chat.joseon.kr.
[20:35:19] <Apachez> Name:	chat.joseon.kr
[20:35:28] *** Quits: digin4 (~digin4@user/digin4) (Quit: Leaving)
[20:37:16] <MadCamel> at least it's not .kp
[20:46:47] *** Joins: brutex (~brutex@user/brutex)
[20:47:55] *** Joins: _inky (~inky_@46.36.119.235)
[20:49:47] *** Quits: rsx (~dummy@ppp-188-174-153-249.dynamic.mnet-online.de) (Quit: rsx)
[20:51:34] <lts> Now do irc.libera.net
[20:55:52] *** Joins: ShiftyLogic (~shiftylog@19.177.181.107.wiredns.net)
[20:56:46] <Apachez> irc.libera.net canonical name = irc.libera.net.
[20:56:46] <Apachez> irc.libera.net canonical name = chat.libera.net.
[20:56:46] <Apachez> chat.libera.net canonical name = irc.trap.nsa.gov.
[20:56:46] <Apachez> irc.trap.nsa.gov canonical name = chat.irc.nsa.gov.
[20:58:09] <Apachez> https://projects.tampabay.com/projects/2019/investigations/scientology-clearwater-real-estate/
[20:58:10] <secbot> ^ How Scientology doubled its downtown Clearwater footprint in 3 years | Investigations | Tampa Bay Times
[20:59:58] *** Quits: mooff (~mooff@awful.cooking) (Remote host closed the connection)
[21:00:25] *** Joins: mooff (~mooff@awful.cooking)
[21:02:27] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 265 seconds)
[21:04:05] *** Quits: mooff (~mooff@awful.cooking) (Client Quit)
[21:04:34] *** Joins: mooff (~mooff@awful.cooking)
[21:04:42] <ghostbuster> lets move all scientologists to florida
[21:05:15] *** Quits: mooff (~mooff@awful.cooking) (Client Quit)
[21:05:19] *** Quits: Bit_MCP234 (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[21:05:20] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[21:05:44] *** Joins: mooff (~mooff@awful.cooking)
[21:07:31] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[21:08:26] <median> womp womp https://www.theblockcrypto.com/linked/119310/coinbase-reports-at-least-6000-user-accounts-compromised-through-exploited-authentication-bug
[21:08:27] <secbot> ^ Coinbase reports 6,000 accounts exploited through authentication bug
[21:09:21] *** Quits: mooff (~mooff@awful.cooking) (Client Quit)
[21:10:59] *** Quits: `Tim (~zenguin@user/zenguin) (Ping timeout: 252 seconds)
[21:11:11] *** Joins: sp00n (uid427337@id-427337.ilkley.irccloud.com)
[21:12:03] *** Joins: mooff (~mooff@awful.cooking)
[21:12:49] <grobi>  http://feedproxy.google.com/~r/TheHackersNews/~3/Nk8KgeyQBv0/apple-pay-can-be-abused-to-make.html
[21:12:50] <secbot> (REDIRECT) ^ Apple Pay Can be Abused to Make Contactless Payments From Locked iPhones
[21:13:29] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[21:13:54] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:14:24] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[21:14:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:15:54] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[21:15:59] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[21:16:00] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:495a:535c:75c5:a757)
[21:16:00] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:495a:535c:75c5:a757) (Changing host)
[21:16:00] *** Joins: skapata (~Skapata@user/skapata)
[21:16:15] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Ping timeout: 276 seconds)
[21:16:25] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:16:27] *** Joins: fcinq (~irc@private.proxy.cloud-in.space)
[21:17:10] *** Joins: `Tim (~zenguin@user/zenguin)
[21:17:17] *** Quits: mooff (~mooff@awful.cooking) (Quit: Quit)
[21:17:49] *** Joins: mooff (~mooff@awful.cooking)
[21:18:27] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[21:20:13] *** Quits: pntaylor (~quassel@101.112.15.145) (Ping timeout: 252 seconds)
[21:20:13] *** Joins: semeion (~semeion@user/semeion)
[21:20:46] *** Joins: pntaylor (~quassel@101.113.233.11)
[21:20:58] *** edk is now known as deadk
[21:21:07] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: ars longa vita brevis)
[21:26:09] *** Quits: rostero (uid236576@id-236576.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:28:51] *** Joins: s1gyn (~s1gyn@user/s1gyn)
[21:29:53] *** Quits: s1gyn (~s1gyn@user/s1gyn) (Client Quit)
[21:30:00] *** Henry151_ is now known as Henry151
[21:30:08] *** Joins: s1gyn (~s1gyn@user/s1gyn)
[21:30:57] *** Quits: gryphn (~gryphn@154.21.20.154) (Quit: kthxbye)
[21:35:30] <Hash> Morning
[21:35:36] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:35:52] *** Joins: tangyQED (~tangy@user/tangy)
[21:36:13] <s1gyn> Hola
[21:36:15] *** Quits: tangyQED (~tangy@user/tangy) (Remote host closed the connection)
[21:36:55] <Hash> How's it going?
[21:37:26] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[21:37:39] <s1gyn> pretty good
[21:42:06] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[21:45:35] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[21:47:03] <Apachez> grobi: who would have thought? ;)
[21:47:30] *** Quits: sandipan (~Sandipan@45.249.73.179) (Quit: Leaving)
[21:48:13] *** Quits: chipox (~chipox@37.120.156.246) (Ping timeout: 252 seconds)
[21:48:28] <grobi> the myth of unbreakable apple security is busted, if this is no fake-news, Apachez
[21:48:45] *** Joins: semeion (~semeion@user/semeion)
[21:49:47] <s1gyn> I tried an iphone for a few weeks. Didn't really like the app selection or the UI
[21:50:52] *** Joins: TheRedRipper (~student@user/theredripper)
[21:51:06] <TheRedRipper> hye
[21:51:46] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Quit: ZNC - https://znc.in)
[21:52:27] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[21:52:43] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[21:52:59] *** Joins: jess (~jess@libera/staff/jess)
[21:54:13] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Client Quit)
[21:54:41] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[21:58:20] <Hash> wyre: https://www.youtube.com/watch?v=stsWa9A3sOM
[21:58:20] <secbot> ^ YouTube :: Digital Signatures and Digital Certificates :: Duration: 11:26 :: Views: 85,814 uploaded by Computer Science :: 1,815 likes :: 19 dislikes :: 0 favorites
[21:58:36] *** Joins: rez (rez@user/rez)
[21:59:45] *** Quits: rez (rez@user/rez) (Client Quit)
[22:02:22] <TheRedRipper> o
[22:04:05] <Hydragyrum> irc.libera.net.		120	IN	CNAME	chat.freenode.net.
[22:04:24] <TheRedRipper> stfu bot
[22:04:26] <Hash> they bought libera.net and pointed it to Freenode
[22:04:30] <Hydragyrum> yeah
[22:04:38] <Hash> TheRedRipper: that's my bot :)
[22:04:38] <Hydragyrum> meanwhile the actual name is irc.libera.chat
[22:04:43] <Hash> Yup
[22:04:52] <Hash> They tried to get people who might have mistyped the domain name.
[22:05:00] <Hash> Low level tactic.
[22:05:40] <Hydragyrum> stuff like that is why google owns almost all the mistypes of their name
[22:05:52] <Hash> And how did he decentralize IRC? People just moved to another central server (libera)
[22:06:08] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:06:10] <Hash> Still a central hub (libera) for FOSS
[22:07:17] <mats1> irc aint centralised, its federated
[22:07:19] <Hydragyrum> well OFTC does exist too
[22:07:19] <Hash> What about the problem of cosmic radiation, bit flips, an bit flips in key pairs
[22:07:39] <Hash> What if while just sitting there on disk your private key has a bit flip due to cosmic radiation
[22:07:46] <Hash> Rendering the key useless
[22:07:56] <Hash> Becauswe of the bit flip, it will no longer work with the pub key
[22:08:04] <Hash> So what do you do? Other than backups?
[22:08:12] *** Quits: BadKarma (~BadKarma@user/badkarma) (Quit: :))
[22:08:31] <Hash> https://news.ycombinator.com/item?id=27728287
[22:08:33] <secbot> ^ Single random bit flip causes error in certificate transparency log | Hacker News
[22:08:47] <Hydragyrum> backups, raid, etc.
[22:09:37] <sp00n> you all see that Epik hack where entire VM disk images were taken
[22:09:42] <Hydragyrum> yeah
[22:09:44] <mats1> there are different kids of bit rot among rust and nand
[22:09:44] <s1gyn> pissnet exists too and is more decentralized than joseon
[22:09:52] <Hydragyrum> you need a link to that sp00n?
[22:10:15] <mats1> a reasonable filesystem and ecc goes a long way to managing
[22:10:40] <mats1> the solution amounts to not being poor
[22:11:16] *** Quits: spanishs1 (~spanishsu@70.red-81-33-206.dynamicip.rima-tde.net) (Quit: WeeChat 3.1)
[22:11:32] *** Joins: carolinamoon (~spanishsu@70.red-81-33-206.dynamicip.rima-tde.net)
[22:11:39] *** Joins: chipox (~chipox@185.244.214.60)
[22:12:32] <sp00n> https://www.dailydot.com/debug/anonymous-new-epik-leak/
[22:12:32] <secbot> ^ Anonymous Announces New Leak Of Epik Data
[22:12:47] *** Quits: chipox (~chipox@185.244.214.60) (Client Quit)
[22:13:20] <Hydragyrum> https://ddosecrets.com/wiki/Epik
[22:13:22] <secbot> ^ Epik - Distributed Denial of Secrets
[22:13:37] <Hydragyrum> that's got torrent links
[22:13:59] <Hash> Due to its size, it's incompatible with most torrent clients and many users will have difficulty downloading the data.
[22:14:07] *** Joins: chipox (~chipox@217.138.252.249)
[22:15:10] <Hash> The data includes API keys and plaintext login credentials for not only Epik’s system but for Coinbase, PayPal, and the company’s Twitter account.
[22:15:29] <Hash> Epik CEO Rob Monster... Guy's name is 'monsters'. Ha.
[22:15:45] <Hash> https://www.youtube.com/watch?v=aZ9MFts28XI
[22:15:45] <secbot> ^ YouTube :: Epik CEO Rob Monster responds to hack by Anonymous in live Q&A (Transcript in description) :: Duration: 03:40:11 :: Views: 12,688 uploaded by Mikael Thalen :: 79 likes :: 36 dislikes :: 0 favorites
[22:16:03] *** Quits: ShiftyLogic (~shiftylog@19.177.181.107.wiredns.net) (Read error: Connection reset by peer)
[22:16:37] *** Joins: ShiftyLogic (~shiftylog@19.177.181.107.wiredns.net)
[22:16:58] *** Joins: pmercado (~pmercado@186.107.35.198)
[22:18:08] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[22:18:11] *** Joins: ravan (~ravan@42.201.198.151)
[22:18:11] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[22:18:11] *** Joins: ravan (~ravan@user/ravan)
[22:21:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:24:59] *** Joins: zami3l (~zami3l@194.110.113.46)
[22:25:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[22:26:52] *** Joins: stunder (~stunder@47.146.57.113)
[22:27:13] *** Parts: TheRedRipper (~student@user/theredripper) (bye all!)
[22:27:53] *** Joins: fikran (~fikran@user/fikran)
[22:28:06] *** Joins: Hydra (~Hydragyru@user/hydragyrum)
[22:29:25] *** Quits: Hydragyrum (~Hydragyru@user/hydragyrum) (Read error: Connection reset by peer)
[22:32:18] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[22:33:34] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:34:43] <Hash> https://websec.anti.guru/resources/ More infosec resources added
[22:34:44] <secbot> ^ Infosec & Cybersecurity Educational Resources :: Welcome #Security IRC Community on Libera Chat
[22:36:28] <Hash> Drive zipping 169 books
[22:37:30] *** Joins: y0uwin (f39d25578c@fip.chapril.org)
[22:39:30] *** phasmatodea is now known as satanicpanic
[22:41:01] *** Quits: fcinq (~irc@private.proxy.cloud-in.space) (Ping timeout: 252 seconds)
[22:41:42] *** Quits: Elzington_ (~Elzington@94.198.42.142) (Quit: Leaving)
[22:43:04] *** Quits: ExploitedKernel (~Exploited@cpea456cc4f1244-cma456cc4f1242.cpe.net.cable.rogers.com) (Read error: Connection reset by peer)
[22:44:31] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Quit: ZNC - https://znc.in)
[22:45:28] *** Quits: `St0ner (~services@user/st0ner/x-3205467) (Ping timeout: 252 seconds)
[22:46:54] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[22:52:51] *** Joins: BadKarma (~BadKarma@user/badkarma)
[23:00:16] *** Joins: pepee (~pepee@user/pepee)
[23:01:22] *** Quits: zro (~zro@user/zro) (Ping timeout: 252 seconds)
[23:03:33] *** Joins: zro (~zro@user/zro)
[23:03:34] *** riderjj is now known as juanjo
[23:08:02] *** Quits: ShiftyLogic (~shiftylog@19.177.181.107.wiredns.net) (Remote host closed the connection)
[23:11:19] *** Quits: brutex (~brutex@user/brutex) (Remote host closed the connection)
[23:11:46] *** Quits: BOKALDO (~BOKALDO@46.109.203.51) (Quit: Leaving)
[23:13:05] *** Quits: zro (~zro@user/zro) (Ping timeout: 252 seconds)
[23:14:44] *** Joins: ShiftyLogic (~shiftylog@19.177.181.107.wiredns.net)
[23:14:51] *** Joins: zro (~zro@user/zro)
[23:15:37] *** Quits: Lucanis1 (~Lucanis3@c-76-114-52-57.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[23:15:56] *** Joins: Lucanis1 (~Lucanis3@c-76-114-52-57.hsd1.ca.comcast.net)
[23:16:40] *** Quits: Lucanis1 (~Lucanis3@c-76-114-52-57.hsd1.ca.comcast.net) (Client Quit)
[23:19:01] *** Quits: ShiftyLogic (~shiftylog@19.177.181.107.wiredns.net) (Ping timeout: 252 seconds)
[23:25:28] *** Joins: ShiftyLogic (~shiftylog@19.177.181.107.wiredns.net)
[23:25:49] *** Joins: Lucanis (~Lucanis3@user/lucanis)
[23:28:08] <Hash> https://en.wikipedia.org/wiki/Substitution%E2%80%93permutation_network
[23:28:09] <secbot> ^ In cryptography, an SP-network, or substitution–permutation network, is a series of linked mathematical operations used in block cipher algorithms such as AES, 3-Way, Kalyna, Kuznyechik, PRESENT, SAFER, SHARK, and Square. Such a...
[23:30:10] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[23:30:48] *** Quits: chipox (~chipox@217.138.252.249) (Quit: Leaving)
[23:31:17] *** Joins: somlis (~somlis@user/somlis)
[23:31:20] *** Joins: chipox (~chipox@185.45.15.217)
[23:34:21] *** Joins: Auron (~Auron956@user/auron)
[23:34:47] *** Joins: spare[h] (~daoioukz5@user/spareproject)
[23:38:20] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[23:47:37] *** Quits: cpluspunch (~znc@19.177.181.107.wiredns.net) (Ping timeout: 252 seconds)
[23:47:50] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:48:41] *** Joins: cpluspunch (~znc@66.115.146.228)
[23:51:04] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:55:19] *** Quits: spare[h] (~daoioukz5@user/spareproject) (Remote host closed the connection)
[23:56:37] *** ryt_ is now known as ryt
[23:56:51] *** Joins: spare[h] (~daoioukz5@user/spareproject)
[23:57:04] *** Joins: deka[m] (~dekadekaa@2001:470:69fc:105::1:973)
[23:59:47] *** Quits: Null_A (~null_a@2601:645:8700:2290:e9de:2461:c7b1:d42b) (Remote host closed the connection)
