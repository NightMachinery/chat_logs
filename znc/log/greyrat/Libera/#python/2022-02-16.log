[00:00:29] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[00:00:44] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[00:00:47] *** Joins: dme86 (~dan@user/dan86)
[00:02:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[00:04:13] *** Joins: Betal (~Betal@user/betal)
[00:04:47] *** Joins: parv (~quass@user/parv)
[00:04:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[00:05:47] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Ping timeout: 250 seconds)
[00:05:54] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[00:06:08] *** Joins: JanC (~janc@user/janc)
[00:06:24] <jinsun> extra args is a problem yeah, might be possible with paramspec haven't tried
[00:06:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:06:52] <jinsun> the simple case with same args works with Akuli's hack https://mypy-play.net/?mypy=latest&python=3.10&gist=b07c7456af261462de25d3d481f08fde&flags=strict
[00:07:39] *** evanextreme[away is now known as evanextreme
[00:07:51] *** evanextreme is now known as evanextreme[away
[00:09:07] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[00:10:09] *** Joins: zeden (~zeden@user/zeden)
[00:10:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[00:10:25] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[00:11:12] *** evanextreme[away is now known as evanextreme
[00:11:57] <jinsun> pikajude: Concatenate might do what you want with the extra args https://docs.python.org/3/library/typing.html#typing.Concatenate
[00:12:08] *** Quits: sobkas (~sobkas@95.175.17.217) (Ping timeout: 272 seconds)
[00:12:35] <jinsun> but I think mypy still doesn't support it fully, so might have to ditch mypy for pyright
[00:12:57] <nedbat> anyone used GraphQL? I'm using it on GitHub's API, and have questions about how to manage a set of queries that share fragments: https://github.com/nedbat/graphql-learn/blob/main/github_digest.py#L17
[00:12:58] <pikajude> christ
[00:13:08] <pikajude> so it is possible
[00:15:01] <SnoopJ> nedbat, I've used it the tiniest little bit but I'm not familiar with fragments
[00:15:04] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[00:15:24] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[00:15:43] <teut> the #javascript guys might use graphql more than us
[00:15:52] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Quit: *evaporates*)
[00:16:04] <nedbat> SnoopJ: i wasn't either until this weekend :)
[00:16:07] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[00:16:15] *** Joins: stavros (~stavros@ppp079166134215.access.hol.gr)
[00:16:38] <stavros> Hello
[00:16:52] <stavros> I'm trying to get the $EDITOR env var but the Python process somehow won't see it
[00:16:56] <stavros> What could be the issue?
[00:17:32] <Wooble> stavros: how are you trying to get it, and how are you confiming it's set?
[00:18:45] <stavros> @Wooble, 22:48:22 $ echo $EDITOR; python3 -c "import os; print(os.getenv('EDITOR'))"-> vim\nNone
[00:18:47] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:95ea:d1ff:55f2:9ea6) (Ping timeout: 250 seconds)
[00:18:58] <teut> have you used graphene nedbat?
[00:19:27] <nedbat> teut: i haven't
[00:19:29] <grawity> stavros: shell variables are not exactly the same thing as environment variables
[00:19:42] <stavros> grawity, hmm is this a shell variable? Interesting
[00:19:53] <stavros> What's the difference? Are they not exported?
[00:20:05] <Wooble> stavros: it's not a shell variable for me, but your python prints "vim" for me.
[00:20:15] <grawity> stavros: $EDITOR is referencing a shell variable – it may have been *imported* from environment, and it may be *exported* to environment, but it isn't by itself the environment
[00:20:20] <stavros> @Wooble, hm, maybe there's something wrong with mine
[00:21:00] *** Quits: aknot (~aknot@2603:900a:1503:17bb:507a:d2bd:d91e:bdc7) (Ping timeout: 240 seconds)
[00:21:02] <grawity> stavros: so if it expands while in the shell, but is invisible to children os.environ, then it's pretty much just not marked for export to environ
[00:21:14] <teut> https://docs.graphene-python.org/en/latest/quickstart/  I cant guarantee but you may be able to find what you want here since this library is analogous to apollojs which is the de facto for graphql
[00:21:21] <grawity> stavros: which is why the `export` command is usually used along with them
[00:21:52] <stavros> grawity, hmm I see, thanks... Yet, all the processes know to use vim as the editor instead of nano, so they're getting the info somewhere I guess
[00:22:06] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:22:08] <grawity> vim is generally just the default anyway
[00:22:18] <grawity> well, vi is, but on most distros that's vim
[00:22:23] *** Quits: angelacrust (~angelacru@182.68.208.211) (Quit: Client closed)
[00:22:45] <grawity> so that behavior is expected when EDITOR isn't in env at all
[00:23:21] <grawity> try `export EDITOR` then re-try your python check
[00:23:23] <stavros> grawity, apparently in Debian the set alternative is invoked with /usr/bin/editor, I didn't know that
[00:23:40] <stavros> Yeah, if I export it it works
[00:23:53] <stavros> I don't *specifically* want to get $EDITOR, I just want to get a user's preferred editor I guess
[00:24:11] <stavros> I don't know if /usr/bin/editor exists in other distros, hm
[00:24:27] <grawity> it's more of a debianism I think
[00:24:41] <nedbat> teut: thanks, but graphene is for implementing the server side of an API.
[00:24:59] <grawity> on systems with a desktop environment, and especially if you're launching a GUI editor, you'd query the xdg mime settings for text/plain
[00:25:02] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[00:25:27] <teut> sorry, I want to do backend but I am only getting frontend role at internship
[00:25:28] *** Joins: zamanf (~dev@213.133.91.246)
[00:25:31] *** evanextreme is now known as evanextreme[away
[00:25:32] <Wooble> just fall back to ed. it's obviously the best editor.
[00:25:37] <grawity> on terminal, the historical default was "$VISUAL if set, otherwise $EDITOR if set, otherwise vi"
[00:25:38] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[00:25:41] <teut> thus I made a guess
[00:26:11] <grawity> though I guess some distros may patch apps to use `editor` or `sensible-editor` instead, and some apps do default to nano
[00:26:29] *** Quits: pyevery__ (~pyeveryth@dot1x-155-41-203-218.bumc.bu.edu) (Remote host closed the connection)
[00:26:45] <stavros> grawity, I guess I'll check "if /usr/bin/editor is executable or $VISUAL or $EDITOR or vi"
[00:27:03] <stavros> Though hardcoding the path to `editor` isn't amazing either
[00:27:03] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:27:11] <grawity> you don't have to hardcode it
[00:27:17] <grawity> you have $PATH
[00:27:17] *** Joins: bahamas (~lucian@84.232.140.52)
[00:27:28] <grawity> well os.environ['PATH']
[00:27:54] *** Quits: nucranium (~nucranium@2a02:8010:6173:0:1d19:98e2:4b9a:bf4a) (Ping timeout: 252 seconds)
[00:28:12] <stavros> grawity, oh, good call, thank you
[00:28:23] *** Joins: thiras (~thiras@user/thiras)
[00:28:30] <grawity> `try: subprocess.run(['editor', path]); except FileNotFoundError:`
[00:28:46] <grawity> it'll search PATH for you and all that
[00:29:11] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Read error: Connection reset by peer)
[00:29:14] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 272 seconds)
[00:29:44] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-596e-b8a7-f58c-1fa5.res6.spectrum.com)
[00:29:46] *** Joins: theprophet (~theprophe@212.58.102.155)
[00:30:07] <stavros> grawity, doesn't it need shell=True?
[00:30:10] <grawity> no
[00:30:16] *** Quits: trueFragment (~trueFragm@2603-8080-6b06-fd1d-b12e-4644-5b8e-3d77.res6.spectrum.com) (Read error: Connection reset by peer)
[00:30:16] <grawity> why would it
[00:30:28] *** Joins: angelacrust (~angelacru@182.68.208.211)
[00:31:24] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 240 seconds)
[00:31:40] <stavros> You are correct, thank you
[00:32:06] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:32:18] <grawity> even libc has wrappers like execvp() that search PATH, so it's not shell-specific really
[00:32:24] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[00:32:33] <catern> i really wish "raise None" did nothing, that would so convenient so often
[00:33:00] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[00:33:44] *** Quits: paul424 (~tom@ip-37-248-159-53.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:33:48] <millido> Should this work `[x.attr_a for x in list_1 if x.attr_b not in list_2]`?
[00:34:08] <grym> millido: possibly; does it?
[00:34:08] *** Quits: martums5 (~martums@user/martums) (Read error: Connection reset by peer)
[00:34:30] *** Quits: theprophet (~theprophe@212.58.102.155) (Client Quit)
[00:34:41] <stavros> millido, the syntax is correct, whether it should work depends on what "work" means :P
[00:34:52] *** Joins: theprophet (~theprophe@212.58.102.155)
[00:35:02] *** Joins: martums5 (~martums@user/martums)
[00:35:08] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[00:36:05] <millido> Well, I am not sure. I am getting `str object has no attribute "attr_b"`. But I am pretty sure that list_1 is not a list of strings
[00:36:12] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:36:59] *** Quits: nunggu_ (~q@user/nunggu) (Remote host closed the connection)
[00:37:14] <jazzy2> I have gone astray
[00:37:19] <jazzy2> I used to comment all my code
[00:37:24] <jazzy2> now I comment none of my code
[00:37:41] *** Joins: nunggu_ (~q@user/nunggu)
[00:38:24] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[00:38:31] *** Quits: Balzy (~Balzy@host-95-232-138-142.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[00:38:50] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[00:39:19] *** Joins: Balzy (~Balzy@host-82-59-89-26.retail.telecomitalia.it)
[00:39:43] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:39:43] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[00:39:50] <nedbat> catern: sounds like a helper function
[00:40:09] *** Joins: smoke (~smoke@user/smoke)
[00:40:29] <catern> nedbat: that adds a stack frame
[00:40:53] *** Joins: XV8 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f)
[00:41:00] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[00:41:03] <millido> grym, stavros; Did a small test now. It _should_ work the way I expect. Which means something else is wrong. It is part of a large django api. But it might seem like I cannot trust the type hints...
[00:41:16] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[00:41:33] <stavros> millido, it may not be a list of strings, it may just have a string in it
[00:41:47] <grym> millido: breakpoint() time! ?
[00:42:30] <stavros> pudb time
[00:42:30] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[00:42:58] *** Joins: newdimension (~newdimnes@user/newdimension)
[00:43:03] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[00:43:21] <nedbat> catern: tell us more about how you would use "raise None" if it were a no-op.
[00:44:49] <catern> right now I would use it in this Future I'm implementing, where I want to raise an exception if the task inside the Future crashed - and the exception is stored as an Optional[BaseException] so if I could just raise that, it would save a line, nicely...
[00:45:14] <catern> in other cases that I don't fully recall right now I've wanted to do "raise foo or bar or baz", i.e. raise the first non-None exception
[00:45:50] <grawity> I guess nowadays that could be written as:if ex := (foo or bar or baz): raise ex
[00:46:12] <catern> yeah, still multiple-lines, not as nice as the syntax I showed, which is very cute I think
[00:46:47] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:46:59] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Quit: bitkiller)
[00:47:14] <grawity> hm, no, I think it's much better to have an explicit 'if' than a raise that's sometimes noop
[00:47:35] <grawity> it's like a 'return' sometimes didn't return under some mysterious condition
[00:47:37] *** Joins: zeden (~zeden@user/zeden)
[00:47:46] <BrenBarn> yeah that would be confusing
[00:47:54] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[00:47:56] <grawity> or an 'if' didn't branch on sundays
[00:48:40] *** Joins: newdimension (~newdimnes@user/newdimension)
[00:48:58] <Tritium> Using return for a value and for status checking is the kludge of the past that we dont need anymore
[00:49:42] <millido> stavros, grym. Thanks! It was actually a list of strings. It is generated using list comprehension, might be that the type hint system doesn't pick up on types then...?
[00:50:22] *** Joins: nucranium (~nucranium@2a02:8010:6173:0:1d19:98e2:4b9a:bf4a)
[00:50:25] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[00:50:27] <grym> millido: type annotations do not compel the runtime to do anything at all
[00:50:32] <grym> (as a general rule)
[00:50:36] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[00:50:46] *** Quits: ovelny (~ovelny@user/ovelny) (Ping timeout: 272 seconds)
[00:50:51] <Tritium> They are more or less documentation
[00:51:03] *** Joins: newdimension (~newdimnes@user/newdimension)
[00:52:02] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[00:52:20] *** Joins: ovelny (~ovelny@user/ovelny)
[00:53:02] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[00:53:18] <millido> Aha, that makes sense. Been writing mostly sml/haskel and rust lately, guess I am still in the wrong mindset :)
[00:53:45] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[00:54:03] *** Quits: theprophet (~theprophe@212.58.102.155) (Ping timeout: 256 seconds)
[00:54:14] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:54:42] *** Joins: Guest31 (~Guest31@94.187.3.21)
[00:54:52] *** Quits: greedom (~greedom@p200300de6713e700d7f625fd37c0fb7a.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:55:08] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:55:25] <Guest31> Apologies if my previous messages came through, don't mean to spam but having trouble with my IRC client.
[00:55:55] <Guest31> Is there a way for me to write a generic logging file handler and avoid this duplicate code? https://dpaste.org/phsx
[00:56:13] *** Quits: stavros (~stavros@ppp079166134215.access.hol.gr) (Quit: Leaving)
[00:56:36] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:57:40] *** Joins: maxzor_ (~maxzor@2a01cb04054faa0004a6d31732461e09.ipv6.abo.wanadoo.fr)
[00:58:28] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[00:58:55] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl4894o0wnxkt8nj8.ipv6.telus.net)
[00:59:15] *** Joins: newdimension (~newdimnes@user/newdimension)
[01:01:00] *** Joins: BlueFrog (~BlueFrog@user/BlueFrog)
[01:02:33] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[01:02:42] *** Joins: wac (~wac@user/wac)
[01:03:21] *** Stench is now known as Staunch
[01:05:00] *** Quits: sobkas (~sobkas@95.175.17.217) (Ping timeout: 240 seconds)
[01:05:45] *** Quits: NealRame (~a@202-63-70-107.ip4.superloop.com) (Quit: Konversation terminated!)
[01:05:57] *** Quits: zamba (~marius@5.226.162.54) (Ping timeout: 256 seconds)
[01:06:30] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:06:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:07:14] *** Joins: zamba (~marius@5.226.162.54)
[01:07:45] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 250 seconds)
[01:07:46] *** Joins: Viewday116 (~Viewday@user/viewday)
[01:08:30] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 272 seconds)
[01:09:15] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:09:15] *** Viewday116 is now known as Viewday11
[01:09:29] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[01:10:09] *** Joins: cpunk (~mm@ip2505fdcc.dynamic.kabel-deutschland.de)
[01:10:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:10:49] <teut> I had copied a python project on my hard drive and now the paths are ruined when I copied the project on new laptop. How can I get the requirement.txt now?
[01:11:02] <SnoopJ> teut, "ruined?"
[01:11:12] <teut> broken?
[01:11:17] <SnoopJ> I have no idea what you mean
[01:11:17] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:11:21] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 252 seconds)
[01:11:27] <teut> the python doesnt run
[01:11:33] <teut> the project*
[01:11:41] <SnoopJ> did you copy a virtual environment?
[01:11:42] <Repiphany> venvs aren't meant to be portable
[01:11:48] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:11:48] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[01:12:06] <teut> ya, but now I need to get the requirements.txt
[01:12:16] <teut> so that I can recreate the venv
[01:12:25] <teut> yes SnoopJ
[01:12:37] <SnoopJ> okay, well, you can't do that. what happened to the requirements.txt that you copied?
[01:12:54] <teut> I forgot to put the requirements.txt
[01:13:04] <grym> oopps
[01:13:11] <teut> I was in middle of a  project and that too locally
[01:13:34] <teut> guess then just run, and debug is the only solution
[01:13:42] <grym> grep for imports ;)
[01:13:51] *** Quits: nucranium (~nucranium@2a02:8010:6173:0:1d19:98e2:4b9a:bf4a) (Quit: WeeChat 3.4)
[01:14:01] *** Joins: lionfish (~lionfish@48.21.125.91.dyn.plus.net)
[01:14:08] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[01:14:25] <teut> that won't work grym
[01:14:43] <teut> because the packages aren't named as their pip name
[01:15:07] <teut> I mean , the import name is diff than the pip name
[01:15:14] <grym> teut: it'll give you a start
[01:15:25] <grym> but there is some manual work in your future
[01:15:27] <teut> ya, that it can do, let me try it
[01:15:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:16:02] <teut> I looked at the Lib folder , I can get idea from there
[01:16:05] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[01:16:09] *** Joins: angelacrust11 (~angelacru@2409:4053:2e15:da3c:6908:f954:b118:4c39)
[01:16:14] *** Quits: angelacrust11 (~angelacru@2409:4053:2e15:da3c:6908:f954:b118:4c39) (Write error: Connection reset by peer)
[01:16:48] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[01:16:51] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91) (Ping timeout: 252 seconds)
[01:16:52] <SnoopJ> so you want to know how to get a file that doesn't exist...?
[01:16:56] * SnoopJ is confused
[01:17:20] <SnoopJ> maybe you want to run `pip freeze` on the old system?
[01:17:37] <teut> that system is no longer with me
[01:17:43] <teut> it's wiped out
[01:17:51] *** Quits: angelacrust (~angelacru@182.68.208.211) (Ping timeout: 256 seconds)
[01:17:55] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 250 seconds)
[01:17:57] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[01:18:00] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 272 seconds)
[01:18:02] <SnoopJ> I see. Then you're probably stuck with looking in the site-packages dir, yes
[01:18:06] <teut> why doesn't the venv stores requirement.txt internally?
[01:18:11] <SnoopJ> why would it?
[01:18:17] <teut> that would be a good idea
[01:18:17] *** Quits: Guest31 (~Guest31@94.187.3.21) (Quit: Client closed)
[01:18:29] <teut> afterall it's a part of virtualenv
[01:18:35] <grym> no it's not
[01:18:40] <teut> why so?
[01:18:46] <grym> well, there isn't a requirement.txt in there :P
[01:18:56] *** Quits: magla (~gelignite@d536370e.access.ecotel.net) (Quit: Stay safe!)
[01:19:11] <SnoopJ> teut, requirements.txt describes the requirements of a package. A virtual environment is not a package.
[01:19:18] *** Quits: BlueFrog (~BlueFrog@user/BlueFrog) (Quit: Quit)
[01:19:26] <SnoopJ> or hm, I guess it can be used for not-packages too
[01:19:33] <whatsupdoc> Hi, I have a quick question. Why can I not access m inside the nested function? https://bpa.st/3LRQ
[01:19:35] *** Joins: pyevery__ (~pyeveryth@dot1x-155-41-203-218.bumc.bu.edu)
[01:19:47] <teut> but req.txt lists packages in the venv only
[01:19:52] *** Quits: visl (visl@user/visl) (Remote host closed the connection)
[01:19:53] *** Joins: angelacrust (~angelacru@2409:4053:2e15:da3c:6908:f954:b118:4c39)
[01:20:05] <SnoopJ> I can't imagine why a venv would keep a requirements.txt, or even what that would mean: how do you update it when you install a new library into the venv?
[01:20:08] <grym> whatsupdoc: you could use `nonlocal`
[01:20:14] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[01:20:15] <Repiphany> whatsupdoc: You have an assignment m= in the function so it thinks it's a local variable
[01:20:17] *** Joins: visl (visl@user/visl)
[01:20:20] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:20:38] <teut> ya so it's the duty of python to update it , or pip's duty
[01:20:49] <SnoopJ> teut, what if the user doesn't use pip?
[01:21:01] <whatsupdoc> Repiphany: so if you include both assignment and checking of the value then it fails?
[01:21:12] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[01:21:15] <whatsupdoc> print(m) works
[01:21:21] <teut> then that package manager's duty
[01:21:38] <Repiphany> You can't access the nonlocal variable m without explicitly saying it's nonlocal while also having an assignment
[01:21:40] <teut> doesn't looks like a big deal to me
[01:21:50] <SnoopJ> teut, maybe you'd like to write up a proposal for it, then
[01:22:01] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:22:03] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[01:22:08] <teut> pep, or mail?
[01:22:08] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[01:22:15] <whatsupdoc> It seems like it doesn't work like javascript closure
[01:22:22] *** Joins: thiras (~thiras@user/thiras)
[01:22:52] <Repiphany> whatsupdoc: https://bpa.st/TKTQ
[01:23:00] *** Joins: brabrax (~brabrax@user/brabrax)
[01:23:05] <whatsupdoc> g() fails
[01:23:11] <Repiphany> Do you understand why
[01:23:12] *** Parts: cpunk (~mm@ip2505fdcc.dynamic.kabel-deutschland.de) ()
[01:23:23] <whatsupdoc> Because you reassign the value
[01:23:27] *** Quits: maxzor_ (~maxzor@2a01cb04054faa0004a6d31732461e09.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[01:23:32] <whatsupdoc> Apparently that messes things up somehow, not sure why
[01:23:35] *** Joins: ejjfunky (~ejjfunky2@125.164.20.119)
[01:23:44] *** Joins: njt (~njt@zaph.org)
[01:23:47] <SnoopJ> teut, python-ideas would be a place to ask about it, if someone hasn't done so already
[01:24:26] <Repiphany> The error message is pretty clear: UnboundLocalError: local variable 'a' referenced before assignment
[01:24:51] <teut> I found three things that could be improved, this, the heapq module and the  lru_cache.
[01:25:08] <whatsupdoc> Why doesn't it try to find the value it's referencing outside of the function automaticaly
[01:25:13] <whatsupdoc> The way it does in f()
[01:25:24] <SnoopJ> whatsupdoc, the compiler looks at the whole function to decide what kind of variable it is. When you assign to something, the compiler will treat that as a local variable unless you tell the compiler otherwise.
[01:25:28] <Repiphany> Because you have an assignment statement
[01:25:44] <SnoopJ> So in this case, you have to hint to the compiler that the thing you're going to be assigning to later in the function is *not* a local
[01:25:47] <Repiphany> How is it meant to know if you wanted a locally scoped one that doesn't affect the global name or not if you don't tell it
[01:26:05] <Repiphany> The default is to assume you don't want to change globals
[01:26:08] <teut> python-ideas is what?
[01:26:30] <whatsupdoc> Doesn't python have closure?
[01:26:30] *** Joins: odoood__ (~odoood@2601:c8:c000:c4e0::3)
[01:26:38] <teut> it does
[01:26:53] <SnoopJ> whatsupdoc, it does, but they are not the exact same as closures in other languages.
[01:27:00] *** Joins: audiofreeze (~audio@2603-8081-1800-13f9-22a5-9711-6139-8d6d.res6.spectrum.com)
[01:27:03] <SnoopJ> teut, it's a mailing list for ideas about Python
[01:27:06] <jinsun> teut: https://mail.python.org/archives/list/python-ideas@python.org/
[01:27:18] <teut> oh , I was looking at #python-ideas
[01:27:30] <jinsun> you could also try https://discuss.python.org/c/packaging/14
[01:27:52] <SnoopJ> you should see if someone else has already proposed the idea, though, it's possible
[01:27:56] <jinsun> and https://discuss.python.org/c/ideas/6
[01:28:34] <teut> ok, I will write something
[01:28:53] <teut> ok I will take care of that SnoopJ
[01:28:56] *** Joins: envex (~rf@cpe-173-91-189-33.neo.res.rr.com)
[01:29:20] *** Quits: upsala (~zcb@185.209.196.166) (Quit: WeeChat 3.4)
[01:29:24] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 272 seconds)
[01:29:24] *** Quits: Staunch (~Staunch@137.83.202.22) (Ping timeout: 272 seconds)
[01:29:55] <Repiphany> whatsupdoc: https://bpa.st/7NMA
[01:31:44] <whatsupdoc> 0 1 2 3  4 0 1 2 5 3
[01:32:10] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[01:32:18] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[01:32:33] <whatsupdoc> nvm starts counting at 1 duh
[01:32:42] <whatsupdoc> but i think i get it, thanks Repiphany
[01:33:02] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl4894o0wnxkt8nj8.ipv6.telus.net) (Quit: Leaving)
[01:33:11] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:fcb0:9ced:a8db:5d63)
[01:33:59] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[01:34:01] *** Quits: off^ (~off@50.235.176.163) (Remote host closed the connection)
[01:34:42] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[01:35:24] *** Quits: ham5urg_ (~ham5urg@81.25.162.47.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 240 seconds)
[01:36:33] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[01:36:52] *** Quits: harpia (~harpia@2804:fc:8de2:e700:f59b:322e:48e2:b259) (Quit: harpia)
[01:37:39] *** Joins: Guest84 (~Guest84@140.254.77.147)
[01:38:00] <Guest84> Can anyone help me with my python class homework
[01:38:29] <lionfish> well, ask - and I guess people might give you a clue
[01:38:36] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[01:38:44] <teut> Guest84 , sure
[01:38:55] <Guest84>  The anti-diagonal of a square matrix is a diagonal going from the lowerleft corner to the upper-right corner. Write a function called anti diag(n) that
[01:38:55] <Guest84> takes a positive integer n as an argument and returns an nxn matrix with 1s
[01:38:56] <Guest84> on the anti-diagonal and 0s elsewhere.
[01:39:10] <Guest84> I can make the normal matrix but am not sure how to flip it
[01:39:24] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 252 seconds)
[01:39:48] <teut> the top entry of a matrix has index 0, 0
[01:40:00] <lionfish> oh didn't know that terminology.
[01:40:05] <ssbr> I always wonder if this trick is just too evil: "x = y[y.rfind('.')+1:]". (This finds the tail segment of a dotted path -- for example, foo.bar.baz -> baz, but foo -> foo.)
[01:40:27] <teut> the bottom most  has   (n, n) . you got 2 points, now find equation of the line
[01:40:32] <SnoopJ> Guest84, is this using numpy, or does "matrix" here mean a list of lists?
[01:40:59] <lionfish> I assume they're in numpy?
[01:41:09] <Guest84> this is the code I have so far
[01:41:11] <Guest84> def anti_diag(n):
[01:41:11] <SnoopJ> a really cheaty way to do it from the identity matrix: reverse the rows ;P
[01:41:12] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:41:12] <Guest84>   result=[]
[01:41:12] <Guest84>   for i in range(n):
[01:41:13] <Guest84>     result.append([0]*n)
[01:41:13] <Guest84>   for i in range(n):
[01:41:13] *** litharge sets mode: +q *!*@140.254.77.147
[01:41:18] <lionfish> Just want to give it to you..
[01:41:22] <SnoopJ> Guest84, please don't paste code in the channel, use https://bpa.st/+python
[01:41:24] <teut> use dpaste
[01:41:24] <lionfish> but a clue is slice notation...
[01:41:29] <teut> bpaste*
[01:41:38] <lionfish> oh... looks like you're not using numpy
[01:41:45] *** litharge sets mode: -q *!*@140.254.77.147
[01:41:46] <lionfish> do you know if you can? (it would make it a one-liner)
[01:42:00] <lionfish> what are the rules of the assignment?
[01:42:03] <SnoopJ> probably not for exactly that reason heh
[01:42:08] <teut> [[*reversed(i)] for i in matrix]
[01:42:12] *** Quits: odoood__ (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[01:42:19] <Guest84> I pasted it on that website
[01:42:19] <teut> this will flip it
[01:42:22] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[01:42:28] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[01:42:43] <teut> you have to save and give us the generated link
[01:43:35] <Guest84> https://bpa.st/SNIQ
[01:44:41] <lionfish> you could do results[i][-i]=1?
[01:44:59] <SnoopJ> that is almost correct, it's off by one
[01:45:00] <lionfish> oops
[01:45:04] <lionfish> that's not quite right
[01:45:05] <lionfish> lol
[01:45:08] <lionfish> sorry : )
[01:45:15] <lionfish> -i-1
[01:45:15] * SnoopJ tried the same thing
[01:45:18] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[01:45:23] <lionfish> result[i][-i-1] = 1 #this
[01:45:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[01:45:53] <teut> use the two point form of a line
[01:45:54] <lionfish> Last Monday my first lab for the term on a module I'm lecturing was an intro to python with a similar question ... can't believe I got it wrong myself : )
[01:45:55] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:46:00] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[01:46:11] <Guest84> that worked thanks so much
[01:46:12] <teut> that shall be the good thing
[01:46:14] *** Joins: Telvana (~capo@user/telvana)
[01:46:14] <SnoopJ> Guest84, so, you're setting the (rownum, colnum) coordinates to 1, which is the 'regular' diagonal, but what you want to do is (rownum, numrows - colnum)
[01:46:34] <lionfish> Yeah, good idea to understand why it worked...
[01:46:35] <SnoopJ> but the thing lionfish shared is a bit of a shortcut because indexing a list with a negative number is "from the end"
[01:47:04] *** Joins: Viewday113 (~Viewday@user/viewday)
[01:47:20] <lionfish> It sort of has a 'silent' N at the start, e.g. -1 gives you the last index (i.e. N-1). (is that a useful way to think about it? not sure - just thought of it).
[01:47:28] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:47:28] *** Viewday113 is now known as Viewday11
[01:47:34] <SnoopJ> yea, `result[i][n-i-1] = 1` would be the 'direct' spelling
[01:47:40] <SnoopJ> but it has the same effect
[01:48:04] <lionfish> it's useful if you don't know n, then you can avoid len(result)-i-1 I guess
[01:48:13] <Guest84> I think I kinda understand
[01:48:19] <lionfish> it becomes more useful in slice notation in multidimensional arrays in numpy I guess.
[01:48:45] <SnoopJ> Guest84, it will probably help if you work through a small example (let's say a 3x3) by hand
[01:49:03] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:49:07] <lionfish> So if I want the last five items I'd do mylist[-5:]
[01:49:17] <SnoopJ> but schematically: you want to start in the top-right (0, n-1) and work down and left; i.e. the first number goes "up", and the second number goes "left"
[01:49:39] <SnoopJ> err, I should say "down" instead of "up" I guess to be consistent about directions :)
[01:50:00] <lionfish> yeah, leave the 'n' in, as it's clearer : ) sorry to confuse everything! (ignore me!)
[01:50:44] <lionfish> ty for the new term 'antidiagonal' that I'd not heard.
[01:51:30] <lionfish> for completeness, in numpy, I guess I'd do: np.eye(n)[:,::-1]
[01:51:47] *** Joins: ham5urg_ (~ham5urg@81.25.162.47.dynamic-pppoe.dt.ipv4.wtnet.de)
[01:51:48] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 240 seconds)
[01:52:06] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:52:22] <SnoopJ> other way around works too :)
[01:52:47] <lionfish> true : ) probably one is faster for some under-the-hood reason of how memory is organised : )
[01:53:33] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:d5ab:7fde:910:2e6b) (Ping timeout: 256 seconds)
[01:53:39] <SnoopJ> hmm, interesting question. I would *expect* they're the same because it's "just" changing the in-memory strides for the new view object
[01:54:03] <SnoopJ> but speed of actually accessing that data might depend the array ravel order?
[01:54:20] *** Quits: angelacrust (~angelacru@2409:4053:2e15:da3c:6908:f954:b118:4c39) (Quit: Client closed)
[01:54:36] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[01:54:57] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[01:54:57] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[01:55:12] <lionfish> : ) I've no idea, but I love that you've got at least a hypothesis : )
[01:55:41] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:55:47] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[01:56:07] *** Joins: nomic (~nomic@185.217.117.193)
[01:56:26] <SnoopJ> it's a tidy little structure under the hood https://i.stack.imgur.com/EeBUb.png
[01:56:44] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[01:56:45] <lionfish> My problem I came to #python for is a speed problem... but I think I've sort of worked out my answer while preparing to ask the question. I've a camera hooked up to a raspberry pi, and I'm using multiprocessing so that 4 processes can process the images as they come off (making use of the cores that I'd not be able to with just multithreading)...
[01:56:48] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[01:57:23] <SnoopJ> and so-called "basic indexing" produces a new object that has the same `data` pointer but changes the `strides`
[01:57:39] <lionfish> thanks SnoopJ.
[01:58:02] <SnoopJ> accessing it backwards is probably a nightmare for cache misses :)
[01:58:18] <lionfish> oh yeah.
[01:58:58] <lionfish> (I ran the [::-1,:] vs [:,::-1] with %timeit but didn't see any obvious difference by the way)
[01:59:11] <SnoopJ> yea actually producing the new ndarray object should be constant work
[01:59:19] <SnoopJ> the same* constant
[01:59:21] <lionfish> ...anyway, to do this I use a Queue, but I've found reading it /reeeally/ slow, and from what I've gleaned online it makes a copy of the object :/
[02:00:10] <lionfish> SnoopJ, yeah, makes sense now I think about it (I just thought it might depend on which chunks of memory get cached or something).
[02:00:35] <SnoopJ> nah, the `data` pointer just comes along for the ride (if you check .flags on the resulting ndarray you should see OWNDATA=False)
[02:01:16] <SnoopJ> or just mutate the result and see the change in the original :)
[02:01:23] *** Quits: Guest84 (~Guest84@140.254.77.147) (Quit: Client closed)
[02:01:33] <SnoopJ> this is all just numpy trivia (which I like) though
[02:01:34] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[02:02:23] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.29) (Ping timeout: 256 seconds)
[02:03:51] <lionfish> it's good to have a rough idea what's happening
[02:04:02] <lionfish> but it's nice also that it can abstract away a lot of stuff too
[02:04:07] <lionfish> Here's my Queue problem:
[02:04:07] * SnoopJ nods
[02:04:09] <lionfish> https://bpa.st/ELJQ
[02:05:02] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:05:08] <lionfish> I think the answer is either (a) I need to do some painful rewriting or (b) I guess that the actual use-case when I need to take photos really fast, I was planning on just saving them anyway, so I just won't bother adding them to the queue for processing.
[02:05:11] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: Sorry, I need to scratch my left butt cheek.)
[02:05:26] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[02:05:37] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[02:05:57] <lionfish> (sorry, by (b) I mean I don't need to multiprocess the pipeline at all, and the save-to-file code is already in the method that handles the incoming photos).
[02:07:05] <lionfish> A post on SO suggested I tried using Manager().Queue() but that was even slower ( https://stackoverflow.com/a/56118981 )
[02:07:23] *** Joins: odoood__ (~odoood@2601:c8:c000:c4e0::3)
[02:07:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:07:47] <lionfish> (or here: https://stackoverflow.com/a/45236748 ).
[02:08:02] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:08:33] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:08:45] <lionfish> Anyway, if anyone has any ideas how to make this faster? :) I saw a shared memory thing in python 3.8 somewhere (but there's a hassle of getting that on the pi).
[02:09:14] <lionfish> Any other ideas?
[02:09:24] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[02:09:37] *** Joins: smoke (~smoke@user/smoke)
[02:10:43] *** Joins: Guest84 (~Guest84@140.254.77.147)
[02:10:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[02:12:17] *** Quits: esther (~esther@2607:fb90:20da:d43e:7396:8cb5:b0dd:2d28) (Ping timeout: 240 seconds)
[02:15:00] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:fcb0:9ced:a8db:5d63) (Quit: Leaving)
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:42] <lionfish> ooh, just found out I can do dictionary-comprehensions...
[02:15:49] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[02:16:01] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:38] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[02:16:45] *** Joins: Masterphi (~Masterphi@user/masterphi)
[02:16:54] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:17:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[02:17:56] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:19:42] *** Quits: ATAD (~ATAD@user/atad) (Quit: ATAD)
[02:20:41] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[02:21:42] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[02:22:47] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[02:22:47] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[02:22:47] *** Joins: JordiGH (~jordi@user/jordigh)
[02:23:23] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:eca0:5756:a32a:9258) (Quit: Konversation terminated!)
[02:23:32] <SnoopJ> lionfish, are you aware of GStreamer? I don't know exactly how it would play into what you're doing, but I hear it can be quite handy for things that look roughly like "image pipeline"
[02:23:40] <SnoopJ> and AIUI it has good interoperability from Python
[02:23:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[02:24:03] <SnoopJ> it's been on my work "I should check that out sometime" list for a long time, but never made time for it :)
[02:24:37] <meejah> gstreamer is .. weird
[02:24:47] <meejah> (but also powerful, so ...)
[02:25:32] *** Joins: Pixi_ (~Pixi@user/pixi)
[02:25:35] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[02:25:46] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 272 seconds)
[02:25:48] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[02:26:18] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71) (Quit: No Ping reply in 180 seconds.)
[02:26:27] <lionfish> thanks! Just reading up on GStreamer
[02:27:13] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[02:27:24] <lionfish> hmm, if I'd known about it from the start I might have looked at it actually. Yeah.
[02:27:32] <lionfish> There's quite a bit of metadata that goes with each frame..
[02:27:44] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:70f:94a2:4c9e:c7f6)
[02:27:45] <lionfish> ....but I imagine this or something similar would have handled it.
[02:28:13] <lionfish> Not enough time to rewrite - so just adding an option to degrade the resolution.
[02:28:17] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[02:29:24] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[02:29:49] <CrtxReavr> Is there a way to reset psutil.net_io_counters?
[02:30:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-3d94-4d23-dc7c-c228.res6.spectrum.com)
[02:31:10] *** Quits: smoke (~smoke@user/smoke) (Remote host closed the connection)
[02:31:30] *** Quits: duds- (~duds-@user/duds) (Read error: Connection reset by peer)
[02:31:47] *** Joins: smrtz (~smrtz@user/smrtz)
[02:32:06] *** Quits: vsantana (~Thunderbi@170.231.140.232) (Ping timeout: 272 seconds)
[02:32:46] <Guest84> can anyone help with this problem: Write a function called numbers(n, m) that takes two positive integers m
[02:32:47] <Guest84> and n as arguments and returns an m by n matrix filled with the consecutive
[02:32:47] <Guest84> integers from 1 to m x n.
[02:32:48] <Guest84> The integers should be filled in by row, starting with the upper-left corner.
[02:32:48] <Guest84> For example, numbers(4, 3) should return
[02:32:49] <Guest84> [[1, 2, 3],
[02:32:49] *** litharge sets mode: +q *!*@140.254.77.147
[02:33:20] *** litharge sets mode: -q *!*@140.254.77.147
[02:33:28] <Guest84> can someone help with this problem: Write a function called numbers(n, m) that takes two positive integers m
[02:33:29] <Guest84> and n as arguments and returns an m by n matrix filled with the consecutive
[02:33:29] <Guest84> integers from 1 to m x n.
[02:33:30] <Guest84> The integers should be filled in by row, starting with the upper-left corner.
[02:33:46] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[02:34:02] <Guest84> https://bpa.st/UOQQ
[02:34:08] <Guest84> this is what I have so far
[02:34:24] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:2890:96fb:1e70:c360)
[02:35:09] *** Joins: duds- (~duds-@user/duds)
[02:35:17] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1012:9968:6473:e574) (Ping timeout: 250 seconds)
[02:36:30] *** Quits: Guest84 (~Guest84@140.254.77.147) (Quit: Client closed)
[02:36:38] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:36:43] *** Joins: Guest84 (~Guest84@140.254.77.147)
[02:37:09] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 252 seconds)
[02:37:15] *** Joins: Masterphi (~Masterphi@user/masterphi)
[02:37:27] <Guest84> can someone help me with this home work problem
[02:37:29] <Guest84> Write a function called numbers(n, m) that takes two positive integers m
[02:37:29] <Guest84> and n as arguments and returns an m by n matrix filled with the consecutive
[02:37:30] <Guest84> integers from 1 to m x n.
[02:37:30] <Guest84> The integers should be filled in by row, starting with the upper-left corner.
[02:37:46] <Guest84> this is what i have so far
[02:37:48] <Guest84> https://bpa.st/UOQQ
[02:38:33] <SnoopJ> Ahh, I think I found the answer to my earlier pip question: it isn't pip, it's a quirk of this project's requirements.
[02:39:25] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[02:39:26] <SnoopJ> the setup.py has `git+http://example.com/repo.git@master` in its install_requires, the CI job has the `git+http://user:pass@example.com/repo.git@master` form, and I think the setup.py is taking precedence.
[02:40:38] <jinsun> Guest84: `def numbers(m, n): return [list(range(x, x+n)) for x in range(1, m*n + 1, n)]`
[02:40:51] *** Joins: ddoering (~Devinn@searspoint.nvidia.com)
[02:41:00] *** Quits: Devinn (~Devinn@searspoint.nvidia.com) (Ping timeout: 240 seconds)
[02:42:06] <SnoopJ> and as I think about it some more, that would explain why the new resolver seemed to affect it: the requirements are probably being combined or ordered differently
[02:42:24] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Read error: Connection reset by peer)
[02:42:49] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[02:44:34] *** Quits: parv (~quass@user/parv) (Quit: parv)
[02:45:54] <Guest84> thanks jinsun
[02:46:12] *** Joins: purple_cthulhu (~rax@2.186.4.28)
[02:46:59] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:47:36] *** Joins: Masterphi (~Masterphi@user/masterphi)
[02:47:41] *** Joins: XV9 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f)
[02:47:49] *** Quits: Elodin (~elodin@user/elodin) (Quit: WeeChat 3.4)
[02:48:07] *** Joins: dub_a (~dub_a@static-198-54-131-86.cust.tzulo.com)
[02:48:40] *** Joins: Elodin (~elodin@user/elodin)
[02:48:58] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[02:49:11] *** Joins: chenqisu12 (~chenqisu1@183.217.200.249)
[02:49:16] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:70f:94a2:4c9e:c7f6) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:49:17] <purple_cthulhu> Hi. Is it possible to define a property's getter in an ABC class but the setter in a subclass?
[02:49:29] *** Quits: dub_a (~dub_a@static-198-54-131-86.cust.tzulo.com) (Client Quit)
[02:49:39] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[02:51:28] *** Quits: JordiGH (~jordi@user/jordigh) (*.net *.split)
[02:51:28] *** Quits: wingsorc (~wingsorc@user/wingsorc) (*.net *.split)
[02:51:28] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f) (*.net *.split)
[02:51:28] *** Quits: PocketKiller (PacKetIV@user/packetiv) (*.net *.split)
[02:51:28] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: davit (~davit@50.35.184.227) (*.net *.split)
[02:51:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[02:51:28] *** Quits: bomb-on (~bomb-on@194.144.47.113) (*.net *.split)
[02:51:28] *** Quits: portalrat (~portalrat@user/portalrat) (*.net *.split)
[02:51:28] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (*.net *.split)
[02:51:28] *** Quits: megeve (sid523379@id-523379.hampstead.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (*.net *.split)
[02:51:28] *** Quits: kosh (~kosh@user/kosh) (*.net *.split)
[02:51:28] *** Quits: Strom (strom@fedora/strom) (*.net *.split)
[02:51:28] *** Quits: foul_owl (~kerry@207.244.125.36) (*.net *.split)
[02:51:28] *** Quits: plastico (~plastico@neomutt/plastico) (*.net *.split)
[02:51:28] *** Quits: MootPoot (uid444585@id-444585.ilkley.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: aphysically (~aphysical@user/aphysically) (*.net *.split)
[02:51:28] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: kanin (~kanin@112.41.64.39) (*.net *.split)
[02:51:28] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (*.net *.split)
[02:51:28] *** Quits: patchie (sid504252@2a03:5180:f:3::7:b1bc) (*.net *.split)
[02:51:28] *** Quits: hogarius (hogarius@2a03:5180:f:5::3:65b4) (*.net *.split)
[02:51:28] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[02:51:28] *** Quits: cloudcell (sid48145@2a03:5180:f::bc11) (*.net *.split)
[02:51:28] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[02:51:28] *** Quits: Boarders_ (sid425905@id-425905.lymington.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: lericson (~lericson@user/lericson) (*.net *.split)
[02:51:28] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[02:51:28] *** Quits: montpol (montpol@fine.mouses.xyz) (*.net *.split)
[02:51:28] *** Quits: theo (~theo@user/theo) (*.net *.split)
[02:51:28] *** Quits: knkay (~knkay@213.190.30.120) (*.net *.split)
[02:51:28] *** Quits: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[02:51:28] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (*.net *.split)
[02:51:28] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (*.net *.split)
[02:51:28] *** Quits: defjam (~eb0t@90.196.141.185) (*.net *.split)
[02:51:28] *** Quits: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com) (*.net *.split)
[02:51:28] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (*.net *.split)
[02:51:28] *** Quits: jancoow (~jancoow@user/jancoow) (*.net *.split)
[02:51:28] *** Quits: bambams (~bambams@user/bambams) (*.net *.split)
[02:51:28] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: Leonarbro (~Leonet@user/leonarbro) (*.net *.split)
[02:51:28] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[02:51:28] *** Quits: mrlemke (~quassel@2604:a880:4:1d0::394:0) (*.net *.split)
[02:51:28] *** Quits: yemel (~yemel@user/yemel) (*.net *.split)
[02:51:28] *** Quits: lidless (lidless@user/lidless) (*.net *.split)
[02:51:28] *** Quits: byzandula (~byzandula@beerbq.net) (*.net *.split)
[02:51:28] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (*.net *.split)
[02:51:28] *** Quits: dfrey (~dfrey@172.103.152.101) (*.net *.split)
[02:51:28] *** Quits: dkr13 (~dkr13@dkr13.de) (*.net *.split)
[02:51:28] *** Quits: sharksauce (sharksauce@user/sharksauce) (*.net *.split)
[02:51:28] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (*.net *.split)
[02:51:28] *** Quits: pradhvan (sid244250@dgplug/pradhvan) (*.net *.split)
[02:51:28] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[02:51:28] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[02:51:28] *** Quits: _janus (~janus@blotter.ld-linux.so) (*.net *.split)
[02:51:28] *** Quits: ilmostro (~ilmostro@user/ilmostro) (*.net *.split)
[02:51:28] *** Quits: dave2F (~dave@78-56-248-37.static.zebra.lt) (*.net *.split)
[02:51:28] *** Quits: nikomo (~quassel@nikomo.fi) (*.net *.split)
[02:51:28] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: woky (~woky@li1651-31.members.linode.com) (*.net *.split)
[02:51:28] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[02:51:28] *** Quits: Ennea (~Ennea@user/ennea) (*.net *.split)
[02:51:28] *** Quits: operational (~operation@imgonnaf.art) (*.net *.split)
[02:51:28] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (*.net *.split)
[02:51:28] *** Quits: zigo_ (~quassel@shade.infomaniak.ch) (*.net *.split)
[02:51:28] *** Quits: papna (~mike@159.203.139.114) (*.net *.split)
[02:51:28] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[02:51:28] *** Quits: rvgate (~rvgate@user/rvgate) (*.net *.split)
[02:51:28] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[02:51:28] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (*.net *.split)
[02:51:28] *** Quits: timothy (~timothy@redhat/timothy) (*.net *.split)
[02:51:28] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[02:51:28] *** Quits: Penagwin (~Penagwin@207.148.13.191) (*.net *.split)
[02:51:28] *** Quits: paperManu_ (~paperManu@138.197.128.151) (*.net *.split)
[02:51:28] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (*.net *.split)
[02:51:28] *** Quits: ttkap (~ttkap@user/ttkap) (*.net *.split)
[02:51:28] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[02:51:28] *** Quits: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com) (*.net *.split)
[02:51:28] *** Quits: joris2 (~joris@195.123.218.123) (*.net *.split)
[02:51:28] *** Quits: betterOn1 (~user@vmi489242.contaboserver.net) (*.net *.split)
[02:51:28] *** Quits: vlt (~dm@157.230.21.14) (*.net *.split)
[02:51:28] *** Quits: syllin (~syllin@user/syllin) (*.net *.split)
[02:51:28] *** Quits: aluria (~aluria@canonical/aluria) (*.net *.split)
[02:51:28] *** Quits: xavierd (~xavierdar@user/xavierdarkness) (*.net *.split)
[02:51:28] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[02:51:28] *** Quits: dynos01 (~dynos01@li820-149.members.linode.com) (*.net *.split)
[02:51:28] *** Quits: richrd (~wavi@thelounge/maintainer/wavi) (*.net *.split)
[02:51:28] *** Quits: petaflot (~root@lutolf.vserver.nimag.net) (*.net *.split)
[02:51:28] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[02:51:28] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[02:51:33] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[02:51:53] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[02:51:58] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[02:52:23] *** Joins: davit (~davit@50.35.184.227)
[02:52:29] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:70f:94a2:4c9e:c7f6)
[02:52:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[02:52:39] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[02:52:57] *** Quits: Guest84 (~Guest84@140.254.77.147) (Quit: Client closed)
[02:53:18] *** Joins: Guest84 (~Guest84@140.254.77.147)
[02:53:29] <Guest84> Any ideas on how to do this problem
[02:53:30] <Guest84> Write a function called reverse(di) that takes a dictionary as an argument.
[02:53:31] <Guest84> Both the keys are values of the dictionary are integers, and the values are unique.
[02:53:32] <Guest84> The function should return a new dictionary with the keys and values of di reversed.
[02:53:47] *** Joins: JordiGH (~jordi@user/jordigh)
[02:53:47] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[02:53:47] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[02:53:47] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:53:47] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[02:53:47] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[02:53:47] *** Joins: portalrat (~portalrat@user/portalrat)
[02:53:47] *** Joins: megeve (sid523379@id-523379.hampstead.irccloud.com)
[02:53:47] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[02:53:47] *** Joins: kosh (~kosh@user/kosh)
[02:53:47] *** Joins: Strom (strom@fedora/strom)
[02:53:47] *** Joins: foul_owl (~kerry@207.244.125.36)
[02:53:47] *** Joins: plastico (~plastico@neomutt/plastico)
[02:53:47] *** Joins: MootPoot (uid444585@id-444585.ilkley.irccloud.com)
[02:53:47] *** Joins: aphysically (~aphysical@user/aphysically)
[02:53:47] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[02:53:47] *** Joins: kanin (~kanin@112.41.64.39)
[02:53:47] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:53:47] *** Joins: bjs (sid190364@user/bjs)
[02:53:47] *** Joins: patchie (sid504252@2a03:5180:f:3::7:b1bc)
[02:53:47] *** Joins: hogarius (hogarius@2a03:5180:f:5::3:65b4)
[02:53:47] *** Joins: cloudcell (sid48145@2a03:5180:f::bc11)
[02:53:47] *** Joins: Boarders_ (sid425905@id-425905.lymington.irccloud.com)
[02:53:47] *** Joins: jessicara (~shirogits@user/jessicara)
[02:53:47] *** Joins: lericson (~lericson@user/lericson)
[02:53:47] *** Joins: greenbagels (~gb@user/greenbagels)
[02:53:47] *** Joins: montpol (montpol@fine.mouses.xyz)
[02:53:47] *** Joins: theo (~theo@user/theo)
[02:53:47] *** Joins: knkay (~knkay@213.190.30.120)
[02:53:47] *** Joins: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[02:53:47] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[02:53:47] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[02:53:47] *** Joins: defjam (~eb0t@90.196.141.185)
[02:53:47] *** Joins: enyc (~enyc@user/enyc)
[02:53:47] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[02:53:47] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[02:53:47] *** Joins: jancoow (~jancoow@user/jancoow)
[02:53:47] *** Joins: bambams (~bambams@user/bambams)
[02:53:47] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:53:47] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[02:53:47] *** Joins: hendry (~hendry@210.23.22.2)
[02:53:47] *** Joins: mrlemke (~quassel@2604:a880:4:1d0::394:0)
[02:53:47] *** Joins: yemel (~yemel@user/yemel)
[02:53:47] *** Joins: lidless (lidless@user/lidless)
[02:53:47] *** Joins: byzandula (~byzandula@beerbq.net)
[02:53:47] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[02:53:47] *** Joins: dfrey (~dfrey@172.103.152.101)
[02:53:47] *** Joins: dkr13 (~dkr13@dkr13.de)
[02:53:47] *** Joins: sharksauce (sharksauce@user/sharksauce)
[02:53:47] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[02:53:47] *** Joins: pradhvan (sid244250@dgplug/pradhvan)
[02:53:47] *** Joins: bkhl (~bkhl@user/bkhl)
[02:53:47] *** Joins: _janus (~janus@blotter.ld-linux.so)
[02:53:47] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[02:53:47] *** Joins: dave2F (~dave@78-56-248-37.static.zebra.lt)
[02:53:47] *** Joins: nikomo (~quassel@nikomo.fi)
[02:53:47] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[02:53:47] *** Joins: woky (~woky@li1651-31.members.linode.com)
[02:53:47] *** Joins: finsternis (~X@23.226.237.192)
[02:53:47] *** Joins: Ennea (~Ennea@user/ennea)
[02:53:47] *** Joins: operational (~operation@imgonnaf.art)
[02:53:47] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[02:53:47] *** Joins: zigo_ (~quassel@shade.infomaniak.ch)
[02:53:47] *** Joins: papna (~mike@159.203.139.114)
[02:53:47] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[02:53:47] *** Joins: rvgate (~rvgate@user/rvgate)
[02:53:47] *** Joins: FunkyBob (~curtis@vhost3.tinbrain.net)
[02:53:47] *** Joins: timothy (~timothy@redhat/timothy)
[02:53:47] *** Joins: Henry151 (~bishop@user/henry151)
[02:53:47] *** Joins: Penagwin (~Penagwin@207.148.13.191)
[02:53:47] *** Joins: paperManu_ (~paperManu@138.197.128.151)
[02:53:47] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[02:53:47] *** Joins: ttkap (~ttkap@user/ttkap)
[02:53:47] *** Joins: petaflot (~root@lutolf.vserver.nimag.net)
[02:53:47] *** Joins: mgocobachi (~m@ancrae.com)
[02:53:47] *** Joins: betterOn1 (~user@vmi489242.contaboserver.net)
[02:53:47] *** Joins: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com)
[02:53:47] *** Joins: joris2 (~joris@195.123.218.123)
[02:53:47] *** Joins: vlt (~dm@157.230.21.14)
[02:53:47] *** Joins: syllin (~syllin@user/syllin)
[02:53:47] *** Joins: aluria (~aluria@canonical/aluria)
[02:53:47] *** Joins: xavierd (~xavierdar@user/xavierdarkness)
[02:53:47] *** Joins: dynos01 (~dynos01@li820-149.members.linode.com)
[02:53:47] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[02:53:47] *** Joins: richrd (~wavi@thelounge/maintainer/wavi)
[02:53:47] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[02:53:47] *** Joins: Dev0n (~Dev0n@user/dev0n)
[02:53:47] *** Quits: theo (~theo@user/theo) (Max SendQ exceeded)
[02:53:47] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Max SendQ exceeded)
[02:53:47] *** Quits: finsternis (~X@23.226.237.192) (Max SendQ exceeded)
[02:53:47] *** Quits: enyc (~enyc@user/enyc) (Max SendQ exceeded)
[02:53:47] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Max SendQ exceeded)
[02:53:47] *** Quits: rvgate (~rvgate@user/rvgate) (Max SendQ exceeded)
[02:53:59] *** Joins: enyc (~enyc@user/enyc)
[02:54:13] *** Joins: theo (~theo@user/theo)
[02:54:20] *** Joins: finsternis (~X@23.226.237.192)
[02:54:26] *** Joins: rvgate (~rvgate@user/rvgate)
[02:55:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:55:13] *** Joins: arinov (~arinov@213.194.126.155)
[02:55:14] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[02:55:40] <jinsun> purple_cthulhu: you can't access the property name directly in the derived class, but you could access it from the base class, like @Base.prop.setter
[02:55:57] <jinsun> not sure if that is a good idea though
[02:56:04] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:56:05] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[02:56:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[02:57:23] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[02:57:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 272 seconds)
[02:57:36] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:58:05] <Guest84> Write a function called reverse(di) that takes a dictionary as an argument.
[02:58:05] <Guest84> Both the keys are values of the dictionary are integers, and the values are unique.
[02:58:06] <Guest84> The function should return a new dictionary with the keys and values of di reversed.
[02:58:14] <Guest84> any one know how to do this
[02:58:41] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 250 seconds)
[02:59:05] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:59:11] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[02:59:21] <jinsun> purple_cthulhu: seems to be working fine https://bpa.st/6XNA
[02:59:29] *** Joins: hendry (~hendry@210.23.22.2)
[03:00:10] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[03:00:25] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:132e:6fbb:ba84:8287)
[03:00:28] <jinsun> Guest84: `def reverse(di): return {v: k for k, v in di.items()}`
[03:00:33] *** Joins: evanextreme[away (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03)
[03:01:04] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:01:24] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[03:01:40] *** Quits: damonlynch (~ngaio@66.63.167.169) (Quit: Leaving)
[03:01:42] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03) (Client Quit)
[03:04:36] *** Quits: odoood__ (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[03:06:10] <purple_cthulhu> jinsun, Thank you for answering. It works. Would you please clarify why it is not a good idea?
[03:06:49] <purple_cthulhu> Guest84, As Python3.7+, items are ordered as insertion order in a dict, just get reversed iterables of the keys and values and zip them: dict(zip(reversed(a_dict.keys()), reversed(a_dict.values())))
[03:07:22] *** Joins: Viewday110 (~Viewday@user/viewday)
[03:07:45] <jinsun> purple_cthulhu: I dunno, maybe it is fine, I just never saw anyone do it so at least it is unusual
[03:07:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:08:36] *** Quits: ham5urg_ (~ham5urg@81.25.162.47.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 240 seconds)
[03:08:54] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:08:54] *** Quits: chenqisu12 (~chenqisu1@183.217.200.249) (Read error: Connection reset by peer)
[03:08:55] *** Viewday110 is now known as Viewday11
[03:09:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:10:26] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:11:54] *** Joins: cowsay_moo (~cowsay-mo@2a0d:5600:24:1500:1016:e0f9:5cb6:70c5)
[03:12:00] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:12:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[03:13:29] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91)
[03:14:33] *** Quits: cowsay-moo (~cowsay-mo@2a04:9dc0:0:200:1016:bd22:cab9:ccc9) (Ping timeout: 252 seconds)
[03:15:55] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:16:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[03:17:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[03:18:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:18:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[03:19:29] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:d5ab:7fde:910:2e6b)
[03:19:40] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:20:29] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[03:20:52] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[03:21:09] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:21:10] *** Joins: Barones (~Barones@user/Barones)
[03:21:13] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:22:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[03:23:41] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:25:56] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 272 seconds)
[03:28:01] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:28:52] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[03:28:54] *** Quits: Guest84 (~Guest84@140.254.77.147) (Quit: Client closed)
[03:29:07] *** Joins: Guest84 (~Guest84@140.254.77.147)
[03:29:17] <Guest84> How would i do a problem like this
[03:29:18] <Guest84> Write a function called sum odds(di) that takes a dictionary as an argument. Both the keys and values are integers. Return the sum of the values for
[03:29:19] <Guest84> which the corresponding key is odd.
[03:30:27] <bjs> Guest84: well, it's hard to answer those kinds of questions, I guess you are learning Python/programming?  Have you learned about for loops?
[03:30:49] *** Joins: evanextreme[away (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03)
[03:31:16] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03) (Client Quit)
[03:31:57] <Guest84> Yeah we have done for loops so i was thinking something like if the key is not divisble by 2 than add the value associated with it to some value
[03:32:09] <bjs> Guest84: okay, that sounds like how I would do it
[03:32:13] <Guest84> but im not sure how to get that into code
[03:32:42] <Guest84> like what would i use for the term key in the for loop
[03:32:43] <bjs> Guest84: well what do you have so far? maybe you can show us https://bpa.st/+python
[03:32:55] <bjs> Guest84: `for key, value in the_dict.items(): ...`
[03:33:24] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 240 seconds)
[03:33:33] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:34:03] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:34:21] *** Joins: evanextreme (~evan@64.187.160.183)
[03:34:36] <Guest84> https://bpa.st/TARA
[03:35:02] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:35:10] <bjs> Guest84: this looks like a good start, you're just missing the loop over keys and values like I showed
[03:35:26] *** Quits: ddoering (~Devinn@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[03:35:43] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:35:54] <phy1729> and a return :)
[03:37:40] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:37:56] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:38:08] *** Joins: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com)
[03:39:29] <Guest84> ok this is what i have now
[03:39:30] <Guest84> https://bpa.st/NOJQ
[03:39:35] <Em> Guest84: start out with the value as 0 and then just keep adding to that value whenever the key is odd.
[03:39:40] *** Joins: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[03:39:46] <Guest84> but im running into an indention error with the result2
[03:40:05] <bjs> Guest84: well here your dict is called `di` not `the_dict`, and your indentation isn't quite right because the final return isn't at the same level as the previous lines
[03:40:24] <bjs> notice how it's indented less? the other lines you have 2 spaces infront but the return only has one
[03:40:25] *** Quits: kingfightboy (~kingfight@36-231-114-150.dynamic-ip.hinet.net) (Remote host closed the connection)
[03:40:40] <Guest20> Hi, I'm working with Pydantic BaseModel class and I want to patch a function of it, but it seems to be blocked by default and require special settings that may effect the class outside of the test scope, anyone familiar with a way of doing it? thanks!
[03:40:45] <bjs> Guest84: and line 5 needs more indenting, since it's supposed to be "inside" the if
[03:40:49] *** Joins: kingfightboy (~kingfight@218.23.109.195)
[03:41:46] <Guest84> Thanks so much bjs it worked and now I understand the problem better
[03:42:29] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[03:42:38] *** Quits: evanextreme (~evan@64.187.160.183) (Read error: Connection reset by peer)
[03:43:02] *** Joins: de-facto (~de-facto@user/de-facto)
[03:43:33] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[03:43:57] *** Joins: blackleitus (~blackleit@189.195.195.100)
[03:44:07] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[03:44:25] *** Quits: Guest84 (~Guest84@140.254.77.147) (Quit: Client closed)
[03:44:36] *** Joins: evanextreme (~evan@64.187.160.183)
[03:45:06] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[03:45:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:45:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[03:46:12] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[03:46:51] *** Joins: Viewday115 (~Viewday@user/viewday)
[03:47:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:47:18] *** Viewday115 is now known as Viewday11
[03:47:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:49:20] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[03:49:36] *** Joins: nomic (~nomic@185.217.117.193)
[03:50:00] *** Quits: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com) (Ping timeout: 272 seconds)
[03:50:33] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[03:50:57] *** Joins: blackleitus (~blackleit@189.195.195.100)
[03:51:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[03:51:28] *** Joins: parv (~quass@user/parv)
[03:51:48] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[03:52:12] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:f2b6:f52a:ae50:ec97) (Ping timeout: 240 seconds)
[03:52:47] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[03:53:48] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:54:52] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[03:55:05] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[03:55:14] *** Joins: Wulf (~Wulf@user/wulf)
[03:55:26] *** Joins: de-facto (~de-facto@user/de-facto)
[03:55:38] *** Joins: EgonX (~EgonX@2601:2c7:400:ce30:6940:95ea:d875:7d71)
[03:56:39] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:132e:6fbb:ba84:8287) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[03:56:54] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:5220:2bae:172:edd6)
[04:01:18] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:01:43] *** Joins: ittner (~ittner@2804:15e4:806b:4b00:f50b:cb32:d3c9:1e8f)
[04:02:13] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[04:02:31] <hrob> is it correct that async functions in python only defer execution?  until the execution object (coroutine?) is awaited?
[04:03:07] <hrob> they do not in themselves break from execution... I.e. not like threads of any sort?
[04:04:53] *** Joins: NealRame (~a@202-63-70-107.ip4.superloop.com)
[04:05:21] *** Joins: dme86 (~dan@user/dan86)
[04:06:06] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:06:41] *** Joins: thiras (~thiras@user/thiras)
[04:08:03] *** evanextreme is now known as evanextreme[away
[04:08:03] *** Quits: evanextreme[away (~evan@64.187.160.183) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:08:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:09:32] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Quit: Leaving)
[04:09:57] *** Joins: gimzmoe_ (~gimzmoe@user/gimzmoe)
[04:10:16] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[04:10:31] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[04:10:47] *** Quits: gimzmoe_ (~gimzmoe@user/gimzmoe) (Client Quit)
[04:10:55] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[04:11:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:12:24] *** Joins: mexen (uid495612@user/mexen)
[04:13:00] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[04:13:05] *** Joins: kaiseisei (~Thunderbi@183.184.95.155)
[04:13:16] *** Quits: lionfish (~lionfish@48.21.125.91.dyn.plus.net) (Quit: Leaving)
[04:14:41] *** Quits: kingfightboy (~kingfight@218.23.109.195) (Read error: Connection reset by peer)
[04:15:47] *** Quits: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:15:52] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[04:17:48] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[04:17:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:18:23] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:18:24] *** Joins: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com)
[04:18:36] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:24:04] <CrtxReavr> So Python on Windows gets no psutil module?
[04:24:45] <grym> CrtxReavr: https://psutil.readthedocs.io/en/latest/#windows-services
[04:25:13] <grym> which parts of psutil work are os-dependent; the package itself is cross platform
[04:25:22] *** Quits: EgonX (~EgonX@2601:2c7:400:ce30:6940:95ea:d875:7d71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:25:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[04:25:35] <nedbat> hrob: async functions don't involve threads, but i'm not sure what you're really getting at.
[04:26:11] <CrtxReavr> v.4.2.0 corresponds to what?
[04:26:25] <grym> who knows!
[04:26:50] <grym> https://psutil.readthedocs.io/en/latest/#timeline  mid-2016, if you mean the version of psutil
[04:27:50] <CrtxReavr> Well, on both Windows installs I have access to: https://bpa.st/IIFQ
[04:27:52] <hrob> nedbat   Im only just beginning to study async in python and js too... seem not to break program flow ( separate to another program flow like threads )   Im just a little confused by the naming in both languages I think...
[04:28:04] <grym> you do have to install it, you know
[04:28:06] <jinsun> CrtxReavr: psutil doesn't come with python, if you were thinking that, it has its own versions
[04:28:20] <jinsun> and yeah you have to pip install it
[04:28:33] <hrob> nedbat   the asyncs seem to return objects that I can execute later, belated.
[04:28:55] <nedbat> hrob: yes, async functions can return objs:   result = await some_async_fn()
[04:28:57] <hrob> within the main thread.... or if I want I can put them in a thread I suppose
[04:29:18] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[04:29:21] *** Quits: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[04:29:24] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:29:24] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 240 seconds)
[04:29:55] <nedbat> hrob: you can mix them with threads, but why?
[04:30:04] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:30:11] <hrob> so, if I dare ask, why do these langauges call these async?
[04:30:34] <jinsun> async is short for asynchronous
[04:30:35] <hrob> they are not really async... unless you await them in threads or other
[04:30:47] <jinsun> no, you don't have to se threads
[04:30:53] <jinsun> s/se/use
[04:31:05] <nedbat> hrob: they are async because a number of them can be waiting on IO at once, and any of them can start again next.
[04:31:18] <jinsun> even in a single thread multiple coroutines can be running at once
[04:33:44] *** Quits: Kruppt (~Kruppt@50.111.17.210) (Quit: Leaving)
[04:34:04] <hrob> ah, ok so they are broken from main program flow,  but the await is used to finish and sync things up.
[04:34:05] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:34:13] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[04:34:36] *** Joins: johnkeats6 (~johnkeats@186.220.240.39)
[04:34:53] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:34:57] *** Joins: brabrax (~brabrax@user/brabrax)
[04:36:41] <jinsun> hrob: if you await them one after the other, it would be mostly like runninig them sequencially, but you can create tasks and use stuff like asyncio.gather to start multiple coroutines and await all of them at once
[04:37:00] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[04:37:21] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:38:09] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:2890:96fb:1e70:c360) (Ping timeout: 252 seconds)
[04:40:42] <hrob> jinsun hmm yeah ok, I was thinking that executing "result = foo()" from an  async foo():  return get_something()    would begin doing something in the background already.... but at some point I have to say... hey,  lets make sure we have got it... by doing an await result.
[04:41:13] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a5grpepz7inkj.ipv6.telus.net)
[04:42:29] <hrob> so kinda like syncing up threads I'm thinking.
[04:42:56] <jinsun> hrob: not quite, if foo is async def, then foo() will just give you a coroutine, it won't start running it, it will start running when you await it
[04:44:06] <hrob> jinsun  I c... so its mostly useful if can execute them as you said above in a batch of things
[04:44:22] <hrob> batch of async things
[04:44:35] <CrtxReavr> jinsun, ahh - right you are. . . seems I've always had it drug in as a dependency and just assumed it was part of base.
[04:45:46] <jinsun> hrob: you can also create tasks, task = asyncio.create_task(foo()), and that will schedule the coroutine to be executed in the event loop
[04:45:50] *** Joins: crashrep (~crashrep@user/crashrep)
[04:46:38] *** Joins: pycurious (~Adium@user/pycurious)
[04:46:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:46:59] <jinsun> hrob: and waiting task will be kinda like "syncing up threads" that ou were thinking
[04:47:18] <hrob> jinsun  thanks!  this is getting a bit clearer, not as magical as I first thought... also same it seems in JS... need put async things into a setTimeout or other to break from program flow
[04:48:00] <hrob> jinsun  wonderful  thanks.... still dont agree with the naming of the functions lol
[04:48:10] <nedbat> hrob: i feel like "break from program flow" is maybe the wrong way to think about it.
[04:48:32] <nedbat> hrob: i think of it as "there are N things running at once".  At first, N = 1, but when you make tasks, they add to N.
[04:48:45] <hrob> * sorry meant dont agree with the async declaration name
[04:50:12] *** Quits: yte3 (~0@151.31.102.40) (Ping timeout: 240 seconds)
[04:52:03] <hrob> nedbat  thanks :)    so its a convenience / sugar probably   for threading stuff, but creating and executing, awaiting on such coroutine is not that useful.... except just to keep or defer some execution
[04:52:17] <nedbat> hrob: it doesn't use threads.
[04:52:46] <nedbat> hrob: though it accomplishes some of the same things as threads
[04:52:47] <hrob> but can run async ok
[04:53:02] <hrob> if used in a batch.... a task as you said ?
[04:53:09] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[04:53:23] *** Quits: brookesy66 (~will@203.220.123.174) (Quit: WeeChat 3.4)
[04:54:10] <nedbat> hrob: let's say you wanted to get 20 web pages. You could make 20 tasks, each gets one page.  you use asyncio.gather(tasks), and then can all make progress at the same time.
[04:54:24] <hrob> ok Im going to think of this as a poor mans way of doing 2+ things at once in the interpreter, but the probably depends a lot on the code within
[04:54:29] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Quit: kaiseisei)
[04:54:47] <jinsun> hrob: the event loop runs in a single thread, it will execute one task at a time, but it will switch to another one when the currently executing task starts awaiting something else, and it will come back to the current one later, thats how you get multiple runninng "at the same time"
[04:55:20] *** Joins: kaiseisei (~Thunderbi@183.184.95.155)
[04:55:29] <pycurious> In a package what is the correct way to import a module that is one higher level from the current module? So inside package/tests/xyz/test.py - > how do i import package/xyz/xyz.m ?
[04:55:53] <SnoopJ> in other words, `await` does what some other languages call `yield` in a coroutine (as in yield the flow of execution), but in Python that keyword was taken :)
[04:56:13] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[04:56:51] <grym> pycurious: as package.xyz.xyz.m
[04:56:54] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:70f:94a2:4c9e:c7f6) (Quit: No Ping reply in 180 seconds.)
[04:56:57] <toma> exit
[04:57:02] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a5grpepz7inkj.ipv6.telus.net) (Quit: Leaving)
[04:57:08] <hrob> lol SnoopJ jinsun  thanks... ok... so it is really key to combine the two ... async foo()  with well placed awaits within
[04:57:44] <hrob> and hardly any point in doing only one async execution.
[04:58:11] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:87b2:598e:5ed5:8ca9)
[04:58:29] <pycurious> grym: then i have to install the package before i run py.test and pylint on it?
[04:58:57] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[04:59:16] <hrob> SnoopJ  and indeed yield an item does that too in python... but very specific to that only
[04:59:19] <grym> pycurious: as a general rule, that makes things a lot easier
[04:59:39] <grym> pycurious: which is why venv/bin/python -m pip install -e is nice
[04:59:59] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:d5ab:7fde:910:2e6b) (Ping timeout: 256 seconds)
[05:00:11] <pycurious> grym: how do i do this with poetry?
[05:00:37] <SnoopJ> hrob, yep, so much so that before explicitly-asynchronous features were added to the language, there were ways to build coroutines on top of generators.
[05:00:50] <jinsun> hrob: well if you are using a library that provides async defs only, then you are kinda forced to await it and use it inside async defs only, even if you want to execute only one task
[05:00:50] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:00:52] <SnoopJ> async is kinda just formalizing that as a separate notion :)
[05:00:55] <SnoopJ> ("just")
[05:01:14] *** Joins: Hackerpcs (~user@user/hackerpcs)
[05:01:28] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[05:02:14] *** Joins: davit_ (~davit@50.35.184.227)
[05:02:17] <hrob> SnoopJ   I find yield... such as in pytest fixtures horribly hard to read :S
[05:02:19] *** Quits: davit (~davit@50.35.184.227) (Read error: Connection reset by peer)
[05:02:33] *** Quits: pyevery__ (~pyeveryth@dot1x-155-41-203-218.bumc.bu.edu) (Remote host closed the connection)
[05:02:41] <hrob> I suppose if used incorrectly mostly though... and not transparently.
[05:02:47] <grym> pycurious: poetry install
[05:03:01] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:03:03] *** davit_ is now known as davit
[05:03:08] <grym> and then probably poetry run pytest tests/
[05:03:10] <grym> or whatever
[05:04:09] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:05:02] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[05:05:03] <pycurious> grym: so poetry install - installs it in a virtual environment of sorts?
[05:06:03] *** Joins: Devinn (~Devinn@searspoint.nvidia.com)
[05:06:18] <grym> pycurious: yes, a venv
[05:06:33] <grym> pycurious: if you want to know where, it's `poetry info -p`
[05:06:38] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 272 seconds)
[05:06:55] <grym> er, poetry env info -p
[05:06:58] *** Quits: rya (~ry@user/rya) (Ping timeout: 250 seconds)
[05:07:41] *** Quits: XV9 (~XV8@2601:5cb:c001:50:f0aa:7328:41:624f) (Quit: Textual IRC Client: www.textualapp.com)
[05:07:57] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[05:08:18] *** Joins: Viewday117 (~Viewday@user/viewday)
[05:08:23] <hrob> is Poetry well tolerated Im wondering?   You can't install it from pypi for some enigmatic reasons....
[05:08:50] *** Quits: purple_cthulhu (~rax@2.186.4.28) (Quit: Leaving.)
[05:08:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:09:21] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[05:09:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[05:09:24] *** Viewday117 is now known as Viewday11
[05:09:37] <hrob> will run into strange issues with MD5 hashes if using pip to install it... and they don't recommend it   https://python-poetry.org/docs/
[05:09:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:11:05] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:11:08] <SnoopJ> I have never seen that when installing poetry from PyPI...
[05:12:05] <SnoopJ> I don't particularly like the tool either, though. It seems to have some nice functionality if have some of the problems it has specifically been built towards, but...I don't think I have those, and I have some grievances with basic user experience.
[05:12:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[05:12:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:12:52] <hrob> yeah can install it from pypi... but keep getting such issues with package hash keys, only solution to use the recommended install method
[05:13:26] <SnoopJ> I'm sticking to 'just pip' for the time being, now that it can do editable pyproject.toml installs.
[05:13:54] *** Joins: Betal (~Betal@user/betal)
[05:14:32] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[05:16:42] *** Joins: rya (~ry@47.23.188.138)
[05:16:42] *** Quits: rya (~ry@47.23.188.138) (Changing host)
[05:16:42] *** Joins: rya (~ry@user/rya)
[05:16:55] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91) (Ping timeout: 250 seconds)
[05:17:08] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:58f5:a83c:3a8a:25e6)
[05:17:08] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:58f5:a83c:3a8a:25e6) (Changing host)
[05:17:08] *** Joins: skapate (~Skapata@user/skapata)
[05:17:24] *** Quits: parv (~quass@user/parv) (Ping timeout: 272 seconds)
[05:18:02] <pycurious> SnoopJ: how do i fire a pip on a pyproject.toml?
[05:18:45] *** Joins: beeze (~beeze@cpe-174-109-135-39.nc.res.rr.com)
[05:18:51] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[05:19:22] <pycurious> Does anyone have a good tutorial on unit tests (preferably youtube) for Python package development ?  (preferably also talks about pytest/coverage)
[05:19:58] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:20:07] *** Joins: Viewday11 (~Viewday@user/viewday)
[05:20:33] <jinsun> pycurious: nedbat's talk is good https://nedbatchelder.com/text/test3.html
[05:21:38] <jinsun> there is a youtube video too but that covers unittest instead of pytest https://nedbatchelder.com/text/test0.html
[05:22:39] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:23:19] <SnoopJ> pycurious, "fire a pip?"
[05:23:59] *** Joins: mickey8 (~user@user/mickey)
[05:24:05] <SnoopJ> +1 to nedbat's pytest talk, very handy
[05:25:55] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[05:26:45] <PantelicGR2> jinsun: Thanks a lot. :)
[05:27:13] <pycurious> SnoopJ: If I have a pyproject.toml - how do i tell pip to install [tool.poetry.dev-dependencies] ?
[05:27:26] <PantelicGR2> This will help people to learn about testing.
[05:28:01] <grym> pycurious: `poetry install` defaults to including dev deps
[05:28:27] <grym> (and poetry just calls pip)
[05:29:06] <pycurious> grym: I thought pip now understands pyproject.toml - so i asked
[05:29:13] <SnoopJ> pycurious, for development I think the intended UX is that you first install poetry (however you want to) and then do what grym said
[05:29:30] *** Joins: moose (~moose@user/moose)
[05:29:45] <SnoopJ> pycurious, it does understand it, but what you want to do isn't really one of the goals. pip understands if you want to use poetry as a build backend, but it would be kind of weird to have both tool acting as frontends
[05:30:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:30:05] <SnoopJ> (there's nothing stopping you from declaring poetry as a dependency, possibly to a [dev] extra, though?)
[05:30:18] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:30] <grym> pycurious: well, for pip, `thevenv/bin/python -m pip install -e '.[dev]'` or what have you, just like normal
[05:30:37] <SnoopJ> little things like this are what makes poetry feel like death by a thousand cuts, to me
[05:31:15] <grym> pycurious: as someone else who wants to install a project whose build system is poetry, just  `pip install` like anything else
[05:32:13] <SnoopJ> you do have to declare it as the build backend (under the [build-system] section) though. See the `poetry` manual
[05:33:13] *** Joins: vlm (~vlm@user/vlm)
[05:33:24] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[05:34:14] *** Joins: EgonX (~EgonX@2601:2c7:400:ce30:6940:95ea:d875:7d71)
[05:35:06] *** Quits: EgonX (~EgonX@2601:2c7:400:ce30:6940:95ea:d875:7d71) (Client Quit)
[05:35:19] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[05:35:52] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:36:24] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 272 seconds)
[05:37:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:37:03] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[05:37:27] *** Joins: blackleitus (~blackleit@189.195.195.100)
[05:39:06] *** Joins: omegaxis (~root@srv239118-206152.vps.etecsa.cu)
[05:39:07] *** Joins: jinsun__ (~jinsun@user/jinsun)
[05:39:09] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:39:12] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:39:31] *** brabrax_ is now known as brabrax
[05:39:45] *** Joins: bancroft (~bancroft@user/bancroft)
[05:39:57] *** Quits: emf (~emf@2620:10d:c090:400::5:d01b) (Ping timeout: 240 seconds)
[05:40:23] <bancroft> while you're in a virtual environment, is there a way to tell where the active script is? or where the environment folder is?
[05:40:58] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[05:41:05] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Read error: Connection reset by peer)
[05:41:55] <grym> bancroft: __file__, sys.executable
[05:41:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[05:41:57] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 252 seconds)
[05:42:10] <SnoopJ> bancroft, __file__ is the idiom for the .py you're inside of (assuming your code comes from one!) and sys.executable will point to the interpreter being used. The VIRTUAL_ENV environment variable can be useful when activated, but is a little scarier imo
[05:42:20] *** Joins: aknot (~aknot@2603:900a:1503:17bb:b9d5:754d:3728:6bcc)
[05:42:20] <SnoopJ> (because I don't often activate things to run them)
[05:42:27] <SensibleSalmon[m> bancroft: if you do `which python` it should tell you. Specifically, it'll tell you where the python executable for that venv is
[05:42:36] *** Quits: ouestbillie (~ced@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[05:42:40] <grym> SensibleSalmon[m: type -a is even handier, sometimes
[05:43:04] <bancroft> The scarier is what I needed, outside of python :D thanks SnoopJ grym and SensibleSalmon[m
[05:43:31] <SnoopJ> grym, are there circumstances under which they're different for `python3`? I.e. are there tools that define it as a function or somesuch?
[05:43:32] <grym> bancroft: thevenv/bin/python -c "import sys; print(sys.executable)" :D
[05:43:50] <bancroft> I needed to know where pyenv is going to install the virtualenv, so that I can tell ansible to do the right thing
[05:44:07] <bancroft> oh wow, yeah that would have worked too
[05:44:16] <grym> SnoopJ: afaik no, but type -a will tell you more than just the first thing that python could be.  (type -a python gives me pyenv/shims and then /usr/bin)
[05:44:23] *** Joins: ouestbillie (~ced@192-222-138-215.qc.cable.ebox.net)
[05:44:31] <SnoopJ> grym, `which -a` also does that :)
[05:44:41] <grym> til
[05:44:47] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:44:49] <bancroft> oh no, that would have told me where the python was and not the environment (they could be different if you used pew or something)
[05:44:49] <SnoopJ> `type` is POSIX though, if you're into that
[05:44:49] <grym> don't worry, it'll be removed from ubuntu soon :D
[05:44:57] *** Quits: Veil (~Veil@user/Veil) (Quit: If one cut the source of flow.)
[05:44:59] <SnoopJ> they're removing `which`?
[05:45:08] <grym> there was at least some discussion about it
[05:45:16] <SnoopJ> bancroft, let's back up a step: why do you need to know?
[05:45:24] <grym> (but i think no)
[05:45:34] <SnoopJ> you don't have a link handy, do you?
[05:45:51] *** Joins: Viewday110 (~Viewday@user/viewday)
[05:45:59] <bancroft> SnoopJ: I need to migrate webservers from using system python to virtualenv python because ... I have no idea why they never did it
[05:46:01] <grym> googling, but badly :D
[05:46:17] <SnoopJ> that's why I asked, kinda tricky to search for :)
[05:46:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:46:30] <bancroft> so I'm doing pyenv and I need to know paths because ansible is ... not great with paths
[05:46:42] <SnoopJ> oh no
[05:46:49] <SnoopJ> that is a fairly cursed problem
[05:46:55] *** Joins: Veil (~Veil@user/Veil)
[05:47:00] <grym> SnoopJ: https://lwn.net/Articles/874049/  they decided "no"
[05:47:12] <SnoopJ> bancroft, there's important state being stored in the venvs?
[05:47:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:47:18] *** Viewday110 is now known as Viewday11
[05:47:23] <SnoopJ> grym, thanks
[05:47:27] <bancroft> SnoopJ: important state?
[05:47:47] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:48:49] <SnoopJ> bancroft, is there a reason you can't destroy the venvs and re-install the software in venvs created by the system Python?
[05:49:20] <SnoopJ> that would be substantially simpler, so I'm imagining you have some other constraints that prevent you from doing so...
[05:49:22] <bancroft> SnoopJ: I could, but then I would need to nuke the venv again once I get python installed via pyenv.
[05:49:51] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[05:49:57] <SnoopJ> bancroft, you could do pyenv first and then do the re-install using a venv created by pyenv, though?
[05:50:34] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[05:50:56] <SnoopJ> bancroft, "this is extremely ephemeral" is the basically the biggest assumption underlying venvs, I would bend over quite a ways before trying to relocate one
[05:51:11] *** Quits: Elodin (~elodin@user/elodin) (Quit: WeeChat 3.4)
[05:51:18] <bancroft> SnoopJ: I'm not relocating anything, I'm creating new venvs with pyenv too
[05:51:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:51:41] <grym> bancroft: then put them wherever you want them, no?
[05:51:51] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[05:52:02] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Quit: kaiseisei)
[05:52:19] *** lukedashjr is now known as luke-jr
[05:52:19] *** Joins: kaiseisei (~Thunderbi@183.184.95.155)
[05:52:35] <SnoopJ> bancroft, *oh,* I think I get it. You're trying to locate from the current application the place where the new venv will be created, so that the entrypoints end up in the same place?
[05:52:40] <SnoopJ> (or approximately that?)
[05:52:53] *** Joins: p-i-_ (~Ohmu@183.89.27.225)
[05:53:47] <bancroft> SnoopJ: Yes, because ansible will not know paths, doesn't understand pyenv, and all that. I need to have it figure out where the path is
[05:53:47] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:54:15] <SnoopJ> bancroft, do you know where the entrypoints to the software in the venv(s) are?
[05:54:46] *** Quits: Devinn (~Devinn@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[05:56:40] *** Quits: p-i- (~Ohmu@183.89.27.225) (Ping timeout: 272 seconds)
[05:56:53] <gitesh> Hi
[05:57:07] <gitesh> Do you know django for beginners book?
[05:57:09] <bancroft> SnoopJ: yup, and i'm trying to make everything fairly standard (at least in my opinion). The server is owned by www-user and it's in ~/deploy/<commit> so that I can have a healthcheck if the update fails I can rollback
[05:57:20] <gitesh> Which covers latest version of django
[05:57:31] <gitesh> Is there python book like that?
[05:57:38] <gitesh> Which covers latest
[05:57:40] <bancroft> I think there's a two scoups of django book that's fairly up-to-date
[05:58:04] <bancroft> two scoops of django**
[05:59:03] <SnoopJ> bancroft, are all of those entrypoints /path/to/some/venv/bin/thing or symlinks thereto, perhaps?
[05:59:59] <SnoopJ> I think I scan what you said about `~/deploy/<commit>`, you have the old versions "still deployed" so you can quickly revert to a known-good version?
[05:59:59] *** Quits: darkoccultist (~darkone@user/darkoccultist) (Read error: Connection reset by peer)
[06:00:01] <bancroft> SnoopJ: former
[06:00:23] <bancroft> that's exactly right
[06:00:54] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:01:00] <SnoopJ> bancroft, why not `Path(that).parent.parent` then? Or `readlink -f $THAT_PATH/../..` if you prefer a shell-ism
[06:01:00] <bancroft> but this is all temporary, I'm trying to move them to a dockerized everything
[06:01:08] *** Joins: Elodin (~elodin@user/elodin)
[06:01:34] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[06:02:07] <trace987> are there libraries for faster string operations?
[06:02:52] <SnoopJ> err, the shell-ism isn't quite right, I think it needs a `dirname` to locate relative to the actual executable
[06:02:59] <SnoopJ> trace987, what kind of operations?
[06:03:20] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:03:21] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[06:03:42] <trace987> concatenation
[06:03:59] <SnoopJ> hmm. probably, but I don't know of one off the top of my head.
[06:04:53] <omegaxis> l = ["string", "string"]; " ".join(l)
[06:05:06] <trace987> omegaxis, yes
[06:05:13] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Quit: kaiseisei)
[06:05:15] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[06:05:23] *** Joins: bindu_ (~bindu@user/bindu)
[06:05:39] <SnoopJ> omegaxis, that's a lot more complicated than `"string" + "string"`
[06:05:50] <SnoopJ> err, I guess `+ " " +`
[06:05:51] <omegaxis> idk
[06:05:56] <trace987> can python generate functions?
[06:06:00] <SnoopJ> yep
[06:06:05] <trace987> how
[06:06:13] <SnoopJ> they're just objects
[06:06:21] *** Joins: frost (~frost@user/frost)
[06:06:31] <trace987> how do I change a line in a function by programming
[06:06:54] *** Joins: kaiseisei (~Thunderbi@183.184.95.155)
[06:07:22] *** bindu_ is now known as bindu
[06:07:30] <jeho> like modifying the AST of an existing command?
[06:07:50] <jinsun__> inspect.getsource + string manipulation + eval :D
[06:09:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:10:13] <jinsun__> easier to do stuff before and after, using decorators
[06:10:44] <jinsun__> changing in the middle is going to be pain
[06:11:03] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[06:11:39] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Ping timeout: 252 seconds)
[06:11:46] *** Joins: kaiseisei1 (~Thunderbi@183.184.95.155)
[06:12:29] <SnoopJ> trace987, here's an example of a function that makes other functions: https://bpa.st/X7BQ
[06:13:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[06:14:04] *** kaiseisei1 is now known as kaiseisei
[06:15:50] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[06:16:43] *** Joins: Nact (~l@2a02:2788:11c4:6e6:ede0:bbc0:a761:9e01)
[06:17:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[06:17:43] *** Joins: bluedust (~bluedust@103.161.144.138)
[06:18:01] *** mpmc is now known as easy_mark
[06:18:50] <trace987> jeho, yes
[06:18:52] *** Joins: Shapeshifter (~Shapeshif@parakeet.ifi.uzh.ch)
[06:19:13] <SnoopJ> probably what jinsun__ said, then
[06:19:18] <trace987> yes
[06:19:36] <SnoopJ> A silly example of doing this: https://github.com/snoack/python-goto
[06:20:54] *** Joins: a6a45081-2b83 (~aditya@2601:249:4380:4f10::fe26)
[06:21:51] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[06:22:39] *** Quits: bluedust (~bluedust@103.161.144.138) (Ping timeout: 252 seconds)
[06:23:34] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:25:00] *** Quits: a6a45081-2b83 (~aditya@2601:249:4380:4f10::fe26) (Ping timeout: 240 seconds)
[06:25:02] *** Joins: f33f046c-a02e (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[06:26:25] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[06:27:19] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[06:27:55] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[06:28:09] <Shapeshifter> Hi. I'm a bit confused about how to structure a simple python project/package. packaging.python.org suggests having src/ and src/mypackage and tests/ but setuptools.pypa.io suggests mypackage/tests, so putting the tests directory within the project module. This also seems to be the 'common wisdom' floating around. I can't find an official guideline.
[06:28:13] *** Joins: rajkosto (~rajkosto@109-93-43-201.dynamic.isp.telekom.rs)
[06:28:41] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[06:29:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Read error: No route to host)
[06:30:18] <SnoopJ> Shapeshifter, there isn't really an official one, in-source vs out-of-source testing is just one of the aesthetic preferences your project might express.
[06:30:54] <SnoopJ> at least the storage of the tests. I would say the Python ecosystem is fairly in favor of making sure testing *artifacts* are out-of-source unless there's a really good reason they should go into the source-tree
[06:31:02] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[06:31:21] *** Joins: Elodin (~elodin@user/elodin)
[06:32:46] *** Quits: envex (~rf@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 272 seconds)
[06:33:22] <jinsun__> Shapeshifter: pytest docs have some discussion about layouts https://docs.pytest.org/en/7.0.x/explanation/goodpractices.html#choosing-a-test-layout-import-rules
[06:33:47] <jinsun__> pytest can handle both ways, so it is mostly up to you in the end
[06:34:02] <Shapeshifter> Thanks SnoopJ and jinsun__
[06:34:48] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:34:59] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[06:35:00] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Ping timeout: 240 seconds)
[06:36:12] *** Quits: aknot (~aknot@2603:900a:1503:17bb:b9d5:754d:3728:6bcc) (Ping timeout: 240 seconds)
[06:36:17] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[06:38:03] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[06:42:43] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[06:44:10] *** Quits: beeze (~beeze@cpe-174-109-135-39.nc.res.rr.com) (Ping timeout: 272 seconds)
[06:44:21] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:45:03] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[06:45:05] *** Joins: zaquest (~notzaques@5.130.79.72)
[06:45:27] *** Joins: blackleitus (~blackleit@189.195.195.100)
[06:47:02] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[06:47:05] *** Quits: f33f046c-a02e (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[06:47:27] *** Joins: adeliktas6 (~adeliktas@i59F52959.versanet.de)
[06:49:03] *** Quits: adeliktas (~adeliktas@i59F5FF2F.versanet.de) (Ping timeout: 252 seconds)
[06:49:03] *** adeliktas6 is now known as adeliktas
[06:50:21] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[06:51:26] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[06:51:43] *** Parts: bancroft (~bancroft@user/bancroft) (WeeChat 3.2)
[06:51:50] <yolo> anyone uses coc-pyright here, it works most of the time for me, but for pygobjects, if I do: `import gi; from gi.repository import Gtk; Gtk.XXX` will never do autocompletion, other libraries worked fine though.
[06:52:19] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[06:53:19] *** Quits: Elodin (~elodin@user/elodin) (Quit: WeeChat 3.4)
[06:54:14] *** Joins: Elodin (~elodin@user/elodin)
[06:55:46] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[06:55:46] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[06:55:46] *** Joins: JordiGH (~jordi@user/jordigh)
[06:56:29] *** Joins: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net)
[06:56:41] *** Quits: Elodin (~elodin@user/elodin) (Client Quit)
[06:57:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:57:17] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:57:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:57:51] *** Joins: emf (~emf@2620:10d:c090:400::5:6a6c)
[06:58:04] <yolo> found a workaround: pip install PyGObject-stubs :)
[07:00:29] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[07:01:04] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[07:01:24] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:02:34] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:02:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[07:03:38] *** Joins: pycurious (~Adium@user/pycurious)
[07:03:49] *** Joins: alex11 (~alex11@user/alex11)
[07:05:55] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 240 seconds)
[07:06:58] *** Joins: spithash (~spithash@user/spithash)
[07:07:34] *** Joins: Azem (~haise01@user/haise01)
[07:07:55] *** Joins: Viewday115 (~Viewday@user/viewday)
[07:09:22] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:09:22] *** Viewday115 is now known as Viewday11
[07:09:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:10:30] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 252 seconds)
[07:12:43] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[07:12:58] *** Guest4829 is now known as polo
[07:13:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:13:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:13:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Client Quit)
[07:13:53] *** Joins: djapo (~archangel@user/djapo)
[07:14:01] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91)
[07:15:01] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[07:16:45] <pycurious> how do i parse this datetime string: 2022-02-08T15:27:55.563Z
[07:17:14] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[07:17:14] *** Quits: emf (~emf@2620:10d:c090:400::5:6a6c) (Quit: emf)
[07:19:21] *** Joins: sutang (~sutang@106.118.184.159)
[07:20:26] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[07:20:37] <pycurious> used dateparser.parse
[07:20:51] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:21:06] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[07:21:26] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[07:23:04] *** Quits: Babar (~Babar@115.74.184.138) (Killed (lead.libera.chat (Nickname regained by services)))
[07:23:04] *** Joins: Babar (~Babar@115.74.184.138)
[07:23:28] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[07:24:23] <Batzy> can anyone tell me whats wrong with my cython code? (https://bpa.st/2C7A) i can't pull it in to python
[07:24:36] <Batzy> i guess my function has to have a normal "def" but what if i want to do all my multiplication and so on in C?
[07:25:12] <Batzy> oh i need cpdef
[07:25:35] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Remote host closed the connection)
[07:25:55] *** Joins: Babar_ (~Babar@115.74.184.138)
[07:25:55] *** Babar is now known as Guest1605
[07:25:55] *** Quits: Guest1605 (~Babar@115.74.184.138) (Killed (silver.libera.chat (Nickname regained by services)))
[07:25:55] *** Babar_ is now known as Babar
[07:26:55] *** Quits: omegaxis (~root@srv239118-206152.vps.etecsa.cu) (Ping timeout: 250 seconds)
[07:28:45] *** Joins: Mnedusza (~Thunderbi@S010620e52a118339.ed.shawcable.net)
[07:30:10] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:32:30] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[07:32:45] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:33:31] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:42] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:49] *** Quits: catdog (~quassel@birdperson.tuxzone.org) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:37:58] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[07:39:46] *** Joins: parv (~quass@user/parv)
[07:43:30] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[07:44:12] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 240 seconds)
[07:45:34] *** Quits: Mnedusza (~Thunderbi@S010620e52a118339.ed.shawcable.net) (Quit: Mnedusza)
[07:46:16] *** Joins: Viewday115 (~Viewday@user/viewday)
[07:46:48] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 252 seconds)
[07:47:27] <Batzy> can anyone offer guidance on how to import 128 bit ints into cython? i tried: https://stackoverflow.com/questions/27582001/how-to-use-128-bit-integers-in-cython but it's not working
[07:47:41] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:5b51:f662:45fb:ee20)
[07:47:43] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:47:44] *** Viewday115 is now known as Viewday11
[07:48:52] *** Joins: omegaxis (~root@srv239118-206152.vps.etecsa.cu)
[07:49:17] *** Joins: sreve_ (~quassel@p549d71aa.dip0.t-ipconnect.de)
[07:49:24] *** Quits: sreve (~quassel@p4ff44d01.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:49:30] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:49:48] *** Quits: ovelny (~ovelny@user/ovelny) (Ping timeout: 240 seconds)
[07:53:07] <sutang> 好像没有人回复你。
[07:54:56] *** Joins: kyberlaw (~kyberlaw@ool-18bc3951.dyn.optonline.net)
[07:55:07] *** Quits: kyberlaw (~kyberlaw@ool-18bc3951.dyn.optonline.net) (Client Quit)
[07:56:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:57:46] *** Joins: saroy (~Sandipan@43.252.250.104)
[07:57:48] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[07:58:06] *** Joins: smoke (~smoke@user/smoke)
[07:58:19] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[07:58:19] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[07:58:19] *** Joins: JordiGH (~jordi@user/jordigh)
[07:58:50] *** Joins: Elodin (~elodin@user/elodin)
[07:58:53] *** Quits: Elodin (~elodin@user/elodin) (Client Quit)
[07:59:09] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[08:00:13] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:2752:807d:fa72)
[08:00:51] *** Quits: Nact (~l@2a02:2788:11c4:6e6:ede0:bbc0:a761:9e01) (Read error: Connection reset by peer)
[08:02:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[08:02:04] *** Quits: omegaxis (~root@srv239118-206152.vps.etecsa.cu) (Ping timeout: 272 seconds)
[08:02:52] *** Joins: navigator (~Navigator@047-229-046-254.res.spectrum.com)
[08:03:12] *** Quits: ouestbillie (~ced@192-222-138-215.qc.cable.ebox.net) (Quit: WeeChat 3.4)
[08:05:47] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[08:06:21] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:06:42] *** Joins: bluedust (~bluedust@103.161.144.138)
[08:07:48] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[08:08:00] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[08:08:01] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:08:45] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[08:08:53] *** Quits: victori (~victori@cpe-76-89-139-69.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:09:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[08:10:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:11:44] *** Joins: bluedust_ (~bluedust@185.248.85.42)
[08:12:11] *** Joins: cyphase (~cyphase@user/cyphase)
[08:12:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:12:35] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:12:48] *** Joins: pycurious (~Adium@user/pycurious)
[08:13:05] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[08:13:06] *** Joins: cyphase_eviltwin (~cyphase@user/cyphase)
[08:13:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:13:48] *** Parts: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Leaving)
[08:15:19] *** Quits: navigator (~Navigator@047-229-046-254.res.spectrum.com) (Quit: Leaving)
[08:15:36] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[08:15:41] *** Joins: Elodin (~elodin@user/elodin)
[08:15:45] *** Joins: navigator (~quassel@047-229-046-254.res.spectrum.com)
[08:16:00] *** Quits: bluedust (~bluedust@103.161.144.138) (Ping timeout: 272 seconds)
[08:16:46] *** Quits: dirtydan (~dan@c-76-24-53-177.hsd1.nh.comcast.net) (Ping timeout: 260 seconds)
[08:17:39] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:17:54] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 272 seconds)
[08:18:12] *** Joins: omegaxis (~root@srv239118-206152.vps.etecsa.cu)
[08:18:13] *** Quits: navigator (~quassel@047-229-046-254.res.spectrum.com) (Read error: Connection reset by peer)
[08:19:51] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: So long King Bowser!)
[08:20:20] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[08:21:04] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[08:21:04] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[08:21:04] *** Joins: JordiGH (~jordi@user/jordigh)
[08:22:30] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Read error: Connection reset by peer)
[08:25:30] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[08:26:18] *** Joins: navigator (~Navigator@047-229-046-254.res.spectrum.com)
[08:26:59] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[08:27:36] *** Quits: jordan537547 (~jordan@2601:8c2:8200:62f:c6dd:f7c7:887e:e1a2) (Read error: Connection reset by peer)
[08:30:04] *** Joins: Atque (~Atque@user/atque)
[08:30:37] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:31:12] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[08:31:27] <whatsupdoc> Is there a one-liner that counts the number of different characters between two strungs?
[08:31:33] <whatsupdoc> strings*
[08:32:26] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:32:37] <Repiphany> sum(a != b for a, b in zip(string_1, string_2))
[08:32:59] <whatsupdoc> damn, nice
[08:33:29] <whatsupdoc> I forgot you can use the boolean
[08:34:07] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:37:14] <sutang> squares = [value**2 for value in range(1,11)]
[08:37:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[08:37:23] <deltab> to be more explciit about it you can convert the bool to int
[08:38:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:38:57] <deltab> that's optional though because bool is a subclass of int
[08:39:16] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:bcd2:72e3:d29d:9077)
[08:40:52] *** Joins: Vonter (~Vonter@user/vonter)
[08:41:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:41:54] *** Joins: pycurious (~Adium@user/pycurious)
[08:42:27] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[08:46:47] *** Quits: keyehzh_ (~keyehzh@user/keyehzh) (Remote host closed the connection)
[08:48:02] *** Quits: sutang (~sutang@106.118.184.159) (Quit: 离开)
[08:48:18] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 272 seconds)
[08:48:48] <KirkMcDonald> whatsupdoc: You could stick `+ abs(len(string_1) - len(string_2))` on the end of that.
[08:49:30] <whatsupdoc> yea i guess so
[08:50:17] *** Joins: han-solo (~hanish@user/han-solo)
[08:50:52] <phy1729> or zip_longest
[08:52:35] <whatsupdoc> there's zip_longest? wow i've been living a lie
[08:54:00] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 272 seconds)
[08:55:18] *** Joins: analoq (~yashi@user/dies)
[08:58:33] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:02:44] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[09:03:15] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 252 seconds)
[09:03:54] *** Joins: frost (~frost@user/frost)
[09:04:06] <MrMobius> is there a better way to add an item to a list in a dictionary if the key doesnt exist and append if it does than an if/else statement?
[09:04:23] <han-solo> `collections.defaultdict`
[09:05:17] <han-solo> `d = collections.defaultdict(list); d['x'].append(1);...`
[09:05:24] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[09:06:48] <KirkMcDonald> Or the more old-school: d.setdefault('x', []).append(v)
[09:07:05] *** Quits: navigator (~Navigator@047-229-046-254.res.spectrum.com) (Quit: Leaving)
[09:07:37] *** Joins: Viewday119 (~Viewday@user/viewday)
[09:08:18] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[09:09:01] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 240 seconds)
[09:09:04] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:09:04] *** Viewday119 is now known as Viewday11
[09:09:17] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:2f83:eea6:baa0:61bf)
[09:09:37] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[09:10:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:11:23] *** Joins: smoke (~smoke@user/smoke)
[09:14:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:15:58] *** Joins: mexen (uid495612@user/mexen)
[09:17:08] *** Joins: bluedust (~bluedust@103.161.144.138)
[09:17:26] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[09:17:33] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91) (Ping timeout: 252 seconds)
[09:18:21] *** Quits: smoke (~smoke@user/smoke) (Remote host closed the connection)
[09:18:42] *** Quits: remote (~self@user/hackers) (Ping timeout: 272 seconds)
[09:18:57] *** Quits: jrjsmrtn (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be) (Ping timeout: 256 seconds)
[09:19:04] *** Joins: remote (~self@user/hackers)
[09:19:48] *** Quits: bluedust_ (~bluedust@185.248.85.42) (Ping timeout: 240 seconds)
[09:20:58] *** Joins: jrjsmrtn (~jrjsmrtn@ip-213-49-42-24.dsl.scarlet.be)
[09:21:56] *** Joins: ice9 (~ice9@user/ice9)
[09:27:59] *** Joins: nomic (~nomic@185.217.117.193)
[09:31:03] *** Joins: masoudd (~masoudd@user/masoudd)
[09:33:09] *** Joins: audio (~audio@user/audio)
[09:34:05] *** Joins: psyxopompos (~psyxopomp@user/psyxopompos)
[09:35:00] *** Joins: audiobirb (~audio@user/audio)
[09:35:24] *** Quits: audiofreeze (~audio@2603-8081-1800-13f9-22a5-9711-6139-8d6d.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:35:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:36:43] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[09:36:50] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[09:36:51] *** Quits: KevinX (~KevinX@user/KevinX) (Read error: Connection reset by peer)
[09:37:01] *** Joins: moose (~moose@user/moose)
[09:37:18] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[09:37:24] *** Quits: wac (~wac@user/wac) (Quit: Zzzz…)
[09:37:30] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[09:37:36] *** Joins: KevinX (~KevinX@user/KevinX)
[09:37:36] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[09:38:03] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[09:38:20] *** Quits: audio (~audio@user/audio) (Ping timeout: 272 seconds)
[09:38:26] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[09:38:27] *** Joins: blackleitus (~blackleit@189.195.195.100)
[09:38:31] *** Quits: rajkosto (~rajkosto@109-93-43-201.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[09:38:47] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:15df:c5e6:871:3fb3)
[09:39:25] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[09:39:26] *** Joins: trace987 (~trace@user/trace)
[09:39:28] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[09:39:35] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 240 seconds)
[09:39:36] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[09:39:36] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[09:39:49] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:40:02] *** Joins: spithash (~spithash@user/spithash)
[09:40:07] *** Joins: martums56 (~martums@user/martums)
[09:40:25] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Read error: Connection reset by peer)
[09:40:36] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Ping timeout: 240 seconds)
[09:40:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[09:40:36] *** Quits: baltazar (~baltazar@178-164-240-26.pool.digikabel.hu) (Ping timeout: 240 seconds)
[09:40:43] *** Joins: Wulf (~Wulf@user/wulf)
[09:40:52] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[09:41:00] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 240 seconds)
[09:41:13] *** Joins: audio (~audio@user/audio)
[09:41:24] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 240 seconds)
[09:41:24] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[09:41:44] *** Joins: baltazar (~baltazar@178-164-240-26.pool.digikabel.hu)
[09:41:48] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:41:48] *** Quits: remote (~self@user/hackers) (Ping timeout: 240 seconds)
[09:41:48] *** Quits: johnkeats6 (~johnkeats@186.220.240.39) (Ping timeout: 240 seconds)
[09:41:51] *** Joins: martums5 (~martums@user/martums)
[09:42:05] *** Joins: cliluw (~cliluw@47.147.73.223)
[09:42:14] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[09:42:30] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.108)
[09:42:56] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[09:43:02] *** Joins: remote (~self@user/hackers)
[09:43:11] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[09:44:36] *** Quits: martums56 (~martums@user/martums) (Ping timeout: 240 seconds)
[09:44:43] *** Quits: foul_owl (~kerry@207.244.125.36) (Ping timeout: 250 seconds)
[09:44:50] *** Joins: audiobirb (~audio@user/audio)
[09:45:36] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[09:46:07] *** Joins: Viewday112 (~Viewday@user/viewday)
[09:46:09] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-e9c6-4f5b-8484-463c.res6.spectrum.com)
[09:46:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[09:47:14] *** Joins: audio (~audio@user/audio)
[09:47:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Write error: Connection reset by peer)
[09:47:37] *** Viewday112 is now known as Viewday11
[09:49:02] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[09:49:29] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[09:51:01] *** Quits: Bkid (~Bkid@user/bkid) (Ping timeout: 256 seconds)
[09:51:06] *** Joins: Abrax (~Abrax@user/abrax)
[09:52:23] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[09:55:36] *** Joins: djapo (~archangel@user/djapo)
[09:56:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:57:05] *** Joins: anotheruser (~user@41.176.171.61)
[09:58:11] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:15c4:65b7:2468:1fe6)
[09:58:11] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:15c4:65b7:2468:1fe6) (Client Quit)
[09:58:30] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:00:30] *** Quits: someuser (~user@41.199.16.35) (Ping timeout: 272 seconds)
[10:01:22] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:5220:2bae:172:edd6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:01:37] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:5509:4f3e:10a3:8338)
[10:02:35] *** Joins: noteness (~noteness@user/noteness)
[10:02:35] *** Quits: noteness_ (~noteness@user/noteness) (Ping timeout: 240 seconds)
[10:03:32] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[10:05:27] *** Joins: Bkid (~Bkid@user/bkid)
[10:05:48] *** Quits: newdimension (~newdimnes@user/newdimension) (Ping timeout: 240 seconds)
[10:05:53] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[10:06:12] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[10:06:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:08:12] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[10:08:17] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[10:09:16] *** Quits: catbeard (~noise@user/catbeard) (Remote host closed the connection)
[10:09:40] *** Joins: catbeard (~noise@user/catbeard)
[10:09:57] *** Joins: upsala (~zcb@185.209.196.166)
[10:10:52] *** Joins: newdimension (~newdimnes@user/newdimension)
[10:11:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:13:22] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-596e-b8a7-f58c-1fa5.res6.spectrum.com) (Quit: jarthur)
[10:14:37] *** Quits: ybonatakis (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz) (Ping timeout: 240 seconds)
[10:14:38] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:14:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[10:15:20] *** Joins: foul_owl (~kerry@23.105.36.232)
[10:15:49] *** Joins: Pickchea (~private@user/pickchea)
[10:18:18] *** Joins: ybonatakis (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz)
[10:19:08] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[10:19:47] *** easy_mark is now known as mpmc
[10:26:21] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-237-110.poda.cz)
[10:31:37] *** Joins: Viewday112 (~Viewday@user/viewday)
[10:31:48] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[10:32:10] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Ping timeout: 272 seconds)
[10:32:57] *** Joins: vin (~vin@user/crash)
[10:33:01] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[10:33:27] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:33:27] *** Viewday112 is now known as Viewday11
[10:34:27] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:35:41] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:39:30] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[10:40:22] *** Joins: mat001 (~mat001@72.28.108.216)
[10:40:37] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[10:41:07] *** Quits: Hunterkll (~hunterkll@remote.kisaracorporation.com) (Ping timeout: 256 seconds)
[10:44:36] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (Ping timeout: 240 seconds)
[10:45:40] *** Joins: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e)
[10:47:58] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[10:48:58] *** Joins: manti7 (~manti7@176.10.104.94)
[10:49:18] *** Joins: ubert1 (~Thunderbi@p200300ecdf0994b46944f41320f0055f.dip0.t-ipconnect.de)
[10:49:53] *** Joins: SR-71 (~user@user/SR-71)
[10:50:30] *** Quits: cth (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:50:56] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:51:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:54:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[10:54:19] *** Joins: luigibu (~luigi@93.176.155.54)
[10:55:23] *** Joins: BlueFrog (~BlueFrog@user/BlueFrog)
[10:56:44] *** Joins: Mnedusza (~Thunderbi@S010620e52a118339.ed.shawcable.net)
[10:57:06] *** Joins: fef (~thedawn@user/thedawn)
[10:58:50] *** Quits: BlueFrog (~BlueFrog@user/BlueFrog) (Quit: Quit)
[11:00:03] *** Quits: Mnedusza (~Thunderbi@S010620e52a118339.ed.shawcable.net) (Client Quit)
[11:07:43] *** Joins: kuter (~kuter@public-gprs524743.centertel.pl)
[11:08:18] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[11:08:39] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[11:11:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:11:58] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[11:12:02] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:12:15] *** Joins: ckdCreations (~ckdCreati@147.55.130.34)
[11:12:21] *** Joins: andreasbuhr (~quassel@p549dbd84.dip0.t-ipconnect.de)
[11:14:00] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91)
[11:15:52] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[11:16:17] *** Joins: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr)
[11:16:30] *** Joins: gusto (~Augustus@109.255.100.54)
[11:18:25] *** Joins: Jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch)
[11:18:29] *** Joins: paul424 (~tom@ip-5-172-238-4.multi.internet.cyfrowypolsat.pl)
[11:21:36] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Quit: *evaporates*)
[11:21:55] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Ping timeout: 256 seconds)
[11:22:49] *** Joins: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f)
[11:23:52] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[11:25:27] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[11:27:23] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:3fe5:a985:3e72:9932)
[11:27:47] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:27:50] *** Joins: mrwick (~mrwick@user/mrwick)
[11:28:43] *** Joins: rendar (~rendar@user/rendar)
[11:32:12] *** Joins: kosh (~kosh@user/kosh)
[11:32:33] *** Joins: palasso (~palasso@user/palasso)
[11:34:14] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[11:34:34] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: Ping timeout (120 seconds))
[11:34:54] *** Joins: trashbird (~trashbird@user/trashbird)
[11:35:07] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[11:35:17] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 240 seconds)
[11:35:49] *** Joins: steam (~steam@user/steam)
[11:36:25] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:38:23] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:39:00] *** Quits: laidback_01 (~jax@98.97.66.6) (Ping timeout: 240 seconds)
[11:39:44] *** Joins: ZenMachine (~Bruno@2001:818:e940:7d00:9d11:d08:1e85:74ca)
[11:40:02] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:40:36] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 240 seconds)
[11:42:01] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Ping timeout: 256 seconds)
[11:42:23] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[11:42:37] *** Quits: spiderman (spiderman@spiderman.shelltalk.net) (Quit: IRCNow and Forever!)
[11:44:48] *** Quits: voidsync (~void@user/voidsync) ()
[11:45:18] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:45:30] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[11:45:49] *** Joins: tristan_ (~tristan@223.62.219.84)
[11:46:48] *** Joins: bahamas (~lucian@84.232.140.52)
[11:47:07] *** Quits: BlackBishop (dexter@user/blackbishop) (Ping timeout: 250 seconds)
[11:47:48] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 250 seconds)
[11:47:55] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:48:08] *** Joins: rwb (~augh@209.141.39.190)
[11:48:22] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[11:48:56] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:49:08] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:49:33] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:49:43] *** Quits: rb (~augh@209.141.39.190) (Read error: Connection reset by peer)
[11:50:53] *** Joins: dme86 (~dan@user/dan86)
[11:51:15] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:52:44] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[11:54:50] <ZenMachine> yap
[11:54:52] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[11:55:09] *** Joins: Guest25 (~Guest25@185.128.103.244)
[11:55:52] *** Parts: Guest25 (~Guest25@185.128.103.244) ()
[11:56:16] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Quit: leaving)
[11:56:48] <ZenMachine> hi
[11:57:03] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Ping timeout: 252 seconds)
[11:57:22] *** Joins: chele (~chele@user/chele)
[11:58:14] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[12:02:04] *** Joins: BlackBishop (dexter@user/blackbishop)
[12:05:43] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:06:46] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:09:08] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:5509:4f3e:10a3:8338) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:09:23] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[12:09:50] *** Quits: grawity (grawity@star.nullroute.lt) (Remote host closed the connection)
[12:09:54] *** Joins: georgios (~georgios@user/georgios)
[12:09:58] *** Quits: ZenMachine (~Bruno@2001:818:e940:7d00:9d11:d08:1e85:74ca) (Quit: Leaving)
[12:10:11] *** Joins: ZenMachine (~Zen@2001:818:e940:7d00:9d11:d08:1e85:74ca)
[12:10:18] *** Joins: grawity (grawity@star.nullroute.lt)
[12:11:17] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:12:14] *** Joins: zamanf (~dev@213.133.91.246)
[12:12:14] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[12:12:14] *** Joins: zamanf (~dev@user/zamanf)
[12:12:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:13:01] *** Joins: frost (~frost@user/frost)
[12:13:12] *** Joins: rooiratel (~rooiratel@156-155-163-86.ip.internet.co.za)
[12:13:35] *** Joins: masoudd_ (~masoudd@user/masoudd)
[12:14:30] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[12:14:46] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:14:52] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[12:15:07] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:15:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:16:18] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 252 seconds)
[12:17:40] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:a8dd:5c27:8521:ae73)
[12:19:22] *** Joins: purple_cthulhu (~rax@2.186.4.49)
[12:20:15] *** Joins: shad (~shad@user/shad)
[12:20:43] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[12:23:08] *** Joins: bahamas_ (~lucian@86.121.46.81)
[12:23:45] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 250 seconds)
[12:24:48] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[12:26:48] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[12:28:24] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c9dd:301:29f7:88f5)
[12:30:06] *** Quits: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c) (Quit: You have been kicked for being idle)
[12:30:06] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Quit: You have been kicked for being idle)
[12:30:45] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[12:32:34] *** Joins: elinfo (~elinfo@85.14.144.203)
[12:32:51] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:34:53] *** Joins: tribo (~tribo@p5b0fb69c.dip0.t-ipconnect.de)
[12:35:42] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[12:37:03] *** Quits: truth2 (~truth@user/truth) (Ping timeout: 256 seconds)
[12:37:12] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[12:38:01] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:38:28] *** Quits: davit (~davit@50.35.184.227) (Remote host closed the connection)
[12:39:28] *** Quits: bahamas_ (~lucian@86.121.46.81) (Ping timeout: 272 seconds)
[12:40:30] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 252 seconds)
[12:41:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:43:09] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:43:23] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:44:29] *** Joins: Vonter (~Vonter@user/vonter)
[12:44:56] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[12:46:12] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 240 seconds)
[12:46:31] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:48:03] *** Joins: davit (~davit@50.35.184.227)
[12:49:45] *** Quits: HvszrStykp (~X@81.171.62.84) (Ping timeout: 256 seconds)
[12:50:10] *** Quits: woky (~woky@li1651-31.members.linode.com) (Quit: Nothing in this world is hopeless!)
[12:50:18] *** Quits: ZenMachine (~Zen@2001:818:e940:7d00:9d11:d08:1e85:74ca) (Quit: Leaving)
[12:51:03] *** Quits: elinfo (~elinfo@85.14.144.203) (Quit: Leaving)
[12:51:13] *** Joins: woky (~woky@li1651-31.members.linode.com)
[12:51:17] *** Quits: woky (~woky@li1651-31.members.linode.com) (Remote host closed the connection)
[12:52:10] *** Joins: woky (~woky@li1651-31.members.linode.com)
[12:52:11] *** Joins: Abrax- (~Abrax@user/abrax)
[12:52:21] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:53:14] *** Joins: kristijonas (~kristijon@194.204.33.9)
[12:54:19] *** Quits: purple_cthulhu (~rax@2.186.4.49) (Quit: Leaving.)
[12:55:23] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 250 seconds)
[12:56:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:57:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[12:58:01] *** Joins: parv (~quass@user/parv)
[12:58:25] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 250 seconds)
[12:59:01] *** Joins: cliluw (~cliluw@47.147.73.223)
[12:59:06] *** Quits: jpic (~jpic@82.142.6.174) (Ping timeout: 272 seconds)
[13:00:15] *** Joins: jpic (~jpic@188.95.144.209)
[13:00:22] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[13:01:16] *** Joins: revolve (~u0_a227@82-132-238-52.dab.02.net)
[13:01:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[13:05:01] *** Joins: bluedust_ (~bluedust@103.161.144.138)
[13:05:51] <jancoow> Mhh , so I can format an int as hex with padding with format(100, '04x') however  I need to have it in little endian
[13:06:30] <jancoow> Now I see all vague answers with struct unpacks and w/e but Can't i just use the format function for it to correctly format it in the right format
[13:06:49] *** Abrax- is now known as Abrax
[13:07:16] *** Joins: Masterphi (~Masterphi@user/masterphi)
[13:07:21] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[13:07:27] *** Quits: bluedust (~bluedust@103.161.144.138) (Ping timeout: 252 seconds)
[13:07:35] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.108) (Ping timeout: 256 seconds)
[13:07:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[13:07:59] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:08:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:09:53] *** Joins: kts (~kts@103.73.237.130)
[13:10:50] <MacGyver> Convert to big-endian then format?
[13:11:43] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[13:12:14] *** Quits: kts (~kts@103.73.237.130) (Client Quit)
[13:12:25] *** Joins: dme86 (~dan@user/dan86)
[13:12:50] *** Joins: kristijonas_ (~kristijon@IN-84-15-187-120.bitemobile.lt)
[13:12:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:14:20] *** Quits: p-i-_ (~Ohmu@183.89.27.225) (Remote host closed the connection)
[13:14:30] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:14:59] *** Joins: Z-cat (~Z-cat@user/z-cat)
[13:15:04] *** Joins: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[13:15:08] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[13:15:41] *** Quits: kristijonas (~kristijon@194.204.33.9) (Remote host closed the connection)
[13:16:00] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[13:16:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[13:16:30] <jancoow> I just want to format a number 100 as 0x6400
[13:16:48] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 252 seconds)
[13:16:48] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-e9c6-4f5b-8484-463c.res6.spectrum.com) (Quit: Client closed)
[13:18:12] <mrwick> I learned here yesterday that to_bytes has an byteorder argument, maybe that can help?
[13:18:43] * mrwick does not want to confuse
[13:19:29] *** Quits: jpic (~jpic@188.95.144.209) (Ping timeout: 256 seconds)
[13:20:35] <jancoow> mrwick yes that helps :)
[13:20:41] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 256 seconds)
[13:20:46] <jancoow> if I can format that output back into a hex string that would work
[13:21:12] *** Joins: jpic (~jpic@82.142.6.174)
[13:21:16] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[13:21:48] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:22:03] *** Quits: xavie (~xavie@176-139-252-198.abo.bbox.fr) (Read error: Connection reset by peer)
[13:22:39] <jancoow> test=2000; test.to_bytes(2, "little").hex(); gives 204e
[13:22:43] <jancoow> that looks okay :)
[13:22:45] <jancoow> thnx mrwick
[13:22:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:23:10] *** Quits: hamms (~hams@73.232.205.0) (Ping timeout: 272 seconds)
[13:23:17] <mrwick> and thanks to my irc scrollback!
[13:23:42] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[13:24:07] <jancoow> haha why?
[13:25:28] <mrwick> that is where I got my answer, since a similar discussion happened yesterday at 13:07
[13:25:32] <mrwick> 13:07 < grawity> if you want it as e.g. a 4-byte (32-bit) value, then try (~2).to_bytes(4, "big", signed=True) or struct.pack(">l", ~2)
[13:28:03] <jancoow> ah1 :D
[13:28:06] <jancoow> Thanks for the effort
[13:28:31] <merijn> hmmm, anyone know any alternatives to Scalene for a sampling profiler for memory use? Scalene segfaults and generates no memory profiler :\
[13:29:48] *** Quits: kuter (~kuter@public-gprs524743.centertel.pl) (Read error: Connection reset by peer)
[13:29:56] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[13:32:41] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 272 seconds)
[13:33:28] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[13:34:07] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[13:40:33] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[13:40:51] *** Joins: tomg (~tomg@user/tomg)
[13:45:24] *** Quits: onichomp (~onichomp@2806:264:4408:95:f4f9:51da:6718:9492) (Read error: Connection reset by peer)
[13:46:07] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[13:48:16] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:49:22] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:49:37] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[13:52:04] *** Joins: angelacrust (~angelacru@182.68.130.113)
[13:54:12] *** Quits: tristan_ (~tristan@223.62.219.84) (Ping timeout: 240 seconds)
[13:54:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:56:23] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:56:39] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[13:57:00] *** Quits: foul_owl (~kerry@23.105.36.232) (Ping timeout: 240 seconds)
[13:57:09] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:58:39] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91) (Ping timeout: 250 seconds)
[13:59:52] *** Quits: kristijonas_ (~kristijon@IN-84-15-187-120.bitemobile.lt) (Quit: Leaving)
[14:01:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[14:07:11] *** Joins: kaiseisei1 (~Thunderbi@183.184.95.155)
[14:07:19] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[14:07:23] *** Quits: kaiseisei1 (~Thunderbi@183.184.95.155) (Client Quit)
[14:07:41] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[14:07:57] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Ping timeout: 252 seconds)
[14:09:43] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:11:18] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:11:50] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:12:03] *** Joins: Deimos (~Deimos@ool-44c51adf.dyn.optonline.net)
[14:13:00] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[14:13:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:14:25] *** Joins: foul_owl (~kerry@23.82.193.104)
[14:14:59] *** Joins: vladoski (~vladoski@2001:b07:add:d406:3dc0:e68:b885:9289)
[14:17:18] *** Quits: Sylhouette (~johan@web01.vandenboogaard.me) (Remote host closed the connection)
[14:17:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[14:18:09] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[14:18:10] *** Joins: cruncher (~cruncher@90.68.118.49)
[14:18:15] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:19:35] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:20:50] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:20:52] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[14:22:51] *** Joins: ShotokanZH (~ShotokanZ@aitch.me)
[14:23:33] *** Quits: upsala (~zcb@185.209.196.166) (Quit: WeeChat 3.4)
[14:24:05] *** Joins: dme86 (~dan@user/dan86)
[14:24:21] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:25:00] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:25:23] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Client Quit)
[14:26:25] *** Joins: upsala (~zcb@185.209.196.166)
[14:26:25] *** Joins: Syzygy (~Syzygy@2001:871:265:1cdc:3550:ebd5:e922:4ec8)
[14:27:03] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[14:27:24] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[14:27:51] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[14:28:18] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[14:28:28] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:30:34] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:31:45] <Syzygy> I have a super large list of files that I'm iterating over while extracting information and saving it into a single json. I want to be able to close my script after a day or two and then continue. That means I need to write out files every iteration. I'm thinking open(file, "a"), but that doesn't work for json.
[14:32:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[14:32:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[14:32:18] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[14:32:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:32:38] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:32:53] *** Joins: aknot (~aknot@2603:900a:1503:17bb:d29d:3f0b:4170:d593)
[14:32:59] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[14:33:17] <Syzygy> so are my only options to switch to csv or load the old json in the beginning and then save the whole thing every iteration? or are there better ways?
[14:33:48] *** Quits: paul424 (~tom@ip-5-172-238-4.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[14:35:22] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 272 seconds)
[14:37:04] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[14:37:10] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[14:37:24] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:37:28] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:a8dd:5c27:8521:ae73) (Quit: Client closed)
[14:37:46] <Swayze> why not just append the new infomation
[14:37:52] <Swayze> every iteration
[14:37:59] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[14:38:20] <Peng> Syzygy: Consider jsonlines or an equivalent?
[14:38:24] *** Joins: analoq (~yashi@user/dies)
[14:38:54] <Peng> Syzygy: (Multiple JSON data structures squished into a file, essentially.)
[14:38:57] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[14:40:06] *** Joins: tristan_ (~tristan@223.62.202.67)
[14:40:11] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:41:13] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[14:41:45] <Syzygy> I guess that would just be dumping individual dicts in append mode... I guess that works.
[14:41:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[14:42:03] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[14:42:58] *** Quits: omegaxis (~root@srv239118-206152.vps.etecsa.cu) (Ping timeout: 272 seconds)
[14:43:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[14:44:17] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[14:45:58] *** Joins: Warped (~Warped@user/warped)
[14:46:13] *** Quits: woky (~woky@li1651-31.members.linode.com) (Quit: Nothing in this world is hopeless!)
[14:47:34] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:a8dd:5c27:8521:ae73)
[14:47:52] <Swayze> https://lab.allotropia.de/wasm/ libre office running natively in web assembly https://webassembly.org/
[14:48:04] *** Joins: woky (~woky@li1651-31.members.linode.com)
[14:49:24] *** masoudd_ is now known as masoudd
[14:50:46] *** Quits: revolve (~u0_a227@82-132-238-52.dab.02.net) (Read error: Connection reset by peer)
[14:50:50] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:51:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[14:51:57] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 252 seconds)
[14:52:19] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[14:52:28] *** Quits: Jong (~Jong@163.114.132.5) (Ping timeout: 272 seconds)
[14:52:59] *** Joins: darksun (~darksun@user/darksun)
[15:00:10] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[15:00:11] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Remote host closed the connection)
[15:00:17] *** Joins: thegtg_ (~the_gtg@103.79.105.132)
[15:00:22] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[15:00:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:00:50] *** Joins: dme86 (~dan@user/dan86)
[15:01:11] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[15:01:34] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:02:03] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[15:03:15] *** Quits: bluedust_ (~bluedust@103.161.144.138) (Remote host closed the connection)
[15:04:12] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[15:04:30] *** Quits: thegtg_ (~the_gtg@103.79.105.132) (Client Quit)
[15:04:44] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[15:05:28] *** Joins: timmoctig (~timmoctig@31.187.110.131)
[15:06:07] <Syzygy> Peng, small issue with that approach is that jump doesn't seem to use a new line, so instead of having {\n \t"number":1\n}\n{{\n \t"number":2\n}} I have {\n \t"number ":1\n}{\n \t"number ":2\n}
[15:06:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[15:08:16] *** Joins: unyu (~pyon@user/pyon)
[15:08:36] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[15:09:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[15:09:23] *** Joins: thegtg (~the_gtg@103.79.105.132)
[15:09:40] *** Quits: timmoctig (~timmoctig@31.187.110.131) (Client Quit)
[15:09:43] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 250 seconds)
[15:10:10] *** Joins: dme86 (~dan@user/dan86)
[15:10:22] *** Joins: ham5urg_ (~ham5urg@84.46.13.255.dynamic-pppoe.dt.ipv4.wtnet.de)
[15:10:50] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:11:24] <Juhaz_> Syzygy, if the old json is big enough that loading it in the beginning is a problem then it might be time to consider using a database instead? Even if it's just sqlite.
[15:12:02] <Syzygy> Loading might not necessarily be a problem, but keeping it in memory while everything else is going on is.
[15:12:05] *** Joins: ovelny (~ovelny@user/ovelny)
[15:12:05] <Syzygy> or might be.
[15:12:55] <Syzygy> also the project is supposed to be executed by laymen, so having them install a database, even through pip is a no-no
[15:13:27] *** Joins: Sylhouette (~johan@87.233.191.146)
[15:13:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:14:38] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 272 seconds)
[15:15:49] *** Joins: timmoctig (~timmoctig@31.187.110.131)
[15:16:24] <merijn> Syzygy: You don't have to install sqlite, though? It ships in python's base
[15:16:35] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 240 seconds)
[15:16:57] <merijn> And the more I use sqlite, the more I am convinced than 80% of all code would suck less if it used more sqlite >.>
[15:17:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[15:17:30] <Syzygy> hmm, I wasn't aware that it's included. I'll consider using it.
[15:17:41] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:18:16] <merijn> Syzygy: The entire point of sqlite is that it's just a library inside you program, without needing to install/run a separate database server
[15:19:20] *** Quits: timmoctig (~timmoctig@31.187.110.131) (Client Quit)
[15:20:22] *** Joins: Vonter (~Vonter@user/vonter)
[15:20:49] <Syzygy> I still don't think it's the right approach for me in this case since that would require a lot of code changes and I should finish this by today.
[15:22:06] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:23:00] <jinsun__> what was wrong with jsonlines?
[15:23:18] <nomic> z.z.
[15:25:31] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:3933:29:5fe1:cb6b)
[15:25:41] <Syzygy> jinsun__, I didn't find a good way to dump/read it I guess
[15:26:15] *** Joins: bluedust (~bluedust@103.161.144.138)
[15:26:47] *** Quits: angelacrust (~angelacru@182.68.130.113) (Quit: Client closed)
[15:27:20] <jinsun__> just open the file in append mode, loop over the dicts and write the output of json.dumps to the file, and insert newlines in between
[15:27:50] <jinsun__> and when reading, loop over the lines, and json.loads them
[15:29:19] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 256 seconds)
[15:29:21] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 252 seconds)
[15:29:22] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[15:29:41] *** gentooclimax is now known as climax
[15:29:47] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[15:30:11] *** Quits: wovixo (~wovixo@144.92.194.67) (Read error: Connection reset by peer)
[15:30:16] <Syzygy> jinsun__, my json.dump didn't go in a single line.
[15:30:33] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:30:44] <vin> I have this simple plot function where I expect the x-axis to be set to strings, but that
[15:30:45] <Syzygy> and after some consideration I don't really want it to either, since that makes it stop being human readable.
[15:30:51] <vin> that's not happening https://pastebin.com/330880Pb
[15:32:43] <jinsun__> Syzygy: it goes in one line by default, unless you specify indentation, and well it would be human readable, just for formatted nicely
[15:32:51] <jinsun__> s/for/not
[15:34:32] <jinsun__> Syzygy: if you want indented output, then the really simple option is to dump each dict in a separate file
[15:34:58] *** Quits: Elodin (~elodin@user/elodin) (Quit: WeeChat 3.4)
[15:35:23] *** Joins: Elodin (~elodin@user/elodin)
[15:35:47] <jinsun__> (or use sqlite as others suggested, if you want to have it in one file)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:56] *** Joins: y1n (~y1n@77.119.211.138.wireless.dyn.drei.com)
[15:37:24] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 240 seconds)
[15:37:52] *** climax is now known as gentooclimax
[15:40:12] *** Joins: cdown (~cdown@163.114.131.1)
[15:40:12] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[15:40:51] *** Joins: bahamas (~lucian@84.232.140.52)
[15:41:05] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[15:43:58] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[15:44:57] *** Quits: rookie101 (~rookie@165.232.121.13) (Quit: WeeChat 1.9.1)
[15:45:45] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[15:48:05] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[15:48:09] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[15:49:09] *** Parts: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Leaving)
[15:49:58] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:50:06] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[15:53:53] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[15:55:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91)
[15:56:45] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:a8dd:5c27:8521:ae73) (Ping timeout: 256 seconds)
[15:58:23] *** Joins: drogas (~drogas@jump2.jet.uk)
[15:58:58] *** Quits: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com) (Ping timeout: 272 seconds)
[15:59:33] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[16:00:15] <drogas> `self.shape = process_loop_array(shape)` `normal = get_normal_vector(*self.shape.T)`
[16:00:36] <drogas> I'm mostly confused by the `*self.shape`
[16:00:40] <drogas> what does * actually do
[16:00:48] <drogas> like C++ a pointer?
[16:01:24] *** Quits: aknot (~aknot@2603:900a:1503:17bb:d29d:3f0b:4170:d593) (Ping timeout: 240 seconds)
[16:01:44] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[16:02:09] <nedbat> drogas: it's not a pointer at all: it unpacks a sequence into the positional argument of function
[16:02:32] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:a8dd:5c27:8521:ae73)
[16:03:09] <drogas> okay so if the function takes in say `x, y, z` it just unpacks the potential looking list `[[1,2,3],[1,2,3],[1,2,3]] into their corresponding positions?
[16:05:06] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[16:05:28] *** Joins: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur)
[16:06:55] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[16:09:02] *** Joins: dme86 (~dan@user/dan86)
[16:11:03] *** Joins: Kruppt (~Kruppt@50-111-60-7.drhm.nc.frontiernet.net)
[16:12:46] *** Joins: gusto (~Augustus@109.255.100.54)
[16:13:24] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[16:13:27] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Quit: Leaving)
[16:14:11] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:14:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:16:04] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 272 seconds)
[16:16:15] *** Quits: nunggu_ (~q@user/nunggu) (Ping timeout: 240 seconds)
[16:18:10] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[16:18:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[16:18:37] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[16:19:10] <bahamas> drogas: foo(*[1,2,3]) is the same as foo(1,2,3)
[16:19:39] <leitz> If I have a dataclass with a __post_init__ that sets an attribute, do I need to specify a getter method to get the attribute?
[16:19:58] *** Joins: nunggu_ (~q@user/nunggu)
[16:20:03] <leitz> It feels like I've lost all my "Python OOP 101" brain...
[16:20:07] *** Joins: robopat (patrick@triton.blinkenshell.org)
[16:20:25] <robopat> ValueError: time data 'Tuesday, February 15, 2022 11:26:41 PM' does not match format '%A, %b %d, %Y %H:%M:%S %p'
[16:20:26] <leitz> Hmm...that might not be the issue.
[16:20:30] <robopat> Can anyone help me with this?
[16:20:34] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:20:34] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:20:34] *** Joins: JordiGH (~jordi@user/jordigh)
[16:21:47] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[16:22:14] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:22:43] *** Quits: cruncher (~cruncher@90.68.118.49) (Quit: Leaving)
[16:23:20] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[16:24:30] *** Joins: u0_a123 (~u0_a123@27.97.163.97)
[16:24:36] *** Joins: Elodin (~elodin@user/elodin)
[16:26:24] *** Joins: gusto (~Augustus@109.255.100.54)
[16:27:19] *** Joins: alamar (~alamar@42.dncc.de)
[16:27:26] *** Joins: ovelny (~ovelny@user/ovelny)
[16:28:53] *** Joins: nichlas (uid374954@id-374954.uxbridge.irccloud.com)
[16:31:26] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[16:31:30] <drogas> what type is that valid for?  would it work for any iterable object?
[16:31:35] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[16:31:37] <drogas> list, tuples etc
[16:31:58] <robopat> Fixed: date_object = datetime.strptime(test_date, "%A, %B %d, %Y %H:%M:%S %p")
[16:32:09] <robopat> just needed capital b for the month
[16:32:10] *** Joins: paul424 (~tom@apn-77-113-43-226.dynamic.gprs.plus.pl)
[16:32:43] <bahamas> drogas: I don't remember. you could try
[16:32:51] <robopat> Now you guys can parse the sent date from outlook emails. Thank me later.
[16:34:10] <bahamas> drogas: yeah, it works for tuples
[16:36:58] <alamar> hi, i have a small flask-app that returns a sql query result with flask.jsonify. problem is that jsonify seems to "loose" some data/the http response has not alle the data that is in the datastructure before the call to jsonify. https://bpa.st/6TEA there is (part) of the code and the input(http url) I use and the output I get(console output and http response) - why are only the column names in the returned
[16:37:04] <alamar> jsonify/httpr response and not the data row(s)?
[16:37:08] *** Quits: Abrax (~Abrax@user/abrax) (Read error: Connection reset by peer)
[16:37:24] *** Quits: ittner (~ittner@2804:15e4:806b:4b00:f50b:cb32:d3c9:1e8f) (Quit: Namárië)
[16:37:32] *** Joins: Abrax (~Abrax@user/abrax)
[16:37:33] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 252 seconds)
[16:37:49] *** Joins: timmoctig (~timmoctig@31.187.110.131)
[16:37:57] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:38:12] *** Quits: timmoctig (~timmoctig@31.187.110.131) (Client Quit)
[16:40:50] <leitz> in class CharacterBuilder, lines 12 and 13 show that "c" is a Character as shown by the output of pytest (lines23, 24). Yet in pytest results line 25, what is returned is NoneType, not a Character. Am I missing something?
[16:40:52] <leitz> https://bpa.st/ET4A
[16:41:16] <leitz> Well, certainly missing a life, a clue, and a brain. More focused on this issue, though.  :)
[16:41:53] <robopat> What is life
[16:42:14] <leitz> robopat, unknown; insufficient data.
[16:43:16] *** Joins: bluedust (~bluedust@103.161.144.138)
[16:44:14] *** Joins: u0_a1231 (~u0_a123@49.15.138.189)
[16:44:42] *** Quits: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[16:45:41] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[16:45:51] *** Joins: darksun (~darksun@user/darksun)
[16:46:01] *** Joins: diamondbond (~diamondbo@175.157.50.34)
[16:46:30] *** Joins: thiras (~thiras@user/thiras)
[16:47:06] *** Quits: u0_a123 (~u0_a123@27.97.163.97) (Ping timeout: 272 seconds)
[16:47:07] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[16:47:15] *** Joins: Jaxx (~Jaxx@user/jaxx)
[16:47:27] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[16:47:42] <Jaxx> Hi. Can someone help me with this?: https://github.com/CorentinJ/Real-Time-Voice-Cloning  .. to get it working on my windows 11 Home 64bit?
[16:49:14] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Client Quit)
[16:49:22] *** Quits: nichlas (uid374954@id-374954.uxbridge.irccloud.com) ()
[16:49:29] *** Quits: diamondbond (~diamondbo@175.157.50.34) (Client Quit)
[16:50:47] <nedbat> leitz: what is line 14 (`amanda = None`) doing?
[16:50:51] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[16:52:07] *** Joins: AlanMD (~AlanMD@193.104.215.11)
[16:52:17] *** Joins: dme86 (~dan@user/dan86)
[16:52:48] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:53:48] *** Joins: ice9 (~ice9@user/ice9)
[16:54:33] <leitz> nedbat, I have no idea. I've been trying to find where that is coming from.
[16:54:41] <CrtxReavr> o_O
[16:55:20] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 272 seconds)
[16:55:49] <leitz> Jaxx, most of the folks here are improving their Python skills, so we focus on the language itself. If you need application support, you might get more results from the application owners and users.
[16:57:10] *** Joins: AlanMD_ (~AlanMD@86.124.30.89)
[16:57:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[16:59:04] <leitz> nedbat, the first line in the failing test, testCreateName(amanda), is assert(amanda.first_name == 'Amanda').
[16:59:38] <nedbat> leitz: yes?
[17:00:16] *** Joins: orkan (~orkan@37.248.253.193)
[17:00:23] <Jaxx> leitz: Can i show u the thing im trying? its from github
[17:00:29] *** Quits: AlanMD (~AlanMD@193.104.215.11) (Ping timeout: 256 seconds)
[17:01:04] <leitz> Jaxx, i'm not using that application.
[17:01:14] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[17:01:24] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[17:01:39] *** Joins: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com)
[17:02:18] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[17:02:53] *** Joins: revolve (~u0_a227@82-132-238-52.dab.02.net)
[17:02:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:03:21] <nedbat> Jaxx: pastebin some details and show the channel
[17:04:25] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[17:04:29] *** Joins: vsantana (~Thunderbi@fttx-177136148223.usr.predialnet.com.br)
[17:04:50] <Jaxx> its not something that needs to be in a pastebin. its a direct link to the github of what im trying
[17:04:52] <Jaxx> i show u
[17:05:00] *** Joins: ovelny (~ovelny@user/ovelny)
[17:05:08] <nedbat> Jaxx: have you tried to get it working?
[17:05:18] <JohnDoe1> sup people, trying to parse some silly API response from bash but am a noob. Does python have an equivalent for ?? or || operators? I'm trying to access an array item which sometimes is missing because of inconsistent API responses. https://bpa.st/UBWQ
[17:05:19] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:05:24] <Jaxx> yes with help,but nope.. at least not we have tried
[17:05:36] <Jaxx> nedbat, https://github.com/CorentinJ/Real-Time-Voice-Cloning
[17:05:38] *** Joins: bloody (~bloody@user/bloody)
[17:06:19] <nedbat> Jaxx: there are installation instructions there.
[17:06:33] <jinsun__> JohnDoe1: there isn't anything like ??, but dictionaries have a .get method that gives None if the key doesn't exist
[17:06:44] <Jaxx> yes and i have tried that as well as much as i could,but still didnt get it to work
[17:06:54] <jinsun__> JohnDoe1: and equivalent for || would be the `or` operator
[17:08:01] <JohnDoe1> jinsun__  thank you, the `or` won't help avoid the IndexError. How do I use .get ? Is that on parsed ?
[17:08:26] *** Quits: orkan (~orkan@37.248.253.193) (Quit: Leaving)
[17:08:42] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:a8dd:5c27:8521:ae73) (Quit: Client closed)
[17:08:53] <leitz> nedbat, I added another print in the return_character method, to print c.first_name. It prints the first name, but the returned type is still none. Am I incorrect in assuming "return self.character" isn't returing the just built character?
[17:09:04] *** Quits: vsantana (~Thunderbi@fttx-177136148223.usr.predialnet.com.br) (Client Quit)
[17:09:25] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:09:27] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[17:09:53] <jinsun__> JohnDoe1: hmm, okay you have lists too, you can't avoid indexerror so easily with lists, what do you want `parsed["result"][0]["id"]` to be?
[17:10:33] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[17:11:04] <JohnDoe1> jinsun__ seems .get() does not walk the array, and I cannot chain .get(). It can be anything you wish, bash will take it as a string anyway. null, false, whatever is quick and easy
[17:11:42] <jinsun__> JohnDoe1: okay, and "result" can be missing too?
[17:11:48] *** Quits: y1n (~y1n@77.119.211.138.wireless.dyn.drei.com) (Ping timeout: 272 seconds)
[17:12:09] <JohnDoe1> No, result is always there when accompanied by ["success"]=true which I'm checking beforehand.
[17:12:49] <CrtxReavr> Someone have a standard .gitingore (I think it's called.) list for projects created inside a venv?
[17:12:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:13:00] <CrtxReavr> .gitignore
[17:13:32] *** Joins: Guest59 (~Guest59@136.233.21.115)
[17:13:40] <Guest59> Hi Guys
[17:13:43] <Guest59> this is mohan
[17:13:46] *** Joins: shad (~shad@user/shad)
[17:13:49] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:13:54] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:13:55] <Guest59> anyone can help me on python code
[17:14:07] <jinsun__> JohnDoe1: one option is `print((parsed.get("result") or [{"id": None}])[0]["id"])`
[17:14:18] <Guest59> i have one log file and i need to parse using python
[17:14:27] <JohnDoe1> Guest59 it's general etiquette to just ask your question rather than try to engage someone in conversation. People usually help while at work or doing other things :)
[17:14:33] *** Joins: dme86 (~dan@user/dan86)
[17:14:50] <JohnDoe1> jinsun__ awesome, thank you so much!
[17:14:52] <Guest59> ok
[17:14:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:14:59] <CrtxReavr> TL;DR - Don't ask to ask, just ask.
[17:15:26] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[17:15:34] <Guest59> I have two lines like Problem replicating TATA to TATA.
[17:15:35] <Guest59> Mapping problem with compressed update record
[17:16:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[17:16:10] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[17:16:21] <Guest59> i need to combine the two lines based on the specific sting 'update' in the line
[17:16:28] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Remote host closed the connection)
[17:16:31] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[17:16:36] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[17:16:39] <Pi-sistance> Hi im just learning differences between scripts and modules, modules shoukld just have definitions and not run anything wihtin them, however it is then said "instead they are imported from other modules or scripts " I dont understand that?
[17:17:09] <Pi-sistance> I load the script or modukle in spyder which i started using
[17:17:36] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[17:17:39] <Pi-sistance> i dont get what imported means? i just load it from the opriginal file?
[17:17:39] <CrtxReavr> "Modules" are scripts or directories full of scripts, imported by other scripts.
[17:17:48] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[17:18:09] <Guest59> How to combine the two lines based on the first line have a string like'Problem'
[17:18:22] <Guest59> can any one write python code
[17:18:42] <CrtxReavr> Guest59, can you put an example of the lines you're dealing with on bpaste.net?
[17:18:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[17:18:58] <grym> CrtxReavr: i use https://www.toptal.com/developers/gitignore  to spit out stock sections of a gitignore; i usually ask for python, jetbrains-all, emacs, vim, ... as independent sections
[17:19:00] <Guest59> Data like "Problem replicating TATA to TATA.
[17:19:00] <Guest59> Mapping problem with compressed update record"
[17:19:03] <Pi-sistance> so a script or module can contain like a "Link" to another module, is that waht "Imported" means?
[17:19:06] <Pi-sistance> thanks
[17:19:16] <grym> CrtxReavr: naturally, my OS can query that API itself ;)
[17:19:46] *** Joins: aknot (~aknot@2603:900a:1503:17bb:f731:4108:ad31:39b8)
[17:19:57] <jinsun__> Pi-sistance: well import is a statement that you use to make other modules available inside your script, if you want to access functions in the math module, you `import math`
[17:20:38] <JohnDoe1> Guest59 https://bpa.st/PVQA hopefully this gives some hints. Disclaimer: I'm a total noob.
[17:20:40] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[17:21:26] <Pi-sistance> thanks jinsun, yes i did import before, sorry I forgot.
[17:21:36] <Pi-sistance> realized as I typed it zzz
[17:21:53] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[17:22:33] <Guest59> JohnDoe1 thanks.. but I have so many lines in my code.. so where ever Problem is there I need to combine the next line
[17:22:42] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[17:23:03] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[17:23:12] <CrtxReavr> grym, little non-intuitive the way you need to specifically click on the auto-search results.
[17:23:36] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:23:40] <Guest59> JohnDoe1, when we find 'Problem' in the line, then immediately I need combine the next line with first line
[17:23:49] <grym> CrtxReavr: i don't use the actual website view into the API like, at all.
[17:25:12] <jinsun__> Guest59: your description is not very clear, paste some examples in https://bpa.st/ and show the "lines" you are talking about
[17:25:20] <JohnDoe1> Guest59 I'm not that advanced, but it sounds like regex could come in handy. https://regex101.com/r/bO1Ofe/1 The site has a code generator if you want to get inspiration on how to use it.
[17:25:33] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:25:48] *** Quits: aknot (~aknot@2603:900a:1503:17bb:f731:4108:ad31:39b8) (Ping timeout: 240 seconds)
[17:26:03] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:9907:fd57:1e89:a529)
[17:26:03] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:9907:fd57:1e89:a529) (Changing host)
[17:26:03] *** Joins: skapata (~Skapata@user/skapata)
[17:26:09] *** Joins: gabagool (~user@2a01:cb1d:40b:9b00:e2aa:ee62:3ca0:5f02)
[17:26:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:27:03] <leitz> nedbat, it looks like the "amanda = None" came from the pytest fixture. So it's telling us that amanda was set to None, but I'm still not sure why.
[17:27:36] <Guest59> jinsun, i have added log file
[17:27:53] <Guest59> but how can i attached desired output file
[17:28:05] <Guest59> i have output file also
[17:28:05] *** Joins: rsx (~dummy@ppp-188-174-135-147.dynamic.mnet-online.de)
[17:28:29] <Guest59> basically, i have two files , one is log file and desired output file
[17:28:49] <jinsun__> Guest59: you have to give the link to the paste here too
[17:28:51] <Guest59> i need to parse log file and print dml commands
[17:29:03] <Guest59> ok
[17:29:14] <Guest59> Oracle GoldenGate Delivery for Oracle process started, group RECOV discard file opened: 2021-06-30 13:52:32.076025
[17:29:14] <Guest59> Current time: 2021-06-30 13:52:45
[17:29:15] <Guest59> Discarded record from action ABEND on error 1403
[17:29:15] <Guest59> No data found
[17:29:16] <Guest59> Aborting transaction on /u01/ogg/itsp043p/rmtdir/se beginning at seqno 4 rba 346,578,246
[17:29:16] <Guest59>                          error at seqno 4 rba 346578682
[17:29:16] *** litharge sets mode: +q *!*@136.233.21.115
[17:29:18] *** Joins: philectro (~quassel@2a02:2788:1024:671:4668:5b06:18c0:caa)
[17:29:46] <CrtxReavr> What's this +q mode?
[17:29:48] *** litharge sets mode: -q *!*@136.233.21.115
[17:29:48] <Guest59> REPLY_TO_ADDR = NULL
[17:29:48] <Guest59> TITLE = ^Z^Z^Z^Z^Z^Z^Z^Z
[17:29:49] <Guest59> 000000: e8 ae a2 e9 98 85 e7 a1 ae e8 ae a4             |............    |
[17:29:49] <Guest59> X_MAILER = NULL
[17:29:50] <Guest59> DATE_SENT = NULL
[17:29:50] <Guest59> EXCEPTION_REASON = NULL
[17:29:50] *** litharge sets mode: +q *!*@136.233.21.115
[17:29:54] <jinsun__> Guest59: don't paste here, paste in https://bpa.st and give the link here
[17:30:19] <JohnDoe1> CrtxReavr quiet mode, no /msg privileges
[17:30:21] *** litharge sets mode: -q *!*@136.233.21.115
[17:30:22] <Guest59> CREATED = 2021-06-30:06:59:36
[17:30:22] <Guest59> 000000: 32 30 32 31 2d 30 36 2d 33 30 3a 30 36 3a 35 39 |2021-06-30:06:59|
[17:30:23] <Guest59> 000010: 3a 33 36                                        |:36             |
[17:30:23] <Guest59> LAST_MODIFIED = 2021-06-30:07:04:14
[17:30:24] <Guest59> 000000: 32 30 32 31 2d 30 36 2d 33 30 3a 30 37 3a 30 34 |2021-06-30:07:04|
[17:30:24] <Guest59> 000010: 3a 31 34                                        |:14             |
[17:30:24] *** litharge sets mode: +q *!*@136.233.21.115
[17:30:39] <CrtxReavr> Looks like he's queued up a lot.
[17:30:56] *** litharge sets mode: -q *!*@136.233.21.115
[17:30:56] <Guest59> Discarding record on action DISCARD on error 1403
[17:30:57] <Guest59> Problem replicating FE_WRK to FE_WRK.
[17:30:57] <Guest59> Record not found
[17:30:58] <Guest59> Mapping problem with delete record (target format) SCN:0.5618.20.5123362...
[17:30:58] <jinsun__> maybe a kick is needed
[17:30:58] <Guest59> *
[17:30:59] <Guest59> SAP_FEEDER_WORK_ID = 5346534345455
[17:30:59] *** litharge sets mode: +q *!*@136.233.21.115
[17:31:00] <JohnDoe1> no, it's a web client so it scheduled the whole file line by line. It won't stop until it's done....
[17:31:30] *** litharge sets mode: -q *!*@136.233.21.115
[17:31:30] <Guest59> CASH_REFUND_ID = NULL
[17:31:31] <Guest59> GENERIC_ID = NULL
[17:31:31] <Guest59> GENERIC_ENTITY_NAME = NULL
[17:31:32] <Guest59> PURCHASE_LINE_ITEM_ID = NULL
[17:31:32] <Guest59> PREORDER_POD_EVENT_ID = NULL
[17:31:33] <Guest59> AGENT_ISSUED_GC_ID = NULL
[17:31:33] *** litharge sets mode: +q *!*@136.233.21.115
[17:32:03] *** litharge sets mode: -q *!*@136.233.21.115
[17:32:03] <Guest59> 000010: 31 35 32 34 30 31 3a 31 34 37 34 33 3a 57 65 64 |453443:14743:Wed|
[17:32:04] <Guest59> 000020: 20 4a 75 6e 20 33 30 20 30 37 3a 30 33 3a 33 39 | Jun 30 07:03:39|
[17:32:04] <Guest59> 000030: 20 50 44 54 20 32 30 32 31                      | PDT 2021       |
[17:32:05] <Guest59> CLAIMED_DATE = 2021-06-30:07:03:39
[17:32:05] <Guest59> 000000: 32 30 32 31 2d 30 36 2d 33 30 3a 30 37 3a 30 33 |2021-06-30:07:03|
[17:32:06] <Guest59> 000010: 3a 33 39                                        |:39             |
[17:32:06] *** litharge sets mode: +q *!*@136.233.21.115
[17:32:38] *** litharge sets mode: -q *!*@136.233.21.115
[17:32:38] <Guest59> Current time: 2021-06-30 14:43:59
[17:32:38] <Guest59> OCI Error ORA-00001: unique constraint (HEAL_PK) violated (status = 1), SQL <INSERT /*+ RESTRICT_ALL_REF_CONS */ INTO FRD_LN_ITE ("FRAUD_S_TXN_L_ITEM_ID","FRAUD_SCORING_TXN_ID","CONTENT_TYPE_ID","CREATED","LAST_MODIFIED","ADAM_ID","PRICE","PURCHASE_LINE_ITEM_ID") VALUES (:a0,:a1,:a2,:a3,:a4,:a5,:a6,:a7)>
[17:32:39] <Guest59> Operation failed at seqno 4 rba 347667025
[17:32:39] <Guest59> Discarding record on action DISCARD on error 1
[17:32:40] <Guest59> Problem replicating FRD_LN_ITE to FRD_LN_ITE.
[17:32:40] <Guest59> Mapping problem with insert record (target format) SCN:0.5191.9.172810...
[17:32:40] *** litharge sets mode: +q *!*@136.233.21.115
[17:33:11] *** litharge sets mode: -q *!*@136.233.21.115
[17:33:11] <Guest59> 000000: 30                                              |0               |
[17:33:11] <Guest59> LAST_PROCESSED_EVENT = NULL
[17:33:12] <Guest59> PAY_SRV_SELLER_NUMBER = NULL
[17:33:12] <Guest59> ORIG_CUTOFF_DATE = NULL
[17:33:13] <Guest59> PODCAST_ID = NULL
[17:33:13] <Guest59> ACQUIRED_DATE = NULL
[17:33:13] *** litharge sets mode: +q *!*@136.233.21.115
[17:33:20] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[17:33:20] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[17:33:22] <jinsun__> litharge should have just kicked at this point
[17:33:39] <niko> it's not how it is configured for #python
[17:33:40] *** Joins: kevr (~kevr@user/kevr)
[17:33:44] *** litharge sets mode: -q *!*@136.233.21.115
[17:33:44] <Guest59> 000010: 3a 31 37                                        |:17             |
[17:33:45] <Guest59> SUBJECT = ChangeInDB
[17:33:45] <Guest59> 000000: 43 68 61 6e 67 65 49 6e 44 42                   |ChangeInDB      |
[17:33:46] <Guest59> TYPE_ID = 0
[17:33:46] <Guest59> 000000: 30                                              |0               |
[17:33:47] <Guest59> IS_RPIP = 5746565645345566
[17:33:47] *** litharge sets mode: +q *!*@136.233.21.115
[17:33:48] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:33:54] <JohnDoe1> these web IRC clients really need to implement a prompt "yo, you're sending 43920 lines. That'll take 1 year, 6months, and 2 days to finish"
[17:34:07] <tykling> JohnDoe1: lol, yes
[17:34:16] <jinsun__> niko: yeah I mean, that's how it should have been configured
[17:34:18] *** litharge sets mode: -q *!*@136.233.21.115
[17:34:18] <Guest59> WHOLESALE_PRICE = 4.23
[17:34:19] <Fulgen> they're web IRC clients, what are you expecting
[17:34:19] <Guest59> 000000: 34 2e 32 33                                     |4.23            |
[17:34:19] *** Joins: Atque (~Atque@user/atque)
[17:34:19] <Guest59> ROYALTY_CURRENCY_ID = 3
[17:34:20] <Guest59> 000000: 33                                              |3               |
[17:34:20] <Guest59> MECHANICALS_FEE = 0
[17:34:21] <Guest59> 000000: 30                                              |0               |
[17:34:21] *** litharge sets mode: +q *!*@136.233.21.115
[17:34:23] <Fulgen> ffs
[17:34:29] <tykling> why would you remove it
[17:34:38] <Fulgen> isnt that a bot
[17:34:39] *** Joins: fldme (~fldme@178.49.152.151)
[17:34:51] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[17:34:58] *** Joins: aehu6ce8 (~aehu6ce8@31.187.110.131)
[17:34:59] <niko> he gets 5 minutes before -q
[17:35:01] <Fulgen> usually people just post a short snippet that then gets /dev/null'd by the quiet mode
[17:35:03] *** Quits: u0_a1231 (~u0_a123@49.15.138.189) (Ping timeout: 256 seconds)
[17:35:07] *** Joins: dme86 (~dan@user/dan86)
[17:35:08] <Fulgen> not...three billion lines of a log?
[17:35:10] <Jaxx> Whats the newest stable version of python for windows 11 Home 64bit?
[17:35:25] <Fulgen> 3.10.2
[17:35:29] *** Joins: NoNickname[m] (~nonicknam@2001:470:69fc:105::1:c0f2)
[17:35:55] <Jaxx> can you give me the link IF you can
[17:35:58] *** Azem is now known as Emet-Selch
[17:36:06] *** Parts: NoNickname[m] (~nonicknam@2001:470:69fc:105::1:c0f2) ()
[17:36:42] <leitz> Jaxx  https://www.python.org
[17:37:20] <Jaxx> thanks :D
[17:37:31] *** Joins: asdfsfdasdfw (~asdfsfdas@12.182.213.210)
[17:37:36] *** Joins: arinov_ (~arinov@213.194.126.155)
[17:37:46] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[17:38:03] *** Quits: Allegretto (~allegrett@87-97-89-29.pool.digikabel.hu) (Ping timeout: 252 seconds)
[17:39:33] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[17:39:33] *** litharge sets mode: -q *!*@136.233.21.115
[17:39:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[17:42:13] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:42:19] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Quit: Konversation terminated!)
[17:42:41] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[17:43:20] <leitz> nedbat, I found a solution. Not sure why it works, I'll write that up seperately, and then paste it. I'd love to know what I don't know on this one.
[17:43:26] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:43:59] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[17:44:12] <Knyght> is there a way to type something as a callable where the first argument is known but the rest are not (using *args, **kwargs, or a combination)? From the docs I see "There is no syntax to indicate optional or keyword arguments" - fine, but I still want to type the known argument
[17:44:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:45:08] <jinsun__> Knyght: can't do it with Callable, use a Protocol with a __call__ method
[17:45:45] *** Joins: Everything (~Everythin@37.115.210.35)
[17:45:46] *** Joins: voidsync (~void@user/voidsync)
[17:46:00] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[17:46:15] *** Joins: guych_2110 (~gchilton@2001:7c8:2110:db17::140)
[17:46:18] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[17:47:18] <Knyght> jinsun__: I'll have a look, thanks. It looks a little complex, do you know any example?
[17:47:30] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[17:47:49] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:48:04] <Knyght> oh, maybe it's not so tough... do I just make a protocol class, add the call method and type that method?
[17:48:10] *** Joins: cdown_ (~cdown@188.214.11.14)
[17:48:32] *** Joins: txtsd (~txtsd@user/txtsd)
[17:48:40] <asdfsfdasdfw> OS: 64 bit Windows 10 Professional (Version 10.0 2009 Build 19044.1526)
[17:49:37] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Ping timeout: 250 seconds)
[17:49:46] <leitz> nedbat, I figured it out. The return_character() returned to the build(), but build() didn't return to the caller. Fixed that.
[17:49:48] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 240 seconds)
[17:50:11] *** Joins: Allegretto (~allegrett@84-236-65-158.pool.digikabel.hu)
[17:50:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:50:36] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[17:50:37] *** cdown_ is now known as cdown
[17:51:06] <Pi-sistance> is spyder one of the best debuggers? python tutor doesnt support extra modules, and the others confused me too much
[17:51:12] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:51:18] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[17:51:34] <Soni> so why are generators (...) instead of gen(...)?
[17:52:28] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:15c4:65b7:2468:1fe6)
[17:52:36] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:53:01] <jinsun__> Knyght: yeah, it would be something like that, I was making an example but looks like not easy to get mypy happy, it is giving nonsense errorrs
[17:53:30] *** Joins: xkuru (~xkuru@user/xkuru)
[17:53:30] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.108)
[17:53:48] *** Joins: dme86 (~dan@user/dan86)
[17:54:03] *** Joins: chadea (~a@pool-96-241-113-90.washdc.fios.verizon.net)
[17:54:06] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[17:54:25] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:54:46] <chadea> Does SharableList automatically manage its own memory use?
[17:55:02] <chadea> SharedMemory requires a specific size to be set
[17:55:04] *** Parts: Everything (~Everythin@37.115.210.35) ()
[17:55:09] *** Joins: mickey8 (~user@user/mickey)
[17:55:41] <chadea> I'm creating a Sharable List using SharedMemoryManager
[17:55:48] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:55:58] <Knyght> jinsun__: it seems ok for me but my example is very simple
[17:56:12] *** Quits: revolve (~u0_a227@82-132-238-52.dab.02.net) (Ping timeout: 240 seconds)
[17:56:34] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[17:57:15] <Jimmy2027> hi, if I have a project structure like this https://dpaste.com/D4D79YQF9, how can I import something in from my_folder.utils.py in main.py such that I can run the script with "python utils.f1.f2.main.py"?
[17:57:27] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:57:33] <jinsun__> Knyght: okay I was trying to get it working without contraining the argument name, yeah the simpler way works https://mypy-play.net/?mypy=latest&python=3.10&gist=e48839aa79810cba114f9de49d396e8d&flags=strict
[17:57:38] <BinarySavior> Hi using pandas I'm using df.dropna(), however now I want to record those index which have been dropped and log them for the user
[17:57:45] <BinarySavior> what's a good way of doing this?
[17:57:53] <BinarySavior> oh nvm dropna() returns the dataframe which has been dropped
[17:57:57] <BinarySavior> wait
[17:58:00] *** Joins: shad (~shad@user/shad)
[17:58:03] <BinarySavior> no it doesn't, my question still stands
[17:58:08] *** Joins: esther (~esther@2607:fb90:20d9:bc49:3f66:5320:1129:7608)
[17:58:11] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[17:58:12] *** Joins: iflema (~ian@user/iflema)
[17:59:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[17:59:05] <chadea> BinarySavior: take the set difference between the two indicies (before - after)
[17:59:20] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:59:35] <chadea> set(before.index) - set(after.index)
[17:59:46] <chadea> You can also sort it to look nice
[18:00:42] *** Joins: Barones (~Barones@user/Barones)
[18:01:20] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:01:25] <jinsun__> BinarySavior: you can use .isna to get the indices it is going to drop before doing .dropna too
[18:01:40] <jinsun__> df.isna().any(axis=1).index
[18:01:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[18:02:11] <chadea> This is better ^
[18:02:17] *** Quits: esther (~esther@2607:fb90:20d9:bc49:3f66:5320:1129:7608) (Ping timeout: 240 seconds)
[18:02:28] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 272 seconds)
[18:03:22] <bjs> chadea: ShareableList calculates the size it needs from the input sequence I believe
[18:03:50] <chadea> I am trying to use or emulate a set() across many processes
[18:04:10] <chadea> I figured a SharableList would be one (hacky) way to accomplish this because I don't see a shared set type
[18:04:24] <chadea> I'd really rather not mess with shared Queues but that may be the only other alternative
[18:04:35] <phy1729> What are you going to use the object for?
[18:04:51] <chadea> Checking for duplicate tuples
[18:05:15] <bjs> chadea: are you sure that shared memory is the way you want to do this
[18:05:19] <chadea> No
[18:05:24] <bjs> it might be easier to use the SyncManager and its dict
[18:05:27] <chadea> I need to synchronize across processes
[18:05:30] *** Joins: Fl0pFl1p (~FlipFlop@user/fl1pfl0p)
[18:05:30] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:05:42] <chadea> And emulate a set with that dict type?
[18:05:50] *** Joins: zmt01 (~zmt00@user/zmt00)
[18:05:57] <bjs> chadea: https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes see the second "server process"
[18:05:58] <bjs> example
[18:06:06] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[18:06:06] <bjs> chadea: yes, a set is just a dict really
[18:06:36] <chadea> That is a great example thank you. Which begs the question, what is shared memory useful for besides numpy arrays?
[18:06:36] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Ping timeout: 240 seconds)
[18:07:00] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[18:07:04] <bjs> chadea: for when you really want to *share* memory between processes rather than just sychronizing
[18:07:23] <chadea> I don't understand the difference
[18:07:31] *** Joins: aselman4 (~aselman4@chipr010-p2.nls.ford.com)
[18:07:37] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:07:39] *** Joins: NovaXrine_ (~NovaXrine@zen.novaxrine.com)
[18:07:48] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[18:07:48] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:5b51:f662:45fb:ee20) (Ping timeout: 240 seconds)
[18:07:48] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:d021:8aa5:1490:ffcd)
[18:08:01] <aselman4> Hello all. is anyone familiar with debugging pyd modules in visual studio?
[18:08:06] *** Joins: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[18:08:12] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:15c4:65b7:2468:1fe6) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: guych_2110 (~gchilton@2001:7c8:2110:db17::140) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: spiderman (spiderman@spiderman.shelltalk.net) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: SR-71 (~user@user/SR-71) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:2f83:eea6:baa0:61bf) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-3d94-4d23-dc7c-c228.res6.spectrum.com) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: koopman (sid466269@id-466269.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:2a65:85ea:282b:a802) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[18:08:14] *** Joins: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:2f83:eea6:baa0:61bf)
[18:08:15] *** Joins: Pickchea (~private@user/pickchea)
[18:08:29] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:08:29] <bjs> chadea: well imagine you want 10 processes to each do some part of the work on a big graph or something. So you create some shared memory and tell each process which part of the shared memory is the part of the graph they're working on.  then they can all read and write to their parts of the graph (or buffer or whatever you want)
[18:08:36] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Ping timeout: 240 seconds)
[18:08:36] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[18:08:38] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:5645:8ac2:d647:aa4d)
[18:08:44] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:09:14] *** Joins: SR-71 (~user@user/SR-71)
[18:09:25] <bjs> chadea: the processes don't need to communicate with each other (synchronize) they just want to share the resulting memory so the parent/whoever can access it afterwards
[18:09:38] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[18:09:47] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[18:09:53] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[18:09:54] *** Joins: koopman (sid466269@id-466269.ilkley.irccloud.com)
[18:10:08] *** Joins: txtsd (~txtsd@user/txtsd)
[18:10:10] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:10:29] *** Joins: unyu (~pyon@user/pyon)
[18:10:32] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:10:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:10:57] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:15c4:65b7:2468:1fe6)
[18:11:08] <chadea> Fascinating. The graph in your example could probably be a sparse adjacency matrix in numpy which uses shared memory
[18:11:13] <bjs> shared memory is really for a very niche usecase,  like a big array
[18:11:18] <bjs> chadea: yes
[18:11:45] <chadea> So in the end its really about providing a buffer for numpy
[18:11:47] <bjs> shared memory is really just "here's N bytes in a row you can read/write to",  so some kind of array is an obvious choice
[18:12:01] <chadea> Right, in practical terms, the major use case is the numpy buffer as I understand it
[18:12:11] <bjs> chadea: well "for numpy" not really, shared memory is "about providing a buffer" but that buffer can be used for anything
[18:12:25] <chadea> Fair enough. I need to get more creative
[18:12:29] <bjs> numpy is just one obvious place where you want to share data and it looks like a buffer already
[18:12:35] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 240 seconds)
[18:12:39] <chadea> What motivated the implementation?
[18:13:04] *** Joins: colo (~colo@user/colo)
[18:13:13] <colo> hello, good people of python :)
[18:14:12] <bjs> chadea: well it's just a wrapper around mmap.mmap() which people were already doing, e.g. as you say with numpy arrays
[18:14:13] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[18:14:21] <bjs> as for ShareableList I have no idea where that came from
[18:14:37] *** Joins: han-solo (~hanish@user/han-solo)
[18:14:47] <chadea> Haha, funny. Thanks for explaining bjs
[18:14:53] *** Joins: bluedust (~bluedust@103.161.144.138)
[18:14:55] <bjs> chadea: funny?
[18:15:07] *** Joins: dme86 (~dan@user/dan86)
[18:15:09] <chadea> Someone implemented SharableList with no clear motivation
[18:15:21] <bjs> chadea: presumably there was a motivation, but I just don't know what it is :P
[18:15:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:15:27] <chadea> It does seem random to me
[18:15:42] *** Joins: Guest222 (~Guest222@88.103.7.38)
[18:15:55] *** Joins: bahamas (~lucian@84.232.140.52)
[18:16:17] <bjs> chadea: that's the Python stdlib for you
[18:18:03] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[18:18:37] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:a8dd:5c27:8521:ae73)
[18:18:54] <colo> I am creating a program for internal use that keeps tracks of files on tape archives. I use python to walk directory trees and record file(system) metadata in a trivial sqlite database, all using python. I now face a filename from some weird ZIP archive that contains unicode/gibberish that *some* component (Python or sqlite, I am not 100% sure ;)) does not like, and I am wondering how I can fix that...
[18:19:02] <colo> I tried to summarize the problem here: https://paste.debian.net/plain/1231117
[18:19:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:19:34] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[18:20:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[18:20:15] *** Quits: aselman4 (~aselman4@chipr010-p2.nls.ford.com) (Quit: Client closed)
[18:20:48] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-4424-fc06-167e-bc32.res6.spectrum.com)
[18:21:16] <chadea> colo: why convert to unicode instead of keeping the names as bytes?
[18:21:33] <colo> chadea, I am not conciously doing that :)
[18:21:51] <chadea> I'm not a filesystem expert but I believe the low level APIs reference file names using bytes
[18:21:55] <SnoopJ> colo, printing just the exception is discarding some useful information, I recommend using `traceback.print_exc()` instead of `print(e)` in that handler.
[18:22:10] <colo> yes, UNIX filenames may contain any byte sequence except for / and \0
[18:22:13] <SnoopJ> (this is what the default top-level exception handler does just before the interpreter exits)
[18:22:17] <chadea> colo: you are, "path text, name text"
[18:22:33] <colo> chadea, I also tried "path blob, name blob" - same Exception
[18:22:49] <chadea> did you drop table?
[18:23:00] <colo> no, I create a new database for each run
[18:23:03] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:d591:28fb:7093:57e8)
[18:23:08] <colo> (so the schema also gets renewed)
[18:23:08] <chadea> You aren't checking the error code of create table
[18:23:11] <chadea> Oh
[18:24:22] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[18:24:39] <chadea> colo: cur.execute("insert into Images VALUES(?,?,?)", (objid,sqlite3.Binary(image_bytes),image_size)   )
[18:24:51] <chadea> You can try to wrap the bytes with sqlite3.Binary
[18:25:03] <chadea> https://github.com/miguel-aragon/Store-images-in-SQLite/blob/master/store_images_in_db.py#L56
[18:25:03] *** Joins: u0_a1231 (~u0_a123@27.97.168.74)
[18:25:15] <colo> chadea, thanks, I will try that
[18:25:50] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:d021:8aa5:1490:ffcd) (Quit: Client closed)
[18:25:53] *** Quits: asdfsfdasdfw (~asdfsfdas@12.182.213.210) (Quit: Going offline, see ya! (www.adiirc.com))
[18:26:27] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:15df:c5e6:871:3fb3) (Ping timeout: 252 seconds)
[18:27:44] <colo> ok, this blows up with:
[18:27:44] <colo>     cur.execute("INSERT INTO files VALUES (?,?,?)", (sqlite3.Binary(f['path']), sqlite3.Binary(f['name']), f['hash']))
[18:27:44] <colo> TypeError: memoryview: a bytes-like object is required, not 'str'
[18:27:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:28:16] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bc57-aa05-744c-cbb3.res6.spectrum.com)
[18:28:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:28:51] *** Joins: ivii (~ivan@user/ivii)
[18:28:56] <colo> which kinda makes sense, if it follows that having the filename and pathname as a str object... that would lead the sqlite module to maybe trying to serialize it using a UTF-8 encoding, right?
[18:30:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:30:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:30:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:31:14] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[18:31:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[18:32:28] *** Joins: nomic (~nomic@185.217.117.193)
[18:32:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:33:55] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[18:34:29] <colo> chadea, this seems like a promising lead: https://stackoverflow.com/a/27367173
[18:34:58] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Max SendQ exceeded)
[18:35:05] *** Joins: asdfsfdasdfw (~asdfsfdas@12.182.213.210)
[18:35:23] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[18:36:15] *** Joins: nolan_ (~nolan_@121.sub-174-215-151.myvzw.com)
[18:36:15] *** Quits: nolan_ (~nolan_@121.sub-174-215-151.myvzw.com) (Changing host)
[18:36:15] *** Joins: nolan_ (~nolan_@user/nolan/x-2434303)
[18:36:18] <colo> yeah, using a bytestring as the argument to os.fwalk (in my case) seems to work. I have a feeling that this should be (better) documented? or are python developers supposed to know this kind of magic interaction?
[18:36:27] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:6003:e4ac:5474:e276)
[18:36:33] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[18:36:39] <tomeaton17> https://bpa.st/EOFQ this looks like some sort of poisson function right? but it seems like it has errors
[18:36:52] <tomeaton17> I am not familiar of a recursive poission function does anyone know?
[18:37:26] <SnoopJ> tomeaton17, `l^x` looks suspicious, if that's supposed to be "l to the power of x" then that's spelled (l**x)
[18:37:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[18:37:46] <CrtxReavr> What's the file the putput of 'pip freeze' gets saved to?
[18:37:49] <SnoopJ> or `math.pow(l, x)` if you prefer
[18:38:09] <CrtxReavr> output
[18:38:12] <CrtxReavr> Typing is hard.
[18:38:19] <SnoopJ> CrtxReavr, stdout
[18:38:24] <tomeaton17> SnoopJt even then the values do not make sense. I don't know about the recursive definition
[18:38:48] <SnoopJ> tomeaton17, yea the recursion is weird too, but the ^ is what stuck out to me.
[18:39:41] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Max SendQ exceeded)
[18:39:53] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[18:40:49] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:6003:e4ac:5474:e276) (Client Quit)
[18:41:05] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[18:42:12] <bahamas> CrtxReavr: pip freeze > requirements.txt, if you want to save it to a file
[18:42:58] <CrtxReavr> That's it!  Thanks.
[18:43:24] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[18:43:25] *** Quits: u0_a1231 (~u0_a123@27.97.168.74) (Read error: Connection reset by peer)
[18:43:26] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[18:45:24] *** Joins: parv (~quass@user/parv)
[18:47:11] *** Joins: reset (~reset@user/reset)
[18:48:04] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 272 seconds)
[18:48:49] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[18:49:01] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[18:50:00] *** Quits: Guest59 (~Guest59@136.233.21.115) (Quit: Client closed)
[18:50:06] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[18:50:57] *** Joins: dme86 (~dan@user/dan86)
[18:51:28] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[18:53:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[18:53:41] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[18:54:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:54:04] <chadea> colo: filesystem names are "bytes"
[18:54:29] <chadea> Don't convert them unless you want to pretty print something for humans to glance at
[18:55:34] *** Quits: asix (~Anders@user/asix) (Quit: leaving)
[18:56:04] <colo> chadea, I *never* converted them on my own.
[18:56:09] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[18:56:28] <chadea> Yep, don't be tempted either
[18:56:36] <colo> I get arguments from argparse, and use those as starting points for os.walk()
[18:56:39] <chadea> Were you able to wrap the bytes in sqlite
[18:57:00] <colo> yeah, I can store them as either TEXT or BLOB apparently
[18:57:05] *** Quits: asdfsfdasdfw (~asdfsfdas@12.182.213.210) (Quit: Going offline, see ya! (www.adiirc.com))
[18:57:10] <colo> reading up on which is wiser ;)
[18:57:34] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 272 seconds)
[18:57:34] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 272 seconds)
[18:57:37] <chadea> I would not take the risk of putting binary bytes into sqlite TEXT
[18:58:23] <chadea> It appears that they are the same, except TEXT implies string handling helper functions upon read
[18:58:38] *** Joins: asdfsfdasdfw (~asdfsfdas@12.182.213.210)
[18:58:54] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:15c4:65b7:2468:1fe6) (Ping timeout: 252 seconds)
[18:58:56] <deniska> sqlite types are more of a guideline, you can put a blob inside integer column, and unless you turned type checking on, it won't complain, and will store a blob there
[18:59:06] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:197b:1695:9065:307b)
[18:59:25] * deniska looks at the name of the channel
[18:59:43] * octav1a looks at deniska
[18:59:46] <deniska> although python db-api can perform additional transformations depending on type reported by sqlite
[19:00:36] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[19:00:48] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:793d:d161:ffe1:d8df)
[19:02:38] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[19:03:35] *** Joins: Vonter (~Vonter@user/vonter)
[19:04:12] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[19:05:38] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[19:06:03] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[19:06:13] *** Quits: parv (~quass@user/parv) (Quit: parv)
[19:06:37] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[19:08:12] *** Quits: ejjfunky (~ejjfunky2@125.164.20.119) (Remote host closed the connection)
[19:08:28] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[19:08:37] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[19:09:31] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[19:10:56] *** Joins: cowsay_moo_ (~cowsay-mo@2001:ac8:28:900:1026:8eea:d397:b779)
[19:11:16] *** Quits: paul424 (~tom@apn-77-113-43-226.dynamic.gprs.plus.pl) (Quit: Leaving)
[19:11:23] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Read error: Connection reset by peer)
[19:12:10] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:12:46] *** Joins: truth2 (~truth@user/truth)
[19:12:57] *** Quits: aehu6ce8 (~aehu6ce8@31.187.110.131) (Quit: aehu6ce8)
[19:13:45] *** Quits: cowsay_moo (~cowsay-mo@2a0d:5600:24:1500:1016:e0f9:5cb6:70c5) (Ping timeout: 252 seconds)
[19:15:31] *** Joins: bahamas (~lucian@84.232.140.52)
[19:15:46] *** Joins: dme86 (~dan@user/dan86)
[19:15:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:16:37] <ham5urg_> What's the most elegant way to cut every n-th element off a ["list", ...]?
[19:17:03] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[19:17:06] *** Quits: fldme (~fldme@178.49.152.151) (Quit: Client closed)
[19:17:23] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[19:19:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:20:30] <CrtxReavr> Can you "break" anything by having the same venv activated in multiple terminals?
[19:20:42] <mefistofeles> CrtxReavr: that shouldn't be a problem
[19:21:14] <CrtxReavr> I'm sure I'll find a way. . .
[19:21:22] <mefistofeles> haha, let us know!
[19:21:29] <SnoopJ> ham5urg_, `newlst = [elem for idx,elem in enumerate(lst, 1) if idx % N]` or thereabouts
[19:21:59] <SnoopJ> if it's any more complicated than that, I'd likely be writing a generator function, I frequently find it easier to reason about a loop that yields
[19:22:03] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[19:22:19] <mefistofeles> SnoopJ: I wonder if it is easy to extend python list objects to have fancy indexing somehow
[19:22:46] *** Quits: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:22:49] <SnoopJ> mefistofeles, tinynumpy does that :)
[19:22:54] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:22:59] <mefistofeles> ah! nice, didn't know about that one
[19:23:01] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[19:23:05] *** Joins: Devinn (~Devinn@searspoint.nvidia.com)
[19:23:39] *** Parts: Jaxx (~Jaxx@user/jaxx) (Leaving)
[19:25:20] *** Joins: zebrag (~chris@user/zebrag)
[19:25:26] *** Joins: Pickchea (~private@user/pickchea)
[19:25:52] *** Joins: sembitvea[m] (~sembitvea@2001:470:69fc:105::1:c113)
[19:25:56] *** Joins: iflema (~ian@user/iflema)
[19:25:57] *** Quits: loofy (~loofy@user/loofy) (Ping timeout: 240 seconds)
[19:26:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:26:39] *** Joins: mat001 (~mat001@72.28.108.216)
[19:27:02] *** Quits: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net) (Remote host closed the connection)
[19:27:24] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[19:27:33] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[19:27:37] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:28:07] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[19:28:07] *** Joins: loofy (~loofy@user/loofy)
[19:29:51] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[19:30:05] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[19:32:51] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[19:33:13] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:33:20] *** Joins: vaio (~gary@user/ghost)
[19:33:33] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[19:33:43] *** Joins: pro_z (~pro_z@37.214.74.198)
[19:34:36] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:35:36] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:36:50] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[19:38:17] <Evolver> Which is the fastest in-memory cache that supports multiple processes? I don't want to have to install Redis.
[19:39:22] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 272 seconds)
[19:39:26] <SnoopJ> Evolver, why not? Are you avoiding *all* external dependencies?
[19:39:42] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[19:39:53] <Evolver> They shouldn't be necessary for my goal.
[19:40:10] <Evolver> since I don't need to access the cache from outside my Python processes
[19:40:12] <SnoopJ> Does that mean "yes"
[19:40:20] <Evolver> ideally I am avoiding
[19:40:27] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[19:40:40] <SnoopJ> is `multiprocessing.shared_memory.SharedMemory` fast enough?
[19:41:00] <SnoopJ> uhh and also /dev/shm is worth asking about if you are on a system that has it
[19:41:18] <SnoopJ> I've used it for approximately this purpose in the past
[19:41:31] <Evolver> I need to write 1 billion keys to it
[19:41:55] * SnoopJ isn't sure if that means "yes" or "no"
[19:42:35] *** Joins: nrg (~NRG@user/nrg)
[19:42:37] <Evolver> multiprocessing.shared_memory was overrated and didn't even work.
[19:42:37] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:42:52] <Evolver> It doesn't have a ShareableDict
[19:43:35] <chadea> You might be using the wrong tool for the job if you need to write a billion dictionary keys
[19:43:44] *** Joins: crashrep (~crashrep@user/crashrep)
[19:44:25] <caveman> how to talk to websocket server apps using python?
[19:45:04] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[19:45:30] <Evolver> chadea: you might be making the wrong assessment. I have ten jobs and each job has up to 100 million keys each. In aggregate it's 1 billion, but really there will never be cross-partition lookup.
[19:45:33] <grym> caveman: https://github.com/aaugustin/websockets ?
[19:46:03] <caveman> grym: is that the best solution?
[19:46:08] <caveman> as in, the most pythonic.
[19:46:24] <grym> caveman: who can say?
[19:46:25] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[19:46:45] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[19:46:49] <ham5urg_> SnoopJ, thanks.
[19:47:03] <caveman> grym: the most powerful.
[19:47:21] <marduk> I can say
[19:47:25] <grym> caveman: tias, right
[19:47:38] <marduk> But my opinion is as useless as the other guy
[19:47:41] <caveman> tias?
[19:47:46] <SnoopJ> Evolver, could you perhaps use sqlite3 with the :memory: feature in each subprocess? I'm not sure how that lines up with your IPC needs, but libsqlite is pretty zippy.
[19:47:46] <grym> 'try it and see'
[19:48:01] <Evolver> SnoopJ: ya, I could try that if nothing else
[19:48:13] <caveman> grym: yes, sure, but more info will save me time.
[19:48:26] <grym> caveman: it seems well documented, actively maintained, and simple to use
[19:48:31] *** Quits: nolan_ (~nolan_@user/nolan/x-2434303) (Ping timeout: 256 seconds)
[19:48:32] <Evolver> SnoopJ: but I doubt that "memory" supports reading from multiple processes
[19:48:47] <caveman> grym: thanks.  :)
[19:48:52] <Evolver> SnoopJ: just like you noted
[19:48:59] <SnoopJ> Evolver, it's not really clear what your IPC requirements are, since you just said that cross-partition lookups aren't necessary. I didn't know if a process and a partition were coincident.
[19:49:09] <Evolver> SnoopJ: each job still has 32 workers
[19:49:13] * SnoopJ shrugs
[19:49:22] <SnoopJ> I've suggested the idea, it's on you to try it
[19:49:26] <Evolver> SnoopJ: sorry. I have been saying the whole time I need to read from multiple processes.
[19:49:32] <Evolver> I'd have to use disk
[19:49:37] <Evolver> (with sqlite)
[19:49:46] <SnoopJ> good luck
[19:49:51] *** Quits: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:2f83:eea6:baa0:61bf) (Quit: Leaving)
[19:50:09] <Evolver> I used multiprocessing and it worked, just slowly
[19:50:37] *** Joins: onichomp (~onichomp@2806:264:4408:95:1120:7614:19a3:7876)
[19:51:52] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[19:51:59] *** Quits: onichomp (~onichomp@2806:264:4408:95:1120:7614:19a3:7876) (Read error: Connection reset by peer)
[19:52:14] <chadea> Evolver: how often do you read the billion? Can each process pickle a dict to disk?
[19:52:22] *** Joins: navigator (~Navigator@2605:6440:3008:a001::aee8)
[19:52:36] *** Quits: davit (~davit@50.35.184.227) (Ping timeout: 240 seconds)
[19:52:37] *** Joins: onichomp (~onichomp@2806:264:4408:95:1120:7614:19a3:7876)
[19:54:18] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:54:54] <Evolver> chadea: not often, maybe 0-5 times per key. Speed is essential. Pickle or writing to /dev/shm should work, but pickle may have too much overhead. The key is a tuple and the value is a float.
[19:54:55] *** Joins: angelacrust (~angelacru@182.68.130.113)
[19:55:08] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:55:53] *** Joins: paul424 (~tom@ip-5-172-232-107.multi.internet.cyfrowypolsat.pl)
[19:56:01] <Evolver> chadea: The writes have to be lock-free, otherwise the speed benefits are lost.
[19:56:26] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[19:56:39] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[19:56:55] <chadea> You might have to write a C module for this. I can't think of an efficient way to do it with the standard library
[19:57:01] *** Joins: pepper (~pepper@user/pepper)
[19:57:15] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[19:57:25] <SnoopJ> perhaps sqlite that lives in /dev/shm if the cache is ephemeral
[19:57:38] *** Quits: rya (~ry@user/rya) (Remote host closed the connection)
[19:57:40] *** Joins: blackleitus (~blackleit@189.195.195.100)
[19:57:44] <EdFletcher> you're kinda just reinventing redis at this point 😂
[19:57:44] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[19:57:45] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[19:57:48] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:57:57] <SnoopJ> well, that's the task :P
[19:58:12] <EdFletcher> yeah but you're not going to do it _better_ than redis so... just use redis
[19:58:27] *** Joins: Barones (~Barones@user/Barones)
[19:58:39] * SnoopJ tries to respect stated constraints when they are given
[19:58:46] <chadea> Evolver: try redis with unix socket
[19:58:49] <EdFletcher> oh i must've missed something, sorry
[19:58:55] <EdFletcher> a constraint to not use redis?
[19:59:05] <SnoopJ> EdFletcher, they said explicitly that they don't want to have external dependencies on redis/etc., yea
[19:59:08] <chadea> yeah, self-imposed desire to reduce dependencies
[19:59:09] <Evolver> I was hoping that there is an embeddable redis in a python package
[19:59:10] <EdFletcher> oh
[19:59:20] <Evolver> like there is an embeddable sqlite
[19:59:25] *** Joins: Betal (~Betal@user/betal)
[19:59:27] <chadea> No, but if you connect over unix sockets, you will get really fast connectivity to redis
[19:59:33] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[19:59:57] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[20:00:10] <SnoopJ> Evolver, it's "embeddable" but it still has an external dependency on libsqlite3
[20:00:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:00:43] <SnoopJ> which isn't a terribly hard dependency to satisfy, but worth pointing out that philosophically it's not *that* different
[20:00:45] <Evolver> SnoopJ: so something similar might be fine
[20:00:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:11] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[20:01:21] <SnoopJ> Evolver, that would be "install redis" which you are strongly opposed to, so I'm wondering what would thread the needle here.
[20:01:22] *** Joins: SuperLag (~akulbe@user/superlag)
[20:01:23] <Evolver> My cache miss takes 300 millisec to handle, so if a cache get is quick, I can benefit.
[20:01:36] <bahamas> Evolver: what's the reason for not wanting non-python dependencies?
[20:01:39] <Evolver> SnoopJ: ok I'll look into Redis. Thanks
[20:01:46] *** Joins: wac (~wac@user/wac)
[20:01:55] <Evolver> bahamas: well just philosophical, in that it's something else I need to manage
[20:02:00] <Evolver> so if I don't have to manage it, then it's fine
[20:02:09] <bahamas> fair enough
[20:02:14] <chadea> Evolver: whatever you do use unix sockets to connect to redis
[20:02:20] <SnoopJ> you could maybe vendor a built redis/whatever with your application, too, if it's the installation machinery that bugs you. Seems like it's probably more work, though.
[20:02:22] <Evolver> chadea: noted, t.y.
[20:03:40] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[20:04:01] *** Quits: navigator (~Navigator@2605:6440:3008:a001::aee8) (Remote host closed the connection)
[20:04:07] *** Joins: navigator_ (~Navigator@047-229-046-254.res.spectrum.com)
[20:04:41] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[20:04:54] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[20:05:03] <navigator_> Quick interjection: Would your knee-jerk answer be that Reddis is better than MongoDB? Been using Mongo for a while now
[20:05:47] <SnoopJ> navigator_, is there a particular metric associated with "better" or are you looking for people's general evaluations? (I don't have one to offer, personally)
[20:05:52] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[20:05:52] <bahamas> navigator_: don't they optimize for different things?
[20:06:00] <EdFletcher> navigator_: because redis is objectively better than mongodb for this use case, it's one of its primary use cases for which it is highly optimized
[20:06:20] <bahamas> redis (caching), mongo (document store)
[20:06:28] <navigator_> This is totally true, I'm just looking for general evaluations. If they wanted to give certain use cases for either that's helpful too
[20:06:41] <navigator_> @bahamas: Thx
[20:07:07] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:07:32] <navigator_> Just saw a video about Redis by Fireship.io and it looked promising
[20:07:34] <Evolver> The requirement for me is fast lookups and inserts.  I need <=3 millisec for read+write otherwise I'm wasting time.
[20:08:04] <Evolver> Hopefully that's an eternity for Redis.
[20:08:15] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Ping timeout: 240 seconds)
[20:11:31] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:11:59] *** Joins: dme86 (~dan@user/dan86)
[20:12:21] <Pi-sistance> hows everyone coding going today
[20:12:42] *** Quits: Kruppt (~Kruppt@50-111-60-7.drhm.nc.frontiernet.net) (Quit: Leaving)
[20:12:59] <lidless> well,thank you
[20:13:01] <navigator_> Looking for my next project. Just been browsing HN, Lobsters, and various chats for some inspiration
[20:13:29] <SnoopJ> navigator_, there is a good list of ideas here: https://nedbatchelder.com/text/kindling.html
[20:13:39] *** Joins: Elodin (~elodin@user/elodin)
[20:14:06] <navigator_> SnoopJ, taking a look now, thanks!
[20:14:17] <Evolver> Anyone here compare jax with pythran for function acceleration?
[20:14:23] <trace987> is procedural programming: either "using functions with an order and functions have an order" or is it "order per function" or "functions per orders"
[20:15:06] <SnoopJ> Evolver, JAX seems quite good but it's not very general-purpose. I have no knowledge of pythran
[20:15:36] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:15:48] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[20:15:53] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[20:16:03] *** Joins: mickey8 (~user@user/mickey)
[20:16:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:17:26] <bjs> trace987: what do you mean by 'order'? procedural programming is programming with procedures/subroutines.
[20:17:43] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[20:17:46] *** Joins: Angs (~Angs@2.70.202.205.mobile.tre.se)
[20:18:07] <NoImNotNineVolt> "functions per orders"? i'm having trouble parsing that.
[20:18:19] *** Joins: d3sync (~d3sync@193.92.209.51.dsl.dyn.forthnet.gr)
[20:18:29] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:18:49] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[20:19:09] <trace987> order can be the order of commands and etc.
[20:19:11] <bjs> trace987: and a procedure is like a smaller self-contained program you can "call" to do a thing, possibly with some inputs
[20:19:38] <bjs> trace987: I mean "order" comes in the sense that it's related to _imperative_ programming, where you program by doing "one step after another"
[20:19:42] <bjs> and procedural is a kind of imperative
[20:19:45] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[20:19:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:20:27] *** Quits: navigator_ (~Navigator@047-229-046-254.res.spectrum.com) (Quit: Leaving)
[20:20:59] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[20:21:11] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[20:21:33] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[20:22:25] <trace987> so imperative programes are all about orderly commands after each other
[20:22:41] *** Joins: damonlynch (~ngaio@68.235.43.93)
[20:22:56] <bjs> trace987: I guess?
[20:23:02] <trace987> but is it command and order or is it order per command or command per order
[20:23:15] <trace987> so is it a "with" or a "by"
[20:23:18] <bjs> it feels like you started with the word "order" and are trying to make things fit that word
[20:23:19] *** Joins: iflema (~ian@user/iflema)
[20:23:22] <bjs> it's a bit weird
[20:23:34] <trace987> order means just one after the other
[20:23:41] *** Joins: davidd (~hay_sup@user/memorious)
[20:23:58] <bjs> trace987: I mean, imperative programming is a "style" of programming where you write programs that are sequences of actions/commands
[20:24:16] <bjs> Yes there is an order to the commands to 'run'
[20:24:30] <davidd> I want to install pipx. is it recommended that I install it globally with sudo or just have it install to ~/.local/bin and add that to my PATH?
[20:24:39] <bjs> trace987: but I don't know what "order per command" or "command per order" means. What does "one after the other per command" mean exactly?
[20:24:58] <trace987> I want to reduce the idea of procedural programming the paradigm, if it may be a division of 2 paradigms divided by each other or it is just 2 paradigms combining each other
[20:25:01] *** Joins: txtsd (~txtsd@user/txtsd)
[20:25:13] <bjs> trace987: procedural programming = imperative programming + subroutines
[20:25:31] <trace987> order means that you have a function then another then another, or it can mean whatsoever else
[20:25:51] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:26:11] <bjs> you have programs which are made up of sequences of commands/steps/instruction which are run in order,  and your program can be made up of smaller subprograms ("procedures") that you can 'call'
[20:28:30] *** Joins: navigator (~Navigator@2605:6440:3008:d001::581a)
[20:29:02] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:29:18] *** Joins: txtsd (~txtsd@user/txtsd)
[20:30:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:30:23] *** Joins: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be)
[20:30:30] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.19)
[20:30:54] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[20:31:19] <caveman> websockets vs. websocket-client?  which one is better?
[20:31:53] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:32:12] *** Joins: txtsd (~txtsd@user/txtsd)
[20:32:59] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.108) (Ping timeout: 256 seconds)
[20:33:28] *** Joins: didi (~user@user/didi)
[20:33:43] *** Joins: NeoCore (~neocore@195.200.221.226)
[20:33:52] <didi> Do tkinter TreeViews generate events when items are added or removed?
[20:34:03] *** Quits: philectro (~quassel@2a02:2788:1024:671:4668:5b06:18c0:caa) (Remote host closed the connection)
[20:34:15] * lidless consciously avoids tk
[20:34:27] * didi is liking it
[20:34:58] <lidless> I only see Select, Open, and Close
[20:35:01] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[20:35:04] <didi> lidless: Me too.
[20:35:11] <didi> I thought I might have missed something.
[20:35:24] <didi> Maybe an up-the-chain event or something.
[20:35:26] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:35:31] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:35:42] *** Joins: txtsd (~txtsd@user/txtsd)
[20:36:00] <lidless> I hope so for your sake! Sounds like a reasonable ask
[20:36:14] <didi> lidless: Right? Oh, well.
[20:37:16] <lidless> maybe there is something in here that can be leveraged: https://www.tcl.tk/man/tcl8.5/TkCmd/bind.html#M7
[20:37:27] <didi> Thanks, lidless.
[20:38:03] *** Joins: ejjfunky (~ejjfunky2@125.164.19.191)
[20:38:06] <lidless> <3 fingers crossed
[20:38:41] <didi> I can always funnel all the insertions and deletions to a single function, but it doesn't sound as nice.
[20:39:05] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:39:54] *** dcaro is now known as dcaro_away
[20:40:22] <lidless> It seems you can trigger your own event on .insert and .delete?
[20:41:29] <lidless> Or - maybe use tab_bind and give it a callback for inset and delete
[20:41:34] <lidless> *insert
[20:42:26] <didi> Concretely, I have a label as a counter for the amount of items I have inside a treeview. I wanted to update this label by binding to an event, but I can "manually" update this label anytime I insert or delete something from the treeview.
[20:42:44] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[20:42:51] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[20:43:13] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[20:44:10] <didi> lidless: Hum, that's not a bad idea.
[20:44:29] <didi> A little extra step to raise the event, but still.
[20:44:48] <lidless> 🤞
[20:45:09] <lidless> oops tag_bind
[20:45:10] <jancoow> Hi; I'm using the pyinstaller script to generate a binary from my app. This works fine, howeve,r I've some config files in several directories in this app; can pyinstaller also copy this to the dist directory?
[20:45:38] <caveman> how to run python in tor?  any general command?
[20:45:43] <didi> I'll try it. Thank you, lidless.
[20:45:43] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:45:54] <didi> caveman: torify
[20:45:54] <caveman> can i run a websockets python app in tor?
[20:46:42] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[20:49:02] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[20:49:09] *** Quits: Guest222 (~Guest222@88.103.7.38) (Ping timeout: 256 seconds)
[20:50:05] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f08f:f09d:4f68:e2f5)
[20:50:24] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[20:51:15] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[20:51:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:52:24] *** Joins: perohig (~user@85.255.234.173)
[20:52:51] <Henry151> hey #python. I am working with a little blog site thing made with flask. I have this https://bpa.st/P4TQ to create a new blog post, and I want to implement logic to check that the title is unique, so that a new post cannot have the same title as any existing post (even if made by a different user). Can anyone help me with this?
[20:53:40] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:a8dd:5c27:8521:ae73) (Quit: Client closed)
[20:53:50] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[20:54:01] <dsc_> Henry151: put a UNIQUE CONSTRAINT on the database column 'title'
[20:54:15] *** Quits: perohig (~user@85.255.234.173) (Remote host closed the connection)
[20:54:29] <Henry151> i'm thinking it would be something like "if title not in [something that gets all the existing post titles]: error = "Title is duplicated"
[20:54:29] <caveman> sql.  eww.
[20:54:42] <Henry151> just an exercise
[20:54:48] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[20:54:55] <tvm> Henry151: then you have to know what titles are in the database first
[20:55:16] <Henry151> dsc_: I see, a unique constraint on the database column would prevent duplicate titles
[20:55:22] <dsc_> Henry151: SELECT DISTINCT title FROM post
[20:55:26] <dsc_> yes unique constraint is better
[20:55:33] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:55:35] <dsc_> it would error on insertion if there is a duplicate
[20:55:38] <tvm> you have to catch the exception when that happens though
[20:55:56] <tvm> and return something sensible to the user
[20:56:29] <Henry151> how would i catch that exception? the code to catch the exception would be in that pasted bit, right?
[20:56:54] <tvm> db.execute() will throw an exception which you need to handle
[20:57:24] <tvm> https://stackoverflow.com/a/44189193
[20:57:25] <tvm> like this
[20:58:10] *** Quits: greknod2821 (~grek@120.88.171.98) (Quit: Ping timeout (120 seconds))
[20:59:21] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 252 seconds)
[20:59:21] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.19) (Ping timeout: 252 seconds)
[20:59:30] <tvm> this is better: https://stackoverflow.com/a/34531489
[20:59:47] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Quit: i really have to scratch my right butt cheek this time, sorry)
[20:59:47] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[20:59:54] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Read error: Connection reset by peer)
[21:00:55] <tvm> as it closes connection no matter what happens, which is a good practice
[21:02:09] <tvm> and if you want to do it right, you won't catch just 'Exception' but that very specific exception that sqlite module raises
[21:02:12] <tvm> https://docs.python.org/3/library/sqlite3.html#sqlite3.Warning
[21:02:14] <tvm> they are described here
[21:02:58] *** Quits: saroy (~Sandipan@43.252.250.104) (Ping timeout: 272 seconds)
[21:05:24] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[21:05:39] *** Joins: dme86 (~dan@user/dan86)
[21:06:26] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f08f:f09d:4f68:e2f5) (Quit: Client closed)
[21:06:26] *** Quits: navigator (~Navigator@2605:6440:3008:d001::581a) (Quit: Leaving)
[21:08:29] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:08:40] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 272 seconds)
[21:08:44] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[21:08:56] *** Joins: han-solo (~hanish@103.82.184.213)
[21:09:36] *** Joins: nomic (~nomic@185.217.117.193)
[21:12:05] *** Joins: superboot (~agentgasm@user/superboot)
[21:12:59] *** Joins: tmm88 (~tmm88@user/tmm88)
[21:13:20] *** Joins: savolla (~quassel@95.10.207.85)
[21:13:45] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:13:46] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f08f:f09d:4f68:e2f5)
[21:13:47] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:14:09] <Henry151> thanks for the guidance!
[21:14:12] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 252 seconds)
[21:14:29] <didi> lidless: Worked like a charm. Thank you. Tho for the record updating at every insert drastically increased the time for inserting all the row.
[21:14:41] <didi> rows*
[21:14:47] *** Joins: zamanf (~dev@213.133.91.246)
[21:15:21] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[21:15:51] *** Joins: LDaVinci[m] (~ldavincim@2001:470:69fc:105::1:c125)
[21:16:06] *** Joins: jdmark2 (~jdmark@user/jdmark)
[21:16:11] *** Quits: han-solo (~hanish@103.82.184.213) (Changing host)
[21:16:11] *** Joins: han-solo (~hanish@user/han-solo)
[21:16:33] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:16:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:18:14] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[21:18:30] <Henry151> i have this working as desired, however I want to do as you suggested and catch only the specific exception that sqlite raises
[21:19:33] <Henry151> when i do "except Exception as err:" and then print "err" it says "UNIQUE constraint failed: post.title" .. looking at the docs you linked to and trying to figure out what type of error that would be considered
[21:19:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:20:04] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[21:20:04] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 272 seconds)
[21:20:29] <Henry151> maybe a sqlite3.DatabaseError ?
[21:20:35] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:20:37] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:20:43] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:20:51] *** Joins: fdan (~fdan@207.141.66.99)
[21:21:04] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:21:31] *** Joins: ddoering (~Devinn@searspoint.nvidia.com)
[21:21:52] *** Joins: Wh0 (~V@103.250.139.82)
[21:22:21] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[21:22:46] <Henry151> looks like it's an IntegrityError, from a quick google search. How would I have got python to print the exception type for me directly?
[21:23:48] *** Quits: Devinn (~Devinn@searspoint.nvidia.com) (Ping timeout: 240 seconds)
[21:23:52] <Henry151> also, how would i catch just that type of error? Something like "except sqlite3.IntegrityError as err:" ?
[21:24:16] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Remote host closed the connection)
[21:26:24] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[21:27:40] *** Quits: jdmark2 (~jdmark@user/jdmark) (Ping timeout: 272 seconds)
[21:27:41] *** Joins: bluedust (~bluedust@103.161.144.138)
[21:28:12] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 240 seconds)
[21:28:52] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:28:55] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-2016-2641-923b-d276.res6.spectrum.com)
[21:29:34] <humanBird> having some issues with conda envs in docker.  I get a "CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'."  error when doing a RUN conda activate myenv
[21:29:36] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:29:41] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[21:29:48] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 240 seconds)
[21:30:00] *** Joins: Roey (~Roey@user/Roey)
[21:30:13] <humanBird> seems like there's some bugs involving shells/bash/docker and conda in general that haven't been solved for years now.  how do i activate a conda environment from a dockerfile?
[21:30:36] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[21:31:02] *** Quits: mat001 (~mat001@72.28.108.216) (Remote host closed the connection)
[21:31:03] *** Joins: Guest19 (~Guest19@ec2-34-222-136-8.us-west-2.compute.amazonaws.com)
[21:31:21] <Guest19> hello, what is the go-to gui library/tool for python in 2022? do people still use tkinter?
[21:31:36] *** Joins: mat001 (~mat001@72.28.108.216)
[21:31:36] <didi> Guest19: I am.
[21:31:40] <tvm> Henry151: just don't handle the exception and you will see it in the traceback
[21:31:58] <tvm> Henry151: but IntegrityError sounds about right
[21:32:02] *** Joins: vicfred (~vicfred@user/vicfred)
[21:32:42] <tvm> Henry151: but yes, you would handle it exactly like that
[21:32:44] *** Quits: bluedust (~bluedust@103.161.144.138) (Ping timeout: 272 seconds)
[21:33:44] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[21:33:48] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[21:34:43] <SnoopJ> Guest19, people do still use tkinter. Other options include: PyQt/pyside, wxPython, kivy
[21:34:45] *** Joins: vicfred_ (~vicfred@user/vicfred)
[21:35:12] <SnoopJ> and _sometimes_ PyGame :)
[21:35:13] <Guest19> SnoopJ any advantages? e.g. is PyQt "more modern" ?
[21:35:21] <Guest19> or PyGame?
[21:35:59] <SnoopJ> Guest19, Qt is an extremely (excessively?) fully-featured UI framework with a steeper learning curve than I think any of the other options there, but it's also quite good. I hear that pyside helps ease the learning curve a bit but haven't tried it.
[21:36:08] <chadea> Evolver: did it work?
[21:36:37] <chadea> caveman: SQL is the most superior language. Use it whenever possible to solve your problems. For everything else, there's Python
[21:36:43] <Guest19> @snoop
[21:36:45] <SnoopJ> Guest19, PyGame is most useful when you want to draw things to a canvas in this context, it's not a complete substitute for any of those other options and often not the best choice.
[21:37:14] <Guest19> SnoopJ do corporate world rely on any of those? just wondering what's worth focusing on
[21:37:35] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 256 seconds)
[21:37:41] <caveman> chadea: prove sql's superiority.
[21:37:41] <chadea> iirc anything Qt related has commercial licensing costs if used for profit
[21:37:47] <tvm> Guest19: they are all kinda different, PyQt is large "i want everything i could ever use", it's the most complex of these, wxPython is more lightweight, Pygame is if you really want to do more "drawing" than just making general application UI
[21:37:53] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:38:06] <tvm> Guest19: Pygame was meant for games and it's good at that
[21:38:20] <SnoopJ> Guest19, all of those except PyGame are used in commercial contexts. PyGame is definitely an outlier.
[21:38:27] <Guest19> okay thanks
[21:38:46] <chadea> caveman: declarative, generally portable across execution engines, executors are fast and constantly evolving to be even faster on huge datasets (https://www.snowflake.com/)
[21:38:54] <Henry151> thanks for all the guidance this has been very educational
[21:39:05] *** Quits: vicfred_ (~vicfred@user/vicfred) (Client Quit)
[21:39:25] <caveman> chadea: i find custom database backends to be always better and easily doable.
[21:39:35] <chadea> what
[21:39:37] <Henry151> one further inquiry: looking at my test suite, https://bpa.st/KZPQ (this paste includes several files, the whole test suite) can anybody help me identify redundant or poorly-written tests that could be refactored or improved?
[21:40:06] <caveman> chadea: e.g. for most web applications, they could just store posts on the disk, and index it in a tree.
[21:40:20] *** Quits: mort (~mort@188.166.114.29) (Quit: The Lounge - https://thelounge.chat)
[21:40:22] <chadea> yes, most web applications don't depend on 500 GB datasets
[21:40:35] <Henry151> to clarify: I did not write the entire test suite, most of it was from the tutorial i am following.
[21:40:37] *** Parts: colo (~colo@user/colo) (Leaving)
[21:40:39] <caveman> chadea: then buy a disk with 500GB.
[21:40:49] <chadea> no, because lookups will be horrible without SQL
[21:41:01] <caveman> use better indexing.
[21:41:09] <chadea> SQL supports indexing
[21:41:13] *** Joins: mort (~mort@188.166.114.29)
[21:41:16] <chadea> I don't understand what you're arguing for
[21:41:18] <caveman> but bloated.
[21:41:25] <chadea> BLOATED?! LOL
[21:41:29] <didi> chadea: Qt is also GPL and LGPLv3, hence it's fine for profit.
[21:41:31] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[21:41:55] <SnoopJ> yea licensing is worth considering across those frameworks, since they all use something a little different.
[21:42:00] <Henry151> i did write the "test_unique title" test and frankly, it looks like the longest/messiest-looking test of the bunch, so i'm hoping for tips on how I can re-write it to be better, but any tips on other parts of the test suite that could be improved would also be very welcome
[21:43:37] *** Joins: PCatinean (~pcatinean@188.26.231.238)
[21:44:01] <chadea> Qt licensing is a minefield because some components of the Qt framework may be GPL licensed
[21:44:36] *** Joins: summersault (~summersau@179.221.251.36)
[21:44:57] <didi> chadea: Giving you want to avoid GPL demands.
[21:45:24] *** Quits: savolla (~quassel@95.10.207.85) (Ping timeout: 240 seconds)
[21:46:12] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[21:46:44] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[21:46:44] *** Joins: menace (~someone@user/menace)
[21:46:52] *** menace is now known as Deknos
[21:46:52] <SnoopJ> demands is the right word to use
[21:47:45] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-70.range86-150.btcentralplus.com)
[21:47:46] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:47:48] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[21:49:12] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[21:49:32] <Henry151> I like the MIT license personally
[21:50:06] *** Joins: beeze (~beeze@cpe-174-109-135-39.nc.res.rr.com)
[21:50:53] <stewie925> hi guys, I have a question with one of my ThreadPoolExecutor map functions -  three out of 10 threads are sharing the same name - https://bpa.st/LHRA
[21:51:24] *** Joins: crashrep (~crashrep@user/crashrep)
[21:51:49] *** Joins: ZenMachine (~Zen@2001:818:e940:7d00:9d11:d08:1e85:74ca)
[21:52:30] <Henry151> Since nobody seems to be "biting" on my last inquiry, perhaps I can give a more precise question with a shorter paste to attract a response: Given this code defining my small flask blog: https://bpa.st/FGAA can anybody give any guidance or advice on how to refactor this test: https://bpa.st/CL5Q to be more elegant, effective, or generally better? Is this test following best practices?
[21:52:59] <stewie925> correction - https://bpa.st/RO3A
[21:54:32] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:54:36] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[21:55:07] *** Joins: blei (~blei@c-73-153-189-5.hsd1.co.comcast.net)
[21:55:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:56:55] <stewie925> I wonder if its because my threadpool executor function that passes the max_workers=5 has anything to do with it?
[21:57:08] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[21:57:29] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:5c9b:7956:8309:ef91) (Ping timeout: 250 seconds)
[21:57:32] <stewie925> as I understand, max_workers=5  would be smaller than not sending the max_workers argument at all
[21:57:35] <Henry151> full disclosure for honesty bonus points: this exercise is part of a job interview for a SDET role. So, your assistance may help me get hired. I have about 25 minutes left to complete the exercise, and I am "done" to some degree, but since my test-writing skills are the thing being assessed here, I would love to have some input or feedback about my test I wrote to test the "post title must be unique"
[21:57:41] <Henry151> logic.
[21:57:41] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[21:57:57] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:58:22] <ChrisWarrick> Henry151: tests modifying database directly seem quite ugly to me, instead you should log in as the other user
[21:59:57] <Evolver> chadea: will get to it later. Thanks. I will be happy to update then.
[21:59:58] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[22:01:14] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[22:01:22] <Henry151> ChrisWarrick: Thanks! That's valuable feedback!
[22:01:24] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[22:01:31] <SnoopJ> Henry151, I find most of those comments to be redundant, the code is already expressing those things pretty clearly. It seems like asserting on the code of the response in test_unique_title might also be relevant (i.e. `assert not response.ok` if it's actually an HTTP error)
[22:01:53] <ChrisWarrick> Henry151: also, I don’t think it’s ethical to ask for help on IRC during a job interview
[22:02:48] <SnoopJ> ChrisWarrick, does that apply to all interviews, or only ones that have not explicitly said "it's okay to search/query elsewhere while doing this" for a task?
[22:03:26] <Henry151> ChrisWarrick: Oh? I didn't think so. I will disclose to the employer that I did lean on the support from the python community here on libera.chat, if that would make it more ethically acceptable
[22:03:32] <ChrisWarrick> SnoopJ: I would say so
[22:03:44] *** Quits: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:03:51] <SnoopJ> interesting
[22:03:53] <ChrisWarrick> SnoopJ: this depends on the degree of help you get and the form of quetions you ask
[22:04:10] <ChrisWarrick> SnoopJ: googling is one thing, but asking your own questions is another
[22:04:20] <Henry151> I figure, I do typically lean on #python for help with every python project I've ever worked on, and I will be asking for guidance here on any project I do work on. This assessment did specifically indicate that I can use external resources, though it did say not to copy-paste code from anywhere.
[22:04:37] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:04:52] <Henry151> Basically figuring, if I do get hired, every project I work on I will be in here asking for advice, feedback, and suggestions.
[22:04:55] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[22:05:08] *** Joins: crashrep (~crashrep@user/crashrep)
[22:05:30] <ChrisWarrick> then again, I wouldn’t ask questions on IRC about things I do on the job either, my employer would prefer I didn’t do that, because copyright and stuff
[22:05:49] *** Joins: casastorta (~casastort@neo1.krivokuca.net)
[22:06:01] <SnoopJ> To me the ethical concern seems more about the expectation associated with the interview than the asking itself
[22:06:17] *** Joins: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net)
[22:06:21] <supakeen> Interesting question, it also feels weird to me to do that but I don't know why :)
[22:06:36] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[22:06:44] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[22:06:56] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[22:07:11] <SnoopJ> I think the thing I snag on is that in most interview contexts, the (implicit) expectation is that the work you're presenting is exclusively your own
[22:07:18] <Henry151> in my previous role, working as a python developer for a bitcoin ATM company, I had a lot of "sensitive code" to work on that couldn't be exposed for security reasons. I still found that I was in here asking questions multiple times a week, though often I would have to spend considerable effort making a "generic example" of my inquiry to avoid exposing any actual code from the codebase.
[22:07:21] <SnoopJ> modulo "it's fine to look at docs" or whatever
[22:07:35] <ChrisWarrick> SnoopJ: yeah, that’s my opinion too
[22:07:39] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[22:07:48] <SnoopJ> I would definitely be comfortable asking for 3rd-party review without clearing it first; too close to feeling dishonest
[22:07:56] <SnoopJ> err, would NOT be comfortable asking without
[22:07:59] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:08:10] *** Joins: Jong (~Jong@2620:10d:c090:400::5:b24b)
[22:08:31] <Henry151> well to be sure that I'm not being unethical, I give my word that I will mention to the interviewer that one of the resource I leaned on was #python on libera.chat. I will also mention that this is one of the resource I turn to most frequently when working on python projects.
[22:08:53] <supakeen> Makes sense :)
[22:09:15] <supakeen> And to be fair you'd normally ask the internal chat ...
[22:09:54] <ChrisWarrick> well, interviews have their own rules, when was the last time you implemented a sorting algorithm from scratch?
[22:09:57] <EtherMan> Is a backslash really no longer needed when splitting long strings to multiple lines? How far back is that compatible with?
[22:10:24] <ChrisWarrick> EtherMan: What form of splitting do you mean? ('foo'   'bar')?
[22:10:25] *** Quits: angelacrust (~angelacru@182.68.130.113) (Quit: Client closed)
[22:10:53] <EtherMan> ChrisWarrick: Well that, except linebreak between foo and bar :)
[22:10:59] <ChrisWarrick> Henry151: one more advice about the test code, I would probably write the error assertion more precisely (with == instead of in)
[22:11:07] <Guest19> ChrisWarrick are those python sorting algorithms entirerly in python btw or some cpython whatever for optimization?
[22:11:08] <SnoopJ> continuation lines go very far back AFAIK
[22:11:14] <ChrisWarrick> EtherMan: this has worked effectively forever
[22:11:23] <ChrisWarrick> Guest19: which ones?
[22:11:23] <SnoopJ> not sure about implicit concat but it's been awful long
[22:11:33] <Guest19> ChrisWarrick i am just asking in general
[22:11:35] <EtherMan> SnoopJ: Well sure but it used to need a \ at the end of the line in order to keep going no?
[22:11:40] <ChrisWarrick> Guest19: be more specific, please
[22:11:48] <SnoopJ> EtherMan, in the example ChrisWarrick gave? I don't think so...
[22:12:01] *** Joins: Vonter (~Vonter@user/vonter)
[22:12:33] <ChrisWarrick> Guest19: if you do sorted(some_list), then the sorting happens in fast C code (unless your keys/comparisons are in Python), the sorting algorithm is timsort (which is kinda like merge sort)
[22:12:44] *** Joins: davit (~davit@50.35.184.227)
[22:12:58] <Guest19> yeah that's what I was thinking
[22:13:03] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:13:31] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Read error: Connection reset by peer)
[22:13:36] <EtherMan> SnoopJ: Anything special about their example to make it true? I'm just very sure I've needed it before not THAT long ago (even if it is a couple of years).
[22:14:03] *** Joins: Staunch (~Staunch@150.93.99.34.bc.googleusercontent.com)
[22:14:16] *** Joins: Betal (~Betal@user/betal)
[22:14:22] <Guest19> ChrisWarrick so even if one did write a sorting function it would most likely be much slower than the existing one
[22:14:52] <SnoopJ> EtherMan, the parentheses are syntactically important there, you would need a terminal backslash to do a continuation line without them. This behavior goes back at least as far as 2.0 which is much farther than you should care about in 2022.
[22:14:54] * asdfsfdasdfw slaps Guest19 with the power of greyskull
[22:15:16] *** Quits: NeoCore (~neocore@195.200.221.226) (Quit: Leaving)
[22:15:36] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-3498-71fb-df6e-0b01.res6.spectrum.com)
[22:15:48] *** Quits: beeze (~beeze@cpe-174-109-135-39.nc.res.rr.com) (Ping timeout: 272 seconds)
[22:15:49] *** Quits: zaquest (~notzaques@5.130.79.72) (Read error: Connection reset by peer)
[22:15:49] <ChrisWarrick> Guest19: it defnitely will
[22:15:56] <EtherMan> SnoopJ: Ah. So if it's say some_string = 'foo' 'bar'   then that would not work with a linebreak in between foo and bar, unless it has a \ at the end?
[22:16:15] *** Joins: zaquest (~notzaques@5.130.79.72)
[22:16:26] <SnoopJ> EtherMan, correct, that would be parsed as two statements: one assignment and one statement that is just the literal 'bar' (which does nothing)
[22:16:47] <EtherMan> Cheers :)
[22:16:59] <ChrisWarrick> Guest19: you’d never write one on the job, but on a job interview, you might be asked to — as a verification of your knowledge and understanding of those, and to see your general programming skills
[22:17:04] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[22:17:23] <SnoopJ> EtherMan, the applicable lexical analysis jargon is "continuation line" and the behavior when there's an outer () [] {} is documented here: https://docs.python.org/3/reference/lexical_analysis.html#implicit-line-joining
[22:17:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:17:27] *** Parts: didi (~user@user/didi) (O bella ciao bella ciao bella ciao, ciao, ciao.)
[22:17:49] <EtherMan> SnoopJ: Nice. Thanks
[22:17:57] <SnoopJ> and just above it is the explicit form (with backslashes). That form is kinda anti-idiomatic though
[22:18:24] *** Joins: dme86 (~dan@user/dan86)
[22:19:44] <EtherMan> Hmm... The fact that an implicit join can carry comments on each line, will be SUPER handy :)
[22:20:05] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[22:20:24] <SnoopJ> it's also just less crap in the way, and harder to typo
[22:20:42] *** Joins: bahamas (~lucian@84.232.140.52)
[22:21:03] *** Joins: triode (~number9@130.70.15.5)
[22:21:20] <SnoopJ> the "oops, that's not a continuation line, the other line is a pointless statement" spelling is not possible with the implicit form
[22:21:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:21:44] *** Parts: triode (~number9@130.70.15.5) ()
[22:22:00] *** Quits: tristan_ (~tristan@223.62.202.67) (Remote host closed the connection)
[22:22:20] *** Joins: tristan_ (~tristan@223.62.202.67)
[22:23:15] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[22:23:54] <Pi-sistance> ummm im using spyder for first time, how do i stop all the green dots form appearing in the command line place please?
[22:24:12] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[22:24:21] <Pi-sistance> they seemed to appear when the ide recognized i was trying to write a fucntion
[22:24:56] <Pi-sistance> ive finished the finction and tryong to bloody run it but every new line still has the green dots and spyder seems to think im still writing the finction...
[22:25:28] <Pi-sistance> its very confusing and wasnt mentioned in their tutorial!
[22:27:00] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[22:27:21] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[22:27:27] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[22:28:13] <Pi-sistance> it stopped doing it, seemingly randomly
[22:28:16] *** Joins: Z-cat (~Z-cat@user/z-cat)
[22:28:21] *** Quits: Guest19 (~Guest19@ec2-34-222-136-8.us-west-2.compute.amazonaws.com) (Quit: Client closed)
[22:28:26] *** Joins: beeze (~beeze@cpe-174-109-135-39.nc.res.rr.com)
[22:28:40] *** Joins: plastico (~plastico@neomutt/plastico)
[22:28:46] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[22:30:06] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[22:30:36] *** Quits: davit (~davit@50.35.184.227) (Ping timeout: 240 seconds)
[22:31:36] <Pi-sistance> not many people here have used spyder?
[22:32:36] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[22:32:55] *** Joins: summersault (~summersau@179.221.251.36)
[22:32:57] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:bcd2:72e3:d29d:9077) (Quit: pvergain)
[22:33:54] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Remote host closed the connection)
[22:33:55] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[22:34:58] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:35:14] *** Joins: Masterphi (~Masterphi@user/masterphi)
[22:35:22] <johnkeats7> you just enter an empty line i believe
[22:35:23] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[22:37:33] *** olbat__ is now known as olbat
[22:38:17] <NeilRG> Can someone explain this mypy error? error: Cannot determine type of "float_"  [has-type]
[22:39:36] <Henry151> further response to your previous guidances, ChrisWarrick , the reason for asserting that "Title must be unique" is "in" response.data is because, the response.data is a whole webpage, and we just need to confirm that the warning message stating "Title must be unique" is being flashed there. And SnoopJ , to respond to your advices (thanks by the way), the comments are excessive for a normal circumstance,
[22:39:39] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 256 seconds)
[22:39:42] <Henry151> but they are there to communicate with the person who will be reviewing the assessment; and asserting the code of the response doesn't make sense in this circumstance, since the response will be a success and will render a webpage, not an HTTP error
[22:40:10] *** Joins: f1se4 (~f1se4@213.195.113.45)
[22:40:13] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[22:40:18] <Henry151> if those statements don't make sense, please let me know
[22:40:25] <ChrisWarrick> NeilRG: can you show your code? how is this variable defined?
[22:40:38] <Henry151> additionally, i've completed the assessment and submitted it so this now is just further conversation for my own benefit
[22:40:46] <NeilRG> ChrisWarrick, It's all here: https://github.com/google/jax/pull/9596
[22:41:00] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[22:41:02] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[22:41:09] <Henry151> and I will make sure to be transparent about having leaned on #python when I speak with the interviewer :)
[22:41:22] *** Joins: summersault (~summersau@179.221.251.36)
[22:41:56] <Henry151> the role is with Linode, anybody worked for them before or have any opinions of the company?
[22:42:06] <grym> well, they just got bought by akamai
[22:42:13] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:42:15] <grym> but i've been a happy linode customer for 15 years
[22:42:30] <grym> (hello from the newark nj data center)
[22:42:55] <Henry151> nice. I've used their products once or twice before but wound up using digitalocean in one case, and vultr in the other, instead
[22:43:13] <Henry151> not sure if those services are all directly comparable
[22:43:24] <grym> i don't need very much in a VPS, but it's been rock solid and extraordinarily boring, which is certainly part of what i need
[22:43:37] <ChrisWarrick> NeilRG: https://numpy.org/devdocs/reference/typing.html
[22:43:38] <Henry151> but for my purposes vultr does what i need mostly, and digitalocean was who we were using at the bitcoin atm company i worked for
[22:43:41] <ChrisWarrick> NeilRG: this might be related
[22:43:42] *** Joins: davit (~davit@50.35.184.227)
[22:43:49] *** Quits: redkrieg (~redkrieg@user/redkrieg) (Ping timeout: 240 seconds)
[22:43:50] *** Quits: avane_ (~avane@fsf/member/avane) (Ping timeout: 252 seconds)
[22:43:50] <NeilRG> ChrisWarrick, how would it be related?
[22:44:02] <NeilRG> I don't understand what the error means?
[22:44:04] <ChrisWarrick> NeilRG: jnp.float_ is an alias for numpy’s float_
[22:44:16] <NeilRG> ChrisWarrick, sort of, they wrap it in something else
[22:44:19] <Henry151> digitalocean i stay away from now, because without disclosing any confidential information, I can disclose that digitalocean was directly responsible for the company I was working for having to close their business
[22:44:32] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 240 seconds)
[22:44:38] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[22:44:39] *** Joins: magla (~gelignite@55d40b59.access.ecotel.net)
[22:44:54] <NeilRG> ChrisWarrick, what I don't understand is why MyPy cares about the tgype of float_ since it's being set as the default of a parameter that is annotated with Any
[22:44:57] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 252 seconds)
[22:44:57] <NeilRG> does that make sense to you?
[22:45:00] <ChrisWarrick> NeilRG: mypy can’t figure out the type of it and can’t meaningfully handle it
[22:45:03] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:13] <Henry151> digitalocean staff credentials were used to access one of our machines and there was a major breach, that resulted in the company having to close. They're litigating and all but for the time being, me and several others are out of  ajob
[22:45:19] <NeilRG> also, i don't know why MyPy can't figure out the type of it.  It's importable...
[22:45:24] <ChrisWarrick> NeilRG: I can see something like type: DTypeLikeInexact = jnp.float_ in your paste
[22:45:25] <NeilRG> and I tried setting the type of it manually
[22:45:44] <NeilRG> yes and DTypeLikeInexact is set to Any, right?
[22:45:56] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[22:45:58] <NeilRG> line 42
[22:46:13] <NeilRG> that's why this is especially puzzling
[22:46:26] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[22:46:49] *** Joins: avane (~avane@fsf/member/avane)
[22:47:17] *** Quits: pro_z (~pro_z@37.214.74.198) (Ping timeout: 256 seconds)
[22:47:59] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:48:19] *** Joins: Pickchea (~private@user/pickchea)
[22:48:32] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 240 seconds)
[22:48:32] <NeilRG> ChrisWarrick, anyway, thanks for taking a look :)
[22:48:33] *** justm33 is now known as justm3
[22:48:57] <Pi-sistance> dafuq kind of output is this??    <bound method Kernel.raw_input of <ipykernel.ipkernel.IPythonKernel object at 0x000001E5333F7040>>
[22:49:16] <Pi-sistance> i just called it to print something inside the function!!
[22:49:25] *** Joins: djapo (~archangel@user/djapo)
[22:49:39] <Pi-sistance> these 6 weeks without coding have been bad, forgotten a lot
[22:50:02] <bjs> Pi-sistance: I mean that's a pretty standard format, all Python objects by default print like that. e.g. print(object())
[22:50:35] <KirkMcDonald> Pi-sistance: It's the repr of a bound method, which suggests to me you forgot to put some parentheses in a method call.
[22:51:02] <bjs> yeah it doesn't look like you called it at all
[22:52:47] <Pi-sistance> i used the input function earlier without quotes, becasue the variable i enetered instead was already a string
[22:52:56] <Pi-sistance> surely thats fine
[22:53:03] <bjs> Pi-sistance: i'm not even sure what you mean
[22:53:06] <bjs> without quotes?
[22:53:21] <nomic> why does pdb show the next line not the previous line when it stops
[22:53:50] <marduk> context is  missing
[22:53:53] <Pi-sistance> you can enter an optional message in parentheses witht he inout function
[22:53:57] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[22:54:09] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[22:54:20] <Pi-sistance> input*
[22:54:23] *** Joins: admin123 (~harrymore@pool-71-125-21-97.nycmny.fios.verizon.net)
[22:54:27] <bjs> Pi-sistance: yes, it's optional which means you don't have to.
[22:54:37] <Pi-sistance> the libera web chat disconnects fairly often
[22:54:50] <Pi-sistance> right i entered a variable instead
[22:55:04] <Pi-sistance> which was linked to a string
[22:55:04] <bjs> Pi-sistance: remember we can't see your code,  maybe you can share it so we can see what you see?
[22:55:05] *** Joins: Cyp_ (~cyp@213.237.87.172)
[22:55:14] <bjs> Probably you just forgot to actually call the function
[22:55:19] <Pi-sistance> okok, ill paste in a few mins if i dont figure it out
[22:55:19] *** Quits: Cyp (~cyp@213.237.87.172) (Read error: Connection reset by peer)
[22:55:59] <SnoopJ> nomic, probably because the most important information is the current line that is about to be executed, and the amount of context around that to provide is arbitrary. The user can use the `l(ist)` command to get that context if they want it (and specify how much)
[22:56:10] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[22:56:17] <ZenMachine> I have a function in praw that performs some searches and calculations. I would like to repeat this function X amount of times. But i want it to perform new calculations every single time. I try to repeat the function, but it just repeats the calculations of the first time the function is executed. Any way to fix this?
[22:56:27] <bjs> Pi-sistance: why not paste it now, then we can tell you what went wrong
[22:56:31] <bjs> it was probably something simple :)
[22:56:57] <SnoopJ> As I think about it, it'd be kind of nice if you could configure that behavior so it does the equivalent of `l N`, or something like gdb's TUI, but that starts to get into "use some other debugger" territory. It's one of the main reasons I use pudb...
[22:57:05] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:57:06] <marduk> nomic: so you can tell it wether you want to execute the next line, step into the function, return from the function, set a new breakpoint, etc. If it showed it *after* the fact it would be too late.
[22:57:30] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:df0:4a05:266d:f413)
[22:57:32] <nomic> ok
[22:58:01] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:df0:4a05:266d:f413) (Client Quit)
[22:58:04] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[22:58:10] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[22:58:28] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:df0:4a05:266d:f413)
[22:59:01] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[23:00:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[23:02:40] *** Quits: beeze (~beeze@cpe-174-109-135-39.nc.res.rr.com) (Ping timeout: 272 seconds)
[23:03:04] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[23:04:38] *** Quits: rsx (~dummy@ppp-188-174-135-147.dynamic.mnet-online.de) (Quit: rsx)
[23:04:39] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:04:45] <vaio> hello. how do you "chose" if a function as to be inside a class or if it's better to put it outside ?
[23:05:00] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[23:05:12] <vaio> not chose as in "how do you code/write", but "in your mind" ...
[23:05:27] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:06:06] <exarkun> vaio: no one knows
[23:06:06] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[23:06:06] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[23:06:06] *** Joins: menace (~someone@user/menace)
[23:06:08] *** Joins: summersault (~summersau@179.221.251.36)
[23:06:14] <exarkun> vaio: but if you want, I can tell you it's better to put it outside
[23:06:36] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[23:06:47] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[23:07:06] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[23:07:20] <vaio> exarkun: ok, but how did you end up making that choice ? x)
[23:07:25] *** Quits: fdan (~fdan@207.141.66.99) (Ping timeout: 256 seconds)
[23:07:32] <vaio> well, if it's "personal feelings", no need to elaborate
[23:07:57] <vaio> (thanks answerting tho :))
[23:08:01] <vaio> -t
[23:10:12] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:10:13] *** Joins: jazzy (~jaziz@user/jaziz)
[23:10:18] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:df0:4a05:266d:f413) (Quit: Client closed)
[23:10:43] *** Joins: Vonter (~Vonter@user/vonter)
[23:10:56] <Evolver> Is there any shorter form in which to express `1/(10**math.ceil(math.log10(i)))` ? For example, for i=300 it returns 0.001
[23:11:22] <Pi-sistance> I was expecting the function to print what the user inputs https://bpa.st/KE6Q
[23:11:24] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:56a:bf7f:7213:addb)
[23:11:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[23:11:44] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:11:56] <Repiphany> userInput = input(message)
[23:12:00] *** Quits: menace (~someone@user/menace) (Quit: menace)
[23:12:03] *** Quits: ckdCreations (~ckdCreati@147.55.130.34) (Read error: Connection reset by peer)
[23:12:23] *** Quits: asdfsfdasdfw (~asdfsfdas@12.182.213.210) (Quit: Going offline, see ya! (www.adiirc.com))
[23:12:24] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[23:12:31] <Repiphany> Otherwise you're just saying userInput is the function `input` without actually calling that function to get any input
[23:13:02] <Repiphany> Also there's nothing in there that would produce a TypeError yet
[23:13:45] *** Quits: vladoski (~vladoski@2001:b07:add:d406:3dc0:e68:b885:9289) (Ping timeout: 250 seconds)
[23:13:47] <Pi-sistance> i know the fucntion isnt doing what i want yet. but i expected the message that the user inputs to be printed by the print command at the end of the fuinction
[23:14:08] <Repiphany> line 5 is calling `input(message)` without storing that input in any name
[23:14:20] <Repiphany> line 6 doesn't magically get the input from the previous line
[23:14:31] <exarkun> vaio: program in a functional language for a while
[23:14:32] *** Lord_of_Life_ is now known as Lord_of_Life
[23:15:01] <Pi-sistance> ok thanks Repiphany I forgot how input function worked
[23:15:08] <Pi-sistance> what on earth DID get printed then?
[23:15:18] <exarkun> vaio: it quickly becomes pretty clear that methods are highly over-used, to the detriment of anyone who has to interact with them
[23:15:46] <Repiphany> The string representation of the function `input`
[23:16:05] *** Quits: gabagool (~user@2a01:cb1d:40b:9b00:e2aa:ee62:3ca0:5f02) (Remote host closed the connection)
[23:16:45] <Repiphany> (or rather whatever magic ipykernel is using)
[23:17:22] *** Joins: alukach (~alukach@173.183.15.218)
[23:17:33] *** Joins: pgib (~textual@173.38.117.90)
[23:17:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:18:17] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[23:18:29] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:18:36] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:56a:bf7f:7213:addb) (Quit: Client closed)
[23:18:53] <alukach> Is there any way to conditionally install scripts via setup.py based on "extra" arguments?  ie "pip install foo[cli]" would install my CLI script
[23:19:52] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[23:20:01] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[23:21:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:21:33] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:22:08] *** Joins: boddax (~boddax@host-87-7-135-196.retail.telecomitalia.it)
[23:22:21] *** Quits: davit (~davit@50.35.184.227) (Quit: Leaving)
[23:22:31] *** Joins: mixfix41 (~homefame@user/mixfix41)
[23:22:34] *** Joins: davit (~davit@50.35.184.227)
[23:23:10] *** Joins: minip (~minip@user/minip)
[23:23:24] *** Quits: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Ping timeout: 240 seconds)
[23:23:46] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:23:46] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:cf7:316a:d226:c21f)
[23:24:22] <boddax> who can helpme with this https://pastebin.com/qYAeNDva
[23:24:41] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Quit: emf)
[23:24:56] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[23:25:20] <grym> alukach: yes, and it's even called an extra
[23:25:29] *** Joins: dme86 (~dan@user/dan86)
[23:25:53] <grym> alukach: https://setuptools.pypa.io/en/latest/userguide/dependency_management.html#optional-dependencies
[23:26:17] <grym> alukach: or, do you mean that the entry point itself wouldn't be exposed unless the extra was added
[23:26:26] <grym> that i'm less sure about
[23:27:28] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:28:05] <SnoopJ> that doc page points out that you can do `scriptname = name.for.callable [extra]`
[23:28:45] <grym> ah!  https://setuptools.pypa.io/en/latest/userguide/entry_point.html#dependency-management
[23:28:53] <grym> "Some entry points may require additional dependencies to properly function. For such an entry point, declare in square brackets any number of dependency extras following the entry point definition. Such entry points will only be viable if their extras were declared and installed"
[23:28:58] <grym> nice!
[23:29:00] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[23:29:13] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 256 seconds)
[23:29:24] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:29:32] *** Joins: Bardon_ (~Bardon@user/Bardon)
[23:29:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[23:29:54] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 272 seconds)
[23:29:55] <pgib> boddax - what version of python are you using? Looks like you might not have support for f-strings
[23:30:19] <grym> boddax: that code will run on 3.6+
[23:30:28] *** Quits: paul424 (~tom@ip-5-172-232-107.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:30:32] *** Joins: summersault (~summersau@179.221.251.36)
[23:30:34] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[23:31:25] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[23:31:33] *** Joins: mefistof1les (~mefistofe@user/mefistofeles)
[23:31:33] <boddax> <pgib> 2.7.13
[23:31:46] <boddax> ah ok thanks
[23:32:20] <boddax> i need to use it om xp i have pcmcia gpib only xp suppoty
[23:32:25] <boddax> support
[23:32:33] *** Joins: darksun (~darksun@user/darksun)
[23:32:46] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[23:32:55] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[23:33:30] <grym> boddax: ok, you're in for a wild ride
[23:33:52] <alukach> grym: yes, I mean the entrypoint wouldn't be exposed (ie nothing added to the path)
[23:33:58] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[23:34:59] <grym> alukach: yep, looks like you can do that
[23:35:00] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[23:35:07] <alukach> sorry, just catching up to your comments...
[23:35:11] <pgib> boddax - yuck. Is this your own code? You can avoid using newer language features if you are actually stuck with an ancient environment
[23:35:13] <grym> boddax: the newest python that runs on windows XP is 3.4.3
[23:35:31] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:35:40] <grym> boddax: so you'll have to install that ( https://www.python.org/downloads/windows/ ) and then remove the f-strings from this code and hope it still works on an older python
[23:35:49] *** Joins: yotsuba (~yotsuba@89-138-112-148.bb.netvision.net.il)
[23:35:54] *** mefistof1les is now known as mefistofeles
[23:35:57] <boddax> none isnt my code i need to dump firmware from hp instrument ..copied it
[23:36:53] <stewie925> is a ThreadPool essentially one thread with multiple 'tasks' ?
[23:36:55] <pgib> So the hardware requires XP, but the tools for the hardware require a python unsupported by xp?
[23:36:55] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:37:00] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[23:37:05] <boddax> https://pastebin.com/9EBaRu1H this the full code
[23:37:06] <grym> pgib: this doesn't surprise me
[23:37:55] <boddax> pcmcia NI card not suppoerted with newest labview or NI488.2
[23:38:03] *** Joins: rya (~ry@user/rya)
[23:38:08] <grym> boddax: ok, replace line 14 with ` dev.write(bytes('BPEK? {},{}'.format(mem_addr, l), 'ascii'))` and try that
[23:38:13] <pgib> boddax - fortunately that seems pretty tiny. I'd try with 3.4.3 as grym said and replace the f-strings with .format()
[23:38:16] <grym> labview is hell
[23:38:29] <grym> and yeah, you'll want to go to 3.4 here
[23:38:35] <SnoopJ> pgib, it looks like this code is less "tools" and more "trying to apply modern documentation to old versions of things"
[23:38:38] <boddax> and not supported in linux too :((
[23:38:39] <pgib> Otherwise, you'll have to do even more crap if you want to try to run on 2.7 (in particular, str vs bytes)
[23:38:51] <boddax> let me try
[23:39:10] <grym> the phrase "NIDAQ" just gives me a small migrane on hearing it
[23:39:31] <SnoopJ> It doesn't sound like they have a lot of options for choosing their stack..
[23:40:05] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-70.range86-150.btcentralplus.com) (Quit: Leaving.)
[23:40:09] <grym> boddax: our lab has its fair share of ancient data recording dongle-locked cards too
[23:40:12] <grym> it's a pain
[23:40:34] <grym> "scavenge ebay for motherboards" :(
[23:41:31] <boddax> pci version ill be fine
[23:41:43] <grym> that's good at least
[23:42:41] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:43:09] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[23:43:11] <alukach> grym: I'm struggling to apply the conditional entrypoint, it seems to get created no matter what.  Do you agree that this looks right? entry_points={ "console_scripts": [ "dotenv-to-ssm = dotenv_to_ssm:load [cli]" ] }
[23:43:43] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[23:43:45] <boddax> ops i forgot i got error also on asterisc line 9
[23:43:56] <alukach> My understanding is that should only install if I specify the "pip install -e .[cli]" extra arg, but I'm getting it even with "pip install -e ."
[23:44:28] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 272 seconds)
[23:45:05] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[23:45:13] *** Joins: mat001_ (~mat001@72.28.108.216)
[23:45:18] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:45:44] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 272 seconds)
[23:45:48] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[23:45:53] <boddax> error https://pastebin.com/X2gfpDbG
[23:46:09] *** Quits: Angs (~Angs@2.70.202.205.mobile.tre.se) (Quit: Leaving)
[23:46:50] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[23:47:00] <grym> boddax: are you running this with py2 still?
[23:47:08] <cvmn> python has <<< like cpp's <<?
[23:47:10] <pgib> would appear as though
[23:47:27] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[23:47:33] <boddax> yes
[23:47:38] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[23:47:51] *** lukedashjr is now known as luke-jr
[23:47:52] <grym> alukach: i'm not sure; the docs only give the setup.cfg example.
[23:47:55] <grym> boddax: use 3.4
[23:47:55] <boddax> 3.6+ is supported in xp?
[23:48:12] <boddax> 3.4 all right
[23:48:14] <grym> boddax: no, 3.4 is the last py3 version with XP support, but using it will be easier than py2
[23:48:18] <pgib> cvmn as in bitshift? Yes as in C++ i/o redirection stuff, not like that per se.
[23:48:40] *** Joins: jordanb76[m] (~jordanb76@2001:470:69fc:105::1:c142)
[23:49:06] <cvmn> pgib: never mind.  i just misread some code.  the code had <<< just to print things in a pretty way.
[23:49:16] <cvmn> glad <<< is not there!
[23:49:18] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 252 seconds)
[23:49:28] <cvmn> print(f"<<< {name}")  <--  code i read.
[23:49:32] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[23:49:36] <SnoopJ> <<< there is just string data
[23:49:43] <cvmn> yes.
[23:49:57] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[23:50:11] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[23:50:52] *** Joins: Guddu (~Guddu@117.247.156.185)
[23:50:53] *** Joins: novns (~novns@user/novns)
[23:52:31] *** Joins: Xardas (~Xardas@149.233.51.127)
[23:52:33] *** Joins: envex (~rf@cpe-173-91-189-33.neo.res.rr.com)
[23:52:42] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 272 seconds)
[23:53:30] *** Joins: mharig (~mharig@190.104.21.253)
[23:54:34] <Guddu> Can I remote print to a printer on a client's corporate network? What do they need to do on their end so that the printer accepts remote print requests this way?
[23:54:44] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[23:55:14] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d5c1:86c3:2258:8392)
[23:56:03] *** Quits: mat001_ (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[23:56:08] *** Joins: nolan_ (~nolan_@user/nolan/x-2434303)
[23:56:11] <pgib> Guddu - it isn't clear how this is related to python
[23:56:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[23:56:23] *** Joins: mat001 (~mat001@72.28.108.216)
[23:56:28] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[23:56:51] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[23:57:04] <Guddu> pgib, Need do this using a python based web app. But yeah. I agree. Not directly related to Python.
[23:57:26] <boddax> wow its working ..dumped!
[23:57:49] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[23:58:42] *** Quits: andreasbuhr (~quassel@p549dbd84.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:59:15] <grym> boddax: noice
