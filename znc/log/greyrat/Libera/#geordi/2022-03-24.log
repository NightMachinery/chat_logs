[00:11:34] <CarloWood> { char8_t c = 255; if (c > 200) cout << "unsigned"; }
[00:11:35] <geordi> unsigned
[00:12:25] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Ping timeout: 256 seconds)
[00:16:22] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[00:48:06] <CarloWood> << u8""This_%2Fis%2F_a_उदहारण!_It_‗contains‗_a﻿%%";
[00:48:06] <geordi> error: Unexpected `ारण` after F_a_उदह. Expected balanced code or end of request.
[00:48:44] <CarloWood> wut
[00:48:50] <CarloWood> oh
[00:48:59] <CarloWood> << u8"This_%2Fis%2F_a_उदहारण!_It_‗contains‗_a﻿%%";
[00:48:59] <geordi> error: ambiguous overload for 'operator<<' in 'cout << "This_%2Fis%2F_a_\37777777740\37777777644\37777777611\37777777740\37777777644\37777777646\37777777740\37777777644\37777777671\37777777740\37777777644\37777777676\37777777740\37777777644\37777777660\37777777740\37777777644\37777777643!_It_\37777777742\37777777600\37777777627contains\37777777742\37777777600\37777777627_a%%"' (operand types are 'ostream' {aka 'ostream'} and 'const char8_t [58]')
[00:49:52] <CarloWood> << (char*)(u8"This_%2Fis%2F_a_उदहारण!_It_‗contains‗_a﻿%%");
[00:49:53] <geordi> This_%2Fis%2F_a_उदहारण!_It_‗contains‗_a%%
[01:47:20] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[01:47:37] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[03:12:17] *** Joins: hnOsmium0001_gue (~hnosm@2607:fb90:a63d:f1b2:7d37:8b3f:c88f:e1fd)
[03:12:36] <hnOsmium0001_gue> { auto a = struct Foo {int a;} (1); }
[03:12:37] <geordi> error: expected primary-expression before 'struct'
[03:12:46] <hnOsmium0001_gue> { struct Foo {int a;} foo(0); }
[03:12:47] <geordi>  
[03:12:48] *** Joins: badone (~badone@209.132.189.136)
[03:14:02] <hnOsmium0001_gue> { if (false; true) {} }
[03:14:03] <geordi>  
[03:15:58] <hnOsmium0001_gue> {for(struct Foo{int a;}; 2<1;) {}}
[03:15:58] <geordi>  
[03:16:02] <hnOsmium0001_gue> {for(struct Foo{int a;} foo; 2<1;) {}}
[03:16:03] <geordi>  
[03:52:22] *** Quits: Cyp (~cyp@213.237.85.100) (Excess Flood)
[03:53:16] *** Joins: Cyp (~cyp@213.237.85.100)
[04:16:00] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[04:50:00] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[07:00:36] *** Quits: hnOsmium0001_gue (~hnosm@2607:fb90:a63d:f1b2:7d37:8b3f:c88f:e1fd) (Ping timeout: 240 seconds)
[07:17:13] *** Joins: hnOsmium0001_gue (~hnosm@2607:fb90:a63d:f1b2:7d37:8b3f:c88f:e1fd)
[07:18:46] <hnOsmium0001_gue> << TYPE([](int a) { return a; })
[07:18:47] <geordi> prvalue main(int, char**)::<lambda(int)>
[07:19:10] <hnOsmium0001_gue> { auto lambda = [](int a) { return a; }; cout << TYPE<decltype(lambda)>; }
[07:19:11] <geordi> main(int, char**)::<lambda(int)>
[07:19:57] <hnOsmium0001_gue> { auto lambda = [mutable x = 0]() { cout << x << ' '; x++; }; lambda(); lambda(); lambda() }
[07:19:57] <geordi> error: expected identifier before 'mutable'
[07:20:20] <hnOsmium0001_gue> { auto lambda = [x = 0]() { cout << x << ' '; x++; }; lambda(); lambda(); lambda(); }
[07:20:20] <geordi> error: increment of read-only variable 'x'
[07:20:25] <hnOsmium0001_gue> { auto lambda = [x = 0]() mutable { cout << x << ' '; x++; }; lambda(); lambda(); lambda(); }
[07:20:26] <geordi> 0 1 2 
[09:04:15] *** Joins: doug16k (~doug16k@172-97-188-4.cpe.distributel.net)
[09:27:28] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:48:01] *** Quits: hnOsmium0001_gue (~hnosm@2607:fb90:a63d:f1b2:7d37:8b3f:c88f:e1fd) (Quit: Konversation terminated!)
[10:27:14] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[11:42:58] *** Quits: rwb (~augh@alogs.space) (Excess Flood)
[11:43:10] *** Joins: rwb (~augh@alogs.space)
[11:44:48] *** rwb is now known as rb
[20:40:04] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << hex << n; } }
[20:40:05] <geordi> �[\DEL]?[\US][\SI]*BEEP*
[20:40:17] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << hex << (int)n; } }
[20:40:17] <geordi> ff7f3f1ff7
[20:40:37] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << hex << (int)n << ' '; } }
[20:40:38] <geordi> ff 7f 3f 1f f 7 
[20:41:42] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << n << ':' << leading_ones(n) << "; "; } int leading_ones() { return 42; }
[20:41:42] <geordi> error: Unexpected end of request. Expected '}' or balanced code.
[20:41:53] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << n << ':' << leading_ones(n) << "; "; } } int leading_ones() { return 42; }
[20:41:54] <geordi> error: too many arguments to function 'int leading_ones()'
[20:42:05] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << n << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 42; }
[20:42:06] <geordi> �:42; [\DEL]:42; ?:42; [\US]:42; [\SI]:42; *BEEP*:42; 
[20:42:20] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << (int)n << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 42; }
[20:42:21] <geordi> 255:42; 127:42; 63:42; 31:42; 15:42; 7:42; 
[20:42:30] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << i << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 42; }
[20:42:31] <geordi> 0:42; 1:42; 2:42; 3:42; 4:42; 5:42; 
[20:43:04] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = 0xff >> i; cout << i << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return n >> 4; }
[20:43:04] <geordi> 0:15; 1:7; 2:3; 3:1; 4:0; 5:0; 
[20:44:08] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << dec << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return n >> 4; }
[20:44:08] <geordi> 0:00; 1:808; 2:c012; 3:e014; 4:f015; 5:f815; 
[20:44:23] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << dec << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return n >> 4; }
[20:44:23] <geordi> 0:0:0; 1:80:8; 2:c0:12; 3:e0:14; 4:f0:15; 5:f8:15; 
[20:48:41] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << dec << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return (n >> 4) & 7; }
[20:48:42] <geordi> 0:0:0; 1:80:0; 2:c0:4; 3:e0:6; 4:f0:7; 5:f8:7; 
[20:49:02] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << dec << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return ((n >> 4) & 7) >> 1; }
[20:49:03] <geordi> 0:0:0; 1:80:0; 2:c0:2; 3:e0:3; 4:f0:3; 5:f8:3; 
[20:57:06] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << dec << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 0x43211 >> ((n >> 2) & 0b111100)); }
[20:57:06] <geordi> error: Unexpected `)` after b111100). Expected '}' or balanced code.
[20:57:26] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << dec << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 0x43211 >> ((n >> 2) & 0b111100); }
[20:57:27] <geordi> 0:0:274961; 1:80:274961; 2:c0:4; 3:e0:0; 4:f0:0; 5:f8:0; 
[20:57:54] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 0x43211 >> ((n >> 2) & 0b111100); }
[20:57:55] <geordi> 0:0:43211; 1:80:43211; 2:c0:4; 3:e0:0; 4:f0:0; 5:f8:0; 
[20:59:32] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 0x43211UL >> ((n >> 2) & 0b111100); }
[20:59:32] <geordi> 0:0:43211; 1:80:0; 2:c0:0; 3:e0:0; 4:f0:0; 5:f8:0; 
[20:59:55] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 0x10001UL >> ((n >> 2) & 0b111100); }
[20:59:56] <geordi> 0:0:10001; 1:80:0; 2:c0:0; 3:e0:0; 4:f0:0; 5:f8:0; 
[21:00:04] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << leading_ones(n) << "; "; } } int leading_ones(unsigned char n) { return 0x100001UL >> ((n >> 2) & 0b111100); }
[21:00:05] <geordi> 0:0:100001; 1:80:0; 2:c0:0; 3:e0:0; 4:f0:0; 5:f8:0; 
[21:00:21] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x100001UL >> ((n >> 2) & 0b111100); }
[21:00:21] <geordi> Same output.
[21:00:53] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x12345678UL >> ((n >> 2) & 0b111100); }
[21:00:54] <geordi> 0:0:12345678; 1:80:0; 2:c0:0; 3:e0:0; 4:f0:0; 5:f8:0; 
[21:01:28] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[21:02:24] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x12345678UL >> ((n >> 2) & 0b111100); }
[21:02:24] <geordi> 0:0:012345678; 1:80:200; 2:c0:300; 3:e0:380; 4:f0:3c0; 5:f8:3e0; 
[21:02:37] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x12345678UL >> ((n >> 2) & 0b111100); }
[21:02:38] <geordi> 0:0:0:12345678; 1:80:20:0; 2:c0:30:0; 3:e0:38:0; 4:f0:3c:0; 5:f8:3e:0; 
[21:03:42] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x123456789abcdefUL >> ((n >> 2) & 0b111100); }
[21:03:43] <geordi> 0:0:0:123456789abcdef; 1:80:20:1234567; 2:c0:30:123; 3:e0:38:1; 4:f0:3c:0; 5:f8:3e:0; 
[21:04:00] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x423456789abcdefUL >> ((n >> 2) & 0b111100); }
[21:04:01] <geordi> 0:0:0:423456789abcdef; 1:80:20:4234567; 2:c0:30:423; 3:e0:38:4; 4:f0:3c:0; 5:f8:3e:0; 
[21:04:28] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x403020101abcdefUL >> ((n >> 2) & 0b111100); }
[21:04:29] <geordi> 0:0:0:403020101abcdef; 1:80:20:4030201; 2:c0:30:403; 3:e0:38:4; 4:f0:3c:0; 5:f8:3e:0; 
[21:04:43] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x403020101000001UL >> ((n >> 2) & 0b111100); }
[21:04:44] <geordi> 0:0:0:403020101000001; 1:80:20:4030201; 2:c0:30:403; 3:e0:38:4; 4:f0:3c:0; 5:f8:3e:0; 
[21:06:18] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0xa403020101000001UL >> ((n >> 2) & 0b111100); }
[21:06:18] <geordi> 0:0:0:a403020101000001; 1:80:20:a4030201; 2:c0:30:a403; 3:e0:38:a4; 4:f0:3c:a; 5:f8:3e:a; 
[21:06:41] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x4403020101000001UL >> ((n >> 2) & 0b111100); }
[21:06:42] <geordi> 0:0:0:4403020101000001; 1:80:20:44030201; 2:c0:30:4403; 3:e0:38:44; 4:f0:3c:4; 5:f8:3e:4; 
[21:07:01] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x4303020101000001UL >> ((n >> 2) & 0b111100); }
[21:07:02] <geordi> 0:0:0:4303020101000001; 1:80:20:43030201; 2:c0:30:4303; 3:e0:38:43; 4:f0:3c:4; 5:f8:3e:4; 
[21:07:12] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x4302020101000001UL >> ((n >> 2) & 0b111100); }
[21:07:13] <geordi> 0:0:0:4302020101000001; 1:80:20:43020201; 2:c0:30:4302; 3:e0:38:43; 4:f0:3c:4; 5:f8:3e:4; 
[21:08:06] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return 0x4302000100000001UL >> ((n >> 2) & 0b111100); }
[21:08:07] <geordi> 0:0:0:4302000100000001; 1:80:20:43020001; 2:c0:30:4302; 3:e0:38:43; 4:f0:3c:4; 5:f8:3e:4; 
[21:08:36] <CarloWood> { for (int i = 0; i < 6; ++i) { unsigned char n = ~(0xff >> i); cout << i << ':' << hex << (int)n << ':' << (int)(n >> 2) << ':' << leading_ones(n) << "; "; } } unsigned long leading_ones(unsigned char n) { return (0x4302000100000001UL >> ((n >> 2) & 0b111100)) & 7; }
[21:08:37] <geordi> 0:0:0:1; 1:80:20:1; 2:c0:30:2; 3:e0:38:3; 4:f0:3c:4; 5:f8:3e:4; 
[21:40:08] <CarloWood> << (2 >> 2 >> 2)
[21:40:09] <geordi> 0
[21:40:17] <CarloWood> << (2UL >> 2 >> 2)
[21:40:17] <geordi> 0
[21:40:46] <CarloWood> << (2UL >> 7 >> 2)
[21:40:47] <geordi> 0
[21:40:52] <CarloWood> << (7UL >> 7 >> 2)
[21:40:53] <geordi> 0
[21:40:58] <CarloWood> << (7UL >> 2 >> 2)
[21:40:58] <geordi> 0
[21:41:13] <CarloWood> << (7777UL >> 2 >> 2)
[21:41:14] <geordi> 486
[21:41:22] <CarloWood> << (7777UL >> (2 >> 2))
[21:41:23] <geordi> 7777
[21:45:00] <CarloWood> << 07777
[21:45:00] <geordi> 4095
[22:01:38] <CarloWood> << (0x3a55 >> -10) 
[22:01:39] <geordi> warning: right shift count is negative
[22:01:50] <Eelis> geordi, use -w
[22:01:51] <geordi> 0
[22:02:00] <CarloWood> thx
[22:02:16] <CarloWood> << (0x3a55 >> -1) 
[22:02:17] <geordi> warning: right shift count is negative
[22:02:25] <CarloWood> geordi, use -w
[22:02:26] <geordi> 0
[22:02:36] <Eelis> geordi -w << (0x3a55 >> -1)
[22:02:37] <geordi> 0
[22:07:02] <CarloWood> << 0x3a55
[22:07:03] <geordi> 14933
[23:01:10] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[23:01:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
