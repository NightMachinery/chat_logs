[00:03:22] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[00:03:59] *** Parts: Guyver2_ (Guyver@guyver2.xs4all.nl) (Closing Window)
[00:05:44] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[00:05:59] <yawkat> https://blog.cloudflare.com/sizing-up-post-quantum-signatures/
[00:06:32] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 240 seconds)
[00:13:49] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[00:29:25] *** Joins: gabriel1_ (~gabriel1@37.172.94.40)
[00:31:01] <WishBoy> yang nice article
[00:31:08] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[00:31:32] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[00:34:49] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:42:21] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[00:43:55] *** Quits: brick (~ff@46-186-18.adsl.cyta.gr) (Ping timeout: 250 seconds)
[00:44:15] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Ping timeout: 276 seconds)
[00:46:31] *** Quits: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[00:48:40] *** Quits: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:717e:8cbe:b21c:a5fa) ()
[00:52:30] *** Quits: gabriel1_ (~gabriel1@37.172.94.40) (Remote host closed the connection)
[00:54:29] *** Joins: Photic (~Photic@user/photic)
[01:03:27] *** Quits: _rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[01:04:50] *** Joins: AlfaKtulu (~AlfaKtulu@pc-166-40-44-190.cm.vtr.net)
[01:05:59] *** Quits: AlfaKtulu (~AlfaKtulu@pc-166-40-44-190.cm.vtr.net) (Client Quit)
[01:07:10] *** Joins: rtypo (~alex@user/rtypo)
[01:22:32] *** Joins: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698)
[01:33:02] *** Joins: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com)
[01:34:15] *** Quits: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com) (Client Quit)
[01:44:11] *** Quits: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698) (Ping timeout: 264 seconds)
[01:48:51] *** Joins: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698)
[01:55:35] *** Quits: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698) (Ping timeout: 264 seconds)
[02:04:45] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[02:09:29] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[02:10:49] *** Joins: kish` (~aqua@user/aqua)
[02:12:04] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[02:12:13] *** Joins: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698)
[02:20:56] *** Quits: mouseghost (~draco@user/mouseghost) (Remote host closed the connection)
[02:30:21] *** Joins: kish` (~aqua@user/aqua)
[02:32:02] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 240 seconds)
[02:44:32] *** Joins: ykska (~ykska@182.226.37.172)
[02:44:47] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:46:40] *** Joins: Warped (~Warped@user/warped)
[02:47:22] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[02:47:22] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[02:51:59] *** Quits: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698) (Ping timeout: 264 seconds)
[02:52:43] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:57:02] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[03:00:39] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[03:01:16] *** Quits: linearcannon (~linear_ca@50.35.78.163) (Quit: linearcannon)
[03:06:05] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[03:10:17] *** Joins: CryptoClub (~fafs@87.125.251.76)
[03:11:03] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[03:16:39] *** Joins: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698)
[03:20:06] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[03:23:18] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 260 seconds)
[03:23:49] *** Quits: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698) (Ping timeout: 250 seconds)
[03:29:29] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:30:30] <maroon> what does openssl mean when you try to create an overly huge RSA key, about 'larger key sizes may behave not as expected'? (other than taking an incredibly long timer to generate)
[03:31:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:31:39] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:31:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:32:02] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[03:35:07] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[03:35:15] <sarnold> probably just a warning that not all tools will support silly sizes
[03:36:32] *** Quits: ykska (~ykska@182.226.37.172) (Ping timeout: 240 seconds)
[03:36:50] *** Joins: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698)
[03:38:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 246 seconds)
[03:41:11] *** Quits: dna44 (~dna@2600:1700:290:f880:8539:2f34:9e81:e698) (Ping timeout: 264 seconds)
[03:41:55] <maroon> 2^30-64 is the largest length that doesn't immediately error out
[03:51:03] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[03:52:55] <danieldg> sounds like a limit calculated for allocation limits on 32-bit systems
[03:53:00] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[03:56:19] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[03:58:24] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:05:31] <Soni> please just make Proof of Using Bandwidth/PoUB a thing, we're tired of the dang things. yeah it might take the internet with it but honestly? that... would be worth it.
[04:05:41] <Soni> Proof of IPv4 could also work
[04:06:15] <Soni> Proof of IPv4 would likely have more exciting results, altho unlikely to kill the internet on its own
[04:06:41] <Soni> but just, make it go away please
[04:09:58] <danieldg> I think people have tried that but it just looked like a ddos-for-hire service :)
[04:10:20] <danieldg> plus bandwidth can't be verified by third parties
[04:12:37] <Soni> danieldg: do it like NTP, rely on latency instead
[04:12:56] <Soni> or just do a modified proof-of-storage
[04:13:05] <Soni> where the network is the storage
[04:13:36] <Soni> IPv4 can generally be verified by third parties tho
[04:13:59] <Soni> you'd want regular checkpointing for that one tho
[04:15:31] <maroon> is it still a thing where people share ipv4 addresses? i remember long ago someone was unable to dcc send, because he was in south africa and had like 4 residences somehow sharing the same ip
[04:15:31] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:53c9:cd00:12bf:48ff:feb8:38c8) (Ping timeout: 245 seconds)
[04:16:43] <Soni> yes. it's not an issue tho, ppl who wanna mine will happily buy whole /24's
[04:16:59] <sarnold> "CGNAT" and it's only become more common since then
[04:17:17] <Soni> it'll really speed up CGNAT deployment as well
[04:20:13] <Soni> really just make sure mining expands to as many resources as possible
[04:20:21] <Soni> expand it to phone numbers even
[04:20:27] <Soni> just mine everything
[04:20:40] <Soni> so it has a chance of getting banned sooner than later
[04:21:00] <sarnold> oh good idea once you ban something that'll drastically increase people's interest in it
[04:21:05] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 264 seconds)
[04:21:37] <Soni> well, mining has the ability to grind capitalism to a halt
[04:21:48] <Soni> exhaust all telecommunications and that's capitalism done for
[04:22:24] <danieldg> maybe we should mine capitalism
[04:22:42] *** Joins: Wulf (~Wulf@user/wulf)
[04:22:55] <Soni> ideally do it without causing too much environmental damage tho
[04:23:50] <danieldg> proof-of-tree-planting
[04:29:10] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[04:29:34] *** Quits: Photic (~Photic@user/photic) (Ping timeout: 256 seconds)
[04:35:23] *** Joins: shariashaman (~Rheanna@218.78.79.129)
[04:36:32] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[04:38:54] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[04:43:34] <JollyRoger> Hey guys. I've been doing some thinking about signing my backups, and so far what I've been doing is following the workflow of "put the backup together and compress it, encrypt with an AEAD cipher, then sign." Would you guys say I should be signing the plaintext then encrypting, or continuing this way? I'm kind of liking the idea of signing a backup that's been encrypted with an AEAD cipher because
[04:43:37] <JollyRoger> if it's an AEAD cipher, as long as it passes the signature, it should be safe for me to decrypt it, right?
[04:45:18] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:45:48] <sarnold> ahoy JollyRoger :) that sounds like it makes sense to me
[04:46:29] <maroon> i see generic encrypt-then-sign advised for security reasons over sign-then-encrypt. it also has the advantage of not wasting time trying to decrypt something that's bogus
[04:46:43] <JollyRoger> Ahoy sarnold~
[04:46:59] <JollyRoger> Oh, whew, glad to hear, sarnold and maroon!
[04:47:03] <ericonr> https://github.com/richfelker/bakelite talking backups, I'd be curious to know if anyone here has looked over that 
[04:47:10] <JollyRoger> Ooh. Let me go take a look now.
[04:48:10] <JollyRoger> Wow, this looks almost exactly like what I need. 
[04:48:36] <JollyRoger> I've been currently using borg, and some other stuff, including age and tar, but always looking to improve.
[04:49:28] <maroon> i was playing around with creating a CertFP SASL certificate for libera, using openssl. i noticed that when i made an rsa4096 key using openssl 1.1.1d that it was rare to find a p-1 or q-1 having a factor other than 2 which was smaller than 2^32. however for 1.1.1L and 3.0 versions, it's quite common to have p-1 or q-1 having 3 or 7 or some other number smaller than 256 as a factor
[04:50:57] * JollyRoger suddenly reddens.
[04:51:10] <JollyRoger> I uh... every time I see math, my brain starts to melt.
[04:56:09] <MacGyver> Then a channel dedicated to cryptography might be a hazardous place to be.
[05:01:16] <JollyRoger> Heh, well I mean... I like finding out what the right tool for the right job is. 
[05:01:45] <JollyRoger> But right now I don't know enough about the underlying math. I hope I can learn someday though!
[05:05:26] *** Joins: frost (~frost@user/frost)
[05:06:55] <Alipha> JollyRoger: why even bother signing? An AEAD cipher is safe from modification, and adding a signature just means another operation to perform
[05:08:50] <JollyRoger> Alipha: oh uh... well I mean like, these tarballs are being stored on my S3 bucket, so I want to make sure they were also authored by me when I download them.
[05:09:43] <Alipha> JollyRoger: wouldn't the fact that you can decrypt them prove that you are the author?
[05:10:18] <JollyRoger> Well er... not quite? I mean, anyone could make a set of tarballs and then encrypt them to the public key.
[05:10:18] *** Quits: shariashaman (~Rheanna@218.78.79.129) (Remote host closed the connection)
[05:11:32] <JollyRoger> I'm trying not to use a password because I'm worried I will forget the password. So what I did was I printed out the private key into a QR code. 
[05:11:48] <JollyRoger> And burned them to CDs.
[05:12:54] <Alipha> JollyRoger: ah, yeah, right
[05:13:46] <JollyRoger> Yeah. I'm trying to make the backup as autonomous as possible, so all I need to do is leave the backup public key on my laptop, and then run a cron job to create new tarballs every so often and squirrel them away, so I can take them and save them to my S3 bucket when I get back home.
[05:16:44] <JollyRoger> In the future I do want to set it up so that my laptop can simply send the backup straight to the bucket, but that's for the future.
[05:17:43] *** Joins: ykska (~ykska@182.226.37.172)
[05:19:37] <JollyRoger> It's also my hope that if I lose my laptop and someone grabs it while it's still powered on, they wouldn't be able to go back and decrypt the backups that are already saved there.
[05:24:29] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:28:21] <ericonr> maroon: do the factors of p-1 or q-1 matter much beyond not being 3, in case the public exponent is 3 ?
[05:30:26] <maroon> i dunno, i hope the change wasn't done so they make the key quicker, even though it's a 1-time event that shouldnt need to be repeated for a long time
[05:32:29] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:46:55] <maroon> also, wikipedia says p/q should differ by a few digits - and i can't find in the link what it means by 'few' - but the primes that openssl makes seem to always be exactly half the bit-length of 'n'. with the highest hex digit always being one of [cdef]
[05:47:11] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[05:47:50] <danieldg> maroon: that's to avoid generating a 2047-bit modulus from two 1024-bit primes
[05:50:13] <sarnold> I thought it was to avoid composits built with a prime that's easily found via https://en.wikipedia.org/wiki/Pollard%27s_rho_algorithm
[05:51:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:51:45] <maroon> but they're no longer avoiding small factors. v3.0 creating primes so that phi has lots of small factors. "Factors found so far 2 5 11 25 9d 481d 1254b df7e31..."
[05:53:27] <maroon> and if they want to ensure that it's not a 2047-bit prime, then just generate prime#1, and then you know that to get n=2048 bits, that q needs to be in the range (2^2047/p thru 2^2048/p)
[05:53:58] *** Joins: WishBoy (~WishBoy@user/wishboy)
[05:54:27] <danieldg> maroon: setting the first hex digit is basically choosing that range
[05:57:29] <maroon> that's true if p/q are both required to have matching bitlengths
[05:58:00] <danieldg> true, but that's not a significant restriction
[06:04:27] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[06:04:48] *** Joins: kish` (~aqua@user/aqua)
[06:09:54] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[06:28:47] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[06:29:26] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[06:32:29] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[06:37:07] *** Joins: namkeles (~namkeles@101.175.87.176)
[06:50:47] *** Quits: Elzington (~Elzington@static-68-235-44-53.cust.tzulo.com) (Quit: Leaving)
[06:53:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 240 seconds)
[07:06:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:08:19] *** tusko is now known as hotep
[07:19:58] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[07:24:55] *** Joins: CryptoClub (~fafs@87.125.251.76)
[07:27:45] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:42:07] *** Joins: lord| (~lordpipe@user/lordpipe)
[08:05:07] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[08:20:13] *** Quits: namkeles (~namkeles@101.175.87.176) (Quit: Client closed)
[08:26:49] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[08:27:38] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[08:30:10] *** Joins: gggpkm (~gggpkm@111.63.44.13)
[08:30:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[08:30:55] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[08:32:37] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[08:33:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:36:56] *** Joins: ravan_ (~ravan@user/ravan)
[08:39:23] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 246 seconds)
[08:43:06] *** Joins: gggpkm_ (~gggpkm@111.63.44.13)
[08:46:02] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[08:53:25] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[08:55:11] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[09:04:51] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 250 seconds)
[09:04:57] *** ravan_ is now known as ravan
[09:27:46] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 260 seconds)
[09:36:41] *** Joins: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[09:36:56] *** gggpkm_ is now known as gggpkm
[09:39:04] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[09:42:02] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[09:45:08] *** Joins: gggpkm__ (~gggpkm@111.63.44.13)
[09:48:33] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[10:06:57] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[10:12:31] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:12:46] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[10:13:02] *** Joins: kish` (~aqua@user/aqua)
[10:18:06] *** Quits: lord| (~lordpipe@user/lordpipe) (Quit: https://i.imgur.com/xacQ09F.mp4)
[10:18:24] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Quit: Bye)
[10:19:15] *** Joins: lord| (~lordpipe@user/lordpipe)
[10:19:53] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[10:22:04] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[10:23:00] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:25:02] *** Quits: gggpkm__ (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[10:39:32] *** Joins: kajus (~kajus@200116b84578a30047727a849398de1d.dip.versatel-1u1.de)
[10:49:03] *** Joins: qbt (~qbt@user/edun)
[10:50:27] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:50:44] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[10:51:27] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:56:05] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[10:59:43] *** Quits: _paul0 (~paul0@179.181.82.48) (Read error: Connection reset by peer)
[11:00:11] *** Joins: _paul0 (~paul0@179.181.82.48)
[11:02:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[11:03:09] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:10:51] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Remote host closed the connection)
[11:11:14] *** Joins: gggpkm_ (~gggpkm@123.113.191.141)
[11:20:21] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[11:21:40] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[11:22:17] *** Joins: andreasbuhr (~quassel@p548ddf3f.dip0.t-ipconnect.de)
[11:28:39] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[11:31:42] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[11:34:48] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[11:38:52] *** Joins: CryptoClub (~fafs@87.125.251.76)
[11:47:39] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[11:50:16] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7564-321e-ff0d-0ba0.res6.spectrum.com) (Quit: jarthur)
[11:50:18] *** Joins: gggpkm__ (~gggpkm@123.113.177.236)
[11:51:07] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:53:17] *** Quits: gggpkm_ (~gggpkm@123.113.191.141) (Ping timeout: 246 seconds)
[12:04:42] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:13:03] *** Quits: ykska (~ykska@182.226.37.172) (Ping timeout: 256 seconds)
[12:20:11] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[12:20:13] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[12:25:45] *** Joins: mei3 (~mei@user/mei)
[12:35:05] *** Joins: system_error (~SystemErr@user/systemerror)
[12:35:10] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[12:35:45] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[12:40:53] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[12:42:25] *** Joins: zro (~zro@user/zro)
[12:46:51] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[13:11:54] *** Quits: cwebber (~user@user/cwebber) (Read error: Connection reset by peer)
[13:14:47] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:16:43] *** Joins: style (fatal@error.rs)
[13:17:08] *** Parts: style (fatal@error.rs) ()
[13:29:37] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[13:32:36] *** Quits: gggpkm__ (~gggpkm@123.113.177.236) (Ping timeout: 245 seconds)
[13:37:11] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:38:19] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:43:13] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Remote host closed the connection)
[13:48:47] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[13:49:43] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[13:51:19] *** Joins: _nightw0lf (~nightw0lf@77.125.126.63)
[13:55:27] *** Joins: ___nightw0lf (~nightw0lf@77.125.126.63)
[13:55:32] *** Quits: _nightw0lf (~nightw0lf@77.125.126.63) (Quit: leaving)
[13:55:35] *** Quits: ___nightw0lf (~nightw0lf@77.125.126.63) (Remote host closed the connection)
[13:55:50] *** Joins: _nightw0lf (~nightw0lf@77.125.126.63)
[13:56:57] *** Quits: _nightw0lf (~nightw0lf@77.125.126.63) (Remote host closed the connection)
[13:58:42] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[14:01:21] *** Joins: ykska (~ykska@182.226.37.172)
[14:04:37] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:05:33] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[14:07:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[14:09:02] *** Joins: frost (~frost@user/frost)
[14:15:47] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:16:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[14:17:27] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[14:18:21] *** Joins: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de)
[14:21:53] *** Quits: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:28:08] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[14:28:38] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[14:29:26] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[14:29:50] *** Joins: frost (~frost@user/frost)
[14:34:30] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[14:35:02] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Max SendQ exceeded)
[14:35:32] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[14:36:21] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Remote host closed the connection)
[14:37:38] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 260 seconds)
[14:38:14] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098)
[14:53:33] *** Joins: Nimrodel (~Nimrodel@athedsl-55944.home.otenet.gr)
[14:55:32] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:58:47] *** Quits: Nimrodel (~Nimrodel@athedsl-55944.home.otenet.gr) (Quit: Leaving)
[15:08:49] *** Joins: Photic (~Photic@user/photic)
[15:17:12] *** Quits: hotep (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[15:24:19] *** Quits: Photic (~Photic@user/photic) (Quit: Client closed)
[15:25:55] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[15:27:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl testing sway and wayland.)
[15:31:34] *** Joins: Photic (~Photic@user/photic)
[15:32:37] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[15:34:56] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Quit: (  *  y  *  ))
[15:39:42] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[15:40:12] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (Quit: WeeChat 2.8)
[15:42:57] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[15:46:44] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[15:48:53] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[15:49:33] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[15:49:42] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[15:52:05] *** Joins: CryptoClub (~fafs@87.125.251.76)
[16:01:06] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[16:05:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:06:48] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098) (Quit: WeeChat 3.3)
[16:07:04] *** Joins: mononote (~mononote@user/mononote)
[16:08:30] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:14e7:eea:7680:eb78)
[16:10:16] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[16:10:16] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[16:10:32] *** Joins: madage (~madage@user/madage)
[16:10:33] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[16:15:01] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:16:05] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:16:32] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[16:16:49] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:31:34] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:31:53] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[16:35:29] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 264 seconds)
[16:41:24] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:41:58] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[16:42:13] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:42:46] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[16:45:05] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:14e7:eea:7680:eb78) (Ping timeout: 264 seconds)
[16:58:44] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[17:03:05] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[17:06:39] *** Joins: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net)
[17:08:35] *** Joins: rtypo (~alex@user/rtypo)
[17:14:35] *** Quits: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 246 seconds)
[17:15:37] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[17:16:52] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[17:23:30] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[17:25:52] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[17:33:50] *** Quits: Photic (~Photic@user/photic) (Ping timeout: 256 seconds)
[17:38:26] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:40:31] *** Quits: eblip (~eb0t@90.209.247.46) (Ping timeout: 245 seconds)
[17:42:09] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[17:42:44] *** Joins: eblip (~eb0t@90.199.241.70)
[17:42:57] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[17:43:25] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[17:45:54] *** Quits: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:46:29] *** Joins: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net)
[17:56:28] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[18:02:44] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 244 seconds)
[18:05:57] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:acf6:cabc:1b17:efb6)
[18:12:23] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:acf6:cabc:1b17:efb6) (Ping timeout: 264 seconds)
[18:24:44] *** Joins: Pythayr (~pither195@64.42.181.51)
[18:36:41] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[18:37:32] *** Quits: zro (~zro@user/zro) (Ping timeout: 240 seconds)
[18:39:39] *** Parts: Guyver2 (Guyver@guyver2.xs4all.nl) (Closing Window)
[18:45:47] *** Quits: ua_ (~ua@public-gprs233258.centertel.pl) (Read error: Connection reset by peer)
[18:47:26] *** Joins: ua_ (~ua@public-gprs233258.centertel.pl)
[18:49:23] *** Joins: Andrew_ (~andrew@user/andrewyu)
[18:50:15] *** Quits: AndrewYu (~andrew@user/andrewyu) (Read error: Connection reset by peer)
[18:50:16] *** Joins: zro (~zro@user/zro)
[18:50:24] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[18:52:14] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[18:57:22] *** Joins: RickSanchez (~RickSanch@2607:fb90:8916:965b:19bb:5145:e478:97d0)
[18:58:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[18:59:17] *** Quits: kajus (~kajus@200116b84578a30047727a849398de1d.dip.versatel-1u1.de) (Remote host closed the connection)
[19:06:46] *** Joins: azonenberg (~azonenber@2603:3023:241:40f8:216:3eff:fe6c:95a2)
[19:07:22] <azonenberg> Anyone here interested in efficient software implementation of symmetric crypto? I was recently reminded of an interesting idea I came up with years ago that I haven't had time to try
[19:08:32] <azonenberg> So the basic idea is, suppose you're designing some kind of chip that handles data you want to encrypt and decrypt, and you want it to have a long lifetime
[19:09:05] <azonenberg> You want high performance, deterministic run time (no cache timing side channels etc), but also algorithm agility
[19:09:18] <azonenberg> so if AES or SHA2 or something is broken years down the road, you can easily swap in a new algorithm
[19:09:24] <azonenberg> So a hard wired AES accelerator is out
[19:09:56] *** Joins: WishBoy (~WishBoy@user/wishboy)
[19:10:27] <azonenberg> Anyway, so the solution I came up with was a DSP-like CPU that is optimized specifically for efficient implementation of cryptographic algorithms, targeting maximum integer performance on high fan-in operations while being fully deterministic
[19:11:30] <azonenberg> At a high level, you have the processor core and register file, a small scratchpad SRAM with constant single cycle latency, then memory mapped FIFOs for input and output data
[19:11:50] <azonenberg> that you can then shove in an AXI bus or something between say your DRAM controller and your Ethernet MAC or something
[19:12:54] <azonenberg> The magic is the CPU itself, which is a VLIW design doing 3 instructions per clock although the actual peak throughput is closer to 5 instructions on a typical RISC CPU
[19:13:00] <azonenberg> and it has a Y-shaped pipeline
[19:13:20] <azonenberg> At the first stage there's two 3-input ALUs, which each take two registers and a 32-bit immediate
[19:15:02] <azonenberg> So for example, you could do (r3 ^ r4 ^ 0xdeadbeef) in one instruction on one ALU
[19:15:11] <azonenberg> and simultaneously, (r5 & r6 & 0x41414141) on the second ALU
[19:15:26] <azonenberg> Then at the second stage there's an additional ALU that combines the results of the first two
[19:15:48] <azonenberg> Which means you only need a single retirement port to write back the result of these five arithmetic operations to the register file
[19:16:06] <azonenberg> Which seems like it would do really well with the high fan-in mixing typical of modern crypto
[19:18:37] <riv> I think that is a very nice idea for a hardware component
[19:19:06] <azonenberg> Basically the goal is to efficiently implement all common block ciphers and hashes currently in use
[19:19:16] <azonenberg> but also be flexible enough that next-gen algorithms will map well to it as well
[19:19:19] <riv> it could be constant time too
[19:19:29] <riv> no worries about cache, branch prediction etc.
[19:19:32] <azonenberg> yes, constant run time is an explicit design requirement
[19:19:41] <azonenberg> My proposed ISA even includes a single cycle S-box instruction
[19:19:52] <azonenberg> it takes in a 32-bit integer, divides it into four bytes
[19:20:05] <azonenberg> looks up each one in a 256-entry table, and outputs the four table outputs
[19:20:18] <azonenberg> As used by AES but it might be useful for other algorithms too
[19:20:33] <azonenberg> I have to work out some details like whether all four s-boxes have to be the same or whether i have four separate tables, etc
[19:21:00] <riv> i like the idea of basically uploading s boxes to it and streaming data through it like a dsp
[19:21:13] <azonenberg> Exactly
[19:21:20] <azonenberg> this is a DSP specifically meant for implementing crypto
[19:22:11] <azonenberg> With constant propagation delay and completely encapsulated state safe from any microarchitectural side channels in the rest of the SoC
[19:22:30] <azonenberg> It most likely will not even be Turing complete
[19:22:39] <system_error> when ppl needed for speed at all costs they gone using FPGAs and then ASICs... 
[19:22:53] <azonenberg> system_error: the problem is that FPGAs are lots of silicon area and power hungry
[19:22:57] <azonenberg> and ASICs can't be changed
[19:23:29] <azonenberg> This is intended for long lived systems where 10 years after you make the chip you might have to replace AES-GCM and SHA256 with some future algorithm that hasn't been invented yet
[19:23:35] <azonenberg> but you want it to be fast
[19:23:45] *** Quits: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:23:57] <azonenberg> riv: i have to work out details of the loop model but my basic concept is to have a dedicated instruction for constant iteration loop
[19:24:01] <system_error> On other hand if you skip cpu core and only do algo itself, it reduces complexity of design.
[19:24:14] <azonenberg> Correct. This is designed to be a middle ground
[19:24:25] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:24:29] <riv> what about elliptic curve computations, could it fit nicely on at all?
[19:24:50] <azonenberg> Public key algorithms tend to be very different from symmetric. I haven't thought about what that would take
[19:25:05] <system_error> I'm somewhat agree about power and so on, but so far... eh, wait, e.g. salsa/chacha are quite efficient on existing cpus?
[19:25:16] <azonenberg> I did implement curve25519 a few years ago but it was basically just an FPGA port of the NaCl x25519 crypto_scalarmult
[19:25:29] <azonenberg> and i dont remember a ton about the internals other than there being a lot of multiplies
[19:26:05] <system_error> actually, crypto evolved to be faster/less troubled on more modern cpu designs, etc. So aes got timing issues. Salasa/chacha don't.
[19:27:14] <system_error> HW and SW evolve kinda side by side, and key advantage of SW crypto it's "free lunch" I guess
[19:27:45] <system_error> this said I can imagine opensource/verifiable crypto module still could get some point.
[19:28:19] <azonenberg> Yeah. the other thing is, I wanted to make this as fast as i could, hence the superscalar and vectorization
[19:28:37] <azonenberg> the goal is to be able to implement a given algorithm a lot faster at the same clock rate than say a typical Cortex-M
[19:28:44] <system_error> but, eh, well, there is one nasty thing. Modern compilers don't expect DSP or VLIW like designs either.
[19:29:19] <azonenberg> This is not targeting a compiler
[19:29:27] <azonenberg> how often do new block ciphers come out?
[19:29:33] <azonenberg> I'm assuming you'd be writing assembly for it
[19:29:41] <system_error> azonenberg> Cortex M is mcu core. Its value not in computation speed, but predictability.
[19:30:15] <azonenberg> The engineering time of writing a new implementation for this architecture is something you're measure against the cost of a new silicon spin
[19:30:19] <azonenberg> not against installing a new openssl version
[19:30:29] <system_error> azonenberg> asm is unportable, hard to verify and nightmare to maintain. So personally brief and verifiable C source is big bonus for me.
[19:30:49] <azonenberg> The "assembly" for this architecture would look more like pseudocode
[19:31:14] <system_error> azonenberg> stuff like Intel Itanium has been a bit like what you describe. Unfortunately it died by poor software support.
[19:31:14] <azonenberg> r3 = (r2 & r4 & 0xfeedface) ^ (sbox r3)
[19:31:22] <azonenberg> Yes, but they were targeting general purpose compute
[19:31:23] <azonenberg> I'm not
[19:31:37] *** Joins: brick (~ff@46-186-18.adsl.cyta.gr)
[19:31:40] <azonenberg> the intent is that you might implement one new piece of firmware for this processor a decade
[19:32:03] <azonenberg> it's meant to be one step removed from an asic crypto core, but still changeable if you need to
[19:32:26] <system_error> I'd say there could be some point. But it sounds like rather difficult to hit target.
[19:32:35] <azonenberg> Yeah. I'm not trying to commercialize it
[19:32:44] <azonenberg> I'm just a computer architecture geek with a day job in security :p
[19:33:07] <riv> something to think about: how would this work with multithreading
[19:33:32] <azonenberg> It's a hardware block. You'd be accessing it via DMA or similar
[19:33:40] <azonenberg> so each packet would be processed through it atomically
[19:33:49] <riv> i see
[19:33:59] <azonenberg> and then there would be some means of selecting which key to use for a given packet and whether to encrypt or decrypt
[19:34:09] <azonenberg> so you could have multiple concurrent sessions
[19:34:12] <riv> this could potentially be just on the CPU die right?
[19:34:20] <riv> like how we have a FPU
[19:34:44] <azonenberg> Not quite that tightly integrated. I'm thinking of it more like a peripheral on a microcontroller
[19:34:49] <azonenberg> or an extra feature in a pcie network card
[19:35:01] <azonenberg> it's a black box where plaintext goes in and ciphertext comes out, or vice versa
[19:35:03] <system_error> <azonenberg> I'm just a computer architecture geek with a day job in security :p <- nice occupation to my taste :P
[19:35:10] <azonenberg> that you can load a blob into if you need a new algorithm
[19:41:11] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:46:20] <system_error> azonenberg> my concern is: only few are prepared to hand over whole SoC source for audit. This thing needs wide data path either. And damn convenient place to put backdoor.
[19:57:03] <Haohmaru> is this a custom processor?
[19:57:38] <Haohmaru> or is it some funky opcodes in a funky emulated thing running on a more "conventional" processor?
[19:58:15] <azonenberg> I'm proposing full custom (to get deterministic timing etc)
[19:58:25] <Haohmaru> oh, okay
[19:58:29] <azonenberg> It doesn't yet exist, I don't even have a full ISA spec yet. Just a concept for the architecture
[19:58:34] <azonenberg> and a partial list of opcodes
[20:02:26] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[20:05:56] *** Joins: CryptoClub (~fafs@87.125.251.76)
[20:12:35] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[20:25:40] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[20:51:56] *** Quits: fltrz (~fltrz@94.105.124.147.dyn.edpnet.net) (Quit: Leaving)
[21:01:59] *** Quits: brick (~ff@46-186-18.adsl.cyta.gr) (Ping timeout: 268 seconds)
[21:03:43] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[21:05:08] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[21:12:02] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[21:13:47] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:14:51] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[21:15:05] *** Quits: X-Scale (~ARM@31.22.162.107) (Ping timeout: 264 seconds)
[21:16:45] *** X-Scale` is now known as X-Scale
[21:19:40] *** Joins: tradar (~tradar@user/tradar)
[21:23:24] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[21:30:58] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[21:33:59] *** Quits: andreasbuhr (~quassel@p548ddf3f.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:34:35] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 264 seconds)
[21:39:36] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 268 seconds)
[21:39:47] *** Joins: mouseghost (~draco@user/mouseghost)
[21:53:19] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[21:54:19] *** Joins: X-Scale` (~ARM@31.22.202.101)
[21:56:06] *** X-Scale` is now known as X-Scale
[22:03:32] *** Joins: aleck (~aleck@user/aleck)
[22:04:59] *** Joins: brick (~ff@46-186-18.adsl.cyta.gr)
[22:05:02] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 240 seconds)
[22:27:33] *** Quits: sonOfRa (sonOfRa@user/sonofra) (Remote host closed the connection)
[22:30:16] *** Joins: Narrat (~omnius@p200300df5f0ba03406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:30:53] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Remote host closed the connection)
[22:34:00] *** Joins: sonOfRa (sonOfRa@user/sonofra)
[22:46:02] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-7cfd-7535-6a92-0681.res6.spectrum.com)
[22:52:32] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[23:00:59] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Quit: Leaving)
[23:08:41] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 256 seconds)
[23:10:02] *** Quits: brick (~ff@46-186-18.adsl.cyta.gr) (Ping timeout: 260 seconds)
[23:11:11] *** Hash is now known as stoned
[23:11:15] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[23:11:20] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:11:59] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[23:12:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:19:43] *** Joins: AsenMx (~AsenMx@user/asenmx)
[23:28:36] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[23:33:10] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:261d:f8a1:1b2e:6f8f)
[23:34:00] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:261d:f8a1:1b2e:6f8f) (Remote host closed the connection)
[23:38:17] *** Joins: Pythayr (~pither195@64.42.181.51)
[23:39:52] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[23:43:27] *** Joins: mei3 (~mei@user/mei)
[23:46:41] *** Joins: mononote (~mononote@user/mononote)
[23:52:02] *** Quits: ykska (~ykska@182.226.37.172) (Ping timeout: 240 seconds)
