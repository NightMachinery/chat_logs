[00:00:27] <TernaryOperator> relipse: assuming you mean "out the box" sessions see, https://www.php.net/manual/en/session.configuration.php#ini.session.gc-maxlifetime but do read the related parts
[00:01:07] <relipse> modifying the gc-maxlifetime doesn't work on my server for some reason I still get like 10 minute sessions
[00:01:57] <TernaryOperator> note that's only the probability that a request *will* be cleaned up, not a guarantee
[00:02:06] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[00:02:26] <TernaryOperator> you might want to look at $_SESSION['expire'] gc-maxliftime should *at least* equal that though
[00:03:04] <gizmore> relipse: maybe use your own session handling :S
[00:03:18] <TernaryOperator> honestly that's often the best way, it's at least explicit
[00:03:36] <TernaryOperator> also database sessions are cleaner when you want to have multiple PHP "boxes"
[00:03:54] <biberu> relipse: default session handling? is another site using the same directory for sessions, with other settings?
[00:03:58] <TernaryOperator> doesn't have to database, any reasonably durable store that is accessible over the network works
[00:05:38] <TernaryOperator> I get why file based sessions are the default but they cause so much *pain so often* the first thing I do on any new project from grassroots is bin them
[00:08:48] <TernaryOperator> relipse: be aware that gc_maxlifetime might not be what you expect depending on the context (and which ini file is actually been used)
[00:09:50] <TernaryOperator> the quickest way to sanity check that is phpinfo()
[00:10:08] <TernaryOperator> also watch for cli and web having two ini files with different values for both :D
[00:10:51] <TernaryOperator> I know about that, it's caught me many times and I'll *still* occasionally look at it and go "but the module is loaded, its right there" then about 5 seconds remember that that is the default on a lot of distro's :D
[00:39:59] *** Quits: jaggz (~jaggz@user/jaggz) (Ping timeout: 264 seconds)
[00:40:41] *** Joins: jaggz (~jaggz@user/jaggz)
[00:46:06] *** Joins: AsenMx (~AsenMx@user/asenmx)
[00:48:13] <Blondie101010> stenno, biberu:  the solution with JS implied having the whole app auth done in JS
[00:49:42] <Blondie101010> not twice
[00:50:27] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Quit: guenhael)
[00:50:44] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[00:51:13] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 268 seconds)
[01:07:04] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:15:17] *** Quits: pmercado_ (~pmercado@186.107.36.6) (Ping timeout: 268 seconds)
[01:19:42] *** Joins: onichomp (~onichomp@2806:264:4404:8301:1007:f0a0:80cc:82fb)
[01:49:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:29:05] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:31:54] *** Joins: AsenMx (~AsenMx@user/asenmx)
[02:33:17] *** Quits: onichomp (~onichomp@2806:264:4404:8301:1007:f0a0:80cc:82fb) (Read error: Connection reset by peer)
[02:33:54] *** Joins: onichomp (~onichomp@2806:264:4404:8301:1007:f0a0:80cc:82fb)
[02:48:02] *** Joins: ferdna (~ferdna@user/ferdna)
[02:55:53] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:03:12] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[03:05:08] *** Joins: forgotmynick (uid24625@hampstead.irccloud.com)
[03:07:26] *** Quits: tex (~super@user/dix) (Quit: tex)
[03:20:35] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:23:39] *** Joins: echoSMILE (uid504326@user/echosmile)
[03:23:55] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[03:25:01] *** Parts: echoSMILE (uid504326@user/echosmile) ()
[03:26:25] *** Joins: echoSMILE (uid504326@user/echosmile)
[03:42:03] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Ping timeout: 268 seconds)
[03:50:07] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 256 seconds)
[04:08:13] *** Parts: tomtom- (~tomtom@kug.no) ()
[04:17:11] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 264 seconds)
[04:39:34] *** Joins: Robotico (~101@31.red-2-138-31.dynamicip.rima-tde.net)
[04:43:51] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[04:50:02] *** Quits: LuKaRo (~LuKaRo@p4fc32052.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[04:50:27] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[04:50:43] *** Quits: magla (~gelignite@55d446ec.access.ecotel.net) (Quit: Stay safe!)
[04:51:58] *** Joins: LuKaRo_ (~LuKaRo@p57b1560c.dip0.t-ipconnect.de)
[04:55:11] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[04:55:17] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[04:57:36] *** guenhael1 is now known as guenhael
[04:59:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[05:01:47] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:08:44] *** Quits: gizmore (~kvirc@p5de33830.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[05:55:39] *** Quits: Robotico (~101@31.red-2-138-31.dynamicip.rima-tde.net) (Quit: Leaving)
[06:06:21] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[06:26:47] *** Quits: onichomp (~onichomp@2806:264:4404:8301:1007:f0a0:80cc:82fb) (Read error: Connection reset by peer)
[06:27:24] *** Joins: onichomp (~onichomp@2806:264:4404:8301:1007:f0a0:80cc:82fb)
[06:36:29] *** Joins: Rockwood (~Rocky@user/rocky)
[06:44:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:54:47] *** Quits: forgotmynick (uid24625@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:07:22] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[07:10:40] *** Joins: Rockwood (~Rocky@user/rocky)
[07:43:24] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[07:57:48] *** Joins: pulse (~pulse@user/pulse)
[08:41:49] *** Quits: onichomp (~onichomp@2806:264:4404:8301:1007:f0a0:80cc:82fb) (Read error: Connection reset by peer)
[08:42:27] *** Joins: onichomp (~onichomp@2806:264:4404:8301:1007:f0a0:80cc:82fb)
[08:58:08] *** Joins: sfields_ (~sfields@2605:a601:adea:7a00:876c:3f04:3987:d13a)
[09:00:31] *** Quits: sfields (~sfields@2605:a601:adea:7a00:66bd:f7af:8a04:1b90) (Ping timeout: 245 seconds)
[09:12:18] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[09:14:20] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[09:19:46] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 260 seconds)
[09:26:32] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[09:29:48] *** Joins: _Andrew (~andrew@user/andrew/x-3325075)
[09:33:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:33:38] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:40:07] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[09:44:47] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 264 seconds)
[09:45:21] *** Joins: shokohsc86 (~shokohsc@174.197.23.93.rev.sfr.net)
[09:50:31] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[09:54:28] <FloridaMan> What are some of the good resources for video tutorials for intermediate-level devs? I'm coming from many other languages in my past, so I don't need stuff like "here's what a variable is" or "here's what a class is" and that type of thing. Maybe videos about differences in PHP compared to other languages, or even just good YouTube channels for PHP
[09:54:28] <FloridaMan> devs
[09:57:51] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:02:42] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[10:04:10] *** Joins: WishBoy (~WishBoy@user/wishboy)
[10:17:11] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 264 seconds)
[10:31:06] *** Joins: vit (~vit@chello085216193138.chello.sk)
[10:35:56] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[10:38:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:57:34] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:40:42] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 260 seconds)
[11:48:39] *** Joins: deltab (~deltab@user/deltab)
[11:58:28] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[12:03:06] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[12:44:30] *** Quits: relipse (sid16131@tinside.irccloud.com) (Ping timeout: 256 seconds)
[12:45:23] *** Quits: echoSMILE (uid504326@user/echosmile) (Ping timeout: 264 seconds)
[12:45:32] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[12:47:26] *** Joins: relipse (sid16131@tinside.irccloud.com)
[12:48:59] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 264 seconds)
[12:49:03] *** Joins: echoSMILE (uid504326@user/echosmile)
[12:49:20] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[12:49:36] *** Quits: Beryllium (sid186414@lymington.irccloud.com) (Ping timeout: 256 seconds)
[12:50:09] *** Quits: genomc (uid245282@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[12:50:09] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[12:52:15] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[12:53:23] *** Joins: Beryllium (sid186414@lymington.irccloud.com)
[12:53:30] *** Joins: genomc (uid245282@hampstead.irccloud.com)
[12:54:18] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[12:54:59] *** Quits: paladox (sid373195@wikimedia/paladox) (Ping timeout: 264 seconds)
[12:57:06] *** Joins: paladox (sid373195@wikimedia/paladox)
[12:58:05] *** Quits: genomc (uid245282@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[12:58:45] *** Joins: genomc (uid245282@hampstead.irccloud.com)
[13:10:02] *** Joins: tester12 (~tester12@5.119.56.209)
[13:10:13] <tester12> Hi freinds
[13:10:21] <tester12> How R U
[13:10:31] <tester12> I have an bad issue
[13:12:49] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[13:19:29] <novns> tester12, condolences
[13:20:42] <novns> tester12, as you don't tell what is this issue, no one can help you
[13:21:43] <novns> FloridaMan, videos are not good resources, articles are much better
[13:22:22] <novns> and there are lot of them
[13:25:39] *** Joins: lembron (~admin@user/lembron)
[13:25:40] *** Joins: vlm (~vlm@user/vlm)
[13:26:52] <tester12> On one of the PHP pages in my project, I have defined a variable called Temp_array, which receives the values ​​of a variable named member_form_docs from the session. The file stores the title of the document andfile name and the record number, and if a record or row is deleted, it is replaced with an empty value as follows.
[13:26:52] <tester12>   $ Temp_array[$i] = ""
[13:26:53] <tester12> $i Is the index number of the row to be deleted. (The story of this method of deleting information is long and please do not do anything because of this method. :-D  )
[13:26:53] <tester12> Currently, my problem is that in the temp_array variable, a column with the title of index must be added for each row or record, and if that row or record is deleted and has an empty value and is not an array, the following error or warning is displayed. What do you think is the best way to fix this warning?
[13:26:54] <tester12> ( ! ) Warning: Illegal string offset 'index' in ...
[13:28:47] <tester12> It took me a while to properly explain and write it. Oh how hard it was to write a proper explanation '=D
[13:29:23] <lembron> tester12 and yet, "a column with the title of index must be added for each row or record" doesnt make any sense :D - got any code? nopaste pls...
[13:29:23] <tester12> novns
[13:29:32] <AllenJB> Why do you use an empty string for deleted? It would be better to use null or unset the array index completely - then you could use key exists / null coalesce to avoid warnings about missing values.
[13:30:29] <lembron> (and array(1=>"", 2=>"", 3=>"yay") is totally valid, so that kinda shouldnt be the root of your issue)
[13:30:42] <AllenJB> Ideally arrays should hold a single type (this might be an array). Mixing types is always going to make your code more complex.
[13:31:24] <AllenJB> lembron: But (as I read the problem) they're then trying to do $arr[1]['tlte'] - which isn't valid because $arrt[1] is a string, not an array.
[13:31:49] * AllenJB wonders how he managed to mistype 'title' so badly
[13:31:51] <lembron> tester12 or do you mean you have array(1=>array("some"=>"field"), 2=>"", 3=>array("some"=>"field")) ?
[13:32:08] <lembron> then you should likely fence it first with is_array - and then again with array_key_exists...
[13:32:59] <tester12> lembron example:  temp_array[2]==> title=idCard file_name=43gfh5g4kf.jpg (add index column )==> index=0094560
[13:34:21] <tester12> AllenJB the explanation of this is long, in a short way, beacause of count of deleted records for some reason and make a sequence
[13:35:00] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[13:35:27] <lembron> lemme ask differently - if thats an excel file, what do you expect in the end? -- either you keep the "row" to write the index in it, or everything moves up - not having a row(emty string as pposed to having an empty-array at this point) is the ""delete" variant
[13:35:35] <tester12> lembron my temp array is like your example (1=>"", 2=>"", 3=>"yay")  but have this warning that disturb me
[13:37:00] <lembron> speaking of arrays tho - is there anything to "inline filter an array" - array('bla', '#mo', 'mi') and i want to "remove #mo" or "only keep bla/mi" - in generic php no problem - but as nifty oneliner?
[13:37:11] *** Quits: onichomp (~onichomp@2806:264:4404:8301:1007:f0a0:80cc:82fb) (Ping timeout: 245 seconds)
[13:37:21] <lembron> say i read file() and want to stip comments or so
[13:37:32] <tester12> or better ex is it:  (1=>"", 2=>"", 3=>"array(1,2,3)")
[13:37:55] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[13:38:20] <tester12> '=( '=(
[13:38:36] <tester12> why you make it complex?
[13:38:54] <lembron> tester12 best you throw code and example on a pastebin
[13:39:16] <lembron> (oh and my post above has nothing todo with your question, dont get confused^^)
[13:39:22] <tester12> the temp array is like that
[13:39:24] <tester12> (1=>"", 2=>"", 3=>"array(1,2,3)")
[13:40:37] <tester12> and when I want add index to make it like (1=>"", 2=>"", 3=>"array(1,2,3,index)") I have warning for previous empty cells
[13:41:50] <tester12> I yhink if I go on sofa is better '=D
[13:42:51] <tester12> goodbye
[13:49:42] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[14:03:15] *** Joins: Simplar (~quassel@188.163.92.225)
[14:06:03] <lembron> neat =) implode("", array_filter(file($file), function($v, $k) { return substr( trim($v), 0, 1 ) !== "#"; }, ARRAY_FILTER_USE_BOTH)))
[14:15:58] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 268 seconds)
[14:22:07] *** Quits: shokohsc86 (~shokohsc@174.197.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[14:23:53] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:25:39] *** Joins: shokohsc86 (~shokohsc@174.197.23.93.rev.sfr.net)
[14:34:19] *** Joins: pulse (~pulse@user/pulse)
[14:39:27] *** Quits: tester12 (~tester12@5.119.56.209) (Quit: Client closed)
[14:40:37] *** Quits: _Andrew (~andrew@user/andrew/x-3325075) (Quit: Leaving)
[14:44:29] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[14:45:03] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[14:49:09] *** Quits: scara (~user@user/scara) (Ping timeout: 276 seconds)
[14:53:35] *** Joins: scara (~user@user/scara)
[14:53:45] *** Joins: Xavier7 (~O_o@179.6.138.143)
[14:54:13] *** Joins: genom (~g@37.214.32.238)
[15:13:21] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:15:25] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:16:04] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[15:16:47] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[15:21:06] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:23:41] *** Joins: ms49434 (~ms49434@user/ms49434)
[15:26:58] *** Joins: iio7 (~iio7@user/iio7)
[15:27:21] *** Joins: freeworld (~cracker@chello085216193138.chello.sk)
[15:28:26] <iio7> Generally it is recommended to use a persistent cookie with a token for a "Remember me" functionality. Can someone explain to me why you cannot simply use a long expiration for a session cookie instead?
[15:30:30] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:31:14] <ss23> What is a "session cookie" in this context, iio7?
[15:31:37] <ss23> If you mean the cookie created by PHP sessions automatically, they are removed from the browser when it is closed, so don't work for remember me
[15:32:26] <iio7> I mean the cookie created by PHP sessions automatically. But it doesn't get removed from the browser when it is closed if you set an expiration for say a week.
[15:33:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[15:33:33] <ss23> How are you setting the expiration on it, sorry? I didn't think there was an expiration option you could set on session_start, other than how long PHP keeps it around (not the browser)
[15:33:37] <ss23> Been a while since I've looked through
[15:35:03] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[15:35:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:36:10] *** Quits: CapitalistPunk (~Capitalis@liledevil.xs4all.nl) (Remote host closed the connection)
[15:38:44] <iio7> If I use this code https://zerobin.net/?1a7938ba16605942#dyFRdH3FpEFoFcK8+5hd7qIsjDLXE75bJ06qDUtSsnk=
[15:39:56] <iio7> This will last a week and is respected by the browser, unless the user has set his browser to delete all cookies when closing (which would also close a persistent cookie anyway).
[15:40:00] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:40:29] *** Quits: freeworld (~cracker@chello085216193138.chello.sk) (Remote host closed the connection)
[15:41:40] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[15:44:03] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:45:00] <iio7> On PHP net it says, "Developers must not use long life session IDs for auto-login because it increases the risk of stolen sessions.", and then it says, "Use a secure one time hash key as an auto-login key using setcookie()." i.e. a persistent cookie. I cannot understand how that increases the security. The same path/httponly/secure/SameSite cookie attributes must be set for security, as with the session cookie.
[15:46:19] *** Joins: freeworld (~cracker@chello085216193138.chello.sk)
[15:49:47] <novns> iio7, btw, you can save remote IP address in a session, and delete this session if that address was changed
[15:50:54] <TinoDidriksen> Don't do that. Remote IP changes far more often than you'd think.
[15:51:01] <novns> sure
[15:51:10] <novns> but it's safer
[15:51:48] <TinoDidriksen> It would inconvenience a lot of legitimate users who'd have to log in again and again.
[15:52:35] <novns> add a checkbox on the login form "[X] remember my IP address"
[15:52:50] <novns> and let users decide
[15:53:09] <biberu> what would that mean to the average user? and what are you actually protecting against?
[15:53:13] <TinoDidriksen> Users are not that informed.
[15:53:41] <TinoDidriksen> Roaming IPs are just too common, even for DSL/cable connections.
[15:53:44] <novns> biberu, to an user it means no one can use his stolen cookie on a different computer
[15:54:35] <biberu> someone would have to be able to steal the session id for that to be a concern, at that point, what's to prevent them from abusing that capability to create a new session for the desired IP?
[15:55:09] <novns> you have to know login/password to create to a new session
[15:55:22] <novns> cookie is not enough
[15:55:57] <biberu> but if they can steal a cookie they're probably in a position to either steal the login or trick the user into making one for them
[15:56:21] <TinoDidriksen> As long as you're using HTTPS and marking the cookies secure and httponly, then stealing the cookie is quite hard.
[15:56:35] <biberu> indeed
[15:56:36] <novns> biberu, that's not so relevant
[15:57:49] <biberu> because?
[15:58:34] <novns> because a cookie could be stolen in an injected javascript or something
[15:58:58] <biberu> that's why you should make it http only
[15:58:58] <novns> and login/password requires the user interaction
[15:59:20] <biberu> and if someone can deliver arbitrary scripts to your users you already lost
[15:59:32] <biberu> they could just fake another login dialog or whatever
[15:59:48] <biberu> so what are you actually protecting yourself against?
[16:00:13] <iio7> That is why I don't understand why it is recommended to use a onetime hash with setcookie(), because if you make sure your site only works with HTTPS and httponly is set then JS cannot access the session cookie.
[16:01:02] <iio7> I cannot understand how setting a persistent cookie with a hash is more safe than a session cookie (when setup with the proper security options).
[16:01:16] <TinoDidriksen> It's not. The docs could simply be outdated.
[16:01:53] <TinoDidriksen> As long as you server-side expire inactive sessions after a reasonable time.
[16:01:55] <iio7> TinoDidriksen, I was thinking that exact thought when you wrote that. Perhaps the docs relates mostly to when HTTPS was not widely deployed.
[16:04:10] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[16:04:58] <novns> iio7, it's still safer to use onetime hash because you cannot reuse it
[16:05:07] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[16:05:19] <novns> you get a new one on each request
[16:05:56] <iio7> But isn't that the same as re-generate the session ID on each request?
[16:06:53] <biberu> that can also inconvenience users (and you), what if someone e.g. opens multiple tabs, or you need to create secondary requests for a user?
[16:06:59] <novns> iio7, no, because old sessions are still there
[16:07:15] <novns> iio7, so old session ID is still valid for some time
[16:07:24] <novns> until it expires
[16:08:47] *** Quits: freeworld (~cracker@chello085216193138.chello.sk) (Ping timeout: 264 seconds)
[16:11:33] <iio7> biberu, wouldn't that be the same with a hash token that changes on each request?
[16:11:52] <novns> iio7, an one-time key cannot be reused ever.  session IDs can be reused even if you generate new ones
[16:12:11] <novns> that's what they mean in docs
[16:13:00] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[16:13:18] *** Joins: de-facto (~de-facto@user/de-facto)
[16:13:49] <novns> though no one ever has followed their recommendation, I believe
[16:51:47] *** Quits: iio7 (~iio7@user/iio7) (Quit: Leaving)
[16:57:43] *** Joins: magla (~gelignite@55d45814.access.ecotel.net)
[17:03:37] *** Quits: luva (~luva@146.70.62.252) (Quit: Byebye)
[17:04:12] *** Joins: luva (~luva@146.70.62.252)
[17:13:47] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[17:14:03] *** Joins: de-facto (~de-facto@user/de-facto)
[17:15:32] *** Joins: iio7 (~iio7@user/iio7)
[17:17:22] *** Quits: iio7 (~iio7@user/iio7) (Client Quit)
[17:31:27] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:32:48] *** Quits: Simplar (~quassel@188.163.92.225) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:33:07] *** Joins: Hiccup (cHoy@user/hiccup)
[17:34:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[17:54:47] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:58:26] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[18:12:48] *** Quits: Xavier7 (~O_o@179.6.138.143) (Quit:  IRcap  8.72 )
[18:13:09] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[18:25:05] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:30:26] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[18:47:07] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[19:01:32] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:06:01] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[19:06:14] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[19:12:17] <FloridaMan> novns: do you have any go-to article sources?
[19:12:18] *** Joins: echoSMILE (uid504326@user/echosmile)
[19:12:53] <FloridaMan> I could do a Google search but there's no telling how much crap that I will have to read
[19:13:01] <FloridaMan> In order to get to one good article
[19:13:48] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[19:13:54] <novns> FloridaMan, https://phptherightway.com/
[19:14:05] <FloridaMan> Thanks!
[19:14:59] <FloridaMan> I already identify with the first sentence
[19:15:04] <FloridaMan> "There’s a lot of outdated information on the Web that leads new PHP users astray, propagating bad practices and insecure code."
[19:16:23] <novns> FloridaMan, but I would suggest you to skip php, and learn something better instead
[19:16:29] <novns> FloridaMan, http://learnyouahaskell.com/chapters
[19:16:35] <novns> for example
[19:16:52] <FloridaMan> I know quite a few languages already. This is for work.
[19:17:17] <__adrian> if you're already familiar with programming in general, then phptherightway is a good resource
[19:17:30] <FloridaMan> Nice.
[19:17:44] <__adrian> and of course, php.net
[19:18:49] <FloridaMan> Yeah I've been using that for more of the specific questions. Content is understandably dry though.
[19:19:09] <__adrian> it's a reference manual. but that's definitely a thing that you need.
[19:19:16] <FloridaMan> Yep
[19:20:35] <FloridaMan> Started a job recently that uses Laravel for the backend, and the last PHP experience I had was a long time ago before OOP with PHP was even a thing (which should tell you how long ago it was)
[19:21:54] <__adrian> learn the language first. but once you've got the basics, laravel does have a lot of tutorials/reference material.
[19:22:50] <Blondie101010> can't imagine videos being any way efficient to show programming language syntax
[19:24:47] <__adrian> some people learn from videos
[19:24:56] <__adrian> i don't but some people do
[19:25:32] <Blondie101010> sure, but syntax?
[19:25:47] <FloridaMan> __adrian: yeah we have a lot of paid licenses for things like Laracasts. Learning the framework is the easy part for me. Now I'm just getting used to things that are PHP particulars, such as traits, for example
[19:26:07] <__adrian> traits are copy+paste
[19:26:10] <__adrian> that's all
[19:26:18] <FloridaMan> Yep
[19:26:36] <FloridaMan> That's an example of the sort of things I'm trying to learn though
[19:26:55] <__adrian> in practice, most people don't use them at all and it works out fine
[19:27:05] <FloridaMan> I understand programming and OOP programming already, it's just the particulars
[19:27:21] <__adrian> if you are using them, then a common + practical use case is shared implementation for interfaces
[19:29:37] <Blondie101010> I usually like inheritance for that
[19:30:08] <__adrian> depends. that's the more-ingrained solution in php, yeah.
[19:31:21] <__adrian> most ways php coders end up using traits have better solutions
[19:31:34] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 260 seconds)
[19:32:37] *** Joins: luva (~luva@45.141.152.36)
[19:32:42] <FloridaMan> The standard library seems like something worth giving into also. Probably can help me understand what's already available
[19:32:51] <FloridaMan> Diving into*
[19:32:55] <__adrian> mmmmmmmmmm.....
[19:33:06] <__adrian> spl ha sa few useful classes, but mostly no
[19:33:24] <FloridaMan> Interesting
[19:36:05] <FloridaMan> When using Go, I was using almost solely the standard library as opposed to outside packages and it was helpful to know. I guess the SPL must be pretty slimmed-down in favor of outside packages?
[19:36:42] <Blondie101010> not intentionally
[19:37:39] <__adrian> spl was  alate-php5 addition
[19:37:59] <__adrian> a good potion of it was not well implemented, some was good but better stuff came along in php7, etc.
[19:38:39] <FloridaMan> Gotcha
[19:39:25] <__adrian> the core language has the useful basics you night be looking for
[19:42:08] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[19:42:16] <novns> except generator expressions
[19:42:26] <novns> those are not yet
[19:43:10] <FloridaMan> Woo. UTF seems fun already
[19:43:17] <FloridaMan> Heh
[19:46:20] <biberu> safe text handling is fun in any language
[19:46:29] <__adrian> re: charsets: php doesn't have charsets
[19:47:03] <__adrian> there are functions that understand charsets, but strings are just byte arrays.
[19:48:45] *** Joins: pulse (~pulse@user/pulse)
[19:48:50] <FloridaMan> biberu: indeed
[19:49:28] <novns> https://wiki.php.net/rfc/comprehensions
[19:50:05] <novns> this one would be nice, but who knows how many years it will be discussed
[19:54:27] <biberu> novns: xs |> filter |> map
[19:54:57] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[19:55:52] <__adrian> back to the SPL - FilesystemIterator, GlobIterator, SplHeap, SplObjectStorage, SplFileInfo/Object, and the Exceptions are generally useful
[19:58:00] <__adrian> and the autoloader, of course, but you generally won't need to / shouldn't implement your own
[19:59:41] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[20:10:46] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[20:15:33] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[20:21:55] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[20:26:31] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[20:31:31] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 268 seconds)
[20:42:05] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[20:46:49] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[20:50:25] *** Joins: Rockwood (~Rocky@user/rocky)
[20:55:24] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[20:56:14] *** Joins: pulse (~pulse@user/pulse)
[20:56:53] <gde33> Where can I learn the right approach for validating user data? Things like name, password, email, form signature, web link etc
[20:57:51] <Rockwood> gde33, just think about what should be there that is correct way
[20:58:01] <__adrian> keep it simple. first thing you need to know is your rules on what's acceptable. you can figure out how to test input from there. keep input that's good, reject input that's bad.
[20:58:17] <Rockwood> __adrian, hi how are you sir?
[20:58:22] <__adrian> hi
[20:58:35] <Rockwood> you busy always
[20:58:40] <Rockwood> :D
[20:58:46] <__adrian> usually
[20:58:52] <Rockwood> why :D
[20:59:02] <__adrian> would be boring if i wasn't
[20:59:14] <gde33> I don't see a reason to think my rules would be a secure solution, inclusive enough and uses the right approach
[20:59:18] <Rockwood> why not friend?
[20:59:39] <Rockwood> gde33, make sure what you need there?
[20:59:54] <gde33> tutorials are like /^[a-zA-Z0-9]+$/ which frankly seems silly?
[21:00:01] <gde33> (for user names)
[21:00:03] <Rockwood> no need
[21:00:12] <novns> gde33, you can start with filter_var()
[21:00:20] <Rockwood> make it string
[21:00:22] <novns> https://www.php.net/manual/en/filter.filters.validate.php
[21:00:25] <Rockwood> that just
[21:00:34] <Rockwood> lol
[21:00:39] <novns> there are some ready filters are available
[21:00:52] <Rockwood> novns, no need
[21:00:52] <novns> like FILTER_VALIDATE_URL
[21:01:25] <novns> Rockwood, of you have to write weird regular expressions
[21:01:42] <Rockwood> novns, no need that is
[21:02:12] <novns> Rockwood, how would you check if a string is a valid URL?
[21:02:23] <Rockwood> lol
[21:02:28] <Rockwood> silly question
[21:02:39] <novns> Rockwood, show your smart answer
[21:02:51] <Rockwood> novns, just see what i am passing
[21:03:03] <biberu> gde33: usually you need a bunch of checks on e.g. textual data, so having a library that lets you build, compose, and reuse rules helps
[21:03:06] <novns> exactly?
[21:03:40] <gde33> biberu: its about the adventure!
[21:03:44] <Rockwood> validation depends on frontend first then backend
[21:04:15] <novns> Rockwood, you cannot trust frontend
[21:04:16] <Rockwood> lol
[21:04:27] <Rockwood> novns, why not?
[21:04:41] <gde33> just do it again on the back end
[21:04:43] <biberu> gde33: e.g. is it a string, is it valid for my expected encoding, what about the unicode normalization form, does it match any other patterns etc.
[21:04:47] <Rockwood> i am not saying frontend is enough
[21:05:17] <Rockwood> novns, do you listened __adrian sir?
[21:05:21] <novns> Rockwood, just show your smart solution to check if a string is a valid URL
[21:05:38] <gde33> novns: file get contents :P
[21:05:41] <biberu> gde33: you can write it yourself if that's what you mean, just saying that repeating all that stuff for each field will quickly become hard to maintain
[21:05:47] <Rockwood> i am not working for you just keep you mind open
[21:05:53] <Rockwood> your
[21:06:23] <novns> Rockwood, then please keep silence if you just argue without any examples
[21:06:52] <Rockwood> novns, don't be rude here
[21:06:57] <novns> gde33, opening an URL to check if it's valid is a wrong way
[21:07:02] <Rockwood> i am not your servant
[21:07:30] <novns> Rockwood, you are a troll, goodbye
[21:07:36] <__adrian> "gde33> tutorials are like /^[a-zA-Z0-9]+$/ which frankly seems silly?"  depends. but tutorials, taken without context, and without regard to _your_ needs, yes - that's a wrong approach.
[21:07:39] <gde33> biberu: rolling my own I ended up with something like /[^:()@\[\]\/\p{L}\p{N}\s\r]+/iu for all input which made me wonder what the actual right approach is.
[21:07:40] <__adrian> chill, folks
[21:07:53] <__adrian> gde33: you MUST start with your needs/rules
[21:08:08] <Rockwood> __adrian, he question making silly conversion
[21:08:11] <Rockwood> his
[21:08:15] <__adrian> you can't do it right without knowing what you rules are. pick an input as an example, and let's find out what rules you need for it.
[21:08:21] <gde33> __adrian: in general or per item specifically?
[21:08:25] <__adrian> per item
[21:08:31] <__adrian> there's no "general" validation
[21:08:40] <Rockwood> string is string every where
[21:08:43] <__adrian> you cannot validate something without knowing what it should be
[21:08:58] <biberu> gde33: like __adrian said it depends on your rules, but I'll note that you can't even run that without checking if you have a valid(!) string first
[21:09:08] <novns> gde33, https://www.php.net/manual/en/filter.filters.validate.php
[21:09:14] <novns> this is where you can start
[21:09:19] <__adrian> filters are a good general start
[21:09:27] <Rockwood> novns, just listen and try to understand
[21:09:35] <novns> and if it's not enough, you can write your regular expressions
[21:09:36] <gde33> ok, lets read some of that first :)
[21:09:41] <__adrian> note, the FILTER_VALIDATE_* filters, not the FILTER_SANITIZE_* filters. don't use those.
[21:09:55] <Rockwood> novns, no need what i am again saying
[21:10:29] <gde33> what are good requirements for a password?
[21:10:43] <__adrian> gde33: printable characters, at least 12-16 bytes long.
[21:10:57] <__adrian> if you want to enforce complexity, then a tool like zxcvbn
[21:10:58] <gde33> say, all the same is fine?
[21:11:12] <__adrian> https://github.com/dropbox/zxcvbn
[21:11:44] <__adrian> just the readme will give you a good idea of "password validation"  ;)
[21:12:14] <Rockwood> novns, don't target on good persons like __adrian sir
[21:12:21] <gde33> __adrian: seems fantastic
[21:12:53] <novns> Rockwood, please stop spamming me privately
[21:12:54] <__adrian> Rockwood: don't worry about it
[21:12:57] <da_wunder> for passwords just use some long sentence, that should cover you quite well
[21:13:27] <novns> Rockwood, show your example please, how would you do this
[21:13:47] <Rockwood> novns, stop you mouth
[21:13:51] <Rockwood> dammit
[21:13:55] <novns> Rockwood, and no bullshit about "frontend/backend" please
[21:13:55] <Rockwood> go to hell
[21:13:56] <biberu> gde33: a library like that might help you with the implementation of one of your validators, not how they all work together
[21:14:18] <biberu> Rockwood, novns: please
[21:14:19] <Rockwood> novns, you know what is programming
[21:14:27] <gde33> biberu: its great if one wants to get it "absolutly" right
[21:14:30] <Rockwood> he is stupid
[21:14:46] <__adrian> Rockwood: take a break
[21:14:48] <biberu> you (both) aren't constructive, drop it
[21:14:53] <gde33> I wonder if users should be picking passwords at all
[21:14:55] <novns> biberu, arguing without real arguments is weird
[21:15:01] <__adrian> there's no need for this fight.
[21:15:20] <__adrian> Rockwood: novns: let it go.
[21:15:31] <biberu> take a breather, whatever you're arguing about isn't worth the time and effort
[21:15:33] <Rockwood> sir he insulted me
[21:15:40] <novns> __adrian, there;s no fight, I'm just asking how would Rockwood do it if he tells "no need"
[21:15:42] <__adrian> Rockwood: that _happens_ sometimes
[21:16:01] <__adrian> let it go.
[21:16:04] <gde33> its 2021 we cant even validate urls -.-
[21:16:29] <Rockwood> i am not wrong in any corner
[21:16:33] <Blondie101010> gde33:  for my part, I consider that testing the URL is probably the ultimate best way to make sure it is valid, but you should start with more basic checks
[21:16:54] <Rockwood> but i am getting silence
[21:16:56] <Rockwood> now
[21:16:56] <Blondie101010> and if the actual test causes issues, then you need to rate-limit and filter it
[21:17:07] <Rockwood> :( without my fault
[21:17:11] <Blondie101010> tshhh
[21:17:21] <biberu> gde33: yeah, what i mean is that while that library might be good for the password check it doesn't help you with the larger problem (and you'd typically want to isolate your code from third party interfaces too)
[21:17:36] <__adrian> ^
[21:18:25] <gde33> right
[21:19:11] <da_wunder> and realize that users are usually stupid and they don't use strong passwords - no matter what you're trying to do
[21:19:35] <gde33> I think I'm just going to generate it for them and not allow them to make their own -.-
[21:19:55] <novns> da_wunder, this is how the natural selection works these days
[21:19:56] <da_wunder> I would not do that
[21:22:16] <da_wunder> I would just let users to choose their passwords, add some basic check like min lenght and that is all - for ui you could add some js script to show password "strength" - but really imho those passwords are users responsibility, not your
[21:23:10] <da_wunder> and if you're making those passwords for your users and they cannot change that, then _you_ are responsibility of those - and I really think that you don't want to walk that road
[21:23:28] <biberu> gde33: for the validation itself you want composability, reusability, individual rules can be implemented however is needed to fit into that
[21:28:17] <biberu> gde33: e.g. checking string length, matching against a regex, checking if that encoding is valid, if the password complexity meets your requirements, converting something to a number, checking it's range etc. etc. are all the same, and you probably want to use a bunch of rules for any given field
[21:28:34] <biberu> gde33: so what kind of interface would you like for that?
[21:34:40] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[21:35:32] <__adrian> yeah, don't choose people's passwords for them. if you have some requirement for complexity, then zxcvbn. if you don't, then use a good minimum length and get one of those "top 1000 passwords" lists as a blacklist.
[21:39:08] <__adrian> regarding an interface/pattern, there are many that already exist - you're most likely best of using one of those.
[21:39:44] <novns> btw, https://github.com/alexandrumos/cracklib_php
[21:39:49] <__adrian> i generally organize input validation in two steps: normalize, then the actual validation.
[21:40:02] <novns> a simple wrapper to the cracklib-check tool
[21:40:27] <novns> it's usually installed on your average linux system
[21:41:52] *** Joins: freeworld (~cracker@chello085216193138.chello.sk)
[21:42:01] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[21:45:15] *** Joins: minialien (~ash@86.127.137.112)
[21:45:41] <Rockwood> lol
[21:52:39] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Live long and prosper \v//)
[21:59:38] *** Quits: deksar (~deksar@user/deksar) (Quit: Going offline, see ya! (www.adiirc.com))
[22:00:21] *** Joins: ferdna (~ferdna@user/ferdna)
[22:08:38] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[22:12:03] *** Joins: deksar (~deksar@user/deksar)
[22:12:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[22:20:17] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[22:29:03] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[22:35:26] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[22:58:33] <Rockwood> good night
[23:01:57] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[23:04:56] *** Joins: Pixi (~Pixi@user/pixi)
[23:05:01] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[23:06:55] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 268 seconds)
[23:23:26] <relipse> when i visit blah.com/my/page.php it stays unsecured, but when i visit blah.com directly it forwards to https://www.blah.com , how do I force ssl
[23:24:36] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[23:28:09] <Blondie101010> it sounds like a flaw in your redirect
[23:28:25] <Blondie101010> check with your system admin or HTTP service support
[23:29:07] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 268 seconds)
[23:36:51] <biberu> might also want to enable hsts
[23:37:49] <biberu> the redirect should be fixed either way ofc
[23:58:58] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 260 seconds)
