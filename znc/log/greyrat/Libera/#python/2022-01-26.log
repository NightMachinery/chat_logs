[00:00:03] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:e9f8:1cd9:c82f:8a47) (Ping timeout: 268 seconds)
[00:00:11] <NoImNotNineVolt> equations? or expressions?
[00:00:21] <NoImNotNineVolt> the example you provided earlier was not an equation.
[00:00:52] <monkeyPlus> equations
[00:01:02] <monkeyPlus> like 3x + 6x , 3 can be in evidence
[00:01:08] <monkeyPlus> 3(x + 3x)
[00:01:10] <monkeyPlus> oops
[00:01:31] <monkeyPlus> 3x(1+2)
[00:01:43] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:01:46] <NoImNotNineVolt> so, that's not an equation, because there is no equals sign.
[00:01:52] <Adoi> Wooble, but, likewise, for the case that  it doesnt start with slash, what is the sense of putting *.*" before http? is there any chance there is ".http" among links?
[00:01:56] <NoImNotNineVolt> it's an expression. and i think you're talking about factoring out the 3.
[00:01:56] <SnoopJ> monkeyPlus, you might be interested in sympy if you are interested in manipulating mathematical symbols
[00:02:04] <Adoi> or ..http
[00:02:06] <exarkun> monkeyPlus: So in the case of `3x + 6x` you're looking for `3x`?
[00:02:07] <theseb> exarkun: are you still doing haskell?
[00:02:15] <exarkun> theseb: As much as I can
[00:02:17] <monkeyPlus> no looking to see if they have the same factor
[00:02:30] <exarkun> theseb: Which is very little because it takes all of my time to keep my Python from sinking into the swamp
[00:02:32] <monkeyPlus> just to simplify calculaus..it is used in equations as well
[00:02:33] <NoImNotNineVolt> 3x is a common factor in the expression 3x + 6x, and so it can be factored out to give you the expression 3x(1 + 2)
[00:02:36] <monkeyPlus> and expression i guess
[00:02:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[00:02:39] <theseb> exarkun: you like it? job possibilities? more interesting than python?
[00:02:39] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:e90c:8a2e:7515:668a) (Quit: Client closed)
[00:02:42] <Wooble> Adoi: .* matches anything. my guess above was a proxy prefix but maybe the author just messed up, no idea.
[00:02:51] <exarkun> theseb: Some people like swamps I think
[00:02:54] <exarkun> theseb: no judgement
[00:03:02] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[00:03:10] <theseb> exarkun: i know it is solid from a security standpoint....wish haskell was more popular since design is so solid too
[00:03:12] <NoImNotNineVolt> are you looking for a tool to identify common factors in mathematical expressions?
[00:03:13] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[00:03:25] <exarkun> theseb: I built a Haskell job with my pre-existing employer, I didn't try to get hired into a Haskell position, so I dunno much about the job market.
[00:03:41] <NoImNotNineVolt> e.g. find_factors('3x + 6x') would return '3x'?
[00:03:41] <Adoi> oh yes, right, it matches anything, but still nothing exists in front of http
[00:03:48] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:e90c:8a2e:7515:668a)
[00:04:05] <exarkun> theseb: But yea I still like Haskell and wish I could do more with it
[00:04:05] <Wooble> Adoi: depends what you're looking for.
[00:04:43] <exarkun> Hm my pypy3 ci job just failed because: AttributeError: cdata 'PROCESS_INFORMATION *' has no field 'dwFlags' cool
[00:04:43] *** Quits: deepy (deepy@user/deepy) (Read error: Connection reset by peer)
[00:04:48] <Wooble> Adoi: my site here has a ton of links of the form https://some_proxy_host.com/?url=https://actual_site.com/
[00:04:57] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[00:05:02] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:05:09] <silverdeer> Is there a simple way to just view all the key values in an object's key value hierarchy?
[00:05:12] <monkeyPlus> NoImNotNineVolt, supposeluy
[00:05:17] <exarkun> Oohh but that's not even in my code, jeez, that's pip failing.
[00:05:21] *** Quits: someuser (~user@197.54.4.96) (Ping timeout: 256 seconds)
[00:05:24] <Adoi> Wooble, ah right..there are those kinds of links
[00:05:32] <monkeyPlus> in that case you can leave the x
[00:05:34] <Wooble> Adoi: (there's no reason we'd actually proxy internal links like that but *someone* might)
[00:05:37] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:05:40] <monkeyPlus> and just "put in evidence" the 3
[00:06:09] *** Joins: deepy (deepy@user/deepy)
[00:06:15] <Adoi> Wooble, but line 13 strips any such link to http:foo.com
[00:06:29] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[00:06:35] <Adoi> http://foo.com. sorry
[00:06:46] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:06:46] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[00:07:03] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[00:07:22] *** Quits: aknot (~aknot@2603:900a:1503:17bb:bb7b:2664:7e99:2ecf) (Ping timeout: 250 seconds)
[00:07:42] *** Joins: ttys000 (~ttys000@user/ttys000)
[00:07:48] <Wooble> Adoi: no it doesn't, that's just making a URL to put into the regex, nothing is beign stripped.
[00:08:02] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[00:08:27] <Wooble> Adoi: is this example code from a course? because I'm not sure the author really knows what they're doing :)
[00:08:50] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:09:09] <Wooble> like why are they checking href is not None when they literally found the link by searching for elements with href matching a regex?!
[00:09:32] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[00:09:39] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:09:50] *** Joins: mickey8 (~user@user/mickey)
[00:10:32] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[00:10:40] <Adoi> Wooble, this book; https://www.oreilly.com/library/view/web-scraping-with/9781491985564/
[00:11:55] <Adoi> same question for "/"; if we are going to sort out the lines with "/", why not do it already in line 16?
[00:11:59] <Wooble> huh, not even a packt press title.
[00:12:24] <Adoi> is it some kind of trust sign?
[00:12:45] <Wooble> Adoi: line 16 finds all of the links starting with / or containing the prefix you're looking for
[00:13:23] <Wooble> they're not really being "sorted out", although they were making them into absolute URLs using a fairly ugly method.
[00:13:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:2055:673d:3155:da63) (Ping timeout: 250 seconds)
[00:14:14] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[00:14:21] <Wooble> Like clearly they know urllib.parse exists but they just add urls with +
[00:14:45] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[00:15:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[00:15:20] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[00:15:32] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:15:49] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:16:11] *** Joins: esv (~esv@74.124.178.154)
[00:16:47] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[00:16:51] <Adoi> Wooble, if we mean the same, this is what I dont get all the time..to me, there shouldnt have been any addition of "includeUrl" anywhere until line 20
[00:17:09] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[00:17:26] <Adoi> which makes line 19 redundant
[00:17:41] <Wooble> Adoi: the find_all() call needs it because that's what they're searching for, and line 20 has it to normalize all the URLs to include the scheme/host
[00:17:51] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[00:18:15] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[00:18:46] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:18:57] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[00:18:57] <Wooble> Adoi: so if they find links to "/foo" and "https://example.com/bar" they'll return ["https://example.com/foo", "https://example.com/bar"]
[00:19:56] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[00:21:09] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::4)
[00:21:37] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[00:22:12] <Wooble> at least the book follows 4 chapters of slogging through manual parsing with scrapy so you can forget everything you learned :)
[00:23:02] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 240 seconds)
[00:23:22] *** Quits: magla (~gelignite@55d4ee32.access.ecotel.net) (Quit: Stay safe!)
[00:23:24] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[00:23:38] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[00:23:54] *** Joins: portalrat (~portalrat@user/portalrat)
[00:24:28] <Adoi> 4 chapters? I see one chapter with scrapy?
[00:26:19] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[00:26:21] *** Quits: portalrat (~portalrat@user/portalrat) (Client Quit)
[00:26:29] <Wooble> Adoi: there are 4 chapters before scrapy, I mean.
[00:27:14] <Wooble> presumably at that point you'll be like "wow web scraping sucks I can't believe I have to find all the internal links like this" and then they swoop in and save you with spiders.
[00:27:43] *** Joins: ld_ (~a0z1@141.98.252.169)
[00:28:05] *** Quits: ngp (~ngp@199.180.249.183) (Quit: connection reset by purr)
[00:28:14] *** Joins: ngp (~ngp@199.180.249.183)
[00:28:40] *** Quits: ngp (~ngp@199.180.249.183) (Client Quit)
[00:28:49] *** Joins: ngp (~ngp@199.180.249.183)
[00:29:01] *** Joins: Bakunin (~maplefing@user/lindis)
[00:29:03] <Adoi> ah, maybe it is the way the book planned the progress..there have been hints here and there at that
[00:29:17] *** Quits: nilson_ (~nilson@2601:c4:c431:a14:4601:bbff:feaf:9214) (Ping timeout: 240 seconds)
[00:29:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[00:30:02] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[00:30:17] <Adoi> so far the chapters were more about interacting with html via BeautifulSoup except this last part about extracting links.
[00:30:37] <Adoi> since I am new to the former as well, it was ok.
[00:31:14] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Quit: Textual IRC Client: www.textualapp.com)
[00:31:15] <exarkun> What does "tox -e py" do when tox.ini says "envlist = py37,py38,pypy3"?
[00:31:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[00:31:28] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[00:31:44] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[00:31:51] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[00:32:17] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[00:33:27] *** Joins: nilson_ (~nilson@98.242.70.201)
[00:33:56] <Wooble> exarkun: try it and see? I'd vaguely expect it to fail but I didn't try it.
[00:34:32] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:34:45] <exarkun> I tried it but I can't tell what it's doing from reading the output it produces
[00:35:16] <exarkun> It doesn't fail, it runs some environment
[00:35:25] <Wooble> as far as I can tell it's picking the highest version of cpython but I can't find it documented
[00:35:32] <exarkun> Maybe this is a link?  https://github.com/tahoe-lafs/zfec/runs/4943184253?check_suite_focus=true#step:5:1
[00:35:48] <sco1> If you use `tox -e` it doesn't look at envlist
[00:35:51] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[00:35:56] *** Joins: jay-m126 (~jay-m@154.72.167.249)
[00:36:01] *** Joins: jay-m126_ (~jay-m@154.72.167.249)
[00:36:02] *** Joins: jay-m1261 (~jay-m@154.72.167.249)
[00:37:20] <Wooble> sco1: then how does it know I didn't mean python 2? :/
[00:37:52] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:38:02] <NeilRG> you never mean python 2 :D
[00:38:03] <sco1> It doesn't, it just uses `python`
[00:38:52] <exarkun> Okay - so it will use ... whatever Python tox ran with?  Or whatever it finds on PATH that tox is running with?
[00:39:04] <sco1> See: https://tox.wiki/en/latest/config.html?#tox-environments
[00:39:33] <Wooble> but "python" *is* python2.
[00:39:40] <sco1> Maybe
[00:39:54] <Wooble> I mean in the environment I just ran it in now, where it used 3.8
[00:40:11] *** Quits: rapha (~jrs@46.4.31.69) (Changing host)
[00:40:11] *** Joins: rapha (~jrs@user/rapha)
[00:40:22] <sco1> Also https://tox.wiki/en/latest/config.html?#conf-envlist for lookup explanation
[00:40:38] <exarkun> The docs are *so close* to answering the question
[00:40:51] <exarkun> But then they don't say how basepython actually gets resolved.  I guess it must be PATH, though.
[00:41:20] <Wooble> exarkun: "python" in $PATH for me is definitely 2.7. the one tox ran with is plausible.
[00:41:39] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:42:05] <exarkun> Wooble: Oh, but it picked 3.8 in that test?
[00:42:10] <Wooble> yeah
[00:42:21] <exarkun> at this point, easier to just take tox out of this CI configuration
[00:43:23] <Wooble> or don't specify a vague version on the command line? :P
[00:43:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[00:43:53] <exarkun> sure, it _could_ be made to work with tox
[00:44:01] <exarkun> it's just easier to make it work without tox
[00:44:35] <Wooble> "py: The current Python version tox is using"  https://github.com/tox-dev/tox/blob/717b7644a2376c0178ad293c41c76ff6631bdc46/docs/example/basic.rst
[00:44:37] *** Joins: Pickchea (~private@user/pickchea)
[00:44:39] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:44:44] *** ozoned is now known as odoood
[00:45:31] <exarkun> Okay, so not PATH, but sys.executable probably?
[00:45:55] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[00:46:23] <Wooble> looks like it. I think in an envlist "py" might still mean "python" though; this seems specific to -e
[00:46:24] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:47:03] <Adoi> Wooble, are packt books qualitatively more dependable?
[00:47:51] *** Quits: md618 (~md618@90.192.131.73) (Ping timeout: 256 seconds)
[00:48:12] <Wooble> Adoi: no, they seem to be trash and I have no idea why o'reilly put them on their platform besides increasing title count.
[00:48:58] <Adoi> ah, i thought you might have meant the opposite above
[00:49:14] <Wooble> anecdotally the editors are super hands-off and you might as well be self-publishing in terms of the final product
[00:49:17] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[00:49:34] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[00:49:34] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[00:49:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:49:46] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d)
[00:51:03] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[00:51:05] *** Quits: bluedust (~bluedust@103.165.167.52) (Read error: Connection reset by peer)
[00:51:41] *** Joins: bluedust (~bluedust@103.165.167.52)
[00:51:44] <Adoi> right
[00:51:51] *** Quits: jay-m126_ (~jay-m@154.72.167.249) (Ping timeout: 268 seconds)
[00:51:51] *** Quits: jay-m126 (~jay-m@154.72.167.249) (Ping timeout: 268 seconds)
[00:52:13] <aphysically> Q_Q python 3.6 branch not on github anymore
[00:52:26] <SnoopJ> uvicorn falls back on asyncio by default if uvloop isn't present, right?
[00:52:28] *** Quits: jay-m1261 (~jay-m@154.72.167.249) (Ping timeout: 268 seconds)
[00:52:30] * Adoi is still busy with "includeUrl" :)
[00:53:10] <SnoopJ> aphysically, well, there's not any more development of that version, so...
[00:53:13] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[00:53:23] *** Joins: jay-m126 (~jay-m@129.0.76.215)
[00:53:26] *** Joins: odwtt (~odwtt@96.74.34.85)
[00:53:27] *** Joins: jay-m126_ (~jay-m@129.0.76.215)
[00:53:47] <aphysically> SnoopJ: yeah...... I'm working on backporting the 3.11 change to typing_extensions, which supports back through 3.6 atm, so I needed to glance at the state of the typing.py module in 3.6 :P
[00:53:55] *** Joins: jay-m1261 (~jay-m@129.0.76.215)
[00:54:11] <SnoopJ> aphysically, I guess you want the v3.6.15 tag then
[00:54:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:54:38] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[00:54:49] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:54:58] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Quit: harpia)
[00:54:58] <aphysically> ah, yeah
[00:56:25] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[00:57:29] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:57:34] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[00:59:14] <Adoi>     1^
[00:59:36] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[00:59:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[00:59:45] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[00:59:49] *** Quits: resmo (~resmo@2a00:d420:9:8a00:969e:b61e:cec:2144) (Read error: Connection reset by peer)
[01:00:06] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[01:00:26] <vladoski> is it possible to create a parametrised decorator that doesn't need to be called in the decorator definition (like @foo instead of @foo()) if I just wanna use default parameters?
[01:00:28] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d) (Quit: I have gone to sleep. ZZZzzz…)
[01:01:14] <BrenBarn> maybe, by checking the type of the argument
[01:01:24] <BrenBarn> but it could be a bit awkward
[01:01:48] <SnoopJ> yea, usually you check if the first positional arg is callable() and invoke your actual decorator on it if need be, otherwise it acts as a factory
[01:01:50] <Adoi> Wooble, thank you very much for your help and insights
[01:01:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[01:02:39] <Adoi> ssbr, thank you, too
[01:03:16] <vladoski> okay that's nice and works thanks
[01:03:35] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[01:03:36] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:03:50] *** Joins: resmo (~resmo@2a00:d420:9:8a00:8b5e:813f:8d45:7d7b)
[01:04:01] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:04:59] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[01:05:26] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:06:06] *** Joins: angular_mike_ (sid45533@id-45533.ilkley.irccloud.com)
[01:06:57] <angular_mike_> what should I use to remove non-alphanumerical characters from a string, with few exceptions? Basically a python version of this: `tr -cd '[:alnum:] \n.,"\'\''\;!?()-'`
[01:07:10] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[01:07:20] *** Joins: susam (~susam@user/susam)
[01:08:37] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[01:08:54] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 250 seconds)
[01:09:02] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[01:09:08] <phy1729> str(c for c in input if c in {...})  perhaps
[01:09:29] <angular_mike_> phy1729: would that work with any unicode characters?
[01:09:44] <phy1729> bah guess one has to ''.join(
[01:12:25] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[01:13:17] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489hj5pbcngep5p.ipv6.telus.net)
[01:13:49] <grawity> you basically have most of a regex already, sore.sub()?
[01:13:55] <grawity> *so re.sub()
[01:14:42] <phy1729> huh I don't think the docs specify anywhere that the sequence operations on strings are over the constituant unicode glyphs
[01:14:43] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[01:15:19] <angular_mike_> grawity: it's tr, because it is supposed to be more efficient than sed for this kind of task
[01:15:31] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:6816:2795:9c3:9492)
[01:15:35] <grawity> phy1729: not in the first paragraph of https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str ?
[01:15:36] <BrenBarn> phy: as opposed to what?
[01:15:37] <phy1729> Ah guess "Strings are immutable sequences of Unicode code points."  counts
[01:15:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:15:44] <angular_mike_> and it is only supposed to remove characters, I read that for simple stuff you shouldnt need to use re
[01:15:59] <grawity> angular_mike_: eh I don't think a compiled regex is that inefficient
[01:16:14] <angular_mike_> well, iniefficient in readability compered to replace()
[01:16:15] <phy1729> BrenBarn: well codepoints aren't glyphs, so it's slightly different than I assumed.
[01:16:16] <angular_mike_> for excample
[01:16:26] <grawity> angular_mike_: for short strings, not exec'ing an external tool is already a huge efficiency gain
[01:16:41] <grawity> much more so than avoiding a regex
[01:16:42] <angular_mike_> yeah that's why i am rewriting in python
[01:17:05] <grawity> so python -m timeit the two approaches
[01:17:20] <angular_mike_> time how long it takes me to read it?
[01:18:34] <exarkun> yes, then find 60 other people and time half of them reading one and half reading the other
[01:18:46] *** Joins: qlixed (~qlixed@181.44.129.13)
[01:19:04] <phy1729> then write docs and time them reading the docs instead
[01:19:10] <angular_mike_> lol, I doubt anyone but me is going ot read it
[01:19:19] <exarkun> students t test will help you approximate the mean of each distribution and chi squared analysis will let you estimate the probability of a certain difference in those means
[01:19:30] <angular_mike_> maybe one more person for non-critical need
[01:19:35] <exarkun> then publish
[01:19:38] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[01:19:38] <exarkun> finally, profit
[01:19:40] <grym> let's p-hack code reviews
[01:19:57] <angular_mike_> so why would i need to time other people when only my own reading is relevant
[01:20:01] <exarkun> you could receive literally dozens of dollars in grant money for a follow-up study
[01:20:18] <grym> angular_mike_: experimenter bias!
[01:20:27] <exarkun> angular_mike_: a single measurement of yourself is an extremely noisy, error-y measurement
[01:20:30] <angular_mike_> here bias is valid
[01:20:36] <exarkun> maybe you have gas that day, who knows
[01:20:58] <angular_mike_> still that would be a nargument for measuring myself on different day rather than other people who are even more different
[01:21:00] <exarkun> you need to know how easily a uniform angular_mike_ of radius r can understand this material
[01:21:21] <exarkun> sorry I'm done now
[01:21:47] <not_not> python whoeeeew
[01:22:23] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:22:49] <not_not> guys anyone know a python that assembles x86_64 assembly code?
[01:23:11] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:23:31] <dude-x> anyone know how to get python3.9 to run in circle ci on windows
[01:24:17] <mawk> is there a way to do a remote python session? like I have a way to run python expressions in one program, and I want to use jupyter on it
[01:24:17] *** Joins: zoooz (~zoooz@204.43.245.164)
[01:24:19] <zoooz> hello everyone
[01:24:24] <not_not> making some crazy spaghetti thing where python strings holding c programs to be compiled and ye basically p
[01:24:29] <mawk> can I like start a jupyter kernel manually in the context of the program?
[01:24:35] <not_not> zoooz: hii
[01:24:52] <not_not> exarkun: good sith
[01:24:55] <mawk> not_not: just bake GNU as into your program
[01:24:56] <mawk> no big deal
[01:25:09] <not_not> mawk: yeah already did that
[01:25:10] <not_not> but
[01:25:38] <mawk> it's not that hard to write an assembler, compared to other langs
[01:25:45] <not_not> i know right
[01:25:50] <mawk> with 64 bits it complicates a bit though
[01:25:53] <mawk> with rex and all that
[01:26:03] <not_not> ye im just learning 64 bit tweaks
[01:26:08] <zoooz> how long have you guys bean coding?
[01:26:23] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Ping timeout: 256 seconds)
[01:26:28] <not_not> xor %eax actually 0's out rax, is a faster instruction and takes less space in memory XD
[01:26:37] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[01:26:38] <not_not> zoooz: since i was 12
[01:26:50] <mawk> my beans are regular size zoooz
[01:26:51] <zoooz> jeez how old are you know?
[01:26:52] <not_not> grandpa showed me some visual basic when i was 10
[01:26:59] <not_not> 30 yikes
[01:27:02] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[01:27:08] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[01:27:08] <mawk> I fiddled with windows batch when I was 5-6 I guess, if that counts
[01:27:15] <not_not> ye it counts
[01:27:25] <not_not> if you did a goto it counts
[01:27:36] <zoooz> python is really hard at the beggining
[01:27:47] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[01:27:48] <mawk> you think zoooz ?
[01:27:53] <mawk> I'm not so sure
[01:27:53] <zoooz> yeah
[01:28:06] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[01:28:12] <grym> zoooz: everything is really hard at the beginning, that's why it's the beginning
[01:28:26] <not_not> but when i was 12 some guy in class claimed he knew C and tha the could write operative systems and said he hacked shit and that one time when he hacked there was another hacker there
[01:28:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[01:28:35] <not_not> and he had to fight with a hand to get the video
[01:28:37] <grym> it never gets easier, you just go faster.
[01:28:54] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[01:29:06] <mar77i> I think I like this solution. https://dpaste.com/HFWXAZQKD
[01:29:11] <grym> (to quote the only american to have won le tour)
[01:29:11] <not_not> like he litterally lied about hacking, hillarious things is years later i see 1995 hackers with angelina joulie boobs
[01:29:19] *** Quits: zoooz (~zoooz@204.43.245.164) (Quit: Client closed)
[01:29:22] *** Quits: ayr-ton (~jeffry@user/easter-egg/x-4406379) (Quit: EOF)
[01:29:33] <not_not> and he had taken that scene from that movie and lied to me about having done that
[01:29:42] <not_not> so thats why i learned c
[01:29:44] <not_not> to impress him
[01:29:55] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[01:30:01] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:30:03] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-71.range86-168.btcentralplus.com) (Quit: Leaving.)
[01:30:29] <not_not> but c soon became my favorite language cuz idk how but i stumbled uppon gameboy advanced homebrew
[01:30:57] <not_not> so i wrote a game running on a gameboy when i was 12
[01:31:05] <not_not> to impress my friends
[01:31:27] <not_not> so thats first reason c is my fav language.
[01:31:31] <mar77i> that's a really cool story bro :)
[01:31:43] <not_not> hehehe ty
[01:31:47] <mar77i> I hacked amigabasic at that age.
[01:31:53] <not_not> oooh nice
[01:32:02] *** Joins: KombuchaKip (~kip@192.252.230.5)
[01:32:09] * grym got a gibson
[01:32:13] <not_not> next cool story is 16 -17 year age
[01:32:24] <not_not> and why i definatly like C
[01:32:25] <grym> not_not: there's #python-offtopic for chat, though
[01:32:31] <not_not> oh sry
[01:32:33] <grym> np
[01:32:37] <JordiGH> Defiantly like C?
[01:32:40] <JordiGH> Definitely like C?
[01:32:41] *** Quits: dre (~dre@2001:8003:c932:c301:7948:9e4c:da1f:659b) (Quit: Leaving)
[01:32:54] <not_not> ok so python is my other favorite language
[01:33:10] *** Joins: dre (~dre@2001:8003:c932:c301:7948:9e4c:da1f:659b)
[01:33:12] *** Joins: crashrep (~crashrep@user/crashrep)
[01:33:40] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[01:33:57] <not_not> its nowhere NEAR as dangerous to program in as in c
[01:34:22] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10ef:dcbd:a8c8:cf80:f660:38d6)
[01:34:33] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:34:55] <not_not> cuz python does all the memory bounds checking for you (presumably, if none of the devs have done fucked up)
[01:35:00] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[01:35:09] *** Quits: damonlynch (~ngaio@static-68-235-44-30.cust.tzulo.com) (Quit: Leaving)
[01:35:25] <mar77i> regarding the dpaste I posted earlier: I'm kind of playing around with a simple rendering pipeline for ui stuff in pygame. I was wondering how to pack the "frames", so padding, border and margin inside an object without having to proxy the "real" component in a sort of shell object. I think descriptors do an okay job...
[01:35:57] <not_not> so you don't have to worry about instruction pointer being overwritten like in c
[01:36:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:36:52] <not_not> and python is so awesome u can be like is this variable a string? if so do so and so
[01:36:57] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[01:37:00] *** Joins: LordOfLive (~igloo@8.21.13.63)
[01:37:02] *** Quits: LordOfLive (~igloo@8.21.13.63) (Max SendQ exceeded)
[01:37:09] *** Quits: moto (~moto@user/moto) (Ping timeout: 256 seconds)
[01:37:27] <mar77i> not_not: there are pretty good runtimes/compilers out there, where code and data are "sacred". like writing c for modern linux, you're not going to run into this problem.
[01:37:35] *** Joins: LordOfLive (~igloo@8.21.13.63)
[01:37:37] *** Quits: LordOfLive (~igloo@8.21.13.63) (Max SendQ exceeded)
[01:37:55] <mar77i> or rather, "sacrosanct" was the word I was looking for
[01:37:59] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:38:12] *** Joins: LordOfLive (~igloo@8.21.13.63)
[01:38:15] *** Quits: LordOfLive (~igloo@8.21.13.63) (Max SendQ exceeded)
[01:38:20] *** Joins: zoooz (~zoooz@204.43.245.14)
[01:38:24] <JordiGH> This is some quality Python knowledge.
[01:38:35] <zoooz> what its your favorite function?
[01:38:40] <not_not> mar77i: but still, you shouldn't be ignorant of stack smashing and iptr overwrite, its the worst that could happen in your life
[01:38:43] *** Joins: LordOfLive (~igloo@8.21.13.63)
[01:38:45] *** Quits: LordOfLive (~igloo@8.21.13.63) (Max SendQ exceeded)
[01:38:51] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[01:39:00] *** Joins: moto (~moto@user/moto)
[01:39:06] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:39:15] <not_not> so now im writing this python program
[01:39:27] *** Joins: LordOfLive (~igloo@8.21.13.63)
[01:39:30] *** Quits: LordOfLive (~igloo@8.21.13.63) (Max SendQ exceeded)
[01:39:59] <not_not> wich is gonna compile C, and assemble asm and run the code in a slow ass virtual machine of x86 in python
[01:40:38] <not_not> wich again will translate python bytecode into native x86
[01:40:52] <not_not> idk how fast is python REALLY
[01:41:13] <not_not> its kinda slow cuz of unpacking all those pyobject things at every access but
[01:41:15] *** Joins: easter_egg (~jeffry@85.17.16.26)
[01:41:18] *** Joins: uxemacs (~timothy@2607:fb90:7db8:82ed::164)
[01:41:31] <zoooz> how are you so good at python'
[01:41:40] <not_not> im not that good
[01:41:47] <not_not> im intermediate at best
[01:42:16] *** Joins: ano (~ano@user/ano)
[01:42:30] <zerosum> hey all, trying to talk to a rest api here but im wondering whats the best way to set the title: Site on this particular arg https://i.imgur.com/VgrFh2d.jpg
[01:42:47] <not_not> zoooz: mainly because i know other languages aswell, c and assembly, and python is written in c an d im decent in c and ok in assembly
[01:42:47] *** Quits: zoooz (~zoooz@204.43.245.14) (Client Quit)
[01:42:54] <zerosum> it needs an integer but I would like to use title: site instead
[01:42:55] <SnoopJ> not_not, what do you mean by "unpacking...pyobject?"
[01:43:20] <not_not> well was a long time since i saw that vid about how python works under the hood but
[01:43:32] <not_not> sec ill go check python source
[01:43:56] <mar77i> I'm getting flashbacks to the good old days :)
[01:44:24] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[01:44:34] <grym> zerosum: doesn't `title:Site` mean "the name of this parameter,which is an integer, is 'Site'"?
[01:44:43] <not_not> mar77i: same
[01:44:49] <not_not> SnoopJ: https://github.com/python/cpython/blob/main/Include/object.h
[01:45:06] *** Quits: ld_ (~a0z1@141.98.252.169) (Quit: Leaving)
[01:45:28] <SnoopJ> not_not, right, the struct PyObject is defined there. I still don't know what you mean when you talk about "unpacking" this struct
[01:45:43] <not_not> like going through all the data that describes a python object takes time
[01:46:15] <not_not> SnoopJ: well it was the guy on youtube who said unpacking
[01:46:42] <zerosum> grym yes I think so.. I'm new to rest APIs so wasnt sure what that meant.. I thought I could pass a string but it wants an integer.. the error I got was that the object must be referenced by numeric ID or by dicts of attributes
[01:47:16] <not_not> like going through all the fields of the python object every time a python object is passed into a function i guess_
[01:47:25] <not_not> like to
[01:47:30] <grym> zerosum: yeah, i think you must pass an int
[01:47:49] <zerosum> grym if I add the site manually using the html form the title is a string so that's why I could pass a string
[01:47:58] <not_not> say x = 10 in python, you need c code that handles ALLLLLLL those variables in that header
[01:47:59] <zerosum> i thought*
[01:48:00] *** Joins: pepper (~pepper@user/pepper)
[01:48:07] <SnoopJ> not_not, objects are usually passed around as pointers to that struct, PyObject*
[01:48:33] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:35] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:24d8:4cd0:6691:d8ee)
[01:48:48] <SnoopJ> Perhaps the author of the video meant that when evaluating an expression like `a + b`, you have to consult the objects to figure out what should actually be done, at runtime.
[01:48:50] <not_not> ye, maybe i was thinging about when you reassign some other value to it
[01:48:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:49:05] <not_not> not passing it to functions
[01:49:09] <grym> zerosum: whatever a writeable prefix is, it'll begin by looking like {"prefix":"255.255.255.0", "site":0} or what have you.
[01:49:31] <not_not> no makes more sense ud pass the pointer in cpython but i am NOOOOOOB at cpython never tampered with it
[01:50:13] *** Quits: roxfan (~roxfan@109.129.206.185) (Ping timeout: 240 seconds)
[01:50:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:50:32] <not_not> but puters are so fast and big in ram theese days ud mostly wanna write your code in python
[01:50:34] <SnoopJ> not_not, well, assigning to a name is "just" a matter of changing the PyObject* associated with the name.
[01:50:42] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[01:50:47] <zerosum> grym ok cool, yeah so right now I have a JSON file which I generated from a list of dictionaries which are already on that format, I wonder if I could just iterate through that file or better to convert it back
[01:50:52] *** Quits: Myst3 (~Myst@user/myst) (Quit: Bye!)
[01:50:55] *** Joins: roxfan (~roxfan@109.129.206.185)
[01:51:11] <not_not> ye, but if you have x = 10
[01:51:13] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[01:51:17] <not_not> then x = "asdasdasd"
[01:51:23] <SnoopJ> there's just less that you can do at compile time because you know so little ahead of time, and more that you have to do at runtime (i.e. ask `a` if it knows how to add itself to `b`, and ask `b` if that fails)
[01:51:37] <zerosum> cause the create method I'm using already expects a list of dictionaries
[01:51:44] <not_not> the name x is just a pointer, and python created a number object with value 10 and set refcont to 1
[01:51:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[01:51:57] *** Joins: ano (~ano@user/ano)
[01:51:59] *** Joins: Adoi (~Adoi@user/adoi)
[01:52:14] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 250 seconds)
[01:52:15] <not_not> and when x = "asdassdasdasd" it decreased refcount on 10 and deleted 10 object, created "asdasdasdasd" and set refcount to 1?
[01:52:20] <stewie925> just saw this on twitter of all places : what is the answer to `print('[%c]' % 65) `
[01:52:31] *** Joins: thevar1able (~textual@46.39.45.122)
[01:52:35] <stewie925> I thought it was syntax error (buzz)
[01:52:45] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[01:52:45] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:53:19] <grym> zerosum: you probably want to load it back in and then pass each dict in turn
[01:53:22] <not_not> like, i will NEVER work with a string EVER in c unless i absoloutely have to
[01:53:30] *** Joins: Myst3 (~Myst@user/myst)
[01:53:39] <zerosum> grym ok cool, I'll try that thank you
[01:53:45] <SnoopJ> not_not, CPython keeps ready-to-go copies of "small" integers, so you wouldn't normally have to pay for constructing the object. But you're right about the refcount.
[01:53:58] <not_not> ye ok
[01:54:10] <grym> zerosum: i guess POST each dict in turn; how you do this depends on what libraries you're using but in requests, it's requests.post(endpoint, json=somedict)
[01:54:16] *** Joins: crashrep (~crashrep@user/crashrep)
[01:54:25] <grym> maybe some headers, etc., as needed
[01:54:37] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Ping timeout: 240 seconds)
[01:54:39] <not_not> ye makes sense
[01:54:45] *** Joins: dgw (dgw@sopel/admin/dgw)
[01:54:49] <SnoopJ> the compiler is also smart enough to cook up constant objects for any integers needed ahead of time (like if you use a not-small int literal in a program)
[01:54:50] *** Quits: subopt (~subopt@2603-8081-2302-459a-480f-254b-3ab7-7488.res6.spectrum.com) (Ping timeout: 250 seconds)
[01:54:57] <not_not> ye that i know
[01:55:17] <not_not> like if you sau "x = 1 + 120 + 11" it does that computation at compile time
[01:55:19] <zerosum> grym ok thanks!
[01:55:23] <SnoopJ> not_not, if you're interested in how CPython works inside, Anthony Shaw wrote a very good article about it (which later turned into a good book): https://realpython.com/cpython-source-code-guide/
[01:55:24] <not_not> that i know about cpython
[01:55:27] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[01:55:31] <not_not> ty
[01:55:45] *** Joins: iphone (~spiderman@user/spiderman)
[01:55:48] <SnoopJ> not_not, yes, CPython knows how to do that, it's called "constant folding"
[01:55:54] <not_not> SnoopJ: u know why they use a stack of bytecode? is it to not have to deal with an instruction pointer or something?
[01:56:09] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-6889-d743-d7bf-132c.res6.spectrum.com)
[01:56:12] <not_not> ye i just recently wrote my first programming language
[01:56:35] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[01:56:47] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:56:54] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:bc10:cb04:2aed:e9c2)
[01:57:12] <not_not> doesnt do much yet, but it can do "x = 2 + 30 * 40 + y" and the result stored in x will follow the math rules u use in school math
[01:57:24] <not_not> like mult first, and then add
[01:57:29] <SnoopJ> not_not, probably for about the same reason any other language has a virtual machine target: you only have to think about the 'real' host when writing an implementation
[01:58:11] <not_not> yeah i dont know much about vm design yet imma look up cpython source guide u sendt me
[01:58:13] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:a5c5:b95:c11f:d5ec) (Ping timeout: 240 seconds)
[01:58:36] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:58:45] *** Joins: bluedust_ (~bluedust@59.89.217.203)
[01:58:51] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:ec83:4992:49a4:27c3)
[01:58:53] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[01:59:03] <SnoopJ> all you really need to know is that CPython compiles source code and emits bytecode, and the interpreter (the great big switch statement in Python/ceval.c) is responsible for actually running that bytecode :)
[01:59:08] *** Joins: ano (~ano@user/ano)
[01:59:17] <not_not> ye ok
[02:00:16] <not_not> but my real question what i came here to ask, is can you just translate those bytecodes into x86 asm and run it as machine code?
[02:01:05] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[02:01:20] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:bc10:cb04:2aed:e9c2) (Ping timeout: 250 seconds)
[02:01:26] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:01:42] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[02:02:02] *** Quits: bluedust (~bluedust@103.165.167.52) (Ping timeout: 240 seconds)
[02:03:46] <SnoopJ> not_not, I don't see why not, but you would lose a lot of the potential advantages of starting from the program source, I think
[02:03:47] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[02:03:55] *** nilson_ is now known as nilson
[02:04:05] <not_not> ye i dont really care if python is slow
[02:04:25] <not_not> heck make it slower if you can add some more features
[02:04:37] <not_not> computers are so fast nowadays that
[02:04:37] *** Quits: jay-m1261 (~jay-m@129.0.76.215) (Ping timeout: 240 seconds)
[02:04:37] *** Quits: jay-m126_ (~jay-m@129.0.76.215) (Ping timeout: 240 seconds)
[02:04:37] *** Quits: jay-m126 (~jay-m@129.0.76.215) (Ping timeout: 240 seconds)
[02:04:38] <SnoopJ> If you're interested in a runtime that turns Python source code into native code, you may want to read about PyPy, which can do this with its JIT compiler
[02:04:45] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:04:48] <not_not> ahh nice
[02:04:53] <not_not> OH
[02:04:58] <SnoopJ> Numba is also worth looking at, it takes a similar approach (although the compiler parts are farmed out to LLVM)
[02:05:12] <not_not> u know any web browsers written in python?
[02:05:14] <SnoopJ> err, the backend parts are, anyway :)
[02:05:38] <SnoopJ> not_not, qutebrowser is the only one that I know of off the top of my head
[02:05:43] <not_not> ty
[02:06:23] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Quit: Leaving)
[02:06:59] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[02:07:27] <not_not> SnoopJ: how long have u coded python?
[02:08:08] <not_not> like, id say python is a way better shell than bash
[02:08:21] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[02:08:47] <mawk> what's the most pythonic way to do « for x in it: f(x) » as a single line?
[02:08:50] <SnoopJ> not_not, I probably wrote my first Python program sometime in the mid-2000s, but I've only "really" been writing it since about 2012
[02:08:59] <not_not> ahh
[02:09:00] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[02:09:02] <mawk> there is [*map(f, it)] but it does an ugly array full of None
[02:09:03] <Repiphany> mawk: Write it as two lines
[02:09:07] <not_not> how old were u mid 2000's?
[02:09:17] <SnoopJ> mawk, that is a valid statement on one line, FWIW
[02:09:17] <mawk> that's what I would do if I could write it as two lines Repiphany
[02:09:22] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: your partner prefers dildos)
[02:09:54] <SnoopJ> not_not, I would have been in high school, and I'm sure my programs were very messy
[02:10:01] <not_not> mmmmmmmmmmmmmmmmm
[02:10:25] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:10:32] <not_not> think first time i programmed in python i was 22 or 23
[02:10:33] <mawk> it's something that needs to go in eval()
[02:10:40] <mawk> if that clarifies the question
[02:10:53] <not_not> high school was all about C
[02:11:09] <not_not> and taking over jedi knight jedi academy
[02:11:35] <SnoopJ> mawk, eval() only accepts expressions (or code objects)
[02:11:44] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 250 seconds)
[02:11:47] <mawk> yes
[02:12:10] <SnoopJ> you could do `[f(x) for x in it]` if you don't mind that it's slightly gross to use it that way
[02:12:26] <not_not> cuz jedi knight jedi academy had a console, and if you imported a console script doing /say aaaaa*100000 the server crashed
[02:12:27] <SnoopJ> oh, you mentioned that with map()
[02:12:41] <mawk> I guess I can wrap it with exec(' ') and then it can go in eval(), but I have a feeling that might not fit the definition of "pythonic"
[02:12:48] <not_not> and we were the bad boys in that game who got banned all the time
[02:13:04] <not_not> so i looked up what a buffer overflow bug was
[02:13:05] <not_not> and
[02:13:17] <SnoopJ> mawk, if you're thinking about eval() in the first place, you might have already blown past pythonic, heh
[02:13:19] <not_not> took a week off school
[02:13:23] <mawk> lol
[02:13:28] <mawk> yeah indeed
[02:13:48] <not_not> cuz i knew there was SOME WAY i could make that iptr overwrite come back to my shellcode without hitting 0
[02:13:57] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 240 seconds)
[02:14:10] <not_not> eventually i found a "jmp %ecx" instruction in an adress with no 0x00 in it
[02:14:23] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[02:14:25] <not_not> abd ecx pointed to the string in /say
[02:14:55] <not_not> so i made a li'hole virus, and forced the servers to download my virus and run it
[02:14:57] *** Joins: ano (~ano@user/ano)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:45] <mawk> oh actually the « for x in it: f(x) » works
[02:15:47] <mawk> thanks SnoopJ
[02:15:49] <mawk> I thought the line would've been fed to eval() but apparently it's fed through exec(); I'm playing with the python exec command in hexchat
[02:15:49] <not_not> that was ot, but point is in Python you don't have to worry about input length of strings getting your server hacked
[02:15:54] <mawk> /py exec $statement
[02:15:55] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:08] <not_not> oh i just started using eval
[02:16:18] <not_not> im afraid to touch it but
[02:16:36] <mawk> now I can clear the highlight status of all channels and queries at once: « /py exec for c in hexchat.get_list('channels'): c.context.command('GUI COLOR 0') »
[02:16:57] <mawk> before I could do « /allchan gui color 0 » but it doesn't work with queries and server buffers
[02:18:29] <SnoopJ> not_not, you do still have to worry about vulnerabilities, but they come in different flavors
[02:18:34] <stewie925> I hate `eval` its evil
[02:19:22] <not_not> SnoopJ: ye
[02:19:25] <Repiphany> Hm, anyone here know how difficult it would be to extend json.JSONDecoder to parse e.g. `"-1/9"` into either `Fraction(-1, 9)` or `-0.11111...`?
[02:19:29] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[02:19:29] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[02:19:29] *** Joins: hams (~hams@user/hams)
[02:19:46] <not_not> hence why i said i jsut started playing with eval, im afraid to touch it
[02:20:02] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[02:20:04] <not_not> SnoopJ: u know any python vulns?
[02:20:20] <not_not> i know the input vs raw_input from python2
[02:20:21] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[02:20:32] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 240 seconds)
[02:20:42] <not_not> json loading from files could be a disaster
[02:20:53] <not_not> if someone were to tamper with the files
[02:21:36] *** Joins: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[02:21:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[02:22:16] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[02:22:24] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[02:22:43] <not_not> the obvious ones, any input from users not being format escaped if they go to an sql module
[02:23:21] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:23:38] <not_not> hmm, imma try get creative at hacking a python program
[02:24:05] *** Joins: sydbarret (~anton@static-186-121-195-75.acelerate.net)
[02:24:16] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[02:24:18] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[02:24:33] <Repiphany> Wondering if there's any nicer way than just cludging a fraction regex into the json scanner
[02:24:35] <SnoopJ> Repiphany, I think you'd want to write your own parse_string(), but I'd probably just do this in two passes (i.e. let the default decoder do it, then scan for matching strings)
[02:24:50] <SnoopJ> [insert warning about how parse_string() isn't public API]
[02:25:54] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[02:25:55] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[02:25:57] <not_not> stewie925: ye u shouldnt use eval() its like here, anyone putting a string into THIS python program wins universal keys to the server
[02:26:12] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 268 seconds)
[02:26:21] *** Joins: mat001 (~mat001@213.143.69.121)
[02:27:19] <Repiphany> I was thinking of trying to recognise the fractions as numbers, not as strings though, e.g. `'[1/9, 2/9]'`, not `'["1/9", "2/9"]'`
[02:27:43] <bjs> not_not: you shouldn't *ever* use eval? :)
[02:28:17] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[02:28:48] <not_not> bjs: nope, but you shouldn't ever take methamphetamine either tho
[02:28:57] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[02:29:09] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:29:13] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[02:29:31] <not_not> im using eval rn
[02:29:42] <not_not> in a script thats like a python shell
[02:29:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[02:29:54] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[02:30:05] <not_not> only user who has input to that script already has full access to the computer
[02:30:18] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[02:30:23] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10ef:dcbd:a8c8:cf80:f660:38d6) (Read error: Network is unreachable)
[02:30:31] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[02:30:37] <not_not> but like eval(str(socket.recv()) might be a bad idea
[02:31:00] <sydbarret> anybody is working with google ads api?
[02:31:24] <not_not> but thing is there are known knowns and known unknowns but there are also unknown unknowns
[02:31:35] <not_not> when it comes to security
[02:31:42] <not_not> gotta listen to donald rumsfeld
[02:31:46] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[02:32:14] <not_not> sydbarret: not me, but i do some maps api stuff but thats on the shelf
[02:32:25] *** Joins: portalrat (~portalrat@user/portalrat)
[02:32:48] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[02:32:51] <aphysically> thx SnoopJ, I got my code merged in typing_extensions now too
[02:32:57] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[02:33:10] <aphysically> 3.6 needed special cased in several ways :P
[02:33:16] <not_not> so im planning on making my own language
[02:33:18] *** Joins: ano (~ano@user/ano)
[02:33:25] <aphysically> https://github.com/python/typing/commit/3b53f0167e3d7d22e3199cca85da5ef5c6c6f4cd
[02:33:35] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:33:40] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[02:34:32] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[02:35:02] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[02:36:52] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[02:37:05] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[02:37:20] <not_not> SnoopJ: u ever made ur own language?
[02:37:37] <not_not> i feel i should make one
[02:37:40] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) ()
[02:37:47] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[02:37:57] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[02:38:40] *** Joins: thevar1able (~textual@46.39.45.122)
[02:38:51] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[02:38:52] <not_not> i have made a "x = 2 * 4 + 5 *y" parser and executer in c that worked and got the mult and div first and add and subtract last like in school math
[02:38:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:40:03] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Quit: mugen)
[02:40:05] <not_not> but my plan for a language is where variables are either not, not not or is
[02:40:07] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[02:40:12] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[02:40:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[02:40:33] <SnoopJ> aphysically, congrats 🎉
[02:40:40] <SnoopJ> not_not, nope
[02:40:59] <aphysically> thx, making this same change for dataclasses is a lot more complicated unfortunately
[02:41:08] <not_not> havent made any sucessfull computer programming languages YET but
[02:41:23] <not_not> made a sucessfull cognitive programming language for my brain
[02:41:35] <not_not> called it synthetic norwegian
[02:42:10] <not_not> if u read it forewards and backcwards and forewards again one sentence would suddenly take 100 years to read
[02:42:17] <not_not> and once it was read nah it only took one sec
[02:42:26] <not_not> next iteration 1000 years to read
[02:43:17] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[02:43:20] *** Joins: ano (~ano@user/ano)
[02:43:20] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[02:43:34] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:43:55] *** Quits: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a) (Quit: Konversation terminated!)
[02:44:12] *** Joins: thevar1able (~textual@46.39.45.122)
[02:44:32] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Client Quit)
[02:44:41] <not_not> and used the gramatical rules of my native language on themselves to double the information contained in one word while halving the time to search for the word
[02:44:45] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:45:37] *** Quits: wlperdue (~wlperdue@ip24-254-86-223.sb.sd.cox.net) (Ping timeout: 240 seconds)
[02:45:44] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:45:58] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:47:19] <not_not> havin memory problems, so gonna try writing a brain program that secures memory like computers do
[02:47:50] <SnoopJ> Repiphany, hmm, my parse_string idea didn't pan out after all
[02:49:00] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[02:49:57] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[02:50:58] *** Quits: xx (~xx@user/xx) (Quit: K-Lined)
[02:52:35] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:52:36] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:53:30] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:53:31] *** Joins: ano (~ano@user/ano)
[02:55:00] *** Quits: grnman_ (~grnman@159.89.27.73) (Remote host closed the connection)
[02:55:04] *** Quits: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[02:56:37] <NeckRomancer> if anyone knows where i can go to advertise $25k an hour python consultation, memoserv me, services paid in crypto only
[02:57:53] *** Quits: johnkeats7 (~johnkeats@186.220.240.39) (Read error: Connection reset by peer)
[02:58:26] <AhmedAmerican> i would like to read those columns `df.iloc[:, 3:].values.tolist()` without `nan` values as a list !
[02:58:55] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:01:01] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Ping timeout: 256 seconds)
[03:01:14] *** Quits: c4017w (~c4017@199-7-158-225.eng.wind.ca) (Read error: Connection reset by peer)
[03:01:39] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[03:02:06] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:ec83:4992:49a4:27c3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:02:52] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[03:02:56] *** Quits: dgw (dgw@sopel/admin/dgw) (Quit: Stalemate resolved. Core transfer initiated.)
[03:03:00] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[03:03:29] *** Joins: dgw (dgw@sopel/admin/dgw)
[03:03:57] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[03:04:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:05:08] <grym> AhmedAmerican: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dropna.html
[03:05:16] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[03:05:46] *** Joins: d1cor (~diego@179.63.242.120)
[03:06:04] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[03:06:27] *** Joins: ano (~ano@user/ano)
[03:06:52] *** Parts: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) ()
[03:06:53] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[03:07:14] *** Joins: thevar1able (~textual@46.39.45.122)
[03:07:18] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:08:12] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[03:08:28] <SnoopJ> Repiphany, here's what doing it in a loads() and then visit pass looks like. I'm sure it's not as tidy as it could be but I was hacking around a lot: https://bpa.st/KGJQ
[03:10:09] *** Joins: c4017w (~c4017@199-7-158-225.eng.wind.ca)
[03:10:19] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:10:38] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:24d8:4cd0:6691:d8ee) (Quit: Client closed)
[03:12:16] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[03:12:37] <SnoopJ> kinda weird that there isn't a place to hang your hat here if you want to do additional transformations on strings 😕
[03:13:45] *** Joins: netpipe (~netpipe@user/netpipe)
[03:14:32] *** Quits: dre (~dre@2001:8003:c932:c301:7948:9e4c:da1f:659b) (Ping timeout: 240 seconds)
[03:14:53] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:15:03] <Repiphany> SnoopJ: Uglier hacky hack https://bpa.st/MIUQ
[03:15:57] <Repiphany> Just wedged in a fraction regex into the scanner and parsed it with Fraction
[03:16:33] *** Joins: _ev (ev@user/ev/x-8999918)
[03:17:12] <SnoopJ> Repiphany, I wonder why the heck doing `self.parse_string = my_parser; self.scan_one = json.scanner.make_scanner(self)` didn't pan out for me
[03:18:06] *** Quits: clime (~clime@78-80-113-95.customers.tmcz.cz) (Quit: WeeChat 3.3)
[03:18:25] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:21:01] <Repiphany> SnoopJ: Maybe it's trying to use the c_make_scanner rather than py_make_scanner?
[03:22:24] <SnoopJ> Repiphany, AFAIK the C impl should still be calling context.parse_string() where I was trying to get inside the loop.
[03:22:44] *** Joins: Barones (~Barones@user/Barones)
[03:22:49] <SnoopJ> I did try it with py_make_scanner() just now and was able to at least see my own string parser working, but I don't think it does what I expected...
[03:23:08] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[03:23:20] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d)
[03:23:23] <SnoopJ> yours is a very practical solution :)
[03:24:02] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[03:24:24] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:25:13] *** Joins: bytecrunch[m] (~bytecrunc@2001:470:69fc:105::1:76d3)
[03:25:37] *** Quits: c4017w (~c4017@199-7-158-225.eng.wind.ca) (Ping timeout: 240 seconds)
[03:25:57] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:24d8:4cd0:6691:d8ee)
[03:27:27] *** Joins: summersault (~summersau@179.221.251.36)
[03:27:38] *** Joins: ano (~ano@user/ano)
[03:28:03] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[03:29:06] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[03:29:43] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[03:30:14] *** Joins: c4017w (~c4017@199-7-158-225.eng.wind.ca)
[03:30:17] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:32:38] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:ec83:4992:49a4:27c3)
[03:33:28] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[03:33:36] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[03:33:55] *** Joins: Barones (~Barones@user/Barones)
[03:34:31] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:35:05] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:36:08] *** Quits: drillbyt (drillbyt@user/drillbyt) (Quit: Leaving)
[03:36:29] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[03:38:49] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[03:40:11] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:40:39] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:40:48] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:ec83:4992:49a4:27c3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:41:18] *** Joins: mat001 (~mat001@213.143.69.121)
[03:42:03] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[03:42:41] *** Joins: ano (~ano@user/ano)
[03:42:57] *** Parts: bytecrunch[m] (~bytecrunc@2001:470:69fc:105::1:76d3) ()
[03:44:26] *** Quits: bluedust_ (~bluedust@59.89.217.203) (Read error: Connection reset by peer)
[03:44:49] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:45:47] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 256 seconds)
[03:49:17] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:49:57] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 240 seconds)
[03:50:19] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[03:50:37] *** Joins: crashrep (~crashrep@user/crashrep)
[03:50:56] *** Joins: Abrax (~Abrax@user/abrax)
[03:51:42] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:52:27] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d) (Quit: I have gone to sleep. ZZZzzz…)
[03:53:01] *** Quits: sydbarret (~anton@static-186-121-195-75.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:53:19] *** Joins: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[03:53:53] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[03:53:55] *** Quits: dgw (dgw@sopel/admin/dgw) (Quit: Stalemate resolved. Core transfer initiated.)
[03:54:26] *** Quits: roxfan (~roxfan@109.129.206.185) (Ping timeout: 250 seconds)
[03:55:09] *** Joins: ano (~ano@user/ano)
[03:55:18] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:57:31] *** Joins: dgw (dgw@sopel/admin/dgw)
[03:58:00] <stewie925> just a quick question guys - I chanced upon a tricky python problem:  `print('[%c]' %65) ` - it returns `[A]`   wondering why is that?
[03:58:10] <SnoopJ> I've found that when building an executable using PyInstaller, I need to help it along with --collect-all for some packages. Currently that's a trial-and-error process (i.e. I try to run the resulting executable, it fails because of something missing, I add that, repeat). Is there a more sane way?
[03:58:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[03:59:05] <bjs> stewie925: unicode character #65 is "A", see chr(65) == "A"
[03:59:16] <SnoopJ> stewie925, %c converts an integer to the corresponding character
[03:59:44] <stewie925> oh hey thanks - you guys are truly the gurus
[03:59:45] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[04:00:13] <bjs> stewie925: btw %-formatting is very old-school,  there are much newer (and in my opinion, nicer) ways to format strings :)
[04:00:24] <stewie925> bjs: i agree!!!!!
[04:00:26] <SnoopJ> +1
[04:00:38] <bjs> (and better documented...)
[04:01:01] <stewie925> they should ban % for python 3.6 and above - f-strings is the only way :)
[04:01:26] <SnoopJ> I wouldn't go quite that far, but hopefully it's eventually deprecated
[04:01:44] <bjs> stewie925: %-formatting (aka Printf-style formatting) will never be banned or removed
[04:01:48] <stewie925> SnoopJ: :)
[04:01:55] <SnoopJ> yea, probably never :)
[04:02:02] <bjs> but yeah, f-strings are the way if applicable :)
[04:02:06] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[04:02:20] <stewie925> with advocates like bjs and SnoopJ - you guys could sway them
[04:02:47] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[04:02:52] *** Joins: dsrt^ (~dsrt@96-86-240-178-static.hfc.comcastbusiness.net)
[04:02:55] <bjs> well since I agree with the status quo of not removing it, I don't think I'll be doing much swaying :)
[04:03:09] * SnoopJ is having trouble enough advocating for documenting print()'s return value
[04:03:44] <bjs> SnoopJ: you know my opinion on the trouble you're having there, and I'm glad I have no aspirations to be a core dev :P
[04:03:49] <SnoopJ> I don't really object to its presence in Python, not breaking backwards compatibility is nice if it isn't prohibitive to do so
[04:03:52] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:03:53] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.3)
[04:04:00] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[04:04:00] <stewie925> hehehe
[04:04:12] <SnoopJ> bjs, nor do I, you have to deal with all kinds of stuff like people like me nit-picking every little docstring ;)
[04:04:34] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:04:49] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:06:03] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[04:06:26] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:06:34] <stewie925> bjs: thanks again for helping me with my mock issue yesterday
[04:06:45] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:07:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[04:07:27] <stewie925> I needed to review my mock unit testing and saved them to github for my notes
[04:07:52] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:08:18] <stewie925> python jobs out there are looking for 'Sr Software Engineer' -- ugh
[04:08:19] *** Joins: thevar1able (~textual@46.39.45.122)
[04:09:17] <stewie925> been job-hunting for six months
[04:10:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:11:24] *** Joins: hexa- (~hexa-@juno.lossy.network)
[04:11:40] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:11:50] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489hj5pbcngep5p.ipv6.telus.net) (Quit: Leaving)
[04:14:03] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[04:14:10] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[04:15:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:15:28] <sn_fk_n> isn't % formatting better when you dont evaluate what they actually are
[04:15:33] <sn_fk_n> e.g. logging
[04:15:58] *** Quits: doko (~doko@2a02:8106:1a:7600:e1e8:b9cd:a68c:ae2d) (Ping timeout: 268 seconds)
[04:16:06] *** Joins: doko (~doko@2a02:8106:1a:7600:a2e2:196c:f346:878)
[04:16:48] <voidcat> if you're talking about defining the template earlier than when it gets formatted, you can do that with `.format()` too
[04:16:50] <SnoopJ> sn_fk_n, logging has its own formatting language that overlaps a little bit
[04:16:59] *** Joins: Wulf (~Wulf@user/wulf)
[04:17:46] <sn_fk_n> ah fair i mean i've had linter messages about using %s in log strings over format strings i'm not 100% sure what is exactly going on there
[04:17:52] <SnoopJ> I believe there's a way to format with {} with logging, too
[04:18:00] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[04:18:08] <SnoopJ> if you want the fields it provides like {asctime} or what-have-you
[04:18:18] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:18:43] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[04:19:25] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: Lost terminal)
[04:19:25] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[04:19:31] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:24d8:4cd0:6691:d8ee) (Quit: Client closed)
[04:21:26] <bjs> sn_fk_n: the `logging` by default %-formats your strings, yes so it can do it lazily (only do the actual expensive string formatting if you're going to actually log the result);  but you can do that with str.format() too.  f-strings cannot be d one lazily, and so you can argue you shouldn't use f-strings in logging calls
[04:21:30] <bjs> as you can't "turn" the f-strings off
[04:22:04] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:22:33] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[04:22:56] <SnoopJ> yea f-strings are literals, the object needs to be fully cooked when the runtime moves on
[04:23:50] *** Joins: noarb (~noarb@user/noarb)
[04:24:27] *** Joins: kaiseisei (~Thunderbi@183.191.221.65)
[04:25:49] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-581d-557b-3426-2cff.res6.spectrum.com) (Read error: Connection reset by peer)
[04:27:45] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:28:02] *** Joins: mickey8 (~user@user/mickey)
[04:28:36] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[04:28:55] *** Joins: Barones (~Barones@user/Barones)
[04:29:35] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[04:29:51] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:30:32] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Quit: Connection closed)
[04:31:07] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[04:31:20] *** Joins: cyphase (~cyphase@user/cyphase)
[04:34:45] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[04:34:59] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:35:42] *** Joins: lvetritti (~lvetritti@177.30.38.9)
[04:36:24] *** Parts: lvetritti (~lvetritti@177.30.38.9) ()
[04:37:29] *** Quits: giusb (~giusb@user/giusb) (Quit: WeeChat 3.3)
[04:37:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[04:38:23] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[04:39:30] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:41:25] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Ping timeout: 240 seconds)
[04:43:01] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 240 seconds)
[04:43:27] *** Joins: c4017w_ (~c4017@199-7-158-225.eng.wind.ca)
[04:43:57] *** Quits: c4017w (~c4017@199-7-158-225.eng.wind.ca) (Ping timeout: 240 seconds)
[04:44:48] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:45:29] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Read error: Connection reset by peer)
[04:45:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:45:48] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:45:58] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[04:46:10] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:48:09] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:48:51] *** Joins: hanzo (uid532183@user/hanzo)
[04:48:54] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[04:49:31] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[04:49:42] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:50:00] *** Joins: ano (~ano@user/ano)
[04:52:57] *** Quits: kr0n0 (~kvirc@71.247.33.211) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[04:52:58] *** Joins: Vonter (~Vonter@user/vonter)
[04:55:49] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:57:01] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:58:07] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:e90c:8a2e:7515:668a) (Ping timeout: 256 seconds)
[04:59:21] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:59:41] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Ping timeout (120 seconds))
[04:59:58] *** Joins: FibrillaryAci1d (~ojd1@2804:7f1:ea82:4ea4:ccfd:a34e:c5f4:9ac1)
[05:00:25] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[05:01:54] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[05:02:59] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[05:03:04] *** Joins: lispy (~lispy4@84.69.59.93)
[05:05:18] *** jeho2 is now known as jeho
[05:05:28] *** Joins: thevar1able (~textual@46.39.45.122)
[05:05:41] *** Quits: justm33_ (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 256 seconds)
[05:05:48] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[05:05:55] *** Quits: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net) (Ping timeout: 268 seconds)
[05:07:27] *** Quits: audiobirb (~audio@user/audio) (Remote host closed the connection)
[05:07:45] *** Joins: audiobirb (~audio@user/audio)
[05:09:38] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:10:58] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:12:57] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[05:13:06] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[05:13:19] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 268 seconds)
[05:17:51] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[05:19:20] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[05:19:39] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:21:08] *** Joins: ElimGarak (dgw@sopel/admin/dgw)
[05:21:22] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[05:21:33] *** Quits: FibrillaryAci1d (~ojd1@2804:7f1:ea82:4ea4:ccfd:a34e:c5f4:9ac1) (Quit: Leaving)
[05:22:37] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 240 seconds)
[05:24:22] *** Joins: zaquest (~notzaques@5.130.79.72)
[05:24:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:24:59] *** ElimGarak is now known as dgw
[05:25:42] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[05:26:17] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[05:27:32] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[05:28:55] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Read error: Connection reset by peer)
[05:29:17] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:8d40:66d1:9827:81f3)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[05:32:13] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[05:34:04] *** Joins: thevar1able (~textual@46.39.45.122)
[05:36:51] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:38:21] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 256 seconds)
[05:38:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:42:25] *** Joins: bazmundi (~bazmundi@220.240.193.108)
[05:43:32] *** Quits: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Ping timeout: 268 seconds)
[05:43:42] *** Joins: ano (~ano@user/ano)
[05:43:45] *** Joins: dre (~dre@2001:8003:c932:c301:c799:698e:a7d8:4ce6)
[05:44:02] *** Quits: maxzor (~maxzor@2a01cb04054faa0015a7d83ae77fdf50.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:45:02] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[05:45:09] *** Quits: greentree (~greentree@user/greentree) (Quit: greentree)
[05:46:18] *** Joins: thevar1able (~textual@46.39.45.122)
[05:46:53] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com)
[05:46:57] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[05:48:50] *** Quits: moto (~moto@user/moto) (Ping timeout: 250 seconds)
[05:49:03] <SnoopJ> Is there a good way to do the equivalent of `pip freeze` in a context where you *can't* use subprocess? Ideally one that doesn't depend on pip internals...
[05:49:24] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:50:32] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[05:50:39] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[05:50:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:51:04] *** Joins: kaiseisei1 (~Thunderbi@183.191.221.65)
[05:51:17] *** Quits: kaiseisei (~Thunderbi@183.191.221.65) (Ping timeout: 240 seconds)
[05:51:17] *** kaiseisei1 is now known as kaiseisei
[05:51:57] <tpr> SnoopJ: mm, maybe pkg_resources?
[05:52:25] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[05:52:30] <tpr> SnoopJ: https://www.activestate.com/resources/quick-reads/how-to-list-installed-python-packages/ "List Packages In A Console With Pip"
[05:52:53] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Read error: Connection reset by peer)
[05:53:14] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:53:33] <tpr> not probably the best source of information, but that's the one that came up from google :P
[05:53:38] <tpr> maybe importlib offers something similar?
[05:53:53] <SnoopJ> tpr, TIL pkg_resources.working_set(). I wonder what the modern importlib spelling is
[05:54:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:54:36] *** Joins: jamea (~jamea@177.239.81.39)
[05:54:37] <jamea> hi all
[05:54:41] <jamea> where paste any code?
[05:54:51] <SnoopJ> jamea, https://bpa.st/
[05:55:03] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[05:55:05] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:55:50] *** Joins: roxfan (~roxfan@109.129.206.185)
[05:56:29] *** Quits: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 268 seconds)
[05:57:01] <jamea> ok,  https://bpa.st/FKIQ    any advice witht his error
[05:57:04] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 250 seconds)
[05:59:18] <tpr> SnoopJ: I'm not sure what's the best approach, but I just recalled I was playing around with importlib.metadata earlier. https://docs.python.org/3/library/importlib.metadata.html#package-distributions
[05:59:31] <grym> jamea: change the \ to / in that string or prefix it with r, like r'C:\Users\MSM\Downloads\Excel-20220118T041311Z-001\Excel\6. Noviembre'
[05:59:58] <SnoopJ> tpr, this is a mouthful but it gets me close to what I'm looking for: `{md["Name"]: md["Version"] for md in (pkg.metadata for pkg in importlib.metadata.distributions())}`  Cheers! 😁
[06:00:12] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[06:00:36] <jamea> xworkdir='C:/Users/MSM/Downloads/Excel-20220118T041311Z-001/Excel/6. Noviembre'
[06:00:38] <jamea> ok
[06:00:42] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Quit: ZZZzzz…)
[06:00:57] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:00:58] <jamea> ok now No module named 'openpyxl'
[06:01:00] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[06:01:01] <jamea> googling
[06:01:16] <SnoopJ> sounds like you need to install openpyxl. pip can do that
[06:01:17] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[06:01:49] <jamea> pip install openpyxl
[06:01:57] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 240 seconds)
[06:02:32] <tpr> SnoopJ: 👍  my "dep solver" used a similar approach, but I didn't notice the metadata property and used separate method calls for that... thanks for that pointer, I suppose the doc could be improved on that 🤔
[06:03:02] <SnoopJ> importlib is hot off the presses so I think the doc can probably be improved all over :)
[06:03:19] <tpr> maybe I should create my first cpython(?) PR to improve the situation :-P
[06:03:33] *** Joins: syrius (syrius@titan.stormtek.net)
[06:03:57] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[06:04:54] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[06:04:57] <very_sneaky> you guys write your own dep solvers? why not just use pip-compile, poetry or the inbuilt pip dep solver?
[06:05:17] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[06:05:22] <SnoopJ> tpr, that would be a PR to CPython, yep. Docs PRs are good PRs!
[06:05:48] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[06:06:25] *** Joins: Vonter (~Vonter@user/vonter)
[06:06:39] <tpr> very_sneaky: well, let say it wasn't a real, proper solver. I just wanted to play around with the importlib* to get a feeling how it works :P
[06:06:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:06:57] <very_sneaky> ah, gotcha.
[06:07:17] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[06:07:37] *** Joins: hcnt (~hcnt@2a00:f41:1839:7e22:a548:ea92:d92d:9623)
[06:07:53] *** Parts: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) ()
[06:07:58] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:6816:2795:9c3:9492) (Read error: Connection reset by peer)
[06:09:24] <exarkun> importlib is, what, 10 years old?
[06:09:38] <exarkun> "New in version 3.1"
[06:10:33] <SnoopJ> s/importlib is/importlib.metadata is/
[06:10:40] <exarkun> ah
[06:10:57] *** Joins: qpdb (~qpdb@user/qpdb)
[06:11:00] <SnoopJ> and importlib.resources, I think between the two of them they carve up things that pkg_resources is responsible for
[06:13:29] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:15:23] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[06:15:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[06:16:10] *** Quits: bazmundi (~bazmundi@220.240.193.108) (Quit: Client closed)
[06:16:19] *** Quits: hcnt (~hcnt@2a00:f41:1839:7e22:a548:ea92:d92d:9623) (Remote host closed the connection)
[06:17:01] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:c2b8:b157:be3f:ced2) (Remote host closed the connection)
[06:21:41] <tpr> SnoopJ: hmm, looking at it, it seems that the distributions() is not documented at all?!
[06:22:28] <tpr> SnoopJ: there is packages_distributions() which is exactly what I used myself, which returns something different
[06:22:35] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:22:45] *** Quits: tristan_ (~tristan@223.38.8.111) (Ping timeout: 256 seconds)
[06:23:07] <SnoopJ> tpr, yea I noticed that. packages_distributions() is new in 3.10 and seems to be a more structured result. But distributions() doesn't really seem documented in the 3.8 docs either
[06:23:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:23:33] *** Joins: thevar1able (~textual@46.39.45.122)
[06:24:51] *** Joins: califax- (~califax@user/califx)
[06:25:17] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[06:26:43] *** Quits: c4017w_ (~c4017@199-7-158-225.eng.wind.ca) (Ping timeout: 256 seconds)
[06:27:37] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:28:13] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:28:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:28:21] *** califax- is now known as califax
[06:28:28] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[06:28:35] *** Joins: parv (~quass@user/parv)
[06:28:37] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:28:37] *** brabrax_ is now known as brabrax
[06:28:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:29:02] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[06:30:07] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:30:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[06:30:40] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:04] *** Joins: ano (~ano@user/ano)
[06:31:26] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:31:59] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[06:34:05] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[06:34:05] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[06:34:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 250 seconds)
[06:34:37] *** Joins: thevar1able (~textual@46.39.45.122)
[06:35:53] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[06:36:09] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[06:36:17] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::a) (Ping timeout: 240 seconds)
[06:36:56] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[06:37:19] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:a32c:8d75:67bb:ec80)
[06:38:23] *** Joins: dtux (~dtux@2601:646:8f00:3f2:d5df:2c60:fb36:fc53)
[06:38:27] <SnoopJ> d'oh, and the target is 3.7, not 3.8, so I'm stuck with the backport anyhow. That's okay, I'm pretty happy with how tidy that is, I don't have to bundle pip now 🎉
[06:38:33] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:38:57] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[06:40:28] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[06:42:01] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:43:15] *** Joins: maryo (~Maryo@user/maryo)
[06:44:59] *** Quits: zlg_ (~zlg@user/zlg) (Quit: WeeChat 2.8)
[06:46:20] *** Joins: ano (~ano@user/ano)
[06:48:11] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:fc5e:9bf7:74f4:9176)
[06:49:12] *** Joins: thevar1able (~textual@46.39.45.122)
[06:49:41] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Remote host closed the connection)
[06:50:35] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:50:46] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[06:51:27] *** Parts: nomic (~nomic@2a00:23c7:ec90:a501:b80d:e2db:26ac:c3a6) (Leaving)
[06:51:29] *** Quits: vinleod (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:52:00] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:54:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[06:54:53] *** Joins: Nutte35 (~Nutte@202.153.81.155)
[06:56:58] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:59:55] <monkeyPlus> https://bpa.st/BDLA. Sorry for dumb question but why it doesnt work?!"
[07:00:12] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:00:29] <monkeyPlus> reformulating, how do i create an array of bytes from strings?
[07:01:22] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[07:01:23] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[07:03:39] *** Joins: ano (~ano@user/ano)
[07:04:32] *** Quits: TML (~tml@user/tml) (Ping timeout: 240 seconds)
[07:05:46] *** Joins: moto (~moto@user/moto)
[07:06:50] <monkeyPlus> on the web  ->> https://bpa.st/6UTA ...is this correct?!!? isnt bytes imuttable? and bytes isnt a reserved word=?!!
[07:07:59] <KirkMcDonald> monkeyPlus: += isn't mutating the object. It's making a new one, and assigning that to the name.
[07:08:10] <monkeyPlus> oh
[07:08:19] <monkeyPlus> and reserved word bytes?
[07:08:19] <KirkMcDonald> And yes, 'bytes' isn't a keyword, it's a builtin.
[07:08:27] <monkeyPlus> i see
[07:09:37] *** Joins: adeliktas5 (~adeliktas@i59F52EE8.versanet.de)
[07:10:36] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:10:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[07:10:57] *** Quits: adeliktas (~adeliktas@i59F4D5EA.versanet.de) (Ping timeout: 240 seconds)
[07:10:57] *** adeliktas5 is now known as adeliktas
[07:11:08] *** Joins: zebrag (~chris@user/zebrag)
[07:11:45] *** Joins: thevar1able (~textual@46.39.45.122)
[07:12:20] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 268 seconds)
[07:12:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:12:59] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[07:13:29] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[07:13:33] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[07:13:39] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[07:13:50] *** Joins: ano (~ano@user/ano)
[07:14:35] *** xtor is now known as extor
[07:14:38] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[07:14:48] *** Joins: thevar1able (~textual@46.39.45.122)
[07:16:01] *** Quits: percyc (~percyc@183.236.188.154) (Remote host closed the connection)
[07:16:43] *** Joins: d00gy (~tonberry@user/d00gy)
[07:16:52] <monkeyPlus> ok so my problem : ok..thihttps://bpa.st/NNJQ
[07:17:03] <monkeyPlus> https://bpa.st/NNJQ
[07:17:41] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[07:18:04] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[07:18:53] *** Joins: percyc (~percyc@183.236.188.154)
[07:19:25] <tpr> what do you want to do exactly? if you just want to convert string to bytes, you could use encode() to do that
[07:19:48] <monkeyPlus> i want to read a file, convert the strings (from readlines()), to bytes, and get a list of bytes
[07:20:41] <nedbat> monkeyPlus: do you want the bytes in the file? You can open it with mode "rb", and then: the_bytes = f.read()
[07:20:59] <monkeyPlus> no this is text ...
[07:21:00] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:21:07] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[07:21:15] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[07:21:19] <nedbat> monkeyPlus: but you want bytes you said. You can read a text file with "rb".  Tell us more about why you want byets.
[07:21:26] *** Joins: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b)
[07:21:33] *** Joins: ClearlyRandom (~Android@075-132-054-135.res.spectrum.com)
[07:21:42] <monkeyPlus> actually the python manual, told me there were several options for IO ..namely text io and binary io
[07:21:53] <monkeyPlus> so i was going for the manual thought:)
[07:22:02] *** Quits: ClearlyRandom (~Android@075-132-054-135.res.spectrum.com) (Client Quit)
[07:22:08] <nedbat> monkeyPlus: tell us about the problem.  why do you want bytes?  You can read a file as text and get strings, or as bytes and get bytes.
[07:22:46] <monkeyPlus> im comparing bytes...
[07:22:57] <monkeyPlus> from other stuff
[07:23:14] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[07:23:17] <nedbat> monkeyPlus: if you want the bytes that are in the file, open it with "rb", and get a bytestring with f.read()
[07:23:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com)
[07:23:36] *** Joins: johnkeats6 (~johnkeats@2804:18:18c4:18d2:b42e:6d23:bcbd:e5da)
[07:23:47] <monkeyPlus> but it will read all of it ?? or by chunks..the text file is medium size
[07:23:54] <monkeyPlus> so oit will read one time?
[07:24:08] <nedbat> monkeyPlus: it will read all of it, but so will .readlines().  .read() is more convenient for you
[07:24:18] <monkeyPlus> oh ok
[07:24:22] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[07:24:33] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com) (Client Quit)
[07:24:34] <monkeyPlus> yes ..lol its true..same think
[07:24:37] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[07:24:38] <monkeyPlus> think=thing
[07:24:57] <monkeyPlus> but like...is readlines used in large text files?
[07:25:17] <monkeyPlus> does python interally, takes care of performance?
[07:25:25] <monkeyPlus> well anyway ill use read :) thks
[07:25:47] <monkeyPlus> well..this is going to put my code more compact :)
[07:26:17] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:fc5e:9bf7:74f4:9176) (Ping timeout: 240 seconds)
[07:28:30] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:28:58] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:29:02] *** Joins: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net)
[07:29:08] <jamea> how to do:   getTime1  <Process>   getTime2      and say: duration: 1day 1 hour 28 minutes 12 secs ?
[07:29:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[07:30:09] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:14] *** Quits: emerent (~quassel@p200300cd57044376ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:30:25] *** Joins: emerent (~quassel@p200300cd5704433eba27ebfffed28a59.dip0.t-ipconnect.de)
[07:30:32] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[07:31:07] *** Joins: ano (~ano@user/ano)
[07:31:36] <SnoopJ> monkeyPlus, readlines() without any arguments will read all the lines in the file, but you can pass the `hint` argument to limit how many bytes/chars (depending on the file mode) you get for each readlines() call. You can also just iterate the file object to get one line at a time
[07:32:20] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:34:33] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[07:34:43] *** Joins: vlm (~vlm@user/vlm)
[07:34:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[07:35:57] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:25] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:20] *** Joins: TML (~tml@user/tml)
[07:38:14] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:38:47] *** Joins: d00gy (~tonberry@user/d00gy)
[07:39:51] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[07:40:07] <jamea> tiempoInicio=time.time() <PROCESS>   tiempoFin=time.time()    elapsed = tiempoFin - tiempoInicio     print(elapsed)   give me: 21.303555965423584       21 seconds ?
[07:40:47] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:44:21] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[07:45:03] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[07:45:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[07:45:51] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[07:45:57] *** Quits: uxemacs (~timothy@2607:fb90:7db8:82ed::164) (Ping timeout: 240 seconds)
[07:48:19] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[07:49:42] <jinsun> jamea: yes
[07:50:55] *** Joins: audiobirb (~audio@user/audio)
[07:52:05] <jinsun> if you want to get days hours minutes seconds, you can just do the math, divide by 24/60 and get remainder
[07:52:06] *** Quits: johnkeats6 (~johnkeats@2804:18:18c4:18d2:b42e:6d23:bcbd:e5da) (Read error: Connection reset by peer)
[07:52:30] *** Joins: johnkeats6 (~johnkeats@2804:18:18c4:18d2:b42e:6d23:bcbd:e5da)
[07:53:07] <jinsun> not sure if there is a readymade thing for that in the stdlib, some external package definitely would have
[07:55:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:55:15] <AhmedAmerican> using Scrapy, am currently within `A` folder and my spider within `A/spiders/spider.py` and there's a text file called `input.txt` within `A/spiders/input.txt`, now when i run my spider `scrapy crawl myspider` then i get an error `FileNotFoundError: [Errno 2] No such file or directory: 'input.txt'`
[07:55:44] *** Joins: nrg (~NRG@user/nrg)
[07:57:02] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[07:57:09] *** Quits: johnkeats6 (~johnkeats@2804:18:18c4:18d2:b42e:6d23:bcbd:e5da) (Read error: Connection reset by peer)
[07:57:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[07:57:32] *** Joins: johnkeats6 (~johnkeats@2804:18:18c4:18d2:b42e:6d23:bcbd:e5da)
[07:57:56] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[07:58:17] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[07:58:26] *** Joins: roxfan2 (~roxfan@109.129.206.185)
[07:59:16] *** Quits: roxfan (~roxfan@109.129.206.185) (Ping timeout: 250 seconds)
[08:01:44] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[08:01:45] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Quit: Leaving)
[08:01:54] *** Joins: djapo (~archangel@user/djapo)
[08:02:04] *** Quits: johnkeats6 (~johnkeats@2804:18:18c4:18d2:b42e:6d23:bcbd:e5da) (Read error: Connection reset by peer)
[08:02:22] *** Quits: M3troidman (~quassel@196.196.203.100) (Quit: uptime reset)
[08:02:28] *** Joins: johnkeats6 (~johnkeats@2804:18:18c4:18d2:b42e:6d23:bcbd:e5da)
[08:03:25] *** Quits: sreve (~quassel@p4ff44f5c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:03:38] *** Joins: Atque (~Atque@user/atque)
[08:03:51] *** Joins: M3troidman (~buttler@196.196.203.100)
[08:04:05] *** Joins: sreve (~quassel@p4ff44dad.dip0.t-ipconnect.de)
[08:04:36] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:04:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:05:58] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:07:13] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 268 seconds)
[08:07:27] *** vdamewood is now known as Guest2444
[08:07:27] *** Quits: Guest2444 (~vdamewood@fedora/vdamewood) (Killed (lithium.libera.chat (Nickname regained by services)))
[08:07:27] *** vinleod is now known as vdamewood
[08:10:18] *** Quits: johnkeats6 (~johnkeats@2804:18:18c4:18d2:b42e:6d23:bcbd:e5da) (Ping timeout: 268 seconds)
[08:13:17] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[08:14:30] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:5c13:6441:aff5:1427) (Quit: Textual IRC Client: www.textualapp.com)
[08:14:36] <llanhmod> hm, didn't know pytest doesn't report passed tests unless they are in a class.
[08:15:02] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 240 seconds)
[08:15:07] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[08:15:21] *** Joins: tristan_ (~tristan@223.33.164.136)
[08:15:36] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[08:18:38] *** Joins: kua (kuahara@072-182-135-032.res.spectrum.com)
[08:21:21] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-56-62.mycingular.net)
[08:21:32] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (Ping timeout: 240 seconds)
[08:22:03] <parv> Convert time.time() to datetime.datetime; subtract to get datetime.timedelta from which obtain the difference in various time units.
[08:22:07] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Ping timeout: 256 seconds)
[08:22:10] *** Quits: dtux (~dtux@2601:646:8f00:3f2:d5df:2c60:fb36:fc53) (Quit: dtux)
[08:23:15] <parv> Converting seconds to larger units seem more direct & preferred way to me
[08:23:16] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:24:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:24:40] <Avdol[m]> `nice!`
[08:24:42] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[08:26:41] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[08:27:22] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[08:27:32] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[08:28:02] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[08:29:16] *** Quits: kua (kuahara@072-182-135-032.res.spectrum.com) (Read error: Connection reset by peer)
[08:29:25] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[08:30:09] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[08:30:09] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (Read error: Connection reset by peer)
[08:30:28] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:30:54] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 250 seconds)
[08:31:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[08:31:57] *** Quits: encukou_ (quassel@nat-pool-brq-t.redhat.com) (Read error: Connection reset by peer)
[08:31:57] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (Ping timeout: 256 seconds)
[08:32:12] *** Quits: strugee (~strugee@ool-4575d6b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[08:32:24] *** Joins: encukou (quassel@nat-pool-brq-t.redhat.com)
[08:32:38] *** Joins: maryo (~Maryo@user/maryo)
[08:32:45] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[08:34:58] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[08:35:21] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[08:36:03] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[08:37:17] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (Read error: Connection reset by peer)
[08:37:53] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[08:38:25] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[08:38:39] *** Joins: ano (~ano@user/ano)
[08:38:42] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[08:39:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[08:39:31] *** Joins: strugee (~strugee@ool-4575d6b1.dyn.optonline.net)
[08:40:13] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[08:40:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:43:37] *** Quits: uuair (~quassel@user/uuair) (Quit: No Ping reply in 180 seconds.)
[08:45:12] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[08:45:12] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (Read error: Connection reset by peer)
[08:45:30] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[08:45:37] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[08:46:09] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[08:46:11] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[08:46:11] *** Joins: uuair (~quassel@user/uuair)
[08:46:15] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[08:47:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:48:43] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[08:48:45] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[08:49:46] *** Joins: jamea (~jamea@177.239.81.39)
[08:50:33] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[08:51:14] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[08:52:57] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Ping timeout: 240 seconds)
[08:54:02] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[08:54:03] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-56-62.mycingular.net) (Ping timeout: 256 seconds)
[08:55:06] *** Joins: saroy (~Sandipan@43.252.250.126)
[08:56:25] *** Joins: uxemacs (~timothy@2607:fb90:7db8:82ed::164)
[08:56:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:58:13] *** Joins: wowi421 (~wowi42@46.252.181.68)
[08:58:17] *** Quits: wowi42 (~wowi_42@185.42.117.170) (Remote host closed the connection)
[08:58:17] *** Quits: wowi421 (~wowi42@46.252.181.68) (Remote host closed the connection)
[08:58:20] *** Joins: et_ (~et@user/et)
[08:59:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[08:59:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[08:59:38] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[08:59:38] *** et_ is now known as et
[09:00:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[09:01:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:01:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:02:05] *** Joins: wowi421 (~wowi42@185.42.117.170)
[09:02:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:02:46] *** Quits: uxemacs (~timothy@2607:fb90:7db8:82ed::164) (Quit: Konversation terminated!)
[09:06:10] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[09:06:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:08:53] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.166)
[09:08:54] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[09:09:02] *** Joins: vanessa (~annada@103.160.128.7)
[09:09:10] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (Remote host closed the connection)
[09:09:24] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[09:09:34] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[09:10:05] *** Quits: Abrax (~Abrax@user/abrax) (Read error: Connection reset by peer)
[09:10:21] *** Joins: jrjsmrtn_ (~jrjsmrtn@ip-193-121-14-167.dsl.scarlet.be)
[09:13:02] *** Quits: jrjsmrtn (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be) (Ping timeout: 240 seconds)
[09:13:38] *** Joins: kua (kuahara@072-182-135-032.res.spectrum.com)
[09:14:11] *** Quits: kua (kuahara@072-182-135-032.res.spectrum.com) (Read error: Connection reset by peer)
[09:14:44] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[09:16:15] *** Joins: kua (kuahara@072-182-135-032.res.spectrum.com)
[09:16:50] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (Ping timeout: 250 seconds)
[09:17:43] *** Joins: Abrax (~Abrax@user/abrax)
[09:20:25] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[09:20:53] *** saroy is now known as bytehackr
[09:21:36] *** Quits: Shikadi (~Shikadi@50.125.190.237) (Ping timeout: 250 seconds)
[09:21:45] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:d28f:3c68:318c:6f99)
[09:21:57] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Ping timeout: 240 seconds)
[09:22:16] <amosbird> Hello! I'm packing libpython3.6m.so.1.0 around in a different location. Now when my binary loads it, it says: ModuleNotFoundError: No module named 'encodings'. How does it find the related python modules? I tried putting related python folder under ../share/python3 but it doesn't seem to work
[09:23:06] *** Joins: han-solo (~han-solo@user/han-solo)
[09:23:07] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[09:23:09] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:d28f:3c68:318c:6f99) (Client Quit)
[09:24:37] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[09:24:50] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:7bb6:91dc:fdaf:7faa)
[09:24:57] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[09:24:57] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[09:26:48] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[09:28:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:28:43] *** Joins: upsala (~zcb@185.213.155.232)
[09:28:50] *** Joins: Vonter (~Vonter@user/vonter)
[09:30:38] <ses1984_> i'm trying to do something similar to curl --connect-to with the requests library, i found this post https://stackoverflow.com/a/61790319 i tried it and i noticed something strange happening
[09:31:43] *** Joins: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com)
[09:31:48] <ses1984_> it seems like when i use this it changes headers into query strings, according to access logs on my web server
[09:32:54] *** Joins: ano (~ano@user/ano)
[09:33:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:33:43] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:34:36] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 250 seconds)
[09:34:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:35:08] *** Joins: analoq (~yashi@user/dies)
[09:36:21] *** Quits: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[09:38:36] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:39:41] *** Joins: luva0 (~luva@146.70.62.245)
[09:39:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[09:41:34] *** Joins: luva06 (~luva@37.120.197.54)
[09:42:17] *** Quits: luva (~luva@45.141.152.53) (Ping timeout: 240 seconds)
[09:42:35] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[09:43:57] *** Quits: luva0 (~luva@146.70.62.245) (Ping timeout: 240 seconds)
[09:43:57] *** luva06 is now known as luva0
[09:44:46] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[09:46:04] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:8d40:66d1:9827:81f3) (Read error: Connection reset by peer)
[09:46:44] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 250 seconds)
[09:47:12] *** Joins: cheater (~Username@user/cheater)
[09:48:28] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[09:49:19] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[09:49:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:52:58] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[09:54:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:55:50] *** Quits: kmh (~kmh@2a00:6020:5004:6800:5cef:1235:f287:aaad) (Quit: Leaving)
[09:56:42] *** Joins: dvx (~dvx@5.181.92.64)
[09:56:58] <dba> is using a lot of decorator a bad thing? This morning a saw a script where the coder used like 5 decorators for a single function
[09:57:34] *** Quits: kua (kuahara@072-182-135-032.res.spectrum.com) (Read error: Connection reset by peer)
[09:57:57] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:f513:b401:16b7:5621) (Ping timeout: 240 seconds)
[09:58:18] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:58:28] *** Joins: emf (~emf@2620:10d:c090:400::5:fe1a)
[09:58:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:59:03] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:59:05] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:bd0d:4775:d7d1:d488)
[09:59:13] <dba> AhmedAmerican: place the input.txt file in the scrapy project level (where you start scrapy) and that should work
[09:59:26] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:bd0d:4775:d7d1:d488) (Remote host closed the connection)
[09:59:37] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[09:59:50] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:bd0d:4775:d7d1:d488)
[10:00:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:01:15] *** Joins: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[10:01:17] <parv> dba, Is f( g( h( i( j( x ) ) ) ) ) any better than 5 decorators?
[10:02:21] <dba> parv: you have a point :D
[10:02:32] *** Quits: roxfan2 (~roxfan@109.129.206.185) (Ping timeout: 240 seconds)
[10:03:08] <parv> dba, With decorators one does not have to track count of brackets.;-P
[10:03:44] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[10:04:14] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[10:04:47] <dba> parv, True
[10:04:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:05:11] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[10:07:08] <parv> dba, You seems to be uneasy with decorators. What are you thinking?
[10:07:58] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:08:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[10:08:20] *** Joins: kmh (~kmh@2a00:6020:5004:6800:151a:944b:c8ba:cf58)
[10:08:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:09:50] <parv> I personally have not used decorators; old fashioned function calls have been working fine for me so far. I am not averse to them; learned recently about them; may use if an opportunity would arrive.
[10:09:54] <BrenBarn> the thing I worry about with lots of decorators is whether they can have unexpected interactions
[10:11:00] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[10:11:01] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:11:22] <dba> parv, I was just curious if we have decorators in this order for example @fun1 @fun2 @fun3 the decoration would start from fun1 and ends in fun3. Also could a decorator fail our project, if it easy to debug
[10:11:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:12:19] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:12:29] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[10:12:34] *** Joins: manti7 (~manti7@176.10.104.94)
[10:12:43] <dba> BrenBarn, that what I was trying to say, is it easy to find/track if it failed our program?
[10:12:53] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:14:28] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:14:49] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[10:18:01] <parv> I do not see how "action at a distance" or debugging complexity would be reduced by switching to plain-old function calls from decorators.
[10:18:48] <parv> ... as long as both versions do the same things
[10:19:23] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[10:20:40] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[10:21:23] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-10.poda.cz)
[10:23:13] *** Joins: jpodivin_ (~jpodivin@cgnat44-pool3-69-10.poda.cz)
[10:23:31] *** Quits: jpodivin_ (~jpodivin@cgnat44-pool3-69-10.poda.cz) (Remote host closed the connection)
[10:23:34] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-10.poda.cz) (Client Quit)
[10:24:56] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-10.poda.cz)
[10:26:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[10:26:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:27:03] *** Joins: JonesExotica (~JonesExot@190.140.125.58)
[10:27:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:28:15] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:30:54] *** Quits: k5tux (~k5tux@67.237.176.10) (Ping timeout: 268 seconds)
[10:31:03] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[10:31:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:31:35] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:ec83:4992:49a4:27c3)
[10:31:43] <deniska> dba: it's common in some frameworks, like click, to have some amount of decorators on a function
[10:32:23] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:33:24] *** Joins: Batzy (~quassel@user/batzy)
[10:34:55] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 256 seconds)
[10:35:17] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 240 seconds)
[10:35:47] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[10:36:35] *** Quits: percyc (~percyc@183.236.188.154) (Quit: Leaving)
[10:36:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:37:05] *** Joins: tWqaq_ (~tWqaq@101.93.138.74)
[10:37:38] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:37:41] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[10:37:52] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:8c93:f7d:2980:8902) (Remote host closed the connection)
[10:38:23] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[10:39:17] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:a32c:8d75:67bb:ec80) (Ping timeout: 240 seconds)
[10:43:40] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[10:43:57] <parv> BrenBarn, After switching from python 2 to 3, my initial expectation was that relative import would work as you recently discussed with SnoopJ (swicthed to absolute imports).
[10:44:21] <parv> s/swicthed/switched/
[10:45:24] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[10:45:41] *** Quits: tristan_ (~tristan@223.33.164.136) (Ping timeout: 256 seconds)
[10:46:12] *** Quits: JonesExotica (~JonesExot@190.140.125.58) (Remote host closed the connection)
[10:49:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:49:39] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:49:57] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[10:50:06] *** Joins: manti7 (~manti7@p57ba338d.dip0.t-ipconnect.de)
[10:50:16] *** Joins: seednode99 (~seednode@user/seednode)
[10:53:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:54:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:57:03] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[10:57:32] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:57:37] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 240 seconds)
[10:58:31] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ef:dcbd:5d2d:ced5:fd7a:5dda)
[10:59:17] *** Quits: vats (~vats@180.149.226.242) (Ping timeout: 240 seconds)
[10:59:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[11:00:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:00:21] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:3990:b270:fa9e:e455)
[11:00:30] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[11:00:40] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:00:48] <aphysically> these dataclasses changes are tricky
[11:01:07] <aphysically> I want to make my change robust, but I also don't want to upset people
[11:01:49] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[11:02:14] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:03:52] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 250 seconds)
[11:04:56] <BrenBarn> @dba: when you have multiple decorators they're applied from the bottom up
[11:04:57] <BrenBarn> i.e., each one decorates the thing below it
[11:04:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:05:34] *** Joins: jpic (~jpic@82.142.23.238)
[11:05:34] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[11:06:09] *** Joins: someuser (~user@197.54.4.96)
[11:07:42] *** Joins: oriba (~oriba@77.11.223.152)
[11:08:37] *** Quits: emf (~emf@2620:10d:c090:400::5:fe1a) (Ping timeout: 240 seconds)
[11:10:56] *** Joins: mrwick (~mrwick@user/mrwick)
[11:14:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:18:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:18:17] *** Quits: manti7 (~manti7@p57ba338d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:18:31] *** Joins: Chewt (~hayden@2601:1c0:8101:7310::144a)
[11:18:50] *** Joins: manti7 (~manti7@176.10.104.94)
[11:19:37] *** Parts: sy (~sy@zm.is) (bai)
[11:19:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:20:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:20:51] *** Quits: gtz__ (~gtz@185.12.215.240) (Ping timeout: 268 seconds)
[11:20:52] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[11:21:22] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[11:22:02] *** Joins: tristan_ (~tristan@223.33.164.136)
[11:22:59] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:26:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:27:03] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:27:05] *** Joins: Atque (~Atque@user/atque)
[11:27:20] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:27:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:28:11] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:28:32] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-89cf-8060-e63c-d389.fixed6.kpn.net) (Quit: No Ping reply in 180 seconds.)
[11:29:48] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-5d41-fbd-1f69-a0df.fixed6.kpn.net)
[11:30:07] *** Joins: cosimone (~user@93-44-185-255.ip98.fastwebnet.it)
[11:30:12] *** Joins: rendar (~rendar@user/rendar)
[11:30:38] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:58] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:10] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[11:31:26] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-6889-d743-d7bf-132c.res6.spectrum.com) (Quit: jarthur)
[11:31:29] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:31:31] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[11:32:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:32:30] *** Joins: Batzy (~quassel@user/batzy)
[11:32:57] *** Joins: grooverman_ (~grooverma@177.102.119.200)
[11:33:34] *** Quits: iomari891 (~iomari891@105.112.138.38) (Remote host closed the connection)
[11:34:59] *** Quits: grooverman (~grooverma@177.102.119.200) (Ping timeout: 256 seconds)
[11:36:06] *** Joins: palasso (~palasso@user/palasso)
[11:36:27] *** Joins: mat001 (~mat001@213.143.69.121)
[11:36:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[11:37:15] *** Quits: someuser (~user@197.54.4.96) (Ping timeout: 256 seconds)
[11:37:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:37:43] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[11:38:35] *** Joins: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:39:35] *** Joins: djapo (~archangel@user/djapo)
[11:40:41] *** Quits: Cienisty (Cienisty@user/cienisty) (Ping timeout: 250 seconds)
[11:42:06] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[11:42:31] *** Joins: ano (~ano@user/ano)
[11:42:37] *** Quits: dgw (dgw@sopel/admin/dgw) (Quit: Stalemate resolved. Core transfer initiated.)
[11:42:49] *** Joins: chele (~chele@user/chele)
[11:43:55] *** Joins: dgw (dgw@sopel/admin/dgw)
[11:44:27] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:45:11] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 256 seconds)
[11:46:18] *** Joins: Z-cat (~Z-cat@user/z-cat)
[11:48:42] <vanessa> I get ModuleNotFoundError even though I have the location of the __init__.py in my $PYTHONPATH
[11:49:48] *** Joins: pycode (~pycode3@2001:b07:5d28:551:fdfc:df60:18ff:782a)
[11:53:22] <vanessa> what is interesting that `PYTHONPATH=/path/to/module python -c 'import module; print(module.__version__);' works but `python main.py` with PYTHONPATH set throws an error.
[11:54:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:54:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:55:02] <The-Compiler> vanessa: you'd usually set PYTHONPATH to a folder, not a file. But also, you usually shouldn't need to mess with it at all - what's your goal?
[11:56:25] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[11:56:31] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 256 seconds)
[11:56:40] <vanessa> The-Compiler: I have a python module that is not available in pypi so I downloaded and compiled the program and I am trying to import it into my script
[11:56:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:56:52] *** Quits: Nutte35 (~Nutte@202.153.81.155) (Read error: Connection reset by peer)
[11:56:57] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[11:57:21] *** Joins: Nutte35 (~Nutte@202.153.81.155)
[11:58:27] <The-Compiler> vanessa: does it have something like a setup.py or pyproject.toml? What do you mean with "compiled"?
[11:58:35] *** Joins: fef (~thedawn@user/thedawn)
[11:58:35] *** Joins: manti7 (~manti7@p57ba338d.dip0.t-ipconnect.de)
[11:59:03] *** Joins: fluter (~fluter@user/fluter)
[12:00:54] <vanessa> The python is an wrapper around a C++ source that I compiled. After comilation I see a bunch of directories that have __init__.py and a bunch of files ending with -x86_64-linux-gnu.so
[12:01:25] *** Quits: Nutte35 (~Nutte@202.153.81.155) (Ping timeout: 240 seconds)
[12:01:59] <BrenBarn> if the `__init__.py` is in directory `foo` you need to put the parent directory of `foo` on pythonpath
[12:02:00] <BrenBarn> not `foo` itself
[12:02:40] <BrenBarn> if you do `import foo` it is going to look for something called `foo`, and it will not find that if `foo` itself is on pythonpath, because it looks *inside* pythonpath
[12:03:00] <vanessa> yes that I did. I added those directories to PYTHONPATH
[12:03:14] *** Quits: manti7 (~manti7@p57ba338d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[12:03:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:03:25] <The-Compiler> vanessa: if you run Python with -v, it will tell you where it's looking for imports and such
[12:05:06] *** Joins: rotherfuchs (~rotherfuc@2001:a61:107f:d001:4120:12b6:a2c4:4f46)
[12:05:52] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[12:05:53] *** Joins: ubert1 (~Thunderbi@p200300ecdf09940ed781da24ea780c96.dip0.t-ipconnect.de)
[12:05:54] *** Joins: bluedust (~bluedust@103.161.144.140)
[12:05:57] <vanessa> The-Compiler: python -v dropped me into a REPL so, I did `python -vc 'pass' | grep module` but grep seems to be broken.
[12:06:09] <rotherfuchs> Hi, since 2to3 support has been dropped I am currently trying to identify any library in my virtualenv that is not Python3 compatible. Is there any easy way to identify those ?
[12:06:57] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 240 seconds)
[12:07:04] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[12:07:05] <vanessa> wow, I managed to break something so tried and tested like grep coreutil
[12:08:20] *** Quits: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 268 seconds)
[12:08:45] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:08:51] *** Quits: jim (~jim@about/linux/staff/jim) (Remote host closed the connection)
[12:08:57] *** Joins: tellu (~rgl_@103.233.100.236)
[12:09:04] *** Joins: xx (~xx@user/xx)
[12:09:46] *** Joins: Cienisty (Cienisty@user/cienisty)
[12:10:08] *** Joins: manti7 (~manti7@95.216.139.244)
[12:10:35] *** Joins: gtz__ (~gtz@46.251.99.222)
[12:13:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[12:14:54] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:1063:970f:9e96:70d4)
[12:15:28] *** Joins: kosh (~kosh@user/kosh)
[12:15:31] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[12:16:10] *** Joins: Klinda (~superleag@user/klinda)
[12:16:45] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[12:17:02] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:ec83:4992:49a4:27c3) (Ping timeout: 240 seconds)
[12:17:08] <ChrisWarrick> rotherfuchs: run it/its tests and see if it fails
[12:17:28] <ChrisWarrick> rotherfuchs: I doubt any library updated in the past few years is py2-only or relied on 2to3
[12:17:44] *** Joins: Spini (~Spininini@166.30.90.149.rev.vodafone.pt)
[12:17:50] *** Joins: ano (~ano@user/ano)
[12:18:41] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:18:58] *** Joins: bindu (~bindu@user/bindu)
[12:19:38] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:20:17] <rotherfuchs> ChrisWarrick we already identified some, i.e. pycli.
[12:20:51] <ChrisWarrick> rotherfuchs: last updated on Feb 29, 2012
[12:20:53] <rotherfuchs> 2to3 uses some mechanism to detect when it's needed, right ?
[12:20:53] *** Joins: jim (~jim@about/linux/staff/jim)
[12:21:17] *** Quits: bart__ (~Xano@2a00:23c4:4204:700:2fd7:d343:a66d:5772) (Ping timeout: 268 seconds)
[12:21:36] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:8844:e45a:1aab:92c2)
[12:21:58] *** Joins: kostkon_ (~androirc@2a02:587:a116:f212:e9fe:555f:b9f4:b8c2)
[12:22:02] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 240 seconds)
[12:22:25] *** Joins: Lenkov45 (~Lenkov45@45.133.193.24)
[12:23:04] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[12:23:41] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: your partner prefers dildos)
[12:24:21] *** Joins: dgw (dgw@sopel/admin/dgw)
[12:24:38] <MootPoot> Can someone handhold me for a little with Django? I'm stuggling to create a accurate mental model of how it all works
[12:25:27] <MootPoot> I've done work in the past with Laravel + PHP - I just need somebody to tell me how it works in a clearer picture, these online resources kind of suck for that
[12:25:36] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:5d8f:20db:5ddd:bcf4) (Ping timeout: 268 seconds)
[12:25:42] *** Joins: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net)
[12:25:52] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[12:25:57] <deniska> MootPoot: anything specific you are confused by?
[12:26:07] *** Joins: tristan_ (~tristan@223.33.164.136)
[12:26:22] <MootPoot> how it all pieces together
[12:27:09] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[12:27:20] <MootPoot> So take this from the user perspective - User goes to mywebsite.com. Django takes that request, goes into its project folder, where it finds a .url registered to an app in the .settings of the project
[12:27:46] <MootPoot> then it goes "oh hey, this request should go over here, to this app! and hands the request over.
[12:27:53] <MootPoot> Is that correct so far?
[12:27:58] <ChrisWarrick> rotherfuchs: I think it needs to be somehow specified in setup.py
[12:28:19] <ChrisWarrick> MootPoot: urls aren’t necessarily registered to apps, urls are registered to views
[12:28:43] <MootPoot> even from the perspective of the project folder?
[12:28:53] <ChrisWarrick> MootPoot: https://docs.djangoproject.com/en/4.0/topics/http/urls/#how-django-processes-a-request would be an overview; a bit too-low-level but it might help
[12:29:02] *** Quits: tellu (~rgl_@103.233.100.236) (Quit: Leaving)
[12:29:04] <deniska> MootPoot: it goes to ROOT_URLCONF specified in settings.py, which then (typically) relays URLs to another urlconf from a specific app
[12:29:08] <MootPoot> from what I can piece together views only exist within apps, which are contained by projects
[12:29:50] <ChrisWarrick> I think you can have views outside of apps (don’t do that though; and it might have changed)
[12:29:57] *** Quits: Lenkov45 (~Lenkov45@45.133.193.24) (Ping timeout: 240 seconds)
[12:30:36] <deniska> Nothing prohibits that, besides stern looks from other django devs
[12:30:41] <ChrisWarrick> MootPoot: urls.py can specify any python function as a view. Typically, the root url configuration includes url configurations from apps, each app has its own config, which configures routes for its views.
[12:31:22] *** Joins: Major_Biscuit (~MajorBisc@c-001-019-027.client.tudelft.eduvpn.nl)
[12:32:32] <MootPoot> I read over that section a few times - one unclear thing about it
[12:32:50] <MootPoot> it dosen't specify or distinguish when the handover happens from project to app
[12:32:58] <MootPoot> or does that handover just not happen?
[12:33:22] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[12:33:31] <MootPoot> I'm imagining it like some OOP thing where the request just gets passed along and its upto the app to figure out what to do with it
[12:33:37] <deniska> MootPoot: in project/urls.py you typically include() urls from apps
[12:34:09] <deniska> MootPoot: like urlpatterns = [path('', include('app.urls'))]
[12:34:45] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:35:05] *** dminuoso_ is now known as dminuoso
[12:35:12] <deniska> MootPoot: or with multiple apps something like urlpatterns = [path('', include('main_app.urls')), path('comments/', include('comments_app.url'))]
[12:35:26] *** Joins: nilson_ (~nilson@2601:c4:c431:d8:4601:bbff:feaf:9214)
[12:35:31] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:35:39] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[12:36:05] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[12:36:07] *** Joins: xkuru (~xkuru@user/xkuru)
[12:36:32] *** Joins: jay-m126 (~jay-m@129.0.99.28)
[12:36:36] *** Joins: jay-m126_ (~jay-m@129.0.99.28)
[12:36:37] *** Joins: jay-m1261 (~jay-m@129.0.99.28)
[12:36:42] <MootPoot> okay
[12:36:50] <MootPoot> so the project urls does the inital filtering
[12:37:10] <MootPoot> then the app url does the filtering afterwards to figure out what sub page etc they go to
[12:37:19] *** Quits: nilson (~nilson@98.242.70.201) (Ping timeout: 256 seconds)
[12:37:35] <MootPoot> wait - no
[12:37:56] <MootPoot> the include in the project urls.py includes all of the app urls - so it should be doing all the pointing
[12:38:34] <deniska> MootPoot: the example I gave means that if a url starts with comments/, it will relay it to comments app router
[12:38:39] <MootPoot> sounds like technically you could just designate all your URLpaths for your apps in the project url.py if you wanted to annoy some senior Django devs
[12:38:51] <deniska> MootPoot: sure
[12:39:26] <MootPoot> ayy, sweet. 3 hours of digging though docs didn't get me as far as this one convo did
[12:39:34] *** Joins: thiras (~thiras@user/thiras)
[12:39:36] <deniska> MootPoot: then in comments/urls.py you may have something like urlpatterns = [path('post', views.post_comment, name='post_comment'), path('vote', views.vote, name='vote_comment')]
[12:39:59] <deniska> so now when url is comments/vote, views.vote from comments app gets hit
[12:42:07] <MootPoot> ahhhhh
[12:42:08] <MootPoot> okay
[12:42:11] <MootPoot> that makes sense
[12:42:39] *** Parts: White_Flame (~quassel@user/white-flame/x-6930243) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:43:02] <MootPoot> okay, so once it goes deeper and gets to the app
[12:43:02] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) ()
[12:43:12] <MootPoot> how does the templating work
[12:43:37] <MootPoot> is it just bound to the name="something" variable in the urlpatterns??
[12:44:07] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:44:11] *** Joins: Auron (Auron956@user/auron)
[12:44:28] <MootPoot> then it'll just throw that template up
[12:44:53] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:45:03] <deniska> MootPoot: you should probably go through django tutorial. A view function typically ends with `render(request, 'template_name.html', context)`
[12:45:33] <MootPoot> I went though it - but it was more like a blind monkey smashing away at the keyboard
[12:45:37] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[12:45:39] *** Quits: dminuoso (~dminuoso@static.88-198-218-68.clients.your-server.de) (Changing host)
[12:45:39] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[12:45:44] <MootPoot> right now I'm doing the freecodecamp blog build
[12:45:51] <deniska> MootPoot: template_name.html being available through some_app/templates/template_name.html
[12:46:00] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:f59b:dc05:7e69:4066)
[12:46:08] <MootPoot> I figured out the details from it, but it wasen't enough to give me a clear picture of what is going on
[12:46:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:46:56] <MootPoot> Last 2 questions I'm not sure about
[12:47:01] <deniska> MootPoot: (name='something' in path() params is so that in a template you can use {% url 'something' %} to get a url for a route without hardcoding it)
[12:47:14] <vanessa> is it not possible to import a .py file into a script? I am getting error when I try to get $PYTHONPATH/path/to/dir/module.py by `from path.to.dir.module import class_in_module`
[12:47:48] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:1063:970f:9e96:70d4) (Ping timeout: 268 seconds)
[12:47:53] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[12:47:57] *** Joins: Deana (~Deana@smtp.okb2-tmn.ru)
[12:47:58] <vanessa> and I get ModuleNotFoundError
[12:48:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[12:49:58] <jinsun> are you able to just import path ?
[12:50:03] <MootPoot> got it about the templates
[12:50:08] <Repiphany> Does path/__init__.py exist
[12:50:22] <MootPoot> what is the relation between the admin.py and the models.py
[12:50:29] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:50:31] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:50:37] <MootPoot> models.py you create your DB tables, I get it
[12:50:45] <MootPoot> but why do you have to register them?
[12:51:00] <MootPoot> like- you already makemigration and migrate them into the DB, why do they need to be registered
[12:51:17] <deniska> MootPoot: if they're not registered, they won't show in the admin interface
[12:51:21] <MootPoot> OH
[12:51:25] <MootPoot> so that's what that was
[12:51:48] <MootPoot> okay, so the admin interface is basically a easy way to interact with your DB
[12:51:50] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[12:52:08] <MootPoot> I was wondering why Django was providing a pre built webpage in there
[12:52:39] <deniska> yeah, it's kinda like having phpmyadmin installed, but a bit more tailored to your app
[12:53:53] *** Joins: shad (~shad@user/shad)
[12:54:25] <MootPoot> Weird shit...so as I understand it the admin page is like a GUI ORM?
[12:54:41] <MootPoot> Since you have to register it I assume it dosent directly interact with the database
[12:54:51] *** Joins: cdown_ (~cdown@188.214.11.14)
[12:56:00] <deniska> MootPoot: I guess it could introspect existing models, like the ORM migration util does, but it chose not to, because sometimes people do build user facing sites (or at least parts of them) on top of admin interface, and you may want not to expose some models in this case
[12:56:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:57:32] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[12:57:38] *** cdown_ is now known as cdown
[12:58:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[12:58:30] <deniska> MootPoot: or, while being built into django, admin interface is technically a separate app, so maybe the authors chose not to do "magic" you typically wouldn't do in an app
[12:59:50] <MootPoot> okay, I get it
[13:00:12] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[13:00:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:00:18] <MootPoot> last thing - the views.py file
[13:00:40] <MootPoot> take for example = def home(request):
[13:00:40] <MootPoot>     return render(request,'home.html',{})
[13:00:48] *** Joins: bluedust (~bluedust@103.161.144.140)
[13:00:51] <MootPoot> 1.) what is request and what's in it
[13:00:59] <MootPoot> is it just a container for httpRequest?
[13:01:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:01:18] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[13:01:36] <ChrisWarrick> a container?
[13:01:49] <ChrisWarrick> MootPoot: https://docs.djangoproject.com/en/4.0/ref/request-response/
[13:01:50] <MootPoot> object, I guess would be a better term
[13:02:28] *** Quits: cosimone (~user@93-44-185-255.ip98.fastwebnet.it) (Remote host closed the connection)
[13:02:43] *** Quits: rotherfuchs (~rotherfuc@2001:a61:107f:d001:4120:12b6:a2c4:4f46) (Quit: Client closed)
[13:03:57] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[13:04:19] <deniska> MootPoot: it's an object representing the http request being handled. URL, method, get/post data etc
[13:04:29] *** Joins: a0z1 (~a0z1@185.248.85.52)
[13:04:29] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[13:04:57] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[13:05:39] <MootPoot> alright- docs were pretty clear on that. I should have looked that one up myself tbh.
[13:06:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[13:07:32] <MootPoot> the last thing I dont get is the relationship between views.py and url.py
[13:07:35] *** Joins: roppert (~roppert@inb4.se)
[13:07:56] *** Babar is now known as Guest2487
[13:07:57] *** Quits: Guest2487 (~Babar@2405:4803:ff4d:98d0:bd0d:4775:d7d1:d488) (Ping timeout: 240 seconds)
[13:07:58] <ChrisWarrick> MootPoot: could you be more specific?
[13:07:58] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:5cf0:9b0e:741e:349e)
[13:08:10] <MootPoot> let me post some code
[13:08:14] <MootPoot> so in urls.py =
[13:08:21] <MootPoot>   path('', views.home, name="home"),
[13:08:32] <MootPoot> views.py =
[13:08:32] <MootPoot>     return render(request,'home.html',{})
[13:08:33] <deniska> MootPoot: use https://bpa.st/+python if it's longer than one line :)
[13:08:46] <MootPoot> ooh
[13:08:49] <MootPoot> bookmarked for later
[13:09:09] <MootPoot> but as for the code - I notice that there is a home in both of them
[13:09:18] <ChrisWarrick> MootPoot: there are three homes here
[13:09:25] <MootPoot> my template file is also called home.html
[13:09:33] *** Joins: vats (~vats@180.149.226.242)
[13:09:33] *** Quits: a0z1 (~a0z1@185.248.85.52) (Quit: Leaving)
[13:09:45] <MootPoot> ChrisWarrick: yeah- its the relationship between my three "homes"
[13:09:49] <ChrisWarrick> MootPoot: views.home is the name of the view function that will be called when the URL matches the '' pattern (probably the root directory)
[13:10:12] <ChrisWarrick> MootPoot: home.html is the template file used to render this view
[13:10:59] <ChrisWarrick> MootPoot: and the name="home" can (should) be used to get a URL for it, eg. reverse('home') in python and {% url home %} in templates
[13:11:14] *** Joins: jamea (~jamea@177.239.81.39)
[13:11:32] <ChrisWarrick> you could replace views.home with views.foo, home.html with bar.html, and name="home" with name="baz", and as long as you adjust them in views.py and in templates/, it will work
[13:12:39] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:59] *** Joins: cdown_ (~cdown@163.114.131.1)
[13:13:03] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[13:13:16] *** Joins: roxfan2 (~roxfan@109.129.206.185)
[13:13:37] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[13:14:41] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:15:05] *** Joins: jazzy (~jaziz@user/jaziz)
[13:15:25] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[13:15:26] *** cdown_ is now known as cdown
[13:15:37] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:17:02] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[13:17:17] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Ping timeout: 240 seconds)
[13:18:10] *** boris[m] is now known as Vasilis[m]
[13:19:56] *** Vasilis[m] is now known as boris[m]
[13:20:03] <MootPoot> Okay
[13:20:15] <MootPoot> So they aren't really related
[13:20:19] *** Joins: bart__ (~Xano@2a00:23c4:4204:700:8ef:52cb:6f5c:55dc)
[13:22:58] *** Joins: davep (uid504677@id-504677.tinside.irccloud.com)
[13:23:47] <MootPoot> Got it, thank you
[13:23:58] <MootPoot> deniska: you too
[13:24:15] <MootPoot> they were dumb questions but it helped massively being humored.
[13:24:58] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:25:04] <wyre> why this layout https://setuptools.pypa.io/en/latest/userguide/declarative_config.html#using-a-src-layout doesn't need the pyproject.toml?
[13:25:11] *** Quits: roxfan2 (~roxfan@109.129.206.185) (Remote host closed the connection)
[13:25:21] *** Joins: someuser (~user@197.54.108.134)
[13:27:06] <wyre> also ... what's the difference between pyproject.toml and setup.cfg? both apparently use the very same syntax 🤔
[13:27:36] *** Joins: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[13:27:44] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[13:28:28] <wyre> and I'd say ... they could contain same directives ...
[13:28:35] *** Quits: bjourne (~bjourne@2001:6b0:1:1140:42bf:ff4:f8fa:50e5) (Quit: Konversation terminated!)
[13:30:22] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:2533:d1b8:8dc:cf10)
[13:32:26] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:32:49] *** Joins: rMdes (~rmdes@my.armada.digital)
[13:32:52] <jinsun> wyre: the layout doesn't matter, pyproject.toml is required if you want a pep 517 backend
[13:33:28] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[13:33:39] <wyre> jinsun, but could contain duplicate directives? (pyproject.toml and setup.cfg)
[13:33:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:34:03] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:f59b:dc05:7e69:4066) (Ping timeout: 268 seconds)
[13:34:07] <jinsun> you can do without pyproject.toml if you use setuptools, because the tools have a legacy fallback for setuptools, but dont do it
[13:34:13] *** Quits: PsyZeus (~TheLight@user/psyzeus) (Ping timeout: 240 seconds)
[13:34:43] <wyre> yes, but I'm confused because I'm not sure if pyproject.toml + setup.cfg are like an alternativo for setup.py
[13:34:48] <wyre> or if I should have the three
[13:34:54] <jinsun> wyre: no, the setuptools configuration goes only in setup.cfg, pyproject.toml is just there to specify build system requireements, like setuptools version
[13:35:48] <jinsun> if you don't use setuptools then, setup.cfg/setup.py is not required, other tools usually put their config in pyproject.toml
[13:38:10] <wyre> jinsun, could I see all directives accepted by pyproject.toml and the setup.cfg specific directives somewhere?
[13:38:19] *** Quits: DreamweaverN (~Dreamweav@37.48.111.199) (Ping timeout: 250 seconds)
[13:38:46] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[13:38:50] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[13:38:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:38:57] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:3990:b270:fa9e:e455) (Ping timeout: 240 seconds)
[13:38:59] <wyre> are these for setup.cfg? https://setuptools.pypa.io/en/latest/userguide/declarative_config.html#specifying-values
[13:39:16] *** Joins: tomg_ (~tomg@user/tomg)
[13:39:29] <jinsun> I think setuptools docs would have the setup.cfg stuff, though they are pretty bad, so might not cover literally everything accepted
[13:40:16] *** Joins: DreamweaverN (~Dreamweav@2001:1af8:4700:b0d0:a800::)
[13:40:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:40:53] <wyre> I'd like to check the sets accepted by each one 🤔
[13:41:18] <jinsun> for pyproject.toml there is not much to know if you use setuptools, just build-system requires and build-backend are the things to care about, you can see how to specify them here https://packaging.python.org/en/latest/tutorials/packaging-projects/#creating-pyproject-toml
[13:41:32] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 240 seconds)
[13:41:43] *** Joins: PsyZeus (~TheLight@2001:1af8:4700:b0e0:e00::)
[13:41:43] *** Quits: PsyZeus (~TheLight@2001:1af8:4700:b0e0:e00::) (Changing host)
[13:41:43] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[13:42:08] <jinsun> if you decide to switch from setuptools to flit which is PEP 621 compatible, then reading PEP 621 will be useful https://www.python.org/dev/peps/pep-0621/
[13:43:04] <jinsun> and for other tools like poetry, see their docs about how to configure them
[13:44:08] *** Joins: ndim (hun@moooo.n-dimensional.de)
[13:44:12] *** Quits: ouestbillie (~gallup@193.138.218.214) (Ping timeout: 250 seconds)
[13:44:32] <jinsun> the point is, that pyproject.toml and setup.cfg are just config files, the tool you use will define what options are acceptable
[13:44:41] <wyre> I see
[13:44:58] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:45:04] <wyre> but can apparently metadata be on any of both? setup.cfg or pyproject.toml
[13:45:41] <wyre> there is no such pep as this 0621 but for setup.cfg?
[13:46:02] <jinsun> setup.cfg is setuptools specific, not a standard
[13:46:05] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[13:46:05] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[13:46:35] *** Quits: _ev (ev@user/ev/x-8999918) (Quit: Leaving.)
[13:46:36] *** Joins: cosimone (~user@93-44-185-255.ip98.fastwebnet.it)
[13:46:38] <jinsun> and setuptools doesn't put any metadata in pyproject.toml, it uses setup.py and setup.cfg only
[13:46:55] *** Joins: Atque (~Atque@user/atque)
[13:48:04] <jinsun> as I mentioned before, if you use setuptools you need pyproject.toml only for build-system requires and build-backend (which is not metadata)
[13:49:12] *** Joins: Angs (~Angs@2a02:aa1:1015:bae4:2b5e:6266:f1e1:402f)
[13:49:20] *** Joins: dyens (~user@dyens.info-lan.me)
[13:49:39] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[13:52:16] *** Joins: andreasbuhr (~quassel@p549db3ef.dip0.t-ipconnect.de)
[13:52:30] <jinsun> wyre: and yes, you can have all the three, pyproject.toml for specifying build backend, setup.cfg for static metadata, and setup.py for some fancy dynamic build that setup.cfg cannot support
[13:54:23] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[13:54:54] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:55:54] *** Quits: vanessa (~annada@103.160.128.7) (Ping timeout: 250 seconds)
[13:56:16] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[13:56:57] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 240 seconds)
[13:57:54] *** Joins: vanessa (~annada@103.160.128.7)
[13:59:41] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[14:00:13] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[14:00:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:00:37] *** Quits: tristan_ (~tristan@223.33.164.136) (Ping timeout: 256 seconds)
[14:00:48] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[14:01:18] *** Joins: md618 (~md618@129.31.149.36)
[14:01:52] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:04:39] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[14:05:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:05:35] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[14:05:55] <wyre> jinsun, could I drop the setup.py if I'm using pyproject.toml and setup.cfg (I'm using buildtools, yes 😊)
[14:05:57] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[14:06:35] *** Joins: iflema (~ian@user/iflema)
[14:06:48] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:82f1:438:bc8a:caef)
[14:08:09] <jancoow> Are there known issues with windows and serial ports.. because on Linux, i'm writing something over the serial port, followed by a serial.readline() to await response of my device. On Linux, this is going great over 50 runs, no issue at all. On Windows on the other end... A lot of times the readline (with a timeout) times out..
[14:08:17] <jancoow> I'm not flushing in between
[14:08:52] <jinsun> wyre: yes, it is possible to get rid of setup.py and have only  pyproject.toml and setup.cfg, it is actually recommended to do if you have simple pure python project
[14:10:47] <jinsun> the only big reason for keeping setup.py was that editable install didn't work without it, but now that is changed I think with pep 660, havent actually tried it
[14:10:48] *** Joins: tristan_ (~tristan@223.33.164.136)
[14:13:44] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:82f1:438:bc8a:caef) (Remote host closed the connection)
[14:13:58] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:777e:e76b:1130:2573)
[14:14:30] <Tykling> when I do "pip install numpy" on debian10 with py37 I get numpy 1.21.5 as the latest, but the thing I am trying to install is 1.22.1, is it because of my python version or debian version I am not getting the latest?
[14:14:50] <hexa-> python too old
[14:14:53] <Tykling> thanks
[14:15:01] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:a06e:ac9e:e4f2:f270)
[14:15:15] <hexa-> https://github.com/numpy/numpy/blob/v1.22.0/setup.py#L410
[14:15:50] <The-Compiler> hm, indeed: https://numpy.org/doc/stable/release/1.22.0-notes.html#python-3-7-is-no-longer-supported
[14:16:09] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[14:16:30] <Gustavo6046> tuna cod salmon
[14:16:33] <The-Compiler> Python 3.7 dropped back in August, despite it being EOL in mid-2023 only, interesting
[14:16:36] <Gustavo6046> oops
[14:16:50] <Tykling> The-Compiler: yes a bit annoying :)
[14:17:06] *** Joins: thiras (~thiras@user/thiras)
[14:18:27] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:2533:d1b8:8dc:cf10) (Ping timeout: 268 seconds)
[14:18:37] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[14:19:19] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:19:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:19:53] *** Quits: someuser (~user@197.54.108.134) (Ping timeout: 256 seconds)
[14:20:43] <Yhg1s> EOL just means it no longer gets security fixes. It's a really good idea to not stick with it until the last moment anyway, so thank you numpy for helping people push to more secure, stable, performant Python versions :)
[14:20:51] *** Joins: someuser (~user@197.54.108.134)
[14:21:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:22:13] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[14:22:36] *** Joins: tristan_ (~tristan@223.33.164.136)
[14:22:55] <supakeen> I disagree with that view but let's keep it at that :)
[14:23:14] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:23:29] *** Joins: Viewday11 (~Viewday@user/viewday)
[14:23:47] *** Joins: LimeOn (~user@user/limeon)
[14:24:21] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:24:27] <Yhg1s> the view that newer versions are more secure, stable and performant? Or that you shouldn't stick with old versions until the last moment? :P
[14:25:18] <supakeen> Mostly the former (the secure and stable part of it), testing on newer versions is mandatory at least.
[14:25:44] <supakeen> But also the amount of issues the above causes when a popular library drops support for stable distro Python versions.
[14:26:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:26:32] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[14:26:44] *** Joins: brentaarnold_ (~brentaarn@24.112.58.14)
[14:27:02] <Yhg1s> Stable distros use old versions of a lot of things, and it always surprises me how people don't make the connection that that means they can't just install newer versions of select things themselves.
[14:27:33] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Read error: Connection reset by peer)
[14:27:48] <supakeen> Yea, I just don't feel that managing Pythons yourself is an enjoyable endeavour.
[14:27:49] *** Quits: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[14:28:15] <supakeen> Pythons as in the interpreter, not the packages you run :)
[14:28:31] *** brentaarnold_ is now known as brentaarnold
[14:28:50] <Yhg1s> Sure. That's the cost of using stable distros though. You use stable software, for *all* of it, or you have your own stack of ~everything you depend on.
[14:28:50] <supakeen> My preference would be for libraries to have their minimum Python version set to something that's the version in all current stables (not all *supported* stables).
[14:28:55] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[14:29:02] *** Joins: Fremen (~Fremen@161.9.187.28)
[14:29:05] <vanessa> Yhg1s: I think that is not a problem with stable distros, it is a problem with Debian and it's children who have extremely long wait time to be considered stable.
[14:29:07] <supakeen> I understand I can't enforce that or whatever, but it's the approach I take to my own projects.
[14:29:10] <Fremen> Hello everyone
[14:29:31] <Yhg1s> vanessa: not just Debian or Debian-based ones, no.
[14:30:00] <supakeen> Of course the alternative is to 'just' fix the way distros use Python, but that seems politically more hairy.
[14:30:26] <Yhg1s> supakeen: it's not about how they use Python, it's about how *they are stable* (and how long they are supported)
[14:31:10] <Fremen> I graded some python code written by students and some of them does not work on my machine, even though they swear it works on theirs. Are there any tools and websites that I can reference for students to check their code for compatibility for different python installations?
[14:31:13] <Yhg1s> and it's about how that puts a support burden on everyone, sometimes a really big one, and one that the projects don't want to shoulder.
[14:31:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:31:16] <The-Compiler> I have a weird position for this, given that I used Python 3.2 or so when I started Python in 2011 and didn't bother with Python 2 despite people telling me to; but also usually drop Python versions only past their EOL because I don't want to drop them earlier and then I don't get around to actually do so :D
[14:31:48] <The-Compiler> Fremen: hey fellow grader of student projects, hope it's not 100 projects like in my case :D
[14:31:51] <supakeen> Yhg1s: That is indeed the crux of the entire thing, people want to use new stuff.
[14:32:01] <Yhg1s> supakeen: they want to use new stuff while using old stuff :)
[14:32:15] <Fremen> The-Compiler, try 170 hahahaha :D
[14:32:19] <The-Compiler> Fremen: oof
[14:32:33] <Gustavo6046> supakeen, or the stable distros use stable Python and pythonstuffs, and then you use pyenv to do *your own* pythonstuffs, separate from whatever shenanigans the distro does with pythonstuffs
[14:32:34] <supakeen> As in, library developers want to use new stuff and preferably not deal with backwards compatibility.
[14:32:45] <supakeen> Gustavo6046: That's possible as well yes.
[14:32:48] <The-Compiler> Fremen: there are things like linters which can help to some degree (mypy, pylint, flake8), but they will require some work to get started with, and usually also point out a lot of other stuff
[14:32:52] <supakeen> (and what I do right now ;))
[14:32:53] <Gustavo6046> :D
[14:33:08] <Yhg1s> Fremen: I think the most important consideration is which version of Python you're asking them to target. You can go a few versions up/down, but more is harder without just trying and looking at the error.
[14:33:35] * Gustavo6046 gets supakeen all tangled in poetry
[14:33:47] <Yhg1s> supakeen: plenty of people want to deal with backward compatibility, but sometimes you can't, or sometimes you don't want to to the same extent as stable distros.
[14:33:49] <Fremen> But I already graded them and reexamined the codes that students send complaints about. So this is for future reference
[14:34:16] <vanessa> The-Compiler: can Fremen not ask their students to write code in a certain way and run pytest in a loop to grade all students automatically?
[14:34:17] <The-Compiler> Fremen: out of curiosity if you don't mind sharing, what university/school is this, and what was their project?
[14:34:18] <Fremen> Yhg1s, well I told them I have Python 3.9 on my machine and they should use the same
[14:34:21] <Yhg1s> Fremen: so what kind of problems were they?
[14:34:45] <supakeen> Yhg1s: Let's make this concrete, *why* would numpy require 3.8 and not 3.7.
[14:34:52] <Fremen> vanessa, I done that :)
[14:35:18] <Fremen> some students code worked, but others written bad codes so they require some fixing to make it work or etc.
[14:35:23] <The-Compiler> In my case, the University of Science of eastern Switzerland ("OST"), and they wrote a tool to get some statistics and such based on the list of all dogs in the city of Zurich (which is open data). Also they download images from https://random.dog so I can look at doggos for every project I grade :D
[14:35:28] * Gustavo6046 blows into a format string literal (f-string? what's the name again?) like it's a flute
[14:35:33] <deniska> supakeen: assignment expressions? positional-only args?
[14:35:53] <Fremen> This fixing is both takes too much time and unfair to students who get 90-100
[14:36:10] <rb> 1029 doggos
[14:36:32] <Gustavo6046> rb, that is al ot of doggos, do you have enough shelter and food for them?
[14:36:34] <Yhg1s> supakeen: I have no idea.
[14:36:36] <supakeen> 3.8+ was only available in Ubuntu 20.04 and up as the default interpreter.
[14:36:36] <The-Compiler> rb: in any case, not nearly enough!
[14:36:41] <supakeen> It just seems like a really short window.
[14:36:43] <supakeen> But hey :)
[14:36:45] <rb> random.cat also exists but certificate is self signed ;S
[14:36:57] * Gustavo6046 stretches supakeen's window so it is wider
[14:37:16] <The-Compiler> rb: I mean, that kind of fits, they are cats, they do what they want :D
[14:37:19] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[14:37:19] <Gustavo6046> imagine stretching space, like, it's not an actual thing, it's actually the opposite, the absence of things
[14:37:22] <rb> lord above stretch the sky
[14:37:24] <rb> The-Compiler: lol
[14:37:28] <Fremen> The-Compiler, I prefer not to reveal personal information sorry :). But it was a first grade assignment about finding frequency of words of a text file.
[14:37:47] <Gustavo6046> Fremen, oo, like a TF-IDF kind of thing?
[14:37:54] <Fremen> Yhg1s, Some gets syntax errors?
[14:37:57] <Yhg1s> Fremen: okay, that doesn't sound like it's something that would actually work on their computer. You're just looking at code validation, not different installations/Python versions then. I think edX might have tools for this?
[14:38:24] <supakeen> I'd be more convinced with a compelling technical reason to have 3.8 even if subjective but this forces 3.8 on a huge ecosystem (since numpy is used ~~everywhere~~).
[14:38:27] <supakeen> Ok, enough of that :)
[14:38:49] <Yhg1s> supakeen: it doesn't force anyone to use 3.8. It just forces them to use an older version of numpy.
[14:38:59] <Fremen> Gustavo6046, yep but much more simpler, this is their first semester :).
[14:39:13] * Gustavo6046 builds a house where numpy is not used, just for the sake of making the statement that 'numpy is used everywhere' voided
[14:39:21] <supakeen> Yhg1s: Perhaps that's not as much of a problem as I expect it to be, I just have bad experiences with not being able to run the latest of numpy.
[14:39:47] <Gustavo6046> Fremen, ah, that is cool. I'm sure they'll make great students! I have yet to go to university, I've heard bad things about computer science classes in general, but I don't know if those apply to here in Brazil.
[14:40:31] <Gustavo6046> I took a national test some months ago where basically, if you get a good score, you can get accepted in public uni free of charge. I think I'll only know *my* scores on February
[14:40:32] <Fremen> Gustavo6046, I can say the same thing I say to my students, we cannot teach everything here, you must learn to learn stuff by yourself
[14:40:59] <Gustavo6046> So hopefully I should enter uni soon
[14:41:11] <Fremen> Gustavo6046, if you can get in great :), if you cannot, edx or coursera like platforms contain nearly everything we teach too
[14:41:13] <Gustavo6046> I finished high school in 2020, that was a tense year for being in school. :p
[14:41:39] <Fremen> Yhg1s, which edx tools?
[14:41:41] <Gustavo6046> Fremen, yes, sometimes the best way to learn is under one's own parameters.
[14:41:50] <Fremen> yep
[14:42:21] <Fremen> so I assume there is easy way for my students to test their code against different python versions and installations?
[14:42:27] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:42:28] <Fremen> no easy way*
[14:42:54] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[14:42:57] <Yhg1s> Fremen: https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/exercises_tools/external_graders.html perhaps.
[14:43:06] <Gustavo6046> I've seen this video where a person, presumably someone with some degree of academic knowledge on stuff like teaching or sociology, talks about how schools aren't very good to teach young people to be better people, because they use grades as a "motivation" for students to learn, so the learning becomes just a means to an end, a chore in the way of good grades.
[14:43:17] <Gustavo6046> And a bunch of other interesting things
[14:44:00] <Gustavo6046> The title was a bit inflammatory, though... https://www.youtube.com/watch?v=fe-SZ_FPZew
[14:44:05] <Gustavo6046> :p
[14:44:15] <Gustavo6046> I think it's hard to get the attention of people nowadays
[14:44:29] <Fremen> Gustavo6046, that is correct in a sense
[14:44:32] <Gustavo6046> I think that explains the deliberate exaggeration in titles
[14:44:33] <Yhg1s> Fremen: the way for them to test against different Python versions is to install those different Python versions and run their tests with them. There are easy tools to run tests against multiple python versions, like tox and nox.
[14:45:13] <Fremen> Gustavo6046, however, for some people at least, without external motivation, they will not do or learn anything.
[14:45:29] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:45:31] <jinsun> supakeen: the reason is just numpy policy, NEP 29 says python versions are supported for 42 months only https://numpy.org/neps/nep-0029-deprecation_policy.html
[14:45:35] <Fremen> so for those people external carrot and stick is a requirement
[14:45:49] <Fremen> Yhg1s, ok thanks very much, I will check them out :).
[14:46:02] <Gustavo6046> Fremen, like some people, if given the opportunity, will just sit around doing nothing in the day, without pursuing their interests or anything?
[14:46:09] *** Quits: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[14:46:21] <Fremen> Gustavo6046, exactly
[14:46:37] <flower_> how can I round nanoseconds to 3 digits in logging via datefmt?
[14:46:37] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:5cf0:9b0e:741e:349e) (Ping timeout: 240 seconds)
[14:46:56] <flower_> .%f
[14:47:16] *** Quits: dsrt^ (~dsrt@96-86-240-178-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:47:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:47:55] <nedbat> i used signal.signal in coverage.py 6.3 released yesterday, and now it seems like I should have understood it better... the docs https://docs.python.org/3/library/signal.html#signal.signal say, "when threads are enabled, signal() can only be called from the main thread".  What does "threads are enabled" mean?
[14:48:26] <Fremen> The-Compiler, thanks very much too for conversation :). Have a nice day.
[14:48:38] <Yhg1s> nedbat: it no longer means anything. threads used to be optionally enabled (as well as optionally compiled in)
[14:48:38] <baltazar> hi! what package would you recommend for creating an http server / rest api?
[14:48:49] <Gustavo6046> Maybe some of those actually have a much more abstract or fictitious set of interests, maybe they even keep some of those to themselves. My hypothesis is that, since conventional learning and society makes people lose their innate drive in "productive" interests, they will seek interests that are as distant as possible.
[14:48:55] <Gustavo6046> "Can't wait to get my degree in Dungeons and Dragons!"
[14:48:56] <nedbat> Yhg1s: ok, that's what I guessed.
[14:49:14] <Gustavo6046> Fremen, it was very nice to meet you! :)
[14:52:05] <Gustavo6046> Oh yeah, I should elaborate a bit on the latter part. People lose their innate drive in "productive" interests because (a) they have a limited amount of time and energy to spend on interests; (b) jobs and hobbies are conventionally held separately from each other; (c) "job-like" activities should be reserved for circumstances in which it actually provides a person with money to bea able to live and have living standards, i.e. a job; (c) labour
[14:52:05] <Gustavo6046> activities are only really enjoyable when they're made for the sake of themselves, that is, out of an innate drive or interest, rather than as a means to an end (or rather, to a paycheck).
[14:52:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:52:42] <Gustavo6046> So it would be a natural consequence that people will tend to keep the play and the work separate. At least that's my hypothesis
[14:52:51] *** Joins: naranja (~orange@user/orangeboxcutter)
[14:55:10] <Gustavo6046> I think an example helps. Someone who works by sculpting toys out of wood is going to feel like working with wood is a tedious task, because after all, every day they sculpt wood for a living. So they wouldn't really want to sculpt more wood in their off-days.
[14:55:20] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[14:55:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:56:04] <Gustavo6046> Probably too vague and too specific at the same time. I don't think I'm good at making workable hypotheses
[14:56:08] <Gustavo6046> Ah damn I got carried away, sorry
[14:56:29] <Fremen> Gustavo6046, you too :). Definitilty use the online learning materials, they are very good alternatives to university that was not available before.
[14:56:45] <Gustavo6046> Hmm, I'll consider it. Thank you!
[14:56:52] *** Joins: Vonter (~Vonter@user/vonter)
[14:57:15] <Fremen> check out MOOCS page on Wikipedia.
[14:57:32] <Gustavo6046> Maybe I shouldn't pursue software engineering. Maybe I should pursue sociology. I wonder if there are kinds of software work where a sociology degree would be helpful. Maybe when writing social platforms :p
[14:58:12] <jancoow> Wauw. https://github.com/pyserial/pyserial/issues/394
[14:58:16] <Gustavo6046> (pursue as in academically, not as in what I would do for a living. I definitely enjoy writing code and writing music, maybe I should make an online ngame and accept donations)
[14:58:24] <Gustavo6046> s/ngame/game
[14:59:31] <kosh> if you like writing code and music maybe try to create a program to generate music
[14:59:43] <kosh> you could even try to figure out how to generate music with different themes
[15:00:23] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ef:dcbd:5d2d:ced5:fd7a:5dda) (Ping timeout: 268 seconds)
[15:00:24] <Gustavo6046> haha, Peer 2 Peer University
[15:00:43] <Gustavo6046> kosh, oh, I've once tried to train a neural network to generate notes. It didn't really work out lol
[15:00:51] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:01:12] <kosh> Gustavo6046, you could read up on that, there are even example networks you can play with
[15:01:30] <Gustavo6046> I should definitely read more and plan ahead more about stuff I intend to do.
[15:01:31] <kosh> Gustavo6046, but that is a project that involves many different parts and a lot of opportunity for tinkering and learning
[15:01:37] <Gustavo6046> I don't plan ahead to do stuff, which is doubly bad because I have ADHD
[15:01:52] <Gustavo6046> kosh, true
[15:02:11] <Gustavo6046> I think it was in javascript and a simple website demo thing so I could see (hear?) the code in action.
[15:02:25] <Gustavo6046> I think I put it in GitHub, I just don't remember the name of the repo
[15:02:48] <Gustavo6046> Ah, found it!
[15:02:52] <Gustavo6046> https://github.com/Gustavo6046/sensetrack
[15:03:31] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[15:03:31] *** Quits: {4144} (~{4144}@46.56.68.191) (Ping timeout: 256 seconds)
[15:04:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:04:02] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[15:04:09] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:04:18] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ef:dcbd:5d2d:ced5:fd7a:5dda)
[15:04:27] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[15:04:59] <Gustavo6046> i think you can just open web/index.html
[15:05:49] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:06:17] <Gustavo6046> the overarching idea I had back then was, since some games had these adaptive music tracks where it would change depending on the mood or situation, what if instead we just trained a neural network that outputs a stream of MIDI notes, and then change the inputs for mood or event IDs, so the network would reflect that in its output in real time?
[15:06:23] *** Joins: maryo87 (~Maryo@user/maryo)
[15:06:29] <Gustavo6046> rather than having to wait until this bar is over to transition to the next section, or something like that
[15:07:12] <kosh> Gustavo6046, you will have to do research and read papers to figure that out but it would be cool
[15:07:23] <Gustavo6046> kosh, yeah it's a bit of a complicated topic
[15:08:11] <Gustavo6046> for example it's complicated to embed multiple moods in a melody without causing some weird dissonance or stuff like that, some songs have to be very careful, like offseting just a few notes here and there as a nod to a different 'interval'
[15:08:57] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:08:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:09:16] *** Joins: on^ (~on@96-86-240-178-static.hfc.comcastbusiness.net)
[15:09:18] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[15:09:45] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[15:10:25] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:10:52] *** Joins: timmot (~timmot@207.148.85.201)
[15:11:37] *** Joins: legola (~legola@46.235.100.54)
[15:11:50] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:12:15] *** Quits: Fremen (~Fremen@161.9.187.28) (Quit: Leaving)
[15:12:32] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:12:48] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[15:13:14] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[15:13:38] *** Joins: bluedust (~bluedust@103.161.144.140)
[15:14:12] <jancoow> I can't believe this bug is still in pyserial. And nowhere those issues are in the documentation
[15:14:35] <jancoow> This seriously took us 4 days to debug our devices and communication
[15:14:48] <jancoow> Very sad....
[15:15:08] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[15:15:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[15:15:55] *** Joins: bytehackr (~Sandipan@43.252.250.126)
[15:15:57] *** Quits: tristan_ (~tristan@223.33.164.136) (Ping timeout: 240 seconds)
[15:17:57] *** Quits: manti7 (~manti7@95.216.139.244) (Ping timeout: 240 seconds)
[15:18:42] *** Quits: sn_fk_n (~snufkin@2.221.192.124) (Quit: Lost terminal)
[15:18:58] *** Quits: mjsir911 (~bnc@user/mjsir911) (Quit: Goodbye, World!)
[15:19:13] *** Joins: mjsir911 (~bnc@user/mjsir911)
[15:19:29] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:19:36] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:20:41] *** Joins: manti7 (~manti7@176.10.104.94)
[15:20:42] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275)
[15:21:53] *** Joins: sn_fk_n (~snufkin@2.221.192.124)
[15:22:04] *** Joins: pro_z_ (~pro_z@37.214.69.237)
[15:22:17] *** Joins: zeden (~zeden@user/zeden)
[15:23:00] <leitz> use subprocess vice os.popen?
[15:24:32] *** Quits: jay-m1261 (~jay-m@129.0.99.28) (Ping timeout: 240 seconds)
[15:24:32] *** Quits: jay-m126_ (~jay-m@129.0.99.28) (Ping timeout: 240 seconds)
[15:25:26] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:25:37] *** Joins: jay-m126_ (~jay-m@129.0.99.28)
[15:25:42] *** Joins: jay-m1261 (~jay-m@129.0.99.28)
[15:26:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:27:57] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
[15:28:02] <leitz> Since I just got it to work, I'll take that as a yes.  :)
[15:28:03] *** Joins: Vonter (~Vonter@user/vonter)
[15:28:13] <supakeen> You'd use the subprocess.run interface, preferably.
[15:28:18] *** Quits: maryo87 (~Maryo@user/maryo) (Quit: Leaving)
[15:28:20] <supakeen> Which can do the same things as os.Popen.
[15:28:20] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:90c2:672d:509b:6d6c)
[15:28:50] <leitz> supakeen, gotcha. I'm using run, working on capturing the output now.
[15:29:26] <supakeen> If you want the Popen-like interface I'd assume you want to interact with the process as it runs?
[15:29:30] *** Joins: dez (uid92154@user/dez)
[15:29:44] *** Joins: Klinda (~superleag@user/klinda)
[15:29:59] *** Joins: ouestbillie (~gallup@45.83.220.195)
[15:30:09] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 256 seconds)
[15:30:11] *** Joins: roxfan2 (~roxfan@109.129.206.185)
[15:30:13] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:a06e:ac9e:e4f2:f270) (Ping timeout: 240 seconds)
[15:31:03] *** Quits: grooverman_ (~grooverma@177.102.119.200) (Remote host closed the connection)
[15:31:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[15:31:19] <leitz> supakeen, not really. I'm playing with socketserver, and setting it to query a database. So the socketserver just returns the db results.
[15:32:03] *** Joins: grooverman (~grooverma@177.102.119.200)
[15:32:13] *** Joins: cdown_ (~cdown@188.214.11.14)
[15:32:32] *** Quits: visl (visl@user/visl) (Ping timeout: 240 seconds)
[15:35:25] *** Joins: complexnumber (~brett@59-102-21-42.tpgi.com.au)
[15:35:32] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[15:35:35] *** cdown_ is now known as cdown
[15:35:55] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:37:15] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:37:55] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:38:01] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:38:16] *** Quits: kaiseisei (~Thunderbi@183.191.221.65) (Quit: kaiseisei)
[15:38:50] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:39:01] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[15:41:08] <supakeen> Ok well, in that case you likely want `subprocess.run(..., capture_output=True)`.
[15:41:17] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[15:41:41] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Client Quit)
[15:41:42] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[15:42:42] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[15:42:45] <leitz> Yup. Sometimes the docs pages make sense to me, sometimes not. In this case, it seems to be taking me a little bit forward.   :)
[15:45:42] *** Quits: Deana (~Deana@smtp.okb2-tmn.ru) (Quit: Konversation terminated!)
[15:46:50] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:46:52] *** Joins: anotheruser (~user@45.130.86.2)
[15:47:05] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:47:30] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:47:40] *** Quits: anotheruser (~user@45.130.86.2) (Read error: Connection reset by peer)
[15:47:45] *** Joins: demon__ (~user@197.54.108.134)
[15:48:22] *** Joins: awmv (~awmv@178.238.173.190)
[15:49:59] *** Quits: someuser (~user@197.54.108.134) (Ping timeout: 256 seconds)
[15:51:03] <nedbat> Yhg1s: are there other reasons signal.signal might raise ValueError? I'm wondering about checking if i'm the main thread, or just catching the value error
[15:51:34] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:90c2:672d:509b:6d6c) (Ping timeout: 268 seconds)
[15:51:39] *** stella is now known as BoostedStella
[15:52:23] *** Joins: cdown_ (~cdown@163.114.131.1)
[15:52:49] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 256 seconds)
[15:53:00] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[15:53:05] *** Joins: {4144} (~{4144}@46.56.68.191)
[15:53:08] *** Joins: waveform (~quassel@waveform.plus.com)
[15:55:04] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[15:55:11] *** cdown_ is now known as cdown
[15:57:17] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 240 seconds)
[15:58:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:58:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:59:12] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[15:59:22] *** Joins: manti7 (~manti7@95.216.139.244)
[16:00:57] *** Quits: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net) (Ping timeout: 240 seconds)
[16:02:36] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:03:24] *** Quits: awmv (~awmv@178.238.173.190) (Read error: Connection reset by peer)
[16:03:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:03:58] *** Joins: awmv (~awmv@178.238.173.190)
[16:04:32] *** Joins: shad (~shad@user/shad)
[16:05:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:05:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:06:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[16:07:02] *** Quits: pycode (~pycode3@2001:b07:5d28:551:fdfc:df60:18ff:782a) (Ping timeout: 240 seconds)
[16:07:17] *** Joins: Viewday11 (~Viewday@user/viewday)
[16:07:23] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[16:07:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:07:49] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[16:07:59] *** Joins: avaxar (~avaxar@36.72.213.157)
[16:08:03] *** Joins: d1cor (~diego@179.63.242.120)
[16:08:14] *** Quits: awmv (~awmv@178.238.173.190) (Read error: Connection reset by peer)
[16:08:47] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:e155:e914:86b7:1b77)
[16:10:16] *** Quits: legola (~legola@46.235.100.54) (Remote host closed the connection)
[16:11:27] *** Joins: legola (~legola@46.235.100.54)
[16:13:03] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:13:26] <jancoow> Yeep. Changing it to a cp210x it works as expected
[16:14:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:15:10] *** Joins: Viewday11 (~Viewday@user/viewday)
[16:15:52] *** Quits: avaxar (~avaxar@36.72.213.157) (Quit: Leaving)
[16:15:52] *** Quits: legola (~legola@46.235.100.54) (Ping timeout: 250 seconds)
[16:17:25] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:17:41] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:17:54] *** Joins: Croves (~Croves@192.34.198.19)
[16:18:19] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[16:18:46] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[16:19:08] <Croves> When I'm using @classmethod, how can I access a property defined in the constructor?
[16:19:30] *** Joins: Viewday11 (~Viewday@user/viewday)
[16:20:50] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:20:50] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:20:50] *** Joins: JordiGH (~jordi@user/jordigh)
[16:20:52] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[16:21:10] <Croves> I'm trying to do something like this https://bpa.st/TE2A
[16:22:11] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[16:22:11] <jinsun> remove the @classmethod (and rename cls to self, not necessary but a good idea)
[16:22:30] <Croves> yeah but that needs to be a @classmethod
[16:22:35] <jinsun> why?
[16:23:03] <Croves> I need to run the methods of this class without creating an instance
[16:23:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:23:37] *** Quits: MinusOne (~MinusOne@user/minusone) (Ping timeout: 240 seconds)
[16:23:47] <deniska> Croves: constructor (well, __init__) puts values on the instance
[16:23:59] <deniska> if there's no instance, that means __init__ was never run
[16:24:30] <jinsun> yeah, if you are never making an instance, then don't define `__init__`
[16:24:54] <jinsun> just define the attribute directly in the class
[16:25:06] <deniska> (arguably if you never make any instances, it shouldn't be a class in the first place)
[16:25:28] <jinsun> yeah that too, just make a module
[16:25:42] *** Joins: Viewday11 (~Viewday@user/viewday)
[16:26:10] <bjs> Croves: if your method is a @classmethod it cannot access properties defined on the instances
[16:26:20] *** Joins: bitplane (~bitplane@141.138.128.125)
[16:26:34] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.4)
[16:27:51] <Croves> ah I see
[16:27:59] <Croves> Thank you all for the assistance
[16:28:31] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[16:28:43] <bjs> Croves: if this value is constant for everyone maybe it shouldn't be an instance variable, but just a global
[16:28:46] <bjs> or a class-level variable
[16:30:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:30:29] <bjs> Croves: self.MY_CONSTANT means that each Foo object has its own "MY_CONSTANT" and they might be different
[16:30:42] <exarkun> Or just make an instance.  No one gets hurt if you have a class that typically only has one instance.  This also leaves you the freedom to have more instances in the future (whereas with globals/modules you're in a bit worse position).
[16:31:53] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:32:11] *** Joins: han-solo (~han-solo@user/han-solo)
[16:33:46] *** Joins: nomic (~nomic@185.192.69.10)
[16:34:07] <bitplane> halllp. anyone used PropertyMock on a MagicMock? https://bpa.st/E7AA
[16:35:39] <bitplane> if I do `a = MagicMock(); a.b = PropertyMock(side_effect=[1,2]); print(a.b, a.b)` I get -> `PropertyMock name='mock.b' id='4593936560'> <PropertyMock name='mock.b' id='4593936560'>
[16:35:39] <bitplane> `
[16:35:44] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2.1)
[16:36:14] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 250 seconds)
[16:36:54] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:37:07] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[16:37:13] *** Joins: Echoz (~chris@user/echoz)
[16:37:47] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[16:41:24] <Yhg1s> bitplane: PropertyMock works as a property, which means it has to be an attribute of a class, not of an instance (like your MagicMock instance)
[16:41:35] <Yhg1s> bitplane: you probably just want to use a regular mock for a.b.
[16:41:47] <Yhg1s> (also, spec your mocks.)
[16:42:09] <bitplane> I tried as using `MagicMock.connected` but that didn't seem to work either
[16:42:25] <Yhg1s> bitplane: I'm not sure what you mean by that, sorry.
[16:42:44] <bitplane> basically I want multiple return values for an attribute on a mock
[16:42:54] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:6c78:91aa:8701:a853)
[16:43:06] <bitplane> I have a loop, I want to set connected = False on the second iteration
[16:43:23] <bitplane> so it drops out
[16:43:27] *** Quits: uuair (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:44:15] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[16:45:30] *** Joins: uuair (~quassel@user/uuair)
[16:45:31] <Yhg1s> bitplane: I meant "What do you mean by 'I tried as using `MagicMock.connected`'?"
[16:45:46] <Yhg1s> bitplane: PropertyMocks need to be attributes of the class of the instance. The documentation shows you how to do that.
[16:45:59] <bitplane> I mean `MagicMock.connected = PropertyMock(return_value=[1,2,3])`
[16:46:50] <Yhg1s> bitplane: that won't work, no. The documentation shows you how to do it.
[16:46:59] <bitplane> oops not return value, side effect
[16:48:08] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[16:48:24] <bitplane> hmm actually it might work
[16:48:32] *** Quits: Major_Biscuit (~MajorBisc@c-001-019-027.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[16:48:38] <bitplane> need to create the instance after applying the patch, by the look of it
[16:48:53] <Yhg1s> no, really, do it the way *the documentation says to do it*
[16:48:54] *** Joins: Vonter (~Vonter@user/vonter)
[16:48:58] <Yhg1s> otherwise it'll affect all new MagicMocks.
[16:49:07] *** Joins: p|q (~plq@94.54.154.86)
[16:50:23] *** Joins: Xardas (~Xardas@149.233.51.127)
[16:50:57] *** Quits: vats (~vats@180.149.226.242) (Ping timeout: 240 seconds)
[16:51:43] <bitplane> which documentation? propertymock?
[16:51:50] <Yhg1s> Yes.
[16:51:57] <Croves> Why am I getting an `ModuleNotFoundError 'jobs.scheduled_jobs.it.zendesk.assign_ticket' is not a packag` when running unit tests? My dir structure is something like this: https://bpa.st/RVKQ and assign_ticket.py inherits from base_job.py
[16:52:02] <Yhg1s> bitplane: https://docs.python.org/3/library/unittest.mock.html#unittest.mock.PropertyMock
[16:53:04] <Yhg1s> Croves: modules don't inherit from other modules. Do you mean the one imports the other? Can you show the traceback you get?
[16:54:36] <Croves> Yhg1s Yes, I have a class in `assign_ticket.py` that inherits from another class inside `base_job.py`
[16:54:46] *** Joins: roro (~roro@78.192.226.182)
[16:55:07] *** roro is now known as Guest9505
[16:55:09] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[16:55:15] *** Joins: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[16:55:30] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[16:56:11] <bitplane> Yhg1s: turns out the way the docs say to do it is also ugly
[16:56:27] <Yhg1s> bitplane: yes, mocks are inherently very ugly. However, the way the docs say to do it actually works correctly.
[16:56:38] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[16:57:54] <bitplane> it was the same deal as my approach I think, https://bpa.st/DTNQ
[16:58:17] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[16:58:27] <bitplane> I used a generator as a fixture to do the cleanup afterwards
[16:58:31] <Yhg1s> bitplane: no, type(g13) is not MagicMock. It's a different class.
[16:58:55] <bitplane> oops copy/paste error
[16:58:59] <bitplane> yeah i meant g13.cctalk
[16:59:37] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[16:59:54] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[16:59:55] <Yhg1s> bitplane: I mean G13 is not a MagicMock. You were asking about setting an attribute of a MagicMock. You're not doing that in this code.
[17:00:21] <bitplane> yeah I pasted badly, my intention was to mock "g13.cctalk.connected"
[17:00:39] <bitplane> cctalk is the protocol driver, g13 is a piece of hardware
[17:00:57] <bitplane> connected is a property that checks the serial channel and its connection state
[17:01:15] <bitplane> it works now though, thanks :)
[17:01:52] <Yhg1s> okay, then 'type(g13.cctalk).connected = ...' is *still* not the same as 'MagicMock.connected = ...'. MagicMock is a class, but MagicMock() returns an instance of a *new* MagicMock class.
[17:03:31] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:04:03] <bitplane> so type(MagicMock()) != MagicMock?!
[17:04:10] <Yhg1s> Yes.
[17:04:20] <exarkun> Smell the magic
[17:04:35] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:6c78:91aa:8701:a853) (Ping timeout: 256 seconds)
[17:05:06] <bitplane> fuck me that's unintuitive
[17:05:22] <exarkun> (note MagicMock is known to the state of California to cause cancer and birth defects or other reproductive harm)
[17:05:24] <Yhg1s> Nothing about unittest mocks is intuitive.
[17:05:29] <bitplane> I strongly dislike this
[17:05:41] <Yhg1s> Yes. Don't use mocks. Certainly don't use them without specs.
[17:05:42] <exarkun> bitplane: Would you like some alternate testing ideas?
[17:06:28] <bitplane> not really, I'd just like `type(Class()) == Class`
[17:06:48] *** Joins: doopdoop (~doopdoop@2a00:23c6:7287:601:c5ab:672f:8a6a:fc8f)
[17:06:48] <xheimlich> killall code
[17:06:49] <xheimlich> no
[17:07:03] <exarkun> I don't think we can make MagicMock better
[17:07:08] <Yhg1s> bitplane: mocks can't possibly work with that restriction.
[17:07:17] <exarkun> It is fundamentally what it is.  If you don't like that, you don't like MagicMock.
[17:07:18] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[17:07:49] <bitplane> okay in that case I'd like that dogshit to be a bit more obvious so I don't step in it: https://bpa.st/RCCA
[17:07:57] <BinarySavior> Hi, my employer is cheap and wont purchase pycharm professional for me but they have me working in flask app.  I know there is a workaround by editing intellij config xml files to create custom code completion for jinja2 templates manually, but I can't seem to find it
[17:09:07] <xheimlich> what does flask have to do with jinja2.
[17:09:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:09:18] <xheimlich> also, y u no fastapi
[17:09:42] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:777e:e76b:1130:2573) (Quit: Leaving)
[17:09:47] <BinarySavior> xheimlich isn't jinja2 what flask uses in its html templates?
[17:09:57] <han-solo> how does that help with the code completuion in pycharm ?
[17:10:10] *** Joins: sudorm (~sudorm@atoulouse-556-1-147-235.w92-162.abo.wanadoo.fr)
[17:10:20] <han-solo> BinarySavior: flask doesn't have any template preference, but jinja seems to be the most preferred
[17:10:27] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-52-65-93-194-105.dsl.bell.ca) (Ping timeout: 256 seconds)
[17:10:48] *** Quits: doopdoop (~doopdoop@2a00:23c6:7287:601:c5ab:672f:8a6a:fc8f) (Quit: Client closed)
[17:11:02] <han-solo> also the author of the flask is the same as the one for jinja, i guess ?....
[17:11:28] <supakeen> historically they were both projects out of the same group of people :)
[17:11:49] <han-solo> :)
[17:11:52] <BinarySavior> han-solo in pycharm professional when editing html files in a flask or django app if you type {% then press tab it will auto complete the tag for you
[17:11:52] <bitplane> does it not work in vscode? it's my new favourite
[17:12:09] <deniska> also flask literally depends on jinja2
[17:12:47] <han-solo> was that always a requirement ? i wonder why i need a template engine for rest
[17:12:58] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:13:07] *** Joins: Barones (~Barones@user/Barones)
[17:13:14] <BinarySavior> han-solo my memory might be hazy, but I think actually the workaround is to edit filetypes.xml within the intellij config directory and add custom support for .html file with auto completion where you type "{%" then press tab and it completes the tag for you
[17:13:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:13:25] *** Quits: pythia (~pythia@ti0044a400-1030.bb.online.no) (Remote host closed the connection)
[17:13:27] <exarkun> https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/PrivateStorageio/ZKAPAuthorizer/235.backup-and-recovery/docs/source/designs/backup-recovery.yaml#/paths/~1storage-plugins~1privatestorageio-zkapauthz-v1~1recover/post renders with request and response schema.  That's cool.
[17:13:29] <exarkun> https://github.com/PrivateStorageio/ZKAPAuthorizer/blob/235.backup-and-recovery/docs/source/conf.py#L41-L53 renders without it.  That's not cool.  Anyone know what's up?
[17:13:49] <han-solo> BinarySavior: i have no experience with pycharm, i just use vscode and it seem to have an extension for what you are asking. So i won't be much help here, sorry
[17:13:55] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-251.dsl.bell.ca)
[17:14:28] *** Joins: Vonter (~Vonter@user/vonter)
[17:14:54] *** Quits: Viewday11 (~Viewday@user/viewday) (Quit: The Lounge - https://thelounge.chat)
[17:15:12] *** Joins: Viewday11 (~Viewday@user/viewday)
[17:15:45] *** Joins: bluedust (~bluedust@103.161.144.140)
[17:16:03] *** Joins: georgios (~georgios@user/georgios)
[17:17:09] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[17:18:16] *** Joins: pree (~pree@2a02:8071:a5bc:ca00::1544)
[17:18:36] *** Joins: Deana (~Deana@188.18.196.125)
[17:19:41] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[17:20:05] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:20:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[17:21:01] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[17:21:55] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:777e:e76b:1130:2573)
[17:22:01] <han-solo> it seems jinja2 has always been a dependency, and flask does prefer jinja "Flask leverages Jinja2 as its template engine. You are obviously free to use a different template engine, but you still have to install Jinja2 to run Flask itself. "
[17:22:05] *** Joins: ano (~ano@user/ano)
[17:23:21] *** Parts: strk (~strk@user/strk) (WeeChat 3.3)
[17:24:33] *** Quits: Croves (~Croves@192.34.198.19) (Quit: Client closed)
[17:26:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:27:02] *** Joins: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net)
[17:28:08] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:28:14] <BinarySavior> found what i was looking for han-solo https://github.com/chlab/pycharm-django-live-templates
[17:28:22] <BinarySavior> pretty sure jetbrains hates this guy but w/e haha
[17:29:15] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[17:30:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:30:32] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[17:30:36] *** Joins: matsaman (~matsaman@user/matsaman)
[17:30:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:31:21] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:31:30] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[17:31:42] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:31:59] <han-solo> ':)
[17:32:31] *** Joins: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[17:33:01] *** Joins: bloody (~bloody@user/bloody)
[17:33:52] *** Quits: roxfan2 (~roxfan@109.129.206.185) (Ping timeout: 250 seconds)
[17:34:07] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[17:34:45] <daidoji> Hello.  I'm trying to be too clever probably but I have code that looks like this with the associated error https://gist.github.com/daidoji/c947dc9742d636d4bb8d130684eb50b6
[17:35:30] <daidoji> I thought that being within the 'with' statement would cause that file to still be context and wouldn't be closed yet but it is.  What am I doing wrong?
[17:35:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[17:36:06] <daidoji> the intent is to write a temporary archive with all the files to create the batch, then save the batch to s3
[17:36:37] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[17:37:32] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-251.dsl.bell.ca) (Ping timeout: 240 seconds)
[17:37:40] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:282c:f92c:b3e4:e5ae)
[17:37:40] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[17:38:16] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[17:38:30] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5af8:82c4:6433:af7)
[17:40:00] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[17:40:15] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:5cf0:9b0e:741e:349e)
[17:40:37] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:e155:e914:86b7:1b77) (Ping timeout: 240 seconds)
[17:42:02] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[17:42:16] *** Joins: RiFo (~RiFo@user/rifo)
[17:45:10] *** Joins: mspe (~user@tilde.team/user/mspe)
[17:46:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:48:05] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[17:48:49] *** Joins: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-202.dsl.bell.ca)
[17:49:40] *** Joins: slackcals (~slackcals@user/slackcals)
[17:50:12] <Masklin_Gurder> {line:next(f) for line in f}
[17:50:27] <Masklin_Gurder> Why would this result in one key being the empty string?
[17:50:34] <Masklin_Gurder> {line:next(f) for line in f if line}
[17:50:52] <Masklin_Gurder> Sorry, forgot the 'if line' part.
[17:51:47] <supakeen> It's a decently weird structure in any case, is this meant to to make {line: next_line} dictionaries?
[17:51:49] *** Quits: manti7 (~manti7@95.216.139.244) (Ping timeout: 240 seconds)
[17:51:54] <daidoji> Masklin_Gurder, I don't know if you should iterate over the same object while you're calling next().  Unless you're intentionally trying to skip records or have a weird data structure
[17:52:26] <exarkun> next(f) while iterating f is definitely shakey ground
[17:52:45] <Masklin_Gurder> supakeen: Yes
[17:52:47] *** Joins: Nutte35 (~Nutte@202.153.82.163)
[17:52:55] <exarkun> Masklin_Gurder: Can you give us an example `f` where the result ends up with "" as a key?
[17:52:59] <Masklin_Gurder> I've used it before, it works as you expect, is my observation
[17:53:02] *** Joins: Croves (~Croves@192.34.198.19)
[17:53:04] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[17:53:20] <exarkun> Masklin_Gurder: It might work as you expect /sometimes/ :)  Maybe you just haven't observed the surprise yet.
[17:53:21] *** Joins: manti7 (~manti7@176.10.104.94)
[17:53:21] <Masklin_Gurder> exarkun: Gimme a second
[17:53:34] <exarkun> That's the thing about surprises... They surprise you.
[17:53:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:53:52] <supakeen> And/or perhaps the input is different from what you'd expect (perhaps it even contains an empty line?).
[17:54:12] <hodapp> whaaaa... "exarkun", there is a nick I recall from days decades past
[17:54:15] *** Joins: pyever___ (~pyeveryth@64-18-153-56.starry-inc.net)
[17:54:57] <exarkun> exarkun, relic of the past, that's me
[17:55:29] <exarkun> :)
[17:55:37] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[17:58:11] *** Joins: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com)
[17:59:17] *** Quits: demon__ (~user@197.54.108.134) (Ping timeout: 240 seconds)
[17:59:46] <hodapp> no clue where I saw you but it was probably like 2003 or 2004 first
[18:00:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-14e7-49c4-8e85-9c7b.res6.spectrum.com)
[18:00:24] *** Quits: Deana (~Deana@188.18.196.125) (Quit: Konversation terminated!)
[18:03:42] <Masklin_Gurder> exarkun: I just tried on a file containing four populated lines and then three trailing empty lines, and reproduced the problem.
[18:03:55] <Masklin_Gurder> ... but the 'if line' should avoid this methinks
[18:04:04] <exarkun> Masklin_Gurder: So something like "foo\nbar\nbaz\nquux\n\n\n\n"
[18:04:06] <exarkun> ?
[18:04:29] <supakeen> The `if line` test can proceed, if the next line is empty then next(..) is not gated.
[18:04:39] *** Quits: bitplane (~bitplane@141.138.128.125) (Ping timeout: 256 seconds)
[18:05:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[18:05:33] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[18:05:34] <exarkun> well, not the string I gave, because that has an odd number of lines so the next(f) raises StopIteration :)
[18:05:46] <exarkun> (but 4 + 3 is odd so ...)
[18:06:01] <exarkun> Masklin_Gurder: Are you sure the key is "" and not, say, "\n"?
[18:06:19] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[18:06:23] <exarkun> I observe this: https://gist.github.com/exarkun/1985ad8a841a0e264fa2eb85125cf588
[18:06:55] <exarkun> So, all your "empty lines" come out as "\n".  `if line` isn't going to skip any of them.
[18:07:02] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:777e:e76b:1130:2573) (Quit: Leaving)
[18:07:12] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:777e:e76b:1130:2573)
[18:07:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:07:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:07:29] <exarkun> Should be clear what to do from there, I guess
[18:08:03] *** Quits: Croves (~Croves@192.34.198.19) (Ping timeout: 256 seconds)
[18:08:24] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:08:41] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:09:02] *** Joins: mspe (~user@tilde.team/user/mspe)
[18:11:47] *** Quits: grooverman (~grooverma@177.102.119.200) (Remote host closed the connection)
[18:13:21] *** Quits: on^ (~on@96-86-240-178-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[18:13:44] *** Joins: thevar1able (~textual@46.39.45.122)
[18:13:50] <han-solo> `{l1:l2 for l1,l2 in zip(*[f]*2) if l1.strip()}`
[18:13:58] *** Joins: grooverman (~grooverma@177.102.119.200)
[18:14:26] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:15:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 241 seconds)
[18:16:39] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) ()
[18:17:06] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 268 seconds)
[18:17:32] *** Quits: Dotz0cat (~Dotz0cat@98.22.179.189) (Ping timeout: 240 seconds)
[18:18:48] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[18:18:48] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[18:19:18] <Masklin_Gurder> Ah shit
[18:19:24] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:19:27] <Masklin_Gurder> exarkun: Thanks, my bad. Such a simple mistake.
[18:20:13] <Masklin_Gurder> It works now and is beautiful \o/
[18:20:17] *** Quits: death916 (~death916@user/death916) (Ping timeout: 240 seconds)
[18:20:18] <Masklin_Gurder> Y'all should start using this syntax
[18:20:21] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[18:20:21] <Masklin_Gurder> :3
[18:20:57] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:21:08] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Client Quit)
[18:21:31] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:21:57] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 240 seconds)
[18:22:13] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 256 seconds)
[18:23:02] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[18:23:37] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[18:24:07] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[18:24:27] *** Joins: defn (~n0b0dy@user/defn)
[18:24:39] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:25:22] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[18:26:08] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[18:26:09] *** Joins: Dotz0cat (~Dotz0cat@151.213.94.135)
[18:27:08] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[18:28:24] *** Joins: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6)
[18:29:02] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:777e:e76b:1130:2573) (Quit: Leaving)
[18:29:32] *** Joins: ivii (~ivan@2001:a62:4c3:8e01:777e:e76b:1130:2573)
[18:30:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:31:02] *** Joins: ATAD (~ATAD@user/atad)
[18:31:41] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[18:32:52] *** Joins: The_Loko (~The_Loko@79.116.24.80)
[18:34:24] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[18:35:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[18:36:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[18:36:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-14e7-49c4-8e85-9c7b.res6.spectrum.com) (Remote host closed the connection)
[18:37:03] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[18:37:58] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[18:38:27] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[18:38:46] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[18:39:42] *** Joins: ano (~ano@user/ano)
[18:39:49] <exarkun> When I #define Py_LIMITED_ABI 0x03070000 and then include Python.h, I get a lot of compiler errors from the contents of Python.h ... use of undefined symbols and types and such.  Is this now how one uses Py_LIMITED_ABI?
[18:39:57] <exarkun> https://www.python.org/dev/peps/pep-0384/ says Python.h is part of the limited abi.
[18:40:16] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:40:45] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[18:41:41] *** Joins: Dominik[m]12 (~ddunglmat@2001:470:69fc:105::1:7799)
[18:42:23] <exarkun> pft
[18:42:29] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:42:30] <exarkun> Py_LIMITED_API / Py_LIMITED_ABI
[18:42:34] * exarkun grumbles
[18:42:52] <exarkun> wait no I only misspelled it in my question, not in my source file
[18:43:55] <exarkun> Hmmmm maybe I see... If it is defined, functions not in the limited API are not prototyped... but all macros are still defined, even if they use a function not in the limited API.
[18:44:06] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:44:48] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Client Quit)
[18:44:58] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:45:02] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[18:45:27] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[18:45:29] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[18:46:13] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[18:46:22] *** Quits: ivii (~ivan@2001:a62:4c3:8e01:777e:e76b:1130:2573) (Quit: Konversation terminated!)
[18:46:43] *** Joins: ano (~ano@user/ano)
[18:47:06] *** Joins: ivii (~ivan@2001:a62:4c3:8e01:777e:e76b:1130:2573)
[18:48:08] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[18:48:21] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:48:58] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:49:05] *** Quits: ivii (~ivan@2001:a62:4c3:8e01:777e:e76b:1130:2573) (Client Quit)
[18:49:18] *** Joins: ivii (~ivan@2001:a62:4c3:8e01:777e:e76b:1130:2573)
[18:50:34] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[18:50:53] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-6889-d743-d7bf-132c.res6.spectrum.com)
[18:51:12] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[18:51:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:52:44] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[18:53:20] <SnoopJ> is that a problem? I mean, the preprocessor's going to expand those anyhow
[18:53:51] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-10.poda.cz) (Quit: Leaving)
[18:53:57] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:54:38] <exarkun> It's annoying because the errors aren't reported at the source code location where the problem is, it's reported at the header file location where the macro is defined
[18:54:54] *** Joins: gtz (~gtz@46.251.99.222)
[18:55:02] <exarkun> So fixing the problem requires cross-referencing Python.h with the source being ported to the limited API
[18:55:17] <exarkun> (And understanding what's happening at all in the first place)
[18:55:27] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[18:55:40] *** Quits: grooverman (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[18:56:17] *** Quits: gtz__ (~gtz@46.251.99.222) (Ping timeout: 240 seconds)
[18:56:30] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[18:56:33] <SnoopJ> your compiler isn't telling you where it's being expanded as well?
[18:57:45] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-10.poda.cz)
[18:58:03] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:58:14] *** Joins: SKiTZO (~SKiTZO@64.89-10-146.nextgentel.com)
[18:58:30] *** Joins: grooverman (~grooverma@177.102.119.200)
[18:58:59] *** Quits: SKiTZO (~SKiTZO@64.89-10-146.nextgentel.com) (Client Quit)
[18:59:07] *** Joins: _SKiTZO (~SKiTZO@64.89-10-146.nextgentel.com)
[19:00:16] <exarkun> Maybe it is.  c compiler output is so hard to read.  I'm pining for ghc here.
[19:01:30] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[19:01:43] <merijn> I need to run user-specified code on a different machine, what options do I have? I'm thinking the "simplest" would be to just require a class specified in a separate .py file that I can import and instantiate from the remote code. But that is very inconvenient for users that are calling it from a REPL/notebook. OTOH, any other solution (pickle, eval, and the likes) seem like they are just 100% cursed. So
[19:01:49] <merijn> on a scale from 1 to 10 how screwed am I? :p
[19:02:13] <SnoopJ> exarkun, I wrote a little test program that does `#define BAD_MACRO thisfunctiondoesntexist()` and then uses it somewhere else, and I see output from gcc like: `test.c:1:19: warning: implicit declaration blah blah... test.c:7:5 note: in expansion of macro 'BAD_MACRO'`. But I hear you re: confusing output, I go cross-eyed looking at reports from g++ over anything that even sniffs the STL
[19:02:41] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[19:02:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[19:03:26] <merijn> SnoopJ: You get used to it after you commit enough template crimes >.>
[19:04:07] *** ivii is now known as the_ivii
[19:04:23] <SnoopJ> merijn, I've learned to cope, I just wish I didn't have to :)
[19:04:39] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:282c:f92c:b3e4:e5ae) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:04:44] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[19:04:54] *** the_ivii is now known as ivii
[19:05:05] <SnoopJ> merijn, could your users pass in their class object to a registration function? i.e. `merijnlib.registerUserThingy(MyClass)`
[19:05:13] *** Quits: ivii (~ivan@2001:a62:4c3:8e01:777e:e76b:1130:2573) (Quit: Konversation terminated!)
[19:05:22] * SnoopJ isn't sure why he didn't snake_case that function
[19:05:26] *** Joins: ivii (~ivan@2001:a62:4c3:8e01:777e:e76b:1130:2573)
[19:05:29] *** Parts: octav1a (~quassel@173.195.145.98) (~Called off to Sentinal the Sand Temple~)
[19:05:39] <merijn> SnoopJ: You sensed I write Haskell and prefer camelCase? :p
[19:06:03] <SnoopJ> probably just residual C-brain energy from the above discussion
[19:06:10] <merijn> SnoopJ: I mean, I can do whatever the hell I want, I don't really have any preconceived design in mind
[19:06:52] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[19:07:32] <SnoopJ> well, I'm asking if that would make sense next to whatever other constraints/aesthetic preferences you have
[19:07:35] <merijn> SnoopJ: The problem is just that I have code running on machine A and a call on A needs to result in code being executed on a different machine B. So I somehow to get "MyClass" from the "registerUserThingy" call on A to B. Which is a terrible problem to have :p
[19:07:43] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:07:45] *** Joins: tristan_ (~tristan@223.33.164.136)
[19:07:45] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 256 seconds)
[19:10:11] <merijn> Since I can probably get away with assuming a shared filesystem, I'm thinking probably just making it be a separate .py file and importing that on B is the easiest thing (just need to send over the filename+class to instantiate), but as I said, seems awkward
[19:11:08] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:1c53:1d56:3b63:1825)
[19:11:08] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:1c53:1d56:3b63:1825) (Changing host)
[19:11:08] *** Joins: skapata (~Skapata@user/skapata)
[19:11:28] <SnoopJ> ahh, I misunderstood that bit of the problem. Being able to have the class definition in both places would be nice, but pickling the class isn't verboten I think (after all, you're already running user code)
[19:12:16] * SnoopJ doesn't know what kind of alternatives the Python RPC ecosystem offers here
[19:12:56] *** Quits: Spini (~Spininini@166.30.90.149.rev.vodafone.pt) (Quit: Leaving)
[19:13:08] *** Joins: summersault (~summersau@179.221.251.36)
[19:13:50] <merijn> SnoopJ: Yeah, I'm not too worried about security, but pickling completely arbitrary stuff seems like it could very easily become a "Huge Mess (TM)"
[19:14:24] <crunchy_david> so if I wanted to launch an external process but keep control of stdin so my program can effectively filter what gets passed to the launched process, what is the easiest way to handle that?
[19:15:34] *** Joins: maryo (~Maryo@user/maryo)
[19:15:40] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:16:56] *** Joins: Croves (~Croves@2804:58:c1a5:4400:c087:8260:155a:9292)
[19:17:05] <merijn> crunchy_david: tbh, the *easiest* way would be to just have the new process attach to a pipe in your own process then feed (filtered) stdin into that pipe
[19:17:11] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 256 seconds)
[19:17:19] <SnoopJ> merijn, it can, especially since not everything is pickleable. You'll be limiting users in some ways (e.g. no nested functions), but it's not worth discarding as an option outright without considering whether that's actually a restriction worth worrying about in your specific context. This is a good summary of "pickle might be okay, but tread carefully"
[19:17:21] <SnoopJ> https://nedbatchelder.com/blog/202006/pickles_nine_flaws.html
[19:17:59] <Croves> Why am I getting an `ModuleNotFoundError 'jobs.scheduled_jobs.it.zendesk.assign_ticket' is not a package` when running unit tests? My dir structure is something like this: https://bpa.st/RVKQ and assign_ticket.py is a class that inherits from another class in base_job.py
[19:18:01] *** Quits: sudorm (~sudorm@atoulouse-556-1-147-235.w92-162.abo.wanadoo.fr) (Quit: Leaving)
[19:18:07] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (Quit: Client limit exceeded: 20000)
[19:18:12] *** Joins: nhanb (522d4a25ea@2604:bf00:561:2000::13b)
[19:18:20] <merijn> crunchy_david: If you want to do it "Properly (TM)" I would highly recommend getting a copy of "Advanced Programming in the UNIX Environment", which has a pretty detailed explanation of how terminal attachment, etc. works (and honestly, anyone thinking about writing any code interacting with terminals or signals should just get that book)
[19:18:21] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[19:18:58] <SnoopJ> crunchy_david, subprocess can do that
[19:19:22] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (Quit: Client limit exceeded: 20000)
[19:19:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:19:41] *** Joins: mickey8 (~user@user/mickey)
[19:22:16] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[19:22:26] <merijn> SnoopJ: ah, see, the "Appears to pickle code" constraint I think already rules it out, tbh. Since the other machine won't be running the exact same process, so I consider it a pretty good likelihood of a user trying to pickle something that's not imported/existing on the other side
[19:22:41] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[19:24:11] *** Quits: gtz (~gtz@46.251.99.222) (Ping timeout: 256 seconds)
[19:24:46] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[19:24:47] *** Joins: snalty (~Shhh@user/snalty)
[19:24:48] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[19:24:57] *** Quits: Croves (~Croves@2804:58:c1a5:4400:c087:8260:155a:9292) (Quit: Client closed)
[19:26:52] *** Quits: Nutte35 (~Nutte@202.153.82.163) (Read error: Connection reset by peer)
[19:27:08] *** Joins: Narrat (~omnius@p200300df5f4aae4f06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[19:27:21] *** Joins: thevar1able (~textual@46.39.45.122)
[19:27:40] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[19:29:03] *** Joins: legola (~legola@46.235.100.54)
[19:29:07] <crunchy_david> merijn and SnoopJ: effectively what's happening is I'm using python to launch an external process that runs and saves it output to a log file; what I'd like to do is if the user hits a specific key combo, then launch a screen window running tail -f on that logfile, with an option to hit `q` to kill that window/process; basically a way to easily toggle viewing high-level vs low-level details
[19:29:31] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:29:59] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[19:30:17] <NeilRG> Why does ThreadPoolExecutor.map return an Iterator instead of an Iterable?
[19:30:17] *** Joins: Shikadi (~Shikadi@50.125.190.237)
[19:30:19] <merijn> crunchy_david: That is...complicated. And for something like that I would repeat my book recommendation
[19:30:29] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[19:30:30] <SnoopJ> NeilRG, iterators *are* iterable
[19:31:02] <NeilRG> SnoopJ: oh right, hmm, not sure why i'm getting this type error
[19:31:36] <NeilRG> SnoopJ: oh nm, I see
[19:32:55] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[19:33:52] *** Quits: slackcals (~slackcals@user/slackcals) (Read error: Connection reset by peer)
[19:34:32] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 240 seconds)
[19:35:20] <crunchy_david> SnoopJ: so with subprocess, you'd basically open a pipe with a thread that handles the filtering IO, then pass that as the `stdin` on `subprocess.run` or similar?
[19:35:22] *** Joins: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[19:35:25] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 268 seconds)
[19:35:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[19:38:19] <SnoopJ> crunchy_david, I'm not really sure from your more complete problem description why you need to do anything with stdin. The 'q' keypress is not going to a subprocess, right?
[19:38:33] <SnoopJ> or the enabling keypress(es)
[19:38:34] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[19:39:03] <crunchy_david> true; I guess I want to execute a process and know what the state is; am I displaying the log file? if so, quit.
[19:39:16] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[19:39:43] <crunchy_david> so I would need to keep track of some sort of handle and be able to kill it while it runs based on input from the program or natural termination
[19:40:17] <crunchy_david> so like subprocess running in a thread, with no stdin I guess?
[19:40:28] <SnoopJ> as far as subprocess is concerned, if you create a process (probably with Popen()) with stdin=PIPE, you can pass data to the process's stdin using e.g. communicate()
[19:40:32] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-10.poda.cz) (Ping timeout: 240 seconds)
[19:40:38] *** Joins: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d)
[19:40:57] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 240 seconds)
[19:41:17] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:6113:ea6a:978:6ef4)
[19:41:17] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:6113:ea6a:978:6ef4) (Changing host)
[19:41:17] *** Joins: skapata (~Skapata@user/skapata)
[19:41:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:42:42] *** Joins: summersault (~summersau@179.221.251.36)
[19:42:43] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.3)
[19:42:54] *** Joins: AsenMx (~asen@user/asenmx)
[19:44:58] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[19:45:21] *** Joins: awmv (~awmv@adsl-178-39-24-226.adslplus.ch)
[19:45:22] *** Joins: tristan_ (~tristan@223.33.164.136)
[19:45:39] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:45:48] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:45:57] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[19:46:03] *** Joins: summersault (~summersau@179.221.251.36)
[19:46:11] *** Quits: legola (~legola@46.235.100.54) (Remote host closed the connection)
[19:46:14] *** Joins: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e)
[19:46:16] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[19:47:18] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:3442:bec1:2b74:6864)
[19:47:18] *** Joins: chronos (~chronos@c-68-62-193-246.hsd1.fl.comcast.net)
[19:47:27] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[19:48:00] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:48:28] *** Joins: summersault (~summersau@179.221.251.36)
[19:50:07] *** withered_wolf is now known as thoughtfu
[19:50:16] <chronos> How should I sort a list of object by an attribute of that object? ie if the object has object.date attribue
[19:50:28] *** Joins: manti7 (~manti7@176.10.104.94)
[19:50:44] *** chronos is now known as novapy
[19:50:53] <grym> chronos: newlist = sorted(thelist, key=lambda x:x.date)
[19:51:08] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:51:10] <grym> substitute x for any dummy variable name of your choice
[19:53:42] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:54:14] *** Quits: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net) (Quit: WeeChat 2.1)
[19:54:28] *** Quits: vladoski (~foo@2001:b07:add:d406:f598:a556:af7d:d70e) (Quit: Textual IRC Client: www.textualapp.com)
[19:56:02] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[19:56:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:57:06] *** Joins: Barones (~Barones@user/Barones)
[19:59:09] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[19:59:54] <daidoji> does anyone have an example for adding a file created using tempfile.TemporaryFile() to a tarfile archive?
[20:00:12] <daidoji> I thought this would be a good idea, but can't quite get it to work (I seem to be creating empty files in the archive)
[20:00:30] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[20:01:53] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[20:02:30] *** Quits: jay-m1261 (~jay-m@129.0.99.28) (Ping timeout: 250 seconds)
[20:02:43] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 256 seconds)
[20:02:49] *** Joins: whaley (~whaley@2603-6080-a301-33d1-a8f4-ea2c-f384-4767.res6.spectrum.com)
[20:02:58] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[20:03:02] *** Quits: jay-m126 (~jay-m@129.0.99.28) (Ping timeout: 240 seconds)
[20:03:25] *** Quits: jay-m126_ (~jay-m@129.0.99.28) (Ping timeout: 240 seconds)
[20:04:14] *** Joins: Babar_ (~Babar@2405:4803:ff4d:98d0:5cf0:9b0e:741e:349e)
[20:04:14] *** Babar is now known as Guest9583
[20:04:14] *** Babar_ is now known as Babar
[20:04:18] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[20:04:20] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:05:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[20:06:17] *** Quits: Guest9583 (~Babar@2405:4803:ff4d:98d0:5cf0:9b0e:741e:349e) (Ping timeout: 240 seconds)
[20:06:22] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[20:07:33] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[20:08:03] *** Quits: nomic (~nomic@185.192.69.10) (Quit: Leaving)
[20:08:06] *** Joins: slackcals (~slackcals@user/slackcals)
[20:08:15] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[20:08:17] *** Quits: nicode (~nic@2607:f2c0:93a9:8b00:5166:d484:415f:54b7) (Ping timeout: 240 seconds)
[20:08:23] *** Joins: tristan_ (~tristan@223.33.164.136)
[20:08:56] *** Joins: summersault (~summersau@179.221.251.36)
[20:08:58] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:08:59] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[20:09:12] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[20:09:48] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:10:19] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[20:10:36] *** Joins: nicode (~nic@2607:f2c0:948c:c300:d115:fc66:1a1:1b6c)
[20:11:34] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[20:11:34] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[20:11:34] *** Joins: nortoh (~nortoh@user/nortoh)
[20:13:02] *** Joins: tristan_ (~tristan@223.33.164.136)
[20:13:12] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:13:24] <crunchy_david> daidoji: you should probably be using NamedTemporaryFile(), with the addition occurring in the `with` block so the file still exists while that process is run
[20:14:26] *** Joins: jay-m126 (~jay-m@129.0.99.28)
[20:14:33] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[20:15:17] *** Joins: jay-m126_ (~jay-m@129.0.99.28)
[20:15:27] *** Joins: jay-m1261 (~jay-m@129.0.99.28)
[20:15:48] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:16:09] *** md618 is now known as madb
[20:16:13] *** Joins: summersault (~summersau@179.221.251.36)
[20:16:13] *** Joins: tristan_ (~tristan@223.33.164.136)
[20:16:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:16:59] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[20:17:21] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 268 seconds)
[20:17:42] *** Joins: tristan_ (~tristan@223.33.164.136)
[20:18:07] *** Quits: awmv (~awmv@adsl-178-39-24-226.adslplus.ch) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:18:34] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[20:19:49] *** Quits: o (~niko@libera/staff/niko) (Ping timeout: 633 seconds)
[20:20:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[20:20:41] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 250 seconds)
[20:21:58] <Forty-Bot> is it possible to create a class with a custom name without calling type()?
[20:21:58] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[20:22:03] <Forty-Bot> I've been doing something like https://paste.debian.net/1228468/
[20:22:04] *** Quits: madb (~md618@129.31.149.36) (Changing host)
[20:22:04] *** Joins: madb (~md618@user/madb)
[20:22:24] *** Quits: madb (~md618@user/madb) (Quit: leaving)
[20:22:24] *** Joins: tristan_ (~tristan@223.33.164.136)
[20:22:41] <Forty-Bot> obviously that's a trivial example, but imagine something a bit more complex :)
[20:23:14] *** Quits: kostkon_ (~androirc@2a02:587:a116:f212:e9fe:555f:b9f4:b8c2) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:23:27] <daidoji> crunchy_david, yeah I suppose so.  It doesn't look like there's any simple way to do it with an unnamed tempfile
[20:23:30] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[20:23:46] *** Joins: zoooz (~zoooz@204.43.239.207)
[20:23:48] <exarkun> Forty-Bot: Yes. You just type whatever you want instead of "Foo".
[20:24:01] <zoooz> hey hey
[20:24:03] <Forty-Bot> that... won't work
[20:24:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:24:06] <Forty-Bot> because Foo is a function
[20:24:11] <Forty-Bot> and not a class
[20:24:12] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:7bb6:91dc:fdaf:7faa) (Quit: pvergain)
[20:24:23] <SnoopJ> Forty-Bot, why don't you want to call type() ?
[20:24:30] <exarkun> Sorry.  Use `class` and then name it whatever you want.
[20:24:31] <Forty-Bot> because it's kinda  awkward
[20:24:40] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:24:44] <Forty-Bot> you have to keep track of your locals and delete them
[20:24:44] <SnoopJ> I see.
[20:25:04] *** Joins: mat001 (~mat001@213.143.69.121)
[20:25:06] *** Joins: tristan_ (~tristan@223.33.164.136)
[20:25:07] <Forty-Bot> instead of e.g. class where things you close on aren't preset in the class
[20:25:11] <Forty-Bot> *present
[20:25:14] <exarkun> What are you trying to do?
[20:25:32] <Forty-Bot> I don't want to use class because then the class has a name like "Foo.<locals>.Foo"
[20:25:41] <Forty-Bot> and you can't pickle that
[20:25:59] *** Quits: tristan_ (~tristan@223.33.164.136) (Remote host closed the connection)
[20:26:13] <exarkun> Why do you want to pickle it?
[20:26:27] <Forty-Bot> because it needs to be used for IPC
[20:26:36] <exarkun> There are lots of non-pickle IPCs out there
[20:26:37] <han-solo> https://www.attrs.org/en/stable/examples.html#other-goodies or dataclass might have something
[20:26:48] <exarkun> Some of them are even relatively safe against RCE vulnerabilities
[20:27:01] <Forty-Bot> I don't care about rce
[20:27:12] <exarkun> You didn't really answer the first question though
[20:27:23] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:27:23] <exarkun> Why aren't you defining a class the usual way?
[20:27:30] *** Joins: tristan_ (~tristan@223.33.164.136)
[20:27:35] <Forty-Bot> because "x" needs to by dynamic
[20:27:51] <Forty-Bot> e.g. I want a "type-level generic"
[20:27:51] *** Joins: widp (~user@124.123.105.45)
[20:27:54] <exarkun> I'm not sure what that means.
[20:28:12] <aphysically> a bit of a conundrum with dataclasses.py: right now dataclasses uses its own bespoke type hint introspection code in order to avoid importing typing.py, but this is becoming less appealing as type hint introspection becomes a bit more involved (in particular there's all kinds of nonsense with stringized annotations, and I've made the situation worse with my Annotated change)
[20:28:13] <Forty-Bot> like, I want to be able to say "ok Foo, give me a class for x=5"
[20:28:22] <exarkun> Why?
[20:28:45] <Forty-Bot> because I'm modeling C types which do that sort of thing
[20:28:51] *** Joins: rsx (~dummy@ppp-188-174-156-187.dynamic.mnet-online.de)
[20:28:58] <zoooz> how to print 10 powers of 2
[20:29:01] <aphysically> I can either make the dataclasses.py-native type hint introspection even more horrific but in a way that can't support everythingthing (like renamed Annotated symbol)
[20:29:06] <Forty-Bot> like, an Array of size_t
[20:29:22] <Forty-Bot> and I need to be able at runtime to say "ok, we need an array of size 10"
[20:29:26] <Forty-Bot> and be able to pickle it
[20:29:27] <aphysically> OR I can make dataclasses.py always import typing.py, but I'm worried this could upset people
[20:29:35] *** Babar is now known as Guest7642
[20:29:35] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:5cf0:9b0e:741e:349e)
[20:29:37] <exarkun> A better way to model that in Python would be to compose two types, I think.
[20:29:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[20:29:57] <Forty-Bot> you can do multiple inheritance
[20:29:58] <exarkun> SizedArray(10, range(10))
[20:29:59] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[20:30:01] <SnoopJ> aphysically, I imagine the people it would most upset are the people who thought it was a good idea for dataclasses to come up with its own solution in the first place
[20:30:05] <exarkun> No, not multiple inheritance.  Composition.
[20:30:05] <Forty-Bot> but then you have to name everything up front
[20:30:12] <zoooz>  does anyone know how to do this one
[20:30:17] *** Quits: Guest7642 (~Babar@2405:4803:ff4d:98d0:5cf0:9b0e:741e:349e) (Ping timeout: 240 seconds)
[20:30:19] <zoooz> https://www.hackinscience.org/exercises/powers-of-two
[20:30:23] <SGautam> How do I scroll up a 2D list?
[20:30:27] <SGautam> im trying
[20:30:36] <Forty-Bot> zoooz: 1 << n
[20:30:42] <widp> SGautam: tkinter?
[20:30:44] <SGautam> for y in range(0, lst.width):
[20:30:52] <SGautam>  list[y] = list[y+1]
[20:30:53] <SGautam> but
[20:31:01] <zoooz> ?
[20:31:03] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Ping timeout: 256 seconds)
[20:31:04] <SGautam> its creating a reference to list[y+1] in list[y]
[20:31:18] <SGautam> so when I changed list[y+1], list[y] also changes
[20:31:19] <Forty-Bot> exarkun: right, that's exactly the sort of interface I'm after
[20:31:23] <Forty-Bot> but you can't picke that
[20:31:28] <SGautam> get it?
[20:31:36] <Forty-Bot> unless you give the class a non-default name
[20:31:40] <SGautam> How do I set a "row" in a 2D list to another "row"?
[20:31:47] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489x5fbe8p3dujs.ipv6.telus.net)
[20:31:49] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:31:50] <widp> don't call it "list"
[20:31:51] <aphysically> dataclasses was designed with type hints from the get-go so it's not particularly weird that it would be importing typing, so I want to profile the typing import and decide if it's okay based on that
[20:31:57] <SGautam> widp: sorry
[20:32:01] <zoooz> how do I do this lesson?
[20:32:02] <zoooz> https://www.hackinscience.org/exercises/powers-of-two
[20:32:07] <SGautam> I don't know the technical term, 2D list is not correct?
[20:32:17] <SGautam> a list that can be accessed as list[y][x]
[20:32:18] <exarkun> Forty-Bot: You can
[20:32:19] <widp> no, I mean your variable name
[20:32:20] <aphysically> apparently importing typing used to be really slow which motivated dataclasses to make its own implementation, but ostensibly this has been addressed (need to profile!)
[20:32:21] <exarkun> Forty-Bot: But you still shouldn't
[20:32:25] <widp> list is a class
[20:32:25] <SGautam> widp: I know
[20:32:27] <Forty-Bot> why not
[20:32:29] <SGautam> I just gave an example
[20:32:35] <SGautam> when I do lst[y] = lst[y+1]
[20:32:43] <SGautam> I don't get the expected behaviour
[20:32:49] *** Joins: irelativism (~irelativi@2001:470:69fc:105::f015)
[20:32:52] <exarkun> Forty-Bot: Because the point of an RCE vulnerability isn't that you, the developer doesn't care about it.  The point is that whoever is using the software and has their day/week/year ruined cares about it.
[20:32:59] <supakeen> zoooz: Plenty of people know how to do that one but if I give you the answer you don't learn anything. You use a for loop, as explained on that page.
[20:33:01] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:33:05] <SGautam> if I do lst[y+1][x] = 10 then lst[y][10] also changes
[20:33:06] <exarkun> Forty-Bot: Building an IPC with pickle is irresponsible.
[20:33:13] <Forty-Bot> it's not IPC per se
[20:33:16] <han-solo> zoooz: that page have all the advice for the question, what are you having trouble with ?
[20:33:22] <SnoopJ> aphysically, without really knowing the particulars I would say it should be using typing unless there is a compelling reason not to be using it. If the argument is resting on top of "it's slow" but nobody has measured it, someone should (and should have done so in the first place!)
[20:33:26] <exarkun> Bugs happen, some security vulnerabilities are unavoidable, but they're not *all* unavoidable.
[20:33:37] <Forty-Bot> it's intended to be used with multiprocessing's server-based dicts
[20:33:42] <Forty-Bot> which you can only get from fork()
[20:33:50] <supakeen> Also if you know fully well that some ways of doing things are not a good way to do things, then don't do those things.
[20:33:52] *** Quits: lambda (~weechat@2a01:4f8:c010:8b24::1) (Quit: WeeChat 3.4)
[20:33:54] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[20:33:55] <aphysically> https://bugs.python.org/issue46511 is the specific context if you're interested, but I've mostly mentioned the important bits
[20:33:58] <exarkun> groan, multiprocessing. :(
[20:34:04] <supakeen> (Pickle is one of the things of which we know very well that it is not a good thing)
[20:34:12] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[20:34:12] <exarkun> a fundamentally broken library that should also be avoided
[20:34:17] <Forty-Bot> so it's nor arbitrary IPC, just IPC between parent/child/sibling processes
[20:34:34] <exarkun> Forty-Bot: It is until one day, for some surprising reason, it isn't.
[20:34:40] <ApostleInTriumph> Hello. I'm trying to use blender to run a script. However, it complains of a package not being installed. I did try to fix using pip install <..>, it doesn't solve the issue. How do I know which pip is being used by the python of blender?
[20:34:43] <Forty-Bot> sorry, that's Not My Problem
[20:34:46] <widp> SGautam: in your case , can't you just drop the first row?
[20:34:46] <exarkun> Okay!
[20:34:47] *** Joins: EvilDMP_ (~textual@222.85-107-213.static.virginmediabusiness.co.uk)
[20:34:51] <exarkun> Good luck to your users.
[20:34:53] <Forty-Bot> :)
[20:35:02] <exarkun> I am not going to help you build this but I hope you do have a nice day anyhow.
[20:35:09] <SGautam> widp: I have to do something like this: lst[y] = [lst[y+1]
[20:35:11] <SGautam> oops
[20:35:18] <han-solo> ApostleInTriumph: how did you install blender ? system package manager ?
[20:35:20] <SGautam> lst[y] = [c for c in lst[y+1]]
[20:35:31] <ApostleInTriumph> han-solo using snap
[20:35:47] <Forty-Bot> glad to know that #python doesn't like pythonic solutions
[20:35:51] <ApostleInTriumph> han-solo I go to blender from the scripting of blender, I did sys.executable
[20:35:59] <ApostleInTriumph> it shows a python executable
[20:36:01] <BinarySavior> with class inheritance I don't need to call super().__init__() anymore right?
[20:36:04] <supakeen> Forty-Bot: There are plenty of people in #python with various opinions of various severity.
[20:36:09] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 256 seconds)
[20:36:10] <ApostleInTriumph> I try to import the required package from there and it works
[20:36:13] <han-solo> use the package manager to install the package then
[20:36:13] <supakeen> Don't conflate two users with the other 1700 :)
[20:36:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[20:36:19] <ApostleInTriumph> However, the command, blender  --background  --python anime_renderer.py  doesn't work
[20:36:28] <ApostleInTriumph> ^the import from the above command
[20:36:28] <widp> input <- [[1,2,3],[4,5,6]] and output = [[4,5,6]]
[20:36:30] <widp> right?
[20:36:40] <supakeen> I don't have as strong of an opinion as exarkun does, I just don't feel Pickle is the right choice because I like explicit interfaces.
[20:36:53] <deniska> ApostleInTriumph: not sure about snap version, but tar.gz from their site comes with its own python
[20:36:57] <supakeen> On top of that the problems with trusting those inputs it just becomes a not-an-option really quick :)
[20:37:36] <Forty-Bot> I'm basically using multiprocessing to replace explicit shared memoruy
[20:37:36] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5af8:82c4:6433:af7) (Ping timeout: 250 seconds)
[20:37:45] <Forty-Bot> so I'm really not very concerned about security
[20:37:55] *** Joins: zebrag (~chris@user/zebrag)
[20:38:25] <supakeen> That is OK but it's also understandable that there might be people here that have been bitten before by making pickled interfaces between things.
[20:38:30] <deniska> ApostleInTriumph: `/home/denis/Apps/blender-3.0.0-linux-x64/3.0/python/bin/python3.9 -m ensurepip` did get me pip for blender's python…
[20:38:41] <Forty-Bot> I don't anticipate anything using this library ever calling exec
[20:38:45] <supakeen> I prefer things such as bson, capnproto, protobufs for communication.
[20:38:49] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[20:38:51] <ApostleInTriumph> han-solo, deniska this is exactly my problem https://bpa.st/HZMA
[20:39:02] <supakeen> Forty-Bot: The point is that unpickling pickled data is the same as code execution.
[20:39:11] <Forty-Bot> that's fine
[20:39:11] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[20:39:29] <han-solo> BinarySavior: it depends
[20:39:37] <Forty-Bot> like... if you pwn one python interpreter I guess you pwn the other ones?
[20:39:43] <ApostleInTriumph> content of which_sys.py is `import sys;print(sys.executable)`
[20:39:44] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[20:39:45] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[20:39:58] <Forty-Bot> but this is for web servers, so like if you've pwnd one you can trivially pwn the other ones anyway
[20:40:01] <supakeen> Forty-Bot: The underlying system, generally.
[20:40:20] <Forty-Bot> and python doesn't do sandboxing sooo
[20:40:20] <exarkun> Forty-Bot: Do you understand that pickle *includes* exec-equivalent functionality *in it*?
[20:40:24] <Forty-Bot> yes of course
[20:40:27] <exarkun> Forty-Bot: pickle.load is equivalent to an exec call
[20:40:31] *** Joins: tWqaq (~tWqaq@101.93.138.74)
[20:40:41] <supakeen> Anyways, I don't like to have to do impact analysis think about sandboxing, namespacing, and other things when there are perfectly viable alternatives with explicit schemas.
[20:40:43] <Forty-Bot> do you call functions in your python program?
[20:40:47] <supakeen> So I can ensure I get certain things.
[20:40:49] <Forty-Bot> I do
[20:41:00] <Forty-Bot> so I don't worry about sibling processes using pickle
[20:41:00] *** Quits: tWqaq_ (~tWqaq@101.93.138.74) (Read error: Connection reset by peer)
[20:41:04] <exarkun> "Calling Python functions" does not carry the same intrinsic degree of risk as calling pickle.load
[20:41:12] <Forty-Bot> it does in this context
[20:41:22] <deniska> Depends on where you get your pickles from
[20:41:23] <SnoopJ> (it depends on where the function/pickle came from)
[20:41:39] <Forty-Bot> and the pickle will always come from the same process or from a fork of that process
[20:41:44] *** Joins: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b)
[20:41:48] <supakeen> I think the discussion is going nowhere anyways. One side is adamant on using pickle and the other side is adamant that it's bad.
[20:41:50] <Forty-Bot> it never touches disk or the network
[20:42:04] <supakeen> And there's no evidence of any compromise ;)
[20:42:17] *** Joins: summersault (~summersau@179.221.251.36)
[20:42:53] <ApostleInTriumph> deniska I didn't udnerstand
[20:43:01] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[20:43:11] <ApostleInTriumph> I don't get any pickles? or was it meant for someone else?
[20:43:30] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:43:42] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[20:44:05] <supakeen> I am entirely imagining someone walking in and thinking we're talking about actual pickles and is wondering why they aren't to be trusted and can come from random places.
[20:44:37] <zoooz> can someone  help me with this?
[20:44:37] <exarkun> make sure your pickles are always certified fresh and genuine by your local pickle certification agency
[20:44:40] <zoooz> https://www.hackinscience.org/exercises/import
[20:44:51] <exarkun> zoooz: What have you tried?
[20:44:52] *** Joins: c4017w (~c4017@199.119.235.154)
[20:45:00] <exarkun> zoooz: What difficulty did you encounter?
[20:45:05] <SnoopJ> is there a canonical way to parse setup.cfg? I want to gather the requirements for a package so I can feed them to PyInstaller because they're basically all hidden imports as far as PyInstaller sees it :/
[20:45:13] <exarkun> zoooz: How did the behavior of your attempt differ from what you expected?
[20:45:33] <zoooz> it wants me to import the math module correct?
[20:45:40] <zoooz> What? I was just wondering how to import things
[20:45:56] <supakeen> zoooz: You type `import math`.
[20:46:27] <zoooz> then print what
[20:47:17] *** Quits: tristan_ (~tristan@223.33.164.136) (Ping timeout: 240 seconds)
[20:47:22] <zoooz> how do I use the math import to find the factoral of 27
[20:47:43] <supakeen> You read the documentation of the math module and you'll find it has a function to calculate factorials.
[20:47:59] <supakeen> https://docs.python.org/3/library/math.html#math.factorial
[20:48:14] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:48:28] *** Joins: summersault (~summersau@179.221.251.36)
[20:49:18] <zoooz> Like this? math.factoral(27)
[20:49:55] <deniska> ApostleInTriumph: try printing sys.path
[20:49:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[20:49:58] <supakeen> Like `math.factorial(27)`, yes.
[20:50:02] <exarkun> zoooz: Run a Python interactive session
[20:50:06] <exarkun> zoooz: Try it out
[20:50:07] <deniska> ApostleInTriumph: pickles were another discussion
[20:50:27] <zoooz> exarkun: how do I do that?
[20:50:27] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:50:38] *** thoughtfu is now known as withered_wolf
[20:50:43] <exarkun> zoooz: Did you install Python on your computing device?  If so, what device is it and how did you install Python?
[20:51:22] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:5cf0:9b0e:741e:349e) (Remote host closed the connection)
[20:51:28] <zoooz> supakeen: how do I print that
[20:51:39] *** Joins: erpderp32 (~erpderp32@4.59.252.174)
[20:52:26] <supakeen> zoooz: by doing `print(math.factorial(27))`.
[20:52:37] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:53:02] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:53:04] <ApostleInTriumph> deniska https://bpa.st/O3PQ
[20:53:12] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[20:53:24] <ApostleInTriumph> deniska what is it supposed to mean?
[20:53:41] <zoooz> Oh thank you that is obvious lol.
[20:54:36] <zoooz> it didn't work
[20:54:46] <han-solo> ApostleInTriumph: can you also check where the cv2 is, `import cv2; print(cv2.__file__)` # ?
[20:55:13] <deniska> ApostleInTriumph: it's paths python searches modules to import
[20:55:20] *** Joins: emf (~emf@2601:602:9400:8f0:435:b386:5ad4:6eb2)
[20:56:08] *** Quits: zoooz (~zoooz@204.43.239.207) (Quit: Client closed)
[20:56:17] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 240 seconds)
[20:56:49] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[20:56:51] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:57:19] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:122:3eb:649e:6730)
[20:57:47] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Quit: I have gone to sleep. ZZZzzz…)
[20:58:04] <ApostleInTriumph> han-solo it seems to be the place of pip3?
[20:58:12] <ApostleInTriumph> `/home/user/.local/lib/python3.9/site-packages/cv2/__init__.py`
[20:58:15] *** Joins: txtsd (~txtsd@user/txtsd)
[20:58:20] <han-solo> aha...
[20:58:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[20:58:27] <ApostleInTriumph> this is.........so confusing
[20:58:37] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:58:38] <ApostleInTriumph> why wouldn't blender integrate with anaconda ?
[20:58:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[20:58:47] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[20:59:19] *** Joins: ali1234 (~al@user/ali1234)
[20:59:41] <han-solo> `/snap/blender/1237/3.0/python/bin/python3.9 -m pip install opencv-python` # and it should be fine, i guess ?
[21:00:40] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Quit: Client limit exceeded: 20000)
[21:01:28] <ApostleInTriumph> han-solo nope
[21:01:34] <ApostleInTriumph> still I get cv2 missing error
[21:01:43] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[21:02:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:02:32] *** Quits: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d) (Quit: Leaving)
[21:05:52] <deniska> ApostleInTriumph: consider trying non-snap blender, there might be some sandboxing weirdness going on
[21:06:53] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[21:07:19] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[21:07:25] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[21:07:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[21:08:28] *** Joins: goldfish (~goldfish@user/goldfish)
[21:09:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:09:44] *** Joins: bluedust (~bluedust@103.161.144.140)
[21:10:08] *** Joins: summersault (~summersau@179.221.251.36)
[21:10:17] *** Quits: jay-m126 (~jay-m@129.0.99.28) (Ping timeout: 240 seconds)
[21:10:31] *** Quits: jay-m1261 (~jay-m@129.0.99.28) (Ping timeout: 250 seconds)
[21:10:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[21:10:32] *** Quits: jay-m126_ (~jay-m@129.0.99.28) (Ping timeout: 250 seconds)
[21:11:24] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 250 seconds)
[21:11:50] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[21:11:57] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:12:11] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[21:12:35] *** Joins: k5tux (~k5tux@67.6.31.13)
[21:13:11] *** Joins: vicfred (~vicfred@user/vicfred)
[21:13:13] *** Joins: maxzor (~maxzor@2a01cb04054faa0064e1fd7ef7cbd929.ipv6.abo.wanadoo.fr)
[21:13:45] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:13:55] *** tomg_ is now known as tomg
[21:14:46] <ApostleInTriumph> deniska trying that
[21:15:04] <ApostleInTriumph> basically downloaded the tar.gz. linked blender to the executable inside that extracted tar
[21:15:07] *** Joins: zeden (~zeden@user/zeden)
[21:15:10] <ApostleInTriumph> that has its own python i can see
[21:15:58] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[21:16:10] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[21:16:15] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[21:16:22] *** Joins: mickey80 (~user@user/mickey)
[21:16:57] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:122:3eb:649e:6730) (Ping timeout: 240 seconds)
[21:17:33] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[21:17:34] *** mickey80 is now known as mickey8
[21:17:40] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:17:42] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:41ab:c65e:413f:7838)
[21:17:54] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[21:18:59] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:19:38] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.3)
[21:20:25] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[21:20:34] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[21:20:37] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[21:20:40] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[21:20:50] *** Quits: berong91 (~noob4ever@75.154.235.153) (Remote host closed the connection)
[21:20:52] *** Joins: bindu (~bindu@user/bindu)
[21:21:48] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 250 seconds)
[21:22:13] *** Joins: Jefren (~Jefren@206.sub-174-215-176.myvzw.com)
[21:22:15] *** Joins: Atque (~Atque@user/atque)
[21:22:19] *** Quits: Angs (~Angs@2a02:aa1:1015:bae4:2b5e:6266:f1e1:402f) (Remote host closed the connection)
[21:23:09] *** Joins: nomic (~nomic@185.192.69.10)
[21:24:33] *** Quits: rsx (~dummy@ppp-188-174-156-187.dynamic.mnet-online.de) (Quit: rsx)
[21:24:46] *** Quits: davef (~davef@user/davef) (Quit: Quit)
[21:25:03] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[21:25:10] *** Quits: thevishy (~Nishant@2405:201:f005:c007:39ad:8b3b:de67:f2a2) (Quit: Leaving)
[21:26:29] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:27:29] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[21:27:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:28:07] <SGautam> Wait, how do I get text input in pygame?
[21:28:08] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[21:28:09] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10fe:c92d:5d2d:ced5:fd7a:5dda)
[21:28:19] *** Joins: davef (dave@user/davef)
[21:28:25] <SGautam> pygame.key.unicode works... but not for special characters
[21:28:32] *** Joins: zebrag (~chris@user/zebrag)
[21:28:43] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[21:28:56] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:30:09] <ssbr> SGautam: pygame is a pretty low level game framework, you're not going to be able to get "text input", just individual keypresses. What do you mean that doesn't work for "special characters"?
[21:30:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[21:30:41] <SGautam> If I input '(', I simply get a string of length 0 in event.unicode.
[21:30:42] *** Joins: magla (~gelignite@55d450c5.access.ecotel.net)
[21:30:51] <SGautam> It only seems to work for alphanumerics.
[21:31:35] <SGautam> I'm thinking something that gives me a raw character representation of the keyboard event. event.unicode seems to be exactly that except it only works for alphanumerics.
[21:31:58] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ef:dcbd:5d2d:ced5:fd7a:5dda) (Ping timeout: 268 seconds)
[21:32:25] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:32:30] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[21:32:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:32:37] <ssbr> SGautam: that is unfortunate. You might need to use both event.unicode and something else to catch both.
[21:33:28] <SnoopJ> SGautam, I have made use of https://github.com/DYGV/pygame_textinput before, it supports a pretty broad notion of input
[21:33:33] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10fe:c92d:5d2d:ced5:fd7a:5dda) (Read error: Connection reset by peer)
[21:33:55] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[21:34:28] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:34:48] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[21:35:14] *** Quits: EvilDMP_ (~textual@222.85-107-213.static.virginmediabusiness.co.uk) (Ping timeout: 250 seconds)
[21:36:07] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:36:43] <SnoopJ> it does pretty much what ssbr just said, you have to roll your own handling of events for this (or use someone else's)
[21:37:00] *** Joins: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net)
[21:37:06] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[21:37:07] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[21:37:43] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:38:11] *** Joins: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[21:38:37] *** Quits: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[21:38:42] *** Joins: manti7 (~manti7@176.10.104.94)
[21:38:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:39:17] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Ping timeout: 240 seconds)
[21:40:00] *** Quits: widp (~user@124.123.105.45) (Ping timeout: 250 seconds)
[21:40:00] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[21:40:17] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[21:40:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[21:41:02] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[21:41:17] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[21:42:09] <novapy> is there a good way to display images from a url?
[21:43:38] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Quit: I have gone to sleep. ZZZzzz…)
[21:43:39] *** Joins: clime (~clime@78-80-113-95.customers.tmcz.cz)
[21:44:37] <bookworm> display to where?
[21:45:04] *** Joins: pmb_ (~pmb@89-64-79-51.dynamic.chello.pl)
[21:45:11] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[21:45:13] <bookworm> in a notebook or webserver, sure just put it in a rendered element
[21:45:26] *** Quits: NoxTurminal8 (~Noxturmin@user/noxturminal) (Quit: Ping timeout (120 seconds))
[21:45:38] <bookworm> on the console? Not in most terminals (or with non standard escape codes)
[21:45:42] *** pmb_ is now known as pmb
[21:45:44] *** Joins: NoxTurminal8 (~Noxturmin@user/noxturminal)
[21:45:47] <grym> PIL has image.show()
[21:45:54] <grym> matplotlib has imshow
[21:46:15] *** Joins: greedom (~greedom@p200300de670e5b00603706c9ab794805.dip0.t-ipconnect.de)
[21:46:51] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[21:47:18] *** Joins: darksun (~darksun@user/darksun)
[21:47:23] <clime> can anyone explain what's going on here? https://bpa.st/2DKQ
[21:47:23] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:47:41] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[21:48:09] *** Quits: greedom (~greedom@p200300de670e5b00603706c9ab794805.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:48:11] *** Joins: Nutte35 (~Nutte@202.153.82.163)
[21:48:22] *** Quits: Nutte35 (~Nutte@202.153.82.163) (Read error: Connection reset by peer)
[21:48:44] *** Joins: Nutte35 (~Nutte@202.153.82.163)
[21:48:55] *** Quits: Nutte35 (~Nutte@202.153.82.163) (Remote host closed the connection)
[21:48:59] <novapy> bookworm: I am working with timg, to display in terminal, but I can't seem to get a url to load as the image
[21:49:09] *** Joins: Nutte35 (~Nutte@202.153.82.163)
[21:49:10] *** Joins: greedom (~greedom@p200300de670e5b00603706c9ab794805.dip0.t-ipconnect.de)
[21:49:22] <novapy> I tried requests.get(), but that did'nt work
[21:49:40] * gjvc installs a .venv/
[21:49:43] *** Quits: kiran (~kiranostr@78.40.148.178) (Quit: Toodle-oo!)
[21:50:10] <bookworm> clime: what you are doing is rather strange... why do you put lists in a frame?
[21:50:23] *** Quits: tWqaq (~tWqaq@101.93.138.74) (Quit: Leaving)
[21:50:30] *** Quits: Nutte35 (~Nutte@202.153.82.163) (Read error: Connection reset by peer)
[21:50:32] <clime> bookworm: to store list of items
[21:50:36] <gjvc> what bookworm said... what are you expecting/hoping to happen?
[21:50:38] *** Joins: kiran (~kiranostr@78.40.148.178)
[21:50:41] <bookworm> yes, but why?
[21:51:39] *** Joins: Trashlord (~trash@user/trashlord)
[21:51:51] <bookworm> pandas is in essence a row and column wise "table"
[21:52:20] <bookworm> shoving a list in there is really seldom useful as that's not the point of a dataframe
[21:52:33] <clime> bookworm: thanks i think i know what's going on now
[21:52:43] <bookworm> normally you want to have numbers there or strings or some such to do vectorized math
[21:53:07] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:53:14] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Quit: I have gone to sleep. ZZZzzz…)
[21:54:05] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[21:54:10] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 268 seconds)
[21:54:12] <clime> it tries to assign each element in the list two each column listed in .loc but only if there is more than column in the frame (which is confusing but ok)
[21:54:18] *** Parts: clime (~clime@78-80-113-95.customers.tmcz.cz) (WeeChat 3.3)
[21:54:25] *** Joins: dgw (dgw@sopel/admin/dgw)
[21:54:36] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[21:55:08] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[21:56:27] <novapy> Someone mind telling me how to how to get an Image from url?
[21:56:32] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Client Quit)
[21:56:36] <grym> novapy: what's an Image
[21:56:43] <grym> and what's the URL :D
[21:56:48] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:57:20] <novapy> say, from an imgur link, the rendering isn't the issue, its getting the image
[21:58:09] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:58:50] <novapy> grym: Example link: https://i.imgur.com/ExdKOOz.png
[21:59:14] *** Joins: Batzy (~quassel@user/batzy)
[21:59:23] *** Joins: Siecje (~Siecje@184-175-12-2.dsl.teksavvy.com)
[21:59:57] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[22:00:02] <Siecje> I'm using pipenv for the first time. I'm in a weird state, how can I re-create the venv?
[22:00:20] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[22:00:24] *** clarjon_1 is now known as clarjon1
[22:00:26] *** Joins: novns (~novns@user/novns)
[22:00:27] <SnoopJ> novapy, `image_bytes = requests.get("https://i.imgur.com/ExdKOOz.png").content` and then feed those bytes to whatever image representation you want. The Pillow library is quite good.
[22:01:15] <grym> novapy: https://bpa.st/IWHQ
[22:01:19] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[22:01:24] *** Joins: node1 (~hex@user/node1)
[22:01:27] <node1> Hi
[22:01:30] <SnoopJ> more robust code will check that the response was good before moving on etc., but the answer to your question is "download it, first"
[22:01:35] *** Joins: someuser (~user@197.54.18.55)
[22:01:41] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:a078:3cdd:386b:cd9b)
[22:01:49] *** Joins: vaio (~gary@user/ghost)
[22:01:53] <grym> novapy: https://bpa.st/QXZA
[22:01:58] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[22:02:03] <grym> and yeah, throw a resp.raise_for_status() in there
[22:02:22] <SnoopJ> or check resp.ok
[22:02:23] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::48)
[22:03:34] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[22:03:36] <node1> Is it possible to create a graph in networks module *without* numpy? For instance i have matrix in the form of nested list i.e in the form of adjacency matrix. I would like to use it to make a graph using networkx.
[22:03:50] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[22:03:54] <node1> s/networks/networkx/
[22:04:18] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:04:31] <novapy> grym: I get this error from it `AttributeError: 'bytes' object has no attribute 'size'`
[22:04:32] *** Joins: grundrausch3n (~grundraus@p4ff43c5b.dip0.t-ipconnect.de)
[22:05:23] *** Joins: vilja (~vilja@fwa5e16-76.bb.online.no)
[22:05:34] <SnoopJ> novapy, you skipped a step
[22:05:55] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:fc99:c2e1:c16:8c8a)
[22:06:15] <novapy> SnoopJ: What do you mean? What step did I skip?
[22:06:22] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.32)
[22:06:31] *** Joins: sharksauce (sharksauce@user/sharksauce)
[22:06:35] *** Joins: crashrep (~crashrep@user/crashrep)
[22:06:42] <grym> novapy: works for me https://bpa.st/P3TQ
[22:08:23] *** Joins: twobitsprite (~isaac.fre@192.146.154.3)
[22:08:53] <twobitsprite> any suggestions on troubleshooting a celery "'module' object is not callable" error?
[22:09:02] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.166) (Ping timeout: 250 seconds)
[22:09:28] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:41ab:c65e:413f:7838) (Ping timeout: 250 seconds)
[22:09:41] <SnoopJ> novapy, turning the bytes you got from the response into an Image object. You are looking at .size on a bytes object, and bytes objects don't have that attribute.
[22:10:11] <SnoopJ> twobitsprite, nothing more helpful than "don't try to call the module." Perhaps sharing the complete error report will shed more light on the problem.
[22:10:29] *** Joins: neceve (~quassel@2.26.93.228)
[22:10:31] *** Joins: pycode (~pycode3@2001:b07:5d28:551:2e60:8458:a5d9:ffc3)
[22:10:48] <twobitsprite> SnoopJ: the stack trace is entirely in celery, not my code. I'll pastebin the stack trace
[22:11:32] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:606f:8a7c:da5e:9c87)
[22:11:49] <twobitsprite> SnoopJ: https://bpa.st/FX7A
[22:12:18] <twobitsprite> I assume somewhere I'm calling a module, but no idea where since celery sucks at error logging
[22:12:32] <theseb> When you run python code in a Jupyter notebook do you have to keep restarting the kernel?
[22:12:49] <theseb> I've noticed if i run something and come back later i can't run individual cells anymore
[22:13:41] <Celelibi> Don't learn programming with jupyter.
[22:13:54] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[22:14:02] <SnoopJ> theseb, the state lives however long the kernel does. It's generally good practice to write notebooks that can be executed from scratch, because you'll probably end up doing that a lot.
[22:14:14] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:fc99:c2e1:c16:8c8a) (Ping timeout: 250 seconds)
[22:14:27] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Quit: WeeChat 3.3)
[22:15:24] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:15:31] <SnoopJ> twobitsprite, looks like the problem is with loader_cls, whatever that is. What version of celery is this?
[22:15:33] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:17:44] <twobitsprite> SnoopJ: 5.1.2
[22:17:46] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:17:46] *** Joins: jmd (~user@de.cellform.com)
[22:17:56] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:18:25] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:18:48] *** Joins: jmd (~user@de.cellform.com)
[22:19:05] <SnoopJ> hmm, not related to issue #3620 then
[22:19:38] *** Quits: ubert1 (~Thunderbi@p200300ecdf09940ed781da24ea780c96.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:19:40] *** Joins: c4017w_ (~c4017@2605:8d80:4c0:ae98:794a:3b8:27c3:7bb3)
[22:20:08] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:20:28] <ngp> is there a way to see environment variables created/modified by a subprocess call?
[22:20:37] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::48) (Ping timeout: 240 seconds)
[22:20:39] *** Joins: jmd (~user@de.cellform.com)
[22:20:48] <ngp> ie. I want `export`ed variables from a child script
[22:20:49] *** Quits: c4017w (~c4017@199.119.235.154) (Read error: Connection reset by peer)
[22:20:57] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[22:20:57] <deniska> ngp: no
[22:20:57] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:20:59] *** Quits: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[22:21:06] <twobitsprite> ngp: subprocesses can't create or modify environment variables in the parent process's namespace
[22:21:39] <twobitsprite> ngp: in linux, at least. if you're running in windows, I have no idea
[22:21:55] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:a078:3cdd:386b:cd9b) (Ping timeout: 268 seconds)
[22:21:58] <SnoopJ> twobitsprite, based on that last line my guess would be some kind of configuration issue where a loader has been specified, but it's a fully-qualified name to a non-callable module. I'm not exactly savvy on celery, though, possibly someone else who is would have more ideas
[22:22:37] *** Joins: grnman (~grnman@159.89.27.73)
[22:22:53] *** Quits: c4017w_ (~c4017@2605:8d80:4c0:ae98:794a:3b8:27c3:7bb3) (Read error: Connection reset by peer)
[22:23:03] *** Joins: jmd (~user@de.cellform.com)
[22:23:05] *** Joins: aslicedbanjo (~aslicedba@host31-48-145-86.range31-48.btcentralplus.com)
[22:23:12] <twobitsprite> SnoopJ: I haven't modified the config or how the celery worked is invoked, I just added celery tasks in the tasks.py file, and it ran fine before, so I don't think it's a problem with that
[22:23:55] *** Joins: thiras (~thiras@user/thiras)
[22:23:57] *** Quits: dyens (~user@dyens.info-lan.me) (Ping timeout: 240 seconds)
[22:23:58] *** Joins: c4017w (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce)
[22:24:02] <SnoopJ> twobitsprite, the next thing I'd be doing here is trying to find out *which* module it is, either by using a debugger or the 'machete' approach of putting a print statment in just before base.py:1258
[22:24:06] <twobitsprite> I assume it's when the celery worker is either importing the tasks module, or when it's trying to launch a task, but it gives no indication of which task is the problem
[22:24:13] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:24:28] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:24:58] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[22:25:19] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[22:25:48] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:26:05] <twobitsprite> SnoopJ: this runs in a kubernetes pod in google cloud services, from an image built by google cloud build, and does a "poetry install" of everything... the app won't run locally because when it starts up, it tries to contact GCP services that are local to the virtual network........ I know, I hate it too. makes it impossible to really debug anything
[22:26:06] *** Joins: Alexthek1d (~Alexthek1@p5b3ae741.dip0.t-ipconnect.de)
[22:26:28] *** Joins: jmd (~user@de.cellform.com)
[22:26:30] <theseb> SnoopJ: thanks...how come sometimes you try to run a cell and nothing happens?  But if you restart kernel you can rerun stuff?
[22:26:39] *** Joins: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it)
[22:26:47] <SnoopJ> twobitsprite, I figured something like that would probably rule out a debugger. Does it preclude some hacky print() debugging?
[22:27:01] <bjs> node1: I don't think so, networkx requires numpy, but I'm sure it has lots of ways of constructing and using graphs that don't require *you* to use numpy yourself in any way
[22:27:01] <SnoopJ> theseb, that's usually a sign that the kernel is locked up, in my experience.
[22:27:02] *** Quits: k5tux (~k5tux@67.6.31.13) (Ping timeout: 240 seconds)
[22:27:27] <twobitsprite> SnoopJ: no, but I don't even know where to put the prints... at the top-level before every task definition?
[22:27:27] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:27:30] <Alexthek1d> does anyone know if there is a module that can parse human input dates? like parseDate("today, 15:34") -> 26/01/2022-15.34 or parseDate("yesterday, 11:34") -> 25/01/2022-11.34
[22:27:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:27:38] <SnoopJ> bjs, node1 yes you can definitely build graphs and do useful things with them without any numpy usage
[22:27:39] <InPhase> theseb: Yeah, over long periods of time you can sometimes get kernel crashes that aren't noticed by the JupyterLab instance.
[22:27:47] *** Quits: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[22:27:56] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[22:28:05] <bjs> node1: it looks like there are many formats networkx accepts, perhaps you can convert to one of those https://networkx.org/documentation/stable/reference/readwrite/index.html
[22:28:11] <bjs> it might not accept exactly the form you have
[22:28:31] <twobitsprite> (fortunately, this is my last week at this job. the code base and infrastructure are horrific)
[22:28:43] <InPhase> theseb: There are particularly a lot of ways this can happen on a shared server or cluster with a lot of things going on.
[22:28:44] *** Quits: dsp00 (~dsp00@20.79.249.135) (Remote host closed the connection)
[22:28:48] <theseb> SnoopJ, InPhase : i'm debuging some Python code...is it expected the kernel crashes and needs to restarted everytime there is a syntax error?
[22:28:56] <theseb> maybe i should know that?
[22:29:00] <InPhase> theseb: No, that should not happen.
[22:29:01] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:29:11] *** Joins: zhenya01 (~zhenya01@varenka.cime.net)
[22:29:17] *** Quits: zhenya01 (~zhenya01@varenka.cime.net) (Client Quit)
[22:29:22] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[22:29:25] <SnoopJ> twobitsprite, I would start with `print(f"base.py: {self.loader_cls!r=}")` at base.py:1258, i.e. just before this exception occurs, to see what the actual thingy it's trying to call is.
[22:29:37] *** Quits: vilja (~vilja@fwa5e16-76.bb.online.no) (Ping timeout: 240 seconds)
[22:29:51] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[22:29:52] *** Joins: nunggu (~q@user/nunggu)
[22:29:58] <InPhase> theseb: It's possible you have a version of JupyterLab setup with a bug in it though.  It's a system that certainly picks up some bugs along the way, and then usually resolves them.
[22:30:15] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[22:30:19] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:30:21] <twobitsprite> SnoopJ: base.py is part of celery, not my app
[22:30:22] <SnoopJ> theseb, it shouldn't crash on syntax errors, no.
[22:30:25] <SnoopJ> twobitsprite, I understand that.
[22:30:37] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 240 seconds)
[22:30:49] <twobitsprite> SnoopJ: unless you're suggesting a script inserted into the docker image that monkey-patches celery after it's installed but before the app starts?
[22:31:09] <node1> bjs, sure thank you
[22:31:09] *** Quits: DUPS (~DUP@173.255.205.68) (Remote host closed the connection)
[22:31:18] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:31:19] <SnoopJ> twobitsprite, I couldn't really give you a suggestion specific to all your CI details, because I don't know them.
[22:31:31] *** Joins: Atque (~Atque@user/atque)
[22:31:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[22:31:38] *** Ninpo_ is now known as Ninpo
[22:31:45] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:31:47] *** Quits: Ninpo (~Ninpo@leviathan.qap.la) (Changing host)
[22:31:47] *** Joins: Ninpo (~Ninpo@user/ninpo)
[22:31:48] <SnoopJ> there are probably a few ways you could go about it, but sure, inserting the line after the provisioning is done might do the trick
[22:31:53] <twobitsprite> SnoopJ: I know, but I'm just saying, it's a bit tricky for me to insert print statements into celery
[22:31:55] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[22:31:55] *** Joins: lispy (~lispy4@84.69.59.93)
[22:31:58] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:32:35] <SnoopJ> I don't have any other suggestions
[22:32:48] <twobitsprite> all I've learned so far is that celery is garbage and overly complicated with shitty documentation and no logging
[22:33:24] <twobitsprite> SnoopJ: thanks anyways. maybe if I file a bug they'll offer to help me troubleshoot
[22:33:25] <SnoopJ> and that your workflow severely restricts your ability to debug, but you probably already knew that
[22:33:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:33:39] <twobitsprite> SnoopJ: ohhh, yeah..... XD
[22:33:52] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:33:55] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:33:57] *** Quits: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6) (Read error: Connection reset by peer)
[22:33:58] <SnoopJ> worth considering in a post-mortem
[22:34:01] *** Joins: k5tux (~k5tux@67.237.164.102)
[22:34:10] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 250 seconds)
[22:34:23] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[22:34:31] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[22:34:50] <twobitsprite> I've offered to implement better workflow, but management thinks that would take too long and wouldn't be worth it.... meanwhile, I guess it'll be their problem since I can't debug my code and I'll be gone on friday *shrug emoticon*
[22:35:58] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[22:36:54] <SnoopJ> twobitsprite, I know the sort of pain. I sunk a good number of personal hours into trying to strip memory I didn't care about from core dumps of a Python process just so I could get context from a similar "it only does this in prod / that one time" situation, because the reports coming my way were terrible.
[22:37:26] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[22:37:33] <twobitsprite> SnoopJ: ugh, yeah....
[22:37:33] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:37:34] <SnoopJ> (unfortunately, it didn't pan out, but at least I know how to core dump a process that _doesn't_ have a prohibitively large working set)
[22:37:39] *** Quits: erpderp32 (~erpderp32@4.59.252.174) (Quit: Client closed)
[22:37:47] <twobitsprite> lol
[22:38:36] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[22:38:51] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[22:39:10] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:39:13] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[22:39:16] *** Joins: erpderp32 (~erpderp32@4.59.252.174)
[22:39:19] *** Joins: beli6147 (~Thunderbi@EPAM-SYSTEM.ear2.LosAngeles1.Level3.net)
[22:39:35] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:39:37] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[22:40:18] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[22:40:25] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[22:40:41] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[22:40:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:41:45] *** Joins: vilja (~vilja@fwa5e16-76.bb.online.no)
[22:42:03] *** Quits: _SKiTZO (~SKiTZO@64.89-10-146.nextgentel.com) (Remote host closed the connection)
[22:42:26] *** Joins: _SKiTZO (~SKiTZO@64.89-10-146.nextgentel.com)
[22:42:42] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 276 seconds)
[22:42:48] *** Joins: efil4cri_ (~efil4cri@gateway/tor-sasl/wfnintr)
[22:44:07] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 268 seconds)
[22:44:15] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[22:45:04] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:35] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[22:45:51] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:46:32] *** Joins: manti7 (~manti7@p57ba338d.dip0.t-ipconnect.de)
[22:47:15] *** Joins: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net)
[22:47:56] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:50:30] *** Quits: efil4cri_ (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 276 seconds)
[22:52:05] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[22:53:25] *** Quits: pro_z_ (~pro_z@37.214.69.237) (Ping timeout: 240 seconds)
[22:53:51] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[22:54:10] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:54:11] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[22:54:32] *** Quits: beli6147 (~Thunderbi@EPAM-SYSTEM.ear2.LosAngeles1.Level3.net) (Ping timeout: 250 seconds)
[22:54:43] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Client Quit)
[22:55:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:2e60:8458:a5d9:ffc3) (Ping timeout: 250 seconds)
[22:56:17] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[22:56:20] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[22:56:22] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:56:27] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489x5fbe8p3dujs.ipv6.telus.net) (Remote host closed the connection)
[22:56:48] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:56:57] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:57:17] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:59:14] <novapy> Someone tell me what `.raise_for_status()` does in requests
[22:59:17] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[22:59:26] <nedbat> is there a better way to get a subset of a dict?  abc_only = { k: v for k in ["a", "b", "c"] if (v := whole_dict.get(k)) is not None }  # assuming none of the values are None.
[22:59:28] <grym> novapy: it raises an exception if your status code isn't 200
[22:59:34] *** Quits: The_Loko (~The_Loko@79.116.24.80) (Quit: Leaving)
[22:59:52] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[23:00:03] <grym> novapy: https://docs.python-requests.org/en/latest/api/#requests.Response.raise_for_status  this is easy to search for in the docs
[23:00:18] <novapy> grym: thanks
[23:00:22] <SnoopJ> that's not quite right, it raises for error codes
[23:00:35] <SnoopJ> (i.e. it won't raise for 3xx, because those aren't errors)
[23:00:36] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[23:01:36] *** Quits: Jefren (~Jefren@206.sub-174-215-176.myvzw.com) (Quit: CoreIRC for Android - www.coreirc.com)
[23:01:42] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:02:19] *** Quits: whaley (~whaley@2603-6080-a301-33d1-a8f4-ea2c-f384-4767.res6.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[23:02:39] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[23:03:33] *** Joins: ultsllt (~ultsllt@50.231.5.242)
[23:04:03] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[23:04:35] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[23:04:37] <SnoopJ> nedbat, I would probably spell it `{k: v for k,v in whole_dict.items() if k in SUBSET_KEYS}` maybe with an `and if v is not None` if you really want to exclude values that are None
[23:04:59] <nedbat> SnoopJ: hmm, that's better true.
[23:05:00] <SnoopJ> but maybe that's sloppy when the subset is much smaller than the whole dict
[23:05:48] <nedbat> SnoopJ: nah, whatever.  i was getting too tricky with the walrus
[23:06:45] *** Quits: kmh (~kmh@2a00:6020:5004:6800:151a:944b:c8ba:cf58) (Quit: Leaving)
[23:06:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:07:01] *** Joins: mat001 (~mat001@213.143.69.121)
[23:07:23] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[23:07:38] *** Joins: legola (~legola@46.235.100.54)
[23:07:57] *** Quits: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com) (Ping timeout: 240 seconds)
[23:08:05] <SnoopJ> nedbat, a write-only spelling that is *also* probably not being cautious enough about not-present keys: `dict(zip(KEYS, operator.itemgetter(*KEYS)(d)))`
[23:08:53] <nedbat> SnoopJ: that's interesting because i thought one of the operator.foogetters could do this, but I'm not sure i want a line that dense.
[23:09:03] <BrenBarn> I think one of the tools like itemgetter or something can take a list
[23:09:03] <BrenBarn> oh yeah there you go
[23:09:34] *** Quits: grooverman (~grooverma@177.102.119.200) (Remote host closed the connection)
[23:10:43] *** Joins: grooverman (~grooverma@152.254.155.18)
[23:11:15] *** Quits: manti7 (~manti7@p57ba338d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[23:11:26] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[23:12:26] <twobitsprite> nedbat: why not just spell it all out in a real for loop for readability?
[23:12:35] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:12:45] <SnoopJ> the comprehension gets high marks for legibility to me, but if I wanted anything fancier I'd be writing a generator function
[23:12:47] *** Quits: PacKetIV (PacKetIV@user/packetiv) (Excess Flood)
[23:13:04] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[23:13:08] <nedbat> twobitsprite: i think the comprehension is readable, especially on two lines
[23:13:18] *** Joins: mat001 (~mat001@213.143.69.121)
[23:13:43] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:3442:bec1:2b74:6864) (Ping timeout: 268 seconds)
[23:13:43] <twobitsprite> I love comprehensions too, but if it gets complicated enough to ask IRC about it, why not just write it out?
[23:14:06] <twobitsprite> personally, the readability issue I have is with the assignment operator
[23:14:21] <twobitsprite> I feel like assignments should be as obvious as possible
[23:15:15] *** Joins: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com)
[23:17:17] <novapy> is there any other libraries for working with images in console other than PIL and timg?
[23:17:23] *** Joins: ic3blx_ (~ic3blx___@87.116.166.221)
[23:17:23] *** Quits: ic3blx_ (~ic3blx___@87.116.166.221) (Changing host)
[23:17:23] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[23:17:27] <SnoopJ> yes
[23:18:31] <twobitsprite> SnoopJ: I assume novapy is looking for suggestions, not the answer to a yes/no question :P
[23:19:09] *** Quits: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[23:19:27] <SnoopJ> twobitsprite, since Pillow was one of the previous suggestions and they haven't clarified why they don't want to use it, I don't really think listing libraries is much use
[23:19:32] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 240 seconds)
[23:19:43] <SnoopJ> might as well go over to PyPI and search "image"
[23:20:00] <twobitsprite> SnoopJ: that would at least be a suggestion :P
[23:20:08] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[23:20:19] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[23:20:38] *** Joins: holgersson (~quassel@user/holgersson)
[23:20:58] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[23:20:59] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[23:21:21] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[23:21:36] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[23:21:45] *** Joins: mat001 (~mat001@72.28.108.216)
[23:21:56] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[23:22:20] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[23:23:28] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5c9:7912:93ae:96ad)
[23:25:18] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Ping timeout: 250 seconds)
[23:25:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:5c9:7912:93ae:96ad) (Read error: Connection reset by peer)
[23:25:40] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5c9:7912:93ae:96ad)
[23:25:53] *** Joins: subopt (~subopt@2603-8081-2302-459a-5916-3019-ff7b-d1c0.res6.spectrum.com)
[23:27:33] <nedbat> twobitsprite: I got a simpler and better comprehension than my first one, which I suspected was too weird. IRC confirmed that.
[23:29:04] <novapy> twobitsprite, SnoopJ PIL doesn't work in my terminal
[23:29:52] *** Quits: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it) (Quit: Leaving)
[23:30:06] *** Joins: MikZyth (~MikZyth@host-249-158-66-217.spbmts.ru)
[23:30:24] <SnoopJ> novapy, I don't really know what that means.
[23:30:30] *** Quits: ouestbillie (~gallup@45.83.220.195) (Ping timeout: 250 seconds)
[23:30:34] <petaflot> hello! I have a list [0,1,2] and I'm trying to slice it to get [0,2] ; I tried with [0,1,2][0:2:1] (returns [0,2]) and with (0,1,2)[0:2:2] (returns [0,]) ; I'm sure it is possible....
[23:30:54] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[23:31:13] <SnoopJ> petaflot, does `lst[::2]` do what you wanted?
[23:31:15] <Cheaterman> petaflot: [0, 1, 2][::2]
[23:31:42] <twobitsprite> !doesntwork
[23:31:43] *** Quits: Jong (~Jong@2620:10d:c090:400::5:78f7) (Quit: Textual IRC Client: www.textualapp.com)
[23:31:54] <twobitsprite> didn't there used to be a factoid like that?
[23:32:12] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[23:32:21] <Cheaterman> >>> [0,1,2][::2]
[23:32:25] <SnoopJ> twobitsprite, there hasn't been a bot that knows commands like that in #python for as long as I've been here, perhaps you're thinking of another channel
[23:32:27] <Cheaterman> I get [0, 2] here
[23:32:37] *** Quits: Narrat (~omnius@p200300df5f4aae4f06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[23:33:00] *** Joins: ttys000 (~ttys000@user/ttys000)
[23:33:09] <twobitsprite> novapy: "doesn't work" isn't helpful for troubleshooting. providing error messages or a description of desired behavior vs actual behavior would help
[23:33:17] <twobitsprite> SnoopJ: possibly
[23:33:27] <petaflot> SnoopJ: Cheaterman: thank you!
[23:33:31] <novapy> SnoopJ: Using Image.show() from PIL wont display any errors, but won't display erros
[23:33:41] <SnoopJ> novapy, you want to display an image in your terminal?
[23:33:55] <novapy> yes
[23:34:13] <novapy> wont display image
[23:34:19] <novapy> or errors
[23:34:32] <SnoopJ> Most terminals don't, because they're terminals. Some do have extensions that let you do this, though
[23:34:42] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[23:34:56] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[23:35:13] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[23:35:18] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[23:35:46] <novapy> SnoopJ any idea with ones? I can only use the xfce4 terminal or gnome terminal
[23:36:38] <grym> novapy: timg uses PIL too :)
[23:37:21] <twobitsprite> novapy: https://pypi.org/project/python-aalib/
[23:37:48] <SnoopJ> novapy, I believe gnome-terminal is capable of doing this (I think it's how SVG are rendered for emoji, although I think fonts are involved there too), but I don't know more than that
[23:38:00] *** Joins: naranja (~orange@user/orangeboxcutter)
[23:38:13] <novapy> grym: i can use PIL's library, but Image.show() does nothing
[23:38:44] <grym> novapy: it will launch a (not-terminal) image viewing window, if you have a graphical system at all
[23:39:24] *** Joins: ub (~Thunderbi@141.98.252.232)
[23:39:31] <grym> novapy: but you are free to display it however you want once you have an Image instance; reading timg's code might be informative, because that's what timg.Renderer does
[23:39:41] *** Quits: legola (~legola@46.235.100.54) (Remote host closed the connection)
[23:39:59] <novapy> grym: I am using a very weird system, which explains why I get no window
[23:40:50] <novapy> I have the image instance, although timg wont display it using the ansi methods, it only works with ascii
[23:40:51] *** Joins: legola (~legola@46.235.100.54)
[23:40:53] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:40:54] *** ub is now known as ubert
[23:41:01] *** Joins: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[23:41:27] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 256 seconds)
[23:41:28] <grym> sounds rough
[23:41:43] <SnoopJ> I don't think show() makes very many guarantees, and unfortunately doesn't raise if the request is nonsense (i.e. in a non-graphical environment)
[23:42:07] *** Quits: nomic (~nomic@185.192.69.10) (Quit: Leaving)
[23:42:25] *** Joins: nomic (~nomic@185.192.69.10)
[23:42:41] <SnoopJ> PIL.ImageShow.show() does have a return value that tells you whether or not what you asked for makes sense, though
[23:43:30] *** Joins: Jefren (~Jefren@123.sub-174-215-151.myvzw.com)
[23:43:41] <novapy> I did manage to get an image from my disk to display with timg's ansi, but not the image from the web for some reason
[23:44:01] *** Joins: Pickchea (~private@user/pickchea)
[23:44:27] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:c827:7093:6d2c:5ea8)
[23:45:03] <novapy> maybe the differemce is that the image file on my disk was a png, vs the online images are jpg
[23:45:47] *** Quits: legola (~legola@46.235.100.54) (Ping timeout: 268 seconds)
[23:45:57] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:606f:8a7c:da5e:9c87) (Ping timeout: 240 seconds)
[23:47:31] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[23:48:12] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[23:50:28] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Quit: you can't fire me!)
[23:51:15] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:51:52] *** Joins: c4017w_ (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce)
[23:52:22] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[23:52:38] *** Joins: c4017w__ (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce)
[23:53:03] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:9c2e:c799:8d62:b74b)
[23:54:20] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[23:54:35] *** Quits: node1 (~hex@user/node1) (Remote host closed the connection)
[23:54:39] *** Joins: summersault (~summersau@179.221.251.36)
[23:55:01] *** Quits: c4017w (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce) (Ping timeout: 240 seconds)
[23:55:02] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:c827:7093:6d2c:5ea8) (Ping timeout: 268 seconds)
[23:56:02] *** Quits: c4017w_ (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce) (Ping timeout: 240 seconds)
[23:59:11] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[23:59:47] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[23:59:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
