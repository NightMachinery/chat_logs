[00:15:50] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3x9K
[00:17:22] <FromDiscord> <Ayy Lmao> The error is `Error: unhandled exception: ccgexprs.nim(809, 10) `tupType.kind == tyTuple`  [AssertionDefect]`
[00:48:37] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[01:14:49] *** Quits: cyraxjoe (~joe@201.159.98.32) (Read error: Connection reset by peer)
[01:15:44] *** Joins: cyraxjoe (~joe@201.159.96.1)
[01:17:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:38:37] <arkanoid> c2nim is trying to parse inside a "#if defined(MYSYMBOL)" even if #assumendef MYSYMBOL is in C2NIM section 
[01:39:51] <arkanoid> can you take a look at the .h file I'm trying to feed to c2nim and find out why?
[01:40:40] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[01:45:12] <arkanoid> documentation says it should work on these constructs: https://github.com/nim-lang/c2nim/blob/master/doc/c2nim.rst#assumedef-and-assumendef-directives
[01:47:39] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:50:17] <FromDiscord> <haxscramper> If you share your header file I will look into it with hcparse & try out my latest idea. If everything goes well I might be able to produce working result
[01:50:51] <FromDiscord> <haxscramper> will look into it tomorrow
[01:51:53] <arkanoid> haxscramper https://termbin.com/5ttm9
[01:52:52] <arkanoid> haxscramper, if you feed this to c2nim, you get error on line 716, inside the block defined by WITH_PURE_VIRTUAL, that is assumendef
[01:55:29] <arkanoid> haxscramper, this is and include that is required by the .h generated procedurally, so this is human generated probably. The real deal is the next file once this works
[01:56:10] <FromDiscord> <haxscramper> Can you also share it as well so I have more things to test on
[01:58:35] <FromDiscord> <haxscramper> First file you linked also contains implementation of the template function (at the very end) - it should be simply wrapped or converted as well?
[02:02:07] *** Quits: max22- (~maxime@2a01cb08833598001ec8a1d2eb1d2f5c.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:03:29] <arkanoid> haxscramper: sure. this is soapH.h https://termbin.com/8xvc, this is soapStub.h https://termbin.com/fgvu , these are both generated procedurally using thr gSOAP toolkit that reads a .wsdl and creates data binding
[02:05:41] <arkanoid> haxscramper: this is the bash script that generates them https://termbin.com/aim6
[02:07:45] <arkanoid> long story short, wsdl2h takes a wsdl file and returns a .h file that has an internal sytax similar to C but is parsed by next tool. soapcpp2 takes this .h and creates actual .h and .c files that compiles successfully with gcc
[02:11:28] <arkanoid> and about your question about the template function at the very end: as you can see by the command line of the bash script I've shared, I've selected to generate C code and not C++, so __cplusplus should not be defined
[02:14:21] <FromDiscord> <haxscramper> Good. Hopefully boost wave would be able to correctly process all of this.
[02:14:29] <FromDiscord> <haxscramper> All of these macro defines
[02:15:27] <arkanoid> I though you were using libclang
[02:16:42] <NimEventer> New thread by Ggibson: How to make a const array in a proc w/ template?, see https://forum.nim-lang.org/t/8374
[02:16:53] <arkanoid> all the assumendef you find on top are just picked from manual
[02:17:30] <arkanoid> any idea why WITH_PURE_VIRTUAL block is parsed even if it is assumendef?
[02:24:00] <FromDiscord> <haxscramper> Probably c2nim bug
[02:24:19] <FromDiscord> <haxscramper> In reply to @arkanoid "I though you were": I'm using everything
[02:24:54] <arkanoid> haha
[02:25:29] <arkanoid> I would be very curious watching you writing nim code. Have you ever though about doing screencasts?
[02:30:09] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[02:39:57] <arkanoid> haxscramper, I've read what wave boost is, I didn't even know about it's existance. It says to be even more compliant than Intel compiler proprocessor
[03:04:28] <arkanoid> haxscramper, I'm trying to learn by reading your code. May you tell me where wrapWithConfig is defined? https://github.com/haxscramper/hcparse/blob/5bbe20c005bb947d0dafc77c20e8a37b2ee1062a/src/hcparse/clang_raw/make_wrap.nim#L47
[03:09:56] <FromDiscord> <dan> i have been asking myself this for quite some time, but why is there a need to specify the header when cimporting? ü§î
[03:10:17] <FromDiscord> <dan> is there information missing from the nim declaration?
[03:13:26] <FromDiscord> <dan> also adding onto that: what is the recommended way of exposing a c interfare to a nim shared library? is it better to just write my own header and practically re-wrap it in nim or use the nim feature of generating a header which afaik then depends on the nimbase.h?
[03:17:17] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[03:18:05] *** Joins: xet7 (~xet7@user/xet7)
[03:42:23] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[03:42:28] <FromDiscord> <ajusa> I'm trying to convert a proc to a template but I'm getting‚Üµ` Error: in expression '"test"()': identifier expected, but found '"test"'`, still somewhat new to templates in Nim though. Any idea what I'm doing wrong?
[03:43:29] <FromDiscord> <ajusa> Minimal example: https://play.nim-lang.org/#ix=3xaw
[03:50:57] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:03:00] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:04:06] *** Joins: flynn (~mcbloch@user/flynn)
[04:14:23] <FromDiscord> <Paulo> maybe i got it wrong, but I can use nimscripts to set compiler options like "--threads:on", right? if so, how do i do it?
[04:24:35] <FromDiscord> <Elegantbeef> @ajusa\: inside templates the parameters are replaced wherever a identifier matches
[04:25:07] <FromDiscord> <Elegantbeef> @Paulo\: you can do `switch("threads", "on")` in a config.nims or `yourMainFile.nims`
[04:25:49] <FromDiscord> <Paulo> In reply to @Elegantbeef "<@164144089682411520>\: you can do": thank you
[04:41:16] <FromDiscord> <fae> What‚Äôs the difference between `1.0f` and `1.0'f` ? It seems the  latter is mentioned in the reference as type suffixes, but no mention of the first syntax even though it seems valid?
[04:42:07] <FromDiscord> <Elegantbeef> `'` üòõ
[04:42:41] <FromDiscord> <fae> Also it seems strange that by default `float` is 64 bit but `1.0f` is 32 bit
[04:42:42] <FromDiscord> <Elegantbeef> They're identical you can do `10u8` or `10'u8` though with the new(devel new) user defined literals you need to do `'yourLit`
[04:42:43] <FromDiscord> <konsumlamm> the first is legal as well, but the secpnd is recommended, because you can define custom literal suffixes with  the `'` syntax
[04:43:06] <FromDiscord> <Elegantbeef> well fae do `1.0` and then you'll really be confused üòâ
[04:43:21] <FromDiscord> <konsumlamm> `1.0f` being a float32 probably comes from that being the behaviour in C etc
[04:43:31] <FromDiscord> <fae> It‚Äôs by default `float` which is 64 bit no?
[04:43:37] <FromDiscord> <Elegantbeef> yes
[04:43:52] <FromDiscord> <fae> Yea this threw me off for like 20 min trying to render a triangle lol
[04:43:54] <FromDiscord> <konsumlamm> in Nim, `float` is 64 bit, but in C it's 32 bit
[04:43:56] <FromDiscord> <fae> My stride was wrong
[04:44:30] <FromDiscord> <Elegantbeef> `sizeof(var)` goes brrr
[04:44:40] <FromDiscord> <fae> So anyway, to answer my original question, using the type suffix syntax is more idiomatic
[04:45:59] <FromDiscord> <konsumlamm> they're both "type suffix syntax", but only the version with `'` can be user-defined
[04:46:20] <FromDiscord> <fae> Okay, thank you
[04:47:10] <FromDiscord> <konsumlamm> possibly `1.0f` will be deprecated in the future, in favor of `1.0'f` (or `1.0'f32` or something)
[04:47:28] <FromDiscord> <Elegantbeef> I dont see why it would
[04:48:37] <FromDiscord> <fae> It feels weird to have two syntax to do the exact same thing
[04:48:47] <FromDiscord> <Elegantbeef> Welcome to Nim fae
[04:49:03] <FromDiscord> <Elegantbeef> Nim tons of flexibility in how you do stuff
[04:50:25] <FromDiscord> <fae> Yea but usually multiple syntaxes will at least offer some type of ergonomic benefit. I don‚Äôt see it here, except the `'` being more noisy
[04:50:47] <FromDiscord> <fae> Like snake case or camel case calling is a feature. This just seems weird
[04:51:20] <FromDiscord> <fae> But I‚Äôm new so I‚Äôm sure I have plenty to learn about the benefits
[04:51:35] <FromDiscord> <Elegantbeef> Well there arent any benefits it's just if you prefer `'` or not üòÄ
[04:51:44] <FromDiscord> <Elegantbeef> Atleast when talking about built ins
[04:52:20] <FromDiscord> <Elegantbeef> And now that i'm thinking about it the `1.0f` could be removed in favour of a non compiler supported variant, which could be a benefit
[04:52:33] <FromDiscord> <konsumlamm> and if you prefer consistency or having to type one chsracter less
[04:52:57] <FromDiscord> <konsumlamm> and that's also part of the reason, it could be defined in the stdlib
[04:52:59] <FromDiscord> <fae> i think i prefer consistency, making builtins more consistent with user defined makes more sense to me ü§∑‚Äç‚ôÇÔ∏è
[04:56:04] <FromDiscord> <fae> Another question... is there some magic that automatically applies the type of the first element in an array/seq to the rest of the elements?
[04:56:38] <FromDiscord> <konsumlamm> yes, that magic is called type inference
[04:58:12] <FromDiscord> <fae> sent a code paste, see https://play.nim-lang.org/#ix=3xaN
[04:58:31] <FromDiscord> <fae> you would think i wouldnt need to annotate the first element since ive already defined it as float32
[04:59:01] <FromDiscord> <konsumlamm> indeed
[04:59:03] <FromDiscord> <Elegantbeef> Nim lacks good left to right hand type inference, which can cause hidden errors
[04:59:13] <FromDiscord> <fae> ahh
[04:59:21] <FromDiscord> <konsumlamm> ye, it's annoying sometimes
[04:59:41] <FromDiscord> <fae> I will look out for that, ty
[05:02:06] <FromDiscord> <Elegantbeef> The most annoying point is with expressions since you know the type should be X but the compiler is complaining the second value doesnt match
[05:04:01] <FromDiscord> <Elegantbeef> It's pretty common with procedures that are supposed to be converted to a specific type
[05:34:16] <FromDiscord> <cabboose> https://play.nim-lang.org/#ix=3xaU
[05:34:34] <FromDiscord> <cabboose> So I'm trying to understand how the `[]` func for hashsets work
[05:34:48] <FromDiscord> <cabboose> I'm passing it the same hash
[05:34:55] <FromDiscord> <cabboose> and I've provided a custom `==` function
[05:35:11] <FromDiscord> <cabboose> but still attempting to get the element with the same hash provides a key error
[05:35:44] <FromDiscord> <cabboose> is there some underlying issue? is it to do with using inheritable objects?
[05:37:46] <FromDiscord> <gogolxdong (liuxiaodong)> Anyone saw error like this `/home/lingx/.nimble/pkgs/websock-0.1.0/websock/extensions/compression/deflate.nim(384, 8) Error: cannot bind another '=destroy' to: DeflateExt:ObjectType; previous declaration was constructed here implicitly: /home/lingx/.nimble/pkgs/chronos-3.0.6/chronos/asyncmacro2.nim(321, 33)`
[05:41:29] <FromDiscord> <cabboose> Yeah status modules aren't usually orc/arc compatible afaik atm
[05:42:01] *** Joins: neurocyte0 (~neurocyte@45.131.39.239)
[05:42:01] *** Quits: neurocyte0 (~neurocyte@45.131.39.239) (Changing host)
[05:42:01] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[05:43:37] <FromDiscord> <cabboose> the compiler automatically constructs `=destroy` funcs if one isn't provided before the use of the type, trying to pass another one to it will cause that error
[05:44:25] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[05:44:25] *** neurocyte0 is now known as neurocyte
[05:44:29] <FromDiscord> <cabboose> `var ext: DeflateExt; ext.new(destroyExt)` thats the code being raised by the compiler
[05:49:32] <arkanoid> what does it mean "Error: unhandled exception: over- or underflow [OverflowDefect]" ?
[05:50:43] <arkanoid> I get it when I add this piece of code generated by c2nim https://termbin.com/44s1
[05:51:25] <FromDiscord> <cabboose> what are you trying to do with c2nim and soap
[05:51:54] <FromDiscord> <cabboose> are you trying to make a soap client?
[05:51:58] <arkanoid> yes
[05:52:21] <FromDiscord> <cabboose> is it for a specific API or you want a general one
[05:52:43] <FromDiscord> <cabboose> because I have made specific API soap clients I can share the code for
[05:53:05] <arkanoid> oh, the error was generated by too many whitespaces after each string
[05:54:14] <arkanoid> cabboose. I've created a poc of a specific soap client too, lot's of xml stuff (deeply nested schemes here). Now I'm trying to wrap gSOAP
[05:54:32] <arkanoid> problem is that API I'm dealing with ha hundreds of functions
[05:54:36] <arkanoid> and complex types
[05:55:11] <arkanoid> I've been trying to metaprogramming all that, but it's very difficult and requires some parsing knowledge that I lack
[05:56:14] <FromDiscord> <cabboose> hahaha yeah I see what you mean; luckily the schemas I was accessing weren't too over developed
[05:56:15] <arkanoid> cabboose, but if you like to share, I'd be happy to read it
[05:57:11] <arkanoid> cabboose, I've a total of 42 xml files, the maximum import/include level is 7
[05:57:58] <arkanoid> I just gave up after seeing complexType into complexType and so on for 6 times
[05:58:14] <arkanoid> so now I'm trying the wrapping path
[05:59:36] <FromDiscord> <cabboose> Soap do be like that üò¶
[06:00:01] <arkanoid> I got rid of the previous error, but now nim compiler complains about nil in my UncheckedArray https://termbin.com/44s1
[06:00:11] <arkanoid> Error: type mismatch: got <typeof(nil)> but expected 'string'
[06:01:15] <arkanoid> cabbose I've already have a macro that given a Soap action and a wsdl file creates a proc for that to send request and receive response. Problem is data binding
[06:01:47] <arkanoid> I need to create objects for all functions input and output, it would take ages without some automation
[06:03:01] <FromDiscord> <cabboose> I haven't though about it too far but wouldn't tuples work?
[06:04:16] <FromDiscord> <cabboose> but then they'd probably be ridiculously nested considering what you're saying about the objects
[06:05:19] <arkanoid> cabboose, I'd be happy with tuples too
[06:05:27] <arkanoid> problem is data binding
[06:06:12] <arkanoid> I mean, writing a program that maps xml schema hierarchy to nim data types and back is hard
[06:06:34] <arkanoid> microsoft has it for c#, apache foundation has it for java
[06:07:18] <FromDiscord> <cabboose> I was happy with an agnostic response format so converted the soap response into json and then pass that to treeforms jsony to make my types
[06:07:22] <arkanoid> how can I tell that a [nil,nil,nil,nil] is of type array[0..3, string] when --nilseqs:on ?
[06:07:40] <FromDiscord> <cabboose> I don‚Äôt have any solution for input though
[06:08:23] <arkanoid> cabboose, yeah I also have that sort of automatic binding for all proc with no input args and just output
[06:09:03] <arkanoid> but I have to deal with input too. I have helper template for that that gives me easy way to map input, problem is still the amount of it
[06:09:16] <FromDiscord> <cabboose> Then you are alone friend; but I would be happy to help
[06:10:43] <FromDiscord> <gogolxdong (liuxiaodong)> @\_discord\_364103562243866624\:t2bot.io how to fix this error
[06:11:47] <arkanoid> cabboose, well if you know how to build a parser, I'm probably not too far away to achieve at least the xml to nim types part
[06:12:16] <arkanoid> then we would need the types to xml part, and that would also be part of a good parser
[06:12:32] <arkanoid> that's why I stopped, I need to study first
[06:13:22] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 252 seconds)
[06:13:38] <FromDiscord> <cabboose> See my issue was I don‚Äôt know enough about wsdl
[06:13:51] <FromDiscord> <cabboose> I think the parser is not that bad
[06:13:52] <FromDiscord> <cabboose> hahahaha
[06:14:50] <arkanoid> wsdl is not difficult, it's just overly verbose
[06:14:56] <arkanoid> problem is xml schema
[06:15:01] <FromDiscord> <cabboose> You can‚Äôt fix the error unless you fork websock and maybe even chronos to make them gc arc/orc compatible
[06:15:57] <FromDiscord> <cabboose> chronos to a certain extent afaik is, but some of their client/server funcs aren‚Äôt
[06:16:26] <FromDiscord> <cabboose> it‚Äôs not a priority for them atm (stability and completion of what they‚Äôre making atm is) so if you can do that then you‚Äôd be swimmin
[06:17:21] <FromDiscord> <cabboose> arkanoid I can work with the lower end of xmlparse; you know wsdl and I don‚Äôt
[06:17:25] <FromDiscord> <cabboose> maybe we can make a brain baby
[06:17:29] <FromDiscord> <cabboose> hahahahaha
[06:19:57] <arkanoid> hahaha
[06:20:12] <arkanoid> but I quite don't get what you find difficult of wsdl
[06:20:40] <FromDiscord> <cabboose> I have 0 knowledge of it and i really didn't need to know it
[06:20:41] <arkanoid> you just need a couple of functions to reach al the leafs of a directory of xml, starting from a wsdl
[06:21:43] <arkanoid> wsdl contains function signatures, and with them the input and output types. Stating from there you seek all the xsd and all the types and build the hierarchy via a parser
[06:21:51] <FromDiscord> <cabboose> I have a pharmacy application in development that accesses a dispensary API that uses soap; the data is pretty easy to get at and I didn't want to 'waste' time on wsdl
[06:21:56] <arkanoid> wsdl is really the asy part
[06:22:52] <arkanoid> you've already done the hard part. Wsdl is just a normal wsdl schema plus a list of function names
[06:23:02] <FromDiscord> <cabboose> Yeah I get the basics of it, the verbosity made it look like vomit to me and I have the issue of being a dopamine deprived zoomer that needed results quickly
[06:24:47] <FromDiscord> <cabboose> Can you make a repo I can work on with you?
[06:24:52] <FromDiscord> <cabboose> maybe I can give it another crack
[06:25:17] <FromDiscord> <cabboose> I am overly adverse to having to learn how the scheme of wsdl works, xml is fair enough but wsdl just looked like vomit
[06:25:40] <arkanoid> cabbose, here you can find some wsdl reading, and just a quick try to fetch all the required items for each function https://play.nim-lang.org/#ix=3xaZ
[06:26:22] <arkanoid> cabboose, I am really conviced that you're overstimating wsdl a lot
[06:27:27] <arkanoid> code in incomplete,was just a quick try to fetch the required elements over multiple schemas given a wsdl
[06:28:05] <FromDiscord> <cabboose> Maybe; I only touched it because of the software I'm working with using it for their API but it's all inhouse and they provided me the wsdl files and yada yada yada I lost interest in it
[06:31:04] <arkanoid> if you managed to build valid soap messages with namespace and types stuff in place you've already grokked what's needed. wsdl just contains the action name 
[06:32:09] <arkanoid> it's 99.9% understanding how schema works and build/parse valid xml from it, the rest (wsdl/soap messages) is just a verbose way to put that xml into another xml envelope
[06:34:34] <FromDiscord> <cabboose> I do understand how to build the soap messages but getting that information from the wsdl was my vomit that's all i can say
[06:34:37] <FromDiscord> <cabboose> hahahaha
[06:35:49] <FromDiscord> <cabboose> let me have a look at the wsdl I have and see if I can understand now
[06:35:52] <FromDiscord> <cabboose> but I doubt it
[06:36:43] <FromDiscord> <cabboose> Ok it actually makes a bit more sense now that you've explained it
[06:37:00] <FromDiscord> <cabboose> its still annoying to look at
[06:39:05] <FromDiscord> <cabboose> https://play.nim-lang.org/#ix=3xb5 would this be considered a simple wsdl?
[06:40:28] *** Quits: LyndsySimon (sid34452@id-34452.tooting.irccloud.com) (Ping timeout: 256 seconds)
[06:42:51] *** Joins: LyndsySimon (sid34452@tooting.irccloud.com)
[06:56:04] <arkanoid> cabbose, the complexity is not the wsdl, it's the type hierachy it uses 
[06:56:47] <FromDiscord> <cabboose> Here's what I think, you give me a wsdl or something and tell me "parse this into this" and I can do it
[06:57:46] <FromDiscord> <cabboose> tell me to parse a wsdl and I have no idea what I'm trying to do with it; I just can't wrap my head around the absurdity of how it's formatted and what it's supposed to represent
[06:57:46] <arkanoid> this is what I'm working on: https://www.onvif.org/profiles/specifications/
[06:58:13] <arkanoid> you can start from device.wsdl, that one drags in quite all the types
[06:59:09] <FromDiscord> <cabboose> ok and then how would you want it to work; would you want it to generate a soap envelope if you give it a function name and a tuple of params? would that work?
[06:59:28] <arkanoid> now sure how you can say that wsdl is complicated when at the same time you say that you've walked over xml schema specification that an order of magnitude more complicated
[07:00:30] <FromDiscord> <cabboose> I don't think I've walked over xml schema specification üò¢
[07:00:39] <FromDiscord> <cabboose> I am mentally deficient give me a break
[07:00:52] <arkanoid> if you manage to generate a wrapper that exposes all the wsdl procedures with input arguments (and maybe just generic json output) would be good
[07:01:35] <arkanoid> I've already done it by hand for the ones that I needed the most
[07:01:49] <arkanoid> (you can see that there are many wsdl on that website)
[07:04:30] <arkanoid> by xml schema specification, I mean this hell of a thing https://www.w3.org/TR/xmlschema11-1/
[07:05:14] <arkanoid> that's basically what makes devs NOPE when someone proposes xml
[07:05:59] <arkanoid> except for microsoft people, they have wsdl.exe that comes with visual studio that given a wsdl creates C# class files and vice-versa
[07:06:14] <arkanoid> and that's also how most of the wsdl are created
[07:06:37] <FromDiscord> <cabboose> yeah no I didn't know about this; but I like this document, it so clearly outlines how it works
[07:06:43] <FromDiscord> <cabboose> this is easier to read than the wsdl file
[07:06:43] <FromDiscord> <cabboose> lol
[07:07:06] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:08:11] <FromDiscord> <cabboose> ok I can do this probably, but I do have an assignment to work on for monday with my field of study being completely unrelated to this (medicine); but I will try to have something working by wed
[07:08:43] <FromDiscord> <cabboose> you keep doing your wrap of gSOAP but I don't see the issue with making a parser
[07:11:29] <arkanoid> are you on linux/windows/other?
[07:14:47] <FromDiscord> <cabboose> windows
[07:15:39] <FromDiscord> <cabboose> pharmacies in australia will forever be on windows and I will forever have to develop on windows lol
[07:20:45] <arkanoid> so you have access to wsdl.exe
[07:21:09] <arkanoid> https://docs.microsoft.com/en-us/sql/reporting-services/report-server-web-service/net-framework/creating-the-web-service-proxy?view=sql-server-ver15
[07:21:19] <arkanoid> not sure if something more recent is in use today
[07:21:49] <arkanoid> but you can have a look on how that tool generates classes to find out if your typing is going into a walkable path
[07:22:19] <arkanoid> it is also available in the mono framework on linux, but I think it is somehow less capable
[07:27:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[07:28:29] *** Joins: flynn (~mcbloch@user/flynn)
[07:29:47] <arkanoid> I'm dealing with a dynlib that fails with error "/usr/lib/x86_64-linux-gnu/libgsoap.so: undefined symbol: namespaces". That symbol is contained in a .h file that I'm importing with {.emit: """#include "../ffi/DeviceBinding.nsmap"""".}, but I keep getting that error
[07:44:20] <arkanoid> how is that nim complains about "undefined symbol: namespaces" even before that the includes in the emit section are processed?
[07:44:46] <arkanoid> I can put jibberish text into those .h and the result is the same undefined symbol
[07:56:48] <FromDiscord> <demotomohiro> Are you sure the error comes from nim, not from backend c compiler?
[07:58:35] <FromDiscord> <demotomohiro> Maybe you are compiling with `nim c foo.nim` command while the header file you are trying to include is C++ file?
[07:59:45] <FromDiscord> <demotomohiro> If you are using c++ library, you have to build like `nim cpp foo.nim`.
[08:03:27] <FromDiscord> <retkid> is sending packets from local servers done all in ram?
[08:04:21] <FromDiscord> <ajusa> Given a type, is it possible for me to get comment as a string next to the type field definition? I believe Nim docs do this so I think it should be possible.
[08:05:15] <FromDiscord> <Elegantbeef> doc comments are stored in the typedefinition s oyes with a macro
[08:06:26] <FromDiscord> <ajusa> sent a code paste, see https://paste.rs/eYN
[08:08:12] <FromDiscord> <Elegantbeef> Ah turns out nope comments are not accessible from the typed AST
[08:08:54] <FromDiscord> <ajusa> Got any smart alternatives for what I'm going for here üòÑ
[08:08:58] <FromDiscord> <ajusa> (edit) "üòÑ" => "üòÑ?"
[08:10:13] <FromDiscord> <cabboose> macroooooo
[08:12:35] <FromDiscord> <cabboose> maybe a custom type defining macro would be possible?
[08:16:01] <FromDiscord> <cabboose> https://github.com/filcuc/nimqml/blob/master/src/nimqml/private/nimqmlmacros.nim deals with type definitions inside a macro
[08:16:16] <FromDiscord> <demotomohiro> Maybe use double hash comment and get it as nnkCommentStmt‚Üµhttps://nim-lang.org/docs/macros.html#callsslashexpressions-documentation-comments
[08:16:50] <FromDiscord> <cabboose> just need to pick out the comments as demotomohiro mentions
[08:17:28] <FromDiscord> <cabboose> which is what ElegantBeef said originally which is what he meant by doc comments
[08:17:42] <FromDiscord> <cabboose> doc comments have two hashes unlike your example
[08:18:30] <FromDiscord> <ajusa> Got it, I'll check those out. Thanks!
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:39:13] <FromDiscord> <cabboose> anyone know where nim rawGet is defined?
[08:40:56] <FromDiscord> <cabboose> nvrm got it
[08:42:29] <FromDiscord> <linux user> nim is on tiobe list
[08:42:31] <FromDiscord> <linux user> !!!!!
[08:44:51] <FromDiscord> <hamidb80> hey
[08:45:06] <FromDiscord> <hamidb80> how can i escape `{}` in strformat ?
[08:45:21] <FromDiscord> <hamidb80> `fmt"\{}" ` doesn't work
[08:45:57] <FromDiscord> <hamidb80> ah i think it's a string literal
[08:46:00] <FromDiscord> <cabboose> yep
[08:46:11] <FromDiscord> <Varriount> Just ran into the VM loop limit. Turns out compiling an NPeg grammar translated from PostgreSQL's Yacc grammar causes the compiler to run more than 10000000 loops
[08:46:15] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/881029386642542652/unknown.png
[08:46:16] <FromDiscord> <retkid> WOO
[08:46:16] <FromDiscord> <cabboose> fmt syntax uses a generalised raw string literal
[08:46:19] <FromDiscord> <retkid> WE BEAT TYPESCRIPT
[08:46:31] <FromDiscord> <retkid> and bash... somehow?
[08:46:33] <FromDiscord> <retkid> wat
[08:46:42] <FromDiscord> <Varriount> URL pls
[08:46:53] <FromDiscord> <hamidb80> In reply to @retkid "": what's that?
[08:47:03] <FromDiscord> <retkid> https://www.tiobe.com/tiobe-index/
[08:47:45] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/881029763706286110/unknown.png
[08:47:48] <FromDiscord> <retkid> so i guess fortran is cool again
[08:47:53] <FromDiscord> <retkid> assembly is booming for some reason\
[08:48:01] <FromDiscord> <retkid> php is still being used why
[08:48:14] <FromDiscord> <Varriount> Well, the fact that Nim is only one hundreth of a percent less than D is nice.
[08:48:15] <FromDiscord> <retkid> Visual Basic is now a language?
[08:48:28] <FromDiscord> <cabboose> In reply to @hamidb80 "how can i escape": Use `&` operator instead?
[08:48:28] <FromDiscord> <retkid> SQL doesn't count
[08:48:44] <FromDiscord> <retkid> i don't like this top 15
[08:49:07] <FromDiscord> <Varriount> _throws the shuriken stars of PL/SQL at @retkid_
[08:49:27] <FromDiscord> <retkid> yea SQL sucks
[08:49:40] <FromDiscord> <Varriount> Eh, it's good for what it does.
[08:49:42] <FromDiscord> <retkid> they are just that, stars you have to dodge
[08:50:20] <FromDiscord> <retkid> ok my question is, how the fuck is bash #50
[08:50:36] <FromDiscord> <cabboose> how does it determine ranking
[08:50:38] <FromDiscord> <Varriount> Perhaps it's a ranking of change.
[08:50:55] <FromDiscord> <Varriount> I don't mind SQL, but I feel like the language is a tad fossilized. It could use with a re-think
[08:50:59] <FromDiscord> <cabboose> if it determines it by language use on github or something that would make sense wouldnt it?
[08:51:16] <FromDiscord> <retkid> sent a long message, see http://ix.io/3xbp
[08:51:34] <FromDiscord> <retkid> i suppose its because bash isn't a language you choodse
[08:51:36] <FromDiscord> <retkid> (edit) "choodse" => "choose"
[08:51:42] <FromDiscord> <retkid> its a language you've been born with
[08:51:55] <FromDiscord> <retkid> you don't wake up and go "imma program in bash
[08:52:01] <FromDiscord> <cabboose> gross
[08:52:07] <FromDiscord> <retkid> you go "I need to make a compile script, i gotta use bash"
[08:52:29] <FromDiscord> <retkid> so bash should realistically be in the top 30
[08:52:37] <FromDiscord> <retkid> (edit) "30" => "30, but isn't due to sampeling bias"
[08:52:40] <FromDiscord> <retkid> (edit) "sampeling" => "sampling"
[08:52:46] <FromDiscord> <cabboose> courses... we definitely lose
[08:54:59] <FromDiscord> <retkid> yea nim isn't really a lang to learn by someone new to programming
[08:55:06] <FromDiscord> <cabboose> why not
[08:55:17] <FromDiscord> <retkid> small lang, not many tutorials
[08:55:19] <FromDiscord> <retkid> (edit) "tutorials" => "tutorials, etc"
[08:55:22] <FromDiscord> <cabboose> Oh yeah
[08:55:27] <FromDiscord> <retkid> little jimmy 13 year old shouldn't learn nim
[08:55:29] <FromDiscord> <cabboose> but theres no reason why it cant be
[08:55:36] <FromDiscord> <cabboose> f jimmy
[08:55:53] <FromDiscord> <retkid> Jimmy's fine, hes just gonna learn either java or python
[08:55:54] <FromDiscord> <retkid> lol
[08:55:59] <FromDiscord> <cabboose> vomit
[08:56:22] <FromDiscord> <retkid> or Lua, like me
[08:56:26] <FromDiscord> <cabboose> i think i've forgotten everything about python
[08:56:42] <FromDiscord> <cabboose> i started with python; got very far, and then forgot it the second I found nim
[08:57:04] <FromDiscord> <retkid> I learned Lua when i was like 12 playing minecraft
[08:57:15] <FromDiscord> <retkid> got angry because i guess i didn't understand functions or something weird
[08:57:19] <FromDiscord> <retkid> stopped
[08:57:28] <FromDiscord> <retkid> learned bash when i was 15
[08:57:33] <FromDiscord> <retkid> (edit) "15" => "15, rest was history"
[08:57:38] <FromDiscord> <cabboose> was minecraft and lua related somehow
[08:57:41] <FromDiscord> <retkid> yes
[08:57:45] <FromDiscord> <cabboose> i thought minecraft was java
[08:57:58] <FromDiscord> <retkid> it is, but computer craft as a java implementat ion of lua-jit\
[08:58:02] <FromDiscord> <retkid> (edit) "implementat" => "implementation"
[08:58:08] <FromDiscord> <retkid> (edit) "as" => "was"
[08:58:10] <FromDiscord> <retkid> (edit) "lua-jit\" => "lua-jit"
[08:58:18] <FromDiscord> <retkid> so you did lua inside java
[08:58:23] <FromDiscord> <cabboose> erk
[08:58:33] <FromDiscord> <retkid> smells like a memory hole, right
[08:58:55] <FromDiscord> <cabboose> i was going to say depression hole
[08:59:10] <FromDiscord> <retkid> it was... ok
[08:59:21] <FromDiscord> <retkid> people programmed like, game of life and shit
[08:59:23] <FromDiscord> <retkid> and guis
[08:59:47] <FromDiscord> <cabboose> ‚Ä¶ w‚Ä¶ why
[09:00:04] <FromDiscord> <retkid> well, the reason is
[09:00:09] <FromDiscord> <retkid> factorio didn't exist yet
[09:00:10] <FromDiscord> <retkid> lol
[09:00:33] <FromDiscord> <cabboose> and now satisfactory
[09:01:07] <FromDiscord> <retkid> little me, liked making factories and things
[09:01:23] <FromDiscord> <retkid> liked seeings numbers go up and efficiency
[09:01:34] <FromDiscord> <retkid> controlling stuff with lua is really useful in this case
[09:01:39] <FromDiscord> <cabboose> What about study; do you hate study
[09:02:33] <FromDiscord> <retkid> study?
[09:02:40] <FromDiscord> <cabboose> in general
[09:02:49] <FromDiscord> <cabboose> outside of something stimulating like programming
[09:02:58] <FromDiscord> <cabboose> can you read a book without getting bored
[09:03:09] <FromDiscord> <retkid> I can listen to a book
[09:03:14] <FromDiscord> <cabboose> lol
[09:03:16] <FromDiscord> <retkid> i cannot read a book because visual problems
[09:03:21] <FromDiscord> <cabboose> ah
[09:03:25] <FromDiscord> <retkid> very difficult for me to retain information tha way
[09:03:27] <FromDiscord> <retkid> (edit) "tha" => "that"
[09:03:40] <FromDiscord> <cabboose> You smell like ADD
[09:03:49] <FromDiscord> <cabboose> i love that brain type
[09:03:57] <FromDiscord> <retkid> nah
[09:04:00] <FromDiscord> <retkid> thats just Aspergers
[09:04:07] <FromDiscord> <retkid> a tad of add but not enough to get diagnosed
[09:04:15] <FromDiscord> <retkid> (edit) "add" => "adhd"
[09:04:16] <FromDiscord> <cabboose> aspergers is similar
[09:04:33] <FromDiscord> <cabboose> most get diagnosed or treated with ADD meds too
[09:04:46] <FromDiscord> <retkid> I guarantee you 35% of people here at least have ASD as well
[09:04:47] <FromDiscord> <retkid> at least
[09:05:03] <FromDiscord> <cabboose> i wouldnt go that far; id go as far as ADD
[09:05:20] <FromDiscord> <cabboose> Well I guess its an abstract definition
[09:05:23] <FromDiscord> <cabboose> even in Psychiatry
[09:05:48] <FromDiscord> <cabboose> You have social deficits? ok aspergers; no? mehbeh add
[09:06:05] <FromDiscord> <cabboose> infact if it wasnt for the stigmatisation of ASD probably yes
[09:06:14] <FromDiscord> <retkid> not anymore
[09:06:21] <FromDiscord> <retkid> i've gotten over almost all of my social flaws
[09:06:59] <FromDiscord> <cabboose> So you dont have diagnosable ASD anymore üôÇ
[09:07:16] <FromDiscord> <retkid> well, its a perverse psychological disorder
[09:07:26] <FromDiscord> <cabboose> well yeah; that and its diagnosed on childhood function
[09:07:32] <FromDiscord> <retkid> so you never loose it truely, your brain is just different
[09:07:43] <FromDiscord> <retkid> but, i did get tested for disability for ASD
[09:07:50] <FromDiscord> <retkid> and they said i no longer qualify
[09:08:35] <FromDiscord> <cabboose> I would just be interested to know whether the brain chemistry of ADD and ASD are all that different once the social centres have been compensated
[09:08:56] <FromDiscord> <cabboose> because dopamine deficiency is a common denominator there
[09:09:37] <FromDiscord> <retkid> a child behavioral psychologist told me that because i had poor vision growing up, i didn't learn facial features and cant identify faces as well
[09:09:43] <FromDiscord> <retkid> part of autism
[09:09:48] <FromDiscord> <retkid> so, food for thought
[09:12:28] <FromDiscord> <cabboose> Interesting; they‚Äôre such heterogenous disorders with wildly different connotations
[09:12:40] <FromDiscord> <cabboose> I don‚Äôt like that
[09:13:57] <NimEventer> New thread by Exelotl: Goodboy Galaxy - Kickstarter and demo now live!, see https://forum.nim-lang.org/t/8375
[09:36:17] <FromDiscord> <cabboose> Okay I'm having an issue with hashsets, I've defined my own `==` func but its not using it?!
[09:37:26] <FromDiscord> <cabboose> ok i figured it out
[09:37:34] <FromDiscord> <Elegantbeef> did you define as a hash procedure?
[09:37:49] <FromDiscord> <cabboose> yeah; the issue was order of importation
[09:38:07] <FromDiscord> <cabboose> or having the function defined before importing sets or hashes
[09:38:31] <FromDiscord> <cabboose> something along those lines, I've got it working by changing my import and proc definition order
[09:39:00] <FromDiscord> <cabboose> I guess I have to have the `==` defined before I import sets?
[09:39:34] <FromDiscord> <cabboose> I guess it makes sense in hindsight -.-
[09:40:00] <FromDiscord> <cabboose> https://tenor.com/view/patrickpain-patricksomuchpain-patrickfleas-spongebobpain-spongebobsomuchpain-gif-18151897
[09:40:42] <FromDiscord> <cabboose> no I'm wrong
[09:41:08] <FromDiscord> <cabboose> it's because I have to have it defined before I create my type that is derived from HashSet
[09:41:36] <FromDiscord> <cabboose> WRONG AGAIN.
[09:41:45] <FromDiscord> <cabboose> Ok final time; it's because I have to have it defined before the hash
[09:41:54] <FromDiscord> <cabboose> yep
[09:42:00] <FromDiscord> <cabboose> that was why
[09:42:50] <FromDiscord> <cabboose> `func hash(); func ==()` would fail but `func ==(); func hash()` works as intended
[09:42:53] <FromDiscord> <cabboose> god damnit
[09:43:00] <FromDiscord> <cabboose> so much time wasted
[09:44:11] <FromDiscord> <gogolxdong (liuxiaodong)> @\_discord\_364103562243866624\:t2bot.io but it compiles on windows while errors on linux.
[09:47:07] <FromDiscord> <cabboose> yeah it's failing again
[09:47:13] <FromDiscord> <cabboose> what the gypsy magic is going on
[09:47:42] <FromDiscord> <Elegantbeef> What's the code
[09:49:09] <FromDiscord> <cabboose> let me see if I can replicate it in one file rather than in my use case and ill upload on playground
[09:56:53] <FromDiscord> <cabboose> https://play.nim-lang.org/#ix=3xbD is an example of code that should work but isnt (afaik by my understanding)
[09:57:37] <FromDiscord> <cabboose> now I'm going to try figure out how I made it work in my use case; that only works with a very specific organisation structure
[09:57:43] <FromDiscord> <Elegantbeef> Why would this work you dont hash your ComplexObject
[09:58:17] <FromDiscord> <cabboose> because they inherit no?
[09:58:48] <FromDiscord> <cabboose> wait if they're methods it works
[09:59:20] <FromDiscord> <cabboose> wait i'm so lost
[09:59:30] <FromDiscord> <Elegantbeef> Procedures do not autoconvert for inherited types
[09:59:50] <FromDiscord> <Elegantbeef> Atleast afaik
[09:59:55] <FromDiscord> <cabboose> ok; would defining the `==` operator as a base method not be acceptable?
[10:00:21] <FromDiscord> <cabboose> like i would have expected this to work https://play.nim-lang.org/#ix=3xbE
[10:01:13] <FromDiscord> <Elegantbeef> Ok actually it does call the procedure
[10:01:55] <FromDiscord> <Elegantbeef> I think this is an issue i've seen before with hashsets + ref types
[10:04:09] <FromDiscord> <cabboose> sent a long message, see https://paste.rs/Dus
[10:04:14] <FromDiscord> <cabboose> sent a long message, see http://ix.io/3xbI
[10:04:27] <FromDiscord> <cabboose> (edit) "http://ix.io/3xbI" => "http://ix.io/3xbJ"
[10:04:58] <FromDiscord> <Varriount> @exelotl Congrats on the game!
[10:05:20] <FromDiscord> <hamidb80> that was hard
[10:05:25] <FromDiscord> <hamidb80> i lost in the map
[10:05:27] <FromDiscord> <hamidb80> üòÑ
[10:07:07] <FromDiscord> <hamidb80> (edit) "i lost in the map ... " 03added "üòÑ"
[10:13:20] <FromDiscord> <cabboose> In reply to @Elegantbeef "I think this is": ok so I have narrowed it down to the fact that the rawGet hashset implementation will use the inherited hash proc but it doesn't use the inherited cmp proc
[10:14:54] <FromDiscord> <cabboose> but it still doesn't really explain to me why my use case code errors/doesn't error with weird changes in organisation
[10:16:49] <FromDiscord> <gogolxdong (liuxiaodong)> How to set value for Option field?
[10:20:03] <FromDiscord> <retkid> almost done with my generator kotlin interface generator
[10:27:24] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/881054841915465758/unknown.png
[10:27:49] <FromDiscord> <retkid> the only limitation is i need to update it with java equivalents for return types
[10:28:37] <FromDiscord> <retkid> i dont think i can import a nim table to a java hashmpa
[10:28:39] <FromDiscord> <retkid> (edit) "hashmpa" => "hashmap"
[10:28:53] <FromDiscord> <retkid> even if they represent the same thing
[10:32:27] <FromDiscord> <Paulo> https://play.nim-lang.org/#ix=3xbN‚Üµ‚Üµcan someone help me with that? I'm trying to pass a Socket as parameter to a function in another thread, but i get a `SIGSEGV: Illegal storage access. (Attempt to read from nil?)` error. I read the manual about threads I think i understand why that happen, i just have no idea how to properly do something like that
[10:34:16] <FromDiscord> <retkid> ?
[10:34:19] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3xbS
[10:34:51] <FromDiscord> <Paulo> sent a code paste, see https://paste.rs/Fxk
[10:34:53] <FromDiscord> <retkid> is that the line the error comes from?
[10:34:54] <FromDiscord> <Paulo> (edit) "https://play.nim-lang.org/#ix=3xbU" => "https://play.nim-lang.org/#ix=3xbT"
[10:35:08] <FromDiscord> <Paulo> its a runtime error, no lines informed
[10:35:14] <FromDiscord> <Paulo> the code compiles just fine
[10:35:37] <FromDiscord> <retkid> run a loop that echos out the socket and see what happens
[10:36:33] <FromDiscord> <retkid> if its always null then you're either defining it wrong or not suppose to pass it to functions
[10:36:39] <FromDiscord> <retkid> if its sometimes null then something weird is happening
[10:37:56] <FromDiscord> <Paulo> sent a code paste, see https://paste.rs/kQ9
[10:38:10] <FromDiscord> <Paulo> sent a code paste, see https://play.nim-lang.org/#ix=3xbW
[10:45:02] <FromDiscord> <retkid> you aren't passing any vars to handleConnection?
[10:46:44] <FromDiscord> <Rika> its right there
[10:46:45] <FromDiscord> <Rika> client
[10:47:29] <FromDiscord> <Rika> i dont recall if sockets are safe to pass to another thread though... but it might be so
[10:48:25] <FromDiscord> <Paulo> In reply to @Rika "client": yeas
[10:48:26] <FromDiscord> <Paulo> (edit) "yeas" => "yes"
[10:48:59] <FromDiscord> <Paulo> In reply to @Rika "i dont recall if": i think they are not, at least not in the way in doing it lol
[10:49:41] <FromDiscord> <Paulo> but i have no idea how the "right way to it" is
[10:52:07] <FromDiscord> <Rika> what i would do is to have threads only work on data, and only one thread handles connections
[10:52:22] <FromDiscord> <Rika> dispatch the data to the other threads via channels
[10:58:28] <FromDiscord> <Paulo> In reply to @Rika "dispatch the data to": thank you
[11:38:37] <FromDiscord> <retkid> ok guys
[11:38:38] <FromDiscord> <retkid> pick one
[11:39:08] <FromDiscord> <retkid> i make a thread which launches a nim server, and ffi inter ops via socks
[11:39:13] <FromDiscord> <retkid> (edit) "inter ops" => "interops"
[11:39:36] <FromDiscord> <retkid> (edit) "socks" => "socks, and pingpong that way"
[11:39:54] <FromDiscord> <retkid> or i pingpong using functions and return codes
[11:40:02] <FromDiscord> <retkid> (edit) "functions and return codes" => "functions, calling them"
[11:40:20] <FromDiscord> <retkid> or i do a combination of both, have a separate thread where nim functions are called
[11:40:54] <FromDiscord> <retkid> im leaning to the socks but i feel like that creates needless overhead
[11:41:01] <FromDiscord> <retkid> (edit) "im leaning to the socks but i feel like that creates needless overhead ... " 03added "and faliure poiints"
[11:41:51] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c)
[11:57:14] *** Joins: max22- (~maxime@2a01cb0883359800d3733c90e25ea53b.ipv6.abo.wanadoo.fr)
[12:06:18] <madprops> how can I make this (the if else)  more visually pleasing? https://play.nim-lang.org/#ix=d/ni
[12:08:46] <FromDiscord> <impbox [ftsf]> broken link
[12:08:49] <madprops> i mean this https://dpaste.org/Wn82
[12:09:45] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3xcb
[12:09:57] <FromDiscord> <impbox [ftsf]> you could also use a case instead probably
[12:10:20] <madprops> can't singleline everytime though
[12:10:42] <madprops> it was a generic example
[12:10:54] <FromDiscord> <Rika> is that not visually pleasing to you? what do you think is visually pleasing
[12:11:06] <madprops> if and elif and else on the same margin
[12:11:11] <FromDiscord> <impbox [ftsf]> visually pleasing is subjective and context specific
[12:11:41] <FromDiscord> <Rika> after the `=` make a block
[12:11:48] <FromDiscord> <Rika> then put the if on the next line
[12:11:55] <FromDiscord> <Rika> then indent as expectetd
[12:11:59] <madprops> ah that might work
[12:16:24] <FromDiscord> <Rika> not might, im sure it will
[12:16:31] <FromDiscord> <Rika> unless you dont like the look
[12:17:55] <madprops> i like it
[12:18:02] <madprops> im now wondering about this https://dpaste.org/FFFr
[12:18:08] <madprops> that inside an elif
[12:18:20] <madprops> that's my way of dealing with multiple ifs
[12:18:25] <madprops> to return something in all cases
[12:19:17] <FromDiscord> <Rika> if you think its better you can have a mutable var
[12:19:26] <FromDiscord> <Rika> just return the contents of such at the end
[12:19:38] <madprops> that's what i had
[12:19:55] <madprops> oh you mean inside the elif
[12:19:59] <FromDiscord> <Rika> whichever you like more
[12:20:51] <madprops> https://dpaste.org/8coa
[12:20:56] <madprops> so something like that
[12:21:14] <madprops> yeah i think makes more sense
[12:22:04] <FromDiscord> <gogolxdong (liuxiaodong)> Anyone knows `{"code":-32602,"message":"invalid argument 0: json: cannot unmarshal non-string into Go struct field SendTxArgs.gasPrice of type hexutil.Big"}`
[12:22:19] <FromDiscord> <gogolxdong (liuxiaodong)> with nim-web3
[12:25:54] <FromDiscord> <Yardanico> @madprops about the if - you can just do this - https://play.nim-lang.org/#ix=3xcd
[12:26:12] <madprops> weird I did try that Yardanico
[12:26:21] <madprops> but i think i had an empty line in between
[12:26:41] <madprops> ohh
[12:26:43] <madprops> i didn't indent it
[12:27:25] <madprops> so it's almost the same as using block
[12:27:28] <madprops> except it's not a block
[12:28:32] <FromDiscord> <Yardanico> It's just an if expression :)
[12:48:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:50:53] <NimEventer> New thread by Rforcen: Disk based btree, see https://forum.nim-lang.org/t/8376
[13:09:39] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[13:13:27] *** Joins: Vladar (~Vladar@46.162.2.53)
[13:14:28] *** Joins: neurocyte (~neurocyte@45.131.39.239)
[13:14:28] *** Quits: neurocyte (~neurocyte@45.131.39.239) (Changing host)
[13:14:28] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[13:26:12] <FromDiscord> <cabboose> I forgot about this gem from June blog post
[13:26:41] <FromDiscord> <cabboose>  https://media.discordapp.net/attachments/371759389889003532/881099959552868402/image0.png
[13:29:34] <FromDiscord> <Recruit_main707> lol
[13:44:26] <FromDiscord> <Rika> I don‚Äôt think it was intentional
[13:46:04] <FromDiscord> <cabboose> I mean if it wasn‚Äôt that‚Äôs hilarious
[13:46:11] <FromDiscord> <cabboose> If it was it‚Äôs legendary and hilarious
[14:01:49] <FromDiscord> <Saurav Niroula> is there else statement in for loop as python
[14:02:33] <FromDiscord> <Saurav Niroula> i am a begineer and i am learning from youtube python videos to calculate nth prime number
[14:02:59] <FromDiscord> <Saurav Niroula> i am not knowing how to do it üòî
[14:05:06] <madprops> "Dik is a Dict." oh
[14:07:13] <FromDiscord> <j-james> Are there any downsides to declaring a large amount of types within the same type block?
[14:15:06] <FromDiscord> <j-james> Performance or otherwise
[14:18:00] *** Quits: emery (~quassel@2a03:3b40:fe:ab::1) (Ping timeout: 272 seconds)
[14:20:36] <FromDiscord> <Rika> In reply to @Saurav Niroula "is there else statement": No
[14:21:05] <NimEventer> New thread by Kalbhairab: Code competition., see https://forum.nim-lang.org/t/8377
[14:21:15] <FromDiscord> <Rika> In reply to @j-james "Are there any downsides": I do not think there is a naked-eye observable difference in performance
[14:21:48] <FromDiscord> <haxscramper> > ‚Üµ> Nim should organize code competition as other programming languages do.‚Üµ>‚Üµ(<@709044657232936960_=4eim=45venter=5b=49=52=43=5d>)
[14:21:51] <FromDiscord> <haxscramper> Just what is the point
[14:25:08] <FromDiscord> <haxscramper> In reply to @arkanoid "<@608382355454951435>, I'm trying to": This part of code is old, and `wrapWithConfig` is no longer used. For latest wrapper generator script, you can see https://github.com/haxscramper/cxxstd/blob/master/src/cxxstd/make_wrap.nim
[14:26:19] <FromDiscord> <haxscramper> In reply to @arkanoid "<@608382355454951435>, I've read what": >  says to be even more compliant than Intel compiler proprocessor‚ÜµHonestly this seems like PR bs for the most part, since C++ preprocessor standard is defined using very ambiguous language, this has been pointed out multiple times in different tests I've read
[14:26:22] <FromDiscord> <Rika> In reply to @haxscramper "Just what is the": Fun?
[14:26:24] <FromDiscord> <Rika> Why not
[14:26:31] <arkanoid> Thanks!
[14:26:53] *** Joins: emery (~quassel@2a03:3b40:fe:ab::1)
[14:33:02] <FromDiscord> <haxscramper> I should probably write architecture.md for it
[14:38:53] <arkanoid> I have C function that initializes a large struct in the heap and returns its pointer, I've already wrapped that and it works. Now I need to edit just 2 cstring attributes of this struct, but I'm lazy and I don't want to define the whole type of  for that. One option would be to emit a C function that does the job and wrap it, is there a better solution?
[14:43:07] <FromDiscord> <haxscramper> you can only wrap two attributes
[14:43:16] <FromDiscord> <haxscramper> you don't have to wrap all fields
[14:45:50] <arkanoid> Really? Do you have an example? How does this work?
[14:49:26] <FromDiscord> <haxscramper> What kind of example do you need? Just don't wrap all fields, that's all
[14:52:25] <arkanoid> Well this is surprising. Thanks
[14:53:00] <arkanoid> I've another unrelated question. What is the "header" pragma do?
[14:54:03] <FromDiscord> <haxscramper> It specifies header file to be included when proc or type is used
[14:54:26] <FromDiscord> <haxscramper> So if nim generates C code and uses your proc, which has `header: <string>`, it will add `#include <string>` to the generated header
[14:54:29] <FromDiscord> <haxscramper> generated C file\
[14:54:40] <FromDiscord> <haxscramper> `header:` can be any text
[14:55:02] <FromDiscord> <haxscramper> If it is `<header>` or `"header"` it will be wrapped as `#include <XXX>`, anything else will be pased verbatim
[14:55:19] <FromDiscord> <haxscramper> So you can do `header: "#include <header1>\n#include <header2>` if you need
[14:56:04] <arkanoid> Ok! So it may be seen as a convenient way to avoid emit on top of nim file?
[14:56:36] <FromDiscord> <haxscramper> Yes, it is actually a recommended way of wrapping things
[14:56:57] <FromDiscord> <haxscramper> `{.emit:` will not work if you declare a proc and then use it in different module for example
[14:58:36] <arkanoid> Thanks!
[15:11:35] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[15:17:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c)
[15:30:42] <arkanoid> how to wrap this C function type? "int(*)(struct soap *, struct soap_plugin *, void *)" 
[15:31:19] <arkanoid> I've already wrapped the "struct soap *" and "struct soap_plugin *" types, but I don't know how to put all together into a function type
[15:32:57] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 248 seconds)
[15:34:48] <arkanoid> what about "  SoapPluginCreate {.header: soapH, importc: "int(*)(struct soap *, struct soap_plugin *, void *)".} = proc(soap: Soap, plugin: SoapPlugin, args: ptr object): int"
[15:35:43] <FromDiscord> <haxscramper> `int()(struct soap , struct soap_plugin , void )` is a `proc(sa: ptr soap, a2: ptr soap_plugin, a3: pointer) {.cdecl.}`
[15:36:29] <FromDiscord> <haxscramper> matrix edits are not propagaged to IRC? Anyway, I forgot to add `: cint` return type
[15:36:44] <arkanoid> thanks
[15:36:51] <FromDiscord> <haxscramper> `void` is a `pointer`, while `ptr object` is a nim generic
[15:37:03] <FromDiscord> <haxscramper> And you don't `importc` typedefs
[15:37:27] <arkanoid> ?
[15:37:35] <FromDiscord> <haxscramper> And don't `header` them as well, since they don't really exist in the C code as well, they are just like shortcuts for type
[15:37:54] <FromDiscord> <haxscramper> You have `typedef int()(struct soap , struct soap_plugin , void ) SoapPluginCreate `?
[15:38:30] <arkanoid> no, I have to wrap this function: https://www.genivia.com/doc/guide/html/group__group__plugin.html#gad645e5a58ed442fe4753dcc2338c8bdb
[15:39:07] <arkanoid> where the first argument is the ptr object I've been asking you before about reading single attribute, and it is working
[15:39:35] <arkanoid> the second argument is a proc declared in a .h file
[15:39:39] <FromDiscord> <exelotl> In reply to @Varriount "<@!90614688374624256> Congrats on the": Thank you! ^^
[15:40:41] <FromDiscord> <haxscramper> `void soap_register_plugin(soap: ptr soap, fcreate: proc(sa: ptr soap, a2: ptr soap_plugin, a3: pointer): cint {.cdecl.})`
[15:42:23] <arkanoid> haxscramper, thanks. Do you think it is better to declare types as object and declare arguments as "ptr thatobject" or is better to just declare the type "ptr object"
[15:42:48] <arkanoid> I see you went the first path in your example
[15:47:09] <FromDiscord> <haxscramper> I prefer to defined simple `object` type and if it is often used as `ptr T` I just declare `type PT = ptr T`
[15:47:35] <FromDiscord> <haxscramper> `type WaveToken {.apiPtr.} = object` and `type PWaveToken = ptr WaveToken`
[15:49:15] <arkanoid> thanks!
[15:55:53] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[16:02:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[16:03:07] *** Quits: max22- (~maxime@2a01cb0883359800d3733c90e25ea53b.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:08:44] <FromDiscord> <dom96> In reply to @haxscramper ">  > Nim": https://forum.nim-lang.org/t/8377#53999‚Üµ‚ÜµSorry, couldn't help myself
[16:11:00] <arkanoid> not sure if I should add cdecl to all C wrapped function or not. It doesn't change anything if I put it or not
[16:11:07] <arkanoid> I mean, it compiles correctly
[16:12:45] <FromDiscord> <haxscramper> No, C procedures must be wrapped using `{.cdecl.}`
[16:12:59] <FromDiscord> <haxscramper> It might compile and maybe even run correctly
[16:13:28] <FromDiscord> <haxscramper> But regular nim `proc()` is implemented as closure with `struct { void impl; void env; };` roughly speaking
[16:13:51] <FromDiscord> <haxscramper> While `{.cdecl.}` proc is a pointer to proc, no additional data
[16:22:54] <arkanoid> ok, but what if I'm calling a C macro, do I need it?
[16:23:09] <FromDiscord> <whisperdev> What kind of error is this üòê asyncdocker.nim(261, 23) Error: cannot open file: asynchttpclient
[16:23:32] <arkanoid> I'm doing "proc newSoap(): PSoap {.header: soapH, importc: "soap_new".}" but soap_new is a macro that calls a macro that calls a macro and so on
[16:23:39] <arkanoid> the real function name is weird
[16:24:03] <arkanoid> it is working now, without cdecl
[16:25:03] <FromDiscord> <Rika> In reply to @whisperdev "What kind of error": Async versions are already in the httpclient module
[16:25:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c)
[16:26:42] <FromDiscord> <whisperdev> crap...
[16:30:14] <FromDiscord> <haxscramper> arkanoid\: I was talking about callbacks etc.
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:52] <arkanoid> haxscramper, so cdecl is only required when C code needs to call nim proc, and not the other way around?
[16:38:01] <FromDiscord> <whisperdev> Can this easily be fixed? I dont really understand the expected type
[16:38:03] <FromDiscord> <whisperdev> Error: type mismatch: got <proc (chunk: string): Future[system.bool]{.closure, locks: <unknown>.}> but expected 'Callback = proc (fd: AsyncFD): bool{.closure, gcsafe.}'
[16:38:11] <arkanoid> sorry for the noob questions, but I'm not an experienced C programmer and I'm still learning the underlying basics
[16:39:05] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 248 seconds)
[16:39:41] <FromDiscord> <haxscramper> `int()(...)` etc.
[16:39:59] <FromDiscord> <Rika> In reply to @whisperdev "Error: type mismatch: got": the callback you're registering has the wrong parameter and return types
[16:53:54] *** Joins: max22- (~maxime@2a01cb0883359800e683a4712f3de9f5.ipv6.abo.wanadoo.fr)
[17:00:17] <arkanoid> I need an hand to understand why I'm getting gibberish out of "soap->authrealm" while trying to reproduce this simple example in nim: https://www.genivia.com/doc/guide/html/index.html#httpdaplugin
[17:04:41] <arkanoid> this is the current nim code: https://play.nim-lang.org/#ix=3xdf
[17:14:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[17:17:37] *** Joins: arkurious (~arkurious@user/arkurious)
[17:32:56] <FromDiscord> <haxscramper> sent a long message, see https://paste.rs/X6A
[17:44:46] <arkanoid> this is great news! congrats!
[17:45:08] <arkanoid> I'm just puzzled why a combination of different parsers is required
[17:45:18] <arkanoid> aren't them overlapping?
[17:45:40] <FromDiscord> <haxscramper> I'm writing an updated readme, but
[17:45:46] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3xdp
[17:45:53] <FromDiscord> <haxscramper> Basically I'm doing two things
[17:45:59] <FromDiscord> <haxscramper> So I need two parsers
[17:46:42] <FromDiscord> <haxscramper> Or you mean why wave and tree-sitter?
[17:47:11] <arkanoid> yeah, why two
[17:47:28] <arkanoid> I mean, isn't wave building an AST of the C/C++ code too?
[17:47:42] <arkanoid> just curious, consider an ELI5 answer
[17:49:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c)
[17:51:00] <FromDiscord> <haxscramper> No, wave does not build AST of the C++ code, instead it provides an iterator over preprocessed tokens
[17:51:33] <arkanoid> quick question. I'm wrapping a C struct that has attributes that begins with capital letter. How can I wrap it to make nep1 happy?
[17:51:42] <FromDiscord> <haxscramper> C parsing also consists of two parts - preprocessing and actual parsing, so to get the best result without relying on libclang I need to match these two as close as possible
[17:52:14] <FromDiscord> <haxscramper> `> wrapping a C struct that has attributes that begins with capital letter` you can use `fieldName: {.importc: "ActualFieldName".}`
[17:52:39] <arkanoid> haxscramper, got it. So boost wave is like a preprocessor and you feed the result into tree-sitter
[17:52:47] <FromDiscord> <haxscramper> correct
[17:53:10] <FromDiscord> <haxscramper> Other alternative is to use libtooling's preprocessor callbacls, but this would require interfacing with C++ library
[17:53:16] <arkanoid> and libclang would do that all by itself but it's overlycomplicated
[17:53:45] <FromDiscord> <haxscramper> Yes, for average use case it requires too complicated setup
[17:55:10] <arkanoid> hooray! got my little wrapping experiment work!
[17:55:45] <arkanoid> so I got that adding header and importc pragmas on types is required to access their attributes
[17:56:59] <arkanoid> there are still thing not quite clear to me: when to use .pure., when to use .cdecl., what is .link., when .header. is really necessary
[17:58:08] <arkanoid> but it works! If you have any good hint on this wrapping code, I'd be happy to learn and improve https://play.nim-lang.org/#ix=3xdu
[18:06:08] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3xdw
[18:08:03] <FromDiscord> <haxscramper> I just put header all over the place, but arnetheduck for example says that in status they tend to avoid it, because you can just write a proc signature that matches base one, and it will be enoughg
[18:08:58] <FromDiscord> <haxscramper> But really there is almost always an exception to the rules like this, because well C
[18:09:05] <FromDiscord> <haxscramper> And so on
[18:09:45] <FromDiscord> <haxscramper> For example you didn't as about `bycopy`, and IIRC it is almost required for interop, otherwise nim's smart argument passing might get in the way
[18:17:17] <arkanoid> thanks! As you can see from my nim code I'm using .passL. to statically link everything. It works, but if understood what you are saying it would be more convenient to add it as a link pragma to everything
[18:17:20] <arkanoid> am I wrong?
[18:20:49] <FromDiscord> <haxscramper> yes, `.link.` is preferred to `.passl.`
[18:21:00] <FromDiscord> <haxscramper> Both work for linking, but `.link.` is specifically designed for that task
[18:35:26] *** Joins: byanka__ (~byanka@78.137.43.40)
[18:37:22] *** Quits: byanka_ (~byanka@78.137.43.40) (Ping timeout: 250 seconds)
[18:38:19] <arkanoid> so, a "good" binding consists of pragmas: header, importc, link/dynlib. For types (if needed) pure, bycopy. For proc (if needed) cdecl. Avoiding PassL and emit is a good thing
[18:38:35] <arkanoid> I'm just trying to understand the general pattern
[18:45:13] *** Joins: Guest24 (~Guest24@199.168.73.191)
[18:49:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[18:56:52] <FromDiscord> <haxscramper> Yes, that basically main pattern
[18:57:28] <FromDiscord> <haxscramper> nim-lang org on GitHub has some wrappers, you can look I to them as well, just to get an idea of what is being used
[19:00:57] <arkanoid> do you mean the source code of the website?
[19:02:10] *** Quits: Guest24 (~Guest24@199.168.73.191) (Quit: Client closed)
[19:05:15] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:06:18] *** Joins: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de)
[19:08:21] <FromDiscord> <haxscramper> I mean GitHub organization
[19:09:09] <FromDiscord> <haxscramper> https://github.com/nim-lang/opengl  https://github.com/nim-lang/x11 etc
[19:09:49] <FromDiscord> <Saurav Niroula> i found isPrime function and i am able to calculate prime number below certain number. But i cant figure out how to calculate nth prime number. I am new to programming and bit confused. i found python style code but it doesnt work for nim. can any one provide suggestion plz.üòä
[19:10:00] <FromDiscord> <haxscramper> tlc wrapper, lua wrapper
[19:16:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c)
[19:27:23] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[19:30:44] <arkanoid> k!
[20:07:13] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:07:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[20:08:25] *** Joins: flynn (~mcbloch@user/flynn)
[20:15:41] <FromDiscord> <ericdp> In reply to @Saurav Niroula "i found isPrime function": have you figured out how the example code works ? If so, what is it doing you can't translate to nim ?
[20:31:40] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[20:52:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:dd3f:cf6b:3c24:cb0c)
[20:53:47] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:54:55] *** Joins: flynn (~mcbloch@user/flynn)
[21:09:51] <NimEventer> New post on r/nim by thelolrus: [Livestream] Coding a template language in Nim | Jambone episode 3, see https://reddit.com/r/nim/comments/pdd50a/livestream_coding_a_template_language_in_nim/
[21:22:56] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[21:48:33] <FromDiscord> <reilly> Would it be a bad idea to make something both multithreaded and asynchronous at the same time?
[21:55:02] <FromDiscord> <fae> Like with everything, depends on what you‚Äôre trying to do lol. If you‚Äôre doing heavy IO you probably want async. If you are also doing heavy computations that can be run in another thread and the complexity of doing so actually gets you performance benefits, then sure why not.
[21:59:53] *** Joins: beshr (~beshr@user/beshr)
[22:49:53] *** Quits: andinus (andinus@tilde.institute) (Remote host closed the connection)
[22:50:33] *** Joins: andinus (andinus@tilde.institute)
[22:51:25] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[22:55:17] <FromDiscord> <treeform> In reply to @reilly "Would it be a": Sound like double the pain for a little gain...
[22:55:39] <FromDiscord> <Yardanico> xd
[22:57:19] *** Quits: lain (~lain@172.16.254.xxx) (Quit: kthxbai)
[22:58:03] *** Joins: lain (~lain@172.16.254.xxx)
[23:14:32] <FromDiscord> <Yardanico> https://twitter.com/reduzio/status/1431257697622573056
[23:43:42] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
